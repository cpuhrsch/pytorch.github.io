Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "export", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/onnx_diagnostics_rules/FXE0007:fx-graph-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dim_order", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.DiagnosticOptions", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.OnnxExporterError", "generated/torch.onnx.OnnxRegistry", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_deepdive", "torch.compiler_dynamic_shapes", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_guards_overview", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "torch_cuda_memory", "type_info", "utils"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/onnx_diagnostics_rules/FXE0007:fx-graph-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference.md", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dim_order.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.DiagnosticOptions.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.OnnxExporterError.rst", "generated/torch.onnx.OnnxRegistry.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_deepdive.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_guards_overview.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "torch_cuda_memory.rst", "type_info.rst", "utils.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.export", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "torch.cond", "torch.dynamic-shape", "torch.escape-hatch", "torch.map", "FXE0007:fx-graph-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "POE0001:node-missing-onnx-shape-inference", "POE0002:missing-custom-symbolic-function", "POE0003:missing-standard-symbolic-function", "POE0004:operator-supported-in-newer-opset-version", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dim_order", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "DiagnosticOptions", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "OnnxExporterError", "OnnxRegistry", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deep Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "Guards Overview", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Understanding CUDA Memory Usage", "Type Info", "torch.utils"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 13, 14, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 38, 40, 41, 42, 43, 44, 46, 50, 53, 54, 141, 592, 669, 678, 724, 727, 728, 729, 734, 735, 737, 745, 746, 749, 753, 777, 778, 788, 789, 803, 813, 830, 847, 882, 891, 893, 894, 895, 920, 925, 928, 933, 934, 946, 959, 978, 1024, 1067, 1087, 1123, 1135, 1147, 1155, 1156, 1191, 1194, 1200, 1201, 1205, 1207, 1209, 1224, 1241, 1266, 1298, 1358, 1359, 1360, 1363, 1379, 1380, 1388, 1393, 1397, 1398, 1423, 1424, 1425, 1427, 1433, 1434, 1437, 1442, 1444, 1455, 1470, 1471, 1472, 1473, 1474, 1498, 1499, 1576, 1607, 1621, 1641, 1649, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1697, 1700, 1705, 1741, 1751, 1798, 1799, 1800, 1801, 1802, 1803, 1841, 1843, 1852, 1862, 1869, 1871, 1873, 1874, 1878, 1880, 1881, 1882, 1884, 1886, 1887, 1888, 1897, 1898, 1899, 1900, 1902, 1905, 1906, 1908, 1912, 1915, 1916, 1917, 1919, 1920, 1922, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1955, 1956, 1957, 1959, 1960], "conveni": [0, 3, 7, 13, 37, 40, 41, 46, 52, 1135, 1251, 1598, 1759, 1852, 1854, 1862, 1869, 1873, 1878, 1893, 1894, 1897, 1899, 1904, 1905, 1916, 1923, 1942, 1944, 1945, 1950, 1951], "method": [0, 3, 7, 9, 13, 14, 17, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 38, 40, 44, 46, 53, 54, 55, 57, 62, 63, 67, 212, 213, 314, 476, 477, 486, 487, 488, 509, 603, 782, 786, 788, 804, 805, 806, 827, 830, 843, 863, 864, 865, 882, 886, 887, 888, 889, 902, 903, 1004, 1118, 1147, 1192, 1194, 1195, 1197, 1198, 1199, 1204, 1205, 1209, 1210, 1211, 1239, 1257, 1258, 1265, 1266, 1324, 1327, 1335, 1343, 1370, 1427, 1428, 1429, 1437, 1438, 1455, 1526, 1598, 1607, 1615, 1616, 1619, 1621, 1623, 1626, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1643, 1648, 1662, 1663, 1670, 1671, 1672, 1674, 1684, 1716, 1797, 1812, 1816, 1852, 1869, 1870, 1871, 1874, 1875, 1882, 1884, 1886, 1887, 1888, 1892, 1893, 1894, 1897, 1899, 1900, 1901, 1902, 1905, 1907, 1910, 1913, 1915, 1916, 1919, 1921, 1924, 1926, 1930, 1931, 1933, 1934, 1936, 1939, 1943, 1944, 1950, 1955, 1957, 1958], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 13, 14, 20, 21, 23, 27, 28, 29, 31, 33, 40, 41, 42, 43, 46, 48, 49, 51, 54, 73, 144, 214, 245, 391, 393, 476, 669, 682, 684, 685, 688, 724, 747, 749, 770, 809, 810, 822, 866, 885, 890, 892, 905, 910, 919, 925, 932, 933, 934, 941, 955, 959, 971, 973, 982, 984, 1046, 1047, 1050, 1054, 1072, 1083, 1084, 1086, 1089, 1090, 1092, 1093, 1095, 1096, 1097, 1099, 1100, 1102, 1104, 1128, 1129, 1130, 1134, 1135, 1138, 1150, 1151, 1152, 1153, 1183, 1184, 1186, 1187, 1190, 1191, 1192, 1195, 1207, 1213, 1214, 1215, 1218, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1263, 1265, 1266, 1271, 1274, 1281, 1282, 1283, 1284, 1288, 1291, 1293, 1294, 1295, 1296, 1299, 1317, 1322, 1323, 1325, 1328, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1497, 1499, 1509, 1510, 1517, 1522, 1524, 1525, 1543, 1544, 1561, 1563, 1564, 1567, 1568, 1570, 1576, 1579, 1607, 1609, 1610, 1614, 1641, 1642, 1643, 1644, 1653, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1691, 1703, 1713, 1715, 1716, 1736, 1737, 1773, 1779, 1780, 1785, 1789, 1793, 1794, 1795, 1798, 1799, 1800, 1801, 1802, 1803, 1810, 1811, 1812, 1815, 1816, 1830, 1839, 1840, 1841, 1842, 1843, 1848, 1849, 1857, 1858, 1859, 1860, 1861, 1862, 1871, 1872, 1874, 1875, 1880, 1881, 1883, 1886, 1889, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1905, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1924, 1926, 1928, 1929, 1931, 1933, 1938, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1955, 1957, 1958, 1959], "some": [0, 1, 3, 7, 8, 9, 13, 19, 20, 21, 23, 25, 28, 29, 31, 33, 41, 42, 44, 46, 49, 51, 52, 53, 54, 72, 74, 467, 485, 556, 678, 737, 941, 1020, 1024, 1027, 1067, 1088, 1090, 1098, 1099, 1100, 1115, 1124, 1135, 1169, 1191, 1192, 1194, 1195, 1204, 1207, 1209, 1239, 1257, 1263, 1288, 1295, 1298, 1335, 1339, 1343, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1387, 1390, 1391, 1392, 1393, 1394, 1397, 1418, 1419, 1427, 1430, 1431, 1432, 1434, 1441, 1442, 1458, 1459, 1475, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1538, 1543, 1561, 1564, 1569, 1576, 1598, 1607, 1608, 1609, 1610, 1614, 1647, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1715, 1735, 1759, 1766, 1780, 1816, 1854, 1862, 1869, 1871, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1886, 1887, 1888, 1893, 1894, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1928, 1933, 1939, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1957], "oper": [0, 2, 4, 5, 7, 8, 11, 14, 17, 20, 25, 29, 30, 37, 38, 40, 41, 44, 47, 52, 53, 54, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 245, 304, 312, 326, 343, 393, 435, 436, 437, 438, 439, 482, 485, 488, 502, 504, 506, 578, 669, 675, 678, 730, 731, 732, 736, 737, 746, 747, 757, 758, 768, 774, 781, 782, 784, 785, 788, 812, 815, 848, 850, 851, 854, 878, 880, 886, 888, 909, 910, 912, 914, 917, 919, 921, 923, 928, 931, 934, 938, 941, 948, 953, 971, 973, 1001, 1010, 1041, 1046, 1047, 1048, 1049, 1062, 1067, 1068, 1069, 1070, 1080, 1085, 1103, 1115, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1135, 1142, 1145, 1151, 1152, 1169, 1194, 1204, 1205, 1209, 1210, 1213, 1223, 1236, 1246, 1249, 1250, 1263, 1264, 1273, 1280, 1288, 1293, 1298, 1308, 1309, 1322, 1325, 1339, 1344, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1384, 1385, 1386, 1387, 1389, 1394, 1413, 1418, 1423, 1424, 1425, 1427, 1440, 1445, 1446, 1447, 1454, 1469, 1470, 1472, 1474, 1478, 1494, 1495, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1511, 1512, 1513, 1514, 1518, 1519, 1521, 1522, 1526, 1530, 1537, 1543, 1545, 1551, 1552, 1562, 1564, 1568, 1576, 1582, 1583, 1594, 1595, 1596, 1597, 1607, 1609, 1610, 1643, 1649, 1654, 1658, 1659, 1666, 1683, 1689, 1699, 1703, 1712, 1713, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1735, 1741, 1758, 1759, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1792, 1793, 1794, 1795, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1815, 1830, 1851, 1852, 1854, 1862, 1865, 1867, 1868, 1870, 1871, 1875, 1878, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1905, 1906, 1907, 1908, 1909, 1913, 1915, 1918, 1920, 1922, 1923, 1924, 1925, 1929, 1931, 1932, 1935, 1942, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1956, 1957], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 18, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 52, 53, 55, 57, 62, 63, 69, 70, 71, 73, 79, 88, 110, 141, 145, 182, 199, 310, 312, 326, 333, 334, 397, 425, 438, 448, 476, 477, 485, 488, 502, 506, 509, 533, 546, 572, 573, 574, 576, 577, 606, 669, 675, 678, 701, 702, 703, 704, 705, 706, 709, 718, 719, 720, 721, 722, 724, 737, 746, 749, 757, 758, 761, 762, 763, 768, 770, 774, 775, 776, 779, 782, 783, 784, 785, 788, 791, 796, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 820, 821, 822, 823, 826, 843, 847, 848, 850, 851, 854, 867, 868, 869, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 893, 896, 897, 898, 902, 903, 906, 909, 910, 911, 919, 921, 922, 929, 931, 933, 941, 944, 948, 952, 955, 957, 967, 968, 969, 970, 971, 973, 975, 976, 978, 981, 991, 992, 995, 996, 1002, 1006, 1010, 1012, 1013, 1014, 1016, 1018, 1019, 1024, 1025, 1034, 1036, 1037, 1043, 1048, 1049, 1050, 1059, 1067, 1068, 1069, 1070, 1080, 1081, 1082, 1085, 1087, 1095, 1097, 1101, 1103, 1110, 1112, 1115, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1139, 1140, 1144, 1145, 1147, 1151, 1152, 1153, 1154, 1168, 1169, 1181, 1191, 1192, 1194, 1195, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1213, 1215, 1217, 1225, 1229, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1248, 1250, 1251, 1257, 1258, 1259, 1263, 1264, 1265, 1266, 1271, 1274, 1280, 1283, 1284, 1287, 1288, 1293, 1294, 1295, 1298, 1304, 1305, 1317, 1322, 1324, 1325, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1413, 1414, 1415, 1420, 1421, 1422, 1423, 1424, 1427, 1429, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1460, 1463, 1466, 1474, 1475, 1476, 1477, 1479, 1482, 1483, 1484, 1491, 1493, 1494, 1495, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1526, 1528, 1535, 1537, 1538, 1545, 1550, 1551, 1552, 1562, 1564, 1570, 1576, 1580, 1582, 1583, 1591, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1641, 1642, 1643, 1647, 1648, 1649, 1651, 1652, 1654, 1655, 1658, 1662, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1695, 1697, 1698, 1700, 1701, 1703, 1713, 1715, 1716, 1717, 1720, 1721, 1722, 1724, 1726, 1728, 1730, 1731, 1737, 1744, 1747, 1752, 1753, 1755, 1756, 1757, 1759, 1761, 1762, 1763, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1789, 1791, 1792, 1794, 1795, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1815, 1816, 1817, 1830, 1834, 1837, 1841, 1843, 1848, 1850, 1851, 1852, 1854, 1859, 1862, 1867, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1878, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1896, 1898, 1900, 1901, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1913, 1918, 1920, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1950, 1951, 1952, 1953, 1954, 1956, 1958], "float": [0, 1, 3, 11, 20, 21, 23, 27, 29, 31, 34, 42, 44, 46, 54, 144, 145, 210, 304, 306, 308, 312, 324, 391, 465, 471, 488, 502, 674, 676, 681, 683, 687, 721, 724, 727, 728, 729, 733, 734, 735, 737, 744, 745, 750, 751, 752, 753, 754, 759, 760, 761, 762, 763, 764, 766, 768, 769, 770, 774, 781, 782, 783, 788, 806, 808, 819, 827, 828, 841, 846, 847, 850, 851, 854, 869, 897, 898, 910, 911, 919, 926, 929, 933, 949, 954, 955, 959, 967, 1037, 1050, 1061, 1062, 1068, 1069, 1070, 1072, 1085, 1103, 1112, 1113, 1114, 1115, 1117, 1138, 1141, 1150, 1151, 1152, 1155, 1156, 1176, 1183, 1184, 1186, 1187, 1188, 1189, 1192, 1194, 1209, 1210, 1213, 1217, 1219, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1271, 1280, 1282, 1284, 1312, 1316, 1317, 1321, 1323, 1324, 1325, 1328, 1331, 1335, 1339, 1345, 1346, 1347, 1349, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1375, 1376, 1381, 1382, 1383, 1386, 1387, 1388, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1413, 1415, 1419, 1427, 1432, 1433, 1435, 1436, 1441, 1445, 1448, 1449, 1450, 1451, 1452, 1458, 1464, 1466, 1469, 1470, 1472, 1474, 1475, 1476, 1479, 1480, 1481, 1508, 1509, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1528, 1537, 1562, 1569, 1576, 1595, 1607, 1611, 1612, 1615, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1643, 1644, 1648, 1654, 1655, 1662, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1697, 1699, 1701, 1703, 1709, 1712, 1716, 1717, 1718, 1719, 1731, 1735, 1736, 1756, 1757, 1760, 1764, 1773, 1774, 1776, 1777, 1779, 1813, 1816, 1820, 1837, 1839, 1851, 1871, 1872, 1873, 1874, 1875, 1881, 1884, 1886, 1887, 1889, 1890, 1892, 1893, 1897, 1899, 1901, 1905, 1908, 1912, 1914, 1916, 1918, 1919, 1920, 1924, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1945, 1949, 1952, 1956, 1960], "datatyp": [0, 54, 869, 1191, 1194, 1427, 1609, 1610, 1759, 1908, 1912, 1928], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 17, 20, 21, 24, 27, 28, 29, 30, 31, 33, 37, 38, 40, 41, 46, 47, 49, 51, 52, 53, 54, 88, 89, 104, 120, 121, 124, 136, 137, 140, 141, 150, 151, 156, 157, 187, 188, 189, 198, 225, 230, 234, 235, 236, 246, 265, 266, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 294, 295, 298, 299, 300, 301, 304, 306, 312, 315, 335, 343, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 369, 370, 385, 386, 399, 403, 428, 429, 440, 441, 445, 446, 477, 487, 509, 550, 551, 552, 553, 569, 572, 605, 606, 607, 610, 611, 669, 674, 683, 727, 728, 729, 730, 731, 732, 749, 803, 815, 850, 854, 860, 867, 868, 873, 879, 882, 883, 896, 897, 898, 902, 903, 913, 914, 916, 917, 918, 920, 925, 941, 954, 967, 968, 971, 973, 975, 982, 992, 1013, 1055, 1061, 1062, 1063, 1064, 1071, 1072, 1073, 1087, 1094, 1112, 1113, 1114, 1115, 1118, 1124, 1125, 1126, 1127, 1130, 1134, 1136, 1137, 1138, 1148, 1149, 1150, 1159, 1160, 1162, 1163, 1168, 1169, 1171, 1183, 1192, 1194, 1198, 1205, 1214, 1216, 1217, 1218, 1220, 1221, 1226, 1230, 1244, 1246, 1249, 1250, 1263, 1271, 1272, 1273, 1275, 1277, 1278, 1281, 1282, 1288, 1291, 1292, 1296, 1297, 1301, 1304, 1316, 1318, 1328, 1331, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1364, 1374, 1379, 1381, 1393, 1427, 1428, 1437, 1455, 1470, 1474, 1478, 1501, 1502, 1503, 1528, 1537, 1576, 1595, 1598, 1607, 1611, 1612, 1630, 1652, 1656, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1694, 1695, 1701, 1703, 1731, 1735, 1751, 1756, 1759, 1761, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1813, 1814, 1830, 1836, 1840, 1842, 1859, 1860, 1865, 1866, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1882, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1912, 1915, 1919, 1920, 1924, 1925, 1926, 1929, 1933, 1934, 1935, 1942, 1944, 1945, 1947, 1948, 1950, 1952, 1955, 1956, 1957, 1958], "lower": [0, 1, 8, 21, 23, 29, 44, 782, 784, 848, 920, 925, 932, 933, 934, 936, 1081, 1082, 1154, 1155, 1223, 1230, 1232, 1240, 1241, 1248, 1251, 1256, 1294, 1317, 1324, 1335, 1445, 1501, 1502, 1503, 1574, 1575, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1699, 1714, 1716, 1736, 1751, 1759, 1796, 1839, 1840, 1841, 1871, 1872, 1874, 1890, 1892, 1894, 1905, 1910, 1914, 1919, 1929, 1935, 1952, 1957], "point": [0, 1, 7, 8, 9, 11, 20, 21, 24, 27, 31, 37, 40, 41, 46, 54, 79, 144, 145, 312, 324, 330, 471, 488, 687, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750, 751, 752, 753, 754, 764, 766, 768, 769, 770, 774, 784, 788, 808, 809, 810, 811, 814, 819, 841, 850, 851, 854, 869, 891, 893, 894, 895, 897, 898, 910, 911, 919, 941, 954, 955, 959, 1016, 1018, 1027, 1031, 1032, 1068, 1069, 1070, 1113, 1114, 1115, 1141, 1147, 1151, 1152, 1156, 1176, 1191, 1194, 1209, 1210, 1217, 1219, 1240, 1241, 1264, 1266, 1271, 1280, 1324, 1331, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1420, 1421, 1422, 1427, 1478, 1479, 1491, 1517, 1526, 1537, 1576, 1595, 1607, 1654, 1669, 1700, 1716, 1717, 1718, 1722, 1731, 1744, 1756, 1757, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1851, 1852, 1870, 1871, 1873, 1874, 1875, 1878, 1884, 1890, 1892, 1893, 1894, 1897, 1898, 1902, 1905, 1908, 1917, 1918, 1919, 1920, 1922, 1924, 1925, 1928, 1931, 1933, 1934, 1935, 1937, 1943, 1944, 1947, 1949, 1950, 1953, 1956, 1959, 1960], "lower_precision_fp": 0, "half": [0, 1, 10, 21, 29, 606, 949, 1081, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1194, 1256, 1262, 1355, 1356, 1357, 1358, 1359, 1360, 1375, 1376, 1378, 1427, 1521, 1522, 1525, 1664, 1666, 1691, 1744, 1812, 1887, 1905, 1908, 1928, 1930, 1931, 1934], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 20, 21, 23, 28, 29, 38, 40, 41, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 327, 578, 606, 749, 782, 830, 849, 867, 888, 897, 898, 910, 919, 943, 948, 1010, 1011, 1020, 1062, 1067, 1068, 1088, 1110, 1113, 1114, 1120, 1124, 1127, 1128, 1129, 1135, 1151, 1152, 1192, 1194, 1195, 1201, 1204, 1209, 1213, 1240, 1241, 1252, 1265, 1335, 1343, 1371, 1374, 1390, 1391, 1392, 1427, 1428, 1429, 1437, 1438, 1455, 1478, 1520, 1538, 1594, 1598, 1607, 1608, 1609, 1610, 1615, 1640, 1658, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1709, 1724, 1728, 1747, 1756, 1759, 1816, 1827, 1852, 1862, 1867, 1869, 1870, 1871, 1873, 1874, 1881, 1886, 1887, 1888, 1893, 1894, 1897, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1915, 1917, 1918, 1919, 1922, 1924, 1925, 1928, 1930, 1931, 1935, 1936, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959], "linear": [0, 2, 9, 21, 23, 24, 27, 29, 46, 48, 50, 52, 54, 55, 421, 462, 463, 464, 465, 466, 469, 700, 709, 717, 718, 754, 781, 782, 783, 785, 803, 843, 847, 848, 850, 851, 892, 934, 973, 1067, 1123, 1125, 1133, 1135, 1147, 1194, 1198, 1205, 1219, 1225, 1230, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1254, 1256, 1284, 1324, 1343, 1349, 1369, 1377, 1378, 1386, 1412, 1427, 1429, 1442, 1444, 1446, 1454, 1456, 1463, 1466, 1470, 1472, 1474, 1477, 1479, 1515, 1524, 1525, 1537, 1571, 1579, 1584, 1595, 1598, 1607, 1614, 1615, 1619, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1647, 1648, 1651, 1663, 1694, 1697, 1705, 1716, 1851, 1862, 1870, 1872, 1873, 1879, 1882, 1889, 1892, 1897, 1898, 1899, 1901, 1905, 1910, 1912, 1914, 1915, 1917, 1919, 1920, 1921, 1922, 1924, 1955, 1957], "layer": [0, 8, 21, 23, 25, 27, 28, 46, 49, 723, 724, 749, 830, 847, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1366, 1367, 1368, 1372, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1412, 1414, 1420, 1421, 1422, 1433, 1434, 1442, 1444, 1455, 1466, 1470, 1471, 1472, 1473, 1474, 1540, 1607, 1614, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1870, 1892, 1897, 1899, 1901, 1904, 1905, 1910, 1912, 1915, 1917, 1919, 1920, 1922, 1928, 1938], "convolut": [0, 1, 2, 727, 728, 729, 730, 731, 732, 761, 762, 763, 941, 1203, 1355, 1356, 1357, 1358, 1359, 1360, 1366, 1367, 1368, 1372, 1403, 1404, 1405, 1406, 1407, 1408, 1439, 1440, 1445, 1475, 1476, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1525, 1526, 1759, 1870, 1872, 1882, 1892, 1896, 1897, 1902, 1905, 1914, 1918, 1919, 1922, 1952], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 63, 68, 69, 71, 72, 73, 74, 79, 88, 141, 224, 245, 310, 312, 326, 327, 330, 368, 393, 438, 461, 471, 476, 488, 502, 506, 533, 569, 578, 606, 669, 678, 679, 680, 686, 724, 745, 749, 750, 752, 753, 754, 768, 771, 772, 774, 775, 776, 781, 782, 783, 784, 785, 788, 803, 804, 805, 806, 808, 809, 810, 811, 814, 829, 843, 847, 848, 849, 850, 851, 854, 863, 864, 875, 876, 877, 879, 882, 888, 890, 891, 892, 893, 894, 895, 897, 898, 910, 919, 920, 922, 923, 925, 928, 934, 941, 949, 954, 955, 958, 959, 969, 970, 971, 973, 974, 976, 981, 993, 1004, 1010, 1013, 1014, 1024, 1034, 1041, 1050, 1055, 1059, 1062, 1067, 1068, 1069, 1070, 1083, 1084, 1085, 1086, 1088, 1090, 1095, 1097, 1103, 1106, 1108, 1109, 1113, 1114, 1115, 1123, 1124, 1129, 1131, 1133, 1134, 1135, 1139, 1147, 1151, 1152, 1154, 1156, 1169, 1171, 1183, 1184, 1186, 1187, 1190, 1191, 1192, 1194, 1195, 1198, 1200, 1201, 1204, 1207, 1209, 1210, 1215, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1260, 1263, 1264, 1265, 1266, 1275, 1276, 1277, 1278, 1280, 1281, 1283, 1285, 1286, 1288, 1291, 1294, 1295, 1296, 1299, 1301, 1305, 1317, 1321, 1322, 1323, 1324, 1325, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1374, 1379, 1380, 1381, 1382, 1387, 1390, 1391, 1392, 1393, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1442, 1444, 1455, 1458, 1459, 1460, 1466, 1470, 1472, 1474, 1475, 1476, 1478, 1479, 1491, 1497, 1498, 1499, 1509, 1510, 1517, 1518, 1519, 1520, 1526, 1537, 1538, 1561, 1564, 1566, 1569, 1576, 1594, 1595, 1596, 1597, 1598, 1603, 1604, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1619, 1626, 1640, 1644, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1662, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1693, 1696, 1697, 1709, 1715, 1716, 1722, 1731, 1734, 1735, 1742, 1744, 1755, 1756, 1759, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1808, 1811, 1812, 1815, 1816, 1825, 1827, 1831, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1851, 1852, 1854, 1856, 1857, 1858, 1862, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1880, 1881, 1882, 1884, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960], "much": [0, 4, 7, 9, 14, 20, 21, 141, 882, 891, 896, 1024, 1229, 1230, 1257, 1266, 1371, 1607, 1630, 1697, 1871, 1894, 1897, 1902, 1905, 1910, 1916, 1917, 1924, 1925, 1928, 1945, 1947, 1950], "faster": [0, 2, 8, 11, 20, 21, 23, 891, 897, 898, 1123, 1223, 1224, 1229, 1230, 1234, 1239, 1247, 1249, 1251, 1254, 1257, 1259, 1263, 1266, 1443, 1460, 1566, 1582, 1607, 1611, 1612, 1614, 1672, 1673, 1684, 1759, 1798, 1799, 1800, 1802, 1803, 1882, 1894, 1897, 1902, 1915, 1919, 1928, 1933, 1939, 1944, 1947, 1953], "reduct": [0, 2, 23, 46, 312, 502, 506, 941, 1239, 1271, 1324, 1343, 1344, 1350, 1361, 1363, 1371, 1381, 1387, 1388, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1476, 1498, 1499, 1507, 1509, 1510, 1518, 1523, 1534, 1535, 1538, 1539, 1549, 1557, 1558, 1559, 1560, 1561, 1569, 1580, 1581, 1592, 1593, 1607, 1716, 1793, 1872, 1887, 1898, 1902, 1916, 1919, 1951, 1957], "often": [0, 2, 4, 7, 8, 13, 20, 23, 29, 41, 46, 49, 54, 141, 882, 896, 1209, 1240, 1241, 1250, 1299, 1370, 1390, 1391, 1392, 1491, 1499, 1517, 1526, 1598, 1614, 1662, 1699, 1874, 1894, 1897, 1901, 1904, 1905, 1907, 1908, 1909, 1916, 1924, 1933, 1946, 1947, 1955, 1957], "requir": [0, 1, 5, 8, 9, 13, 14, 20, 21, 23, 24, 25, 27, 29, 31, 39, 40, 44, 46, 49, 51, 53, 54, 110, 141, 212, 326, 448, 485, 502, 504, 506, 549, 782, 784, 812, 815, 869, 878, 882, 887, 890, 891, 892, 893, 894, 895, 896, 941, 967, 968, 1023, 1067, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1108, 1109, 1135, 1136, 1207, 1233, 1264, 1266, 1280, 1363, 1370, 1371, 1470, 1471, 1472, 1473, 1474, 1476, 1518, 1576, 1598, 1607, 1608, 1617, 1619, 1621, 1662, 1663, 1675, 1685, 1703, 1800, 1812, 1851, 1862, 1869, 1871, 1874, 1876, 1881, 1882, 1886, 1888, 1889, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1907, 1910, 1912, 1916, 1917, 1919, 1920, 1924, 1925, 1926, 1928, 1933, 1935, 1938, 1939, 1942, 1943, 1944, 1946, 1947, 1953, 1955, 1958], "dynam": [0, 13, 14, 20, 44, 55, 56, 57, 60, 61, 62, 65, 669, 718, 722, 749, 750, 751, 752, 753, 754, 783, 804, 815, 818, 833, 839, 840, 841, 842, 847, 848, 941, 969, 1201, 1207, 1209, 1265, 1614, 1873, 1874, 1875, 1892, 1897, 1905, 1908, 1912, 1915, 1916, 1920, 1939, 1944, 1947, 1954, 1957], "rang": [0, 1, 3, 20, 23, 24, 27, 29, 40, 41, 43, 44, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 292, 471, 673, 750, 752, 754, 784, 808, 809, 810, 811, 812, 814, 815, 816, 874, 911, 936, 1028, 1029, 1037, 1067, 1117, 1133, 1154, 1155, 1156, 1260, 1271, 1286, 1295, 1312, 1324, 1335, 1363, 1373, 1375, 1376, 1380, 1386, 1398, 1417, 1429, 1434, 1438, 1444, 1460, 1461, 1462, 1466, 1521, 1522, 1526, 1582, 1607, 1612, 1687, 1688, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1716, 1795, 1850, 1871, 1872, 1874, 1894, 1896, 1897, 1901, 1905, 1907, 1908, 1912, 1914, 1915, 1918, 1919, 1922, 1923, 1929, 1931, 1933, 1934, 1935, 1936, 1943, 1944, 1945, 1950, 1955, 1957], "tri": [0, 2, 3, 7, 20, 29, 33, 54, 74, 569, 1194, 1427, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1873, 1874, 1886, 1897, 1901, 1912, 1916, 1946, 1947, 1949], "match": [0, 1, 3, 23, 25, 27, 29, 40, 44, 46, 54, 55, 62, 63, 71, 141, 304, 306, 312, 463, 464, 488, 489, 569, 572, 682, 688, 768, 782, 783, 784, 843, 867, 882, 896, 897, 898, 967, 970, 982, 983, 984, 1013, 1059, 1067, 1123, 1135, 1171, 1194, 1207, 1209, 1226, 1265, 1287, 1362, 1371, 1427, 1433, 1479, 1498, 1499, 1537, 1563, 1570, 1576, 1595, 1607, 1619, 1649, 1655, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1717, 1751, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1832, 1862, 1871, 1874, 1881, 1887, 1889, 1894, 1895, 1897, 1899, 1905, 1910, 1912, 1913, 1915, 1916, 1917, 1919, 1920, 1921, 1924, 1931, 1935, 1937, 1947, 1950, 1956], "each": [0, 1, 2, 5, 9, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 38, 41, 42, 43, 46, 47, 49, 51, 52, 54, 67, 68, 70, 73, 88, 110, 144, 145, 389, 393, 482, 502, 504, 506, 534, 596, 606, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 675, 682, 684, 685, 688, 724, 749, 781, 829, 830, 848, 850, 851, 854, 866, 875, 876, 877, 878, 880, 881, 882, 887, 896, 909, 912, 921, 925, 929, 930, 932, 935, 939, 941, 943, 959, 979, 980, 984, 1013, 1016, 1018, 1024, 1026, 1030, 1033, 1039, 1044, 1045, 1046, 1047, 1050, 1051, 1062, 1065, 1067, 1084, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1108, 1109, 1111, 1116, 1120, 1125, 1126, 1130, 1134, 1135, 1136, 1147, 1153, 1155, 1156, 1157, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1194, 1209, 1210, 1215, 1247, 1265, 1266, 1281, 1283, 1291, 1293, 1294, 1295, 1296, 1299, 1301, 1308, 1309, 1317, 1323, 1325, 1335, 1340, 1343, 1344, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1379, 1380, 1382, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1407, 1408, 1412, 1414, 1418, 1419, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1444, 1455, 1458, 1459, 1461, 1466, 1469, 1475, 1476, 1478, 1496, 1498, 1499, 1504, 1505, 1506, 1509, 1510, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1526, 1536, 1538, 1561, 1562, 1564, 1566, 1569, 1576, 1589, 1598, 1603, 1604, 1607, 1640, 1641, 1643, 1653, 1654, 1655, 1662, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1708, 1712, 1713, 1716, 1723, 1731, 1736, 1737, 1742, 1746, 1751, 1759, 1764, 1775, 1781, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1815, 1816, 1831, 1833, 1834, 1837, 1848, 1849, 1856, 1862, 1863, 1869, 1873, 1874, 1880, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1915, 1917, 1918, 1919, 1924, 1925, 1926, 1928, 1929, 1931, 1933, 1934, 1935, 1937, 1938, 1939, 1941, 1942, 1944, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1959], "its": [0, 1, 4, 5, 7, 8, 9, 13, 14, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 40, 41, 42, 44, 46, 53, 54, 55, 57, 68, 69, 70, 141, 448, 477, 493, 502, 504, 506, 572, 573, 574, 606, 669, 812, 815, 863, 864, 865, 867, 868, 869, 882, 885, 897, 902, 903, 933, 934, 948, 949, 955, 959, 974, 1002, 1004, 1013, 1050, 1054, 1057, 1067, 1070, 1115, 1120, 1124, 1125, 1126, 1129, 1134, 1155, 1156, 1160, 1174, 1194, 1204, 1229, 1230, 1234, 1239, 1246, 1248, 1251, 1252, 1257, 1263, 1288, 1315, 1343, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1390, 1391, 1392, 1427, 1428, 1437, 1458, 1466, 1474, 1526, 1537, 1564, 1570, 1598, 1603, 1604, 1608, 1609, 1610, 1615, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1641, 1647, 1651, 1655, 1667, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1706, 1731, 1735, 1739, 1740, 1756, 1757, 1761, 1781, 1817, 1836, 1837, 1839, 1847, 1860, 1871, 1873, 1874, 1878, 1882, 1884, 1886, 1893, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1905, 1907, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1924, 1925, 1926, 1928, 1931, 1932, 1934, 1937, 1938, 1939, 1942, 1944, 1945, 1946, 1947, 1950, 1951, 1953, 1959], "appropri": [0, 7, 8, 9, 23, 24, 29, 46, 53, 54, 883, 1013, 1209, 1666, 1759, 1874, 1875, 1878, 1888, 1897, 1902, 1907, 1910, 1917, 1919, 1922, 1924, 1925, 1926, 1930, 1947, 1950, 1953, 1958], "ordinarili": [0, 1893], "train": [0, 1, 14, 20, 21, 23, 24, 26, 27, 31, 38, 39, 40, 41, 46, 49, 50, 54, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 788, 790, 827, 828, 844, 845, 846, 848, 850, 851, 852, 1012, 1013, 1016, 1018, 1025, 1133, 1169, 1194, 1199, 1205, 1208, 1209, 1335, 1339, 1345, 1346, 1347, 1363, 1364, 1365, 1370, 1371, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1433, 1434, 1445, 1466, 1474, 1492, 1496, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1574, 1575, 1576, 1607, 1615, 1617, 1619, 1648, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1869, 1871, 1872, 1882, 1884, 1892, 1894, 1897, 1898, 1901, 1906, 1908, 1910, 1912, 1915, 1916, 1917, 1918, 1922, 1924, 1926, 1933, 1939, 1941, 1942, 1943, 1944, 1949, 1951, 1952, 1954, 1957], "gradscal": [0, 1893, 1897], "togeth": [0, 3, 9, 20, 23, 28, 29, 47, 52, 54, 749, 1010, 1067, 1123, 1125, 1129, 1133, 1134, 1139, 1233, 1379, 1397, 1442, 1537, 1607, 1611, 1837, 1882, 1893, 1899, 1900, 1901, 1904, 1905, 1919, 1924, 1925, 1926, 1928, 1933, 1943, 1946, 1947, 1953], "shown": [0, 21, 32, 41, 1010, 1020, 1399, 1619, 1667, 1697, 1764, 1871, 1874, 1893, 1897, 1899, 1901, 1905, 1917, 1919, 1928, 1943, 1948], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 55, 57, 62, 63, 78, 79, 182, 199, 224, 233, 245, 251, 280, 302, 304, 306, 308, 312, 326, 343, 392, 393, 435, 436, 437, 438, 439, 461, 471, 473, 477, 482, 485, 488, 502, 504, 506, 512, 526, 533, 547, 549, 569, 570, 572, 573, 574, 575, 576, 577, 578, 596, 606, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 709, 717, 718, 723, 727, 728, 729, 730, 731, 732, 734, 735, 737, 745, 746, 747, 749, 750, 751, 752, 753, 754, 761, 762, 763, 774, 781, 782, 783, 785, 786, 799, 800, 801, 802, 803, 804, 805, 806, 813, 827, 843, 848, 849, 850, 851, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 900, 902, 903, 909, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 949, 952, 953, 954, 955, 956, 957, 958, 959, 967, 1010, 1011, 1016, 1018, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1131, 1133, 1135, 1136, 1137, 1138, 1141, 1147, 1150, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1164, 1168, 1169, 1171, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1493, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1517, 1518, 1521, 1522, 1526, 1528, 1561, 1563, 1564, 1567, 1568, 1576, 1595, 1598, 1607, 1614, 1615, 1617, 1619, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1662, 1663, 1664, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1706, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1751, 1753, 1754, 1755, 1756, 1757, 1760, 1761, 1764, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1789, 1791, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1810, 1811, 1813, 1815, 1816, 1818, 1819, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1878, 1880, 1881, 1883, 1884, 1887, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1901, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1915, 1916, 1917, 1918, 1919, 1920, 1924, 1926, 1928, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958], "recip": [0, 3, 27, 1427, 1607, 1621, 1893, 1905, 1946], "howev": [0, 2, 3, 4, 5, 7, 9, 13, 14, 20, 21, 23, 27, 29, 31, 37, 46, 47, 48, 50, 51, 53, 54, 55, 60, 63, 68, 71, 72, 73, 471, 534, 883, 890, 970, 992, 1013, 1055, 1057, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1123, 1124, 1128, 1129, 1131, 1134, 1135, 1194, 1197, 1198, 1204, 1206, 1233, 1248, 1249, 1251, 1265, 1266, 1283, 1343, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1371, 1427, 1501, 1502, 1503, 1526, 1598, 1607, 1640, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1862, 1870, 1874, 1889, 1893, 1894, 1897, 1899, 1903, 1905, 1907, 1909, 1910, 1911, 1912, 1916, 1917, 1924, 1926, 1928, 1942, 1944, 1945, 1946, 1947, 1948], "modular": [0, 1893], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 19, 20, 21, 23, 27, 29, 30, 31, 33, 37, 39, 40, 44, 46, 47, 51, 53, 54, 71, 187, 212, 245, 304, 312, 448, 504, 506, 545, 592, 606, 669, 678, 804, 805, 806, 850, 881, 888, 890, 892, 896, 897, 906, 912, 923, 935, 941, 952, 953, 955, 957, 967, 968, 970, 971, 979, 992, 1002, 1003, 1004, 1010, 1011, 1013, 1024, 1026, 1030, 1044, 1045, 1067, 1106, 1110, 1115, 1118, 1120, 1127, 1128, 1130, 1156, 1191, 1194, 1197, 1198, 1203, 1204, 1206, 1207, 1209, 1215, 1224, 1225, 1229, 1230, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1249, 1251, 1252, 1255, 1256, 1257, 1263, 1265, 1266, 1271, 1288, 1298, 1312, 1335, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1393, 1397, 1423, 1424, 1425, 1427, 1434, 1442, 1472, 1474, 1479, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1526, 1528, 1537, 1543, 1564, 1576, 1594, 1595, 1596, 1597, 1598, 1607, 1614, 1616, 1617, 1619, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1691, 1715, 1735, 1738, 1756, 1759, 1766, 1784, 1796, 1812, 1816, 1839, 1851, 1869, 1870, 1871, 1873, 1874, 1878, 1880, 1881, 1882, 1884, 1888, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1905, 1908, 1909, 1910, 1911, 1912, 1916, 1918, 1919, 1920, 1922, 1924, 1926, 1928, 1930, 1936, 1942, 1945, 1946, 1947, 1950, 1951, 1955, 1957, 1958, 1959], "separ": [0, 1, 3, 9, 13, 20, 23, 27, 40, 41, 46, 47, 49, 52, 53, 54, 724, 749, 879, 1067, 1084, 1086, 1092, 1093, 1096, 1097, 1102, 1104, 1123, 1204, 1239, 1254, 1382, 1390, 1391, 1392, 1433, 1435, 1545, 1655, 1662, 1869, 1872, 1874, 1880, 1893, 1894, 1896, 1897, 1900, 1910, 1915, 1916, 1925, 1928, 1929, 1933, 1942, 1957], "desir": [0, 1, 3, 20, 23, 29, 46, 54, 79, 146, 161, 163, 166, 169, 170, 171, 186, 197, 200, 231, 245, 258, 288, 316, 384, 435, 436, 437, 438, 439, 486, 488, 489, 509, 514, 533, 534, 535, 549, 569, 572, 592, 593, 606, 782, 854, 868, 910, 919, 938, 1014, 1015, 1038, 1039, 1048, 1049, 1068, 1069, 1070, 1080, 1085, 1103, 1120, 1121, 1122, 1151, 1152, 1194, 1213, 1264, 1280, 1286, 1293, 1307, 1313, 1322, 1324, 1325, 1343, 1344, 1427, 1477, 1499, 1545, 1582, 1583, 1598, 1640, 1654, 1658, 1659, 1706, 1713, 1716, 1717, 1718, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1765, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1792, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1815, 1830, 1841, 1843, 1867, 1868, 1887, 1888, 1889, 1893, 1894, 1897, 1900, 1903, 1905, 1910, 1917, 1923, 1924, 1929, 1930, 1931, 1957], "As": [0, 1, 8, 21, 23, 25, 29, 46, 49, 50, 54, 245, 923, 1067, 1198, 1225, 1229, 1230, 1240, 1241, 1252, 1257, 1366, 1367, 1368, 1372, 1393, 1427, 1458, 1594, 1653, 1659, 1868, 1871, 1873, 1874, 1881, 1889, 1894, 1897, 1899, 1901, 1905, 1908, 1911, 1912, 1916, 1917, 1923, 1924, 1925, 1926, 1928, 1939, 1941, 1943, 1947, 1948, 1949, 1950, 1957], "section": [0, 1, 7, 20, 29, 31, 32, 44, 50, 54, 73, 110, 1024, 1067, 1147, 1364, 1379, 1397, 1425, 1442, 1509, 1643, 1831, 1871, 1872, 1873, 1874, 1875, 1886, 1888, 1889, 1893, 1894, 1897, 1898, 1899, 1900, 1902, 1903, 1905, 1907, 1925, 1933, 1943, 1944, 1947, 1948, 1949, 1950, 1951, 1955, 1957], "infer": [0, 1, 2, 3, 5, 11, 14, 29, 40, 46, 569, 606, 850, 851, 854, 868, 869, 984, 1120, 1121, 1156, 1169, 1178, 1192, 1195, 1203, 1208, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1433, 1479, 1537, 1563, 1598, 1652, 1686, 1697, 1731, 1738, 1756, 1757, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1847, 1870, 1871, 1873, 1874, 1878, 1887, 1889, 1897, 1905, 1912, 1913, 1918, 1919, 1920, 1922, 1928, 1939, 1941, 1942, 1945, 1947, 1949, 1954], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 38, 40, 41, 44, 46, 50, 51, 53, 54, 69, 70, 71, 110, 245, 302, 312, 314, 326, 343, 435, 436, 437, 438, 439, 448, 471, 476, 502, 504, 506, 546, 572, 573, 574, 576, 577, 603, 606, 669, 684, 685, 724, 727, 728, 729, 730, 732, 761, 762, 763, 768, 774, 775, 776, 780, 782, 790, 803, 806, 809, 810, 813, 817, 831, 838, 847, 867, 883, 886, 887, 888, 889, 890, 892, 897, 910, 911, 919, 941, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 973, 980, 982, 984, 1010, 1011, 1013, 1034, 1064, 1068, 1070, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1113, 1114, 1118, 1119, 1124, 1135, 1147, 1151, 1152, 1156, 1164, 1175, 1183, 1192, 1194, 1197, 1198, 1205, 1209, 1210, 1213, 1224, 1229, 1230, 1232, 1233, 1234, 1235, 1237, 1239, 1240, 1241, 1242, 1252, 1254, 1255, 1257, 1258, 1265, 1266, 1283, 1288, 1335, 1358, 1359, 1360, 1363, 1364, 1370, 1371, 1374, 1397, 1399, 1427, 1430, 1432, 1433, 1435, 1443, 1466, 1474, 1478, 1479, 1509, 1518, 1520, 1526, 1537, 1564, 1594, 1595, 1598, 1601, 1602, 1603, 1604, 1607, 1609, 1610, 1620, 1640, 1641, 1642, 1654, 1662, 1668, 1672, 1673, 1675, 1686, 1689, 1693, 1696, 1697, 1699, 1703, 1715, 1724, 1728, 1730, 1732, 1755, 1759, 1760, 1762, 1766, 1793, 1797, 1807, 1812, 1816, 1830, 1841, 1843, 1848, 1849, 1851, 1852, 1854, 1859, 1860, 1861, 1862, 1869, 1872, 1873, 1874, 1878, 1880, 1881, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1922, 1924, 1925, 1926, 1928, 1929, 1931, 1932, 1933, 1934, 1935, 1939, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1956, 1957, 1959], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 17, 20, 21, 23, 24, 25, 28, 29, 31, 37, 38, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 66, 67, 68, 187, 212, 245, 280, 304, 306, 312, 326, 343, 461, 471, 482, 488, 502, 504, 506, 572, 578, 592, 606, 675, 676, 677, 678, 679, 682, 688, 723, 727, 728, 729, 730, 731, 732, 749, 781, 782, 783, 803, 847, 848, 881, 897, 909, 913, 915, 916, 918, 921, 930, 934, 941, 1002, 1016, 1018, 1024, 1048, 1049, 1050, 1067, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1111, 1133, 1135, 1136, 1147, 1156, 1171, 1194, 1204, 1205, 1207, 1209, 1210, 1225, 1229, 1230, 1233, 1236, 1237, 1238, 1239, 1241, 1250, 1251, 1253, 1257, 1266, 1273, 1281, 1288, 1294, 1298, 1335, 1339, 1343, 1344, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1371, 1373, 1374, 1379, 1381, 1388, 1393, 1397, 1399, 1427, 1430, 1431, 1432, 1433, 1441, 1442, 1448, 1449, 1450, 1451, 1452, 1453, 1458, 1463, 1477, 1478, 1482, 1483, 1484, 1499, 1501, 1502, 1503, 1526, 1537, 1562, 1564, 1576, 1584, 1598, 1603, 1604, 1607, 1617, 1640, 1641, 1642, 1644, 1654, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1699, 1744, 1753, 1791, 1801, 1807, 1816, 1831, 1833, 1837, 1845, 1852, 1854, 1860, 1861, 1862, 1869, 1870, 1871, 1874, 1876, 1878, 1880, 1881, 1882, 1884, 1887, 1888, 1889, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1905, 1907, 1908, 1909, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1924, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1953, 1954, 1956, 1957, 1958], "api": [0, 2, 3, 5, 8, 9, 21, 23, 24, 28, 31, 32, 33, 37, 38, 39, 40, 41, 44, 46, 47, 50, 53, 55, 60, 63, 224, 789, 813, 850, 883, 884, 885, 893, 930, 968, 1002, 1003, 1004, 1010, 1011, 1013, 1040, 1071, 1111, 1124, 1127, 1128, 1130, 1135, 1204, 1205, 1207, 1312, 1607, 1649, 1651, 1652, 1662, 1664, 1744, 1755, 1761, 1845, 1854, 1862, 1869, 1878, 1880, 1881, 1882, 1885, 1886, 1887, 1889, 1894, 1898, 1910, 1912, 1920, 1924, 1925, 1928, 1931, 1933, 1936, 1939, 1942, 1944, 1949, 1958], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 17, 20, 21, 23, 27, 28, 29, 30, 37, 40, 44, 46, 50, 51, 52, 53, 54, 55, 62, 63, 74, 145, 209, 212, 213, 245, 314, 502, 504, 506, 512, 532, 603, 730, 731, 732, 749, 789, 803, 850, 869, 878, 879, 888, 910, 919, 933, 941, 946, 967, 1010, 1013, 1024, 1048, 1049, 1067, 1071, 1087, 1118, 1124, 1130, 1134, 1135, 1136, 1139, 1141, 1151, 1152, 1156, 1169, 1194, 1197, 1198, 1200, 1203, 1207, 1209, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1295, 1301, 1315, 1323, 1335, 1343, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1371, 1374, 1379, 1393, 1397, 1427, 1434, 1442, 1456, 1458, 1466, 1475, 1476, 1478, 1504, 1505, 1506, 1526, 1563, 1579, 1598, 1607, 1617, 1619, 1629, 1631, 1633, 1634, 1635, 1636, 1652, 1672, 1673, 1687, 1693, 1697, 1700, 1703, 1728, 1735, 1747, 1757, 1772, 1773, 1790, 1793, 1807, 1816, 1825, 1827, 1830, 1836, 1837, 1848, 1849, 1862, 1865, 1869, 1870, 1871, 1873, 1874, 1878, 1880, 1881, 1882, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1924, 1925, 1928, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1939, 1942, 1943, 1945, 1946, 1947, 1948, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "arg": [0, 1, 3, 4, 5, 13, 20, 21, 23, 27, 29, 31, 32, 38, 39, 41, 42, 43, 44, 46, 53, 54, 55, 60, 61, 62, 63, 78, 569, 592, 669, 721, 736, 738, 740, 741, 742, 743, 749, 751, 752, 813, 850, 879, 881, 886, 887, 945, 1013, 1123, 1127, 1128, 1129, 1135, 1194, 1197, 1283, 1343, 1344, 1361, 1363, 1379, 1387, 1389, 1394, 1397, 1416, 1418, 1419, 1427, 1430, 1431, 1432, 1434, 1441, 1442, 1455, 1457, 1458, 1459, 1461, 1465, 1466, 1467, 1468, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1598, 1607, 1621, 1626, 1640, 1647, 1649, 1663, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1817, 1849, 1859, 1862, 1869, 1872, 1874, 1875, 1886, 1888, 1894, 1897, 1898, 1899, 1900, 1907, 1912, 1913, 1916, 1917, 1924, 1925, 1926, 1930, 1938, 1943, 1944, 1946, 1950, 1956, 1957, 1958], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 88, 141, 144, 145, 146, 161, 163, 166, 169, 170, 171, 181, 182, 186, 187, 197, 199, 200, 209, 214, 224, 231, 245, 246, 258, 281, 288, 302, 304, 306, 310, 312, 314, 316, 319, 320, 321, 322, 323, 324, 326, 327, 329, 331, 332, 333, 334, 343, 384, 391, 393, 397, 438, 448, 461, 462, 471, 473, 476, 477, 482, 484, 485, 486, 487, 488, 489, 492, 493, 502, 504, 506, 509, 513, 514, 526, 532, 533, 534, 546, 549, 569, 570, 572, 573, 574, 576, 577, 578, 592, 593, 596, 603, 606, 607, 609, 613, 669, 670, 672, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 752, 753, 754, 757, 758, 761, 762, 763, 764, 765, 766, 767, 768, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 788, 790, 791, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 813, 815, 816, 822, 827, 828, 829, 846, 847, 848, 850, 851, 854, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 906, 909, 910, 911, 912, 914, 917, 919, 921, 922, 925, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 943, 944, 948, 952, 953, 954, 955, 956, 957, 958, 959, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 979, 980, 982, 984, 987, 988, 989, 991, 995, 996, 999, 1002, 1003, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1054, 1055, 1056, 1057, 1058, 1059, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1077, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1147, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1168, 1169, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1213, 1214, 1215, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1276, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1315, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1458, 1459, 1460, 1462, 1463, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1528, 1537, 1538, 1543, 1545, 1547, 1548, 1550, 1551, 1552, 1561, 1562, 1564, 1566, 1567, 1568, 1569, 1570, 1576, 1579, 1582, 1583, 1591, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1659, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1724, 1725, 1726, 1728, 1729, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1746, 1747, 1751, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1810, 1811, 1812, 1815, 1816, 1817, 1818, 1819, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1847, 1848, 1849, 1851, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1945, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1957, 1958, 1959, 1960], "equival": [0, 3, 5, 20, 21, 27, 29, 33, 40, 41, 44, 46, 50, 51, 54, 69, 146, 161, 163, 166, 169, 170, 171, 231, 246, 258, 288, 310, 316, 384, 438, 448, 487, 489, 514, 593, 599, 606, 607, 609, 681, 733, 737, 744, 746, 748, 774, 775, 776, 865, 879, 922, 924, 927, 929, 932, 939, 940, 1055, 1059, 1062, 1065, 1066, 1067, 1069, 1084, 1086, 1089, 1092, 1093, 1096, 1097, 1099, 1102, 1104, 1122, 1124, 1127, 1129, 1135, 1157, 1159, 1171, 1193, 1194, 1204, 1209, 1210, 1213, 1225, 1246, 1250, 1258, 1263, 1295, 1300, 1315, 1322, 1335, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1370, 1371, 1382, 1388, 1390, 1391, 1392, 1393, 1397, 1399, 1427, 1458, 1466, 1478, 1480, 1545, 1566, 1576, 1595, 1596, 1597, 1607, 1659, 1686, 1722, 1725, 1729, 1753, 1759, 1767, 1789, 1795, 1808, 1818, 1819, 1825, 1830, 1849, 1862, 1863, 1864, 1868, 1871, 1873, 1874, 1894, 1912, 1916, 1920, 1928, 1929, 1931, 1934, 1935, 1943, 1944, 1950, 1958, 1960], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 20, 21, 23, 25, 27, 28, 29, 30, 32, 33, 40, 41, 46, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 73, 74, 302, 312, 448, 572, 606, 674, 675, 676, 678, 682, 684, 685, 688, 718, 727, 728, 729, 761, 762, 763, 768, 774, 775, 776, 781, 782, 783, 784, 790, 806, 822, 848, 850, 851, 881, 883, 888, 897, 898, 909, 910, 914, 917, 919, 921, 933, 934, 941, 954, 967, 969, 1010, 1011, 1013, 1030, 1062, 1064, 1067, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1130, 1134, 1151, 1152, 1164, 1191, 1198, 1205, 1209, 1213, 1214, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1284, 1288, 1292, 1297, 1298, 1316, 1355, 1356, 1357, 1358, 1359, 1360, 1367, 1370, 1371, 1374, 1394, 1414, 1432, 1433, 1466, 1474, 1476, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1518, 1520, 1526, 1537, 1543, 1576, 1594, 1595, 1597, 1607, 1654, 1659, 1662, 1666, 1672, 1673, 1675, 1703, 1715, 1734, 1735, 1756, 1759, 1760, 1790, 1793, 1796, 1813, 1816, 1839, 1841, 1843, 1852, 1854, 1859, 1860, 1861, 1868, 1869, 1870, 1871, 1873, 1875, 1876, 1878, 1882, 1884, 1886, 1890, 1894, 1895, 1896, 1897, 1898, 1899, 1903, 1905, 1907, 1908, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1922, 1923, 1924, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1956, 1957, 1958], "now": [0, 1, 23, 28, 30, 37, 41, 42, 44, 46, 51, 54, 212, 485, 889, 896, 982, 1010, 1031, 1032, 1118, 1141, 1191, 1192, 1198, 1209, 1243, 1424, 1443, 1479, 1598, 1619, 1630, 1651, 1675, 1756, 1807, 1812, 1854, 1871, 1881, 1887, 1888, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1905, 1906, 1912, 1916, 1919, 1925, 1926, 1928, 1942, 1945, 1946, 1947, 1948, 1950, 1951, 1956, 1957, 1958, 1959], "new": [0, 1, 5, 8, 13, 17, 20, 22, 23, 25, 29, 31, 40, 41, 44, 46, 47, 50, 51, 52, 53, 54, 73, 212, 245, 302, 438, 473, 477, 485, 488, 533, 569, 572, 606, 669, 673, 749, 780, 803, 808, 843, 868, 870, 871, 872, 873, 874, 884, 902, 903, 924, 925, 928, 930, 939, 943, 954, 956, 957, 971, 973, 1051, 1055, 1077, 1081, 1082, 1108, 1109, 1111, 1124, 1133, 1135, 1164, 1168, 1169, 1183, 1184, 1187, 1190, 1194, 1200, 1205, 1207, 1267, 1268, 1269, 1270, 1287, 1326, 1329, 1345, 1346, 1347, 1379, 1390, 1391, 1392, 1427, 1428, 1433, 1437, 1466, 1477, 1479, 1537, 1600, 1603, 1604, 1605, 1606, 1607, 1615, 1619, 1621, 1625, 1626, 1627, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1644, 1648, 1651, 1652, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1699, 1723, 1733, 1734, 1738, 1739, 1740, 1746, 1747, 1751, 1756, 1757, 1767, 1769, 1780, 1782, 1784, 1805, 1806, 1809, 1826, 1828, 1829, 1845, 1847, 1850, 1851, 1860, 1861, 1862, 1869, 1871, 1873, 1874, 1878, 1881, 1882, 1886, 1887, 1888, 1889, 1890, 1894, 1897, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1918, 1919, 1922, 1926, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1938, 1942, 1944, 1945, 1947, 1950, 1956, 1957], "version": [0, 1, 2, 5, 8, 13, 19, 21, 23, 25, 29, 41, 46, 49, 50, 54, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 112, 114, 116, 118, 121, 122, 124, 132, 134, 137, 138, 140, 143, 149, 151, 153, 155, 157, 159, 168, 177, 185, 189, 192, 194, 204, 206, 222, 227, 229, 235, 238, 240, 242, 244, 248, 253, 260, 262, 264, 268, 270, 274, 276, 283, 285, 287, 295, 297, 299, 301, 303, 305, 307, 309, 347, 349, 351, 353, 355, 357, 359, 362, 364, 366, 367, 374, 376, 378, 380, 382, 386, 390, 392, 410, 413, 416, 418, 429, 431, 433, 441, 446, 456, 459, 475, 479, 481, 497, 500, 501, 503, 505, 511, 516, 518, 521, 523, 525, 538, 540, 542, 545, 551, 553, 560, 564, 566, 582, 585, 587, 589, 591, 601, 611, 724, 725, 726, 738, 739, 740, 741, 742, 743, 764, 765, 766, 767, 769, 773, 774, 793, 794, 795, 828, 836, 844, 845, 847, 1013, 1123, 1151, 1169, 1191, 1194, 1197, 1198, 1201, 1204, 1223, 1230, 1236, 1237, 1241, 1242, 1255, 1288, 1326, 1344, 1397, 1427, 1428, 1442, 1479, 1491, 1516, 1526, 1533, 1542, 1573, 1575, 1590, 1591, 1595, 1599, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1648, 1649, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1748, 1749, 1750, 1807, 1810, 1811, 1812, 1816, 1836, 1851, 1857, 1858, 1869, 1887, 1888, 1894, 1895, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1909, 1911, 1912, 1913, 1915, 1916, 1918, 1922, 1928, 1935, 1936, 1947, 1948, 1955, 1957, 1959], "1": [0, 1, 2, 3, 11, 13, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 43, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 127, 142, 143, 164, 182, 196, 199, 216, 218, 219, 220, 224, 233, 245, 249, 254, 277, 280, 302, 303, 304, 306, 308, 312, 343, 368, 392, 393, 435, 437, 438, 444, 461, 471, 473, 477, 482, 485, 488, 502, 504, 506, 526, 527, 531, 533, 543, 544, 545, 547, 549, 550, 551, 552, 553, 570, 572, 573, 574, 576, 577, 596, 597, 604, 606, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 719, 720, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 740, 741, 742, 745, 746, 747, 749, 759, 761, 762, 763, 764, 767, 771, 772, 774, 785, 797, 798, 808, 809, 810, 811, 814, 816, 844, 850, 851, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 883, 886, 888, 889, 890, 891, 892, 893, 894, 895, 902, 903, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 942, 949, 952, 953, 954, 955, 956, 957, 958, 959, 963, 967, 979, 1010, 1011, 1026, 1030, 1037, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1065, 1066, 1067, 1070, 1071, 1072, 1073, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1164, 1165, 1168, 1169, 1171, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1198, 1204, 1205, 1209, 1210, 1213, 1214, 1215, 1217, 1218, 1219, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1239, 1240, 1241, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1312, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1469, 1470, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1493, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1524, 1525, 1526, 1528, 1530, 1532, 1533, 1534, 1535, 1536, 1544, 1546, 1550, 1551, 1552, 1558, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1570, 1574, 1575, 1576, 1577, 1578, 1580, 1582, 1583, 1584, 1586, 1591, 1592, 1593, 1594, 1595, 1598, 1607, 1614, 1615, 1619, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1662, 1663, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1708, 1709, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1751, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1764, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1784, 1785, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1850, 1851, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1872, 1873, 1874, 1875, 1878, 1881, 1882, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1921, 1924, 1925, 1926, 1928, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1960], "10": [0, 1, 19, 20, 21, 23, 24, 29, 30, 40, 42, 44, 55, 60, 62, 63, 304, 312, 326, 461, 502, 549, 570, 572, 573, 574, 674, 675, 686, 723, 734, 735, 749, 750, 751, 752, 754, 909, 921, 931, 933, 934, 935, 939, 959, 1046, 1047, 1048, 1049, 1050, 1065, 1067, 1084, 1086, 1089, 1090, 1092, 1093, 1096, 1097, 1099, 1100, 1102, 1104, 1110, 1118, 1137, 1147, 1157, 1183, 1199, 1204, 1205, 1211, 1216, 1219, 1246, 1248, 1249, 1264, 1266, 1268, 1273, 1275, 1276, 1277, 1278, 1280, 1288, 1299, 1317, 1333, 1334, 1335, 1337, 1338, 1344, 1347, 1350, 1351, 1354, 1357, 1360, 1370, 1371, 1379, 1380, 1381, 1382, 1392, 1397, 1398, 1399, 1424, 1428, 1429, 1434, 1437, 1438, 1442, 1444, 1466, 1470, 1471, 1472, 1473, 1474, 1478, 1484, 1503, 1506, 1510, 1517, 1518, 1528, 1598, 1607, 1630, 1638, 1652, 1655, 1667, 1671, 1691, 1697, 1699, 1717, 1718, 1726, 1751, 1759, 1764, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1789, 1804, 1816, 1817, 1827, 1831, 1832, 1835, 1837, 1851, 1863, 1869, 1871, 1872, 1873, 1874, 1875, 1881, 1894, 1897, 1898, 1905, 1908, 1909, 1910, 1911, 1912, 1914, 1928, 1929, 1931, 1933, 1934, 1935, 1942, 1943, 1944, 1947, 1949, 1950, 1955, 1957, 1960], "class": [0, 1, 2, 3, 14, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 34, 37, 38, 40, 42, 44, 46, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 546, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 825, 826, 827, 828, 829, 830, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 883, 886, 887, 888, 889, 960, 961, 968, 969, 970, 971, 973, 974, 989, 991, 1002, 1042, 1071, 1133, 1169, 1192, 1193, 1194, 1197, 1199, 1200, 1204, 1205, 1208, 1209, 1210, 1211, 1305, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1499, 1509, 1517, 1561, 1563, 1598, 1607, 1608, 1609, 1610, 1616, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1640, 1647, 1652, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1722, 1761, 1791, 1852, 1870, 1872, 1875, 1878, 1881, 1884, 1886, 1888, 1893, 1894, 1897, 1899, 1900, 1901, 1905, 1907, 1910, 1913, 1917, 1918, 1919, 1921, 1922, 1924, 1925, 1928, 1930, 1931, 1933, 1935, 1936, 1937, 1938, 1943, 1944, 1945, 1950, 1953, 1955, 1956, 1957, 1958, 1959, 1960], "device_typ": [0, 1, 23, 1893, 1923], "dtype": [0, 1, 5, 11, 17, 18, 20, 23, 25, 44, 46, 54, 55, 60, 62, 63, 72, 144, 145, 182, 199, 203, 204, 205, 206, 233, 302, 304, 306, 308, 310, 312, 400, 419, 422, 435, 436, 437, 438, 439, 443, 448, 460, 471, 473, 502, 504, 554, 569, 570, 592, 606, 676, 678, 681, 682, 686, 688, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 747, 749, 750, 753, 754, 761, 762, 763, 783, 784, 788, 808, 809, 810, 811, 812, 813, 814, 815, 816, 830, 847, 848, 850, 851, 854, 868, 869, 886, 888, 890, 892, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 926, 933, 949, 952, 953, 959, 967, 983, 1048, 1049, 1068, 1069, 1070, 1080, 1084, 1085, 1086, 1092, 1093, 1103, 1110, 1115, 1117, 1119, 1120, 1121, 1122, 1141, 1151, 1152, 1164, 1194, 1198, 1207, 1213, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1275, 1276, 1277, 1278, 1280, 1283, 1284, 1288, 1292, 1293, 1294, 1297, 1298, 1317, 1321, 1322, 1323, 1325, 1335, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1370, 1371, 1374, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1433, 1434, 1435, 1442, 1443, 1444, 1448, 1449, 1450, 1451, 1452, 1466, 1470, 1472, 1474, 1478, 1479, 1480, 1481, 1493, 1509, 1510, 1537, 1543, 1545, 1576, 1582, 1583, 1598, 1609, 1610, 1616, 1619, 1620, 1640, 1654, 1658, 1659, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1703, 1709, 1713, 1714, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1741, 1744, 1756, 1757, 1759, 1760, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1788, 1792, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1815, 1816, 1827, 1830, 1841, 1843, 1848, 1851, 1852, 1854, 1860, 1861, 1865, 1867, 1868, 1870, 1871, 1872, 1873, 1874, 1876, 1881, 1888, 1889, 1897, 1899, 1905, 1908, 1912, 1914, 1919, 1920, 1921, 1928, 1929, 1930, 1933, 1934, 1935, 1944, 1946, 1952, 1957, 1960], "none": [0, 1, 2, 3, 5, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 37, 38, 40, 42, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 103, 105, 106, 107, 109, 125, 126, 129, 141, 144, 145, 147, 164, 176, 177, 178, 179, 195, 196, 198, 200, 203, 204, 205, 206, 220, 224, 226, 227, 228, 229, 249, 277, 281, 292, 326, 342, 345, 368, 398, 400, 401, 402, 405, 411, 417, 418, 419, 420, 421, 422, 435, 436, 437, 438, 439, 443, 444, 460, 469, 471, 477, 483, 492, 502, 509, 526, 527, 541, 542, 544, 545, 554, 569, 570, 572, 577, 579, 592, 597, 598, 599, 604, 615, 617, 619, 621, 623, 625, 627, 629, 631, 633, 635, 637, 639, 641, 644, 646, 648, 649, 651, 653, 655, 657, 659, 661, 663, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 738, 739, 740, 741, 742, 743, 744, 755, 756, 757, 758, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 782, 783, 784, 786, 788, 803, 806, 808, 809, 810, 811, 814, 815, 827, 828, 829, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 867, 868, 869, 870, 871, 872, 873, 874, 878, 879, 880, 881, 882, 883, 884, 885, 888, 889, 891, 893, 894, 895, 896, 897, 898, 902, 903, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 925, 928, 930, 931, 932, 933, 934, 936, 937, 939, 941, 946, 949, 950, 951, 953, 954, 956, 957, 958, 959, 962, 966, 967, 968, 970, 971, 973, 974, 975, 979, 980, 982, 983, 984, 987, 988, 989, 995, 996, 1002, 1012, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1030, 1031, 1032, 1033, 1037, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1059, 1060, 1062, 1063, 1064, 1066, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1121, 1122, 1123, 1124, 1125, 1129, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1171, 1172, 1188, 1189, 1191, 1193, 1194, 1198, 1201, 1203, 1204, 1205, 1207, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1370, 1371, 1373, 1375, 1376, 1377, 1380, 1381, 1382, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1441, 1443, 1444, 1458, 1459, 1460, 1461, 1462, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1486, 1487, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1517, 1518, 1521, 1522, 1523, 1524, 1526, 1527, 1534, 1536, 1537, 1538, 1539, 1540, 1543, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1566, 1569, 1576, 1580, 1581, 1582, 1583, 1591, 1592, 1593, 1595, 1596, 1597, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1640, 1642, 1643, 1644, 1645, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1703, 1704, 1705, 1708, 1709, 1710, 1712, 1713, 1715, 1716, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1742, 1744, 1745, 1746, 1751, 1764, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1788, 1789, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1827, 1828, 1829, 1830, 1832, 1834, 1837, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1852, 1854, 1856, 1857, 1858, 1859, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1872, 1873, 1874, 1875, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1892, 1894, 1897, 1899, 1900, 1905, 1907, 1910, 1912, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1929, 1930, 1931, 1933, 1935, 1937, 1938, 1943, 1950, 1952, 1957, 1958, 1959], "enabl": [0, 1, 2, 5, 8, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 41, 46, 66, 72, 74, 492, 493, 669, 749, 801, 802, 883, 888, 941, 968, 1013, 1067, 1071, 1169, 1177, 1178, 1196, 1202, 1308, 1309, 1379, 1397, 1442, 1443, 1473, 1576, 1607, 1616, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1652, 1685, 1760, 1761, 1764, 1791, 1851, 1854, 1874, 1880, 1881, 1882, 1885, 1889, 1893, 1894, 1895, 1896, 1897, 1899, 1904, 1906, 1908, 1909, 1912, 1917, 1918, 1923, 1924, 1925, 1928, 1936, 1938, 1939, 1941, 1943, 1944, 1946, 1947, 1950, 1951, 1955, 1957, 1958, 1959], "true": [0, 1, 2, 3, 5, 13, 20, 21, 23, 24, 25, 27, 29, 31, 42, 44, 46, 51, 52, 53, 54, 55, 62, 63, 141, 187, 200, 251, 310, 312, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 342, 387, 391, 393, 438, 448, 450, 461, 467, 477, 484, 485, 488, 493, 505, 506, 545, 556, 569, 570, 579, 583, 592, 598, 606, 669, 676, 681, 682, 683, 684, 685, 686, 688, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 735, 738, 743, 745, 749, 750, 753, 754, 757, 758, 768, 774, 775, 786, 803, 815, 848, 862, 864, 865, 869, 878, 881, 882, 883, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 902, 903, 910, 913, 916, 918, 919, 925, 926, 932, 933, 934, 940, 941, 944, 946, 952, 970, 1008, 1062, 1068, 1069, 1070, 1071, 1072, 1073, 1089, 1090, 1096, 1097, 1120, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1134, 1135, 1136, 1138, 1150, 1151, 1152, 1155, 1156, 1167, 1169, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1198, 1199, 1200, 1203, 1209, 1210, 1211, 1213, 1215, 1218, 1223, 1224, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1246, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1260, 1263, 1265, 1266, 1275, 1276, 1277, 1278, 1281, 1282, 1283, 1285, 1287, 1291, 1293, 1294, 1295, 1296, 1299, 1305, 1317, 1322, 1325, 1328, 1331, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1375, 1376, 1379, 1380, 1381, 1382, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1436, 1441, 1442, 1443, 1444, 1458, 1459, 1466, 1470, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1491, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1526, 1528, 1530, 1536, 1537, 1538, 1550, 1551, 1552, 1561, 1569, 1576, 1595, 1596, 1598, 1601, 1607, 1608, 1610, 1611, 1614, 1615, 1618, 1619, 1620, 1632, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1705, 1713, 1715, 1716, 1720, 1721, 1722, 1739, 1740, 1747, 1750, 1751, 1759, 1760, 1761, 1764, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1789, 1791, 1793, 1810, 1811, 1812, 1815, 1816, 1830, 1834, 1839, 1848, 1849, 1851, 1854, 1856, 1857, 1858, 1862, 1865, 1869, 1872, 1873, 1874, 1881, 1883, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1908, 1909, 1910, 1912, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1944, 1945, 1947, 1949, 1950, 1952, 1953, 1955, 1956, 1957, 1958], "cache_en": [0, 1013], "sourc": [0, 1, 2, 3, 4, 5, 9, 12, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 42, 44, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 141, 187, 200, 224, 303, 304, 312, 331, 342, 387, 392, 393, 406, 407, 443, 461, 477, 502, 504, 506, 509, 513, 536, 545, 546, 548, 575, 592, 595, 598, 599, 613, 669, 684, 685, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 825, 826, 827, 828, 829, 830, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 862, 875, 876, 877, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 920, 922, 923, 927, 929, 931, 941, 942, 943, 944, 945, 946, 947, 948, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1067, 1071, 1118, 1120, 1136, 1142, 1143, 1146, 1165, 1166, 1167, 1169, 1170, 1175, 1180, 1181, 1182, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1265, 1266, 1286, 1295, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1491, 1492, 1496, 1498, 1499, 1500, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1545, 1547, 1548, 1549, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1569, 1571, 1572, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1586, 1587, 1588, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1722, 1747, 1752, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1765, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1791, 1797, 1804, 1812, 1817, 1820, 1821, 1822, 1823, 1824, 1832, 1851, 1852, 1853, 1854, 1855, 1869, 1871, 1872, 1873, 1878, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1889, 1892, 1901, 1903, 1904, 1908, 1910, 1912, 1913, 1915, 1917, 1918, 1919, 1923, 1924, 1925, 1930, 1933, 1935, 1936, 1937, 1938, 1947, 1948, 1950, 1957, 1958, 1959], "instanc": [0, 3, 20, 23, 24, 25, 27, 29, 30, 31, 37, 40, 41, 42, 46, 51, 54, 130, 606, 669, 723, 737, 746, 782, 785, 813, 815, 830, 847, 968, 1067, 1118, 1192, 1194, 1205, 1209, 1266, 1370, 1371, 1374, 1390, 1391, 1392, 1399, 1427, 1437, 1471, 1473, 1474, 1478, 1536, 1607, 1615, 1626, 1640, 1648, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1801, 1831, 1871, 1873, 1875, 1880, 1882, 1886, 1888, 1893, 1894, 1897, 1898, 1899, 1901, 1905, 1909, 1916, 1919, 1924, 1925, 1926, 1928, 1930, 1935, 1942, 1950, 1956, 1958], "serv": [0, 7, 8, 14, 23, 74, 1881, 1913, 1915, 1924, 1925, 1943, 1947, 1952], "context": [0, 2, 5, 20, 27, 31, 40, 41, 46, 54, 55, 141, 781, 878, 879, 880, 882, 883, 896, 897, 946, 961, 965, 974, 989, 991, 1002, 1008, 1013, 1020, 1040, 1042, 1071, 1125, 1129, 1134, 1169, 1194, 1308, 1427, 1576, 1598, 1607, 1608, 1617, 1619, 1652, 1660, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1761, 1791, 1870, 1874, 1875, 1886, 1893, 1894, 1897, 1899, 1903, 1904, 1907, 1912, 1916, 1918, 1923, 1924, 1926, 1928, 1931, 1936, 1945, 1946, 1950, 1955, 1959], "manag": [0, 1, 2, 5, 7, 23, 27, 29, 31, 38, 40, 41, 42, 46, 54, 55, 79, 476, 883, 946, 961, 965, 968, 969, 971, 974, 975, 976, 978, 989, 991, 992, 993, 1002, 1003, 1013, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1031, 1032, 1033, 1040, 1042, 1071, 1125, 1129, 1134, 1169, 1308, 1576, 1607, 1616, 1617, 1619, 1652, 1761, 1791, 1870, 1874, 1875, 1894, 1901, 1904, 1912, 1917, 1918, 1923, 1924, 1925, 1928, 1931, 1936, 1945, 1946, 1947, 1950], "decor": [0, 1, 29, 33, 37, 41, 54, 64, 888, 943, 946, 1071, 1169, 1199, 1205, 1211, 1652, 1791, 1871, 1873, 1874, 1878, 1893, 1894, 1899, 1917, 1924, 1943, 1944, 1948, 1958], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 20, 21, 23, 24, 29, 31, 32, 40, 41, 46, 47, 49, 50, 51, 52, 54, 55, 57, 141, 502, 669, 724, 782, 786, 788, 813, 882, 884, 896, 897, 926, 940, 944, 1010, 1013, 1037, 1067, 1128, 1194, 1199, 1211, 1249, 1271, 1312, 1326, 1340, 1341, 1342, 1363, 1364, 1381, 1420, 1421, 1422, 1427, 1430, 1433, 1455, 1470, 1607, 1612, 1653, 1662, 1665, 1668, 1684, 1793, 1851, 1869, 1873, 1874, 1881, 1887, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1921, 1924, 1928, 1931, 1932, 1933, 1935, 1944, 1945, 1946, 1947, 1950, 1953, 1956, 1957], "region": [0, 3, 5, 29, 37, 757, 758, 941, 1340, 1341, 1342, 1375, 1376, 1386, 1388, 1420, 1421, 1422, 1494, 1495, 1521, 1522, 1551, 1552, 1871, 1886, 1893, 1897, 1946, 1947, 1955], "your": [0, 1, 2, 4, 7, 8, 9, 11, 13, 14, 16, 20, 23, 27, 28, 29, 32, 33, 37, 39, 40, 41, 42, 43, 44, 46, 50, 51, 53, 54, 882, 888, 890, 891, 896, 941, 944, 1169, 1194, 1198, 1199, 1203, 1206, 1209, 1210, 1211, 1427, 1434, 1474, 1607, 1616, 1619, 1652, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1760, 1848, 1852, 1854, 1871, 1873, 1874, 1878, 1880, 1886, 1887, 1888, 1890, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1911, 1912, 1915, 1917, 1920, 1923, 1925, 1928, 1933, 1934, 1936, 1939, 1941, 1942, 1943, 1946, 1947, 1948, 1949, 1951, 1953, 1954, 1955, 1957, 1958, 1959], "script": [0, 2, 4, 17, 20, 23, 26, 31, 33, 39, 41, 42, 1195, 1197, 1198, 1199, 1200, 1203, 1204, 1206, 1208, 1209, 1211, 1666, 1869, 1870, 1873, 1874, 1882, 1896, 1904, 1906, 1910, 1916, 1919, 1924, 1941, 1943, 1949, 1951, 1954], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 13, 14, 17, 20, 21, 23, 24, 27, 29, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 141, 781, 787, 806, 808, 809, 810, 811, 814, 846, 850, 851, 852, 882, 896, 897, 898, 941, 1012, 1013, 1124, 1129, 1135, 1169, 1194, 1195, 1197, 1198, 1201, 1203, 1205, 1207, 1209, 1210, 1230, 1239, 1265, 1266, 1294, 1345, 1346, 1347, 1364, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1455, 1466, 1576, 1598, 1601, 1607, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1759, 1763, 1795, 1841, 1843, 1851, 1862, 1870, 1871, 1874, 1882, 1884, 1885, 1886, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1922, 1923, 1924, 1925, 1926, 1928, 1933, 1936, 1937, 1938, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1959], "In": [0, 2, 3, 4, 7, 9, 14, 17, 20, 23, 25, 27, 29, 33, 40, 41, 42, 44, 46, 48, 49, 50, 51, 53, 54, 71, 73, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 112, 114, 116, 118, 121, 122, 124, 132, 134, 137, 138, 140, 143, 145, 149, 151, 153, 155, 157, 159, 168, 177, 185, 189, 192, 194, 204, 206, 212, 222, 227, 229, 235, 238, 240, 242, 244, 248, 253, 260, 262, 264, 268, 270, 274, 276, 283, 285, 287, 295, 297, 299, 301, 347, 349, 351, 353, 355, 357, 359, 362, 364, 366, 367, 374, 376, 378, 380, 382, 386, 410, 413, 416, 418, 429, 431, 433, 441, 446, 456, 459, 475, 479, 481, 497, 500, 511, 516, 518, 521, 523, 525, 538, 540, 542, 551, 553, 560, 564, 566, 582, 585, 587, 589, 591, 601, 611, 669, 749, 789, 813, 843, 888, 917, 925, 952, 953, 967, 1013, 1024, 1036, 1037, 1041, 1042, 1067, 1088, 1090, 1098, 1099, 1100, 1115, 1125, 1129, 1132, 1134, 1192, 1194, 1203, 1206, 1207, 1209, 1225, 1234, 1239, 1240, 1241, 1249, 1252, 1257, 1262, 1266, 1271, 1274, 1283, 1288, 1294, 1295, 1322, 1340, 1341, 1342, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1366, 1367, 1368, 1372, 1374, 1379, 1388, 1397, 1412, 1420, 1421, 1422, 1427, 1433, 1470, 1472, 1474, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1516, 1526, 1533, 1542, 1570, 1573, 1575, 1576, 1590, 1607, 1614, 1619, 1620, 1652, 1662, 1686, 1697, 1699, 1735, 1751, 1753, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1816, 1817, 1839, 1851, 1852, 1854, 1859, 1860, 1869, 1870, 1871, 1873, 1874, 1880, 1881, 1886, 1887, 1888, 1889, 1892, 1893, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1915, 1916, 1918, 1919, 1920, 1921, 1924, 1925, 1926, 1928, 1933, 1935, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1959], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 66, 67, 68, 70, 72, 73, 79, 141, 145, 181, 212, 233, 245, 304, 306, 312, 314, 319, 326, 488, 502, 504, 506, 526, 534, 549, 596, 603, 606, 669, 676, 677, 724, 730, 731, 732, 745, 749, 754, 768, 774, 776, 778, 781, 785, 804, 806, 812, 815, 843, 850, 851, 853, 867, 868, 869, 878, 880, 881, 882, 884, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 904, 905, 906, 912, 928, 938, 941, 952, 953, 955, 968, 970, 971, 973, 980, 981, 982, 983, 984, 1002, 1003, 1010, 1011, 1013, 1025, 1027, 1037, 1041, 1042, 1052, 1065, 1067, 1068, 1069, 1070, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1107, 1110, 1118, 1120, 1123, 1124, 1127, 1128, 1129, 1131, 1133, 1135, 1136, 1139, 1147, 1155, 1156, 1157, 1191, 1192, 1194, 1197, 1198, 1201, 1204, 1205, 1207, 1209, 1210, 1211, 1212, 1223, 1224, 1229, 1230, 1235, 1237, 1239, 1242, 1243, 1247, 1250, 1252, 1255, 1256, 1263, 1265, 1266, 1283, 1285, 1288, 1294, 1305, 1312, 1317, 1326, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1375, 1376, 1379, 1387, 1391, 1392, 1395, 1396, 1397, 1399, 1409, 1410, 1411, 1412, 1414, 1415, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1444, 1446, 1455, 1458, 1460, 1461, 1462, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1501, 1502, 1503, 1504, 1505, 1506, 1511, 1517, 1518, 1520, 1521, 1522, 1526, 1537, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1576, 1580, 1595, 1597, 1598, 1601, 1607, 1611, 1612, 1613, 1614, 1617, 1618, 1619, 1626, 1643, 1650, 1652, 1654, 1659, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1715, 1720, 1721, 1722, 1741, 1743, 1747, 1755, 1758, 1767, 1773, 1793, 1796, 1797, 1801, 1804, 1809, 1812, 1816, 1830, 1831, 1847, 1848, 1849, 1851, 1854, 1860, 1861, 1862, 1863, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960], "chosen": [0, 51, 1055, 1215, 1576, 1764, 1789, 1834, 1889, 1893, 1897, 1899, 1907, 1912, 1919, 1957], "improv": [0, 1, 3, 9, 13, 18, 21, 23, 46, 54, 749, 793, 794, 795, 890, 892, 896, 955, 1147, 1365, 1379, 1397, 1442, 1473, 1576, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1699, 1870, 1871, 1893, 1898, 1899, 1900, 1908, 1909, 1913, 1919, 1920, 1924, 1951, 1953, 1955, 1957, 1959], "perform": [0, 1, 2, 3, 4, 5, 11, 13, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 40, 41, 44, 46, 50, 53, 54, 68, 110, 197, 200, 448, 569, 592, 606, 675, 676, 677, 678, 679, 680, 749, 770, 793, 794, 795, 836, 847, 850, 883, 888, 890, 892, 893, 896, 897, 909, 921, 941, 952, 953, 969, 975, 1024, 1048, 1049, 1062, 1087, 1110, 1112, 1123, 1124, 1127, 1158, 1169, 1194, 1203, 1204, 1209, 1237, 1239, 1242, 1246, 1249, 1250, 1254, 1255, 1263, 1264, 1266, 1271, 1280, 1293, 1298, 1308, 1309, 1319, 1322, 1325, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1367, 1370, 1371, 1379, 1397, 1427, 1433, 1435, 1442, 1455, 1470, 1473, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1545, 1562, 1576, 1582, 1583, 1598, 1607, 1609, 1610, 1615, 1619, 1640, 1647, 1649, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1705, 1713, 1741, 1755, 1759, 1787, 1792, 1793, 1794, 1795, 1815, 1817, 1851, 1870, 1871, 1874, 1884, 1885, 1886, 1887, 1888, 1890, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1906, 1907, 1908, 1909, 1912, 1915, 1916, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1939, 1941, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1953, 1958, 1959], "while": [0, 2, 3, 5, 7, 8, 11, 13, 20, 21, 23, 24, 25, 29, 42, 44, 46, 51, 53, 54, 72, 684, 685, 724, 843, 873, 881, 971, 1042, 1124, 1156, 1194, 1197, 1209, 1210, 1266, 1323, 1335, 1351, 1388, 1390, 1391, 1392, 1397, 1427, 1433, 1445, 1458, 1466, 1470, 1474, 1545, 1601, 1607, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1654, 1751, 1759, 1875, 1880, 1881, 1888, 1889, 1893, 1894, 1897, 1899, 1900, 1901, 1902, 1905, 1907, 1909, 1910, 1912, 1915, 1917, 1919, 1922, 1924, 1926, 1928, 1929, 1932, 1933, 1934, 1946, 1948, 1950, 1951, 1957], "maintain": [0, 7, 8, 20, 21, 23, 29, 44, 46, 50, 54, 1339, 1367, 1372, 1519, 1607, 1640, 1654, 1666, 1870, 1889, 1893, 1894, 1897, 1899, 1905, 1919, 1945, 1946, 1950], "accuraci": [0, 21, 941, 1257, 1576, 1759, 1870, 1884, 1893, 1905, 1933, 1937, 1947], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 16, 19, 20, 23, 24, 29, 32, 40, 41, 43, 44, 46, 51, 52, 53, 54, 80, 84, 86, 88, 90, 92, 94, 96, 98, 100, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 117, 119, 120, 123, 125, 126, 127, 128, 129, 131, 133, 135, 136, 139, 141, 142, 144, 145, 146, 147, 148, 150, 152, 154, 156, 158, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 180, 183, 184, 188, 190, 191, 193, 195, 196, 198, 201, 202, 203, 205, 208, 209, 211, 215, 216, 217, 218, 219, 220, 221, 225, 226, 228, 230, 231, 232, 234, 236, 237, 239, 241, 243, 246, 247, 252, 254, 255, 256, 257, 258, 259, 261, 263, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 282, 284, 286, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 304, 312, 313, 314, 315, 316, 318, 319, 325, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 369, 370, 371, 372, 373, 375, 377, 379, 381, 383, 384, 385, 387, 388, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 428, 430, 432, 440, 442, 443, 445, 447, 449, 450, 451, 452, 454, 455, 457, 458, 460, 467, 469, 470, 472, 474, 477, 478, 480, 482, 483, 484, 486, 487, 488, 490, 491, 494, 495, 496, 499, 504, 506, 507, 508, 510, 512, 514, 515, 517, 519, 520, 522, 524, 527, 528, 529, 531, 532, 536, 537, 539, 541, 543, 544, 545, 550, 552, 554, 556, 557, 558, 559, 561, 562, 563, 565, 567, 568, 579, 580, 581, 583, 584, 586, 588, 590, 594, 595, 598, 599, 600, 603, 604, 605, 607, 608, 609, 610, 669, 682, 684, 685, 688, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 734, 735, 737, 745, 746, 749, 750, 751, 752, 753, 754, 755, 756, 757, 760, 761, 762, 763, 768, 769, 770, 771, 772, 773, 774, 782, 829, 848, 849, 850, 851, 854, 863, 864, 865, 868, 879, 881, 882, 883, 884, 885, 887, 888, 892, 896, 897, 902, 903, 906, 910, 912, 919, 921, 924, 938, 941, 945, 957, 968, 969, 970, 971, 973, 975, 976, 978, 992, 993, 1002, 1003, 1013, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1031, 1032, 1033, 1062, 1065, 1067, 1068, 1070, 1071, 1080, 1085, 1103, 1106, 1121, 1126, 1127, 1128, 1130, 1139, 1147, 1151, 1152, 1156, 1157, 1165, 1166, 1167, 1169, 1194, 1198, 1205, 1209, 1210, 1212, 1213, 1215, 1225, 1230, 1233, 1236, 1239, 1241, 1248, 1250, 1251, 1259, 1263, 1264, 1266, 1272, 1274, 1280, 1281, 1283, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1308, 1309, 1315, 1322, 1324, 1325, 1335, 1343, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1370, 1371, 1373, 1379, 1381, 1387, 1388, 1393, 1394, 1397, 1418, 1419, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1439, 1440, 1441, 1442, 1445, 1454, 1456, 1458, 1459, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1593, 1594, 1595, 1596, 1597, 1607, 1608, 1614, 1615, 1616, 1619, 1625, 1634, 1643, 1648, 1651, 1652, 1653, 1654, 1658, 1703, 1713, 1714, 1724, 1726, 1728, 1730, 1731, 1735, 1738, 1741, 1747, 1756, 1759, 1761, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1791, 1792, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1810, 1811, 1812, 1815, 1825, 1827, 1830, 1836, 1837, 1841, 1843, 1851, 1854, 1857, 1858, 1863, 1865, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1917, 1918, 1919, 1920, 1923, 1924, 1925, 1928, 1929, 1931, 1932, 1934, 1935, 1936, 1939, 1940, 1943, 1944, 1945, 1948, 1949, 1950, 1951, 1955, 1956, 1957, 1958, 1959, 1960], "detail": [0, 1, 2, 3, 7, 8, 11, 12, 13, 14, 16, 17, 20, 23, 24, 25, 29, 31, 41, 46, 52, 54, 66, 67, 68, 141, 314, 484, 603, 669, 724, 727, 728, 729, 730, 731, 732, 749, 755, 756, 757, 760, 761, 762, 763, 768, 769, 771, 772, 773, 774, 782, 848, 849, 850, 851, 862, 879, 881, 882, 883, 884, 885, 888, 897, 924, 945, 957, 969, 973, 975, 976, 978, 992, 993, 1002, 1013, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1031, 1032, 1033, 1050, 1067, 1106, 1128, 1139, 1142, 1143, 1147, 1175, 1182, 1194, 1198, 1209, 1230, 1233, 1251, 1258, 1266, 1272, 1274, 1294, 1335, 1339, 1349, 1358, 1359, 1360, 1364, 1370, 1371, 1372, 1373, 1375, 1376, 1379, 1397, 1427, 1433, 1439, 1440, 1442, 1454, 1475, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1593, 1594, 1598, 1607, 1608, 1643, 1653, 1667, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1686, 1691, 1703, 1715, 1747, 1758, 1784, 1792, 1837, 1851, 1854, 1869, 1871, 1872, 1873, 1874, 1881, 1883, 1885, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1908, 1909, 1910, 1912, 1916, 1917, 1919, 1921, 1923, 1924, 1925, 1926, 1928, 1932, 1933, 1935, 1936, 1950, 1954, 1957, 1958, 1959], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 46, 49, 51, 52, 53, 54, 69, 71, 72, 75, 88, 141, 182, 199, 251, 304, 312, 438, 477, 486, 487, 502, 504, 506, 533, 549, 569, 606, 669, 675, 678, 724, 757, 758, 768, 774, 780, 782, 813, 829, 847, 854, 866, 869, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 909, 912, 921, 929, 932, 940, 941, 952, 953, 957, 970, 972, 982, 984, 1006, 1012, 1013, 1025, 1050, 1067, 1106, 1110, 1115, 1120, 1124, 1125, 1130, 1133, 1134, 1135, 1147, 1169, 1183, 1184, 1186, 1187, 1190, 1194, 1195, 1197, 1205, 1206, 1207, 1209, 1210, 1214, 1215, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1263, 1264, 1265, 1266, 1274, 1280, 1283, 1288, 1294, 1295, 1298, 1317, 1322, 1323, 1324, 1335, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1370, 1371, 1374, 1377, 1379, 1380, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1414, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1454, 1455, 1458, 1459, 1460, 1461, 1463, 1466, 1472, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1491, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1518, 1524, 1526, 1537, 1538, 1561, 1564, 1566, 1569, 1570, 1576, 1584, 1595, 1596, 1597, 1598, 1603, 1604, 1607, 1608, 1609, 1610, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1643, 1648, 1652, 1653, 1654, 1655, 1662, 1664, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1705, 1712, 1715, 1716, 1738, 1744, 1751, 1756, 1759, 1766, 1784, 1790, 1793, 1795, 1796, 1797, 1807, 1812, 1816, 1825, 1830, 1832, 1837, 1841, 1843, 1848, 1851, 1852, 1862, 1865, 1869, 1870, 1871, 1873, 1880, 1882, 1884, 1886, 1887, 1888, 1892, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1915, 1916, 1917, 1918, 1923, 1924, 1925, 1926, 1929, 1931, 1932, 1933, 1934, 1935, 1943, 1944, 1945, 1946, 1948, 1950, 1951, 1953, 1955, 1956, 1957, 1959], "enter": [0, 23, 883, 1169, 1899], "tensor": [0, 2, 5, 7, 8, 13, 16, 17, 20, 21, 23, 24, 25, 27, 29, 30, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 79, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 709, 721, 723, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 739, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 773, 774, 775, 776, 777, 778, 779, 783, 787, 788, 789, 790, 791, 808, 809, 810, 811, 813, 814, 816, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 902, 903, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 967, 980, 981, 982, 983, 984, 991, 999, 1000, 1006, 1010, 1013, 1016, 1020, 1031, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1176, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1197, 1198, 1200, 1201, 1204, 1205, 1207, 1209, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1306, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1335, 1339, 1340, 1343, 1344, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1379, 1380, 1381, 1387, 1393, 1394, 1397, 1398, 1414, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1459, 1460, 1461, 1462, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1603, 1604, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1662, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1757, 1760, 1761, 1764, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1870, 1871, 1873, 1874, 1878, 1881, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1924, 1925, 1929, 1930, 1933, 1935, 1937, 1938, 1939, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1952, 1956, 1957, 1958, 1959], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 34, 38, 39, 40, 41, 43, 44, 46, 51, 53, 54, 79, 141, 245, 488, 534, 606, 686, 747, 770, 781, 782, 783, 789, 799, 800, 801, 802, 804, 805, 806, 807, 812, 813, 815, 843, 854, 878, 879, 880, 882, 888, 890, 896, 897, 898, 917, 923, 927, 928, 952, 970, 1006, 1013, 1024, 1068, 1069, 1070, 1083, 1084, 1086, 1087, 1088, 1090, 1094, 1098, 1099, 1100, 1115, 1123, 1124, 1131, 1132, 1133, 1135, 1156, 1193, 1194, 1198, 1200, 1204, 1205, 1207, 1209, 1215, 1223, 1225, 1229, 1230, 1234, 1239, 1240, 1241, 1246, 1247, 1250, 1254, 1257, 1263, 1265, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1343, 1344, 1348, 1349, 1355, 1356, 1357, 1364, 1365, 1369, 1373, 1374, 1377, 1378, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1393, 1394, 1413, 1414, 1416, 1417, 1418, 1426, 1427, 1435, 1437, 1438, 1441, 1445, 1446, 1447, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1476, 1477, 1478, 1497, 1501, 1502, 1503, 1543, 1562, 1563, 1576, 1598, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1631, 1641, 1642, 1644, 1647, 1649, 1654, 1662, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1691, 1731, 1747, 1762, 1764, 1816, 1862, 1869, 1871, 1872, 1873, 1881, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1893, 1894, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1912, 1914, 1915, 1916, 1917, 1919, 1924, 1925, 1926, 1928, 1930, 1933, 1935, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1953, 1955, 1956, 1957, 1958, 1959], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 19, 20, 21, 23, 27, 28, 29, 31, 32, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 63, 69, 70, 141, 245, 326, 438, 488, 669, 678, 723, 724, 737, 746, 770, 878, 879, 880, 881, 882, 887, 888, 890, 891, 892, 896, 923, 941, 968, 991, 1002, 1004, 1013, 1014, 1034, 1067, 1123, 1124, 1127, 1128, 1129, 1130, 1135, 1169, 1194, 1198, 1199, 1206, 1209, 1210, 1211, 1239, 1257, 1265, 1288, 1295, 1298, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1397, 1423, 1424, 1425, 1427, 1432, 1433, 1434, 1442, 1461, 1470, 1472, 1474, 1479, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1537, 1543, 1576, 1594, 1595, 1598, 1607, 1615, 1641, 1649, 1651, 1652, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1697, 1715, 1738, 1747, 1755, 1798, 1799, 1800, 1802, 1803, 1807, 1852, 1854, 1862, 1869, 1871, 1873, 1874, 1876, 1878, 1881, 1882, 1884, 1886, 1887, 1889, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1928, 1931, 1932, 1933, 1934, 1935, 1936, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "should": [0, 1, 3, 4, 5, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 44, 46, 50, 51, 53, 54, 55, 60, 61, 63, 71, 110, 141, 145, 304, 312, 389, 393, 435, 436, 437, 438, 439, 477, 485, 502, 504, 506, 572, 573, 574, 576, 577, 675, 678, 679, 724, 749, 761, 762, 763, 782, 785, 789, 806, 813, 827, 828, 843, 844, 845, 848, 854, 878, 879, 880, 881, 882, 886, 887, 888, 889, 890, 891, 892, 896, 902, 903, 909, 910, 911, 912, 919, 932, 946, 959, 970, 973, 983, 984, 1002, 1004, 1013, 1058, 1068, 1069, 1070, 1080, 1085, 1088, 1089, 1090, 1098, 1099, 1100, 1103, 1118, 1120, 1121, 1122, 1124, 1125, 1129, 1133, 1134, 1135, 1151, 1152, 1155, 1156, 1191, 1192, 1194, 1195, 1199, 1203, 1205, 1206, 1209, 1210, 1211, 1213, 1238, 1263, 1264, 1265, 1271, 1280, 1283, 1284, 1285, 1305, 1335, 1343, 1344, 1348, 1361, 1363, 1364, 1366, 1367, 1368, 1371, 1372, 1393, 1397, 1419, 1427, 1433, 1434, 1435, 1454, 1475, 1479, 1491, 1497, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1518, 1526, 1576, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1658, 1659, 1663, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1715, 1717, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1738, 1754, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1816, 1830, 1839, 1854, 1862, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1878, 1880, 1881, 1883, 1884, 1886, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1907, 1908, 1909, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1924, 1926, 1928, 1932, 1933, 1935, 1941, 1943, 1944, 1946, 1947, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1958], "call": [0, 1, 2, 3, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 40, 42, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 63, 67, 73, 141, 281, 314, 326, 448, 476, 477, 545, 569, 603, 606, 669, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 770, 779, 786, 813, 846, 850, 851, 882, 886, 887, 888, 889, 890, 892, 893, 896, 902, 903, 924, 941, 946, 948, 968, 971, 973, 1002, 1004, 1014, 1015, 1024, 1031, 1032, 1034, 1035, 1065, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1123, 1124, 1135, 1139, 1157, 1169, 1179, 1194, 1197, 1199, 1204, 1205, 1206, 1213, 1249, 1257, 1261, 1263, 1265, 1266, 1295, 1339, 1345, 1346, 1347, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1374, 1412, 1423, 1424, 1425, 1427, 1434, 1435, 1455, 1466, 1478, 1504, 1505, 1506, 1512, 1513, 1514, 1519, 1537, 1576, 1595, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1616, 1619, 1626, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1642, 1648, 1649, 1651, 1652, 1664, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1728, 1755, 1762, 1763, 1791, 1810, 1811, 1812, 1832, 1851, 1852, 1854, 1857, 1858, 1862, 1863, 1869, 1871, 1875, 1878, 1884, 1886, 1888, 1889, 1890, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1939, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1953, 1956, 1957, 1958, 1959, 1960], "model": [0, 1, 2, 3, 4, 5, 8, 9, 21, 23, 24, 25, 27, 28, 29, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 69, 70, 78, 781, 782, 783, 786, 787, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 813, 814, 815, 825, 826, 827, 828, 843, 846, 847, 848, 849, 850, 851, 852, 941, 1014, 1034, 1123, 1124, 1125, 1133, 1135, 1169, 1194, 1198, 1199, 1203, 1205, 1209, 1211, 1265, 1335, 1364, 1381, 1392, 1393, 1427, 1433, 1455, 1466, 1470, 1472, 1473, 1474, 1525, 1607, 1608, 1613, 1615, 1617, 1630, 1649, 1650, 1662, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1699, 1812, 1862, 1870, 1871, 1873, 1874, 1875, 1882, 1883, 1889, 1894, 1896, 1897, 1898, 1899, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1918, 1920, 1924, 1925, 1927, 1928, 1929, 1933, 1937, 1938, 1941, 1942, 1943, 1946, 1947, 1948, 1950, 1953, 1955, 1957], "": [0, 1, 2, 3, 4, 7, 8, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 40, 41, 44, 46, 48, 50, 51, 53, 54, 67, 68, 73, 74, 453, 471, 482, 485, 502, 533, 547, 570, 613, 669, 678, 683, 684, 685, 724, 749, 782, 783, 784, 804, 805, 806, 809, 812, 815, 843, 850, 851, 864, 866, 867, 868, 869, 885, 886, 887, 891, 892, 894, 898, 925, 927, 940, 952, 953, 954, 959, 966, 968, 970, 974, 989, 993, 1002, 1004, 1009, 1010, 1013, 1014, 1015, 1034, 1035, 1036, 1042, 1059, 1062, 1064, 1065, 1067, 1081, 1082, 1084, 1085, 1086, 1089, 1090, 1092, 1093, 1096, 1097, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1115, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1135, 1139, 1147, 1155, 1156, 1157, 1181, 1183, 1191, 1192, 1194, 1198, 1204, 1205, 1209, 1224, 1225, 1235, 1236, 1237, 1239, 1242, 1246, 1248, 1250, 1251, 1255, 1256, 1257, 1258, 1263, 1265, 1266, 1281, 1288, 1293, 1295, 1298, 1300, 1301, 1305, 1308, 1309, 1312, 1321, 1322, 1325, 1327, 1333, 1334, 1335, 1343, 1344, 1345, 1346, 1347, 1350, 1364, 1370, 1381, 1427, 1428, 1433, 1437, 1443, 1455, 1458, 1460, 1466, 1470, 1472, 1474, 1480, 1481, 1498, 1499, 1510, 1523, 1526, 1537, 1538, 1543, 1576, 1582, 1595, 1598, 1603, 1604, 1607, 1608, 1619, 1630, 1643, 1647, 1654, 1655, 1664, 1665, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1691, 1703, 1705, 1709, 1716, 1731, 1734, 1735, 1738, 1739, 1740, 1742, 1744, 1751, 1758, 1759, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1810, 1811, 1812, 1815, 1816, 1817, 1818, 1819, 1827, 1831, 1833, 1839, 1854, 1857, 1858, 1859, 1862, 1863, 1869, 1871, 1872, 1873, 1874, 1875, 1878, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1921, 1922, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1957, 1958], "wrap": [0, 1, 14, 20, 21, 23, 27, 28, 33, 42, 46, 50, 51, 54, 55, 251, 779, 780, 971, 1124, 1194, 1209, 1364, 1427, 1466, 1602, 1607, 1617, 1643, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1871, 1872, 1874, 1881, 1893, 1894, 1897, 1898, 1899, 1900, 1905, 1911, 1912, 1917, 1918, 1919, 1924, 1925, 1936, 1938, 1943, 1944, 1947, 1950, 1957, 1958], "forward": [0, 5, 7, 8, 13, 21, 23, 24, 27, 28, 29, 44, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 141, 212, 213, 669, 724, 737, 746, 749, 789, 804, 805, 806, 809, 813, 850, 851, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 896, 897, 1013, 1059, 1071, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1124, 1126, 1127, 1128, 1130, 1133, 1169, 1194, 1197, 1198, 1199, 1200, 1204, 1205, 1209, 1210, 1211, 1339, 1343, 1345, 1346, 1347, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1379, 1397, 1412, 1423, 1424, 1425, 1427, 1428, 1429, 1433, 1434, 1437, 1438, 1442, 1455, 1470, 1471, 1472, 1473, 1474, 1512, 1513, 1514, 1519, 1564, 1598, 1601, 1602, 1603, 1604, 1607, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1648, 1651, 1652, 1663, 1722, 1761, 1790, 1851, 1870, 1871, 1873, 1874, 1880, 1882, 1886, 1888, 1892, 1893, 1894, 1896, 1897, 1898, 1900, 1901, 1902, 1904, 1905, 1908, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1924, 1936, 1937, 1938, 1939, 1942, 1943, 1944, 1947, 1950, 1951, 1952, 1953, 1955, 1956, 1957], "pass": [0, 1, 3, 5, 6, 7, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 50, 51, 53, 54, 55, 62, 63, 66, 73, 141, 245, 438, 502, 504, 506, 533, 549, 782, 783, 812, 815, 848, 850, 869, 878, 879, 880, 881, 882, 888, 896, 925, 941, 947, 968, 1002, 1013, 1057, 1088, 1089, 1090, 1098, 1099, 1100, 1106, 1120, 1123, 1124, 1128, 1129, 1130, 1133, 1134, 1156, 1192, 1194, 1195, 1198, 1203, 1205, 1209, 1210, 1238, 1254, 1256, 1265, 1312, 1335, 1336, 1337, 1338, 1345, 1346, 1347, 1364, 1370, 1371, 1375, 1376, 1427, 1432, 1433, 1455, 1471, 1472, 1473, 1474, 1479, 1491, 1521, 1522, 1526, 1537, 1538, 1564, 1576, 1598, 1601, 1602, 1603, 1604, 1607, 1617, 1619, 1621, 1626, 1640, 1643, 1647, 1649, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1747, 1751, 1755, 1816, 1869, 1871, 1875, 1878, 1882, 1884, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1902, 1904, 1905, 1908, 1912, 1913, 1915, 1916, 1917, 1924, 1926, 1928, 1929, 1931, 1933, 1934, 1935, 1938, 1939, 1943, 1944, 1946, 1947, 1950, 1954, 1957, 1958], "e": [0, 1, 2, 3, 5, 7, 11, 13, 14, 20, 21, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 43, 44, 46, 49, 51, 53, 54, 55, 62, 63, 141, 249, 326, 368, 569, 606, 724, 737, 746, 749, 782, 783, 804, 806, 843, 847, 848, 850, 851, 869, 878, 882, 887, 897, 898, 920, 922, 925, 999, 1013, 1038, 1067, 1077, 1118, 1124, 1129, 1133, 1144, 1169, 1173, 1174, 1176, 1179, 1191, 1194, 1200, 1201, 1209, 1229, 1230, 1245, 1257, 1265, 1266, 1267, 1269, 1271, 1288, 1299, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1363, 1364, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1379, 1382, 1387, 1390, 1391, 1392, 1393, 1394, 1397, 1399, 1400, 1401, 1402, 1418, 1427, 1428, 1433, 1434, 1436, 1437, 1441, 1442, 1458, 1466, 1470, 1474, 1475, 1476, 1478, 1501, 1502, 1503, 1510, 1512, 1513, 1514, 1517, 1518, 1519, 1526, 1537, 1569, 1576, 1595, 1597, 1598, 1603, 1607, 1608, 1609, 1610, 1615, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1640, 1641, 1647, 1651, 1654, 1662, 1663, 1672, 1673, 1708, 1719, 1737, 1744, 1751, 1755, 1759, 1762, 1767, 1812, 1816, 1869, 1871, 1873, 1874, 1875, 1878, 1881, 1882, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1903, 1904, 1905, 1908, 1910, 1912, 1915, 1916, 1918, 1919, 1924, 1925, 1926, 1928, 1929, 1931, 1932, 1933, 1935, 1942, 1945, 1946, 1950, 1955, 1957, 1958, 1960], "network": [0, 1, 7, 8, 14, 27, 29, 40, 830, 1013, 1194, 1209, 1210, 1339, 1345, 1346, 1347, 1350, 1358, 1359, 1360, 1364, 1365, 1366, 1367, 1368, 1369, 1372, 1381, 1393, 1397, 1427, 1434, 1439, 1440, 1445, 1454, 1456, 1466, 1470, 1472, 1474, 1491, 1525, 1526, 1579, 1598, 1615, 1617, 1643, 1648, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1871, 1873, 1874, 1892, 1893, 1899, 1908, 1909, 1912, 1915, 1919, 1924, 1925, 1926, 1945], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 13, 14, 20, 21, 23, 25, 37, 40, 41, 44, 46, 54, 68, 70, 312, 506, 572, 757, 758, 848, 850, 943, 1095, 1097, 1155, 1192, 1194, 1195, 1223, 1302, 1303, 1340, 1341, 1342, 1348, 1350, 1364, 1373, 1381, 1414, 1423, 1424, 1425, 1427, 1433, 1470, 1471, 1472, 1473, 1474, 1477, 1493, 1494, 1495, 1510, 1523, 1543, 1607, 1641, 1642, 1644, 1780, 1840, 1841, 1842, 1843, 1869, 1871, 1873, 1874, 1881, 1882, 1884, 1886, 1894, 1896, 1897, 1901, 1904, 1905, 1910, 1912, 1918, 1919, 1924, 1926, 1933, 1936, 1939, 1941, 1943, 1944, 1946, 1947, 1948, 1953, 1954, 1955, 1957, 1958, 1959], "loss": [0, 1, 21, 23, 24, 27, 29, 46, 1125, 1191, 1229, 1230, 1239, 1257, 1335, 1343, 1344, 1350, 1361, 1363, 1370, 1381, 1387, 1388, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1476, 1498, 1499, 1509, 1510, 1523, 1538, 1561, 1569, 1607, 1641, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1690, 1699, 1759, 1869, 1870, 1884, 1888, 1894, 1897, 1898, 1901, 1902, 1905, 1915, 1919, 1920, 1924, 1925, 1933], "comput": [0, 3, 5, 7, 8, 11, 13, 16, 20, 21, 23, 25, 29, 31, 33, 44, 46, 47, 48, 50, 141, 281, 477, 484, 670, 672, 686, 687, 749, 757, 758, 789, 791, 808, 809, 810, 811, 813, 814, 878, 882, 883, 884, 886, 887, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 913, 914, 915, 916, 917, 918, 929, 931, 932, 933, 940, 953, 955, 967, 1010, 1013, 1050, 1059, 1061, 1064, 1067, 1071, 1072, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1110, 1112, 1113, 1114, 1116, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1137, 1138, 1139, 1147, 1150, 1153, 1154, 1155, 1156, 1169, 1171, 1194, 1197, 1205, 1213, 1214, 1216, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1264, 1266, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1292, 1293, 1294, 1297, 1322, 1324, 1328, 1335, 1339, 1340, 1341, 1342, 1345, 1346, 1347, 1358, 1359, 1360, 1362, 1363, 1365, 1370, 1371, 1379, 1382, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1433, 1434, 1436, 1441, 1442, 1460, 1462, 1466, 1475, 1476, 1479, 1493, 1494, 1495, 1508, 1509, 1517, 1518, 1525, 1526, 1528, 1537, 1545, 1550, 1551, 1552, 1553, 1554, 1555, 1566, 1569, 1576, 1582, 1583, 1598, 1601, 1603, 1604, 1607, 1608, 1611, 1614, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1633, 1634, 1641, 1647, 1651, 1652, 1654, 1670, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1703, 1709, 1715, 1716, 1720, 1721, 1735, 1736, 1759, 1761, 1767, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1790, 1792, 1793, 1794, 1795, 1812, 1816, 1817, 1832, 1837, 1859, 1862, 1870, 1871, 1874, 1881, 1884, 1887, 1888, 1890, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1912, 1915, 1919, 1922, 1924, 1928, 1929, 1934, 1937, 1941, 1942, 1945, 1946, 1947, 1949, 1956, 1959], "backward": [0, 1, 5, 9, 23, 24, 25, 27, 29, 44, 46, 50, 51, 54, 55, 281, 326, 477, 485, 492, 493, 502, 504, 506, 570, 669, 675, 678, 749, 804, 805, 806, 879, 884, 885, 886, 887, 888, 889, 891, 893, 896, 897, 902, 903, 909, 921, 1013, 1071, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1123, 1124, 1194, 1266, 1274, 1288, 1298, 1343, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1370, 1379, 1380, 1381, 1394, 1397, 1398, 1414, 1418, 1419, 1427, 1433, 1434, 1441, 1442, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1498, 1499, 1509, 1510, 1526, 1537, 1561, 1564, 1599, 1603, 1604, 1607, 1619, 1652, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1690, 1703, 1715, 1790, 1793, 1797, 1816, 1851, 1869, 1870, 1872, 1874, 1880, 1888, 1889, 1892, 1893, 1898, 1899, 1900, 1901, 1904, 1905, 1907, 1908, 1912, 1915, 1916, 1918, 1919, 1924, 1928, 1929, 1934, 1939, 1942, 1943, 1947, 1951, 1953, 1955, 1956, 1957], "under": [0, 1, 3, 4, 5, 9, 20, 23, 40, 46, 47, 49, 51, 53, 68, 75, 897, 905, 926, 1169, 1194, 1350, 1427, 1491, 1517, 1518, 1614, 1616, 1619, 1666, 1667, 1736, 1886, 1893, 1894, 1897, 1898, 1900, 1902, 1907, 1912, 1916, 1917, 1919, 1922, 1923, 1926, 1929, 1933, 1936, 1938, 1944, 1945, 1946, 1947, 1950, 1952, 1955, 1957], "recommend": [0, 1, 5, 20, 21, 23, 25, 28, 29, 31, 40, 41, 46, 50, 53, 54, 55, 71, 72, 74, 438, 882, 948, 952, 953, 967, 1088, 1089, 1090, 1098, 1099, 1100, 1181, 1197, 1239, 1266, 1312, 1335, 1364, 1538, 1607, 1722, 1848, 1852, 1869, 1871, 1883, 1886, 1888, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1905, 1907, 1908, 1910, 1912, 1916, 1919, 1948], "same": [0, 1, 3, 7, 13, 14, 16, 17, 20, 21, 23, 24, 25, 27, 29, 31, 37, 38, 40, 41, 42, 43, 44, 46, 49, 51, 53, 54, 55, 62, 63, 130, 144, 186, 212, 246, 302, 304, 306, 310, 312, 330, 435, 436, 437, 438, 439, 461, 473, 486, 487, 489, 502, 504, 506, 509, 533, 569, 606, 607, 675, 678, 682, 684, 685, 686, 688, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 747, 750, 751, 752, 753, 754, 768, 774, 777, 778, 782, 783, 785, 789, 791, 803, 808, 811, 813, 814, 848, 850, 867, 868, 869, 881, 884, 887, 890, 891, 892, 893, 894, 895, 897, 898, 909, 911, 912, 921, 923, 925, 928, 933, 935, 941, 944, 949, 967, 968, 970, 981, 983, 1002, 1013, 1050, 1055, 1057, 1058, 1064, 1067, 1069, 1070, 1073, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1115, 1119, 1120, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1139, 1147, 1155, 1156, 1164, 1168, 1185, 1191, 1194, 1204, 1205, 1209, 1210, 1214, 1215, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1261, 1281, 1285, 1287, 1288, 1291, 1293, 1294, 1295, 1296, 1299, 1322, 1325, 1326, 1327, 1333, 1334, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1374, 1377, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1399, 1409, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1435, 1436, 1441, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1478, 1479, 1482, 1483, 1484, 1491, 1497, 1498, 1499, 1501, 1502, 1503, 1509, 1518, 1526, 1528, 1537, 1538, 1576, 1595, 1607, 1614, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1640, 1644, 1649, 1654, 1655, 1659, 1662, 1668, 1682, 1703, 1708, 1709, 1712, 1713, 1725, 1727, 1729, 1733, 1735, 1737, 1738, 1742, 1744, 1751, 1754, 1759, 1767, 1790, 1798, 1799, 1800, 1802, 1803, 1809, 1810, 1811, 1815, 1816, 1826, 1837, 1848, 1849, 1850, 1851, 1857, 1858, 1859, 1862, 1868, 1869, 1871, 1873, 1874, 1884, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1907, 1908, 1909, 1910, 1912, 1915, 1916, 1917, 1919, 1922, 1924, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1941, 1942, 1943, 1945, 1946, 1947, 1950, 1953, 1955, 1956, 1957, 1958], "correspond": [0, 1, 7, 17, 20, 21, 23, 25, 27, 28, 29, 40, 46, 54, 69, 463, 464, 502, 504, 506, 533, 534, 669, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 724, 782, 786, 825, 827, 846, 847, 848, 853, 869, 878, 880, 881, 882, 887, 890, 892, 897, 933, 954, 1013, 1033, 1062, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1147, 1156, 1183, 1194, 1210, 1224, 1229, 1230, 1235, 1238, 1257, 1264, 1266, 1280, 1295, 1317, 1364, 1370, 1397, 1427, 1433, 1473, 1517, 1526, 1563, 1603, 1607, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1648, 1654, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1691, 1708, 1709, 1719, 1742, 1751, 1767, 1810, 1811, 1816, 1847, 1850, 1857, 1858, 1869, 1871, 1872, 1874, 1878, 1884, 1887, 1888, 1893, 1894, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1909, 1912, 1916, 1918, 1919, 1924, 1925, 1928, 1929, 1930, 1933, 1935, 1937, 1938, 1948, 1954, 1955, 1957], "devic": [0, 1, 2, 5, 8, 13, 15, 17, 20, 21, 23, 24, 25, 28, 41, 42, 44, 46, 50, 53, 54, 55, 60, 63, 79, 187, 197, 200, 280, 304, 312, 326, 435, 436, 437, 438, 439, 504, 506, 569, 675, 678, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 741, 742, 743, 744, 854, 866, 868, 869, 890, 892, 909, 910, 912, 919, 921, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 973, 974, 975, 976, 977, 979, 980, 981, 982, 983, 984, 986, 987, 988, 991, 995, 996, 997, 999, 1000, 1008, 1010, 1011, 1012, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1068, 1069, 1070, 1080, 1085, 1103, 1121, 1122, 1151, 1152, 1194, 1198, 1201, 1204, 1207, 1213, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1248, 1251, 1252, 1254, 1255, 1257, 1258, 1264, 1265, 1280, 1283, 1288, 1294, 1298, 1305, 1312, 1314, 1335, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1371, 1380, 1382, 1390, 1391, 1392, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1433, 1435, 1443, 1444, 1466, 1470, 1472, 1474, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1537, 1543, 1576, 1591, 1595, 1596, 1597, 1598, 1607, 1609, 1610, 1611, 1612, 1640, 1647, 1653, 1655, 1658, 1659, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1715, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1755, 1759, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1816, 1830, 1832, 1841, 1843, 1851, 1852, 1854, 1867, 1868, 1870, 1871, 1872, 1873, 1874, 1876, 1882, 1887, 1889, 1893, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1924, 1928, 1930, 1934, 1935, 1942, 1944, 1946, 1949, 1952, 1954, 1955, 1957, 1959], "creat": [0, 1, 3, 5, 6, 7, 9, 13, 20, 21, 23, 25, 27, 29, 31, 32, 38, 40, 41, 42, 43, 46, 53, 54, 55, 71, 72, 74, 79, 141, 213, 245, 326, 569, 570, 572, 573, 574, 576, 577, 669, 721, 727, 728, 729, 734, 735, 745, 753, 781, 782, 783, 803, 804, 805, 806, 808, 813, 843, 867, 868, 869, 882, 884, 896, 920, 922, 938, 939, 941, 954, 969, 978, 1010, 1011, 1020, 1055, 1070, 1119, 1120, 1121, 1191, 1194, 1197, 1206, 1212, 1217, 1223, 1224, 1230, 1232, 1251, 1264, 1280, 1295, 1317, 1343, 1361, 1370, 1371, 1374, 1388, 1394, 1418, 1419, 1427, 1430, 1431, 1432, 1455, 1458, 1459, 1466, 1475, 1476, 1478, 1607, 1619, 1640, 1647, 1652, 1662, 1664, 1667, 1686, 1754, 1785, 1796, 1801, 1830, 1837, 1870, 1874, 1875, 1878, 1882, 1886, 1893, 1894, 1897, 1898, 1899, 1900, 1902, 1905, 1906, 1907, 1910, 1912, 1915, 1916, 1918, 1919, 1924, 1925, 1926, 1928, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1942, 1943, 1944, 1945, 1946, 1950, 1956, 1957, 1959, 1960], "optim": [0, 1, 2, 7, 8, 11, 13, 14, 21, 23, 24, 25, 29, 46, 54, 808, 897, 906, 941, 944, 1067, 1133, 1194, 1198, 1203, 1205, 1209, 1210, 1249, 1266, 1345, 1346, 1347, 1363, 1370, 1390, 1391, 1392, 1427, 1430, 1431, 1432, 1433, 1459, 1466, 1474, 1576, 1598, 1607, 1614, 1619, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1870, 1871, 1873, 1882, 1888, 1892, 1896, 1897, 1898, 1899, 1901, 1902, 1905, 1907, 1912, 1918, 1919, 1928, 1939, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1957], "default": [0, 2, 3, 5, 9, 11, 13, 17, 23, 24, 25, 27, 28, 29, 31, 32, 37, 38, 39, 40, 41, 43, 44, 46, 49, 50, 51, 52, 54, 55, 59, 60, 62, 63, 68, 71, 72, 74, 141, 146, 161, 163, 166, 169, 170, 171, 186, 197, 200, 231, 258, 281, 288, 316, 322, 384, 435, 436, 437, 438, 439, 448, 485, 488, 489, 509, 514, 569, 570, 572, 669, 683, 686, 701, 702, 703, 704, 705, 706, 709, 719, 720, 721, 722, 724, 744, 747, 749, 757, 758, 759, 761, 762, 763, 768, 774, 782, 787, 792, 797, 798, 803, 806, 808, 809, 810, 811, 814, 817, 818, 819, 820, 821, 822, 823, 824, 830, 831, 832, 833, 834, 835, 837, 838, 843, 844, 845, 847, 854, 868, 869, 882, 883, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 910, 919, 925, 929, 932, 933, 934, 938, 941, 959, 967, 970, 973, 975, 979, 982, 983, 984, 987, 988, 995, 996, 999, 1010, 1012, 1013, 1016, 1018, 1019, 1020, 1022, 1024, 1025, 1026, 1030, 1031, 1032, 1033, 1037, 1038, 1041, 1043, 1044, 1045, 1048, 1049, 1050, 1055, 1056, 1057, 1058, 1059, 1062, 1067, 1068, 1069, 1070, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1134, 1135, 1139, 1141, 1147, 1151, 1152, 1155, 1156, 1183, 1185, 1191, 1194, 1195, 1198, 1205, 1209, 1210, 1213, 1214, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1280, 1283, 1285, 1291, 1293, 1294, 1295, 1299, 1305, 1321, 1322, 1324, 1325, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1441, 1442, 1444, 1445, 1446, 1447, 1454, 1458, 1459, 1463, 1464, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1525, 1526, 1528, 1530, 1537, 1538, 1545, 1550, 1551, 1552, 1561, 1562, 1564, 1569, 1576, 1582, 1583, 1591, 1595, 1601, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1641, 1642, 1644, 1646, 1647, 1648, 1649, 1651, 1653, 1654, 1658, 1659, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1705, 1713, 1715, 1716, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1737, 1743, 1744, 1747, 1751, 1755, 1756, 1757, 1758, 1759, 1764, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1810, 1811, 1812, 1815, 1816, 1817, 1830, 1831, 1837, 1839, 1841, 1843, 1848, 1849, 1851, 1852, 1854, 1856, 1857, 1858, 1862, 1867, 1868, 1869, 1870, 1871, 1874, 1878, 1880, 1882, 1883, 1886, 1889, 1892, 1893, 1896, 1898, 1899, 1900, 1901, 1903, 1905, 1908, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1923, 1924, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1939, 1943, 1945, 1946, 1947, 1951, 1953, 1954, 1956, 1957, 1959, 1960], "net": [0, 6, 14, 31, 49, 54, 1194, 1209, 1210, 1364, 1427, 1607, 1630, 1690, 1873, 1874, 1893, 1894, 1897, 1905, 1933], "sgd": [0, 20, 21, 27, 1370, 1598, 1607, 1691, 1697, 1699, 1893, 1897, 1898, 1905, 1907, 1915, 1924, 1925], "paramet": [0, 1, 2, 3, 5, 11, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 34, 38, 40, 42, 44, 46, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 141, 146, 161, 163, 166, 169, 170, 171, 186, 187, 197, 200, 224, 231, 245, 246, 251, 258, 288, 304, 306, 308, 310, 312, 316, 322, 384, 391, 393, 435, 436, 437, 438, 439, 448, 461, 482, 485, 486, 487, 488, 489, 502, 504, 506, 509, 514, 526, 533, 534, 535, 549, 555, 572, 573, 574, 576, 577, 592, 593, 596, 606, 607, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 739, 744, 745, 747, 748, 749, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 780, 782, 784, 786, 788, 789, 790, 803, 808, 809, 810, 811, 812, 813, 814, 815, 816, 827, 828, 829, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 904, 905, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 943, 944, 946, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 962, 966, 967, 968, 969, 970, 971, 973, 974, 975, 976, 978, 979, 980, 981, 982, 983, 984, 987, 988, 989, 991, 995, 996, 997, 999, 1002, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1168, 1169, 1171, 1173, 1174, 1176, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1204, 1205, 1206, 1207, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1305, 1307, 1308, 1309, 1312, 1313, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1462, 1463, 1464, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1523, 1525, 1526, 1528, 1530, 1537, 1538, 1545, 1550, 1551, 1552, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1576, 1582, 1583, 1591, 1595, 1596, 1597, 1598, 1601, 1606, 1607, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1787, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1820, 1821, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1874, 1876, 1878, 1882, 1883, 1886, 1888, 1889, 1890, 1892, 1893, 1894, 1897, 1898, 1899, 1903, 1904, 1905, 1907, 1909, 1910, 1912, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1928, 1929, 1930, 1933, 1935, 1937, 1938, 1947, 1956, 1958, 1959], "target": [0, 13, 27, 44, 46, 50, 52, 53, 54, 55, 67, 488, 724, 755, 756, 781, 786, 848, 850, 851, 926, 1125, 1194, 1203, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1343, 1344, 1350, 1361, 1363, 1375, 1376, 1381, 1387, 1388, 1393, 1394, 1418, 1419, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1458, 1459, 1470, 1479, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1499, 1507, 1509, 1510, 1521, 1522, 1523, 1534, 1535, 1538, 1539, 1549, 1557, 1558, 1559, 1560, 1561, 1569, 1576, 1580, 1581, 1607, 1666, 1685, 1851, 1872, 1874, 1893, 1894, 1897, 1907, 1912, 1915, 1916, 1919, 1920, 1924, 1933, 1937, 1943, 1944, 1945, 1950, 1956, 1957], "data": [0, 1, 2, 3, 7, 11, 17, 18, 21, 23, 25, 27, 28, 29, 30, 31, 34, 37, 40, 42, 44, 46, 50, 54, 55, 56, 60, 63, 130, 141, 186, 187, 317, 320, 324, 327, 332, 435, 438, 471, 482, 486, 488, 606, 727, 728, 729, 749, 761, 762, 763, 770, 781, 782, 783, 787, 808, 809, 810, 811, 812, 814, 816, 854, 868, 869, 879, 882, 910, 919, 925, 971, 1048, 1049, 1068, 1069, 1070, 1080, 1081, 1082, 1085, 1087, 1088, 1090, 1098, 1099, 1100, 1103, 1106, 1107, 1108, 1109, 1118, 1120, 1121, 1122, 1124, 1133, 1151, 1152, 1154, 1173, 1176, 1201, 1205, 1209, 1213, 1264, 1265, 1266, 1280, 1285, 1293, 1295, 1308, 1309, 1322, 1324, 1325, 1348, 1350, 1355, 1356, 1357, 1364, 1379, 1382, 1390, 1391, 1392, 1397, 1399, 1414, 1434, 1442, 1443, 1479, 1491, 1496, 1497, 1501, 1502, 1503, 1536, 1543, 1545, 1582, 1583, 1607, 1608, 1609, 1610, 1640, 1641, 1642, 1643, 1645, 1654, 1658, 1659, 1664, 1667, 1691, 1697, 1705, 1713, 1716, 1717, 1718, 1722, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1738, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1792, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1815, 1816, 1830, 1839, 1841, 1843, 1850, 1851, 1852, 1867, 1868, 1870, 1871, 1872, 1875, 1881, 1882, 1884, 1886, 1889, 1893, 1894, 1895, 1897, 1899, 1900, 1904, 1907, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1919, 1922, 1924, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1938, 1941, 1945, 1946, 1947, 1949, 1950, 1955, 1959], "zero_grad": [0, 1, 27, 1194, 1427, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1690, 1893, 1897, 1901, 1905, 1907, 1915], "output": [0, 1, 4, 5, 7, 17, 20, 21, 23, 27, 28, 29, 31, 37, 38, 44, 50, 51, 52, 54, 55, 63, 67, 130, 304, 312, 435, 436, 437, 439, 502, 506, 555, 606, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 709, 717, 718, 723, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 761, 762, 763, 764, 766, 768, 769, 770, 771, 772, 774, 775, 776, 781, 782, 783, 785, 788, 791, 803, 806, 847, 850, 851, 852, 854, 863, 864, 867, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 909, 911, 912, 913, 914, 915, 916, 917, 918, 921, 925, 928, 929, 930, 931, 932, 933, 934, 936, 939, 953, 954, 956, 957, 967, 980, 982, 983, 984, 1010, 1011, 1013, 1023, 1024, 1046, 1047, 1048, 1049, 1051, 1054, 1055, 1057, 1059, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1072, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1147, 1150, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1168, 1171, 1188, 1189, 1191, 1194, 1198, 1205, 1209, 1210, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1517, 1518, 1520, 1521, 1522, 1523, 1526, 1528, 1537, 1538, 1543, 1545, 1550, 1551, 1552, 1561, 1562, 1566, 1567, 1568, 1569, 1576, 1591, 1595, 1596, 1597, 1601, 1603, 1604, 1607, 1615, 1616, 1617, 1620, 1641, 1643, 1644, 1648, 1651, 1653, 1654, 1655, 1658, 1659, 1662, 1667, 1668, 1686, 1690, 1703, 1704, 1712, 1713, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1739, 1740, 1744, 1746, 1751, 1759, 1764, 1767, 1769, 1781, 1782, 1784, 1789, 1793, 1794, 1796, 1797, 1805, 1806, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1827, 1828, 1829, 1834, 1837, 1839, 1840, 1842, 1845, 1847, 1848, 1849, 1851, 1856, 1857, 1858, 1859, 1862, 1864, 1865, 1867, 1868, 1869, 1871, 1872, 1874, 1880, 1882, 1887, 1888, 1889, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1908, 1912, 1915, 1916, 1917, 1918, 1919, 1921, 1925, 1928, 1929, 1931, 1932, 1933, 1935, 1937, 1938, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1951, 1956, 1957], "loss_fn": [0, 27, 1685, 1893, 1897, 1898, 1907, 1915], "exit": [0, 1, 2, 4, 17, 23, 31, 40, 46, 53, 54, 883, 1607, 1874, 1886, 1894, 1899, 1907, 1912, 1926, 1950], "befor": [0, 1, 3, 6, 7, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 32, 37, 39, 40, 41, 42, 46, 54, 88, 141, 736, 749, 777, 778, 779, 882, 886, 888, 939, 948, 970, 1048, 1049, 1050, 1059, 1067, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1108, 1109, 1112, 1120, 1123, 1194, 1205, 1207, 1230, 1246, 1250, 1263, 1293, 1305, 1322, 1325, 1364, 1370, 1371, 1374, 1379, 1427, 1428, 1429, 1466, 1470, 1478, 1526, 1545, 1582, 1583, 1598, 1601, 1602, 1603, 1604, 1607, 1615, 1648, 1651, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1699, 1713, 1716, 1742, 1751, 1762, 1763, 1792, 1795, 1798, 1799, 1800, 1802, 1803, 1812, 1815, 1837, 1848, 1871, 1873, 1874, 1886, 1893, 1894, 1897, 1898, 1899, 1902, 1904, 1905, 1908, 1910, 1911, 1915, 1916, 1917, 1919, 1924, 1925, 1926, 1928, 1929, 1933, 1935, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1953], "step": [0, 1, 2, 4, 9, 13, 20, 21, 23, 24, 25, 27, 29, 41, 46, 50, 54, 66, 527, 596, 675, 757, 758, 846, 854, 883, 884, 885, 912, 936, 1153, 1241, 1264, 1265, 1266, 1280, 1283, 1295, 1375, 1376, 1397, 1494, 1495, 1521, 1522, 1607, 1640, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1722, 1731, 1759, 1785, 1854, 1871, 1872, 1888, 1893, 1894, 1897, 1898, 1899, 1901, 1905, 1907, 1909, 1911, 1912, 1916, 1918, 1919, 1924, 1925, 1928, 1933, 1947, 1950, 1951, 1952, 1955, 1957], "usag": [0, 1, 4, 7, 9, 14, 20, 23, 27, 29, 30, 31, 34, 37, 38, 40, 42, 46, 54, 55, 56, 737, 746, 781, 782, 783, 799, 800, 801, 802, 804, 805, 806, 843, 847, 879, 941, 1016, 1036, 1040, 1067, 1118, 1123, 1127, 1128, 1129, 1207, 1266, 1607, 1663, 1870, 1871, 1874, 1884, 1888, 1893, 1894, 1899, 1901, 1912, 1918, 1926, 1933, 1934, 1936, 1937, 1938, 1945, 1946, 1947, 1948, 1957], "along": [0, 13, 17, 20, 23, 29, 33, 40, 55, 61, 304, 306, 308, 312, 482, 502, 504, 506, 675, 686, 808, 864, 865, 928, 935, 958, 967, 982, 984, 1050, 1058, 1059, 1066, 1067, 1083, 1088, 1091, 1095, 1098, 1101, 1107, 1135, 1136, 1159, 1168, 1171, 1215, 1226, 1262, 1315, 1322, 1326, 1327, 1336, 1337, 1338, 1344, 1362, 1375, 1376, 1417, 1420, 1421, 1422, 1460, 1462, 1491, 1499, 1508, 1521, 1522, 1525, 1528, 1545, 1550, 1551, 1552, 1562, 1582, 1583, 1625, 1627, 1634, 1635, 1644, 1653, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1697, 1716, 1736, 1737, 1742, 1753, 1789, 1792, 1795, 1796, 1804, 1809, 1827, 1831, 1834, 1837, 1846, 1859, 1862, 1864, 1869, 1873, 1878, 1889, 1895, 1899, 1901, 1904, 1905, 1916, 1919, 1929], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 13, 14, 16, 19, 20, 21, 23, 24, 29, 30, 31, 32, 36, 39, 40, 41, 42, 44, 46, 49, 50, 51, 52, 54, 68, 70, 72, 73, 141, 245, 246, 304, 312, 477, 482, 484, 487, 502, 504, 506, 534, 607, 669, 724, 760, 769, 773, 782, 843, 848, 849, 850, 862, 875, 876, 877, 879, 881, 882, 888, 890, 892, 896, 897, 898, 902, 903, 912, 920, 923, 925, 931, 932, 933, 934, 941, 970, 971, 973, 975, 976, 992, 1011, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1031, 1032, 1033, 1037, 1045, 1050, 1056, 1065, 1067, 1071, 1083, 1084, 1086, 1088, 1107, 1108, 1109, 1110, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1142, 1143, 1147, 1156, 1157, 1169, 1175, 1179, 1181, 1182, 1194, 1207, 1210, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1266, 1269, 1272, 1274, 1284, 1285, 1308, 1309, 1312, 1323, 1335, 1339, 1344, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1370, 1371, 1372, 1388, 1397, 1423, 1424, 1425, 1427, 1433, 1439, 1440, 1441, 1442, 1454, 1466, 1474, 1491, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1515, 1517, 1518, 1526, 1529, 1530, 1531, 1532, 1537, 1541, 1545, 1546, 1556, 1563, 1570, 1571, 1572, 1574, 1576, 1577, 1578, 1579, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1594, 1595, 1596, 1597, 1598, 1607, 1608, 1614, 1616, 1617, 1652, 1653, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1703, 1714, 1715, 1741, 1747, 1751, 1759, 1761, 1791, 1792, 1816, 1837, 1839, 1851, 1854, 1862, 1863, 1869, 1870, 1871, 1873, 1874, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1908, 1910, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1925, 1926, 1928, 1931, 1932, 1933, 1934, 1935, 1936, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960], "complex": [0, 1, 3, 7, 8, 20, 21, 23, 54, 302, 320, 473, 488, 674, 681, 897, 898, 934, 952, 953, 1062, 1068, 1069, 1070, 1088, 1110, 1115, 1147, 1164, 1173, 1184, 1186, 1187, 1190, 1191, 1194, 1214, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1243, 1246, 1248, 1250, 1251, 1252, 1253, 1257, 1258, 1262, 1263, 1264, 1266, 1274, 1280, 1292, 1297, 1316, 1355, 1356, 1357, 1394, 1427, 1501, 1502, 1503, 1614, 1654, 1666, 1709, 1722, 1735, 1756, 1767, 1812, 1813, 1816, 1851, 1859, 1860, 1861, 1869, 1870, 1872, 1874, 1875, 1883, 1907, 1914, 1930, 1931, 1934, 1935, 1948, 1949], "scenario": [0, 20, 23, 40, 1663, 1664, 1852, 1897, 1902, 1907, 1912, 1918, 1924, 1947, 1948], "g": [0, 1, 2, 3, 5, 7, 11, 13, 14, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 43, 44, 46, 49, 51, 53, 54, 55, 62, 63, 569, 606, 737, 746, 749, 782, 783, 804, 806, 843, 848, 850, 851, 878, 887, 897, 898, 922, 1013, 1067, 1118, 1124, 1128, 1129, 1144, 1147, 1169, 1191, 1194, 1200, 1201, 1209, 1265, 1350, 1351, 1364, 1366, 1367, 1368, 1372, 1374, 1379, 1387, 1393, 1397, 1398, 1427, 1428, 1437, 1442, 1458, 1510, 1512, 1513, 1514, 1519, 1526, 1607, 1608, 1609, 1610, 1651, 1654, 1662, 1663, 1670, 1671, 1672, 1673, 1676, 1682, 1683, 1684, 1685, 1737, 1744, 1755, 1759, 1762, 1780, 1812, 1869, 1871, 1873, 1874, 1875, 1878, 1881, 1886, 1893, 1894, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1908, 1909, 1912, 1915, 1916, 1918, 1919, 1924, 1928, 1931, 1932, 1933, 1943, 1945, 1946, 1947, 1955, 1957, 1958], "penalti": [0, 770, 1024, 1669, 1670, 1671, 1672, 1674, 1676, 1682, 1683, 1685, 1920, 1953], "multipl": [0, 1, 2, 3, 5, 20, 21, 23, 24, 25, 29, 30, 33, 40, 41, 42, 46, 51, 53, 54, 66, 182, 199, 306, 502, 675, 677, 678, 684, 685, 749, 830, 863, 864, 867, 896, 929, 931, 941, 955, 959, 982, 983, 984, 1010, 1065, 1067, 1070, 1120, 1128, 1129, 1130, 1131, 1134, 1135, 1139, 1143, 1157, 1158, 1207, 1210, 1215, 1216, 1231, 1232, 1233, 1249, 1254, 1259, 1260, 1288, 1291, 1296, 1298, 1343, 1344, 1358, 1359, 1360, 1361, 1363, 1371, 1374, 1379, 1387, 1393, 1394, 1415, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1478, 1498, 1499, 1509, 1518, 1538, 1561, 1569, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1684, 1692, 1693, 1694, 1695, 1696, 1701, 1703, 1759, 1787, 1793, 1794, 1798, 1799, 1800, 1802, 1803, 1831, 1832, 1839, 1847, 1851, 1862, 1863, 1869, 1870, 1873, 1874, 1886, 1887, 1888, 1889, 1894, 1896, 1898, 1900, 1902, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1918, 1919, 1920, 1924, 1925, 1926, 1928, 1938, 1939, 1941, 1942, 1946, 1947, 1956], "custom": [0, 1, 3, 5, 13, 14, 20, 23, 24, 25, 26, 27, 33, 36, 37, 39, 44, 46, 55, 57, 67, 69, 70, 71, 72, 74, 488, 782, 786, 803, 804, 805, 806, 827, 829, 848, 849, 850, 851, 888, 941, 943, 969, 978, 1042, 1194, 1427, 1470, 1474, 1475, 1476, 1621, 1630, 1647, 1666, 1691, 1852, 1854, 1870, 1875, 1878, 1880, 1886, 1887, 1894, 1904, 1909, 1910, 1911, 1913, 1922, 1923, 1937, 1939, 1946, 1948, 1950], "autograd": [0, 4, 5, 7, 8, 23, 27, 29, 46, 47, 50, 55, 130, 326, 435, 436, 437, 438, 439, 485, 678, 854, 868, 869, 883, 910, 919, 938, 943, 1013, 1068, 1069, 1070, 1080, 1085, 1103, 1120, 1121, 1122, 1123, 1124, 1133, 1135, 1151, 1152, 1169, 1194, 1213, 1233, 1264, 1280, 1288, 1298, 1381, 1427, 1433, 1474, 1528, 1543, 1607, 1658, 1659, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1763, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1862, 1867, 1868, 1870, 1872, 1876, 1881, 1889, 1892, 1897, 1898, 1901, 1902, 1904, 1905, 1918, 1934, 1935, 1939, 1947, 1948, 1953, 1957, 1958], "function": [0, 2, 3, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 20, 24, 25, 27, 28, 30, 31, 33, 37, 38, 40, 41, 44, 46, 49, 51, 53, 55, 57, 58, 62, 63, 65, 67, 68, 70, 71, 74, 79, 110, 141, 186, 251, 280, 289, 312, 477, 482, 485, 506, 530, 545, 669, 678, 682, 683, 687, 688, 737, 746, 747, 749, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 782, 786, 787, 789, 803, 804, 805, 806, 813, 815, 827, 830, 843, 846, 848, 850, 851, 852, 866, 867, 882, 883, 884, 885, 896, 897, 898, 902, 903, 906, 910, 919, 921, 929, 931, 935, 938, 941, 943, 944, 945, 946, 948, 952, 953, 962, 963, 964, 965, 966, 967, 968, 969, 971, 973, 975, 978, 995, 996, 999, 1004, 1005, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1023, 1024, 1031, 1032, 1034, 1035, 1036, 1040, 1050, 1055, 1057, 1058, 1065, 1067, 1071, 1083, 1084, 1086, 1106, 1110, 1113, 1114, 1115, 1118, 1120, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1139, 1140, 1147, 1151, 1152, 1153, 1155, 1157, 1165, 1166, 1167, 1169, 1181, 1191, 1192, 1193, 1194, 1195, 1197, 1199, 1200, 1204, 1205, 1206, 1207, 1209, 1211, 1213, 1214, 1215, 1217, 1222, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1245, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1269, 1271, 1280, 1283, 1284, 1288, 1291, 1294, 1296, 1298, 1299, 1300, 1319, 1322, 1323, 1339, 1343, 1349, 1350, 1352, 1353, 1354, 1361, 1365, 1369, 1372, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1393, 1395, 1396, 1397, 1398, 1413, 1416, 1417, 1419, 1426, 1427, 1432, 1433, 1435, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1472, 1474, 1475, 1476, 1478, 1480, 1482, 1483, 1484, 1599, 1603, 1604, 1607, 1614, 1615, 1619, 1630, 1640, 1641, 1642, 1644, 1647, 1648, 1649, 1651, 1652, 1654, 1655, 1659, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1687, 1690, 1691, 1693, 1696, 1697, 1698, 1703, 1704, 1705, 1709, 1715, 1722, 1726, 1731, 1744, 1753, 1754, 1755, 1758, 1761, 1767, 1775, 1779, 1780, 1785, 1788, 1790, 1791, 1792, 1793, 1795, 1801, 1808, 1812, 1818, 1819, 1827, 1831, 1833, 1837, 1847, 1848, 1849, 1851, 1852, 1859, 1860, 1861, 1862, 1863, 1868, 1869, 1870, 1875, 1878, 1880, 1883, 1884, 1886, 1888, 1892, 1895, 1897, 1898, 1899, 1901, 1904, 1905, 1907, 1908, 1913, 1915, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1926, 1931, 1933, 1935, 1936, 1937, 1938, 1939, 1942, 1943, 1944, 1945, 1946, 1948, 1950, 1952, 1953, 1954, 1956, 1957], "autocastmodel": 0, "nn": [0, 3, 5, 14, 20, 21, 23, 24, 27, 28, 41, 44, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 289, 530, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 781, 782, 803, 843, 848, 849, 850, 851, 853, 1010, 1013, 1067, 1123, 1132, 1133, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1203, 1204, 1205, 1209, 1210, 1211, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1598, 1607, 1608, 1609, 1610, 1616, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1640, 1652, 1663, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1788, 1812, 1851, 1852, 1869, 1870, 1871, 1872, 1876, 1888, 1889, 1893, 1898, 1901, 1905, 1907, 1908, 1909, 1912, 1915, 1916, 1917, 1919, 1921, 1924, 1933, 1935, 1938, 1943, 1946, 1947, 1950, 1955, 1956, 1957], "modul": [0, 1, 3, 5, 6, 8, 11, 13, 17, 21, 23, 25, 27, 28, 32, 34, 37, 40, 41, 44, 46, 47, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 477, 669, 675, 678, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 727, 728, 729, 734, 735, 736, 745, 750, 751, 752, 753, 754, 777, 778, 779, 780, 781, 782, 786, 788, 789, 791, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 827, 828, 829, 843, 846, 847, 848, 849, 850, 851, 853, 902, 903, 909, 921, 941, 1013, 1123, 1132, 1133, 1135, 1169, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1209, 1210, 1211, 1265, 1288, 1298, 1335, 1339, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1380, 1382, 1390, 1391, 1392, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1428, 1429, 1437, 1438, 1443, 1455, 1460, 1466, 1470, 1474, 1517, 1518, 1591, 1598, 1607, 1608, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1647, 1648, 1649, 1651, 1663, 1686, 1747, 1791, 1852, 1854, 1855, 1862, 1869, 1870, 1875, 1880, 1882, 1884, 1886, 1888, 1889, 1892, 1896, 1897, 1898, 1901, 1904, 1906, 1907, 1909, 1911, 1912, 1915, 1917, 1918, 1921, 1922, 1924, 1927, 1928, 1929, 1933, 1936, 1937, 1938, 1943, 1944, 1946, 1947, 1951, 1955, 1956, 1957, 1958], "def": [0, 1, 20, 21, 23, 24, 25, 29, 31, 32, 33, 37, 38, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 389, 781, 782, 850, 851, 879, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 941, 1071, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1133, 1134, 1135, 1169, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1204, 1205, 1208, 1209, 1210, 1211, 1427, 1428, 1429, 1437, 1438, 1476, 1576, 1598, 1607, 1619, 1652, 1662, 1663, 1791, 1862, 1869, 1871, 1873, 1874, 1878, 1888, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1905, 1907, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1924, 1925, 1926, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1955, 1956, 1957, 1958], "self": [0, 1, 9, 17, 20, 21, 23, 25, 31, 32, 37, 42, 44, 46, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 88, 130, 141, 144, 145, 146, 161, 163, 166, 169, 170, 171, 181, 182, 186, 187, 199, 207, 209, 223, 224, 231, 245, 246, 249, 250, 258, 277, 281, 288, 302, 304, 306, 308, 310, 312, 314, 316, 317, 319, 320, 321, 322, 324, 332, 368, 384, 389, 391, 392, 393, 444, 461, 471, 473, 486, 487, 488, 489, 502, 504, 506, 509, 512, 514, 526, 532, 533, 534, 535, 547, 549, 569, 570, 572, 573, 574, 576, 577, 593, 596, 597, 603, 606, 607, 609, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 850, 851, 907, 1123, 1124, 1133, 1164, 1192, 1193, 1194, 1197, 1198, 1199, 1200, 1204, 1205, 1209, 1210, 1211, 1335, 1339, 1372, 1426, 1427, 1428, 1429, 1433, 1437, 1438, 1454, 1456, 1466, 1472, 1474, 1556, 1579, 1598, 1616, 1617, 1619, 1625, 1627, 1640, 1649, 1663, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1712, 1733, 1871, 1872, 1873, 1874, 1878, 1884, 1887, 1888, 1892, 1894, 1895, 1896, 1899, 1901, 1905, 1910, 1912, 1916, 1917, 1919, 1924, 1930, 1943, 1950, 1952, 1955, 1956, 1957], "produc": [0, 7, 13, 20, 23, 25, 30, 32, 34, 37, 42, 44, 51, 52, 53, 54, 66, 79, 721, 727, 728, 729, 734, 735, 745, 753, 781, 782, 912, 932, 1006, 1098, 1099, 1100, 1118, 1128, 1129, 1135, 1147, 1205, 1209, 1210, 1213, 1229, 1230, 1233, 1240, 1241, 1252, 1257, 1291, 1294, 1295, 1296, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408, 1433, 1510, 1518, 1526, 1537, 1595, 1596, 1597, 1654, 1686, 1715, 1722, 1731, 1816, 1851, 1862, 1871, 1873, 1874, 1886, 1887, 1893, 1894, 1895, 1897, 1899, 1903, 1904, 1905, 1908, 1909, 1910, 1911, 1912, 1928, 1932, 1943, 1945, 1947, 1950, 1953, 1957], "after": [0, 1, 7, 9, 13, 20, 21, 23, 24, 25, 27, 28, 40, 42, 46, 53, 54, 55, 60, 61, 251, 749, 779, 846, 848, 850, 851, 882, 883, 886, 941, 948, 968, 970, 1006, 1013, 1066, 1124, 1179, 1194, 1198, 1249, 1265, 1288, 1305, 1331, 1364, 1379, 1412, 1427, 1430, 1470, 1472, 1474, 1491, 1526, 1598, 1601, 1607, 1619, 1621, 1625, 1627, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1697, 1699, 1755, 1812, 1837, 1852, 1854, 1864, 1869, 1873, 1874, 1884, 1886, 1892, 1893, 1894, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1907, 1908, 1912, 1915, 1916, 1918, 1919, 1924, 1925, 1926, 1927, 1929, 1931, 1933, 1942, 1944, 1947, 1948, 1950, 1951, 1953, 1955, 1956, 1957], "return": [0, 1, 2, 3, 5, 11, 12, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 42, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 110, 144, 146, 161, 163, 166, 169, 170, 171, 181, 182, 186, 187, 197, 199, 200, 207, 209, 210, 212, 223, 224, 231, 233, 245, 251, 258, 280, 288, 302, 310, 314, 316, 317, 319, 320, 321, 322, 324, 328, 330, 332, 343, 368, 384, 425, 435, 436, 437, 438, 439, 448, 462, 463, 464, 465, 466, 468, 473, 477, 485, 486, 487, 502, 504, 512, 514, 526, 532, 533, 545, 546, 547, 548, 549, 569, 570, 571, 572, 578, 592, 593, 596, 598, 602, 603, 606, 673, 681, 682, 684, 685, 686, 687, 688, 724, 755, 756, 759, 760, 764, 765, 766, 767, 770, 773, 780, 781, 782, 783, 803, 804, 805, 806, 825, 829, 830, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 906, 907, 908, 910, 911, 912, 919, 920, 922, 925, 927, 929, 930, 931, 932, 933, 934, 935, 936, 938, 940, 941, 942, 943, 944, 947, 952, 953, 955, 956, 957, 959, 962, 963, 964, 965, 967, 968, 970, 971, 973, 977, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1061, 1067, 1068, 1069, 1070, 1071, 1072, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1142, 1143, 1144, 1145, 1146, 1150, 1151, 1152, 1154, 1155, 1156, 1160, 1164, 1168, 1169, 1170, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1190, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1218, 1219, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1302, 1303, 1305, 1306, 1312, 1317, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1331, 1335, 1336, 1337, 1338, 1343, 1344, 1361, 1362, 1363, 1364, 1371, 1375, 1376, 1387, 1393, 1394, 1417, 1418, 1419, 1420, 1421, 1422, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1441, 1455, 1458, 1459, 1460, 1461, 1462, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1496, 1498, 1499, 1500, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1569, 1571, 1572, 1574, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1589, 1591, 1592, 1593, 1594, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1611, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1662, 1663, 1664, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1705, 1706, 1708, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1751, 1752, 1753, 1754, 1760, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1789, 1791, 1792, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1811, 1812, 1815, 1816, 1817, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1853, 1854, 1856, 1858, 1860, 1861, 1862, 1865, 1867, 1868, 1869, 1871, 1875, 1878, 1882, 1883, 1884, 1886, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1955, 1956, 1957, 1958, 1959, 1960], "disabl": [0, 2, 5, 24, 29, 46, 54, 799, 800, 941, 1013, 1067, 1071, 1123, 1169, 1194, 1196, 1209, 1210, 1427, 1433, 1466, 1474, 1576, 1607, 1608, 1649, 1652, 1760, 1761, 1764, 1791, 1870, 1873, 1880, 1893, 1896, 1897, 1898, 1899, 1903, 1908, 1909, 1912, 1917, 1923, 1928, 1935, 1946, 1951, 1954, 1957, 1959], "them": [0, 1, 3, 5, 7, 8, 9, 11, 13, 14, 20, 23, 25, 31, 32, 37, 40, 42, 44, 46, 50, 51, 53, 54, 141, 212, 245, 723, 882, 888, 892, 923, 1013, 1052, 1055, 1067, 1194, 1215, 1224, 1235, 1249, 1261, 1265, 1293, 1325, 1351, 1370, 1427, 1460, 1462, 1582, 1626, 1641, 1644, 1687, 1795, 1797, 1815, 1852, 1854, 1869, 1873, 1874, 1881, 1882, 1884, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1903, 1904, 1905, 1909, 1911, 1915, 1917, 1918, 1919, 1920, 1924, 1925, 1926, 1928, 1929, 1933, 1934, 1937, 1945, 1946, 1947, 1950, 1953, 1954, 1956, 1957], "differ": [0, 1, 3, 5, 8, 13, 17, 20, 23, 25, 27, 28, 29, 31, 32, 33, 37, 38, 40, 41, 43, 46, 47, 50, 51, 52, 54, 187, 476, 482, 606, 669, 675, 678, 684, 685, 724, 749, 782, 785, 786, 811, 813, 814, 850, 851, 854, 868, 869, 897, 898, 909, 921, 922, 959, 1050, 1055, 1057, 1059, 1067, 1107, 1108, 1109, 1113, 1114, 1120, 1123, 1128, 1129, 1135, 1147, 1168, 1194, 1204, 1209, 1223, 1229, 1230, 1240, 1241, 1249, 1252, 1257, 1261, 1288, 1298, 1335, 1344, 1345, 1346, 1347, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1379, 1380, 1388, 1390, 1391, 1392, 1393, 1397, 1398, 1414, 1427, 1430, 1433, 1448, 1449, 1451, 1452, 1453, 1455, 1458, 1466, 1472, 1474, 1476, 1479, 1482, 1483, 1484, 1491, 1499, 1517, 1526, 1537, 1539, 1550, 1551, 1552, 1576, 1598, 1607, 1609, 1610, 1614, 1649, 1654, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1691, 1699, 1705, 1715, 1737, 1810, 1811, 1816, 1837, 1848, 1849, 1851, 1857, 1858, 1862, 1869, 1871, 1873, 1874, 1876, 1880, 1881, 1886, 1887, 1889, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1907, 1908, 1909, 1911, 1915, 1916, 1917, 1918, 1919, 1920, 1924, 1926, 1928, 1931, 1933, 1934, 1935, 1938, 1939, 1941, 1944, 1946, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1957], "caus": [0, 1, 2, 3, 5, 13, 17, 20, 23, 27, 33, 39, 40, 41, 51, 54, 71, 545, 606, 866, 869, 882, 944, 1120, 1205, 1209, 1229, 1230, 1257, 1312, 1537, 1538, 1595, 1598, 1607, 1653, 1668, 1755, 1766, 1812, 1851, 1871, 1874, 1886, 1895, 1897, 1899, 1901, 1907, 1909, 1911, 1912, 1916, 1919, 1920, 1926, 1928, 1931, 1946, 1948], "mismatch": [0, 23, 54, 72, 74, 869, 1195, 1667, 1668, 1873, 1893, 1898, 1899, 1901, 1912, 1935], "error": [0, 1, 5, 8, 13, 16, 17, 20, 21, 23, 24, 26, 29, 38, 40, 41, 44, 46, 49, 51, 53, 54, 55, 56, 69, 70, 71, 72, 74, 181, 212, 304, 306, 312, 314, 319, 534, 545, 603, 606, 669, 808, 854, 867, 869, 888, 890, 891, 892, 893, 894, 895, 896, 978, 1013, 1024, 1037, 1041, 1065, 1123, 1127, 1128, 1130, 1135, 1157, 1194, 1199, 1208, 1223, 1224, 1233, 1235, 1237, 1240, 1241, 1242, 1252, 1255, 1265, 1283, 1312, 1317, 1343, 1344, 1377, 1388, 1394, 1418, 1427, 1456, 1458, 1524, 1535, 1557, 1576, 1579, 1580, 1607, 1609, 1610, 1611, 1649, 1654, 1665, 1667, 1668, 1711, 1751, 1758, 1807, 1812, 1851, 1854, 1862, 1863, 1869, 1870, 1871, 1873, 1874, 1880, 1881, 1886, 1887, 1888, 1889, 1893, 1894, 1897, 1899, 1900, 1902, 1903, 1909, 1912, 1916, 1922, 1924, 1929, 1934, 1935, 1937, 1938, 1942, 1946, 1947, 1959], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 62, 63, 69, 70, 71, 72, 74, 88, 141, 145, 186, 197, 200, 245, 306, 310, 312, 435, 436, 437, 438, 439, 448, 461, 471, 485, 488, 506, 509, 526, 534, 569, 570, 572, 573, 574, 576, 577, 592, 596, 606, 669, 675, 678, 679, 680, 682, 684, 685, 686, 688, 724, 745, 749, 753, 768, 770, 774, 783, 784, 806, 809, 810, 811, 814, 843, 847, 850, 854, 863, 864, 865, 866, 867, 868, 869, 878, 880, 881, 882, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 909, 910, 912, 919, 921, 922, 923, 925, 929, 931, 932, 933, 934, 935, 936, 943, 949, 952, 953, 954, 958, 959, 967, 970, 971, 973, 975, 978, 980, 982, 984, 991, 1002, 1008, 1013, 1014, 1034, 1037, 1048, 1049, 1050, 1054, 1055, 1056, 1057, 1058, 1067, 1068, 1069, 1070, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1110, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1134, 1135, 1136, 1147, 1151, 1152, 1154, 1155, 1156, 1157, 1168, 1171, 1185, 1191, 1194, 1197, 1198, 1199, 1201, 1203, 1205, 1206, 1209, 1210, 1213, 1214, 1215, 1219, 1223, 1224, 1229, 1230, 1232, 1233, 1235, 1236, 1237, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1256, 1257, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1276, 1280, 1281, 1283, 1285, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1312, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1375, 1376, 1379, 1380, 1381, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1412, 1414, 1418, 1419, 1420, 1421, 1422, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1441, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1458, 1459, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1482, 1483, 1484, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1526, 1528, 1530, 1537, 1538, 1543, 1545, 1547, 1548, 1550, 1551, 1552, 1561, 1562, 1563, 1566, 1569, 1570, 1576, 1582, 1583, 1594, 1595, 1601, 1607, 1608, 1611, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1658, 1659, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1704, 1709, 1713, 1715, 1716, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1736, 1737, 1742, 1744, 1747, 1751, 1753, 1755, 1758, 1759, 1764, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1789, 1792, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1810, 1811, 1812, 1815, 1816, 1830, 1831, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1848, 1849, 1851, 1854, 1856, 1857, 1858, 1862, 1867, 1868, 1869, 1871, 1874, 1876, 1878, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1956, 1957, 1958, 1959], "so": [0, 1, 2, 3, 7, 9, 13, 16, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 40, 41, 43, 44, 46, 49, 50, 51, 53, 54, 326, 448, 485, 669, 848, 883, 888, 890, 891, 896, 938, 941, 969, 992, 1055, 1057, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1118, 1120, 1123, 1127, 1128, 1130, 1131, 1181, 1191, 1194, 1197, 1198, 1203, 1205, 1207, 1249, 1251, 1261, 1266, 1271, 1283, 1304, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1371, 1374, 1381, 1427, 1443, 1460, 1462, 1478, 1491, 1501, 1502, 1503, 1526, 1582, 1583, 1598, 1607, 1653, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1781, 1795, 1807, 1812, 1816, 1836, 1848, 1852, 1856, 1871, 1873, 1874, 1880, 1882, 1884, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1919, 1923, 1924, 1928, 1929, 1931, 1933, 1934, 1936, 1942, 1945, 1946, 1947, 1948, 1950, 1951, 1953, 1956, 1957, 1959], "cast": [0, 6, 21, 38, 46, 73, 326, 592, 593, 926, 1048, 1049, 1194, 1246, 1250, 1263, 1293, 1322, 1325, 1427, 1545, 1582, 1583, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1713, 1792, 1795, 1801, 1815, 1820, 1821, 1871, 1893, 1908, 1912, 1929, 1930, 1931], "back": [0, 1, 2, 13, 20, 21, 23, 25, 28, 29, 40, 46, 51, 54, 55, 60, 63, 724, 826, 897, 938, 941, 1087, 1124, 1195, 1207, 1259, 1265, 1473, 1611, 1612, 1797, 1869, 1871, 1874, 1894, 1899, 1900, 1907, 1908, 1909, 1912, 1915, 1916, 1919, 1924, 1928, 1942, 1947, 1949, 1950, 1958], "from": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 37, 38, 40, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 71, 79, 144, 145, 164, 187, 212, 213, 224, 249, 277, 304, 306, 310, 312, 368, 393, 438, 444, 461, 463, 464, 471, 476, 477, 482, 488, 502, 504, 506, 533, 535, 549, 569, 596, 597, 599, 606, 669, 701, 702, 703, 704, 705, 706, 709, 717, 718, 721, 724, 727, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 761, 762, 763, 770, 777, 778, 781, 782, 783, 786, 789, 804, 805, 806, 813, 815, 829, 843, 847, 849, 850, 851, 853, 854, 868, 869, 880, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 902, 903, 910, 911, 919, 920, 925, 926, 938, 969, 970, 973, 982, 983, 984, 1002, 1006, 1024, 1051, 1067, 1068, 1069, 1070, 1087, 1089, 1090, 1095, 1096, 1097, 1101, 1102, 1103, 1104, 1107, 1108, 1109, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1151, 1152, 1156, 1171, 1191, 1192, 1194, 1195, 1197, 1199, 1200, 1201, 1204, 1205, 1217, 1233, 1237, 1246, 1249, 1250, 1263, 1264, 1265, 1266, 1280, 1284, 1285, 1298, 1303, 1305, 1308, 1309, 1310, 1312, 1317, 1326, 1327, 1335, 1339, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1379, 1380, 1381, 1382, 1388, 1390, 1391, 1392, 1393, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1428, 1429, 1433, 1437, 1438, 1442, 1444, 1445, 1466, 1471, 1472, 1474, 1476, 1478, 1479, 1491, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1526, 1528, 1537, 1550, 1551, 1552, 1564, 1594, 1598, 1607, 1611, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1634, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1651, 1655, 1662, 1664, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1705, 1708, 1716, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1737, 1738, 1741, 1743, 1744, 1751, 1764, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1813, 1817, 1827, 1830, 1839, 1841, 1843, 1848, 1849, 1851, 1853, 1854, 1856, 1865, 1870, 1871, 1872, 1873, 1874, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1889, 1890, 1892, 1894, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1915, 1917, 1918, 1919, 1920, 1924, 1925, 1926, 1928, 1929, 1931, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1954, 1955, 1956, 1957, 1958, 1959], "alreadi": [0, 1, 11, 20, 21, 23, 24, 40, 41, 46, 53, 54, 186, 197, 200, 453, 476, 513, 569, 592, 593, 781, 829, 843, 847, 868, 978, 1004, 1194, 1203, 1265, 1427, 1602, 1607, 1640, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1846, 1848, 1854, 1869, 1871, 1881, 1883, 1887, 1888, 1893, 1894, 1897, 1899, 1902, 1907, 1912, 1915, 1916, 1919, 1925, 1926, 1928, 1930, 1932, 1942, 1946], "incur": [0, 5, 21, 23, 46, 931, 1907, 1924], "addit": [0, 1, 3, 5, 7, 9, 13, 14, 20, 23, 24, 25, 29, 34, 40, 41, 44, 46, 53, 54, 55, 63, 326, 502, 596, 738, 740, 741, 742, 743, 747, 749, 770, 784, 803, 848, 1024, 1191, 1194, 1198, 1203, 1208, 1335, 1346, 1347, 1348, 1358, 1359, 1360, 1371, 1378, 1379, 1381, 1388, 1391, 1392, 1399, 1406, 1407, 1408, 1412, 1413, 1414, 1415, 1417, 1423, 1424, 1425, 1427, 1433, 1435, 1460, 1462, 1466, 1470, 1472, 1474, 1476, 1497, 1504, 1505, 1506, 1543, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1759, 1848, 1849, 1860, 1871, 1873, 1874, 1880, 1884, 1887, 1888, 1889, 1894, 1896, 1897, 1899, 1900, 1904, 1907, 1908, 1911, 1912, 1913, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1928, 1932, 1935, 1942, 1945, 1947, 1953, 1954, 1957, 1959], "overhead": [0, 1, 3, 4, 8, 21, 23, 46, 770, 941, 1024, 1205, 1607, 1894, 1896, 1897, 1898, 1903, 1904, 1907, 1917, 1918, 1925, 1928, 1934, 1942, 1946, 1947, 1949, 1950, 1951], "here": [0, 1, 7, 8, 9, 14, 17, 20, 21, 23, 24, 29, 39, 41, 44, 48, 49, 50, 51, 53, 54, 72, 74, 569, 782, 783, 957, 976, 1067, 1084, 1086, 1087, 1092, 1093, 1094, 1096, 1097, 1102, 1104, 1123, 1133, 1192, 1205, 1345, 1346, 1347, 1358, 1359, 1360, 1390, 1391, 1392, 1435, 1466, 1526, 1528, 1616, 1683, 1686, 1697, 1759, 1784, 1869, 1871, 1873, 1874, 1876, 1887, 1888, 1889, 1893, 1894, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1911, 1912, 1915, 1916, 1917, 1919, 1922, 1928, 1932, 1933, 1935, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1957], "assum": [0, 11, 20, 23, 28, 29, 31, 33, 40, 41, 44, 46, 49, 52, 54, 806, 1050, 1085, 1088, 1090, 1098, 1099, 1100, 1103, 1185, 1191, 1192, 1195, 1209, 1229, 1230, 1232, 1239, 1248, 1251, 1254, 1256, 1266, 1350, 1419, 1479, 1510, 1576, 1607, 1616, 1619, 1644, 1687, 1688, 1693, 1694, 1695, 1698, 1700, 1701, 1705, 1817, 1837, 1839, 1854, 1869, 1871, 1873, 1874, 1887, 1894, 1897, 1899, 1900, 1902, 1904, 1907, 1908, 1912, 1915, 1916, 1917, 1924, 1925, 1926, 1928, 1944, 1945, 1953], "a_float32": 0, "rand": [0, 1, 17, 29, 44, 54, 326, 682, 688, 890, 891, 892, 893, 894, 895, 959, 1010, 1011, 1084, 1086, 1089, 1090, 1092, 1093, 1096, 1097, 1099, 1100, 1102, 1104, 1125, 1200, 1205, 1209, 1210, 1211, 1267, 1268, 1270, 1343, 1393, 1470, 1471, 1472, 1473, 1474, 1498, 1517, 1518, 1576, 1607, 1619, 1652, 1708, 1719, 1720, 1721, 1725, 1871, 1872, 1873, 1874, 1876, 1887, 1888, 1912, 1914, 1917, 1919, 1924, 1925, 1928, 1929, 1932, 1933, 1936, 1952, 1955], "8": [0, 1, 13, 19, 20, 21, 23, 29, 31, 44, 55, 60, 304, 306, 308, 312, 392, 393, 461, 502, 506, 549, 596, 606, 674, 675, 686, 687, 734, 735, 750, 752, 754, 762, 763, 809, 810, 811, 814, 893, 912, 920, 931, 934, 935, 939, 1010, 1011, 1046, 1050, 1065, 1070, 1083, 1099, 1100, 1106, 1107, 1110, 1117, 1147, 1156, 1157, 1217, 1246, 1249, 1250, 1251, 1259, 1261, 1264, 1265, 1326, 1327, 1332, 1333, 1334, 1336, 1337, 1338, 1351, 1362, 1397, 1423, 1424, 1430, 1432, 1434, 1441, 1442, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1466, 1470, 1471, 1472, 1473, 1474, 1478, 1502, 1505, 1508, 1564, 1569, 1574, 1575, 1576, 1654, 1655, 1662, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1691, 1699, 1704, 1708, 1712, 1732, 1742, 1743, 1744, 1751, 1759, 1764, 1771, 1774, 1779, 1785, 1789, 1796, 1798, 1799, 1804, 1812, 1816, 1826, 1831, 1832, 1833, 1835, 1837, 1846, 1851, 1856, 1863, 1871, 1875, 1881, 1897, 1899, 1910, 1912, 1914, 1916, 1917, 1918, 1919, 1922, 1924, 1928, 1929, 1931, 1932, 1934, 1944, 1950, 1957], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 933, 934, 1198, 1249, 1288, 1437, 1438, 1715, 1816, 1851, 1872, 1873, 1887, 1893, 1896, 1899, 1908, 1914, 1928, 1951, 1952], "list": [0, 1, 3, 5, 6, 7, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 31, 40, 42, 44, 46, 51, 53, 54, 55, 56, 60, 61, 62, 63, 70, 175, 232, 293, 435, 437, 439, 567, 572, 573, 574, 578, 608, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 781, 782, 787, 803, 804, 805, 806, 827, 843, 850, 868, 875, 876, 877, 923, 924, 927, 931, 935, 940, 941, 943, 947, 994, 1000, 1052, 1065, 1067, 1068, 1107, 1121, 1133, 1147, 1157, 1194, 1198, 1200, 1205, 1207, 1209, 1210, 1293, 1295, 1325, 1364, 1370, 1399, 1427, 1429, 1438, 1455, 1466, 1477, 1517, 1591, 1607, 1608, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1654, 1658, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1691, 1693, 1695, 1696, 1697, 1699, 1700, 1718, 1720, 1721, 1724, 1728, 1743, 1780, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1810, 1811, 1815, 1830, 1831, 1832, 1848, 1849, 1851, 1852, 1854, 1857, 1858, 1863, 1867, 1869, 1871, 1872, 1875, 1876, 1880, 1882, 1884, 1887, 1888, 1889, 1899, 1903, 1905, 1908, 1909, 1910, 1914, 1915, 1916, 1917, 1918, 1919, 1924, 1925, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1943, 1944, 1945, 1946, 1948, 1950, 1951, 1955, 1956, 1957, 1958, 1959], "No": [0, 9, 43, 53, 889, 1607, 1652, 1873, 1897, 1912, 1922, 1932, 1935, 1942], "manual": [0, 20, 23, 38, 40, 41, 43, 46, 54, 786, 827, 867, 896, 1156, 1198, 1343, 1344, 1363, 1431, 1432, 1434, 1455, 1474, 1498, 1499, 1509, 1561, 1619, 1640, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1871, 1874, 1886, 1893, 1897, 1899, 1900, 1901, 1902, 1905, 1911, 1912, 1919, 1920, 1933, 1942, 1944, 1945, 1954], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 13, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 40, 41, 46, 53, 54, 477, 829, 879, 889, 902, 903, 943, 954, 970, 985, 1012, 1025, 1067, 1113, 1114, 1135, 1194, 1224, 1364, 1427, 1474, 1476, 1526, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1735, 1781, 1817, 1862, 1869, 1884, 1886, 1888, 1897, 1899, 1900, 1901, 1902, 1907, 1912, 1916, 1919, 1924, 1926, 1935, 1936, 1942, 1946, 1948, 1950, 1953], "f_float16": 0, "g_float32": 0, "epoch": [0, 20, 33, 43, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1884, 1893, 1907, 1915, 1933], "eval": [0, 54, 803, 849, 850, 1133, 1194, 1198, 1203, 1209, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1433, 1466, 1474, 1615, 1874, 1882, 1905, 1912, 1919, 1938, 1958], "jit": [0, 11, 13, 1010, 1011, 1042, 1144, 1192, 1193, 1194, 1208, 1664, 1667, 1762, 1763, 1870, 1873, 1876, 1882, 1888, 1896, 1904, 1910, 1912, 1919, 1924, 1933, 1943, 1944, 1945, 1947, 1949], "trace": [0, 1, 5, 14, 17, 20, 21, 23, 33, 44, 55, 58, 59, 60, 61, 66, 669, 904, 905, 906, 941, 1067, 1197, 1205, 1206, 1210, 1266, 1308, 1309, 1310, 1668, 1853, 1870, 1872, 1873, 1874, 1876, 1880, 1894, 1897, 1898, 1910, 1914, 1916, 1933, 1939, 1943, 1945, 1946, 1949, 1950, 1951, 1953, 1957, 1959], "testmodel": 0, "__init__": [0, 1, 20, 21, 23, 29, 44, 54, 55, 60, 62, 63, 64, 850, 851, 1133, 1192, 1195, 1197, 1200, 1205, 1209, 1210, 1211, 1427, 1428, 1429, 1437, 1438, 1598, 1663, 1871, 1873, 1874, 1884, 1894, 1899, 1901, 1905, 1910, 1912, 1916, 1919, 1933, 1943, 1945, 1955, 1956, 1957], "input_s": [0, 723, 749, 750, 754, 1379, 1380, 1397, 1398, 1442, 1443, 1444, 1872], "num_class": [0, 1563, 1872, 1949], "super": [0, 9, 20, 21, 23, 25, 44, 54, 55, 60, 62, 63, 64, 850, 851, 1133, 1192, 1197, 1200, 1205, 1209, 1210, 1211, 1427, 1428, 1429, 1437, 1438, 1439, 1440, 1598, 1663, 1697, 1871, 1873, 1874, 1875, 1894, 1899, 1905, 1910, 1912, 1916, 1919, 1943, 1955, 1956, 1957], "fc1": [0, 21, 1598, 1917], "x": [0, 1, 3, 11, 13, 20, 21, 23, 29, 31, 37, 44, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 164, 245, 249, 277, 280, 302, 304, 306, 308, 312, 343, 368, 438, 473, 482, 488, 547, 549, 572, 596, 597, 606, 681, 747, 749, 759, 768, 769, 773, 774, 785, 788, 791, 809, 810, 850, 851, 867, 873, 875, 876, 877, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 923, 924, 925, 928, 929, 941, 952, 955, 958, 959, 1010, 1011, 1050, 1057, 1061, 1062, 1067, 1071, 1081, 1082, 1083, 1084, 1086, 1087, 1092, 1093, 1095, 1097, 1101, 1102, 1104, 1107, 1108, 1109, 1117, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1147, 1164, 1168, 1169, 1181, 1199, 1200, 1204, 1205, 1208, 1209, 1210, 1211, 1215, 1225, 1238, 1239, 1243, 1246, 1250, 1254, 1256, 1259, 1260, 1261, 1262, 1263, 1266, 1271, 1272, 1273, 1281, 1284, 1287, 1288, 1295, 1321, 1322, 1326, 1327, 1333, 1334, 1343, 1344, 1345, 1346, 1347, 1349, 1361, 1363, 1369, 1375, 1376, 1377, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1398, 1399, 1413, 1416, 1417, 1418, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1442, 1444, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1459, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1475, 1476, 1479, 1500, 1524, 1526, 1530, 1531, 1537, 1541, 1545, 1556, 1561, 1566, 1570, 1572, 1577, 1578, 1579, 1583, 1584, 1586, 1587, 1588, 1595, 1598, 1615, 1617, 1619, 1640, 1641, 1642, 1643, 1644, 1649, 1652, 1653, 1654, 1662, 1663, 1667, 1670, 1691, 1705, 1706, 1717, 1719, 1733, 1736, 1737, 1739, 1740, 1742, 1743, 1747, 1751, 1761, 1789, 1793, 1807, 1810, 1811, 1812, 1818, 1819, 1825, 1831, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1849, 1850, 1856, 1857, 1858, 1860, 1861, 1862, 1865, 1869, 1871, 1872, 1873, 1874, 1875, 1886, 1887, 1888, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1911, 1912, 1916, 1919, 1924, 1928, 1929, 1931, 1933, 1934, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1955, 1957], "2": [0, 1, 3, 11, 13, 17, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 33, 38, 40, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 164, 182, 199, 216, 224, 225, 245, 251, 304, 306, 308, 312, 326, 368, 392, 393, 435, 436, 437, 438, 439, 471, 477, 482, 485, 488, 502, 504, 506, 533, 547, 549, 569, 570, 572, 573, 574, 576, 577, 578, 596, 606, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 682, 684, 686, 687, 688, 723, 727, 728, 729, 730, 731, 732, 734, 735, 744, 747, 749, 751, 782, 785, 809, 854, 863, 864, 865, 866, 867, 868, 869, 873, 875, 876, 877, 879, 888, 890, 891, 892, 893, 894, 895, 902, 903, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 927, 928, 929, 931, 932, 933, 934, 935, 939, 940, 949, 952, 953, 954, 955, 958, 959, 967, 1041, 1046, 1049, 1050, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1128, 1129, 1130, 1134, 1135, 1136, 1137, 1138, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1168, 1169, 1171, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1197, 1198, 1203, 1205, 1207, 1209, 1213, 1214, 1215, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1270, 1271, 1272, 1273, 1280, 1282, 1283, 1284, 1285, 1287, 1288, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1312, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1331, 1334, 1339, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1377, 1378, 1379, 1381, 1383, 1384, 1385, 1386, 1388, 1395, 1396, 1397, 1398, 1399, 1413, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1432, 1433, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1491, 1493, 1498, 1499, 1510, 1517, 1518, 1524, 1526, 1528, 1530, 1537, 1543, 1550, 1551, 1552, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1576, 1592, 1598, 1607, 1611, 1614, 1615, 1619, 1631, 1632, 1633, 1634, 1636, 1637, 1640, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1662, 1663, 1664, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1698, 1699, 1700, 1704, 1705, 1706, 1708, 1709, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1726, 1728, 1730, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1747, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1785, 1789, 1790, 1791, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1810, 1811, 1812, 1813, 1815, 1816, 1817, 1818, 1819, 1825, 1826, 1828, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1872, 1873, 1874, 1875, 1881, 1882, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1902, 1903, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1921, 1924, 1925, 1926, 1928, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1951, 1952, 1955, 1956], "we": [0, 1, 2, 5, 7, 8, 9, 11, 13, 14, 20, 21, 23, 25, 27, 28, 29, 30, 31, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 73, 485, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 768, 774, 777, 778, 780, 782, 783, 827, 846, 848, 850, 851, 854, 882, 883, 886, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 910, 919, 941, 967, 1024, 1067, 1085, 1087, 1088, 1089, 1090, 1097, 1102, 1103, 1104, 1118, 1127, 1128, 1130, 1135, 1147, 1151, 1152, 1168, 1192, 1194, 1197, 1198, 1205, 1207, 1209, 1249, 1252, 1257, 1265, 1266, 1285, 1317, 1335, 1343, 1344, 1393, 1427, 1479, 1526, 1528, 1537, 1595, 1602, 1607, 1614, 1616, 1625, 1627, 1630, 1634, 1635, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1688, 1694, 1699, 1716, 1759, 1852, 1862, 1869, 1870, 1871, 1873, 1874, 1876, 1878, 1881, 1882, 1886, 1887, 1888, 1889, 1894, 1897, 1899, 1900, 1901, 1902, 1903, 1905, 1907, 1908, 1911, 1912, 1915, 1916, 1917, 1919, 1920, 1922, 1924, 1925, 1926, 1928, 1931, 1933, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957], "suggest": [0, 9, 21, 44, 47, 69, 70, 72, 74, 1361, 1869, 1876, 1893, 1894, 1901, 1928, 1951, 1957], "issu": [0, 2, 3, 5, 9, 10, 11, 13, 19, 20, 23, 30, 46, 47, 49, 51, 54, 55, 71, 72, 890, 896, 941, 943, 944, 1118, 1129, 1131, 1135, 1239, 1283, 1295, 1393, 1397, 1423, 1424, 1425, 1442, 1479, 1537, 1538, 1651, 1755, 1862, 1869, 1870, 1874, 1876, 1881, 1886, 1887, 1888, 1889, 1893, 1894, 1897, 1899, 1907, 1908, 1909, 1911, 1912, 1916, 1919, 1920, 1924, 1928, 1929, 1931, 1942, 1947, 1948, 1957, 1959], "http": [0, 2, 3, 4, 7, 9, 13, 14, 21, 22, 23, 28, 29, 40, 41, 44, 46, 141, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 781, 782, 882, 941, 1067, 1124, 1266, 1295, 1350, 1397, 1423, 1424, 1425, 1445, 1446, 1470, 1473, 1476, 1651, 1705, 1722, 1755, 1759, 1780, 1851, 1854, 1869, 1875, 1883, 1885, 1894, 1895, 1899, 1902, 1903, 1905, 1909, 1911, 1912, 1916, 1918, 1931, 1933, 1949, 1951, 1956, 1960], "github": [0, 7, 9, 13, 22, 23, 36, 46, 47, 51, 141, 781, 782, 882, 896, 1124, 1295, 1423, 1424, 1425, 1470, 1651, 1691, 1755, 1854, 1869, 1876, 1881, 1899, 1902, 1909, 1912, 1918, 1919, 1928, 1929, 1931, 1947, 1951, 1956], "com": [0, 7, 13, 22, 23, 39, 41, 46, 141, 781, 782, 882, 1124, 1295, 1423, 1424, 1425, 1470, 1651, 1755, 1851, 1854, 1869, 1883, 1885, 1899, 1902, 1903, 1909, 1911, 1912, 1918, 1931, 1951, 1956], "pytorch": [0, 1, 2, 3, 4, 5, 11, 12, 13, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 40, 41, 44, 46, 47, 50, 52, 54, 55, 69, 70, 71, 72, 73, 74, 76, 77, 141, 502, 572, 669, 687, 719, 720, 721, 722, 734, 735, 745, 749, 750, 751, 752, 753, 754, 781, 782, 799, 800, 801, 802, 869, 882, 926, 931, 932, 941, 942, 967, 992, 993, 1004, 1009, 1067, 1112, 1118, 1124, 1125, 1129, 1134, 1135, 1140, 1180, 1181, 1204, 1224, 1230, 1235, 1237, 1238, 1239, 1242, 1255, 1264, 1280, 1283, 1284, 1295, 1343, 1344, 1350, 1379, 1393, 1423, 1424, 1425, 1470, 1499, 1576, 1607, 1640, 1648, 1649, 1651, 1654, 1662, 1668, 1715, 1747, 1755, 1756, 1766, 1812, 1816, 1839, 1851, 1854, 1862, 1869, 1873, 1874, 1878, 1880, 1881, 1883, 1884, 1888, 1889, 1890, 1895, 1896, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1915, 1916, 1918, 1919, 1920, 1921, 1924, 1925, 1928, 1929, 1931, 1932, 1933, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1958, 1959, 1960], "75956": 0, "_c": [0, 20, 21, 23, 53, 890, 896, 1193, 1205, 1664, 1872, 1874, 1884, 1897, 1904, 1908, 1911, 1912, 1924], "_jit_set_autocast_mod": 0, "fals": [0, 1, 3, 5, 13, 20, 21, 23, 24, 25, 27, 29, 31, 44, 46, 49, 54, 55, 60, 62, 63, 103, 104, 105, 106, 107, 109, 125, 126, 127, 141, 172, 173, 174, 187, 200, 251, 292, 309, 310, 312, 319, 323, 326, 327, 329, 333, 334, 335, 342, 345, 383, 387, 398, 400, 401, 402, 405, 411, 419, 420, 421, 422, 435, 436, 437, 438, 439, 443, 448, 450, 460, 461, 469, 484, 485, 493, 506, 531, 544, 545, 554, 569, 583, 592, 598, 599, 604, 606, 669, 682, 683, 684, 685, 686, 688, 701, 702, 703, 704, 705, 706, 723, 724, 734, 735, 740, 741, 742, 744, 747, 749, 757, 758, 765, 767, 768, 769, 771, 772, 774, 786, 803, 808, 809, 810, 811, 813, 814, 815, 827, 828, 846, 847, 852, 854, 863, 864, 865, 869, 882, 883, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 906, 910, 913, 916, 918, 919, 925, 926, 932, 933, 934, 940, 941, 952, 970, 1008, 1013, 1025, 1067, 1068, 1069, 1070, 1072, 1073, 1080, 1084, 1085, 1086, 1087, 1092, 1093, 1098, 1099, 1100, 1102, 1103, 1104, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1129, 1130, 1132, 1134, 1136, 1138, 1150, 1151, 1152, 1155, 1156, 1169, 1179, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1199, 1200, 1201, 1209, 1210, 1211, 1213, 1215, 1218, 1223, 1224, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1248, 1250, 1251, 1254, 1255, 1256, 1257, 1258, 1263, 1264, 1265, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1285, 1287, 1291, 1293, 1294, 1296, 1299, 1305, 1308, 1309, 1317, 1322, 1323, 1324, 1325, 1328, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1361, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1375, 1376, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1412, 1413, 1414, 1418, 1419, 1420, 1421, 1422, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1436, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1454, 1456, 1458, 1459, 1466, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1479, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1521, 1522, 1523, 1526, 1528, 1530, 1531, 1532, 1537, 1538, 1541, 1547, 1548, 1550, 1551, 1552, 1556, 1561, 1565, 1569, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1589, 1592, 1593, 1595, 1601, 1607, 1609, 1611, 1614, 1616, 1619, 1620, 1632, 1641, 1642, 1643, 1644, 1646, 1649, 1652, 1653, 1654, 1658, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1713, 1715, 1716, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1739, 1740, 1747, 1751, 1759, 1760, 1761, 1764, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1789, 1798, 1799, 1800, 1801, 1802, 1803, 1810, 1811, 1812, 1815, 1816, 1830, 1834, 1839, 1848, 1851, 1854, 1856, 1857, 1858, 1865, 1867, 1868, 1869, 1871, 1872, 1873, 1874, 1880, 1881, 1882, 1883, 1886, 1888, 1889, 1893, 1894, 1897, 1898, 1899, 1901, 1905, 1908, 1909, 1912, 1913, 1916, 1917, 1918, 1920, 1923, 1924, 1928, 1929, 1930, 1932, 1933, 1935, 1936, 1938, 1942, 1947, 1950, 1952, 1953, 1956, 1957, 1958], "randn": [0, 1, 11, 23, 29, 48, 50, 51, 52, 54, 55, 57, 62, 63, 280, 302, 473, 533, 569, 573, 574, 575, 576, 577, 578, 606, 672, 673, 674, 675, 676, 677, 678, 679, 684, 685, 688, 709, 717, 718, 723, 727, 728, 729, 730, 731, 732, 745, 747, 749, 750, 751, 752, 753, 754, 761, 762, 763, 850, 851, 863, 864, 865, 867, 870, 871, 872, 873, 874, 909, 921, 928, 930, 931, 932, 933, 934, 936, 954, 955, 956, 957, 958, 967, 1046, 1047, 1048, 1049, 1054, 1055, 1056, 1057, 1061, 1067, 1081, 1082, 1111, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1164, 1168, 1171, 1205, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1247, 1248, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1269, 1273, 1274, 1281, 1283, 1284, 1285, 1287, 1288, 1291, 1293, 1294, 1296, 1298, 1299, 1300, 1301, 1315, 1316, 1319, 1329, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1453, 1454, 1456, 1457, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1475, 1477, 1478, 1482, 1483, 1484, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1521, 1522, 1528, 1561, 1567, 1568, 1657, 1662, 1663, 1706, 1711, 1712, 1713, 1715, 1716, 1729, 1733, 1734, 1746, 1782, 1784, 1789, 1794, 1797, 1805, 1806, 1815, 1816, 1825, 1828, 1829, 1832, 1836, 1839, 1840, 1842, 1845, 1847, 1851, 1860, 1861, 1862, 1865, 1872, 1873, 1874, 1876, 1887, 1888, 1889, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1905, 1909, 1910, 1912, 1914, 1916, 1919, 1924, 1928, 1929, 1931, 1933, 1936, 1938, 1942, 1943, 1944, 1947, 1949, 1950, 1952, 1955, 1957], "freez": [0, 46, 1194, 1203, 1370, 1371, 1427, 1894], "_": [0, 1, 3, 20, 21, 23, 24, 27, 33, 52, 54, 670, 672, 673, 687, 854, 870, 871, 872, 873, 874, 883, 889, 911, 930, 953, 954, 956, 957, 959, 1111, 1116, 1130, 1134, 1160, 1214, 1222, 1273, 1281, 1345, 1346, 1347, 1390, 1391, 1392, 1466, 1607, 1615, 1648, 1683, 1685, 1705, 1728, 1731, 1734, 1746, 1761, 1767, 1769, 1775, 1782, 1784, 1805, 1816, 1828, 1829, 1894, 1897, 1900, 1901, 1905, 1911, 1915, 1916, 1918, 1929, 1943, 1944, 1950, 1951, 1955, 1957], "3": [0, 1, 3, 4, 6, 9, 11, 17, 18, 20, 21, 23, 25, 27, 29, 30, 31, 33, 38, 40, 44, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 182, 199, 224, 245, 251, 280, 304, 306, 308, 312, 392, 393, 435, 436, 437, 438, 439, 461, 477, 482, 485, 488, 502, 504, 506, 512, 526, 533, 547, 549, 570, 572, 573, 574, 576, 577, 596, 606, 669, 670, 674, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 688, 723, 727, 728, 729, 730, 731, 732, 735, 737, 746, 749, 750, 751, 752, 754, 761, 762, 763, 774, 782, 813, 850, 851, 854, 864, 865, 867, 868, 869, 876, 877, 890, 891, 892, 893, 894, 895, 909, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 927, 928, 929, 931, 932, 933, 934, 935, 939, 940, 949, 952, 953, 958, 959, 967, 1010, 1011, 1013, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1080, 1083, 1088, 1091, 1095, 1101, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1125, 1130, 1131, 1133, 1135, 1136, 1137, 1138, 1147, 1150, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1168, 1169, 1171, 1179, 1181, 1183, 1185, 1194, 1198, 1200, 1203, 1205, 1209, 1210, 1214, 1215, 1216, 1217, 1218, 1219, 1223, 1225, 1226, 1227, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1271, 1274, 1276, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1340, 1341, 1342, 1343, 1344, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1363, 1370, 1371, 1374, 1375, 1376, 1377, 1379, 1380, 1382, 1384, 1385, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1430, 1432, 1434, 1439, 1440, 1442, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1460, 1461, 1462, 1466, 1474, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1493, 1498, 1499, 1502, 1503, 1505, 1506, 1509, 1517, 1518, 1521, 1522, 1524, 1526, 1530, 1531, 1537, 1545, 1561, 1563, 1564, 1567, 1568, 1574, 1575, 1582, 1583, 1595, 1607, 1615, 1629, 1631, 1633, 1634, 1635, 1636, 1640, 1642, 1643, 1644, 1645, 1648, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1698, 1700, 1704, 1706, 1708, 1712, 1713, 1715, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1728, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1747, 1751, 1755, 1756, 1757, 1764, 1767, 1769, 1771, 1773, 1774, 1775, 1779, 1780, 1781, 1789, 1791, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1815, 1816, 1818, 1819, 1825, 1826, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1856, 1859, 1862, 1863, 1864, 1865, 1867, 1868, 1871, 1872, 1873, 1874, 1875, 1881, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1905, 1906, 1910, 1911, 1912, 1915, 1916, 1919, 1921, 1924, 1925, 1926, 1928, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1942, 1944, 1947, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957], "bug": [0, 13, 17, 23, 54, 1127, 1128, 1130, 1283, 1893, 1907, 1928, 1947, 1957], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 53, 54, 55, 57, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 110, 141, 145, 186, 187, 197, 200, 212, 213, 214, 246, 251, 280, 281, 304, 312, 314, 326, 328, 331, 343, 435, 436, 437, 438, 439, 448, 476, 477, 482, 484, 485, 486, 487, 488, 489, 492, 493, 502, 504, 506, 513, 545, 555, 572, 573, 574, 576, 577, 578, 592, 593, 603, 606, 607, 669, 673, 675, 678, 682, 683, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 724, 725, 726, 733, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748, 749, 764, 765, 766, 767, 768, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 791, 799, 800, 801, 802, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 843, 848, 850, 851, 863, 864, 865, 866, 867, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 906, 909, 912, 914, 917, 921, 922, 925, 929, 931, 932, 935, 936, 938, 941, 943, 944, 945, 946, 948, 952, 953, 955, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 975, 978, 989, 991, 994, 995, 996, 998, 999, 1002, 1003, 1004, 1005, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1020, 1023, 1024, 1025, 1031, 1032, 1034, 1035, 1036, 1040, 1041, 1042, 1048, 1049, 1050, 1055, 1057, 1058, 1062, 1065, 1066, 1067, 1071, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1115, 1118, 1120, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1137, 1139, 1140, 1141, 1147, 1151, 1157, 1159, 1169, 1181, 1191, 1192, 1194, 1195, 1197, 1199, 1200, 1201, 1203, 1204, 1205, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1269, 1271, 1274, 1283, 1284, 1288, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1305, 1308, 1309, 1319, 1322, 1323, 1324, 1325, 1327, 1335, 1339, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1375, 1376, 1379, 1380, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1412, 1414, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1433, 1434, 1437, 1439, 1442, 1443, 1455, 1458, 1460, 1463, 1466, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 1481, 1491, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1526, 1528, 1530, 1537, 1543, 1545, 1550, 1551, 1552, 1562, 1564, 1566, 1576, 1582, 1583, 1591, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1651, 1652, 1654, 1655, 1659, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1694, 1695, 1697, 1699, 1701, 1703, 1704, 1705, 1709, 1713, 1715, 1722, 1726, 1731, 1735, 1737, 1744, 1751, 1753, 1754, 1755, 1757, 1758, 1759, 1761, 1764, 1766, 1767, 1785, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1808, 1810, 1811, 1812, 1815, 1816, 1818, 1819, 1825, 1827, 1831, 1833, 1837, 1839, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960], "what": [0, 1, 3, 5, 7, 8, 9, 23, 28, 29, 33, 37, 38, 44, 46, 48, 50, 51, 54, 55, 881, 1128, 1209, 1210, 1283, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1421, 1422, 1455, 1478, 1550, 1551, 1552, 1576, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1716, 1869, 1870, 1871, 1873, 1874, 1887, 1897, 1899, 1900, 1902, 1905, 1907, 1912, 1915, 1918, 1919, 1924, 1925, 1928, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1957, 1959], "observ": [0, 21, 31, 40, 44, 745, 778, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 797, 798, 800, 802, 804, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 848, 850, 851, 853, 955, 959, 1207, 1295, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1387, 1390, 1391, 1392, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1466, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1893, 1894, 1897, 1898, 1904, 1907, 1920, 1938, 1941, 1942, 1947, 1955, 1957, 1959], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 14, 21, 23, 29, 32, 35, 36, 40, 41, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 68, 73, 245, 246, 487, 502, 607, 678, 719, 720, 721, 722, 723, 724, 730, 731, 732, 734, 735, 745, 750, 751, 752, 753, 754, 850, 851, 881, 883, 884, 885, 890, 892, 893, 896, 923, 1050, 1123, 1127, 1128, 1129, 1130, 1131, 1135, 1194, 1257, 1288, 1298, 1350, 1358, 1393, 1427, 1526, 1537, 1538, 1543, 1564, 1576, 1594, 1607, 1648, 1649, 1651, 1672, 1673, 1693, 1755, 1862, 1876, 1881, 1887, 1888, 1889, 1890, 1893, 1894, 1899, 1900, 1903, 1908, 1909, 1911, 1912, 1915, 1916, 1919, 1922, 1924, 1925, 1928, 1929, 1931, 1932, 1933, 1935, 1943, 1946, 1947, 1954, 1957], "file": [0, 1, 3, 6, 7, 9, 11, 13, 17, 20, 25, 31, 33, 38, 40, 42, 49, 51, 54, 890, 896, 904, 905, 969, 1006, 1127, 1128, 1130, 1131, 1169, 1194, 1201, 1204, 1265, 1662, 1667, 1747, 1791, 1869, 1871, 1874, 1875, 1876, 1883, 1887, 1888, 1889, 1894, 1897, 1899, 1904, 1907, 1909, 1910, 1911, 1912, 1918, 1922, 1925, 1928, 1930, 1933, 1943, 1945, 1947, 1949, 1951, 1954, 1955, 1957, 1959], "subregion": 0, "nest": [0, 1, 5, 13, 25, 44, 46, 54, 55, 58, 62, 63, 578, 782, 804, 806, 883, 892, 1028, 1029, 1125, 1135, 1194, 1197, 1209, 1427, 1433, 1473, 1474, 1662, 1668, 1862, 1870, 1900, 1912, 1918, 1924], "local": [0, 23, 25, 27, 28, 31, 38, 40, 41, 42, 43, 46, 54, 1010, 1071, 1124, 1169, 1194, 1266, 1366, 1367, 1368, 1372, 1374, 1415, 1427, 1478, 1520, 1544, 1594, 1607, 1608, 1652, 1761, 1791, 1869, 1870, 1873, 1886, 1893, 1897, 1898, 1901, 1912, 1916, 1917, 1921, 1924, 1925, 1926, 1933, 1944, 1947, 1950, 1957, 1959], "want": [0, 1, 7, 8, 9, 13, 20, 23, 28, 29, 37, 44, 46, 48, 49, 50, 51, 53, 54, 55, 438, 485, 488, 770, 780, 827, 1006, 1123, 1124, 1206, 1209, 1210, 1295, 1375, 1376, 1479, 1521, 1522, 1537, 1595, 1607, 1608, 1649, 1652, 1672, 1673, 1686, 1747, 1854, 1869, 1878, 1881, 1893, 1894, 1896, 1897, 1899, 1900, 1902, 1905, 1912, 1915, 1916, 1919, 1928, 1933, 1934, 1937, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1953, 1956], "forc": [0, 1, 13, 17, 46, 448, 869, 941, 1006, 1197, 1208, 1212, 1766, 1869, 1871, 1874, 1893, 1897, 1933, 1936, 1942, 1944], "particular": [0, 3, 7, 20, 25, 31, 37, 40, 41, 46, 54, 55, 60, 63, 549, 669, 850, 851, 1041, 1135, 1194, 1288, 1364, 1427, 1662, 1862, 1871, 1873, 1881, 1889, 1897, 1899, 1901, 1904, 1905, 1908, 1912, 1915, 1928, 1930, 1936, 1942, 1946, 1947, 1948, 1957, 1958, 1959], "give": [0, 3, 4, 7, 9, 17, 20, 21, 25, 27, 39, 44, 46, 54, 897, 898, 959, 1085, 1087, 1088, 1090, 1094, 1103, 1127, 1128, 1129, 1207, 1223, 1230, 1355, 1356, 1357, 1432, 1478, 1479, 1614, 1653, 1672, 1673, 1812, 1851, 1869, 1871, 1886, 1888, 1892, 1894, 1897, 1899, 1900, 1902, 1903, 1905, 1909, 1912, 1915, 1917, 1928, 1942, 1945, 1946, 1954, 1957, 1958], "explicit": [0, 8, 23, 44, 46, 50, 54, 1002, 1147, 1181, 1538, 1755, 1832, 1869, 1870, 1874, 1875, 1887, 1893, 1897, 1899, 1916, 1931, 1932, 1952], "control": [0, 1, 2, 13, 20, 21, 23, 24, 25, 29, 31, 36, 39, 40, 44, 55, 61, 63, 744, 788, 847, 850, 865, 869, 883, 910, 919, 1054, 1055, 1056, 1057, 1058, 1151, 1152, 1205, 1206, 1207, 1209, 1224, 1230, 1232, 1235, 1237, 1240, 1242, 1246, 1252, 1255, 1257, 1263, 1283, 1335, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1413, 1421, 1422, 1478, 1576, 1607, 1703, 1759, 1760, 1774, 1789, 1791, 1796, 1812, 1816, 1834, 1840, 1841, 1842, 1843, 1871, 1880, 1894, 1896, 1897, 1898, 1905, 1907, 1908, 1910, 1912, 1915, 1919, 1926, 1928, 1942, 1943, 1945, 1947, 1950], "execut": [0, 1, 2, 3, 4, 5, 7, 13, 14, 20, 23, 25, 27, 31, 32, 34, 41, 44, 46, 51, 53, 54, 68, 477, 902, 903, 941, 973, 984, 1045, 1124, 1194, 1195, 1197, 1209, 1210, 1265, 1308, 1309, 1364, 1427, 1433, 1470, 1471, 1472, 1473, 1474, 1601, 1603, 1607, 1762, 1870, 1871, 1873, 1875, 1882, 1893, 1895, 1896, 1901, 1904, 1905, 1907, 1909, 1911, 1912, 1918, 1919, 1924, 1925, 1928, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1956, 1957], "surround": [0, 54, 779, 1873, 1893, 1897], "ensur": [0, 1, 4, 6, 7, 9, 20, 23, 24, 25, 27, 31, 40, 41, 43, 46, 53, 54, 471, 476, 724, 808, 886, 888, 948, 1124, 1194, 1339, 1420, 1427, 1430, 1470, 1526, 1550, 1551, 1552, 1576, 1607, 1763, 1869, 1871, 1873, 1881, 1883, 1886, 1893, 1894, 1897, 1899, 1900, 1902, 1907, 1909, 1916, 1919, 1920, 1924, 1925, 1942, 1946, 1947, 1957], "necessari": [0, 1, 3, 9, 13, 20, 25, 31, 40, 41, 44, 46, 53, 79, 182, 199, 549, 578, 889, 1124, 1168, 1205, 1433, 1641, 1642, 1871, 1874, 1888, 1892, 1894, 1895, 1897, 1898, 1903, 1905, 1908, 1911, 1916, 1919, 1924, 1925, 1926, 1931, 1947, 1957], "becaus": [0, 1, 3, 4, 5, 7, 8, 13, 20, 21, 23, 27, 29, 33, 44, 46, 50, 51, 53, 54, 55, 62, 63, 485, 892, 897, 898, 1088, 1089, 1090, 1098, 1099, 1100, 1125, 1129, 1134, 1135, 1191, 1195, 1198, 1201, 1240, 1241, 1265, 1283, 1345, 1346, 1347, 1364, 1466, 1598, 1607, 1608, 1689, 1731, 1759, 1812, 1862, 1870, 1871, 1874, 1876, 1886, 1887, 1888, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1912, 1916, 1919, 1920, 1924, 1926, 1928, 1933, 1935, 1938, 1942, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1955, 1957, 1958, 1959], "wa": [0, 1, 3, 7, 17, 21, 23, 38, 39, 40, 41, 46, 53, 54, 326, 476, 485, 669, 774, 781, 843, 931, 942, 970, 971, 994, 998, 1013, 1026, 1045, 1087, 1135, 1191, 1200, 1209, 1224, 1235, 1237, 1241, 1265, 1283, 1305, 1317, 1397, 1423, 1424, 1425, 1456, 1479, 1491, 1526, 1579, 1595, 1607, 1608, 1643, 1691, 1697, 1810, 1811, 1848, 1849, 1857, 1858, 1862, 1869, 1871, 1873, 1874, 1875, 1878, 1880, 1881, 1884, 1886, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1904, 1906, 1912, 1915, 1917, 1919, 1923, 1924, 1928, 1935, 1946, 1947, 1950, 1956, 1959], "f_float32": 0, "re": [0, 1, 4, 5, 7, 13, 20, 23, 27, 30, 37, 40, 44, 46, 47, 48, 49, 50, 51, 53, 54, 921, 1118, 1194, 1198, 1427, 1582, 1608, 1643, 1742, 1795, 1871, 1874, 1881, 1886, 1893, 1894, 1897, 1899, 1900, 1902, 1907, 1919, 1925, 1926, 1929, 1942, 1944, 1945, 1946, 1947, 1956, 1957, 1958], "again": [0, 17, 20, 23, 27, 31, 44, 49, 1317, 1894, 1899, 1900, 1905, 1942, 1945, 1946, 1950, 1951], "regardless": [0, 20, 39, 46, 953, 1194, 1198, 1203, 1427, 1601, 1848, 1893, 1897, 1910, 1924, 1935, 1947], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 50, 51, 52, 53, 55, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 141, 182, 187, 199, 200, 212, 224, 246, 281, 302, 304, 306, 310, 312, 389, 391, 392, 393, 438, 448, 473, 476, 477, 482, 484, 487, 488, 502, 504, 506, 526, 533, 572, 592, 606, 607, 669, 673, 676, 677, 678, 679, 683, 684, 685, 686, 724, 737, 746, 749, 755, 756, 757, 758, 761, 762, 763, 768, 769, 771, 772, 774, 775, 776, 781, 782, 783, 784, 788, 791, 804, 806, 808, 809, 810, 811, 814, 816, 826, 827, 843, 848, 853, 866, 867, 869, 873, 874, 878, 879, 881, 882, 883, 884, 885, 890, 891, 893, 894, 895, 896, 897, 898, 902, 903, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 926, 927, 933, 940, 944, 946, 949, 955, 959, 969, 970, 976, 983, 999, 1010, 1011, 1013, 1014, 1015, 1024, 1037, 1038, 1039, 1050, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1067, 1068, 1072, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1115, 1117, 1118, 1119, 1120, 1121, 1124, 1127, 1130, 1133, 1134, 1135, 1138, 1139, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1160, 1164, 1168, 1171, 1191, 1194, 1197, 1199, 1201, 1204, 1205, 1207, 1209, 1210, 1213, 1214, 1218, 1219, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1243, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1260, 1263, 1265, 1266, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1294, 1302, 1303, 1307, 1308, 1309, 1312, 1313, 1317, 1323, 1326, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1370, 1371, 1372, 1374, 1375, 1376, 1379, 1380, 1381, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1427, 1430, 1432, 1434, 1441, 1442, 1444, 1445, 1455, 1456, 1458, 1466, 1469, 1470, 1475, 1476, 1478, 1479, 1491, 1494, 1495, 1509, 1510, 1517, 1518, 1519, 1521, 1522, 1525, 1526, 1528, 1537, 1538, 1550, 1551, 1552, 1561, 1564, 1576, 1579, 1595, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1633, 1634, 1637, 1643, 1647, 1648, 1651, 1653, 1654, 1655, 1662, 1664, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1705, 1706, 1709, 1712, 1715, 1720, 1721, 1722, 1724, 1726, 1728, 1733, 1735, 1737, 1739, 1740, 1742, 1744, 1747, 1754, 1755, 1756, 1757, 1759, 1764, 1765, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1791, 1793, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1810, 1811, 1812, 1816, 1817, 1826, 1832, 1833, 1834, 1836, 1837, 1840, 1841, 1842, 1843, 1850, 1851, 1854, 1856, 1857, 1858, 1860, 1862, 1865, 1869, 1871, 1872, 1873, 1875, 1876, 1880, 1881, 1882, 1883, 1884, 1886, 1887, 1888, 1889, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1959, 1960], "state": [0, 1, 2, 5, 9, 20, 23, 25, 27, 29, 31, 33, 40, 43, 44, 46, 54, 79, 737, 749, 825, 948, 999, 1000, 1004, 1009, 1013, 1023, 1038, 1039, 1124, 1133, 1146, 1194, 1197, 1209, 1266, 1306, 1313, 1379, 1380, 1397, 1398, 1427, 1442, 1444, 1474, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1662, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1722, 1765, 1791, 1854, 1870, 1882, 1893, 1894, 1897, 1898, 1899, 1903, 1907, 1910, 1912, 1915, 1923, 1937, 1942, 1944, 1945, 1946, 1947, 1953], "thread": [0, 1, 3, 20, 23, 25, 31, 42, 46, 53, 970, 1071, 1144, 1145, 1169, 1305, 1364, 1652, 1761, 1762, 1763, 1853, 1870, 1871, 1884, 1893, 1897, 1904, 1907, 1924, 1926, 1936, 1944], "must": [0, 3, 5, 6, 9, 13, 20, 23, 25, 27, 29, 30, 31, 38, 41, 42, 44, 46, 49, 51, 53, 54, 55, 62, 63, 79, 88, 130, 144, 145, 187, 251, 304, 306, 312, 389, 391, 393, 502, 533, 534, 555, 572, 573, 574, 576, 577, 606, 675, 676, 677, 678, 679, 680, 686, 737, 746, 761, 762, 763, 782, 804, 806, 848, 849, 867, 873, 878, 879, 880, 881, 883, 889, 891, 893, 894, 895, 897, 898, 909, 911, 913, 914, 915, 916, 917, 918, 921, 925, 928, 949, 959, 969, 970, 980, 981, 982, 984, 1010, 1011, 1013, 1055, 1057, 1058, 1059, 1061, 1064, 1065, 1067, 1088, 1089, 1090, 1095, 1097, 1098, 1099, 1100, 1101, 1108, 1109, 1118, 1120, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1147, 1156, 1157, 1160, 1171, 1191, 1194, 1204, 1209, 1216, 1219, 1248, 1249, 1250, 1251, 1257, 1259, 1260, 1263, 1266, 1284, 1286, 1287, 1288, 1294, 1301, 1317, 1323, 1326, 1327, 1331, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1371, 1374, 1375, 1376, 1381, 1382, 1388, 1420, 1427, 1430, 1431, 1433, 1458, 1464, 1479, 1499, 1508, 1510, 1518, 1537, 1550, 1551, 1552, 1570, 1607, 1630, 1640, 1641, 1647, 1649, 1654, 1662, 1663, 1695, 1697, 1704, 1705, 1708, 1709, 1712, 1720, 1721, 1742, 1751, 1754, 1763, 1779, 1790, 1793, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1817, 1827, 1831, 1832, 1836, 1841, 1843, 1847, 1851, 1854, 1859, 1860, 1862, 1863, 1865, 1871, 1872, 1873, 1874, 1881, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1903, 1907, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1935, 1942, 1943, 1945, 1947, 1948, 1950, 1956, 1957, 1958], "invok": [0, 2, 8, 14, 17, 20, 23, 38, 40, 41, 44, 53, 54, 890, 892, 1010, 1011, 1194, 1197, 1203, 1364, 1427, 1600, 1602, 1605, 1606, 1651, 1691, 1697, 1871, 1874, 1875, 1882, 1893, 1896, 1897, 1898, 1899, 1900, 1904, 1905, 1916, 1924, 1925, 1942, 1946, 1947, 1948, 1950], "affect": [0, 1, 2, 7, 9, 17, 19, 30, 46, 212, 213, 774, 971, 973, 1071, 1118, 1141, 1169, 1194, 1308, 1309, 1397, 1427, 1442, 1479, 1595, 1608, 1652, 1755, 1758, 1759, 1761, 1893, 1894, 1897, 1902, 1905, 1908, 1909, 1930, 1953, 1955], "dataparallel": [0, 23, 1591, 1607, 1643, 1870, 1894, 1901, 1907, 1924], "parallel": [0, 12, 13, 20, 21, 23, 24, 25, 27, 40, 41, 46, 1144, 1145, 1197, 1364, 1433, 1466, 1526, 1607, 1762, 1763, 1870, 1874, 1893, 1894, 1896, 1907, 1911, 1924, 1926, 1941, 1947], "distributeddataparallel": [0, 20, 21, 23, 24, 27, 28, 41, 46, 1364, 1466, 1907, 1917, 1924, 1947], "than": [0, 3, 4, 5, 6, 8, 9, 11, 13, 20, 21, 23, 24, 25, 29, 30, 31, 33, 37, 40, 41, 42, 44, 46, 51, 54, 55, 56, 63, 141, 245, 488, 534, 606, 669, 682, 688, 768, 774, 882, 891, 892, 906, 912, 923, 930, 931, 935, 936, 982, 1020, 1024, 1037, 1055, 1056, 1107, 1108, 1109, 1111, 1115, 1120, 1131, 1138, 1150, 1154, 1168, 1179, 1191, 1192, 1195, 1205, 1214, 1215, 1218, 1223, 1224, 1230, 1234, 1239, 1247, 1248, 1250, 1251, 1254, 1259, 1265, 1269, 1282, 1285, 1291, 1294, 1296, 1299, 1312, 1317, 1327, 1343, 1344, 1355, 1356, 1357, 1364, 1370, 1371, 1388, 1397, 1419, 1433, 1441, 1458, 1464, 1474, 1475, 1476, 1491, 1501, 1502, 1503, 1517, 1518, 1526, 1537, 1563, 1576, 1594, 1595, 1598, 1607, 1614, 1615, 1616, 1617, 1643, 1648, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1697, 1699, 1713, 1714, 1735, 1736, 1759, 1764, 1797, 1798, 1799, 1800, 1802, 1803, 1833, 1841, 1843, 1851, 1869, 1871, 1873, 1874, 1876, 1888, 1889, 1890, 1892, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1905, 1907, 1908, 1909, 1910, 1912, 1915, 1916, 1917, 1919, 1920, 1924, 1928, 1929, 1931, 1933, 1934, 1935, 1942, 1943, 1946, 1947, 1948, 1949, 1951, 1952, 1953, 1955, 1957, 1959], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 37, 40, 42, 43, 44, 46, 50, 51, 52, 53, 54, 55, 60, 62, 63, 69, 70, 71, 72, 74, 141, 212, 245, 343, 393, 476, 502, 509, 534, 549, 686, 737, 746, 782, 843, 844, 845, 869, 875, 881, 882, 883, 884, 886, 892, 912, 923, 925, 935, 939, 943, 966, 971, 973, 978, 980, 984, 1011, 1034, 1045, 1056, 1067, 1071, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1103, 1106, 1110, 1113, 1114, 1115, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1147, 1156, 1157, 1169, 1173, 1176, 1179, 1198, 1203, 1207, 1213, 1214, 1224, 1225, 1235, 1238, 1239, 1241, 1246, 1250, 1252, 1254, 1257, 1263, 1264, 1280, 1288, 1292, 1297, 1317, 1323, 1335, 1340, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1358, 1359, 1360, 1371, 1375, 1376, 1381, 1390, 1391, 1392, 1394, 1395, 1396, 1406, 1407, 1408, 1418, 1427, 1431, 1433, 1466, 1474, 1479, 1491, 1501, 1504, 1505, 1506, 1521, 1522, 1523, 1528, 1563, 1576, 1594, 1598, 1607, 1608, 1613, 1615, 1616, 1620, 1630, 1641, 1650, 1651, 1652, 1653, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1693, 1695, 1696, 1697, 1717, 1718, 1735, 1751, 1759, 1761, 1764, 1767, 1807, 1816, 1831, 1836, 1837, 1839, 1847, 1850, 1851, 1854, 1862, 1870, 1871, 1874, 1878, 1880, 1882, 1884, 1886, 1887, 1888, 1889, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1920, 1924, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1951, 1954, 1956, 1957, 1959], "gpu": [0, 1, 2, 3, 4, 7, 13, 16, 18, 20, 21, 25, 31, 41, 42, 46, 53, 187, 200, 280, 323, 592, 749, 941, 975, 976, 979, 980, 981, 982, 983, 984, 990, 991, 992, 999, 1005, 1006, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1030, 1031, 1032, 1033, 1034, 1035, 1038, 1044, 1045, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1115, 1194, 1203, 1240, 1265, 1294, 1302, 1303, 1304, 1308, 1309, 1335, 1364, 1379, 1397, 1427, 1442, 1443, 1466, 1591, 1607, 1640, 1816, 1870, 1871, 1882, 1885, 1897, 1899, 1903, 1905, 1906, 1908, 1909, 1911, 1919, 1924, 1928, 1930, 1934, 1936, 1939, 1942, 1944, 1946, 1949, 1954, 1955, 1957, 1959], "per": [0, 13, 20, 21, 23, 24, 25, 27, 28, 30, 31, 33, 39, 41, 42, 46, 47, 52, 462, 463, 464, 723, 724, 790, 797, 808, 811, 814, 822, 834, 842, 881, 890, 892, 941, 974, 1050, 1081, 1125, 1135, 1266, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1364, 1371, 1382, 1387, 1390, 1391, 1392, 1393, 1394, 1399, 1418, 1419, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1458, 1459, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1607, 1651, 1655, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1705, 1717, 1764, 1766, 1817, 1833, 1837, 1854, 1862, 1884, 1888, 1890, 1896, 1897, 1898, 1900, 1904, 1917, 1919, 1920, 1922, 1925, 1928, 1933, 1945, 1959], "process": [0, 1, 3, 11, 13, 21, 23, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 46, 54, 66, 67, 68, 71, 73, 970, 1006, 1012, 1037, 1194, 1204, 1266, 1303, 1312, 1343, 1344, 1361, 1363, 1370, 1371, 1387, 1394, 1418, 1419, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1466, 1470, 1472, 1474, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1607, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1694, 1700, 1766, 1780, 1854, 1869, 1870, 1871, 1884, 1886, 1887, 1888, 1894, 1896, 1897, 1898, 1899, 1904, 1905, 1907, 1909, 1911, 1912, 1916, 1917, 1918, 1919, 1922, 1924, 1926, 1928, 1930, 1937, 1941, 1945, 1947, 1950, 1955, 1957], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 16, 23, 24, 25, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 46, 47, 51, 54, 55, 62, 63, 68, 110, 141, 343, 435, 436, 437, 438, 439, 476, 576, 577, 810, 850, 851, 882, 896, 941, 968, 970, 971, 973, 1002, 1013, 1014, 1034, 1068, 1070, 1087, 1107, 1108, 1109, 1124, 1194, 1198, 1205, 1206, 1229, 1230, 1257, 1258, 1266, 1305, 1364, 1424, 1427, 1443, 1460, 1564, 1582, 1607, 1667, 1697, 1724, 1728, 1730, 1756, 1762, 1827, 1830, 1854, 1869, 1871, 1874, 1875, 1885, 1886, 1887, 1888, 1889, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1905, 1907, 1910, 1911, 1912, 1916, 1917, 1919, 1922, 1924, 1925, 1934, 1936, 1943, 1944, 1945, 1948, 1949, 1950, 1953, 1954, 1957, 1958, 1959], "str": [0, 1, 2, 3, 5, 13, 20, 21, 23, 25, 27, 28, 29, 31, 34, 38, 40, 42, 44, 46, 54, 312, 502, 506, 592, 768, 774, 781, 782, 783, 804, 805, 806, 843, 890, 892, 900, 904, 905, 929, 941, 947, 969, 980, 981, 982, 984, 993, 994, 996, 997, 998, 1010, 1011, 1012, 1024, 1025, 1027, 1029, 1041, 1062, 1067, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1123, 1124, 1128, 1133, 1135, 1143, 1192, 1193, 1194, 1195, 1197, 1198, 1200, 1203, 1239, 1252, 1257, 1258, 1265, 1266, 1295, 1308, 1309, 1324, 1343, 1344, 1350, 1355, 1356, 1357, 1361, 1363, 1371, 1377, 1381, 1387, 1388, 1393, 1394, 1403, 1404, 1405, 1418, 1419, 1427, 1428, 1430, 1431, 1432, 1434, 1437, 1441, 1444, 1455, 1458, 1459, 1470, 1472, 1474, 1475, 1476, 1477, 1479, 1498, 1499, 1509, 1510, 1518, 1523, 1526, 1537, 1538, 1561, 1569, 1595, 1607, 1614, 1615, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1648, 1649, 1651, 1662, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1699, 1716, 1747, 1751, 1758, 1759, 1793, 1812, 1853, 1854, 1862, 1869, 1871, 1872, 1873, 1874, 1875, 1882, 1883, 1884, 1886, 1888, 1892, 1894, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1930, 1933, 1935, 1937, 1938, 1947, 1950, 1952, 1956, 1957, 1958, 1959], "possibl": [0, 2, 9, 13, 14, 17, 23, 25, 29, 44, 50, 51, 54, 486, 487, 569, 606, 847, 868, 869, 935, 941, 977, 1068, 1069, 1070, 1115, 1127, 1194, 1207, 1234, 1247, 1250, 1251, 1254, 1259, 1265, 1344, 1350, 1427, 1433, 1517, 1518, 1537, 1570, 1595, 1619, 1620, 1735, 1738, 1753, 1804, 1812, 1830, 1871, 1873, 1874, 1886, 1887, 1892, 1894, 1896, 1897, 1898, 1899, 1902, 1907, 1908, 1909, 1911, 1916, 1919, 1924, 1926, 1931, 1935, 1939, 1942, 1943, 1945, 1946, 1947, 1948, 1950, 1953, 1957], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 17, 20, 21, 24, 25, 27, 29, 31, 32, 34, 37, 38, 40, 41, 44, 46, 48, 51, 53, 54, 55, 57, 60, 63, 79, 92, 93, 94, 95, 110, 141, 145, 212, 226, 227, 228, 229, 245, 250, 251, 263, 264, 290, 302, 304, 306, 307, 308, 309, 310, 312, 314, 317, 343, 390, 391, 409, 410, 412, 413, 461, 471, 473, 488, 502, 504, 506, 526, 533, 549, 572, 573, 574, 576, 577, 588, 589, 669, 670, 673, 676, 677, 680, 684, 685, 686, 724, 745, 753, 759, 760, 768, 773, 774, 776, 782, 784, 785, 788, 791, 808, 809, 810, 811, 814, 815, 816, 843, 848, 854, 863, 864, 865, 869, 874, 878, 880, 882, 884, 885, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 910, 911, 912, 917, 919, 925, 929, 934, 936, 946, 954, 955, 958, 971, 1001, 1010, 1011, 1024, 1037, 1046, 1047, 1050, 1058, 1059, 1068, 1069, 1070, 1072, 1081, 1082, 1084, 1086, 1088, 1089, 1090, 1095, 1097, 1098, 1099, 1100, 1101, 1110, 1115, 1121, 1123, 1124, 1125, 1126, 1130, 1131, 1133, 1134, 1136, 1138, 1142, 1143, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1164, 1179, 1184, 1185, 1186, 1187, 1190, 1191, 1192, 1194, 1195, 1197, 1200, 1201, 1209, 1212, 1214, 1215, 1218, 1222, 1223, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1243, 1246, 1248, 1250, 1251, 1253, 1257, 1258, 1263, 1264, 1265, 1266, 1269, 1274, 1280, 1282, 1283, 1286, 1291, 1293, 1294, 1296, 1299, 1312, 1315, 1317, 1321, 1322, 1323, 1324, 1327, 1328, 1331, 1335, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1369, 1370, 1371, 1372, 1374, 1381, 1382, 1383, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1412, 1413, 1414, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1455, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1469, 1470, 1472, 1474, 1475, 1476, 1478, 1479, 1498, 1499, 1501, 1502, 1503, 1508, 1509, 1518, 1519, 1523, 1526, 1528, 1537, 1538, 1539, 1550, 1551, 1552, 1561, 1562, 1563, 1564, 1566, 1569, 1576, 1589, 1590, 1595, 1597, 1598, 1600, 1602, 1605, 1606, 1607, 1612, 1614, 1615, 1616, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1640, 1643, 1644, 1647, 1649, 1653, 1654, 1658, 1659, 1664, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1705, 1709, 1712, 1716, 1718, 1719, 1731, 1733, 1735, 1736, 1737, 1742, 1743, 1744, 1751, 1754, 1764, 1767, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1789, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1816, 1817, 1827, 1831, 1834, 1837, 1840, 1841, 1842, 1843, 1845, 1848, 1849, 1850, 1851, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1875, 1881, 1883, 1884, 1886, 1889, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1905, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1922, 1923, 1924, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1942, 1944, 1945, 1947, 1950, 1951, 1952, 1956, 1957], "xpu": [0, 1194, 1427, 1918], "hpu": [0, 1930], "attribut": [0, 1, 11, 20, 21, 23, 24, 30, 54, 55, 67, 72, 141, 281, 484, 485, 716, 727, 728, 729, 730, 731, 732, 734, 735, 745, 753, 780, 791, 804, 805, 806, 827, 828, 829, 847, 848, 878, 882, 884, 888, 1118, 1193, 1194, 1195, 1197, 1198, 1204, 1205, 1266, 1364, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1427, 1470, 1607, 1608, 1618, 1619, 1620, 1641, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1852, 1855, 1870, 1872, 1875, 1889, 1893, 1894, 1897, 1899, 1900, 1905, 1910, 1912, 1916, 1919, 1924, 1934, 1935, 1950, 1956, 1958, 1960], "thu": [0, 1, 11, 20, 23, 29, 41, 44, 46, 54, 774, 811, 814, 843, 1067, 1088, 1257, 1288, 1367, 1479, 1595, 1607, 1672, 1673, 1683, 1801, 1871, 1874, 1881, 1882, 1894, 1896, 1899, 1901, 1902, 1904, 1905, 1912, 1919, 1924, 1928, 1932, 1934, 1935], "obtain": [0, 3, 20, 23, 29, 33, 53, 54, 485, 907, 1139, 1312, 1350, 1434, 1510, 1607, 1676, 1705, 1722, 1817, 1874, 1886, 1887, 1896, 1909, 1912, 1915, 1918, 1919, 1955], "bool": [0, 1, 2, 3, 5, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 34, 40, 42, 44, 46, 53, 54, 141, 187, 200, 236, 251, 310, 312, 319, 320, 321, 322, 324, 325, 330, 332, 435, 436, 437, 438, 439, 448, 461, 485, 506, 570, 592, 669, 682, 683, 684, 685, 686, 688, 724, 747, 768, 769, 774, 783, 803, 854, 862, 863, 864, 865, 869, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 910, 913, 915, 916, 918, 919, 925, 926, 932, 933, 934, 940, 941, 942, 964, 970, 977, 1007, 1013, 1025, 1068, 1069, 1070, 1073, 1080, 1085, 1103, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1129, 1130, 1134, 1136, 1151, 1152, 1155, 1156, 1169, 1175, 1179, 1182, 1183, 1185, 1191, 1194, 1198, 1200, 1201, 1209, 1210, 1213, 1215, 1223, 1224, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1248, 1250, 1251, 1254, 1255, 1256, 1257, 1263, 1264, 1265, 1266, 1275, 1276, 1277, 1278, 1280, 1281, 1283, 1285, 1291, 1293, 1294, 1296, 1299, 1305, 1308, 1309, 1317, 1322, 1323, 1324, 1325, 1326, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1375, 1376, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1414, 1418, 1419, 1420, 1421, 1422, 1427, 1430, 1431, 1432, 1433, 1434, 1436, 1441, 1444, 1445, 1446, 1447, 1454, 1458, 1459, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1491, 1498, 1499, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1526, 1528, 1530, 1537, 1538, 1561, 1569, 1576, 1595, 1601, 1607, 1608, 1611, 1612, 1614, 1616, 1618, 1619, 1620, 1641, 1642, 1643, 1644, 1646, 1649, 1654, 1658, 1659, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1705, 1711, 1713, 1715, 1716, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1751, 1756, 1760, 1761, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1789, 1798, 1799, 1800, 1801, 1802, 1803, 1810, 1811, 1812, 1815, 1816, 1824, 1830, 1834, 1839, 1848, 1849, 1851, 1852, 1854, 1856, 1857, 1858, 1867, 1868, 1869, 1871, 1872, 1873, 1874, 1883, 1884, 1886, 1887, 1888, 1889, 1903, 1910, 1912, 1914, 1916, 1917, 1918, 1923, 1924, 1928, 1930, 1931, 1933, 1934, 1935, 1936, 1938, 1945, 1952, 1956, 1958], "option": [0, 1, 3, 5, 13, 20, 23, 27, 28, 29, 31, 34, 38, 39, 40, 42, 43, 44, 46, 54, 68, 70, 79, 141, 146, 161, 163, 166, 169, 170, 171, 186, 197, 200, 231, 258, 288, 316, 322, 384, 435, 436, 437, 438, 439, 477, 488, 489, 502, 509, 514, 526, 549, 569, 570, 572, 573, 574, 576, 577, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 724, 747, 768, 769, 774, 781, 783, 788, 807, 843, 848, 851, 854, 865, 867, 868, 869, 870, 871, 872, 873, 874, 881, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 901, 902, 903, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 925, 928, 930, 931, 932, 933, 934, 936, 938, 939, 940, 941, 946, 947, 953, 954, 956, 957, 958, 959, 962, 966, 967, 968, 970, 971, 973, 975, 979, 980, 982, 983, 984, 987, 988, 995, 996, 999, 1002, 1010, 1011, 1012, 1016, 1018, 1019, 1020, 1022, 1024, 1025, 1026, 1030, 1031, 1032, 1033, 1037, 1038, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1072, 1077, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1136, 1137, 1138, 1139, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1158, 1159, 1160, 1168, 1171, 1183, 1185, 1188, 1189, 1191, 1192, 1194, 1195, 1198, 1200, 1207, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1305, 1308, 1309, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1381, 1384, 1385, 1386, 1387, 1388, 1393, 1394, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1413, 1418, 1419, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1441, 1445, 1446, 1447, 1454, 1458, 1459, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1491, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1517, 1518, 1521, 1522, 1523, 1526, 1528, 1537, 1538, 1545, 1550, 1551, 1552, 1561, 1562, 1569, 1576, 1582, 1583, 1595, 1603, 1604, 1607, 1608, 1614, 1615, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1655, 1658, 1659, 1660, 1661, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1682, 1683, 1684, 1685, 1686, 1690, 1703, 1704, 1705, 1708, 1712, 1713, 1715, 1716, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1744, 1746, 1751, 1764, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1817, 1827, 1828, 1829, 1830, 1831, 1834, 1836, 1839, 1840, 1841, 1842, 1843, 1845, 1848, 1849, 1851, 1856, 1857, 1858, 1859, 1864, 1865, 1867, 1868, 1869, 1871, 1872, 1874, 1876, 1878, 1880, 1882, 1883, 1884, 1889, 1892, 1897, 1899, 1900, 1901, 1904, 1905, 1909, 1910, 1912, 1916, 1918, 1919, 1924, 1928, 1929, 1931, 1933, 1935, 1938, 1939, 1947, 1950, 1954, 1956, 1957, 1959], "whether": [0, 1, 2, 7, 13, 20, 21, 23, 24, 25, 28, 29, 31, 39, 40, 46, 54, 74, 310, 312, 461, 506, 606, 669, 682, 684, 685, 688, 863, 864, 869, 878, 886, 889, 890, 892, 897, 898, 910, 919, 932, 933, 934, 940, 941, 942, 944, 946, 1009, 1025, 1123, 1135, 1151, 1152, 1169, 1191, 1194, 1201, 1202, 1210, 1215, 1223, 1224, 1230, 1232, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1248, 1250, 1251, 1254, 1255, 1256, 1257, 1265, 1281, 1283, 1291, 1293, 1294, 1296, 1299, 1317, 1322, 1323, 1324, 1325, 1350, 1361, 1387, 1393, 1427, 1436, 1441, 1476, 1488, 1489, 1490, 1510, 1538, 1569, 1601, 1607, 1614, 1616, 1619, 1632, 1646, 1649, 1654, 1664, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1691, 1703, 1713, 1716, 1760, 1761, 1810, 1811, 1812, 1815, 1816, 1834, 1839, 1848, 1849, 1851, 1852, 1857, 1858, 1862, 1869, 1874, 1880, 1881, 1883, 1889, 1893, 1897, 1899, 1903, 1912, 1917, 1919, 1924, 1928, 1930, 1932, 1933, 1938, 1944, 1947, 1950, 1957], "torch_dtyp": 0, "weight": [0, 20, 23, 29, 46, 52, 54, 55, 147, 292, 352, 353, 485, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 734, 735, 738, 740, 741, 742, 743, 745, 749, 750, 752, 753, 754, 761, 762, 763, 770, 781, 782, 783, 797, 798, 822, 824, 830, 834, 838, 839, 840, 841, 842, 847, 848, 850, 851, 912, 959, 1123, 1125, 1133, 1135, 1155, 1156, 1194, 1198, 1203, 1205, 1210, 1219, 1317, 1343, 1344, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1370, 1371, 1379, 1380, 1382, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1431, 1432, 1433, 1434, 1435, 1442, 1444, 1456, 1470, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1517, 1518, 1527, 1536, 1540, 1543, 1558, 1560, 1561, 1570, 1579, 1598, 1607, 1614, 1615, 1617, 1619, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1647, 1648, 1649, 1651, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1719, 1851, 1862, 1869, 1870, 1872, 1873, 1874, 1882, 1883, 1888, 1889, 1892, 1899, 1901, 1905, 1910, 1919, 1920, 1921, 1922, 1928, 1933, 1937, 1938, 1947, 1952], "cach": [0, 2, 3, 29, 54, 476, 941, 948, 992, 993, 1010, 1013, 1018, 1020, 1022, 1024, 1032, 1037, 1302, 1303, 1304, 1608, 1619, 1651, 1886, 1901, 1942, 1944, 1947, 1951, 1955, 1957, 1959], "insid": [0, 1, 7, 20, 40, 46, 51, 53, 54, 886, 887, 888, 889, 976, 1013, 1125, 1129, 1134, 1205, 1607, 1871, 1873, 1874, 1882, 1893, 1897, 1899, 1900, 1904, 1912, 1928, 1937, 1944, 1946, 1950, 1957], "custom_fwd": [0, 1893], "fwd": [0, 1951], "cast_input": [0, 1893], "helper": [0, 3, 5, 23, 50, 54, 1466, 1869, 1870, 1873, 1897, 1898, 1912, 1916, 1924, 1956, 1958], "subclass": [0, 1, 13, 20, 25, 29, 33, 51, 54, 130, 526, 878, 879, 880, 1192, 1195, 1204, 1427, 1608, 1621, 1626, 1647, 1871, 1874, 1875, 1881, 1893, 1905, 1912, 1913, 1924, 1928, 1944, 1950, 1958], "page": [0, 6, 7, 9, 20, 24, 41, 43, 1266, 1470, 1472, 1474, 1897, 1898, 1905, 1914, 1924, 1954], "incom": [0, 23, 42, 770, 808, 809, 810, 811, 814, 1348, 1414, 1497, 1543, 1886, 1894], "non": [0, 1, 3, 5, 13, 19, 21, 23, 24, 25, 28, 29, 31, 33, 40, 42, 43, 44, 46, 53, 55, 64, 71, 79, 141, 326, 493, 502, 506, 534, 687, 723, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 754, 761, 762, 763, 827, 854, 866, 878, 880, 882, 887, 889, 897, 898, 912, 925, 928, 941, 952, 953, 958, 1024, 1113, 1114, 1120, 1124, 1129, 1135, 1171, 1194, 1197, 1206, 1209, 1210, 1229, 1230, 1237, 1241, 1242, 1255, 1257, 1266, 1276, 1283, 1288, 1293, 1317, 1322, 1323, 1327, 1340, 1341, 1342, 1356, 1357, 1359, 1360, 1363, 1373, 1379, 1396, 1397, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1432, 1434, 1442, 1444, 1458, 1509, 1528, 1556, 1561, 1603, 1604, 1607, 1653, 1686, 1708, 1751, 1752, 1767, 1779, 1793, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1832, 1848, 1862, 1869, 1870, 1871, 1873, 1874, 1876, 1886, 1889, 1892, 1895, 1899, 1900, 1901, 1905, 1909, 1912, 1917, 1918, 1923, 1924, 1926, 1928, 1929, 1931, 1932, 1933, 1935, 1942, 1945, 1946, 1947, 1948, 1955, 1956, 1958], "intern": [0, 3, 8, 9, 13, 20, 21, 23, 25, 29, 31, 37, 46, 51, 54, 968, 1002, 1023, 1124, 1194, 1230, 1232, 1248, 1251, 1274, 1345, 1346, 1347, 1381, 1466, 1501, 1502, 1503, 1526, 1616, 1664, 1759, 1801, 1851, 1875, 1893, 1894, 1896, 1897, 1902, 1908, 1909, 1925, 1926, 1930, 1932, 1939, 1947, 1950, 1957], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 20, 23, 25, 27, 28, 29, 31, 33, 40, 41, 46, 47, 53, 54, 67, 79, 141, 200, 212, 476, 486, 487, 488, 730, 732, 770, 782, 784, 806, 848, 850, 851, 854, 868, 869, 879, 882, 883, 890, 891, 892, 897, 910, 919, 962, 964, 968, 969, 970, 971, 973, 978, 979, 982, 983, 985, 986, 987, 988, 991, 992, 993, 995, 996, 999, 1001, 1002, 1005, 1007, 1008, 1012, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1024, 1025, 1026, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1040, 1043, 1044, 1045, 1068, 1070, 1080, 1085, 1103, 1119, 1121, 1141, 1142, 1143, 1151, 1152, 1177, 1178, 1194, 1198, 1209, 1213, 1264, 1266, 1280, 1295, 1302, 1304, 1305, 1367, 1370, 1374, 1427, 1466, 1474, 1478, 1520, 1526, 1537, 1576, 1594, 1595, 1597, 1607, 1620, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1635, 1636, 1658, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1715, 1724, 1726, 1728, 1730, 1731, 1755, 1759, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1841, 1843, 1848, 1853, 1854, 1867, 1870, 1871, 1873, 1874, 1875, 1876, 1878, 1881, 1884, 1886, 1889, 1893, 1894, 1897, 1898, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1919, 1922, 1924, 1925, 1928, 1930, 1931, 1933, 1934, 1937, 1945, 1946, 1947, 1950, 1953, 1954, 1957, 1958, 1959], "outsid": [0, 5, 9, 20, 33, 44, 46, 51, 673, 784, 874, 1123, 1125, 1129, 1134, 1195, 1526, 1607, 1688, 1689, 1694, 1695, 1701, 1873, 1874, 1892, 1894, 1897, 1900, 1901, 1935, 1947, 1953], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 141, 187, 200, 246, 251, 326, 435, 436, 437, 438, 439, 463, 464, 485, 487, 533, 569, 570, 592, 593, 607, 669, 678, 682, 684, 685, 686, 688, 724, 749, 768, 770, 774, 776, 780, 786, 827, 829, 836, 847, 853, 863, 864, 866, 878, 881, 882, 884, 886, 892, 897, 898, 911, 929, 932, 933, 941, 943, 952, 953, 954, 967, 970, 971, 973, 978, 1006, 1009, 1010, 1055, 1057, 1071, 1103, 1115, 1123, 1124, 1127, 1128, 1131, 1135, 1147, 1156, 1157, 1168, 1191, 1194, 1198, 1201, 1204, 1205, 1206, 1209, 1214, 1215, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1247, 1248, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1260, 1261, 1265, 1274, 1281, 1283, 1288, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1305, 1322, 1323, 1324, 1325, 1343, 1344, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1365, 1371, 1374, 1375, 1376, 1379, 1382, 1387, 1390, 1391, 1392, 1397, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1431, 1432, 1433, 1434, 1435, 1442, 1458, 1460, 1466, 1474, 1478, 1479, 1491, 1501, 1502, 1503, 1509, 1518, 1521, 1522, 1526, 1537, 1561, 1563, 1564, 1566, 1570, 1576, 1582, 1595, 1597, 1598, 1601, 1602, 1607, 1614, 1616, 1618, 1621, 1625, 1627, 1630, 1640, 1641, 1648, 1649, 1653, 1655, 1662, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1691, 1693, 1697, 1699, 1703, 1713, 1715, 1716, 1717, 1718, 1735, 1737, 1747, 1759, 1781, 1794, 1795, 1796, 1807, 1809, 1810, 1811, 1812, 1815, 1816, 1833, 1839, 1857, 1858, 1862, 1871, 1873, 1874, 1880, 1881, 1884, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1923, 1924, 1925, 1926, 1928, 1930, 1931, 1933, 1934, 1935, 1936, 1939, 1942, 1943, 1944, 1946, 1947, 1948, 1950, 1951, 1953, 1957], "effect": [0, 3, 7, 13, 20, 21, 23, 29, 42, 44, 46, 51, 54, 55, 58, 187, 200, 592, 724, 768, 774, 1002, 1050, 1135, 1194, 1236, 1237, 1238, 1239, 1295, 1335, 1350, 1358, 1359, 1360, 1365, 1366, 1367, 1368, 1372, 1427, 1433, 1479, 1537, 1564, 1595, 1601, 1607, 1608, 1626, 1683, 1691, 1791, 1796, 1816, 1837, 1852, 1862, 1869, 1871, 1882, 1892, 1893, 1894, 1897, 1899, 1919, 1922, 1930, 1931, 1933, 1942], "custom_bwd": [0, 1893], "bwd": 0, "small": [0, 3, 7, 9, 20, 21, 23, 29, 40, 854, 897, 898, 941, 981, 1024, 1256, 1257, 1269, 1271, 1335, 1362, 1436, 1441, 1455, 1475, 1479, 1508, 1562, 1569, 1607, 1688, 1694, 1703, 1816, 1871, 1873, 1874, 1897, 1899, 1901, 1905, 1908, 1910, 1912, 1916, 1919, 1920, 1928, 1929, 1935, 1942, 1946, 1947, 1948, 1951, 1955, 1957, 1959], "magnitud": [0, 954, 1651, 1767, 1892, 1893, 1897], "represent": [0, 3, 13, 20, 23, 25, 38, 44, 54, 68, 471, 747, 815, 971, 1083, 1084, 1086, 1110, 1139, 1194, 1233, 1236, 1238, 1241, 1321, 1427, 1433, 1662, 1703, 1870, 1871, 1874, 1889, 1899, 1908, 1912, 1913, 1916, 1919, 1928, 1935, 1945, 1947, 1957, 1960], "These": [0, 1, 2, 3, 8, 13, 14, 20, 23, 24, 29, 47, 49, 52, 54, 783, 869, 959, 1067, 1131, 1191, 1194, 1236, 1301, 1335, 1427, 1598, 1615, 1870, 1871, 1872, 1873, 1874, 1884, 1887, 1888, 1890, 1893, 1894, 1897, 1898, 1899, 1905, 1908, 1910, 1912, 1916, 1922, 1924, 1925, 1931, 1936, 1942, 1945, 1947, 1950, 1953, 1957, 1958], "flush": [0, 1, 25, 1024, 1204, 1747, 1760, 1908, 1933], "zero": [0, 1, 2, 21, 23, 24, 27, 29, 42, 46, 51, 54, 141, 251, 306, 502, 504, 533, 534, 573, 574, 576, 577, 612, 668, 680, 687, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 749, 753, 757, 758, 761, 762, 763, 764, 766, 769, 770, 784, 788, 808, 809, 810, 811, 814, 819, 866, 875, 876, 877, 882, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 911, 912, 932, 933, 934, 939, 954, 958, 1013, 1024, 1028, 1029, 1058, 1062, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1115, 1120, 1123, 1131, 1153, 1154, 1157, 1179, 1191, 1194, 1205, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1266, 1274, 1275, 1276, 1277, 1278, 1283, 1284, 1317, 1321, 1325, 1339, 1340, 1341, 1342, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1379, 1380, 1382, 1395, 1396, 1397, 1398, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1433, 1436, 1439, 1440, 1441, 1442, 1444, 1464, 1478, 1479, 1482, 1483, 1484, 1493, 1494, 1495, 1504, 1505, 1506, 1508, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1526, 1547, 1548, 1562, 1563, 1564, 1576, 1624, 1625, 1626, 1627, 1642, 1649, 1653, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1703, 1715, 1717, 1718, 1719, 1735, 1744, 1754, 1781, 1785, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1816, 1830, 1831, 1833, 1839, 1868, 1871, 1872, 1874, 1876, 1884, 1886, 1887, 1888, 1889, 1892, 1894, 1897, 1899, 1905, 1908, 1911, 1912, 1914, 1916, 1918, 1919, 1922, 1924, 1928, 1929, 1931, 1933, 1934, 1935, 1936, 1946], "underflow": [0, 1393, 1893], "updat": [0, 9, 11, 20, 21, 25, 27, 31, 40, 44, 46, 49, 50, 54, 73, 212, 502, 504, 749, 788, 789, 813, 1123, 1132, 1194, 1230, 1345, 1346, 1347, 1364, 1370, 1371, 1379, 1390, 1391, 1392, 1427, 1428, 1437, 1466, 1517, 1518, 1615, 1619, 1649, 1669, 1675, 1680, 1682, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1869, 1871, 1882, 1893, 1894, 1897, 1898, 1899, 1905, 1907, 1910, 1911, 1912, 1914, 1915, 1917, 1919, 1924, 1925, 1926, 1933, 1942, 1956], "lost": [0, 31, 41, 43, 1364, 1423, 1424, 1425], "To": [0, 1, 2, 3, 4, 5, 6, 9, 13, 14, 20, 21, 23, 24, 27, 28, 29, 31, 32, 38, 39, 41, 42, 44, 46, 51, 54, 66, 69, 70, 73, 326, 488, 546, 723, 883, 896, 938, 941, 969, 1014, 1034, 1055, 1057, 1067, 1095, 1097, 1101, 1112, 1194, 1195, 1197, 1198, 1204, 1205, 1239, 1261, 1266, 1294, 1335, 1344, 1367, 1393, 1423, 1424, 1425, 1427, 1480, 1481, 1499, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1651, 1697, 1705, 1716, 1755, 1759, 1763, 1817, 1869, 1871, 1873, 1874, 1878, 1886, 1887, 1888, 1890, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1924, 1925, 1926, 1928, 1931, 1932, 1933, 1934, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1956, 1957, 1959], "prevent": [0, 7, 8, 20, 21, 23, 24, 31, 46, 54, 488, 724, 888, 970, 1048, 1049, 1068, 1069, 1070, 1191, 1293, 1305, 1322, 1325, 1365, 1433, 1458, 1545, 1582, 1583, 1598, 1607, 1713, 1792, 1795, 1815, 1841, 1843, 1851, 1886, 1893, 1894, 1897, 1898, 1901, 1905, 1916, 1918, 1926, 1928, 1929, 1942, 1946, 1947, 1950], "multipli": [0, 23, 44, 304, 312, 413, 502, 674, 675, 676, 677, 678, 679, 680, 749, 768, 774, 775, 776, 909, 921, 1037, 1050, 1067, 1147, 1158, 1217, 1229, 1230, 1234, 1247, 1249, 1251, 1257, 1259, 1288, 1298, 1312, 1316, 1319, 1343, 1355, 1356, 1357, 1360, 1379, 1397, 1479, 1480, 1481, 1537, 1595, 1596, 1597, 1619, 1688, 1694, 1696, 1703, 1759, 1787, 1790, 1793, 1794, 1808, 1812, 1813, 1816, 1837, 1872, 1887, 1897, 1902, 1905, 1908, 1914, 1928, 1929, 1947], "factor": [0, 3, 21, 29, 54, 678, 679, 680, 788, 808, 909, 932, 933, 934, 1236, 1237, 1238, 1241, 1243, 1283, 1284, 1285, 1365, 1388, 1415, 1439, 1440, 1567, 1568, 1576, 1683, 1684, 1685, 1687, 1688, 1690, 1692, 1693, 1694, 1695, 1696, 1699, 1700, 1701, 1715, 1773, 1794, 1816, 1892, 1893, 1919, 1928, 1947], "flow": [0, 44, 55, 61, 63, 938, 1206, 1209, 1491, 1526, 1607, 1871, 1892, 1894, 1897, 1899, 1910, 1912, 1926, 1942, 1943, 1945, 1950, 1955], "through": [0, 5, 7, 9, 14, 20, 23, 25, 29, 33, 46, 51, 53, 54, 55, 58, 60, 66, 485, 781, 829, 843, 850, 851, 888, 897, 898, 975, 1013, 1094, 1127, 1135, 1192, 1195, 1197, 1209, 1210, 1212, 1229, 1230, 1251, 1257, 1274, 1434, 1471, 1472, 1473, 1474, 1528, 1598, 1607, 1619, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1715, 1862, 1869, 1870, 1873, 1874, 1878, 1880, 1884, 1886, 1887, 1888, 1894, 1897, 1899, 1901, 1902, 1904, 1905, 1911, 1912, 1916, 1917, 1919, 1922, 1924, 1925, 1926, 1928, 1932, 1936, 1938, 1939, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1956, 1957, 1960], "word": [0, 1, 8, 23, 40, 41, 49, 53, 54, 925, 1335, 1355, 1356, 1357, 1370, 1371, 1470, 1517, 1518, 1537, 1595, 1607, 1614, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1873, 1894, 1901, 1916, 1925], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 13, 20, 23, 24, 25, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 54, 55, 62, 63, 71, 144, 145, 212, 213, 304, 306, 312, 326, 389, 393, 438, 448, 461, 476, 477, 492, 502, 504, 506, 509, 533, 606, 669, 678, 682, 684, 685, 686, 688, 804, 806, 830, 869, 878, 882, 890, 892, 902, 903, 910, 911, 919, 928, 929, 941, 944, 959, 973, 982, 983, 1013, 1024, 1058, 1066, 1073, 1087, 1097, 1102, 1104, 1118, 1123, 1124, 1135, 1136, 1137, 1151, 1152, 1155, 1156, 1168, 1169, 1191, 1193, 1194, 1197, 1198, 1201, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1215, 1216, 1225, 1229, 1230, 1246, 1253, 1254, 1257, 1259, 1265, 1274, 1276, 1281, 1288, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1317, 1322, 1323, 1325, 1327, 1335, 1339, 1343, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1370, 1371, 1375, 1376, 1381, 1386, 1390, 1391, 1392, 1419, 1427, 1430, 1431, 1432, 1433, 1434, 1474, 1476, 1508, 1517, 1518, 1521, 1522, 1526, 1543, 1561, 1563, 1566, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1611, 1612, 1614, 1616, 1619, 1643, 1647, 1652, 1654, 1662, 1664, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1713, 1739, 1740, 1754, 1759, 1767, 1790, 1793, 1797, 1798, 1799, 1800, 1802, 1803, 1810, 1811, 1812, 1815, 1816, 1827, 1831, 1837, 1839, 1851, 1854, 1857, 1858, 1860, 1862, 1864, 1869, 1871, 1872, 1873, 1874, 1876, 1878, 1880, 1881, 1882, 1884, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1920, 1923, 1924, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1956, 1957, 1958, 1959], "larger": [0, 9, 23, 29, 54, 245, 488, 898, 912, 1024, 1124, 1248, 1251, 1335, 1364, 1370, 1371, 1419, 1476, 1479, 1517, 1518, 1894, 1897, 1901, 1902, 1904, 1908, 1910, 1928, 1933, 1950, 1951, 1954, 1955, 1956], "thei": [0, 1, 3, 5, 7, 9, 11, 16, 17, 20, 23, 25, 29, 30, 40, 44, 46, 49, 50, 53, 54, 71, 312, 326, 327, 675, 678, 679, 686, 789, 804, 805, 806, 813, 830, 843, 848, 879, 888, 898, 909, 941, 1013, 1071, 1118, 1123, 1133, 1169, 1183, 1184, 1191, 1194, 1201, 1206, 1215, 1229, 1230, 1236, 1257, 1265, 1287, 1291, 1294, 1296, 1299, 1317, 1340, 1341, 1342, 1358, 1359, 1360, 1374, 1412, 1420, 1421, 1422, 1427, 1433, 1443, 1455, 1478, 1526, 1528, 1598, 1607, 1608, 1611, 1614, 1616, 1617, 1640, 1643, 1652, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1693, 1696, 1755, 1761, 1812, 1816, 1851, 1852, 1856, 1869, 1871, 1873, 1874, 1876, 1878, 1880, 1881, 1882, 1884, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1897, 1898, 1899, 1900, 1903, 1905, 1907, 1908, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1924, 1928, 1933, 1935, 1936, 1937, 1942, 1945, 1946, 1947, 1948, 1949, 1953, 1957, 1958], "don": [0, 1, 4, 7, 9, 11, 23, 39, 47, 49, 51, 54, 141, 774, 784, 882, 883, 896, 1041, 1123, 1209, 1287, 1390, 1391, 1392, 1479, 1595, 1598, 1607, 1655, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1758, 1869, 1871, 1875, 1886, 1887, 1888, 1894, 1897, 1899, 1901, 1905, 1907, 1911, 1912, 1915, 1916, 1917, 1919, 1924, 1925, 1928, 1945, 1946, 1947, 1948, 1950, 1958], "t": [0, 1, 2, 3, 4, 7, 8, 9, 11, 20, 21, 23, 25, 29, 30, 33, 37, 39, 40, 44, 47, 49, 51, 52, 53, 54, 55, 57, 68, 71, 141, 304, 306, 312, 448, 512, 526, 560, 676, 677, 686, 749, 770, 774, 784, 812, 815, 866, 867, 868, 869, 878, 880, 882, 883, 886, 888, 891, 896, 932, 933, 934, 939, 959, 968, 971, 992, 1010, 1011, 1041, 1065, 1083, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1118, 1119, 1120, 1123, 1124, 1125, 1135, 1136, 1147, 1157, 1191, 1192, 1194, 1195, 1197, 1200, 1201, 1205, 1207, 1209, 1212, 1214, 1223, 1224, 1230, 1232, 1233, 1236, 1243, 1251, 1252, 1257, 1265, 1266, 1274, 1287, 1300, 1301, 1315, 1324, 1344, 1348, 1350, 1355, 1356, 1357, 1364, 1370, 1371, 1379, 1388, 1390, 1391, 1392, 1393, 1397, 1414, 1427, 1442, 1458, 1460, 1470, 1478, 1479, 1497, 1501, 1502, 1503, 1510, 1517, 1518, 1538, 1543, 1562, 1582, 1595, 1598, 1601, 1602, 1607, 1608, 1614, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1641, 1643, 1644, 1655, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1689, 1699, 1705, 1711, 1715, 1732, 1757, 1758, 1767, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1790, 1793, 1812, 1816, 1817, 1827, 1830, 1836, 1839, 1862, 1863, 1869, 1871, 1872, 1873, 1875, 1884, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1904, 1905, 1907, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1945, 1946, 1948, 1950, 1952, 1955, 1957, 1958], "grad": [0, 1, 5, 23, 29, 47, 50, 51, 54, 141, 326, 448, 477, 484, 485, 492, 493, 570, 869, 878, 882, 883, 889, 890, 892, 897, 898, 902, 903, 1013, 1071, 1123, 1124, 1126, 1130, 1134, 1135, 1169, 1177, 1194, 1266, 1427, 1607, 1652, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1761, 1793, 1851, 1862, 1870, 1871, 1872, 1887, 1888, 1889, 1893, 1898, 1899, 1900, 1902, 1905, 1907, 1914, 1924, 1925, 1928, 1934, 1947, 1953], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 13, 23, 27, 28, 29, 31, 33, 37, 39, 40, 42, 44, 46, 49, 50, 51, 53, 54, 55, 141, 245, 326, 425, 448, 572, 606, 669, 684, 685, 737, 746, 749, 779, 783, 850, 869, 921, 1004, 1008, 1058, 1067, 1071, 1120, 1123, 1135, 1168, 1193, 1195, 1198, 1204, 1209, 1219, 1224, 1236, 1237, 1241, 1242, 1249, 1255, 1257, 1263, 1266, 1283, 1287, 1288, 1294, 1298, 1302, 1319, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1367, 1370, 1371, 1374, 1379, 1380, 1390, 1391, 1392, 1397, 1398, 1400, 1401, 1402, 1409, 1410, 1411, 1421, 1422, 1428, 1434, 1437, 1442, 1444, 1466, 1478, 1509, 1561, 1607, 1608, 1616, 1619, 1623, 1649, 1652, 1654, 1659, 1662, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1700, 1704, 1709, 1751, 1754, 1755, 1759, 1761, 1785, 1790, 1816, 1836, 1839, 1851, 1852, 1862, 1868, 1869, 1870, 1871, 1873, 1874, 1876, 1882, 1886, 1887, 1888, 1889, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1907, 1908, 1909, 1912, 1916, 1917, 1919, 1924, 1926, 1928, 1931, 1935, 1942, 1950, 1957, 1959], "interfer": [0, 1884, 1897, 1912, 1947], "learn": [0, 7, 8, 14, 29, 39, 46, 54, 73, 1348, 1361, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1387, 1399, 1412, 1414, 1435, 1456, 1470, 1472, 1474, 1475, 1476, 1579, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1870, 1878, 1890, 1892, 1897, 1903, 1905, 1906, 1912, 1916, 1919, 1924, 1926, 1939, 1941, 1943, 1945, 1950], "rate": [0, 8, 21, 29, 46, 1366, 1367, 1368, 1372, 1473, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1708, 1870, 1904, 1933, 1954], "fp16": [0, 2, 718, 1607, 1919, 1920], "everi": [0, 1, 2, 8, 9, 20, 21, 23, 25, 27, 29, 31, 46, 51, 54, 471, 477, 599, 669, 770, 808, 886, 902, 903, 941, 1050, 1067, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1124, 1147, 1156, 1194, 1225, 1239, 1249, 1252, 1283, 1339, 1365, 1366, 1367, 1368, 1372, 1420, 1427, 1460, 1462, 1466, 1512, 1513, 1514, 1519, 1550, 1551, 1552, 1566, 1583, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1615, 1648, 1651, 1652, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1755, 1816, 1849, 1874, 1880, 1884, 1893, 1894, 1897, 1898, 1899, 1900, 1902, 1906, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1924, 1925, 1926, 1928, 1930, 1931, 1933, 1935, 1945, 1946, 1950, 1954, 1955, 1956, 1957], "most": [0, 1, 3, 4, 7, 8, 14, 20, 23, 25, 27, 29, 30, 31, 32, 39, 40, 42, 43, 46, 51, 52, 53, 54, 55, 488, 782, 886, 887, 888, 893, 897, 906, 941, 1036, 1050, 1067, 1124, 1169, 1179, 1192, 1195, 1299, 1335, 1474, 1526, 1576, 1607, 1619, 1680, 1759, 1791, 1837, 1869, 1871, 1873, 1874, 1876, 1881, 1886, 1888, 1889, 1894, 1897, 1899, 1907, 1908, 1909, 1915, 1918, 1919, 1925, 1926, 1928, 1931, 1933, 1935, 1939, 1941, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1956, 1957], "bf16": [0, 2], "pretrain": [0, 851, 1370, 1371, 1869, 1894, 1912], "cannot": [0, 3, 8, 9, 20, 21, 23, 29, 30, 33, 40, 46, 47, 51, 52, 53, 54, 55, 76, 77, 213, 245, 513, 534, 869, 1088, 1090, 1098, 1099, 1100, 1106, 1123, 1191, 1199, 1317, 1350, 1370, 1479, 1510, 1576, 1607, 1664, 1817, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1884, 1888, 1889, 1894, 1898, 1899, 1910, 1911, 1912, 1919, 1924, 1926, 1928, 1930, 1931, 1942, 1948, 1958], "numer": [0, 20, 29, 47, 52, 676, 782, 897, 898, 925, 1198, 1209, 1210, 1225, 1229, 1230, 1234, 1239, 1247, 1248, 1251, 1254, 1257, 1259, 1281, 1283, 1344, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1460, 1463, 1466, 1475, 1517, 1538, 1545, 1576, 1582, 1584, 1615, 1648, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1719, 1751, 1816, 1870, 1874, 1875, 1879, 1882, 1897, 1899, 1900, 1912, 1919, 1929, 1934, 1947, 1957, 1960], "max": [0, 20, 23, 31, 33, 39, 40, 42, 44, 46, 54, 107, 176, 177, 178, 179, 291, 684, 685, 686, 747, 759, 760, 769, 771, 772, 791, 808, 809, 810, 811, 814, 863, 912, 929, 936, 937, 941, 1046, 1081, 1082, 1154, 1205, 1225, 1239, 1246, 1248, 1250, 1251, 1263, 1336, 1337, 1338, 1349, 1350, 1361, 1362, 1371, 1375, 1376, 1381, 1386, 1387, 1395, 1396, 1413, 1415, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1431, 1432, 1435, 1446, 1447, 1454, 1475, 1476, 1478, 1488, 1489, 1490, 1500, 1508, 1518, 1521, 1522, 1537, 1541, 1550, 1551, 1552, 1562, 1566, 1570, 1572, 1577, 1595, 1611, 1643, 1672, 1673, 1674, 1684, 1689, 1690, 1699, 1720, 1721, 1793, 1822, 1823, 1851, 1871, 1872, 1881, 1884, 1889, 1895, 1897, 1901, 1914, 1919, 1922, 1946, 1951, 1952, 1960], "65504": 0, "overflow": [0, 1048, 1049, 1293, 1322, 1325, 1545, 1582, 1583, 1713, 1744, 1792, 1795, 1815, 1841, 1843, 1897, 1908, 1929], "instead": [0, 1, 3, 5, 8, 9, 13, 20, 21, 23, 25, 28, 29, 31, 37, 40, 41, 44, 46, 49, 50, 51, 54, 55, 57, 63, 212, 397, 448, 488, 502, 737, 746, 757, 758, 782, 806, 815, 869, 879, 890, 891, 892, 893, 896, 897, 925, 931, 1102, 1104, 1128, 1129, 1130, 1131, 1134, 1135, 1140, 1181, 1192, 1194, 1195, 1199, 1223, 1224, 1230, 1232, 1248, 1251, 1257, 1263, 1265, 1294, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1364, 1366, 1367, 1368, 1372, 1379, 1387, 1393, 1394, 1395, 1396, 1397, 1418, 1419, 1420, 1421, 1422, 1427, 1430, 1431, 1432, 1434, 1441, 1442, 1454, 1458, 1459, 1460, 1466, 1475, 1493, 1494, 1495, 1498, 1499, 1509, 1519, 1526, 1538, 1550, 1551, 1552, 1561, 1569, 1582, 1607, 1649, 1651, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1697, 1720, 1721, 1731, 1751, 1755, 1797, 1812, 1816, 1851, 1862, 1871, 1873, 1874, 1881, 1888, 1892, 1893, 1894, 1898, 1899, 1900, 1901, 1902, 1903, 1907, 1909, 1910, 1911, 1912, 1915, 1916, 1918, 1919, 1922, 1925, 1928, 1935, 1936, 1938, 1942, 1943, 1945, 1946, 1947, 1950, 1953, 1956, 1957, 1958], "case": [0, 1, 3, 4, 8, 9, 11, 13, 14, 20, 21, 23, 25, 27, 29, 31, 32, 33, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 71, 141, 145, 187, 343, 485, 488, 669, 749, 773, 780, 783, 809, 810, 812, 815, 847, 854, 882, 890, 892, 896, 910, 912, 917, 954, 967, 992, 1014, 1015, 1034, 1035, 1036, 1067, 1088, 1090, 1098, 1099, 1100, 1115, 1125, 1129, 1134, 1153, 1179, 1192, 1195, 1203, 1206, 1207, 1209, 1223, 1225, 1229, 1230, 1234, 1239, 1240, 1241, 1243, 1249, 1252, 1257, 1259, 1263, 1265, 1266, 1271, 1274, 1283, 1294, 1317, 1335, 1340, 1341, 1342, 1343, 1344, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1366, 1367, 1368, 1369, 1371, 1372, 1374, 1383, 1384, 1385, 1386, 1387, 1388, 1394, 1395, 1396, 1413, 1418, 1420, 1421, 1422, 1433, 1434, 1435, 1445, 1458, 1464, 1469, 1474, 1476, 1478, 1491, 1509, 1518, 1526, 1530, 1531, 1561, 1563, 1570, 1607, 1609, 1610, 1614, 1616, 1619, 1620, 1653, 1654, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1697, 1735, 1738, 1751, 1753, 1767, 1770, 1816, 1817, 1847, 1851, 1865, 1869, 1874, 1879, 1886, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1905, 1907, 1908, 1910, 1912, 1915, 1916, 1917, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1939, 1945, 1946, 1947, 1948, 1950, 1953, 1955, 1956, 1957, 1958, 1960], "decreas": [0, 29, 1024, 1239, 1366, 1367, 1368, 1372, 1440, 1641, 1642, 1684, 1691, 1699, 1880, 1882, 1907, 1909, 1928, 1931], "attempt": [0, 1, 8, 13, 23, 40, 41, 46, 51, 72, 935, 941, 944, 955, 1198, 1204, 1283, 1576, 1609, 1610, 1672, 1673, 1851, 1854, 1871, 1874, 1887, 1888, 1893, 1897, 1899, 1911, 1915, 1916, 1924, 1945, 1946, 1947, 1957], "bring": [0, 47, 54, 1088, 1491, 1526, 1917, 1951, 1954], "number": [0, 1, 2, 3, 4, 5, 7, 13, 20, 21, 23, 27, 28, 29, 31, 38, 39, 40, 43, 47, 49, 52, 54, 55, 60, 72, 79, 145, 164, 209, 223, 245, 304, 343, 368, 389, 393, 425, 436, 461, 463, 464, 471, 482, 486, 488, 502, 504, 506, 532, 534, 535, 547, 572, 573, 574, 576, 577, 578, 597, 606, 674, 675, 676, 677, 678, 679, 680, 687, 747, 749, 757, 758, 761, 762, 763, 770, 808, 854, 866, 879, 897, 909, 911, 912, 917, 921, 923, 927, 935, 936, 940, 954, 958, 959, 963, 973, 975, 981, 990, 999, 1000, 1011, 1013, 1014, 1015, 1024, 1034, 1035, 1038, 1039, 1059, 1062, 1064, 1067, 1068, 1072, 1080, 1110, 1112, 1115, 1120, 1122, 1136, 1138, 1144, 1145, 1146, 1150, 1154, 1155, 1156, 1168, 1170, 1191, 1192, 1194, 1207, 1214, 1217, 1218, 1225, 1239, 1248, 1257, 1261, 1266, 1271, 1282, 1286, 1294, 1306, 1307, 1311, 1313, 1316, 1317, 1321, 1325, 1328, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1349, 1350, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1369, 1370, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1393, 1394, 1397, 1398, 1403, 1404, 1405, 1406, 1407, 1408, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1444, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1493, 1494, 1495, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1517, 1518, 1521, 1522, 1527, 1537, 1538, 1540, 1543, 1550, 1551, 1552, 1561, 1563, 1569, 1570, 1576, 1598, 1607, 1615, 1619, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1644, 1648, 1653, 1654, 1655, 1657, 1658, 1667, 1675, 1688, 1689, 1690, 1691, 1694, 1695, 1697, 1698, 1699, 1705, 1708, 1712, 1722, 1724, 1725, 1726, 1728, 1729, 1730, 1735, 1737, 1738, 1741, 1742, 1743, 1744, 1752, 1756, 1759, 1760, 1762, 1763, 1764, 1765, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1790, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1808, 1809, 1810, 1811, 1812, 1813, 1817, 1831, 1832, 1833, 1841, 1843, 1848, 1849, 1853, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1867, 1870, 1872, 1873, 1874, 1875, 1876, 1881, 1884, 1886, 1889, 1892, 1895, 1897, 1899, 1902, 1905, 1907, 1908, 1910, 1912, 1915, 1916, 1917, 1918, 1920, 1923, 1924, 1925, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1942, 1945, 1946, 1947, 1954, 1957, 1959, 1960], "expect": [0, 1, 3, 5, 7, 9, 20, 21, 23, 25, 27, 31, 38, 40, 42, 44, 46, 51, 52, 54, 67, 669, 686, 749, 843, 890, 891, 892, 893, 894, 895, 1013, 1088, 1090, 1107, 1108, 1109, 1128, 1129, 1168, 1191, 1194, 1209, 1210, 1238, 1259, 1260, 1294, 1346, 1347, 1363, 1379, 1380, 1381, 1382, 1391, 1392, 1393, 1397, 1398, 1399, 1409, 1410, 1411, 1427, 1433, 1434, 1442, 1444, 1460, 1466, 1470, 1472, 1474, 1479, 1517, 1523, 1537, 1561, 1569, 1570, 1582, 1595, 1596, 1597, 1598, 1607, 1641, 1700, 1756, 1825, 1860, 1869, 1870, 1876, 1894, 1898, 1901, 1902, 1905, 1912, 1915, 1916, 1919, 1920, 1921, 1924, 1928, 1933, 1935, 1943, 1946, 1947, 1951, 1953], "alwai": [0, 5, 7, 13, 16, 20, 21, 23, 38, 42, 44, 46, 50, 54, 331, 438, 448, 783, 869, 887, 890, 896, 910, 919, 929, 935, 941, 963, 1013, 1024, 1054, 1062, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1098, 1099, 1100, 1101, 1103, 1106, 1110, 1151, 1152, 1194, 1204, 1209, 1224, 1229, 1230, 1231, 1232, 1234, 1235, 1247, 1250, 1251, 1252, 1253, 1257, 1259, 1323, 1343, 1345, 1346, 1347, 1364, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1463, 1466, 1598, 1607, 1640, 1739, 1740, 1766, 1812, 1816, 1848, 1851, 1874, 1875, 1886, 1889, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1916, 1917, 1923, 1924, 1926, 1928, 1931, 1934, 1935, 1942, 1945, 1946], "abov": [0, 1, 3, 14, 23, 29, 33, 40, 42, 44, 46, 47, 52, 54, 55, 57, 69, 606, 669, 781, 782, 869, 910, 919, 934, 1024, 1050, 1054, 1055, 1056, 1057, 1058, 1067, 1139, 1151, 1152, 1194, 1195, 1214, 1225, 1229, 1230, 1248, 1250, 1251, 1254, 1257, 1260, 1263, 1266, 1343, 1374, 1427, 1455, 1463, 1478, 1576, 1598, 1655, 1691, 1715, 1726, 1727, 1759, 1764, 1777, 1796, 1837, 1840, 1841, 1842, 1843, 1869, 1871, 1873, 1874, 1881, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1905, 1907, 1909, 1910, 1912, 1916, 1919, 1924, 1925, 1926, 1928, 1929, 1935, 1939, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1957], "our": [0, 3, 7, 8, 23, 36, 39, 40, 41, 43, 50, 51, 52, 54, 886, 1087, 1124, 1343, 1672, 1673, 1759, 1894, 1899, 1902, 1907, 1912, 1915, 1919, 1925, 1928, 1939, 1942, 1945, 1946, 1947, 1949, 1950, 1951, 1956, 1957], "NOT": [0, 20, 23, 31, 40, 41, 42, 54, 915, 1194, 1276, 1367, 1607, 1608, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1652, 1662, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1894, 1912, 1926, 1928], "make": [0, 1, 2, 3, 4, 5, 8, 13, 14, 20, 21, 23, 25, 26, 28, 29, 31, 32, 37, 40, 41, 42, 43, 44, 50, 51, 54, 55, 64, 130, 213, 485, 768, 774, 850, 851, 882, 932, 933, 934, 970, 971, 973, 1055, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1107, 1108, 1109, 1194, 1198, 1203, 1204, 1223, 1224, 1236, 1237, 1238, 1266, 1305, 1343, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1388, 1427, 1437, 1474, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1526, 1528, 1537, 1576, 1595, 1607, 1614, 1630, 1647, 1693, 1756, 1789, 1798, 1799, 1800, 1802, 1803, 1834, 1851, 1854, 1869, 1871, 1873, 1874, 1878, 1884, 1886, 1887, 1889, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1905, 1907, 1909, 1911, 1912, 1915, 1916, 1918, 1919, 1920, 1924, 1925, 1926, 1928, 1931, 1933, 1937, 1939, 1944, 1945, 1946, 1947, 1949, 1951, 1953, 1956, 1957, 1958], "guarante": [0, 1, 5, 9, 20, 23, 25, 27, 29, 40, 42, 44, 51, 53, 54, 55, 865, 941, 1194, 1203, 1364, 1427, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1789, 1851, 1894, 1896, 1897, 1908, 1909, 1916, 1918, 1920, 1924, 1926, 1945], "encount": [0, 5, 23, 51, 53, 54, 669, 1607, 1871, 1874, 1876, 1880, 1896, 1908, 1916, 1919, 1943, 1947, 1950, 1953, 1955, 1957], "nan": [0, 1, 29, 417, 418, 488, 673, 675, 678, 679, 680, 683, 686, 687, 870, 874, 909, 925, 1068, 1069, 1070, 1113, 1114, 1115, 1154, 1183, 1184, 1186, 1187, 1233, 1240, 1253, 1256, 1269, 1274, 1292, 1293, 1297, 1321, 1322, 1323, 1324, 1325, 1526, 1611, 1709, 1746, 1751, 1805, 1839, 1851, 1872, 1881, 1893, 1894, 1900, 1908, 1929, 1935], "verifi": [0, 23, 54, 74, 897, 1050, 1667, 1668, 1686, 1837, 1869, 1871, 1883, 1899, 1902, 1912, 1917, 1949], "compat": [0, 1, 13, 20, 25, 29, 31, 44, 46, 50, 51, 54, 55, 486, 487, 592, 606, 669, 804, 805, 806, 879, 922, 952, 953, 1194, 1199, 1211, 1224, 1235, 1248, 1251, 1427, 1433, 1470, 1471, 1472, 1473, 1474, 1537, 1651, 1662, 1664, 1738, 1869, 1870, 1873, 1874, 1880, 1886, 1887, 1893, 1899, 1910, 1912, 1916, 1918, 1919, 1922, 1924, 1928, 1930, 1936], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 145, 147, 164, 175, 182, 199, 215, 216, 217, 218, 219, 224, 245, 251, 254, 280, 289, 291, 302, 304, 306, 308, 312, 343, 392, 393, 417, 418, 435, 438, 439, 444, 471, 473, 477, 485, 496, 497, 502, 504, 506, 509, 527, 532, 533, 536, 545, 547, 549, 567, 569, 570, 572, 573, 574, 576, 577, 578, 584, 585, 586, 587, 594, 596, 597, 606, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 740, 741, 742, 744, 745, 746, 747, 749, 757, 758, 759, 761, 762, 763, 764, 767, 769, 771, 772, 774, 783, 785, 788, 791, 806, 809, 810, 811, 814, 843, 845, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 887, 890, 891, 892, 894, 897, 898, 900, 902, 903, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 950, 951, 954, 955, 956, 957, 958, 959, 967, 973, 982, 984, 1010, 1011, 1037, 1041, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1065, 1067, 1069, 1070, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1123, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1135, 1136, 1137, 1147, 1151, 1153, 1154, 1155, 1156, 1157, 1160, 1164, 1168, 1171, 1179, 1190, 1191, 1192, 1194, 1198, 1200, 1201, 1205, 1213, 1214, 1215, 1216, 1217, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1255, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1283, 1287, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1301, 1312, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1331, 1333, 1334, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1415, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1458, 1460, 1461, 1462, 1464, 1466, 1469, 1470, 1472, 1474, 1475, 1476, 1478, 1479, 1482, 1483, 1484, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1526, 1529, 1530, 1531, 1534, 1535, 1536, 1537, 1541, 1542, 1544, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1570, 1572, 1576, 1577, 1580, 1582, 1585, 1591, 1592, 1593, 1594, 1595, 1598, 1607, 1611, 1614, 1615, 1619, 1624, 1625, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1640, 1641, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1653, 1654, 1655, 1659, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1708, 1709, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1746, 1747, 1751, 1753, 1754, 1755, 1758, 1760, 1764, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1789, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1818, 1819, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1848, 1849, 1850, 1851, 1853, 1856, 1857, 1858, 1860, 1861, 1862, 1863, 1865, 1867, 1868, 1869, 1871, 1872, 1873, 1874, 1881, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1921, 1924, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1952, 1955, 1956, 1958, 1960], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 13, 17, 18, 20, 21, 23, 29, 38, 44, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 145, 182, 199, 224, 251, 280, 289, 304, 306, 308, 312, 392, 393, 435, 461, 488, 502, 504, 506, 512, 526, 533, 547, 549, 573, 574, 575, 576, 577, 596, 674, 675, 679, 686, 723, 728, 729, 730, 731, 732, 734, 735, 749, 751, 762, 763, 850, 851, 854, 869, 875, 876, 877, 890, 893, 895, 909, 912, 919, 920, 921, 925, 927, 931, 934, 935, 936, 939, 954, 958, 1046, 1048, 1050, 1057, 1059, 1061, 1062, 1065, 1066, 1067, 1070, 1083, 1085, 1087, 1088, 1094, 1095, 1098, 1103, 1106, 1107, 1110, 1113, 1115, 1116, 1117, 1125, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1137, 1147, 1153, 1155, 1157, 1159, 1160, 1171, 1179, 1183, 1200, 1204, 1205, 1214, 1215, 1216, 1219, 1222, 1223, 1240, 1243, 1246, 1249, 1250, 1251, 1252, 1257, 1258, 1261, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1276, 1280, 1287, 1288, 1294, 1295, 1299, 1324, 1326, 1327, 1329, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1344, 1345, 1346, 1347, 1351, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1381, 1382, 1383, 1388, 1390, 1391, 1392, 1393, 1394, 1397, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1415, 1418, 1423, 1424, 1427, 1434, 1437, 1441, 1442, 1448, 1449, 1450, 1451, 1452, 1455, 1458, 1464, 1466, 1470, 1472, 1474, 1476, 1477, 1478, 1479, 1480, 1481, 1492, 1493, 1501, 1502, 1504, 1505, 1509, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1521, 1522, 1524, 1526, 1529, 1537, 1561, 1563, 1569, 1585, 1595, 1596, 1597, 1607, 1619, 1629, 1632, 1634, 1635, 1637, 1642, 1643, 1645, 1647, 1653, 1654, 1655, 1657, 1658, 1662, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1688, 1694, 1698, 1704, 1706, 1708, 1709, 1711, 1712, 1715, 1716, 1719, 1720, 1721, 1722, 1726, 1731, 1732, 1735, 1736, 1742, 1743, 1744, 1751, 1764, 1771, 1773, 1774, 1775, 1776, 1779, 1780, 1789, 1794, 1796, 1797, 1798, 1799, 1801, 1804, 1812, 1815, 1816, 1817, 1818, 1819, 1826, 1828, 1830, 1831, 1832, 1834, 1835, 1837, 1846, 1847, 1851, 1856, 1862, 1863, 1864, 1867, 1871, 1872, 1873, 1874, 1875, 1881, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1899, 1901, 1902, 1905, 1906, 1910, 1911, 1912, 1915, 1917, 1919, 1924, 1928, 1929, 1931, 1933, 1934, 1935, 1944, 1955, 1956, 1957], "growth_interv": 0, "2000": [0, 23, 27, 1085, 1087, 1094, 1103, 1116, 1271, 1479, 1691, 1719, 1769, 1770, 1830], "get_backoff_factor": 0, "python": [0, 1, 3, 4, 9, 13, 14, 17, 20, 23, 27, 29, 30, 31, 33, 34, 37, 38, 40, 41, 46, 54, 55, 62, 63, 343, 578, 613, 669, 770, 869, 890, 891, 892, 893, 894, 895, 897, 898, 927, 928, 940, 941, 943, 1004, 1010, 1011, 1013, 1062, 1067, 1085, 1087, 1115, 1120, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1169, 1170, 1192, 1194, 1195, 1197, 1198, 1199, 1204, 1205, 1209, 1265, 1428, 1429, 1437, 1438, 1576, 1607, 1709, 1731, 1735, 1755, 1756, 1791, 1854, 1855, 1862, 1869, 1878, 1880, 1885, 1886, 1888, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1904, 1907, 1910, 1911, 1916, 1919, 1923, 1924, 1925, 1926, 1931, 1934, 1935, 1939, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1953, 1954, 1957, 1958, 1959], "contain": [0, 1, 2, 3, 5, 11, 13, 14, 20, 23, 24, 27, 28, 29, 31, 33, 34, 38, 41, 44, 46, 53, 54, 55, 56, 61, 63, 70, 79, 141, 145, 182, 186, 199, 281, 302, 304, 306, 310, 312, 461, 473, 533, 592, 596, 675, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 749, 803, 826, 830, 866, 881, 882, 890, 891, 892, 893, 894, 895, 896, 906, 909, 910, 911, 919, 921, 925, 943, 954, 955, 959, 969, 980, 981, 982, 983, 984, 1013, 1067, 1101, 1102, 1104, 1110, 1130, 1131, 1134, 1135, 1151, 1152, 1155, 1156, 1164, 1168, 1185, 1192, 1194, 1195, 1200, 1201, 1204, 1209, 1210, 1213, 1224, 1230, 1231, 1232, 1233, 1235, 1237, 1239, 1240, 1256, 1265, 1283, 1287, 1294, 1317, 1323, 1335, 1344, 1363, 1364, 1370, 1371, 1374, 1379, 1380, 1382, 1387, 1397, 1398, 1419, 1427, 1428, 1429, 1434, 1437, 1442, 1444, 1455, 1459, 1466, 1478, 1509, 1517, 1518, 1520, 1591, 1598, 1601, 1602, 1607, 1615, 1616, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1651, 1653, 1662, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1705, 1708, 1733, 1747, 1751, 1811, 1812, 1816, 1832, 1839, 1841, 1843, 1848, 1849, 1853, 1854, 1858, 1862, 1870, 1871, 1873, 1874, 1875, 1881, 1884, 1888, 1889, 1893, 1894, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1908, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1924, 1926, 1928, 1930, 1931, 1933, 1934, 1936, 1937, 1938, 1941, 1943, 1944, 1946, 1949, 1950, 1951, 1954, 1956, 1957, 1958, 1959], "backoff": [0, 1924], "get_growth_factor": 0, "growth": [0, 8], "get_growth_interv": 0, "int": [0, 2, 3, 17, 20, 21, 23, 25, 27, 28, 29, 31, 34, 37, 38, 40, 41, 43, 44, 46, 54, 55, 62, 63, 64, 79, 207, 209, 223, 224, 233, 245, 304, 306, 308, 312, 427, 434, 435, 437, 439, 447, 462, 466, 482, 486, 488, 502, 504, 506, 509, 526, 532, 534, 535, 547, 549, 555, 572, 573, 574, 576, 577, 596, 606, 669, 682, 684, 685, 686, 688, 744, 745, 764, 766, 768, 769, 774, 775, 776, 808, 863, 864, 865, 867, 881, 888, 901, 910, 912, 919, 926, 928, 935, 940, 958, 959, 962, 963, 966, 967, 969, 971, 973, 975, 976, 979, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 995, 996, 997, 999, 1001, 1005, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1054, 1055, 1056, 1057, 1058, 1059, 1065, 1068, 1070, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1135, 1136, 1142, 1144, 1145, 1147, 1151, 1152, 1154, 1155, 1156, 1157, 1168, 1170, 1191, 1192, 1194, 1195, 1197, 1200, 1205, 1213, 1215, 1225, 1226, 1246, 1247, 1250, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1273, 1280, 1281, 1286, 1291, 1293, 1294, 1296, 1299, 1301, 1302, 1303, 1307, 1317, 1322, 1323, 1324, 1325, 1326, 1327, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1370, 1371, 1373, 1374, 1375, 1376, 1378, 1380, 1382, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1412, 1414, 1415, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1429, 1432, 1434, 1435, 1438, 1439, 1440, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1460, 1462, 1463, 1466, 1470, 1472, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1508, 1509, 1510, 1517, 1518, 1525, 1528, 1537, 1545, 1561, 1562, 1563, 1567, 1568, 1582, 1583, 1591, 1595, 1596, 1597, 1607, 1615, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1641, 1643, 1648, 1651, 1654, 1655, 1657, 1658, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1706, 1713, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1726, 1727, 1728, 1730, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1747, 1752, 1753, 1754, 1758, 1762, 1763, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1789, 1792, 1795, 1796, 1797, 1804, 1807, 1809, 1810, 1811, 1812, 1815, 1817, 1821, 1827, 1831, 1832, 1834, 1836, 1837, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1850, 1853, 1854, 1856, 1857, 1858, 1862, 1863, 1867, 1871, 1872, 1873, 1874, 1875, 1884, 1886, 1887, 1889, 1892, 1897, 1900, 1907, 1910, 1912, 1914, 1917, 1918, 1919, 1923, 1924, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1945, 1950, 1952, 1956, 1959, 1960], "interv": [0, 29, 42, 854, 955, 1117, 1308, 1309, 1700, 1724, 1725, 1773, 1884, 1897, 1918], "get_scal": [0, 1893], "sync": [0, 23, 27, 46, 53, 54, 1607, 1897, 1898, 1917, 1942, 1946], "is_en": [0, 1791, 1798, 1799, 1800, 1801, 1802, 1803], "indic": [0, 1, 2, 3, 20, 21, 23, 24, 28, 29, 40, 44, 67, 70, 71, 182, 199, 212, 304, 306, 308, 309, 310, 312, 461, 502, 504, 506, 533, 561, 562, 572, 603, 684, 685, 724, 734, 735, 863, 864, 865, 866, 867, 887, 897, 898, 925, 932, 933, 946, 964, 968, 970, 971, 973, 1007, 1046, 1047, 1070, 1125, 1126, 1128, 1129, 1130, 1134, 1135, 1136, 1147, 1168, 1192, 1194, 1199, 1207, 1210, 1211, 1215, 1224, 1235, 1237, 1248, 1251, 1265, 1273, 1281, 1283, 1285, 1291, 1294, 1296, 1299, 1305, 1317, 1323, 1327, 1335, 1336, 1337, 1338, 1363, 1370, 1371, 1375, 1376, 1421, 1422, 1423, 1424, 1425, 1430, 1432, 1433, 1488, 1489, 1490, 1509, 1517, 1518, 1521, 1522, 1538, 1553, 1554, 1555, 1563, 1576, 1591, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1653, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1695, 1697, 1716, 1751, 1789, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1826, 1827, 1831, 1834, 1840, 1841, 1842, 1843, 1848, 1849, 1851, 1852, 1854, 1862, 1865, 1871, 1872, 1874, 1878, 1887, 1888, 1899, 1907, 1910, 1912, 1914, 1924, 1928, 1932, 1933, 1935, 1948, 1950, 1952, 1957], "load_state_dict": [0, 21, 25, 27, 46, 1194, 1265, 1427, 1598, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1869, 1870, 1905, 1910, 1919], "state_dict": [0, 21, 25, 27, 44, 46, 825, 826, 1194, 1427, 1598, 1633, 1651, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1869, 1883, 1898, 1905, 1907, 1910, 1912, 1919, 1937], "load": [0, 1, 11, 13, 14, 21, 25, 27, 46, 826, 851, 905, 941, 969, 1198, 1204, 1209, 1371, 1598, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1747, 1870, 1871, 1882, 1883, 1888, 1894, 1897, 1904, 1905, 1909, 1911, 1912, 1924, 1933, 1949, 1951, 1955, 1957], "scaler": [0, 1893, 1897], "dict": [0, 3, 5, 20, 21, 23, 24, 25, 27, 28, 29, 31, 34, 38, 42, 44, 46, 48, 50, 54, 669, 781, 782, 783, 804, 805, 806, 825, 843, 899, 941, 1010, 1011, 1024, 1033, 1123, 1133, 1135, 1192, 1193, 1194, 1195, 1200, 1205, 1209, 1210, 1265, 1266, 1364, 1374, 1427, 1428, 1437, 1478, 1598, 1607, 1630, 1649, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1862, 1869, 1871, 1872, 1874, 1875, 1883, 1884, 1899, 1905, 1910, 1912, 1914, 1915, 1924, 1925, 1933, 1937, 1938, 1953, 1956, 1958], "object": [0, 1, 3, 5, 6, 8, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 40, 42, 44, 46, 53, 54, 55, 57, 79, 197, 200, 592, 782, 783, 843, 850, 869, 879, 880, 881, 906, 908, 941, 991, 1002, 1042, 1067, 1106, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1134, 1180, 1181, 1194, 1200, 1201, 1204, 1205, 1209, 1210, 1225, 1246, 1250, 1263, 1265, 1266, 1286, 1364, 1366, 1367, 1368, 1372, 1390, 1391, 1392, 1427, 1437, 1466, 1607, 1617, 1632, 1641, 1642, 1645, 1646, 1647, 1662, 1664, 1665, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1747, 1820, 1821, 1824, 1852, 1855, 1869, 1873, 1874, 1875, 1878, 1882, 1883, 1886, 1890, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1907, 1909, 1910, 1911, 1912, 1915, 1919, 1921, 1922, 1923, 1924, 1926, 1930, 1931, 1933, 1935, 1943, 1944, 1946, 1950, 1953, 1956, 1958, 1959, 1960], "unmodifi": [0, 23, 1944], "iter": [0, 1, 2, 3, 7, 21, 23, 24, 25, 27, 29, 41, 43, 46, 54, 55, 60, 980, 981, 982, 983, 984, 1013, 1016, 1018, 1039, 1194, 1266, 1427, 1428, 1429, 1437, 1438, 1607, 1608, 1611, 1612, 1613, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1648, 1650, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1691, 1694, 1705, 1775, 1817, 1872, 1874, 1875, 1886, 1888, 1893, 1894, 1895, 1897, 1898, 1899, 1902, 1905, 1915, 1918, 1923, 1933, 1947, 1950, 1956, 1957, 1958], "set_backoff_factor": 0, "new_factor": 0, "new_scal": 0, "set_growth_factor": 0, "set_growth_interv": 0, "new_interv": 0, "It": [0, 1, 3, 4, 5, 7, 8, 16, 17, 20, 21, 23, 24, 25, 28, 29, 31, 33, 37, 38, 39, 40, 41, 42, 44, 46, 48, 50, 51, 52, 53, 54, 55, 71, 141, 187, 463, 464, 502, 504, 506, 533, 546, 878, 879, 880, 881, 882, 886, 941, 943, 946, 948, 952, 953, 984, 989, 995, 996, 1014, 1015, 1034, 1035, 1043, 1090, 1119, 1124, 1127, 1135, 1136, 1155, 1191, 1194, 1195, 1200, 1204, 1226, 1230, 1234, 1237, 1239, 1241, 1242, 1247, 1251, 1252, 1254, 1255, 1257, 1259, 1262, 1263, 1265, 1266, 1274, 1335, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1374, 1421, 1422, 1423, 1424, 1425, 1427, 1434, 1455, 1458, 1478, 1480, 1528, 1538, 1582, 1600, 1601, 1602, 1605, 1606, 1607, 1615, 1616, 1619, 1640, 1643, 1644, 1652, 1662, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1703, 1722, 1735, 1751, 1761, 1767, 1774, 1795, 1847, 1862, 1869, 1873, 1874, 1884, 1886, 1888, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1915, 1916, 1917, 1919, 1924, 1925, 1926, 1928, 1929, 1930, 1932, 1936, 1942, 1943, 1944, 1945, 1946, 1947, 1950, 1951, 1956, 1957, 1959], "five": [0, 1874, 1910], "entri": [0, 3, 23, 24, 27, 29, 38, 40, 41, 306, 724, 847, 848, 906, 1010, 1011, 1057, 1108, 1109, 1168, 1194, 1214, 1370, 1371, 1427, 1433, 1517, 1518, 1603, 1604, 1625, 1626, 1634, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1795, 1871, 1874, 1875, 1881, 1889, 1894, 1898, 1899, 1902, 1905, 1922, 1928, 1933, 1937, 1943, 1944, 1945, 1950], "_growth_track": 0, "recent": [0, 1, 7, 8, 43, 53, 1169, 1179, 1791, 1873, 1874, 1889, 1899, 1908, 1909, 1928, 1935, 1954, 1957], "consecut": [0, 23, 46, 599, 1642, 1687, 1837, 1848, 1849, 1888, 1912], "unskip": 0, "empti": [0, 3, 23, 25, 31, 38, 46, 51, 54, 224, 312, 502, 504, 512, 526, 534, 806, 911, 912, 922, 928, 1067, 1069, 1192, 1195, 1219, 1239, 1240, 1245, 1252, 1275, 1276, 1277, 1278, 1285, 1344, 1363, 1371, 1434, 1499, 1518, 1564, 1647, 1659, 1664, 1801, 1816, 1830, 1851, 1868, 1871, 1872, 1873, 1874, 1876, 1882, 1887, 1888, 1889, 1892, 1895, 1897, 1899, 1912, 1914, 1916, 1928, 1929, 1936, 1945, 1946, 1952, 1955], "wish": [0, 1130, 1807, 1893, 1897, 1899, 1900], "checkpoint": [0, 27, 41, 43, 46, 905, 1265, 1607, 1662, 1869, 1870, 1883, 1901, 1910, 1917, 1926, 1942], "kwarg": [0, 1, 5, 13, 20, 23, 24, 27, 40, 44, 46, 54, 55, 569, 592, 736, 749, 751, 752, 810, 811, 813, 816, 879, 945, 971, 973, 1010, 1011, 1123, 1134, 1135, 1194, 1197, 1199, 1257, 1283, 1379, 1389, 1397, 1416, 1427, 1442, 1457, 1461, 1465, 1467, 1468, 1598, 1603, 1607, 1621, 1626, 1630, 1640, 1647, 1649, 1652, 1663, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1747, 1849, 1862, 1869, 1874, 1875, 1899, 1900, 1905, 1913, 1915, 1924, 1930, 1938, 1943, 1944, 1956, 1957, 1958], "carri": [0, 50, 327, 786, 827, 828, 846, 847, 1895, 1919], "out": [0, 1, 2, 3, 7, 8, 9, 11, 14, 17, 20, 23, 25, 28, 29, 37, 38, 41, 44, 47, 50, 54, 55, 59, 61, 224, 303, 305, 307, 309, 390, 392, 438, 485, 501, 503, 505, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 745, 749, 753, 761, 762, 763, 768, 770, 774, 786, 825, 827, 828, 846, 847, 854, 855, 856, 857, 858, 859, 860, 861, 866, 870, 871, 872, 873, 874, 883, 884, 885, 888, 897, 909, 911, 912, 913, 914, 915, 916, 917, 918, 921, 925, 928, 930, 931, 932, 933, 934, 936, 937, 939, 941, 949, 950, 951, 953, 954, 956, 957, 967, 972, 980, 982, 984, 1011, 1012, 1024, 1025, 1037, 1041, 1046, 1047, 1048, 1049, 1051, 1054, 1059, 1060, 1062, 1063, 1064, 1066, 1067, 1068, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1125, 1127, 1128, 1130, 1135, 1136, 1137, 1138, 1139, 1140, 1148, 1149, 1150, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1188, 1189, 1194, 1205, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1327, 1328, 1329, 1330, 1331, 1332, 1336, 1337, 1338, 1340, 1341, 1342, 1348, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1365, 1366, 1367, 1368, 1370, 1372, 1375, 1376, 1379, 1380, 1395, 1396, 1397, 1412, 1414, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1439, 1440, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1470, 1471, 1472, 1473, 1474, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1497, 1501, 1502, 1503, 1504, 1505, 1506, 1512, 1513, 1514, 1519, 1522, 1526, 1537, 1543, 1562, 1564, 1595, 1607, 1624, 1625, 1626, 1627, 1653, 1654, 1655, 1656, 1658, 1659, 1663, 1686, 1703, 1704, 1708, 1709, 1710, 1712, 1715, 1716, 1722, 1723, 1724, 1726, 1728, 1730, 1731, 1734, 1735, 1736, 1740, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1767, 1768, 1769, 1781, 1782, 1783, 1784, 1789, 1793, 1794, 1805, 1806, 1808, 1809, 1810, 1811, 1813, 1814, 1816, 1827, 1828, 1829, 1832, 1834, 1836, 1839, 1840, 1842, 1844, 1845, 1851, 1857, 1858, 1859, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1881, 1884, 1886, 1888, 1889, 1894, 1895, 1897, 1898, 1899, 1900, 1905, 1907, 1912, 1915, 1916, 1919, 1920, 1922, 1924, 1925, 1926, 1928, 1929, 1931, 1933, 1934, 1938, 1944, 1945, 1946, 1947, 1949, 1950, 1951, 1955, 1956, 1958, 1959], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 13, 14, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29, 31, 37, 38, 39, 40, 41, 44, 46, 48, 50, 51, 54, 55, 57, 62, 63, 69, 70, 71, 477, 606, 669, 749, 768, 774, 781, 782, 783, 789, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 843, 850, 851, 878, 879, 880, 884, 902, 903, 925, 930, 1010, 1024, 1067, 1085, 1087, 1111, 1120, 1133, 1147, 1194, 1195, 1203, 1207, 1214, 1225, 1236, 1246, 1249, 1250, 1263, 1266, 1285, 1288, 1335, 1344, 1350, 1363, 1371, 1374, 1379, 1397, 1427, 1442, 1458, 1474, 1478, 1545, 1576, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1614, 1654, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1694, 1697, 1705, 1716, 1744, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1791, 1792, 1793, 1794, 1801, 1812, 1837, 1845, 1851, 1854, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1880, 1881, 1882, 1883, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1920, 1922, 1924, 1925, 1926, 1928, 1929, 1931, 1932, 1934, 1935, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1955, 1957, 1958, 1959, 1960], "two": [0, 1, 3, 4, 5, 6, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 37, 38, 40, 41, 44, 46, 50, 51, 54, 71, 72, 572, 573, 574, 576, 577, 596, 606, 669, 681, 683, 749, 782, 876, 879, 892, 897, 929, 931, 977, 1016, 1018, 1046, 1047, 1055, 1064, 1067, 1073, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1113, 1114, 1123, 1133, 1155, 1157, 1183, 1192, 1194, 1204, 1207, 1214, 1217, 1219, 1224, 1226, 1229, 1230, 1235, 1236, 1241, 1246, 1249, 1250, 1252, 1253, 1255, 1257, 1262, 1265, 1288, 1291, 1294, 1296, 1299, 1324, 1341, 1343, 1344, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1374, 1379, 1387, 1388, 1394, 1396, 1397, 1418, 1419, 1421, 1427, 1430, 1431, 1432, 1434, 1435, 1441, 1442, 1458, 1459, 1474, 1475, 1476, 1478, 1498, 1499, 1509, 1528, 1538, 1545, 1561, 1569, 1576, 1614, 1619, 1641, 1651, 1653, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1693, 1697, 1716, 1731, 1744, 1759, 1796, 1801, 1816, 1832, 1836, 1837, 1839, 1859, 1863, 1869, 1871, 1873, 1874, 1878, 1880, 1881, 1887, 1888, 1889, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1920, 1924, 1925, 1926, 1928, 1929, 1933, 1934, 1935, 1937, 1938, 1942, 1943, 1945, 1946, 1952, 1955, 1957], "unscale_": [0, 1893], "unless": [0, 1, 4, 7, 21, 23, 42, 44, 46, 47, 54, 141, 488, 829, 847, 886, 912, 1123, 1194, 1237, 1242, 1255, 1265, 1294, 1381, 1427, 1474, 1602, 1630, 1649, 1680, 1686, 1751, 1851, 1874, 1880, 1894, 1897, 1909, 1912, 1916, 1920, 1945], "explicitli": [0, 8, 13, 23, 28, 33, 46, 73, 1004, 1055, 1057, 1067, 1156, 1234, 1247, 1251, 1259, 1301, 1537, 1595, 1697, 1812, 1871, 1873, 1874, 1875, 1880, 1897, 1899, 1902, 1904, 1910, 1912, 1916, 1917, 1923, 1924, 1928, 1945], "earlier": [0, 1, 6, 46, 1816, 1894, 1897, 1901, 1904, 1910, 1912, 1918], "part": [0, 1, 3, 4, 5, 6, 7, 9, 13, 14, 17, 20, 21, 23, 25, 29, 40, 41, 44, 46, 50, 51, 54, 69, 70, 830, 896, 949, 1067, 1184, 1186, 1187, 1190, 1194, 1204, 1206, 1209, 1210, 1224, 1230, 1232, 1241, 1248, 1251, 1427, 1466, 1576, 1607, 1617, 1689, 1716, 1797, 1837, 1840, 1841, 1842, 1843, 1869, 1870, 1871, 1873, 1874, 1882, 1883, 1893, 1894, 1897, 1899, 1901, 1902, 1905, 1910, 1912, 1916, 1917, 1919, 1924, 1925, 1926, 1928, 1933, 1935, 1943, 1946, 1947, 1948, 1955, 1956, 1957], "check": [0, 4, 5, 11, 13, 20, 23, 24, 29, 31, 40, 44, 46, 55, 56, 61, 63, 212, 331, 488, 683, 850, 886, 888, 889, 897, 898, 943, 970, 971, 973, 977, 1006, 1024, 1181, 1191, 1194, 1209, 1210, 1223, 1224, 1229, 1230, 1232, 1235, 1237, 1242, 1248, 1251, 1255, 1257, 1258, 1283, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1427, 1598, 1607, 1616, 1619, 1632, 1642, 1666, 1667, 1668, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1852, 1854, 1869, 1870, 1873, 1874, 1875, 1887, 1888, 1893, 1897, 1899, 1900, 1901, 1904, 1905, 1906, 1909, 1912, 1915, 1916, 1917, 1918, 1924, 1928, 1933, 1935, 1941, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1956, 1957, 1958], "inf": [0, 29, 46, 673, 675, 678, 679, 680, 874, 909, 925, 1183, 1184, 1186, 1188, 1189, 1225, 1240, 1246, 1250, 1253, 1263, 1274, 1321, 1417, 1460, 1470, 1576, 1611, 1625, 1634, 1654, 1744, 1751, 1893, 1894, 1900, 1908, 1929, 1935, 1957], "found": [0, 7, 14, 15, 17, 40, 54, 70, 72, 73, 74, 925, 967, 1046, 1047, 1194, 1198, 1215, 1291, 1294, 1296, 1299, 1323, 1339, 1349, 1372, 1427, 1454, 1751, 1869, 1871, 1874, 1889, 1893, 1899, 1902, 1905, 1907, 1912, 1916, 1918, 1919, 1924, 1933, 1943, 1946, 1951, 1954, 1956, 1958], "otherwis": [0, 1, 3, 5, 7, 9, 11, 13, 20, 23, 24, 30, 33, 44, 46, 47, 51, 54, 79, 200, 312, 319, 323, 327, 329, 333, 334, 484, 493, 549, 569, 570, 572, 592, 606, 669, 675, 676, 677, 678, 679, 682, 684, 685, 686, 688, 724, 749, 757, 758, 773, 783, 806, 809, 810, 850, 851, 854, 881, 884, 892, 897, 909, 925, 1008, 1067, 1073, 1106, 1118, 1185, 1191, 1194, 1197, 1200, 1206, 1215, 1239, 1254, 1263, 1265, 1266, 1281, 1286, 1291, 1293, 1294, 1296, 1298, 1299, 1322, 1325, 1341, 1342, 1361, 1363, 1366, 1367, 1368, 1372, 1379, 1383, 1384, 1385, 1386, 1388, 1397, 1413, 1427, 1431, 1432, 1433, 1434, 1435, 1437, 1442, 1443, 1445, 1458, 1464, 1466, 1469, 1470, 1472, 1474, 1475, 1476, 1494, 1495, 1528, 1530, 1531, 1535, 1570, 1580, 1607, 1614, 1619, 1640, 1644, 1652, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1703, 1705, 1713, 1715, 1722, 1731, 1738, 1751, 1759, 1767, 1810, 1811, 1812, 1815, 1847, 1848, 1849, 1857, 1858, 1865, 1869, 1871, 1873, 1874, 1881, 1882, 1887, 1893, 1899, 1900, 1907, 1912, 1919, 1920, 1922, 1923, 1924, 1926, 1929, 1930, 1931, 1932, 1933, 1935, 1958], "skip": [0, 40, 848, 943, 1067, 1120, 1223, 1224, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1785, 1853, 1871, 1893, 1894, 1897, 1898, 1899, 1905, 1915, 1918, 1924, 1945, 1947, 1948, 1950], "avoid": [0, 5, 8, 9, 20, 23, 28, 29, 38, 41, 46, 54, 55, 62, 63, 182, 199, 438, 770, 854, 882, 922, 941, 1024, 1194, 1239, 1265, 1362, 1393, 1394, 1418, 1427, 1436, 1441, 1478, 1508, 1538, 1562, 1569, 1607, 1615, 1686, 1737, 1766, 1812, 1830, 1848, 1870, 1884, 1888, 1894, 1896, 1897, 1901, 1902, 1905, 1917, 1924, 1925, 1932, 1933, 1934, 1945, 1946, 1947, 1948, 1950], "corrupt": [0, 23, 40, 1364, 1897, 1907], "param": [0, 1, 27, 29, 32, 40, 46, 48, 50, 54, 753, 784, 1123, 1133, 1194, 1212, 1427, 1433, 1437, 1438, 1606, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1699, 1853, 1872, 1882, 1892, 1893, 1897, 1898, 1915, 1958], "appli": [0, 1, 3, 5, 8, 21, 25, 27, 28, 29, 31, 33, 40, 44, 46, 50, 51, 52, 54, 55, 64, 68, 69, 70, 110, 312, 389, 462, 502, 506, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 724, 727, 728, 729, 730, 731, 732, 747, 749, 755, 756, 757, 758, 759, 760, 761, 762, 763, 769, 770, 771, 772, 773, 799, 800, 801, 802, 829, 847, 886, 888, 889, 897, 914, 917, 943, 954, 1055, 1057, 1062, 1071, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1115, 1123, 1124, 1131, 1134, 1135, 1194, 1198, 1243, 1266, 1283, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1369, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1442, 1445, 1446, 1447, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1519, 1521, 1522, 1523, 1524, 1527, 1529, 1530, 1531, 1532, 1536, 1537, 1538, 1540, 1541, 1543, 1544, 1545, 1546, 1547, 1548, 1550, 1551, 1552, 1556, 1561, 1569, 1570, 1571, 1572, 1576, 1577, 1578, 1579, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1598, 1603, 1604, 1607, 1614, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1640, 1641, 1648, 1649, 1651, 1652, 1654, 1670, 1682, 1686, 1699, 1712, 1717, 1718, 1719, 1720, 1721, 1761, 1792, 1793, 1795, 1812, 1848, 1849, 1850, 1862, 1871, 1874, 1881, 1886, 1888, 1893, 1894, 1897, 1898, 1899, 1900, 1902, 1905, 1908, 1912, 1915, 1916, 1917, 1919, 1922, 1925, 1928, 1929, 1941, 1942, 1944, 1948, 1956], "argument": [0, 1, 3, 4, 5, 8, 9, 13, 17, 20, 23, 24, 25, 27, 29, 31, 38, 41, 43, 44, 46, 50, 51, 53, 54, 55, 61, 62, 63, 71, 79, 141, 187, 200, 304, 312, 435, 436, 437, 438, 439, 477, 502, 506, 549, 569, 570, 572, 573, 574, 576, 577, 592, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 723, 727, 728, 729, 730, 731, 732, 782, 783, 788, 808, 809, 810, 813, 814, 815, 830, 846, 847, 850, 852, 854, 869, 870, 871, 872, 873, 874, 878, 879, 880, 881, 882, 886, 887, 888, 891, 893, 894, 895, 896, 897, 902, 903, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 921, 925, 928, 930, 931, 932, 933, 934, 936, 938, 939, 945, 949, 953, 954, 956, 957, 959, 967, 989, 991, 995, 996, 1002, 1010, 1011, 1013, 1036, 1040, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1072, 1077, 1080, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1168, 1171, 1188, 1189, 1191, 1194, 1197, 1205, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1371, 1374, 1377, 1379, 1386, 1389, 1390, 1391, 1392, 1393, 1397, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1423, 1424, 1425, 1427, 1428, 1433, 1434, 1435, 1442, 1466, 1474, 1478, 1480, 1481, 1524, 1526, 1562, 1598, 1601, 1602, 1603, 1604, 1607, 1618, 1619, 1621, 1625, 1626, 1630, 1634, 1640, 1649, 1653, 1655, 1658, 1659, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1691, 1703, 1704, 1708, 1709, 1712, 1713, 1715, 1716, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1744, 1746, 1751, 1755, 1761, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1789, 1791, 1793, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1848, 1851, 1857, 1858, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1872, 1873, 1874, 1876, 1878, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1909, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1928, 1929, 1930, 1931, 1933, 1935, 1942, 1946, 1951, 1956, 1958, 1960], "keyword": [0, 1, 5, 20, 23, 24, 27, 44, 51, 54, 55, 61, 71, 79, 304, 312, 435, 436, 437, 438, 439, 570, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 850, 854, 869, 870, 871, 872, 873, 874, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 921, 925, 928, 930, 932, 933, 934, 936, 938, 939, 949, 953, 954, 956, 957, 959, 967, 980, 982, 984, 1010, 1011, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1059, 1062, 1064, 1066, 1068, 1069, 1070, 1072, 1077, 1080, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1120, 1121, 1122, 1123, 1136, 1137, 1138, 1139, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1168, 1171, 1188, 1189, 1194, 1197, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1284, 1285, 1287, 1288, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1364, 1386, 1389, 1427, 1601, 1602, 1607, 1619, 1621, 1626, 1630, 1649, 1653, 1655, 1658, 1659, 1662, 1703, 1704, 1708, 1709, 1712, 1713, 1715, 1716, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1744, 1746, 1751, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1789, 1791, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1808, 1809, 1810, 1811, 1813, 1815, 1816, 1827, 1828, 1829, 1830, 1834, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1851, 1857, 1858, 1859, 1864, 1865, 1867, 1868, 1869, 1874, 1875, 1888, 1889, 1899, 1908, 1912, 1915, 1924, 1928, 1929, 1933, 1958], "closur": [0, 27, 55, 62, 63, 943, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1948], "divid": [0, 5, 21, 23, 27, 229, 572, 573, 574, 984, 1062, 1065, 1085, 1103, 1112, 1156, 1157, 1204, 1343, 1344, 1350, 1351, 1361, 1387, 1388, 1394, 1418, 1419, 1430, 1431, 1432, 1441, 1458, 1459, 1475, 1476, 1498, 1499, 1509, 1510, 1538, 1561, 1569, 1607, 1816, 1863, 1872, 1914], "need": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 38, 40, 41, 43, 44, 46, 48, 49, 51, 54, 55, 72, 73, 141, 245, 461, 484, 488, 572, 669, 723, 724, 808, 809, 810, 813, 814, 815, 830, 847, 878, 882, 886, 887, 896, 922, 923, 931, 1004, 1013, 1020, 1055, 1057, 1067, 1088, 1090, 1110, 1123, 1194, 1287, 1317, 1363, 1370, 1423, 1424, 1425, 1427, 1433, 1470, 1472, 1474, 1501, 1502, 1503, 1594, 1607, 1619, 1621, 1625, 1627, 1655, 1662, 1686, 1732, 1737, 1751, 1809, 1837, 1852, 1854, 1870, 1871, 1873, 1874, 1881, 1882, 1886, 1888, 1889, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1922, 1924, 1925, 1926, 1928, 1930, 1931, 1935, 1938, 1939, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1953, 1955, 1957, 1958], "modifi": [0, 1, 17, 20, 21, 23, 24, 25, 27, 46, 54, 55, 251, 477, 780, 827, 828, 829, 886, 888, 889, 902, 903, 943, 952, 953, 1147, 1191, 1194, 1197, 1198, 1213, 1370, 1427, 1470, 1472, 1474, 1517, 1518, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1611, 1612, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1689, 1697, 1779, 1871, 1874, 1887, 1893, 1897, 1899, 1900, 1905, 1910, 1916, 1917, 1919, 1924, 1929, 1932, 1934, 1938, 1944, 1945, 1946, 1947, 1953, 1957], "inspect": [0, 1, 23, 44, 46, 54, 905, 1194, 1205, 1893, 1899, 1904, 1916, 1920, 1931, 1947, 1949, 1951, 1958], "between": [0, 1, 2, 3, 7, 16, 17, 21, 23, 28, 29, 30, 40, 41, 42, 44, 46, 53, 54, 187, 502, 572, 573, 574, 576, 577, 596, 606, 678, 679, 680, 684, 685, 749, 761, 762, 763, 791, 846, 854, 873, 882, 884, 891, 893, 894, 895, 897, 898, 929, 941, 959, 970, 977, 979, 1026, 1030, 1044, 1045, 1050, 1067, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1118, 1147, 1154, 1191, 1194, 1205, 1229, 1230, 1252, 1257, 1324, 1343, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1366, 1367, 1368, 1372, 1374, 1379, 1388, 1394, 1403, 1404, 1405, 1406, 1407, 1408, 1418, 1420, 1421, 1422, 1427, 1430, 1431, 1432, 1436, 1455, 1458, 1459, 1460, 1475, 1476, 1478, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1525, 1550, 1551, 1552, 1566, 1582, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1697, 1699, 1708, 1716, 1720, 1721, 1726, 1727, 1731, 1756, 1809, 1810, 1811, 1812, 1816, 1836, 1837, 1857, 1858, 1871, 1873, 1874, 1875, 1881, 1886, 1889, 1893, 1894, 1896, 1897, 1898, 1902, 1903, 1905, 1907, 1909, 1910, 1912, 1915, 1917, 1919, 1920, 1924, 1926, 1928, 1930, 1933, 1937, 1942, 1950, 1955, 1957], "dure": [0, 1, 5, 13, 17, 21, 23, 25, 31, 32, 34, 40, 44, 46, 53, 54, 55, 68, 70, 71, 326, 492, 493, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 782, 816, 878, 879, 888, 1012, 1013, 1025, 1026, 1045, 1204, 1206, 1207, 1209, 1265, 1339, 1345, 1346, 1347, 1364, 1365, 1370, 1371, 1390, 1391, 1392, 1445, 1466, 1472, 1474, 1511, 1517, 1518, 1598, 1607, 1609, 1610, 1647, 1662, 1665, 1667, 1700, 1797, 1841, 1843, 1873, 1880, 1881, 1882, 1884, 1887, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1908, 1909, 1912, 1916, 1918, 1919, 1922, 1924, 1926, 1935, 1942, 1943, 1947, 1950, 1954, 1955, 1956, 1957, 1959], "simpl": [0, 14, 17, 21, 33, 40, 50, 52, 54, 959, 1024, 1125, 1133, 1134, 1135, 1194, 1198, 1205, 1345, 1346, 1347, 1370, 1400, 1401, 1402, 1427, 1466, 1517, 1663, 1772, 1862, 1869, 1871, 1875, 1889, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1912, 1916, 1924, 1928, 1944, 1946, 1949, 1950], "clip": [0, 46, 955, 1611, 1612, 1872, 1900, 1912, 1914], "util": [0, 7, 16, 41, 44, 46, 47, 53, 54, 55, 721, 724, 727, 728, 729, 734, 735, 745, 749, 753, 779, 787, 984, 1118, 1194, 1379, 1397, 1427, 1442, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1616, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1640, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1820, 1821, 1822, 1823, 1824, 1870, 1874, 1884, 1893, 1895, 1896, 1897, 1899, 1901, 1902, 1904, 1905, 1907, 1912, 1915, 1916, 1917, 1945, 1947, 1955, 1957], "clip_grad_norm_": [0, 46, 1893], "max_norm": [0, 46, 734, 735, 1370, 1371, 1517, 1518, 1611, 1872, 1893], "own": [0, 7, 9, 23, 24, 27, 29, 32, 40, 42, 46, 54, 669, 1002, 1101, 1120, 1156, 1194, 1265, 1355, 1356, 1357, 1358, 1359, 1360, 1427, 1616, 1619, 1874, 1890, 1893, 1897, 1916, 1919, 1920, 1924, 1926, 1928, 1946, 1949], "onc": [0, 1, 7, 9, 14, 20, 21, 23, 24, 25, 27, 29, 30, 32, 33, 40, 46, 49, 51, 53, 54, 69, 886, 887, 888, 890, 892, 1067, 1194, 1198, 1265, 1364, 1427, 1607, 1617, 1619, 1651, 1695, 1699, 1715, 1762, 1766, 1854, 1871, 1874, 1882, 1884, 1886, 1893, 1894, 1896, 1897, 1899, 1902, 1904, 1905, 1915, 1916, 1928, 1933, 1942, 1944, 1947, 1950, 1954], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 51, 52, 53, 54, 79, 141, 251, 304, 306, 312, 326, 476, 502, 504, 506, 535, 549, 596, 599, 606, 669, 675, 676, 681, 683, 687, 688, 724, 749, 780, 782, 783, 803, 829, 843, 847, 850, 863, 866, 878, 879, 880, 882, 883, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 906, 907, 908, 911, 920, 922, 927, 928, 932, 935, 936, 940, 941, 943, 948, 958, 966, 970, 971, 973, 974, 982, 983, 992, 1000, 1004, 1010, 1014, 1015, 1023, 1024, 1031, 1032, 1034, 1035, 1039, 1041, 1043, 1084, 1085, 1086, 1087, 1090, 1093, 1094, 1097, 1100, 1102, 1104, 1120, 1123, 1124, 1130, 1131, 1133, 1134, 1136, 1156, 1159, 1190, 1191, 1194, 1201, 1204, 1205, 1208, 1209, 1229, 1256, 1265, 1281, 1283, 1291, 1293, 1296, 1304, 1305, 1314, 1322, 1323, 1324, 1325, 1335, 1342, 1344, 1348, 1350, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1371, 1374, 1379, 1380, 1381, 1382, 1387, 1393, 1394, 1397, 1398, 1414, 1418, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1466, 1470, 1472, 1474, 1475, 1478, 1483, 1484, 1491, 1497, 1499, 1517, 1518, 1523, 1528, 1547, 1548, 1576, 1582, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1611, 1614, 1619, 1626, 1630, 1640, 1644, 1652, 1653, 1654, 1655, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1691, 1694, 1695, 1698, 1699, 1700, 1701, 1713, 1759, 1791, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1809, 1810, 1811, 1812, 1815, 1831, 1833, 1840, 1841, 1842, 1843, 1846, 1849, 1854, 1857, 1858, 1860, 1864, 1869, 1871, 1872, 1873, 1874, 1880, 1881, 1882, 1884, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1935, 1936, 1937, 1938, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "assign": [0, 1, 7, 9, 10, 20, 23, 31, 40, 41, 51, 54, 669, 827, 828, 829, 1192, 1194, 1195, 1335, 1363, 1427, 1434, 1437, 1438, 1608, 1619, 1871, 1875, 1893, 1899, 1900, 1901, 1912, 1919, 1925, 1926, 1932, 1933], "been": [0, 1, 5, 9, 11, 20, 21, 23, 24, 27, 28, 29, 31, 33, 40, 43, 46, 49, 50, 54, 71, 669, 749, 886, 971, 973, 978, 1006, 1009, 1066, 1071, 1124, 1197, 1198, 1203, 1208, 1265, 1379, 1386, 1397, 1442, 1491, 1526, 1607, 1616, 1621, 1625, 1627, 1647, 1648, 1662, 1669, 1689, 1690, 1691, 1697, 1699, 1715, 1812, 1854, 1864, 1880, 1884, 1886, 1887, 1888, 1893, 1894, 1896, 1897, 1902, 1903, 1905, 1907, 1909, 1911, 1912, 1915, 1916, 1924, 1926, 1928, 1933, 1942, 1943, 1947, 1953, 1957], "accumul": [0, 1, 2, 46, 141, 281, 304, 309, 310, 312, 461, 675, 882, 896, 1263, 1607, 1670, 1671, 1851, 1871, 1872, 1884, 1894, 1897, 1898, 1901, 1908, 1915, 1920, 1924, 1925, 1928, 1945, 1947, 1952, 1957], "twice": [0, 53, 606, 891, 1131, 1893, 1894, 1901, 1902, 1946], "given": [0, 1, 2, 3, 7, 9, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 38, 40, 42, 44, 46, 52, 53, 54, 141, 210, 304, 306, 308, 312, 317, 368, 389, 393, 462, 463, 464, 465, 466, 468, 502, 504, 506, 573, 574, 593, 596, 669, 682, 684, 685, 687, 688, 724, 749, 768, 774, 781, 782, 783, 784, 788, 789, 791, 809, 813, 826, 829, 843, 847, 854, 865, 878, 880, 882, 884, 886, 888, 890, 891, 892, 893, 894, 895, 898, 911, 912, 915, 923, 927, 928, 934, 935, 940, 941, 953, 955, 958, 959, 961, 962, 965, 967, 970, 971, 973, 974, 975, 979, 987, 988, 991, 995, 996, 1012, 1016, 1018, 1019, 1020, 1022, 1024, 1025, 1026, 1030, 1031, 1032, 1033, 1042, 1043, 1044, 1045, 1052, 1054, 1059, 1067, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1107, 1123, 1133, 1134, 1160, 1191, 1194, 1201, 1209, 1210, 1215, 1219, 1229, 1231, 1232, 1241, 1243, 1249, 1257, 1266, 1273, 1275, 1276, 1277, 1278, 1281, 1291, 1293, 1295, 1296, 1299, 1325, 1335, 1343, 1344, 1350, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1370, 1371, 1375, 1376, 1379, 1387, 1397, 1419, 1423, 1424, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1442, 1455, 1461, 1475, 1476, 1479, 1480, 1481, 1491, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1517, 1518, 1521, 1522, 1526, 1537, 1561, 1576, 1591, 1595, 1596, 1597, 1601, 1602, 1603, 1615, 1640, 1647, 1648, 1651, 1654, 1655, 1666, 1667, 1693, 1696, 1698, 1700, 1703, 1708, 1713, 1716, 1717, 1718, 1731, 1737, 1742, 1753, 1754, 1759, 1785, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1812, 1815, 1817, 1826, 1827, 1832, 1834, 1836, 1846, 1851, 1855, 1869, 1870, 1871, 1874, 1878, 1880, 1881, 1883, 1886, 1889, 1890, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1909, 1910, 1912, 1915, 1918, 1919, 1924, 1925, 1928, 1929, 1930, 1933, 1935, 1938, 1941, 1946, 1947, 1950, 1956, 1957, 1958], "trigger": [0, 7, 9, 23, 40, 53, 71, 72, 74, 212, 1041, 1764, 1893, 1894, 1897, 1898, 1899, 1904, 1910, 1924, 1942, 1944, 1947, 1953, 1954, 1957], "runtimeerror": [0, 1, 13, 23, 27, 51, 54, 71, 79, 572, 686, 886, 922, 1115, 1169, 1179, 1194, 1223, 1224, 1225, 1233, 1234, 1235, 1237, 1241, 1247, 1254, 1259, 1260, 1286, 1317, 1427, 1664, 1753, 1791, 1851, 1871, 1873, 1874, 1887, 1889, 1893, 1895, 1901, 1909, 1911, 1912, 1919, 1923, 1928, 1931], "spars": [0, 1, 11, 181, 182, 199, 209, 212, 314, 319, 333, 334, 425, 532, 533, 534, 535, 570, 572, 573, 574, 575, 576, 577, 603, 678, 734, 735, 897, 898, 1041, 1136, 1158, 1179, 1266, 1288, 1298, 1327, 1370, 1371, 1460, 1517, 1518, 1543, 1686, 1705, 1753, 1787, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1808, 1817, 1836, 1851, 1852, 1870, 1872, 1876, 1881, 1892, 1908, 1909, 1914, 1921, 1931, 1932, 1935, 1945, 1952], "place": [0, 3, 7, 11, 20, 21, 23, 25, 30, 31, 44, 46, 49, 50, 54, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 112, 114, 116, 118, 121, 122, 124, 132, 134, 137, 138, 140, 143, 149, 151, 153, 155, 157, 159, 168, 177, 185, 189, 192, 194, 204, 206, 212, 213, 222, 227, 229, 235, 238, 240, 242, 244, 245, 248, 251, 253, 260, 262, 264, 268, 270, 274, 276, 283, 285, 287, 295, 297, 299, 301, 303, 305, 307, 309, 347, 349, 351, 353, 355, 357, 359, 362, 364, 366, 367, 374, 376, 378, 380, 382, 386, 390, 392, 410, 413, 416, 418, 429, 431, 433, 441, 446, 456, 459, 475, 477, 479, 481, 485, 488, 497, 500, 501, 503, 505, 511, 516, 518, 521, 523, 525, 538, 540, 542, 551, 553, 560, 564, 566, 582, 585, 587, 589, 591, 592, 601, 611, 747, 782, 786, 803, 827, 828, 846, 847, 886, 888, 902, 903, 923, 980, 981, 983, 984, 1004, 1067, 1118, 1123, 1124, 1132, 1194, 1238, 1256, 1317, 1339, 1349, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1384, 1385, 1386, 1413, 1427, 1444, 1445, 1446, 1447, 1454, 1469, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1530, 1533, 1542, 1573, 1575, 1590, 1594, 1598, 1603, 1604, 1607, 1611, 1612, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1649, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1742, 1744, 1748, 1749, 1750, 1796, 1832, 1870, 1871, 1873, 1874, 1881, 1888, 1893, 1897, 1899, 1904, 1915, 1916, 1917, 1924, 1925, 1930, 1932, 1934, 1945, 1946, 1947, 1950, 1954, 1956], "replac": [0, 1, 13, 20, 21, 23, 25, 39, 41, 46, 48, 49, 50, 51, 52, 54, 69, 71, 72, 74, 110, 411, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 736, 803, 828, 847, 932, 1013, 1067, 1123, 1124, 1199, 1201, 1211, 1283, 1284, 1317, 1321, 1458, 1469, 1598, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1649, 1651, 1715, 1812, 1816, 1839, 1871, 1872, 1874, 1882, 1897, 1899, 1900, 1902, 1904, 1907, 1911, 1912, 1914, 1916, 1919, 1935, 1943, 1945, 1949, 1956], "were": [0, 1, 2, 3, 17, 23, 31, 40, 43, 44, 46, 51, 53, 54, 141, 312, 326, 461, 843, 878, 880, 882, 896, 1013, 1124, 1135, 1201, 1265, 1491, 1607, 1611, 1616, 1626, 1643, 1682, 1751, 1755, 1826, 1833, 1862, 1873, 1881, 1893, 1897, 1899, 1910, 1912, 1916, 1942, 1946, 1947, 1953, 1956, 1957], "reduc": [0, 2, 3, 13, 21, 23, 24, 25, 27, 46, 312, 502, 505, 506, 675, 682, 684, 685, 686, 688, 808, 809, 810, 811, 814, 816, 863, 864, 941, 981, 992, 1024, 1167, 1246, 1250, 1252, 1257, 1263, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1323, 1324, 1325, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1371, 1387, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1466, 1475, 1498, 1499, 1507, 1509, 1518, 1534, 1537, 1538, 1539, 1549, 1557, 1558, 1559, 1560, 1561, 1562, 1569, 1580, 1581, 1592, 1595, 1607, 1615, 1652, 1675, 1699, 1713, 1715, 1716, 1750, 1793, 1797, 1810, 1811, 1815, 1816, 1837, 1851, 1857, 1858, 1872, 1886, 1887, 1894, 1896, 1898, 1899, 1905, 1907, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1919, 1928, 1942, 1945, 1947, 1952, 1953, 1957, 1958], "occur": [0, 11, 20, 23, 33, 34, 40, 46, 51, 69, 71, 187, 306, 941, 1027, 1067, 1191, 1197, 1207, 1237, 1350, 1466, 1510, 1654, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1873, 1884, 1888, 1893, 1894, 1897, 1901, 1908, 1912, 1918, 1924, 1926, 1932, 1935, 1945, 1947, 1949, 1953, 1955, 1957, 1958, 1959], "increas": [0, 1, 3, 7, 21, 23, 29, 37, 46, 669, 843, 887, 925, 992, 1024, 1067, 1155, 1156, 1335, 1344, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1439, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1567, 1568, 1576, 1684, 1690, 1691, 1695, 1697, 1699, 1751, 1759, 1837, 1856, 1872, 1880, 1885, 1896, 1897, 1903, 1907, 1920, 1928, 1942, 1947, 1951], "set": [0, 1, 2, 3, 5, 8, 9, 12, 13, 19, 20, 21, 23, 24, 25, 27, 29, 31, 33, 38, 40, 41, 42, 43, 44, 46, 49, 50, 53, 54, 55, 66, 68, 79, 141, 145, 245, 321, 435, 436, 437, 438, 439, 448, 485, 488, 509, 569, 570, 669, 724, 730, 732, 749, 768, 774, 781, 782, 783, 786, 804, 805, 806, 809, 810, 811, 814, 815, 830, 843, 847, 848, 850, 851, 854, 867, 879, 881, 882, 889, 890, 891, 892, 893, 894, 895, 896, 920, 925, 936, 940, 941, 953, 978, 993, 1002, 1014, 1015, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1068, 1069, 1070, 1123, 1132, 1141, 1156, 1174, 1175, 1194, 1198, 1201, 1203, 1205, 1207, 1209, 1210, 1229, 1230, 1233, 1239, 1246, 1248, 1250, 1251, 1263, 1264, 1265, 1266, 1280, 1283, 1286, 1307, 1311, 1312, 1313, 1335, 1339, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1372, 1379, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1412, 1414, 1418, 1419, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1437, 1441, 1442, 1458, 1459, 1466, 1470, 1472, 1474, 1475, 1476, 1491, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1519, 1526, 1530, 1537, 1538, 1547, 1548, 1561, 1563, 1569, 1576, 1595, 1607, 1609, 1610, 1615, 1620, 1649, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1715, 1722, 1724, 1728, 1730, 1731, 1739, 1740, 1751, 1752, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1781, 1796, 1810, 1811, 1830, 1840, 1841, 1842, 1843, 1851, 1854, 1855, 1857, 1858, 1869, 1871, 1873, 1874, 1875, 1878, 1880, 1882, 1883, 1884, 1886, 1889, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1933, 1935, 1937, 1938, 1941, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1957, 1958], "directli": [0, 1, 3, 7, 9, 13, 14, 20, 21, 23, 25, 29, 30, 31, 39, 44, 46, 50, 54, 546, 721, 736, 879, 888, 943, 1050, 1118, 1124, 1131, 1133, 1139, 1224, 1433, 1460, 1479, 1537, 1582, 1641, 1837, 1871, 1873, 1874, 1884, 1894, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1910, 1916, 1918, 1919, 1924, 1928, 1933, 1935, 1945, 1946, 1947, 1949, 1951, 1956, 1957], "fill": [0, 23, 145, 164, 249, 250, 251, 277, 308, 312, 368, 391, 435, 436, 437, 439, 444, 471, 597, 612, 912, 1055, 1068, 1069, 1070, 1121, 1122, 1224, 1235, 1237, 1371, 1470, 1518, 1564, 1658, 1659, 1724, 1725, 1726, 1727, 1728, 1729, 1816, 1851, 1867, 1868, 1872, 1878, 1888, 1889, 1892, 1897, 1899, 1910, 1914, 1928, 1935, 1946, 1950, 1952], "later": [0, 1, 2, 3, 7, 19, 21, 23, 28, 46, 53, 54, 734, 735, 745, 753, 905, 1002, 1265, 1397, 1420, 1421, 1422, 1442, 1456, 1550, 1551, 1552, 1579, 1607, 1816, 1871, 1894, 1896, 1897, 1898, 1905, 1910, 1925, 1926, 1950, 1953], "chang": [0, 1, 2, 3, 7, 11, 17, 21, 23, 25, 27, 28, 29, 31, 39, 44, 46, 47, 50, 51, 53, 54, 130, 212, 224, 245, 312, 448, 485, 488, 506, 509, 545, 606, 669, 808, 866, 897, 898, 941, 952, 953, 967, 968, 969, 978, 989, 991, 1002, 1003, 1010, 1011, 1013, 1055, 1103, 1123, 1141, 1147, 1168, 1191, 1194, 1204, 1205, 1224, 1235, 1237, 1238, 1239, 1242, 1255, 1295, 1367, 1370, 1388, 1397, 1427, 1458, 1479, 1491, 1526, 1550, 1551, 1552, 1576, 1598, 1599, 1607, 1609, 1610, 1616, 1619, 1620, 1649, 1653, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1691, 1694, 1695, 1697, 1699, 1701, 1715, 1755, 1759, 1796, 1807, 1810, 1811, 1812, 1836, 1854, 1857, 1858, 1869, 1870, 1871, 1880, 1881, 1882, 1884, 1886, 1887, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1905, 1907, 1908, 1910, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1924, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1942, 1945, 1946, 1948, 1949, 1950, 1953, 1954, 1957], "further": [0, 1, 4, 9, 13, 21, 23, 46, 53, 1139, 1198, 1233, 1335, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1607, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1703, 1874, 1881, 1905, 1907, 1916, 1918, 1926, 1933, 1938, 1941, 1945, 1952, 1955, 1957], "floattensor": [0, 23, 312, 477, 675, 676, 677, 678, 679, 724, 897, 898, 909, 1141, 1370, 1371, 1430, 1470, 1757, 1931, 1934], "end": [0, 7, 8, 9, 20, 21, 23, 29, 33, 37, 49, 54, 352, 353, 527, 749, 773, 786, 809, 810, 854, 910, 954, 968, 1028, 1057, 1067, 1106, 1120, 1147, 1153, 1154, 1191, 1194, 1214, 1219, 1249, 1259, 1261, 1264, 1266, 1280, 1326, 1327, 1342, 1343, 1344, 1361, 1363, 1369, 1373, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1394, 1397, 1398, 1413, 1418, 1421, 1422, 1427, 1429, 1434, 1435, 1438, 1442, 1445, 1455, 1458, 1464, 1469, 1476, 1509, 1518, 1530, 1531, 1607, 1614, 1662, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1689, 1694, 1731, 1764, 1767, 1770, 1785, 1837, 1848, 1849, 1865, 1871, 1872, 1873, 1874, 1886, 1893, 1894, 1897, 1898, 1899, 1901, 1902, 1908, 1911, 1912, 1915, 1918, 1919, 1922, 1924, 1929, 1942, 1946, 1949, 1952, 1957], "reason": [0, 3, 8, 9, 20, 23, 25, 46, 51, 68, 669, 830, 1088, 1090, 1194, 1209, 1210, 1229, 1230, 1257, 1294, 1343, 1367, 1427, 1528, 1576, 1603, 1604, 1619, 1747, 1871, 1873, 1874, 1880, 1894, 1898, 1900, 1908, 1910, 1912, 1924, 1931, 1943, 1945, 1946, 1947, 1950, 1951, 1957, 1958], "do": [0, 1, 4, 7, 8, 9, 11, 13, 14, 20, 21, 23, 27, 28, 30, 31, 33, 40, 41, 42, 44, 46, 47, 48, 51, 52, 53, 54, 71, 484, 502, 504, 506, 747, 812, 815, 852, 881, 883, 888, 897, 927, 940, 941, 1013, 1046, 1047, 1048, 1049, 1118, 1120, 1129, 1136, 1156, 1169, 1181, 1191, 1194, 1197, 1205, 1209, 1239, 1257, 1266, 1273, 1283, 1285, 1294, 1317, 1327, 1339, 1349, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1384, 1385, 1386, 1413, 1445, 1446, 1447, 1454, 1469, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1528, 1530, 1545, 1598, 1607, 1655, 1664, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1703, 1709, 1759, 1851, 1869, 1870, 1871, 1872, 1874, 1876, 1878, 1886, 1887, 1888, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1918, 1919, 1920, 1924, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1942, 1945, 1946, 1949, 1950, 1953, 1954, 1956, 1957, 1959], "synchron": [0, 3, 4, 16, 17, 21, 25, 27, 31, 40, 46, 53, 866, 970, 971, 973, 981, 1001, 1041, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1241, 1242, 1248, 1251, 1254, 1255, 1257, 1258, 1266, 1305, 1466, 1607, 1653, 1655, 1737, 1870, 1896, 1897, 1898, 1903, 1907, 1917, 1924, 1947], "fall": [0, 2, 7, 13, 20, 784, 897, 941, 1156, 1207, 1265, 1388, 1458, 1535, 1580, 1611, 1612, 1869, 1912, 1919], "below": [0, 1, 5, 9, 13, 20, 21, 23, 29, 31, 32, 37, 40, 41, 42, 43, 54, 55, 62, 63, 669, 723, 737, 746, 784, 803, 1010, 1054, 1055, 1056, 1057, 1058, 1067, 1095, 1097, 1101, 1139, 1147, 1194, 1210, 1250, 1251, 1256, 1263, 1295, 1358, 1359, 1360, 1379, 1381, 1388, 1397, 1399, 1423, 1424, 1425, 1427, 1442, 1458, 1479, 1509, 1535, 1580, 1607, 1619, 1653, 1686, 1756, 1759, 1796, 1827, 1837, 1840, 1841, 1842, 1843, 1871, 1873, 1874, 1876, 1880, 1881, 1886, 1887, 1893, 1894, 1897, 1898, 1899, 1902, 1903, 1905, 1907, 1909, 1910, 1912, 1915, 1916, 1917, 1919, 1921, 1924, 1925, 1926, 1929, 1932, 1935, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1953, 1955, 1957], "someth": [0, 3, 7, 48, 54, 55, 57, 890, 892, 1067, 1194, 1209, 1427, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1876, 1884, 1886, 1887, 1894, 1903, 1911, 1912, 1924, 1943, 1945, 1947, 1949, 1950, 1956, 1957, 1958], "wrong": [0, 23, 54, 71, 886, 1192, 1195, 1898, 1907, 1911, 1912, 1915], "incompat": [0, 9, 13, 51, 922, 1191, 1895, 1916], "due": [0, 3, 4, 5, 7, 21, 23, 29, 39, 44, 46, 51, 54, 55, 57, 71, 476, 869, 890, 891, 896, 955, 1206, 1229, 1230, 1257, 1283, 1367, 1381, 1470, 1479, 1537, 1576, 1647, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1817, 1871, 1889, 1897, 1898, 1902, 1903, 1909, 1912, 1919, 1920, 1924, 1926, 1947, 1950, 1953, 1957, 1959], "float64": [0, 11, 231, 436, 439, 569, 869, 949, 1110, 1119, 1141, 1176, 1194, 1223, 1229, 1230, 1232, 1234, 1250, 1427, 1576, 1672, 1673, 1709, 1717, 1756, 1757, 1760, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1860, 1865, 1905, 1908, 1928, 1930, 1931, 1934, 1935, 1960], "variant": [0, 5, 21, 847, 1224, 1235, 1248, 1251, 1324, 1327, 1672, 1673, 1674, 1686, 1839, 1870, 1904, 1922, 1934, 1952, 1953, 1956], "suppli": [0, 5, 7, 13, 14, 23, 1002, 1433, 1668, 1874, 1897, 1912, 1928, 1947, 1957], "won": [0, 8, 21, 25, 40, 49, 448, 1194, 1205, 1427, 1562, 1601, 1602, 1869, 1894, 1899, 1924, 1936, 1946, 1947, 1950, 1955, 1957], "go": [0, 1, 7, 14, 20, 23, 37, 42, 50, 54, 488, 489, 549, 887, 902, 1266, 1340, 1341, 1342, 1420, 1421, 1422, 1873, 1874, 1881, 1886, 1887, 1888, 1894, 1896, 1897, 1899, 1900, 1904, 1905, 1907, 1911, 1912, 1916, 1931, 1933, 1943, 1944, 1945, 1946, 1947, 1950], "addmm": [0, 55, 97, 1808, 1872, 1887, 1908, 1914, 1928, 1952, 1956], "b": [0, 1, 3, 11, 20, 23, 25, 29, 38, 54, 55, 58, 72, 74, 251, 326, 389, 606, 674, 675, 737, 746, 770, 813, 869, 886, 888, 889, 900, 902, 903, 909, 920, 921, 923, 927, 929, 931, 934, 939, 954, 960, 961, 962, 963, 964, 965, 966, 967, 1010, 1011, 1059, 1062, 1066, 1067, 1112, 1113, 1114, 1115, 1120, 1124, 1137, 1159, 1171, 1191, 1197, 1204, 1205, 1213, 1214, 1216, 1225, 1226, 1234, 1238, 1239, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1259, 1260, 1263, 1266, 1275, 1277, 1278, 1284, 1292, 1297, 1299, 1316, 1344, 1348, 1370, 1371, 1378, 1414, 1497, 1499, 1518, 1525, 1543, 1614, 1641, 1642, 1643, 1644, 1645, 1646, 1654, 1662, 1683, 1685, 1716, 1722, 1735, 1738, 1754, 1766, 1785, 1793, 1798, 1799, 1800, 1802, 1803, 1807, 1812, 1813, 1815, 1822, 1823, 1832, 1839, 1840, 1842, 1859, 1864, 1871, 1872, 1873, 1874, 1887, 1888, 1889, 1892, 1893, 1895, 1897, 1899, 1901, 1902, 1903, 1908, 1910, 1918, 1919, 1925, 1926, 1928, 1929, 1932, 1933, 1938, 1943, 1944, 1947, 1949, 1950, 1952, 1956, 1957, 1959], "c": [0, 1, 3, 8, 9, 13, 20, 23, 29, 38, 49, 54, 72, 74, 251, 326, 488, 509, 606, 674, 810, 866, 869, 888, 920, 931, 934, 955, 1004, 1010, 1044, 1059, 1062, 1067, 1113, 1114, 1115, 1124, 1125, 1129, 1134, 1137, 1147, 1194, 1204, 1216, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1243, 1245, 1249, 1250, 1252, 1254, 1256, 1257, 1316, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1363, 1366, 1367, 1368, 1372, 1374, 1375, 1376, 1382, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1409, 1410, 1411, 1415, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1431, 1432, 1434, 1439, 1440, 1448, 1449, 1450, 1451, 1452, 1453, 1461, 1466, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1499, 1509, 1510, 1522, 1526, 1561, 1567, 1568, 1576, 1614, 1642, 1644, 1645, 1646, 1653, 1654, 1703, 1719, 1735, 1773, 1793, 1807, 1812, 1832, 1849, 1853, 1854, 1870, 1871, 1872, 1873, 1874, 1878, 1887, 1888, 1896, 1897, 1898, 1900, 1902, 1904, 1911, 1913, 1916, 1925, 1926, 1928, 1929, 1932, 1933, 1939, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1956, 1957, 1958, 1959], "addmm_": [0, 1872, 1887, 1928], "d": [0, 1, 11, 20, 21, 23, 28, 29, 44, 47, 54, 304, 312, 326, 461, 502, 504, 506, 533, 572, 606, 675, 679, 854, 869, 888, 909, 910, 912, 919, 920, 921, 925, 931, 1054, 1056, 1066, 1067, 1080, 1084, 1085, 1086, 1087, 1092, 1093, 1096, 1097, 1102, 1103, 1104, 1107, 1108, 1109, 1135, 1136, 1151, 1152, 1159, 1168, 1191, 1195, 1199, 1236, 1237, 1287, 1298, 1319, 1334, 1342, 1343, 1347, 1357, 1361, 1362, 1366, 1367, 1368, 1370, 1372, 1374, 1379, 1381, 1392, 1397, 1399, 1411, 1422, 1436, 1442, 1466, 1475, 1476, 1478, 1491, 1526, 1537, 1543, 1570, 1594, 1595, 1615, 1648, 1653, 1654, 1684, 1704, 1722, 1731, 1743, 1751, 1756, 1807, 1812, 1825, 1826, 1832, 1835, 1840, 1841, 1842, 1843, 1856, 1862, 1864, 1869, 1872, 1881, 1887, 1888, 1889, 1892, 1894, 1897, 1899, 1900, 1902, 1903, 1910, 1912, 1924, 1925, 1928, 1929, 1933, 1934, 1946, 1947, 1949, 1955, 1957, 1959], "best": [0, 1, 7, 14, 17, 20, 23, 29, 41, 46, 49, 850, 851, 906, 928, 941, 1209, 1210, 1239, 1433, 1686, 1699, 1870, 1871, 1873, 1886, 1892, 1893, 1894, 1899, 1901, 1916, 1924, 1928, 1939, 1944, 1947, 1951], "stabil": [0, 1225, 1230, 1281, 1344, 1345, 1346, 1347, 1381, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1463, 1466, 1475, 1523, 1584, 1615, 1648, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1719, 1900, 1947, 1957], "respect": [0, 1, 5, 8, 23, 24, 27, 29, 38, 40, 46, 52, 53, 54, 187, 200, 477, 569, 592, 678, 679, 680, 749, 784, 808, 830, 874, 880, 882, 896, 898, 902, 903, 936, 959, 1055, 1057, 1058, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1134, 1147, 1194, 1225, 1229, 1230, 1239, 1249, 1252, 1254, 1257, 1266, 1298, 1321, 1343, 1350, 1358, 1359, 1360, 1364, 1379, 1381, 1397, 1427, 1428, 1442, 1472, 1474, 1475, 1476, 1477, 1479, 1517, 1526, 1603, 1604, 1621, 1625, 1627, 1649, 1651, 1685, 1699, 1790, 1793, 1816, 1832, 1888, 1893, 1894, 1897, 1899, 1902, 1905, 1906, 1917, 1922, 1928, 1929, 1930, 1935, 1946, 1951], "describ": [0, 5, 7, 8, 9, 20, 21, 25, 27, 28, 31, 32, 38, 40, 44, 54, 224, 502, 781, 782, 783, 804, 805, 806, 830, 848, 926, 993, 1010, 1027, 1067, 1147, 1214, 1254, 1335, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1365, 1366, 1367, 1368, 1369, 1372, 1374, 1375, 1376, 1382, 1385, 1388, 1390, 1391, 1392, 1394, 1399, 1418, 1420, 1421, 1422, 1433, 1434, 1441, 1445, 1458, 1466, 1474, 1475, 1476, 1478, 1509, 1521, 1522, 1531, 1564, 1697, 1837, 1870, 1871, 1873, 1874, 1892, 1893, 1894, 1897, 1898, 1901, 1902, 1904, 1905, 1910, 1912, 1916, 1918, 1919, 1922, 1925, 1926, 1935, 1948, 1953], "expos": [0, 1, 8, 23, 27, 46, 53, 54, 784, 1120, 1894, 1897, 1904, 1916, 1919, 1958], "namespac": [0, 54, 1041, 1666, 1871, 1875, 1878, 1899, 1905, 1912, 1917, 1922, 1939, 1958], "defin": [0, 1, 2, 3, 5, 9, 13, 14, 20, 21, 23, 24, 25, 28, 29, 31, 32, 38, 40, 41, 44, 46, 51, 54, 425, 435, 437, 439, 506, 555, 781, 786, 788, 827, 848, 849, 850, 851, 878, 879, 880, 881, 1024, 1050, 1067, 1068, 1087, 1115, 1121, 1137, 1139, 1153, 1155, 1156, 1183, 1194, 1216, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1243, 1245, 1246, 1250, 1251, 1252, 1254, 1256, 1257, 1263, 1299, 1364, 1369, 1375, 1376, 1383, 1384, 1385, 1386, 1393, 1395, 1396, 1427, 1433, 1445, 1460, 1462, 1467, 1469, 1491, 1526, 1576, 1582, 1598, 1601, 1607, 1625, 1627, 1634, 1635, 1655, 1658, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1691, 1694, 1697, 1715, 1724, 1726, 1728, 1735, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1793, 1795, 1837, 1840, 1841, 1842, 1843, 1865, 1867, 1869, 1871, 1874, 1876, 1878, 1886, 1887, 1889, 1894, 1897, 1898, 1902, 1903, 1905, 1907, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1922, 1924, 1928, 1929, 1934, 1935, 1936, 1942, 1943, 1946, 1948, 1950, 1954, 1958], "still": [0, 1, 2, 7, 8, 20, 23, 28, 29, 31, 40, 46, 53, 54, 783, 788, 887, 892, 1198, 1203, 1211, 1394, 1418, 1607, 1608, 1609, 1610, 1699, 1747, 1871, 1874, 1886, 1887, 1888, 1889, 1893, 1894, 1897, 1898, 1899, 1901, 1903, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1924, 1925, 1926, 1928, 1946, 1950, 1952, 1953, 1957, 1959], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 20, 21, 24, 25, 27, 28, 29, 30, 31, 33, 38, 39, 40, 41, 42, 44, 46, 50, 51, 53, 54, 55, 62, 63, 79, 141, 280, 304, 306, 308, 310, 312, 326, 462, 476, 477, 488, 502, 504, 506, 526, 549, 593, 596, 606, 613, 673, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 749, 753, 770, 779, 780, 786, 788, 808, 812, 815, 827, 843, 846, 847, 848, 850, 865, 869, 874, 881, 882, 883, 884, 890, 891, 892, 893, 894, 895, 896, 902, 903, 906, 912, 925, 928, 931, 935, 941, 943, 957, 958, 959, 967, 968, 973, 980, 981, 982, 983, 984, 995, 996, 997, 1024, 1026, 1031, 1032, 1043, 1045, 1050, 1054, 1055, 1056, 1057, 1058, 1067, 1083, 1088, 1091, 1095, 1098, 1101, 1106, 1107, 1108, 1109, 1110, 1115, 1118, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1135, 1136, 1139, 1156, 1168, 1179, 1185, 1191, 1192, 1194, 1195, 1197, 1203, 1204, 1205, 1209, 1226, 1229, 1230, 1239, 1243, 1245, 1246, 1249, 1250, 1254, 1256, 1257, 1259, 1262, 1263, 1265, 1271, 1287, 1294, 1299, 1317, 1323, 1326, 1327, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1345, 1346, 1347, 1350, 1356, 1357, 1359, 1360, 1363, 1364, 1371, 1378, 1379, 1388, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1399, 1413, 1417, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1432, 1433, 1455, 1458, 1460, 1462, 1466, 1475, 1476, 1508, 1525, 1526, 1528, 1538, 1545, 1563, 1564, 1582, 1583, 1591, 1598, 1607, 1614, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1649, 1651, 1654, 1663, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1717, 1731, 1735, 1737, 1738, 1742, 1744, 1751, 1755, 1759, 1764, 1766, 1784, 1789, 1792, 1793, 1795, 1796, 1804, 1807, 1831, 1836, 1837, 1840, 1841, 1842, 1843, 1847, 1848, 1850, 1851, 1854, 1862, 1869, 1871, 1873, 1874, 1876, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1889, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1909, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1937, 1938, 1939, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960], "unlist": 0, "downstream": [0, 3, 1884, 1947, 1948, 1950, 1957], "stabl": [0, 1, 2, 23, 29, 40, 41, 44, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 865, 1067, 1229, 1230, 1234, 1239, 1247, 1251, 1254, 1257, 1259, 1266, 1344, 1789, 1870, 1872, 1892, 1895, 1909, 1924], "believ": [0, 8, 1947], "unstabl": [0, 29, 1229, 1230, 1257, 1274, 1283, 1545, 1816, 1929], "__matmul__": 0, "addbmm": [0, 91, 909, 1872, 1908, 1914], "addmv": [0, 99, 1872, 1887, 1914], "addr": [0, 23, 101, 1872, 1914, 1959], "baddbmm": [0, 143, 1872, 1908, 1914], "bmm": [0, 1851, 1872, 1887, 1889, 1908, 1909, 1914, 1928, 1952], "chain_matmul": [0, 1872, 1914], "multi_dot": [0, 931], "conv1d": [0, 697, 701, 704, 714, 730, 1358, 1366, 1403, 1851, 1872, 1914, 1919, 1921], "conv2d": [0, 698, 702, 705, 707, 715, 731, 781, 803, 1194, 1203, 1205, 1209, 1210, 1359, 1367, 1404, 1427, 1428, 1434, 1455, 1478, 1634, 1851, 1871, 1872, 1882, 1912, 1914, 1919, 1921, 1922, 1933, 1938], "conv3d": [0, 699, 703, 706, 708, 716, 732, 1360, 1368, 1405, 1851, 1872, 1914, 1919, 1921], "conv_transpose1d": [0, 1872, 1914, 1921], "conv_transpose2d": [0, 1872, 1914, 1921], "conv_transpose3d": [0, 1872, 1914, 1921], "grucel": [0, 1908, 1919, 1921, 1922], "lstmcell": [0, 1908, 1919, 1921, 1922], "matmul": [0, 2, 11, 921, 941, 1134, 1298, 1478, 1705, 1715, 1759, 1816, 1872, 1887, 1889, 1897, 1908, 1914, 1921, 1928, 1942], "mv": [0, 11, 1205, 1851, 1872, 1887, 1914, 1928], "prelu": [0, 1428, 1872, 1914, 1921], "rnncell": [0, 1919, 1921, 1922], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 85, 616, 617, 855, 1872, 1887, 1914, 1935, 1952], "asin": [0, 132, 618, 619, 857, 1872, 1887, 1914, 1928, 1952], "cosh": [0, 194, 626, 627, 673, 1872, 1887, 1914, 1952], "cosine_embedding_loss": [0, 1872, 1914], "cdist": [0, 1897, 1914], "cosine_similar": [0, 1476, 1872, 1914], "cross_entropi": [0, 1872], "cumprod": [0, 204, 1872, 1887, 1914], "cumsum": [0, 206, 1050, 1851, 1872, 1887, 1914, 1952], "dist": [0, 21, 23, 24, 27, 29, 41, 46, 932, 933, 1223, 1229, 1230, 1231, 1233, 1234, 1235, 1239, 1240, 1251, 1252, 1255, 1257, 1258, 1281, 1284, 1436, 1466, 1607, 1614, 1816, 1872, 1898, 1914, 1924, 1926], "erfinv": [0, 242, 1872, 1887, 1914, 1928, 1929], "exp": [0, 1, 29, 244, 632, 633, 759, 892, 893, 895, 1110, 1253, 1273, 1281, 1344, 1349, 1363, 1369, 1393, 1416, 1417, 1431, 1441, 1454, 1457, 1459, 1460, 1462, 1463, 1467, 1500, 1546, 1569, 1577, 1578, 1582, 1584, 1587, 1614, 1712, 1773, 1774, 1795, 1812, 1872, 1887, 1894, 1912, 1914, 1929, 1952], "expm1": [0, 248, 634, 635, 1872, 1887, 1914, 1928, 1929, 1952], "group_norm": [0, 1872, 1914, 1921], "hinge_embedding_loss": [0, 1872, 1914], "kl_div": [0, 1872, 1914], "l1_loss": [0, 1872, 1914], "layer_norm": [0, 1399, 1872, 1914, 1921], "log": [0, 13, 20, 21, 29, 31, 33, 34, 37, 38, 42, 66, 68, 367, 368, 642, 649, 669, 1077, 1269, 1271, 1273, 1274, 1281, 1309, 1335, 1343, 1344, 1363, 1381, 1393, 1416, 1417, 1431, 1434, 1441, 1459, 1460, 1463, 1523, 1528, 1538, 1545, 1546, 1561, 1569, 1582, 1584, 1607, 1662, 1870, 1872, 1880, 1884, 1887, 1894, 1897, 1899, 1912, 1914, 1918, 1929, 1933, 1936, 1937, 1938, 1944, 1949, 1950, 1951, 1952, 1954, 1955, 1957], "log_softmax": [0, 1350, 1393, 1510, 1561, 1582, 1872, 1888, 1914, 1929], "log10": [0, 362, 643, 644, 1872, 1887, 1914, 1952], "log1p": [0, 364, 645, 646, 1872, 1887, 1914, 1928, 1929, 1952], "log2": [0, 366, 647, 648, 1872, 1887, 1914, 1929, 1952], "margin_ranking_loss": [0, 1872, 1914], "mse_loss": [0, 50, 1123, 1872, 1914], "multilabel_margin_loss": [0, 1872, 1914], "multi_margin_loss": [0, 1872, 1914], "nll_loss": [0, 1872, 1914], "norm": [0, 29, 46, 48, 54, 691, 692, 693, 694, 695, 696, 929, 1061, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1225, 1229, 1238, 1239, 1246, 1251, 1263, 1370, 1371, 1418, 1436, 1471, 1472, 1473, 1474, 1475, 1517, 1518, 1562, 1566, 1611, 1615, 1624, 1625, 1630, 1633, 1634, 1648, 1651, 1674, 1736, 1872, 1876, 1893, 1894, 1902, 1905, 1908, 1914], "normal": [0, 1, 21, 27, 40, 46, 54, 69, 327, 342, 368, 444, 545, 959, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1155, 1191, 1194, 1199, 1229, 1271, 1339, 1345, 1346, 1347, 1366, 1367, 1368, 1372, 1382, 1390, 1391, 1392, 1399, 1409, 1410, 1411, 1415, 1454, 1466, 1470, 1471, 1472, 1473, 1474, 1496, 1526, 1527, 1536, 1540, 1544, 1570, 1611, 1612, 1615, 1630, 1638, 1639, 1648, 1651, 1683, 1699, 1719, 1728, 1729, 1736, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1812, 1851, 1869, 1870, 1871, 1872, 1876, 1887, 1889, 1892, 1894, 1897, 1900, 1912, 1914, 1916, 1921, 1924, 1929, 1933, 1935, 1936, 1941, 1952, 1960], "pdist": [0, 1436, 1872, 1914], "poisson_nll_loss": [0, 1872, 1914], "pow": [0, 1, 459, 485, 890, 891, 894, 1110, 1872, 1874, 1887, 1893, 1894, 1914, 1928, 1934, 1952], "prod": [0, 37, 312, 506, 1084, 1086, 1089, 1090, 1092, 1093, 1096, 1097, 1099, 1100, 1102, 1104, 1259, 1260, 1370, 1374, 1478, 1851, 1872, 1887, 1914, 1928, 1952], "reciproc": [0, 475, 652, 653, 1746, 1872, 1887, 1914, 1952], "rsqrt": [0, 500, 1872, 1887, 1914, 1952], "sinh": [0, 525, 660, 661, 871, 1872, 1887, 1914, 1928, 1952], "smooth_l1_loss": [0, 1872, 1914], "soft_margin_loss": [0, 1872, 1914], "softmax": [0, 29, 785, 1335, 1363, 1393, 1417, 1461, 1509, 1528, 1538, 1545, 1576, 1583, 1792, 1872, 1887, 1888, 1889, 1897, 1914, 1921, 1928, 1929], "softmin": [0, 1872], "softplu": [0, 29, 1426, 1556, 1872, 1914], "sum": [0, 1, 20, 23, 24, 27, 29, 31, 46, 51, 52, 54, 485, 506, 555, 735, 882, 890, 891, 892, 893, 894, 895, 896, 902, 903, 907, 959, 982, 983, 984, 1049, 1050, 1067, 1127, 1128, 1129, 1134, 1171, 1225, 1246, 1250, 1263, 1271, 1272, 1273, 1281, 1317, 1325, 1343, 1344, 1350, 1360, 1361, 1363, 1364, 1371, 1374, 1381, 1387, 1388, 1393, 1394, 1395, 1396, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1460, 1462, 1475, 1476, 1478, 1498, 1499, 1509, 1510, 1518, 1523, 1528, 1538, 1547, 1548, 1561, 1569, 1582, 1583, 1607, 1630, 1635, 1636, 1654, 1691, 1737, 1759, 1775, 1793, 1795, 1835, 1837, 1851, 1870, 1872, 1874, 1878, 1884, 1887, 1893, 1894, 1897, 1898, 1899, 1900, 1905, 1908, 1912, 1914, 1924, 1925, 1928, 1929, 1934, 1942, 1943, 1944, 1947, 1950, 1952, 1955, 1957, 1959], "renorm": [0, 481, 1370, 1371, 1517, 1518, 1872, 1914], "tan": [0, 564, 664, 665, 872, 1872, 1887, 1914, 1928, 1933, 1952], "triplet_margin_loss": [0, 1872, 1914], "take": [0, 1, 2, 3, 4, 7, 9, 13, 20, 21, 23, 25, 27, 29, 31, 39, 40, 41, 42, 44, 46, 48, 49, 51, 52, 53, 54, 55, 62, 63, 74, 749, 782, 787, 803, 809, 815, 851, 890, 891, 892, 893, 894, 895, 897, 898, 934, 967, 1004, 1055, 1057, 1058, 1083, 1085, 1088, 1091, 1095, 1096, 1098, 1101, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1226, 1248, 1251, 1335, 1344, 1371, 1375, 1376, 1379, 1397, 1421, 1422, 1423, 1424, 1425, 1427, 1435, 1442, 1470, 1480, 1481, 1521, 1522, 1539, 1563, 1576, 1607, 1652, 1683, 1687, 1712, 1839, 1852, 1862, 1869, 1871, 1872, 1874, 1881, 1882, 1886, 1887, 1888, 1889, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1909, 1910, 1911, 1912, 1914, 1916, 1918, 1919, 1924, 1925, 1926, 1928, 1931, 1932, 1933, 1937, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1955, 1956], "addcdiv": [0, 93, 1872, 1914], "addcmul": [0, 95, 1872, 1914], "atan2": [0, 137, 860, 1872, 1887, 1914, 1952], "bilinear": [0, 768, 774, 775, 1067, 1479, 1480, 1526, 1537, 1595, 1596, 1851, 1872, 1914], "cross": [0, 7, 8, 25, 29, 31, 1343, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1498, 1499, 1509, 1872, 1897, 1911, 1914, 1950], "dot": [0, 2, 13, 51, 52, 606, 891, 893, 894, 895, 1046, 1047, 1048, 1049, 1125, 1135, 1171, 1214, 1261, 1262, 1288, 1343, 1344, 1363, 1374, 1387, 1394, 1418, 1433, 1434, 1476, 1576, 1812, 1859, 1860, 1861, 1862, 1872, 1887, 1902, 1914, 1916], "grid_sampl": [0, 1491, 1851, 1872, 1914], "index_put": [0, 1851, 1872, 1914, 1952], "scatter_add": [0, 1872, 1914, 1952], "tensordot": [0, 1171, 1259, 1260, 1876, 1897, 1914], "binari": [0, 2, 13, 14, 21, 29, 31, 33, 38, 40, 54, 145, 724, 911, 1287, 1343, 1344, 1433, 1498, 1499, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1663, 1667, 1870, 1875, 1887, 1888, 1904, 1912, 1916, 1933], "add": [0, 1, 3, 7, 14, 16, 20, 23, 25, 27, 37, 40, 44, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 69, 73, 89, 281, 304, 502, 504, 675, 676, 677, 680, 736, 737, 746, 779, 782, 827, 848, 850, 851, 983, 1013, 1024, 1067, 1124, 1194, 1205, 1335, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408, 1427, 1429, 1433, 1434, 1438, 1441, 1528, 1569, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1759, 1808, 1869, 1871, 1872, 1873, 1874, 1878, 1882, 1884, 1887, 1889, 1893, 1895, 1896, 1899, 1900, 1903, 1904, 1905, 1907, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1928, 1931, 1932, 1933, 1937, 1938, 1942, 1943, 1944, 1945, 1948, 1951, 1952, 1955, 1956, 1957, 1958, 1959], "nativ": [0, 2, 11, 21, 28, 46, 54, 993, 1124, 1204, 1611, 1612, 1759, 1871, 1874, 1886, 1897, 1910, 1915, 1916, 1924], "without": [0, 1, 3, 5, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 27, 29, 33, 40, 44, 46, 47, 52, 53, 54, 55, 56, 245, 606, 938, 941, 971, 973, 1008, 1088, 1089, 1090, 1098, 1099, 1100, 1191, 1192, 1194, 1195, 1240, 1241, 1256, 1263, 1317, 1345, 1346, 1347, 1367, 1371, 1390, 1391, 1392, 1424, 1427, 1435, 1466, 1474, 1518, 1598, 1607, 1631, 1647, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1691, 1722, 1738, 1755, 1756, 1846, 1869, 1873, 1874, 1881, 1882, 1884, 1886, 1888, 1893, 1894, 1895, 1897, 1898, 1899, 1902, 1903, 1905, 1907, 1909, 1910, 1912, 1916, 1917, 1919, 1923, 1924, 1928, 1933, 1938, 1942, 1944, 1945, 1946, 1947, 1957, 1960], "intervent": [0, 8, 1924], "mixtur": [0, 29, 1363, 1509], "bceloss": [0, 1344, 1498], "aren": [0, 8, 51, 54, 68, 1124, 1887, 1894, 1925, 1958], "mean": [0, 2, 3, 5, 7, 8, 14, 17, 20, 21, 23, 25, 27, 29, 40, 42, 44, 46, 47, 49, 52, 53, 54, 245, 312, 326, 368, 444, 484, 506, 747, 749, 770, 783, 785, 850, 851, 909, 922, 959, 1123, 1125, 1204, 1294, 1312, 1317, 1322, 1326, 1327, 1333, 1334, 1335, 1337, 1338, 1339, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1361, 1363, 1365, 1369, 1371, 1372, 1373, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1397, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1413, 1414, 1416, 1417, 1418, 1419, 1426, 1430, 1431, 1432, 1434, 1435, 1441, 1442, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1475, 1476, 1477, 1497, 1498, 1499, 1507, 1509, 1510, 1518, 1519, 1523, 1534, 1535, 1538, 1539, 1543, 1549, 1557, 1558, 1559, 1560, 1561, 1569, 1580, 1581, 1592, 1593, 1607, 1655, 1686, 1719, 1728, 1729, 1759, 1773, 1793, 1810, 1811, 1817, 1851, 1857, 1858, 1869, 1871, 1872, 1873, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1897, 1898, 1899, 1901, 1902, 1905, 1911, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1924, 1925, 1926, 1928, 1945, 1946, 1947, 1950, 1951, 1952, 1953, 1954], "doesn": [0, 1, 2, 7, 8, 11, 20, 23, 25, 49, 51, 53, 54, 71, 812, 815, 869, 886, 896, 971, 992, 1124, 1135, 1201, 1207, 1233, 1257, 1265, 1274, 1355, 1356, 1357, 1364, 1393, 1460, 1501, 1502, 1503, 1538, 1582, 1607, 1608, 1630, 1675, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1790, 1793, 1862, 1871, 1874, 1875, 1887, 1889, 1894, 1895, 1897, 1899, 1900, 1904, 1907, 1911, 1915, 1917, 1925, 1928, 1946, 1947, 1952, 1957], "help": [0, 1, 4, 7, 8, 11, 13, 20, 21, 23, 37, 40, 46, 51, 54, 897, 898, 906, 992, 1024, 1124, 1125, 1135, 1194, 1195, 1213, 1295, 1308, 1309, 1366, 1367, 1368, 1372, 1427, 1614, 1766, 1862, 1869, 1874, 1881, 1887, 1888, 1893, 1894, 1895, 1897, 1898, 1900, 1903, 1905, 1908, 1912, 1913, 1916, 1924, 1925, 1928, 1936, 1946, 1949, 1950, 1951, 1955, 1957], "revers": [0, 29, 52, 54, 502, 723, 782, 890, 892, 1085, 1087, 1107, 1127, 1129, 1134, 1261, 1397, 1440, 1568, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1839, 1856, 1872, 1873, 1874, 1894, 1898, 1900, 1914, 1934], "therefor": [0, 3, 5, 20, 21, 23, 29, 30, 38, 46, 49, 55, 60, 61, 73, 438, 533, 896, 910, 919, 943, 1013, 1101, 1118, 1120, 1123, 1151, 1152, 1206, 1209, 1239, 1252, 1370, 1371, 1478, 1517, 1518, 1526, 1649, 1691, 1874, 1893, 1894, 1897, 1899, 1901, 1904, 1912, 1926, 1928, 1944, 1948, 1950], "rais": [0, 1, 5, 7, 13, 23, 27, 29, 31, 33, 40, 44, 46, 51, 53, 54, 55, 79, 304, 306, 312, 686, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 922, 931, 972, 1037, 1110, 1115, 1192, 1194, 1199, 1201, 1209, 1211, 1223, 1225, 1233, 1234, 1237, 1241, 1242, 1247, 1254, 1255, 1259, 1260, 1265, 1286, 1312, 1427, 1576, 1601, 1619, 1620, 1625, 1627, 1630, 1640, 1662, 1664, 1665, 1666, 1667, 1753, 1851, 1869, 1875, 1881, 1886, 1894, 1897, 1899, 1901, 1908, 1912, 1916, 1917, 1923, 1924, 1935, 1946, 1947, 1950, 1956, 1957, 1958], "mani": [0, 3, 7, 11, 13, 20, 21, 23, 29, 40, 44, 46, 50, 51, 54, 79, 393, 669, 878, 880, 890, 892, 1067, 1206, 1350, 1686, 1785, 1833, 1840, 1841, 1842, 1843, 1871, 1873, 1887, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1904, 1905, 1908, 1912, 1915, 1919, 1926, 1928, 1931, 1933, 1934, 1936, 1943, 1945, 1946, 1947, 1949, 1950, 1951, 1953, 1956, 1957, 1959], "sigmoid": [0, 29, 54, 516, 656, 657, 749, 784, 1343, 1344, 1370, 1379, 1380, 1397, 1398, 1456, 1498, 1525, 1579, 1872, 1887, 1888, 1892, 1914, 1921, 1929, 1952], "right": [0, 2, 7, 9, 23, 25, 29, 46, 54, 809, 854, 910, 917, 919, 920, 925, 930, 1061, 1067, 1108, 1111, 1112, 1116, 1147, 1151, 1152, 1156, 1160, 1191, 1213, 1238, 1243, 1254, 1256, 1257, 1265, 1271, 1272, 1317, 1335, 1340, 1341, 1342, 1343, 1344, 1355, 1356, 1357, 1374, 1381, 1394, 1395, 1396, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1430, 1431, 1432, 1436, 1437, 1443, 1475, 1478, 1479, 1480, 1481, 1526, 1546, 1564, 1612, 1619, 1675, 1689, 1690, 1731, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1812, 1832, 1837, 1839, 1854, 1856, 1869, 1872, 1874, 1886, 1887, 1888, 1894, 1899, 1902, 1912, 1915, 1922, 1926, 1929, 1944, 1946, 1955], "entropi": [0, 29, 1343, 1363, 1431, 1498, 1499, 1509, 1929], "combin": [0, 3, 20, 21, 23, 40, 52, 53, 606, 678, 701, 702, 703, 704, 705, 706, 707, 708, 782, 843, 879, 1024, 1096, 1097, 1102, 1104, 1156, 1288, 1298, 1344, 1374, 1388, 1433, 1474, 1478, 1520, 1543, 1626, 1871, 1872, 1873, 1893, 1897, 1900, 1912, 1914, 1915, 1917, 1919, 1922, 1924, 1943, 1950], "bcewithlogitsloss": [0, 1499], "bcewithlogit": 0, "safe": [0, 23, 40, 53, 54, 72, 74, 1014, 1015, 1034, 1035, 1607, 1672, 1673, 1676, 1871, 1874, 1893, 1894, 1897, 1900, 1904, 1924, 1939, 1942, 1947, 1948, 1950, 1957], "_convolut": [0, 1914], "avg_pool3d": [0, 1872, 1914, 1921, 1952], "grid_sampler_2d": [0, 1872, 1914, 1952], "_grid_sampler_2d_cpu_fallback": [0, 1914], "grid_sampler_3d": [0, 1872, 1914], "polar": [0, 29, 1253, 1872, 1914], "quantil": [0, 1294, 1324, 1872, 1914, 1929], "nanquantil": [0, 1872, 1914], "stft": [0, 910, 919, 1151, 1152, 1191, 1213, 1872, 1914], "view_as_complex": [0, 11, 1872, 1914], "choleski": [0, 2, 29, 933, 934, 1224, 1230, 1266, 1872, 1914], "cholesky_invers": [0, 2, 1872, 1914], "cholesky_solv": [0, 2, 1872, 1914], "invers": [0, 29, 672, 673, 871, 874, 928, 933, 934, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1191, 1234, 1235, 1247, 1251, 1254, 1259, 1260, 1358, 1359, 1360, 1370, 1371, 1374, 1423, 1424, 1425, 1478, 1517, 1518, 1553, 1554, 1555, 1616, 1619, 1643, 1691, 1697, 1847, 1870, 1872, 1874, 1908, 1914, 1929], "lu_solv": [0, 2, 1241, 1872, 1914], "orgqr": [0, 1872, 1914], "ormqr": [0, 1139, 1233, 1872, 1914], "pinvers": [0, 1239, 1872, 1914], "max_pool3d": [0, 1872, 1914, 1921], "max_unpool2d": [0, 1521, 1551, 1872, 1914], "max_unpool3d": [0, 1522, 1552, 1872, 1914], "adaptive_avg_pool3d": [0, 1872, 1899, 1914, 1921], "reflection_pad1d": [0, 1872, 1914, 1952], "reflection_pad2d": [0, 1872, 1914, 1952], "replication_pad1d": [0, 1872, 1914], "replication_pad2d": [0, 1872, 1914, 1952], "replication_pad3d": [0, 1872, 1914, 1952], "ctc_loss": [0, 1350, 1872, 1914], "fft_fft": [0, 1872, 1914], "fft_ifft": [0, 1872, 1914], "fft_fft2": [0, 1872, 1914], "fft_ifft2": [0, 1872, 1914], "fft_fftn": [0, 1872, 1914], "fft_ifftn": [0, 1872, 1914], "fft_rfft": [0, 1872, 1914], "fft_irfft": [0, 1872, 1914], "fft_rfft2": [0, 1872, 1914], "fft_irfft2": [0, 1872, 1914], "fft_rfftn": [0, 1872, 1914], "fft_irfftn": [0, 1872, 1914], "fft_hfft": [0, 1872, 1914], "fft_ihfft": [0, 1872, 1914], "linalg_matrix_norm": [0, 1872, 1914], "linalg_cond": [0, 1872, 1914], "linalg_matrix_rank": [0, 1872, 1914], "linalg_solv": [0, 1872, 1914], "linalg_choleski": [0, 1872, 1914], "linalg_svdv": [0, 1872, 1914], "linalg_eigv": [0, 1872, 1914], "linalg_eigvalsh": [0, 1872, 1914], "linalg_inv": [0, 1872, 1914], "linalg_householder_product": [0, 1872, 1914], "linalg_tensorinv": [0, 1872, 1914], "linalg_tensorsolv": [0, 1872, 1914], "fake_quantize_per_tensor_affin": [0, 1872, 1914], "eig": [0, 1230, 1231, 1257, 1908], "geqrf": [0, 1233, 1703, 1872, 1914], "lstsq": [0, 1139, 1225, 1251], "_lu_with_info": [0, 1914], "qr": [0, 2, 1139, 1229, 1230, 1233, 1239, 1257, 1614, 1703, 1872, 1914], "solv": [0, 7, 11, 934, 1139, 1147, 1225, 1234, 1236, 1237, 1240, 1241, 1243, 1247, 1255, 1256, 1260, 1266, 1284, 1839, 1894, 1902, 1908, 1911, 1939, 1947], "svd": [0, 2, 11, 1229, 1230, 1239, 1251, 1258, 1274, 1619, 1705, 1817, 1872, 1908, 1914, 1928, 1952], "symeig": 0, "triangular_solv": [0, 1872, 1914], "fractional_max_pool2d": [0, 1872, 1914], "fractional_max_pool3d": [0, 1872, 1914], "adaptive_max_pool3d": [0, 1872, 1914], "multilabel_margin_loss_forward": [0, 1914], "linalg_qr": [0, 1872, 1914], "linalg_cholesky_ex": [0, 1872, 1914], "linalg_svd": [0, 1872, 1914], "linalg_eig": [0, 1872, 1914], "linalg_eigh": [0, 1872, 1914], "linalg_lstsq": [0, 1872, 1914], "linalg_inv_ex": [0, 1872, 1914], "cat": [0, 23, 29, 54, 533, 736, 737, 746, 782, 785, 950, 951, 1295, 1446, 1797, 1809, 1871, 1872, 1887, 1912, 1914, 1916, 1919, 1921, 1928, 1937, 1945, 1952], "stack": [0, 8, 17, 20, 21, 23, 29, 33, 50, 51, 54, 749, 906, 928, 939, 1028, 1029, 1066, 1133, 1135, 1159, 1295, 1350, 1379, 1397, 1398, 1442, 1471, 1473, 1644, 1853, 1862, 1864, 1870, 1872, 1889, 1897, 1898, 1901, 1913, 1914, 1916, 1918, 1921, 1928, 1944, 1946, 1947, 1950, 1957, 1959], "index_copi": [0, 1851, 1872, 1914], "implement": [1, 2, 5, 8, 15, 16, 20, 21, 23, 24, 25, 27, 29, 32, 37, 38, 41, 46, 51, 54, 55, 57, 63, 67, 71, 141, 502, 504, 506, 676, 727, 728, 729, 730, 731, 732, 749, 768, 770, 774, 782, 789, 808, 809, 810, 813, 814, 815, 867, 869, 882, 891, 897, 898, 957, 1067, 1110, 1115, 1120, 1127, 1128, 1130, 1131, 1194, 1201, 1203, 1204, 1207, 1249, 1252, 1265, 1266, 1294, 1335, 1350, 1364, 1379, 1395, 1396, 1427, 1433, 1439, 1446, 1463, 1472, 1474, 1526, 1564, 1576, 1584, 1607, 1611, 1612, 1614, 1615, 1619, 1630, 1643, 1647, 1648, 1651, 1663, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1689, 1691, 1697, 1715, 1722, 1735, 1744, 1747, 1784, 1793, 1816, 1817, 1832, 1848, 1851, 1852, 1854, 1873, 1874, 1875, 1878, 1881, 1886, 1889, 1890, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1915, 1916, 1917, 1919, 1924, 1925, 1928, 1929, 1932, 1934, 1942, 1945, 1950, 1953, 1958], "arbitrari": [1, 3, 23, 27, 55, 58, 62, 245, 879, 1050, 1257, 1265, 1364, 1370, 1394, 1418, 1478, 1498, 1499, 1517, 1538, 1564, 1640, 1816, 1837, 1874, 1880, 1894, 1900, 1904, 1905, 1915, 1917, 1919, 1928, 1936, 1947, 1953, 1957, 1958], "scalar": [1, 23, 29, 44, 55, 63, 88, 141, 145, 251, 304, 436, 578, 676, 677, 727, 728, 729, 730, 731, 732, 868, 869, 882, 890, 891, 894, 896, 914, 917, 925, 955, 959, 1062, 1067, 1082, 1115, 1121, 1147, 1154, 1171, 1185, 1218, 1219, 1288, 1295, 1324, 1335, 1343, 1344, 1350, 1361, 1363, 1364, 1381, 1387, 1388, 1393, 1394, 1399, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1476, 1528, 1570, 1653, 1658, 1659, 1664, 1699, 1712, 1714, 1716, 1734, 1735, 1751, 1799, 1800, 1801, 1802, 1803, 1830, 1848, 1849, 1865, 1867, 1868, 1872, 1873, 1874, 1884, 1889, 1892, 1894, 1899, 1902, 1912, 1924, 1928, 1931, 1933, 1935, 1946, 1952, 1956], "minim": [1, 7, 8, 808, 864, 1296, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1683, 1684, 1685, 1686, 1699, 1869, 1884, 1893, 1897, 1905, 1907, 1910, 1912, 1917, 1919, 1947, 1957], "exist": [1, 7, 8, 9, 11, 13, 20, 23, 24, 25, 29, 31, 33, 38, 40, 41, 46, 50, 54, 55, 69, 70, 245, 488, 781, 843, 867, 890, 891, 892, 893, 894, 895, 896, 897, 960, 961, 962, 963, 964, 965, 966, 1008, 1194, 1198, 1209, 1229, 1234, 1240, 1241, 1266, 1324, 1427, 1428, 1437, 1791, 1809, 1854, 1869, 1871, 1878, 1881, 1886, 1887, 1889, 1890, 1894, 1895, 1897, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1910, 1912, 1916, 1917, 1918, 1919, 1924, 1926, 1928, 1932, 1934, 1942, 1943, 1946, 1948, 1952, 1955, 1959], "code": [1, 3, 4, 8, 9, 11, 13, 14, 15, 20, 21, 23, 28, 29, 31, 41, 42, 44, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 110, 669, 941, 943, 960, 961, 962, 963, 964, 965, 966, 1010, 1011, 1024, 1124, 1169, 1194, 1198, 1199, 1204, 1205, 1206, 1209, 1210, 1211, 1224, 1235, 1237, 1265, 1443, 1455, 1607, 1763, 1869, 1870, 1873, 1874, 1880, 1888, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1910, 1911, 1912, 1915, 1923, 1924, 1925, 1926, 1928, 1931, 1932, 1939, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1958, 1959], "declar": [1, 9, 13, 20, 41, 1873, 1874, 1875, 1899, 1912, 1916, 1917], "requires_grad": [1, 5, 29, 46, 52, 326, 435, 436, 437, 438, 439, 477, 485, 854, 869, 886, 888, 889, 897, 898, 900, 902, 903, 910, 919, 1013, 1068, 1069, 1070, 1071, 1080, 1085, 1103, 1120, 1121, 1122, 1125, 1135, 1151, 1152, 1169, 1194, 1213, 1264, 1280, 1343, 1344, 1363, 1370, 1371, 1381, 1393, 1394, 1418, 1419, 1427, 1433, 1434, 1441, 1474, 1475, 1498, 1499, 1509, 1561, 1607, 1608, 1609, 1610, 1647, 1652, 1658, 1659, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1761, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1851, 1862, 1867, 1868, 1872, 1876, 1887, 1888, 1889, 1897, 1899, 1900, 1905, 1910, 1912, 1914, 1924, 1925, 1934, 1935, 1936, 1944, 1946, 1952, 1955], "type": [1, 2, 3, 5, 13, 14, 16, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 38, 40, 41, 42, 44, 46, 51, 53, 54, 55, 57, 60, 61, 63, 67, 68, 72, 74, 79, 141, 182, 187, 199, 317, 320, 324, 332, 435, 436, 437, 438, 439, 471, 548, 593, 669, 674, 675, 676, 677, 678, 679, 723, 724, 727, 728, 729, 738, 740, 741, 742, 743, 745, 753, 755, 756, 759, 760, 761, 762, 763, 764, 765, 766, 767, 770, 773, 781, 782, 783, 786, 804, 805, 806, 808, 809, 810, 811, 812, 814, 816, 829, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 862, 868, 878, 879, 880, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 909, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 925, 926, 927, 928, 929, 931, 940, 941, 942, 947, 962, 963, 964, 965, 977, 979, 986, 987, 988, 990, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1007, 1010, 1011, 1012, 1013, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1030, 1042, 1044, 1045, 1048, 1049, 1062, 1067, 1068, 1069, 1070, 1080, 1081, 1082, 1085, 1103, 1110, 1112, 1113, 1114, 1115, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1131, 1132, 1133, 1135, 1137, 1141, 1142, 1143, 1146, 1151, 1152, 1154, 1155, 1156, 1170, 1173, 1175, 1176, 1179, 1182, 1190, 1191, 1192, 1194, 1195, 1197, 1200, 1203, 1205, 1207, 1209, 1210, 1212, 1213, 1216, 1225, 1229, 1246, 1250, 1257, 1263, 1264, 1265, 1266, 1280, 1283, 1286, 1293, 1295, 1302, 1303, 1306, 1316, 1322, 1325, 1335, 1339, 1355, 1356, 1357, 1364, 1371, 1417, 1427, 1428, 1429, 1433, 1437, 1438, 1455, 1460, 1461, 1462, 1470, 1471, 1472, 1473, 1474, 1486, 1487, 1491, 1492, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1523, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1544, 1545, 1547, 1548, 1549, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1569, 1571, 1572, 1574, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1589, 1591, 1592, 1593, 1594, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1651, 1653, 1654, 1658, 1659, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1705, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1737, 1741, 1744, 1751, 1752, 1755, 1756, 1757, 1759, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1792, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1812, 1813, 1815, 1816, 1817, 1830, 1839, 1841, 1843, 1848, 1849, 1851, 1852, 1853, 1856, 1862, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1875, 1882, 1883, 1884, 1887, 1889, 1892, 1893, 1894, 1896, 1897, 1902, 1903, 1904, 1905, 1908, 1910, 1911, 1913, 1914, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1928, 1929, 1930, 1931, 1933, 1935, 1936, 1937, 1938, 1943, 1944, 1945, 1950, 1952, 1956, 1958], "doubl": [1, 3, 31, 471, 477, 606, 738, 740, 741, 742, 743, 745, 755, 756, 770, 886, 888, 893, 897, 898, 926, 933, 949, 967, 1013, 1082, 1110, 1147, 1194, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1274, 1275, 1276, 1277, 1278, 1284, 1371, 1427, 1486, 1489, 1518, 1598, 1664, 1703, 1709, 1798, 1799, 1800, 1802, 1803, 1816, 1830, 1839, 1865, 1874, 1887, 1897, 1899, 1900, 1908, 1912, 1916, 1930, 1931, 1934], "bfloat16": [1, 21, 46, 1176, 1194, 1245, 1262, 1427, 1664, 1672, 1673, 1759, 1887, 1897, 1928, 1930, 1931, 1934, 1935, 1960], "cfloat": [1, 11, 23, 302, 473, 606, 933, 967, 1164, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1284, 1703, 1733, 1816, 1839, 1861, 1931, 1934], "cdoubl": [1, 11, 933, 967, 1194, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1284, 1427, 1703, 1816, 1839, 1931, 1934], "beta": [1, 2, 11, 47, 53, 90, 91, 96, 97, 98, 99, 100, 101, 142, 143, 312, 506, 543, 675, 678, 679, 680, 909, 968, 1002, 1003, 1010, 1011, 1013, 1151, 1213, 1288, 1298, 1345, 1346, 1347, 1382, 1388, 1390, 1391, 1392, 1399, 1415, 1458, 1463, 1466, 1543, 1544, 1576, 1580, 1584, 1672, 1673, 1674, 1676, 1682, 1686, 1719, 1777, 1779, 1790, 1794, 1808, 1870, 1872, 1882, 1897, 1912, 1919, 1924, 1928, 1931, 1936, 1952], "even": [1, 8, 20, 21, 23, 28, 31, 46, 53, 54, 74, 533, 569, 804, 805, 806, 882, 959, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1098, 1099, 1100, 1103, 1134, 1179, 1206, 1223, 1225, 1229, 1230, 1231, 1232, 1246, 1250, 1252, 1253, 1257, 1258, 1263, 1288, 1294, 1364, 1466, 1501, 1502, 1503, 1564, 1607, 1614, 1652, 1654, 1697, 1744, 1755, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1816, 1860, 1871, 1874, 1875, 1884, 1889, 1893, 1894, 1897, 1899, 1901, 1903, 1905, 1907, 1908, 1909, 1910, 1915, 1916, 1917, 1926, 1931, 1942, 1945, 1946, 1947, 1949, 1950, 1959], "though": [1, 23, 54, 55, 58, 141, 783, 879, 882, 892, 1083, 1084, 1086, 1192, 1195, 1288, 1654, 1871, 1875, 1888, 1889, 1894, 1897, 1899, 1900, 1907, 1908, 1915, 1919, 1946, 1959], "signatur": [1, 20, 33, 44, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 389, 477, 545, 902, 903, 969, 1194, 1427, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1619, 1640, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1812, 1897, 1899, 1900, 1912, 1916, 1917, 1924, 1928, 1949, 1950, 1958], "veri": [1, 4, 7, 8, 17, 20, 21, 23, 50, 52, 54, 943, 957, 1125, 1133, 1135, 1256, 1390, 1391, 1392, 1607, 1608, 1614, 1675, 1697, 1703, 1780, 1784, 1839, 1862, 1873, 1886, 1894, 1899, 1901, 1902, 1903, 1905, 1907, 1908, 1911, 1915, 1916, 1923, 1924, 1925, 1928, 1946, 1947, 1949, 1950, 1956, 1957], "unlik": [1, 3, 7, 29, 46, 52, 482, 1064, 1103, 1106, 1110, 1169, 1229, 1230, 1249, 1252, 1257, 1261, 1291, 1294, 1296, 1399, 1609, 1610, 1734, 1756, 1859, 1873, 1874, 1886, 1889, 1897, 1907, 1909, 1931, 1936, 1945, 1947], "coverag": [1, 7, 47, 54, 1127, 1128, 1870, 1871, 1876, 1888, 1919, 1928, 1958], "plan": [1, 2, 7, 9, 23, 25, 28, 883, 1607, 1715, 1889, 1894, 1899, 1916, 1928, 1945, 1956, 1957], "consid": [1, 5, 8, 21, 23, 31, 40, 44, 46, 51, 53, 54, 683, 768, 774, 783, 890, 892, 893, 897, 934, 959, 1054, 1055, 1056, 1057, 1058, 1088, 1123, 1183, 1187, 1190, 1194, 1234, 1236, 1237, 1238, 1239, 1247, 1248, 1251, 1256, 1259, 1363, 1374, 1427, 1430, 1478, 1491, 1526, 1537, 1595, 1608, 1614, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1649, 1685, 1753, 1773, 1807, 1840, 1841, 1842, 1843, 1869, 1871, 1874, 1878, 1881, 1893, 1894, 1895, 1899, 1901, 1902, 1905, 1908, 1916, 1918, 1920, 1925, 1926, 1928, 1931, 1934, 1935, 1945, 1947, 1956, 1958, 1959], "ad": [1, 3, 9, 13, 20, 21, 23, 27, 29, 37, 44, 46, 49, 51, 52, 53, 54, 212, 213, 304, 310, 461, 504, 669, 675, 676, 677, 678, 679, 680, 724, 883, 884, 885, 890, 891, 892, 893, 897, 909, 1067, 1071, 1127, 1128, 1130, 1169, 1194, 1207, 1271, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1433, 1434, 1436, 1441, 1455, 1466, 1470, 1475, 1478, 1504, 1505, 1506, 1523, 1550, 1551, 1552, 1576, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1619, 1626, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1652, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1719, 1720, 1721, 1761, 1790, 1794, 1808, 1869, 1870, 1871, 1873, 1878, 1884, 1888, 1893, 1900, 1902, 1904, 1905, 1916, 1919, 1922, 1928, 1933, 1936, 1943, 1946, 1947, 1952, 1953, 1956, 1959], "tutori": [1, 3, 9, 14, 23, 24, 27, 54, 883, 884, 885, 888, 1854, 1870, 1871, 1878, 1881, 1890, 1899, 1904, 1905, 1907, 1910, 1912, 1919, 1946, 1949], "how": [1, 3, 5, 7, 8, 9, 14, 16, 20, 23, 25, 28, 32, 40, 41, 42, 44, 46, 47, 48, 50, 51, 54, 55, 62, 63, 67, 224, 477, 774, 781, 782, 785, 830, 848, 850, 851, 883, 884, 885, 888, 902, 903, 1050, 1071, 1124, 1133, 1147, 1169, 1194, 1204, 1265, 1374, 1427, 1478, 1479, 1564, 1595, 1607, 1640, 1652, 1735, 1759, 1761, 1774, 1785, 1870, 1871, 1873, 1874, 1878, 1881, 1883, 1886, 1887, 1888, 1890, 1893, 1896, 1897, 1898, 1900, 1901, 1902, 1905, 1907, 1909, 1910, 1912, 1917, 1919, 1922, 1924, 1925, 1926, 1928, 1933, 1945, 1949, 1950, 1951, 1959], "major": [1, 6, 7, 8, 9, 995, 1816, 1870, 1874, 1915, 1945, 1947, 1949, 1951], "build": [1, 8, 9, 13, 14, 23, 29, 54, 1194, 1203, 1427, 1473, 1491, 1526, 1870, 1871, 1881, 1890, 1894, 1912, 1917, 1919, 1925, 1933, 1934, 1939, 1942, 1957], "basic": [1, 3, 7, 9, 25, 40, 54, 55, 56, 1127, 1128, 1129, 1200, 1266, 1607, 1691, 1870, 1875, 1890, 1895, 1897, 1898, 1902, 1916, 1925, 1932, 1933, 1944, 1947, 1949, 1950], "jacobian": [1, 29, 47, 48, 50, 51, 882, 884, 890, 893, 895, 896, 897, 898, 1128, 1129, 1130, 1134, 1135, 1862, 1894, 1899, 1902], "hessian": [1, 47, 50, 51, 891, 894, 1128, 1129, 1892, 1900], "etc": [1, 3, 5, 11, 20, 21, 23, 29, 31, 40, 41, 46, 848, 849, 850, 943, 1191, 1194, 1363, 1427, 1607, 1662, 1737, 1869, 1873, 1874, 1881, 1899, 1900, 1901, 1905, 1907, 1912, 1915, 1916, 1919, 1924, 1928, 1930, 1933, 1936, 1942, 1944, 1950], "user": [1, 2, 5, 7, 8, 9, 10, 11, 14, 20, 21, 23, 24, 25, 28, 29, 30, 31, 33, 37, 40, 41, 43, 44, 46, 47, 50, 51, 53, 54, 55, 71, 141, 326, 721, 727, 728, 729, 734, 735, 745, 753, 783, 786, 788, 827, 843, 850, 851, 882, 888, 896, 971, 1004, 1118, 1123, 1124, 1194, 1230, 1265, 1427, 1470, 1472, 1473, 1474, 1576, 1601, 1602, 1607, 1616, 1630, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1869, 1870, 1871, 1873, 1874, 1878, 1881, 1886, 1888, 1889, 1893, 1894, 1895, 1897, 1899, 1902, 1903, 1904, 1905, 1907, 1912, 1913, 1915, 1917, 1918, 1919, 1921, 1924, 1925, 1928, 1932, 1933, 1935, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1953, 1955, 1957, 1958], "input": [1, 2, 3, 5, 9, 11, 14, 18, 20, 21, 23, 24, 27, 28, 29, 30, 33, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 62, 63, 67, 69, 71, 72, 73, 79, 141, 251, 271, 292, 392, 473, 488, 506, 598, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 709, 717, 718, 723, 724, 727, 728, 729, 730, 731, 732, 734, 735, 745, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 791, 803, 806, 808, 826, 827, 828, 829, 846, 847, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 940, 941, 949, 952, 953, 954, 955, 956, 957, 958, 959, 967, 983, 1010, 1011, 1013, 1046, 1047, 1048, 1049, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1135, 1136, 1137, 1138, 1139, 1140, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1171, 1172, 1173, 1174, 1176, 1179, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1197, 1198, 1200, 1201, 1205, 1207, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1284, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1605, 1606, 1607, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1644, 1649, 1652, 1653, 1654, 1656, 1657, 1659, 1662, 1663, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1690, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1725, 1727, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1748, 1749, 1750, 1753, 1754, 1756, 1759, 1767, 1768, 1769, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1825, 1826, 1827, 1828, 1829, 1831, 1833, 1834, 1835, 1836, 1839, 1840, 1842, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1865, 1866, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1881, 1882, 1888, 1889, 1890, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1905, 1908, 1909, 1910, 1912, 1915, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1928, 1929, 1931, 1932, 1935, 1937, 1938, 1942, 1944, 1945, 1946, 1947, 1952, 1955, 1956, 1957, 1958], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 69, 70, 71, 72, 73, 74, 141, 145, 245, 314, 326, 448, 477, 502, 504, 534, 603, 606, 669, 676, 718, 730, 731, 732, 737, 746, 747, 749, 757, 758, 761, 762, 763, 774, 780, 781, 782, 783, 786, 788, 803, 809, 812, 813, 815, 826, 830, 843, 847, 848, 850, 851, 852, 868, 869, 878, 879, 880, 882, 883, 884, 885, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 905, 911, 928, 934, 941, 944, 947, 952, 968, 970, 980, 982, 984, 991, 992, 1010, 1012, 1016, 1018, 1020, 1024, 1025, 1050, 1067, 1068, 1071, 1072, 1085, 1087, 1088, 1089, 1090, 1103, 1106, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1135, 1138, 1139, 1147, 1150, 1155, 1156, 1169, 1185, 1191, 1192, 1194, 1195, 1197, 1198, 1200, 1204, 1205, 1207, 1209, 1210, 1215, 1218, 1225, 1233, 1236, 1240, 1241, 1246, 1249, 1252, 1253, 1257, 1263, 1265, 1282, 1283, 1285, 1295, 1304, 1305, 1324, 1326, 1327, 1328, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1365, 1369, 1370, 1371, 1372, 1375, 1376, 1379, 1384, 1385, 1386, 1388, 1394, 1396, 1397, 1400, 1401, 1402, 1413, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1432, 1433, 1434, 1436, 1437, 1438, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1454, 1455, 1458, 1463, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1476, 1477, 1479, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1521, 1522, 1537, 1550, 1551, 1552, 1570, 1576, 1595, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1619, 1640, 1641, 1647, 1652, 1654, 1658, 1662, 1664, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1694, 1695, 1697, 1701, 1703, 1712, 1716, 1724, 1728, 1738, 1744, 1747, 1759, 1761, 1762, 1764, 1789, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1810, 1811, 1812, 1816, 1830, 1834, 1837, 1839, 1847, 1850, 1852, 1854, 1857, 1858, 1862, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1878, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960], "lambda": [1, 20, 25, 29, 49, 52, 53, 54, 55, 62, 63, 249, 477, 902, 903, 929, 1125, 1130, 1134, 1135, 1229, 1230, 1231, 1232, 1265, 1383, 1464, 1476, 1566, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1685, 1691, 1693, 1696, 1862, 1875, 1894, 1899, 1900, 1915, 1916, 1924, 1935, 1958], "captur": [1, 14, 44, 54, 55, 58, 62, 63, 669, 968, 970, 1002, 1008, 1013, 1197, 1305, 1672, 1673, 1676, 1871, 1875, 1880, 1899, 1900, 1903, 1912, 1916, 1919, 1938, 1939, 1942, 1944, 1945, 1947, 1950, 1955, 1957], "f": [1, 10, 21, 23, 29, 31, 32, 37, 38, 44, 47, 48, 51, 52, 53, 54, 55, 56, 164, 249, 277, 326, 368, 884, 885, 1085, 1087, 1094, 1103, 1124, 1125, 1127, 1128, 1129, 1130, 1134, 1135, 1147, 1194, 1201, 1204, 1205, 1265, 1393, 1395, 1396, 1398, 1427, 1476, 1493, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1517, 1518, 1521, 1522, 1528, 1561, 1563, 1564, 1576, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1747, 1862, 1871, 1873, 1874, 1887, 1888, 1894, 1897, 1899, 1901, 1902, 1903, 1905, 1911, 1912, 1916, 1917, 1924, 1928, 1933, 1935, 1943, 1945, 1947, 1950, 1956, 1958], "three": [1, 2, 6, 9, 23, 27, 46, 48, 51, 54, 74, 877, 1065, 1067, 1147, 1156, 1237, 1240, 1241, 1242, 1257, 1285, 1342, 1357, 1360, 1399, 1422, 1576, 1614, 1654, 1691, 1759, 1874, 1894, 1897, 1898, 1899, 1912, 1916, 1917, 1919, 1924, 1926, 1928, 1933, 1954], "anoth": [1, 5, 7, 20, 21, 23, 25, 29, 30, 31, 42, 44, 46, 54, 476, 948, 968, 970, 971, 973, 1118, 1203, 1229, 1230, 1233, 1257, 1370, 1371, 1428, 1437, 1598, 1615, 1755, 1871, 1873, 1874, 1880, 1893, 1894, 1896, 1897, 1899, 1905, 1907, 1911, 1916, 1917, 1925, 1926, 1928, 1934, 1936, 1942, 1943, 1947, 1949, 1950, 1953, 1956, 1959], "constant": [1, 20, 44, 54, 55, 56, 60, 61, 63, 64, 733, 764, 810, 811, 944, 1050, 1107, 1108, 1109, 1191, 1194, 1198, 1209, 1241, 1266, 1352, 1353, 1354, 1371, 1374, 1381, 1436, 1458, 1475, 1478, 1523, 1526, 1564, 1615, 1667, 1683, 1688, 1691, 1837, 1872, 1874, 1893, 1899, 1905, 1909, 1912, 1915, 1928, 1946, 1949, 1950], "boolean": [1, 13, 29, 40, 54, 55, 62, 63, 391, 393, 878, 913, 915, 916, 918, 946, 970, 971, 973, 1072, 1138, 1150, 1169, 1183, 1184, 1185, 1186, 1187, 1190, 1218, 1266, 1282, 1287, 1328, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1466, 1576, 1616, 1619, 1715, 1810, 1811, 1834, 1857, 1858, 1873, 1875, 1899, 1930, 1931, 1933, 1934, 1935, 1936], "flag": [1, 2, 13, 23, 24, 30, 41, 43, 46, 49, 51, 54, 724, 862, 890, 892, 910, 919, 932, 933, 941, 998, 1118, 1123, 1125, 1126, 1128, 1129, 1130, 1134, 1135, 1151, 1152, 1169, 1175, 1182, 1265, 1285, 1433, 1537, 1538, 1607, 1616, 1619, 1649, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1759, 1761, 1766, 1791, 1839, 1851, 1862, 1870, 1871, 1874, 1886, 1894, 1897, 1899, 1908, 1909, 1912, 1916, 1919, 1933, 1934, 1947, 1948, 1956, 1957], "inform": [1, 2, 3, 4, 7, 8, 9, 16, 17, 19, 20, 21, 23, 24, 27, 31, 32, 33, 36, 40, 41, 46, 48, 54, 66, 182, 199, 246, 304, 312, 477, 487, 504, 506, 607, 669, 724, 892, 897, 898, 902, 903, 912, 1071, 1102, 1104, 1124, 1169, 1191, 1194, 1210, 1223, 1230, 1239, 1355, 1356, 1357, 1358, 1359, 1360, 1388, 1397, 1423, 1424, 1425, 1427, 1433, 1442, 1454, 1470, 1472, 1474, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1537, 1576, 1595, 1596, 1597, 1607, 1640, 1652, 1667, 1714, 1741, 1759, 1761, 1766, 1791, 1851, 1871, 1874, 1880, 1881, 1889, 1890, 1894, 1896, 1897, 1898, 1899, 1904, 1905, 1908, 1912, 1913, 1916, 1918, 1919, 1931, 1933, 1934, 1935, 1938, 1941, 1945, 1946, 1947, 1950, 1951, 1955, 1957, 1959, 1960], "well": [1, 3, 5, 7, 9, 13, 21, 23, 28, 40, 46, 51, 52, 54, 606, 780, 811, 814, 850, 1010, 1128, 1129, 1194, 1198, 1204, 1209, 1229, 1230, 1231, 1233, 1239, 1252, 1257, 1303, 1345, 1346, 1347, 1363, 1397, 1427, 1466, 1547, 1548, 1607, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1715, 1871, 1874, 1881, 1887, 1889, 1893, 1894, 1897, 1899, 1900, 1902, 1905, 1907, 1909, 1912, 1916, 1919, 1922, 1924, 1926, 1928, 1932, 1933, 1936, 1943, 1946, 1948, 1953], "relat": [1, 6, 7, 9, 20, 23, 31, 44, 45, 46, 51, 55, 56, 61, 63, 66, 669, 1147, 1233, 1374, 1458, 1478, 1607, 1705, 1852, 1889, 1894, 1910, 1916, 1924, 1928, 1929, 1935, 1958], "mechan": [1, 8, 23, 34, 38, 40, 54, 868, 1071, 1169, 1194, 1427, 1576, 1652, 1761, 1830, 1870, 1886, 1889, 1898, 1899, 1904, 1905, 1922, 1924, 1925, 1942], "confus": [1, 8, 55, 1194, 1427, 1894, 1897, 1916, 1928, 1948, 1950], "receiv": [1, 7, 9, 20, 23, 27, 29, 51, 53, 1024, 1194, 1427, 1603, 1604, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1700, 1874, 1884, 1886, 1893, 1894, 1907, 1917, 1924, 1925, 1926, 1928, 1945, 1950, 1957, 1959], "initi": [1, 2, 3, 4, 8, 16, 17, 20, 21, 25, 27, 31, 33, 40, 41, 43, 46, 67, 79, 485, 488, 569, 701, 702, 703, 704, 705, 706, 709, 719, 720, 721, 722, 734, 735, 745, 749, 753, 850, 851, 868, 948, 970, 978, 999, 1004, 1005, 1008, 1009, 1034, 1068, 1069, 1070, 1141, 1170, 1192, 1194, 1206, 1207, 1265, 1266, 1283, 1345, 1346, 1347, 1348, 1350, 1358, 1359, 1360, 1364, 1370, 1371, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1435, 1442, 1444, 1466, 1476, 1517, 1598, 1607, 1609, 1610, 1614, 1616, 1619, 1647, 1662, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1755, 1756, 1757, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1870, 1872, 1873, 1874, 1884, 1889, 1892, 1894, 1897, 1898, 1899, 1904, 1911, 1912, 1915, 1916, 1917, 1923, 1924, 1925, 1942, 1950, 1955, 1956], "memori": [1, 2, 3, 5, 11, 21, 25, 27, 29, 30, 46, 50, 54, 141, 146, 161, 163, 166, 169, 170, 171, 186, 197, 200, 224, 231, 245, 258, 288, 316, 322, 328, 330, 331, 384, 435, 436, 437, 438, 439, 448, 453, 476, 488, 489, 513, 514, 569, 592, 606, 723, 752, 867, 869, 882, 888, 897, 898, 923, 938, 941, 968, 969, 972, 975, 976, 978, 992, 993, 1002, 1003, 1006, 1010, 1012, 1013, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1031, 1032, 1033, 1037, 1067, 1068, 1069, 1070, 1118, 1119, 1120, 1122, 1123, 1124, 1129, 1131, 1135, 1194, 1211, 1239, 1265, 1302, 1303, 1304, 1312, 1371, 1397, 1398, 1427, 1470, 1471, 1472, 1474, 1576, 1594, 1607, 1614, 1640, 1652, 1659, 1662, 1663, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1724, 1725, 1727, 1728, 1729, 1730, 1830, 1851, 1862, 1868, 1870, 1871, 1882, 1886, 1888, 1889, 1894, 1899, 1907, 1912, 1917, 1918, 1919, 1924, 1928, 1930, 1931, 1932, 1934, 1935, 1942, 1946, 1947, 1949, 1954, 1956], "overlap": [1, 20, 21, 23, 27, 46, 54, 867, 897, 898, 1070, 1124, 1191, 1374, 1478, 1607, 1812, 1851, 1897, 1898, 1931, 1945, 1947, 1956], "dens": [1, 27, 209, 534, 535, 572, 573, 574, 575, 576, 577, 910, 919, 1151, 1152, 1213, 1266, 1686, 1787, 1790, 1793, 1794, 1797, 1798, 1799, 1800, 1802, 1803, 1808, 1817, 1851, 1889, 1909, 1928, 1931, 1945], "stride": [1, 11, 44, 55, 60, 63, 129, 212, 245, 330, 435, 436, 437, 438, 439, 488, 509, 533, 570, 572, 573, 574, 576, 577, 606, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 757, 758, 761, 762, 763, 771, 772, 854, 867, 910, 919, 1068, 1070, 1080, 1085, 1103, 1121, 1122, 1151, 1152, 1158, 1194, 1203, 1207, 1213, 1264, 1280, 1298, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1395, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1439, 1478, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1520, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1594, 1607, 1658, 1720, 1721, 1724, 1726, 1727, 1728, 1730, 1731, 1738, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1836, 1841, 1843, 1860, 1867, 1872, 1875, 1887, 1912, 1914, 1924, 1928, 1930, 1931, 1933, 1934, 1935, 1944, 1945, 1946, 1952, 1957], "rowmajor": [1, 1607], "contigu": [1, 11, 21, 25, 322, 488, 509, 606, 1373, 1430, 1566, 1607, 1732, 1738, 1816, 1872, 1888, 1889, 1914, 1921, 1928, 1930, 1932], "create_graph": [1, 141, 882, 890, 891, 892, 893, 894, 895, 896, 1872, 1893], "preserv": [1, 20, 29, 44, 46, 54, 488, 768, 774, 843, 865, 868, 1108, 1109, 1124, 1194, 1198, 1204, 1427, 1428, 1437, 1479, 1537, 1595, 1668, 1747, 1751, 1789, 1830, 1871, 1882, 1887, 1889, 1892, 1897, 1900, 1909, 1912, 1924, 1928, 1931, 1942, 1946], "preexist": [1, 1945, 1946], "behavior": [1, 2, 7, 13, 19, 21, 23, 24, 25, 27, 29, 30, 33, 38, 41, 44, 46, 50, 51, 53, 54, 73, 245, 310, 461, 488, 502, 533, 606, 676, 774, 782, 815, 867, 881, 917, 923, 925, 927, 940, 1062, 1067, 1068, 1069, 1070, 1112, 1119, 1120, 1124, 1194, 1204, 1207, 1209, 1239, 1246, 1250, 1263, 1264, 1265, 1280, 1288, 1295, 1364, 1367, 1388, 1397, 1427, 1442, 1466, 1479, 1491, 1526, 1594, 1595, 1598, 1599, 1607, 1608, 1651, 1653, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1709, 1715, 1731, 1738, 1780, 1816, 1837, 1851, 1869, 1871, 1875, 1876, 1878, 1880, 1887, 1889, 1895, 1897, 1899, 1900, 1908, 1909, 1910, 1912, 1915, 1916, 1917, 1920, 1921, 1924, 1929, 1932, 1946, 1948, 1950], "let": [1, 7, 8, 20, 21, 28, 29, 41, 51, 54, 476, 485, 936, 1147, 1194, 1213, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1243, 1245, 1252, 1254, 1256, 1257, 1427, 1607, 1614, 1830, 1878, 1887, 1888, 1894, 1897, 1898, 1899, 1900, 1905, 1907, 1908, 1909, 1910, 1911, 1916, 1925, 1926, 1928, 1933, 1942, 1943, 1946, 1948, 1949, 1950, 1951, 1956, 1957], "first": [1, 4, 5, 7, 9, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 37, 40, 41, 44, 46, 52, 54, 55, 63, 65, 207, 245, 281, 578, 599, 675, 678, 680, 683, 749, 782, 783, 803, 843, 846, 848, 863, 864, 873, 878, 879, 880, 881, 896, 897, 909, 913, 914, 916, 917, 918, 921, 923, 925, 939, 967, 970, 981, 1055, 1057, 1058, 1059, 1064, 1067, 1072, 1085, 1087, 1106, 1120, 1125, 1126, 1128, 1129, 1130, 1134, 1135, 1138, 1147, 1150, 1158, 1159, 1160, 1171, 1183, 1192, 1201, 1206, 1207, 1213, 1218, 1223, 1226, 1233, 1249, 1252, 1259, 1260, 1262, 1265, 1266, 1282, 1288, 1291, 1294, 1295, 1296, 1298, 1315, 1317, 1323, 1328, 1331, 1335, 1341, 1342, 1348, 1356, 1357, 1359, 1360, 1370, 1371, 1373, 1378, 1379, 1393, 1396, 1397, 1412, 1419, 1421, 1422, 1442, 1455, 1508, 1594, 1598, 1607, 1616, 1617, 1619, 1630, 1640, 1646, 1672, 1673, 1674, 1675, 1676, 1682, 1685, 1686, 1690, 1694, 1697, 1699, 1705, 1715, 1716, 1742, 1743, 1751, 1759, 1779, 1793, 1796, 1801, 1831, 1832, 1836, 1841, 1843, 1849, 1856, 1859, 1862, 1864, 1869, 1871, 1873, 1874, 1881, 1883, 1886, 1887, 1889, 1893, 1894, 1897, 1899, 1901, 1902, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1917, 1918, 1919, 1924, 1925, 1926, 1928, 1929, 1933, 1937, 1942, 1943, 1944, 1945, 1946, 1947, 1950, 1955, 1956, 1957, 1958], "accord": [1, 9, 31, 44, 786, 850, 851, 869, 911, 923, 1065, 1157, 1254, 1287, 1317, 1335, 1371, 1598, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1691, 1697, 1716, 1780, 1804, 1831, 1863, 1874, 1884, 1888, 1889, 1892, 1905, 1909, 1911, 1916, 1926, 1935], "retain": [1, 9, 23, 682, 684, 685, 688, 863, 864, 869, 1198, 1215, 1246, 1250, 1263, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1323, 1324, 1325, 1654, 1713, 1716, 1747, 1810, 1811, 1815, 1840, 1841, 1842, 1843, 1857, 1858, 1886, 1907, 1928], "over": [1, 9, 20, 21, 23, 24, 28, 29, 31, 38, 41, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 62, 63, 65, 471, 669, 686, 727, 728, 729, 730, 731, 732, 755, 756, 761, 762, 763, 771, 772, 881, 906, 928, 979, 1024, 1026, 1030, 1044, 1045, 1046, 1047, 1048, 1049, 1067, 1123, 1127, 1129, 1133, 1135, 1147, 1155, 1194, 1209, 1226, 1246, 1250, 1262, 1263, 1265, 1273, 1293, 1295, 1325, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1371, 1374, 1375, 1376, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1399, 1415, 1418, 1419, 1420, 1421, 1422, 1427, 1430, 1431, 1432, 1434, 1441, 1455, 1458, 1459, 1461, 1466, 1475, 1478, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1521, 1522, 1538, 1544, 1547, 1548, 1550, 1551, 1552, 1561, 1562, 1569, 1576, 1602, 1611, 1651, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1720, 1721, 1736, 1795, 1797, 1810, 1811, 1812, 1815, 1832, 1847, 1857, 1858, 1862, 1874, 1884, 1886, 1887, 1888, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1907, 1908, 1915, 1924, 1925, 1928, 1936, 1942, 1944, 1945, 1946, 1947, 1950, 1957, 1959], "time": [1, 3, 4, 7, 8, 9, 13, 20, 21, 23, 24, 25, 27, 29, 30, 31, 37, 40, 41, 42, 44, 46, 51, 53, 54, 79, 281, 304, 477, 482, 606, 669, 674, 675, 676, 677, 678, 679, 680, 683, 734, 735, 745, 749, 753, 757, 758, 788, 790, 813, 830, 866, 896, 902, 903, 907, 909, 921, 929, 931, 941, 952, 959, 970, 971, 973, 1013, 1026, 1045, 1048, 1059, 1081, 1082, 1088, 1089, 1090, 1096, 1107, 1108, 1109, 1117, 1120, 1129, 1130, 1131, 1134, 1135, 1183, 1191, 1194, 1201, 1206, 1209, 1210, 1214, 1219, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1238, 1239, 1240, 1243, 1245, 1249, 1252, 1254, 1256, 1257, 1265, 1266, 1288, 1298, 1305, 1316, 1317, 1319, 1329, 1337, 1338, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1371, 1374, 1375, 1376, 1379, 1390, 1391, 1392, 1397, 1399, 1413, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1439, 1440, 1442, 1463, 1466, 1478, 1479, 1480, 1481, 1491, 1494, 1495, 1521, 1522, 1566, 1567, 1568, 1584, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1614, 1615, 1617, 1619, 1653, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1693, 1703, 1704, 1715, 1737, 1743, 1793, 1807, 1812, 1813, 1832, 1862, 1870, 1873, 1874, 1875, 1880, 1882, 1886, 1892, 1894, 1896, 1898, 1899, 1901, 1902, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1924, 1925, 1926, 1928, 1933, 1938, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1950, 1953, 1954, 1956, 1957, 1959], "4": [1, 3, 11, 17, 18, 20, 21, 23, 25, 27, 29, 30, 31, 38, 40, 44, 51, 54, 55, 56, 57, 60, 61, 62, 63, 64, 182, 199, 233, 245, 280, 302, 304, 306, 308, 312, 392, 393, 435, 436, 461, 473, 477, 482, 485, 488, 502, 506, 512, 526, 533, 545, 547, 549, 573, 574, 596, 606, 672, 673, 674, 675, 678, 680, 681, 682, 684, 685, 686, 688, 728, 730, 731, 732, 735, 737, 746, 749, 762, 763, 813, 854, 863, 864, 865, 869, 870, 871, 872, 873, 874, 876, 877, 888, 890, 893, 894, 895, 909, 912, 915, 919, 920, 921, 925, 927, 930, 931, 934, 935, 936, 939, 949, 954, 955, 956, 957, 967, 1047, 1050, 1057, 1059, 1061, 1062, 1065, 1066, 1067, 1070, 1072, 1082, 1083, 1085, 1087, 1095, 1101, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1117, 1118, 1120, 1123, 1125, 1133, 1134, 1135, 1136, 1137, 1138, 1147, 1150, 1154, 1155, 1156, 1157, 1159, 1160, 1164, 1168, 1171, 1183, 1185, 1191, 1200, 1205, 1207, 1214, 1215, 1216, 1217, 1218, 1219, 1223, 1225, 1226, 1232, 1234, 1236, 1237, 1238, 1241, 1243, 1246, 1248, 1250, 1252, 1254, 1256, 1259, 1260, 1261, 1263, 1264, 1267, 1269, 1270, 1275, 1277, 1278, 1280, 1282, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1315, 1316, 1317, 1325, 1326, 1327, 1328, 1335, 1340, 1351, 1352, 1353, 1356, 1357, 1359, 1360, 1368, 1370, 1371, 1372, 1374, 1378, 1379, 1397, 1398, 1423, 1424, 1430, 1432, 1434, 1439, 1440, 1442, 1448, 1449, 1450, 1451, 1452, 1466, 1478, 1479, 1480, 1481, 1482, 1483, 1491, 1493, 1502, 1505, 1517, 1518, 1526, 1537, 1561, 1564, 1567, 1568, 1594, 1595, 1596, 1597, 1598, 1607, 1614, 1619, 1630, 1642, 1643, 1645, 1647, 1653, 1654, 1655, 1657, 1659, 1662, 1669, 1682, 1687, 1688, 1694, 1698, 1699, 1700, 1704, 1708, 1709, 1712, 1713, 1715, 1716, 1718, 1722, 1724, 1726, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1742, 1743, 1744, 1746, 1747, 1751, 1764, 1771, 1773, 1774, 1779, 1780, 1782, 1784, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1812, 1815, 1818, 1819, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1837, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1849, 1850, 1851, 1856, 1859, 1860, 1861, 1862, 1863, 1864, 1868, 1871, 1872, 1873, 1874, 1875, 1881, 1886, 1888, 1889, 1892, 1894, 1895, 1897, 1898, 1899, 1905, 1907, 1910, 1911, 1912, 1916, 1917, 1919, 1921, 1924, 1928, 1929, 1931, 1932, 1933, 1934, 1935, 1942, 1944, 1945, 1947, 1950, 1952, 1955, 1957], "fact": [1, 3, 8, 46, 484, 910, 919, 953, 1147, 1151, 1152, 1229, 1230, 1257, 1871, 1899, 1902, 1912, 1925, 1928, 1942, 1946, 1951], "reset": [1, 749, 809, 814, 882, 968, 1016, 1018, 1031, 1032, 1033, 1194, 1379, 1427, 1443, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1705, 1722, 1817, 1884, 1912, 1923], "phase": [1, 21, 782, 1229, 1230, 1697, 1816, 1872, 1911, 1947, 1957], "recreat": [1, 1894, 1956], "valid": [1, 23, 29, 38, 40, 44, 54, 71, 75, 79, 736, 737, 746, 780, 932, 944, 947, 1010, 1067, 1192, 1194, 1195, 1215, 1229, 1230, 1239, 1240, 1241, 1252, 1257, 1288, 1355, 1356, 1357, 1501, 1502, 1503, 1526, 1598, 1625, 1630, 1634, 1664, 1667, 1687, 1688, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1715, 1871, 1872, 1873, 1874, 1888, 1889, 1894, 1897, 1899, 1903, 1912, 1915, 1918, 1924, 1925, 1945, 1950, 1953, 1957], "altern": [1, 9, 20, 23, 54, 669, 803, 1127, 1128, 1156, 1201, 1265, 1455, 1472, 1474, 1545, 1607, 1659, 1686, 1758, 1851, 1868, 1869, 1875, 1894, 1903, 1905, 1908, 1909, 1911, 1947, 1955], "never": [1, 5, 7, 21, 23, 40, 41, 44, 212, 213, 785, 868, 929, 941, 1191, 1240, 1241, 1252, 1265, 1607, 1640, 1894, 1897, 1899, 1916, 1917, 1924, 1935, 1942, 1945], "long": [1, 7, 9, 20, 40, 44, 53, 723, 738, 740, 741, 742, 743, 745, 752, 770, 1124, 1170, 1294, 1299, 1323, 1350, 1363, 1371, 1397, 1398, 1434, 1510, 1664, 1714, 1827, 1831, 1841, 1843, 1848, 1870, 1874, 1881, 1886, 1887, 1888, 1894, 1895, 1897, 1899, 1901, 1907, 1909, 1912, 1916, 1918, 1923, 1930, 1931, 1933, 1934, 1947, 1952, 1955, 1957], "hard": [1, 7, 8, 23, 28, 41, 943, 1067, 1266, 1383, 1528, 1529, 1871, 1872, 1873, 1894, 1912, 1916, 1947, 1948], "matter": [1, 4, 23, 46, 886, 1055, 1067, 1201, 1204, 1209, 1607, 1889, 1894, 1916], "discourag": [1, 1036, 1040, 1894, 1924], "aggress": [1, 46, 1191, 1894, 1924, 1947], "buffer": [1, 4, 20, 21, 23, 44, 46, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 869, 981, 1013, 1120, 1123, 1133, 1194, 1201, 1204, 1215, 1265, 1345, 1346, 1347, 1364, 1400, 1401, 1402, 1427, 1466, 1600, 1607, 1609, 1616, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1647, 1649, 1663, 1683, 1685, 1747, 1789, 1834, 1873, 1890, 1894, 1898, 1899, 1905, 1910, 1912, 1917, 1947], "free": [1, 7, 23, 25, 29, 31, 40, 41, 46, 54, 55, 62, 63, 1019, 1037, 1197, 1209, 1266, 1882, 1892, 1894, 1897, 1899, 1901, 1907, 1911, 1912, 1928, 1945, 1959], "reus": [1, 23, 28, 54, 476, 1894, 1897, 1924, 1942, 1945, 1947, 1952, 1957, 1959], "effici": [1, 2, 3, 8, 11, 20, 29, 46, 47, 52, 141, 749, 882, 887, 896, 931, 1131, 1139, 1211, 1249, 1266, 1285, 1335, 1366, 1367, 1368, 1371, 1372, 1379, 1433, 1439, 1440, 1474, 1576, 1882, 1889, 1894, 1898, 1899, 1902, 1906, 1907, 1908, 1915, 1917, 1919, 1924, 1925, 1928, 1931, 1932, 1936], "few": [1, 7, 8, 21, 25, 31, 1067, 1124, 1371, 1607, 1869, 1874, 1894, 1897, 1899, 1901, 1903, 1908, 1911, 1912, 1915, 1917, 1919, 1922, 1928, 1932, 1934, 1936, 1945, 1947, 1949, 1950, 1951, 1955, 1957], "occas": [1, 7, 1894], "actual": [1, 8, 25, 31, 33, 44, 46, 51, 54, 779, 952, 1085, 1103, 1205, 1209, 1358, 1359, 1360, 1526, 1607, 1631, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1691, 1869, 1873, 1874, 1887, 1894, 1897, 1898, 1899, 1902, 1907, 1911, 1912, 1919, 1924, 1930, 1935, 1945, 1946, 1947, 1949, 1950], "signific": [1, 3, 25, 1699, 1759, 1894, 1897, 1928, 1949, 1953], "amount": [1, 2, 3, 4, 7, 20, 23, 25, 31, 40, 54, 898, 992, 1018, 1020, 1024, 1191, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1374, 1415, 1430, 1478, 1509, 1624, 1625, 1627, 1628, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1888, 1894, 1896, 1897, 1900, 1901, 1903, 1924, 1928, 1945, 1951, 1955, 1957, 1959], "heavi": [1, 23, 1894, 1911, 1946], "pressur": [1, 46, 1894], "might": [1, 3, 4, 9, 13, 14, 17, 23, 25, 27, 28, 29, 40, 51, 53, 54, 72, 74, 141, 476, 533, 882, 967, 1209, 1210, 1526, 1607, 1608, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1869, 1871, 1884, 1889, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1909, 1912, 1916, 1917, 1919, 1924, 1925, 1926, 1928, 1932, 1934, 1935, 1939, 1942, 1945, 1946, 1947, 1948, 1949, 1950, 1956, 1957], "keep": [1, 3, 5, 7, 20, 21, 25, 27, 31, 40, 44, 46, 55, 971, 1265, 1345, 1346, 1347, 1351, 1370, 1390, 1391, 1392, 1436, 1466, 1526, 1537, 1607, 1626, 1668, 1736, 1759, 1869, 1870, 1871, 1886, 1888, 1889, 1894, 1897, 1898, 1900, 1901, 1902, 1907, 1913, 1915, 1919, 1924, 1925, 1926, 1944, 1945, 1946, 1950, 1955, 1959], "track": [1, 31, 55, 66, 67, 68, 73, 326, 976, 1016, 1018, 1031, 1032, 1033, 1123, 1124, 1169, 1295, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1607, 1626, 1884, 1886, 1888, 1889, 1894, 1897, 1899, 1900, 1901, 1904, 1905, 1913, 1915, 1917, 1918, 1925, 1926, 1928, 1945, 1946, 1947, 1950, 1954], "save": [1, 5, 7, 11, 14, 21, 23, 25, 27, 46, 485, 826, 878, 879, 888, 1131, 1193, 1194, 1199, 1201, 1209, 1211, 1265, 1427, 1607, 1662, 1663, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1693, 1696, 1700, 1871, 1872, 1883, 1888, 1899, 1900, 1905, 1907, 1909, 1912, 1914, 1915, 1916, 1918, 1924, 1928, 1933, 1937, 1942, 1947, 1949, 1959], "afterward": [1, 44, 1427, 1598, 1607, 1928], "start": [1, 3, 4, 8, 9, 20, 21, 23, 25, 31, 37, 39, 40, 41, 42, 46, 50, 53, 54, 224, 393, 423, 424, 485, 527, 687, 854, 1016, 1018, 1029, 1031, 1032, 1089, 1090, 1106, 1120, 1192, 1206, 1219, 1264, 1280, 1326, 1327, 1335, 1340, 1341, 1342, 1371, 1373, 1420, 1421, 1422, 1428, 1430, 1518, 1564, 1607, 1621, 1625, 1627, 1640, 1669, 1691, 1697, 1731, 1762, 1785, 1798, 1799, 1800, 1802, 1803, 1869, 1870, 1872, 1873, 1878, 1881, 1886, 1888, 1894, 1895, 1897, 1898, 1901, 1905, 1906, 1907, 1911, 1912, 1915, 1918, 1924, 1925, 1926, 1928, 1941, 1945, 1947, 1952, 1954], "sure": [1, 7, 9, 20, 23, 25, 30, 32, 41, 43, 49, 54, 850, 851, 882, 1118, 1198, 1209, 1210, 1266, 1607, 1652, 1693, 1834, 1874, 1887, 1894, 1898, 1901, 1902, 1911, 1912, 1918, 1919, 1924, 1925, 1926, 1928, 1933, 1947, 1949, 1957], "longer": [1, 23, 42, 50, 51, 676, 879, 897, 898, 1191, 1198, 1607, 1651, 1654, 1884, 1894, 1897, 1924, 1926, 1942, 1957], "find": [1, 7, 13, 23, 40, 51, 54, 69, 1067, 1147, 1215, 1266, 1358, 1359, 1360, 1397, 1667, 1705, 1716, 1751, 1817, 1869, 1882, 1886, 1888, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1907, 1909, 1912, 1913, 1914, 1919, 1924, 1928, 1931, 1933, 1935, 1937, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1956, 1957, 1958], "quick": [1, 7, 49, 1881, 1905, 1940, 1955], "guid": [1, 8, 9, 20, 67, 69, 70, 1205, 1651, 1870, 1897, 1900, 1916, 1919, 1950, 1955], "var": [1, 33, 38, 40, 43, 1345, 1346, 1347, 1381, 1382, 1390, 1391, 1392, 1399, 1466, 1523, 1719, 1858, 1872, 1874, 1887, 1914, 1945, 1950, 1952, 1957], "thing": [1, 3, 7, 8, 23, 51, 54, 1124, 1203, 1295, 1343, 1528, 1790, 1873, 1894, 1897, 1899, 1900, 1901, 1902, 1907, 1912, 1916, 1919, 1920, 1926, 1942, 1946, 1947, 1950, 1955, 1957], "detach": [1, 5, 213, 438, 448, 938, 1123, 1194, 1350, 1427, 1510, 1528, 1793, 1830, 1871, 1872, 1887, 1889, 1901, 1912, 1914, 1921, 1928, 1932, 1934, 1956], "register_hook": [1, 1887, 1894], "name": [1, 2, 3, 13, 21, 23, 28, 29, 31, 33, 34, 37, 38, 40, 42, 44, 46, 54, 74, 669, 686, 736, 737, 746, 781, 803, 804, 805, 806, 813, 829, 843, 847, 906, 947, 969, 996, 1123, 1133, 1192, 1194, 1195, 1201, 1204, 1209, 1210, 1224, 1229, 1230, 1236, 1237, 1239, 1240, 1241, 1242, 1252, 1253, 1255, 1257, 1258, 1265, 1427, 1477, 1600, 1605, 1606, 1607, 1614, 1615, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1648, 1649, 1651, 1662, 1664, 1666, 1667, 1747, 1757, 1852, 1854, 1856, 1869, 1870, 1871, 1872, 1874, 1875, 1878, 1880, 1883, 1884, 1886, 1892, 1894, 1897, 1898, 1899, 1902, 1904, 1905, 1912, 1914, 1916, 1917, 1918, 1924, 1925, 1930, 1933, 1935, 1936, 1937, 1938, 1943, 1944, 1947, 1950, 1951, 1954, 1956, 1957, 1958, 1959, 1960], "factori": [1, 2, 11, 29, 31, 34, 38, 51, 813, 1067, 1652, 1667, 1755, 1870, 1872, 1888, 1897, 1914, 1931, 1946], "ones": [1, 20, 23, 27, 29, 44, 46, 51, 52, 53, 54, 55, 57, 60, 62, 63, 141, 245, 304, 393, 435, 436, 438, 504, 783, 848, 882, 891, 893, 894, 895, 896, 897, 911, 923, 941, 1050, 1058, 1080, 1123, 1130, 1131, 1134, 1169, 1191, 1194, 1205, 1214, 1240, 1256, 1265, 1344, 1370, 1374, 1381, 1382, 1399, 1427, 1431, 1432, 1434, 1436, 1478, 1517, 1576, 1594, 1598, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1644, 1646, 1649, 1659, 1664, 1719, 1736, 1754, 1759, 1785, 1833, 1837, 1854, 1865, 1872, 1874, 1876, 1887, 1888, 1894, 1895, 1897, 1899, 1906, 1908, 1909, 1912, 1914, 1915, 1916, 1919, 1924, 1926, 1929, 1931, 1934, 1947, 1951, 1956, 1957], "autograd_tensor": 1, "base": [1, 3, 7, 9, 13, 14, 20, 23, 24, 25, 27, 28, 29, 31, 33, 38, 40, 41, 42, 44, 46, 51, 54, 72, 73, 74, 780, 785, 789, 791, 809, 810, 811, 813, 814, 850, 851, 888, 941, 959, 1028, 1029, 1065, 1067, 1110, 1147, 1157, 1196, 1207, 1219, 1257, 1268, 1270, 1272, 1280, 1364, 1427, 1430, 1431, 1432, 1436, 1470, 1472, 1474, 1543, 1576, 1607, 1611, 1612, 1614, 1621, 1625, 1627, 1669, 1670, 1671, 1672, 1673, 1674, 1683, 1684, 1685, 1686, 1712, 1722, 1747, 1759, 1761, 1816, 1817, 1831, 1841, 1843, 1863, 1870, 1872, 1874, 1896, 1897, 1898, 1899, 1905, 1913, 1917, 1918, 1919, 1924, 1925, 1928, 1929, 1932, 1933, 1935, 1937, 1938, 1944, 1945, 1947, 1949, 1950], "static": [1, 3, 8, 13, 24, 29, 31, 44, 46, 55, 60, 61, 63, 783, 804, 806, 815, 821, 846, 848, 850, 878, 879, 880, 881, 1207, 1470, 1607, 1791, 1871, 1872, 1873, 1874, 1897, 1904, 1913, 1917, 1920, 1924, 1930, 1942, 1944, 1945, 1950], "Then": [1, 23, 41, 54, 1374, 1478, 1616, 1667, 1852, 1894, 1895, 1897, 1898, 1899, 1900, 1908, 1909, 1912, 1915, 1916, 1924, 1925, 1937, 1942, 1948], "op": [1, 4, 23, 44, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 73, 74, 141, 492, 513, 593, 746, 781, 782, 783, 812, 815, 843, 850, 851, 882, 888, 896, 931, 941, 974, 989, 991, 995, 996, 1010, 1011, 1036, 1040, 1042, 1124, 1144, 1195, 1207, 1209, 1210, 1265, 1271, 1443, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1703, 1762, 1839, 1870, 1874, 1878, 1880, 1881, 1882, 1884, 1887, 1888, 1896, 1897, 1898, 1899, 1907, 1913, 1916, 1918, 1919, 1920, 1921, 1922, 1928, 1930, 1932, 1934, 1938, 1942, 1943, 1946, 1947, 1948, 1949, 1950, 1952, 1956, 1957], "ctx": [1, 38, 55, 59, 878, 879, 880, 886, 887, 888, 889, 1893, 1899, 1900, 1912], "gradcheck": [1, 898, 1870, 1899], "extend": [1, 20, 23, 25, 29, 32, 42, 54, 850, 879, 881, 888, 1429, 1438, 1852, 1870, 1878, 1889, 1894, 1904, 1906, 1907, 1912, 1914, 1916, 1922, 1928, 1958], "staticmethod": [1, 55, 879, 881, 886, 887, 888, 889, 1874, 1893, 1899, 1912, 1924], "result": [1, 3, 4, 5, 7, 8, 9, 13, 17, 20, 21, 23, 25, 29, 31, 33, 38, 41, 44, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 74, 144, 212, 213, 245, 246, 306, 326, 389, 485, 487, 488, 545, 572, 573, 574, 576, 577, 607, 675, 676, 677, 678, 679, 682, 684, 685, 686, 688, 749, 782, 866, 868, 884, 885, 890, 891, 892, 893, 894, 895, 897, 898, 909, 912, 923, 927, 932, 938, 940, 941, 944, 955, 957, 980, 982, 984, 1010, 1011, 1024, 1046, 1047, 1048, 1049, 1050, 1062, 1067, 1085, 1088, 1094, 1103, 1110, 1112, 1115, 1119, 1120, 1123, 1124, 1125, 1128, 1129, 1134, 1135, 1139, 1155, 1156, 1158, 1171, 1185, 1194, 1197, 1198, 1205, 1209, 1210, 1212, 1214, 1215, 1219, 1233, 1235, 1237, 1238, 1246, 1250, 1252, 1254, 1255, 1256, 1263, 1273, 1274, 1281, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1322, 1325, 1364, 1366, 1367, 1368, 1372, 1374, 1379, 1393, 1397, 1427, 1433, 1442, 1470, 1471, 1472, 1473, 1474, 1478, 1508, 1526, 1537, 1591, 1594, 1595, 1607, 1614, 1616, 1649, 1652, 1653, 1654, 1655, 1665, 1667, 1697, 1703, 1705, 1712, 1713, 1716, 1722, 1735, 1741, 1756, 1784, 1794, 1796, 1797, 1808, 1810, 1811, 1812, 1815, 1816, 1817, 1826, 1830, 1831, 1836, 1837, 1839, 1840, 1842, 1854, 1857, 1858, 1862, 1871, 1872, 1873, 1874, 1881, 1882, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1907, 1908, 1909, 1912, 1913, 1915, 1917, 1918, 1920, 1921, 1924, 1925, 1928, 1931, 1933, 1934, 1935, 1938, 1939, 1943, 1944, 1946, 1950, 1951, 1954, 1955, 1956, 1957, 1958], "save_for_backward": [1, 879, 887, 889, 1893, 1894, 1899, 1900, 1912], "grad_output": [1, 55, 878, 886, 896, 898, 902, 903, 1194, 1427, 1603, 1604, 1872, 1894, 1897, 1899, 1900, 1905, 1952], "saved_tensor": [1, 887, 888, 889, 1893, 1894, 1899, 1900], "avail": [1, 2, 5, 8, 9, 13, 14, 20, 23, 31, 40, 41, 69, 70, 964, 990, 992, 993, 1004, 1007, 1014, 1015, 1034, 1035, 1037, 1067, 1200, 1257, 1258, 1283, 1470, 1479, 1537, 1576, 1595, 1705, 1759, 1812, 1817, 1851, 1854, 1869, 1870, 1871, 1873, 1874, 1878, 1881, 1886, 1894, 1897, 1899, 1903, 1905, 1906, 1907, 1909, 1910, 1911, 1915, 1916, 1918, 1919, 1920, 1924, 1938, 1939, 1949, 1957, 1958], "cost": [1, 3, 4, 8, 9, 21, 46, 931, 941, 1249, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1755, 1897, 1909, 1920, 1925, 1931, 1953, 1957], "both": [1, 2, 3, 13, 20, 21, 23, 24, 25, 28, 29, 33, 38, 39, 40, 41, 44, 46, 53, 54, 55, 62, 63, 88, 330, 718, 757, 758, 761, 762, 763, 782, 840, 881, 885, 891, 892, 893, 894, 895, 909, 946, 959, 991, 1062, 1083, 1113, 1114, 1115, 1123, 1137, 1139, 1147, 1154, 1171, 1184, 1185, 1191, 1194, 1207, 1215, 1216, 1264, 1280, 1288, 1294, 1308, 1309, 1340, 1341, 1345, 1346, 1347, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1382, 1388, 1390, 1391, 1392, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1420, 1421, 1422, 1427, 1433, 1466, 1474, 1478, 1479, 1482, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1550, 1551, 1552, 1576, 1607, 1619, 1649, 1672, 1673, 1697, 1720, 1721, 1759, 1790, 1791, 1793, 1812, 1816, 1836, 1837, 1871, 1873, 1874, 1881, 1887, 1888, 1890, 1893, 1894, 1895, 1899, 1900, 1902, 1905, 1908, 1909, 1910, 1912, 1916, 1917, 1919, 1922, 1924, 1926, 1928, 1929, 1935, 1937, 1938, 1939, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1954, 1957], "cpu": [1, 4, 5, 13, 16, 20, 23, 25, 44, 46, 55, 60, 63, 79, 110, 187, 280, 317, 326, 435, 436, 437, 438, 439, 448, 569, 578, 854, 869, 907, 910, 919, 957, 960, 961, 970, 980, 981, 982, 984, 1068, 1070, 1080, 1085, 1103, 1115, 1120, 1121, 1144, 1145, 1151, 1152, 1194, 1201, 1203, 1204, 1213, 1223, 1225, 1229, 1230, 1231, 1232, 1234, 1236, 1239, 1241, 1242, 1248, 1251, 1254, 1257, 1258, 1264, 1265, 1280, 1283, 1294, 1305, 1364, 1370, 1427, 1470, 1591, 1607, 1611, 1612, 1640, 1641, 1655, 1658, 1715, 1724, 1726, 1728, 1730, 1731, 1755, 1760, 1762, 1763, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1793, 1798, 1799, 1800, 1801, 1802, 1803, 1816, 1830, 1831, 1832, 1841, 1843, 1848, 1851, 1867, 1870, 1871, 1872, 1874, 1878, 1882, 1886, 1887, 1889, 1897, 1899, 1900, 1903, 1905, 1908, 1909, 1911, 1912, 1914, 1917, 1918, 1920, 1923, 1924, 1928, 1930, 1931, 1934, 1935, 1936, 1939, 1942, 1944, 1946, 1949, 1951, 1954, 1955, 1957], "There": [1, 5, 6, 7, 9, 13, 19, 23, 25, 28, 40, 44, 47, 51, 52, 54, 71, 72, 74, 669, 723, 782, 879, 941, 1124, 1364, 1397, 1442, 1576, 1607, 1647, 1652, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1869, 1871, 1873, 1874, 1880, 1881, 1888, 1894, 1897, 1899, 1900, 1901, 1904, 1907, 1911, 1912, 1916, 1919, 1920, 1924, 1926, 1934, 1936, 1942, 1945, 1946, 1947, 1950, 1956, 1957], "moment": [1, 28, 55, 61, 761, 762, 763, 955, 1672, 1673, 1674, 1676, 1682, 1686, 1882, 1886, 1889, 1918, 1924, 1950, 1954], "nvprof": [1, 4, 904, 1897], "regist": [1, 14, 21, 23, 27, 28, 29, 40, 42, 44, 46, 54, 67, 69, 70, 71, 72, 74, 477, 669, 781, 782, 843, 902, 903, 941, 1013, 1194, 1265, 1427, 1428, 1429, 1437, 1438, 1455, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1614, 1615, 1616, 1617, 1619, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1852, 1854, 1878, 1884, 1886, 1898, 1899, 1904, 1905, 1910, 1912, 1916, 1924, 1946, 1949, 1953], "activ": [1, 5, 7, 9, 42, 46, 52, 66, 68, 781, 783, 785, 792, 796, 830, 831, 840, 850, 851, 969, 978, 993, 1006, 1024, 1123, 1125, 1135, 1266, 1339, 1366, 1367, 1368, 1372, 1382, 1399, 1426, 1428, 1445, 1456, 1470, 1472, 1474, 1519, 1556, 1579, 1607, 1617, 1618, 1619, 1649, 1654, 1862, 1870, 1882, 1886, 1897, 1899, 1900, 1905, 1912, 1915, 1917, 1918, 1919, 1920, 1921, 1924, 1928, 1937, 1938, 1942, 1946, 1952, 1957], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 1918], "use_devic": 1, "record_shap": [1, 1918], "with_flop": [1, 1918], "profile_memori": [1, 1918], "with_stack": [1, 1918], "with_modul": [1, 1918], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 1918], "hold": [1, 23, 38, 40, 42, 43, 44, 46, 50, 53, 54, 526, 1266, 1374, 1428, 1429, 1437, 1438, 1478, 1598, 1607, 1609, 1610, 1616, 1626, 1640, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1798, 1799, 1800, 1801, 1802, 1803, 1895, 1897, 1899, 1901, 1904, 1907, 1915, 1918, 1924, 1925, 1926, 1928, 1930, 1931, 1933, 1934, 1945, 1950], "summari": [1, 3, 41, 1025, 1764, 1870, 1884, 1933, 1938, 1951, 1957, 1959], "hood": [1, 53, 1886, 1894, 1897, 1898, 1907, 1916, 1926, 1944, 1946, 1950], "just": [1, 2, 7, 13, 21, 23, 28, 29, 31, 38, 54, 578, 676, 686, 779, 812, 815, 878, 880, 906, 952, 953, 1209, 1210, 1248, 1251, 1256, 1257, 1283, 1366, 1367, 1368, 1372, 1607, 1619, 1620, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1755, 1840, 1841, 1842, 1843, 1852, 1869, 1871, 1886, 1893, 1894, 1899, 1900, 1902, 1904, 1905, 1906, 1910, 1916, 1917, 1924, 1925, 1928, 1931, 1932, 1934, 1938, 1942, 1943, 1944, 1945, 1946, 1947, 1950, 1956], "record": [1, 5, 27, 32, 33, 34, 38, 41, 44, 53, 54, 435, 436, 437, 438, 439, 485, 808, 809, 810, 811, 814, 816, 854, 910, 919, 970, 971, 973, 1068, 1069, 1070, 1080, 1085, 1103, 1120, 1121, 1122, 1151, 1152, 1194, 1209, 1213, 1264, 1280, 1305, 1308, 1309, 1364, 1427, 1658, 1659, 1662, 1667, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1867, 1868, 1871, 1873, 1889, 1893, 1894, 1897, 1899, 1912, 1913, 1918, 1924, 1933, 1934, 1935, 1936, 1937, 1938, 1942, 1945, 1947, 1957, 1959], "event": [1, 26, 29, 31, 39, 42, 53, 906, 907, 908, 971, 973, 1024, 1027, 1209, 1210, 1271, 1308, 1309, 1576, 1870, 1884, 1886, 1897, 1918, 1933, 1955, 1959], "being": [1, 3, 5, 9, 20, 23, 25, 27, 29, 31, 33, 40, 41, 42, 44, 46, 50, 51, 53, 54, 55, 63, 68, 88, 393, 749, 782, 788, 881, 890, 896, 939, 971, 979, 1026, 1030, 1044, 1045, 1080, 1113, 1114, 1124, 1133, 1134, 1183, 1194, 1198, 1283, 1292, 1297, 1343, 1344, 1361, 1363, 1370, 1371, 1375, 1376, 1381, 1387, 1394, 1418, 1419, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1458, 1459, 1475, 1491, 1498, 1499, 1509, 1521, 1522, 1526, 1538, 1561, 1569, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1715, 1716, 1810, 1811, 1812, 1857, 1858, 1871, 1874, 1881, 1884, 1887, 1888, 1889, 1893, 1894, 1897, 1899, 1900, 1901, 1902, 1905, 1907, 1908, 1912, 1916, 1919, 1922, 1924, 1925, 1928, 1935, 1937, 1942, 1945, 1946, 1947, 1950, 1955, 1957, 1958], "those": [1, 2, 4, 5, 13, 20, 21, 23, 25, 27, 29, 44, 46, 51, 53, 54, 68, 813, 897, 982, 992, 1055, 1057, 1135, 1209, 1251, 1257, 1265, 1304, 1335, 1343, 1344, 1361, 1363, 1371, 1387, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1479, 1498, 1499, 1509, 1518, 1538, 1561, 1569, 1667, 1686, 1816, 1837, 1862, 1873, 1887, 1888, 1893, 1894, 1897, 1899, 1900, 1903, 1905, 1909, 1910, 1912, 1915, 1922, 1924, 1926, 1942, 1944, 1946, 1947, 1949, 1950, 1951, 1954, 1957], "report": [1, 3, 4, 17, 23, 33, 41, 53, 54, 71, 72, 74, 1024, 1127, 1128, 1130, 1893, 1897, 1917, 1928, 1947, 1951, 1954, 1957, 1959], "runtim": [1, 3, 5, 13, 23, 54, 816, 867, 906, 1065, 1067, 1157, 1194, 1209, 1427, 1609, 1610, 1668, 1711, 1851, 1863, 1874, 1887, 1888, 1894, 1897, 1899, 1907, 1912, 1947, 1953], "note": [1, 2, 3, 5, 8, 11, 13, 14, 17, 19, 20, 21, 23, 25, 27, 29, 30, 31, 38, 40, 42, 44, 46, 50, 52, 53, 54, 55, 62, 63, 71, 72, 73, 74, 141, 212, 368, 488, 489, 502, 504, 506, 724, 730, 731, 732, 780, 782, 783, 784, 788, 830, 850, 854, 873, 882, 888, 890, 891, 892, 893, 894, 895, 896, 898, 925, 931, 941, 967, 1042, 1050, 1055, 1067, 1088, 1118, 1120, 1135, 1136, 1147, 1169, 1181, 1191, 1192, 1194, 1195, 1200, 1266, 1288, 1308, 1309, 1343, 1344, 1350, 1358, 1359, 1360, 1361, 1363, 1370, 1371, 1379, 1381, 1387, 1393, 1394, 1397, 1418, 1419, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1441, 1442, 1458, 1459, 1466, 1470, 1475, 1479, 1498, 1499, 1509, 1517, 1518, 1526, 1537, 1538, 1561, 1564, 1569, 1570, 1583, 1598, 1607, 1608, 1654, 1663, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1689, 1691, 1697, 1699, 1715, 1722, 1797, 1798, 1799, 1800, 1802, 1803, 1808, 1812, 1816, 1837, 1851, 1852, 1854, 1862, 1869, 1871, 1872, 1875, 1881, 1886, 1889, 1890, 1894, 1895, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1913, 1915, 1916, 1918, 1920, 1922, 1923, 1925, 1926, 1928, 1932, 1933, 1944, 1945, 1948, 1955, 1956, 1957, 1960], "propag": [1, 25, 26, 28, 29, 31, 40, 54, 55, 63, 502, 675, 678, 679, 680, 684, 685, 686, 687, 755, 756, 757, 758, 768, 771, 772, 774, 775, 776, 827, 829, 909, 1113, 1114, 1322, 1797, 1870, 1886, 1887, 1893, 1897, 1899, 1902, 1904, 1924, 1937, 1938, 1945, 1946, 1950, 1956], "async": [1, 23, 24, 53, 592, 1607, 1875, 1897, 1904, 1930], "task": [1, 3, 7, 21, 47, 52, 1197, 1212, 1390, 1391, 1392, 1874, 1896, 1904, 1905, 1907, 1911], "cuda": [1, 3, 4, 5, 13, 15, 19, 20, 21, 23, 25, 27, 46, 79, 141, 280, 304, 312, 326, 331, 504, 506, 513, 569, 854, 866, 868, 882, 896, 910, 912, 919, 941, 968, 969, 970, 971, 973, 974, 989, 991, 1002, 1068, 1069, 1070, 1080, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1121, 1151, 1152, 1194, 1213, 1215, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1248, 1251, 1254, 1255, 1257, 1258, 1264, 1265, 1280, 1283, 1299, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1397, 1427, 1442, 1466, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1526, 1537, 1564, 1576, 1595, 1596, 1597, 1598, 1607, 1609, 1610, 1611, 1612, 1653, 1655, 1658, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1715, 1724, 1726, 1728, 1730, 1731, 1755, 1759, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1816, 1830, 1832, 1841, 1843, 1848, 1851, 1867, 1870, 1872, 1878, 1887, 1889, 1899, 1900, 1905, 1908, 1912, 1914, 1915, 1917, 1918, 1923, 1924, 1928, 1930, 1931, 1934, 1935, 1936, 1939, 1944, 1946, 1947, 1949, 1954, 1957], "cudaev": 1, "approxim": [1, 3, 21, 27, 40, 54, 1131, 1147, 1257, 1266, 1335, 1377, 1441, 1456, 1463, 1524, 1569, 1579, 1615, 1669, 1686, 1705, 1759, 1817, 1837, 1872, 1874, 1897, 1898, 1899, 1902, 1912, 1952, 1960], "4u": 1, "shape": [1, 5, 8, 11, 21, 23, 29, 44, 46, 48, 50, 52, 54, 55, 56, 57, 60, 61, 62, 65, 88, 162, 182, 199, 209, 391, 393, 435, 437, 439, 461, 486, 487, 502, 504, 506, 533, 555, 606, 669, 674, 676, 677, 686, 724, 734, 735, 745, 747, 749, 753, 755, 756, 757, 758, 761, 762, 763, 770, 785, 867, 873, 887, 891, 893, 894, 895, 906, 911, 912, 914, 917, 922, 924, 928, 929, 941, 954, 983, 1057, 1058, 1059, 1061, 1062, 1067, 1068, 1070, 1072, 1087, 1088, 1089, 1090, 1098, 1099, 1100, 1106, 1112, 1113, 1114, 1115, 1121, 1128, 1129, 1133, 1134, 1135, 1136, 1138, 1150, 1155, 1156, 1160, 1168, 1171, 1185, 1191, 1207, 1209, 1210, 1213, 1218, 1219, 1223, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1282, 1283, 1287, 1295, 1300, 1301, 1316, 1317, 1328, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1517, 1518, 1522, 1526, 1528, 1537, 1538, 1543, 1550, 1551, 1552, 1562, 1563, 1566, 1567, 1568, 1570, 1576, 1595, 1598, 1607, 1609, 1610, 1614, 1616, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1655, 1658, 1664, 1668, 1703, 1712, 1716, 1720, 1721, 1724, 1726, 1727, 1728, 1735, 1737, 1738, 1742, 1751, 1754, 1779, 1793, 1794, 1796, 1799, 1801, 1807, 1812, 1813, 1816, 1826, 1833, 1837, 1847, 1848, 1849, 1862, 1865, 1867, 1871, 1872, 1874, 1887, 1888, 1889, 1894, 1895, 1897, 1899, 1900, 1901, 1913, 1914, 1918, 1921, 1924, 1928, 1929, 1933, 1934, 1935, 1936, 1939, 1944, 1947, 1952, 1956, 1957], "about": [1, 8, 9, 16, 20, 23, 24, 27, 31, 33, 37, 39, 41, 44, 47, 51, 54, 73, 246, 487, 607, 897, 898, 975, 976, 992, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1031, 1032, 1033, 1124, 1223, 1230, 1371, 1640, 1686, 1697, 1758, 1869, 1871, 1873, 1874, 1878, 1881, 1896, 1897, 1898, 1899, 1901, 1904, 1907, 1908, 1910, 1916, 1918, 1919, 1922, 1925, 1926, 1928, 1932, 1934, 1943, 1945, 1947, 1950, 1953, 1957], "dimens": [1, 11, 20, 23, 28, 29, 44, 46, 51, 52, 54, 55, 60, 63, 65, 71, 209, 223, 224, 245, 251, 304, 306, 308, 312, 423, 424, 462, 463, 464, 482, 502, 504, 506, 526, 532, 534, 535, 549, 572, 573, 574, 576, 577, 596, 606, 675, 681, 682, 684, 685, 686, 688, 724, 747, 768, 770, 774, 863, 864, 865, 866, 875, 876, 877, 881, 896, 920, 928, 931, 932, 933, 934, 935, 967, 982, 984, 1046, 1047, 1048, 1049, 1050, 1055, 1056, 1057, 1058, 1059, 1065, 1067, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1135, 1136, 1147, 1156, 1157, 1168, 1171, 1191, 1214, 1215, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1273, 1274, 1281, 1284, 1288, 1291, 1293, 1294, 1295, 1296, 1299, 1301, 1315, 1322, 1323, 1324, 1325, 1326, 1327, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1369, 1370, 1371, 1373, 1374, 1377, 1378, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1399, 1407, 1408, 1413, 1414, 1415, 1416, 1417, 1418, 1421, 1422, 1426, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1474, 1475, 1476, 1477, 1478, 1491, 1497, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1525, 1526, 1527, 1528, 1537, 1540, 1543, 1544, 1545, 1562, 1563, 1564, 1576, 1582, 1583, 1595, 1614, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1641, 1642, 1644, 1646, 1648, 1651, 1653, 1654, 1703, 1706, 1713, 1715, 1716, 1717, 1722, 1736, 1737, 1738, 1742, 1751, 1753, 1754, 1764, 1785, 1789, 1792, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1815, 1816, 1825, 1827, 1831, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1850, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1870, 1872, 1873, 1874, 1889, 1892, 1895, 1897, 1900, 1901, 1902, 1908, 1917, 1919, 1928, 1929, 1931, 1933, 1934, 1945, 1952], "collect": [1, 3, 7, 20, 24, 25, 27, 31, 40, 46, 53, 54, 788, 789, 813, 850, 851, 929, 1006, 1068, 1156, 1295, 1607, 1630, 1658, 1724, 1728, 1867, 1870, 1872, 1873, 1874, 1884, 1897, 1898, 1900, 1915, 1918, 1919, 1922, 1926, 1928, 1933, 1935, 1947, 1950, 1954, 1956, 1957, 1959], "group": [1, 3, 9, 20, 21, 24, 25, 27, 31, 37, 40, 41, 42, 43, 46, 49, 54, 599, 669, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 761, 762, 763, 869, 906, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1382, 1403, 1404, 1405, 1406, 1407, 1408, 1466, 1501, 1502, 1503, 1504, 1505, 1506, 1527, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1849, 1869, 1870, 1872, 1874, 1886, 1892, 1897, 1898, 1912, 1915, 1916, 1918, 1924, 1933, 1943, 1947, 1952, 1957], "prof": [1, 37, 1918, 1947, 1955, 1957], "key_averag": [1, 1918], "group_by_input_shap": [1, 906, 1918], "skew": [1, 3, 4, 1245, 1614], "neglig": [1, 1206, 1759], "bottom": [1, 46, 1526, 1881, 1955], "But": [1, 7, 46, 53, 476, 1209, 1239, 1607, 1894, 1899, 1901, 1902, 1916, 1917, 1928, 1932, 1946, 1947, 1950, 1951, 1958], "total": [1, 3, 4, 7, 20, 21, 23, 37, 39, 40, 41, 46, 866, 907, 984, 1019, 1024, 1037, 1120, 1155, 1156, 1303, 1350, 1374, 1387, 1394, 1418, 1433, 1478, 1563, 1607, 1611, 1653, 1655, 1657, 1691, 1697, 1737, 1764, 1812, 1869, 1873, 1884, 1897, 1903, 1907, 1915, 1928], "artifici": [1, 1928], "estim": [1, 3, 20, 29, 955, 959, 1147, 1191, 1345, 1346, 1347, 1377, 1381, 1382, 1390, 1391, 1392, 1399, 1466, 1524, 1615, 1683, 1780, 1918], "flop": [1, 1918], "hardwar": [1, 8, 848, 850, 851, 1229, 1230, 1257, 1851, 1897, 1907, 1909, 1920, 1928, 1947, 1949, 1957], "matrix": [1, 2, 21, 23, 29, 182, 199, 675, 678, 679, 680, 749, 909, 911, 920, 921, 929, 931, 932, 933, 934, 941, 955, 959, 1050, 1054, 1055, 1057, 1067, 1135, 1139, 1143, 1158, 1214, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1263, 1266, 1274, 1283, 1285, 1288, 1298, 1317, 1319, 1370, 1371, 1379, 1397, 1478, 1517, 1518, 1614, 1619, 1648, 1654, 1703, 1704, 1705, 1715, 1759, 1787, 1790, 1793, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1808, 1816, 1817, 1832, 1835, 1837, 1839, 1840, 1841, 1842, 1843, 1856, 1862, 1870, 1874, 1887, 1888, 1889, 1892, 1896, 1897, 1899, 1902, 1905, 1908, 1918, 1928, 1933, 1934, 1947], "2d": [1, 25, 28, 29, 576, 577, 689, 692, 695, 724, 728, 731, 755, 757, 762, 768, 772, 774, 775, 776, 934, 955, 959, 1055, 1067, 1249, 1250, 1333, 1337, 1341, 1344, 1345, 1346, 1356, 1359, 1363, 1367, 1371, 1375, 1390, 1391, 1396, 1421, 1430, 1432, 1433, 1434, 1479, 1480, 1481, 1486, 1489, 1491, 1494, 1499, 1502, 1505, 1513, 1518, 1521, 1548, 1551, 1561, 1564, 1615, 1648, 1721, 1796, 1801, 1839, 1882, 1892, 1899, 1918, 1919, 1928], "alloc": [1, 4, 11, 17, 21, 25, 29, 31, 40, 46, 245, 322, 435, 436, 437, 438, 439, 476, 969, 971, 973, 975, 976, 978, 991, 992, 993, 1016, 1018, 1020, 1022, 1023, 1024, 1025, 1032, 1033, 1037, 1068, 1070, 1302, 1303, 1304, 1312, 1663, 1724, 1728, 1730, 1755, 1830, 1870, 1886, 1889, 1894, 1898, 1903, 1907, 1912, 1918, 1931, 1941, 1942, 1945, 1946, 1955], "dealloc": [1, 54, 1120, 1886, 1897, 1901, 1903, 1918], "line": [1, 4, 17, 23, 54, 669, 906, 1067, 1124, 1169, 1194, 1204, 1427, 1491, 1526, 1764, 1791, 1871, 1874, 1875, 1889, 1895, 1899, 1902, 1903, 1909, 1911, 1912, 1918, 1928, 1941, 1944, 1947, 1949, 1950, 1951, 1954, 1957, 1959], "hierarchi": [1, 54, 829, 1198, 1672, 1673, 1875, 1899, 1918, 1919, 1945], "callstack": [1, 23, 1918], "A": [1, 2, 3, 5, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 37, 40, 41, 42, 44, 46, 47, 52, 53, 55, 56, 57, 60, 72, 79, 549, 569, 572, 573, 574, 583, 613, 669, 681, 686, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 734, 735, 745, 750, 751, 752, 753, 754, 779, 781, 803, 847, 848, 850, 851, 908, 910, 919, 920, 922, 927, 932, 933, 940, 941, 943, 946, 947, 955, 959, 970, 971, 973, 981, 983, 984, 1052, 1067, 1072, 1080, 1081, 1082, 1094, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1138, 1147, 1150, 1151, 1152, 1156, 1184, 1185, 1186, 1187, 1190, 1192, 1194, 1197, 1201, 1204, 1206, 1209, 1210, 1214, 1218, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1266, 1274, 1282, 1283, 1284, 1285, 1289, 1328, 1344, 1348, 1350, 1363, 1370, 1371, 1380, 1381, 1389, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1417, 1426, 1427, 1433, 1455, 1460, 1462, 1470, 1475, 1476, 1491, 1497, 1509, 1517, 1528, 1538, 1545, 1556, 1576, 1582, 1583, 1598, 1607, 1608, 1609, 1610, 1614, 1616, 1619, 1641, 1642, 1645, 1662, 1663, 1664, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1693, 1696, 1697, 1699, 1705, 1715, 1717, 1718, 1719, 1720, 1721, 1732, 1738, 1744, 1747, 1780, 1789, 1791, 1792, 1795, 1807, 1811, 1812, 1816, 1817, 1834, 1839, 1840, 1841, 1842, 1843, 1847, 1848, 1849, 1850, 1851, 1858, 1862, 1865, 1869, 1871, 1872, 1873, 1874, 1878, 1881, 1882, 1887, 1888, 1892, 1893, 1896, 1897, 1899, 1900, 1901, 1907, 1908, 1910, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1938, 1942, 1943, 1944, 1946, 1947, 1949, 1950, 1952, 1955, 1956, 1957, 1958, 1959, 1960], "aten": [1, 2, 3, 13, 17, 44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 72, 1010, 1124, 1317, 1664, 1667, 1791, 1871, 1872, 1878, 1896, 1899, 1911, 1914, 1918, 1919, 1928, 1939, 1943, 1948, 1951, 1957], "torchscript": [1, 3, 8, 27, 54, 606, 1192, 1195, 1197, 1198, 1199, 1200, 1205, 1209, 1211, 1667, 1870, 1875, 1910, 1912, 1918, 1924, 1959], "eager": [1, 8, 941, 1042, 1192, 1195, 1205, 1763, 1874, 1897, 1918, 1920, 1922, 1942, 1945, 1947, 1948, 1949, 1954, 1957], "experiment": [1, 2, 21, 23, 27, 28, 46, 54, 55, 58, 62, 63, 65, 224, 890, 892, 896, 941, 947, 1041, 1124, 1224, 1235, 1237, 1238, 1242, 1255, 1607, 1662, 1686, 1870, 1871, 1873, 1887, 1888, 1897, 1898, 1909, 1911, 1912, 1916, 1917, 1918, 1945, 1946, 1957], "kineto": [1, 1918], "_experimentalconfig": [1, 1918], "librari": [1, 2, 3, 4, 8, 9, 11, 13, 14, 20, 23, 30, 38, 42, 47, 50, 51, 52, 54, 669, 957, 971, 994, 998, 1010, 1118, 1206, 1237, 1283, 1784, 1884, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1905, 1907, 1908, 1911, 1912, 1916, 1918, 1919, 1924, 1947, 1958], "100": [1, 20, 23, 27, 29, 54, 55, 62, 63, 291, 727, 728, 731, 732, 1154, 1194, 1205, 1211, 1249, 1264, 1271, 1280, 1295, 1316, 1335, 1343, 1344, 1345, 1346, 1347, 1356, 1357, 1359, 1360, 1362, 1363, 1390, 1391, 1392, 1427, 1434, 1436, 1466, 1475, 1508, 1509, 1561, 1675, 1687, 1688, 1693, 1694, 1695, 1696, 1698, 1700, 1701, 1717, 1773, 1872, 1874, 1886, 1896, 1897, 1912, 1915, 1920, 1926, 1928, 1933, 1943, 1944, 1950, 1951], "realli": [1, 7, 54, 943, 1874, 1894, 1916, 1946], "y": [1, 11, 13, 20, 29, 37, 46, 51, 52, 54, 55, 58, 60, 61, 62, 63, 64, 65, 606, 609, 770, 873, 875, 876, 877, 884, 885, 888, 890, 891, 892, 893, 894, 895, 923, 929, 952, 959, 1010, 1011, 1050, 1061, 1067, 1071, 1123, 1125, 1128, 1129, 1130, 1134, 1135, 1169, 1200, 1205, 1209, 1262, 1271, 1272, 1295, 1343, 1344, 1345, 1346, 1347, 1348, 1361, 1363, 1382, 1387, 1388, 1390, 1391, 1392, 1394, 1399, 1414, 1418, 1419, 1430, 1431, 1432, 1434, 1436, 1458, 1459, 1466, 1469, 1475, 1476, 1497, 1526, 1543, 1566, 1598, 1619, 1652, 1662, 1719, 1737, 1739, 1740, 1761, 1793, 1807, 1833, 1837, 1838, 1862, 1865, 1871, 1872, 1873, 1874, 1887, 1888, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1903, 1906, 1912, 1916, 1919, 1924, 1926, 1929, 1933, 1936, 1937, 1938, 1942, 1943, 1945, 1949, 1950, 1956, 1957], "column": [1, 3, 21, 28, 182, 251, 573, 576, 939, 955, 959, 1050, 1080, 1108, 1109, 1159, 1229, 1230, 1233, 1249, 1252, 1257, 1261, 1266, 1317, 1436, 1478, 1517, 1518, 1614, 1705, 1715, 1796, 1798, 1799, 1800, 1802, 1803, 1816, 1837, 1841, 1843, 1856, 1892, 1902, 1928], "remov": [1, 3, 20, 21, 23, 25, 29, 41, 43, 44, 46, 54, 477, 502, 535, 546, 686, 786, 804, 805, 806, 848, 902, 903, 931, 932, 1013, 1124, 1140, 1191, 1194, 1198, 1283, 1284, 1288, 1427, 1428, 1437, 1528, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1615, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1635, 1636, 1638, 1639, 1649, 1651, 1654, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1715, 1731, 1753, 1807, 1816, 1839, 1846, 1869, 1870, 1882, 1894, 1905, 1910, 1912, 1914, 1916, 1926, 1930, 1935, 1947, 1949, 1953, 1956], "breviti": [1, 54, 1912], "print": [1, 3, 17, 20, 23, 31, 32, 37, 38, 41, 46, 51, 53, 709, 717, 718, 723, 734, 735, 745, 753, 900, 902, 903, 1123, 1124, 1133, 1194, 1198, 1200, 1201, 1205, 1283, 1348, 1351, 1389, 1414, 1427, 1439, 1440, 1508, 1564, 1567, 1568, 1619, 1629, 1630, 1631, 1632, 1635, 1645, 1649, 1662, 1667, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1764, 1855, 1869, 1871, 1872, 1894, 1896, 1897, 1899, 1905, 1906, 1912, 1914, 1916, 1918, 1924, 1933, 1934, 1937, 1938, 1943, 1944, 1947, 1949, 1950, 1957], "tabl": [1, 3, 23, 54, 1370, 1517, 1872, 1874, 1899, 1915, 1916, 1918, 1919, 1924, 1928, 1935, 1946, 1948, 1951, 1954, 1957], "sort_bi": [1, 1918], "self_cpu_time_tot": [1, 1918], "avg": [1, 23, 1670], "mul": [1, 17, 44, 54, 55, 58, 61, 62, 410, 736, 737, 746, 1171, 1318, 1871, 1872, 1874, 1887, 1889, 1899, 1912, 1914, 1921, 1925, 1928, 1931, 1937, 1943, 1945, 1952, 1956], "32": [1, 2, 21, 23, 79, 735, 1120, 1191, 1203, 1283, 1341, 1366, 1367, 1368, 1372, 1373, 1375, 1376, 1396, 1415, 1421, 1432, 1470, 1471, 1472, 1473, 1474, 1491, 1521, 1522, 1528, 1576, 1888, 1889, 1905, 1909, 1912, 1922, 1928, 1931, 1933, 1934, 1944, 1950, 1951], "048m": 1, "200": [1, 27, 44, 1194, 1271, 1427, 1717, 1874, 1928, 1957], "27": [1, 606, 1261, 1690, 1712, 1856, 1912], "041m": 1, "powbackward0": 1, "9": [1, 7, 20, 21, 23, 30, 54, 55, 60, 78, 304, 306, 308, 312, 392, 393, 461, 502, 549, 570, 572, 686, 734, 735, 843, 925, 931, 935, 939, 959, 1050, 1065, 1068, 1089, 1090, 1099, 1100, 1110, 1113, 1114, 1117, 1118, 1147, 1157, 1223, 1225, 1246, 1248, 1250, 1261, 1263, 1326, 1327, 1333, 1334, 1337, 1338, 1351, 1370, 1371, 1423, 1424, 1439, 1440, 1449, 1452, 1517, 1518, 1564, 1567, 1568, 1654, 1655, 1670, 1672, 1673, 1674, 1675, 1676, 1682, 1685, 1686, 1687, 1691, 1697, 1699, 1700, 1704, 1708, 1744, 1751, 1760, 1764, 1774, 1779, 1789, 1796, 1804, 1830, 1831, 1835, 1837, 1846, 1856, 1863, 1871, 1875, 1881, 1901, 1905, 1910, 1911, 1912, 1914, 1915, 1916, 1924, 1928, 1929, 1931, 1935, 1944], "727m": 1, "55": [1, 1381, 1912], "483m": 1, "accumulategrad": [1, 1894], "148m": 1, "graphroot": 1, "691": 1, "816u": 1, "emit": [1, 13, 32, 37, 54, 669, 1209, 1766, 1874, 1880, 1913, 1923, 1928], "nvtx": [1, 4, 1870], "program": [1, 3, 4, 8, 17, 20, 23, 32, 41, 43, 44, 46, 54, 606, 952, 953, 1016, 1018, 1124, 1759, 1871, 1873, 1875, 1885, 1894, 1897, 1901, 1904, 1906, 1907, 1910, 1911, 1933, 1939, 1942, 1944, 1945, 1946, 1947, 1949, 1953, 1955, 1957, 1959], "off": [1, 5, 7, 8, 13, 23, 31, 46, 54, 68, 910, 919, 1028, 1124, 1151, 1152, 1191, 1209, 1257, 1340, 1341, 1342, 1344, 1420, 1421, 1422, 1526, 1564, 1761, 1896, 1897, 1898, 1901, 1904, 1908, 1918, 1919, 1920, 1924, 1925, 1946, 1950, 1954], "o": [1, 21, 23, 24, 29, 41, 42, 43, 54, 1194, 1265, 1308, 1309, 1310, 1398, 1427, 1433, 1607, 1747, 1869, 1875, 1886, 1894, 1897, 1898, 1901, 1911, 1916, 1917, 1924], "trace_nam": 1, "regular": [1, 3, 4, 23, 31, 41, 46, 49, 54, 1010, 1011, 1123, 1241, 1242, 1350, 1365, 1366, 1367, 1368, 1372, 1412, 1426, 1427, 1428, 1429, 1437, 1438, 1519, 1556, 1598, 1609, 1610, 1649, 1673, 1874, 1888, 1889, 1899, 1900, 1904, 1905, 1912, 1916, 1919, 1922, 1924, 1928, 1929, 1936, 1938, 1950], "command": [1, 4, 23, 31, 38, 41, 54, 1897, 1903, 1907, 1911, 1917, 1918, 1925, 1951, 1954], "unfortun": [1, 9, 20, 1607, 1894, 1944, 1946], "wai": [1, 3, 5, 7, 8, 9, 13, 20, 21, 23, 25, 27, 28, 29, 33, 37, 46, 48, 49, 53, 54, 141, 569, 669, 785, 808, 811, 814, 850, 851, 879, 882, 891, 893, 894, 895, 896, 897, 1088, 1090, 1124, 1147, 1194, 1223, 1224, 1239, 1254, 1343, 1371, 1390, 1391, 1392, 1397, 1409, 1410, 1411, 1427, 1455, 1472, 1474, 1518, 1570, 1607, 1617, 1647, 1686, 1690, 1697, 1871, 1873, 1874, 1878, 1880, 1881, 1884, 1886, 1887, 1888, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1905, 1907, 1908, 1911, 1912, 1913, 1915, 1916, 1919, 1924, 1925, 1928, 1932, 1934, 1938, 1942, 1943, 1945, 1946, 1947, 1950, 1955, 1956, 1957, 1959], "disk": [1, 20, 1265, 1747, 1894, 1905, 1916, 1933], "annot": [1, 33, 38, 44, 54, 904, 1192, 1205, 1871, 1873, 1875, 1912, 1924, 1947, 1948, 1950], "wait": [1, 17, 23, 31, 38, 40, 53, 813, 966, 970, 971, 973, 1043, 1197, 1305, 1308, 1309, 1314, 1699, 1872, 1874, 1886, 1896, 1897, 1898, 1914, 1918, 1924, 1947, 1955, 1959], "either": [1, 8, 9, 13, 17, 20, 21, 23, 27, 28, 29, 31, 33, 38, 40, 41, 42, 44, 46, 51, 53, 54, 145, 212, 304, 312, 502, 504, 606, 669, 721, 727, 728, 729, 734, 735, 745, 753, 768, 774, 780, 847, 879, 881, 888, 897, 898, 928, 941, 981, 1067, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1120, 1124, 1147, 1169, 1171, 1187, 1194, 1209, 1249, 1264, 1265, 1280, 1295, 1333, 1334, 1337, 1338, 1341, 1342, 1343, 1344, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1371, 1381, 1387, 1394, 1396, 1418, 1419, 1421, 1422, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1442, 1444, 1458, 1459, 1474, 1475, 1477, 1479, 1480, 1481, 1498, 1499, 1509, 1537, 1538, 1561, 1569, 1595, 1602, 1607, 1632, 1654, 1662, 1672, 1673, 1675, 1697, 1712, 1714, 1756, 1759, 1812, 1816, 1865, 1869, 1871, 1873, 1874, 1876, 1880, 1888, 1892, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1909, 1912, 1915, 1916, 1917, 1919, 1925, 1926, 1928, 1929, 1932, 1935, 1944, 1945, 1948, 1960], "nvidia": [1, 13, 23, 979, 992, 1020, 1026, 1030, 1044, 1045, 1851, 1870, 1897, 1901, 1903, 1909, 1911, 1919, 1928, 1936, 1939, 1954, 1955, 1957], "visual": [1, 54, 1295, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1420, 1421, 1422, 1478, 1870, 1897, 1905, 1911, 1918, 1933, 1947, 1955, 1957], "nvvp": 1, "timelin": [1, 4, 1308, 1309, 1870, 1918], "load_nvprof": 1, "repl": [1, 1949], "append": [1, 23, 53, 54, 55, 60, 220, 245, 596, 750, 752, 754, 1013, 1057, 1059, 1288, 1380, 1398, 1429, 1438, 1444, 1455, 1607, 1872, 1873, 1874, 1894, 1896, 1897, 1907, 1911, 1912, 1914, 1928, 1933, 1950, 1956], "size": [1, 2, 3, 7, 17, 20, 21, 23, 25, 29, 31, 40, 44, 46, 49, 54, 55, 56, 61, 62, 63, 129, 199, 212, 233, 245, 246, 304, 306, 312, 330, 435, 436, 437, 439, 477, 482, 487, 488, 489, 502, 504, 506, 509, 512, 533, 534, 535, 555, 570, 572, 573, 574, 576, 577, 595, 596, 606, 607, 669, 679, 680, 682, 684, 685, 686, 688, 709, 717, 718, 724, 730, 731, 732, 734, 735, 745, 753, 755, 756, 757, 758, 768, 774, 775, 776, 785, 847, 854, 866, 867, 869, 881, 890, 891, 892, 893, 894, 895, 906, 909, 910, 912, 919, 921, 922, 923, 924, 925, 932, 933, 934, 935, 941, 959, 967, 969, 975, 981, 982, 984, 1024, 1048, 1049, 1055, 1058, 1065, 1067, 1068, 1069, 1070, 1073, 1084, 1085, 1086, 1088, 1089, 1090, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1120, 1121, 1122, 1129, 1130, 1135, 1136, 1151, 1152, 1156, 1157, 1168, 1171, 1191, 1194, 1215, 1224, 1233, 1238, 1246, 1250, 1254, 1257, 1259, 1260, 1261, 1263, 1264, 1266, 1274, 1280, 1281, 1283, 1284, 1288, 1291, 1293, 1294, 1295, 1296, 1299, 1300, 1301, 1302, 1303, 1317, 1319, 1322, 1325, 1327, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1370, 1371, 1373, 1374, 1375, 1376, 1379, 1381, 1382, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1439, 1440, 1442, 1448, 1449, 1450, 1451, 1452, 1453, 1458, 1466, 1470, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1499, 1504, 1505, 1506, 1509, 1510, 1517, 1518, 1521, 1522, 1526, 1537, 1544, 1550, 1551, 1552, 1561, 1562, 1564, 1567, 1568, 1570, 1576, 1595, 1596, 1597, 1598, 1607, 1630, 1640, 1641, 1642, 1643, 1644, 1646, 1648, 1651, 1653, 1655, 1658, 1659, 1675, 1684, 1703, 1704, 1705, 1706, 1708, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1737, 1742, 1751, 1754, 1773, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1815, 1816, 1817, 1830, 1831, 1832, 1837, 1839, 1847, 1848, 1849, 1850, 1857, 1858, 1860, 1861, 1862, 1863, 1867, 1868, 1870, 1871, 1872, 1874, 1882, 1884, 1887, 1888, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1909, 1910, 1912, 1914, 1917, 1918, 1919, 1921, 1924, 1928, 1930, 1931, 1933, 1934, 1942, 1944, 1945, 1946, 1947, 1951, 1952, 1955, 1957, 1959], "format": [1, 18, 21, 23, 25, 33, 42, 54, 68, 146, 161, 163, 166, 169, 170, 171, 186, 197, 200, 231, 258, 288, 316, 322, 384, 488, 489, 514, 569, 572, 573, 574, 575, 576, 577, 669, 724, 749, 781, 782, 938, 1013, 1067, 1068, 1069, 1122, 1191, 1194, 1207, 1236, 1350, 1371, 1379, 1397, 1427, 1442, 1474, 1607, 1641, 1643, 1659, 1662, 1663, 1667, 1725, 1727, 1729, 1747, 1790, 1793, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1868, 1869, 1871, 1874, 1875, 1880, 1897, 1899, 1905, 1910, 1912, 1913, 1914, 1918, 1919, 1924, 1925, 1928, 1931, 1933, 1935, 1955, 1957], "arg0": [1, 23], "arg1": [1, 23, 38, 39, 41, 1663, 1912], "repres": [1, 8, 11, 20, 21, 29, 30, 31, 33, 34, 40, 42, 44, 46, 54, 67, 69, 224, 749, 781, 782, 785, 878, 943, 947, 955, 959, 968, 1000, 1003, 1067, 1088, 1090, 1095, 1097, 1098, 1099, 1100, 1124, 1147, 1154, 1183, 1184, 1187, 1190, 1193, 1209, 1210, 1241, 1283, 1335, 1350, 1427, 1433, 1474, 1476, 1478, 1607, 1613, 1616, 1621, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1640, 1650, 1663, 1667, 1691, 1697, 1703, 1705, 1716, 1759, 1798, 1799, 1800, 1802, 1803, 1812, 1816, 1848, 1849, 1854, 1860, 1861, 1871, 1873, 1874, 1881, 1884, 1889, 1894, 1899, 1900, 1902, 1904, 1905, 1908, 1912, 1913, 1917, 1919, 1920, 1922, 1924, 1928, 1931, 1945, 1946, 1950, 1959, 1960], "order": [1, 3, 5, 23, 24, 25, 27, 29, 41, 44, 46, 47, 52, 53, 54, 141, 182, 199, 224, 304, 306, 308, 312, 322, 393, 477, 669, 781, 782, 791, 843, 865, 882, 883, 896, 902, 903, 920, 931, 971, 1013, 1024, 1055, 1058, 1059, 1067, 1085, 1087, 1088, 1094, 1106, 1107, 1108, 1109, 1125, 1135, 1147, 1194, 1213, 1224, 1230, 1232, 1239, 1246, 1249, 1250, 1257, 1258, 1261, 1263, 1266, 1295, 1301, 1315, 1317, 1335, 1344, 1350, 1364, 1427, 1428, 1437, 1454, 1455, 1491, 1499, 1526, 1550, 1551, 1552, 1576, 1598, 1607, 1616, 1626, 1640, 1641, 1642, 1643, 1654, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1697, 1703, 1706, 1716, 1751, 1754, 1779, 1789, 1816, 1834, 1841, 1843, 1848, 1851, 1856, 1862, 1869, 1870, 1871, 1872, 1874, 1875, 1878, 1886, 1887, 1888, 1889, 1892, 1895, 1897, 1898, 1899, 1900, 1902, 1905, 1908, 1910, 1912, 1915, 1916, 1917, 1919, 1921, 1924, 1925, 1926, 1928, 1929, 1931, 1935, 1938, 1942, 1943, 1945, 1947, 1951, 1955, 1957], "backend": [1, 13, 39, 43, 46, 730, 731, 732, 781, 782, 822, 844, 845, 848, 850, 851, 890, 896, 941, 947, 993, 1024, 1067, 1124, 1207, 1230, 1237, 1239, 1257, 1308, 1309, 1310, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1526, 1564, 1576, 1607, 1667, 1668, 1759, 1852, 1854, 1870, 1872, 1873, 1878, 1882, 1885, 1896, 1897, 1899, 1908, 1909, 1912, 1920, 1922, 1928, 1944, 1947, 1948, 1949, 1950, 1951, 1952, 1954], "side": [1, 13, 23, 40, 42, 44, 51, 54, 55, 58, 757, 758, 761, 762, 763, 1002, 1061, 1083, 1084, 1086, 1089, 1090, 1095, 1097, 1098, 1099, 1100, 1103, 1191, 1192, 1238, 1243, 1254, 1256, 1340, 1341, 1342, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1448, 1449, 1451, 1452, 1453, 1478, 1482, 1483, 1484, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1550, 1551, 1552, 1564, 1691, 1720, 1721, 1751, 1812, 1839, 1869, 1871, 1872, 1874, 1893, 1894, 1897, 1899, 1902, 1924, 1942, 1950], "creation": [1, 2, 20, 23, 25, 54, 734, 735, 745, 753, 813, 970, 1124, 1607, 1608, 1621, 1871, 1875, 1884, 1886, 1894, 1897, 1924, 1926, 1928, 1934, 1945, 1950], "warmup": [1, 3, 1013, 1897, 1918, 1942, 1947, 1955], "correl": [1, 29, 41, 955, 1355, 1356, 1357, 1358, 1359, 1360, 1366, 1367, 1368, 1372], "view": [1, 7, 8, 11, 17, 20, 21, 25, 27, 31, 46, 54, 55, 63, 66, 213, 245, 425, 486, 487, 488, 596, 607, 681, 686, 749, 867, 875, 876, 877, 885, 923, 935, 952, 953, 1057, 1058, 1065, 1106, 1107, 1108, 1109, 1124, 1157, 1169, 1194, 1249, 1260, 1309, 1371, 1379, 1397, 1427, 1442, 1478, 1479, 1480, 1481, 1518, 1563, 1603, 1604, 1607, 1611, 1706, 1738, 1742, 1743, 1747, 1753, 1754, 1785, 1804, 1815, 1826, 1831, 1835, 1847, 1860, 1861, 1863, 1870, 1871, 1872, 1886, 1888, 1889, 1895, 1899, 1914, 1921, 1924, 1926, 1928, 1930, 1931, 1934, 1945, 1946, 1952, 1954, 1956, 1957], "difficult": [1, 7, 9, 51, 1135, 1862, 1946, 1953, 1955, 1957], "eas": [1, 54, 1896, 1899, 1903, 1945, 1956], "sequenc": [1, 20, 25, 27, 28, 29, 46, 141, 555, 724, 749, 803, 869, 882, 896, 925, 927, 928, 931, 939, 973, 980, 981, 984, 1052, 1066, 1068, 1135, 1155, 1156, 1159, 1209, 1249, 1295, 1335, 1345, 1350, 1355, 1364, 1371, 1379, 1397, 1433, 1442, 1455, 1470, 1471, 1472, 1473, 1474, 1518, 1576, 1616, 1619, 1626, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1655, 1658, 1662, 1668, 1683, 1722, 1724, 1728, 1751, 1809, 1812, 1862, 1864, 1867, 1871, 1872, 1873, 1889, 1897, 1901, 1912, 1916, 1917, 1924, 1934, 1935, 1942, 1944, 1945, 1947, 1956, 1957], "gener": [1, 2, 3, 7, 8, 13, 20, 21, 23, 29, 33, 34, 41, 44, 46, 47, 48, 55, 57, 60, 63, 71, 144, 145, 164, 249, 277, 368, 411, 444, 471, 597, 669, 898, 911, 941, 943, 999, 1002, 1010, 1011, 1014, 1015, 1034, 1035, 1037, 1038, 1039, 1067, 1089, 1090, 1124, 1135, 1146, 1151, 1170, 1198, 1203, 1214, 1225, 1230, 1239, 1256, 1257, 1261, 1266, 1286, 1294, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1317, 1363, 1374, 1388, 1470, 1478, 1479, 1491, 1598, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1648, 1651, 1655, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1703, 1705, 1708, 1722, 1724, 1726, 1727, 1728, 1730, 1752, 1765, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1817, 1832, 1836, 1852, 1854, 1856, 1862, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1880, 1882, 1887, 1892, 1894, 1897, 1899, 1901, 1902, 1904, 1905, 1907, 1911, 1912, 1915, 1916, 1918, 1923, 1924, 1925, 1928, 1931, 1933, 1935, 1937, 1939, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1958], "seq": [1, 594, 749, 928, 940, 1295, 1379, 1397, 1433, 1442, 1470, 1472, 1474, 1643, 1846], "n": [1, 3, 23, 25, 28, 29, 31, 33, 38, 41, 54, 220, 251, 397, 455, 456, 675, 678, 679, 680, 724, 747, 749, 770, 866, 906, 909, 910, 912, 919, 921, 925, 931, 932, 933, 959, 960, 961, 962, 963, 964, 965, 966, 1048, 1049, 1059, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1127, 1130, 1135, 1147, 1151, 1152, 1156, 1191, 1194, 1205, 1209, 1210, 1213, 1214, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1266, 1274, 1283, 1288, 1290, 1295, 1298, 1319, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1382, 1387, 1388, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1399, 1409, 1410, 1411, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1436, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1458, 1460, 1461, 1462, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1491, 1497, 1509, 1510, 1518, 1522, 1526, 1561, 1564, 1566, 1576, 1607, 1614, 1625, 1634, 1653, 1703, 1704, 1705, 1710, 1715, 1716, 1722, 1728, 1730, 1743, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1794, 1810, 1811, 1812, 1816, 1817, 1831, 1832, 1837, 1841, 1843, 1856, 1857, 1858, 1859, 1862, 1872, 1874, 1878, 1887, 1888, 1892, 1894, 1897, 1899, 1901, 1902, 1907, 1916, 1918, 1919, 1920, 1928, 1929, 1933, 1934, 1935, 1950, 1952], "counter": [1, 23, 1006, 1024, 1169, 1364, 1884, 1886, 1894], "increment": [1, 23, 40, 44, 1120, 1156, 1198, 1364, 1666, 1871, 1873, 1894, 1924, 1942], "stash": [1, 5, 1897, 1899, 1917], "associ": [1, 8, 9, 23, 25, 34, 884, 941, 976, 1027, 1029, 1155, 1156, 1194, 1243, 1254, 1256, 1265, 1350, 1427, 1437, 1510, 1607, 1615, 1662, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1773, 1775, 1871, 1874, 1880, 1887, 1888, 1894, 1902, 1905, 1908, 1910, 1916, 1917, 1918, 1924, 1925, 1931, 1934, 1946, 1947, 1950, 1957, 1959], "tell": [1, 7, 54, 485, 1195, 1201, 1265, 1668, 1871, 1881, 1894, 1899, 1900, 1916, 1944, 1959], "top": [1, 3, 7, 8, 20, 25, 28, 29, 33, 46, 50, 54, 736, 906, 1343, 1344, 1363, 1387, 1394, 1418, 1434, 1476, 1479, 1526, 1621, 1625, 1627, 1780, 1834, 1853, 1875, 1881, 1886, 1899, 1915, 1944, 1954, 1955], "m": [1, 4, 8, 21, 23, 28, 29, 37, 41, 54, 675, 678, 679, 680, 709, 717, 718, 727, 728, 729, 730, 731, 732, 734, 735, 745, 747, 753, 803, 849, 850, 851, 909, 921, 925, 929, 934, 1080, 1133, 1156, 1192, 1194, 1199, 1200, 1204, 1205, 1211, 1214, 1225, 1233, 1239, 1240, 1241, 1242, 1246, 1247, 1248, 1250, 1251, 1252, 1257, 1258, 1259, 1260, 1266, 1283, 1284, 1288, 1298, 1317, 1319, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1375, 1376, 1377, 1378, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1395, 1396, 1413, 1414, 1416, 1417, 1420, 1421, 1422, 1426, 1427, 1434, 1435, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1564, 1566, 1607, 1614, 1619, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1647, 1648, 1651, 1703, 1704, 1705, 1715, 1722, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1794, 1812, 1816, 1817, 1832, 1839, 1871, 1872, 1873, 1874, 1897, 1899, 1901, 1902, 1905, 1907, 1910, 1919, 1928, 1938, 1939, 1941], "By": [1, 2, 3, 5, 13, 20, 23, 28, 32, 37, 44, 46, 54, 435, 436, 437, 438, 439, 869, 941, 959, 973, 1016, 1018, 1050, 1062, 1085, 1087, 1088, 1089, 1090, 1098, 1099, 1100, 1125, 1126, 1128, 1129, 1135, 1147, 1155, 1156, 1198, 1246, 1257, 1265, 1294, 1299, 1321, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1381, 1387, 1390, 1391, 1392, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1466, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1651, 1705, 1716, 1737, 1791, 1837, 1862, 1869, 1873, 1878, 1881, 1894, 1897, 1899, 1901, 1905, 1907, 1908, 1910, 1912, 1915, 1923, 1924, 1928, 1935, 1944, 1947, 1951, 1953, 1957], "compar": [1, 3, 5, 13, 20, 46, 54, 72, 683, 854, 865, 896, 1024, 1071, 1072, 1095, 1096, 1097, 1101, 1102, 1103, 1104, 1113, 1114, 1138, 1150, 1169, 1183, 1218, 1282, 1292, 1297, 1328, 1433, 1607, 1652, 1761, 1874, 1884, 1897, 1899, 1902, 1908, 1911, 1919, 1920, 1924, 1928, 1933, 1935, 1937, 1938, 1942, 1948, 1954], "down": [1, 7, 13, 20, 29, 31, 38, 39, 41, 54, 768, 1024, 1062, 1109, 1115, 1203, 1239, 1537, 1716, 1744, 1899, 1904, 1907, 1912, 1924, 1926, 1928, 1933, 1951, 1957], "irrelev": [1, 3, 1875], "simpli": [1, 3, 13, 20, 29, 33, 41, 44, 53, 54, 852, 1124, 1181, 1192, 1339, 1365, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1759, 1871, 1873, 1894, 1900, 1902, 1905, 1906, 1918, 1928, 1945, 1947, 1953], "hand": [1, 4, 23, 46, 51, 54, 1061, 1067, 1192, 1238, 1243, 1254, 1256, 1339, 1437, 1455, 1839, 1851, 1871, 1873, 1874, 1894, 1902, 1905, 1907, 1910, 1916, 1928, 1946, 1950], "underwai": [1, 1008, 1897], "up": [1, 6, 7, 8, 9, 13, 20, 21, 23, 27, 29, 31, 33, 37, 39, 40, 42, 43, 44, 46, 49, 54, 768, 774, 879, 941, 1010, 1011, 1013, 1050, 1067, 1096, 1097, 1102, 1104, 1109, 1124, 1185, 1198, 1203, 1206, 1207, 1252, 1335, 1350, 1374, 1433, 1472, 1474, 1478, 1479, 1491, 1517, 1526, 1537, 1595, 1607, 1686, 1722, 1744, 1848, 1849, 1869, 1871, 1873, 1878, 1881, 1884, 1886, 1887, 1888, 1894, 1895, 1896, 1897, 1901, 1902, 1903, 1905, 1908, 1912, 1916, 1918, 1919, 1924, 1925, 1935, 1942, 1944, 1946, 1950, 1953, 1955, 1957, 1959], "nonzero": [1, 46, 1191, 1275, 1277, 1278, 1283, 1865, 1872, 1914, 1945, 1946, 1952], "themselv": [1, 9, 29, 40, 46, 782, 830, 1834, 1897, 1916, 1958], "origin": [1, 5, 11, 17, 20, 21, 23, 25, 33, 44, 46, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 197, 200, 212, 476, 534, 592, 596, 606, 669, 749, 786, 827, 828, 843, 846, 847, 926, 931, 971, 1087, 1088, 1090, 1094, 1098, 1099, 1100, 1106, 1123, 1133, 1168, 1191, 1201, 1205, 1206, 1209, 1210, 1287, 1301, 1335, 1339, 1351, 1363, 1364, 1379, 1456, 1466, 1509, 1579, 1614, 1615, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1640, 1643, 1646, 1648, 1649, 1651, 1667, 1697, 1706, 1742, 1753, 1789, 1804, 1837, 1848, 1849, 1871, 1874, 1880, 1886, 1888, 1894, 1897, 1899, 1901, 1904, 1907, 1908, 1910, 1912, 1916, 1917, 1919, 1920, 1928, 1930, 1937, 1938, 1943, 1944, 1946, 1948, 1950, 1951, 1956, 1957, 1958], "did": [1, 7, 8, 23, 40, 1324, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1873, 1874, 1902, 1910, 1916, 1949, 1950, 1959], "relationship": [1, 9, 37, 54, 938, 1147, 1476, 1894, 1897, 1910, 1916, 1946, 1950], "conceptu": [1, 3, 1894, 1900, 1926], "tag": [1, 3, 7, 23, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 947, 1265, 1869, 1870, 1904, 1910, 1916, 1933], "eventu": [1, 7, 40, 46, 1869, 1917, 1945, 1946], "itt": [1, 1918], "intel": [1, 4, 1870, 1911, 1954], "r": [1, 29, 52, 141, 878, 880, 882, 896, 897, 929, 940, 955, 1067, 1125, 1127, 1130, 1135, 1136, 1139, 1147, 1205, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1243, 1245, 1252, 1254, 1256, 1257, 1266, 1370, 1371, 1380, 1439, 1440, 1458, 1517, 1518, 1567, 1568, 1614, 1684, 1715, 1862, 1871, 1872, 1873, 1894, 1896, 1899, 1902, 1911, 1928, 1931, 1933, 1950, 1957], "instrument": [1, 3, 21, 1309, 1870, 1904, 1938], "technologi": [1, 1870, 1939], "applic": [1, 2, 9, 29, 40, 788, 799, 800, 801, 802, 888, 941, 992, 1129, 1304, 1363, 1364, 1472, 1474, 1509, 1607, 1851, 1870, 1881, 1889, 1894, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1909, 1912, 1915, 1919, 1924, 1925, 1926, 1928, 1934, 1947, 1959], "across": [1, 8, 13, 20, 21, 23, 25, 27, 31, 41, 46, 51, 54, 606, 724, 808, 863, 907, 984, 1023, 1024, 1067, 1081, 1135, 1204, 1209, 1295, 1344, 1364, 1374, 1415, 1433, 1435, 1466, 1478, 1496, 1499, 1528, 1544, 1591, 1607, 1626, 1630, 1654, 1747, 1862, 1870, 1871, 1884, 1887, 1889, 1894, 1898, 1901, 1904, 1905, 1907, 1908, 1909, 1915, 1917, 1920, 1924, 1925, 1930, 1933, 1938, 1942, 1945, 1947, 1950, 1957], "tool": [1, 4, 8, 9, 17, 23, 41, 54, 850, 905, 1309, 1791, 1869, 1870, 1871, 1873, 1896, 1897, 1911, 1912, 1916, 1918, 1938, 1947, 1951, 1955, 1957, 1959], "With": [1, 17, 20, 23, 29, 44, 46, 53, 728, 729, 730, 731, 732, 774, 1024, 1088, 1089, 1090, 1098, 1099, 1100, 1210, 1345, 1346, 1347, 1356, 1357, 1359, 1360, 1373, 1390, 1391, 1392, 1466, 1477, 1479, 1502, 1505, 1537, 1562, 1595, 1683, 1726, 1875, 1894, 1897, 1899, 1924, 1928, 1933, 1941, 1948, 1950, 1954, 1957], "abl": [1, 2, 7, 8, 17, 23, 25, 40, 44, 51, 1124, 1192, 1204, 1470, 1607, 1871, 1878, 1887, 1894, 1899, 1900, 1910, 1912, 1916, 1919, 1924, 1928, 1935, 1943, 1945, 1946, 1947, 1948, 1953, 1957, 1959], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 14, 326, 730, 731, 732, 886, 896, 1135, 1722, 1862, 1894, 1897, 1898, 1899, 1924, 1925, 1939, 1947], "traceback": [1, 17, 33, 41, 53, 54, 1169, 1179, 1791, 1873, 1874, 1875, 1886, 1889, 1899, 1909, 1928, 1935, 1957, 1959], "fail": [1, 7, 23, 29, 31, 32, 33, 38, 39, 40, 41, 43, 53, 54, 55, 60, 63, 71, 897, 898, 971, 1024, 1195, 1201, 1204, 1223, 1252, 1257, 1265, 1266, 1283, 1664, 1874, 1876, 1886, 1894, 1897, 1899, 1907, 1908, 1911, 1912, 1916, 1924, 1943, 1944, 1945, 1947, 1948, 1950, 1957, 1959], "debug": [1, 2, 4, 5, 8, 20, 37, 66, 68, 669, 816, 817, 821, 832, 897, 898, 941, 943, 947, 968, 1001, 1041, 1142, 1223, 1601, 1602, 1603, 1604, 1758, 1766, 1870, 1873, 1880, 1894, 1896, 1897, 1898, 1903, 1904, 1905, 1909, 1911, 1912, 1913, 1916, 1937, 1945, 1947, 1948, 1949, 1953, 1959], "test": [1, 3, 13, 17, 23, 38, 40, 41, 54, 55, 62, 63, 682, 688, 941, 1084, 1086, 1087, 1092, 1093, 1098, 1099, 1100, 1102, 1104, 1180, 1181, 1185, 1186, 1188, 1189, 1667, 1781, 1870, 1871, 1875, 1884, 1886, 1894, 1902, 1909, 1912, 1915, 1933, 1938, 1944, 1946, 1957, 1958], "slow": [1, 897, 1203, 1207, 1223, 1224, 1611, 1612, 1647, 1848, 1902, 1907, 1933, 1946], "import": [1, 2, 3, 5, 7, 9, 13, 16, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 34, 37, 38, 42, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 212, 669, 723, 730, 731, 732, 761, 762, 763, 781, 849, 850, 851, 900, 902, 920, 927, 959, 1118, 1120, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1133, 1169, 1191, 1192, 1195, 1197, 1199, 1200, 1201, 1203, 1204, 1205, 1209, 1210, 1211, 1245, 1246, 1249, 1250, 1263, 1295, 1393, 1427, 1607, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1642, 1643, 1644, 1645, 1646, 1647, 1654, 1662, 1663, 1685, 1686, 1709, 1871, 1873, 1874, 1875, 1884, 1886, 1889, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1919, 1922, 1924, 1925, 1926, 1928, 1931, 1933, 1934, 1935, 1938, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1955, 1956, 1957, 1958], "myfunc": [1, 1900], "inp": [1, 20, 23, 54, 883, 884, 885, 1478, 1607, 1952, 1955, 1958], "clone": [1, 14, 20, 46, 55, 245, 438, 886, 889, 900, 902, 903, 923, 1198, 1370, 1594, 1830, 1839, 1872, 1886, 1889, 1910, 1914, 1918, 1928, 1930, 1931, 1935, 1952], "run_fn": [1, 5, 846, 852], "last": [1, 5, 6, 11, 20, 21, 24, 27, 28, 29, 40, 53, 54, 306, 606, 681, 749, 866, 910, 919, 925, 935, 1010, 1050, 1055, 1059, 1084, 1086, 1089, 1090, 1092, 1093, 1096, 1097, 1099, 1100, 1102, 1104, 1106, 1151, 1152, 1156, 1169, 1171, 1179, 1191, 1215, 1249, 1252, 1257, 1294, 1299, 1335, 1348, 1363, 1371, 1373, 1379, 1397, 1399, 1414, 1434, 1437, 1441, 1442, 1455, 1471, 1472, 1478, 1497, 1518, 1527, 1540, 1563, 1564, 1607, 1608, 1653, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1742, 1751, 1759, 1789, 1791, 1798, 1799, 1800, 1802, 1803, 1804, 1812, 1816, 1832, 1834, 1837, 1860, 1861, 1873, 1874, 1884, 1887, 1889, 1894, 1897, 1899, 1902, 1909, 1912, 1916, 1917, 1928, 1934, 1935, 1943, 1951, 1957], "stdin": [1, 1169, 1791, 1889, 1899, 1909, 1928], "instal": [1, 3, 13, 14, 23, 54, 1869, 1905, 1906, 1912, 1916, 1924, 1933, 1943, 1945, 1950, 1953], "_tensor": [1, 145], "py": [1, 4, 13, 17, 23, 27, 29, 32, 39, 41, 46, 54, 73, 849, 1607, 1869, 1871, 1874, 1880, 1898, 1902, 1904, 1907, 1912, 1916, 1919, 1925, 1941, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1951, 1954, 1956, 1957, 1959], "93": [1, 606], "retain_graph": [1, 141, 882, 896, 902, 903, 1135, 1862, 1872, 1893, 1894, 1924], "90": [1, 1051, 1701, 1743], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 13, 23, 38, 40, 1869, 1897, 1918, 1951], "53": [1, 471], "44": [1, 312, 435, 1070, 1342, 1422, 1647, 1944], "set_detect_anomali": 1, "behaviour": [1, 682, 683, 688, 967, 1526, 1564, 1697, 1766, 1869, 1908], "interpos": [1, 1899], "grad_fn": [1, 141, 326, 869, 882, 890, 891, 892, 893, 894, 895, 900, 902, 903, 1123, 1615, 1793, 1894, 1905, 1910], "node": [1, 23, 27, 31, 33, 39, 40, 44, 46, 54, 66, 69, 76, 77, 669, 808, 809, 810, 813, 814, 815, 1013, 1133, 1208, 1350, 1364, 1607, 1667, 1882, 1897, 1912, 1913, 1916, 1917, 1924, 1925, 1926, 1936, 1938, 1945, 1946, 1947, 1954, 1956, 1957], "grad_mod": [1, 1872], "least": [1, 5, 6, 8, 21, 25, 29, 39, 40, 46, 251, 393, 686, 912, 1055, 1057, 1058, 1067, 1108, 1109, 1147, 1155, 1156, 1191, 1216, 1239, 1266, 1288, 1321, 1335, 1607, 1641, 1869, 1874, 1888, 1892, 1894, 1895, 1897, 1901, 1917, 1920, 1926, 1928, 1929, 1930, 1935, 1947, 1949, 1957], "intermediari": [1, 13, 29, 888, 1894, 1902], "access": [1, 9, 17, 20, 23, 25, 44, 46, 53, 67, 546, 723, 888, 977, 1194, 1197, 1209, 1256, 1335, 1427, 1598, 1609, 1610, 1615, 1619, 1641, 1651, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1870, 1871, 1872, 1874, 1875, 1878, 1882, 1885, 1886, 1888, 1889, 1894, 1897, 1901, 1902, 1904, 1905, 1924, 1928, 1931, 1932, 1934, 1942, 1945, 1946, 1947, 1949, 1953, 1960], "isinst": [1, 20, 29, 54, 900, 902, 903, 1181, 1192, 1872, 1874, 1894, 1899, 1905, 1916, 1928, 1956, 1957], "dir": [1, 1010, 1667, 1869, 1874, 1916], "__call__": [1, 1194, 1427], "__class__": [1, 55, 57], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1875], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1875], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1874], "__ne__": 1, "__new__": [1, 1873, 1875], "__reduce__": [1, 1916], "__reduce_ex__": 1, "__repr__": [1, 3, 1899], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 54, 1872, 1874], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1894], "metadata": [1, 3, 25, 33, 34, 44, 55, 62, 63, 1265, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1747, 1889, 1894, 1899, 1900, 1910, 1916, 1918, 1924, 1925, 1928, 1933, 1946, 1956], "next_funct": 1, "register_prehook": [1, 1894], "allclos": [1, 51, 52, 54, 897, 898, 1010, 1089, 1090, 1096, 1097, 1124, 1125, 1127, 1128, 1129, 1130, 1134, 1135, 1241, 1243, 1254, 1256, 1259, 1260, 1285, 1619, 1646, 1715, 1862, 1872, 1900, 1914, 1928], "pack": [1, 27, 727, 728, 729, 730, 731, 732, 734, 735, 749, 770, 1209, 1210, 1285, 1364, 1379, 1397, 1442, 1640, 1641, 1642, 1643, 1872, 1882, 1889, 1894, 1901, 1911, 1919], "unpack": [1, 55, 60, 61, 749, 885, 1209, 1241, 1285, 1364, 1643, 1645, 1652, 1668, 1874, 1875, 1894, 1899, 1901], "hook": [1, 24, 27, 28, 46, 477, 737, 746, 888, 902, 903, 1013, 1194, 1364, 1427, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1648, 1651, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1870, 1890, 1898, 1899, 1904, 1916, 1919, 1944, 1946, 1947, 1948, 1950], "common": [1, 3, 8, 20, 31, 40, 51, 55, 68, 73, 674, 782, 854, 914, 917, 922, 954, 1062, 1067, 1112, 1113, 1114, 1115, 1137, 1216, 1265, 1316, 1345, 1346, 1347, 1350, 1466, 1508, 1599, 1600, 1602, 1603, 1604, 1605, 1606, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1735, 1747, 1813, 1854, 1870, 1874, 1879, 1888, 1894, 1897, 1899, 1900, 1901, 1905, 1907, 1910, 1912, 1916, 1928, 1929, 1932, 1935, 1945, 1947, 1950, 1953, 1955, 1956, 1957, 1959], "trade": [1, 5, 8, 46, 1257, 1344, 1759, 1896, 1901, 1920], "leav": [1, 8, 31, 41, 141, 882, 1199, 1211, 1617, 1620, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1807, 1871, 1873, 1874, 1894, 1897, 1916, 1920, 1950], "especi": [1, 9, 11, 20, 23, 54, 245, 923, 941, 948, 1594, 1873, 1894, 1899, 1900, 1908, 1910, 1919, 1924, 1928, 1942, 1946, 1947, 1949, 1950], "notic": [1, 23, 44, 678, 1087, 1101, 1288, 1298, 1343, 1479, 1543, 1688, 1689, 1694, 1695, 1701, 1870, 1871, 1894, 1928, 1951, 1953, 1955], "fit": [1, 9, 32, 50, 51, 488, 906, 1191, 1675, 1737, 1897, 1912, 1917, 1935, 1957], "evalu": [1, 4, 8, 9, 27, 28, 29, 44, 49, 54, 682, 688, 787, 852, 897, 1024, 1130, 1131, 1194, 1335, 1339, 1345, 1346, 1347, 1365, 1382, 1390, 1391, 1392, 1399, 1427, 1441, 1445, 1466, 1569, 1591, 1617, 1675, 1691, 1722, 1874, 1875, 1899, 1905, 1928, 1936, 1939, 1944, 1945, 1946], "saved_tensors_hook": [1, 888, 1894], "pack_hook": [1, 1894], "unpack_hook": [1, 1894], "pair": [1, 23, 25, 28, 29, 40, 42, 606, 724, 854, 929, 959, 1101, 1207, 1257, 1295, 1419, 1428, 1433, 1437, 1566, 1684, 1731, 1873, 1874, 1880, 1887, 1894, 1897, 1917, 1924, 1925, 1926, 1933, 1935, 1938, 1947], "retriev": [1, 20, 21, 23, 27, 31, 40, 54, 526, 878, 879, 1370, 1374, 1478, 1517, 1607, 1641, 1667, 1791, 1889, 1894, 1904, 1912, 1916, 1917, 1924, 1925, 1926, 1944, 1950, 1959], "everytim": 1, "store": [1, 3, 5, 13, 17, 21, 25, 31, 41, 44, 46, 54, 317, 323, 389, 675, 811, 814, 879, 921, 980, 982, 984, 1139, 1194, 1201, 1204, 1224, 1235, 1236, 1237, 1266, 1271, 1283, 1345, 1346, 1347, 1370, 1427, 1455, 1607, 1614, 1616, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1640, 1662, 1796, 1869, 1870, 1871, 1888, 1889, 1890, 1898, 1899, 1900, 1901, 1904, 1916, 1919, 1924, 1925, 1926, 1928, 1930, 1933, 1934, 1938, 1944, 1946, 1949, 1950], "content": [1, 3, 7, 25, 33, 54, 888, 1201, 1204, 1224, 1235, 1237, 1242, 1255, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1807, 1836, 1869, 1874, 1883, 1886, 1894, 1907, 1924, 1932, 1933, 1934, 1953, 1957], "equal": [1, 21, 23, 29, 40, 41, 42, 44, 54, 251, 488, 534, 606, 669, 683, 684, 685, 728, 729, 730, 731, 732, 749, 757, 758, 809, 810, 811, 814, 850, 865, 910, 917, 919, 930, 931, 949, 959, 982, 984, 1037, 1056, 1072, 1111, 1125, 1126, 1138, 1151, 1152, 1154, 1155, 1156, 1179, 1183, 1218, 1239, 1252, 1256, 1259, 1260, 1283, 1284, 1295, 1312, 1328, 1332, 1333, 1334, 1336, 1337, 1338, 1343, 1344, 1350, 1356, 1357, 1359, 1360, 1364, 1371, 1374, 1375, 1376, 1379, 1381, 1397, 1432, 1433, 1441, 1442, 1478, 1494, 1495, 1499, 1502, 1505, 1517, 1518, 1521, 1522, 1528, 1607, 1641, 1644, 1703, 1716, 1773, 1774, 1779, 1804, 1812, 1831, 1847, 1852, 1865, 1872, 1875, 1881, 1887, 1888, 1889, 1894, 1895, 1902, 1908, 1914, 1915, 1917, 1929, 1933, 1935, 1956], "term": [1, 8, 9, 29, 40, 44, 54, 547, 723, 752, 781, 931, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1098, 1099, 1100, 1103, 1115, 1225, 1335, 1343, 1381, 1388, 1397, 1398, 1432, 1441, 1458, 1523, 1535, 1569, 1580, 1607, 1614, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1735, 1780, 1870, 1874, 1893, 1894, 1899, 1900, 1901, 1902, 1907, 1912, 1916, 1919, 1925, 1928, 1939, 1945], "mulbackward0": [1, 891, 894, 895], "inplac": [1, 49, 51, 54, 55, 62, 63, 744, 747, 765, 767, 769, 780, 786, 803, 827, 828, 829, 846, 847, 852, 886, 1124, 1194, 1339, 1349, 1365, 1366, 1367, 1368, 1369, 1372, 1384, 1385, 1386, 1413, 1426, 1427, 1445, 1446, 1447, 1454, 1456, 1469, 1492, 1500, 1511, 1512, 1513, 1514, 1515, 1519, 1530, 1531, 1532, 1541, 1556, 1571, 1572, 1574, 1577, 1579, 1589, 1601, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1851, 1872, 1881, 1894, 1899, 1912, 1938, 1952, 1956], "lead": [1, 5, 7, 19, 23, 30, 46, 52, 54, 886, 890, 892, 896, 898, 943, 1118, 1135, 1224, 1397, 1442, 1458, 1807, 1862, 1874, 1888, 1889, 1894, 1896, 1898, 1899, 1900, 1907, 1908, 1911, 1915, 1916, 1919, 1924, 1928, 1933, 1934, 1942, 1944, 1948], "undefin": [1, 23, 30, 33, 46, 310, 461, 606, 867, 889, 897, 898, 917, 925, 1070, 1119, 1120, 1343, 1664, 1709, 1894, 1897, 1899, 1900, 1924], "recurs": [1, 29, 46, 54, 943, 946, 1059, 1194, 1205, 1207, 1427, 1689, 1873, 1899, 1905, 1916, 1924, 1944, 1947, 1948, 1950], "inner": [1, 3, 46, 47, 52, 804, 806, 890, 1050, 1125, 1129, 1134, 1837, 1872, 1914, 1924, 1938], "save_on_cpu": 1, "pin_memori": [1, 20, 44, 55, 60, 63, 435, 436, 437, 438, 439, 1068, 1070, 1724, 1728, 1730, 1830, 1871, 1872, 1889, 1897, 1914, 1930, 1952], "within": [1, 5, 9, 20, 21, 23, 27, 28, 29, 40, 41, 42, 44, 46, 53, 54, 66, 67, 79, 867, 897, 898, 941, 974, 1050, 1194, 1198, 1286, 1340, 1341, 1342, 1350, 1366, 1367, 1368, 1372, 1374, 1420, 1421, 1422, 1427, 1433, 1466, 1478, 1526, 1550, 1551, 1552, 1607, 1617, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1637, 1720, 1721, 1751, 1773, 1850, 1854, 1871, 1873, 1874, 1884, 1889, 1892, 1896, 1897, 1899, 1903, 1904, 1905, 1908, 1912, 1915, 1916, 1919, 1922, 1923, 1924, 1925, 1933, 1945, 1947, 1949, 1956, 1957], "move": [1, 5, 7, 8, 9, 13, 23, 25, 46, 54, 513, 578, 810, 1087, 1194, 1201, 1260, 1265, 1301, 1345, 1346, 1347, 1400, 1401, 1402, 1427, 1466, 1564, 1609, 1610, 1683, 1873, 1882, 1883, 1886, 1888, 1897, 1900, 1901, 1905, 1906, 1907, 1910, 1915, 1916, 1917, 1924, 1930, 1935, 1950, 1957], "copi": [1, 7, 11, 20, 21, 23, 25, 31, 38, 44, 46, 50, 51, 54, 181, 187, 197, 200, 306, 393, 438, 448, 453, 461, 482, 488, 569, 570, 571, 572, 592, 606, 781, 803, 827, 828, 868, 869, 884, 930, 938, 941, 980, 981, 1106, 1107, 1108, 1109, 1111, 1124, 1194, 1205, 1265, 1266, 1327, 1364, 1374, 1427, 1437, 1478, 1607, 1640, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1732, 1738, 1744, 1830, 1839, 1845, 1871, 1872, 1886, 1889, 1894, 1895, 1897, 1899, 1907, 1914, 1916, 1917, 1918, 1919, 1924, 1928, 1930, 1931, 1932, 1934, 1938, 1946, 1949, 1956], "pin": [1, 200, 328, 435, 436, 437, 438, 439, 453, 569, 592, 1068, 1070, 1194, 1427, 1640, 1724, 1728, 1730, 1830, 1870, 1889, 1930], "asynchron": [1, 3, 4, 53, 187, 200, 569, 592, 993, 1194, 1197, 1212, 1427, 1870, 1875, 1896, 1898, 1924, 1930, 1933, 1955], "prod_1": 1, "prod_2": 1, "del": [1, 1875, 1886, 1899, 1901], "illustr": [1, 1874, 1893, 1899, 1928, 1942, 1944, 1950, 1951], "aliv": [1, 5, 20, 31, 40, 971, 1894, 1897, 1901, 1907, 1924, 1925, 1926], "live": [1, 27, 1010, 1013, 1194, 1427, 1871, 1897, 1901, 1924, 1926, 1942, 1946, 1959], "releas": [1, 7, 19, 23, 40, 42, 50, 54, 502, 676, 931, 932, 967, 968, 969, 975, 992, 1002, 1003, 1006, 1010, 1011, 1013, 1024, 1140, 1194, 1224, 1235, 1237, 1238, 1239, 1242, 1255, 1283, 1284, 1304, 1367, 1397, 1427, 1442, 1550, 1551, 1552, 1654, 1715, 1731, 1747, 1812, 1816, 1839, 1869, 1870, 1873, 1884, 1886, 1894, 1896, 1897, 1903, 1908, 1909, 1910, 1911, 1912, 1919, 1924, 1934, 1935, 1957], "delet": [1, 23, 54, 883, 968, 976, 1869, 1882, 1886, 1894, 1914, 1923, 1924, 1926, 1956], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 14, 17, 23, 25, 27, 41, 44, 46, 47, 53, 55, 68, 669, 678, 749, 757, 758, 890, 892, 896, 1041, 1205, 1288, 1298, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1345, 1360, 1365, 1366, 1367, 1368, 1372, 1375, 1376, 1379, 1380, 1390, 1397, 1398, 1433, 1442, 1444, 1461, 1470, 1472, 1474, 1475, 1476, 1477, 1494, 1495, 1512, 1513, 1514, 1519, 1521, 1522, 1543, 1607, 1705, 1851, 1870, 1871, 1873, 1874, 1875, 1878, 1880, 1888, 1889, 1894, 1899, 1901, 1902, 1909, 1912, 1913, 1918, 1919, 1924, 1928, 1933, 1936, 1939, 1948, 1949], "messag": [1, 2, 5, 17, 23, 33, 42, 44, 51, 54, 55, 56, 70, 71, 613, 669, 1027, 1029, 1223, 1224, 1665, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1869, 1871, 1872, 1874, 1875, 1880, 1901, 1912, 1917, 1918, 1924, 1926, 1935, 1949, 1957], "get": [1, 8, 13, 20, 23, 24, 25, 28, 40, 41, 42, 43, 44, 46, 51, 53, 54, 79, 141, 326, 675, 723, 777, 778, 850, 851, 882, 885, 925, 995, 996, 997, 1014, 1054, 1124, 1127, 1128, 1129, 1141, 1169, 1209, 1261, 1370, 1371, 1395, 1396, 1423, 1424, 1425, 1437, 1454, 1607, 1608, 1615, 1641, 1648, 1666, 1736, 1751, 1854, 1869, 1870, 1871, 1874, 1884, 1886, 1887, 1894, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1910, 1914, 1916, 1919, 1924, 1926, 1928, 1932, 1933, 1934, 1942, 1944, 1945, 1946, 1950, 1951, 1957, 1958], "register_multi_grad_hook": [1, 1894], "fn": [1, 31, 32, 33, 37, 42, 44, 46, 54, 902, 903, 943, 944, 946, 1125, 1131, 1135, 1194, 1195, 1206, 1211, 1427, 1862, 1871, 1873, 1874, 1878, 1886, 1894, 1904, 1924, 1943, 1944, 1948, 1949, 1950, 1955, 1956, 1957], "multi": [1, 4, 31, 40, 749, 971, 1014, 1034, 1067, 1087, 1156, 1194, 1344, 1364, 1379, 1397, 1427, 1430, 1431, 1432, 1433, 1442, 1470, 1472, 1479, 1499, 1607, 1870, 1871, 1874, 1894, 1896, 1897, 1905, 1909, 1915, 1924, 1928, 1931, 1934, 1936], "specifi": [1, 2, 3, 5, 8, 13, 20, 21, 23, 27, 28, 29, 31, 33, 38, 39, 40, 41, 44, 46, 54, 88, 141, 186, 250, 310, 322, 461, 471, 482, 486, 488, 489, 502, 504, 506, 526, 534, 535, 549, 569, 572, 573, 574, 576, 577, 592, 669, 724, 730, 731, 732, 757, 758, 782, 783, 784, 788, 803, 812, 815, 829, 843, 847, 848, 850, 867, 869, 881, 882, 896, 912, 935, 941, 958, 959, 967, 970, 971, 980, 981, 982, 984, 999, 1002, 1013, 1038, 1048, 1049, 1050, 1054, 1055, 1057, 1067, 1070, 1081, 1084, 1086, 1087, 1089, 1090, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1125, 1126, 1129, 1135, 1136, 1147, 1155, 1156, 1194, 1198, 1209, 1210, 1236, 1246, 1248, 1250, 1251, 1260, 1263, 1265, 1266, 1276, 1293, 1295, 1301, 1321, 1322, 1325, 1341, 1342, 1343, 1344, 1350, 1359, 1361, 1363, 1364, 1370, 1371, 1374, 1381, 1387, 1388, 1393, 1394, 1397, 1418, 1419, 1424, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1458, 1459, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1494, 1495, 1498, 1499, 1509, 1510, 1517, 1518, 1523, 1526, 1538, 1545, 1561, 1562, 1569, 1576, 1582, 1583, 1607, 1612, 1614, 1615, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1651, 1654, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1682, 1683, 1684, 1685, 1686, 1691, 1696, 1697, 1705, 1713, 1722, 1738, 1743, 1744, 1747, 1764, 1792, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1810, 1811, 1815, 1831, 1833, 1837, 1847, 1848, 1849, 1850, 1854, 1856, 1857, 1858, 1862, 1869, 1871, 1873, 1874, 1878, 1880, 1881, 1883, 1884, 1887, 1888, 1894, 1897, 1899, 1903, 1905, 1907, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1923, 1924, 1928, 1929, 1930, 1931, 1933, 1935, 1943, 1945, 1956], "ignor": [1, 5, 7, 23, 27, 32, 38, 44, 46, 54, 141, 488, 533, 675, 678, 679, 680, 724, 783, 784, 847, 850, 851, 863, 882, 896, 897, 898, 909, 931, 959, 962, 966, 1014, 1015, 1034, 1035, 1088, 1090, 1098, 1099, 1100, 1139, 1154, 1194, 1205, 1211, 1214, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1285, 1322, 1323, 1324, 1340, 1341, 1342, 1343, 1344, 1361, 1363, 1371, 1379, 1381, 1387, 1393, 1394, 1397, 1418, 1419, 1420, 1421, 1422, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1442, 1458, 1459, 1470, 1475, 1498, 1499, 1509, 1518, 1538, 1561, 1569, 1607, 1654, 1668, 1691, 1699, 1703, 1764, 1794, 1795, 1812, 1816, 1839, 1871, 1874, 1875, 1881, 1888, 1894, 1897, 1899, 1912, 1928, 1935, 1942, 1953, 1956], "rel": [1, 8, 9, 13, 21, 23, 29, 46, 54, 477, 683, 865, 897, 898, 902, 903, 959, 1183, 1248, 1251, 1475, 1476, 1491, 1526, 1668, 1672, 1673, 1699, 1881, 1884, 1896, 1897, 1904, 1912, 1916, 1935, 1950], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 44, 54, 55, 62, 63, 786, 827, 828, 846, 847, 941, 1124, 1198, 1916, 1934, 1946, 1947], "_allowmutationonsavedcontext": 1, "purpos": [1, 21, 23, 54, 74, 461, 488, 749, 897, 1203, 1288, 1350, 1379, 1433, 1601, 1602, 1603, 1604, 1764, 1884, 1889, 1894, 1899, 1916, 1925, 1943, 1944, 1950, 1951, 1957], "clear": [1, 2, 8, 9, 42, 54, 948, 1194, 1427, 1428, 1437, 1667, 1869, 1894, 1897, 1905, 1910, 1914, 1915], "upon": [1, 2, 20, 24, 31, 33, 54, 941, 1607, 1616, 1619, 1886, 1894, 1897, 1912, 1919, 1926], "sin_": [1, 1872, 1887], "8415": [1, 1928], "sinbackward0": 1, "variou": [2, 5, 13, 20, 23, 44, 54, 1266, 1852, 1854, 1878, 1881, 1886, 1889, 1899, 1905, 1907, 1915, 1919, 1921, 1928, 1939, 1946, 1958], "get_cpu_cap": 2, "capabl": [2, 8, 13, 14, 23, 995, 1722, 1878, 1897, 1903, 1904, 1906, 1936], "string": [2, 3, 5, 12, 13, 20, 23, 31, 37, 38, 40, 54, 592, 803, 843, 947, 993, 1010, 1011, 1067, 1124, 1194, 1201, 1204, 1265, 1355, 1356, 1357, 1427, 1428, 1437, 1470, 1472, 1474, 1501, 1502, 1503, 1630, 1662, 1715, 1747, 1755, 1757, 1853, 1854, 1869, 1872, 1873, 1874, 1875, 1888, 1894, 1899, 1904, 1905, 1910, 1912, 1916, 1918, 1924, 1930, 1931, 1933, 1938, 1943, 1947, 1950, 1957, 1958, 1959], "vsx": 2, "z": [2, 3, 10, 29, 46, 51, 55, 58, 62, 63, 606, 809, 866, 888, 932, 933, 949, 1067, 1071, 1295, 1380, 1526, 1619, 1652, 1653, 1662, 1709, 1739, 1740, 1871, 1872, 1873, 1888, 1894, 1896, 1897, 1902, 1903, 1912, 1916, 1922, 1924, 1926, 1942, 1945, 1956, 1957], "vector": [2, 11, 21, 29, 46, 47, 51, 245, 304, 306, 312, 678, 679, 680, 873, 882, 884, 890, 891, 892, 893, 894, 895, 896, 922, 923, 929, 940, 955, 959, 967, 1048, 1049, 1054, 1056, 1130, 1134, 1135, 1139, 1226, 1233, 1241, 1249, 1250, 1254, 1257, 1261, 1262, 1263, 1283, 1288, 1295, 1317, 1319, 1345, 1346, 1347, 1350, 1364, 1370, 1371, 1374, 1382, 1390, 1391, 1392, 1436, 1466, 1475, 1478, 1517, 1518, 1526, 1528, 1562, 1566, 1594, 1611, 1613, 1615, 1619, 1650, 1654, 1704, 1705, 1796, 1816, 1856, 1859, 1862, 1894, 1902, 1919, 1928, 1933, 1949], "NO": [2, 72, 74], "avx": [2, 1941], "avx2": [2, 1919, 1941], "avx512": [2, 1941], "is_built": [2, 1906], "built": [2, 3, 7, 8, 13, 21, 23, 28, 33, 49, 54, 942, 993, 1203, 1476, 1691, 1870, 1889, 1894, 1896, 1897, 1899, 1903, 1905, 1906, 1907, 1921, 1943, 1944, 1950, 1957, 1958], "necessarili": [2, 21, 23, 29, 31, 40, 71, 461, 897, 1230, 1252, 1263, 1294, 1363, 1434, 1897, 1899], "machin": [2, 23, 31, 40, 46, 47, 52, 1198, 1203, 1239, 1463, 1903, 1904, 1905, 1906, 1907, 1909, 1912, 1913, 1916, 1923, 1924, 1925, 1939, 1941, 1949], "driver": [2, 1139, 1239, 1257, 1258, 1303, 1872, 1897, 1908, 1924, 1955, 1957], "would": [2, 3, 5, 8, 9, 11, 13, 20, 23, 29, 31, 33, 40, 41, 44, 46, 48, 51, 54, 141, 435, 436, 437, 438, 439, 687, 749, 783, 843, 882, 886, 896, 931, 1068, 1070, 1088, 1128, 1129, 1192, 1194, 1195, 1199, 1201, 1209, 1210, 1308, 1309, 1340, 1341, 1342, 1343, 1344, 1379, 1393, 1397, 1420, 1421, 1422, 1427, 1437, 1442, 1526, 1537, 1598, 1607, 1608, 1640, 1652, 1686, 1724, 1728, 1730, 1741, 1751, 1830, 1831, 1836, 1871, 1873, 1874, 1887, 1888, 1889, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1907, 1910, 1912, 1915, 1916, 1917, 1919, 1924, 1925, 1926, 1928, 1942, 1943, 1945, 1946, 1947, 1949, 1951, 1953, 1956, 1957], "allow_tf32": [2, 1759, 1872, 1897, 1908], "tensorfloat": 2, "core": [2, 3, 7, 8, 44, 50, 67, 941, 963, 1024, 1664, 1874, 1878, 1896, 1897, 1898, 1907, 1908, 1916, 1936, 1945, 1950, 1954], "amper": [2, 1928], "newer": [2, 13, 1030, 1648, 1896, 1897, 1910, 1913, 1915, 1916, 1920, 1949], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1897, 1908], "precis": [2, 3, 8, 11, 13, 21, 29, 46, 675, 678, 897, 898, 909, 921, 1013, 1110, 1143, 1239, 1257, 1263, 1288, 1298, 1340, 1341, 1342, 1344, 1355, 1356, 1357, 1358, 1359, 1360, 1380, 1398, 1414, 1420, 1421, 1422, 1479, 1537, 1576, 1607, 1744, 1759, 1764, 1870, 1874, 1884, 1890, 1894, 1905, 1916, 1919, 1920, 1922, 1929, 1931, 1933, 1934, 1954, 1960], "gemm": [2, 1896, 1912, 1947], "allow_bf16_reduced_precision_reduct": [2, 1897, 1908], "cufft_plan_cach": [2, 1897], "cufft": 2, "queri": [2, 23, 40, 54, 724, 970, 971, 973, 979, 1026, 1030, 1044, 1045, 1194, 1305, 1427, 1433, 1576, 1618, 1872, 1897, 1916, 1945, 1946, 1950], "specif": [2, 3, 7, 8, 9, 13, 23, 25, 27, 29, 31, 38, 40, 42, 44, 46, 51, 54, 55, 66, 68, 73, 79, 502, 843, 850, 906, 973, 1058, 1087, 1156, 1191, 1198, 1203, 1207, 1209, 1210, 1294, 1374, 1399, 1576, 1601, 1602, 1621, 1663, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1682, 1683, 1684, 1685, 1686, 1754, 1759, 1793, 1852, 1869, 1871, 1873, 1874, 1876, 1878, 1880, 1884, 1888, 1890, 1894, 1897, 1899, 1903, 1907, 1909, 1912, 1915, 1916, 1918, 1919, 1920, 1922, 1924, 1926, 1933, 1934, 1941, 1945, 1946, 1947, 1949, 1950, 1954, 1956, 1957], "via": [2, 7, 13, 14, 20, 23, 25, 29, 38, 44, 46, 50, 54, 506, 606, 897, 898, 928, 968, 1004, 1024, 1071, 1127, 1266, 1345, 1346, 1347, 1364, 1382, 1390, 1391, 1392, 1399, 1466, 1614, 1648, 1651, 1697, 1871, 1873, 1874, 1884, 1886, 1889, 1892, 1894, 1897, 1899, 1900, 1901, 1903, 1905, 1907, 1908, 1912, 1916, 1919, 1924, 1925, 1928, 1931, 1932, 1943, 1945, 1946, 1947, 1950, 1953, 1958], "readonli": 2, "show": [2, 4, 7, 12, 17, 20, 21, 23, 25, 30, 44, 46, 54, 67, 890, 896, 941, 1118, 1194, 1295, 1427, 1598, 1667, 1869, 1870, 1874, 1887, 1896, 1897, 1898, 1902, 1903, 1905, 1912, 1915, 1916, 1924, 1926, 1949, 1951, 1954, 1955, 1957, 1959], "max_siz": [2, 39, 41, 1897], "capac": [2, 1037, 1897, 1907], "preferred_linalg_librari": [2, 1230], "subject": [2, 3, 11, 17, 23, 27, 28, 46, 53, 54, 224, 854, 1576, 1607, 1874, 1887, 1888, 1894, 1899, 1912, 1913, 1917, 1918, 1919, 1920, 1924, 1928, 1931, 1936, 1937, 1938, 1945, 1954], "algebra": [2, 9, 1067, 1230, 1251, 1870, 1879], "cusolv": [2, 1257, 1258, 1816], "magma": [2, 933, 1239, 1283, 1715, 1816, 1911, 1928], "decid": [2, 4, 7, 23, 40, 50, 1630, 1881, 1912, 1928, 1946, 1947, 1951], "heurist": [2, 13, 20, 40, 41, 54, 1067, 1951], "overrid": [2, 13, 21, 23, 24, 29, 33, 41, 46, 51, 54, 781, 782, 843, 879, 881, 1010, 1343, 1344, 1361, 1363, 1387, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1621, 1686, 1747, 1764, 1870, 1874, 1878, 1910, 1915, 1916, 1919, 1924, 1928, 1933, 1938, 1956], "wherev": [2, 9, 1887, 1950], "pick": [2, 23, 39, 41, 502, 941, 1894, 1924, 1944, 1945, 1951], "prefer": [2, 9, 20, 25, 31, 46, 851, 867, 892, 1192, 1234, 1247, 1251, 1259, 1266, 1434, 1576, 1751, 1812, 1830, 1871, 1894, 1897, 1916, 1928], "environ": [2, 3, 7, 13, 14, 17, 19, 21, 29, 31, 33, 38, 43, 54, 66, 68, 669, 1203, 1209, 1397, 1442, 1851, 1869, 1871, 1880, 1894, 1896, 1898, 1903, 1908, 1909, 1911, 1917, 1924, 1941, 1943, 1947, 1957], "variabl": [2, 3, 5, 13, 17, 19, 21, 29, 31, 33, 38, 43, 46, 51, 54, 55, 58, 62, 63, 66, 68, 438, 669, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 717, 718, 719, 720, 721, 723, 727, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 788, 886, 955, 959, 1036, 1068, 1135, 1207, 1209, 1266, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1370, 1371, 1379, 1380, 1397, 1398, 1399, 1412, 1414, 1427, 1430, 1435, 1442, 1444, 1607, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1658, 1668, 1670, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1724, 1726, 1728, 1851, 1862, 1867, 1869, 1870, 1880, 1881, 1888, 1889, 1894, 1896, 1898, 1901, 1902, 1908, 1909, 1911, 1912, 1915, 1919, 1924, 1930, 1933, 1944, 1945, 1947, 1949, 1957], "torch_linalg_prefer_cusolv": 2, "global": [2, 3, 5, 8, 20, 23, 25, 27, 28, 29, 31, 41, 46, 51, 53, 54, 55, 58, 62, 63, 843, 850, 854, 862, 910, 919, 1019, 1026, 1068, 1070, 1080, 1085, 1103, 1121, 1124, 1151, 1152, 1175, 1182, 1194, 1197, 1209, 1213, 1264, 1280, 1427, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1626, 1630, 1658, 1724, 1726, 1728, 1731, 1755, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1867, 1871, 1874, 1875, 1890, 1893, 1899, 1904, 1905, 1907, 1909, 1910, 1919, 1924, 1925, 1926, 1928, 1931, 1933, 1944, 1946, 1947, 1948, 1956, 1957], "overridden": [2, 13, 54, 878, 879, 880, 1010, 1427, 1791, 1874, 1894, 1899, 1908, 1917, 1957, 1958], "achiev": [2, 20, 21, 23, 29, 41, 46, 1067, 1131, 1194, 1344, 1350, 1427, 1433, 1434, 1499, 1528, 1607, 1885, 1897, 1904, 1907, 1916, 1924, 1926, 1957], "better": [2, 3, 7, 8, 9, 13, 20, 23, 31, 50, 941, 1036, 1123, 1127, 1128, 1169, 1181, 1209, 1363, 1460, 1582, 1607, 1697, 1722, 1874, 1893, 1894, 1896, 1897, 1902, 1911, 1912, 1915, 1918, 1919, 1920, 1928, 1933, 1938, 1943, 1944, 1950, 1954], "select": [2, 5, 14, 18, 20, 23, 29, 31, 304, 306, 308, 312, 749, 931, 961, 962, 965, 974, 975, 979, 986, 987, 988, 989, 991, 1012, 1016, 1018, 1019, 1020, 1022, 1024, 1025, 1026, 1030, 1031, 1032, 1033, 1036, 1037, 1040, 1042, 1044, 1045, 1087, 1266, 1295, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1379, 1397, 1442, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1635, 1636, 1754, 1827, 1854, 1865, 1871, 1872, 1874, 1886, 1887, 1888, 1889, 1894, 1896, 1897, 1902, 1909, 1914, 1919, 1928, 1932, 1935, 1944, 1950, 1952, 1954, 1959], "incorrect": [2, 4, 5, 46, 54, 71, 72, 74, 245, 502, 545, 888, 897, 923, 1209, 1252, 1265, 1433, 1470, 1471, 1472, 1473, 1474, 1594, 1654, 1812, 1871, 1874, 1897, 1908, 1912], "linalg": [2, 397, 931, 932, 933, 934, 967, 1053, 1139, 1172, 1274, 1283, 1284, 1285, 1289, 1290, 1614, 1615, 1619, 1654, 1702, 1707, 1709, 1715, 1786, 1816, 1817, 1839, 1859, 1870], "inv": [2, 29, 933, 1172, 1225, 1229, 1235, 1251, 1255, 1259], "inv_ex": 2, "cholesky_ex": [2, 1223], "lu_factor": [2, 1242, 1243, 1283, 1284, 1285], "lu": [2, 10, 1235, 1241, 1242, 1243, 1284, 1285, 1872], "eigh": [2, 1223, 1229, 1232, 1251, 1257, 1908], "eighval": 2, "svdval": [2, 1225, 1239, 1248, 1257, 1816, 1908], "_linalgbackend": 2, "sdpbackend": 2, "enum": [2, 23, 55, 785, 1899, 1912, 1919, 1924, 1950], "scale": [2, 7, 20, 29, 31, 39, 41, 88, 463, 465, 606, 674, 678, 679, 680, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 759, 761, 762, 763, 764, 766, 769, 770, 784, 788, 791, 808, 809, 810, 811, 814, 909, 1081, 1082, 1085, 1103, 1134, 1135, 1280, 1339, 1365, 1370, 1371, 1372, 1388, 1399, 1454, 1479, 1480, 1481, 1517, 1518, 1519, 1535, 1537, 1576, 1577, 1582, 1670, 1691, 1717, 1718, 1719, 1720, 1721, 1794, 1795, 1813, 1862, 1870, 1872, 1888, 1892, 1897, 1901, 1905, 1919, 1920, 1922, 1929, 1947], "product": [2, 14, 23, 29, 40, 141, 675, 678, 679, 680, 749, 882, 884, 891, 893, 894, 895, 896, 909, 921, 927, 931, 955, 967, 979, 1026, 1030, 1044, 1045, 1048, 1064, 1067, 1130, 1134, 1135, 1171, 1214, 1226, 1233, 1259, 1260, 1262, 1288, 1295, 1298, 1319, 1379, 1380, 1397, 1398, 1525, 1576, 1614, 1703, 1704, 1713, 1759, 1832, 1847, 1859, 1862, 1870, 1871, 1887, 1894, 1902, 1904, 1908, 1916, 1928, 1959], "attent": [2, 7, 724, 1344, 1433, 1470, 1472, 1474, 1499, 1576, 1870, 1911, 1932], "stai": [2, 7, 27, 130, 1364, 1897, 1907, 1919, 1924, 1928], "align": [2, 9, 21, 68, 749, 768, 774, 809, 815, 941, 1067, 1147, 1249, 1342, 1350, 1363, 1379, 1393, 1397, 1421, 1422, 1442, 1479, 1509, 1510, 1537, 1538, 1595, 1614, 1654, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1689, 1837, 1870, 1887, 1894, 1902, 1912, 1922, 1929], "src": [2, 3, 23, 54, 187, 219, 304, 312, 461, 501, 502, 503, 504, 505, 506, 508, 527, 1058, 1124, 1317, 1470, 1473, 1474, 1664, 1748, 1749, 1750, 1754, 1785, 1826, 1851, 1872, 1916, 1952], "transform": [2, 3, 20, 25, 28, 44, 46, 51, 66, 67, 68, 770, 786, 827, 828, 846, 847, 932, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1123, 1124, 1125, 1129, 1134, 1191, 1203, 1348, 1382, 1390, 1391, 1392, 1399, 1414, 1455, 1471, 1472, 1473, 1474, 1491, 1497, 1526, 1543, 1562, 1598, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1780, 1812, 1870, 1900, 1917, 1919, 1928, 1933, 1938, 1939, 1949, 1950], "sdp_utils_cpp": 2, "h": [2, 4, 10, 13, 29, 477, 730, 731, 732, 749, 1223, 1230, 1233, 1243, 1257, 1333, 1334, 1341, 1342, 1344, 1346, 1347, 1351, 1356, 1357, 1359, 1367, 1368, 1370, 1372, 1379, 1380, 1391, 1392, 1397, 1398, 1399, 1410, 1411, 1421, 1422, 1439, 1440, 1442, 1444, 1461, 1477, 1480, 1481, 1491, 1499, 1526, 1561, 1567, 1568, 1614, 1615, 1648, 1664, 1816, 1872, 1887, 1888, 1894, 1897, 1898, 1899, 1901, 1902, 1912, 1932, 1933, 1934, 1945, 1954], "flash_sdp_en": 2, "flash": 2, "enable_mem_efficient_sdp": [2, 1576], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1576], "math_sdp_en": 2, "math": [2, 20, 54, 1077, 1243, 1245, 1538, 1576, 1705, 1722, 1817, 1870, 1871, 1873, 1874, 1908, 1928, 1929, 1935, 1957], "enable_math_sdp": [2, 1576], "sdp_kernel": [2, 1576], "enable_flash": 2, "enable_math": [2, 1576], "enable_mem_effici": 2, "temporarili": [2, 31, 1755, 1894, 1912, 1918, 1951], "previou": [2, 17, 23, 40, 46, 54, 545, 749, 941, 1002, 1112, 1147, 1204, 1264, 1280, 1379, 1397, 1442, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1667, 1722, 1812, 1882, 1894, 1897, 1899, 1905, 1911, 1919, 1926, 1947], "restor": [2, 5, 27, 54, 79, 948, 1112, 1264, 1280, 1651, 1742, 1764, 1905, 1910, 1944], "is_avail": [2, 16, 23, 1854, 1870, 1897, 1903, 1906, 1910, 1918], "determinist": [2, 3, 5, 19, 23, 29, 54, 71, 79, 502, 862, 1142, 1175, 1197, 1209, 1210, 1291, 1294, 1296, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1397, 1442, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1752, 1758, 1851, 1872, 1894, 1909, 1915, 1923], "algorithm": [2, 3, 7, 11, 18, 21, 24, 27, 29, 31, 46, 79, 749, 768, 774, 931, 1191, 1234, 1241, 1247, 1251, 1257, 1266, 1283, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1377, 1379, 1397, 1442, 1478, 1479, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1526, 1537, 1576, 1595, 1607, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1686, 1705, 1744, 1759, 1816, 1817, 1851, 1870, 1894, 1897, 1908, 1924, 1928], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 488, 862, 1068, 1069, 1070, 1175, 1758, 1909], "benchmark": [2, 1870, 1872, 1897, 1903, 1942, 1947, 1954], "fastest": [2, 866, 1607, 1653, 1672, 1673, 1902, 1909, 1915], "benchmark_limit": 2, "maximum": [2, 29, 40, 41, 44, 488, 684, 686, 760, 784, 809, 810, 811, 814, 815, 863, 981, 1016, 1018, 1024, 1031, 1032, 1046, 1047, 1068, 1069, 1070, 1113, 1129, 1154, 1155, 1156, 1266, 1291, 1312, 1386, 1517, 1518, 1612, 1689, 1697, 1722, 1736, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1851, 1853, 1872, 1880, 1892, 1893, 1897, 1907, 1914, 1922, 1935, 1945, 1952, 1959], "try": [2, 3, 4, 7, 8, 23, 25, 28, 32, 33, 37, 40, 44, 46, 50, 51, 69, 70, 941, 1037, 1120, 1129, 1135, 1199, 1200, 1209, 1230, 1312, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1470, 1471, 1473, 1479, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1862, 1869, 1871, 1874, 1875, 1894, 1897, 1899, 1901, 1902, 1907, 1912, 1915, 1916, 1919, 1920, 1924, 1928, 1943, 1945, 1946, 1947, 1949, 1957, 1959], "dispatch": [2, 23, 46, 54, 71, 72, 74, 1199, 1308, 1309, 1666, 1852, 1854, 1874, 1878, 1897, 1899, 1912, 1947, 1948, 1958], "v8": 2, "verbos": [2, 13, 23, 54, 669, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1869, 1880, 1888, 1912, 1933, 1957], "On": [2, 13, 19, 20, 23, 24, 29, 41, 46, 51, 54, 675, 678, 909, 921, 1241, 1288, 1298, 1355, 1356, 1357, 1358, 1359, 1360, 1380, 1395, 1396, 1397, 1398, 1414, 1437, 1442, 1455, 1607, 1672, 1673, 1682, 1685, 1870, 1871, 1881, 1894, 1896, 1897, 1899, 1908, 1916, 1924, 1925, 1926, 1928, 1942, 1945, 1946], "demand": [2, 20, 1004, 1873, 1904, 1907, 1924], "onemkl": 2, "easier": [2, 7, 20, 54, 1871, 1873, 1889, 1894, 1895, 1899, 1900, 1928, 1947, 1957], "dump": [2, 54, 968, 1898, 1911, 1947, 1950, 1957], "durat": [2, 23, 37, 40, 1308, 1309, 1884, 1912, 1918, 1947, 1957], "kernel": [2, 3, 4, 11, 13, 17, 23, 44, 46, 53, 728, 729, 730, 731, 732, 761, 762, 763, 941, 966, 971, 973, 974, 1010, 1011, 1043, 1045, 1314, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1375, 1376, 1395, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1576, 1617, 1852, 1854, 1871, 1878, 1882, 1889, 1897, 1899, 1900, 1906, 1908, 1912, 1915, 1918, 1920, 1928, 1942, 1944, 1946, 1947, 1948, 1949, 1955, 1957], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 20, 23, 54, 669, 847, 957, 959, 1024, 1230, 1239, 1257, 1335, 1374, 1478, 1520, 1607, 1697, 1784, 1796, 1870, 1886, 1888, 1889, 1896, 1897, 1901, 1905, 1908, 1910, 1912, 1916, 1917, 1920, 1924, 1928, 1931, 1934, 1942, 1947, 1955, 1957, 1959], "moreov": [2, 46, 68, 502, 1607, 1685], "investig": [2, 7, 23, 51, 1955], "singl": [2, 3, 5, 13, 21, 23, 25, 27, 28, 29, 31, 33, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 55, 62, 63, 245, 669, 684, 685, 755, 756, 757, 758, 761, 762, 763, 803, 883, 890, 891, 892, 893, 894, 895, 896, 910, 919, 923, 941, 955, 959, 1010, 1013, 1123, 1125, 1126, 1129, 1131, 1135, 1151, 1152, 1156, 1179, 1193, 1194, 1209, 1210, 1213, 1271, 1295, 1308, 1309, 1333, 1334, 1337, 1338, 1341, 1342, 1344, 1355, 1356, 1357, 1359, 1360, 1363, 1364, 1375, 1376, 1382, 1395, 1396, 1399, 1421, 1422, 1427, 1435, 1439, 1440, 1455, 1466, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1523, 1550, 1551, 1552, 1594, 1600, 1602, 1605, 1606, 1607, 1611, 1612, 1613, 1649, 1650, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1691, 1712, 1738, 1759, 1804, 1810, 1811, 1848, 1849, 1851, 1857, 1858, 1862, 1870, 1871, 1873, 1874, 1881, 1882, 1886, 1888, 1889, 1894, 1896, 1897, 1899, 1900, 1902, 1905, 1907, 1908, 1909, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1925, 1926, 1928, 1931, 1934, 1935, 1938, 1941, 1942, 1944, 1945, 1946, 1947, 1949, 1950, 1956, 1957], "enough": [2, 8, 21, 54, 1205, 1317, 1476, 1798, 1799, 1800, 1801, 1802, 1803, 1851, 1873, 1886, 1889, 1897, 1899, 1902, 1915, 1916, 1931, 1947, 1958], "scope": [2, 7, 42, 54, 68, 1120, 1466, 1630, 1871, 1873, 1874, 1897, 1901, 1912, 1916, 1926, 1946, 1956], "second": [2, 5, 13, 17, 23, 27, 31, 33, 40, 42, 44, 52, 54, 675, 678, 680, 683, 749, 783, 863, 864, 865, 873, 881, 897, 898, 909, 913, 914, 916, 917, 918, 921, 967, 979, 1026, 1030, 1044, 1045, 1055, 1057, 1058, 1064, 1072, 1113, 1114, 1125, 1128, 1129, 1130, 1134, 1135, 1137, 1138, 1147, 1150, 1158, 1159, 1160, 1171, 1183, 1216, 1218, 1226, 1262, 1265, 1271, 1272, 1282, 1288, 1292, 1294, 1295, 1297, 1298, 1323, 1328, 1331, 1335, 1341, 1342, 1348, 1356, 1357, 1359, 1360, 1370, 1371, 1378, 1379, 1393, 1396, 1397, 1415, 1419, 1421, 1422, 1442, 1455, 1508, 1510, 1544, 1598, 1630, 1666, 1672, 1673, 1676, 1682, 1686, 1697, 1743, 1793, 1801, 1836, 1841, 1843, 1856, 1859, 1862, 1873, 1874, 1894, 1897, 1899, 1900, 1901, 1902, 1905, 1909, 1912, 1918, 1924, 1929, 1933, 1942, 1950], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 14, 17, 20, 23, 31, 32, 33, 37, 46, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 488, 669, 736, 883, 884, 885, 893, 1124, 1139, 1364, 1607, 1870, 1871, 1874, 1875, 1880, 1884, 1886, 1889, 1892, 1894, 1896, 1899, 1902, 1913, 1916, 1918, 1919, 1920, 1924, 1928, 1933, 1937, 1938, 1939, 1944, 1945, 1947, 1948, 1950, 1952, 1955, 1956, 1957, 1958], "verbose_off": 2, "dnn": [2, 1896], "onednn": [2, 844, 845, 848, 1196, 1202, 1919], "former": [2, 46, 1397, 1427, 1894], "dnnl_verbos": 2, "verbose_on_cr": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 15, 16, 21, 29, 44, 50, 53, 1526, 1607, 1869, 1870, 1885, 1899, 1905, 1915, 1922, 1924, 1933, 1936, 1943], "els": [2, 7, 20, 23, 25, 29, 31, 32, 40, 44, 54, 55, 592, 749, 912, 1205, 1211, 1393, 1466, 1563, 1576, 1607, 1662, 1672, 1673, 1676, 1682, 1683, 1684, 1685, 1739, 1740, 1773, 1779, 1854, 1871, 1873, 1875, 1876, 1881, 1886, 1889, 1897, 1899, 1900, 1905, 1906, 1912, 1915, 1916, 1930, 1942, 1943, 1944, 1945, 1956], "einsum": [2, 1872, 1914], "readthedoc": [2, 1067], "io": [2, 7, 20, 25, 1067, 1201, 1204, 1265, 1397, 1398, 1474, 1576, 1663, 1747, 1911, 1919], "en": [2, 21, 1067, 1903, 1933, 1960], "path_find": [2, 1067], "html": [2, 3, 4, 7, 14, 41, 44, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 941, 1067, 1476, 1851, 1854, 1895, 1903, 1905, 1909, 1916, 1933], "calcul": [2, 20, 23, 37, 749, 757, 758, 788, 791, 808, 809, 813, 929, 959, 1055, 1059, 1067, 1071, 1185, 1191, 1249, 1271, 1272, 1274, 1340, 1341, 1342, 1345, 1346, 1347, 1350, 1358, 1359, 1360, 1374, 1379, 1381, 1382, 1390, 1391, 1392, 1399, 1466, 1475, 1478, 1479, 1493, 1494, 1495, 1523, 1526, 1537, 1566, 1615, 1626, 1648, 1652, 1654, 1691, 1737, 1761, 1810, 1811, 1841, 1843, 1857, 1858, 1894, 1895, 1898, 1902, 1908, 1911, 1919, 1928, 1938], "path": [2, 3, 4, 8, 13, 23, 25, 38, 40, 42, 43, 46, 54, 723, 904, 905, 968, 969, 1067, 1194, 1427, 1443, 1474, 1662, 1667, 1869, 1870, 1872, 1873, 1894, 1897, 1899, 1903, 1910, 1916, 1918, 1928, 1937, 1942, 1949, 1950, 1951], "contract": [2, 1067, 1832, 1870, 1888, 1916, 1943, 1950], "left": [2, 20, 54, 450, 488, 803, 809, 854, 910, 914, 917, 919, 920, 925, 930, 1067, 1087, 1094, 1108, 1111, 1112, 1116, 1147, 1151, 1152, 1156, 1191, 1192, 1199, 1213, 1234, 1243, 1247, 1251, 1254, 1255, 1256, 1257, 1259, 1271, 1272, 1317, 1335, 1340, 1341, 1342, 1343, 1344, 1355, 1356, 1357, 1374, 1381, 1394, 1395, 1396, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1430, 1431, 1432, 1436, 1437, 1475, 1478, 1479, 1480, 1481, 1526, 1546, 1564, 1612, 1689, 1690, 1703, 1731, 1744, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1812, 1832, 1837, 1856, 1871, 1872, 1874, 1894, 1899, 1905, 1922, 1929, 1955, 1959], "strategi": [2, 3, 7, 20, 21, 23, 27, 33, 46, 890, 892, 1067, 1127, 1207, 1335, 1607, 1697, 1873, 1900, 1902, 1920, 1947], "auto": [2, 23, 47, 69, 70, 1067, 1343, 1344, 1874, 1912, 1933, 1946], "greedi": [2, 27, 1067], "doc": [2, 3, 4, 9, 14, 40, 41, 44, 69, 73, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 829, 941, 1135, 1212, 1471, 1472, 1473, 1474, 1851, 1862, 1875, 1886, 1895, 1898, 1899, 1905, 1909, 1912, 1916, 1924, 1928, 1933, 1948, 1953], "timer": [3, 26, 1870], "stmt": [3, 1896], "setup": [3, 13, 21, 40, 41, 46, 809, 810, 811, 814, 1135, 1607, 1862, 1896, 1897, 1906, 1924, 1925, 1943, 1944], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 20, 27, 1067, 1335, 1344, 1350, 1361, 1363, 1387, 1419, 1430, 1431, 1510, 1641, 1690, 1898, 1907, 1909, 1933], "sub_label": 3, "descript": [3, 7, 12, 13, 20, 33, 40, 54, 723, 1165, 1166, 1167, 1239, 1266, 1491, 1715, 1759, 1873, 1874, 1897, 1899, 1902, 1904, 1905, 1912, 1939, 1948, 1960], "env": [3, 23, 29, 33, 38, 40, 41, 43, 54, 1024, 1662, 1663, 1898, 1908, 1912, 1924, 1947, 1957], "num_thread": [3, 1907], "languag": [3, 13, 33, 1205, 1335, 1470, 1525, 1901], "measur": [3, 29, 37, 970, 1016, 1018, 1225, 1305, 1343, 1344, 1361, 1387, 1394, 1418, 1419, 1475, 1476, 1498, 1499, 1557, 1699, 1870, 1897, 1904, 1905, 1915, 1928], "statement": [3, 29, 51, 54, 55, 60, 62, 63, 1195, 1209, 1875, 1894, 1899, 1907, 1910, 1912, 1916, 1922, 1924, 1943, 1950], "full": [3, 7, 8, 14, 20, 21, 23, 27, 29, 40, 43, 44, 46, 47, 51, 54, 55, 60, 63, 502, 889, 910, 919, 941, 1095, 1096, 1097, 1101, 1102, 1104, 1122, 1134, 1135, 1151, 1152, 1198, 1231, 1232, 1239, 1240, 1241, 1252, 1257, 1258, 1266, 1283, 1344, 1350, 1381, 1441, 1470, 1501, 1502, 1503, 1510, 1523, 1569, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1764, 1816, 1817, 1862, 1869, 1871, 1872, 1873, 1874, 1876, 1888, 1893, 1897, 1898, 1899, 1902, 1905, 1908, 1909, 1914, 1916, 1919, 1922, 1925, 1932, 1935, 1944, 1947, 1950, 1951, 1952, 1957], "org": [3, 4, 7, 9, 10, 14, 21, 28, 29, 41, 44, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 941, 1266, 1397, 1445, 1446, 1473, 1476, 1651, 1705, 1759, 1780, 1854, 1869, 1875, 1894, 1895, 1905, 1909, 1911, 1912, 1916, 1933, 1959, 1960], "timeit": [3, 1896], "sever": [3, 14, 20, 23, 28, 29, 46, 54, 727, 728, 729, 730, 731, 732, 755, 756, 761, 762, 763, 771, 772, 941, 1013, 1071, 1169, 1194, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1355, 1356, 1357, 1358, 1359, 1360, 1375, 1376, 1395, 1396, 1415, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1544, 1547, 1548, 1550, 1551, 1552, 1607, 1616, 1617, 1619, 1620, 1652, 1664, 1720, 1721, 1761, 1847, 1871, 1893, 1894, 1896, 1897, 1904, 1905, 1907, 1912, 1915, 1919, 1924, 1944], "kei": [3, 20, 25, 31, 38, 40, 41, 46, 54, 592, 669, 724, 843, 848, 906, 1033, 1123, 1133, 1194, 1209, 1210, 1265, 1427, 1428, 1433, 1437, 1470, 1471, 1472, 1473, 1474, 1576, 1633, 1649, 1852, 1854, 1870, 1872, 1873, 1874, 1878, 1897, 1899, 1904, 1905, 1910, 1912, 1913, 1914, 1915, 1918, 1919, 1922, 1924, 1925, 1930, 1933, 1935, 1937, 1939, 1948, 1950, 1954, 1955, 1956], "awar": [3, 7, 71, 476, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 827, 828, 844, 851, 852, 1474, 1576, 1607, 1820, 1821, 1822, 1823, 1824, 1888, 1894, 1897, 1916, 1922, 1925, 1928, 1954], "element": [3, 20, 23, 29, 44, 51, 52, 54, 55, 61, 62, 63, 88, 110, 141, 145, 187, 207, 233, 245, 249, 277, 304, 306, 308, 310, 312, 343, 389, 391, 393, 425, 444, 461, 463, 464, 486, 488, 502, 504, 506, 509, 534, 535, 547, 549, 598, 599, 606, 670, 672, 673, 676, 677, 682, 683, 687, 688, 724, 747, 749, 759, 760, 761, 762, 763, 769, 773, 782, 863, 865, 866, 867, 870, 871, 872, 873, 874, 882, 890, 891, 893, 894, 895, 897, 898, 911, 920, 923, 930, 936, 940, 953, 955, 956, 957, 1010, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1056, 1057, 1058, 1062, 1064, 1067, 1070, 1072, 1073, 1077, 1097, 1101, 1102, 1104, 1106, 1111, 1113, 1114, 1116, 1120, 1125, 1126, 1128, 1129, 1130, 1134, 1135, 1136, 1137, 1138, 1139, 1147, 1150, 1153, 1154, 1155, 1156, 1171, 1179, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1213, 1215, 1216, 1218, 1235, 1237, 1241, 1252, 1256, 1267, 1268, 1270, 1273, 1275, 1276, 1277, 1278, 1282, 1283, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1315, 1317, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1339, 1340, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1374, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1393, 1394, 1397, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1413, 1416, 1418, 1419, 1420, 1421, 1422, 1426, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1475, 1476, 1478, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1511, 1515, 1518, 1519, 1524, 1525, 1529, 1530, 1531, 1532, 1535, 1538, 1539, 1541, 1546, 1550, 1551, 1552, 1556, 1557, 1561, 1562, 1564, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1577, 1578, 1579, 1580, 1582, 1584, 1586, 1587, 1588, 1589, 1594, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1634, 1640, 1641, 1643, 1644, 1653, 1654, 1655, 1657, 1668, 1708, 1709, 1712, 1713, 1720, 1721, 1723, 1734, 1737, 1738, 1742, 1744, 1746, 1764, 1767, 1769, 1781, 1782, 1784, 1785, 1789, 1795, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1810, 1811, 1815, 1826, 1828, 1829, 1833, 1834, 1835, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1847, 1848, 1849, 1851, 1857, 1858, 1859, 1862, 1865, 1872, 1874, 1881, 1889, 1892, 1895, 1896, 1899, 1902, 1908, 1910, 1912, 1915, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1946, 1949, 1958], "lazili": [3, 16, 25, 970, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1598, 1871, 1899, 1955], "threadpool": 3, "comparison": [3, 21, 23, 54, 1194, 1209, 1210, 1427, 1668, 1875, 1899, 1935, 1938, 1944], "appl": [3, 1885], "focu": [3, 1699, 1950], "replic": [3, 20, 28, 46, 73, 1147, 1204, 1355, 1356, 1357, 1364, 1374, 1403, 1404, 1405, 1451, 1452, 1453, 1478, 1564, 1591, 1917], "particularli": [3, 20, 21, 42, 1363, 1364, 1434, 1871, 1897, 1945, 1955], "variat": [3, 29, 1874, 1899, 1915, 1920, 1957], "confound": 3, "quantifi": [3, 1476], "nois": [3, 1872, 1909, 1957], "median": [3, 29, 164, 1323, 1851, 1872, 1887, 1914], "robust": [3, 1266, 1886, 1905], "deviat": [3, 29, 46, 368, 1339, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1466, 1655, 1774, 1779, 1810, 1811, 1892], "merg": [3, 6, 7, 9, 20, 23, 25, 41, 1428, 1433, 1437], "repeat": [3, 29, 51, 483, 959, 1067, 1257, 1283, 1423, 1424, 1425, 1498, 1499, 1705, 1737, 1796, 1816, 1817, 1833, 1872, 1874, 1897, 1914, 1918, 1921, 1928, 1952], "autorang": 3, "exact": [3, 13, 20, 31, 42, 44, 72, 330, 730, 731, 732, 784, 863, 864, 865, 897, 898, 941, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1294, 1359, 1397, 1474, 1537, 1576, 1607, 1700, 1790, 1892, 1898, 1907, 1928, 1946, 1947, 1954, 1957, 1958], "discuss": [3, 5, 8, 9, 10, 29, 54, 1388, 1537, 1881, 1894, 1899, 1905, 1909, 1924, 1926, 1928, 1944], "docstr": [3, 13, 44, 54, 850, 851, 1194, 1427, 1869, 1897], "adapt": [3, 755, 756, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1365, 1485, 1486, 1487, 1488, 1489, 1490, 1662, 1670, 1671, 1682, 1684, 1691, 1897, 1945], "field": [3, 7, 23, 27, 31, 33, 37, 38, 54, 815, 882, 1192, 1194, 1335, 1343, 1344, 1361, 1363, 1387, 1393, 1394, 1418, 1419, 1427, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1491, 1498, 1499, 1509, 1526, 1538, 1561, 1569, 1640, 1680, 1686, 1884, 1894, 1898, 1907, 1912, 1924, 1925, 1933, 1950, 1956, 1957], "displai": [3, 17, 1012, 1025, 1537, 1595, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1869, 1875, 1880, 1883, 1912, 1933, 1935, 1947, 1957], "instruct": [3, 4, 11, 13, 42, 44, 53, 1759, 1871, 1874, 1897, 1908, 1912, 1919, 1935, 1941, 1946, 1950, 1957], "count": [3, 20, 29, 37, 54, 912, 958, 1006, 1120, 1155, 1156, 1192, 1231, 1232, 1640, 1848, 1849, 1872, 1884, 1897, 1914, 1918, 1924, 1926, 1928, 1950], "wall": [3, 1951], "callgrind": 3, "analog": [3, 54, 683, 1050, 1088, 1090, 1169, 1243, 1397, 1685, 1816, 1833, 1889, 1905, 1945, 1950], "constructor": [3, 13, 20, 21, 27, 44, 46, 54, 55, 63, 813, 850, 851, 1335, 1432, 1437, 1438, 1455, 1480, 1481, 1607, 1647, 1791, 1870, 1871, 1874, 1875, 1897, 1898, 1905, 1924, 1928, 1930, 1931, 1934, 1960], "snippet": [3, 41, 1869, 1905, 1910, 1949, 1950], "loop": [3, 21, 42, 47, 51, 52, 54, 55, 60, 851, 852, 896, 1013, 1016, 1018, 1129, 1135, 1209, 1607, 1617, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1862, 1871, 1872, 1874, 1884, 1896, 1897, 1901, 1902, 1905, 1908, 1912, 1915, 1918, 1919, 1933, 1942, 1946, 1950, 1956], "callabl": [3, 5, 20, 21, 23, 27, 29, 31, 33, 38, 40, 42, 44, 46, 53, 54, 110, 389, 830, 941, 943, 1010, 1011, 1013, 1124, 1125, 1126, 1131, 1134, 1135, 1194, 1197, 1205, 1209, 1265, 1266, 1427, 1470, 1472, 1474, 1476, 1601, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1693, 1696, 1862, 1869, 1871, 1873, 1874, 1875, 1884, 1897, 1899, 1905, 1910, 1912, 1916, 1917, 1918, 1924, 1935, 1937, 1938, 1943, 1944, 1948, 1950, 1956, 1958], "present": [3, 9, 20, 23, 40, 46, 1192, 1283, 1335, 1397, 1437, 1640, 1664, 1812, 1869, 1883, 1886, 1887, 1888, 1893, 1894, 1897, 1899, 1902, 1905, 1910, 1912, 1916, 1925, 1928, 1931, 1948, 1953, 1959], "default_tim": 3, "summar": [3, 4, 41, 1764, 1874, 1889, 1928, 1950, 1957], "relu": [3, 21, 51, 52, 54, 689, 690, 694, 695, 696, 697, 698, 699, 700, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 754, 781, 782, 803, 843, 849, 1010, 1125, 1135, 1205, 1427, 1442, 1444, 1455, 1463, 1470, 1472, 1474, 1573, 1574, 1598, 1667, 1862, 1871, 1872, 1882, 1888, 1889, 1892, 1894, 1905, 1910, 1912, 1914, 1919, 1921, 1922, 1943, 1949, 1952, 1955, 1956, 1957], "readabl": [3, 12, 20, 38, 54, 1012, 1025, 1830, 1912, 1915, 1957, 1958], "supplement": 3, "disambigu": [3, 38, 54, 1271, 1957], "ident": [3, 13, 20, 23, 29, 54, 777, 803, 897, 898, 1055, 1231, 1232, 1233, 1234, 1247, 1259, 1262, 1266, 1283, 1322, 1323, 1339, 1365, 1566, 1614, 1616, 1859, 1865, 1875, 1892, 1908, 1909, 1916, 1921, 1928, 1946, 1957], "easi": [3, 20, 25, 40, 1871, 1894, 1901, 1904, 1905, 1907, 1916, 1919, 1924, 1925, 1928, 1943, 1944, 1949, 1950, 1955], "differenti": [3, 29, 47, 52, 141, 343, 578, 791, 878, 880, 882, 884, 885, 887, 890, 891, 892, 893, 894, 895, 896, 897, 898, 938, 1013, 1128, 1129, 1130, 1134, 1208, 1240, 1241, 1252, 1283, 1349, 1350, 1370, 1528, 1562, 1607, 1619, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1851, 1870, 1881, 1899, 1901, 1902, 1912, 1915, 1924, 1934], "distinguish": [3, 1919, 1928], "princip": [3, 1240, 1705], "signal": [3, 11, 25, 31, 40, 42, 727, 728, 729, 755, 756, 771, 772, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1191, 1256, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1355, 1356, 1357, 1375, 1376, 1395, 1396, 1415, 1420, 1421, 1422, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1501, 1504, 1521, 1522, 1544, 1547, 1548, 1550, 1551, 1552, 1812, 1870, 1886, 1907, 1918, 1924], "form": [3, 7, 9, 11, 20, 23, 29, 39, 40, 41, 46, 51, 54, 749, 768, 774, 932, 1055, 1095, 1097, 1194, 1233, 1236, 1241, 1252, 1257, 1333, 1334, 1337, 1338, 1350, 1375, 1376, 1379, 1397, 1427, 1442, 1478, 1479, 1510, 1521, 1522, 1525, 1537, 1564, 1595, 1619, 1666, 1685, 1703, 1832, 1869, 1871, 1875, 1889, 1894, 1899, 1905, 1912, 1916, 1919, 1928, 1933, 1944, 1949, 1956], "treat": [3, 29, 39, 44, 49, 54, 55, 60, 61, 312, 461, 782, 897, 898, 1010, 1123, 1194, 1246, 1249, 1251, 1263, 1265, 1275, 1276, 1277, 1278, 1295, 1325, 1371, 1381, 1399, 1431, 1432, 1433, 1434, 1437, 1455, 1460, 1518, 1607, 1649, 1653, 1691, 1744, 1759, 1812, 1826, 1833, 1873, 1874, 1887, 1894, 1912, 1924, 1928, 1931, 1938, 1948, 1953, 1956], "distinct": [3, 67, 1123, 1229, 1230, 1274, 1874, 1899, 1910, 1912, 1924, 1925], "workload": [3, 8, 20, 23, 46, 1013, 1897, 1904, 1908, 1924, 1941, 1955], "good": [3, 7, 8, 13, 54, 941, 1127, 1435, 1780, 1869, 1878, 1886, 1899, 1904, 1905, 1907, 1912, 1916, 1917, 1919, 1946, 1950, 1954], "intrins": [3, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 781, 782, 1920, 1921], "contrast": [3, 29, 31, 749, 1379, 1685, 1892, 1894, 1900, 1928, 1952], "blocked_autorang": 3, "callback": [3, 21, 40, 42, 53, 54, 1607, 1884, 1899, 1904, 1918, 1924], "min_run_tim": 3, "minimum": [3, 13, 21, 31, 40, 41, 44, 685, 686, 760, 784, 809, 810, 811, 814, 815, 864, 912, 1047, 1114, 1154, 1155, 1156, 1296, 1350, 1386, 1476, 1689, 1690, 1697, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1872, 1892, 1894, 1902, 1914, 1922, 1931, 1952], "At": [3, 5, 6, 7, 14, 20, 1101, 1345, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1395, 1396, 1852, 1882, 1889, 1896, 1902, 1919, 1924, 1929, 1944, 1950, 1957], "high": [3, 4, 7, 8, 9, 10, 14, 21, 23, 29, 31, 37, 39, 41, 54, 110, 1350, 1473, 1726, 1727, 1759, 1872, 1884, 1886, 1899, 1902, 1903, 1905, 1906, 1907, 1915, 1919, 1920, 1924, 1928, 1933, 1934, 1935, 1938, 1941, 1942, 1950, 1952, 1957], "pseudo": [3, 79], "total_tim": 3, "block_siz": 3, "choic": [3, 8, 9, 23, 1209, 1257, 1428, 1437, 1722, 1896, 1912, 1922, 1928, 1945, 1957], "block": [3, 7, 8, 20, 23, 27, 40, 42, 46, 53, 54, 572, 573, 574, 920, 970, 1024, 1214, 1266, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1403, 1404, 1405, 1406, 1407, 1408, 1430, 1478, 1520, 1594, 1607, 1798, 1799, 1800, 1871, 1873, 1874, 1884, 1886, 1890, 1894, 1897, 1898, 1902, 1912, 1919, 1924, 1928, 1939, 1955, 1959], "qualiti": [3, 7, 21], "balanc": [3, 941], "compet": [3, 1907], "statist": [3, 21, 23, 29, 788, 789, 809, 810, 811, 813, 814, 979, 1016, 1018, 1019, 1020, 1022, 1024, 1025, 1026, 1030, 1031, 1032, 1033, 1044, 1045, 1271, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1884, 1894, 1901, 1915, 1917, 1919, 1922, 1947, 1957], "amort": 3, "invoc": [3, 5, 54, 830, 941, 1197, 1209, 1871, 1874, 1897, 1899, 1904, 1912, 1924, 1926, 1942, 1950, 1955], "less": [3, 6, 7, 13, 20, 21, 23, 29, 31, 42, 44, 46, 355, 669, 890, 892, 897, 898, 959, 1020, 1037, 1067, 1111, 1115, 1120, 1123, 1218, 1230, 1266, 1282, 1283, 1335, 1388, 1441, 1458, 1464, 1643, 1735, 1841, 1843, 1869, 1872, 1874, 1889, 1897, 1899, 1907, 1908, 1914, 1917, 1919, 1947], "bias": [3, 21, 723, 749, 783, 1345, 1346, 1347, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1442, 1444, 1466], "trivial": [3, 31, 33, 724, 931, 1614, 1912, 1926, 1946], "low": [3, 7, 17, 21, 29, 46, 488, 893, 1139, 1350, 1705, 1722, 1726, 1727, 1744, 1817, 1872, 1884, 1886, 1897, 1907, 1918, 1935, 1951, 1952, 1958], "digit": [3, 925, 1764, 1869, 1883, 1904, 1908], "microsecond": [3, 1897], "bia": [3, 9, 23, 55, 701, 702, 703, 704, 705, 706, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 738, 740, 741, 742, 743, 745, 749, 750, 753, 754, 761, 762, 763, 770, 781, 1133, 1194, 1203, 1335, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1379, 1380, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1427, 1433, 1442, 1443, 1444, 1470, 1472, 1474, 1496, 1497, 1501, 1502, 1503, 1504, 1505, 1506, 1527, 1536, 1540, 1543, 1598, 1607, 1614, 1615, 1629, 1631, 1633, 1648, 1651, 1719, 1872, 1882, 1899, 1905, 1910, 1919, 1921, 1928, 1933, 1952], "period": [3, 9, 27, 40, 910, 919, 979, 1012, 1025, 1026, 1030, 1044, 1045, 1087, 1151, 1152, 1213, 1701, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1872, 1884, 1907], "until": [3, 5, 7, 20, 21, 23, 27, 31, 40, 46, 53, 54, 476, 970, 971, 973, 1004, 1120, 1214, 1266, 1305, 1308, 1309, 1526, 1598, 1607, 1665, 1688, 1694, 1833, 1886, 1892, 1897, 1901, 1910, 1912, 1918, 1924, 1926, 1947], "overal": [3, 9, 20, 23, 40, 897, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1473, 1894, 1896, 1897, 1907, 1920, 1951], "main": [3, 7, 20, 21, 23, 24, 29, 31, 32, 33, 38, 40, 41, 42, 43, 54, 251, 485, 941, 1054, 1055, 1056, 1057, 1058, 1256, 1528, 1796, 1840, 1841, 1842, 1843, 1869, 1871, 1884, 1886, 1888, 1889, 1893, 1894, 1897, 1898, 1899, 1900, 1905, 1907, 1911, 1912, 1924, 1925, 1933, 1934, 1939, 1943, 1947, 1950, 1956], "repetit": [3, 1737, 1833], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1870], "tupl": [3, 5, 13, 20, 25, 31, 37, 38, 40, 44, 46, 54, 224, 310, 435, 437, 439, 486, 509, 526, 549, 572, 573, 574, 684, 685, 686, 724, 755, 756, 757, 758, 761, 762, 763, 768, 774, 775, 776, 782, 806, 807, 843, 850, 851, 867, 868, 875, 876, 877, 878, 879, 881, 890, 891, 892, 893, 894, 895, 896, 897, 898, 901, 902, 903, 924, 943, 947, 958, 980, 981, 984, 995, 1013, 1019, 1046, 1047, 1065, 1068, 1070, 1084, 1086, 1087, 1089, 1090, 1092, 1093, 1094, 1096, 1097, 1099, 1100, 1102, 1104, 1107, 1117, 1121, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1139, 1155, 1157, 1194, 1200, 1205, 1209, 1210, 1215, 1224, 1229, 1230, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1246, 1250, 1252, 1253, 1255, 1257, 1260, 1263, 1281, 1283, 1285, 1291, 1293, 1295, 1296, 1299, 1301, 1322, 1325, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1374, 1375, 1376, 1395, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1433, 1437, 1448, 1449, 1450, 1451, 1452, 1453, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1489, 1490, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1537, 1550, 1551, 1552, 1562, 1564, 1595, 1596, 1597, 1602, 1603, 1604, 1607, 1619, 1630, 1643, 1649, 1653, 1654, 1658, 1662, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1705, 1706, 1715, 1724, 1726, 1728, 1738, 1742, 1743, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1810, 1811, 1815, 1816, 1817, 1830, 1831, 1832, 1833, 1834, 1839, 1846, 1847, 1848, 1849, 1857, 1858, 1862, 1863, 1865, 1867, 1871, 1872, 1875, 1886, 1889, 1894, 1897, 1899, 1900, 1905, 1910, 1912, 1915, 1916, 1919, 1924, 1928, 1933, 1935, 1938, 1950, 1956, 1958], "modulo": [3, 29, 1115, 1735], "determin": [3, 5, 8, 11, 13, 16, 17, 19, 20, 21, 23, 29, 31, 38, 40, 51, 54, 72, 73, 74, 812, 815, 890, 892, 897, 898, 910, 919, 926, 931, 1014, 1069, 1088, 1098, 1122, 1123, 1151, 1152, 1155, 1156, 1207, 1227, 1239, 1250, 1253, 1274, 1288, 1371, 1375, 1376, 1397, 1433, 1436, 1442, 1518, 1521, 1522, 1537, 1570, 1595, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1649, 1659, 1697, 1725, 1727, 1729, 1756, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1868, 1874, 1875, 1888, 1897, 1898, 1899, 1905, 1912, 1916, 1919, 1924, 1926, 1928, 1930, 1931, 1933, 1935, 1945, 1946, 1947, 1956, 1957], "itself": [3, 5, 7, 8, 23, 24, 46, 52, 54, 682, 688, 868, 959, 1128, 1129, 1194, 1205, 1209, 1427, 1460, 1582, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1871, 1886, 1905, 1907, 1909, 1912, 1916, 1924, 1928, 1932, 1943, 1946, 1950, 1957], "jitter": 3, "interpret": [3, 20, 23, 27, 29, 31, 40, 42, 768, 774, 869, 896, 1023, 1088, 1089, 1090, 1095, 1097, 1098, 1099, 1100, 1120, 1144, 1156, 1194, 1199, 1205, 1209, 1246, 1266, 1367, 1526, 1537, 1538, 1595, 1756, 1762, 1869, 1873, 1874, 1886, 1896, 1897, 1912, 1928, 1930, 1932, 1944, 1950], "ideal": [3, 39, 41, 46, 1209, 1686, 1888, 1947], "analysi": [3, 21, 29, 54, 1213, 1705, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1875, 1905, 1913, 1938, 1943, 1944, 1946, 1951], "valgrind": 3, "degrad": [3, 13, 46, 1896, 1898, 1899, 1928], "amelior": 3, "suffici": [3, 13, 21, 29, 32, 40, 46, 1672, 1673, 1869, 1928, 1931, 1947], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 54, 768, 774, 925, 1147, 1352, 1353, 1354, 1448, 1449, 1450, 1451, 1452, 1453, 1479, 1482, 1483, 1484, 1537, 1595, 1691, 1697, 1751, 1872, 1898, 1916, 1917, 1924, 1947], "caller": [3, 31, 40, 54, 843, 1194, 1427, 1474, 1603, 1604, 1894, 1897, 1924, 1926], "structur": [3, 5, 9, 20, 21, 23, 30, 31, 33, 41, 44, 46, 54, 55, 56, 60, 63, 881, 1118, 1130, 1135, 1209, 1427, 1626, 1630, 1668, 1705, 1817, 1862, 1870, 1873, 1875, 1881, 1884, 1889, 1897, 1898, 1899, 1900, 1907, 1910, 1911, 1912, 1913, 1915, 1916, 1924, 1933, 1934, 1935, 1936, 1938, 1945, 1948, 1953, 1959], "restrict": [3, 8, 20, 29, 46, 51, 52, 1265, 1288, 1363, 1873, 1874, 1875, 1888, 1889, 1894, 1897, 1902, 1917, 1919, 1945], "builtin": [3, 23, 54, 55, 63, 1206, 1265, 1731, 1871, 1873, 1875, 1924, 1926, 1947, 1957], "surpris": [3, 8, 46, 1869, 1902, 1908, 1946], "serial": [3, 14, 20, 23, 25, 27, 40, 1194, 1203, 1204, 1265, 1427, 1598, 1662, 1663, 1747, 1869, 1870, 1872, 1883, 1888, 1894, 1897, 1904, 1905, 1907, 1916, 1919, 1924, 1925], "subsequ": [3, 7, 13, 14, 23, 44, 46, 54, 941, 971, 1194, 1205, 1209, 1355, 1356, 1357, 1358, 1359, 1360, 1427, 1455, 1603, 1604, 1897, 1909, 1912, 1924, 1928, 1942, 1947, 1950], "deseri": [3, 25, 1265, 1598, 1869, 1883, 1910, 1924], "globalsbridg": 3, "care": [3, 7, 13, 23, 29, 53, 54, 943, 1088, 1090, 1427, 1886, 1896, 1897, 1898, 1899, 1901, 1905, 1907, 1910, 1912, 1924, 1928, 1942, 1946, 1947, 1948], "reli": [3, 9, 13, 20, 21, 31, 33, 46, 54, 141, 882, 897, 943, 1067, 1364, 1686, 1894, 1896, 1898, 1899, 1909, 1910, 1928, 1932, 1946, 1947, 1948, 1951], "pickl": [3, 20, 21, 23, 1194, 1265, 1427, 1747, 1869, 1883, 1886, 1910, 1916, 1924, 1959], "transfer": [3, 20, 23, 46, 1882, 1886, 1897, 1903, 1905, 1916, 1924], "properli": [3, 7, 20, 21, 25, 27, 31, 40, 53, 1088, 1089, 1090, 1098, 1099, 1100, 1295, 1428, 1429, 1437, 1438, 1607, 1852, 1869, 1881, 1899, 1902, 1905, 1907, 1910, 1924, 1925, 1931], "profil": [3, 4, 37, 54, 941, 1207, 1601, 1602, 1603, 1604, 1764, 1870, 1914, 1924, 1939, 1947], "drive": [3, 9, 23, 1894, 1950], "facil": [3, 1265, 1886], "analyz": [3, 4, 17, 54, 1898, 1899, 1908, 1957], "manipul": [3, 46, 53, 1198, 1870, 1893, 1901, 1905, 1917, 1922, 1956], "1000000": [3, 1669], "mirror": [3, 130], "semant": [3, 9, 16, 23, 40, 41, 46, 54, 141, 783, 863, 864, 865, 882, 896, 923, 973, 1024, 1124, 1135, 1198, 1204, 1263, 1344, 1499, 1570, 1686, 1849, 1862, 1870, 1873, 1874, 1878, 1881, 1889, 1900, 1905, 1912, 1924, 1928], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 21, 1871], "consum": [3, 20, 25, 30, 42, 53, 425, 1067, 1886, 1897, 1907, 1912, 1913, 1933, 1950], "extrapol": 3, "sinc": [3, 7, 20, 21, 23, 28, 29, 33, 42, 46, 54, 306, 523, 736, 774, 782, 797, 798, 931, 943, 1016, 1018, 1020, 1067, 1107, 1108, 1109, 1123, 1191, 1194, 1199, 1204, 1207, 1283, 1343, 1370, 1423, 1424, 1425, 1427, 1479, 1491, 1526, 1528, 1595, 1598, 1601, 1630, 1649, 1654, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1691, 1697, 1812, 1871, 1872, 1873, 1874, 1880, 1882, 1884, 1889, 1893, 1894, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1926, 1928, 1929, 1931, 1932, 1934, 1935, 1942, 1947, 1950, 1953, 1956, 1957], "properti": [3, 20, 23, 24, 25, 29, 32, 37, 40, 44, 46, 54, 781, 869, 901, 907, 997, 1083, 1084, 1086, 1088, 1089, 1090, 1098, 1099, 1100, 1194, 1339, 1427, 1460, 1582, 1598, 1608, 1609, 1610, 1640, 1662, 1666, 1870, 1874, 1878, 1884, 1894, 1897, 1899, 1902, 1915, 1918, 1924, 1928, 1930, 1931, 1934, 1936, 1944, 1945, 1946, 1958, 1960], "significant_figur": 3, "figur": [3, 7, 8, 25, 54, 1896, 1898, 1899, 1912, 1917, 1926, 1933, 1938, 1947], "intend": [3, 40, 54, 879, 888, 975, 1213, 1491, 1601, 1602, 1603, 1604, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1874, 1889, 1892, 1894, 1905, 1916], "interquartil": 3, "mitig": [3, 55], "tail": [3, 20, 38], "645": 3, "conjunct": [3, 20, 23, 27, 46, 813, 1491, 1526, 1607, 1922, 1924], "trim_sigfig": 3, "human": [3, 12, 38, 1012, 1025, 1892, 1912, 1958], "raw": [3, 54, 1120, 1252, 1897, 1916], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 14, 20, 23, 25, 28, 29, 31, 38, 46, 53, 54, 485, 669, 749, 897, 1084, 1086, 1089, 1090, 1092, 1093, 1096, 1097, 1099, 1100, 1102, 1104, 1209, 1283, 1345, 1346, 1347, 1364, 1367, 1379, 1390, 1391, 1392, 1409, 1410, 1411, 1412, 1437, 1466, 1472, 1474, 1607, 1807, 1874, 1878, 1882, 1886, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1908, 1912, 1915, 1917, 1919, 1920, 1924, 1926, 1943, 1945, 1946, 1950, 1954, 1956], "functioncount": [3, 1870], "stat": [3, 49, 815, 825, 826, 1024, 1031, 1032, 1033, 1466, 1607, 1884, 1897, 1937, 1947, 1957], "as_standard": 3, "strip": [3, 1528, 1607, 1871, 1914, 1928], "prefix": [3, 23, 25, 40, 46, 737, 746, 1194, 1427, 1607, 1869, 1880, 1894, 1912, 1916, 1937], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 14, 17, 23, 28, 29, 54, 669, 897, 1087, 1088, 1090, 1098, 1099, 1100, 1233, 1470, 1471, 1472, 1473, 1474, 1598, 1705, 1812, 1860, 1861, 1875, 1880, 1894, 1898, 1899, 1904, 1905, 1917, 1928, 1943, 1948, 1950, 1957], "locat": [3, 9, 13, 23, 29, 37, 74, 141, 145, 245, 502, 669, 923, 925, 982, 1046, 1047, 1215, 1265, 1291, 1296, 1299, 1317, 1364, 1374, 1461, 1478, 1491, 1526, 1591, 1594, 1607, 1619, 1716, 1751, 1773, 1794, 1797, 1851, 1869, 1871, 1883, 1897, 1910, 1912, 1916, 1918, 1924, 1926, 1928, 1933, 1937, 1942, 1946], "resembl": [3, 14], "23234231": 3, "first_build_dir": 3, "foo": [3, 13, 23, 37, 38, 53, 54, 55, 62, 63, 813, 843, 848, 941, 1123, 1124, 1133, 1192, 1197, 1201, 1204, 1205, 1208, 1209, 1649, 1852, 1854, 1869, 1871, 1873, 1874, 1878, 1899, 1905, 1912, 1916, 1935, 1942], "9823794": 3, "bar": [3, 7, 37, 54, 55, 62, 63, 843, 848, 959, 1123, 1197, 1204, 1810, 1811, 1857, 1858, 1869, 1871, 1873, 1883, 1905, 1912, 1916, 1935, 1950], "53453": 3, "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1191], "site": [3, 7], "denois": 3, "explan": [3, 9, 33, 851, 1194, 1427, 1870, 1898, 1899, 1905, 1947, 1954, 1957], "delta": [3, 29, 749, 1379, 1388, 1397, 1458, 1535, 1670, 1810, 1811, 1837, 1857, 1858, 1872, 1892], "inclus": [3, 29, 44, 79, 502, 1154, 1156, 1264, 1280, 1286, 1726, 1727, 1809, 1923, 1935], "diff": [3, 7, 1871, 1872, 1914], "One": [3, 8, 13, 23, 25, 28, 46, 49, 51, 54, 572, 920, 1124, 1135, 1185, 1479, 1563, 1614, 1617, 1686, 1691, 1699, 1726, 1727, 1847, 1862, 1871, 1873, 1874, 1888, 1889, 1895, 1896, 1897, 1899, 1904, 1917, 1926, 1933, 1943, 1944, 1945, 1946, 1955], "unit": [3, 11, 13, 29, 31, 41, 46, 54, 749, 750, 1085, 1103, 1339, 1349, 1369, 1372, 1377, 1378, 1379, 1380, 1445, 1446, 1456, 1491, 1515, 1519, 1524, 1525, 1571, 1579, 1623, 1624, 1628, 1631, 1633, 1636, 1839, 1885, 1894, 1896, 1902, 1916, 1941, 1942], "next": [3, 20, 23, 29, 40, 46, 54, 549, 749, 1198, 1331, 1380, 1398, 1444, 1607, 1642, 1886, 1893, 1894, 1896, 1897, 1899, 1900, 1905, 1907, 1917, 1918, 1924, 1925, 1928, 1931, 1933, 1944, 1945, 1947, 1950], "logic": [3, 5, 13, 20, 43, 46, 54, 913, 915, 916, 918, 1084, 1086, 1089, 1090, 1092, 1093, 1096, 1097, 1099, 1100, 1102, 1104, 1124, 1198, 1275, 1276, 1277, 1278, 1288, 1433, 1607, 1714, 1741, 1824, 1874, 1875, 1897, 1898, 1899, 1900, 1902, 1919, 1950], "question": [3, 10, 20, 54, 1651, 1870, 1894, 1939, 1946], "why": [3, 7, 20, 51, 54, 1067, 1198, 1576, 1870, 1881, 1900, 1946, 1955, 1959], "involv": [3, 5, 7, 9, 11, 20, 23, 44, 46, 49, 51, 54, 67, 1607, 1759, 1874, 1887, 1889, 1894, 1897, 1898, 1901, 1905, 1912, 1924, 1925, 1926, 1928, 1945, 1946], "look": [3, 4, 7, 8, 9, 14, 23, 29, 39, 40, 48, 51, 54, 851, 890, 892, 1194, 1288, 1335, 1427, 1517, 1632, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1798, 1799, 1800, 1802, 1803, 1871, 1873, 1887, 1893, 1894, 1897, 1900, 1904, 1905, 1907, 1911, 1912, 1916, 1919, 1924, 1925, 1938, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1954, 1956, 1957, 1959], "autom": [3, 8, 54, 1871, 1919, 1947, 1957], "easili": [3, 7, 8, 11, 21, 23, 1124, 1434, 1526, 1564, 1686, 1744, 1852, 1899, 1900, 1902, 1905, 1910, 1915, 1923, 1924, 1926, 1933, 1956, 1957], "exclus": [3, 20, 23, 29, 31, 40, 44, 54, 724, 1156, 1607, 1726, 1727, 1730, 1894, 1935], "basi": [3, 9, 10, 29, 1266, 1691, 1897, 1904, 1919, 1924], "thought": [3, 37, 54, 1085, 1087, 1103], "path_and_function_nam": 3, "children": [3, 33, 46, 54, 780, 1194, 1427, 1886, 1905, 1916, 1926], "identifi": [3, 7, 9, 23, 31, 34, 37, 40, 41, 42, 54, 806, 1156, 1265, 1466, 1875, 1886, 1895, 1904, 1905, 1916, 1924, 1925, 1926, 1933, 1945, 1950, 1955], "hot": [3, 29, 1528, 1563, 1902, 1950], "spot": 3, "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 304, 553, 854, 1120, 1528, 1798, 1799, 1800, 1802, 1803, 1813, 1872, 1889, 1914, 1928], "index": [3, 14, 20, 21, 25, 29, 38, 44, 54, 182, 199, 272, 303, 304, 305, 306, 307, 308, 310, 312, 313, 461, 462, 501, 502, 503, 504, 505, 506, 507, 508, 684, 685, 806, 843, 866, 881, 925, 986, 989, 1046, 1047, 1087, 1127, 1128, 1129, 1133, 1135, 1136, 1165, 1166, 1167, 1168, 1192, 1210, 1215, 1223, 1241, 1259, 1273, 1281, 1283, 1287, 1291, 1294, 1295, 1296, 1299, 1317, 1323, 1326, 1327, 1335, 1350, 1363, 1370, 1371, 1428, 1429, 1434, 1437, 1438, 1476, 1478, 1517, 1518, 1563, 1625, 1627, 1634, 1635, 1640, 1653, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1700, 1701, 1716, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1785, 1795, 1796, 1798, 1799, 1800, 1802, 1803, 1812, 1826, 1847, 1850, 1851, 1854, 1862, 1870, 1871, 1872, 1874, 1881, 1886, 1887, 1888, 1889, 1894, 1897, 1898, 1900, 1903, 1909, 1914, 1926, 1928, 1931, 1932, 1933, 1934, 1935, 1946, 1952, 1957], "cpython": [3, 54, 1939, 1944], "known": [3, 7, 9, 19, 23, 27, 34, 47, 50, 52, 1130, 1131, 1209, 1210, 1265, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1397, 1442, 1456, 1458, 1478, 1537, 1579, 1598, 1772, 1773, 1830, 1851, 1870, 1872, 1876, 1884, 1886, 1889, 1892, 1894, 1896, 1909, 1912, 1915, 1924, 1926, 1929, 1939, 1945, 1948, 1957], "quit": [3, 7, 54, 1874, 1899, 1901, 1916, 1924, 1955], "noisi": 3, "higher": [3, 7, 8, 21, 23, 44, 46, 47, 52, 55, 60, 63, 141, 882, 883, 896, 973, 1013, 1024, 1059, 1125, 1131, 1135, 1154, 1171, 1324, 1363, 1419, 1434, 1576, 1716, 1817, 1862, 1870, 1897, 1899, 1900, 1902, 1904, 1910, 1919, 1920, 1924, 1931, 1945], "filter": [3, 533, 761, 762, 763, 1191, 1213, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1812, 1874, 1916, 1957], "rather": [3, 8, 9, 13, 23, 31, 33, 42, 44, 46, 54, 55, 63, 768, 774, 906, 931, 1192, 1195, 1265, 1327, 1491, 1526, 1537, 1595, 1615, 1759, 1764, 1871, 1874, 1888, 1889, 1895, 1897, 1899, 1900, 1912, 1916, 1919, 1924, 1928, 1933, 1942, 1943, 1946, 1948, 1949, 1950], "unicod": [3, 1875], "dictionari": [3, 13, 20, 21, 29, 50, 54, 669, 781, 782, 783, 786, 804, 805, 806, 827, 828, 829, 843, 847, 853, 941, 1024, 1123, 1133, 1194, 1195, 1201, 1205, 1209, 1210, 1265, 1266, 1370, 1371, 1427, 1428, 1437, 1517, 1630, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1873, 1875, 1899, 1905, 1912, 1915, 1924, 1933, 1937, 1953, 1958, 1959], "lookup": [3, 25, 29, 1370, 1517, 1871, 1875, 1896, 1925, 1950, 1951], "map": [3, 13, 23, 29, 31, 37, 38, 40, 41, 44, 46, 51, 52, 54, 55, 63, 67, 673, 724, 781, 782, 786, 788, 803, 804, 806, 828, 829, 843, 844, 845, 846, 847, 853, 874, 922, 1124, 1135, 1147, 1156, 1201, 1204, 1265, 1266, 1358, 1359, 1360, 1366, 1367, 1368, 1372, 1374, 1423, 1424, 1425, 1428, 1437, 1512, 1513, 1514, 1519, 1614, 1630, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1716, 1718, 1848, 1849, 1862, 1875, 1888, 1890, 1894, 1898, 1899, 1900, 1906, 1911, 1916, 1919, 1922, 1924, 1925, 1926, 1930, 1935, 1946, 1950, 1956, 1958], "agnost": [3, 15, 40, 960, 961, 962, 963, 964, 965, 966, 1526, 1888], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 13, 23, 24, 28, 29, 31, 32, 33, 37, 41, 46, 53, 54, 572, 576, 577, 606, 673, 682, 684, 685, 688, 749, 874, 897, 898, 928, 935, 939, 972, 982, 984, 1012, 1025, 1059, 1065, 1067, 1113, 1114, 1133, 1135, 1157, 1194, 1201, 1209, 1211, 1215, 1249, 1265, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1325, 1327, 1379, 1397, 1427, 1442, 1479, 1563, 1601, 1607, 1615, 1640, 1647, 1648, 1652, 1654, 1665, 1713, 1737, 1753, 1790, 1808, 1810, 1811, 1815, 1837, 1857, 1858, 1862, 1863, 1870, 1871, 1873, 1874, 1875, 1876, 1881, 1886, 1889, 1897, 1899, 1905, 1908, 1911, 1916, 1917, 1924, 1926, 1928, 1930, 1931, 1935, 1943, 1946, 1955, 1956, 1959], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 314, 319, 533, 603, 981, 1797, 1847, 1872, 1898, 1914, 1928, 1947, 1950], "finit": [4, 29, 897, 898, 1183, 1184, 1229, 1230, 1240, 1241, 1257, 1283, 1317, 1321, 1343, 1816, 1899, 1902, 1935], "natur": [4, 7, 8, 11, 23, 29, 46, 55, 57, 71, 897, 898, 1222, 1227, 1253, 1267, 1269, 1274, 1335, 1474, 1576, 1902, 1928, 1929], "against": [4, 5, 13, 23, 31, 40, 783, 854, 897, 898, 1095, 1096, 1097, 1101, 1102, 1104, 1136, 1185, 1194, 1209, 1210, 1427, 1433, 1667, 1869, 1874, 1916, 1938, 1954], "cprofil": 4, "mode": [4, 8, 20, 21, 23, 25, 29, 40, 42, 51, 52, 54, 66, 212, 213, 735, 736, 761, 762, 763, 768, 774, 775, 776, 804, 806, 812, 815, 848, 849, 878, 880, 883, 884, 885, 890, 891, 892, 893, 897, 941, 968, 1001, 1041, 1042, 1071, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1124, 1127, 1128, 1129, 1130, 1133, 1134, 1142, 1169, 1177, 1178, 1192, 1194, 1195, 1198, 1209, 1211, 1252, 1265, 1295, 1308, 1309, 1345, 1346, 1347, 1355, 1356, 1357, 1371, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1443, 1466, 1479, 1480, 1501, 1502, 1503, 1518, 1526, 1537, 1564, 1595, 1596, 1597, 1608, 1615, 1619, 1652, 1691, 1699, 1715, 1758, 1760, 1761, 1851, 1870, 1872, 1882, 1887, 1892, 1897, 1898, 1900, 1901, 1905, 1914, 1918, 1920, 1921, 1922, 1924, 1936, 1944, 1945, 1946, 1947, 1948, 1949, 1952, 1957, 1958], "correct": [4, 6, 7, 21, 23, 24, 25, 29, 40, 44, 196, 197, 200, 212, 544, 569, 592, 593, 604, 886, 898, 959, 1088, 1090, 1098, 1099, 1100, 1168, 1192, 1195, 1209, 1210, 1229, 1364, 1381, 1393, 1598, 1607, 1640, 1763, 1810, 1811, 1857, 1858, 1871, 1872, 1873, 1887, 1888, 1897, 1899, 1902, 1930, 1952, 1956], "launch": [4, 13, 20, 26, 31, 32, 33, 38, 39, 40, 43, 53, 971, 1607, 1870, 1894, 1896, 1897, 1898, 1899, 1924, 1942, 1949], "spent": [4, 23, 907, 1697, 1896, 1905, 1947, 1955, 1957], "appear": [4, 21, 23, 29, 44, 54, 843, 1013, 1067, 1108, 1109, 1135, 1265, 1299, 1301, 1603, 1608, 1737, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1862, 1871, 1874, 1887, 1888, 1899, 1900, 1905, 1912, 1916, 1947], "extrem": [4, 1607, 1894, 1912, 1946, 1950], "expens": [4, 20, 29, 46, 1614, 1897, 1902, 1904, 1918, 1924, 1934, 1945, 1947, 1951, 1954, 1957], "bound": [4, 14, 21, 23, 44, 46, 471, 784, 925, 936, 1081, 1082, 1194, 1340, 1341, 1342, 1420, 1421, 1422, 1427, 1445, 1526, 1699, 1730, 1751, 1874, 1875, 1892, 1894, 1916, 1919, 1929, 1945, 1946, 1957], "greater": [4, 23, 40, 55, 56, 283, 606, 669, 917, 930, 931, 936, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1138, 1150, 1248, 1312, 1343, 1475, 1526, 1537, 1563, 1576, 1595, 1615, 1648, 1851, 1872, 1894, 1897, 1909, 1914, 1928, 1929], "spend": [4, 7, 1266, 1951], "sens": [4, 29, 40, 54, 1630, 1848, 1849, 1874, 1894], "respons": [4, 7, 9, 23, 25, 27, 29, 31, 37, 42, 46, 53, 971, 1415, 1544, 1607, 1894, 1897, 1899, 1900, 1905, 1924, 1946], "Of": [4, 1653, 1869, 1898, 1899], "cours": [4, 54, 1869, 1898, 1899, 1924, 1950], "realiti": 4, "complic": [4, 21, 54, 782, 1759, 1878, 1888, 1895, 1916, 1924, 1926, 1946], "depend": [4, 5, 13, 20, 23, 27, 29, 31, 40, 41, 42, 44, 46, 54, 306, 774, 867, 979, 1026, 1030, 1044, 1045, 1088, 1090, 1098, 1099, 1100, 1125, 1129, 1134, 1205, 1209, 1229, 1230, 1257, 1283, 1288, 1343, 1344, 1361, 1363, 1371, 1374, 1387, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1478, 1479, 1491, 1498, 1499, 1509, 1518, 1526, 1538, 1561, 1569, 1576, 1595, 1598, 1607, 1619, 1620, 1626, 1662, 1691, 1703, 1705, 1722, 1738, 1798, 1799, 1800, 1802, 1803, 1816, 1839, 1865, 1869, 1871, 1873, 1874, 1881, 1886, 1894, 1896, 1897, 1899, 1900, 1902, 1905, 1907, 1912, 1918, 1919, 1924, 1928, 1934, 1935, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1953, 1956, 1959], "could": [4, 5, 7, 8, 20, 23, 29, 31, 40, 46, 51, 53, 54, 572, 573, 574, 576, 577, 943, 1006, 1088, 1090, 1098, 1099, 1100, 1191, 1224, 1265, 1283, 1308, 1309, 1690, 1793, 1848, 1873, 1874, 1881, 1886, 1894, 1897, 1898, 1911, 1912, 1916, 1919, 1920, 1924, 1925, 1926, 1928, 1932, 1933, 1943, 1947, 1948, 1953, 1957], "account": [4, 38, 54, 1607, 1892, 1896, 1928, 1942], "heavili": [4, 1675, 1896, 1899, 1916], "similarli": [4, 7, 44, 53, 54, 749, 779, 783, 847, 932, 1087, 1194, 1249, 1427, 1474, 1603, 1604, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1840, 1841, 1842, 1843, 1873, 1894, 1899, 1901, 1902, 1908, 1928, 1942, 1946, 1949], "platform": [4, 8, 9, 13, 23, 32, 33, 37, 1240, 1241, 1252, 1715, 1816, 1882, 1903, 1908, 1909, 1919], "startup": 4, "slower": [4, 13, 23, 865, 891, 1107, 1108, 1109, 1223, 1230, 1545, 1614, 1899, 1909, 1915, 1929, 1946], "rerun": [5, 23, 1897], "segment": [5, 1024, 1120, 1458, 1897, 1916, 1947, 1953, 1959], "persist": [5, 18, 25, 46, 749, 804, 805, 806, 1194, 1379, 1397, 1427, 1442, 1905, 1910, 1911, 1942, 1946, 1951], "rng": [5, 20, 999, 1038, 1752, 1897, 1909, 1923], "advanc": [5, 14, 20, 21, 31, 1470, 1472, 1474, 1653, 1663, 1854, 1878, 1881, 1888, 1897, 1899, 1903, 1907, 1932, 1933, 1947], "juggl": 5, "dropout": [5, 54, 723, 724, 749, 1194, 1339, 1366, 1367, 1368, 1372, 1379, 1397, 1427, 1433, 1442, 1443, 1470, 1472, 1474, 1492, 1512, 1513, 1514, 1519, 1576, 1870, 1872, 1882, 1888, 1889, 1894, 1897, 1914, 1921], "moder": 5, "hit": [5, 8, 13, 1607, 1869, 1897, 1942, 1947, 1951, 1957], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1870], "omit": [5, 13, 23, 41, 1101, 1102, 1104, 1381, 1441, 1911, 1912, 1924, 1935, 1948], "exclud": [5, 9, 21, 40, 54, 947, 1156, 1371, 1518, 1566, 1667, 1759, 1840, 1841, 1842, 1843, 1894, 1903, 1916, 1925, 1944, 1947], "_infer_device_typ": 5, "remain": [5, 8, 29, 40, 54, 1301, 1370, 1371, 1517, 1518, 1598, 1607, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1716, 1738, 1884, 1886, 1893, 1901, 1905, 1944], "consequ": [5, 51, 1257, 1397, 1816, 1874, 1894, 1897, 1907, 1909], "random": [5, 29, 31, 40, 41, 47, 54, 71, 79, 145, 749, 881, 911, 999, 1000, 1005, 1014, 1015, 1034, 1035, 1038, 1039, 1128, 1135, 1146, 1170, 1266, 1286, 1306, 1307, 1311, 1313, 1339, 1350, 1372, 1379, 1397, 1445, 1519, 1569, 1574, 1598, 1615, 1621, 1627, 1628, 1635, 1636, 1655, 1705, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1752, 1765, 1817, 1854, 1862, 1869, 1870, 1872, 1880, 1892, 1900, 1902, 1908, 1912, 1914, 1933, 1947, 1957], "gradient": [5, 11, 20, 21, 23, 27, 28, 29, 46, 47, 50, 141, 212, 213, 281, 326, 477, 484, 502, 684, 685, 869, 878, 880, 882, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 912, 938, 1071, 1123, 1124, 1125, 1126, 1130, 1135, 1136, 1169, 1194, 1229, 1230, 1233, 1240, 1241, 1257, 1266, 1283, 1285, 1291, 1294, 1296, 1343, 1350, 1358, 1359, 1360, 1363, 1364, 1370, 1371, 1381, 1395, 1396, 1427, 1434, 1458, 1509, 1510, 1517, 1518, 1528, 1537, 1545, 1547, 1548, 1561, 1595, 1596, 1597, 1603, 1604, 1607, 1608, 1611, 1612, 1614, 1619, 1652, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1703, 1761, 1797, 1816, 1862, 1870, 1871, 1872, 1881, 1888, 1889, 1892, 1897, 1898, 1899, 1901, 1902, 1905, 1908, 1914, 1915, 1924, 1925, 1928, 1947, 1955], "among": [5, 20, 21, 23, 27, 29, 40, 980, 981, 984, 1156, 1364, 1655, 1874, 1907, 1946], "detect": [5, 13, 16, 17, 20, 23, 24, 31, 33, 46, 890, 891, 892, 893, 894, 895, 941, 1124, 1198, 1470, 1471, 1473, 1607, 1851, 1870, 1886, 1889, 1897, 1902, 1908, 1912, 1916, 1924, 1945, 1947, 1957], "priorit": [5, 1127, 1128, 1130, 1672, 1673, 1928], "defaultdevicetyp": 5, "anticip": [5, 1959], "belong": [5, 23, 25, 27, 29, 37, 54, 925, 973, 1687, 1869, 1897, 1915, 1950, 1956, 1958], "use_reentr": 5, "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 54, 1365, 1621, 1837, 1890, 1905, 1915, 1917, 1919, 1941, 1950, 1957], "recomput": [5, 888, 1479, 1537, 1651, 1915, 1945], "refer": [5, 13, 20, 21, 23, 24, 25, 27, 29, 32, 35, 36, 40, 41, 46, 47, 53, 66, 67, 68, 71, 73, 245, 723, 724, 745, 753, 781, 782, 783, 808, 809, 810, 813, 814, 815, 848, 862, 867, 882, 923, 1006, 1011, 1070, 1120, 1142, 1143, 1175, 1182, 1194, 1197, 1205, 1212, 1225, 1230, 1246, 1250, 1263, 1266, 1350, 1381, 1427, 1476, 1491, 1499, 1508, 1526, 1537, 1594, 1607, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1705, 1722, 1758, 1759, 1780, 1817, 1851, 1869, 1870, 1872, 1886, 1887, 1889, 1890, 1893, 1894, 1897, 1898, 1899, 1900, 1901, 1902, 1905, 1907, 1909, 1912, 1915, 1920, 1921, 1924, 1925, 1928, 1931, 1932, 1933, 1936, 1939, 1943, 1949, 1950, 1953, 1957], "potenti": [5, 8, 23, 40, 42, 46, 71, 182, 199, 1203, 1239, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1607, 1851, 1873, 1881, 1886, 1894, 1897, 1899, 1916, 1928, 1932, 1945, 1947, 1950], "silent": [5, 1014, 1015, 1034, 1035, 1168, 1209, 1427, 1611, 1612, 1897, 1908, 1912], "consider": [5, 7, 68, 873, 1191, 1371, 1607, 1874, 1896], "limit": [5, 8, 9, 20, 46, 47, 52, 68, 1037, 1124, 1207, 1312, 1350, 1370, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1576, 1607, 1630, 1764, 1870, 1874, 1878, 1886, 1888, 1889, 1894, 1897, 1898, 1905, 1908, 1909, 1910, 1916, 1919, 1922, 1924, 1925, 1928, 1935, 1945, 1946, 1947, 1950, 1954, 1957], "reentrant": [5, 1607], "stop": [5, 29, 31, 40, 41, 42, 854, 1006, 1192, 1266, 1350, 1640, 1699, 1731, 1871, 1874, 1924, 1948], "soon": [5, 40, 46, 782, 1894, 1919, 1924, 1926, 1950], "intermedi": [5, 13, 30, 44, 51, 54, 68, 922, 1118, 1124, 1131, 1283, 1371, 1470, 1472, 1474, 1518, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1871, 1874, 1897, 1899, 1900, 1901, 1908, 1938, 1945, 1946], "set_checkpoint_early_stop": 5, "entireti": 5, "graph": [5, 8, 23, 25, 29, 44, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 130, 141, 212, 213, 669, 736, 781, 782, 804, 805, 806, 812, 815, 882, 888, 896, 941, 943, 968, 1003, 1008, 1013, 1124, 1194, 1197, 1198, 1203, 1205, 1209, 1607, 1662, 1663, 1667, 1672, 1673, 1676, 1870, 1874, 1880, 1882, 1890, 1893, 1898, 1899, 1902, 1905, 1906, 1912, 1913, 1916, 1920, 1921, 1922, 1924, 1925, 1926, 1928, 1933, 1938, 1939, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1953, 1954], "no_grad": [5, 850, 1071, 1125, 1129, 1134, 1169, 1194, 1370, 1427, 1433, 1474, 1608, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1892, 1894, 1905, 1936], "condit": [5, 18, 20, 44, 51, 54, 55, 62, 63, 606, 609, 613, 683, 749, 891, 897, 898, 1191, 1209, 1223, 1225, 1230, 1233, 1239, 1240, 1241, 1252, 1257, 1379, 1397, 1442, 1474, 1642, 1647, 1839, 1865, 1871, 1872, 1873, 1875, 1889, 1894, 1899, 1908, 1917, 1933, 1944, 1945, 1946, 1952], "unmet": 5, "particip": [5, 9, 20, 23, 24, 27, 40, 41, 1607, 1925, 1945], "wherea": [5, 1249, 1308, 1309, 1322, 1686, 1816, 1874, 1894, 1935, 1946], "know": [5, 7, 8, 13, 24, 30, 44, 54, 476, 886, 891, 1118, 1124, 1204, 1607, 1871, 1874, 1881, 1893, 1894, 1897, 1899, 1902, 1912, 1916, 1924, 1925, 1926, 1928, 1942, 1944, 1945, 1946, 1947, 1950], "lstm": [5, 752, 1398, 1872, 1897, 1912, 1914, 1919, 1921, 1922, 1933], "hidden": [5, 749, 1133, 1379, 1380, 1397, 1398, 1442, 1444, 1608, 1897, 1933], "correctli": [5, 20, 23, 40, 44, 46, 476, 1124, 1194, 1209, 1427, 1545, 1871, 1873, 1874, 1884, 1888, 1893, 1894, 1898, 1899, 1900, 1907, 1909, 1919, 1924], "entrant": 5, "futur": [5, 8, 9, 21, 23, 25, 31, 40, 41, 44, 51, 54, 281, 312, 502, 506, 546, 669, 676, 782, 804, 805, 806, 815, 850, 888, 931, 932, 941, 952, 953, 967, 968, 970, 971, 973, 1002, 1003, 1010, 1011, 1013, 1140, 1194, 1197, 1203, 1204, 1207, 1212, 1224, 1235, 1237, 1238, 1239, 1242, 1255, 1283, 1284, 1295, 1305, 1367, 1427, 1528, 1550, 1551, 1552, 1599, 1607, 1611, 1648, 1649, 1654, 1675, 1715, 1731, 1812, 1816, 1839, 1870, 1871, 1872, 1873, 1874, 1875, 1880, 1881, 1882, 1884, 1888, 1889, 1896, 1897, 1899, 1910, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1921, 1924, 1928, 1930, 1934, 1935, 1936, 1938, 1945, 1947, 1952, 1959], "turn": [5, 13, 20, 51, 54, 68, 669, 862, 941, 1182, 1209, 1471, 1473, 1798, 1799, 1800, 1801, 1802, 1803, 1881, 1894, 1897, 1908, 1909, 1912, 1918, 1919, 1925, 1928, 1946, 1949, 1950, 1955], "open": [5, 8, 9, 13, 20, 29, 40, 47, 678, 904, 925, 1117, 1201, 1265, 1288, 1298, 1543, 1871, 1881, 1886, 1889, 1903, 1911, 1912, 1916, 1919, 1924, 1928, 1929, 1947, 1955, 1959], "ran": [5, 17, 46, 1947, 1953, 1957], "sequenti": [5, 20, 27, 46, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 782, 1135, 1194, 1203, 1373, 1427, 1466, 1477, 1616, 1630, 1700, 1862, 1871, 1886, 1889, 1897, 1905, 1912, 1915, 1917, 1919, 1938, 1947, 1955, 1957], "func": [5, 23, 28, 49, 51, 54, 55, 57, 851, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 1169, 1197, 1209, 1210, 1649, 1854, 1862, 1870, 1874, 1893, 1924, 1926, 1958], "compris": [5, 41, 44], "chunk": [5, 20, 23, 25, 46, 928, 984, 1129, 1364, 1607, 1804, 1871, 1872, 1887, 1914, 1915, 1917, 1924, 1928, 1932], "input_var": [5, 1364], "person": [6, 7, 9], "land": [6, 9, 10, 1954], "six": [6, 67, 1357], "commit": [6, 7, 9, 13, 47, 1869, 1870, 1908, 1909, 1954], "repositori": [6, 9, 50, 54, 1869, 1907], "submit": [6, 9, 970, 971, 973, 1305, 1897, 1909, 1954], "month": [6, 9], "qualifi": [6, 23, 28, 37, 54, 669, 1194, 1427, 1666, 1880, 1916], "pr": [6, 7, 1705, 1817, 1938], "interest": [6, 7, 9, 68, 1894, 1900, 1902, 1905, 1944, 1946, 1951, 1955], "merge_rul": 6, "vote": [6, 9], "decis": [6, 25, 31, 40, 42, 44, 54, 1209, 1881, 1893, 1945], "criteria": [6, 9, 1266], "approv": [6, 9], "Not": [6, 41, 67, 1325, 1474, 1871, 1873, 1874, 1875, 1897, 1899, 1914, 1919, 1924, 1950], "busi": [6, 9, 1951], "dai": [6, 7, 1946, 1954], "contributor": [6, 7, 8, 9], "seen": [6, 17, 29, 54, 212, 928, 941, 1295, 1358, 1359, 1360, 1458, 1550, 1551, 1552, 1699, 1871, 1881, 1894, 1897, 1912, 1928, 1950], "thumb": [6, 23], "acceler": [7, 21, 1345, 1346, 1347, 1466, 1669, 1903, 1939, 1942, 1947], "deep": [7, 9, 54, 1345, 1346, 1347, 1369, 1466, 1685, 1870, 1892, 1897, 1905, 1919, 1941, 1945, 1957], "neural": [7, 8, 14, 54, 1339, 1350, 1365, 1372, 1381, 1393, 1426, 1427, 1434, 1439, 1440, 1454, 1456, 1470, 1472, 1474, 1556, 1579, 1617, 1683, 1691, 1697, 1871, 1873, 1874, 1892, 1897, 1899, 1908, 1912, 1919, 1945], "tape": [7, 1942], "system": [7, 8, 13, 14, 16, 20, 41, 51, 54, 934, 948, 1147, 1201, 1225, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1254, 1255, 1256, 1260, 1265, 1284, 1312, 1470, 1472, 1474, 1607, 1617, 1619, 1760, 1839, 1875, 1880, 1884, 1894, 1896, 1897, 1904, 1905, 1907, 1911, 1916, 1924, 1945, 1955], "organ": [7, 1898, 1904, 1916, 1947, 1950], "govern": [7, 8, 1870, 1919], "technic": [7, 9, 40, 46, 54, 1194, 1427, 1603, 1604, 1894, 1901, 1907, 1916, 1945], "md": [7, 54, 781, 1916], "healthi": [7, 31, 40], "team": [7, 23, 47, 71, 72, 74, 1910, 1917], "commun": [7, 8, 9, 24, 25, 27, 31, 40, 42, 46, 669, 1607, 1894, 1898, 1924, 1925, 1947], "project": [7, 25, 1295, 1397, 1433, 1619, 1705, 1869, 1903, 1956], "ve": [7, 49, 50, 51, 54, 1198, 1854, 1881, 1886, 1894, 1900, 1925, 1933, 1946, 1947, 1950], "come": [7, 8, 9, 20, 28, 29, 30, 37, 40, 47, 51, 941, 1067, 1118, 1124, 1194, 1265, 1366, 1367, 1368, 1372, 1393, 1664, 1878, 1882, 1898, 1900, 1904, 1916, 1924, 1926, 1928, 1950, 1953], "peopl": [7, 1894, 1919, 1949], "scratch": [7, 1894, 1957], "itch": 7, "acquaint": 7, "tip": [7, 1897, 1947], "tracker": [7, 1266], "confirm": [7, 1869, 1871, 1899, 1912, 1924, 1926, 1953], "tend": [7, 892, 1851], "bootcamp": 7, "1hr": 7, "although": [7, 8, 29, 51, 54, 1358, 1359, 1360, 1427, 1435, 1607, 1870, 1874, 1893, 1899, 1908, 1917, 1919, 1955, 1956], "join": [7, 21, 23, 27, 40, 41, 53, 54, 1607, 1869, 1870, 1875, 1886, 1894, 1898, 1907, 1914, 1934], "u": [7, 8, 47, 52, 54, 55, 749, 890, 932, 933, 934, 1230, 1232, 1236, 1240, 1241, 1257, 1283, 1285, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1379, 1380, 1397, 1398, 1412, 1414, 1442, 1444, 1445, 1466, 1477, 1619, 1705, 1816, 1817, 1871, 1872, 1881, 1888, 1892, 1894, 1897, 1898, 1899, 1900, 1905, 1916, 1918, 1928, 1932, 1933, 1945, 1947, 1950, 1951, 1952, 1957], "dev": [7, 10, 32, 37, 1944, 1957], "happi": 7, "research": [7, 8, 9, 1607, 1869, 1894, 1902, 1910], "partner": [7, 1939], "speed": [7, 8, 13, 27, 46, 979, 1067, 1123, 1185, 1198, 1203, 1257, 1335, 1433, 1759, 1816, 1894, 1896, 1897, 1898, 1899, 1901, 1903, 1908, 1919, 1924, 1950], "reach": [7, 8, 9, 20, 21, 23, 24, 31, 40, 44, 47, 1266, 1607, 1688, 1691, 1694, 1695, 1894, 1899, 1907, 1917, 1919, 1920, 1924, 1944], "design": [7, 9, 20, 29, 37, 40, 47, 50, 51, 52, 897, 898, 1194, 1213, 1427, 1662, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1827, 1869, 1870, 1884, 1897, 1899, 1903, 1905, 1916, 1944, 1945, 1947, 1949, 1952, 1957], "comment": [7, 54, 1651, 1755, 1874, 1875, 1899, 1931, 1933, 1951], "crack": 7, "usual": [7, 13, 20, 21, 25, 40, 41, 46, 54, 72, 75, 471, 820, 821, 822, 823, 830, 882, 890, 892, 896, 1135, 1366, 1367, 1368, 1372, 1387, 1390, 1391, 1392, 1393, 1598, 1607, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1862, 1871, 1874, 1889, 1893, 1894, 1896, 1897, 1899, 1901, 1904, 1915, 1920, 1922, 1924, 1933, 1941, 1946, 1951, 1958], "idea": [7, 47, 1067, 1335, 1607, 1897, 1904, 1912, 1925, 1947], "rfc": [7, 1894, 1919, 1925], "big": [7, 1672, 1673, 1676, 1682, 1683, 1798, 1799, 1800, 1801, 1802, 1803, 1897, 1915, 1919, 1946, 1951], "post": [7, 8, 24, 25, 27, 46, 845, 846, 850, 1194, 1427, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1870, 1878, 1894, 1898, 1899, 1901, 1911, 1928, 1944, 1946, 1957], "standard": [7, 13, 17, 21, 29, 33, 34, 38, 51, 54, 75, 343, 368, 578, 1087, 1339, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1393, 1399, 1466, 1472, 1474, 1655, 1705, 1728, 1774, 1779, 1810, 1811, 1873, 1875, 1889, 1892, 1896, 1897, 1907, 1908, 1912, 1913, 1916, 1929], "lot": [7, 13, 20, 1886, 1894, 1897, 1902, 1907, 1916, 1917, 1923, 1925, 1933, 1945, 1946, 1950, 1951, 1959], "boil": 7, "mostli": [7, 29, 1192, 1607, 1897, 1928, 1958], "evid": 7, "peer": [7, 23, 27, 40, 46, 977, 1607, 1897, 1924], "paper": [7, 9, 21, 29, 749, 1335, 1339, 1345, 1346, 1347, 1349, 1358, 1359, 1360, 1365, 1366, 1367, 1368, 1369, 1372, 1375, 1376, 1379, 1382, 1385, 1390, 1391, 1392, 1399, 1433, 1439, 1440, 1445, 1454, 1458, 1466, 1470, 1472, 1474, 1475, 1476, 1521, 1522, 1531, 1672, 1673, 1684, 1691, 1697, 1902, 1917], "framework": [7, 8, 9, 29, 37, 47, 53, 749, 975, 1303, 1379, 1607, 1614, 1685, 1764, 1870, 1906, 1917, 1919, 1925, 1926], "bit": [7, 54, 79, 321, 448, 750, 752, 754, 808, 809, 810, 811, 814, 816, 847, 914, 917, 952, 953, 1120, 1174, 1739, 1740, 1752, 1759, 1781, 1897, 1905, 1908, 1911, 1919, 1922, 1923, 1928, 1931, 1934, 1950, 1951, 1960], "accept": [7, 9, 20, 23, 25, 28, 44, 46, 47, 48, 50, 52, 141, 502, 791, 878, 879, 880, 881, 882, 887, 896, 931, 1010, 1013, 1119, 1135, 1156, 1194, 1198, 1363, 1427, 1434, 1455, 1474, 1626, 1640, 1641, 1647, 1668, 1756, 1793, 1807, 1862, 1874, 1888, 1897, 1899, 1900, 1912, 1915, 1924, 1931, 1933, 1957], "overwhelm": [7, 1924, 1957], "newli": [7, 46, 54, 1081, 1082, 1370, 1371, 1717, 1718, 1878, 1950], "publish": [7, 9, 32, 37, 40, 1266, 1870], "ground": [7, 9, 1363, 1509, 1933], "break": [7, 29, 44, 49, 54, 669, 882, 941, 943, 1194, 1239, 1427, 1744, 1764, 1870, 1875, 1880, 1898, 1915, 1928, 1936, 1942, 1944, 1945, 1948, 1950, 1951, 1953], "becom": [7, 8, 9, 20, 23, 29, 54, 281, 749, 865, 1147, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1379, 1397, 1412, 1432, 1442, 1455, 1509, 1526, 1598, 1689, 1789, 1837, 1881, 1882, 1894, 1898, 1899, 1912, 1916, 1918, 1924, 1950, 1957, 1959], "refactor": [7, 54, 1911, 1919], "coordin": [7, 23, 25, 29, 31, 572, 575, 873, 1147, 1156, 1295, 1709, 1801, 1841, 1843, 1894, 1928, 1933, 1947, 1957], "pace": 7, "branch": [7, 44, 54, 55, 58, 60, 62, 63, 1869, 1873, 1874, 1897, 1944, 1945, 1954], "fast": [7, 8, 20, 23, 897, 1369, 1390, 1391, 1392, 1458, 1474, 1576, 1697, 1703, 1722, 1744, 1759, 1870, 1896, 1897, 1899, 1903, 1915, 1924, 1928, 1931, 1932, 1939, 1946, 1949, 1951, 1959], "definit": [7, 8, 20, 23, 24, 29, 36, 54, 72, 932, 933, 934, 959, 1010, 1115, 1214, 1223, 1224, 1266, 1393, 1538, 1583, 1654, 1735, 1837, 1869, 1871, 1873, 1875, 1893, 1894, 1899, 1902, 1916, 1919, 1933, 1935, 1950], "fundament": [7, 51, 1873, 1905, 1924, 1928, 1946], "cut": [7, 1947], "guidanc": [7, 9, 14, 48, 1917, 1945], "stage": [7, 17, 21, 27, 37, 46, 53, 1870, 1881, 1889, 1917, 1926, 1957], "piec": [7, 1880, 1889, 1925, 1950, 1959], "advic": 7, "readi": [7, 13, 53, 850, 851, 910, 919, 1151, 1152, 1607, 1871, 1898, 1924, 1925, 1942], "draft": 7, "convert": [7, 20, 23, 28, 29, 30, 46, 50, 54, 67, 68, 69, 141, 569, 573, 574, 575, 576, 577, 724, 777, 778, 779, 781, 782, 783, 804, 805, 806, 827, 828, 843, 846, 847, 848, 868, 869, 927, 940, 1051, 1087, 1118, 1194, 1263, 1427, 1437, 1438, 1466, 1473, 1598, 1609, 1610, 1613, 1650, 1662, 1664, 1667, 1686, 1717, 1718, 1723, 1798, 1799, 1800, 1801, 1802, 1803, 1871, 1872, 1873, 1874, 1889, 1899, 1903, 1912, 1919, 1922, 1928, 1933, 1935, 1938, 1939, 1944, 1950, 1956, 1957], "press": [7, 54], "button": [7, 1954], "prepend": [7, 13, 20, 23, 27, 54, 220, 1059, 1194, 1288, 1427, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1833, 1872, 1895], "titl": [7, 1914, 1918], "wip": 7, "progress": [7, 23, 27, 31, 41, 43, 44, 66, 970, 1305, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1856, 1869, 1883], "ci": [7, 1870, 1954], "folk": 7, "who": [7, 8, 9, 11, 40, 55, 68, 1916, 1950], "regularli": 7, "queue": [7, 31, 42, 1886, 1933], "everyth": [7, 20, 29, 50, 55, 1871, 1886, 1916, 1945, 1947, 1950, 1951, 1957], "happen": [7, 9, 23, 25, 27, 29, 31, 33, 40, 44, 46, 51, 54, 75, 596, 780, 803, 1124, 1466, 1607, 1614, 1688, 1694, 1695, 1701, 1816, 1870, 1884, 1886, 1894, 1897, 1898, 1899, 1900, 1901, 1906, 1907, 1911, 1912, 1919, 1924, 1932, 1942, 1950], "subsystem": [7, 11, 47, 52, 943, 1870, 1899], "patch": [7, 48, 1374, 1478, 1852, 1948], "feel": [7, 1889, 1912, 1928], "ll": [7, 51, 54, 749, 809, 810, 850, 851, 932, 1013, 1223, 1379, 1380, 1397, 1398, 1881, 1894, 1897, 1899, 1900, 1907, 1912, 1919, 1925, 1943, 1946, 1951, 1955], "round": [7, 20, 23, 55, 57, 63, 497, 654, 655, 788, 791, 809, 854, 955, 957, 1024, 1062, 1088, 1089, 1090, 1094, 1098, 1099, 1100, 1115, 1239, 1252, 1479, 1537, 1715, 1716, 1735, 1784, 1872, 1874, 1887, 1897, 1914, 1919, 1922, 1928, 1929, 1952, 1959], "trip": [7, 54, 1088, 1089, 1090, 1094, 1098, 1099, 1100], "noth": [7, 13, 31, 54, 669, 1004, 1619, 1672, 1673, 1700, 1871, 1873, 1926], "accompani": [7, 70], "solut": [7, 8, 51, 1238, 1239, 1243, 1251, 1254, 1256, 1260, 1343, 1607, 1839, 1871, 1872, 1892, 1893, 1901, 1907], "think": [7, 9, 54, 55, 1686, 1871, 1873, 1894, 1915, 1916, 1926, 1946, 1948], "confid": [7, 1933, 1948], "ahead": [7, 44, 1870, 1919, 1939, 1945, 1947], "search": [7, 11, 21, 808, 925, 1385, 1531, 1607, 1667, 1722, 1751, 1871, 1887, 1888, 1912, 1916, 1928, 1943, 1946, 1954, 1959], "repo": [7, 55, 1691, 1869, 1899, 1911], "unabl": [7, 51, 69, 1912, 1915], "similar": [7, 9, 20, 23, 29, 37, 46, 51, 53, 54, 482, 504, 701, 702, 703, 704, 705, 706, 709, 719, 720, 721, 722, 734, 735, 745, 753, 791, 866, 881, 922, 927, 940, 941, 1113, 1114, 1194, 1361, 1362, 1374, 1387, 1390, 1391, 1392, 1427, 1475, 1508, 1640, 1654, 1655, 1686, 1709, 1737, 1744, 1793, 1827, 1833, 1849, 1873, 1874, 1886, 1887, 1889, 1894, 1896, 1897, 1899, 1900, 1902, 1908, 1912, 1916, 1917, 1919, 1924, 1925, 1928, 1929, 1934, 1945, 1946, 1947, 1949, 1950, 1953, 1957, 1960], "reproduc": [7, 20, 51, 304, 312, 504, 506, 912, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1423, 1424, 1425, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1526, 1537, 1564, 1576, 1595, 1596, 1597, 1598, 1851, 1869, 1870, 1915, 1916, 1957], "problemat": [7, 20, 54, 1871, 1908, 1920], "insight": [7, 17, 66, 1959], "individu": [7, 9, 13, 20, 21, 23, 25, 27, 46, 54, 70, 233, 669, 781, 827, 828, 932, 1033, 1085, 1103, 1194, 1350, 1427, 1466, 1607, 1662, 1874, 1887, 1893, 1894, 1897, 1899, 1904, 1908, 1909, 1912, 1922, 1924, 1935, 1942, 1949, 1954, 1959], "intent": [7, 38, 40, 46, 51, 1756, 1881, 1916, 1953], "lock": [7, 20, 23, 27, 29, 1894, 1897, 1907, 1916, 1925, 1959], "strike": 7, "convers": [7, 448, 569, 572, 782, 926, 1179, 1640, 1870, 1875, 1899, 1903, 1912, 1919, 1920, 1928, 1946, 1956], "medium": [7, 46, 1759], "prioriti": [7, 9, 10, 23, 669, 843, 973, 1873, 1910], "entranc": [7, 1897], "great": [7, 1894, 1902, 1942, 1945], "deal": [7, 8, 20, 31, 42, 67, 1832, 1886, 1901, 1924, 1945, 1946, 1950, 1951], "welcom": [7, 1889, 1915, 1928], "aim": [7, 68, 1900, 1928, 1939], "rare": [7, 1893, 1912, 1945, 1948, 1958], "typo": 7, "send": [7, 20, 23, 31, 42, 1006, 1598, 1607, 1886, 1898, 1907, 1911, 1914, 1918, 1924, 1925, 1926, 1936, 1938, 1946, 1949], "forum": [7, 9, 1901, 1907], "share": [7, 10, 13, 20, 24, 27, 29, 30, 40, 41, 44, 46, 51, 212, 302, 331, 448, 473, 509, 513, 606, 848, 868, 869, 886, 897, 898, 941, 968, 970, 1002, 1006, 1118, 1119, 1120, 1164, 1241, 1326, 1327, 1364, 1607, 1617, 1655, 1733, 1747, 1807, 1830, 1836, 1850, 1872, 1893, 1894, 1896, 1907, 1910, 1911, 1912, 1924, 1928, 1930, 1932, 1937, 1942], "resolv": [7, 8, 9, 25, 29, 46, 54, 69, 70, 1194, 1358, 1359, 1360, 1374, 1424, 1427, 1873, 1874, 1875, 1911, 1916, 1930, 1945, 1958], "challeng": [7, 23, 1925, 1947], "feedback": [7, 17, 21, 46, 47, 1607, 1870, 1928], "direct": [7, 9, 11, 23, 44, 749, 781, 1108, 1109, 1194, 1379, 1397, 1427, 1442, 1651, 1684, 1705, 1722, 1743, 1894, 1897, 1899, 1905, 1924, 1950, 1956], "yourself": [7, 49, 968, 1852, 1899, 1905, 1907, 1947, 1958], "problem": [7, 20, 23, 40, 51, 55, 1067, 1209, 1239, 1251, 1266, 1363, 1434, 1491, 1755, 1886, 1894, 1897, 1901, 1902, 1907, 1911, 1917, 1919, 1920, 1926, 1931, 1939, 1945, 1947, 1957], "area": [7, 9, 1537, 1905, 1919, 1929], "appreci": 7, "strive": 7, "respond": [7, 23], "quickli": [7, 8, 21, 40, 1949], "ey": [7, 29, 182, 199, 933, 1135, 1214, 1223, 1234, 1245, 1248, 1251, 1252, 1259, 1260, 1614, 1715, 1794, 1862, 1872, 1876, 1899, 1914], "everyon": [7, 31, 40], "touch": [7, 38, 54], "versu": [7, 1431], "write": [7, 8, 9, 15, 17, 20, 23, 25, 31, 33, 37, 38, 39, 40, 46, 51, 52, 67, 69, 70, 245, 502, 686, 923, 943, 1119, 1135, 1171, 1204, 1224, 1235, 1236, 1237, 1241, 1242, 1255, 1594, 1663, 1747, 1839, 1851, 1862, 1870, 1873, 1884, 1888, 1897, 1900, 1901, 1902, 1915, 1916, 1928, 1933, 1939, 1945, 1947, 1949, 1951, 1957], "blog": [7, 8, 1878, 1898, 1899, 1919, 1928], "around": [7, 9, 11, 23, 29, 50, 51, 53, 54, 141, 613, 882, 896, 965, 968, 970, 971, 973, 1042, 1113, 1114, 1124, 1194, 1305, 1607, 1744, 1871, 1886, 1894, 1897, 1912, 1924, 1942, 1950], "internet": 7, "grow": [7, 8, 54, 1897, 1928], "market": [7, 9], "benefit": [7, 8, 23, 54, 836, 1699, 1886, 1897, 1919, 1928, 1957], "opinion": [7, 8, 1928], "isn": [7, 20, 54, 448, 1191, 1894, 1897, 1899, 1924, 1935, 1946], "categor": [7, 33, 1528, 1870, 1875, 1920, 1924, 1956], "aspect": [7, 23, 54, 1899, 1905], "seem": [7, 1912], "unusu": [7, 1946], "claim": [7, 1697, 1902], "wast": [7, 1897], "someon": [7, 9, 1192, 1888], "too": [7, 9, 13, 21, 25, 40, 51, 54, 1024, 1123, 1239, 1257, 1323, 1350, 1363, 1427, 1510, 1608, 1649, 1874, 1896, 1901, 1902, 1907, 1908, 1909, 1911, 1912, 1916, 1917, 1926, 1928, 1945, 1946, 1957, 1959], "advisori": 7, "fashion": [7, 20, 23, 42, 504, 1271, 1630, 1871], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 1957], "wrote": [7, 8], "implicitli": [7, 23, 33, 54, 1050, 1139, 1147, 1209, 1210, 1265, 1340, 1341, 1342, 1420, 1421, 1422, 1756, 1837, 1871, 1873, 1874, 1894, 1899, 1903], "lifetim": [7, 1924, 1946], "immedi": [7, 8, 9, 40, 41, 46, 53, 1194, 1197, 1427, 1874, 1905, 1910, 1915, 1924, 1926, 1945, 1946], "sai": [7, 44, 54, 485, 1127, 1128, 1129, 1194, 1427, 1871, 1893, 1894, 1901, 1916, 1925, 1926, 1928, 1942, 1945, 1950, 1951, 1956], "bugfix": 7, "Or": [7, 31, 54, 869, 936, 1903, 1906, 1912, 1928, 1950], "motiv": [7, 8, 54, 724, 1905, 1925, 1957], "ye": [7, 1912, 1915, 1928], "knuth": 7, "bewar": 7, "mere": 7, "proven": [7, 1365, 1607], "ok": [7, 33, 38, 50, 941, 1199, 1926], "sometim": [7, 54, 893, 1024, 1209, 1374, 1478, 1504, 1505, 1506, 1619, 1870, 1874, 1886, 1894, 1897, 1900, 1901, 1905, 1907, 1916, 1931, 1934, 1945, 1946, 1951, 1958], "obvious": [7, 1946], "broken": [7, 20, 1024, 1912, 1916], "contrari": [7, 1896], "accident": 7, "put": [7, 9, 20, 23, 31, 50, 53, 54, 310, 1087, 1265, 1382, 1691, 1869, 1872, 1886, 1897, 1907, 1914, 1916, 1925, 1926, 1946, 1947, 1948], "difficulti": [7, 1892], "nonlinearli": 7, "sign": [7, 29, 332, 518, 873, 954, 1055, 1103, 1115, 1120, 1227, 1252, 1253, 1274, 1419, 1684, 1735, 1767, 1781, 1872, 1887, 1914, 1922, 1928, 1931, 1934, 1935, 1952], "split": [7, 20, 23, 54, 606, 761, 762, 763, 848, 850, 851, 928, 935, 1024, 1065, 1157, 1364, 1378, 1379, 1397, 1433, 1442, 1501, 1502, 1503, 1504, 1505, 1506, 1525, 1831, 1863, 1871, 1872, 1887, 1897, 1914, 1916, 1917, 1919, 1924, 1928, 1932, 1952, 1955, 1959], "shippabl": 7, "complet": [7, 13, 20, 23, 25, 31, 32, 38, 40, 42, 51, 53, 476, 669, 850, 943, 966, 970, 971, 973, 1043, 1123, 1124, 1197, 1205, 1207, 1212, 1224, 1252, 1305, 1308, 1309, 1314, 1491, 1607, 1616, 1649, 1715, 1759, 1870, 1873, 1874, 1875, 1880, 1886, 1893, 1894, 1897, 1900, 1903, 1909, 1916, 1917, 1924, 1925, 1941, 1948, 1950, 1954, 1955], "subtl": [7, 1390, 1391, 1392, 1899, 1946, 1947, 1957], "nuanc": [7, 1950], "extra": [7, 13, 20, 21, 23, 27, 29, 46, 54, 1067, 1124, 1135, 1194, 1201, 1204, 1239, 1265, 1427, 1434, 1614, 1812, 1862, 1873, 1888, 1894, 1896, 1898, 1899, 1901, 1904, 1916, 1918, 1928, 1935, 1936, 1946, 1950, 1951], "understand": [7, 8, 9, 23, 25, 31, 32, 55, 67, 68, 1124, 1251, 1870, 1878, 1892, 1894, 1897, 1903, 1910, 1918, 1933, 1939, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1957], "hack": 7, "answer": [7, 10, 54, 813, 1344, 1632, 1946, 1947], "regress": [7, 1343, 1909, 1942, 1953], "scrutini": 7, "undertak": 7, "rest": [7, 20, 21, 41, 46, 54, 782, 803, 1120, 1259, 1260, 1831, 1888, 1905, 1909, 1916, 1917, 1919, 1924, 1928, 1944, 1948, 1950, 1951, 1955], "chanc": [7, 25, 29, 1899, 1946, 1951], "unrel": [7, 948, 1133, 1893, 1899, 1916], "aid": [7, 54, 1894, 1957], "troubleshoot": [7, 23, 1939, 1947], "mayb": [7, 1131, 1854, 1946], "bracnh": 7, "rebas": 7, "latest": [7, 23, 27, 29, 1626, 1666, 1869, 1899, 1903, 1912], "statu": [7, 9, 31, 1283, 1870, 1875, 1886, 1919], "hud": 7, "risk": [7, 8, 46, 1616, 1619], "anyth": [7, 30, 33, 46, 53, 812, 815, 1205, 1686, 1871, 1878, 1889, 1905, 1916, 1945], "configur": [7, 12, 20, 21, 23, 31, 32, 37, 40, 41, 42, 46, 777, 778, 781, 782, 786, 803, 804, 805, 806, 812, 815, 827, 828, 829, 832, 834, 837, 847, 848, 849, 850, 851, 941, 1024, 1607, 1640, 1760, 1851, 1870, 1880, 1884, 1897, 1898, 1899, 1909, 1911, 1916, 1922, 1924, 1933, 1935, 1945, 1947, 1954, 1955, 1957], "riski": 7, "had": [7, 54, 1209, 1598, 1833, 1894, 1900, 1945, 1953], "beforehand": [7, 53, 1947], "hei": 7, "my": [7, 20, 1364, 1904, 1912, 1919], "member": [7, 9, 20, 23, 31, 40, 41, 54, 1194, 1381, 1427, 1523, 1871, 1873, 1874, 1884, 1901, 1918, 1924, 1935, 1936], "sphinx": 7, "folder": [7, 9, 13, 20, 54, 1662, 1667, 1869, 1933, 1949, 1957], "tree": [7, 33, 50, 941, 1427, 1470, 1667, 1912, 1916, 1918, 1926, 1939], "master": [7, 23, 43, 781, 1124, 1470, 1869, 1924], "doxygen": 7, "special": [7, 11, 28, 33, 42, 44, 51, 54, 55, 60, 62, 63, 730, 731, 732, 812, 815, 897, 941, 1060, 1074, 1075, 1076, 1078, 1079, 1088, 1090, 1161, 1162, 1163, 1207, 1265, 1279, 1320, 1364, 1474, 1608, 1609, 1610, 1653, 1686, 1710, 1768, 1779, 1783, 1866, 1870, 1875, 1880, 1888, 1897, 1899, 1902, 1904, 1912, 1916, 1919, 1932, 1933, 1944, 1945, 1946, 1950, 1953], "server": [7, 20, 23, 41, 1198, 1897, 1916, 1919, 1924, 1941], "cppdoc": [7, 14], "cpp": [7, 13, 23, 1317, 1898, 1945], "accomplish": [7, 25, 1905, 1947], "holist": 7, "concept": [7, 51, 54, 1878, 1899, 1900, 1905, 1931, 1948], "galleri": 7, "restructur": [7, 1916], "text": [7, 20, 29, 144, 145, 164, 597, 606, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 687, 734, 735, 745, 747, 749, 753, 757, 758, 759, 761, 762, 763, 769, 773, 809, 810, 854, 870, 871, 872, 873, 874, 909, 910, 911, 914, 917, 919, 921, 930, 936, 953, 954, 956, 957, 959, 1062, 1081, 1082, 1111, 1112, 1116, 1117, 1138, 1150, 1151, 1152, 1153, 1160, 1183, 1191, 1214, 1217, 1218, 1219, 1222, 1223, 1230, 1233, 1239, 1243, 1248, 1251, 1257, 1264, 1273, 1280, 1281, 1282, 1283, 1316, 1317, 1328, 1329, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1493, 1494, 1495, 1497, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1512, 1513, 1514, 1519, 1522, 1524, 1525, 1526, 1530, 1531, 1541, 1546, 1550, 1551, 1552, 1556, 1561, 1564, 1569, 1570, 1572, 1576, 1577, 1578, 1579, 1582, 1583, 1584, 1586, 1587, 1588, 1612, 1614, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1691, 1708, 1709, 1712, 1715, 1728, 1731, 1734, 1746, 1767, 1769, 1770, 1782, 1784, 1794, 1795, 1805, 1812, 1813, 1816, 1828, 1829, 1865, 1889, 1892, 1902, 1912, 1916, 1922, 1929, 1933, 1935, 1949], "rst": 7, "rebuild": [7, 21], "entir": [7, 13, 20, 23, 31, 41, 54, 686, 897, 898, 1124, 1147, 1366, 1367, 1368, 1372, 1390, 1391, 1392, 1399, 1512, 1513, 1514, 1519, 1607, 1625, 1627, 1651, 1874, 1889, 1894, 1897, 1899, 1900, 1901, 1904, 1905, 1912, 1916, 1919, 1924, 1926, 1928, 1943, 1944, 1945, 1946, 1947, 1950, 1957, 1959], "circleci": 7, "shard": [7, 20, 25, 27, 28, 46, 1607, 1947], "worker": [7, 13, 20, 21, 23, 24, 27, 31, 32, 33, 34, 40, 42, 43, 46, 1607, 1874, 1909, 1917, 1918, 1924, 1925, 1926], "40": [7, 1147, 1266, 1348, 1390, 1614, 1615, 1638, 1639, 1648, 1651, 1827, 1944], "minut": [7, 10, 23, 1933], "netlifi": 7, "noplot": 7, "render": [7, 23, 1933, 1959], "notebook": 7, "rebuilt": [7, 21, 27], "deploi": [7, 31, 40, 1870, 1904, 1910, 1916, 1941], "action": [7, 23, 29, 31, 34, 54, 1897, 1916, 1918, 1926, 1959], "document": [8, 9, 10, 16, 20, 23, 46, 47, 54, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 862, 863, 864, 865, 926, 970, 971, 973, 1024, 1067, 1139, 1142, 1143, 1175, 1182, 1194, 1308, 1309, 1324, 1335, 1370, 1371, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1427, 1616, 1625, 1634, 1654, 1714, 1741, 1758, 1851, 1869, 1871, 1873, 1874, 1885, 1886, 1887, 1888, 1890, 1893, 1899, 1901, 1905, 1909, 1910, 1912, 1915, 1916, 1919, 1920, 1921, 1924, 1928, 1932, 1936, 1939, 1943, 1948, 1950, 1953, 1956], "develop": [8, 9, 10, 13, 21, 23, 54, 1873, 1874, 1881, 1885, 1894, 1899, 1904, 1905, 1909, 1916, 1919, 1920, 1924, 1928, 1949, 1952, 1957], "meant": [8, 24, 40, 42, 46, 1640, 1893, 1924], "rule": [8, 9, 13, 23, 29, 54, 55, 62, 63, 72, 73, 74, 141, 849, 881, 882, 925, 926, 1050, 1243, 1254, 1345, 1346, 1347, 1390, 1391, 1392, 1466, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1751, 1837, 1870, 1871, 1873, 1887, 1889, 1894, 1895, 1899, 1902, 1931, 1935, 1946], "concern": [8, 20, 46, 1886, 1897, 1912, 1955], "disagr": 8, "contribut": [8, 9, 25, 906, 1155, 1156, 1363, 1370, 1371, 1434, 1509, 1517, 1518, 1561, 1607, 1870, 1889, 1899, 1900, 1917], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": 8, "obsess": 8, "soumith": [8, 10], "goe": [8, 54, 1120, 1339, 1672, 1673, 1901, 1948, 1950], "depth": [8, 9, 68, 768, 774, 1028, 1029, 1207, 1342, 1357, 1360, 1422, 1479, 1537, 1595, 1881, 1898, 1905, 1918, 1944, 1959], "primari": [8, 9, 23, 54, 68, 1203, 1875, 1881, 1928, 1946], "goal": [8, 37, 50, 54, 1295, 1881, 1894, 1898, 1902, 1913, 1926, 1949], "secondari": 8, "abil": [8, 1747, 1881, 1904, 1912, 1916], "flexibl": [8, 21, 46, 50, 1250, 1607, 1881, 1897, 1899, 1905, 1950], "abstract": [8, 15, 20, 21, 24, 25, 29, 31, 40, 42, 899, 900, 901, 902, 903, 1621, 1874, 1898, 1919, 1924, 1942, 1950], "critic": [8, 40, 669, 1615, 1648, 1884, 1896, 1897, 1947, 1948, 1950], "concret": [8, 29, 43, 50, 54, 774, 789, 813, 830, 941, 1479, 1564, 1595, 1871, 1874, 1897, 1899, 1907, 1945, 1946, 1950], "manner": [8, 31, 502, 890, 892, 1888, 1890, 1895], "jump": [8, 549, 1931], "regim": 8, "ei": 8, "tradeoff": [8, 21, 1919, 1925, 1947, 1953], "temptat": 8, "impos": [8, 42, 52, 1755, 1886, 1893, 1931], "strict": [8, 890, 891, 892, 893, 894, 895, 1123, 1130, 1194, 1209, 1210, 1427, 1649, 1916, 1933, 1935], "upfront": [8, 1945], "simplifi": [8, 21, 53, 1201, 1417, 1615, 1686, 1881, 1894, 1902, 1905, 1915, 1925, 1945], "worth": [8, 9, 20, 21, 43, 1124, 1869, 1932, 1950, 1951], "friction": 8, "compel": 8, "narrow": [8, 1263, 1327, 1686, 1774, 1872, 1874, 1887, 1914, 1921, 1932, 1957], "subproblem": 8, "fragment": [8, 992, 1024, 1878, 1897, 1957], "ecosystem": [8, 1904, 1906], "incomprehens": 8, "seamlessli": [8, 1889], "softwar": [8, 1229, 1230, 1257, 1851, 1897, 1903, 1939], "experi": [8, 9, 11, 21, 52, 1135, 1456, 1579, 1607, 1862, 1881, 1899, 1933, 1944], "rich": [8, 1874], "denomin": [8, 676, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1719], "subset": [8, 20, 23, 27, 41, 44, 1205, 1686, 1871, 1873, 1874, 1899, 1912, 1922, 1952], "borrow": 8, "zen": 8, "implicit": [8, 73, 757, 758, 761, 762, 763, 1139, 1147, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1420, 1421, 1422, 1478, 1493, 1494, 1495, 1501, 1502, 1503, 1550, 1551, 1552, 1703, 1872, 1874, 1875, 1912, 1916, 1932, 1952], "concis": [8, 33, 1924], "interchang": [8, 29, 1683, 1836, 1873, 1903, 1913, 1939, 1948], "everydai": 8, "english": 8, "movement": [8, 1932], "worri": [8, 1924], "placement": [8, 28, 31, 848, 1598, 1919, 1924, 1947], "favor": [8, 23, 774, 775, 776, 932, 943, 1036, 1040, 1194, 1248, 1251, 1283, 1284, 1386, 1427, 1480, 1481, 1595, 1596, 1597, 1599, 1715, 1816, 1839, 1950], "practition": 8, "debugg": [8, 1199, 1902, 1947, 1957], "plug": 8, "ir": [8, 44, 54, 66, 68, 749, 1197, 1198, 1379, 1380, 1667, 1871, 1874, 1912, 1939, 1945, 1946, 1947, 1957], "classic": [8, 1894], "sort": [8, 27, 31, 54, 579, 598, 865, 866, 887, 1067, 1154, 1315, 1335, 1641, 1642, 1653, 1716, 1751, 1834, 1848, 1872, 1874, 1899, 1901, 1914, 1928, 1945, 1950, 1952], "distribut": [8, 11, 20, 21, 24, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 46, 53, 164, 249, 277, 368, 444, 471, 597, 669, 684, 685, 808, 911, 1041, 1317, 1335, 1339, 1363, 1364, 1365, 1366, 1367, 1368, 1372, 1377, 1381, 1393, 1441, 1445, 1466, 1509, 1511, 1512, 1513, 1514, 1519, 1523, 1524, 1528, 1538, 1569, 1607, 1655, 1708, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1870, 1874, 1888, 1889, 1892, 1893, 1897, 1917, 1918, 1920, 1926, 1929, 1933, 1936], "tldr": 8, "resourc": [8, 13, 20, 31, 36, 40, 54, 1874, 1886, 1907, 1928, 1947, 1954], "characterist": [8, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1817, 1900, 1905], "uniformli": [8, 29, 1726, 1727, 1935], "leak": [8, 882, 888, 1874, 1886, 1894], "smart": [8, 1899, 1916, 1924], "anywai": [8, 1894], "obviou": [8, 1901, 1926, 1946], "extens": [8, 13, 17, 23, 25, 28, 29, 1265, 1266, 1662, 1747, 1767, 1870, 1881, 1889, 1893, 1910, 1916, 1928, 1946, 1947, 1957], "unavoid": 8, "latenc": [8, 37, 1896, 1897, 1947, 1954], "caveat": [8, 46, 1598, 1647, 1881, 1886, 1897, 1905, 1910, 1943, 1953, 1957], "valuabl": 8, "certainli": [8, 1881], "heterogen": [8, 1873], "cluster": [8, 23, 25, 39, 40, 41, 46, 1335, 1933], "focus": [8, 1873, 1874, 1899, 1957], "beaten": 8, "space": [8, 9, 20, 29, 761, 762, 763, 1050, 1085, 1087, 1089, 1090, 1096, 1103, 1147, 1156, 1209, 1210, 1264, 1280, 1335, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1393, 1403, 1404, 1405, 1406, 1407, 1408, 1421, 1422, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1538, 1837, 1872, 1890, 1894, 1902, 1905, 1910, 1959], "innov": 8, "ultim": [8, 9, 13, 33, 42, 1898, 1939], "evidenc": 8, "began": 8, "bind": [8, 13, 23, 54, 1004, 1874, 1875, 1899, 1916], "monolith": 8, "deepli": 8, "integr": [8, 20, 28, 34, 50, 145, 911, 913, 914, 915, 916, 917, 918, 959, 1050, 1155, 1194, 1217, 1261, 1262, 1326, 1427, 1722, 1734, 1837, 1889, 1899, 1904, 1905, 1915, 1917, 1919, 1929, 1931, 1935, 1943], "numpi": [8, 20, 51, 438, 482, 682, 683, 688, 866, 868, 869, 886, 925, 1062, 1064, 1065, 1067, 1085, 1106, 1107, 1108, 1109, 1113, 1114, 1119, 1135, 1157, 1224, 1225, 1235, 1246, 1248, 1249, 1250, 1251, 1252, 1257, 1258, 1261, 1263, 1295, 1300, 1709, 1734, 1737, 1744, 1756, 1764, 1798, 1799, 1800, 1801, 1802, 1803, 1816, 1818, 1819, 1827, 1830, 1831, 1833, 1859, 1862, 1863, 1881, 1895, 1899, 1900, 1908, 1909, 1911, 1916, 1931, 1932, 1933, 1934, 1935, 1960], "scipi": [8, 929, 1240, 1241, 1566, 1709, 1916, 1927, 1929, 1933], "scikit": [8, 1537], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1911], "year": [8, 1928], "rewrot": 8, "frontend": [8, 14, 50, 54, 1947], "familiar": [8, 14, 54, 1023, 1871, 1894, 1900, 1916, 1919, 1925, 1926, 1947, 1956], "perhap": [8, 1900, 1950], "importantli": [8, 1950], "huge": [8, 1817, 1884], "scientif": [8, 1764], "pareto": [8, 1870], "close": [8, 14, 23, 40, 54, 55, 58, 62, 1006, 1183, 1229, 1230, 1256, 1257, 1283, 1344, 1458, 1476, 1499, 1751, 1816, 1839, 1884, 1894, 1899, 1908, 1912, 1916, 1919, 1924, 1933, 1935], "curv": [8, 1933], "torchdynamo": [8, 55, 64, 669, 941, 943, 1661, 1870, 1880, 1939, 1943, 1945, 1947, 1949, 1950], "frame": [8, 54, 941, 1191, 1812, 1853, 1901, 1933, 1939, 1944, 1945, 1947, 1948, 1957, 1959], "torch_funct": [8, 1899], "torch_dispatch": 8, "torch": [8, 9, 11, 14, 17, 18, 21, 24, 27, 31, 32, 33, 34, 37, 38, 40, 42, 43, 46, 49, 55, 56, 57, 58, 59, 60, 61, 68, 69, 71, 73, 78, 79, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 883, 960, 961, 968, 969, 970, 971, 973, 974, 989, 991, 1002, 1071, 1169, 1192, 1193, 1194, 1208, 1305, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1598, 1607, 1608, 1609, 1610, 1616, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1640, 1652, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1722, 1761, 1791, 1870, 1871, 1872, 1873, 1887, 1888, 1893, 1894, 1895, 1896, 1898, 1901, 1902, 1904, 1905, 1906, 1907, 1909, 1911, 1917, 1919, 1920, 1921, 1924, 1925, 1926, 1932, 1942, 1943, 1944, 1945, 1946, 1949, 1950, 1953, 1956, 1957, 1959], "fx": [8, 44, 69, 669, 736, 804, 805, 806, 807, 849, 1124, 1870, 1913, 1920, 1921, 1943, 1944, 1945, 1946, 1947, 1950, 1956, 1957], "tracer": [8, 1209, 1912, 1933, 1938, 1950], "functorch": [8, 47, 52, 55, 58, 62, 63, 65, 1943], "anchor": [8, 54, 1475, 1476, 1592, 1593, 1872, 1956], "hackabl": 8, "todai": [8, 47, 52, 941, 1919, 1945], "evolv": [8, 1666, 1898], "ai": [8, 1912, 1929], "adopt": [9, 23, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754], "hierarch": [9, 1933], "pull": [9, 10, 14, 54, 141, 882, 1912, 1916, 1946], "request": [9, 10, 11, 23, 25, 42, 678, 850, 868, 869, 1024, 1266, 1288, 1298, 1543, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1869, 1889, 1893, 1894, 1896, 1897, 1912, 1916, 1924, 1925, 1926, 1928, 1929, 1945, 1959], "overseen": 9, "catch": [9, 33, 1871, 1894, 1900, 1902, 1948], "maker": 9, "strong": 9, "toward": [9, 55, 1062, 1155, 1156, 1266, 1331, 1607, 1694, 1735, 1743, 1744, 1917], "philosophi": [9, 50, 1870], "beyond": [9, 21, 1312, 1363, 1672, 1673, 1682, 1742, 1901, 1905], "encourag": [9, 31, 1889, 1919, 1928, 1935], "propos": [9, 1669, 1689, 1690, 1881, 1902, 1915, 1925], "review": [9, 10, 21, 1916, 1949, 1950], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 54], "codebas": [9, 1899], "strictli": [9, 20, 141, 182, 199, 882, 925, 1156, 1194, 1198, 1427, 1894, 1929], "compani": 9, "bui": 9, "addition": [9, 20, 21, 23, 29, 46, 141, 502, 606, 882, 1124, 1128, 1129, 1198, 1257, 1335, 1390, 1391, 1392, 1793, 1901, 1936, 1959], "membership": [9, 31, 39, 40, 1875], "That": [9, 31, 38, 41, 48, 54, 1191, 1264, 1280, 1851, 1882, 1899, 1900, 1901, 1910, 1916, 1924, 1947], "seat": 9, "reserv": [9, 37, 1024, 1875, 1897, 1905, 1959], "emploi": [9, 1685, 1905, 1916, 1917], "directori": [9, 13, 23, 25, 38, 68, 1667, 1869, 1883, 1904, 1916, 1918, 1933, 1947, 1957], "procedur": [9, 29, 848, 1209, 1210, 1266, 1791, 1924, 1957], "disput": 9, "made": [9, 25, 27, 28, 41, 44, 54, 68, 888, 898, 1194, 1427, 1472, 1474, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1732, 1873, 1881, 1894, 1911, 1916, 1933, 1935, 1942, 1945, 1950, 1957, 1958], "public": [9, 10, 1124, 1899, 1958], "relev": [9, 24, 31, 40, 53, 669, 1257, 1399, 1875, 1893, 1894, 1916, 1919, 1948, 1949, 1950], "resolut": [9, 1439, 1440, 1491, 1526, 1567, 1568, 1837, 1875, 1916, 1960], "conclus": 9, "publicli": [9, 1958], "vision": [9, 1203, 1363, 1509, 1869, 1870, 1949], "roadmap": [9, 10], "parti": [9, 40, 1869, 1870, 1871, 1897, 1900, 1905, 1916], "triag": [9, 10], "meet": [9, 10, 39, 1223, 1897, 1947], "Their": [9, 1059, 1899, 1946], "articul": 9, "cohes": 9, "negoti": [9, 1924], "contenti": 9, "broad": [9, 1905], "stakehold": 9, "power": [9, 39, 1030, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1110, 1217, 1247, 1261, 1395, 1396, 1547, 1548, 1615, 1648, 1669, 1698, 1712, 1736, 1856, 1875, 1897, 1928], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 29, 46, 1295, 1874, 1876, 1893, 1894, 1915, 1919, 1931, 1939, 1941, 1945], "merit": 9, "demonstr": [9, 41, 54, 55, 62, 63, 1350, 1871, 1905, 1910, 1917, 1924, 1944, 1947, 1949, 1955], "expertis": 9, "continu": [9, 20, 23, 29, 43, 46, 54, 393, 597, 808, 891, 1147, 1229, 1230, 1257, 1349, 1350, 1607, 1666, 1875, 1881, 1894, 1910, 1918, 1936, 1943, 1944, 1947, 1950], "light": [9, 1933], "mainten": [9, 40, 41], "emeritu": [9, 10], "inact": [9, 1024, 1897, 1959], "contact": 9, "item": [9, 20, 25, 44, 55, 64, 572, 573, 574, 578, 781, 782, 783, 803, 804, 805, 806, 1194, 1363, 1427, 1428, 1437, 1619, 1764, 1869, 1871, 1872, 1873, 1874, 1887, 1897, 1912, 1914, 1916, 1924, 1933, 1934, 1942, 1945, 1946, 1950, 1952], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 20, 29, 44, 54, 79, 393, 461, 534, 724, 846, 850, 852, 897, 910, 912, 919, 932, 933, 934, 1083, 1084, 1085, 1086, 1087, 1095, 1097, 1101, 1103, 1120, 1130, 1131, 1134, 1151, 1152, 1186, 1189, 1194, 1197, 1223, 1224, 1235, 1237, 1248, 1251, 1252, 1266, 1286, 1301, 1321, 1326, 1327, 1344, 1355, 1356, 1357, 1362, 1363, 1364, 1371, 1381, 1388, 1427, 1433, 1463, 1470, 1475, 1476, 1491, 1499, 1518, 1523, 1526, 1592, 1593, 1601, 1602, 1603, 1663, 1742, 1744, 1794, 1796, 1840, 1841, 1842, 1843, 1850, 1869, 1872, 1887, 1888, 1899, 1900, 1902, 1912, 1914, 1917, 1923, 1928, 1929, 1935, 1958, 1960], "neg": [9, 11, 13, 20, 23, 29, 42, 54, 79, 431, 433, 448, 650, 651, 687, 744, 769, 912, 917, 954, 957, 973, 989, 995, 996, 1024, 1036, 1083, 1084, 1085, 1086, 1087, 1088, 1102, 1103, 1104, 1110, 1120, 1184, 1186, 1188, 1247, 1274, 1286, 1308, 1309, 1317, 1321, 1326, 1327, 1335, 1344, 1372, 1381, 1413, 1420, 1421, 1422, 1430, 1434, 1436, 1441, 1458, 1475, 1476, 1519, 1523, 1526, 1528, 1537, 1541, 1550, 1551, 1552, 1561, 1569, 1592, 1593, 1595, 1708, 1709, 1740, 1744, 1779, 1781, 1784, 1795, 1832, 1840, 1841, 1842, 1843, 1850, 1871, 1872, 1887, 1889, 1892, 1894, 1899, 1900, 1912, 1914, 1923, 1928, 1929, 1945, 1952], "interact": [9, 14, 20, 28, 54, 851, 971, 1004, 1169, 1875, 1898, 1899, 1916, 1933, 1942, 1947, 1951, 1959], "final": [9, 23, 25, 27, 29, 31, 40, 46, 50, 51, 675, 678, 679, 749, 909, 927, 940, 1067, 1106, 1124, 1147, 1265, 1283, 1288, 1379, 1381, 1397, 1442, 1455, 1598, 1794, 1837, 1871, 1873, 1874, 1875, 1887, 1899, 1902, 1905, 1908, 1910, 1912, 1916, 1925, 1926, 1942, 1944, 1945, 1957], "declin": 9, "conflict": [9, 21, 41, 44, 1916], "lack": [9, 11, 1229, 1230, 1257], "unfit": 9, "conduct": [9, 1607, 1705, 1817, 1924], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 906, 1872, 1916], "letter": [9, 1067], "befit": 9, "candidaci": 9, "behind": [9, 1870, 1910, 1925, 1944, 1946], "75": [9, 1155, 1415, 1526, 1544, 1669, 1716, 1872, 1929], "choos": [9, 14, 44, 54, 881, 906, 993, 1239, 1252, 1257, 1343, 1892, 1893, 1896, 1916, 1920, 1933], "unforeseen": 9, "circumst": [9, 40, 941, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1897], "perman": [9, 54, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1894, 1926], "unavail": [9, 1873], "rank": [9, 20, 21, 23, 24, 25, 27, 28, 29, 31, 38, 40, 41, 43, 44, 46, 55, 63, 1239, 1240, 1241, 1248, 1283, 1419, 1466, 1607, 1619, 1705, 1817, 1872, 1898, 1907, 1912, 1917, 1924, 1925, 1945, 1957], "elect": 9, "invit": [9, 1869], "convinc": 9, "approach": [9, 21, 23, 54, 74, 929, 1135, 1759, 1791, 1862, 1871, 1886, 1889, 1897, 1899, 1902, 1919, 1924, 1947], "interview": 9, "talk": [9, 42, 1899, 1904], "gather": [9, 23, 40, 46, 502, 1827, 1851, 1872, 1899, 1901, 1904, 1914, 1916, 1952], "read": [9, 17, 20, 23, 25, 30, 31, 33, 40, 41, 46, 50, 54, 438, 1026, 1050, 1118, 1119, 1120, 1201, 1265, 1699, 1870, 1887, 1888, 1894, 1895, 1897, 1898, 1900, 1904, 1908, 1916, 1919, 1924, 1942, 1944, 1947, 1949, 1950], "attend": [9, 724, 1433, 1470], "confer": [9, 1381], "pipelin": [9, 54, 1870, 1924, 1947], "world": [9, 23, 27, 31, 38, 40, 41, 46, 1466, 1607, 1894, 1916, 1919, 1944, 1945], "cover": [9, 47, 54, 55, 1041, 1067, 1420, 1550, 1551, 1552, 1874, 1876, 1888, 1894, 1899, 1902, 1904, 1905, 1924, 1944, 1950, 1951], "push": [9, 32, 1029, 1135, 1259, 1862, 1918, 1950], "codeown": 9, "notifi": [9, 24, 41, 1926], "expert": 9, "strongli": [9, 23, 31, 41, 1366, 1367, 1368, 1372, 1812, 1869], "failur": [9, 23, 29, 31, 32, 33, 37, 38, 39, 40, 43, 669, 897, 898, 941, 1124, 1209, 1210, 1312, 1665, 1874, 1880, 1886, 1917, 1924, 1926, 1935, 1947, 1950, 1957], "revert": [9, 29, 46, 1463, 1584, 1926], "substanti": [9, 21, 1897, 1942], "syntact": [9, 33, 54], "establish": [9, 23, 40, 1894], "seri": [9, 54, 1350, 1390, 1909, 1912, 1942, 1953, 1958], "lf": 9, "llc": 9, "guidelin": [9, 1630, 1907, 1916, 1919, 1920], "trademark": 9, "www": [9, 1350, 1476, 1933], "lfproject": 9, "acknowledg": [9, 23, 1870, 1926, 1928], "copyright": [9, 1957], "holder": 9, "independ": [9, 20, 23, 40, 46, 53, 144, 145, 768, 774, 890, 891, 892, 893, 894, 895, 973, 1147, 1156, 1252, 1365, 1366, 1367, 1368, 1372, 1512, 1513, 1514, 1519, 1537, 1595, 1651, 1715, 1870, 1871, 1893, 1894, 1897, 1910, 1916], "authorship": 9, "claus": [9, 1901], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 21, 29, 421, 469, 747, 1139, 1214, 1230, 1233, 1252, 1294, 1324, 1393, 1433, 1614, 1703, 1705, 1715, 1716, 1817, 1871, 1872, 1899, 1902, 1909, 1912, 1928, 1929, 1946], "partli": [9, 1874], "domain": [9, 29, 33, 673, 815, 874, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1095, 1097, 1098, 1099, 1100, 1147, 1889, 1912, 1919], "absolut": [9, 11, 13, 54, 83, 670, 683, 897, 898, 1115, 1183, 1222, 1227, 1248, 1251, 1253, 1274, 1388, 1394, 1458, 1535, 1539, 1580, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1654, 1668, 1709, 1735, 1767, 1872, 1905, 1912, 1914, 1929, 1934, 1935], "health": 9, "success": [9, 25, 29, 31, 37, 54, 1224, 1235, 1237, 1283, 1626, 1798, 1799, 1800, 1802, 1803, 1897, 1905, 1912, 1928, 1957], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 1912], "clearli": [9, 1881, 1916], "sponsorship": 9, "foundat": [9, 1913], "ptf": 9, "minor": [9, 995, 1224, 1240, 1928], "committ": 9, "prior": [9, 21, 23, 25, 31, 66, 68, 889, 1266, 1472, 1474, 1576, 1630, 1895, 1897, 1899, 1915, 1919, 1942, 1947], "facebook": 9, "infrastructur": [9, 32, 1916, 1945], "employe": 9, "expand": [9, 29, 246, 482, 867, 889, 897, 898, 924, 1246, 1247, 1295, 1433, 1477, 1570, 1847, 1869, 1872, 1880, 1887, 1888, 1895, 1897, 1900, 1912, 1914, 1916, 1917, 1932, 1952], "deliv": [9, 1918], "offici": [9, 23, 74, 1335, 1919], "showcas": [9, 1423, 1897, 1907], "whenev": [9, 869, 1614, 1615, 1884, 1886, 1922, 1925, 1926, 1946, 1950, 1958], "fix": [10, 17, 20, 23, 28, 29, 31, 40, 48, 51, 54, 69, 70, 253, 784, 790, 1124, 1207, 1239, 1370, 1371, 1445, 1517, 1518, 1537, 1607, 1666, 1871, 1872, 1884, 1892, 1893, 1897, 1898, 1901, 1907, 1911, 1912, 1914, 1915, 1942, 1955, 1957], "plu": [10, 13, 25, 890, 1120, 1240, 1928], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1266], "ezyang": [10, 1899, 1932], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1705, 1817], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": [10, 1899], "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 24, 27, 29, 46, 1673, 1674, 1676, 1682, 1686, 1915], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 1957], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 1944], "ansel": [10, 1944], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 1324, 1716, 1897], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 29], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1266], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1147], "robi": 10, "robieta": 10, "xu": [10, 46], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 23, 46, 54, 1801, 1873, 1888, 1912, 1942, 1953], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1854], "sebastian": 10, "messmer": 10, "smessmer": 10, "bowen": 10, "bao": [10, 1954], "bowenbao": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1335], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 782], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 1918, 1947, 1957], "johnson": 10, "peterjc123": [10, 1911], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 29], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "hirsch": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 25, 44, 47, 51, 52, 54, 55, 62, 63, 310, 1192, 1195, 1651, 1812, 1875, 1882, 1889, 1894, 1899, 1945, 1947, 1957, 1958], "bj": 11, "j": [11, 23, 29, 304, 306, 312, 502, 504, 506, 681, 884, 890, 892, 949, 1067, 1083, 1084, 1091, 1097, 1101, 1102, 1136, 1191, 1194, 1229, 1230, 1241, 1257, 1266, 1273, 1281, 1283, 1288, 1366, 1367, 1368, 1372, 1427, 1430, 1512, 1513, 1514, 1519, 1709, 1716, 1795, 1812, 1816, 1859, 1873, 1892, 1894, 1899, 1902, 1910, 1933], "imaginari": [11, 302, 897, 949, 955, 1088, 1090, 1098, 1099, 1100, 1164, 1184, 1186, 1187, 1190, 1812, 1860, 1861, 1875, 1894, 1902, 1935], "satisfi": [11, 18, 21, 29, 606, 683, 749, 783, 891, 897, 898, 925, 1083, 1084, 1086, 1088, 1090, 1098, 1099, 1100, 1115, 1207, 1233, 1259, 1260, 1335, 1350, 1374, 1379, 1397, 1442, 1630, 1647, 1735, 1751, 1791, 1812, 1874, 1894, 1897, 1902, 1915, 1917, 1928, 1931, 1944], "equat": [11, 934, 1067, 1139, 1151, 1237, 1238, 1239, 1240, 1241, 1243, 1254, 1256, 1343, 1777, 1839, 1872, 1894, 1902, 1915, 1929], "frequent": [11, 25, 1335, 1870, 1897, 1907, 1908, 1910, 1928, 1939, 1949], "mathemat": [11, 54, 890, 891, 892, 893, 894, 895, 1115, 1147, 1343, 1345, 1346, 1347, 1390, 1391, 1392, 1393, 1466, 1545, 1583, 1607, 1654, 1735, 1793, 1794, 1874, 1894, 1908, 1929, 1936], "topic": [11, 1904, 1905, 1944], "tradition": 11, "torchaudio": [11, 1870], "mimick": 11, "assembli": 11, "lapack": [11, 933, 1139, 1224, 1235, 1236, 1237, 1239, 1242, 1255, 1715, 1816], "cubla": [11, 985, 1851, 1909, 1942], "spectral": [11, 1213, 1229, 1257, 1615, 1638, 1648, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1908], "fft": [11, 1870, 1897], "4621": 11, "0303j": 11, "2438": [11, 1239, 1517], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 166, 949, 1110, 1119, 1173, 1194, 1223, 1224, 1229, 1230, 1231, 1232, 1233, 1234, 1355, 1356, 1357, 1427, 1501, 1502, 1503, 1664, 1709, 1756, 1930, 1931, 1934, 1935], "complex64": [11, 169, 949, 1084, 1086, 1087, 1092, 1093, 1119, 1173, 1225, 1248, 1251, 1355, 1356, 1357, 1501, 1502, 1503, 1664, 1709, 1756, 1930, 1931, 1934, 1935], "apart": [11, 1874, 1894], "linspac": [11, 912, 936, 1088, 1098, 1295, 1872, 1876, 1914], "logspac": [11, 1872, 1876, 1914], "arang": [11, 20, 23, 30, 502, 596, 680, 681, 682, 686, 688, 875, 876, 877, 923, 935, 939, 1050, 1065, 1083, 1087, 1095, 1101, 1103, 1107, 1108, 1109, 1110, 1117, 1118, 1157, 1214, 1215, 1219, 1222, 1246, 1249, 1250, 1263, 1327, 1448, 1449, 1450, 1451, 1452, 1479, 1480, 1481, 1563, 1654, 1655, 1704, 1712, 1716, 1731, 1738, 1743, 1764, 1796, 1804, 1815, 1831, 1832, 1834, 1835, 1837, 1863, 1872, 1881, 1889, 1910, 1914, 1929, 1933, 1934, 1942, 1949, 1952], "switch": [11, 20, 49, 53, 54, 66, 1236, 1237, 1238, 1367, 1526, 1564, 1611, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1747, 1851, 1886, 1894, 1897, 1905, 1907, 1915, 1948], "view_as_r": [11, 1812, 1872, 1914, 1932], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 1872, 1887, 1889, 1928], "2250": [11, 1250, 1654], "7546": [11, 934], "1722": 11, "x1": [11, 44, 929, 1241, 1362, 1419, 1475, 1476, 1508, 1565, 1872, 1952], "3j": [11, 23, 687, 952, 953, 1739, 1740, 1756], "4j": [11, 23, 1767], "0000": [11, 29, 502, 854, 890, 892, 912, 932, 936, 955, 1048, 1054, 1055, 1056, 1081, 1082, 1085, 1087, 1088, 1094, 1095, 1098, 1103, 1115, 1116, 1117, 1147, 1153, 1156, 1160, 1219, 1222, 1223, 1224, 1236, 1237, 1240, 1245, 1246, 1250, 1252, 1264, 1280, 1322, 1370, 1371, 1479, 1480, 1482, 1483, 1517, 1518, 1654, 1709, 1715, 1720, 1721, 1722, 1731, 1735, 1736, 1760, 1767, 1769, 1770, 1772, 1775, 1776, 1777, 1778, 1794, 1839, 1840, 1842, 1865, 1881, 1889, 1897, 1928, 1929, 1934], "6569": [11, 1160], "5708": [11, 1051], "7854": 11, "complex_tensor": 11, "pt": [11, 21, 46, 1199, 1201, 1204, 1211, 1265, 1747, 1871, 1905, 1910, 1916, 1949], "conjug": [11, 321, 448, 681, 897, 934, 952, 953, 1174, 1223, 1224, 1230, 1233, 1236, 1243, 1257, 1262, 1266, 1614, 1703, 1739, 1812, 1816, 1859, 1902, 1915, 1934], "wirting": [11, 897, 1902], "deriv": [11, 23, 46, 141, 727, 728, 729, 730, 731, 732, 770, 789, 813, 882, 896, 897, 898, 1130, 1134, 1147, 1191, 1251, 1283, 1474, 1598, 1870, 1873, 1899, 1900, 1902, 1924, 1928, 1929], "steepest": [11, 1894], "descent": [11, 29, 1669, 1685, 1689, 1690, 1894, 1905], "box": [11, 23, 28, 41, 54, 1135, 1862, 1888, 1894, 1898, 1943, 1945, 1948, 1949], "fulli": [11, 13, 20, 23, 27, 28, 44, 50, 54, 669, 1030, 1194, 1423, 1424, 1425, 1427, 1874, 1880, 1899, 1916, 1919, 1945, 1950, 1952], "quantiz": [11, 54, 210, 317, 329, 462, 463, 464, 465, 466, 468, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 906, 1052, 1081, 1082, 1717, 1718, 1719, 1720, 1721, 1851, 1870, 1914, 1931, 1934, 1935, 1937, 1938], "parallel_info": [12, 1870, 1896], "cppextens": [13, 1870], "setuptool": 13, "bare": 13, "buildextens": [13, 1870], "ext_modul": 13, "extra_compile_arg": [13, 1911], "cmdclass": 13, "build_ext": 13, "cudaextens": [13, 1870], "cuda_extens": 13, "extension_kernel": 13, "cu": 13, "cxx": 13, "nvcc": [13, 998, 1957], "o2": 13, "compil": [13, 14, 46, 47, 54, 669, 969, 994, 998, 1010, 1011, 1124, 1192, 1194, 1195, 1198, 1199, 1205, 1206, 1207, 1209, 1210, 1211, 1427, 1870, 1871, 1873, 1874, 1875, 1876, 1880, 1893, 1896, 1898, 1904, 1911, 1912, 1924, 1936, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1951, 1952, 1953, 1954], "arch": 13, "card": [13, 1911], "visibl": [13, 23, 25, 37, 992, 1037, 1428, 1429, 1437, 1438, 1945, 1948], "ptx": 13, "road": 13, "recompil": [13, 54, 669, 941, 1207, 1880, 1903, 1944, 1945, 1950, 1953], "cc": [13, 23, 1897], "newest": [13, 50], "torch_cuda_arch_list": 13, "6": [13, 17, 20, 21, 23, 29, 38, 54, 55, 56, 60, 61, 62, 63, 304, 306, 308, 312, 392, 393, 461, 477, 488, 502, 506, 549, 596, 674, 675, 680, 686, 730, 731, 732, 734, 735, 747, 750, 752, 754, 890, 891, 893, 894, 895, 912, 920, 925, 931, 934, 935, 939, 959, 979, 1026, 1030, 1044, 1045, 1046, 1050, 1051, 1062, 1065, 1066, 1083, 1091, 1096, 1097, 1101, 1102, 1104, 1106, 1107, 1110, 1117, 1147, 1157, 1159, 1160, 1183, 1204, 1215, 1219, 1230, 1246, 1250, 1251, 1252, 1259, 1260, 1264, 1266, 1295, 1299, 1325, 1326, 1327, 1340, 1351, 1354, 1359, 1362, 1370, 1371, 1380, 1381, 1382, 1384, 1385, 1423, 1424, 1428, 1436, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1470, 1471, 1473, 1475, 1478, 1484, 1493, 1523, 1530, 1531, 1563, 1565, 1572, 1598, 1642, 1643, 1645, 1647, 1653, 1654, 1655, 1670, 1684, 1704, 1705, 1708, 1715, 1716, 1722, 1723, 1726, 1732, 1742, 1743, 1747, 1751, 1764, 1785, 1789, 1793, 1796, 1798, 1799, 1804, 1815, 1817, 1818, 1819, 1826, 1831, 1832, 1833, 1834, 1835, 1837, 1840, 1842, 1846, 1851, 1863, 1864, 1871, 1874, 1875, 1881, 1889, 1892, 1894, 1899, 1900, 1905, 1910, 1912, 1924, 1925, 1928, 1929, 1931, 1934, 1935, 1944, 1947, 1952, 1954, 1957, 1958], "build_my_extens": 13, "7": [13, 20, 21, 23, 29, 54, 55, 60, 224, 251, 304, 306, 308, 312, 392, 393, 461, 502, 549, 596, 606, 674, 686, 734, 735, 893, 895, 917, 920, 925, 931, 935, 939, 1050, 1062, 1064, 1065, 1068, 1083, 1106, 1107, 1110, 1113, 1117, 1147, 1157, 1171, 1215, 1219, 1229, 1234, 1236, 1237, 1240, 1241, 1245, 1246, 1250, 1257, 1325, 1326, 1327, 1333, 1334, 1337, 1338, 1340, 1351, 1370, 1415, 1423, 1424, 1448, 1449, 1450, 1451, 1452, 1475, 1478, 1493, 1564, 1632, 1637, 1647, 1654, 1675, 1722, 1726, 1732, 1742, 1743, 1744, 1751, 1764, 1767, 1769, 1780, 1781, 1789, 1796, 1798, 1799, 1804, 1816, 1818, 1819, 1826, 1831, 1832, 1835, 1837, 1846, 1859, 1863, 1871, 1875, 1881, 1888, 1889, 1895, 1897, 1899, 1908, 1910, 1912, 1914, 1919, 1928, 1931, 1932, 1933, 1934, 1935, 1949, 1954], "older": [13, 1897, 1910, 1916], "modestli": [13, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686], "imag": [13, 20, 730, 731, 732, 850, 851, 949, 1333, 1337, 1338, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1374, 1375, 1376, 1391, 1399, 1434, 1439, 1440, 1461, 1478, 1480, 1481, 1491, 1502, 1503, 1505, 1506, 1520, 1521, 1526, 1537, 1594, 1595, 1740, 1870, 1872, 1889, 1902, 1914, 1917, 1932, 1933, 1945, 1947, 1948, 1952], "11": [13, 23, 312, 502, 669, 931, 935, 1013, 1065, 1157, 1214, 1250, 1264, 1280, 1335, 1351, 1376, 1424, 1522, 1654, 1655, 1667, 1789, 1831, 1863, 1871, 1875, 1881, 1888, 1897, 1910, 1911, 1912, 1914, 1928, 1929, 1944, 1957], "pars": [13, 23, 43, 904, 1874, 1916, 1924], "window": [13, 20, 23, 54, 342, 545, 910, 919, 1151, 1152, 1191, 1213, 1340, 1341, 1342, 1375, 1376, 1395, 1396, 1420, 1421, 1422, 1423, 1424, 1425, 1493, 1521, 1522, 1550, 1551, 1552, 1720, 1721, 1812, 1870, 1872, 1884, 1897, 1945], "workaround": [13, 20, 28, 54, 1198, 1869, 1909, 1912, 1919, 1947], "pure": [13, 14, 51, 1197, 1871, 1899], "sigmoidalphablendforwardcuda": 13, "69460": 13, "facebookresearch": 13, "pytorch3d": 13, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 13, "relocat": 13, "link": [13, 14, 29, 54, 69, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1420, 1421, 1422, 1478, 1528, 1888, 1904, 1905, 1928], "symbol": [13, 19, 44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 74, 613, 806, 943, 1208, 1262, 1397, 1442, 1666, 1839, 1859, 1870, 1874, 1913, 1945, 1946, 1947], "rdc": 13, "dc": 13, "anymor": [13, 23, 46, 212], "dlto": 13, "dlink": 13, "protent": 13, "perf": [13, 669, 1919, 1950, 1951], "lib": [13, 1911], "nvshmem": 13, "ninja": [13, 1911], "dlink_librari": 13, "dlink_lib": 13, "std": [13, 31, 38, 79, 368, 444, 1081, 1082, 1113, 1114, 1115, 1655, 1709, 1735, 1774, 1779, 1811, 1849, 1872, 1887, 1892, 1897, 1904, 1911, 1914, 1952], "17": [13, 23, 674, 1191, 1246, 1424, 1789, 1871, 1912, 1914, 1928, 1947, 1957], "mix": [13, 21, 29, 44, 46, 1013, 1607, 1870, 1894, 1896, 1919, 1928, 1944, 1945], "use_ninja": 13, "greatli": [13, 54, 1897, 1945], "fallback": [13, 23, 40, 49, 74, 1207, 1257, 1893, 1897, 1910, 1942, 1947, 1957], "distutil": 13, "max_job": 13, "extra_cflag": 13, "extra_cuda_cflag": 13, "extra_ldflag": 13, "extra_include_path": 13, "build_directori": 13, "with_cuda": [13, 1911], "is_python_modul": 13, "is_standalon": 13, "keep_intermedi": 13, "torch_extens": 13, "temporari": [13, 54, 812, 815, 1608, 1894, 1901, 1949], "torch_extensions_dir": 13, "subfold": [13, 1957], "o3": 13, "cuh": 13, "Such": [13, 20, 21, 53, 1856, 1928], "lib64": 13, "cudart": [13, 1911], "fine": [13, 23, 25, 27, 30, 847, 850, 1118, 1209, 1576, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1869, 1886, 1894, 1897, 1899, 1912, 1916, 1917, 1919, 1928, 1939, 1949, 1957], "cuda_hom": 13, "safest": 13, "pybind11": [13, 14, 1873], "union": [13, 20, 25, 28, 31, 34, 38, 41, 44, 46, 54, 1205, 1265, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1375, 1376, 1395, 1396, 1420, 1421, 1422, 1427, 1470, 1472, 1474, 1477, 1619, 1662, 1664, 1666, 1747, 1854, 1872, 1873, 1874, 1910, 1912, 1916, 1930, 1935, 1938], "linker": 13, "workspac": [13, 941], "header": [13, 38, 1911, 1935], "automat": [13, 21, 23, 40, 41, 44, 54, 73, 141, 578, 878, 880, 941, 1004, 1013, 1156, 1203, 1209, 1295, 1473, 1576, 1608, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1734, 1764, 1852, 1869, 1870, 1873, 1874, 1882, 1883, 1887, 1888, 1894, 1895, 1897, 1899, 1905, 1907, 1912, 1916, 1917, 1919, 1920, 1924, 1933, 1934, 1946, 1947, 1949, 1957], "construct": [13, 14, 20, 23, 25, 27, 28, 29, 40, 44, 46, 48, 50, 51, 54, 55, 60, 61, 141, 438, 781, 782, 813, 867, 868, 882, 896, 949, 1054, 1070, 1135, 1156, 1194, 1205, 1209, 1210, 1217, 1224, 1264, 1265, 1280, 1295, 1370, 1371, 1427, 1517, 1598, 1607, 1609, 1610, 1640, 1647, 1662, 1705, 1709, 1756, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1817, 1830, 1833, 1862, 1870, 1871, 1884, 1897, 1898, 1905, 1907, 1910, 1916, 1919, 1924, 1926, 1931, 1933, 1934, 1935, 1950], "plain": [13, 1344, 1428, 1437, 1614, 1800, 1899, 1928, 1946], "standalon": [13, 39, 40, 41, 806, 1205, 1209, 1871, 1951], "torch_lib_path": 13, "load_inlin": [13, 1870], "cpp_sourc": 13, "cuda_sourc": 13, "with_pytorch_error_handl": 13, "use_pch": 13, "behav": [13, 14, 23, 53, 54, 304, 312, 482, 504, 506, 830, 1134, 1209, 1423, 1424, 1425, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1873, 1874, 1881, 1894, 1900, 1905, 1909, 1916, 1924, 1928], "exactli": [13, 21, 23, 29, 42, 897, 898, 935, 980, 984, 1067, 1113, 1114, 1191, 1194, 1235, 1371, 1374, 1375, 1376, 1427, 1455, 1458, 1518, 1528, 1607, 1654, 1668, 1759, 1881, 1887, 1894, 1897, 1898, 1899, 1902, 1903, 1912, 1916, 1917, 1942, 1950], "filenam": [13, 20, 54, 1193, 1201, 1204, 1869, 1872, 1883, 1894, 1916, 1930, 1933, 1949, 1959], "typic": [13, 20, 21, 23, 29, 30, 31, 33, 40, 41, 42, 46, 54, 70, 959, 968, 1110, 1118, 1194, 1214, 1217, 1265, 1361, 1387, 1427, 1598, 1607, 1672, 1673, 1759, 1798, 1799, 1800, 1802, 1803, 1869, 1870, 1871, 1874, 1880, 1894, 1896, 1897, 1908, 1909, 1910, 1912, 1915, 1917, 1919, 1924, 1932, 1941, 1943, 1945, 1946, 1955, 1957, 1959, 1960], "inlin": [13, 44, 53, 55, 57, 61, 1010, 1194, 1198, 1209, 1896, 1947], "concaten": [13, 20, 23, 28, 892, 928, 939, 982, 1066, 1159, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1371, 1397, 1510, 1518, 1611, 1619, 1809, 1864, 1872, 1875, 1912, 1914, 1928], "furthermor": [13, 38, 50, 1229, 1230, 1257, 1283, 1365, 1887, 1888, 1894, 1909, 1922, 1924], "cuda_runtim": 13, "se": 13, "warn": [13, 17, 21, 23, 27, 71, 72, 74, 669, 890, 896, 931, 979, 1026, 1030, 1041, 1044, 1045, 1135, 1175, 1209, 1251, 1295, 1433, 1470, 1471, 1472, 1473, 1474, 1616, 1619, 1758, 1766, 1851, 1862, 1869, 1880, 1884, 1895, 1899, 1914, 1916, 1923, 1950, 1957], "macro": [13, 1903], "pybind": 13, "_safe_foo": 13, "redirect": [13, 31, 38, 1936], "obscur": 13, "sin_add": 13, "sin": [13, 51, 52, 55, 59, 60, 62, 63, 521, 658, 659, 870, 941, 1010, 1125, 1127, 1128, 1129, 1131, 1134, 1152, 1245, 1295, 1709, 1772, 1778, 1872, 1887, 1894, 1914, 1928, 1929, 1933, 1943, 1947, 1949, 1952, 1955], "inline_extens": 13, "include_path": [13, 1870], "get_compiler_abi_compatibility_and_vers": [13, 1870], "abi": [13, 14], "alongsid": [13, 1194, 1427, 1899, 1950], "shell": 13, "torchvers": 13, "verify_ninja_avail": [13, 1870], "is_ninja_avail": [13, 1870], "export": [14, 17, 23, 30, 43, 55, 60, 63, 68, 78, 669, 905, 970, 1197, 1199, 1205, 1211, 1641, 1642, 1661, 1662, 1663, 1665, 1666, 1667, 1668, 1870, 1871, 1873, 1874, 1899, 1913, 1914, 1918, 1919, 1924, 1945, 1955, 1956], "embed": [14, 54, 724, 735, 884, 1058, 1335, 1361, 1371, 1387, 1399, 1433, 1476, 1518, 1576, 1686, 1754, 1872, 1896, 1914, 1919, 1921, 1924, 1928, 1933, 1952], "modif": [14, 46, 54, 68, 212, 769, 886, 1119, 1120, 1194, 1427, 1607, 1894, 1899, 1905, 1916, 1919, 1947], "submodul": [14, 44, 46, 54, 67, 780, 786, 803, 827, 828, 829, 847, 850, 851, 1133, 1194, 1198, 1204, 1205, 1364, 1427, 1428, 1429, 1455, 1605, 1871, 1873, 1874, 1882, 1905, 1910, 1916, 1919, 1924, 1938, 1943, 1956], "preprocess": [14, 66, 485, 1194], "augment": [14, 1875, 1935], "walk": [14, 54, 1878, 1899, 1916, 1925, 1926, 1932, 1957], "interfac": [14, 21, 25, 30, 32, 37, 40, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 783, 1120, 1598, 1758, 1812, 1851, 1874, 1884, 1885, 1899, 1904, 1915, 1922, 1928, 1933, 1952], "opencv": [14, 1526, 1537], "struct": [14, 1134, 1135, 1862, 1882, 1904], "explain": [14, 23, 1686, 1759, 1869, 1874, 1893, 1897, 1900, 1907, 1928, 1947, 1957], "reshap": [14, 23, 29, 487, 488, 502, 533, 606, 681, 939, 1050, 1065, 1066, 1106, 1157, 1214, 1246, 1250, 1259, 1260, 1263, 1327, 1374, 1448, 1449, 1450, 1451, 1452, 1478, 1615, 1648, 1654, 1796, 1797, 1804, 1831, 1832, 1837, 1863, 1864, 1872, 1881, 1888, 1889, 1912, 1914, 1921, 1932, 1933, 1952], "classat_1_1_tensor": 14, "tensor_index": 14, "crucial": [14, 1878, 1949, 1950, 1951], "cpp_autograd": 14, "workflow": [14, 1869, 1899, 1919, 1920, 1936, 1939, 1945, 1946, 1951, 1953, 1954], "undesir": [14, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1899], "overview": [14, 23, 37, 1607, 1870, 1881, 1886, 1894, 1902, 1905, 1917, 1919, 1924, 1939, 1940, 1944], "cpp_frontend": 14, "library_root": 14, "libtorch": 14, "linux": [14, 23, 1869], "gcc": 14, "pre": [14, 23, 27, 46, 54, 896, 903, 1194, 1427, 1602, 1604, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1663, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1688, 1694, 1869, 1871, 1874, 1882, 1894, 1896, 1905, 1912, 1917, 1934, 1946, 1953, 1957], "cxx11": 14, "facilit": [15, 24, 29, 51, 960, 961, 962, 963, 964, 965, 966, 971, 1055, 1756, 1869, 1871, 1874, 1909], "prototyp": [17, 23, 44, 669, 890, 892, 896, 897, 898, 1203, 1474, 1870, 1880, 1881, 1884, 1888, 1889, 1905, 1910, 1922, 1924, 1928, 1931, 1936, 1937, 1938], "earli": [17, 21, 31, 53, 1366, 1367, 1368, 1372, 1870, 1919, 1920, 1937, 1938, 1946, 1950], "introduc": [17, 29, 51, 749, 1266, 1379, 1397, 1442, 1537, 1742, 1869, 1874, 1895, 1898, 1906, 1912, 1916, 1917, 1918, 1924, 1928, 1934, 1939, 1947, 1953, 1957], "race": [17, 23, 1894], "enable_cuda_sanit": 17, "torch_cuda_sanit": 17, "concurr": [17, 23, 27, 1896, 1897, 1907, 1924, 1925], "uniniti": [17, 435, 488, 1068, 1069, 1598, 1609, 1610, 1647, 1889, 1914], "overwrit": [17, 20, 23, 54, 1428, 1437, 1874, 1894, 1942], "commandlin": 17, "example_error": 17, "csan": 17, "pointer": [17, 130, 985, 1443, 1897, 1898, 1904, 1924, 1926, 1946], "139719969079296": 17, "94646435460352": 17, "_sanit": 17, "364": 17, "_handle_kernel_launch": 17, "stack_trac": [17, 54], "stacksummari": 17, "extract": [17, 44, 54, 825, 1370, 1374, 1478, 1517, 1594, 1918, 1924, 1938, 1941, 1943, 1944, 1947, 1948], "10000": [17, 21, 683, 1697, 1744, 1901, 1905, 1928, 1933, 1949], "420": 17, "_handle_memory_alloc": 17, "incorrectli": [17, 46, 971, 1112, 1948], "id": [17, 20, 23, 27, 31, 39, 40, 41, 46, 54, 763, 813, 968, 1003, 1466, 1552, 1591, 1607, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1874, 1904, 1912, 1914, 1916, 1923, 1924, 1925, 1930, 1950, 1954, 1957], "faulti": [17, 23], "schema": [17, 23, 25, 72, 1871, 1872, 1874, 1878, 1912, 1952, 1956], "current_stream": [17, 970, 1870, 1897], "wait_stream": [17, 23, 971, 973, 1897], "default_stream": [17, 23, 1870], "begin": [17, 20, 21, 23, 24, 32, 40, 46, 54, 485, 669, 749, 773, 809, 810, 854, 910, 954, 968, 1016, 1018, 1087, 1147, 1153, 1214, 1249, 1261, 1342, 1343, 1344, 1361, 1363, 1369, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1394, 1397, 1398, 1413, 1418, 1421, 1422, 1434, 1435, 1442, 1445, 1458, 1464, 1469, 1476, 1509, 1530, 1531, 1607, 1614, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1689, 1691, 1697, 1764, 1767, 1770, 1812, 1837, 1848, 1865, 1874, 1893, 1894, 1897, 1899, 1902, 1904, 1909, 1912, 1915, 1922, 1929, 1947, 1957], "suspect": [17, 1686, 1897, 1957], "cudnn": [18, 19, 749, 1203, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1379, 1397, 1442, 1443, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1576, 1759, 1870, 1872, 1897, 1908, 1909, 1951], "float16": [18, 21, 25, 46, 288, 675, 678, 749, 812, 815, 823, 839, 840, 847, 909, 921, 1119, 1176, 1194, 1288, 1298, 1355, 1356, 1357, 1358, 1359, 1360, 1379, 1380, 1397, 1398, 1414, 1427, 1442, 1537, 1576, 1672, 1673, 1744, 1854, 1893, 1905, 1919, 1921, 1928, 1930, 1931, 1934, 1935, 1960], "v100": [18, 749, 1379, 1397, 1442, 1897], "packedsequ": [18, 749, 1379, 1397, 1442, 1641, 1642, 1643, 1645], "rnn": [19, 723, 749, 750, 751, 752, 754, 847, 1379, 1380, 1397, 1398, 1444, 1608, 1617, 1640, 1876, 1901, 1905, 1921, 1933], "enforc": [19, 21, 53, 784, 879, 1194, 1397, 1427, 1442, 1874, 1905, 1932], "cuda_launch_block": [19, 1397, 1442, 1897], "colon": [19, 1397, 1442, 1924], "cublas_workspace_config": [19, 1397, 1442, 1851, 1897, 1909], "16": [19, 23, 44, 312, 606, 727, 728, 729, 730, 731, 732, 761, 1065, 1083, 1110, 1147, 1157, 1194, 1205, 1217, 1223, 1229, 1230, 1234, 1250, 1327, 1339, 1341, 1342, 1350, 1351, 1354, 1355, 1356, 1357, 1359, 1360, 1365, 1366, 1367, 1368, 1372, 1375, 1376, 1395, 1396, 1397, 1415, 1420, 1421, 1422, 1424, 1425, 1427, 1434, 1442, 1453, 1470, 1484, 1501, 1503, 1504, 1506, 1510, 1521, 1522, 1657, 1712, 1759, 1789, 1851, 1859, 1863, 1871, 1875, 1892, 1897, 1905, 1908, 1910, 1912, 1914, 1917, 1924, 1928, 1929, 1931, 1933, 1934, 1944, 1947, 1957], "4096": [19, 1397, 1442, 1851, 1897, 1912], "heart": [20, 1950], "dataload": [20, 485, 1607, 1690, 1691, 1697, 1897, 1901, 1907, 1911, 1915, 1933], "batch_siz": [20, 29, 50, 52, 881, 1125, 1133, 1135, 1433, 1640, 1642, 1643, 1645, 1862, 1872, 1900, 1901, 1909, 1912, 1933], "shuffl": [20, 1870, 1933], "batch_sampl": 20, "num_work": [20, 31, 1909, 1911], "drop_last": 20, "timeout": [20, 23, 40, 1886, 1924], "worker_init_fn": [20, 1901, 1909], "prefetch_factor": 20, "persistent_work": 20, "__getitem__": [20, 1851], "__len__": [20, 54, 1872], "protocol": [20, 25, 30, 40, 42, 869, 1118, 1120, 1663, 1747, 1899, 1911, 1912, 1924, 1958], "possibli": [20, 40, 46, 1194, 1209, 1236, 1241, 1427, 1607, 1871, 1878, 1909, 1916, 1946, 1959], "sampl": [20, 25, 29, 47, 52, 54, 79, 144, 145, 368, 444, 471, 597, 768, 911, 959, 979, 1013, 1026, 1030, 1044, 1045, 1085, 1103, 1125, 1135, 1147, 1191, 1210, 1283, 1317, 1339, 1343, 1344, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1381, 1387, 1390, 1391, 1392, 1393, 1394, 1412, 1414, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1445, 1458, 1459, 1466, 1475, 1491, 1498, 1499, 1509, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1523, 1526, 1528, 1536, 1537, 1538, 1561, 1569, 1607, 1615, 1655, 1690, 1705, 1708, 1722, 1724, 1726, 1728, 1730, 1794, 1810, 1811, 1812, 1857, 1858, 1862, 1870, 1884, 1892, 1893, 1897, 1904, 1905, 1916, 1919, 1920, 1933, 1957], "idx": [20, 54, 887, 1194, 1335, 1370, 1427, 1615, 1872, 1888], "th": [20, 145, 304, 306, 312, 749, 890, 892, 911, 931, 1054, 1059, 1168, 1191, 1215, 1233, 1241, 1247, 1283, 1317, 1366, 1367, 1368, 1372, 1379, 1387, 1397, 1442, 1512, 1513, 1514, 1519, 1716, 1812, 1899, 1911, 1929, 1931, 1959], "iterabledataset": [20, 1904], "__iter__": [20, 1875], "suitabl": [20, 29, 925, 1213, 1686, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1908, 1918, 1920, 1933, 1948], "improb": 20, "fetch": [20, 53, 54, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1664, 1924], "stream": [20, 23, 31, 38, 46, 53, 141, 476, 882, 896, 961, 962, 966, 968, 969, 970, 971, 974, 975, 976, 984, 987, 988, 1002, 1008, 1040, 1043, 1305, 1308, 1309, 1314, 1663, 1737, 1870, 1872, 1874, 1924, 1947, 1959], "databas": 20, "remot": [20, 23, 27, 31, 1607, 1917, 1924, 1925], "real": [20, 29, 54, 71, 675, 676, 677, 678, 679, 681, 687, 897, 909, 934, 949, 955, 1013, 1083, 1084, 1086, 1088, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1184, 1186, 1187, 1190, 1191, 1214, 1223, 1224, 1225, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1243, 1246, 1248, 1250, 1251, 1252, 1253, 1257, 1258, 1262, 1263, 1264, 1274, 1280, 1394, 1436, 1439, 1440, 1476, 1614, 1662, 1812, 1816, 1859, 1860, 1861, 1869, 1870, 1872, 1874, 1894, 1897, 1914, 1916, 1919, 1924, 1926, 1932, 1934, 1935, 1943, 1945, 1946, 1949, 1950, 1952, 1958], "replica": [20, 21, 23, 27, 38, 1364, 1607, 1898], "duplic": [20, 306, 310, 461, 533, 910, 919, 940, 1151, 1152, 1194, 1427, 1848, 1849, 1912, 1928], "yield": [20, 21, 44, 46, 54, 1055, 1057, 1194, 1240, 1241, 1427, 1865, 1874, 1875, 1881, 1917, 1919, 1929], "stochast": [20, 29, 1375, 1376, 1521, 1522, 1669, 1671, 1672, 1674, 1685, 1689, 1690, 1905, 1915], "decent": 20, "randomli": [20, 734, 735, 745, 753, 898, 1339, 1365, 1366, 1367, 1368, 1372, 1445, 1511, 1512, 1513, 1514, 1519, 1627, 1889, 1904, 1905], "permut": [20, 55, 63, 1067, 1240, 1241, 1260, 1283, 1285, 1730, 1870, 1872, 1888, 1914, 1921, 1932, 1934, 1952], "mini": [20, 768, 774, 1345, 1346, 1347, 1370, 1371, 1382, 1387, 1390, 1391, 1392, 1399, 1419, 1430, 1432, 1466, 1475, 1517, 1518, 1537, 1595, 1917], "neither": [20, 23, 784, 885, 888, 1050, 1110, 1433, 1474, 1654, 1837, 1899, 1908, 1924], "nor": [20, 23, 31, 46, 784, 888, 1229, 1230, 1257, 1433, 1474, 1607, 1654, 1714, 1816, 1899, 1912, 1946], "notion": [20, 897, 1345, 1346, 1347, 1390, 1391, 1392, 1466, 1950], "collat": 20, "minibatch": [20, 757, 758, 761, 762, 763, 1283, 1335, 1343, 1344, 1361, 1363, 1387, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1479, 1493, 1494, 1495, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1538, 1550, 1551, 1552, 1561, 1569, 1917], "loader": [20, 1915], "essenti": [20, 23, 28, 31, 54, 1283, 1888, 1897, 1911, 1928, 1942], "dummi": [20, 27, 1663, 1878, 1894, 1899, 1912, 1957, 1958], "infinit": [20, 1186, 1266, 1343, 1350, 1510, 1709, 1899, 1908, 1924, 1946], "drop": [20, 50, 52, 54, 1013, 1199, 1252, 1257, 1339, 1649, 1759, 1812, 1871, 1888, 1907, 1950, 1959], "roughli": [20, 1393, 1898, 1944, 1955, 1956], "dataset_it": 20, "pad": [20, 21, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 724, 727, 728, 729, 730, 731, 732, 757, 758, 761, 762, 763, 768, 771, 772, 774, 941, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1191, 1340, 1341, 1342, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1370, 1371, 1374, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1433, 1448, 1449, 1450, 1451, 1452, 1453, 1473, 1474, 1478, 1482, 1483, 1484, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1517, 1518, 1520, 1526, 1537, 1550, 1551, 1552, 1553, 1554, 1555, 1594, 1595, 1641, 1643, 1644, 1646, 1720, 1721, 1812, 1870, 1872, 1889, 1901, 1912, 1914, 1919, 1933, 1945, 1952], "length": [20, 21, 23, 25, 29, 251, 304, 306, 312, 342, 423, 424, 572, 573, 574, 724, 749, 803, 882, 896, 940, 984, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1120, 1135, 1168, 1191, 1209, 1213, 1326, 1327, 1345, 1350, 1355, 1364, 1371, 1374, 1379, 1395, 1397, 1433, 1442, 1470, 1478, 1501, 1502, 1503, 1510, 1518, 1537, 1576, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1722, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1796, 1798, 1799, 1800, 1802, 1803, 1812, 1837, 1862, 1872, 1874, 1881, 1888, 1889, 1895, 1901, 1928, 1935, 1945, 1947, 1952, 1957], "certain": [20, 21, 23, 37, 38, 51, 53, 54, 71, 675, 678, 724, 909, 921, 992, 1055, 1169, 1191, 1194, 1201, 1265, 1288, 1298, 1355, 1356, 1357, 1358, 1359, 1360, 1380, 1398, 1414, 1427, 1433, 1478, 1527, 1538, 1540, 1653, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1874, 1881, 1888, 1894, 1895, 1897, 1899, 1904, 1905, 1908, 1912, 1917, 1918, 1924, 1925, 1928, 1946, 1947, 1950, 1951, 1957], "cheaper": [20, 53], "bulk": [20, 1946], "arrai": [20, 31, 438, 749, 809, 810, 868, 869, 912, 930, 955, 959, 1067, 1111, 1119, 1120, 1128, 1129, 1265, 1295, 1374, 1379, 1380, 1397, 1398, 1520, 1737, 1744, 1764, 1798, 1799, 1800, 1802, 1803, 1830, 1837, 1845, 1856, 1871, 1875, 1897, 1905, 1928, 1930, 1934, 1935], "untouch": 20, "slightli": [20, 23, 29, 46, 1654, 1705, 1817, 1869, 1897, 1899, 1902, 1908, 1916], "default_col": 20, "consist": [20, 23, 25, 28, 29, 40, 41, 54, 897, 932, 933, 1194, 1223, 1229, 1230, 1232, 1234, 1235, 1236, 1237, 1261, 1263, 1427, 1474, 1616, 1619, 1668, 1715, 1816, 1871, 1874, 1881, 1888, 1889, 1900, 1905, 1907, 1909, 1912, 1915, 1918, 1928, 1943, 1944, 1951, 1957], "channel": [20, 49, 462, 463, 464, 768, 774, 797, 811, 814, 822, 834, 842, 1081, 1345, 1346, 1347, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1365, 1366, 1367, 1368, 1372, 1374, 1382, 1390, 1391, 1392, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1415, 1435, 1461, 1466, 1478, 1479, 1480, 1481, 1496, 1512, 1513, 1514, 1519, 1536, 1537, 1544, 1570, 1595, 1625, 1626, 1627, 1634, 1635, 1651, 1717, 1888, 1890, 1892, 1894, 1919, 1920, 1922, 1933], "class_index": 20, "namedtupl": [20, 44, 54, 885, 1046, 1047, 1139, 1194, 1205, 1215, 1235, 1285, 1291, 1294, 1296, 1299, 1323, 1335, 1427, 1705, 1715, 1789, 1816, 1834, 1839, 1871, 1873, 1874, 1919], "situat": [20, 29, 42, 54, 72, 74, 941, 955, 1619, 1886, 1899, 1900, 1907, 1908, 1916, 1919, 1926, 1945, 1946, 1947, 1958], "gil": [20, 23, 27, 1894, 1897, 1924], "integ": [20, 23, 29, 40, 44, 79, 280, 435, 437, 439, 488, 534, 549, 555, 674, 675, 676, 677, 678, 679, 755, 756, 774, 776, 854, 881, 909, 910, 919, 930, 954, 971, 973, 989, 995, 996, 1024, 1062, 1065, 1067, 1068, 1069, 1070, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1137, 1151, 1152, 1155, 1156, 1157, 1204, 1207, 1216, 1217, 1224, 1235, 1237, 1247, 1266, 1316, 1335, 1350, 1355, 1356, 1357, 1399, 1485, 1486, 1487, 1488, 1489, 1490, 1597, 1640, 1655, 1658, 1693, 1696, 1700, 1705, 1717, 1718, 1724, 1726, 1727, 1728, 1730, 1735, 1744, 1756, 1804, 1813, 1817, 1831, 1832, 1845, 1851, 1863, 1867, 1873, 1874, 1875, 1887, 1900, 1902, 1917, 1920, 1922, 1928, 1929, 1931, 1934, 1935, 1945, 1960], "descriptor": [20, 23, 1475, 1476, 1875, 1912], "parent": [20, 33, 38, 42, 46, 669, 777, 778, 806, 1427, 1886, 1911, 1916, 1926, 1933], "simplest": [20, 25, 31, 54, 847, 1340, 1341, 1342, 1355, 1356, 1357, 1420, 1421, 1422, 1617, 1898, 1899, 1905, 1919, 1926, 1928, 1947, 1950], "refcount": [20, 1886, 1907], "panda": 20, "pyarrow": 20, "13246": 20, "enumer": [20, 29, 44, 54, 1194, 1427, 1429, 1438, 1690, 1872, 1873, 1893, 1897, 1911, 1933, 1956], "get_worker_info": [20, 1924], "seed": [20, 79, 1005, 1014, 1015, 1035, 1170, 1286, 1307, 1705, 1722, 1817, 1854, 1870, 1872, 1901, 1907, 1909, 1923], "naiv": [20, 1917, 1942, 1945, 1947], "shut": [20, 1924], "garbag": [20, 1926], "subtleti": [20, 55, 1364, 1899, 1901], "multiprocess": [20, 21, 23, 24, 26, 31, 33, 41, 42, 1364, 1607, 1870, 1888, 1898, 1925], "unix": [20, 38, 969, 1886], "fork": [20, 38, 1212, 1607, 1874, 1896, 1897, 1901, 1904, 1907, 1911, 1923, 1924, 1926], "child": [20, 31, 33, 46, 780, 1194, 1427, 1626, 1886, 1905, 1911, 1926], "address": [20, 23, 40, 43, 51, 207, 897, 898, 976, 1881, 1886, 1897, 1924, 1925, 1942, 1959], "maco": [20, 23, 1886, 1906], "spawn": [20, 21, 24, 31, 32, 38, 42, 1197, 1607, 1870, 1893, 1898, 1907, 1911, 1925], "__name__": [20, 21, 23, 32, 33, 41, 1898, 1899, 1907, 1911, 1916, 1925], "__main__": [20, 21, 23, 32, 33, 41, 1895, 1898, 1907, 1911, 1925], "bytecod": [20, 669, 1880, 1916, 1943, 1944, 1947, 1950, 1957], "base_se": 20, "worker_id": [20, 42, 1909], "therebi": [20, 29, 1915, 1919], "mandatorili": 20, "faq": [20, 1364, 1643, 1870], "initial_se": [20, 79, 1870, 1909, 1923], "host": [20, 23, 31, 33, 39, 40, 41, 42, 187, 200, 569, 592, 866, 1194, 1427, 1607, 1619, 1653, 1897, 1917, 1924, 1925, 1930, 1942, 1946, 1959], "recogn": [20, 68, 1874, 1924, 1928, 1946], "simplecustombatch": 20, "transposed_data": 20, "zip": [20, 25, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1869, 1872, 1873, 1883, 1897, 1904, 1928], "tgt": [20, 1470, 1471, 1472], "collate_wrapp": 20, "float32": [20, 21, 44, 46, 55, 60, 63, 258, 569, 606, 808, 809, 810, 811, 814, 815, 869, 949, 1081, 1082, 1119, 1141, 1143, 1176, 1331, 1344, 1470, 1479, 1480, 1481, 1493, 1672, 1673, 1709, 1714, 1722, 1726, 1741, 1756, 1757, 1759, 1801, 1860, 1889, 1893, 1897, 1908, 1912, 1921, 1928, 1929, 1930, 1931, 1934, 1935, 1957, 1960], "tensordataset": 20, "batch_ndx": 20, "is_pin": [20, 1640, 1872, 1887, 1914, 1930], "multiprocessing_context": 20, "pin_memory_devic": 20, "reshuffl": 20, "draw": [20, 145, 911, 1030, 1317, 1722, 1933, 1955], "mutual": [20, 23, 31, 724, 1935], "subprocess": [20, 23, 38, 40, 42, 1901, 1907], "incomplet": [20, 890, 1876, 1929], "divis": [20, 572, 606, 676, 761, 762, 763, 935, 1062, 1112, 1115, 1204, 1237, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1382, 1394, 1418, 1436, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1562, 1735, 1804, 1831, 1874, 1893, 1897], "smaller": [20, 54, 488, 534, 959, 1397, 1607, 1699, 1714, 1759, 1804, 1897, 1910, 1916, 1943, 1959, 1960], "basecontext": 20, "randomsampl": 20, "prefetch": [20, 46], "unpickl": [20, 23, 1265, 1916], "practic": [20, 23, 29, 46, 1870, 1871, 1881, 1886, 1888, 1894, 1899, 1902, 1905, 1910, 1916, 1924, 1939, 1946, 1947], "len": [20, 23, 25, 54, 55, 60, 209, 534, 684, 685, 1086, 1090, 1093, 1097, 1100, 1104, 1134, 1198, 1260, 1281, 1293, 1322, 1325, 1364, 1564, 1625, 1627, 1643, 1690, 1697, 1801, 1804, 1810, 1811, 1815, 1856, 1857, 1858, 1871, 1872, 1874, 1899, 1914, 1928, 1933, 1956], "proper": [20, 31, 53, 54, 1058, 1754, 1873, 1894, 1897, 1899, 1907, 1911], "guess": 20, "trust": [20, 23, 1265, 1869, 1916], "inaccur": [20, 21, 1537], "kwd": 20, "__getitems__": 20, "speedup": [20, 21, 1433, 1474, 1939, 1942, 1950, 1954], "myiterabledataset": 20, "assert": [20, 21, 29, 44, 48, 50, 51, 52, 54, 55, 61, 63, 613, 900, 902, 903, 1125, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1192, 1197, 1198, 1203, 1576, 1664, 1862, 1873, 1875, 1899, 1900, 1905, 1910, 1916, 1919, 1935, 1945, 1956, 1957], "worker_info": 20, "iter_start": 20, "iter_end": 20, "per_work": 20, "ceil": [20, 168, 622, 623, 757, 758, 1340, 1341, 1342, 1395, 1396, 1420, 1421, 1422, 1493, 1494, 1495, 1550, 1551, 1552, 1720, 1721, 1744, 1872, 1887, 1897, 1914, 1928, 1952], "min": [20, 23, 33, 40, 44, 54, 107, 176, 177, 178, 179, 291, 684, 685, 686, 747, 759, 760, 769, 791, 808, 809, 810, 811, 814, 864, 936, 937, 1010, 1047, 1081, 1082, 1154, 1225, 1239, 1240, 1246, 1250, 1252, 1257, 1263, 1283, 1317, 1349, 1386, 1413, 1415, 1435, 1447, 1454, 1500, 1537, 1541, 1570, 1572, 1577, 1595, 1684, 1689, 1690, 1699, 1703, 1705, 1715, 1816, 1840, 1841, 1842, 1843, 1872, 1884, 1887, 1912, 1914, 1919, 1922, 1924, 1947, 1952, 1960], "mult": 20, "12": [20, 21, 23, 46, 312, 506, 606, 675, 730, 731, 732, 734, 735, 931, 935, 1065, 1083, 1157, 1198, 1213, 1230, 1252, 1335, 1351, 1359, 1374, 1375, 1376, 1424, 1439, 1440, 1461, 1470, 1478, 1521, 1522, 1562, 1567, 1568, 1615, 1648, 1704, 1715, 1764, 1779, 1789, 1831, 1847, 1863, 1869, 1871, 1872, 1875, 1881, 1897, 1906, 1910, 1912, 1914, 1928, 1935, 1944, 1954, 1955], "overall_start": 20, "overall_end": 20, "stackdataset": 20, "assembl": 20, "imagedataset": 20, "textdataset": 20, "tuple_stack": 20, "dict_stack": 20, "concatdataset": 20, "chaindataset": 20, "chain": [20, 21, 29, 53, 54, 141, 882, 931, 1249, 1371, 1455, 1687, 1700, 1874, 1894, 1897, 1899, 1902, 1905, 1915, 1956], "fly": [20, 1010, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1894], "whole": [20, 23, 25, 1135, 1194, 1427, 1455, 1466, 1607, 1862, 1894, 1898, 1907, 1908, 1916, 1946, 1948, 1950, 1953, 1954], "_util": [20, 1955], "collate_fn_map": 20, "registri": [20, 1666, 1870, 1910, 1912, 1913], "default_collate_fn_map": 20, "insert": [20, 23, 29, 46, 53, 54, 736, 781, 782, 850, 851, 1428, 1429, 1437, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1751, 1754, 1764, 1785, 1809, 1850, 1871, 1882, 1897, 1913, 1914, 1919, 1956], "collate_tensor_fn": 20, "custom_col": 20, "collate_map": 20, "outer": [20, 680, 890, 1067, 1125, 1129, 1134, 1140, 1872, 1874, 1914], "unchang": [20, 488, 502, 504, 724, 803, 1106, 1194, 1427, 1470, 1736, 1807, 1893, 1908, 1919], "byte": [20, 23, 29, 40, 233, 425, 547, 869, 975, 1016, 1018, 1020, 1022, 1120, 1193, 1265, 1302, 1303, 1664, 1675, 1747, 1873, 1874, 1875, 1887, 1910, 1916, 1928, 1930, 1959], "k": [20, 23, 25, 29, 41, 54, 277, 345, 495, 502, 504, 506, 579, 606, 749, 934, 1054, 1067, 1123, 1136, 1156, 1215, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1238, 1239, 1240, 1243, 1245, 1252, 1254, 1256, 1257, 1266, 1284, 1288, 1340, 1342, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1375, 1376, 1379, 1380, 1397, 1398, 1412, 1414, 1415, 1420, 1422, 1433, 1434, 1442, 1444, 1509, 1521, 1522, 1544, 1561, 1614, 1703, 1705, 1715, 1743, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1802, 1803, 1812, 1834, 1839, 1872, 1873, 1892, 1897, 1899, 1911, 1928, 1929, 1931, 1950, 1951, 1952, 1957], "v_i": [20, 1233], "v_1": 20, "v_2": 20, "v1_i": 20, "v2_i": 20, "v1_1": 20, "v1_2": 20, "v2_1": 20, "v2_2": 20, "elem": [20, 1872], "customtyp": 20, "collate_customtype_fn": 20, "custotyp": 20, "default_convert": 20, "np": [20, 929, 1062, 1067, 1107, 1108, 1109, 1566, 1709, 1900, 1909, 1912, 1933, 1934, 1935], "fraction": [20, 29, 1037, 1110, 1116, 1312, 1358, 1359, 1360, 1375, 1376, 1433, 1474, 1521, 1522, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1716, 1892, 1947], "workerinfo": [20, 1924], "random_split": 20, "floor": [20, 55, 57, 63, 262, 636, 637, 757, 758, 1062, 1112, 1204, 1340, 1341, 1342, 1395, 1396, 1420, 1421, 1422, 1493, 1494, 1495, 1550, 1551, 1552, 1720, 1721, 1735, 1744, 1812, 1872, 1874, 1887, 1907, 1910, 1914, 1928, 1952], "frac": [20, 29, 270, 368, 638, 639, 676, 749, 761, 762, 763, 854, 910, 919, 955, 959, 1062, 1112, 1147, 1151, 1152, 1213, 1225, 1229, 1230, 1233, 1245, 1257, 1264, 1280, 1335, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1365, 1374, 1379, 1380, 1381, 1382, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1412, 1414, 1415, 1416, 1417, 1420, 1421, 1422, 1430, 1431, 1432, 1434, 1442, 1444, 1445, 1457, 1459, 1460, 1462, 1463, 1465, 1466, 1467, 1478, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1546, 1562, 1564, 1566, 1576, 1578, 1582, 1584, 1586, 1587, 1670, 1671, 1674, 1676, 1682, 1689, 1690, 1719, 1731, 1734, 1746, 1767, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1795, 1810, 1811, 1812, 1816, 1837, 1857, 1858, 1872, 1887, 1892, 1894, 1902, 1914, 1928, 1929], "remaind": [20, 479, 1115, 1147, 1872, 1914, 1944, 1952], "robin": [20, 23], "generator1": 20, "manual_se": [20, 51, 79, 1870, 1872, 1887, 1905, 1907, 1909, 1912, 1914, 1923], "42": [20, 813, 919, 1316, 1771, 1897, 1905, 1944], "generator2": 20, "30": [20, 23, 29, 31, 40, 435, 606, 709, 717, 718, 745, 753, 1147, 1216, 1348, 1350, 1354, 1414, 1478, 1484, 1501, 1510, 1598, 1693, 1695, 1701, 1718, 1827, 1899, 1912, 1915, 1924, 1944], "data_sourc": 20, "accedingsequencelengthsampl": 20, "argsort": [20, 1827, 1872, 1900, 1914], "tolist": [20, 343, 1874, 1914, 1930], "accedingsequencelengthbatchsampl": 20, "sequentialsampl": 20, "num_sampl": [20, 411, 1317, 1872], "drawn": [20, 164, 249, 277, 1317, 1655, 1722, 1726, 1727, 1892, 1935, 1936], "subsetrandomsampl": 20, "weightedrandomsampl": 20, "probabl": [20, 46, 145, 749, 911, 1155, 1271, 1317, 1335, 1339, 1343, 1350, 1363, 1365, 1366, 1367, 1368, 1372, 1379, 1381, 1397, 1433, 1434, 1442, 1498, 1509, 1510, 1511, 1512, 1513, 1514, 1519, 1528, 1538, 1561, 1576, 1715, 1886, 1899, 1911, 1912, 1929, 1933, 1946, 1947, 1948, 1953], "row": [20, 21, 28, 29, 199, 304, 306, 312, 574, 577, 682, 688, 866, 890, 892, 929, 955, 959, 1050, 1080, 1108, 1109, 1129, 1135, 1156, 1215, 1241, 1249, 1252, 1257, 1281, 1283, 1291, 1293, 1294, 1296, 1299, 1317, 1323, 1324, 1325, 1517, 1518, 1566, 1614, 1653, 1713, 1716, 1736, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1815, 1834, 1837, 1841, 1843, 1856, 1862, 1864, 1872, 1902, 1928, 1933], "05": [20, 27, 54, 104, 335, 683, 701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 738, 740, 741, 742, 743, 897, 898, 933, 1081, 1183, 1209, 1210, 1280, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1470, 1472, 1474, 1496, 1527, 1536, 1540, 1607, 1688, 1694, 1695, 1701, 1773, 1774, 1779, 1871, 1872, 1915, 1925, 1935], "batchsampl": 20, "distributedsampl": [20, 1607], "num_replica": 20, "world_siz": [20, 21, 23, 24, 27, 31, 40, 41, 43, 46, 1607, 1898, 1917, 1924, 1925], "evenli": [20, 572, 573, 574, 684, 685, 1065, 1157, 1264, 1280, 1863], "set_epoch": 20, "is_distribut": [20, 1872, 1914], "start_epoch": 20, "n_epoch": 20, "vanilla": [21, 1881], "allreduc": [21, 23, 1607, 1897, 1898, 1914], "besid": [21, 23, 1662, 1897, 1898, 1933, 1943], "register_comm_hook": [21, 27, 46, 1607], "mainli": [21, 29, 816, 1350, 1510, 1937], "bucket": [21, 27, 28, 1335, 1607, 1872, 1898, 1914, 1947, 1957], "gradbucket": [21, 1607], "flatten": [21, 46, 54, 55, 61, 863, 864, 1056, 1156, 1250, 1263, 1478, 1654, 1662, 1668, 1716, 1732, 1737, 1742, 1847, 1848, 1849, 1872, 1887, 1888, 1892, 1912, 1914, 1921, 1932, 1945], "decompos": [21, 54, 1117, 1124, 1238, 1894, 1899, 1912, 1952], "get_per_parameter_tensor": 21, "wise": [21, 23, 29, 676, 677, 687, 747, 759, 760, 769, 773, 873, 953, 1067, 1072, 1113, 1114, 1137, 1138, 1150, 1159, 1216, 1218, 1275, 1276, 1277, 1278, 1282, 1292, 1295, 1297, 1328, 1349, 1360, 1367, 1369, 1383, 1384, 1385, 1386, 1388, 1413, 1416, 1426, 1435, 1445, 1446, 1447, 1454, 1456, 1457, 1458, 1463, 1465, 1467, 1468, 1500, 1515, 1524, 1525, 1529, 1530, 1531, 1532, 1535, 1539, 1541, 1546, 1556, 1557, 1570, 1571, 1572, 1577, 1578, 1579, 1580, 1584, 1586, 1587, 1588, 1796, 1864, 1896, 1899, 1928, 1929, 1932, 1954], "_distributed_c10d": [21, 23], "1d": [21, 28, 29, 46, 691, 694, 727, 730, 761, 771, 940, 955, 959, 1050, 1064, 1155, 1156, 1171, 1191, 1249, 1250, 1295, 1324, 1332, 1336, 1340, 1350, 1355, 1358, 1363, 1366, 1367, 1371, 1395, 1419, 1420, 1432, 1434, 1479, 1485, 1488, 1491, 1493, 1501, 1504, 1512, 1518, 1547, 1550, 1716, 1717, 1720, 1812, 1837, 1859], "is_last": 21, "set_buff": 21, "stateless": [21, 51, 1890, 1905], "ddp_comm_hook": [21, 27], "default_hook": 21, "allreduce_hook": 21, "process_group": [21, 24, 25, 27, 46, 1466, 1607], "aggreg": [21, 23, 25, 33, 46, 1371, 1518, 1607, 1630, 1884, 1917, 1947, 1957], "henc": [21, 27, 31, 39, 40, 43, 46, 53, 911, 1120, 1423, 1424, 1425, 1479, 1801, 1889, 1894, 1897, 1898, 1924, 1926, 1942], "unaffect": [21, 488, 489, 1381], "ddp_model": [21, 23, 1607, 1898], "fp16_compress_hook": 21, "compress": [21, 46, 199, 576, 577, 1089, 1090, 1099, 1100, 1607, 1798, 1799, 1800, 1802, 1803, 1836, 1870, 1954], "decompress": [21, 1869, 1883], "bf16_compress_hook": 21, "nccl": [21, 24, 25, 41, 46, 1607, 1903], "brain": [21, 1931, 1934], "wrapper": [21, 23, 28, 29, 46, 53, 54, 55, 613, 746, 779, 813, 965, 968, 970, 971, 973, 1040, 1042, 1113, 1114, 1133, 1194, 1305, 1364, 1871, 1873, 1874, 1884, 1886, 1897, 1898, 1912, 1917, 1942], "fp16_compress_wrapp": 21, "powersgdst": 21, "matrix_approximation_rank": 21, "start_powersgd_it": 21, "powersgd_hook": 21, "bf16_compress_wrapp": 21, "wikipedia": [21, 1563, 1894, 1902, 1960], "wiki": [21, 1960], "bfloat16_float": 21, "point_format": 21, "vogel": 21, "et": [21, 29, 46, 1350, 1439, 1440, 1475, 1476, 1685, 1780, 1817, 1892], "al": [21, 29, 46, 1350, 1439, 1440, 1475, 1476, 1685, 1780, 1817, 1892], "neurip": [21, 29], "2019": [21, 29, 1024], "bandwidth": [21, 23, 39, 41, 1919, 1924, 1949, 1951], "hyperparamet": [21, 46, 54, 1933], "1000": [21, 1082, 1087, 1113, 1114, 1335, 1370, 1476, 1717, 1744, 1764, 1830, 1894, 1910, 1912, 1933], "min_compression_r": 21, "use_error_feedback": 21, "warm_start": 21, "orthogonalization_epsilon": 21, "random_se": 21, "compression_stats_logging_frequ": 21, "batch_tensors_with_same_shap": 21, "tune": [21, 23, 27, 1024, 1230, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1894, 1897, 1906, 1919, 1957], "stronger": [21, 44, 55], "threshold": [21, 54, 1248, 1251, 1388, 1458, 1463, 1584, 1590, 1699, 1764, 1872, 1893, 1897, 1914, 1933], "exponenti": [21, 249, 1077, 1245, 1271, 1272, 1273, 1281, 1349, 1369, 1515, 1870, 1874, 1914, 1915, 1929, 1936], "grid": [21, 1087, 1295, 1491, 1526, 1872, 1897, 1933, 1952], "satisfactori": 21, "nlp": [21, 1390, 1391, 1392, 1399, 1947], "appendix": [21, 1870], "defer": [21, 46, 1897, 1917], "hybrid": [21, 46, 209, 532, 572, 573, 574, 576, 577, 1158], "scheme": [21, 40, 468, 791, 808, 809, 810, 811, 814, 816, 1905], "sensit": [21, 1388, 1458, 1912, 1916, 1925, 1946], "suboptim": [21, 1949], "trajectori": 21, "irrecover": 21, "impact": [21, 23, 68, 1024, 1759, 1882, 1884, 1894, 1919, 1932, 1947, 1953, 1957], "warm": [21, 27, 1013, 1689, 1690, 1897, 1918, 1942, 1947, 1955], "num_row": 21, "num_col": 21, "1e": [21, 54, 104, 335, 683, 701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 738, 740, 741, 742, 743, 744, 897, 898, 932, 933, 1183, 1209, 1210, 1260, 1345, 1346, 1347, 1362, 1381, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1413, 1436, 1441, 1466, 1470, 1472, 1474, 1475, 1496, 1508, 1523, 1527, 1528, 1536, 1540, 1562, 1565, 1569, 1592, 1615, 1648, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1686, 1699, 1707, 1760, 1871, 1872, 1899, 1905, 1912, 1915, 1929, 1935], "orthogon": [21, 1230, 1233, 1252, 1257, 1266, 1703, 1715, 1892, 1894, 1905, 1928], "div": [21, 227, 1063, 1112, 1115, 1335, 1439, 1440, 1735, 1844, 1872, 1878, 1887, 1914, 1928, 1931, 1952, 1956], "batch": [21, 23, 29, 41, 43, 46, 47, 48, 51, 52, 54, 55, 62, 63, 572, 573, 574, 576, 577, 675, 691, 692, 693, 694, 695, 696, 724, 749, 768, 774, 896, 897, 898, 909, 921, 922, 929, 932, 933, 934, 941, 967, 1055, 1057, 1067, 1128, 1129, 1135, 1191, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1263, 1266, 1274, 1283, 1284, 1288, 1343, 1344, 1345, 1346, 1347, 1350, 1355, 1356, 1361, 1363, 1364, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1379, 1380, 1381, 1382, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1418, 1419, 1430, 1431, 1432, 1433, 1434, 1436, 1439, 1440, 1441, 1442, 1444, 1458, 1459, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1491, 1496, 1498, 1499, 1509, 1510, 1512, 1513, 1514, 1517, 1518, 1519, 1520, 1523, 1536, 1537, 1538, 1561, 1569, 1576, 1594, 1595, 1598, 1607, 1614, 1640, 1641, 1643, 1644, 1646, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1690, 1691, 1697, 1703, 1705, 1715, 1719, 1798, 1799, 1800, 1802, 1803, 1807, 1812, 1816, 1817, 1836, 1839, 1840, 1842, 1859, 1862, 1870, 1887, 1888, 1889, 1893, 1897, 1900, 1901, 1905, 1907, 1917, 1919, 1924, 1928, 1933, 1934, 1945, 1946, 1947, 1951, 1955, 1957], "epsilon": [21, 54, 808, 809, 810, 811, 814, 854, 1248, 1251, 1345, 1346, 1347, 1362, 1382, 1390, 1391, 1392, 1399, 1436, 1466, 1508, 1562, 1615, 1648, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1719, 1872, 1929], "bucket_cap_mb": [21, 1607, 1898], "footprint": [21, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1912, 1928, 1954], "bottleneck": [21, 1870, 1905, 1949], "memor": 21, "compens": 21, "apex": 21, "uncompress": [21, 1928], "p": [21, 25, 29, 46, 54, 145, 225, 277, 415, 416, 443, 480, 481, 597, 675, 678, 909, 911, 921, 929, 1061, 1214, 1225, 1231, 1232, 1240, 1241, 1283, 1285, 1288, 1298, 1320, 1339, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1393, 1395, 1396, 1432, 1436, 1438, 1475, 1476, 1492, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1547, 1548, 1558, 1562, 1565, 1566, 1592, 1611, 1617, 1619, 1625, 1634, 1654, 1685, 1736, 1793, 1872, 1873, 1893, 1894, 1897, 1901, 1902, 1907, 1918, 1928, 1929, 1951, 1952], "pq": 21, "mq": [21, 1919, 1938], "tp": [21, 28], "awai": [21, 54, 944, 1526, 1870, 1888, 1894, 1900, 1945], "config": [21, 46, 54, 781, 782, 783, 784, 848, 850, 941, 1898, 1911, 1922, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1957], "comm": [21, 23, 1898], "handler": [21, 23, 33, 34, 1626, 1884, 1904, 1916, 1958], "batched_powersgd_hook": 21, "destroi": [21, 40, 1364, 1894, 1924], "squar": [21, 29, 540, 728, 729, 730, 731, 768, 774, 783, 959, 1054, 1056, 1191, 1225, 1227, 1229, 1230, 1231, 1234, 1235, 1239, 1241, 1243, 1245, 1247, 1251, 1253, 1254, 1256, 1257, 1261, 1274, 1283, 1333, 1337, 1341, 1342, 1356, 1357, 1359, 1360, 1375, 1376, 1388, 1396, 1418, 1421, 1422, 1425, 1458, 1470, 1493, 1502, 1505, 1521, 1522, 1526, 1535, 1537, 1557, 1580, 1595, 1614, 1670, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1746, 1805, 1839, 1856, 1872, 1914, 1928], "truncat": [21, 1112, 1759, 1845, 1889, 1892, 1901, 1908], "impli": [21, 40, 46, 1886, 1894, 1912, 1917, 1922, 1924, 1946], "debugging_hook": 21, "noop_hook": 21, "noop": [21, 1607], "headroom": 21, "desynchron": [21, 23], "trainer": [21, 31, 33, 38, 41, 42, 1607, 1924], "restart": [21, 31, 39, 41, 43, 1689, 1690, 1886, 1933, 1944], "__setstate__": 21, "__getstate__": 21, "reload": [21, 27, 46, 1869], "sy": [21, 32, 41, 43, 1869, 1897, 1916], "tempfil": 21, "mp": [21, 23, 24, 42, 1305, 1607, 1870, 1898, 1899, 1907, 1919, 1925, 1930, 1931, 1938], "simplemodel": 21, "24": [21, 23, 29, 914, 1252, 1415, 1491, 1647, 1715, 1759, 1832, 1871, 1892, 1896, 1929, 1944], "fc2": [21, 1598, 1917], "master_addr": [21, 23, 31, 41, 43, 1898, 1917, 1924, 1925], "localhost": [21, 23, 40, 41, 1898, 1917, 1924, 1925], "master_port": [21, 23, 31, 41, 43, 1898, 1917, 1924, 1925], "12355": 21, "init_process_group": [21, 23, 24, 27, 31, 41, 43, 1607, 1897, 1898, 1924], "cleanup": 21, "destroy_process_group": 21, "run_demo": 21, "demo_fn": 21, "nproc": [21, 23, 38, 39, 41, 1886, 1898, 1925], "demo_seri": 21, "gettempdir": 21, "device_id": [21, 23, 24, 27, 41, 46, 1265, 1364, 1466, 1591, 1607, 1898], "powersgd_st": 21, "lr": [21, 24, 27, 46, 1598, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1897, 1898, 1905, 1907, 1915, 1925, 1933], "001": [21, 897, 898, 1203, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1698, 1898, 1912], "comm_hook": 21, "comm_hook_st": 21, "barrier": [21, 31, 40, 1914], "map_loc": [21, 1198, 1201, 1265, 1607, 1869, 1883, 1916], "new_ddp_model": 21, "n_gpu": 21, "device_count": [21, 23, 1854, 1870], "got": [21, 23, 880, 1854, 1899, 1935], "thank": [21, 29, 1899, 1917], "author": [21, 40, 41, 46, 1135, 1682, 1722, 1862, 1893, 1944, 1947, 1949, 1953, 1954, 1957], "thij": 21, "par": 21, "home": [22, 1897], "brief": [23, 1607, 1886, 1924], "introduct": [23, 29, 1002, 1607, 1870, 1871, 1875, 1887, 1895, 1905, 1912, 1924, 1928, 1933], "mpi": [23, 1607], "gloo": [23, 41, 1607, 1898, 1903, 1924], "recv": [23, 1607, 1914, 1925], "broadcast": [23, 27, 29, 46, 51, 88, 187, 389, 391, 392, 393, 502, 504, 506, 555, 674, 675, 676, 677, 678, 679, 680, 686, 724, 873, 909, 914, 917, 921, 922, 923, 924, 954, 981, 1010, 1061, 1062, 1067, 1072, 1112, 1113, 1114, 1115, 1136, 1138, 1150, 1160, 1218, 1219, 1226, 1239, 1243, 1248, 1249, 1251, 1254, 1262, 1282, 1287, 1288, 1298, 1316, 1319, 1328, 1331, 1344, 1362, 1381, 1433, 1499, 1508, 1570, 1607, 1668, 1704, 1712, 1735, 1737, 1813, 1832, 1837, 1865, 1870, 1874, 1887, 1888, 1889, 1898, 1912, 1914, 1929, 1947, 1952], "all_reduc": [23, 42, 1607], "all_gath": 23, "scatter": [23, 27, 46, 502, 504, 506, 1364, 1851, 1872, 1901, 1914, 1924, 1952], "reduce_scatt": [23, 1914], "all_to_al": 23, "v1": [23, 46, 1262, 1704, 1869, 1898, 1924], "init_method": [23, 1607, 1924], "adher": [23, 1874, 1928], "some_fil": 23, "machine_nam": 23, "share_folder_nam": 23, "tcpstore": [23, 40], "past": [23, 54, 979, 1026, 1030, 1044, 1045, 1607, 1901, 1949, 1951, 1954], "ask": [23, 50, 51, 1869, 1870, 1900, 1902, 1939, 1959], "infiniband": [23, 1607, 1924], "interconnect": 23, "gpudirect": 23, "ethernet": 23, "ip": [23, 40], "ib": 23, "upcom": [23, 1893], "nccl_socket_ifnam": 23, "eth0": 23, "gloo_socket_ifnam": 23, "comma": [23, 1067, 1874, 1880], "eth1": 23, "eth2": 23, "eth3": 23, "imper": 23, "nccl_debug": 23, "info": [23, 31, 34, 38, 669, 881, 970, 971, 973, 1224, 1235, 1237, 1238, 1242, 1255, 1283, 1308, 1309, 1664, 1870, 1872, 1880, 1898, 1899, 1900, 1912, 1916, 1944, 1945, 1946, 1957], "nccl_debug_subsi": 23, "coll": 23, "hang": [23, 24, 27, 1607, 1898], "topologi": [23, 25, 28, 31], "effort": [23, 44, 1924, 1951], "socket": [23, 1886, 1924], "nccl_socket_nthread": 23, "nccl_nsocks_perthread": 23, "cloud": [23, 1928, 1933], "aw": [23, 32, 959], "gcp": [23, 1954], "primit": [23, 27, 40, 44, 1265, 1871, 1873, 1875, 1896, 1906, 1912, 1924, 1952], "kind": [23, 34, 44, 54, 669, 1213, 1608, 1667, 1714, 1779, 1869, 1878, 1899, 1907, 1912, 1916, 1919, 1929, 1931, 1950], "connect": [23, 31, 40, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408, 1455, 1886, 1924, 1955], "advantag": [23, 40, 41, 1344, 1388, 1898, 1901, 1924, 1928, 1942], "redund": [23, 46, 1083, 1084, 1086, 1088, 1102, 1104, 1812], "averag": [23, 27, 724, 755, 756, 757, 758, 810, 811, 906, 908, 959, 1030, 1044, 1194, 1332, 1333, 1334, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1361, 1363, 1371, 1381, 1387, 1393, 1394, 1395, 1396, 1400, 1401, 1402, 1418, 1419, 1427, 1430, 1431, 1432, 1433, 1434, 1441, 1458, 1459, 1466, 1475, 1485, 1486, 1487, 1493, 1494, 1495, 1498, 1499, 1509, 1523, 1538, 1547, 1548, 1561, 1569, 1607, 1669, 1670, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1837, 1870, 1898, 1918], "elimin": [23, 54, 599, 1848, 1849, 1909, 1949, 1956], "thrash": 23, "recurr": [23, 749, 750, 1209, 1350, 1364, 1379, 1380, 1397, 1442, 1617, 1643, 1683, 1870, 1897], "use_distribut": 23, "datetim": [23, 1884], "timedelta": [23, 40, 1884], "1800": 23, "group_nam": [23, 37], "pg_option": 23, "url": [23, 40, 905, 1869, 1883, 1924], "discov": [23, 1924], "encod": [23, 31, 37, 40, 46, 54, 1241, 1265, 1308, 1309, 1343, 1344, 1470, 1471, 1472, 1473, 1474, 1607, 1759, 1798, 1799, 1800, 1802, 1803, 1871, 1874, 1875, 1899, 1910, 1916, 1925, 1928], "ucc": 23, "lowercas": 23, "deadlock": [23, 1607], "job": [23, 31, 33, 34, 36, 37, 39, 40, 41, 42, 1607, 1691, 1697, 1897, 1904, 1918, 1933, 1959], "exchang": [23, 40, 971, 1055, 1897, 1912], "nccl_blocking_wait": 23, "nccl_async_error_handl": [23, 1897], "throw": [23, 24, 28, 53, 54, 181, 314, 319, 534, 603, 1179, 1194, 1234, 1283, 1427, 1607, 1609, 1610, 1643, 1654, 1711, 1851, 1889, 1894, 1909, 1924, 1934, 1947, 1957], "abort": [23, 1897], "crash": [23, 33, 40, 1230, 1886, 1894, 1924, 1926, 1933], "caught": [23, 1607, 1886], "littl": [23, 1899, 1926, 1950], "watch": [23, 1944], "dog": 23, "deprec": [23, 31, 40, 41, 46, 50, 397, 502, 546, 592, 774, 775, 776, 782, 815, 896, 897, 931, 932, 1017, 1021, 1140, 1194, 1248, 1251, 1283, 1284, 1343, 1344, 1361, 1363, 1386, 1387, 1393, 1394, 1418, 1419, 1427, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1480, 1481, 1498, 1499, 1509, 1538, 1561, 1569, 1595, 1596, 1597, 1599, 1607, 1648, 1649, 1651, 1654, 1715, 1731, 1812, 1816, 1839, 1870, 1871, 1876, 1886, 1895, 1918, 1922, 1930, 1934, 1935, 1947], "processgroupopt": 23, "processgroupnccl": [23, 1898], "is_high_priority_stream": 23, "backend_nam": [23, 1854], "custom_backend": 23, "is_initi": [23, 1870], "is_mpi_avail": 23, "is_nccl_avail": 23, "is_gloo_avail": 23, "is_torchelastic_launch": 23, "elast": [23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 1870], "aka": [23, 55, 62, 63, 906, 1388, 1894, 1931, 1945], "torchelast": [23, 26, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43], "torchelastic_run_id": [23, 41], "proxi": [23, 25, 1919, 1924, 1950], "rendezv": [23, 26, 31, 37, 39, 43, 1898, 1924], "null": [23, 32, 34, 37, 55, 59], "discoveri": [23, 40, 1897, 1916], "reachabl": 23, "multicast": 23, "20": [23, 27, 29, 312, 674, 709, 717, 718, 723, 727, 728, 729, 730, 731, 732, 735, 745, 749, 750, 751, 752, 753, 754, 761, 1147, 1192, 1195, 1205, 1216, 1250, 1316, 1339, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1350, 1354, 1355, 1356, 1357, 1359, 1360, 1365, 1366, 1367, 1368, 1372, 1375, 1376, 1379, 1380, 1382, 1389, 1390, 1391, 1392, 1395, 1396, 1397, 1398, 1399, 1414, 1420, 1421, 1422, 1424, 1425, 1427, 1442, 1444, 1455, 1463, 1466, 1469, 1470, 1471, 1472, 1484, 1501, 1503, 1504, 1506, 1510, 1521, 1522, 1528, 1584, 1614, 1615, 1639, 1648, 1651, 1660, 1675, 1690, 1718, 1827, 1871, 1872, 1889, 1898, 1899, 1908, 1915, 1924, 1928, 1944, 1946, 1950], "23456": 23, "clean": [23, 31, 54, 948, 1006, 1869, 1886, 1916], "fcntl": 23, "nf": 23, "init": [23, 31, 33, 46, 1194, 1427, 1435, 1454, 1647, 1870, 1876, 1894, 1899, 1904, 1905, 1945], "brand": [23, 1899], "succe": [23, 28, 40, 44, 51, 1897, 1899, 1911, 1957, 1959], "unexpect": [23, 30, 54, 967, 1118, 1120, 1123, 1194, 1427, 1649, 1668, 1807, 1871, 1894, 1899, 1908, 1946, 1947, 1950], "unsuccess": 23, "mnt": 23, "sharedfil": 23, "port": [23, 31, 39, 40, 41, 1903], "backend_str": 23, "uppercas": 23, "classmethod": [23, 40, 55, 57, 721, 727, 728, 729, 734, 735, 745, 753, 781, 782, 783, 804, 805, 806, 813, 843, 970, 1370, 1371, 1466, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1664, 1874, 1875, 1899, 1919, 1924, 1930, 1958], "register_backend": [23, 1924, 1943], "extended_api": 23, "instanti": [23, 27, 39, 40, 41, 46, 54, 830, 1371, 1518, 1616, 1640, 1647, 1869, 1871, 1873, 1874, 1897, 1899, 1905, 1912, 1930], "3rd": [23, 29, 40, 606, 1699, 1895], "processgroup": [23, 25, 27, 46, 1607], "four": [23, 1239, 1356, 1899, 1902, 1924, 1926], "c10d": [23, 31, 39, 41, 43, 1607, 1898, 1914], "distributedbackendopt": 23, "get_backend": [23, 40], "get_rank": [23, 46, 1466], "uniqu": [23, 31, 37, 40, 41, 42, 502, 506, 1185, 1229, 1230, 1234, 1240, 1241, 1243, 1252, 1254, 1256, 1257, 1294, 1301, 1793, 1816, 1849, 1869, 1871, 1880, 1883, 1899, 1916, 1918, 1924, 1925, 1926, 1928, 1933, 1942, 1959], "get_world_s": 23, "filestor": [23, 40], "hashstor": 23, "client": [23, 27, 40, 1024, 1916, 1947], "host_nam": 23, "hostnam": [23, 31, 40, 1918], "listen": 23, "is_mast": 23, "300": [23, 31, 1271, 1344, 1644, 1646, 1915], "wait_for_work": 23, "multi_ten": 23, "underli": [23, 25, 27, 29, 31, 44, 46, 51, 54, 88, 302, 317, 368, 391, 393, 463, 464, 465, 466, 473, 488, 509, 513, 546, 547, 548, 602, 737, 746, 867, 970, 1164, 1168, 1194, 1265, 1326, 1569, 1733, 1836, 1850, 1871, 1874, 1889, 1897, 1901, 1903, 1917, 1924, 1930, 1932, 1939, 1946, 1950], "tcpserver": 23, "master_listen_fd": 23, "server_stor": 23, "127": [23, 783, 1888, 1919, 1933], "1234": [23, 40, 1171], "client_stor": 23, "first_kei": 23, "first_valu": 23, "hashmap": 23, "file_nam": [23, 1869, 1883, 1916], "store1": 23, "store2": 23, "prefixstor": 23, "old": [23, 30, 54, 843, 1118, 1367, 1651, 1659, 1699, 1747, 1868, 1870, 1871, 1894, 1897, 1899, 1911, 1919, 1933, 1946, 1950], "whose": [23, 29, 44, 46, 54, 533, 848, 884, 931, 954, 1055, 1067, 1072, 1120, 1138, 1147, 1150, 1156, 1194, 1210, 1218, 1264, 1280, 1282, 1328, 1427, 1607, 1655, 1709, 1767, 1833, 1874, 1894, 1899, 1902, 1916, 1928, 1933, 1935, 1945, 1957], "quantiti": [23, 47, 52, 1229, 1230, 1257, 1393, 1624, 1625, 1627, 1628, 1630, 1633, 1634, 1635, 1636, 1699, 1900, 1902], "compare_set": 23, "arg2": 23, "expected_valu": 23, "desired_valu": 23, "second_valu": 23, "overload": [23, 54, 606, 1666, 1873, 1874, 1878, 1913], "bad_kei": 23, "num_kei": 23, "written": [23, 33, 51, 905, 1026, 1364, 1663, 1685, 1871, 1873, 1881, 1882, 1894, 1898, 1899, 1900, 1905, 1910, 1912, 1916, 1918, 1930, 1933, 1939, 1945, 1949, 1951, 1956, 1957], "destruct": [23, 1884, 1924, 1926], "delete_kei": 23, "successfulli": [23, 31, 37, 1200, 1760, 1886, 1905, 1910, 1924, 1957], "set_timeout": 23, "grain": [23, 847, 850, 1576, 1894, 1912, 1928, 1939, 1949, 1957], "plai": 23, "new_group": [23, 46, 1466], "opaqu": [23, 30, 968, 1002, 1003, 1118, 1953], "pattern": [23, 25, 781, 782, 783, 785, 843, 850, 1010, 1364, 1643, 1794, 1871, 1874, 1894, 1897, 1899, 1901, 1903, 1910, 1920, 1921, 1928, 1942, 1945, 1946, 1956, 1959], "use_local_synchron": 23, "enqueu": [23, 53, 971, 973, 974, 1897, 1925], "significantli": [23, 46, 891, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1759, 1928, 1943], "taken": [23, 29, 53, 54, 55, 60, 854, 1088, 1090, 1113, 1114, 1350, 1363, 1371, 1434, 1510, 1518, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1764, 1796, 1892, 1894, 1896, 1897, 1899, 1901, 1904, 1910, 1912, 1916, 1918, 1957, 1959], "get_group_rank": 23, "global_rank": [23, 31], "translat": [23, 76, 77, 1147, 1894, 1926, 1950], "get_global_rank": 23, "group_rank": [23, 31, 41], "get_process_group_rank": 23, "dst": [23, 1869, 1916], "destin": [23, 25, 34, 37, 46, 200, 406, 407, 592, 982, 983, 1136, 1194, 1300, 1301, 1427, 1662, 1663, 1872, 1924, 1925, 1930], "unspecifi": [23, 471, 809, 810, 811, 814, 897, 898, 1460, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1795, 1881, 1928, 1933], "sender": [23, 1926], "isend": 23, "irecv": 23, "is_complet": 23, "finish": [23, 25, 31, 37, 38, 40, 42, 53, 1124, 1897, 1898, 1911, 1918, 1924, 1926, 1959], "batch_isend_irecv": 23, "p2p_op_list": 23, "p2pop": 23, "op_list": 23, "send_tensor": 23, "recv_tensor": 23, "send_op": 23, "recv_op": 23, "req": 23, "pg": [23, 1607], "set_devic": [23, 25, 46, 1607, 1755, 1870, 1924, 1931], "p2p": [23, 40], "async_op": 23, "onto": [23, 46, 54, 55, 57, 1029, 1201, 1204, 1265, 1619, 1852, 1869, 1886, 1897, 1900, 1901, 1905, 1918, 1950, 1956, 1959], "get_futur": [23, 1607], "regard": [23, 1358, 1359, 1360, 1370, 1371, 1517, 1518, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1871, 1926, 1928, 1951], "add_": [23, 44, 49, 51, 212, 1124, 1872, 1887, 1895, 1928], "101": [23, 1335], "overwrot": 23, "sent": [23, 25, 1006, 1874, 1886, 1907, 1924, 1925, 1926], "broadcast_object_list": 23, "object_list": 23, "picklabl": [23, 1194, 1427, 1916], "current_devic": [23, 25, 46, 979, 987, 988, 995, 996, 1012, 1016, 1018, 1019, 1020, 1022, 1024, 1025, 1026, 1030, 1031, 1032, 1033, 1043, 1044, 1045, 1854, 1870, 1931], "insecur": [23, 1265], "malici": [23, 1265, 1916], "ineffici": [23, 46, 1897, 1919], "redoptyp": 23, "bitwis": [23, 913, 915, 916, 918, 1875, 1908, 1920, 1936], "reduceop": 23, "int64": [23, 71, 182, 199, 304, 312, 384, 854, 912, 925, 1068, 1081, 1082, 1119, 1509, 1640, 1726, 1730, 1731, 1751, 1798, 1799, 1800, 1802, 1803, 1897, 1928, 1930, 1931, 1934, 1960], "1j": [23, 687, 952, 953, 1190, 1739, 1740, 1859, 1894, 1902, 1910], "2j": [23, 687, 952, 953, 1739, 1740, 1767, 1859, 1894], "tensor_list": [23, 1889], "all_gather_into_tensor": 23, "output_tensor": 23, "input_tensor": [23, 1949], "accommod": [23, 1423, 1424, 1425], "ii": [23, 955, 1067, 1397, 1398], "tensor_in": 23, "tensor_out": 23, "tensor_out2": 23, "all_gather_object": 23, "obj": [23, 54, 869, 991, 1180, 1181, 1200, 1205, 1747, 1855, 1872, 1910, 1911, 1916], "pickabl": 23, "popul": [23, 29, 38, 46, 53, 54, 326, 484, 492, 493, 1294, 1323, 1897, 1899, 1946, 1956], "responsibl": 23, "gather_object": 23, "gather_list": 23, "object_gather_list": 23, "scatter_list": 23, "tensor_s": 23, "t_one": 23, "t_five": 23, "scatter_object_list": 23, "scatter_object_output_list": 23, "scatter_object_input_list": 23, "output_list": 23, "input_list": 23, "reduce_scatter_tensor": 23, "Its": [23, 54, 959, 982, 1194, 1241, 1259, 1260, 1285, 1427, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1859, 1874, 1898], "all_to_all_singl": 23, "output_split_s": 23, "input_split_s": 23, "dim": [23, 28, 29, 44, 51, 52, 54, 55, 62, 63, 103, 105, 106, 107, 109, 125, 126, 127, 175, 195, 198, 201, 202, 203, 204, 205, 206, 220, 224, 251, 255, 272, 303, 304, 305, 306, 307, 308, 312, 313, 345, 371, 383, 398, 400, 401, 402, 405, 419, 420, 421, 422, 426, 427, 443, 452, 460, 469, 480, 481, 483, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 526, 527, 530, 531, 533, 536, 541, 542, 544, 549, 554, 562, 567, 568, 572, 573, 574, 576, 577, 579, 594, 595, 598, 599, 600, 601, 604, 606, 682, 684, 685, 686, 688, 863, 864, 865, 892, 893, 895, 928, 935, 950, 958, 967, 982, 984, 1046, 1047, 1048, 1049, 1050, 1059, 1065, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1125, 1135, 1136, 1147, 1157, 1165, 1166, 1167, 1168, 1171, 1215, 1225, 1226, 1246, 1250, 1260, 1262, 1263, 1273, 1281, 1291, 1293, 1294, 1296, 1299, 1301, 1315, 1322, 1323, 1324, 1325, 1326, 1327, 1335, 1362, 1363, 1364, 1367, 1371, 1373, 1378, 1393, 1398, 1417, 1433, 1434, 1435, 1460, 1462, 1474, 1476, 1477, 1508, 1509, 1525, 1528, 1537, 1545, 1550, 1551, 1552, 1561, 1562, 1564, 1566, 1570, 1576, 1582, 1583, 1591, 1607, 1615, 1621, 1625, 1627, 1634, 1635, 1648, 1651, 1654, 1706, 1713, 1716, 1736, 1737, 1742, 1743, 1748, 1749, 1750, 1753, 1754, 1785, 1788, 1789, 1792, 1795, 1797, 1804, 1807, 1809, 1810, 1811, 1812, 1815, 1827, 1831, 1832, 1833, 1834, 1837, 1838, 1846, 1847, 1848, 1849, 1850, 1857, 1858, 1862, 1863, 1870, 1871, 1872, 1888, 1889, 1900, 1901, 1910, 1912, 1914, 1928, 1929, 1931, 1937, 1945, 1952], "13": [23, 864, 935, 1065, 1068, 1112, 1147, 1157, 1198, 1283, 1351, 1375, 1376, 1424, 1461, 1521, 1522, 1789, 1831, 1863, 1871, 1875, 1914, 1928, 1944, 1951, 1957], "14": [23, 55, 62, 63, 312, 506, 934, 1010, 1011, 1050, 1065, 1157, 1246, 1252, 1321, 1351, 1424, 1715, 1722, 1789, 1831, 1832, 1837, 1863, 1871, 1875, 1914, 1928, 1932, 1933, 1944], "15": [23, 54, 606, 1065, 1137, 1147, 1157, 1216, 1230, 1351, 1424, 1425, 1644, 1646, 1707, 1780, 1789, 1835, 1863, 1871, 1872, 1875, 1912, 1928], "uneven": [23, 24, 27, 1607], "18": [23, 312, 435, 674, 1068, 1147, 1191, 1266, 1424, 1666, 1871, 1912, 1914, 1928, 1944], "21": [23, 29, 674, 931, 1050, 1252, 1715, 1837, 1871, 1928], "22": [23, 29, 312, 606, 1266, 1598, 1644, 1646, 1871, 1909, 1928, 1944], "23": [23, 502, 1266, 1775, 1871, 1928, 1957], "31": [23, 917, 1342, 1422, 1598, 1775, 1912], "33": [23, 727, 728, 729, 730, 731, 732, 761, 1194, 1355, 1356, 1357, 1359, 1360, 1425, 1427, 1501, 1503, 1504, 1506, 1871, 1912], "34": [23, 1944, 1950, 1957], "35": [23, 1252, 1346, 1347, 1391, 1392, 1466, 1715], "36": [23, 312, 1110, 1147, 1944, 1950], "input_split": 23, "output_split": 23, "5j": 23, "6j": 23, "7j": 23, "8j": 23, "9j": 23, "10j": 23, "11j": 23, "12j": 23, "13j": 23, "14j": 23, "15j": 23, "16j": 23, "output_tensor_list": 23, "input_tensor_list": 23, "monitored_barri": [23, 1914], "wait_all_rank": 23, "band": 23, "bor": 23, "bxor": 23, "premul_sum": 23, "suppos": [23, 54, 1191, 1700, 1881, 1928, 1946, 1947, 1948], "_make_nccl_premul_sum": 23, "all_reduce_multigpu": 23, "__members__": 23, "reduce_op": 23, "mention": [23, 1869, 1873, 1874, 1888, 1894, 1897, 1905, 1912, 1928, 1932, 1939, 1950, 1951, 1957], "revisit": 23, "broadcast_multigpu": 23, "reduce_multigpu": 23, "all_gather_multigpu": 23, "reduce_scatter_multigpu": 23, "distributed_test": 23, "dev_idx": 23, "src_tensor": 23, "resid": [23, 46, 53, 187, 280, 328, 1265, 1607, 1897, 1917, 1924], "dst_tensor": 23, "cpp_extens": [23, 1870, 1899], "cpp_c10d_extens": 23, "torchrun": [23, 26, 32, 39, 43], "benefici": [23, 1905], "nproc_per_nod": [23, 32], "num_gpus_you_hav": 23, "your_training_script": [23, 39, 41], "arg3": 23, "192": [23, 606, 1912], "168": 23, "nnode": [23, 39, 41], "offer": [23, 46, 49, 1607, 1851, 1897, 1903, 1916, 1924, 1928, 1943, 1947, 1952], "local_process_rank": 23, "local_rank": [23, 31, 33, 38, 41, 43, 1466], "argpars": [23, 41, 1897], "parser": [23, 41, 1897], "argumentpars": [23, 41, 1897], "add_argu": [23, 41, 1897], "parse_arg": [23, 32, 41, 43, 1897, 1912], "output_devic": [23, 27, 41, 1364, 1466, 1591, 1607], "adjust": [23, 25, 27, 29, 46, 1870, 1896, 1920, 1959], "launcher": [23, 41], "filesystem": [23, 25, 969, 1869, 1916], "12042": 23, "imagenet": [23, 1892], "inconsist": [23, 46, 854, 1731, 1899], "suit": [23, 1871, 1873, 1874, 1912, 1920, 1924, 1954], "group_gloo": 23, "29501": 23, "monitoredbarri": 23, "transport": [23, 1924], "598": 23, "2401": 23, "db00": 23, "eef0": 23, "1100": 23, "3560": 23, "1c05": 23, "25d": 23, "8594": 23, "torch_cpp_log_level": 23, "twolinlayernet": 23, "ddp": [23, 24, 25, 27, 28, 46, 1466, 1607, 1870, 1897, 1898, 1924, 1947], "i0607": 23, "739390": 23, "515217": 23, "logger": [23, 1937, 1938], "173": 23, "broadcast_buff": [23, 1607], "bucket_cap_byt": 23, "26214400": 23, "find_unused_paramet": [23, 1607, 1898], "gradient_as_bucket_view": [23, 1607], "is_multi_device_modul": 23, "num_parameter_tensor": 23, "total_parameter_size_byt": 23, "440": 23, "bucket_s": 23, "cuda_visible_devic": [23, 1036, 1607, 1897], "module_nam": [23, 54, 806, 843, 1916], "nccl_ib_timeout": 23, "nccl_nthread": 23, "58": [23, 1951], "085681": 23, "544067": 23, "344": 23, "unused_parameter_s": 23, "40838608": 23, "5983335": 23, "4326421": 23, "comp": [23, 29], "4207652": 23, "085693": 23, "544066": 23, "42850427": 23, "3885553": 23, "2357981": 23, "2234674": 23, "enhanc": [23, 46, 1607, 1945], "unus": [23, 27, 54, 896, 1006, 1020, 1199, 1205, 1389, 1607, 1668, 1871, 1873, 1874, 1897, 1898, 1903, 1916], "constraint": [23, 28, 44, 46, 783, 784, 891, 1002, 1013, 1129, 1607, 1615, 1640, 1686, 1870, 1874, 1889, 1900, 1902, 1905, 1928, 1942, 1945], "went": [23, 54], "wasn": [23, 1265, 1871], "va": 23, "lue": 23, "indirectli": 23, "outstand": [23, 1924], "stuck": [23, 31, 42], "uninform": 23, "root": [23, 25, 33, 40, 41, 44, 46, 54, 782, 1132, 1231, 1232, 1683, 1746, 1805, 1882, 1894, 1916, 1924, 1925, 1928, 1947], "nontrivi": [23, 1897, 1945], "reveal": [23, 1898], "default_pg": 23, "opt": [23, 27, 1205, 1687, 1688, 1694, 1698, 1700, 1871, 1902, 1945], "longtensor": [23, 125, 126, 127, 306, 308, 310, 442, 461, 502, 504, 506, 863, 864, 1136, 1168, 1215, 1317, 1370, 1371, 1430, 1517, 1518, 1563, 1653, 1751, 1789, 1801, 1826, 1834, 1865, 1931, 1934], "set_debug_level": 23, "set_debug_level_from_env": 23, "get_debug_level": 23, "torch_show_cpp_stacktrac": 23, "distbackenderror": 23, "thrown": [23, 28, 53, 606, 867, 869, 1024, 1065, 1157, 1194, 1224, 1233, 1235, 1237, 1240, 1241, 1252, 1427, 1611, 1665, 1863, 1916, 1950], "outlin": [24, 1917, 1925, 1947], "joinabl": [24, 27, 1607, 1870], "joinhook": [24, 1870], "throw_on_early_termin": [24, 1607], "shadow": [24, 27, 1607, 1937, 1938], "notify_join_context": 24, "zeroredundancyoptim": [24, 27, 1607, 1870], "01": [24, 27, 42, 744, 769, 810, 811, 1068, 1110, 1413, 1541, 1542, 1598, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1717, 1771, 1773, 1774, 1779, 1780, 1872, 1892, 1904, 1912, 1915, 1952], "yet": [24, 31, 46, 51, 53, 54, 67, 69, 70, 970, 1041, 1197, 1199, 1211, 1299, 1607, 1621, 1625, 1627, 1672, 1673, 1870, 1873, 1874, 1880, 1888, 1889, 1897, 1912, 1914, 1919, 1924, 1926, 1928, 1929, 1931, 1942, 1946, 1947, 1950, 1953, 1957], "vacuou": 24, "inherit": [24, 1632, 1871, 1873, 1889, 1899, 1905, 1907], "join_hook": [24, 27, 1607], "join_devic": 24, "join_process_group": 24, "repeatedli": [24, 1897, 1928], "main_hook": 24, "post_hook": 24, "is_last_join": 24, "dcp": 25, "reshard": [25, 28, 46], "storag": [25, 46, 212, 302, 330, 333, 334, 425, 448, 473, 488, 509, 513, 547, 548, 573, 574, 576, 577, 867, 884, 886, 991, 1058, 1164, 1168, 1180, 1194, 1201, 1265, 1287, 1326, 1327, 1364, 1427, 1733, 1747, 1754, 1785, 1790, 1793, 1807, 1830, 1836, 1852, 1869, 1870, 1872, 1883, 1886, 1894, 1897, 1907, 1910, 1916, 1924, 1928, 1931, 1932, 1934, 1942, 1946], "entrypoint": [25, 28, 31, 33, 38, 41, 1886], "storage_read": 25, "coordinator_rank": 25, "no_dist": 25, "planner": 25, "spmd": 25, "style": [25, 28, 30, 54, 866, 1062, 1118, 1653, 1871, 1873, 1874, 1912, 1916, 1933, 1948], "fullfil": 25, "shardedtensor": [25, 46], "po": [25, 1912], "storageread": [25, 1870], "rank0": [25, 46], "my_model": [25, 1607, 1871, 1912, 1942, 1947, 1957], "mymodul": [25, 46, 54, 1198, 1199, 1200, 1204, 1205, 1211, 1428, 1429, 1437, 1438, 1871, 1873, 1874, 1901, 1910, 1924], "adagrad": [25, 1370, 1881, 1915, 1924], "model_state_dict": [25, 1662, 1912], "fs_storage_read": 25, "filesystemread": [25, 1870], "save_state_dict": [25, 1870], "storage_writ": 25, "fsdp": [25, 28, 46, 1870, 1947], "shardingstrategi": [25, 46, 1870], "hybrid_shard": [25, 46], "shard_group": 25, "storagewrit": [25, 1870], "fs_storage_writ": 25, "filesystemwrit": [25, 1870], "act": [25, 29, 31, 38, 51, 847, 1344, 1428, 1429, 1438, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1637, 1851, 1897, 1905, 1909, 1915, 1950], "told": [25, 1873], "role": [25, 31, 32, 40, 41, 1950], "read_metadata": 25, "set_up_storage_read": 25, "prepare_local_plan": 25, "prepare_global_plan": 25, "read_data": 25, "central": [25, 55, 1147, 1902, 1904], "loadplan": [25, 1870], "storage_data": 25, "loadplann": [25, 1870], "load_byt": 25, "bytesio": [25, 1201, 1204, 1265, 1747, 1912, 1919], "resolve_tensor": 25, "storagelay": 25, "schedul": [25, 31, 33, 39, 53, 669, 1683, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1880, 1898, 1904, 1918, 1947], "is_coordin": 25, "set_up_storage_writ": 25, "write_data": 25, "mark": [25, 40, 53, 54, 55, 60, 63, 815, 886, 887, 944, 1308, 1309, 1607, 1667, 1871, 1873, 1894, 1898, 1899, 1905, 1910, 1916, 1918, 1925, 1934, 1939, 1947, 1948], "recover": 25, "writeresult": 25, "saveplan": [25, 1870], "saveplann": [25, 1870], "resolve_data": 25, "assumpt": [25, 37, 41, 44, 897, 944, 1350, 1381, 1894, 1898, 1902, 1924, 1925, 1928, 1945, 1947, 1953, 1957], "writeitem": [25, 1870], "tensor_data": 25, "set_up_plann": 25, "create_local_plan": 25, "create_global_plan": 25, "commit_tensor": 25, "defaultloadplann": [25, 1870], "rewrit": [25, 44, 51, 55, 57, 62, 63, 69, 70, 1882, 1894, 1902, 1912, 1944], "requit": 25, "intrincaci": 25, "renameplann": 25, "original_state_dict": 25, "foo_": [25, 1124], "v": [25, 37, 44, 50, 54, 477, 533, 884, 891, 893, 894, 895, 925, 1123, 1133, 1135, 1191, 1207, 1229, 1233, 1257, 1261, 1266, 1433, 1475, 1476, 1517, 1562, 1646, 1651, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1705, 1738, 1797, 1801, 1816, 1817, 1862, 1870, 1871, 1872, 1873, 1874, 1884, 1894, 1902, 1911, 1916, 1928, 1933, 1941], "read_item": 25, "dest_index": 25, "fqn": [25, 28, 44, 1938], "metamodelmateri": 25, "defaultsaveplann": [25, 1870], "empty_lik": [25, 1851, 1872, 1876, 1887, 1889, 1914, 1928], "global_plan": 25, "finish_plan": 25, "central_plan": 25, "alia": [25, 29, 34, 82, 83, 102, 178, 179, 344, 397, 426, 427, 434, 512, 530, 671, 855, 856, 857, 858, 859, 860, 861, 878, 937, 950, 951, 1053, 1060, 1063, 1074, 1075, 1076, 1078, 1079, 1105, 1140, 1148, 1149, 1161, 1162, 1163, 1172, 1192, 1194, 1220, 1221, 1228, 1244, 1248, 1251, 1279, 1289, 1290, 1300, 1318, 1320, 1330, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1427, 1537, 1610, 1640, 1656, 1702, 1707, 1710, 1745, 1768, 1783, 1786, 1788, 1814, 1818, 1819, 1838, 1844, 1866, 1874, 1899, 1914, 1929, 1930, 1934, 1946, 1952], "readitem": [25, 1870], "planner_data": 25, "loaditemtyp": 25, "metadataindex": 25, "dest_offset": 25, "storage_index": 25, "storage_offset": [25, 129, 509, 606, 867, 1872, 1914, 1952], "tandem": 25, "fp16planner": 25, "write_item": 25, "writeitemtyp": 25, "byte_io": 25, "itertool": [25, 29, 927, 940], "islic": 25, "dataclass": [25, 44, 1950, 1956], "ddploadbalancingplann": 25, "all_plan": 25, "saveextradataplann": 25, "merged_data": 25, "new_plan": 25, "idempot": [25, 1924, 1926], "hi": [25, 1397, 1398, 1871, 1873, 1902], "peak": [25, 27, 46, 1016, 1018, 1024, 1031, 1032, 1033, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1691, 1697, 1917, 1954], "late": [25, 40], "tensorwritedata": 25, "nonetyp": [25, 44, 1872, 1874], "single_file_per_rank": 25, "sync_fil": 25, "thread_count": 25, "per_thread_copy_ahead": 25, "10000000": 25, "simplif": [25, 1945], "atom": [25, 40, 54, 1875], "distributedtensor": [25, 28], "flatten_state_dict": 25, "flatten_sharded_tensor": 25, "dedup_replicated_tensor": 25, "lookup_object": 25, "transform_object": 25, "lookup_tensor": 25, "transform_tensor": 25, "fault": [26, 31, 39, 40, 1120], "toler": [26, 31, 39, 40, 54, 683, 897, 898, 1183, 1209, 1210, 1248, 1251, 1266, 1668, 1675, 1871, 1935], "quickstart": 26, "agent": [26, 32, 33, 34, 37, 39, 41, 42, 1924], "expir": 26, "metric": [26, 1016, 1018, 1024, 1699, 1884, 1905, 1918, 1933, 1947, 1954], "kubernet": 26, "distributedoptim": [27, 1607, 1870, 1924, 1925], "rref": [27, 1607, 1870, 1874, 1917, 1925], "optimizer_class": 27, "params_rref": 27, "get_gradi": [27, 1914, 1924, 1925], "multithread": [27, 1897], "dist_autograd": [27, 1607, 1924, 1925], "rpc": [27, 53, 1607, 1870, 1874, 1917, 1925, 1926], "context_id": [27, 1607, 1924, 1925], "rref1": [27, 1924, 1925], "worker1": [27, 53, 1607, 1924, 1925], "rref2": [27, 1924, 1925], "to_her": [27, 1607, 1914, 1924, 1925, 1926], "dist_optim": [27, 1607, 1925], "postlocalsgdoptim": [27, 1870], "afer": 27, "modelaverag": 27, "localsgd": 27, "model_averag": 27, "post_localsgd_hook": 27, "postlocalsgdst": 27, "subgroup": 27, "start_localsgd_it": 27, "warmup_step": 27, "local_optim": 27, "periodicmodelaverag": 27, "intra": [27, 46, 1896, 1898, 1917], "unnecessari": [27, 1647, 1874, 1894, 1897, 1899, 1910, 1916, 1932], "parameters_as_bucket_view": 27, "overlap_with_ddp": 27, "consumpt": [27, 50, 1652, 1928, 1933, 1939], "partit": [27, 28, 1335, 1837, 1912, 1914, 1917, 1925, 1926, 1947, 1956], "registr": [27, 28, 53, 69, 1010, 1600, 1605, 1606, 1607, 1616, 1619, 1666, 1878, 1916, 1943], "offset": [27, 31, 216, 217, 218, 219, 330, 509, 547, 735, 867, 1055, 1056, 1057, 1058, 1120, 1228, 1371, 1518, 1607, 1717, 1718, 1796, 1841, 1843, 1872, 1874, 1944, 1950, 1952], "intact": [27, 1924], "ddp_zero_hook": 27, "disjointli": 27, "trail": [27, 1642, 1644, 1889, 1892, 1895, 1899], "wari": 27, "static_graph": [27, 1607, 1898], "third": [27, 29, 1066, 1067, 1283, 1335, 1342, 1357, 1360, 1422, 1697, 1870, 1871, 1897, 1900, 1905, 1916, 1918], "add_param_group": [27, 1619, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "param_group": [27, 46, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1682, 1683, 1684, 1685, 1686, 1693, 1696], "frozen": [27, 46, 1198, 1203, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1875, 1911], "trainabl": [27, 1013, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1899], "consolidate_state_dict": 27, "consolid": [27, 46, 1917], "pertain": 27, "preced": [27, 31, 46, 669, 1602, 1697, 1836, 1875, 1896, 1915, 1919], "dtensor": [28, 46], "rowwis": 28, "colwis": 28, "pairwis": [28, 29, 1387, 1436, 1475], "parallelize_modul": [28, 1870], "device_mesh": 28, "parallelize_plan": 28, "tp_mesh_dim": 28, "sub_modul": 28, "parallelstyl": 28, "devicemesh": 28, "mesh": [28, 1933], "prepar": [28, 46, 54, 786, 828, 830, 846, 848, 850, 851, 852, 1133, 1203, 1875, 1912, 1937, 1938], "pairwiseparallel": [28, 1870], "finer": [28, 1947], "granular": [28, 46, 67, 1207, 1893, 1955], "rowwiseparallel": [28, 1870], "_prepare_input": 28, "make_input_shard_1d_last_dim": [28, 1870], "_prepare_output": 28, "make_output_tensor": [28, 1870], "colwiseparallel": [28, 1870], "make_input_replicate_1d": [28, 1870], "make_sharded_output_tensor": 28, "megatron": 28, "lm": 28, "arxiv": [28, 29, 1397, 1445, 1446, 1473, 1651, 1705, 1759, 1817, 1894], "ab": [28, 29, 81, 82, 614, 615, 671, 929, 1067, 1225, 1246, 1247, 1249, 1250, 1263, 1266, 1397, 1446, 1473, 1476, 1478, 1566, 1651, 1654, 1699, 1705, 1709, 1759, 1870, 1872, 1874, 1887, 1888, 1889, 1897, 1905, 1914, 1928, 1934, 1942, 1943, 1944, 1947, 1950, 1952, 1957], "1909": [28, 867], "08053": 28, "multiheadattent": [28, 1470, 1472, 1474, 1919], "mlp": [28, 1598, 1919], "sequenceparallel": [28, 1870], "pdf": [28, 1350, 1445, 1780, 1894], "2205": 28, "05198": 28, "expectedli": 28, "make_input_reshard_repl": [28, 1870], "make_input_shard_1d": [28, 1870], "make_output_replicate_1d": [28, 1870], "make_output_reshard_tensor": [28, 1870], "make_output_shard_1d": [28, 1870], "head": [28, 724, 1335, 1433, 1470, 1472, 1474], "compos": [28, 29, 50, 54, 727, 728, 729, 730, 731, 732, 755, 756, 761, 762, 763, 771, 772, 932, 934, 1125, 1127, 1128, 1129, 1135, 1194, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1375, 1376, 1395, 1396, 1415, 1420, 1421, 1422, 1427, 1475, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1544, 1547, 1548, 1550, 1551, 1552, 1720, 1721, 1862, 1870, 1871, 1874, 1887, 1899, 1900, 1905, 1912, 1916, 1933, 1950, 1952, 1953], "fullyshardeddataparallel": [28, 1870], "enable_2d_with_fsdp": [28, 1870], "pre_dp_module_transform": [28, 1870], "dp": 28, "preforward": 28, "parameteriz": 29, "tensorflow": [29, 1683, 1894, 1933], "backpropag": [29, 898, 1684, 1715, 1901, 1939], "surrog": 29, "likelihood": [29, 1335, 1381, 1434, 1441, 1523, 1561, 1569], "ratio": [29, 31, 606, 1375, 1376, 1521, 1522, 1872, 1928, 1954], "reinforc": [29, 1456, 1579], "polici": [29, 31, 33, 46, 1691, 1697], "reparameter": [29, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637, 1638, 1639, 1651], "trick": [29, 893, 1344, 1528, 1894, 1902, 1904], "autoencod": 29, "whilst": [29, 1897], "densiti": [29, 292, 1155, 1156, 1780, 1872, 1929], "log_prob": [29, 1335, 1350, 1510, 1872], "theta": [29, 1491, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1872], "alpha": [29, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 142, 143, 303, 304, 543, 550, 551, 552, 553, 674, 675, 678, 679, 680, 733, 759, 764, 909, 1010, 1011, 1151, 1165, 1339, 1349, 1369, 1415, 1454, 1492, 1500, 1515, 1516, 1526, 1544, 1577, 1669, 1683, 1776, 1777, 1790, 1794, 1808, 1813, 1814, 1872, 1894, 1899, 1912, 1915, 1947, 1952], "partial": [29, 31, 40, 46, 49, 54, 830, 1013, 1057, 1134, 1147, 1240, 1241, 1242, 1284, 1423, 1424, 1425, 1553, 1554, 1555, 1607, 1626, 1665, 1796, 1874, 1875, 1888, 1894, 1899, 1902, 1912, 1926, 1935, 1953], "pi": [29, 164, 368, 687, 919, 1151, 1152, 1245, 1377, 1441, 1524, 1569, 1689, 1690, 1709, 1771, 1772, 1775, 1776, 1777, 1778, 1812, 1873, 1874, 1916, 1929], "reward": 29, "ascent": 29, "prob": [29, 1872], "policy_network": 29, "next_stat": 29, "rsampl": 29, "parameter": [29, 368, 444, 1200, 1890, 1928], "has_rsampl": 29, "batch_shap": 29, "event_shap": 29, "validate_arg": 29, "arg_constraint": 29, "cdf": 29, "cumul": [29, 1046, 1047, 1048, 1049, 1050, 1273, 1345, 1346, 1347, 1377, 1400, 1401, 1402, 1466, 1524], "mass": 29, "enumerate_support": 29, "discret": [29, 45, 471, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1102, 1104, 1528, 1780, 1933, 1936], "cardin": [29, 1295], "univari": 29, "singleton": [29, 245, 1399, 1850, 1895], "cartesian": [29, 927, 1295, 1709], "_instanc": 29, "icdf": 29, "perplex": 29, "sample_shap": 29, "sample_n": 29, "set_default_validate_arg": 29, "mimic": [29, 1697], "stddev": 29, "varianc": [29, 959, 1345, 1346, 1347, 1372, 1381, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1519, 1523, 1682, 1683, 1719, 1728, 1729, 1857, 1858, 1892, 1905], "exp_famili": 29, "famili": 29, "p_": [29, 931, 1285, 1685], "langl": 29, "rangl": 29, "denot": [29, 54, 959, 1214, 1233, 1239, 1252, 1262, 1355, 1356, 1393, 1616, 1619, 1685, 1798, 1799, 1800, 1802, 1803, 1859, 1902, 1922, 1925, 1928], "carrier": 29, "analyt": [29, 897, 898, 1517, 1928], "bregman": 29, "courtesi": 29, "frank": 29, "nielsen": 29, "richard": 29, "nock": 29, "logit": [29, 382, 1344, 1363, 1499, 1509, 1528, 1872, 1914, 1929], "70": [29, 1252, 1715, 1889], "odd": [29, 1088, 1089, 1090, 1098, 1099, 1100, 1501, 1502, 1503], "lower_bound": 29, "upper_bound": 29, "has_enumerate_support": 29, "param_shap": 29, "concentration1": 29, "concentration0": 29, "concentr": 29, "1046": 29, "1st": [29, 1895], "2nd": [29, 606, 1435, 1461, 1564, 1895], "greaterthan": 29, "total_count": 29, "71": 29, "trial": 29, "integergreaterthan": 29, "ldot": [29, 1225, 1233, 1264, 1280, 1295, 1399, 1420, 1421, 1422, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "dimension": [29, 502, 504, 869, 875, 876, 877, 920, 927, 939, 1055, 1057, 1058, 1067, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1101, 1102, 1104, 1106, 1108, 1109, 1120, 1147, 1156, 1157, 1158, 1226, 1231, 1232, 1233, 1234, 1259, 1264, 1280, 1288, 1295, 1335, 1352, 1353, 1354, 1363, 1364, 1370, 1371, 1399, 1417, 1434, 1448, 1449, 1450, 1451, 1452, 1453, 1460, 1462, 1466, 1482, 1483, 1484, 1509, 1561, 1564, 1596, 1597, 1614, 1653, 1722, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1827, 1830, 1831, 1837, 1874, 1889, 1892, 1895, 1902, 1908, 1928, 1930, 1931, 1934, 1936, 1945], "unnorm": [29, 1363, 1499, 1509, 1528], "likewis": [29, 1836], "25": [29, 485, 575, 576, 577, 929, 1155, 1261, 1266, 1373, 1430, 1432, 1435, 1598, 1607, 1644, 1646, 1675, 1697, 1716, 1856, 1871, 1928, 1929], "independentconstraint": 29, "simplex": 29, "loc": [29, 1265], "lorentz": 29, "3214": 29, "width": [29, 768, 774, 847, 1154, 1155, 1156, 1341, 1342, 1356, 1357, 1359, 1360, 1396, 1421, 1422, 1434, 1461, 1479, 1537, 1595, 1888, 1928], "df": 29, "chi": 29, "continuous_bernoulli": 29, "lim": [29, 1191], "499": 29, "501": 29, "2538": [29, 1225], "pervas": 29, "loaiza": 29, "ganem": 29, "cunningham": 29, "jp": 29, "1907": 29, "06845": 29, "8954": 29, "greaterthaneq": 29, "df1": 29, "df2": 29, "fisher": 29, "snedecor": 29, "2453": 29, "degre": [29, 959, 1044, 1051, 1194, 1231, 1232, 1427, 1436, 1475, 1607, 1723, 1743, 1810, 1811, 1857, 1858, 1872, 1902, 1914, 1928], "freedom": [29, 959, 1810, 1811, 1857, 1858, 1902], "0124": 29, "half_cauchi": 29, "half_norm": 29, "base_distribut": 29, "reinterpreted_batch_ndim": 29, "reinterpret": [29, 488, 1946], "diagon": [29, 51, 215, 251, 584, 585, 586, 587, 920, 955, 959, 1054, 1055, 1056, 1058, 1067, 1080, 1128, 1129, 1139, 1223, 1235, 1237, 1240, 1252, 1256, 1566, 1576, 1796, 1835, 1839, 1840, 1841, 1842, 1843, 1872, 1899, 1914, 1932], "multivari": [29, 1929], "multivariate_norm": 29, "mvn": 29, "scale_tril": 29, "diag": [29, 52, 1127, 1128, 1129, 1229, 1230, 1257, 1705, 1796, 1816, 1817, 1872, 1914], "diagn": 29, "1729": [29, 1905], "lkj_choleski": 29, "lkj": 29, "matric": [29, 251, 675, 678, 909, 921, 922, 931, 932, 933, 934, 1055, 1139, 1214, 1223, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1266, 1274, 1283, 1285, 1298, 1378, 1436, 1491, 1525, 1614, 1619, 1703, 1705, 1715, 1764, 1790, 1793, 1794, 1816, 1817, 1839, 1840, 1842, 1872, 1887, 1902, 1908, 1928, 1934], "eta": [29, 1669, 1671, 1684], "proport": [29, 1395, 1396, 1433, 1474], "det": [29, 1231, 1232, 1253, 1274, 1872, 1914], "l": [29, 724, 749, 910, 919, 925, 932, 933, 1067, 1151, 1152, 1194, 1213, 1223, 1224, 1229, 1230, 1231, 1232, 1236, 1240, 1241, 1283, 1285, 1340, 1343, 1344, 1345, 1355, 1363, 1366, 1367, 1374, 1379, 1387, 1388, 1390, 1393, 1394, 1397, 1409, 1418, 1420, 1427, 1429, 1433, 1434, 1442, 1458, 1475, 1476, 1478, 1576, 1625, 1634, 1642, 1644, 1675, 1751, 1812, 1872, 1874, 1894, 1933, 1957], "lkjcorr": 29, "onion": 29, "3x3": [29, 1050, 1837], "3516": 29, "9361": 29, "1899": [29, 1296], "4748": 29, "8593": 29, "vine": 29, "2009": [29, 1705, 1817], "lewandowski": 29, "dorota": 29, "kurowicka": 29, "harri": [29, 1780], "joe": 29, "journal": [29, 1722], "1016": 29, "jmva": 29, "04": [29, 1110, 1271, 1773, 1780], "008": 29, "corrcholeski": 29, "log_norm": [29, 1914], "lowrank_multivariate_norm": 29, "cov_factor": 29, "cov_diag": 29, "covari": [29, 922, 955, 959, 1345, 1346, 1347, 1466, 1705], "covariance_matrix": 29, "2102": 29, "5429": [29, 1839], "woodburi": 29, "lemma": 29, "formula": [29, 79, 757, 758, 878, 880, 910, 919, 1151, 1152, 1219, 1285, 1286, 1441, 1494, 1495, 1583, 1685, 1718, 1899, 1902, 1918, 1923, 1928, 1945], "capacit": 29, "precision_matrix": 29, "mixture_same_famili": 29, "mixture_distribut": 29, "component_distribut": 29, "rightmost": [29, 922, 1155, 1156, 1874], "gaussian": [29, 1377, 1381, 1456, 1523, 1524, 1579, 1779, 1929], "gmm": 29, "bivari": 29, "categori": [29, 33, 71, 1317, 1874, 1876, 1912, 1915, 1918, 1920, 1931, 1951, 1953], "innermost": [29, 54, 224, 1147, 1156, 1751], "1338": 29, "mathbf": [29, 1214, 1615, 1648, 1651, 1684], "sigma": [29, 164, 368, 749, 1344, 1378, 1379, 1380, 1397, 1398, 1456, 1457, 1525, 1579, 1615, 1648, 1774, 1810, 1811, 1857, 1858, 1872], "triangular": [29, 932, 933, 934, 1223, 1224, 1230, 1232, 1240, 1241, 1248, 1251, 1252, 1254, 1256, 1566, 1691, 1715, 1839, 1840, 1841, 1842, 1843], "decomposit": [29, 54, 68, 932, 1139, 1223, 1224, 1229, 1230, 1231, 1232, 1233, 1235, 1240, 1241, 1242, 1243, 1248, 1252, 1253, 1257, 1258, 1283, 1285, 1614, 1703, 1705, 1709, 1715, 1816, 1817, 1870, 1908, 1945, 1946, 1956], "positivedefinit": 29, "lowercholeski": 29, "negative_binomi": 29, "halfopeninterv": 29, "mu": [29, 368, 1683, 1685], "one_hot_categor": 29, "onehot": 29, "5623": 29, "nonneg": [29, 1476, 1705, 1817, 1929], "pmf": 29, "mathrm": [29, 911, 1231, 1232, 1233, 1234, 1245, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1436, 1441, 1466, 1614, 1672, 1673, 1674, 1684, 1719, 1894, 1929], "relaxed_bernoulli": 29, "temperatur": [29, 1528, 1870], "parametr": [29, 1123, 1616, 1623, 1648, 1649, 1651, 1890, 1899], "relax": [29, 1209, 1210, 1619, 1919, 1947], "reparametriz": 29, "99": [29, 1205, 1683, 1871], "2951": [29, 1293], "3442": 29, "8918": 29, "9021": 29, "maddison": 29, "2017": [29, 1470, 1472, 1474, 1797, 1911], "reparametr": [29, 1528, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1631, 1651], "jang": 29, "relaxed_categor": 29, "1294": [29, 932], "2324": [29, 1194, 1427], "3859": 29, "2523": 29, "student": 29, "transformed_distribut": 29, "composit": [29, 51, 1127, 1241, 1614, 1871, 1874, 1900, 1905, 1912], "basedistribut": 29, "dx": [29, 1050, 1343, 1837, 1872, 1899, 1900, 1929], "dy": 29, "logist": [29, 1456, 1459, 1579, 1929], "sigmoidtransform": 29, "affinetransform": 29, "invert": [29, 54, 934, 1185, 1225, 1234, 1235, 1241, 1247, 1254, 1256, 1259, 1260, 1274, 1423, 1424, 1425, 1839, 1872, 1908, 1924], "3418": 29, "upper": [29, 44, 172, 173, 174, 583, 784, 920, 925, 932, 933, 934, 936, 1081, 1082, 1154, 1155, 1223, 1224, 1230, 1232, 1240, 1241, 1252, 1256, 1445, 1566, 1574, 1575, 1691, 1697, 1715, 1730, 1751, 1839, 1842, 1843, 1872, 1892, 1914, 1929, 1935], "von_mis": 29, "circular": [29, 1355, 1356, 1357, 1403, 1404, 1405, 1564], "von": 29, "mise": 29, "unconstrain": [29, 1619], "angl": [29, 744, 873, 1051, 1274, 1413, 1709, 1723, 1767, 1870, 1872, 1914, 1928], "9777": 29, "radian": [29, 687, 873, 1051, 1723, 1872, 1914], "nichola": 29, "simul": [29, 788, 790, 1919, 1922, 1945], "1979": 29, "152": [29, 606], "157": 29, "4784": [29, 1298], "symmetr": [29, 791, 809, 910, 919, 932, 933, 934, 1088, 1089, 1090, 1095, 1097, 1101, 1102, 1104, 1151, 1152, 1213, 1223, 1224, 1229, 1230, 1232, 1236, 1237, 1238, 1245, 1248, 1251, 1257, 1266, 1614, 1619, 1697, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1919, 1922], "x_ij": 29, "wu": [29, 1266], "chu": 29, "2018": [29, 1266, 1713], "sawyer": 29, "2007": 29, "anderson": 29, "w": [29, 52, 141, 749, 878, 880, 882, 888, 896, 910, 919, 959, 1125, 1136, 1151, 1152, 1191, 1233, 1333, 1334, 1341, 1342, 1344, 1346, 1347, 1351, 1356, 1357, 1363, 1367, 1368, 1370, 1371, 1372, 1379, 1391, 1392, 1399, 1410, 1411, 1421, 1422, 1432, 1433, 1434, 1439, 1440, 1461, 1477, 1478, 1480, 1481, 1491, 1499, 1517, 1518, 1526, 1561, 1567, 1568, 1615, 1648, 1651, 1872, 1887, 1888, 1892, 1894, 1899, 1902, 1915, 1916, 1933, 1955], "2003": 29, "ed": [29, 51, 1366, 1367, 1894, 1916, 1955, 1958], "odel": 29, "feiveson": 29, "1966": 29, "samplecovari": 29, "jasa": 29, "61": 29, "313": 29, "199": 29, "203": [29, 606], "ku": 29, "bloomfield": 29, "2010": [29, 1892], "ox": 29, "max_try_correct": 29, "bartlett": [29, 910], "singular": [29, 1225, 1239, 1240, 1246, 1248, 1250, 1251, 1257, 1258, 1266, 1274, 1283, 1615, 1619, 1705, 1816, 1817, 1908], "accordingli": [29, 54, 1203, 1397, 1619, 1889, 1924, 1953], "kl_diverg": 29, "kullback": [29, 1393, 1538], "leibler": [29, 1393, 1538], "notimplementederror": [29, 1916, 1950], "register_kl": 29, "type_p": 29, "type_q": 29, "kl_normal_norm": 29, "ambigu": [29, 54, 1179, 1358, 1359, 1360, 1374, 1423, 1424, 1425, 1479, 1874], "runtimewarn": 29, "basep": 29, "derivedq": 29, "kl_version1": 29, "derivedp": 29, "baseq": 29, "kl_version2": 29, "tie": 29, "abstransform": 29, "cache_s": [29, 1950], "event_dim": 29, "pointwis": [29, 941, 1128, 1129, 1271, 1272, 1393, 1887, 1895, 1946, 1949, 1951], "affin": [29, 46, 462, 463, 464, 465, 466, 738, 740, 741, 742, 791, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1491, 1897, 1905], "cattransform": 29, "tseq": 29, "functor": [29, 1010, 1011], "submatrix": 29, "x0": [29, 1949], "t0": [29, 44, 1147, 1669, 1873], "exptransform": 29, "identity_transform": 29, "composetransform": 29, "corrcholeskytransform": 29, "uncontrain": 29, "euclidean": [29, 929, 1562], "x_i": [29, 51, 936, 1046, 1047, 1048, 1049, 1262, 1269, 1417, 1436, 1460, 1462, 1475, 1546, 1582, 1712, 1795, 1810, 1811, 1837, 1857, 1858, 1859, 1929], "stickbreakingtransform": 29, "r_i": 29, "tanh": [29, 566, 749, 754, 784, 874, 1377, 1379, 1380, 1397, 1398, 1426, 1442, 1444, 1468, 1524, 1556, 1588, 1872, 1887, 1888, 1892, 1914, 1921, 1928, 1952], "unsign": [29, 1922, 1931, 1934, 1935], "z_i": 29, "s_i": 29, "y_i": [29, 936, 1046, 1047, 1048, 1049, 1262, 1269, 1475, 1837, 1859, 1902], "sqrt": [29, 54, 368, 538, 662, 663, 749, 955, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1160, 1213, 1295, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1377, 1379, 1380, 1382, 1390, 1391, 1392, 1395, 1396, 1397, 1398, 1399, 1412, 1414, 1442, 1444, 1466, 1524, 1576, 1619, 1670, 1671, 1672, 1673, 1676, 1682, 1683, 1719, 1746, 1779, 1810, 1811, 1872, 1887, 1892, 1893, 1894, 1914, 1928, 1929, 1935, 1952], "cumulativedistributiontransform": 29, "copula": 29, "base_dist": 29, "independenttransform": 29, "base_transform": 29, "log_abs_det_jacobian": 29, "lowercholeskytransform": 29, "positivedefinitetransform": 29, "powertransform": 29, "expon": [29, 259, 260, 271, 458, 459, 1110, 1117, 1217, 1247, 1335, 1415, 1562, 1712, 1722, 1759, 1872, 1931, 1934, 1952], "reshapetransform": 29, "in_shap": 29, "out_shap": 29, "softplustransform": 29, "tanhtransform": 29, "softmaxtransform": 29, "biject": 29, "hmc": 29, "stacktransform": 29, "stick": 29, "aris": [29, 54, 1894, 1945], "primarili": [29, 53, 804, 805, 806, 812, 1327, 1884, 1919], "memoiz": [29, 1946], "_call": 29, "_invers": 29, "codomain": [29, 1894], "iff": [29, 1433], "weaker": [29, 1897], "pseudoinvers": [29, 1234, 1251, 1259], "monoton": [29, 1426, 1556, 1751], "forward_shap": 29, "inverse_shap": 29, "corr_choleski": 29, "greater_than": 29, "greater_than_eq": 29, "integer_interv": 29, "less_than": 29, "lower_choleski": 29, "lower_triangular": 29, "nonnegative_integ": 29, "one_hot": [29, 1872, 1914], "positive_integ": 29, "positive_semidefinit": 29, "positive_definit": 29, "real_vector": 29, "unit_interv": 29, "is_discret": 29, "constrain": [29, 1463, 1874, 1905], "_cat": 29, "dependent_properti": 29, "_dependentproperti": 29, "_greaterthan": 29, "_greaterthaneq": 29, "_independentconstraint": 29, "_integerinterv": 29, "_interv": 29, "half_open_interv": 29, "_halfopeninterv": 29, "_lessthan": 29, "_multinomi": 29, "_stack": [29, 1914], "constraintregistri": 29, "biject_to": 29, "transform_to": 29, "overparameter": 29, "rotat": [29, 1743, 1816], "hamiltonian": 29, "mont": 29, "carlo": 29, "invari": [29, 44, 1640, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1926, 1928, 1942, 1956], "potential_energi": 29, "cheap": [29, 1335], "svi": 29, "fewer": [29, 51, 682, 684, 685, 688, 935, 1214, 1215, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1325, 1381, 1508, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1713, 1797, 1810, 1811, 1815, 1833, 1857, 1858, 1880, 1895, 1910, 1935, 1959], "my_constraint": 29, "my_transform": 29, "myconstraintclass": 29, "my_factori": 29, "mytransform": 29, "param1": [29, 1905], "param2": [29, 1905], "constraint_registri": 29, "my_registri": 29, "construct_transform": 29, "myconstraint": 29, "from_dlpack": [30, 869, 1870], "ext_tensor": [30, 1118], "extern": [30, 971, 1118, 1209, 1854, 1884, 1896, 1897, 1908, 1912, 1939], "immut": [30, 1118, 1874], "__dlpack__": [30, 1118], "capsul": [30, 869, 1118], "ndarrai": [30, 448, 868, 1118, 1119, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1912, 1933, 1935], "pycapsul": [30, 1118], "to_dlpack": [30, 1118, 1870], "t2": [30, 676, 677, 869, 1118, 1147, 1607, 1924, 1925, 1947, 1957], "dltensor": [30, 1118], "t3": [30, 1118, 1925], "legaci": [30, 41, 1528, 1918, 1931], "idiomat": 30, "inde": [30, 1871, 1881, 1916, 1926, 1950, 1953], "plane": [31, 40, 727, 728, 729, 730, 731, 732, 755, 756, 757, 758, 761, 762, 763, 771, 772, 1055, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1375, 1376, 1395, 1396, 1399, 1415, 1420, 1421, 1422, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1544, 1547, 1548, 1550, 1551, 1552, 1651, 1720, 1721, 1743], "monitor": [31, 41, 42, 73, 970, 1305, 1699, 1870, 1897, 1903], "unhealthi": 31, "tear": 31, "react": [31, 1953], "decentr": 31, "diagram": [31, 40, 1194, 1427, 1919, 1926, 1944, 1947, 1957], "elasticag": 31, "deploy": [31, 40, 1870, 1948], "quad": [31, 1343, 1344, 1363, 1394, 1418, 1434, 1476], "group_result": 31, "is_fail": [31, 32], "exit_cod": 31, "return_valu": [31, 32, 38, 1944], "get_worker_group": 31, "workergroup": [31, 41], "mutabl": [31, 1209, 1871, 1916, 1933], "implementor": 31, "defens": 31, "retri": [31, 33, 42, 1024, 1924, 1926], "max_restart": [31, 32, 41], "runresult": 31, "workerspec": [31, 32, 41, 42], "local_world_s": [31, 32, 41], "rdzv_handler": [31, 32, 40], "monitor_interv": [31, 32], "local_addr": [31, 40], "tee": [31, 38], "blueprint": 31, "spec": [31, 32, 42, 55, 75, 782, 783, 808, 809, 810, 813, 814, 815, 1921], "homogen": [31, 41], "rendezvoushandl": [31, 32, 40, 41], "rdzv": [31, 39, 41], "chose": [31, 1893, 1945], "consol": [31, 34, 37, 38, 41, 1933], "get_entrypoint_nam": 31, "__qualname__": 31, "workerst": 31, "unknown": [31, 1609, 1610, 1926], "unrecover": 31, "interrupt": [31, 1886, 1955], "succeed": [31, 40, 1283, 1947], "termin": [31, 40, 42, 54, 1675, 1886, 1924, 1949], "uncaught": [31, 33], "unhandl": 31, "recov": [31, 884, 1088, 1253, 1285, 1607, 1640, 1812, 1893, 1897, 1901, 1902, 1920], "is_run": 31, "role_rank": [31, 41], "role_world_s": [31, 41], "pid": [31, 33, 41, 42, 1466, 1901, 1918], "local_elastic_ag": 31, "localelasticag": [31, 32, 42], "start_method": [31, 32, 38, 42, 1886], "exit_barrier_timeout": 31, "log_dir": [31, 38, 1884, 1933], "inter": [31, 33, 46, 1144, 1762, 1896, 1898, 1917, 1924], "safeti": [31, 54, 943, 944, 1871, 1874, 1888, 1948], "advis": [31, 533, 606, 854, 1907], "pipe": [31, 42, 1870, 1924], "torchelastic_enable_file_tim": 31, "torchelastic_timer_fil": 31, "shared_queu": 31, "get_context": [31, 42, 1907], "nproc_per_process": 31, "foobar": [31, 33, 37, 38], "other_param": [31, 42], "usr": [31, 38, 40, 1897], "bin": [31, 38, 40, 291, 292, 808, 912, 1154, 1155, 1156, 1872, 1874, 1914, 1933, 1954], "simpleelasticag": 31, "scaffold": 31, "_assign_worker_rank": 31, "group_world_s": 31, "_exit_barri": 31, "guard": [31, 44, 55, 60, 63, 669, 941, 1880, 1907, 1914, 1916, 1936, 1939, 1947, 1953, 1957, 1958], "_initialize_work": 31, "worker_group": 31, "fresh": [31, 1058, 1754, 1785, 1869], "start_work": 31, "_stop_work": 31, "optimist": 31, "deleg": 31, "_monitor_work": 31, "_rendezv": 31, "_restart_work": 31, "_shutdown": 31, "death_sig": 31, "sigterm": 31, "_start_work": 31, "gracefulli": [31, 41, 51, 1224, 1900], "meaning": [31, 33, 34, 1024, 1897, 1951], "canon": [31, 33, 1871, 1943, 1946], "meaningless": 31, "intention": [31, 1064, 1859, 1903, 1924], "ship": [32, 1124, 1896, 1924], "programmat": [32, 54, 1905], "my_launch": 32, "argv": [32, 43], "trainer_entrypoint_fn": 32, "fn_arg": 32, "run_result": 32, "ex": [32, 1607, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1884, 1956], "tricki": [32, 47, 52, 1894, 1905, 1926, 1942], "myrendezvoushandl": 32, "elastic_ag": 32, "servic": [32, 1898, 1945], "metrichandl": [32, 37], "mymetrichandl": 32, "metric_data": [32, 37], "metricdata": 32, "sink": [32, 37, 1884], "eventhandl": 32, "cloudwatch": 32, "nulleventhandl": 32, "myeventhandl": 32, "sub": [33, 46, 53, 55, 58, 62, 63, 551, 803, 850, 851, 1205, 1209, 1210, 1291, 1294, 1296, 1439, 1440, 1470, 1471, 1473, 1736, 1814, 1831, 1869, 1871, 1872, 1887, 1889, 1894, 1907, 1912, 1914, 1928, 1931, 1952, 1956], "invalid": [33, 38, 944, 1194, 1317, 1427, 1893, 1894, 1912, 1916, 1917, 1946, 1950], "infra": [33, 1913, 1956], "start_process": [33, 38, 1886], "torchelastic_error_fil": 33, "smallest": [33, 930, 1215, 1225, 1246, 1250, 1266, 1714, 1834, 1935, 1957, 1960], "timestamp": [33, 34, 37, 41, 1884, 1918, 1933, 1957], "error_handl": 33, "sugar": [33, 1873], "get_error_handl": 33, "childfailederror": 33, "get_first_failur": 33, "dump_error_fil": 33, "error_fil": [33, 38], "exitcod": [33, 41], "nanni": 33, "accur": [33, 970, 1147, 1269, 1305, 1369, 1722, 1837, 1897, 1925, 1939, 1946], "diagnost": [33, 66, 67, 68, 69, 70, 73, 669, 1660, 1662, 1870, 1871], "torchelastic_ag": 33, "trainer_0": 33, "trainer_1": 33, "json": [33, 38, 42, 1904, 1918, 1951, 1955], "trainer_n": 33, "errorhandl": 33, "record_except": 33, "processfailur": 33, "test_ev": 34, "eventsourc": 34, "get_logging_handl": 34, "millisecond": [34, 37, 970, 1305, 1884], "eventmetadatavalu": 34, "readm": [35, 36, 781, 1889], "telemetri": 37, "timeseri": 37, "metric_group": 37, "metric_nam": 37, "sensibl": 37, "my_modul": [37, 46, 54, 1871, 1916], "nullmetricshandl": 37, "consolemetricshandl": 37, "my_method": 37, "put_metr": 37, "calculate_lat": 37, "succinctli": 37, "baz": [37, 54, 843, 1916, 1935], "leaf_modul": 37, "classnam": [37, 1874], "threw": [37, 1959], "my_app": 37, "consolemetrichandl": 37, "toi": [37, 1957], "stdout": [37, 38, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1912], "stdoutmetrichandl": 37, "1574213883": 37, "4182858": 37, "my_metr": 37, "1574213940": 37, "5237644": 37, "nullmetrichandl": 37, "class_nam": [37, 54], "def_nam": 37, "leaf": [37, 141, 213, 326, 438, 492, 493, 780, 827, 829, 868, 882, 1133, 1667, 1830, 1889, 1893, 1894, 1912, 1938, 1946], "metric_valu": 37, "metric_group_nam": 37, "popen": 38, "stderr": [38, 1869, 1883], "err": 38, "echo": 38, "hello": [38, 51, 1873, 1912, 1916], "pcontext": 38, "multiprocesscontext": 38, "subprocesscontext": 38, "keyset": 38, "bitmask": 38, "mask": [38, 390, 391, 392, 393, 394, 533, 724, 897, 898, 1287, 1339, 1350, 1372, 1433, 1470, 1471, 1472, 1473, 1474, 1519, 1576, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1686, 1870, 1872, 1887, 1888, 1928], "miss": [38, 678, 1123, 1194, 1288, 1298, 1361, 1390, 1391, 1392, 1427, 1543, 1649, 1899, 1911, 1912, 1913, 1928, 1948, 1950], "bar0": 38, "bar1": 38, "file1": 38, "file2": 38, "caution": [38, 1948], "short": [38, 54, 723, 752, 1067, 1191, 1350, 1397, 1398, 1510, 1664, 1764, 1812, 1873, 1887, 1894, 1895, 1905, 1924, 1930, 1931, 1934], "ing": 38, "cmd": [38, 41], "forkserv": [38, 1607, 1886, 1907], "tee_stdout": 38, "tee_stderr": 38, "processcontext": [38, 1886], "superset": [38, 41], "runprocsresult": 38, "num_nod": [39, 41], "trainers_per_nod": 39, "num_allowed_failur": 39, "job_id": [39, 40, 41], "endpoint": [39, 40, 41], "host_node_addr": [39, 41], "min_siz": [39, 41], "num_allowed_failures_or_membership_chang": 39, "node1": [39, 41], "29400": [39, 41], "sidecar": [39, 40], "agre": [40, 1252, 1926], "resum": [40, 1691, 1697, 1699, 1924, 1926, 1933], "retryabl": 40, "announc": 40, "previous": [40, 46, 47, 50, 51, 52, 54, 212, 687, 781, 782, 1135, 1201, 1810, 1811, 1857, 1858, 1862, 1871, 1895, 1897, 1905, 1916, 1917, 1923, 1924, 1929, 1950, 1953, 1959], "lose": [40, 43, 46, 182, 199, 1888], "train_loop": [40, 851], "arriv": [40, 41, 1924, 1926], "dynamicrendezvoushandl": 40, "rendezvousbackend": 40, "c10drendezvousbackend": 40, "etcdrendezvousbackend": 40, "supersed": 40, "etcdrendezvoushandl": 40, "my_run_id": 40, "from_backend": 40, "run_id": [40, 41], "min_nod": 40, "max_nod": 40, "rendezvousparamet": 40, "admit": [40, 41, 1897], "get_as_bool": 40, "get_as_int": 40, "rendezvoushandlerregistri": 40, "create_handl": 40, "creator": [40, 1894, 1924, 1926], "get_run_id": 40, "is_clos": 40, "set_clos": 40, "next_rendezv": 40, "rendezvousclosederror": 40, "rendezvousconnectionerror": 40, "rendezvousstateerror": 40, "rendezvoustimeouterror": 40, "num_nodes_wait": 40, "shutdown": [40, 1924, 1925], "rendezvouserror": 40, "dynamic_rendezv": 40, "join_timeout": 40, "600": 40, "last_call_timeout": 40, "close_timeout": 40, "rendezvoustimeout": 40, "get_stat": [40, 79], "fenc": 40, "token": [40, 968, 1002, 1003, 1869, 1875, 1949], "set_stat": [40, 79], "condition": [40, 1761], "last_cal": 40, "heartbeat": 40, "keep_al": 40, "c10d_rendezvous_backend": 40, "create_backend": 40, "store_typ": 40, "tcp": [40, 41, 1924], "read_timeout": 40, "60": [40, 42, 1381, 1701, 1827, 1832, 1884, 1924], "is_host": 40, "cname": 40, "fqdn": [40, 41], "etcd_rendezvous_backend": 40, "ssl_cert": 40, "ssl": 40, "certif": 40, "ssl_cert_kei": 40, "privat": [40, 1897, 1899, 1916, 1942], "ca_cert": 40, "rool": 40, "key_prefix": 40, "ttl": 40, "hour": 40, "etcd_rendezv": 40, "rdzv_impl": 40, "etcdrendezv": 40, "etcd_address": 40, "min_work": 40, "max_work": 40, "noqa": 40, "w605": 40, "2379": [40, 1291], "etcd_prefix": 40, "etcdstor": 40, "etcd_stor": 40, "etcd_client": 40, "etcd_store_prefix": 40, "c10": [40, 1904, 1945], "piggyback": 40, "num": [40, 734, 735, 749, 1317, 1379, 1382, 1397, 1433, 1442, 1470, 1907], "lookuperror": 40, "override_timeout": 40, "etcdserv": 40, "cumbersom": [40, 1874], "highli": [40, 1335, 1607, 1869, 1906, 1912, 1928, 1935], "etcd_serv": 40, "data_dir": 40, "v3": [40, 41], "substitut": [40, 54, 68, 1206, 1894, 1931], "torchelastic_etcd_binary_path": 40, "get_client": 40, "etcd_binary_path": 40, "entry_point": [41, 1943], "migrat": [41, 47, 1295, 1651, 1922], "train_script": 41, "aforment": 41, "suffic": [41, 54], "compliant": [41, 43], "num_train": 41, "wors": [41, 1851], "port_k": 41, "etcd": 41, "v2": [41, 1262, 1704, 1869], "revis": 41, "physic": [41, 224, 1085, 1103, 1875, 1896, 1907, 1928, 1947], "localworkergroup": 41, "rdzv_id": 41, "rdzv_backend": [41, 43], "rdzv_endpoint": [41, 43], "max_nnod": 41, "torchelastic_restart_count": 41, "far": [41, 1203, 1526, 1945], "torchelastic_max_restart": 41, "python_exec": 41, "gang": 41, "departur": 41, "surviv": 41, "kill": [41, 42, 1886, 1901], "frequenc": [41, 912, 959, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1191, 1335, 1370, 1371, 1517, 1518, 1691, 1812, 1956], "ness": [41, 1946], "load_checkpoint": [41, 43], "checkpoint_path": [41, 43], "dataset": [41, 43, 55, 787, 1335, 1344, 1393, 1870, 1901, 1904, 1907, 1911, 1915, 1919, 1920, 1933], "train_step": 41, "should_checkpoint": 41, "save_checkpoint": [41, 43], "acquir": [42, 54, 1905, 1926, 1928], "deadlin": 42, "message_queu": 42, "localtimerserv": 42, "max_interv": 42, "trainer_func": 42, "localtimercli": 42, "expiri": 42, "timer_cli": 42, "countdown": 42, "timefram": [42, 1924], "elig": [42, 1926], "reap": 42, "timerserv": 42, "mp_queue": 42, "daemon": [42, 1886], "filetimerserv": 42, "file_path": 42, "log_ev": [42, 1884], "filetimercli": 42, "fifo": 42, "watchdog": 42, "filetimerrequest": 42, "sigkil": 42, "named_pip": 42, "mkfifo": 42, "timercli": 42, "timerrequest": 42, "scope_id": 42, "expiration_tim": 42, "acquisit": 42, "whatev": [42, 54, 438, 1607, 1755, 1839, 1874, 1900, 1946, 1947], "request_queu": 42, "entiti": [42, 54], "clear_tim": 42, "get_expired_tim": 42, "register_tim": 42, "timer_request": 42, "use_env": 43, "expositori": 43, "worst": [43, 1899], "total_num_epoch": 43, "visit": [43, 1912, 1950, 1951], "shot": 44, "aot": [44, 669, 943, 1880, 1939, 1947, 1948, 1957], "exportedprogram": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 1870], "_export": [44, 55, 57, 62, 63], "register_dataclass_as_pytree_nod": 44, "ordereddict": [44, 1194, 1427, 1428, 1437, 1455, 1598, 1630, 1872, 1905, 1910, 1935, 1950], "ie": 44, "example_input": [44, 806, 807, 850, 851, 1205, 1209, 1919, 1938, 1943, 1944, 1946, 1950], "ep": [44, 701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 738, 740, 741, 742, 743, 784, 808, 809, 810, 811, 814, 815, 897, 898, 1203, 1279, 1331, 1345, 1346, 1347, 1362, 1381, 1382, 1390, 1391, 1392, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1436, 1441, 1466, 1470, 1472, 1474, 1475, 1496, 1508, 1523, 1527, 1528, 1536, 1540, 1562, 1565, 1569, 1592, 1615, 1648, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1699, 1719, 1872, 1899, 1902, 1929, 1952, 1960], "arg0_1": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "placehold": [44, 54, 67, 823, 1389, 1897, 1943, 1944, 1956], "arg1_1": [44, 55, 57, 58, 60, 61, 62, 63, 64, 65], "call_funct": [44, 54, 67, 69, 70, 1943, 1944, 1947, 1950, 1956, 1957], "dynamic_dim": [44, 55, 57, 62, 63, 1870], "higher_ord": [44, 55, 58, 62, 63], "cond": [44, 51, 55, 58, 63, 1908], "spcializ": 44, "domin": [44, 1919], "hint": [44, 669, 968, 1002, 1195, 1433, 1470, 1471, 1472, 1473, 1474, 1871, 1873, 1874, 1897, 1899, 1924, 1945, 1950], "sound": [44, 54, 943, 944, 1455, 1878, 1933, 1948], "constrain_as_s": [44, 1870], "constraint_as_valu": 44, "fatal": [44, 1886, 1907], "specify_constraint": 44, "convent": [44, 46, 54, 326, 930, 1067, 1085, 1087, 1111, 1133, 1345, 1346, 1347, 1390, 1391, 1392, 1466, 1744, 1747, 1845, 1869, 1883, 1889, 1894, 1902, 1905, 1910], "graphmodul": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 848, 849, 850, 851, 1938, 1943, 1944, 1946, 1950, 1956, 1957], "get_attr": [44, 54, 67], "lift": [44, 52, 1135, 1862, 1888, 1914, 1946], "curat": 44, "unbound": 44, "t1": [44, 676, 677, 869, 1147, 1607, 1873, 1924, 1925], "soundli": 44, "wihout": 44, "_dynamo": [44, 55, 64, 941, 1898, 1939, 1942, 1943, 1944, 1945, 1950, 1953, 1955, 1957], "exc": 44, "unsupport": [44, 51, 55, 57, 63, 68, 69, 71, 74, 1871, 1875, 1888, 1913, 1924, 1928, 1950, 1953], "max_1": [44, 54], "_local_scalar_dens": [44, 1914, 1952], "ge": [44, 276, 1149, 1287, 1379, 1384, 1385, 1397, 1530, 1531, 1872, 1887, 1914, 1952], "scalar_tensor": [44, 1872, 1914, 1952], "_assert_async": [44, 1914], "msg": [44, 1027, 1029, 1918, 1935], "le": [44, 351, 1221, 1384, 1385, 1530, 1531, 1872, 1887, 1914, 1935, 1952], "scalar_tensor_1": 44, "_assert_async_1": 44, "sym_constrain_range_for_s": [44, 1872, 1914], "layout": [44, 54, 55, 60, 63, 141, 182, 199, 224, 333, 334, 425, 435, 436, 437, 438, 439, 448, 533, 570, 571, 572, 573, 574, 576, 577, 606, 678, 854, 882, 884, 910, 919, 983, 1068, 1069, 1070, 1080, 1085, 1103, 1121, 1122, 1151, 1152, 1213, 1264, 1280, 1288, 1298, 1327, 1543, 1658, 1659, 1686, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1836, 1841, 1843, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1889, 1897, 1914, 1916, 1928, 1933, 1934, 1935, 1952], "illeg": [44, 46, 1897, 1945], "constrain_as_valu": [44, 1870], "aforement": [44, 1897, 1907], "1024": [44, 1896, 1897], "usererror": 44, "f0": 44, "unhint": 44, "sym_constrain_rang": [44, 1872, 1914], "w_tensor": 44, "t_id": 44, "constraint_rang": 44, "polymorph": [44, 1873], "graph_signatur": 44, "call_spec": 44, "range_constraint": 44, "equality_constraint": 44, "module_call_graph": 44, "exportbackwardsignatur": [44, 1870], "gradients_to_paramet": 44, "gradients_to_user_input": 44, "loss_output": 44, "exportgraphsignatur": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 1870], "user_input": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "user_output": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "inputs_to_paramet": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "inputs_to_buff": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "buffers_to_mut": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "backward_signatur": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "assertion_dep_token": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "gurante": 44, "getattr": [44, 54, 1872, 1899, 1910, 1924, 1950], "parameters_buff": 44, "flattened_user_input": 44, "mutated_input": 44, "flattened_user_output": 44, "custommodul": [44, 827, 1919], "my_paramet": [44, 1873], "register_buff": [44, 1194, 1427, 1600, 1871, 1873, 1899, 1905], "my_buffer1": 44, "my_buffer2": 44, "x2": [44, 55, 61, 929, 1241, 1419, 1475, 1476, 1508, 1565, 1872, 1952], "arg2_1": [44, 55, 58, 60, 61, 62, 63], "arg3_1": [44, 55, 61], "arg4_1": [44, 55, 61], "add_tensor": 44, "mul_tensor": 44, "mul_tensor_1": 44, "add_tensor_1": 44, "add_tensor_2": 44, "l__self___my_paramet": 44, "l__self___my_buffer1": 44, "l__self___my_buffer2": 44, "mangl": 44, "l__self___my_my_buffer1": 44, "argumentkind": [44, 1870], "argumentspec": [44, 1870], "modulecallsignatur": [44, 1870], "in_spec": 44, "_pytre": [44, 55], "treespec": 44, "out_spec": 44, "modulecallentri": [44, 1870], "exportdb": [44, 1870, 1936], "sharding_strategi": 46, "cpu_offload": 46, "auto_wrap_polici": 46, "backward_prefetch": 46, "backwardprefetch": [46, 1870], "backward_pr": [46, 1194, 1427], "mixed_precis": [46, 1607], "ignored_modul": 46, "param_init_fn": 46, "sync_module_st": 46, "forward_prefetch": 46, "limit_all_gath": 46, "use_orig_param": 46, "ignored_st": 46, "inspir": [46, 1675, 1899, 1949], "deepspe": 46, "shorten": 46, "sharded_modul": 46, "0001": [46, 54, 1048, 1238, 1415, 1544, 1669, 1699, 1872, 1915], "stale": 46, "dev_id": 46, "no_sync": [46, 1607], "offload": 46, "ping": 46, "77724": 46, "isol": [46, 54, 1598, 1886, 1917, 1957], "decod": [46, 1265, 1470, 1471, 1472, 1607, 1916], "summon_full_param": 46, "shard_grad_op": 46, "unshard": 46, "full_shard": 46, "with_grad": 46, "reacquir": 46, "gap": [46, 854, 1731, 1870, 1919, 1955], "delai": [46, 1607, 1926, 1947], "nccl_cross_nic": 46, "cpuoffload": [46, 1870], "modulewrappolici": 46, "proceed": [46, 970, 1305, 1381, 1925, 1926], "nonwrapped_numel": 46, "travers": [46, 825, 1607, 1898, 1899, 1925, 1937, 1938, 1950], "subtre": 46, "size_based_auto_wrap_polici": 46, "exce": [46, 1271, 1897, 1907], "100m": 46, "numel": [46, 425, 434, 939, 959, 1098, 1179, 1872, 1887, 1894, 1914, 1928], "custom_auto_wrap_polici": 46, "min_num_param": 46, "1e8": 46, "my_auto_wrap_polici": 46, "functool": [46, 49, 55, 830, 1899, 1935], "1e5": 46, "mixedprecis": [46, 1870], "meta": [46, 50, 54, 327, 1878, 1912, 1924, 1933, 1935, 1945, 1946, 1948, 1949, 1956], "is_meta": [46, 1914], "reset_paramet": 46, "torchdistx": 46, "deferred_init": 46, "materialize_modul": 46, "my_init_fn": 46, "fsdp_model": 46, "fullstatedictconfig": [46, 1870], "named_paramet": [46, 48, 50, 1123, 1194, 1198, 1427, 1905, 1910], "flatparamet": 46, "unifi": [46, 1870, 1888], "norm_typ": [46, 734, 735, 1370, 1371, 1395, 1396, 1517, 1518, 1547, 1548, 1611, 1872], "infin": [46, 957, 1184, 1186, 1188, 1189, 1321, 1343, 1420, 1421, 1422, 1550, 1551, 1552, 1611, 1674, 1784, 1795, 1928, 1929], "no_shard": 46, "largest": [46, 579, 912, 1111, 1225, 1246, 1248, 1250, 1251, 1266, 1563, 1615, 1834, 1872, 1873, 1874, 1952, 1956, 1960], "promot": [46, 68, 674, 914, 917, 926, 1010, 1062, 1110, 1112, 1113, 1114, 1115, 1316, 1366, 1367, 1368, 1372, 1508, 1714, 1734, 1735, 1741, 1756, 1813, 1874, 1913, 1931, 1935, 1946, 1952], "fp32": [46, 770, 783, 806, 1052, 1607, 1897, 1908, 1919, 1920, 1922, 1949], "flatten_sharded_optim_state_dict": 46, "sharded_optim_state_dict": 46, "shard_full_optim_state_dict": 46, "unflatten": [46, 1872, 1887, 1888, 1914, 1932], "fsdp_modul": 46, "root_onli": 46, "full_optim_state_dict": 46, "optim_input": 46, "rank0_onli": 46, "alias": [46, 884, 1124, 1135, 1537, 1862, 1873, 1874, 1878, 1899, 1946], "get_state_dict_typ": 46, "state_dict_typ": 46, "statedictset": [46, 1870], "optim_state_dict": 46, "assertionerror": [46, 54, 71, 723, 1667, 1935, 1957], "differen": 46, "named_buff": [46, 1194, 1427, 1905, 1910], "intercept": [46, 54, 1899, 1948], "occurr": [46, 393, 1192, 1294, 1640, 1848, 1849, 1945], "oom": [46, 1901, 1959], "statedicttyp": 46, "fulloptimstatedictconfig": [46, 1870], "set_state_dict_typ": 46, "full_state_dict": 46, "save_a_checkpoint": 46, "load_a_checkpoint": 46, "optim_state_dict_to_load": 46, "is_named_optim": 46, "load_directli": 46, "original_osd": 46, "namedoptim": 46, "keyedoptim": 46, "torchrec": [46, 1870], "gossipgrad": [46, 1607], "latter": [46, 676, 780, 1194, 1397, 1427, 1434, 1900, 1905, 1907, 1909], "rekey_optim_state_dict": 46, "optim_state_key_typ": 46, "loadabl": [46, 1869], "wrapped_model": 46, "wrapped_optim": 46, "full_osd": 46, "nonwrapped_model": 46, "nonwrapped_optim": 46, "rekeyed_osd": 46, "optimstatekeytyp": 46, "param_id": 46, "osd": 46, "param_nam": 46, "sharded_osd": 46, "scatter_full_optim_state_dict": 46, "new_model": 46, "new_optim": 46, "remap": [46, 79, 1198, 1201, 1265, 1286, 1869, 1883, 1923], "state_dict_config": 46, "optim_state_dict_config": 46, "descend": [46, 54, 127, 531, 865, 1194, 1257, 1258, 1427, 1789, 1816, 1872, 1952], "transpar": [46, 1898, 1917, 1924, 1926], "sharded_state_dict": 46, "shardedstatedictconfig": [46, 1870], "offload_to_cpu": 46, "optimstatedictconfig": [46, 1870], "param_state_dict": 46, "statedictconfig": [46, 1870], "writeback": 46, "summon": 46, "portion": [46, 1116, 1364, 1458, 1566, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1920, 1948, 1957], "discard": [46, 1191, 1251, 1617, 1869, 1873, 1884], "redundantli": [46, 1893], "materi": [46, 889, 952, 1609, 1610, 1686, 1739, 1740, 1899], "throughput": [46, 1871, 1896], "backward_post": 46, "altogeth": [46, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686], "contend": 46, "volum": [46, 1156], "_hybrid_shard_zero2": 46, "freed": [46, 141, 882, 896, 976, 1024, 1886, 1897, 1903, 1924, 1942, 1959], "param_dtyp": 46, "reduce_dtyp": 46, "buffer_dtyp": 46, "keep_low_precision_grad": 46, "cast_forward_input": 46, "cast_root_forward_input": 46, "_module_classes_to_ignor": 46, "batchnorm": [46, 689, 690, 1132, 1194, 1203, 1427, 1466, 1607, 1882, 1894, 1905, 1915, 1917, 1919, 1921, 1922], "_batchnorm": 46, "kept": [46, 50, 54, 686, 768, 774, 1345, 1346, 1347, 1390, 1391, 1392, 1466, 1537, 1595, 1874, 1886, 1922, 1928], "permit": [46, 1928], "thereaft": 46, "local_state_dict": 46, "upcast": 46, "recast": 46, "offload_param": 46, "use_dtensor": 46, "cfg": 46, "finetun": [46, 1194, 1427], "model_fn": 46, "my_checkpoint": 46, "localstatedictconfig": [46, 1870], "shardedoptimstatedictconfig": [46, 1870], "localoptimstatedictconfig": [46, 1870], "jax": [47, 50, 51, 52, 1894, 1900, 1947], "love": 47, "hear": 47, "vmap": [47, 49, 50, 54, 890, 892, 896, 897, 898, 1125, 1128, 1129, 1131, 1133, 1947], "arbitrarili": [47, 52, 502, 1197, 1491, 1874, 1894, 1899, 1900], "stock": [47, 52], "ensembl": [47, 50, 52, 1133], "maml": [47, 52], "vjp": [47, 50, 51, 878, 879, 1129, 1135, 1862, 1899, 1900], "whirlwind": 47, "tour": 47, "ux": [47, 52, 1950], "jacrev": [48, 50, 51, 892, 1127, 1128, 1900], "functional_cal": [48, 50, 1133, 1947], "running_mean": [49, 1132, 1194, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1466, 1496, 1536, 1872, 1905, 1910, 1952], "running_var": [49, 1132, 1194, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1466, 1496, 1536, 1872, 1910, 1952], "groupnorm": [49, 1527], "anywher": [49, 1893], "batchnorm2d": [49, 702, 705, 707, 712, 803, 1203, 1364, 1401, 1496, 1882, 1894, 1905, 1919, 1921], "track_running_stat": [49, 740, 741, 742, 1132, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1910], "64": [49, 50, 52, 941, 1128, 1129, 1133, 1332, 1333, 1334, 1336, 1337, 1338, 1344, 1455, 1576, 1752, 1853, 1889, 1911, 1912, 1919, 1923, 1928, 1931, 1933, 1934, 1949], "resnet": [49, 1869, 1871, 1873, 1905, 1916, 1933, 1937], "regnet": 49, "norm_lay": 49, "resnet18": [49, 54, 1869, 1871, 1873, 1883, 1916, 1955], "num_group": [49, 738, 1382, 1527, 1872], "attach": [49, 53, 54, 130, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 782, 827, 829, 853, 1598, 1869, 1871, 1873, 1887, 1894, 1899, 1919, 1925, 1937, 1945], "fragil": 49, "replace_all_batch_norm_modules_": 49, "upstream": [50, 1911], "reflect": [50, 448, 509, 545, 1119, 1120, 1123, 1191, 1355, 1356, 1357, 1403, 1404, 1405, 1448, 1449, 1450, 1526, 1564, 1649, 1700, 1812, 1871, 1872, 1901, 1932, 1942], "coupl": [50, 68, 1871, 1904, 1925, 1942, 1956], "jvp": [50, 51, 879, 883, 884, 885, 889, 1131, 1899], "jacfwd": [50, 51, 892, 1127, 1900], "carefulli": [50, 53, 1900, 1916, 1946, 1948], "make_functional_with_buff": 50, "hurri": 50, "gist": [50, 782, 1902, 1950, 1951], "emul": [50, 788, 1875, 1899], "fmodel": 50, "compute_loss": [50, 52, 1123, 1125], "predict": [50, 1335, 1344, 1381, 1509, 1915, 1933], "And": [50, 786, 813, 1046, 1047, 1123, 1194, 1215, 1291, 1296, 1350, 1427, 1852, 1854, 1894, 1899, 1900, 1911, 1912, 1919, 1938, 1943, 1948, 1949, 1950], "argnum": [50, 1125, 1126, 1127, 1128, 1129], "stack_module_st": 50, "num_model": [50, 1133], "in_featur": [50, 709, 717, 718, 721, 722, 745, 753, 1133, 1194, 1335, 1412, 1414, 1427, 1598, 1614, 1615, 1647, 1648, 1651, 1905], "out_featur": [50, 709, 717, 718, 721, 722, 745, 753, 1133, 1194, 1348, 1412, 1414, 1427, 1598, 1614, 1615, 1647, 1648, 1651, 1905], "base_model": 50, "deepcopi": [50, 1919, 1938], "clearer": [50, 1250, 1686, 1899, 1913], "call_single_model": 50, "aotautograd": [50, 669, 1880, 1898, 1946, 1947, 1948, 1957], "stori": [50, 1902], "grad_x": [51, 1900], "has_aux": [51, 1125, 1126, 1128, 1129, 1130, 1134], "mental": [51, 1124], "absenc": 51, "unbind": [51, 1135, 1862, 1870, 1872, 1887, 1914, 1932], "presenc": [51, 54, 1203, 1322, 1907, 1916, 1928, 1953], "pop": [51, 1028, 1428, 1437, 1914, 1917, 1918, 1950], "lst": 51, "in_dim": [51, 52, 881, 1125, 1135, 1862, 1900], "batchedtensor": 51, "batched_tensor_input": 51, "new_": [51, 1897, 1934], "new_zero": [51, 1872, 1914], "new_empti": [51, 1872, 1914], "diag_emb": [51, 1057, 1229, 1230, 1257, 1816, 1872, 1914], "vec": [51, 98, 99, 414, 679, 1319, 1650, 1872, 1928, 1952], "copy_": [51, 212, 1124, 1479, 1871, 1872, 1887, 1897, 1930], "arithmet": [51, 914, 917, 931, 1249, 1741, 1875, 1884, 1887, 1888, 1908, 1919, 1931], "extra_arg": 51, "theoret": 51, "custom_dot": 51, "lax": 51, "while_loop": 51, "is_nonzero": [51, 1872, 1914, 1928], "rag": 51, "unclear": [51, 606], "add_nois": 51, "prng": 51, "cos_x": [52, 1125], "co": [52, 55, 59, 60, 62, 63, 192, 624, 625, 672, 919, 941, 1010, 1125, 1128, 1129, 1134, 1151, 1152, 1245, 1361, 1362, 1365, 1689, 1690, 1697, 1709, 1771, 1772, 1775, 1776, 1777, 1778, 1780, 1798, 1799, 1800, 1802, 1803, 1872, 1887, 1914, 1915, 1928, 1933, 1935, 1943, 1949, 1952], "neg_sin_x": [52, 1125], "hide": [52, 1135, 1862, 1900], "simpler": [52, 1135, 1862, 1871, 1894, 1899, 1902, 1905], "feature_s": [52, 1125, 1135, 1862], "feature_vec": [52, 1125, 1135, 1862], "mseloss": [52, 1125, 1388, 1458, 1557, 1897, 1898], "grad_weight_per_exampl": [52, 1125], "cotang": [52, 1134], "vjp_fn": [52, 1134], "out_tang": 52, "hessian0": 52, "hessian1": 52, "hess": [52, 1127], "encapsul": [53, 54, 1665, 1924, 1942], "rpc_async": [53, 1874, 1914, 1924, 1926], "add_done_callback": 53, "fut": [53, 1197, 1607, 1896, 1924], "set_result": [53, 1607, 1924], "haven": [53, 1905], "usabl": [53, 1874, 1912, 1944], "set_except": 53, "baseexcept": 53, "valueerror": [53, 55, 71, 1192, 1619, 1620, 1640, 1643, 1662, 1666, 1899, 1917, 1935, 1956], "slow_set_futur": 53, "sleep": 53, "cb1": 53, "cb2": 53, "dedic": [53, 1897], "pool": [53, 755, 756, 757, 758, 771, 772, 968, 1002, 1003, 1013, 1024, 1302, 1303, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1375, 1376, 1395, 1396, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1485, 1486, 1487, 1488, 1489, 1490, 1493, 1494, 1495, 1521, 1522, 1547, 1548, 1550, 1551, 1552, 1720, 1721, 1870, 1896, 1897, 1899, 1905, 1907, 1921, 1924, 1942], "didn": [53, 1899, 1911, 1915], "cb_fut": 53, "chain_cb_fut": 53, "cb": [53, 1924], "held": [53, 968, 992, 1020, 1304, 1893, 1949], "collect_al": [53, 1870], "fut0": 53, "fut1": [53, 1924], "fut_list": 53, "wait_al": [53, 1870], "toolkit": 54, "clamp": [54, 177, 178, 788, 791, 937, 1200, 1343, 1381, 1526, 1537, 1595, 1872, 1882, 1887, 1912, 1914, 1919, 1921, 1922, 1929, 1935, 1952], "symbolic_trac": 54, "num_us": 54, "call_modul": [54, 67, 1956], "call_method": [54, 67, 1943, 1944, 1950], "feed": [54, 1871, 1901, 1905, 1937, 1946], "fake": [54, 71, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 782, 788, 789, 799, 801, 827, 850, 851, 1081, 1082, 1662, 1912, 1916, 1919, 1922, 1939], "theses": 54, "callsit": 54, "constitut": 54, "tracer_class": 54, "gm": [54, 1943, 1944, 1946, 1950, 1956, 1957], "treatment": 54, "topk": [54, 1872, 1887, 1914, 1952], "print_tabular": [54, 1943, 1944, 1950], "opcod": [54, 1916, 1943, 1944, 1950], "linear_weight": 54, "add_1": [54, 55, 58, 60, 62, 63, 1124], "linear_1": 54, "relu_1": 54, "sum_1": [54, 1943, 1944], "topk_1": 54, "pose": [54, 1925], "explor": [54, 66, 1869, 1894, 1905, 1916, 1959], "edit": [54, 1916, 1932], "lint": 54, "inserting_aft": [54, 1956], "new_nod": 54, "replace_all_uses_with": [54, 1956], "tediou": 54, "unwieldi": 54, "conv": [54, 691, 692, 693, 694, 695, 696, 697, 698, 699, 781, 782, 785, 803, 843, 849, 1194, 1203, 1209, 1210, 1355, 1356, 1357, 1358, 1359, 1360, 1427, 1428, 1434, 1882, 1892, 1897, 1908, 1912, 1919, 1920, 1921, 1922, 1951, 1953], "fusion": [54, 781, 803, 849, 850, 941, 1196, 1202, 1207, 1208, 1209, 1210, 1882, 1905, 1919, 1947, 1949, 1956, 1957], "machineri": [54, 1899], "imagin": [54, 1924, 1948], "requisit": 54, "relu_decomposit": 54, "decomposition_rul": 54, "constitu": [54, 1889], "new_graph": 54, "graphappendingtrac": 54, "proxy_arg": 54, "output_proxi": 54, "node_copi": 54, "ari": [54, 1912], "unari": [54, 1128, 1129, 1470, 1472, 1474, 1875, 1887], "organiz": 54, "shapeprop": 54, "mod": [54, 710, 711, 721, 727, 728, 729, 734, 735, 745, 753, 799, 800, 801, 802, 825, 826, 853, 1123, 1197, 1198, 1203, 1210, 1649, 1855, 1873, 1874, 1916, 1937, 1943, 1957], "named_modul": [54, 1194, 1427, 1905], "args_it": 54, "load_arg": 54, "map_arg": 54, "fetch_attr": 54, "target_atom": 54, "attr_itr": 54, "hasattr": [54, 1852, 1872, 1899, 1919, 1950], "referenc": [54, 971, 1194, 1427, 1839, 1873, 1894, 1912, 1924, 1950], "nonexist": [54, 1873, 1874], "elif": [54, 1200, 1393, 1662, 1873, 1874, 1903, 1950, 1956], "self_obj": 54, "encompass": 54, "prove": [54, 1886], "disprov": 54, "led": [54, 1959], "auxiliari": [54, 1125, 1126, 1128, 1129, 1130, 1134, 1869, 1904], "nondeterminist": [54, 304, 306, 312, 488, 504, 506, 912, 1068, 1069, 1070, 1215, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1423, 1424, 1425, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1518, 1526, 1537, 1564, 1576, 1595, 1596, 1597, 1758, 1851, 1943], "unord": [54, 1428, 1437], "nondetermin": [54, 898, 1909], "dedupl": [54, 1912], "straightforward": [54, 1881, 1889, 1905, 1915, 1928, 1943, 1950], "torchvis": [54, 1869, 1870, 1871, 1873, 1912, 1916, 1919, 1933, 1937, 1955], "transformed_resnet18": 54, "input_imag": 54, "224": [54, 850, 851, 1871, 1873, 1912, 1955], "margin": [54, 1361, 1387, 1419, 1430, 1432, 1475, 1476, 1507, 1534, 1549, 1558, 1592, 1593, 1872, 1933], "commut": 54, "toolbox": 54, "tradit": [54, 1474], "luckili": 54, "my_pass": 54, "my_module_transform": 54, "input_valu": 54, "prompt": [54, 1869, 1911], "set_trac": [54, 1199, 1205, 1211, 1871], "examin": [54, 1905, 1912, 1918, 1959], "undergon": 54, "subclassm": 54, "untrac": 54, "pre_trac": 54, "post_trac": 54, "sake": 54, "tabular": [54, 669, 1880], "transform_graph": 54, "session": 54, "luck": 54, "input_nod": 54, "stepwis": 54, "breakpoint": [54, 1874, 1956], "excel": [54, 1948], "onlin": [54, 1671], "realpython": 54, "pycharm": 54, "vscode": 54, "graphic": [54, 1885, 1911, 1955], "parlanc": 54, "func_to_trac": 54, "dyn": 54, "155": 54, "__bool__": [54, 1872, 1874], "to_bool": 54, "85": [54, 1430, 1697, 1951, 1955], "traceerror": [54, 1919], "architectur": [54, 994, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1363, 1470, 1509, 1760, 1897, 1908, 1919, 1928, 1941], "hyper": [54, 1458, 1873, 1933], "do_activ": 54, "512": [54, 1470, 1471, 1472, 1473, 1474, 1897, 1941], "without_activ": 54, "with_activ": 54, "traced_without_activ": 54, "traced_with_activ": 54, "concrete_arg": 54, "truli": [54, 1912], "__torch_function__": [54, 1958], "161": 54, "len_1": 54, "sqrt_1": 54, "truediv": [54, 1943, 1944], "mycustomtrac": 54, "traced_graph": 54, "runnabl": [54, 1893, 1912, 1933, 1957], "myspecialsubmodul": 54, "submod": 54, "neg_1": 54, "is_leaf_modul": [54, 1938], "sparse_coo_tensor": [54, 533, 570, 1797, 1872, 1876, 1914, 1928], "traceabl": [54, 613, 806, 1871, 1919, 1945], "ones_lik": [54, 1128, 1129, 1134, 1872, 1889, 1897, 1900, 1905, 1914], "zeros_lik": [54, 887, 889, 1872, 1876, 1889, 1897, 1914, 1928], "viabl": [54, 1897], "torch_randn": 54, "gotcha": 54, "bake": [54, 55, 63, 1198, 1203, 1672, 1673, 1915], "dropoutrepro": 54, "assert_clos": [54, 1084, 1086, 1087, 1092, 1093, 1098, 1099, 1100, 1102, 1104, 1870, 1871, 1935], "greatest": [54, 1137, 1321, 1912, 1935], "6207983493804932": 54, "dropoutrepro2": 54, "pytre": [54, 55, 1900], "overspeci": [54, 941], "ph": 54, "shouldn": [54, 968, 1916, 1928, 1932], "fn_or_nam": 54, "callfunct": 54, "my_custom_funct": 54, "fn_to_be_trac": 54, "reassign": [54, 1897], "regener": 54, "unset": [54, 1908], "add_submodul": 54, "subpath": 54, "get_submodul": [54, 1194, 1427], "delete_all_unused_submodul": 54, "delete_submodul": 54, "print_read": 54, "print_output": 54, "date": [54, 1916], "pythoncod": 54, "fxmodul": 54, "pathlik": [54, 1265, 1747, 1916], "owning_modul": 54, "tracer_cl": 54, "tracer_extra": 54, "the_funct": 54, "type_expr": 54, "create_nod": 54, "method_nam": 54, "0th": [54, 1135, 1862], "inserting_befor": 54, "influenc": [54, 1661, 1912, 1928], "eliminate_dead_cod": 54, "dead": [54, 1956], "topolog": [54, 1912], "attr_1": 54, "is_impur": 54, "bad": [54, 55, 1886, 1912, 1916, 1919, 1946, 1955], "erase_nod": 54, "to_eras": 54, "eras": [54, 55, 60, 61, 1945], "qualified_nam": 54, "graph_copi": 54, "val_map": 54, "return_output_nod": 54, "slice": [54, 55, 63, 64, 596, 684, 685, 1345, 1346, 1347, 1460, 1462, 1466, 1582, 1583, 1736, 1753, 1754, 1785, 1795, 1846, 1871, 1875, 1889, 1897, 1912, 1914, 1928, 1929, 1932, 1934, 1952], "memory_format": [54, 146, 161, 163, 166, 169, 170, 171, 180, 186, 197, 200, 224, 231, 258, 288, 316, 322, 384, 488, 489, 514, 569, 938, 1068, 1069, 1122, 1194, 1427, 1607, 1659, 1725, 1727, 1729, 1868, 1870, 1872, 1935, 1952], "opoverload": [54, 1878], "companion": 54, "__exit__": [54, 1874, 1875, 1916], "arg_transform": 54, "value_remap": 54, "_node_list": 54, "doubli": 54, "on_generate_cod": 54, "make_transform": 54, "transformcodefunc": 54, "insert_pdb": 54, "bodi": [54, 55, 63, 65, 1205, 1871, 1873, 1874, 1875, 1957], "current_tran": 54, "stuff": [54, 1946], "default_valu": 54, "_not_": 54, "tabul": 54, "process_input": 54, "process_output": 54, "python_cod": 54, "root_modul": [54, 782, 1921], "set_codegen": 54, "codegen": [54, 1899, 1947, 1951, 1957], "return_typ": [54, 686, 1046, 1047, 1156, 1215, 1253, 1291, 1294, 1296, 1299, 1323, 1789, 1834, 1839], "printout": [54, 1012, 1025, 1944], "all_input_nod": 54, "format_nod": 54, "placeholder_nam": 54, "maybe_return_typenam": 54, "autogener": [54, 1900], "impur": 54, "normalized_argu": 54, "arg_typ": 54, "kwarg_typ": 54, "normalize_to_only_use_kwarg": 54, "vararg": 54, "argskwargspair": 54, "bx": 54, "ax": [54, 1225, 1239, 1243, 1254, 1255, 1256, 1284, 1295, 1435, 1445, 1839, 1912], "prev": [54, 1684], "replace_with": 54, "delete_user_cb": 54, "propagate_meta": 54, "replace_input_with": 54, "old_input": 54, "new_input": 54, "create_proxi": 54, "record_stack_trac": 54, "dynamo": [54, 66, 669, 1880, 1943, 1945, 1946, 1947, 1948, 1950, 1951, 1953, 1954, 1955, 1957], "outputgraph": [54, 1950], "update_arg": 54, "update_kwarg": 54, "autowrap_modul": 54, "autowrap_funct": 54, "create_arg": 54, "create_args_for_root": 54, "root_fn": 54, "is_modul": 54, "introspect": [54, 943, 1947], "disallow": [54, 1916, 1924, 1931, 1947, 1948], "proxy_factory_fn": 54, "attr": [54, 55, 57, 141, 882, 1295, 1744], "attr_val": 54, "parameter_proxy_cach": 54, "module_qualified_nam": [54, 1938], "path_of_modul": 54, "some_hyperparamet": 54, "indexed_item": 54, "proxied_valu": 54, "garbage_collect_valu": 54, "run_nod": 54, "swap": [54, 606, 777, 778, 779, 782, 786, 853, 1283, 1475, 1476, 1592, 1593, 1836, 1872, 1875, 1897, 1919, 1928, 1930, 1937], "vice": [54, 448, 592, 1119, 1120, 1419, 1894, 1922, 1930, 1945], "versa": [54, 448, 592, 1119, 1120, 1419, 1894, 1922, 1930, 1945], "negsigmswapinterpret": 54, "call_self": 54, "args_tail": 54, "boxed_run": 54, "args_list": 54, "promptli": [54, 1266], "fetch_args_kwargs_from_env": 54, "map_nodes_to_valu": 54, "initial_env": 54, "enable_io_process": 54, "negsigmswapxform": 54, "nodes_map": [54, 1956], "subgraph_rewrit": [54, 1956], "w1": 54, "w2": 54, "m1": [54, 1860, 1861], "m2": [54, 1647, 1860, 1861, 1919], "traced_modul": [54, 1910, 1956], "despit": [54, 1209, 1210, 1902], "stack_1": 54, "stack_2": 54, "sum_2": 54, "max_2": 54, "add_2": [54, 55, 58, 60], "exhaust": [55, 1607], "wih": 55, "escap": [55, 1947], "hatch": [55, 1947], "assumeconstantresult": [55, 64], "burn": [55, 64, 1942], "tracabl": [55, 64], "get_item": [55, 64], "f32": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "i64": [55, 60, 61, 64], "slice_1": [55, 63, 64], "myautogradfunct": 55, "autogradfunct": 55, "allow_in_graph": [55, 1947], "cl": [55, 57, 130, 1899, 1919, 1924, 1958], "mul_1": [55, 61, 1943], "l__self___linear": 55, "control_flow": [55, 58, 62, 63, 65], "mysubmodul": [55, 62, 63], "condbranchclassmethod": [55, 62, 63], "true_fn": [55, 58, 62, 63], "false_fn": [55, 58, 62, 63], "pred": [55, 58, 62, 63, 1393, 1607, 1906, 1915, 1924, 1952], "subm": [55, 62, 63], "submodule_0": [55, 58, 62, 63, 65], "submodule_1": [55, 58, 62, 63], "inner_true_fn": [55, 62, 63], "inner_false_fn": [55, 62, 63], "my_tensor_var": [55, 62, 63], "my_primitive_var": [55, 62, 63], "nonloc": [55, 58, 62, 63, 1875], "_tensor_constant0": [55, 62, 63], "lift_fresh_copi": [55, 62, 63, 1914], "sub_1": [55, 62, 63], "condclosedovervari": [55, 58, 62], "val": [55, 58, 62, 1010, 1200, 1872, 1874, 1892, 1946, 1950], "b8": [55, 58, 62], "dynamic_constraint": [55, 57, 62, 63], "operand": [55, 62, 63, 917, 1067, 1874, 1875, 1899, 1928, 1931], "s0": [55, 62, 63, 1945, 1957], "sym_siz": [55, 62, 63, 1914, 1952], "sym": [55, 62, 63, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780], "gt": [55, 62, 63, 287, 1148, 1872, 1887, 1902, 1914, 1952], "rangeconstraint": [55, 62, 63], "min_val": [55, 62, 63, 767, 1386, 1532, 1533, 1872, 1952], "max_val": [55, 62, 63, 767, 1386, 1532, 1533, 1872, 1952], "9223372036854775806": [55, 62, 63], "predic": [55, 60, 62, 63], "test_decor": 55, "dynamicshapeifguard": [55, 60, 63], "map_impl": [55, 63, 65], "getitem": [55, 63, 65, 1956], "slice_2": [55, 63], "9223372036854775807": [55, 63, 1192, 1640, 1884, 1959], "new_x_shap": [55, 63], "pos0": [55, 61], "tuple0": [55, 61], "myarg": [55, 61], "mykw0": [55, 61], "mykwarg": [55, 61], "input0": [55, 61], "input1": [55, 61, 749, 1348, 1361, 1362, 1419, 1436, 1497, 1507, 1508, 1549, 1872, 1893, 1912], "arg5_1": [55, 61], "arg6_1": [55, 61], "arg7_1": [55, 61], "mul_2": [55, 61], "mul_3": [55, 61], "mul_4": [55, 61], "mul_5": [55, 61], "mul_6": [55, 61], "monkei": [55, 56, 61, 63, 1852], "cow": [55, 56, 61, 63], "pig": [55, 56, 61, 63], "contextlib": [55, 59], "nullcontext": [55, 59], "tree_flatten": 55, "anim": 55, "moo": 55, "specializedattribut": 55, "staticforloop": [55, 60], "unrol": [55, 60, 1873, 1874, 1912, 1947], "ret": [55, 60, 1899, 1924], "add_3": [55, 60], "add_4": [55, 60], "add_5": [55, 60], "add_6": [55, 60], "add_7": [55, 60], "add_8": [55, 60], "add_9": [55, 60], "staticif": [55, 60], "setattr": [55, 57, 1874], "not_supported_yet": [55, 57, 63], "overli": [55, 57], "type_reflection_method_rewrit": [55, 57], "undergo": 66, "gain": [66, 1686, 1892, 1939, 1949, 1951], "fxe0010": [66, 1913], "diagnosticopt": [66, 68], "verbosity_level": [66, 68, 1660], "torch_log": [66, 68, 669, 941, 1880, 1945, 1957], "onnx_diagnost": [66, 68, 669], "fxe0008": [66, 1913], "onnxscript": [67, 1666, 1912], "torchlib": [67, 71], "fxonnxinterpret": 67, "onnx": [68, 69, 71, 72, 73, 76, 77, 78, 669, 1641, 1642, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1870, 1888, 1919], "streamlin": 68, "endors": 68, "comprehens": [68, 1780, 1874, 1875, 1888, 1897, 1903, 1919], "noteworthi": 68, "_intern": [68, 73, 1913, 1930], "todo": [69, 70, 815, 848, 850, 851, 1899, 1938, 1942, 1946, 1953], "dynamo_export": [69, 1662, 1663, 1912], "disregard": [71, 72, 74], "indexerror": [71, 1625, 1627], "typeerror": [71, 1630, 1899, 1917, 1935, 1958], "opschema": [71, 1913], "onnxfunct": [72, 74, 1666], "perfect": 72, "nearest": [72, 768, 774, 776, 1324, 1479, 1481, 1526, 1537, 1595, 1597, 1716, 1744, 1897], "highest": [72, 669, 1335, 1726, 1727, 1759, 1920, 1935], "stringent": 72, "op_level_debug": [72, 74, 1661], "elementwise_dtyp": 73, "_ref": 73, "type_promot": 73, "absent": [74, 1898], "signifi": 74, "opset_vers": [78, 1666, 1912, 1914], "g_cpu": 79, "g_cuda": 79, "bytetensor": [79, 999, 1000, 1038, 1039, 1146, 1306, 1313, 1765, 1854, 1923, 1931, 1934], "2147483647": 79, "0x8000_0000_0000_0000": [79, 1286, 1923], "0xffff_ffff_ffff_ffff": [79, 1286, 1923], "random_devic": 79, "1516516984916": 79, "new_stat": [79, 1038, 1039, 1313, 1765, 1854, 1923], "void": [79, 969, 1011, 1897, 1904], "g_cpu_oth": 79, "abs_": [83, 1872, 1887, 1934], "acosh": [87, 113, 856, 1872, 1887, 1914, 1952], "batch1": [90, 91, 142, 143, 675, 909, 1872], "batch2": [90, 91, 142, 143, 160, 675, 909, 1872], "tensor1": [92, 93, 94, 95, 676, 677, 1288, 1741, 1872], "tensor2": [92, 93, 94, 95, 305, 395, 676, 677, 1288, 1741, 1872], "mat1": [96, 97, 543, 678, 1158, 1214, 1298, 1790, 1793, 1794, 1808, 1872, 1952], "mat2": [96, 97, 404, 543, 678, 921, 1158, 1214, 1298, 1790, 1793, 1794, 1808, 1872, 1952], "mat": [98, 99, 529, 679, 1319, 1722, 1787, 1790, 1808, 1872, 1933], "vec1": [100, 101, 680, 1872], "vec2": [100, 101, 279, 451, 680, 1140, 1704, 1872], "keepdim": [103, 105, 106, 107, 109, 125, 126, 345, 383, 398, 400, 401, 402, 405, 419, 420, 421, 422, 443, 460, 469, 544, 554, 604, 682, 684, 685, 686, 688, 863, 864, 1215, 1246, 1250, 1263, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1323, 1324, 1325, 1436, 1565, 1654, 1713, 1716, 1810, 1811, 1815, 1857, 1858, 1872, 1887, 1929, 1952], "rtol": [104, 335, 683, 897, 898, 1183, 1248, 1251, 1668, 1871, 1872, 1935], "atol": [104, 335, 683, 897, 898, 1183, 1248, 1251, 1260, 1668, 1871, 1872, 1899, 1935], "08": [104, 335, 683, 919, 1183, 1240, 1362, 1441, 1569, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1699, 1771, 1872], "equal_nan": [104, 335, 683, 1183, 1872, 1935], "arcco": [112, 1872, 1914, 1935], "acosh_": [114, 1872, 1887], "arccosh": [114, 1872, 1914], "arcsin": [116, 870, 1872, 1914, 1928], "arcsinh": [118, 1872, 1914], "atan2_": [121, 1872, 1887], "arctan2": [121, 1872, 1914], "arctan": [122, 1872, 1914], "arctanh": [124, 1872, 1914], "asinh": [134, 858, 1872, 1887, 1914, 1928, 1952], "atan": [138, 620, 621, 859, 1872, 1887, 1914, 1928, 1952], "atanh": [140, 861, 1872, 1887, 1914, 1928, 1952], "wrt": [141, 897, 898], "60521": [141, 882], "issuecom": [141, 882], "867061780": [141, 882], "nearli": [141, 882, 896, 1705, 1907, 1924, 1957], "texttt": [144, 145, 683, 1183, 1335, 1935], "bernoulli": [145, 749, 1339, 1365, 1366, 1367, 1368, 1372, 1379, 1397, 1511, 1512, 1513, 1514, 1519, 1870, 1872, 1887, 1914, 1936], "preserve_format": [146, 161, 163, 166, 169, 170, 171, 180, 197, 200, 231, 258, 288, 316, 384, 514, 569, 938, 1069, 1122, 1659, 1725, 1727, 1729, 1868, 1931], "minlength": [147, 912, 1872], "bitwise_and": [149, 1872, 1914, 1952], "bitwise_left_shift": [151, 1872, 1914], "bitwise_not": [153, 1872, 1887, 1914, 1952], "bitwise_or": [155, 1872, 1914, 1952], "bitwise_right_shift": [157, 1872, 1914], "bitwise_xor": [159, 1872, 1914, 1952], "uint8": [163, 233, 606, 682, 688, 1119, 1714, 1717, 1718, 1741, 1919, 1930, 1931, 1933, 1934, 1960], "cauchi": [164, 1870, 1894, 1902, 1914, 1936], "dfrac": [164, 368, 597, 1362, 1508, 1615, 1648, 1651], "complex32": [170, 1355, 1356, 1357, 1501, 1502, 1503, 1664, 1934, 1935], "int8": [171, 438, 718, 913, 914, 915, 916, 917, 918, 1119, 1275, 1276, 1277, 1278, 1919, 1922, 1928, 1930, 1931, 1934, 1960], "input2": [174, 449, 450, 506, 749, 934, 1348, 1361, 1362, 1419, 1436, 1497, 1507, 1508, 1549, 1872, 1893, 1912], "clamp_": [179, 1872, 1887], "uncoalesc": [181, 319, 1801], "coo": [181, 314, 319, 333, 603, 1158, 1790, 1793, 1798, 1799, 1800, 1801, 1802, 1803, 1870, 1881, 1931, 1935], "inttensor": [182, 199, 1168, 1283, 1284, 1370, 1931, 1934], "csr": [182, 199, 334, 572, 577, 1371, 1790, 1793, 1794, 1800, 1803, 1881, 1935], "sparse_csr": [182, 199, 572, 577, 1793, 1794, 1796, 1800, 1803, 1928], "nnz": [182, 533, 572, 573, 574, 576, 577, 897, 1327, 1791, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1928], "int32": [182, 199, 304, 312, 316, 437, 606, 925, 1069, 1081, 1082, 1117, 1119, 1120, 1224, 1235, 1236, 1237, 1255, 1283, 1350, 1714, 1751, 1919, 1928, 1930, 1931, 1934, 1960], "mkl": [182, 199, 1870, 1896, 1911, 1914, 1928], "routin": [182, 199, 865, 933, 1266, 1789, 1816, 1928], "downcast": [182, 199], "to_sparse_csr": [182, 199, 573, 574, 1793, 1794, 1872, 1914, 1928], "conj_phys": [185, 952, 1872, 1914, 1928, 1952], "contiguous_format": [186, 322, 488, 489, 1068, 1607, 1931], "non_block": [187, 200, 569, 592, 1194, 1427, 1640, 1872, 1897, 1930, 1952], "copysign": [189, 1872, 1914], "fweight": [196, 959, 1872], "aweight": [196, 959, 1872], "sparse_dim": [209, 534, 535, 1790, 1793, 1797, 1801, 1872, 1914, 1928], "resize_": [212, 489, 1124, 1215, 1851, 1871, 1872, 1873, 1887, 1921, 1930], "resize_as_": [212, 1872, 1887, 1928], "set_": [212, 488, 1872], "transpose_": [212, 1872, 1928], "zero_": [212, 1239, 1517, 1872, 1887, 1888, 1905, 1928], "dim1": [216, 218, 219, 558, 581, 582, 1055, 1057, 1058, 1228, 1819, 1836, 1872], "dim2": [216, 218, 219, 1055, 1057, 1058, 1228, 1872], "digamma": [222, 1872, 1887, 1914, 1929, 1952], "laid": 224, "outermost": [224, 1147], "channels_last": [224, 1194, 1427, 1607, 1931], "rounding_mod": [226, 227, 228, 229, 1062, 1063, 1112, 1115, 1735, 1844, 1872], "split_size_or_sect": [232, 293, 608, 1804], "eq": [235, 1872, 1887, 1914, 1952], "erf": [238, 628, 629, 1872, 1887, 1914, 1928, 1929, 1952], "erfc": [240, 630, 631, 1872, 1887, 1914, 1929, 1952], "front": [245, 941, 1266, 1430, 1888, 1900], "lambd": [249, 289, 1383, 1464, 1529, 1585, 1669, 1872], "fill_valu": [251, 436, 1121, 1122, 1350, 1872, 1897, 1952], "tall": [251, 1252, 1257, 1899], "start_dim": [254, 1106, 1373, 1872], "end_dim": [254, 1106, 1373, 1872], "float_pow": [260, 1872, 1914], "floor_divid": [264, 1062, 1872, 1914, 1928], "divisor": [267, 268, 478, 479, 757, 758, 1062, 1112, 1115, 1137, 1341, 1342, 1374, 1478, 1494, 1495, 1735, 1844], "fmod": [268, 1735, 1872, 1914, 1952], "mantissa": [271, 471, 1117, 1217, 1759, 1872, 1897, 1908], "gcd": [274, 1872, 1914, 1952], "geometr": [277, 768, 774, 1526, 1537, 1595, 1856, 1870, 1914, 1936, 1954], "ordin": [280, 1798, 1799, 1800, 1802, 1803, 1931], "greater_equ": [285, 1872, 1914], "hypot": [295, 1872, 1914, 1952], "i0": [297, 1213, 1779, 1872, 1914, 1929], "igamma": [299, 1872, 1914, 1952], "igammac": [301, 1872, 1914, 1952], "3100": [302, 473, 1164, 1733], "3553j": [302, 473, 1164, 1733], "5445": [302, 473, 1164, 1733], "7896j": [302, 473, 1164, 1733], "6492": [302, 473, 1164, 1733], "0633j": [302, 473, 1164, 1733], "0638": [302, 473, 1164, 1733], "8119j": [302, 473, 1164, 1733], "3553": [302, 1164], "7896": [302, 1164], "0633": [302, 1164, 1240, 1889], "8119": [302, 1164], "index_add_": [303, 887, 1165, 1166, 1872, 1909], "index_copy_": [305, 1872], "index_fill_": [307, 1872, 1887], "index_put_": [309, 1872], "include_self": [312, 505, 506, 1167, 1750, 1872, 1952], "identit": 312, "amax": [312, 506, 685, 686, 1793, 1872, 1914, 1952], "amin": [312, 506, 684, 686, 1793, 1872, 1914, 1952], "fill_": [312, 1194, 1219, 1427, 1736, 1872, 1887, 1905, 1930], "72": [312, 606, 1147], "uint8_t": [317, 1664], "retain_grad": [326, 1872, 1894, 1914], "requires_grad_": [326, 438, 1194, 1350, 1427, 1510, 1793, 1830, 1872, 1887, 1894, 1934, 1957], "n_fft": [342, 545, 1191, 1812, 1872], "hop_length": [342, 545, 1191, 1812, 1872], "win_length": [342, 545, 1191, 1812, 1872], "center": [342, 545, 768, 774, 1087, 1191, 1491, 1526, 1537, 1595, 1683, 1705, 1773, 1812, 1872, 1894, 1914, 1933], "onesid": [342, 545, 1191, 1812, 1872, 1952], "return_complex": [342, 545, 1191, 1812, 1872], "element_s": [344, 425, 1872, 1887, 1914, 1930], "lcm": [347, 1872, 1914], "ldexp": [349, 1117, 1872, 1914], "lerp": [353, 1872, 1914], "lt": [354, 386, 1220, 1871, 1872, 1887, 1914, 1943, 1944, 1952], "less_equ": [357, 1872, 1914], "lgamma": [359, 640, 641, 1872, 1914, 1952], "ln": [368, 1222, 1929], "logical_and": [374, 1872, 1914, 1952], "logical_not": [376, 1576, 1872, 1887, 1889, 1914, 1952], "logical_or": [378, 1872, 1914, 1952], "logical_xor": [380, 1872, 1914, 1952], "pivot": [387, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1283, 1284, 1285, 1715, 1872], "get_info": [387, 1283], "lu_data": [388, 1284, 1285, 1872], "lu_pivot": [388, 1284, 1285, 1872], "masked_fill_": [390, 1576, 1872, 1887, 1888], "booltensor": [391, 393, 724, 1287, 1470, 1865, 1931, 1934], "masked_scatter_": [392, 1872], "mvlgamma": [416, 1872, 1914], "posinf": [417, 418, 1321, 1872], "neginf": [417, 418, 1321, 1872], "nan_to_num": [418, 1872, 1914], "interpol": [421, 469, 774, 775, 776, 808, 1219, 1324, 1479, 1480, 1481, 1491, 1526, 1595, 1596, 1597, 1716, 1851, 1872, 1921], "ne": [429, 1615, 1648, 1656, 1872, 1887, 1914, 1952], "8182e": 435, "5765e": 435, "41": [435, 1070, 1252, 1598, 1647, 1715], "0545e": 435, "0949e": 435, "4842e": [435, 1070], "0000e": [435, 1070, 1110, 1271, 1280, 1321, 1647, 1771, 1773, 1774, 1779, 1780], "00": [435, 1070, 1110, 1271, 1280, 1321, 1647, 1667, 1771, 1773, 1774, 1779, 1780, 1871, 1912], "141592": [436, 1121], "1416": [436, 1051, 1121, 1830], "from_numpi": [438, 868, 869, 1830], "array_lik": [438, 868, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1889], "nextaft": [441, 1872, 1914, 1952], "fro": [443, 1225, 1246, 1250, 1263, 1625, 1634, 1654, 1872], "not_equ": [446, 1872, 1914], "resolve_conj": [448, 952, 1872, 1914], "resolve_neg": [448, 1872, 1914], "shorthand": [448, 1213], "input3": [450, 1872], "transpos": [450, 582, 583, 606, 681, 730, 731, 732, 934, 1067, 1134, 1223, 1224, 1230, 1233, 1236, 1243, 1254, 1257, 1358, 1359, 1360, 1478, 1504, 1505, 1506, 1576, 1614, 1643, 1703, 1816, 1818, 1819, 1825, 1839, 1872, 1887, 1889, 1894, 1908, 1912, 1914, 1921, 1928, 1932, 1934, 1952], "polygamma": [456, 1872, 1914, 1929], "q_per_channel_axi": [463, 464, 1872, 1914], "zero_point": [464, 466, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 759, 761, 762, 763, 764, 766, 769, 770, 788, 791, 808, 809, 810, 811, 814, 841, 1081, 1082, 1717, 1718, 1719, 1720, 1721, 1872, 1919, 1920], "qtensor": [468, 1872], "uniform": [471, 597, 911, 1363, 1445, 1509, 1724, 1725, 1773, 1870, 1892, 1914, 1936, 1952], "queu": [476, 974, 1897], "life": [476, 971], "cycl": [476, 882, 971, 1691, 1697, 1894, 1918], "unexpectedli": [476, 1934], "maxnorm": [480, 481, 1736, 1872], "tile": [482, 1872, 1897, 1914, 1928, 1947], "repeat_interleav": [482, 1851, 1872, 1914, 1921], "output_s": [483, 730, 731, 732, 755, 756, 1332, 1333, 1334, 1336, 1337, 1338, 1359, 1374, 1375, 1376, 1423, 1424, 1425, 1478, 1485, 1486, 1487, 1488, 1489, 1490, 1520, 1521, 1522, 1553, 1554, 1555, 1737, 1872, 1889, 1952], "is_leaf": [484, 1872, 1887, 1889, 1914], "saved_weight": 485, "loaded_weight": 485, "5503": 485, "4926": [485, 1905], "1158": 485, "8303": 485, "1007": 485, "9853": 485, "2316": 485, "6606": 485, "resiz": [488, 489, 513, 534, 535, 1119, 1120, 1124, 1479, 1526, 1537, 1872, 1887, 1914, 1930, 1952], "shift": [494, 914, 917, 1087, 1094, 1339, 1345, 1346, 1347, 1372, 1466, 1519, 1742, 1872, 1875, 1952], "decim": [496, 497, 1744, 1872, 1908, 1960], "scatter_": [501, 504, 1748, 1872], "scatter_add_": [502, 503, 1749, 1851, 1872], "scatter_reduce_": [502, 505, 1750, 1872], "axi": [502, 504, 506, 811, 814, 951, 1066, 1081, 1107, 1136, 1159, 1717, 1737, 1742, 1743, 1864, 1872, 1900, 1912, 1917, 1919, 1952, 1956], "4600": 502, "2300": 502, "scatter_reduc": [506, 1851, 1872, 1914, 1952], "sgn": [511, 1116, 1769, 1872, 1887, 1889, 1914, 1928], "int16": [514, 1119, 1276, 1928, 1930, 1931, 1934, 1960], "dense_dim": [532, 534, 535, 572, 573, 574, 576, 577, 1801, 1872, 1914, 1928], "nse": [533, 1928], "randint": [533, 912, 959, 1110, 1299, 1350, 1476, 1509, 1510, 1797, 1872, 1876, 1888, 1914, 1933, 1936], "6550": 533, "2397": 533, "1611": 533, "0779": [533, 1230, 1712, 1865], "2326": 533, "0558": 533, "4711": 533, "9678": 533, "5138": 533, "0411": 533, "9417": 533, "5158": 533, "0793": 533, "0036": [533, 1291], "2569": 533, "1055": 533, "sparse_coo": [533, 572, 1327, 1793, 1796, 1797, 1801, 1928, 1931], "split_siz": [536, 1804, 1872, 1952], "squeez": [542, 682, 684, 685, 686, 688, 1215, 1281, 1291, 1293, 1294, 1296, 1299, 1322, 1325, 1508, 1713, 1797, 1810, 1811, 1815, 1857, 1858, 1872, 1887, 1912, 1914, 1921, 1932, 1952], "pad_mod": [545, 1812, 1872], "typedstorag": [546, 1870, 1910, 1930], "untypedstorag": [546, 602, 1870, 1910, 1930], "untyped_storag": 546, "compute_uv": [556, 1257, 1258, 1816, 1872], "axis0": [557, 1818, 1872], "axis1": [557, 1818, 1872], "dim0": [558, 581, 582, 1819, 1836, 1872], "indices_or_sect": [567, 1065, 1157, 1831, 1863], "5044": 569, "0005": [569, 1695, 1701], "3310": 569, "0584": [569, 1816], "cuda0": [569, 1897, 1903, 1934], "masked_grad": [570, 1872], "sparse_mask": [570, 1872, 1914], "mkldnn": [571, 1203, 1870, 1914], "sparsedim": 572, "blocksiz": [572, 573, 574, 1798, 1799, 1800, 1872, 1928], "sparse_csc": [572, 576, 1796, 1800, 1802, 1928], "sparse_bsr": [572, 574, 1799, 1800, 1928], "sparse_bsc": [572, 573, 1798, 1800, 1928], "bsr": [572, 574, 1799, 1800, 1935], "bsc": [572, 573, 1798, 1800, 1935], "csc": [572, 576, 1800, 1802, 1935], "minu": [572, 573, 574, 576, 577, 1929], "crow_indic": [572, 574, 577, 1791, 1793, 1794, 1796, 1799, 1800, 1803, 1872, 1914, 1928, 1935], "col_indic": [572, 574, 577, 1793, 1794, 1796, 1799, 1800, 1803, 1872, 1914, 1928, 1935], "sparsecsr": [572, 1836, 1928], "row_indic": [573, 576, 1798, 1802, 1872, 1914, 1928, 1935], "ccol_indic": [573, 576, 1798, 1802, 1872, 1914, 1928, 1935], "_nnz": [575, 576, 577, 1914], "012766935862600803": 578, "5415473580360413": 578, "08909505605697632": 578, "7729271650314331": 578, "unitriangular": [583, 1256, 1839, 1872], "tril": [585, 1576, 1872, 1914], "triu": [587, 1619, 1839, 1872, 1912, 1914], "trunc": [591, 666, 667, 676, 1062, 1105, 1112, 1115, 1744, 1872, 1887, 1914, 1928, 1952], "sizedim": 596, "return_invers": [598, 599, 1848, 1849, 1872], "return_count": [598, 599, 1848, 1849, 1872], "unsqueez": [601, 1087, 1214, 1254, 1370, 1446, 1619, 1833, 1872, 1899, 1914, 1921, 1928, 1932, 1933, 1952], "subspac": [606, 1257, 1433, 1705, 1816, 1817], "span": [606, 1028, 1029, 1363, 1816, 1918, 1924], "foral": 606, "proportion": [606, 774, 1479, 1595], "met": [606, 1233, 1240, 1241, 1252, 1266, 1474], "9482": [606, 1171], "0310": 606, "4999": 606, "5316": 606, "1520": 606, "7472": 606, "5617": 606, "8649": 606, "4724": [606, 1905], "0334": 606, "2976": 606, "8499": 606, "2109": 606, "9913": 606, "9607": 606, "6123": 606, "1064483442": 606, "1124191867": 606, "1069546515": 606, "1089989247": 606, "1105482831": 606, "1061112040": 606, "1057999968": 606, "1084397505": 606, "1071760287": 606, "1123489973": 606, "1097310419": 606, "1084649136": 606, "1101533110": 606, "1073668768": 606, "1082790149": 606, "1088634448": 606, "1000000000": 606, "0047": 606, "0310j": 606, "5316j": 606, "7472j": 606, "8649j": 606, "0334j": 606, "8499j": 606, "9913j": 606, "6123j": 606, "202": 606, "154": [606, 1911], "59": [606, 1841, 1843], "182": 606, "243": [606, 1191, 1816], "253": 606, "188": 606, "185": [606, 1957], "252": [606, 1911], "191": 606, "63": [606, 1911, 1919], "240": 606, "227": 606, "165": 606, "190": 606, "128": [606, 709, 717, 718, 745, 753, 783, 808, 809, 1348, 1362, 1389, 1414, 1436, 1475, 1476, 1508, 1576, 1888, 1889, 1919, 1921, 1922, 1924, 1928, 1931, 1934, 1955], "146": 606, "106": 606, "205": 606, "112": [606, 1957], "206": 606, "189": 606, "95": [606, 1693, 1696, 1697], "147": 606, "89": [606, 1723, 1951], "43": 606, "246": [606, 1957], "87": 606, "235": 606, "226": 606, "254": [606, 1911], "111": [606, 1667, 1912], "117": 606, "177": 606, "28": [606, 735, 1050, 1837, 1912, 1944, 1951], "xlogi": [611, 1872, 1914, 1929], "inductor": [669, 941, 1880, 1914, 1939, 1942, 1943, 1944, 1945, 1947, 1949, 1951, 1954, 1955, 1957, 1959], "aot_graph": [669, 1880], "aot_joint_graph": [669, 1880], "ddp_graph": [669, 1880], "graph_cod": [669, 1880], "graph_break": [669, 1880, 1942, 1947, 1948, 1955], "graph_siz": 669, "trace_sourc": 669, "trace_cal": 669, "output_cod": [669, 1880, 1944, 1949, 1957], "perf_hint": [669, 941], "toggl": [669, 1897], "artifact": [669, 1880, 1904, 1916, 1955, 1957], "supress": 669, "silenc": 669, "lowest": [669, 931, 1321, 1624, 1625, 1633, 1634, 1726, 1727, 1899, 1935], "notset": 669, "torchinductor": [669, 1880, 1939, 1944, 1945, 1947, 1949], "joint": [669, 1880], "ddpoptim": [669, 1880], "unregist": [669, 1880, 1884, 1912], "cosin": [672, 673, 956, 957, 1361, 1362, 1508, 1689, 1690, 1697, 1775, 1915, 1947], "3348": 672, "5889": 672, "2005": [672, 1858, 1957], "1584": 672, "2294": [672, 1293], "2004": 672, "3690": 672, "7298": [672, 1734], "hyperbol": [673, 871, 874, 957, 1467, 1784, 1829], "uniform_": [673, 874, 911, 1870, 1872, 1887, 1892, 1899, 1929, 1936], "3192": 673, "9915": 673, "9674": 673, "7151": 673, "7791": 673, "3120": [673, 954], "2979": 673, "1341": 673, "_i": [674, 675, 676, 677, 678, 909, 911, 914, 917, 921, 936, 1062, 1112, 1217, 1219, 1316, 1475, 1708, 1712, 1731, 1767, 1813, 1865, 1929], "0202": 674, "0985": 674, "3506": [674, 1283], "6056": 674, "19": [674, 735, 934, 1424, 1871, 1912, 1928, 1951], "3944": 674, "9732": 674, "3497": 674, "6245": [674, 1225], "4022": [674, 1049, 1816], "3743": 674, "7724": 674, "5811": 674, "8017": 674, "7695": 674, "3930": 674, "3672": [674, 967, 1226], "1450": [674, 1797], "6971": 674, "0736": [674, 1905], "0994": 674, "3216": 674, "7845": 674, "1610": 674, "1868": 674, "4090": 674, "9902": [674, 967, 1226], "3667": [674, 954], "3925": 674, "6147": 674, "sum_": [675, 1191, 1245, 1262, 1340, 1341, 1342, 1355, 1356, 1357, 1363, 1395, 1396, 1415, 1430, 1434, 1436, 1810, 1811, 1812, 1832, 1837, 1857, 1858, 1859, 1929], "mathbin": [675, 678, 679, 909, 921, 1794], "doubletensor": [675, 676, 677, 678, 679, 909, 1757, 1931, 1934], "tensorfloat32": [675, 678, 909, 921, 1288, 1298, 1355, 1356, 1357, 1358, 1359, 1360, 1414, 1501, 1502, 1503, 1504, 1505, 1506, 1543, 1759, 1897, 1908], "rocm": [675, 678, 909, 921, 1288, 1298, 1355, 1356, 1357, 1358, 1359, 1360, 1380, 1398, 1414, 1870], "6311": 675, "0503": 675, "9768": [675, 1905], "0362": 675, "1653": 675, "8185": 675, "4255": [675, 1316], "6760": 675, "9453": 675, "5743": 675, "8202": 675, "3691": 675, "0943": 675, "1109": [675, 1381, 1780], "4730": [675, 1832], "histor": [676, 1024, 1367, 1896, 1905, 1910], "2312": [676, 1797], "6496": 676, "1312": 676, "0428": 676, "4292": 676, "1030": 676, "5369": 676, "9829": 676, "0430": 676, "8635": 677, "6391": 677, "6174": 677, "7617": 677, "5879": 677, "7388": 677, "8353": 677, "6249": 677, "6511": 677, "8716": 678, "4671": 678, "3746": 678, "7573": 678, "9555": 678, "8681": 678, "3768": 679, "5565": 679, "otim": [680, 1214, 1378, 1525], "conj": [681, 953, 1083, 1084, 1086, 1088, 1095, 1097, 1101, 1102, 1104, 1223, 1224, 1230, 1232, 1251, 1739, 1740, 1872, 1899, 1902, 1914, 1934, 1952], "mh": [681, 932, 1230, 1816, 1872, 1914, 1932, 1934], "lvert": [683, 1183, 1475, 1562, 1935], "rvert": [683, 1183, 1935], "leq": [683, 910, 911, 954, 1085, 1087, 1183, 1214, 1218, 1233, 1239, 1350, 1369, 1430, 1432, 1434, 1510, 1561, 1564, 1770, 1812, 1892, 1929], "elementwis": [683, 954, 983, 1010, 1011, 1110, 1112, 1331, 1390, 1391, 1392, 1464, 1585, 1856, 1874, 1889, 1902, 1929], "07": [683, 808, 809, 810, 811, 814, 932, 933, 1070, 1231, 1234, 1239, 1251, 1252, 1258, 1281, 1284, 1614, 1668, 1675, 1774, 1779, 1816, 1912], "09": [683, 1675, 1687, 1899, 1935], "8177": 684, "4878": 684, "2491": 684, "9130": 684, "7158": 684, "1775": 684, "0992": 684, "4817": 684, "0053": 684, "0164": 684, "3738": 684, "0507": [684, 1912], "9700": 684, "1106": 684, "0318": 684, "0816": [684, 1283], "6451": 685, "4866": 685, "2987": 685, "3312": 685, "5744": 685, "2980": [685, 1889], "8397": 685, "2713": 685, "9128": 685, "9214": 685, "7268": 685, "2995": 685, "9023": [685, 1224], "4853": 685, "9075": 685, "6165": 685, "180": [687, 1051, 1723], "14159": [687, 1830], "135": 687, "45": [687, 1346, 1347, 1391, 1392, 1466, 1647, 1912], "ao": [689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1919, 1920, 1921], "batch_norm": [689, 690, 1203, 1872, 1914], "fuse": [689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 781, 782, 791, 793, 794, 795, 803, 836, 848, 849, 941, 1207, 1208, 1576, 1672, 1673, 1759, 1882, 1887, 1912, 1915, 1919, 1920, 1921, 1922, 1947, 1949, 1956], "3d": [690, 693, 696, 724, 729, 732, 756, 758, 763, 768, 1295, 1334, 1338, 1342, 1345, 1347, 1357, 1360, 1367, 1368, 1374, 1376, 1390, 1392, 1422, 1433, 1479, 1487, 1490, 1491, 1495, 1503, 1506, 1514, 1520, 1522, 1537, 1552, 1564, 1595, 1889, 1908, 1919, 1928, 1933], "bn": [691, 692, 693, 694, 695, 696, 803, 849, 1067, 1203, 1910, 1915, 1919, 1920], "qat": [701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 719, 720, 721, 722, 781, 782, 835, 1919, 1920, 1921], "in_channel": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 1203, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408], "out_channel": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 1203, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408], "kernel_s": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 757, 758, 771, 772, 1194, 1203, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1375, 1376, 1395, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1478, 1493, 1494, 1495, 1504, 1505, 1506, 1520, 1521, 1522, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1594, 1720, 1721, 1872, 1933, 1952], "dilat": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 761, 762, 763, 771, 772, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1403, 1404, 1405, 1406, 1407, 1408, 1420, 1421, 1422, 1478, 1501, 1502, 1503, 1504, 1505, 1506, 1520, 1550, 1551, 1552, 1594, 1720, 1721, 1872, 1912, 1952], "padding_mod": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 761, 762, 763, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408, 1526, 1872, 1952], "momentum": [701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 740, 741, 742, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1466, 1496, 1536, 1676, 1683, 1685, 1691, 1697, 1699, 1872, 1905, 1907, 1915, 1952], "freeze_bn": [701, 702, 703, 704, 705, 706], "qconfig": [701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 777, 778, 780, 783, 784, 785, 786, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 850, 851, 1938], "batchnorm1d": [701, 704, 1400, 1466, 1496, 1910, 1921], "fakequant": [701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 791, 851], "weight_fake_qu": [701, 702, 703, 704, 705, 706, 707, 708, 719, 720], "quant": [701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 779, 781, 782, 827, 850, 851, 1081, 1082, 1919, 1920], "batchnorm3d": [703, 706, 708, 713, 1402, 1466, 1496, 1921], "num_featur": [712, 713, 725, 726, 740, 741, 742, 1194, 1345, 1346, 1347, 1390, 1391, 1392, 1400, 1401, 1402, 1409, 1410, 1411, 1427, 1466, 1528, 1905], "qint8": [717, 718, 745, 750, 753, 754, 761, 762, 763, 770, 781, 783, 788, 809, 830, 847, 848, 850, 851, 1664, 1717, 1718, 1919, 1921, 1922, 1930, 1934, 1935], "highlight": [719, 720, 1874], "from_float": [721, 727, 728, 729, 734, 735, 745, 753, 786, 806, 812, 815, 827, 1919], "qparams_dict": [721, 727, 728, 729, 753], "hidden_s": [723, 749, 750, 754, 1379, 1380, 1397, 1398, 1442, 1443, 1444, 1872], "num_lay": [723, 749, 1379, 1397, 1442, 1443, 1471, 1473, 1872, 1905], "batch_first": [723, 724, 749, 1379, 1397, 1433, 1442, 1443, 1470, 1472, 1474, 1641, 1643, 1644, 1646, 1872, 1901], "bidirect": [723, 749, 1379, 1397, 1442, 1443, 1872], "_lstmlayer": 723, "nnqa": 723, "h0": [723, 749, 751, 1379, 1397, 1442], "c0": [723, 751, 1397, 1957], "hn": [723, 749, 751, 1379, 1380, 1397, 1442], "cn": [723, 751, 1194, 1397], "weight_ih": [723, 1380, 1398, 1444], "weight_hh": [723, 1380, 1398, 1444], "embed_dim": [724, 1433], "num_head": [724, 1433, 1872], "add_bias_kv": [724, 1433], "add_zero_attn": [724, 1433, 1872], "kdim": [724, 1433], "vdim": [724, 1433], "dequant": [724, 777, 779, 781, 782, 788, 790, 850, 1872, 1914, 1920, 1922, 1935, 1937], "mha": [724, 1433], "conver": 724, "key_padding_mask": [724, 1433, 1872], "need_weight": [724, 1433, 1872], "attn_mask": [724, 1433, 1576, 1872], "average_attn_weight": [724, 1433, 1872], "is_caus": [724, 1433, 1473, 1474, 1576, 1872], "attn_output_weight": [724, 1433], "unmask": [724, 1470], "causal": [724, 1433, 1470, 1471, 1472, 1473, 1474, 1576], "attn_weight": [724, 1433, 1576], "attn_output": [724, 1433], "quint8": [727, 728, 729, 730, 731, 732, 734, 735, 745, 761, 762, 763, 770, 781, 783, 788, 808, 809, 810, 811, 814, 816, 848, 850, 1664, 1717, 1718, 1719, 1720, 1721, 1919, 1921, 1922, 1930, 1934, 1935], "learnabl": [727, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 1345, 1346, 1347, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1370, 1371, 1379, 1380, 1382, 1390, 1391, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1435, 1442, 1444, 1466, 1518, 1570, 1905], "q_input": [727, 728, 729, 730, 731, 732, 761, 762, 763], "quantize_per_tensor": [727, 728, 729, 730, 731, 732, 745, 746, 747, 761, 762, 763, 1719, 1720, 1721, 1872, 1914, 1919], "unequ": [728, 729, 730, 731, 732, 1356, 1357, 1359, 1360], "50": [728, 730, 731, 732, 761, 813, 1249, 1299, 1341, 1342, 1350, 1355, 1356, 1357, 1359, 1360, 1375, 1376, 1395, 1396, 1420, 1421, 1422, 1477, 1503, 1504, 1506, 1510, 1521, 1522, 1684, 1827, 1889, 1897], "56": [729, 1928, 1951], "output_pad": [730, 731, 732, 1358, 1359, 1360, 1406, 1407, 1408, 1504, 1505, 1506, 1872, 1952], "qnnpack": [730, 731, 745, 753, 844, 845, 848, 850, 851, 1919, 1921], "convtranspose2d": [730, 1407, 1505, 1851, 1921], "nnq": [730, 731, 732, 777, 778, 779, 853, 1919], "downsampl": [730, 731, 732, 1359, 1479, 1491, 1526, 1537], "upsampl": [730, 731, 732, 768, 775, 776, 808, 1359, 1480, 1481, 1491, 1526, 1537, 1596, 1597], "fbgemm": [731, 732, 745, 753, 822, 844, 845, 848, 850, 851, 1919, 1920, 1947, 1948], "cubic": [732, 1376, 1522, 1526], "num_embed": [734, 735, 1370, 1371, 1518], "embedding_dim": [734, 735, 1370, 1371, 1399, 1517, 1518], "padding_idx": [734, 1370, 1371, 1517, 1518, 1872, 1952], "scale_grad_by_freq": [734, 735, 1370, 1371, 1517, 1518, 1872, 1952], "_weight": [734, 735, 1370, 1371, 1676, 1956], "overwritten": [734, 735, 745, 753, 786, 830, 850, 1894, 1899, 1935, 1942], "_embed": [734, 735], "_dim": [734, 735, 1370], "include_last_offset": [735, 1371, 1518, 1872, 1952], "embedding_bag": [735, 1872, 1914], "floatfunct": [736, 1919], "activation_post_process": [736, 788, 1919], "add_relu": [736, 737, 746, 1882, 1914, 1937], "add_scalar": [736, 737, 746, 1914, 1933, 1937], "mul_scalar": [736, 737, 746, 1914, 1937], "collector": 737, "f_add": 737, "num_channel": [738, 1382, 1888], "normalized_shap": [743, 1399, 1540, 1872, 1889, 1952], "elementwise_affin": [743, 1399], "negative_slop": [744, 769, 1413, 1541, 1542, 1872, 1892, 1952], "slope": [744, 769, 1413, 1458, 1892], "bias_": [745, 753], "_featur": [745, 753, 770, 1335, 1348, 1412, 1414, 1497, 1543], "from_refer": [745, 753], "ref_qlinear": [745, 753], "output_scal": [745, 748, 1719, 1872], "output_zero_point": [745, 748, 1719, 1872], "q_add": 746, "qint32": [746, 747, 1664, 1717, 1718, 1919, 1922, 1930, 1934, 1935], "x_0": [747, 1837], "gate": [749, 750, 1378, 1379, 1380, 1397, 1456, 1525, 1579], "r_t": [749, 1379, 1682], "w_": [749, 1333, 1334, 1337, 1338, 1341, 1342, 1344, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1363, 1375, 1376, 1379, 1380, 1396, 1397, 1398, 1421, 1422, 1424, 1425, 1434, 1439, 1440, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1479, 1480, 1481, 1482, 1483, 1484, 1522, 1526], "x_t": [749, 883, 885, 1345, 1346, 1347, 1379, 1390, 1391, 1392, 1397, 1442, 1466, 1670], "b_": [749, 1379, 1380, 1397, 1398, 1415, 1442, 1444, 1832, 1928], "hr": [749, 1379, 1380, 1397, 1902], "h_": [749, 1333, 1334, 1337, 1338, 1341, 1342, 1348, 1353, 1354, 1356, 1357, 1359, 1360, 1375, 1376, 1379, 1380, 1396, 1397, 1414, 1421, 1422, 1423, 1424, 1425, 1439, 1440, 1442, 1444, 1449, 1450, 1452, 1453, 1479, 1480, 1481, 1483, 1484, 1497, 1522, 1526], "z_t": [749, 1379], "iz": [749, 1379, 1380], "hz": [749, 979, 1379, 1380, 1933], "n_t": [749, 1379], "h_t": [749, 1379, 1397, 1442], "hadamard": [749, 1379, 1380, 1397, 1398], "multilay": [749, 1379, 1397], "_t": [749, 1379, 1397, 1683, 1685, 1899, 1915], "b_ih": [749, 1379, 1380, 1397, 1398, 1442, 1444, 1872], "b_hh": [749, 1379, 1380, 1397, 1398, 1442, 1444, 1872], "h_0": [749, 1379, 1397, 1398, 1442], "seq_len": [749, 1379, 1397, 1433, 1442], "pack_padded_sequ": [749, 1379, 1397, 1442, 1640, 1642, 1643, 1901], "num_direct": [749, 1379, 1397, 1442], "h_n": [749, 1379, 1397, 1442], "_size": [749, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1355, 1356, 1357, 1358, 1359, 1360, 1374, 1375, 1376, 1379, 1380, 1395, 1396, 1397, 1398, 1420, 1421, 1422, 1423, 1424, 1425, 1442, 1444, 1478, 1522], "_layer": [749, 1379, 1397, 1442], "_direct": 749, "output1": [749, 1335, 1893, 1912], "output2": [749, 1335], "weight_ih_l": [749, 1379, 1397, 1442], "w_ir": [749, 1379], "w_iz": [749, 1379], "w_in": [749, 1379], "weight_hh_l": [749, 1379, 1397, 1442], "w_hr": [749, 1379], "w_hz": [749, 1379], "w_hn": [749, 1379], "bias_ih_l": [749, 1379, 1397, 1442], "b_ir": [749, 1379], "b_iz": [749, 1379], "b_in": [749, 1379], "bias_hh_l": [749, 1379, 1397, 1442], "b_hr": [749, 1379], "b_hz": [749, 1379], "b_hn": [749, 1379], "mathcal": [749, 1348, 1355, 1356, 1357, 1358, 1359, 1360, 1370, 1371, 1379, 1380, 1397, 1398, 1412, 1414, 1442, 1444, 1445, 1466, 1728, 1892, 1902], "subtli": [749, 1379, 1685], "gru": [750, 1380, 1872, 1897, 1914, 1919, 1921], "cell": [750, 752, 754, 1379, 1380, 1397, 1398, 1442, 1444], "hx": [750, 752, 754, 1380, 1398, 1444, 1872], "cx": [752, 1398, 1872], "nonlinear": [754, 1343, 1361, 1387, 1442, 1444, 1454, 1870, 1892, 1928], "elman": [754, 1442, 1444], "adaptiveavgpool2d": [755, 1486, 1851, 1921], "adaptiveavgpool3d": [756, 1487, 1851, 1921], "ceil_mod": [757, 758, 771, 772, 1340, 1341, 1342, 1395, 1396, 1420, 1421, 1422, 1493, 1494, 1495, 1547, 1548, 1550, 1551, 1552, 1720, 1721, 1872, 1952], "count_include_pad": [757, 758, 1340, 1341, 1342, 1493, 1494, 1495, 1872, 1952], "divisor_overrid": [757, 758, 1341, 1342, 1494, 1495, 1872, 1952], "kh": [757, 758, 762, 763, 1341, 1342, 1375, 1376, 1421, 1422, 1494, 1495, 1502, 1503, 1505, 1506, 1521, 1522, 1551, 1552], "kw": [757, 758, 762, 763, 1341, 1342, 1375, 1376, 1421, 1422, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1521, 1522, 1550, 1551, 1552], "sh": [757, 758, 762, 763, 1494, 1495, 1502, 1503, 1505, 1506, 1551, 1552, 1957], "sw": [757, 758, 761, 762, 763, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1550, 1551, 1552], "avgpool2d": [757, 1494, 1921], "_channel": [757, 758, 761, 762, 763, 1355, 1356, 1357, 1358, 1359, 1360, 1382, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1550, 1551, 1552, 1924], "ih": [757, 758, 762, 763, 1442, 1444, 1494, 1495, 1502, 1503, 1505, 1506, 1551, 1552], "iw": [757, 758, 761, 762, 763, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506, 1550, 1551, 1552], "padh": [757, 758, 762, 763, 1494, 1495, 1502, 1503, 1505, 1506], "padw": [757, 758, 761, 762, 763, 1493, 1494, 1495, 1501, 1502, 1503, 1504, 1505, 1506], "kd": [758, 763, 1342, 1422], "sd": [758, 763], "padd": [758, 763], "formul": [759, 1349, 1369, 1383, 1417, 1463, 1464, 1545, 1562, 1576, 1902, 1928], "min_": [760, 1229, 1230, 1239, 1257, 1816], "max_": [760, 1420, 1421, 1422, 1615, 1648], "convolv": [761, 762, 763, 1355, 1356, 1357, 1358, 1359, 1360, 1403, 1404, 1405, 1406, 1407, 1408, 1501, 1502, 1503, 1504, 1505, 1506], "dw": [761, 762, 763, 1501, 1502, 1503, 1504, 1505, 1506], "qf": [761, 762, 763], "dtype_input": [761, 762, 763], "dtype_filt": [761, 762, 763], "q_filter": [761, 762, 763], "dh": [762, 763, 1502, 1503, 1505, 1506], "dd": 763, "scale_factor": [768, 774, 775, 776, 1479, 1480, 1481, 1537, 1576, 1595, 1596, 1597, 1872, 1952], "align_corn": [768, 774, 775, 1479, 1480, 1491, 1526, 1537, 1595, 1596, 1872, 1952], "height": [768, 774, 1341, 1342, 1356, 1357, 1359, 1360, 1396, 1421, 1422, 1434, 1461, 1479, 1537, 1595, 1888], "spatial": [768, 774, 775, 776, 929, 1087, 1346, 1374, 1399, 1439, 1440, 1461, 1478, 1479, 1480, 1481, 1491, 1526, 1537, 1566, 1567, 1568, 1595, 1596, 1597], "pixel": [768, 774, 776, 1356, 1363, 1366, 1367, 1368, 1372, 1434, 1439, 1440, 1479, 1491, 1526, 1537, 1595, 1597], "corner": [768, 774, 920, 1479, 1491, 1526, 1537, 1595], "edg": [768, 774, 1147, 1155, 1156, 1537, 1595, 1879, 1900, 1925, 1953], "leakyrelu": [769, 1428, 1541, 1905, 1921], "_slope": [769, 1413, 1541, 1892], "xa": [770, 1243, 1254, 1255, 1256, 1414, 1543], "return_indic": [771, 772, 1336, 1337, 1338, 1375, 1376, 1420, 1421, 1422, 1423, 1424, 1425, 1488, 1489, 1490, 1521, 1522, 1550, 1551, 1552, 1872], "maxpool1d": [771, 1423, 1550, 1553, 1921], "maxpool2d": [772, 1424, 1428, 1551, 1554, 1912, 1921], "linearli": [774, 1131, 1252, 1479, 1595, 1694, 1715, 1901, 1915, 1922], "neighbour": [776, 1415, 1537, 1597], "stub": [777, 778, 1916], "calibr": [777, 778, 786, 827, 828, 846, 848, 850, 1893, 1919, 1920, 1922, 1938], "quantstub": [779, 1919], "dequantstub": [779, 1919], "quantwrapp": 780, "backend_config": [781, 782, 783, 784, 785, 806, 807, 848, 849, 850, 851, 1938], "acycl": [781, 1894], "backendpatternconfig": [781, 850], "blob": [781, 1124, 1902, 1904, 1912, 1933, 1956], "dtypeconfig": [781, 782, 784, 850], "observationtyp": [781, 782, 850, 1921], "weighted_int8_dtype_config": [781, 850], "input_dtyp": [781, 783, 850, 1921], "output_dtyp": [781, 783, 850, 1921, 1952], "weight_dtyp": [781, 783, 850, 1921], "bias_dtyp": [781, 783, 1921], "fuse_conv2d_relu": 781, "is_qat": [781, 782], "convrelu2d": [781, 1921], "linear_config": 781, "set_observation_typ": [781, 782, 850], "output_use_different_observer_as_input": [781, 782, 785, 850, 1921], "add_dtype_config": [781, 782, 850], "set_root_modul": [781, 782], "set_qat_modul": [781, 782], "set_reference_quantized_modul": [781, 782], "conv_relu_config": 781, "set_fused_modul": [781, 782], "set_fuser_method": [781, 782], "fused_conv_relu_config": 781, "my_backend": [781, 1943], "set_backend_pattern_config": [781, 850], "from_dict": [781, 782, 783, 804, 805, 806, 843], "backend_config_dict": [781, 1919], "set_nam": 781, "to_dict": [781, 782, 783, 804, 805, 806, 843], "backendconfig": [782, 807, 848, 850, 1922], "dtype_config": [782, 1921], "backend_pattern_config_dict": 782, "observation_typ": [782, 1921], "qat_modul": [782, 1921], "reference_quantized_modul": 782, "fused_modul": [782, 1921], "fuser_method": [782, 803, 1921], "pattern_complex_format": 782, "set_dtype_config": 782, "fuser": [782, 1207, 1871], "fuse_linear_relu": 782, "linearrelu": [782, 1921], "8bea7180a8ba3c279f2c9b050f2a69a6": 782, "understood": [782, 928], "output_share_observer_with_input": [782, 785, 1921], "renam": [782, 1852, 1854, 1872, 1887, 1888, 1914, 1951], "quantdequantstub": 782, "set_pattern": 782, "is_dynam": [783, 815, 1921], "quant1": 783, "dequant1": 783, "fp32_linear": 783, "quant2": 783, "dequant2": 783, "bracket": [783, 1925], "dtype_config1": 783, "dtype_config2": 783, "dtypewithconstraint": [783, 1921], "quant_min_lower_bound": [783, 784, 1921], "quant_max_upper_bound": [783, 784, 1921], "255": [783, 791, 1081, 1082, 1120, 1526, 1537, 1595, 1919, 1921, 1933], "input_dtype_with_constraint": 783, "scale_min_lower_bound": [783, 784, 1921], "scale_max_upper_bound": [783, 784, 1921], "dtype_config_dict": 783, "bias_typ": [783, 850], "scale_exact_match": [784, 1921], "zero_point_exact_match": [784, 1921], "quant_min": [784, 788, 791, 808, 809, 810, 811, 814, 815, 1081, 1082, 1872, 1919], "quant_max": [784, 788, 791, 808, 809, 810, 811, 814, 815, 1081, 1082, 1872, 1919], "fixedqparamsobserv": 784, "fixedqparamsfakequant": 784, "input_output_not_observ": [785, 1921], "maxpool": [785, 1375, 1376, 1521, 1522, 1912], "remove_qconfig": 786, "is_refer": 786, "convert_custom_config_dict": [786, 804, 1919], "from_observ": [786, 804, 1919], "observed_to_quantized_custom_module_class": [786, 804, 1919], "observedcustommodul": [786, 804, 806, 827, 1919], "quantizedcustommodul": [786, 804], "calib_data": 787, "fake_quant": [788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 851, 1081, 1082, 1938], "movingaverageminmaxobserv": [788, 791, 811], "observer_kwarg": [788, 791], "x_out": [788, 791], "fake_quant_en": 788, "observer_en": 788, "calculate_qparam": [789, 808, 809, 813], "qscheme": [791, 808, 809, 810, 811, 814, 815, 816, 1872, 1914, 1919, 1922, 1935], "fake_qu": [792, 796, 797, 798, 1919], "default_fake_qu": 793, "default_per_channel_weight_fake_qu": 794, "default_weight_fake_qu": 795, "histogram": [796, 808, 820, 1154, 1156, 1872, 1914, 1933], "memoryless": [797, 798], "averaging_const": [797, 798, 810, 811, 1872], "modules_to_fus": 803, "fuser_func": 803, "fuse_known_modul": 803, "fuse_custom_config_dict": [803, 805], "convmodul": 803, "bnmodul": 803, "convbnmodul": 803, "additional_fuser_method_map": 803, "fuse_conv_bn": [803, 1921], "conv1": [803, 1205, 1427, 1455, 1871, 1919, 1933], "bn1": 803, "relu1": [803, 1455, 1598], "fused_m": 803, "custom_config": [804, 805, 806, 807], "convert_fx": [804, 1919, 1938], "convert_custom_config": [804, 848, 1919], "set_observed_to_quantized_map": 804, "set_preserved_attribut": [804, 805, 806], "attr1": [804, 805, 806, 1912], "attr2": [804, 805, 806, 1912], "floatcustommodul": [804, 806], "weight_onli": [804, 848, 1919], "preserved_attribut": [804, 805, 806], "observed_class": [804, 806], "quantized_class": 804, "quant_typ": [804, 806], "quanttyp": [804, 806], "fuse_fx": [805, 1919], "fuse_custom_config": [805, 849], "convertcustomconfig": [805, 848], "prepare_fx": [806, 829, 848, 851, 1919, 1938], "prepare_qat_fx": [806, 848, 1919], "prepare_custom_config": [806, 807, 850, 851, 1919], "set_standalone_module_nam": 806, "module1": [806, 843, 1897], "qconfig_map": [806, 807, 843, 844, 845, 848, 850, 851, 1919], "child_prepare_custom_config": 806, "set_standalone_module_class": 806, "mystandalonemodul": 806, "set_float_to_observed_map": 806, "set_non_traceable_module_nam": 806, "module2": [806, 843, 1897], "module3": [806, 1897], "set_non_traceable_module_class": 806, "nontraceablemodule1": 806, "nontraceablemodule2": 806, "set_input_quantized_index": 806, "set_output_quantized_index": 806, "prepare_custom_config_dict": [806, 827, 829, 1919], "standalone_module_nam": 806, "standalone_module_class": 806, "module_class": 806, "float_to_observed_custom_module_class": [806, 827, 1919], "non_traceable_module_nam": 806, "non_traceable_module_class": 806, "input_quantized_idx": 806, "output_quantized_idx": 806, "float_class": 806, "qconfigmap": [807, 844, 845, 848, 850, 1919, 1922], "preparecustomconfig": [807, 850], "2048": [808, 1470, 1472, 1474, 1897], "upsample_r": 808, "per_tensor_affin": [808, 809, 810, 1718, 1719, 1720, 1721, 1919, 1922], "reduce_rang": [808, 809, 810, 811, 814, 816, 1872, 1919, 1920], "factory_kwarg": [808, 809, 814], "1920928955078125e": [808, 809, 810, 811, 814], "vari": [808, 1458, 1640, 1773, 1884, 1907, 1908, 1915, 1919, 1920, 1928, 1945, 1946, 1947, 1957, 1959], "finfo": [808, 809, 810, 811, 814, 1248, 1251, 1331, 1870, 1935], "minmaxobserv": [808, 810, 814, 830, 850, 851, 1922], "x_": [809, 810, 959, 1077, 1267, 1268, 1270, 1273, 1281, 1344, 1363, 1417, 1434, 1460, 1462, 1582, 1793, 1795, 1837, 1894, 1922, 1929], "q_": [809, 1922], "x_orig": 809, "reset_min_max_v": [809, 814], "ch_axi": [811, 814, 1872], "per_channel_affin": [811, 814, 1717, 1919, 1922], "custom_op_nam": [812, 815], "with_arg": [813, 830, 850, 851], "_callable_arg": 813, "_with_arg": 813, "foo_build": 813, "foo_instance1": 813, "foo_instance2": 813, "with_callable_arg": 813, "_with_callable_arg": 813, "cur_tim": 813, "get_time_func": 813, "dan": 813, "creation_tim": 813, "compute_dtyp": 815, "ptq": [820, 1919, 1920, 1922], "obs_dict": 826, "get_observer_state_dict": 826, "allow_list": [827, 1937], "observer_non_leaf_module_list": 827, "preemptiv": [827, 828, 1607], "propagate_qconfig_": 829, "qconfig_dict": [829, 843], "my_qconfig": 830, "default_observ": 830, "default_qat_config": 836, "set_glob": [843, 848, 850, 1919], "set_object_typ": [843, 848, 850], "set_module_name_regex": 843, "regex": 843, "set_module_nam": [843, 848, 850], "set_module_name_object_type_ord": 843, "global_qconfig": 843, "qconfig1": 843, "qconfig2": 843, "qconfig3": 843, "object_typ": 843, "module_name_regex": 843, "module_name_object_type_ord": 843, "conv0": 843, "x86": [844, 845, 1760, 1919, 1921], "run_arg": [846, 852], "counterpart": [846, 853, 1263, 1607, 1874, 1882, 1936, 1937, 1945], "qconfig_spec": 847, "quantize_fx": [848, 849, 850, 851, 1919, 1938], "graph_modul": [848, 1956], "_remove_qconfig": 848, "qconfig_from_prepar": 848, "prepared_model": [848, 850, 851], "xnnpack": [848, 1882, 1919], "get_default_backend_config": [848, 850, 851], "quantized_model": 848, "fusion_pattern": 849, "fusecustomconfig": 849, "_equalization_config": 850, "get_default_qconfig_map": [850, 1919], "float_model": [850, 851, 1937], "data_load": [850, 851, 1691, 1697, 1907], "get_default_qconfig": [850, 851, 1919], "linear_pattern_config": 850, "suer": 850, "sample_inference_data": 850, "get_default_qat_qconfig_map": [851, 1919], "load_weight": 851, "train_data": 851, "get_default_qat_qconfig": [851, 1919], "custom_module_class_map": 853, "lceil": [854, 930], "rceil": [854, 930], "adjac": [854, 920, 1366, 1367, 1368, 1372, 1731, 1928], "set_default_tensor_typ": [854, 910, 919, 1068, 1070, 1080, 1085, 1103, 1121, 1141, 1151, 1152, 1213, 1264, 1280, 1658, 1724, 1726, 1728, 1730, 1731, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1841, 1843, 1867], "get_default_dtyp": [854, 1264, 1280, 1664, 1731, 1930, 1931, 1960], "5000": [854, 869, 875, 876, 877, 912, 936, 1085, 1087, 1088, 1095, 1098, 1103, 1113, 1115, 1116, 1117, 1147, 1153, 1156, 1219, 1245, 1264, 1322, 1324, 1352, 1353, 1371, 1479, 1716, 1720, 1721, 1722, 1731, 1735, 1929, 1934], "maxim": [863, 1291, 1423, 1424, 1425, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1683, 1684, 1685, 1686, 1928, 1947, 1957], "3398": 863, "2663": [863, 1897], "2686": 863, "2450": 863, "7401": 863, "8805": 863, "3402": 863, "1936": 863, "4907": [863, 1281], "3948": [863, 954], "0691": 863, "3132": 863, "6092": 863, "5419": 863, "2993": [863, 1815], "3195": 863, "1139": 864, "2254": 864, "1381": [864, 1815], "3687": 864, "0100": [864, 1247, 1717], "1975": [864, 1889], "0102": 864, "4732": 864, "9240": 864, "1207": [864, 1316], "7506": 864, "0213": 864, "7809": 864, "2960": 864, "9384": 864, "1438": 864, "ascend": [865, 1087, 1230, 1232, 1261, 1315, 1751, 1789, 1848], "0785": 865, "5267": 865, "8521": 865, "4065": 865, "1598": 865, "0788": 865, "0745": 865, "2700": 865, "2208": 865, "0722": 865, "7064": 865, "2564": 865, "0669": 865, "2318": 865, "8229": 865, "9280": 865, "lexicograph": [866, 1653, 1874, 1928], "9039": 867, "6291": 867, "0795": [867, 1716, 1905], "1586": 867, "1939": 867, "4900": 867, "7503": 867, "9355": 867, "histori": [868, 869, 1133, 1675, 1830, 1870, 1881, 1889, 1899, 1901, 1925], "dlpack": [869, 1118, 1870], "frombuff": 869, "data_ptr": [869, 1887, 1930, 1932], "addbackward0": [869, 1905, 1910], "__array_interface__": 869, "5962": 870, "4985": 870, "4396": 870, "4525": [870, 1889], "6387": 870, "4552": 870, "sine": [871, 1772, 1782, 1784], "1606": 871, "4267": 871, "0899": 871, "0250": 871, "1599": 871, "1534": 871, "9435": 871, "8990": [871, 1062], "arctang": [872, 873], "2341": 872, "2539": 872, "6256": 872, "6448": 872, "2299": 872, "2487": 872, "5591": [872, 894], "5727": 872, "quadrant": 873, "9041": [873, 929], "0196": [873, 929], "3108": [873, 929], "4423": [873, 929], "9833": 873, "0811": 873, "9743": 873, "4151": 873, "tangent": [874, 884, 885, 1130, 1131, 1467, 1828, 1829], "9385": 874, "2968": 874, "8591": 874, "1871": 874, "7253": 874, "3060": 874, "2899": 874, "1893": 874, "needs_input_grad": [878, 1899], "setup_context": [879, 1900], "save_for_forward": [879, 1900], "grad_input": [880, 887, 889, 902, 1194, 1427, 1603, 1899, 1905], "underneath": 881, "generate_vmap_rul": [881, 1900], "out_dim": [881, 1135, 1862, 1872, 1888, 1900], "grad_tensor": [882, 896, 1872, 1897], "grad_vari": 882, "forward_ad": 883, "dual": [883, 884, 885, 1652, 1900], "make_du": [883, 885], "your_fn": 883, "unpack_du": [883, 884], "grad_aft": 883, "dual_level": [884, 885], "primal": [885, 1126, 1130, 1131, 1134], "x_npy": 886, "once_differenti": [886, 887, 888, 889, 1899], "g1": [887, 889, 1897, 1926], "g2": [887, 889, 1897, 1926], "oppos": [888, 1900], "weren": 888, "grad_out": [888, 1872, 1902, 1952], "gx": 888, "gy": 888, "gz": 888, "simplefunc": 889, "induc": [889, 1526, 1564, 1892, 1945], "outer_jacobian_strategi": 890, "disconnect": [890, 891, 892, 893, 894, 895], "said": [890, 891, 892, 893, 894, 895, 1881, 1908], "cliff": [890, 892, 896], "_debug_only_display_vmap_fallback_warn": [890, 896], "pow_reduc": [890, 891, 894], "2265": 890, "8221": 890, "9456": [890, 911], "2550": 890, "viewbackward": [890, 892], "pow_adder_reduc": [890, 891, 894], "func_output": [891, 893, 894, 895], "1448": 891, "0239": 891, "6456": 891, "4988": 891, "4310": 891, "sumbackward0": [891, 894], "3030": 891, "vhp": 891, "batched_grad": 892, "exp_reduc": [892, 893, 895], "4917": 892, "4352": 892, "4369": 892, "3799": 892, "exp_add": 892, "8052": 892, "3963": 892, "3090": 893, "6742": 893, "9114": 893, "2106": 893, "sumbackward1": [893, 895], "squeezebackward1": 893, "adder": [893, 895], "2399": 893, "5005": 893, "0689": 894, "2431": 894, "0989": 894, "4456": 894, "8053": [894, 1746], "7817": 895, "2458": 895, "7830": 895, "7782": 895, "4458": 895, "3962": 895, "3042": [895, 1251], "6354": 895, "1288": [895, 1775], "0652": 895, "5483": 895, "5035": 895, "2046": [895, 954], "1292": 895, "1432": 895, "3059": 895, "3225": 895, "6652": 895, "7753": 895, "0152": 895, "4225": 895, "3340": 895, "only_input": 896, "allow_unus": [896, 1872], "is_grads_batch": 896, "materialize_grad": 896, "require_grad": [896, 1874, 1894], "06": [897, 898, 1234, 1239, 1240, 1251, 1252, 1257, 1381, 1436, 1475, 1478, 1523, 1592, 1670, 1684, 1816, 1872, 1935], "raise_except": [897, 898], "check_sparse_nnz": 897, "nondet_tol": [897, 898], "check_undefined_grad": [897, 898], "check_grad_dtyp": [897, 898], "check_batched_grad": [897, 898], "check_batched_forward_grad": 897, "check_forward_ad": 897, "check_backward_ad": 897, "fast_mod": [897, 898, 1902], "differenc": [897, 1899], "perturb": [897, 898, 1902], "sparsetensor": [897, 1801], "gradgradcheck": [897, 1899], "gen_non_contig_grad_output": 898, "check_fwd_over_rev": 898, "check_rev_over_rev": 898, "noncontigu": [898, 1010, 1935], "inaccuraci": 898, "clonebackward0": 900, "gi": [902, 903, 1905], "removablehandl": [902, 903, 1194, 1427, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1916], "eventlist": [905, 906], "chrome": [905, 1918, 1951, 1955], "group_by_stack_n": [906, 1918], "roof": 906, "functioneventavg": [906, 908], "window_length": [910, 919, 1151, 1152, 1213, 1872], "2n": [910, 1770, 1928], "trim": [910, 919, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1151, 1152, 1191], "_length": [910, 919, 1151, 1152, 1191, 1350, 1812], "sim": [911, 1441, 1569, 1708, 1728], "pseudorandom": [911, 1317, 1655, 1705, 1708, 1724, 1726, 1728, 1730, 1817], "1737": 911, "0950": [911, 1794], "3609": 911, "7148": 911, "0289": [911, 1840], "2676": 911, "8937": 911, "7202": 911, "2500": [912, 1085, 1087, 1088, 1098, 1103, 1264, 1479, 1722], "7500": [912, 1088, 1098, 1117, 1147, 1249, 1264, 1479, 1722, 1778], "AND": [913, 1275, 1874, 1894], "OR": [916, 1277, 1874], "xor": [918, 1278, 1874], "blackman": [919, 1780], "arrang": 920, "broadcast_tensor": [922, 1872, 1914], "out_int32": [925, 1751, 1872], "opposit": [925, 1088, 1090, 1816, 1836], "formal": [925, 1751, 1881, 1888], "eg": [925, 1744, 1751, 1956], "tensor_a": [927, 940], "tensor_b": 927, "6580": 928, "0969": 928, "4614": 928, "1034": [928, 1067], "5790": 928, "1497": 928, "compute_mod": [929, 1952], "use_mm_for_euclid_dist_if_necessari": 929, "distanc": [929, 1191, 1229, 1230, 1257, 1387, 1436, 1475, 1476, 1566, 1691, 1812, 1816, 1870], "infti": [929, 1191, 1245, 1343, 1395, 1396, 1458, 1566, 1682, 1929], "use_mm_for_euclid_dist": 929, "donot_use_mm_for_euclid_dist": 929, "minkowski": [929, 1566], "ham": [929, 1151, 1566, 1776], "closest": [929, 1566], "xn": [929, 1566], "4821": [929, 932], "059": 929, "0590": 929, "1763": [929, 1734], "4713": [929, 1734], "6986": [929, 1734], "3702": [929, 1734], "1193": [929, 1283], "0959": 929, "7138": 929, "8322": 929, "2830": [929, 1842], "3791": 929, "6341": 930, "4208": 930, "0900": 930, "5826": 930, "clr": [931, 1691], "3375": 931, "9790": 931, "1119": 931, "6577": 931, "5609": [931, 1517], "5095": 931, "2614": 931, "4038": 931, "3378": [931, 1842], "4982": 931, "2457": [931, 1296], "2561": 931, "4684": 931, "7163": 931, "9647": 931, "8917": [931, 1274], "3213": [931, 1270], "2284": [931, 1047], "8615": 931, "2816": 931, "tu": 932, "mt": [932, 933, 1223, 1230, 1232, 1236, 1237, 1238, 1243, 1252, 1715, 1816, 1872, 1881, 1914, 1932, 1934], "4112": 932, "7486": 932, "4551": 932, "3544": 932, "6724": 932, "5528": 932, "0592": [932, 1905], "9371": 932, "5487": 932, "7023": 932, "03": [932, 933, 1271, 1773, 1774, 1779], "3842e": [932, 1239], "dpotri": 933, "spotri": 933, "uu": 933, "9935": 933, "6353": 933, "5806": 933, "8769": 933, "7183": [933, 1245, 1905], "6618": 933, "9314": 933, "2251": [933, 967, 1226, 1268], "0889": 933, "4439": 933, "2122": 933, "1412": 933, "5894e": 933, "semidefinit": 934, "7747": 934, "9549": 934, "3086": 934, "4114": 934, "8733": 934, "6355": 934, "9891": 934, "1974": 934, "4706": 934, "4115": 934, "6225": 934, "1625": 934, "6097": 934, "8398": 934, "2387": [934, 955], "3771": [934, 1240], "4173": 934, "1626": [934, 967, 1226], "tensor_split": [935, 1065, 1157, 1863, 1872, 1914, 1932], "min_valu": [936, 1386], "max_valu": [936, 1386, 1872], "_valu": [936, 1335, 1612, 1801, 1899, 1914, 1928], "7120": 936, "1734": [936, 1168], "0478": [936, 1865], "0922": 936, "3333": [936, 1147, 1156, 1479, 1480, 1830], "horizont": [939, 1157, 1159, 1915, 1917, 1947], "hstack": [939, 1872, 1914, 1928], "with_replac": [940, 1872], "combinations_with_replac": 940, "fullgraph": [941, 1947, 1957], "cache_size_limit": [941, 1947, 1950, 1957], "subgraph": [941, 1667, 1894, 1898, 1912, 1916, 1938, 1944, 1946, 1957], "list_backend": [941, 1939, 1943, 1949], "autotun": [941, 1951], "cudagraph": [941, 1002, 1897, 1939, 1947, 1949, 1951, 1954], "realloc": [941, 1168], "leverag": [941, 1924, 1939, 1941, 1949], "triton": [941, 1900, 1939, 1942, 1944, 1947, 1949, 1957], "_inductor": [941, 1947, 1957], "list_mode_opt": 941, "notabl": [941, 1874], "epilogue_fus": 941, "templat": [941, 1010, 1011, 1915], "max_autotun": 941, "fallback_random": [941, 1947, 1957], "shape_pad": 941, "graph_diagram": 941, "pictur": 941, "list_opt": 941, "_glibcxx_use_cxx11_abi": 942, "bypass": [943, 1067, 1878, 1889, 1897, 1899, 1948], "exclude_tag": 947, "flip": [952, 1108, 1109, 1261, 1872, 1914, 1915, 1952], "lazi": [952, 1206, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1598, 1870, 1945], "writeabl": [952, 953], "is_conj": [952, 1739, 1872, 1914], "geq": [954, 1138, 1225, 1233, 1363, 1413, 1434, 1435, 1445, 1509, 1561, 1614, 1892, 1929], "signbit": [954, 1872, 1914, 1928, 1952], "2557": 954, "0026": 954, "5387": 954, "4740": 954, "9244": 954, "7079": 954, "2778": 954, "0249": [954, 1269], "5719": 954, "0059": 954, "2600": 954, "4475": 954, "9567": [954, 1229, 1815], "5757": 954, "1751": 954, "0742": 954, "2998": 954, "1054": 954, "2373": 954, "3190": [954, 1897], "1128": [954, 1251, 1397], "pearson": 955, "coeffici": [955, 1151, 1670, 1672, 1673, 1674, 1676, 1682, 1686, 1775, 1776, 1777, 1839], "r_": [955, 1832], "ij": [955, 1067, 1273, 1281, 1295, 1430, 1793], "c_": [955, 1355, 1356, 1357, 1358, 1359, 1360, 1397, 1439, 1440], "jj": 955, "hermitian": [955, 1083, 1084, 1086, 1088, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1223, 1224, 1229, 1230, 1232, 1236, 1237, 1238, 1248, 1251, 1257, 1872], "cov": [955, 1872, 1914], "2678": [955, 1370], "0908": 955, "3766": 955, "2780": 955, "5812": 955, "1535": [955, 1370], "2350": 955, "3582": 955, "4309": 956, "2706": 956, "8562": 956, "9796": [956, 1239], "1395": 956, "2957": 956, "6553": 956, "5574": 956, "1632": 957, "1835": 957, "6979": 957, "7325": [957, 1057], "0133": 957, "7860": 957, "2536": 957, "2805": 957, "sleef": [957, 1784], "unbias": [959, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1466, 1810, 1811, 1857, 1858, 1872, 1952], "_w": 959, "y_": [959, 1077, 1267, 1268, 1270, 1344, 1363, 1393, 1793, 1837, 1894, 1929], "w_i": [959, 1233], "mu_x": 959, "mu_i": [959, 1676], "whichev": [959, 1135, 1526, 1716, 1862, 1897], "w_ix_": 959, "bessel": [959, 1213, 1779, 1810, 1811, 1857, 1858, 1929], "corrcoef": [959, 1872, 1914], "6667": [959, 1156, 1479, 1480, 1736, 1770, 1910], "fw": 959, "4282": 959, "0255": [959, 1054], "4144": [959, 1897], "4169": 959, "streamcontext": [965, 1042, 1870], "abstractcontextmanag": 965, "3956": [967, 1226], "1455": [967, 1226, 1911], "6895": [967, 1226], "5849": [967, 1226], "3599": [967, 1226], "7180": [967, 1226], "0521": [967, 1226], "1339": [967, 1226], "0225": [967, 1226, 1239], "0257": [967, 1226], "4725": [967, 1226], "1479": [967, 1226], "7005": [967, 1226], "9757": [967, 1226], "3904": [967, 1226], "3726": [967, 1226], "1836": [967, 1226], "9688": [967, 1226], "7153": [967, 1226, 1929], "2159": [967, 1226], "0844": [967, 1226], "5281": [967, 1226], "6120": [967, 1226], "4490": [967, 1226], "5687": [967, 1226], "9792": [967, 1048, 1226], "8304": [967, 1226], "3037": [967, 1226, 1905], "5650": [967, 1226], "2329": [967, 1226], "9883": [967, 1226], "0551": [967, 1226], "capture_begin": [968, 1897], "make_graphed_cal": [968, 1897], "graph_pool_handl": [968, 1002], "other_graph_inst": [968, 1002], "capture_end": [968, 1897], "replai": [968, 1002, 1662, 1897, 1942, 1957], "debug_dump": 968, "debug_path": 968, "enable_debug_mod": 968, "path_to_so_fil": 969, "alloc_fn_nam": 969, "free_fn_nam": 969, "ctype": 969, "change_current_alloc": [969, 1897], "ssize_t": [969, 1897], "cudastream_t": [969, 971, 1897], "ptr": [969, 1897], "size_t": 969, "oss": 969, "enable_tim": [970, 1305, 1897], "interprocess": 970, "marker": [970, 1305], "elapsed_tim": [970, 1305, 1897], "end_ev": [970, 1305, 1897], "elaps": [970, 1305, 1884], "from_ipc_handl": 970, "reconstruct": [970, 1283, 1343, 1344, 1902, 1910, 1916], "ipc": [970, 1006], "ipc_handl": 970, "cudaeventsynchron": 970, "cudastreamwaitev": [970, 971, 973], "stream_ptr": 971, "record_ev": [971, 973], "cudastreamsynchron": [971, 973], "wait_ev": [971, 973], "interoper": 975, "caching_allocator_delet": 975, "mem_ptr": 976, "caching_allocator_alloc": 976, "peer_devic": 977, "_cudaalloc": 978, "clock": 979, "sm": 979, "hertz": 979, "smi": [979, 992, 1020, 1026, 1030, 1044, 1045, 1897, 1901, 1903], "buffer_s": 981, "10485760": 981, "chunk_siz": [984, 1129, 1135, 1862], "cublashandle_t": 985, "unoccupi": [992, 1304], "pytorch_cuda_alloc_conf": [993, 1897], "cudamallocasync": [993, 1024, 1897], "_cudadeviceproperti": 997, "gencod": 998, "eagerli": [999, 1005, 1897, 1945], "cuda_graph": 1002, "ordinari": [1004, 1607, 1854, 1893], "code_str": [1010, 1011], "temp": 1010, "typenam": [1010, 1011], "my_kernel": [1010, 1011], "jitted_fn": [1010, 1011], "create_jit_fn": [1010, 1011], "util_fn": 1010, "gelu": [1010, 1456, 1470, 1472, 1474, 1579, 1872, 1889, 1914, 1952], "my_gelu": 1010, "my_lib": [1010, 1878, 1911], "impl": [1010, 1878], "num_output": 1011, "sample_arg": 1013, "num_warmup_it": 1013, "allow_unused_input": 1013, "datadistributedparallel": 1013, "amp": [1013, 1854, 1870, 1893, 1951, 1954, 1957], "autocast": [1013, 1433, 1870, 1897, 1899, 1957], "insuffici": [1014, 1945, 1957], "manual_seed_al": [1014, 1854], "occupi": [1016, 1020, 1031, 1302, 1415, 1544, 1897, 1903, 1960], "reset_peak_memory_stat": [1016, 1018, 1031, 1032], "max_memory_reserv": [1017, 1897, 1903], "cudamemgetinfo": 1019, "memory_reserv": [1021, 1897, 1903], "snapshot": [1023, 1870, 1874, 1897, 1903], "large_pool": 1024, "small_pool": 1024, "allocated_byt": 1024, "cudamalloc": [1024, 1897, 1959], "reserved_byt": 1024, "active_byt": 1024, "inactive_split": 1024, "inactive_split_byt": 1024, "octob": 1024, "1mb": [1024, 1959], "num_alloc_retri": 1024, "num_oom": 1024, "assist": [1024, 1898], "max_split_s": 1024, "oversize_alloc": 1024, "oversize_seg": 1024, "requested_byt": 1024, "abbrevi": 1025, "percent": [1026, 1045, 1951], "instantan": [1027, 1918], "ascii": [1027, 1029, 1265, 1874, 1918], "sensor": [1030, 1044], "mw": 1030, "milliwatt": 1030, "fermi": 1030, "max_memory_alloc": [1031, 1897, 1903], "max_memory_cach": 1032, "memory_stat": [1033, 1897, 1903], "seed_al": 1034, "environment": [1036, 1951], "total_memori": [1037, 1312], "debug_mod": [1041, 1758], "centigrad": 1044, "x_1": [1046, 1047, 1048, 1049, 1261, 1348, 1361, 1362, 1497, 1508, 1837], "x_2": [1046, 1047, 1048, 1049, 1261, 1348, 1361, 1362, 1497, 1508], "x_3": [1046, 1047, 1048, 1049, 1261], "3449": 1046, "5447": 1046, "0685": 1046, "5104": [1046, 1897], "1706": 1046, "2259": 1046, "4696": 1046, "3284": 1046, "9946": 1046, "8209": [1046, 1049], "6628": 1047, "0975": 1047, "2680": [1047, 1896], "3298": [1047, 1054], "4220": 1047, "3885": 1047, "1762": 1047, "9165": 1047, "6684": [1047, 1171], "6001": 1048, "2069": 1048, "1919": 1048, "6727": [1048, 1061], "0062": 1048, "4126": 1048, "2129": 1048, "4206": 1048, "1968": [1048, 1929], "1241": 1048, "0238": 1048, "0233": [1048, 1723], "0157": 1048, "0158": [1048, 1816], "0065": 1048, "0014": [1048, 1929], "0006": 1048, "8286": 1049, "4890": 1049, "5155": 1049, "8443": 1049, "1865": 1049, "1752": [1049, 1057], "0595": 1049, "1850": 1049, "1571": [1049, 1905, 1910], "4243": 1049, "3175": 1049, "8020": [1049, 1713], "0423": 1049, "2289": 1049, "0537": 1049, "0058": 1049, "9780": 1049, "trapezoid": [1050, 1838, 1872, 1914], "360": 1051, "2832": 1051, "diagflat": [1054, 1872, 1914], "5950": 1054, "0872": 1054, "4264": 1054, "1064": [1054, 1905], "8795": 1054, "2429": 1054, "1374": 1054, "1029": 1054, "6482": 1054, "6300": 1054, "5410": 1055, "2934": 1055, "1788": [1055, 1929], "5684": 1055, "0845": [1055, 1784, 1905], "3986": 1055, "2956": [1056, 1226], "9068": 1056, "1695": 1056, "2094": [1056, 1897], "3018": 1056, "1516": 1056, "9342": 1056, "0854": 1057, "1431": 1057, "8536": 1057, "0905": 1057, "0360": [1057, 1316], "6927": 1057, "3735": 1057, "4945": 1057, "2631": [1057, 1315, 1897], "3755": 1057, "5977": 1057, "8172": 1057, "1065": [1057, 1905], "0401": 1057, "2235": [1057, 1815], "7938": 1057, "3081": 1057, "6166": 1057, "2335": 1057, "0500": 1057, "7336": 1057, "3836": 1057, "1015": 1057, "emb": [1058, 1754, 1785], "5393": 1061, "8675": 1061, "5916": 1061, "6321": 1061, "0967": 1061, "0511": 1061, "6295": 1061, "8360": 1061, "6973": 1061, "6537": 1061, "dividend": [1062, 1112, 1115, 1735, 1844], "true_divid": [1062, 1872, 1914], "3810": [1062, 1155], "2774": 1062, "2972": 1062, "3719": 1062, "4637": 1062, "7620": 1062, "5548": 1062, "5944": 1062, "7438": 1062, "9274": 1062, "3711": 1062, "9353": 1062, "4605": 1062, "2917": 1062, "1815": [1062, 1274], "0111": [1062, 1773], "9805": 1062, "5923": 1062, "1062": 1062, "4581": [1062, 1233], "7759": 1062, "2344": 1062, "1830": 1062, "0313": 1062, "1908": 1062, "4757": 1062, "8032": 1062, "2930": 1062, "8113": 1062, "2308": 1062, "4620": [1062, 1865], "6051": 1062, "5676": 1062, "2639": 1062, "2260": 1062, "4509": [1062, 1247], "2086": 1062, "1322": 1062, "9764": 1062, "9564": 1062, "3484": 1062, "2278": 1062, "1068": [1062, 1168], "4678": 1062, "3938": [1062, 1825], "depthwis": [1065, 1066, 1355, 1356, 1357], "atleast_3d": [1066, 1872, 1914], "notat": [1067, 1393, 1764, 1875, 1905, 1934], "einstein": 1067, "summat": [1067, 1191, 1273, 1281, 1928], "subscript": [1067, 1875, 1907], "jk": [1067, 1951], "ik": [1067, 1266, 1793], "za": 1067, "alphabet": [1067, 1510, 1924], "arrow": [1067, 1926], "ki": 1067, "ellipsi": [1067, 1874, 1875, 1888], "fourth": 1067, "whitespac": [1067, 1875], "opt_einsum": [1067, 1870], "_the_": 1067, "disclaim": 1067, "sublist": [1067, 1957], "52": 1067, "op1": [1067, 1874], "sublist1": 1067, "op2": [1067, 1874], "sublist2": 1067, "subslist_out": 1067, "2104": 1067, "7952": 1067, "2433": 1067, "4545": 1067, "1156": 1067, "2897": [1067, 1905], "3918": 1067, "4963": 1067, "3744": 1067, "9381": 1067, "2685": 1067, "6070": 1067, "7208": 1067, "8058": 1067, "4419": 1067, "0936": 1067, "1713": 1067, "4291": 1067, "5802": 1067, "7350": [1067, 1929], "5704": 1067, "4290": 1067, "9323": 1067, "4480": 1067, "bij": 1067, "bjk": 1067, "bik": 1067, "0564": 1067, "5904": 1067, "2023": 1067, "1271": 1067, "6706": [1067, 1716], "8097": 1067, "8025": 1067, "1183": 1067, "2239": [1067, 1253], "3107": 1067, "5756": 1067, "2354": 1067, "4558": 1067, "3460": 1067, "5087": 1067, "8530": [1067, 1352, 1482], "8153": 1067, "8787": 1067, "3839": [1067, 1861], "2112": [1067, 1840], "3728": 1067, "1131": [1067, 1713], "0921": 1067, "8305": 1067, "ji": 1067, "anm": 1067, "bm": 1067, "ba": 1067, "3430": [1067, 1274], "2405": 1067, "4494": 1067, "3311": 1067, "5201": 1067, "0356": 1067, "4064e": 1068, "8000e": 1068, "3493e": 1068, "5751e": 1068, "1428e": 1068, "5955e": 1068, "9683e": 1070, "1239e": 1070, "0705e": 1070, "orig_func": [1071, 1652], "set_grad_en": [1071, 1872, 1914, 1936], "doubler": [1071, 1169, 1652], "tripler": [1071, 1652], "elsewher": [1072, 1080, 1138, 1150, 1184, 1186, 1187, 1190, 1218, 1282, 1328, 1794, 1869], "_max": [1081, 1082, 1919], "_min": [1081, 1082, 1919], "nearbi": [1081, 1082], "_int": [1081, 1082], "_point": [1081, 1082], "2525": 1081, "0466": 1081, "3491": [1081, 1247], "2168": [1081, 1832], "5906": [1081, 1929], "6258": 1081, "6444": 1081, "0542": 1081, "0475": [1081, 1929], "0486": 1081, "3405": 1081, "6134": [1081, 1296], "6323": 1081, "0552": 1082, "9730": 1082, "3973": 1082, "0780": 1082, "4000": [1082, 1085, 1094, 1103, 1479, 1719, 1770], "fourier": [1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1191, 1780, 1812, 1870], "rfft": [1083, 1088, 1098, 1102, 1103, 1104], "compact": [1083, 1084, 1086, 1236, 1238, 1241, 1899, 1912, 1919], "chalf": [1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1098, 1099, 1100, 1872, 1914, 1934], "sm53": [1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104], "ortho": [1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1266], "orthonorm": [1083, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1257, 1614, 1816], "ifft": [1083, 1087, 1088, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100], "fftn": [1084, 1087, 1093, 1096, 1104], "rfft2": [1084, 1099], "ifft2": [1084, 1096], "two_fft": [1084, 1086, 1096, 1102, 1104], "check_strid": [1084, 1086, 1087, 1092, 1093, 1098, 1099, 1100, 1102, 1104, 1935], "nyquist": [1085, 1087, 1095, 1097, 1101, 1102, 1103, 1104], "i_1": [1086, 1104, 1214], "i_n": [1086, 1104, 1135, 1214, 1832, 1862], "rfftn": [1086, 1090, 1096, 1100, 1102], "ifftn": [1086, 1092, 1097], "reorder": [1087, 1249], "rearrang": [1087, 1094, 1351, 1439, 1440, 1567, 1568, 1888], "fftfreq": [1087, 1094, 1103], "9000": [1087, 1830], "8000": [1087, 1322, 1479, 1716, 1770], "uncent": 1087, "ifftshift": 1087, "x_center": 1087, "x_uncent": 1087, "fft_uncent": 1087, "fft_center": 1087, "x_centered_2": 1087, "ihfft": [1088, 1096, 1097], "irfft": [1088, 1100, 1101], "symmetri": [1088, 1090, 1812], "transformed_dim_s": [1088, 1098], "0000j": [1088, 1095, 1098, 1223, 1224, 1229, 1230, 1232, 1709, 1767], "1250": [1088, 1315], "1720j": 1088, "0406j": 1088, "2809": 1088, "6250": [1088, 1098, 1117, 1479], "9691": 1088, "hfftn": [1089, 1097], "last_dim_s": [1089, 1090, 1099, 1100, 1952], "ihfft2": 1089, "roundtrip": [1089, 1090, 1098, 1099, 1100], "ihfftn": [1090, 1096], "irfftn": [1090, 1099, 1104], "fft2": [1092, 1102], "two_ifft": [1092, 1093, 1097], "fftshift": 1094, "hfft": 1095, "6882j": 1095, "1625j": 1095, "hfft2": 1096, "8602j": 1098, "2031j": 1098, "1562": 1098, "3511": 1098, "7812": 1098, "2114": 1098, "irfft2": 1102, "wider": [1110, 1871, 1874, 1915, 1928], "49": [1110, 1249, 1896], "2500e": 1110, "1000e": 1110, "7656e": 1110, "lfloor": [1111, 1116, 1335, 1340, 1341, 1342, 1355, 1356, 1357, 1374, 1395, 1396, 1420, 1421, 1422, 1478, 1479, 1480, 1481, 1495, 1564, 1731, 1812], "rfloor": [1111, 1116, 1335, 1340, 1341, 1342, 1355, 1356, 1357, 1374, 1395, 1396, 1420, 1421, 1422, 1478, 1479, 1480, 1481, 1495, 1564, 1731, 1812], "8166": 1111, "5308": 1111, "2530": 1111, "2091": 1111, "7000": [1113, 1371, 1769], "3000": [1114, 1370, 1769, 1897], "entrywis": [1115, 1735], "modulu": [1115, 1253, 1735], "operatornam": [1116, 1229, 1230, 1231, 1232, 1249, 1257, 1343, 1344, 1350, 1387, 1388, 1394, 1418, 1458, 1476, 1769], "8750": [1117, 1479], "char": [1120, 1664, 1887, 1930], "parameter_and_buffer_dict": 1123, "tie_weight": [1123, 1649], "submodule_nam": [1123, 1649], "parameter_nam": [1123, 1649], "ti": [1123, 1649, 1744, 1946], "ty": [1123, 1649], "foo_ti": [1123, 1649], "new_a": [1123, 1649], "mutlipl": 1123, "grad_weight": [1123, 1899], "detached_param": 1123, "parameters_and_buffer_dict": 1123, "reparamater": [1123, 1649], "paramat": 1123, "intermediate_upd": 1124, "mutations_and_view": 1124, "intermeid": 1124, "proxy_tensor": [1124, 1946, 1957], "make_fx": [1124, 1945, 1957], "inpt": 1124, "out1": [1124, 1872], "out2": [1124, 1872], "f_trace": 1124, "f_no_mutations_trac": 1124, "f_no_mutations_and_views_trac": 1124, "a_1": [1124, 1214], "view_1": 1124, "view_copi": [1124, 1872, 1914, 1936], "view_copy_1": 1124, "as_strid": [1124, 1872, 1914, 1932, 1952], "writ": 1124, "native_funct": [1124, 1899, 1952], "yaml": [1124, 1899, 1952], "aux": [1125, 1126, 1128, 1129, 1130, 1134], "my_loss_func": 1125, "y_pred": [1125, 1897], "loss_per_sampl": 1125, "y_true": 1125, "autodiff": [1128, 1129, 1130, 1252], "jacobian_f": [1128, 1129], "f_x": [1128, 1129], "jacboian": [1128, 1129], "expectedx": [1128, 1129], "expectedi": [1128, 1129], "_preallocate_and_copi": 1129, "stand": [1130, 1134, 1873, 1916, 1926], "jvp_out": 1130, "jvp_fn": 1131, "requr": 1131, "optimiz": [1133, 1871], "l1": [1133, 1387, 1388, 1458, 1535, 1580, 1624, 1633, 1905, 1910], "l2": [1133, 1388, 1418, 1458, 1669, 1670, 1671, 1672, 1674, 1676, 1682, 1683, 1685, 1893], "vjpfunc": 1134, "unsuccessfulli": [1135, 1862], "rummag": [1135, 1862], "batched_dot": [1135, 1862], "imposs": [1135, 1862, 1893], "jacobian_row": [1135, 1862], "get_vjp": [1135, 1862], "n1": [1135, 1737, 1862], "n0": [1135, 1862], "batched_pow": [1135, 1862], "autobatch": [1135, 1862], "sparse_grad": [1136, 1872, 1952], "tau": [1139, 1233, 1528, 1671, 1685, 1702, 1703, 1773, 1872], "elementari": [1139, 1894, 1902], "reflector": [1139, 1614, 1703], "household": [1139, 1233, 1614, 1703], "householder_product": [1139, 1614, 1702], "gel": [1139, 1239], "set_default_dtyp": 1141, "set_deterministic_debug_mod": [1142, 1851], "set_float32_matmul_precis": 1143, "edge_ord": [1147, 1872], "mathbb": [1147, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1243, 1245, 1252, 1254, 1256, 1257, 1363, 1434, 1614], "rightarrow": 1147, "closer": [1147, 1476, 1716, 1899, 1905, 1949, 1950, 1951], "interior": 1147, "theorem": 1147, "h_l": 1147, "h_r": 1147, "neighbor": [1147, 1191, 1479, 1481, 1812], "xi_1": 1147, "xi_2": 1147, "approx": [1147, 1817, 1902], "80": [1147, 1249, 1695, 1764, 1897, 1915], "halv": 1147, "coord": 1147, "54": [1151, 1389, 1776], "46": [1151, 1775], "hann_window": [1151, 1812, 1872, 1876, 1914], "hann": [1152, 1776], "hist": [1155, 1156, 1872], "bin_edg": [1155, 1156, 1872], "9524": 1155, "leftmost": [1156, 1889], "leg": 1160, "triangl": [1160, 1933], "hypotenus": 1160, "4031": 1160, "gammainc": [1162, 1929], "gammaincc": [1163, 1929], "index_reduce_": [1167, 1872], "1427": 1168, "0231": 1168, "5414": 1168, "0009": 1168, "4664": [1168, 1832], "2647": 1168, "1228": 1168, "6571": 1168, "7230": 1168, "6004": 1168, "inferencemod": [1169, 1894], "bump": 1169, "_version": [1169, 1914], "multidimension": [1171, 1263, 1390], "8173": 1171, "0874": 1171, "1784": 1171, "3279": 1171, "7894": 1171, "4682": 1171, "7159": 1171, "1506": 1171, "4034": 1171, "3657": 1171, "0387": 1171, "9892": 1171, "1774": 1171, "3261": 1171, "3917": 1171, "4537": [1171, 1598], "7493": 1171, "1724": 1171, "2291": 1171, "5749": 1171, "2267": 1171, "7920": 1171, "3607": 1171, "3701": 1171, "3666": 1171, "5850": [1171, 1224], "7242": 1171, "9837": 1171, "1560": 1171, "2907": 1171, "6785": 1171, "5671": [1171, 1225], "5452": 1171, "6912": 1171, "5509": 1171, "1782": 1171, "9843": 1171, "7366": 1171, "5672": [1171, 1655], "5115": 1171, "4864": 1171, "2476": 1171, "4337": 1171, "6347": 1171, "1748": 1171, "3567": [1171, 1224], "6558": 1171, "2469": [1171, 1905], "5787": [1171, 1274], "typecheck": [1181, 1914], "mypi": [1181, 1873, 1874], "warn_alwai": 1182, "set_warn_alwai": 1182, "nonfinit": 1183, "test_el": [1185, 1872], "assume_uniqu": [1185, 1872], "0j": [1190, 1859], "nola": 1191, "envelop": 1191, "hop": [1191, 1812], "shorter": [1191, 1912, 1924], "griffin": 1191, "ieee": [1191, 1381, 1780, 1908], "tran": 1191, "assp": 1191, "vol": [1191, 1381, 1780], "pp": [1191, 1381, 1780], "236": 1191, "apr": 1191, "1984": 1191, "slide": [1191, 1340, 1341, 1342, 1374, 1420, 1421, 1422, 1478, 1520, 1550, 1551, 1552, 1594, 1720, 1721, 1812], "fft_size": 1191, "scriptmodul": [1192, 1193, 1198, 1201, 1203, 1204, 1205, 1209, 1210, 1668, 1871, 1873, 1882, 1912], "implic": [1192, 1209, 1899, 1924, 1928], "attributemodul": 1192, "names_ag": 1192, "get_debug_st": 1193, "graphexecutorst": 1193, "_extra_fil": [1193, 1194, 1201, 1204, 1904], "save_to_buff": 1193, "add_modul": [1194, 1427], "init_weight": [1194, 1427, 1905], "buf": [1194, 1427], "20l": [1194, 1427], "1l": [1194, 1427], "5l": [1194, 1427], "pretti": [1194, 1667, 1764, 1871, 1943, 1946, 1950], "syntax": [1194, 1871, 1874, 1916, 1948], "code_with_const": 1194, "constmap": 1194, "extra_repr": [1194, 1427, 1899], "get_buff": [1194, 1427], "attributeerror": [1194, 1427, 1899, 1919], "get_extra_st": [1194, 1427], "set_extra_st": [1194, 1427], "get_paramet": [1194, 1427], "net_b": [1194, 1427], "net_c": [1194, 1427], "transit": [1194, 1295, 1427, 1812, 1870, 1871, 1939, 1950], "inlined_graph": 1194, "ipu": [1194, 1427, 1910], "missing_kei": [1194, 1427], "unexpected_kei": [1194, 1427], "remove_dupl": [1194, 1427], "named_children": [1194, 1427, 1905], "conv4": [1194, 1427], "conv5": [1194, 1427], "memo": [1194, 1427, 1946], "register_backward_hook": [1194, 1427, 1603], "register_full_backward_hook": [1194, 1427, 1905], "register_forward_hook": [1194, 1427, 1601, 1905], "with_kwarg": [1194, 1427], "always_cal": [1194, 1427, 1601], "fire": [1194, 1427, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1898, 1904, 1953], "register_module_forward_hook": [1194, 1427, 1905], "register_forward_pre_hook": [1194, 1364, 1427, 1602, 1905], "forward_pr": [1194, 1427], "register_module_forward_pre_hook": [1194, 1427, 1905], "register_module_full_backward_hook": [1194, 1427, 1599, 1894, 1905], "register_full_backward_pre_hook": [1194, 1427, 1905], "register_module_full_backward_pre_hook": [1194, 1427, 1905], "register_load_state_dict_post_hook": [1194, 1427, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "incompatible_kei": [1194, 1427], "register_modul": [1194, 1427, 1605], "register_paramet": [1194, 1427, 1606, 1899, 1905], "register_state_dict_pre_hook": [1194, 1427, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "keep_var": [1194, 1427], "gan": [1194, 1427, 1615, 1648], "witch": 1194, "share_memori": [1194, 1427, 1907], "share_memory_": [1194, 1427, 1886, 1930], "shallow": [1194, 1364, 1427, 1475, 1476, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "4d": [1194, 1346, 1374, 1391, 1427, 1479, 1520, 1537, 1564, 1595, 1719], "1913": [1194, 1427], "3420": [1194, 1427], "5113": [1194, 1427, 1832], "2325": [1194, 1226, 1427], "gpu1": [1194, 1427], "1914": [1194, 1427], "5112": [1194, 1427, 1897], "3741": [1194, 1427], "2382": [1194, 1316, 1427], "5593": [1194, 1427], "4443": [1194, 1427], "6122": [1194, 1427], "1150": [1194, 1427], "to_empti": [1194, 1427], "dst_type": [1194, 1427], "set_to_non": [1194, 1427, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1897], "the_typ": 1195, "the_valu": 1195, "script_bar": 1197, "addmod": 1197, "preserved_attr": 1198, "optimize_numer": 1198, "optimize_for_infer": [1198, 1943], "run_frozen_optim": 1198, "scripted_modul": [1198, 1205, 1910], "frozen_modul": 1198, "modified_tensor": 1198, "mymodule2": 1198, "dump_alias_db": 1198, "pdb": [1199, 1205, 1211, 1871, 1873], "training_method": 1199, "target_typ": 1200, "refin": [1200, 1888], "testcod": [1200, 1873], "key1": 1200, "val1": 1200, "key2": 1200, "val2": 1200, "_restore_shap": 1201, "scriptfunct": [1201, 1205, 1206, 1209, 1912], "readlin": [1201, 1265, 1916], "seek": [1201, 1265, 1916, 1919], "retrac": 1201, "rb": [1201, 1265], "extra_fil": [1201, 1204], "txt": [1201, 1204, 1916, 1957], "other_method": 1203, "lesser": [1203, 1894, 1896], "extent": [1203, 1896, 1928], "frozen_mod": 1203, "offlin": 1204, "_frames_up": 1205, "_rcb": 1205, "scriptdict": 1205, "scriptlist": 1205, "test_sum": 1205, "scripted_fn": [1205, 1871], "conv2": [1205, 1427, 1455, 1871, 1919], "some_entry_point": 1205, "python_only_fn": 1205, "testnnmodul": 1205, "pdt_model": 1205, "scripted_model": [1205, 1916], "un": [1207, 1350, 1919], "unfus": 1207, "nb": 1207, "check_trac": [1209, 1210], "check_input": [1209, 1210, 1871], "check_toler": [1209, 1210], "_force_outplac": [1209, 1210], "_module_class": [1209, 1210], "_compilation_unit": [1209, 1210], "compilationunit": [1209, 1210], "example_kwarg_input": 1209, "_store_input": [1209, 1210], "trace_modul": [1209, 1871, 1874], "untrack": 1209, "checker": [1209, 1210, 1874, 1912], "diverg": [1209, 1210, 1393, 1538, 1870, 1874], "traced_foo": [1209, 1871], "example_weight": [1209, 1210], "example_forward_input": [1209, 1210], "example_inputs_is_kwarg": 1210, "method2": 1210, "example_method2_input": 1210, "weighted_kernel_sum": 1210, "use_memory_effici": 1211, "memory_effici": 1211, "scriptabl": 1211, "kaiser": [1213, 1470, 1472, 1474], "i_0": [1213, 1214, 1779, 1832, 1929], "zeroth": [1213, 1779, 1929], "out_i": 1213, "kroneck": 1214, "a_0": 1214, "a_n": 1214, "b_0": 1214, "b_1": 1214, "b_n": 1214, "k_0": [1214, 1832], "k_1": 1214, "k_n": 1214, "j_0": 1214, "j_1": 1214, "j_n": 1214, "k_t": 1214, "i_t": [1214, 1397, 1684], "b_t": 1214, "j_t": 1214, "bmatrix": 1214, "a_": [1214, 1285, 1415, 1832], "cdot": [1214, 1239, 1251, 1343, 1344, 1362, 1363, 1385, 1393, 1430, 1431, 1432, 1433, 1434, 1470, 1508, 1531, 1709, 1812, 1929, 1935], "vdot": [1214, 1261, 1262, 1872, 1914], "ddot": [1214, 1261], "kth": 1215, "full_lik": [1219, 1872, 1876, 1914], "logarithm": [1222, 1227, 1253, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1280, 1350, 1510, 1545, 1792, 1929], "gamma": [1222, 1345, 1346, 1347, 1382, 1390, 1391, 1392, 1399, 1466, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1685, 1687, 1691, 1692, 1695, 1700, 1701, 1719, 1870, 1872, 1912, 1914, 1915, 1929], "5724": [1222, 1929], "1208": [1222, 1929], "mathrlap": [1223, 1229, 1230, 1231, 1232, 1240, 1243, 1252, 1254, 1256, 1257, 1614], "qquad": [1223, 1225, 1229, 1230, 1231, 1232, 1233, 1240, 1243, 1252, 1254, 1256, 1257, 1614], "eigenvalu": [1223, 1229, 1230, 1231, 1232, 1245, 1248, 1251, 1256, 1257, 1266, 1705, 1872], "resp": [1223, 1230, 1232, 1256, 1257, 1274], "5266": 1223, "9586": 1223, "0626j": 1223, "4160": 1223, "5895": 1223, "2322": 1223, "2976j": 1223, "4928": [1223, 1832], "4692e": 1223, "8747e": 1223, "check_error": [1224, 1235, 1237, 1242, 1255, 1872], "opportun": [1224, 1871, 1925, 1946, 1947], "performantli": 1224, "3792": 1224, "9831j": 1224, "8757": 1224, "5425": 1224, "6374j": 1224, "kappa": 1225, "_p": [1225, 1436], "frobeniu": [1225, 1239, 1246, 1250, 1654], "nuc": [1225, 1246, 1250, 1263, 1625, 1634, 1654], "nuclear": [1225, 1246, 1250, 1654], "sigma_1": [1225, 1239, 1248, 1251], "sigma_n": 1225, "kappa_2": 1225, "kappa_": 1225, "4142": [1225, 1250, 1654, 1709], "1623": [1225, 1246], "2426": [1225, 1250, 1654], "7071": [1225, 1772], "5917": 1225, "9941": 1226, "5132": 1226, "5681": 1226, "4653": 1226, "4507": 1226, "4119": 1226, "6163": 1226, "1073": 1226, "3957": 1226, "9666": [1226, 1517], "0840": 1226, "3357": 1226, "2139": 1226, "slogdet": [1227, 1274, 1872, 1914], "0934": 1227, "1990": [1227, 1274], "4099": [1227, 1274], "7386": [1227, 1274], "diagonaliz": [1229, 1231], "eigenvector": [1229, 1230, 1266, 1872], "neq": [1229, 1230, 1233, 1257, 1328, 1430, 1432, 1670, 1671, 1672, 1674, 1676, 1682, 1683, 1685, 1689, 1816], "phi": [1229, 1230, 1257, 1377, 1524, 1816], "shall": [1229, 1230, 1257, 1616, 1620], "lambda_i": [1229, 1230, 1245], "lambda_j": [1229, 1230], "eigval": [1229, 1872], "9828": [1229, 1840, 1905], "3889j": 1229, "4617": 1229, "3010j": 1229, "1662": 1229, "7435j": 1229, "6139": 1229, "0562j": 1229, "1226": [1229, 1231], "5738j": [1229, 1231], "7537": [1229, 1231], "1286j": [1229, 1231], "9218": 1229, "1882": 1229, "2220j": 1229, "0270": 1229, "3867j": 1229, "7119e": 1229, "2841e": 1229, "uplo": [1230, 1232, 1872], "unitari": [1230, 1233, 1252, 1257, 1614, 1703], "ill": [1230, 1491, 1908], "eigvalsh": [1230, 1248], "9228": [1230, 1232], "2029": [1230, 1232], "0862j": [1230, 1232], "3464": [1230, 1232], "3277": [1230, 1232], "9415": [1230, 1232], "0846": 1230, "9964": 1230, "9170": 1230, "3898j": 1230, "0331j": 1230, "1062e": 1230, "5423e": 1230, "polynomi": [1231, 1232, 1698], "_n": [1231, 1232, 1234, 1614, 1899], "4576e": [1231, 1258], "5797": 1232, "4629": 1232, "1605": 1232, "3780": 1232, "1113": [1232, 1905], "7381": 1232, "h_1h_2": 1233, "h_k": 1233, "h_i": [1233, 1461], "_m": [1233, 1614], "tau_i": 1233, "8034": 1233, "4184j": 1233, "2588": 1233, "0174j": 1233, "6853": 1233, "7953j": 1233, "0790": 1233, "5620j": 1233, "6989j": 1233, "5360": 1233, "1193j": 1233, "3877": 1233, "6691j": 1233, "3512": 1233, "3024j": 1233, "4766": 1233, "5783j": 1233, "0361": [1233, 1905], "6587j": 1233, "6396": [1233, 1905], "1612j": 1233, "3693": 1233, "4481j": 1233, "aa": 1234, "pinv": [1234, 1239, 1707], "moor": [1234, 1251], "penros": [1234, 1251], "ainv": [1234, 1235, 1255, 1259], "1921e": 1234, "9073e": [1234, 1478], "5107e": 1234, "ldl": [1236, 1238], "indefinit": 1236, "ld": [1236, 1237, 1238, 1872], "sytrf": [1236, 1237], "ldl_solv": 1236, "ldl_factor_ex": [1236, 1238], "2079": [1236, 1237, 1929], "2414": [1236, 1237], "9428": [1236, 1237], "4554": [1236, 1237], "3264": [1236, 1237], "3823": [1236, 1237], "5884": [1236, 1237], "9595": [1236, 1237, 1772], "2695": [1236, 1237], "8513": [1236, 1237], "1633": [1236, 1237], "ldl_factor": 1237, "rcond": [1239, 1251, 1707, 1872], "_f": 1239, "gelsi": 1239, "gelsd": 1239, "gelss": 1239, "mind": [1239, 1257, 1370, 1894, 1900, 1902, 1950, 1955], "tridiagon": 1239, "sigma_i": [1239, 1257, 1816], "residu": [1239, 1266, 1872, 1905], "singular_valu": [1239, 1872], "lh": 1239, "rh": [1239, 1284], "0838": [1239, 1905], "2275": [1239, 1315], "3844": 1239, "5499": 1239, "1175": 1239, "9102": 1239, "0870": 1239, "6772": 1239, "7758": 1239, "5109": 1239, "4382": 1239, "3769": 1239, "1818": 1239, "3450": 1239, "0806": [1239, 1905], "3967": 1239, "3994": 1239, "1521": 1239, "1473": 1239, "9194": 1239, "0458": 1239, "6705": [1239, 1298], "1802": 1239, "4086": 1239, "5152e": 1239, "almost": [1240, 1241, 1911, 1946], "5007": 1240, "9755": 1240, "0489": 1240, "9644": [1240, 1293], "9605e": 1240, "0376e": 1240, "lu_factor_ex": [1241, 1283], "lu_unpack": [1241, 1283, 1872, 1914], "b1": 1241, "b2": [1241, 1897, 1903], "a_factor": 1241, "getrf": [1242, 1255], "adjoint": [1243, 1872, 1914, 1932, 1934], "_exp": 1245, "3891": 1245, "8660": 1245, "ord": [1246, 1250, 1263, 1654, 1872, 1874, 1914], "la": [1246, 1250, 1263, 1905], "2829": 1246, "2627": 1246, "0756": 1247, "4980": 1247, "6617": 1247, "4994": 1247, "9980": 1247, "2731": 1247, "8001": 1247, "2640": 1247, "4571": 1247, "5511": 1247, "0163": [1247, 1293], "5292": 1247, "4899": 1247, "0822": 1247, "2773": [1247, 1889], "varepsilon": [1248, 1251, 1475], "tol": [1248, 1266, 1872], "fewest": 1249, "nd": [1249, 1908], "bc": [1249, 1915], "75000": 1249, "26": [1249, 1690, 1944, 1957], "148": 1249, "vector_norm": [1250, 1654], "matrix_norm": [1250, 1263, 1615, 1654], "7460": [1250, 1654], "3485": 1250, "8570e": 1250, "8480": 1250, "2361": [1250, 1654, 1655], "7417": [1250, 1654], "computation": [1251, 1902], "5495": [1251, 1315], "0979": 1251, "4092": 1251, "4132": [1251, 1778], "1143": 1251, "3662": 1251, "6374": 1251, "9294": 1251, "3269": [1251, 1905], "5745": [1251, 1810, 1811, 1857, 1858], "0382": [1251, 1316], "5922": 1251, "6759": 1251, "0600": 1251, "1933": 1251, "2090": 1251, "0903": 1251, "0817": 1251, "4752": [1251, 1815], "7124": 1251, "1631": 1251, "2272": 1251, "1356": 1251, "3933": 1251, "5023": 1251, "0308": 1251, "1725": 1251, "5216": 1251, "apinv": 1251, "5633e": 1251, "0830e": 1251, "wide": [1252, 1257, 1614, 1774, 1896, 1899, 1905, 1915], "51": [1252, 1425, 1715], "167": [1252, 1715], "68": [1252, 1715, 1871, 1873], "8571": [1252, 1715], "3943": [1252, 1715], "3314": [1252, 1715], "4286": [1252, 1715], "9029": [1252, 1715], "0343": [1252, 1715], "2857": [1252, 1715], "1714": [1252, 1715, 1905], "9429": [1252, 1715], "175": [1252, 1715], "q2": 1252, "r2": [1252, 1466], "6099e": 1252, "2158e": 1252, "logabsdet": [1253, 1872], "0032": 1253, "1219": [1253, 1734], "6690": 1253, "1161": 1253, "4053": 1253, "6218": [1253, 1829], "9273": 1253, "0082": 1253, "7576": 1253, "logdet": [1253, 1872, 1914], "linalg_slogdet": [1253, 1872, 1914], "2776": 1253, "solve_triangular": [1254, 1839], "expand_a": [1254, 1872, 1899, 1914, 1932], "rectangular": [1256, 1257, 1285, 1892], "triu_": [1256, 1872], "tril_": [1256, 1872], "full_matric": [1257, 1258, 1619, 1816, 1872, 1952], "vh": [1257, 1619, 1816, 1872, 1952], "gesvdj": [1257, 1258, 1816], "jacobi": 1257, "gesvda": [1257, 1258], "gesvd": [1257, 1258, 1816], "u_k": 1257, "v_k": 1257, "sigma_j": [1257, 1816], "eigendecomposit": 1257, "0486e": 1257, "0957e": 1257, "5139": 1258, "1087": 1258, "1066": 1258, "ind": [1259, 1260, 1872, 1900], "tensorsolv": 1259, "ndim": [1259, 1260, 1887, 1889, 1928, 1934, 1944], "atensorinv": 1259, "movedim": [1260, 1300, 1872, 1900, 1914, 1932], "tensorinv": 1260, "vandermond": [1261, 1856], "pmatrix": 1261, "x_n": [1261, 1343, 1344, 1387, 1388, 1394, 1418, 1458, 1837, 1894], "125": [1261, 1445, 1856, 1872], "overlin": [1262, 1859], "3223": 1262, "2815": 1262, "1944": [1262, 1905], "4345": 1263, "pickle_modul": [1265, 1747], "weights_onli": [1265, 1869, 1883], "mmap": [1265, 1886], "pickle_load_arg": 1265, "register_packag": [1265, 1910], "binaryio": [1265, 1747, 1916], "mmape": 1265, "untrust": [1265, 1869, 1883, 1916], "unsaf": [1265, 1616, 1619, 1872, 1897, 1916], "tamper": [1265, 1916], "ram": [1265, 1897], "surg": 1265, "utf": [1265, 1912, 1916], "unicodedecodeerror": 1265, "codec": 1265, "0x": 1265, "latin1": 1265, "byte_arrai": 1265, "niter": [1266, 1705, 1817], "ortho_iparam": 1266, "ortho_fparam": 1266, "ortho_bparam": 1266, "knyazev": 1266, "knyazev2001": 1266, "stathopoulosetal2002": 1266, "converg": [1266, 1458, 1614, 1672, 1673, 1697, 1893, 1905, 1908], "precondition": 1266, "eigenpair": 1266, "criterion": [1266, 1343, 1344, 1361, 1363, 1388, 1394, 1418, 1419, 1430, 1431, 1432, 1458, 1459, 1475, 1476, 1509, 1690, 1722, 1901], "fep": 1266, "eigenproblem": 1266, "iparam": 1266, "fparam": 1266, "bparam": 1266, "ivar": 1266, "fvar": 1266, "bvar": 1266, "tvar": 1266, "istep": 1266, "converged_count": 1266, "rerr": 1266, "force_stop": 1266, "2001": 1266, "precondit": 1266, "eigensolv": 1266, "siam": 1266, "sci": 1266, "517": 1266, "541": 1266, "epub": 1266, "doi": [1266, 1381, 1780], "1137": 1266, "s1064827500366124": 1266, "andrea": 1266, "stathopoulo": 1266, "kesheng": 1266, "2002": [1266, 1780], "2165": 1266, "2182": 1266, "s1064827500370883": 1266, "duerschetal2018": 1266, "jed": 1266, "duersch": 1266, "meiyu": 1266, "shao": 1266, "chao": 1266, "ming": 1266, "gu": 1266, "c655": 1266, "c676": 1266, "17m1129830": 1266, "log_": [1267, 1268, 1269, 1270, 1872, 1887], "7767": 1267, "3234": 1267, "2156": 1267, "2411": 1267, "5739": 1267, "5637": 1267, "4640": 1267, "1952": 1267, "4226": 1267, "5204": [1267, 1724], "5224": 1268, "9354": 1268, "7257": 1268, "1301": 1268, "2820": 1268, "0290": 1268, "1392": 1268, "8857": 1268, "6476": 1268, "0090": [1269, 1329, 1711, 1929], "9923": 1269, "5372": 1269, "2492": 1269, "8653": 1269, "7055": 1269, "7705": 1269, "2225": 1269, "8419": 1270, "8003": [1270, 1909], "9971": 1270, "5287": 1270, "0490": 1270, "2483": 1270, "0042": 1270, "9196": 1270, "3504": [1270, 1832], "logsumexp": [1271, 1872, 1887, 1914, 1929], "3069": 1271, "6867": 1271, "8731": 1271, "30000": 1271, "1269e": 1271, "log_2": 1272, "logaddexp": [1272, 1872, 1914], "limits_": 1273, "42296738": 1273, "04462666": 1273, "86278635": 1273, "94622083": 1273, "05277811": 1273, "39202815": 1273, "83525007": 1273, "84492621": 1273, "06084887": 1273, "06844475": 1273, "2611": [1274, 1829], "9254": 1274, "6213": [1274, 1905], "6843": 1274, "3242": 1274, "9665": 1274, "4539": 1274, "0887": [1274, 1929], "1336": 1274, "4025": 1274, "7089": [1274, 1370], "9032": 1274, "3031": 1274, "2589": 1280, "1135": 1280, "5481": [1280, 1293, 1905], "9566": 1280, "sum_j": [1281, 1417, 1460, 1462, 1582, 1795, 1929], "0593": [1281, 1905], "5696": 1281, "6859e": 1281, "compute_pivot": 1283, "transposit": [1283, 1836, 1928], "perm": 1283, "a_lu": 1283, "5558": 1283, "1684": 1283, "1551": 1283, "1940": 1283, "6189": 1283, "5497": 1283, "4526": 1283, "2526": 1283, "3285": 1283, "7988": 1283, "7175": 1283, "9701": 1283, "2634": 1283, "9255": 1283, "3459": 1283, "00000e": 1284, "8312": 1284, "unpack_data": [1285, 1872], "unpack_pivot": [1285, 1872], "l_": [1285, 1332, 1336, 1340, 1344, 1355, 1356, 1357, 1358, 1395, 1420], "u_": [1285, 1670, 1674], "3552": [1287, 1518], "3825": 1287, "8297": 1287, "3477": 1287, "2035": [1287, 1810, 1811, 1857, 1858], "2252": [1287, 1929], "5002": 1287, "6248": [1287, 1296], "1307": 1287, "0608": [1287, 1789], "1244": 1287, "0139": 1287, "6763": 1291, "7445": 1291, "2369": 1291, "argmax": [1291, 1335, 1420, 1550, 1551, 1552, 1827, 1872, 1914, 1952], "max_indic": 1291, "2360": 1291, "2942": 1291, "1222": [1291, 1905], "8475": 1291, "1949": 1291, "1127": 1291, "6702": 1291, "5717": 1291, "9207": 1291, "1297": 1291, "8768": 1291, "6172": 1291, "6060": 1291, "2432": 1291, "3288": 1293, "3367": 1293, "nanmean": [1293, 1872, 1914], "3841": 1293, "6320": 1293, "4254": 1293, "7384": 1293, "0131": 1293, "6549": [1293, 1772], "4279": 1293, "3350": 1293, "7694": 1293, "5600": [1293, 1479], "0842": 1293, "9580": 1293, "3623": 1293, "2343": [1293, 1889], "5085": 1293, "4599": 1293, "1807": 1293, "5219": 1294, "5212": 1294, "2202": 1294, "2505": 1294, "3982": 1294, "9948": 1294, "3518": 1294, "3131": 1294, "3180": [1294, 1928], "6993": 1294, "0436": 1294, "0438": 1294, "2270": 1294, "2751": 1294, "7303": 1294, "2192": 1294, "3321": 1294, "2488": 1294, "0778": 1294, "9510": 1294, "7048": 1294, "4742": [1294, 1845, 1929], "7125": [1294, 1797], "plot": [1295, 1896, 1918, 1933, 1959], "t_0": [1295, 1690], "t_": [1295, 1376, 1522, 1689, 1690, 1872, 1928, 1946], "s_0": 1295, "s_": [1295, 1333, 1334, 1373, 1477], "g_0": 1295, "g_": [1295, 1674, 1684, 1685], "g_i": 1295, "t_i": 1295, "0d": [1295, 1419], "xy": 1295, "50276": 1295, "cartesian_prod": [1295, 1872, 1914], "grid_x": 1295, "grid_i": 1295, "dstack": [1295, 1872, 1914, 1928], "matplotlib": [1295, 1933], "pyplot": [1295, 1933], "plt": 1295, "plot_surfac": 1295, "6750": 1296, "0857": [1296, 1842], "7197": [1296, 1865], "argmin": [1296, 1872, 1914, 1952], "min_indic": [1296, 1872], "1334": 1296, "2803": 1296, "4644": [1296, 1810, 1811, 1857, 1858], "2635": [1296, 1905], "3651": 1296, "0384": 1296, "0128": 1296, "7015": 1296, "1153": 1296, "9849": 1296, "1458": [1296, 1929], "5788": 1296, "deduc": [1298, 1928], "4851": 1298, "5037": 1298, "3633": 1298, "0760": 1298, "3362": [1300, 1301], "8437": [1300, 1301], "9627": [1300, 1301], "1727": [1300, 1301], "5173": [1300, 1301], "1398": [1300, 1301], "mpsalloc": [1302, 1303], "metal": [1303, 1312, 1882, 1885, 1906], "mpsgraph": 1303, "wait_until_complet": [1308, 1309], "signpost": [1308, 1309, 1310], "xcode": 1309, "recommendedmaxworkingsets": 1312, "unlimit": [1312, 1897], "1321": 1315, "4370": [1315, 1928], "1289": 1315, "0527": 1315, "3077": [1315, 1806], "0881": 1315, "1259": 1315, "0284": 1315, "2015": [1316, 1892, 1905], "6087": 1316, "1494": 1316, "5491": 1316, "260": 1316, "8663": 1316, "3137": 1316, "0700": 1316, "8378": 1316, "5146": 1316, "1216": 1316, "5244": 1316, "5767": 1316, "1363": 1316, "5877": 1316, "5083": 1316, "1614": 1316, "1645": 1316, "7021": 1316, "0085": 1316, "0367": 1316, "1567": 1316, "4312": 1316, "1019": 1316, "4394": 1316, "8753": 1316, "_sampl": 1317, "thtensorrandom": 1317, "320": [1317, 1453], "0404": 1319, "6361": 1319, "multigammaln": [1320, 1929], "4028e": 1321, "38": [1321, 1944], "1400e": 1321, "isnan": [1322, 1872, 1914, 1928, 1952], "midpoint": [1324, 1716], "weakli": [1326, 1327, 1929], "to_spars": [1327, 1793, 1872, 1909, 1914, 1928], "2262": [1329, 1711], "0682": [1329, 1711], "2866": [1329, 1711], "3940": [1329, 1711], "5x7": [1333, 1337], "7x7": [1333, 1337], "10x7": [1333, 1337], "cube": [1334, 1338, 1722], "d_": [1334, 1338, 1342, 1354, 1357, 1360, 1422, 1425, 1450, 1453, 1479, 1484, 1526, 1840, 1841, 1842, 1843], "5x7x9": [1334, 1338], "7x7x7": [1334, 1338], "7x9x8": [1334, 1338], "n_class": 1335, "cutoff": [1335, 1892], "div_valu": 1335, "head_bia": 1335, "edouard": 1335, "grave": [1335, 1350], "armand": 1335, "joulin": 1335, "moustapha": 1335, "ciss\u00e9": 1335, "grangier": 1335, "herv\u00e9": 1335, "j\u00e9gou": 1335, "imbalanc": 1335, "zipf": 1335, "law": 1335, "102": [1335, 1951], "1001": 1335, "1002": 1335, "_class": 1335, "maxunpool1d": [1336, 1420, 1553, 1851], "maxunpool2d": [1337, 1375, 1421, 1554, 1851], "maxunpool3d": [1338, 1376, 1422, 1555, 1851], "selu": [1339, 1372, 1519, 1872, 1892, 1912, 1914], "n_i": [1340, 1341, 1342, 1355, 1356, 1357, 1420, 1421, 1422, 1475, 1476], "c_j": [1340, 1341, 1342, 1420, 1421, 1422], "size_averag": [1343, 1344, 1361, 1363, 1387, 1393, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1498, 1499, 1507, 1509, 1534, 1538, 1539, 1549, 1557, 1558, 1559, 1560, 1561, 1569, 1580, 1581, 1592, 1872], "unreduc": [1343, 1344, 1363, 1388, 1394, 1418, 1434, 1458, 1476], "ell": [1343, 1344, 1363, 1387, 1388, 1394, 1418, 1434, 1458, 1476], "l_1": [1343, 1344, 1363, 1387, 1388, 1394, 1418, 1434, 1458, 1476], "l_n": [1343, 1344, 1363, 1387, 1388, 1394, 1418, 1434, 1458, 1476], "w_n": [1343, 1344, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780], "y_n": [1343, 1344, 1363, 1387, 1388, 1394, 1418, 1434, 1458, 1837, 1894], "lim_": [1343, 1894], "secondli": 1343, "straight": [1343, 1528], "rescal": [1343, 1344, 1363, 1431, 1432, 1434, 1460, 1462, 1498, 1499, 1509, 1561, 1619, 1648], "nbatch": [1343, 1344], "meantim": [1343, 1344, 1361, 1363, 1387, 1394, 1418, 1419, 1430, 1431, 1432, 1434, 1441, 1458, 1459, 1475, 1498, 1499, 1509, 1538, 1561, 1569, 1957], "pos_weight": [1344, 1499, 1872], "recal": [1344, 1899, 1933, 1950], "classif": [1344, 1350, 1363, 1430, 1432, 1434, 1459, 1510, 1870, 1892, 1920], "ell_c": 1344, "l_c": 1344, "p_c": 1344, "pai": [1344, 1499, 1911, 1932], "spacial": [1344, 1499], "random_": [1344, 1363, 1434, 1499, 1872, 1887, 1936], "hat": [1345, 1346, 1347, 1390, 1391, 1392, 1466], "terminologi": [1345, 1346, 1347, 1466], "tempor": [1345, 1347, 1350, 1466, 1479, 1510, 1537, 1595], "5d": [1347, 1392, 1479, 1526, 1537, 1564, 1595], "volumetr": [1347, 1466, 1479, 1526, 1537, 1595, 1596, 1597], "spatio": [1347, 1466], "in1_featur": 1348, "in2_featur": 1348, "in1": [1348, 1497], "in2": [1348, 1497], "blank": [1350, 1510, 1872, 1875], "zero_infin": [1350, 1510, 1872], "connectionist": [1350, 1510], "unseg": 1350, "longest": [1350, 1641, 1643, 1644, 1901], "input_length": [1350, 1510, 1872, 1901], "target_length": [1350, 1510, 1872], "s_n": 1350, "target_n": 1350, "unbatch": [1350, 1363, 1374, 1379, 1390, 1397, 1433, 1442, 1470, 1520], "s_min": 1350, "toronto": 1350, "edu": [1350, 1722], "icml_2006": 1350, "256": [1350, 1712, 1897, 1912], "background": [1350, 1358, 1526, 1564, 1907, 1924], "channel_shuffl": [1351, 1872, 1914], "_left": [1352, 1353, 1354, 1448, 1449, 1450, 1451, 1452, 1453, 1482, 1483, 1484, 1564], "_right": [1352, 1353, 1354, 1448, 1449, 1450, 1451, 1452, 1453, 1482, 1483, 1484, 1564], "0491": [1352, 1482], "7152": [1352, 1482], "0749": [1352, 1482], "3287": [1352, 1482], "8966": [1352, 1482], "1466": [1352, 1482], "2771": [1352, 1482], "6616": [1352, 1482], "4523": [1352, 1482], "1255": [1352, 1482], "6372": [1352, 1482, 1816], "1182": [1352, 1482], "8652": [1352, 1482], "_top": [1353, 1354, 1449, 1450, 1452, 1453, 1483, 1484, 1564], "_bottom": [1353, 1354, 1449, 1450, 1452, 1453, 1483, 1484, 1564], "6585": 1353, "4320": [1353, 1825], "8701": 1353, "4649": 1353, "_front": [1354, 1450, 1453, 1484, 1564], "_back": [1354, 1450, 1453, 1484, 1564], "_j": [1355, 1356], "star": [1355, 1356, 1357, 1874], "\u00e0": [1355, 1356, 1357, 1358, 1359, 1360, 1374, 1478], "trou": [1355, 1356, 1357, 1358, 1359, 1360, 1374, 1478], "harder": [1355, 1356, 1357, 1358, 1359, 1360, 1374, 1421, 1422, 1478], "nice": [1355, 1356, 1357, 1358, 1359, 1360, 1374, 1420, 1421, 1422, 1478, 1888, 1894, 1897, 1916], "prod_": [1356, 1357, 1359, 1360, 1373, 1477, 1676], "out_j": 1357, "deconvolut": [1358, 1359, 1360, 1504, 1505, 1506], "_pad": [1358, 1359, 1360], "dissimilar": [1361, 1387], "semi": [1361, 1387, 1870, 1892], "supervis": [1361, 1387], "vert": [1362, 1436, 1508], "_2": [1362, 1508, 1615, 1648], "ast_1": [1362, 1378], "ast_2": [1362, 1378], "ignore_index": [1363, 1434, 1509, 1561, 1872], "label_smooth": [1363, 1509, 1872], "unbalanc": [1363, 1434], "d_1": [1363, 1434, 1509, 1561], "d_2": [1363, 1434, 1509, 1561], "d_k": [1363, 1434, 1509, 1561], "_index": [1363, 1434], "logsoftmax": [1363, 1434, 1460, 1545], "nllloss": [1363, 1460, 1561, 1582, 1851], "blend": 1363, "smooth": [1363, 1388, 1458, 1463, 1509, 1683], "w_c": 1363, "truth": [1363, 1509, 1881, 1933], "rethink": [1363, 1509], "incept": [1363, 1509], "spectral_norm": [1364, 1638], "neuron": 1365, "detector": 1365, "dropout1d": [1367, 1872], "_freez": 1370, "sparseadam": [1370, 1915], "0251": 1370, "6902": [1370, 1713], "7172": 1370, "6431": 1370, "0748": 1370, "6969": 1370, "4970": 1370, "3448": 1370, "9685": 1370, "3677": 1370, "7265": 1370, "1685": 1370, "4362": 1370, "4004": [1370, 1797], "9400": 1370, "9124": 1370, "3616": 1370, "1151": 1370, "0309": 1370, "9315": 1370, "1655": [1370, 1897], "9897": 1370, "0635": 1370, "7895": 1370, "0364": 1370, "6778": 1370, "5803": 1370, "from_pretrain": [1370, 1371, 1949], "bag": [1371, 1518], "per_sample_weight": [1371, 1518, 1872, 1952], "embedding_sum": 1371, "8861": 1371, "4350": 1371, "0523": 1371, "1306": 1371, "5798": 1371, "0044": 1371, "7082": [1371, 1518], "2145": [1371, 1518], "6251": [1371, 1518], "6500": 1371, "satur": [1372, 1519], "alphadropout": [1372, 1492], "160": [1373, 1915], "unfold": [1374, 1872, 1914, 1932], "prod_d": [1374, 1478], "neighborhood": [1374, 1478], "col2im": [1374, 1872, 1914, 1952], "fold_param": [1374, 1478], "input_on": [1374, 1478], "output_ratio": [1375, 1376, 1521, 1522, 1872], "_random_sampl": [1375, 1376, 1521, 1522, 1872], "ben": [1375, 1376, 1521, 1522], "graham": [1375, 1376, 1521, 1522], "oh": [1375, 1376, 1521, 1522], "ow": [1375, 1376, 1521, 1522], "_ratio": [1375, 1376, 1522], "13x12": [1375, 1521], "kt": [1376, 1495, 1503, 1506, 1522, 1552], "ot": [1376, 1522], "13x12x11": [1376, 1522], "044715": [1377, 1524], "pack_sequ": [1379, 1397, 1442, 1643, 1645], "bias_ih": [1380, 1398, 1444], "bias_hh": [1380, 1398, 1444], "const": [1381, 1904], "homoscedast": [1381, 1523], "heteroscedast": [1381, 1523], "nix": 1381, "weigend": 1381, "1994": 1381, "icnn": 1381, "94": 1381, "orlando": 1381, "fl": 1381, "usa": [1381, 1933], "374138": 1381, "instancenorm": [1382, 1921], "layernorm": [1382, 1390, 1391, 1392, 1470, 1472, 1474, 1540, 1889, 1921, 1957], "shrinkag": [1383, 1464, 1529, 1585], "mobilenetv3": [1385, 1531], "_val": 1386, "l1loss": [1388, 1458, 1539], "outlier": [1388, 1458, 1919, 1920], "huber": [1388, 1458], "smoothl1loss": [1388, 1580], "insensit": 1389, "unused_argument1": 1389, "unused_argument2": 1389, "ingredi": [1390, 1391, 1392], "styliz": [1390, 1391, 1392], "rgb": [1391, 1392, 1933], "color": [1392, 1873, 1874, 1933, 1948], "log_target": [1393, 1538, 1872], "kl": [1393, 1538, 1870], "summaris": 1393, "loss_pointwis": 1393, "batchmean": [1393, 1538], "kl_loss": 1393, "mae": 1394, "f_t": [1397, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "hf": [1397, 1398], "g_t": [1397, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "ig": [1397, 1398], "hg": [1397, 1398], "o_t": 1397, "ho": [1397, 1398], "c_t": 1397, "odot": 1397, "forget": [1397, 1873, 1874], "proj_siz": [1397, 1443], "1402": 1397, "c_0": [1397, 1398], "proj": 1397, "c_n": 1397, "w_ii": 1397, "w_if": 1397, "w_ig": 1397, "w_io": 1397, "w_hi": 1397, "w_hf": 1397, "w_hg": 1397, "w_ho": 1397, "b_ii": 1397, "b_if": 1397, "b_ig": 1397, "b_io": 1397, "b_hi": 1397, "b_hf": 1397, "b_hg": 1397, "b_ho": 1397, "weight_hr_l": 1397, "_revers": 1397, "h_1": 1398, "c_1": 1398, "time_step": 1398, "_shape": 1399, "sentence_length": 1399, "lazymodulemixin": [1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412], "cls_to_becom": [1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1610], "convtranspose1d": [1406, 1504, 1851, 1921], "convtranspose3d": [1408, 1506, 1851, 1921], "instancenorm1d": [1409, 1536, 1921], "instancenorm2d": [1410, 1536, 1921], "instancenorm3d": [1411, 1536, 1921], "uninitializedparamet": [1412, 1598, 1870], "lrn": 1415, "signal_2d": 1415, "signal_4d": 1415, "output_2d": 1415, "output_4d": 1415, "x_j": [1417, 1460, 1462, 1582, 1795, 1902, 1929], "80827": [1423, 1424, 1425], "unpool": [1423, 1424, 1425], "maxpool3d": [1425, 1552, 1555, 1851, 1921], "unpooled_output": 1425, "t_destin": 1427, "lrelu": [1428, 1905], "hing": [1430, 1432], "sum_i": [1431, 1432, 1459], "nelement": [1431, 1459], "jointli": 1433, "multihead": [1433, 1472], "concat": [1433, 1872, 1914], "head_1": 1433, "head_h": 1433, "head_i": 1433, "qw_i": 1433, "kw_i": 1433, "vw_i": 1433, "scaled_dot_product_attent": [1433, 1872, 1914], "fastpath": [1433, 1946], "inference_mod": [1433, 1474], "nestedtensor": [1433, 1474, 1889], "multihead_attn": 1433, "e_q": 1433, "e_k": 1433, "e_v": 1433, "_head": [1433, 1470], "merge_mask": 1433, "mask_typ": 1433, "merged_mask": 1433, "nll": 1434, "crossentropyloss": [1434, 1509], "num_paramet": 1435, "nchannel": 1435, "decai": [1435, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1688, 1692, 1694, 1695, 1698, 1699, 1701, 1773, 1915], "legitim": [1435, 1526, 1900], "vert_p": 1436, "fromkei": 1437, "popitem": [1437, 1914], "setdefault": [1437, 1914], "upscale_factor": [1439, 1567, 1872, 1952], "upscal": 1439, "video": [1439, 1440, 1888, 1933, 1944], "shi": [1439, 1440], "2016": [1439, 1440, 1476], "_factor": [1439, 1440, 1479, 1480, 1481], "pixel_shuffl": [1439, 1872, 1914, 1921, 1952], "downscale_factor": [1440, 1568, 1872], "pixelshuffl": [1440, 1567, 1568, 1921], "downscal": 1440, "pixel_unshuffl": [1440, 1872, 1914, 1921], "log_input": [1441, 1569, 1872], "poisson": [1441, 1569, 1773, 1870, 1872, 1914], "stirl": [1441, 1569], "hh": [1442, 1444], "flatten_paramet": 1443, "3333333333333333": [1445, 1688, 1694, 1872], "leaki": [1445, 1574, 1892], "rectifi": [1445, 1446, 1571, 1892], "liner": 1445, "empir": 1445, "1505": 1445, "00853": 1445, "crelu": 1446, "1603": 1446, "05201": 1446, "480": 1453, "6732632423543772848170429916717": [1454, 1577], "0507009873554804934193349852946": [1454, 1577], "kaiming_norm": 1454, "kaiming_normal_": [1454, 1870, 1876, 1892], "initialis": 1454, "calculate_gain": [1454, 1870, 1876, 1892], "modulelist": [1455, 1905], "cascad": 1455, "relu2": [1455, 1598], "swish": [1456, 1579], "coin": [1456, 1579], "explod": 1458, "cnn": [1458, 1919], "ross": 1458, "girshick": 1458, "quadrat": [1458, 1901], "huberloss": [1458, 1535], "lie": [1460, 1462, 1582, 1795, 1929, 1933, 1946], "w_j": 1461, "soft": [1464, 1528, 1585], "softshrinkag": 1464, "convert_sync_batchnorm": 1466, "r1": 1466, "sync_bn_network": 1466, "ddp_sync_bn_network": 1466, "sync_bn_modul": 1466, "d_model": [1470, 1471, 1472, 1473, 1474], "nhead": [1470, 1471, 1472, 1473, 1474], "num_encoder_lay": 1470, "num_decoder_lay": 1470, "dim_feedforward": [1470, 1472, 1474], "custom_encod": 1470, "custom_decod": 1470, "layer_norm_ep": [1470, 1472, 1474], "norm_first": [1470, 1472, 1474], "ashish": [1470, 1472, 1474], "vaswani": [1470, 1472, 1474], "noam": [1470, 1472, 1474], "shazeer": [1470, 1472, 1474], "niki": [1470, 1472, 1474], "parmar": [1470, 1472, 1474], "jakob": [1470, 1472, 1474], "uszkoreit": [1470, 1472, 1474], "llion": [1470, 1472, 1474], "jone": [1470, 1472, 1474], "aidan": [1470, 1472, 1474], "gomez": [1470, 1472, 1474], "lukasz": [1470, 1472, 1474], "illia": [1470, 1472, 1474], "polosukhin": [1470, 1472, 1474], "6000": [1470, 1472, 1474, 1479, 1719, 1767, 1770], "6010": [1470, 1472, 1474], "feedforward": [1470, 1472, 1474, 1892], "transformer_model": 1470, "word_language_model": 1470, "src_mask": [1470, 1474], "tgt_mask": [1470, 1471, 1472], "memory_mask": [1470, 1471, 1472], "src_key_padding_mask": [1470, 1473, 1474], "tgt_key_padding_mask": [1470, 1471, 1472], "memory_key_padding_mask": [1470, 1471, 1472], "src_is_caus": 1470, "tgt_is_caus": [1470, 1471, 1472], "memory_is_caus": [1470, 1471, 1472], "_mask": [1470, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637], "_key_padding_mask": 1470, "generate_square_subsequent_mask": 1470, "sz": 1470, "decoder_lay": [1471, 1472], "transformerdecoderlay": 1471, "transformer_decod": 1471, "attn": [1472, 1474], "encoder_lay": [1473, 1474], "enable_nested_tensor": 1473, "mask_check": 1473, "bert": [1473, 1949], "1810": 1473, "04805": 1473, "transformerencoderlay": 1473, "transformer_encod": 1473, "flashattent": [1474, 1576], "triplet": [1475, 1476], "x3": 1475, "balnta": [1475, 1476], "riba": [1475, 1476], "a_i": [1475, 1476, 1775], "p_i": [1475, 1476], "rm": [1475, 1476], "bf": [1475, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "rvert_p": [1475, 1562], "tripletmarginwithdistanceloss": [1475, 1593], "triplet_loss": [1475, 1476], "distance_funct": [1476, 1593], "l_i": 1476, "tripletmarginloss": [1476, 1592], "l_p": [1476, 1562], "pairwisedist": [1476, 1565], "penal": [1476, 1905], "distant": 1476, "anchor_id": 1476, "positive_id": 1476, "negative_id": 1476, "l_infin": 1476, "bmva": 1476, "bmvc": 1476, "paper119": 1476, "unflattened_s": 1477, "namedtensor": 1477, "namedshap": 1477, "u_1": 1477, "u_n": 1477, "u_i": 1477, "im2col": [1478, 1872, 1914], "fold": [1478, 1817, 1872, 1882, 1912, 1922, 1928], "2x3": 1478, "3x4": 1478, "inp_unf": 1478, "out_unf": 1478, "recompute_scale_factor": [1479, 1537], "bicub": [1479, 1526, 1537, 1595, 1851], "trilinear": [1479, 1526, 1537, 1595, 1851], "input_3x3": 1479, "4375": 1479, "8125": 1479, "9375": 1479, "2400": [1479, 1832], "1200": [1479, 1744, 1897], "8800": 1479, "4400": [1479, 1832], "7200": 1479, "0400": 1479, "2800": [1479, 1767], "3600": 1479, "5200": 1479, "6400": 1479, "1678": 1483, "4418": 1483, "9466": [1483, 1929], "9604": 1483, "4219": 1483, "5241": 1483, "9162": 1483, "5436": [1483, 1832], "6446": 1483, "adaptiveavgpool1d": [1485, 1921], "tripl": [1487, 1490], "adaptivemaxpool1d": 1488, "adaptivemaxpool2d": [1489, 1851], "adaptivemaxpool3d": 1490, "avgpool1d": [1493, 1921], "st": [1495, 1503, 1506, 1552, 1957], "avgpool3d": [1495, 1851, 1921], "iT": [1495, 1503, 1506], "padt": [1495, 1503, 1506], "score": [1499, 1576, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634, 1870], "dt": [1503, 1506, 1929, 1957], "out_padw": [1504, 1505, 1506], "out_padh": [1505, 1506], "out_padt": 1506, "cosineembeddingloss": 1507, "ctcloss": [1510, 1851], "charact": [1510, 1764, 1871, 1874, 1888, 1924], "elu": [1516, 1872, 1912, 1914, 1921], "embedding_matrix": [1517, 1518], "8490": 1517, "9625": 1517, "6753": 1517, "7761": 1517, "6108": 1517, "6246": 1517, "9751": 1517, "3618": 1517, "4161": [1517, 1928], "2419": 1517, "7383": 1517, "0237": 1517, "7794": 1517, "0528": 1517, "3385": 1517, "8612": 1517, "1867": 1517, "5384": 1517, "8720": 1517, "6262": 1517, "7471": 1517, "embeddingbag": [1518, 1851, 1919, 1921, 1934], "3397": 1518, "5545": 1518, "5893": 1518, "4386": 1518, "5882": 1518, "featurealphadropout": 1519, "gaussiannllloss": 1523, "border": 1526, "affine_grid": [1526, 1872], "extrema": 1526, "pil": [1526, 1537], "overshoot": [1526, 1537, 1595], "gumbel": [1528, 1870], "y_hard": 1528, "y_soft": 1528, "hardtanh": [1533, 1872, 1882, 1914, 1921, 1952], "hingeembeddingloss": 1534, "use_input_stat": [1536, 1872], "antialia": 1537, "anti": 1537, "pillow": [1537, 1933], "buggi": 1537, "inter_nearest": 1537, "104157": 1537, "kldivloss": 1538, "batchsiz": [1538, 1798, 1799, 1800, 1802, 1803, 1928], "leaky_relu": [1542, 1872, 1892, 1914, 1921, 1952], "localresponsenorm": 1544, "_stacklevel": [1545, 1582, 1583, 1872], "lppool1d": 1547, "lppool2d": 1548, "marginrankingloss": 1549, "max_unpool1d": [1550, 1872], "multimarginloss": 1558, "multilabelmarginloss": 1559, "multilabelsoftmarginloss": 1560, "n_0": 1562, "n_": 1562, "n_k": 1562, "everywher": [1563, 1812, 1915], "circularpad2d": 1564, "constantpad2d": 1564, "reflectionpad2d": [1564, 1851], "replicationpad2d": [1564, 1851], "t4d": 1564, "p1d": 1564, "p2d": 1564, "p3d": 1564, "pixelunshuffl": [1568, 1921], "poissonnllloss": 1569, "rrelu": [1575, 1872, 1914], "dropout_p": [1576, 1872], "attn_bia": 1576, "temp_mask": 1576, "ev": 1576, "legend": 1576, "softmarginloss": 1581, "module_kwarg": 1591, "upsample_trilinear": 1596, "fo": 1596, "spatia": 1597, "mixin": [1598, 1870], "dry": 1598, "lazymlp": 1598, "lazylinear": 1598, "lazy_mlp": 1598, "8832e": 1598, "5636e": 1598, "1598e": 1598, "5637e": 1598, "8788e": 1598, "0042e": 1598, "0019": 1598, "lazymodul": 1598, "full_mlp": 1598, "3837": [1598, 1713], "0907": 1598, "6708": 1598, "5223": 1598, "9028": 1598, "2851": 1598, "6813": 1598, "5766": 1598, "8678": 1598, "1320": 1598, "2938": 1598, "0679": [1598, 1842], "2793": [1598, 1655], "1088": 1598, "1795": 1598, "2301": 1598, "2807": 1598, "2479": 1598, "1091": 1598, "has_uninitialized_param": 1598, "initialize_paramet": 1598, "register_backward_pre_hook": 1604, "check_reduct": 1607, "delay_all_reduce_named_param": 1607, "param_to_hook_all_reduc": 1607, "optimizer_param": 1607, "loss_func": [1607, 1924], "consume_prefix_in_state_dict_if_pres": 1607, "nccl2": 1607, "dictat": [1607, 1874], "megabyt": 1607, "mb": [1607, 1897], "detach_": [1607, 1872, 1887, 1921, 1928], "ddp_logging_data": 1607, "can_set_static_graph": 1607, "model_ddp": 1607, "_get_ddp_logging_data": 1607, "divide_by_initial_world_s": 1607, "syncbatchnorm": 1607, "deplet": 1607, "pariti": 1607, "discrep": [1607, 1722, 1902], "another_input": 1607, "predivid": 1607, "encode_and_decod": 1607, "encoded_tensor": 1607, "decoded_tensor": 1607, "error_if_nonfinit": 1611, "foreach": [1611, 1612, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1915], "clip_valu": 1612, "orthogonal_map": 1614, "use_trivi": 1614, "qq": 1614, "matrix_exp": [1614, 1872, 1914], "caylei": 1614, "thin": [1614, 1715], "manifold": 1614, "register_parametr": [1614, 1615, 1616, 1617, 1648, 1890], "orth_linear": 1614, "parametrizedlinear": [1614, 1615], "moduledict": [1614, 1615, 1873, 1905], "parametrizationlist": [1614, 1615, 1619], "_orthogon": 1614, "9332e": 1614, "n_power_iter": [1615, 1648], "sn": [1615, 1648], "discrimin": [1615, 1648], "adversari": [1615, 1648], "lipschitz": 1615, "reimplement": [1615, 1648], "_spectralnorm": 1615, "convtranspos": [1615, 1648], "snm": 1615, "0081": 1615, "amaxbackward0": 1615, "original0": [1616, 1619, 1651], "original1": [1616, 1619, 1651], "tensor_nam": [1616, 1618, 1619, 1620], "right_invers": [1616, 1619], "out_rnn": 1617, "rnn_cell": 1617, "simplic": [1619, 1924, 1925], "inbuilt": 1619, "unparametr": 1619, "rankon": 1619, "surject": 1619, "s0_sqrt": 1619, "linear_rank_on": 1619, "matrix_rank": 1619, "leave_parametr": 1620, "unparametris": 1620, "prune": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1928], "skeleton": 1621, "compute_mask": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628], "importance_scor": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1633, 1634], "apply_mask": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628], "pruned_tensor": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628], "default_mask": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628], "_orig": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637], "undon": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1637], "unprun": [1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636], "basepruningmethod": [1626, 1632], "add_pruning_method": 1626, "pruning_typ": [1626, 1630], "unstructur": [1626, 1630], "ravel": [1626, 1872, 1914], "nonmask": 1626, "bias_mask": [1629, 1631], "pruning_method": 1630, "parameters_to_prun": 1630, "l1unstructur": 1630, "parameters_to_vector": 1630, "forward_pre_hook": [1632, 1905], "random_unstructur": [1632, 1637], "odict_kei": 1633, "weight_orig": 1633, "weight_mask": [1633, 1636], "columns_prun": 1635, "t_modul": [1638, 1639, 1648, 1651], "weight_norm": 1639, "sorted_indic": [1640, 1642, 1643, 1645], "unsorted_indic": [1640, 1642, 1643, 1645], "abc": [1640, 1874], "axbc": 1640, "throughout": [1640, 1902, 1905, 1919], "conform": [1640, 1905], "is_cuda": [1640, 1887, 1914, 1930], "enforce_sort": [1641, 1642, 1643], "unsort": [1641, 1642, 1751], "shortest": 1641, "uncondition": [1641, 1869, 1899, 1958], "pad_sequ": [1642, 1646, 1872, 1914], "padding_valu": [1643, 1644, 1872], "total_length": [1643, 1901], "seq_unpack": 1643, "lens_unpack": 1643, "packed_sequ": 1645, "unpacked_sequ": 1645, "padded_sequ": 1646, "unpad": 1646, "unstack": 1646, "as_tensor": [1646, 1830, 1872, 1889, 1899, 1914, 1933, 1934, 1935], "unpadded_sequ": 1646, "module_cl": [1647, 1924], "5846e": 1647, "29": [1647, 1780, 1912], "8307e": 1647, "5250e": 1647, "1210e": 1647, "4677e": 1647, "5915e": 1647, "4013e": 1647, "weight_u": 1648, "parameters_and_buff": 1649, "decoupl": [1651, 1673, 1676], "weight_g": [1651, 1872], "weight_v": 1651, "1602": 1651, "07868": 1651, "modern": [1651, 1908, 1941], "bother": 1651, "102999": 1651, "remove_parametr": 1651, "as_tupl": [1653, 1865], "complexfloat": [1654, 1664], "0425": 1655, "7969": 1655, "2925": 1655, "7229": 1655, "2134": 1655, "0505": 1655, "1408": 1655, "0563": 1655, "0566": 1655, "0732": [1655, 1832], "0687": 1655, "1177": 1655, "2303": 1655, "1552": 1655, "6148": 1655, "6535": 1655, "8318": 1655, "3987": 1655, "9544": [1655, 1723], "6048": 1655, "7909": 1655, "120": [1657, 1933], "warnings_as_error": 1660, "dynamic_shap": [1661, 1912, 1954], "fake_context": [1661, 1662, 1912], "onnx_registri": 1661, "diagnostic_opt": 1661, "model_proto": [1662, 1663], "input_adapt": 1662, "output_adapt": 1662, "diagnostic_context": 1662, "export_except": 1662, "adapt_torch_inputs_to_onnx": 1662, "model_arg": [1662, 1912], "model_kwarg": [1662, 1912], "xdoctest": [1662, 1663, 1912], "torch_doctest_onnx": [1662, 1663, 1912], "func_with_nested_input_structur": 1662, "x_dict": 1662, "y_tupl": 1662, "y1": [1662, 1793, 1942], "y2": [1662, 1793, 1942], "y3": 1662, "export_output": [1662, 1663, 1665, 1912], "adapt_torch_outputs_to_onnx": 1662, "model_output": 1662, "func_returning_tupl": 1662, "pt_output": 1662, "diagnosticcontext": 1662, "onnxfakecontext": [1662, 1912], "modelproto": [1662, 1663], "bufferediobas": [1662, 1663], "_initi": 1662, "suffix": [1662, 1933, 1934], "model_initi": 1662, "enable_fake_mod": [1662, 1912], "exportoutputseri": 1662, "protobuf": [1662, 1663, 1912], "save_diagnost": 1662, "sarif": [1662, 1913], "exportoutput": [1663, 1665, 1912], "mymodel": [1663, 1874, 1893, 1907, 1912], "protobufexportoutputseri": 1663, "serializetostr": 1663, "exported_model": 1663, "from_valu": 1664, "onnx_typ": 1664, "tensorprotodatatyp": 1664, "torch_c_value_with_type_float": 1664, "from_dtyp": 1664, "jit_type_bas": 1664, "safer": [1664, 1881], "onnxexportererror": [1664, 1912], "symbolicvalueerror": 1664, "onnx_compat": 1664, "scalar_nam": 1664, "liter": [1664, 1872, 1875, 1888, 1916, 1956, 1959], "complexhalf": 1664, "complexdoubl": 1664, "torch_nam": 1664, "int8_t": 1664, "int64_t": 1664, "int16_t": 1664, "opset": [1666, 1912, 1913, 1914, 1943, 1952], "get_op_funct": 1666, "op_nam": [1666, 1878], "is_registered_op": 1666, "register_op": 1666, "is_complex": [1666, 1872, 1914, 1928, 1931], "tracedonnxfunct": 1666, "sctip": 1666, "verif": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1912], "input_arg": [1667, 1912], "params_dict": 1667, "export_opt": [1667, 1912], "_excluded_node_kind": 1667, "frozenset": [1667, 1874], "scalarimplicit": [1667, 1914], "prim": [1667, 1871, 1912, 1914], "listconstruct": [1667, 1871], "all_mismatch_leaf_graph_info": 1667, "essential_node_count": 1667, "essential_node_kind": 1667, "export_repro": 1667, "repro_dir": 1667, "repro": [1667, 1947, 1957], "test_": 1667, "test_data_set_0": 1667, "input_0": [1667, 1912], "pb": [1667, 1912], "input_1": [1667, 1912], "output_0": 1667, "output_1": 1667, "find_mismatch": [1667, 1912], "exhibit": [1667, 1912, 1945, 1957], "verificationopt": [1667, 1912], "find_partit": 1667, "has_mismatch": 1667, "pretty_print_mismatch": 1667, "pretty_print_tre": 1667, "graph_info": [1667, 1912], "__2": [1667, 1912], "__1": [1667, 1912], "__3": [1667, 1912], "110": [1667, 1912], "verify_export": 1667, "onnx_graph": 1667, "onnx_out": 1667, "pt_out": 1667, "ignore_non": 1668, "check_shap": 1668, "check_dtyp": [1668, 1935], "onnxbackend": 1668, "onnx_runtime_cpu": 1668, "remained_onnx_input_idx": 1668, "acceptable_error_percentag": 1668, "percentag": [1668, 1697, 1773], "weight_decai": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1905], "1e6": 1669, "sizeof": [1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1930, 1950], "tensorlist": [1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "prohibit": [1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1897, 1910], "impair": [1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "removeablehandl": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "register_load_state_dict_pre_hook": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "register_state_dict_post_hook": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "register_step_post_hook": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "register_step_pre_hook": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "new_arg": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "new_kwarg": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "momentum_buff": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686], "reevalu": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1915], "rho": 1670, "110mm": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "4pt": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "textbf": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "theta_0": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "v_0": [1670, 1672, 1673, 1676, 1682, 1683], "leftarrow": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "u_0": [1670, 1674], "hspace": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "5mm": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "nabla_": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "theta_": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "10mm": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "v_t": [1670, 1672, 1673, 1676, 1682, 1683], "v_": [1670, 1672, 1673, 1676, 1682, 1683, 1685], "2_t": [1670, 1671, 1672, 1673, 1676, 1682, 1683], "21mm": 1670, "u_t": [1670, 1674], "theta_t": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "lr_decai": 1671, "initial_accumulator_valu": 1671, "12mm": [1671, 1682], "_sum_0": 1671, "tild": [1671, 1683], "_sum_t": 1671, "_sum_": 1671, "subgradi": 1671, "999": [1672, 1673, 1674, 1676, 1682, 1686, 1910, 1915], "amsgrad": [1672, 1673], "beta_1": [1672, 1673, 1674, 1676, 1682], "beta_2": [1672, 1673, 1674, 1676, 1682], "13mm": [1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "textit": [1672, 1673, 1676, 1685], "m_0": [1672, 1673, 1674, 1676, 1682], "widehat": [1672, 1673, 1676, 1682], "m_t": [1672, 1673, 1674, 1676, 1682], "m_": [1672, 1673, 1674, 1676, 1682, 1928], "ungraph": [1672, 1673, 1676], "002": [1674, 1676], "t_1": 1674, "2e": [1674, 1676], "max_it": 1675, "max_ev": 1675, "tolerance_grad": 1675, "tolerance_chang": 1675, "history_s": 1675, "line_search_fn": 1675, "bfg": 1675, "minfunc": 1675, "intens": [1675, 1908], "param_byt": 1675, "strong_wolf": 1675, "momentum_decai": 1676, "004": 1676, "decoupled_weight_decai": 1676, "gamma_t": 1676, "psi": [1676, 1929], "_decai": 1676, "15mm": [1676, 1684, 1685], "mu_t": 1676, "96": 1676, "mu_": 1676, "11mm": 1676, "incorpor": [1676, 1919], "nesterov": [1676, 1685], "4e": 1676, "adamw": [1676, 1682, 1915], "nadamw": 1676, "weightdecai": 1682, "18mm": 1682, "rho_": 1682, "6mm": 1682, "rho_t": 1682, "t_2": 1682, "l_t": 1682, "_0": [1683, 1900, 1916, 1959], "av": 1683, "8mm": 1683, "3mm": 1683, "lectur": 1683, "hinton": 1683, "step_siz": [1684, 1701], "resili": [1684, 1908], "eta_": [1684, 1689, 1690], "etaplu": 1684, "etaminu": 1684, "gamma_": [1684, 1929], "0_": 1684, "eta_0": 1684, "i_": [1684, 1832], "eta_t": [1684, 1689, 1690], "dampen": 1685, "sutskev": 1685, "veloc": 1685, "conflat": 1686, "is_spars": [1686, 1887, 1914, 1928, 1930], "maskedtensor": [1686, 1928], "outweigh": [1686, 1957], "rig": 1686, "insist": 1686, "lr_schedul": [1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1915], "chainabl": [1687, 1697], "081": 1687, "729": [1687, 1700], "6561": [1687, 1860], "59049": 1687, "scheduler1": [1687, 1700, 1915], "constantlr": [1687, 1700], "total_it": [1687, 1688, 1694, 1698, 1700], "scheduler2": [1687, 1700, 1915], "exponentiallr": [1687, 1700, 1915], "get_last_lr": [1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701], "print_lr": [1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701], "is_verbos": [1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701], "__dict__": [1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701], "last_epoch": [1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701], "mileston": [1688, 1694, 1695, 1700, 1915], "simultan": [1688, 1689, 1694, 1695, 1701, 1894, 1924], "025": [1688, 1694], "t_max": [1689, 1915], "eta_min": [1689, 1690], "anneal": [1689, 1690, 1697, 1915], "cur": [1689, 1690], "sgdr": [1689, 1690], "2k": 1689, "sole": 1689, "t_mult": 1690, "interleav": 1690, "base_lr": [1691, 1697], "max_lr": [1691, 1697], "step_size_up": 1691, "step_size_down": 1691, "scale_fn": 1691, "scale_mod": 1691, "cycle_momentum": [1691, 1697], "base_momentum": [1691, 1697], "max_momentum": [1691, 1697], "cyclic": 1691, "forth": [1691, 1856, 1869, 1918, 1942], "amplitud": [1691, 1697], "triangular2": 1691, "exp_rang": 1691, "bckenstler": 1691, "train_batch": [1691, 1697], "get_lr": 1691, "lr_lambda": [1693, 1696], "lambda1": 1693, "lambda2": 1693, "start_factor": 1694, "end_factor": 1694, "03125": 1694, "0375": 1694, "04375": 1694, "005": [1695, 1701], "lmbda": 1696, "total_step": 1697, "steps_per_epoch": 1697, "pct_start": 1697, "anneal_strategi": [1697, 1915], "div_factor": 1697, "final_div_factor": 1697, "three_phas": 1697, "1cycl": 1697, "fastai": 1697, "unpublish": 1697, "initial_lr": 1697, "min_lr": [1697, 1699], "1e4": 1697, "annihil": 1697, "00075": 1698, "00050": 1698, "00025": 1698, "patienc": 1699, "threshold_mod": 1699, "cooldown": 1699, "stagnat": 1699, "new_lr": 1699, "hasn": [1699, 1884, 1916], "optimum": 1699, "dynamic_threshold": 1699, "val_loss": 1699, "81": 1700, "mn": 1703, "pca": [1705, 1928], "overestim": [1705, 1817], "nathan": [1705, 1817], "halko": [1705, 1817], "gunnar": [1705, 1817], "martinsson": [1705, 1817], "tropp": [1705, 1817], "probabilist": [1705, 1817], "0909": [1705, 1817], "4061": [1705, 1817], "na": [1705, 1817], "cmath": [1709, 1872], "4142j": 1709, "4331": 1712, "2475": [1712, 1815], "6834": 1712, "2791": 1712, "1875": 1712, "5561": 1712, "4670": 1712, "5428": 1713, "5854": 1713, "5261": [1713, 1816], "1857": 1713, "2498": 1713, "1646": [1713, 1897], "0705": 1713, "0629": 1713, "2962": 1713, "0821": [1713, 1773], "1831": 1713, "type1": [1714, 1872], "type2": [1714, 1872], "2117": 1716, "9765": 1716, "1707": 1716, "4884": 1716, "5661": 1716, "5795": 1716, "5280": 1716, "9206": 1716, "quantization_schem": [1717, 1718, 1719, 1720, 1721], "int_repr": [1717, 1718, 1872, 1914], "nchw": [1719, 1933], "qx": [1719, 1720, 1721], "00001": 1719, "max_pool1d": [1720, 1872, 1914, 1921], "max_pool2d": [1721, 1872, 1914, 1921], "quasirandom": 1722, "scrambl": 1722, "sobol": 1722, "quasi": 1722, "21201": 1722, "web": 1722, "unsw": 1722, "au": [1722, 1916], "fkuo": 1722, "art": 1722, "owen": 1722, "niederreit": 1722, "xing": 1722, "466": 1722, "489": 1722, "decemb": 1722, "1998": 1722, "zh": 1722, "vychisl": 1722, "phy": 1722, "784": 1722, "802": 1722, "1967": 1722, "soboleng": 1722, "draw_base2": 1722, "base2": 1722, "fast_forward": 1722, "142": 1723, "283": 1723, "570": 1723, "359": 1723, "9894": 1723, "2503": 1724, "3525": 1724, "5673": 1724, "8237": 1724, "5781": 1724, "6879": 1724, "3816": 1724, "7249": 1724, "0998": 1724, "1436": 1728, "9966": 1728, "3426": 1728, "6366": 1728, "5954": 1728, "8929": 1728, "0923": 1728, "1719": 1728, "4709": 1728, "1996": 1728, "4595": 1734, "4314": 1734, "flat": [1737, 1780, 1872, 1889, 1912, 1928], "n2": 1737, "n3": 1737, "negat": [1740, 1824, 1874], "is_neg": [1740, 1872, 1914], "equidist": 1744, "inexact": 1744, "1234567": 1744, "1230": 1744, "vstack": [1745, 1872, 1914, 1928], "0370": 1746, "2970": 1746, "5420": 1746, "9105": 1746, "8351": 1746, "pickle_protocol": [1747, 1916], "default_protocol": 1747, "_use_new_zipfile_seri": 1747, "zipfil": [1747, 1916], "sorted_sequ": [1751, 1872], "sorter": [1751, 1872], "sorted_sequence_1d": 1751, "select_copi": [1753, 1872, 1914], "slight": [1755, 1928, 1931], "92701": [1755, 1931], "complaint": 1756, "henry2019": 1759, "briefli": 1759, "realiz": 1759, "perfectli": [1759, 1897, 1917], "nine": 1759, "fma": 1759, "10x": 1759, "1904": 1759, "06376": 1759, "denorm": [1760, 1908], "sse3": 1760, "323": 1760, "88131e": 1760, "324": 1760, "is_train": [1761, 1936], "interop": 1762, "intraop": 1763, "edgeitem": 1764, "linewidth": 1764, "sci_mod": 1764, "shamelessli": 1764, "repr": [1764, 1874], "sane": 1764, "_tensor_str": 1764, "_formatt": 1764, "12345": 1764, "1235": 1764, "excess": [1766, 1947], "24j": 1767, "8000j": 1767, "9600j": 1767, "4472": [1767, 1905], "8944j": 1767, "expit": [1768, 1929], "2222": [1770, 1830], "4444": 1770, "8889": 1770, "4901e": 1771, "4000e": 1771, "0077e": 1771, "4923e": 1771, "waveform": [1772, 1773, 1774], "1564": 1772, "4540": 1772, "8910": 1772, "9877": 1772, "1423": [1772, 1794], "4154": 1772, "8413": [1772, 1929], "0302": 1773, "2231": 1773, "6065": 1773, "5400e": 1773, "3546e": 1773, "4788e": 1773, "8316e": 1773, "02": [1773, 1774, 1779], "3534e": 1773, "0065e": [1774, 1779], "1875e": [1774, 1779], "3937e": [1774, 1779], "2465e": [1774, 1779], "8250e": [1774, 1779], "9858e": [1774, 1779], "1365e": [1774, 1779], "8659e": [1774, 1779], "4658e": [1774, 1779], "3941e": [1774, 1779], "5400": 1775, "3376": 1775, "4200": 1775, "9136": 1775, "wit": [1775, 1871], "0955": [1775, 1776, 1778], "3455": [1775, 1776, 1778], "6545": [1775, 1776, 1778], "9045": [1775, 1776, 1778], "0800": [1776, 1777], "1876": [1776, 1777], "4601": [1776, 1777], "7700": [1776, 1777], "9723": [1776, 1777], "1679": 1777, "3979": 1777, "6821": 1777, "9121": 1777, "1170": 1778, "9698": 1778, "36358": 1780, "z_n": [1780, 1894], "48917": 1780, "2z_n": 1780, "13659": 1780, "3z_n": 1780, "01064": 1780, "4z_n": 1780, "\u03c0": 1780, "sidelob": 1780, "transact": 1780, "acoust": 1780, "speech": 1780, "84": 1780, "91": 1780, "feb": 1780, "1981": 1780, "tassp": 1780, "1163506": 1780, "heinzel": 1780, "spectrum": [1780, 1908], "dft": 1780, "februari": 1780, "holomet": 1780, "fnal": 1780, "gov": 1780, "gh_fft": 1780, "nutal": 1780, "general_ham": 1780, "6280e": 1780, "2698e": 1780, "1052e": 1780, "9826e": 1780, "5461": [1782, 1905], "1347": 1782, "7266": 1782, "2746": 1782, "5194": 1782, "1343": 1782, "4032": 1782, "2711": 1782, "5380": 1784, "8632": 1784, "1265": 1784, "9399": 1784, "5644": 1784, "9744": 1784, "1268": 1784, "2162": 1789, "6719": 1789, "3332": 1789, "5793": [1789, 1905], "0061": 1789, "6058": 1789, "9497": 1789, "5071": 1789, "3343": 1789, "9553": 1789, "0960": 1789, "derivati": [1790, 1793], "sparsr": 1791, "run_my_model": 1791, "prev_checks_en": 1791, "check_invari": [1791, 1798, 1799, 1800, 1801, 1802, 1803, 1928], "sparse_csr_tensor": [1791, 1872, 1914, 1928], "z_": [1793, 1894, 1929], "bigoplus_": 1793, "kj": 1793, "bigoplu": 1793, "sparseaddmmbackward0": 1793, "sparsemmreduceimplbackward0": 1793, "sparsiti": [1794, 1870, 1881, 1892], "spy": 1794, "2847": 1794, "7805": 1794, "1900": [1794, 1909], "to_dens": [1794, 1796, 1872, 1914, 1928], "3903": 1794, "x_k": 1795, "6438": 1797, "6467": 1797, "3411": 1797, "0918": 1797, "5348": 1797, "0634": 1797, "0494": 1797, "0646": 1797, "1844": 1797, "1276": 1797, "1874": 1797, "6334": 1797, "9682": 1797, "5340": 1797, "7483": 1797, "4512": 1797, "4073": 1797, "8901": 1797, "3183": 1797, "7539": 1797, "6596": 1797, "ncolblock": [1798, 1928], "array_list": [1798, 1799, 1800, 1802, 1803], "nrow": [1798, 1799, 1800, 1802, 1803, 1928], "ncol": [1798, 1799, 1800, 1802, 1803, 1928], "denses": [1798, 1799, 1800, 1802, 1803, 1928], "check_sparse_tensor_invari": [1798, 1799, 1800, 1801, 1802, 1803, 1928], "nrowblock": [1799, 1928], "compressed_indic": [1800, 1872, 1928], "plain_indic": [1800, 1872, 1928], "compressed_dim_s": [1800, 1928], "rdinat": 1801, "_indic": [1801, 1914, 1928], "0755": [1805, 1806], "0226": [1805, 1806], "0831": [1805, 1806], "4806": [1805, 1806], "0112": 1805, "2883": 1805, "6933": 1805, "0457": 1806, "0069": 1806, "2310": 1806, "2959": [1810, 1811, 1857, 1858], "8101": [1810, 1811, 1857, 1858], "5027": [1810, 1811, 1857, 1858], "3270": [1810, 1811, 1857, 1858], "5905": [1810, 1811, 1857, 1858], "6538": [1810, 1811, 1857, 1858, 1905], "3330": [1810, 1811, 1857, 1858], "5596": [1810, 1811, 1857, 1858], "6548": [1810, 1811, 1857, 1858], "1264": [1810, 1811, 1857, 1858], "5080": [1810, 1811, 1816, 1857, 1858, 1905], "6420": [1810, 1811, 1857, 1858], "1992": [1810, 1811, 1857, 1858], "0311": [1810, 1929], "7477": 1810, "2204": 1810, "9087": 1810, "2620": 1811, "0028": [1811, 1836], "0957": 1811, "6038": 1811, "0645": [1811, 1858], "4485": [1811, 1858], "8707": [1811, 1858], "0665": [1811, 1858], "librosa": 1812, "omega": 1812, "win": [1812, 1894], "_fft": [1812, 1872], "dimnsion": 1812, "1133": 1815, "2958": 1815, "5475": 1815, "0569": 1815, "0737": 1815, "3429": 1815, "9138": 1815, "9337": 1815, "6864": [1815, 1840], "1132": 1815, "7892": 1815, "1003": 1815, "5688": 1815, "3637": 1815, "9906": 1815, "5197": 1815, "4598": 1815, "3708": 1815, "6217": 1815, "435": 1815, "1335": 1815, "3135": 1815, "gesdd": 1816, "conquer": 1816, "gesvdjbatch": 1816, "fortran": 1816, "\u00b9": 1816, "2364": 1816, "7752": 1816, "7201": 1816, "7394": 1816, "0504": 1816, "3371": 1816, "5296": 1816, "3550": 1816, "5569": 1816, "2445": 1816, "1414": 1816, "4027": 1816, "0287": 1816, "5434": 1816, "1946": 1816, "8833": 1816, "3679": 1816, "4296": 1816, "2890": 1816, "6604": 1816, "2717": 1816, "2618": 1816, "4234": 1816, "2481": 1816, "4733": 1816, "3289": [1816, 1910], "0315": 1816, "7806": 1816, "0199": 1816, "8766": 1816, "4809": 1816, "4054": 1816, "7600": 1816, "8611": 1816, "2594": 1816, "4373": 1816, "6531e": 1816, "a_big": 1816, "6503e": 1816, "swapax": [1819, 1872, 1914, 1932], "symint": [1820, 1821, 1822, 1823, 1824, 1936, 1946, 1952], "symfloat": [1820, 1821, 1936, 1945], "symbool": [1824, 1936, 1945], "1995": 1825, "4608": 1825, "7702": 1825, "4875": 1825, "9158": 1825, "5872": 1825, "6929": 1825, "6932": 1825, "take_along_axi": [1827, 1900], "max_idx": 1827, "sorted_idx": 1827, "2027": 1828, "7687": 1828, "4412": 1828, "3856": 1828, "5930": 1828, "9859": 1828, "4722": 1828, "3366": 1828, "8986": 1829, "7279": 1829, "1745": 1829, "7156": 1829, "8257": 1829, "2553": 1829, "11111": 1830, "222222": 1830, "3333333": 1830, "1111": 1830, "array_split": 1831, "i_d": 1832, "k_": 1832, "4532": 1832, "4874": 1832, "5018": 1832, "4796": [1832, 1909], "5162": 1832, "5306": 1832, "2922": 1832, "7556": 1832, "2741": 1832, "3161": 1832, "0704": 1832, "0187": 1832, "4079": 1832, "3126": 1832, "8744": 1832, "8223": 1832, "9445": 1832, "4117": 1832, "7780": 1832, "7193": 1832, "4867": 1832, "3204": 1832, "5513": 1832, "4737": [1832, 1861], "2850": 1832, "2573": 1832, "5997": 1832, "sparsebsr": 1836, "sparsecsc": 1836, "sparsebsc": 1836, "9893": 1836, "5809": 1836, "1669": 1836, "7299": 1836, "4942": [1836, 1905], "y_0": 1837, "y_1": 1837, "x_diff": 1837, "y_diff": 1837, "riemann": [1837, 1894, 1902, 1929], "badli": 1839, "cloned_coeffici": 1839, "1527": 1839, "0753": 1839, "7986": 1839, "0210": 1839, "3513": 1839, "5492": 1839, "7403": 1839, "0243": 1839, "7841": 1839, "9046": 1839, "5405": 1839, "9320": 1839, "9270": 1839, "2826": 1839, "lbrace": [1840, 1841, 1842, 1843], "rbrace": [1840, 1841, 1842, 1843], "0813": 1840, "8619": 1840, "7105": 1840, "0935": 1840, "1380": 1840, "3409": [1840, 1909], "2219": 1840, "5653": 1840, "2521": 1840, "2345": 1840, "2544": 1840, "3461": 1840, "4785": 1840, "4477": 1840, "6049": 1840, "6368": 1840, "8775": 1840, "7145": 1840, "1502": 1840, "2716": 1840, "1243": 1840, "5413": 1840, "3615": 1840, "0614": 1840, "7344": 1840, "3164": 1840, "7648": 1840, "4024": 1840, "0978": 1840, "col": [1841, 1843, 1872], "2309": 1842, "5207": 1842, "0049": 1842, "2072": 1842, "0680": 1842, "6602": 1842, "3480": 1842, "5211": 1842, "4573": 1842, "5876": 1842, "0794": [1842, 1929], "8373": 1842, "6654": 1842, "2604": 1842, "5235": 1842, "2447": 1842, "9556": 1842, "2919": 1842, "1768": 1842, "4333": 1842, "3146": [1842, 1905], "6576": 1842, "0432": 1842, "9348": [1842, 1929], "4410": 1842, "9888": 1842, "3337": 1842, "6556": 1842, "4798": 1842, "5466": 1845, "8008": 1845, "9079": 1845, "unique_consecut": [1848, 1872, 1914], "inverse_indic": [1848, 1849], "warn_onli": 1851, "alon": [1851, 1873, 1916], "put_": [1851, 1872], "index_add": [1851, 1872, 1914], "index_select": [1851, 1872, 1914, 1928, 1952], "empty_strid": [1851, 1872, 1876, 1914, 1945, 1952], "empty_permut": [1851, 1872, 1914, 1952], "fractionalmaxpool2d": 1851, "fractionalmaxpool3d": 1851, "reflectionpad1d": 1851, "reflectionpad3d": 1851, "replicationpad1d": 1851, "replicationpad3d": 1851, "histc": [1851, 1872, 1914], "bincount": [1851, 1872, 1914], "kthvalu": [1851, 1872, 1887, 1914], "cublasapi_reproduc": [1851, 1909], "avg_pool3d_backward_cuda": 1851, "for_tensor": 1852, "for_modul": 1852, "for_storag": 1852, "unsupported_dtyp": 1852, "privateuse1": [1852, 1854, 1923], "rename_privateuse1_backend": [1852, 1870], "is_foo": 1852, "frames_to_skip": [1853, 1913], "maximum_number_of_fram": 1853, "_register_device_modul": 1854, "backendmodul": 1854, "get_amp_supported_dtyp": 1854, "is_autocast_en": [1854, 1872, 1914], "get_autocast_dtyp": 1854, "set_autocast_dtyp": 1854, "set_autocast_en": 1854, "_is_in_bad_fork": 1854, "bad_fork": 1854, "get_rng_stat": [1854, 1870, 1923], "set_rng_stat": [1854, 1870, 1923], "extend_dispatch": 1854, "pytorch_open_registration_exampl": 1854, "nicer": 1855, "alexandr": 1856, "theophil": 1856, "0631": 1857, "5590": 1857, "4893": 1857, "8258": 1857, "5926": 1858, "0056": 1858, "3646": 1858, "vecdot": 1859, "mi": [1860, 1861], "6116": 1860, "5772": [1860, 1929], "4606": 1860, "9120": 1860, "0786": 1860, "7497": 1860, "6623": 1860, "5772j": 1860, "9120j": 1860, "7497j": 1860, "6623j": 1860, "3839j": 1861, "2098": 1861, "6699j": 1861, "3470": 1861, "9451j": 1861, "5174": 1861, "3136j": 1861, "6699": 1861, "9451": 1861, "3136": 1861, "vertic": [1863, 1864, 1915, 1917, 1933, 1947], "atleast_2d": [1864, 1872, 1914], "3139": 1865, "3898": 1865, "1657": 1865, "0383": 1865, "8785": 1865, "1089": 1865, "hubconf": 1869, "entrypoint_nam": 1869, "_resnet18": 1869, "smoother": [1869, 1881], "underscor": [1869, 1888, 1924, 1934], "load_state_dict_from_url": [1869, 1883], "2gb": 1869, "relative_path_to_checkpoint": 1869, "pth": [1869, 1883, 1910], "dirnam": 1869, "__file__": [1869, 1911, 1916, 1949], "5c106cde": [1869, 1883], "force_reload": 1869, "skip_valid": 1869, "trust_repo": 1869, "repo_own": 1869, "repo_nam": 1869, "ref": [1869, 1928, 1945, 1950, 1957], "torchhub": 1869, "owner": [1869, 1899, 1914, 1924, 1925], "github_token": 1869, "repo_or_dir": 1869, "mute": 1869, "resnet50": [1869, 1933, 1949], "resnet50_weight": 1869, "imagenet1k_v1": 1869, "download_url_to_fil": 1869, "hash_prefix": 1869, "temporary_fil": 1869, "sha256": [1869, 1883], "s3": [1869, 1883, 1911], "amazonaw": [1869, 1883, 1911], "model_dir": [1869, 1883], "check_hash": [1869, 1883], "hub_dir": [1869, 1883], "get_dir": [1869, 1883], "ext": [1869, 1883], "eight": [1869, 1883], "hash": [1869, 1872, 1874, 1883, 1914], "succinct": 1869, "set_dir": 1869, "path_to_hub_dir": 1869, "torch_hom": 1869, "xdg_cache_hom": [1869, 1897], "reiniti": 1869, "path_importer_cach": 1869, "subpackag": [1869, 1916], "offend": [1869, 1948], "classifi": [1870, 1874, 1912, 1915, 1919, 1933], "pypi": 1870, "conda": [1870, 1911], "hip": 1870, "javadoc": 1870, "uninitializedbuff": 1870, "anomali": 1870, "fallthrough_kernel": [1870, 1878], "can_device_access_p": 1870, "current_blas_handl": 1870, "device_of": 1870, "get_arch_list": 1870, "get_device_cap": 1870, "get_device_nam": 1870, "get_device_properti": 1870, "get_gencode_flag": 1870, "get_sync_debug_mod": 1870, "ipc_collect": 1870, "memory_usag": 1870, "set_stream": 1870, "set_sync_debug_mod": 1870, "power_draw": 1870, "clock_rat": 1870, "outofmemoryerror": 1870, "jiter": 1870, "sanit": 1870, "_record_memory_histori": [1870, 1959], "_snapshot": [1870, 1959], "_dump_snapshot": [1870, 1959], "empty_cach": [1870, 1897, 1903, 1959], "set_per_process_memory_fract": 1870, "current_allocated_memori": 1870, "driver_allocated_memori": 1870, "openmp": [1870, 1896, 1911, 1944], "xeon": [1870, 1896, 1954], "pathwis": 1870, "exponentialfamili": 1870, "binomi": [1870, 1872, 1914], "chi2": 1870, "continuousbernoulli": 1870, "dirichlet": 1870, "fishersnedecor": 1870, "halfcauchi": 1870, "halfnorm": 1870, "kumaraswami": 1870, "lkjcholeski": 1870, "laplac": 1870, "lognorm": 1870, "lowrankmultivariatenorm": 1870, "mixturesamefamili": 1870, "multinomi": [1870, 1872, 1914], "multivariatenorm": 1870, "negativebinomi": 1870, "onehotcategor": 1870, "relaxedbernoulli": 1870, "logitrelaxedbernoulli": 1870, "relaxedonehotcategor": 1870, "studentt": 1870, "transformeddistribut": 1870, "vonmis": 1870, "weibul": 1870, "wishart": 1870, "hub": [1870, 1883, 1949], "solver": [1870, 1908], "misc": 1870, "normal_": [1870, 1872, 1887, 1892, 1897, 1936], "constant_": [1870, 1892], "ones_": [1870, 1892], "zeros_": [1870, 1892], "eye_": [1870, 1876, 1892], "dirac_": [1870, 1876, 1892], "xavier_uniform_": [1870, 1892], "xavier_normal_": [1870, 1892, 1905], "kaiming_uniform_": [1870, 1892], "trunc_normal_": [1870, 1892], "orthogonal_": [1870, 1876, 1892, 1905], "sparse_": [1870, 1892], "alexnet": 1870, "pitfal": [1870, 1947], "preview": 1870, "swa": 1870, "ema": 1870, "powersgd": 1870, "remotemodul": 1870, "fork_rng": [1870, 1923], "doublestorag": [1870, 1930], "floatstorag": [1870, 1930], "halfstorag": [1870, 1930], "longstorag": [1870, 1930], "intstorag": [1870, 1930], "shortstorag": [1870, 1930], "charstorag": [1870, 1930], "bytestorag": [1870, 1930], "boolstorag": [1870, 1930], "bfloat16storag": [1870, 1930], "complexdoublestorag": [1870, 1930], "complexfloatstorag": [1870, 1930], "quint8storag": [1870, 1930], "qint8storag": [1870, 1930], "qint32storag": [1870, 1930], "quint4x2storag": [1870, 1930], "quint2x4storag": [1870, 1930], "make_tensor": [1870, 1935], "assert_allclos": [1870, 1935], "generate_methods_for_privateuse1_backend": 1870, "get_cpp_backtrac": 1870, "set_modul": 1870, "sampler": 1870, "mobile_optim": 1870, "optimize_for_mobil": [1870, 1882], "model_zoo": 1870, "load_url": [1870, 1883], "tensorboard": [1870, 1884, 1918], "summarywrit": [1870, 1884, 1933], "iinfo": 1870, "__config__": [1870, 1896], "_log": [1870, 1874, 1957], "set_log": [1870, 1880, 1957], "torchdata": 1870, "torchserv": 1870, "torchtext": 1870, "xla": [1870, 1945], "disadvantag": 1871, "gentl": 1871, "beam": 1871, "traced_bar": 1871, "myscriptmodul": 1871, "103": [1871, 1873], "939": [1871, 1873], "116": [1871, 1873], "779": [1871, 1873], "123": [1871, 1873], "my_script_modul": [1871, 1873], "ins": 1871, "pytorch_jit": 1871, "traced_fn": 1871, "disable_jit_exampl": 1871, "printer": 1871, "rv": 1871, "rv0": 1871, "rv1": 1871, "ssa": 1871, "block0": 1871, "block1": 1871, "loop_in_traced_fn": 1871, "input_tupl": 1871, "fill_row_zero": 1871, "tracerwarn": 1871, "disjoint": 1871, "nr": 1871, "09115803241729736": 1871, "6782537698745728": 1871, "cpu_model": 1871, "gpu_model": 1871, "sample_input_cpu": 1871, "sample_input_gpu": 1871, "traced_cpu": 1871, "traced_gpu": 1871, "use_gpu": 1871, "__constants__": [1871, 1873], "my_module_inst": 1871, "redeclar": 1871, "nn_module_inst": 1871, "my_scripted_model": 1871, "pep": [1871, 1873, 1912, 1944], "526": [1871, 1873, 1912], "script_method": 1871, "implicitly_compiled_method": 1871, "another_forward": 1871, "unused_method": 1871, "some_fn": 1871, "ever": [1871, 1930, 1959], "some_fn2": 1871, "some_fn3": 1871, "some_fn4": 1871, "my_dict": [1871, 1873], "my_int": [1871, 1873], "my_const": 1871, "make_dict": 1871, "nnc": 1871, "nvfuser": 1871, "__and__": 1872, "__iand__": 1872, "__ilshift__": 1872, "__ior__": 1872, "__irshift__": 1872, "__ixor__": 1872, "__lshift__": 1872, "__or__": 1872, "__rshift__": 1872, "__xor__": 1872, "absolute_": 1872, "acos_": [1872, 1887], "addbmm_": 1872, "addcdiv_": 1872, "addcmul_": 1872, "addmv_": [1872, 1887], "addr_": 1872, "align_a": [1872, 1887, 1888, 1914], "align_to": [1872, 1887, 1888, 1914], "ellipsis_idx": 1872, "aminmax": [1872, 1914], "arccos_": 1872, "arccosh_": 1872, "arcsin_": [1872, 1928], "arcsinh_": 1872, "arctan2_": 1872, "arctan_": 1872, "arctanh_": 1872, "argwher": [1872, 1914], "as_strided_": 1872, "as_strided_scatt": [1872, 1914, 1952], "asin_": [1872, 1887, 1928], "asinh_": [1872, 1887], "atan_": [1872, 1887], "atanh_": [1872, 1887], "baddbmm_": 1872, "bernoulli_": [1872, 1887, 1936], "bitwise_and_": 1872, "bitwise_left_shift_": 1872, "bitwise_not_": [1872, 1887], "bitwise_or_": 1872, "bitwise_right_shift_": 1872, "bitwise_xor_": 1872, "broadcast_to": [1872, 1914], "cauchy_": [1872, 1887, 1936], "ceil_": [1872, 1887], "clamp_max": [1872, 1914], "clamp_max_": 1872, "clamp_min": [1872, 1914], "clamp_min_": 1872, "clip_": 1872, "conj_physical_": 1872, "copysign_": 1872, "cos_": [1872, 1887, 1894], "cosh_": [1872, 1887], "count_nonzero": [1872, 1914], "cummax": [1872, 1914], "cummin": [1872, 1914], "cumprod_": 1872, "cumsum_": 1872, "deg2rad": [1872, 1887, 1914, 1928], "deg2rad_": [1872, 1887, 1928], "outdim": 1872, "diagonal_scatt": [1872, 1914], "digamma_": [1872, 1887], "div_": [1872, 1887, 1928], "divide_": 1872, "dsplit": [1872, 1914], "eq_": 1872, "erf_": [1872, 1887], "erfc_": [1872, 1887], "erfinv_": [1872, 1887], "exp2": [1872, 1914, 1929, 1933, 1952], "exp2_": 1872, "exp_": [1872, 1887], "expm1_": [1872, 1887], "exponential_": [1872, 1887, 1936], "fill_diagonal_": 1872, "fix_": 1872, "fliplr": [1872, 1914], "flipud": [1872, 1914], "float_power_": 1872, "floor_": [1872, 1887], "floor_divide_": [1872, 1928], "fmax": [1872, 1914, 1952], "fmin": [1872, 1914, 1952], "fmod_": 1872, "frac_": [1872, 1887], "frexp": [1872, 1914], "gcd_": 1872, "ge_": 1872, "geometric_": [1872, 1936], "ger": [1872, 1914], "get_devic": [1872, 1887, 1914, 1928, 1930, 1931], "greater_": 1872, "greater_equal_": 1872, "gt_": 1872, "hardshrink": [1872, 1914], "heavisid": [1872, 1914], "heaviside_": 1872, "hsplit": [1872, 1914, 1932], "hypot_": 1872, "i0_": 1872, "igamma_": 1872, "igammac_": 1872, "index_fil": [1872, 1887, 1914], "index_reduc": [1872, 1914], "is_coalesc": [1872, 1914, 1928], "is_contigu": [1872, 1887, 1914, 1932], "is_floating_point": [1872, 1887, 1914, 1928, 1931], "is_infer": [1872, 1914], "is_same_s": [1872, 1914, 1928], "is_set_to": [1872, 1914], "is_sign": [1872, 1887, 1914, 1928], "isclos": [1872, 1914], "isfinit": [1872, 1908, 1914, 1952], "isinf": [1872, 1914, 1928, 1952], "isneginf": [1872, 1914, 1928], "isposinf": [1872, 1914, 1928], "isreal": [1872, 1914], "istft": [1872, 1914], "kron": [1872, 1914], "lcm_": 1872, "ldexp_": 1872, "le_": 1872, "lerp_": 1872, "less_": 1872, "less_equal_": 1872, "lgamma_": 1872, "log10_": [1872, 1887], "log1p_": [1872, 1887, 1928], "log2_": [1872, 1887], "log_normal_": [1872, 1887, 1936], "logaddexp2": [1872, 1914], "logcumsumexp": [1872, 1914], "logical_and_": 1872, "logical_not_": [1872, 1887], "logical_or_": 1872, "logical_xor_": 1872, "logit_": 1872, "lt_": 1872, "masked_fil": [1872, 1887, 1889, 1914, 1928], "masked_scatt": [1872, 1914], "masked_select": [1872, 1887, 1914], "matrix_pow": [1872, 1914], "moveaxi": [1872, 1914], "msort": [1872, 1914], "multiply_": 1872, "mvlgamma_": 1872, "nan_to_num_": 1872, "nanmedian": [1872, 1887, 1914], "nansum": [1872, 1914], "narrow_copi": [1872, 1914, 1928], "ne_": 1872, "neg_": [1872, 1887, 1928], "negative_": [1872, 1928], "new_empty_strid": [1872, 1914], "new_ful": [1872, 1897, 1914], "new_on": [1872, 1914], "nextafter_": 1872, "nonzero_stat": [1872, 1914], "not_equal_": 1872, "output_nr": [1872, 1914], "polygamma_": 1872, "pow_": [1872, 1887], "q_per_channel_scal": [1872, 1914], "q_per_channel_zero_point": [1872, 1914], "q_scale": [1872, 1914], "q_zero_point": [1872, 1914], "rad2deg": [1872, 1887, 1914, 1928], "rad2deg_": [1872, 1887, 1928], "reciprocal_": [1872, 1887], "record_stream": [1872, 1897, 1914], "refine_nam": [1872, 1887, 1888, 1914], "relu_": [1872, 1921], "remainder_": 1872, "rename_": [1872, 1887, 1888], "renorm_": 1872, "reshape_a": [1872, 1889, 1914, 1932], "resize_a": [1872, 1914], "the_templ": 1872, "resize_as_sparse_": 1872, "retains_grad": [1872, 1914], "roll": [1872, 1914, 1952], "rot90": [1872, 1914], "round_": [1872, 1887], "rsqrt_": [1872, 1887], "select_scatt": [1872, 1914, 1952], "sgn_": [1872, 1887], "sigmoid_": [1872, 1887, 1921], "sign_": [1872, 1887], "sinc_": 1872, "sinh_": [1872, 1887], "slice_scatt": [1872, 1914, 1952], "smm": [1872, 1914, 1928], "sparse_resize_": 1872, "sparse_resize_and_clear_": 1872, "split_with_s": [1872, 1914, 1932, 1952], "sqrt_": [1872, 1887], "square_": 1872, "squeeze_": [1872, 1921], "sspaddmm": [1872, 1914, 1928], "sub_": [1872, 1887, 1928], "subtract_": 1872, "sum_to_s": [1872, 1914], "swapaxes_": 1872, "swapdim": [1872, 1914, 1932], "swapdims_": 1872, "take_along_dim": [1872, 1914], "tan_": [1872, 1887], "tanh_": [1872, 1887, 1921], "tensor_indices_or_sect": 1872, "to_mkldnn": [1872, 1914], "to_padded_tensor": [1872, 1889, 1914], "to_sparse_bsc": [1872, 1914], "to_sparse_bsr": [1872, 1914, 1928], "to_sparse_csc": [1872, 1914, 1928], "true_divide_": 1872, "trunc_": [1872, 1887], "type_a": [1872, 1887, 1914], "out0": [1872, 1910], "unsafe_chunk": [1872, 1914], "unsafe_split": [1872, 1914], "unsafe_split_with_s": [1872, 1914], "unsqueeze_": [1872, 1921], "view_a": [1872, 1914, 1932], "vsplit": [1872, 1914, 1932], "xlogy_": 1872, "adaptive_avg_pool2d": [1872, 1899, 1914, 1921], "adaptive_max_pool1d_with_indic": [1872, 1899], "adaptive_max_pool2d_with_indic": 1872, "adaptive_max_pool3d_with_indic": 1872, "alpha_dropout": [1872, 1914], "assert_int_or_pair": 1872, "arg_nam": 1872, "binary_cross_entropi": [1872, 1914], "binary_cross_entropy_with_logit": [1872, 1914], "celu": [1872, 1914], "dropout2d": 1872, "dropout3d": 1872, "feature_alpha_dropout": [1872, 1914], "fractional_max_pool2d_with_indic": 1872, "fractional_max_pool3d_with_indic": 1872, "gaussian_nll_loss": 1872, "glu": [1872, 1914], "gumbel_softmax": 1872, "hardsigmoid": [1872, 1914, 1921], "hardswish": [1872, 1914, 1921], "huber_loss": [1872, 1914], "instance_norm": [1872, 1914, 1921], "local_response_norm": 1872, "lp_pool1d": 1872, "lp_pool2d": 1872, "max_pool1d_with_indic": [1872, 1914], "max_pool2d_with_indic": [1872, 1914, 1952], "max_pool3d_with_indic": [1872, 1914, 1952], "mish": [1872, 1914], "multi_head_attention_forward": 1872, "embed_dim_to_check": 1872, "in_proj_weight": 1872, "in_proj_bia": 1872, "bias_k": 1872, "bias_v": 1872, "out_proj_weight": 1872, "out_proj_bia": 1872, "use_separate_proj_weight": 1872, "q_proj_weight": 1872, "k_proj_weight": 1872, "v_proj_weight": 1872, "static_k": 1872, "static_v": 1872, "multilabel_soft_margin_loss": 1872, "relu6": [1872, 1914, 1921], "silu": [1872, 1889, 1914], "softsign": 1872, "tanhshrink": 1872, "adaptive_avg_pool1d": [1872, 1899, 1914, 1921, 1952], "adaptive_max_pool1d": [1872, 1899, 1914], "affine_grid_gener": [1872, 1914], "alias_copi": [1872, 1914], "align_tensor": [1872, 1914], "alpha_dropout_": 1872, "as_strided_copi": [1872, 1914], "atleast_1d": [1872, 1914], "avg_pool1d": [1872, 1914, 1921, 1952], "bartlett_window": [1872, 1876, 1914], "cudnn_en": 1872, "batch_norm_backward_elemt": 1872, "invstd": 1872, "sum_di": 1872, "sum_dy_xmu": 1872, "batch_norm_backward_reduc": 1872, "input_g": 1872, "bias_g": 1872, "out3": 1872, "batch_norm_elemt": [1872, 1914], "batch_norm_gather_stat": [1872, 1914], "batch_norm_gather_stats_with_count": [1872, 1914], "batch_norm_stat": [1872, 1914], "batch_norm_update_stat": [1872, 1914], "blackman_window": [1872, 1876, 1914], "block_diag": [1872, 1914], "can_cast": [1872, 1914], "ccol_indices_copi": [1872, 1914], "celu_": 1872, "choose_qparams_optim": [1872, 1914], "n_bin": 1872, "bit_width": 1872, "col_indices_copi": [1872, 1914], "column_stack": [1872, 1914], "constant_pad_nd": [1872, 1914, 1952], "conv_tbc": [1872, 1914], "crow_indices_copi": [1872, 1914], "cudnn_affine_grid_gener": [1872, 1914], "cudnn_batch_norm": [1872, 1914], "exponential_average_factor": 1872, "cudnn_convolut": [1872, 1914], "cudnn_convolution_add_relu": [1872, 1914], "cudnn_convolution_relu": [1872, 1914], "cudnn_convolution_transpos": [1872, 1914], "cudnn_grid_sampl": [1872, 1914], "cudnn_is_accept": [1872, 1914], "cumulative_trapezoid": [1872, 1914], "detach_copi": [1872, 1914, 1956], "diagonal_copi": [1872, 1914], "dropout_": [1872, 1882], "embedding_renorm_": 1872, "physical_layout": [1872, 1952], "empty_quant": [1872, 1914], "anyenumtyp": 1872, "expand_copi": [1872, 1914], "fake_quantize_per_channel_affin": [1872, 1914], "fbgemm_linear_fp16_weight": [1872, 1914], "packed_weight": 1872, "fbgemm_linear_fp16_weight_fp32_activ": [1872, 1914], "fbgemm_linear_int8_weight": [1872, 1914], "col_offset": 1872, "weight_scal": 1872, "weight_zero_point": 1872, "fbgemm_linear_int8_weight_fp32_activ": [1872, 1914], "fbgemm_linear_quantize_weight": [1872, 1914], "fbgemm_pack_gemm_matrix_fp16": [1872, 1914], "fbgemm_pack_quantized_matrix": [1872, 1914], "feature_alpha_dropout_": 1872, "feature_dropout": [1872, 1914], "feature_dropout_": 1872, "frobenius_norm": [1872, 1914], "from_fil": [1872, 1914, 1930], "fused_moving_avg_obs_fake_qu": [1872, 1914], "observer_on": 1872, "fake_quant_on": 1872, "running_min": 1872, "running_max": 1872, "per_row_fake_qu": 1872, "symmetric_qu": 1872, "interpolation_mod": [1872, 1952], "has_bias": 1872, "gru_cel": [1872, 1914], "w_ih": 1872, "w_hh": 1872, "hamming_window": [1872, 1876, 1914], "histogramdd": [1872, 1914], "hspmm": [1872, 1914, 1928], "indices_copi": [1872, 1914], "is_autocast_cpu_en": [1872, 1914], "is_grad_en": [1872, 1914], "is_vulkan_avail": [1872, 1914], "isin": [1872, 1914], "kaiser_window": [1872, 1914], "lstm_cell": [1872, 1914], "meshgrid": [1872, 1914], "miopen_batch_norm": [1872, 1914], "miopen_convolut": [1872, 1914], "miopen_convolution_add_relu": [1872, 1914], "miopen_convolution_relu": [1872, 1914], "miopen_convolution_transpos": [1872, 1914], "miopen_depthwise_convolut": [1872, 1914], "miopen_rnn": [1872, 1914], "weight_stride0": 1872, "dropout_st": 1872, "out4": 1872, "mkldnn_adaptive_avg_pool2d": [1872, 1914], "mkldnn_convolut": [1872, 1914], "mkldnn_linear_backward_weight": 1872, "bias_defin": 1872, "mkldnn_max_pool2d": [1872, 1914], "mkldnn_max_pool3d": [1872, 1914], "mkldnn_rnn_layer": [1872, 1914], "weight0": 1872, "weight1": 1872, "weight2": 1872, "weight3": 1872, "hx_": 1872, "cx_": 1872, "native_batch_norm": [1872, 1914], "save_mean": 1872, "save_invstd": 1872, "native_channel_shuffl": [1872, 1914], "native_dropout": [1872, 1914, 1952], "native_group_norm": [1872, 1914, 1952], "hxw": [1872, 1952], "native_layer_norm": [1872, 1914, 1952], "native_norm": [1872, 1914, 1928], "norm_except_dim": [1872, 1914], "nuclear_norm": [1872, 1914], "pairwise_dist": [1872, 1914], "permute_copi": [1872, 1914], "promote_typ": [1872, 1914, 1935], "quantize_per_channel": [1872, 1914, 1919], "quantize_per_tensor_dynam": [1872, 1914, 1919], "quantized_batch_norm": [1872, 1914], "quantized_gru_cel": [1872, 1914], "packed_ih": 1872, "packed_hh": 1872, "col_offsets_ih": 1872, "col_offsets_hh": 1872, "scale_ih": 1872, "scale_hh": 1872, "zero_point_ih": 1872, "zero_point_hh": 1872, "quantized_lstm_cel": [1872, 1914], "quantized_max_pool1d": [1872, 1914], "quantized_max_pool2d": [1872, 1914], "quantized_max_pool3d": [1872, 1914], "quantized_rnn_relu_cel": [1872, 1914], "quantized_rnn_tanh_cel": [1872, 1914], "rand_lik": [1872, 1876, 1897, 1914, 1936, 1942], "randint_lik": [1872, 1876, 1914, 1936], "randn_lik": [1872, 1876, 1889, 1914, 1936], "randperm": [1872, 1876, 1914, 1936, 1952], "result_typ": [1872, 1914], "scalar1": 1872, "scalar2": 1872, "rnn_relu": [1872, 1914], "rnn_relu_cel": [1872, 1914], "rnn_tanh": [1872, 1914], "rnn_tanh_cel": [1872, 1914], "row_indices_copi": [1872, 1914], "row_stack": [1872, 1914], "rrelu_": 1872, "rsub": [1872, 1914], "searchsort": [1872, 1914], "segment_reduc": [1872, 1914], "selu_": 1872, "slice_copi": [1872, 1914], "sparse_bsc_tensor": [1872, 1914, 1928], "sparse_bsr_tensor": [1872, 1914, 1928], "sparse_compressed_tensor": [1872, 1914, 1928], "sparse_csc_tensor": [1872, 1914, 1928], "split_copi": [1872, 1914], "split_with_sizes_copi": [1872, 1914], "squeeze_copi": [1872, 1914], "std_mean": [1872, 1887, 1914], "t_copi": [1872, 1914], "threshold_": 1872, "transpose_copi": [1872, 1914], "trapz": [1872, 1914], "tril_indic": [1872, 1876, 1914], "triu_indic": [1872, 1876, 1914], "unbind_copi": [1872, 1914], "unfold_copi": [1872, 1914], "unsqueeze_copi": [1872, 1914], "values_copi": [1872, 1914], "vander": [1872, 1876, 1914], "var_mean": [1872, 1887, 1914], "view_as_complex_copi": [1872, 1914], "view_as_real_copi": [1872, 1914], "_nn": 1872, "adaptive_max_pool2d": [1872, 1914], "avg_pool2d": [1872, 1914, 1921, 1952], "conv_depthwise3d": [1872, 1914], "cross_entropy_loss": [1872, 1914], "input_scal": 1872, "elu_": 1872, "flatten_dense_tensor": [1872, 1914], "random_sampl": 1872, "gelu_": 1872, "hardsigmoid_": [1872, 1921], "hardswish_": 1872, "hardtanh_": [1872, 1921], "leaky_relu_": 1872, "log_sigmoid": [1872, 1914], "mish_": 1872, "mkldnn_linear": [1872, 1914], "mkldnn_reorder_conv2d_weight": [1872, 1914], "mkldnn_reorder_conv3d_weight": [1872, 1914], "nll_loss2d": [1872, 1914], "nll_loss_nd": [1872, 1914], "reflection_pad3d": [1872, 1914, 1952], "relu6_": 1872, "rrelu_with_nois": [1872, 1914], "rrelu_with_noise_": 1872, "silu_": 1872, "slow_conv3d": [1872, 1914], "slow_conv_dilated2d": [1872, 1914], "slow_conv_dilated3d": [1872, 1914], "slow_conv_transpose2d": [1872, 1914], "slow_conv_transpose3d": [1872, 1914], "softshrink": [1872, 1914], "thnn_conv2d": [1872, 1914], "unflatten_dense_tensor": [1872, 1914], "upsample_bicubic2d": [1872, 1914], "scales_h": 1872, "scales_w": 1872, "upsample_bilinear2d": [1872, 1914, 1952], "upsample_linear1d": [1872, 1914], "upsample_nearest1d": [1872, 1914], "upsample_nearest2d": [1872, 1914, 1952], "upsample_nearest3d": [1872, 1914], "scales_d": 1872, "upsample_trilinear3d": [1872, 1914], "fft_fftfreq": [1872, 1914], "fft_fftshift": [1872, 1914], "fft_hfft2": [1872, 1914], "fft_hfftn": [1872, 1914], "fft_ifftshift": [1872, 1914], "fft_ihfft2": [1872, 1914], "fft_ihfftn": [1872, 1914], "fft_rfftfreq": [1872, 1914], "_linalg": 1872, "linalg_cross": [1872, 1914], "linalg_det": [1872, 1914], "linalg_diagon": [1872, 1914], "eigvec": 1872, "linalg_ldl_factor": [1872, 1914], "linalg_ldl_factor_ex": [1872, 1914], "linalg_ldl_solv": [1872, 1914], "linalg_lu": [1872, 1914], "linalg_lu_factor": [1872, 1914], "linalg_lu_factor_ex": [1872, 1914], "linalg_lu_solv": [1872, 1914], "linalg_matmul": [1872, 1914], "linalg_matrix_exp": [1872, 1914], "linalg_matrix_pow": [1872, 1914], "linalg_multi_dot": [1872, 1914], "linalg_norm": [1872, 1914], "linalg_pinv": [1872, 1914], "linalg_solve_ex": [1872, 1914], "linalg_solve_triangular": [1872, 1914], "linalg_vand": [1872, 1914], "linalg_vecdot": [1872, 1914], "linalg_vector_norm": [1872, 1914], "_nest": 1872, "nested_to_padded_tensor": [1872, 1914], "_spars": 1872, "sparse_sampled_addmm": [1872, 1914], "_special": 1872, "special_airy_ai": [1872, 1914], "special_bessel_j0": [1872, 1914], "special_bessel_j1": [1872, 1914], "special_bessel_y0": [1872, 1914], "special_bessel_y1": [1872, 1914], "special_chebyshev_polynomial_t": [1872, 1914], "special_chebyshev_polynomial_u": [1872, 1914], "special_chebyshev_polynomial_v": [1872, 1914], "special_chebyshev_polynomial_w": [1872, 1914], "special_digamma": [1872, 1914], "special_entr": [1872, 1914], "special_erf": [1872, 1914], "special_erfc": [1872, 1914], "special_erfcx": [1872, 1914], "special_erfinv": [1872, 1914], "special_exp2": [1872, 1914], "special_expit": [1872, 1914], "special_expm1": [1872, 1914], "special_gammainc": [1872, 1914], "special_gammaincc": [1872, 1914], "special_gammaln": [1872, 1914], "special_hermite_polynomial_h": [1872, 1914], "special_i0": [1872, 1914], "special_i1": [1872, 1914], "special_laguerre_polynomial_l": [1872, 1914], "special_legendre_polynomial_p": [1872, 1914], "special_log1p": [1872, 1914], "special_log_ndtr": [1872, 1914], "special_log_softmax": [1872, 1914], "special_logit": [1872, 1914], "special_logsumexp": [1872, 1914], "special_modified_bessel_i0": [1872, 1914], "special_modified_bessel_i1": [1872, 1914], "special_modified_bessel_k0": [1872, 1914], "special_modified_bessel_k1": [1872, 1914], "special_multigammaln": [1872, 1914], "special_ndtr": [1872, 1914], "special_ndtri": [1872, 1914], "special_polygamma": [1872, 1914], "special_psi": [1872, 1914], "special_round": [1872, 1914], "special_scaled_modified_bessel_k0": [1872, 1914], "special_scaled_modified_bessel_k1": [1872, 1914], "special_shifted_chebyshev_polynomial_t": [1872, 1914], "special_shifted_chebyshev_polynomial_u": [1872, 1914], "special_shifted_chebyshev_polynomial_v": [1872, 1914], "special_shifted_chebyshev_polynomial_w": [1872, 1914], "special_sinc": [1872, 1914], "special_softmax": [1872, 1914], "special_spherical_bessel_j0": [1872, 1914], "special_xlog1pi": [1872, 1914], "special_xlogi": [1872, 1914], "special_zeta": [1872, 1914], "tval": 1872, "is_accept": 1872, "rect": 1872, "magic": [1872, 1875, 1936, 1946], "__complex__": 1872, "__float__": 1872, "__int__": 1872, "hex": [1872, 1874, 1914], "__hex__": 1872, "oct": [1872, 1914], "__oct__": 1872, "divmod": [1872, 1874, 1914], "chr": [1872, 1874, 1914], "int_float": 1872, "float_int": 1872, "fab": [1872, 1914], "int_int": 1872, "float_float": 1872, "complex_complex": 1872, "int_complex": 1872, "complex_int": 1872, "float_complex": 1872, "complex_float": [1872, 1930], "scalar_scalar": 1872, "int_to_int": 1872, "modf": [1872, 1914], "mathremaind": [1872, 1914], "programm": [1873, 1874], "tn": 1873, "subtyp": 1873, "an_error": 1873, "noreturn": [1873, 1874], "classvar": [1873, 1874], "anystr": [1873, 1874], "nomin": 1873, "newtyp": [1873, 1874], "tup": [1873, 1874], "emptydatastructur": 1873, "my_list": 1873, "aug_add_x": 1873, "inc": [1873, 1874], "assign_x": [1873, 1874], "sum_pair": 1873, "red": [1873, 1874], "green": [1873, 1874, 1948], "enum_fn": [1873, 1874], "my_variable_nam": 1873, "top_level_method": 1873, "other_help": 1873, "ten": [1873, 1933], "my_submodul": 1873, "tuple_or_list": 1873, "a_tupl": 1873, "de": [1873, 1916, 1919], "is_script": [1873, 1874, 1914], "unsupported_linear_op": 1873, "is_trac": [1873, 1874], "univers": 1873, "typing_extens": 1873, "a_dict": 1873, "some_dict": 1873, "delimit": [1874, 1875], "tstype": 1874, "tsmoduletyp": 1874, "tsalltyp": 1874, "tsmetatyp": 1874, "tsprimitivetyp": 1874, "tsstructuraltyp": 1874, "tsnominaltyp": 1874, "myclass": [1874, 1916], "printabl": [1874, 1916], "sortabl": 1874, "nevertheless": [1874, 1926], "inc_first_el": 1874, "cpufloattyp": 1874, "tstupl": 1874, "tsnamedtupl": 1874, "tslist": 1874, "tsdict": 1874, "tsoption": 1874, "tsunion": 1874, "tsfutur": 1874, "tsrref": 1874, "tsawait": 1874, "await": [1874, 1875, 1924], "keytyp": 1874, "tensortyp": [1874, 1956], "_await": 1874, "mytupl": 1874, "scripted_inc": 1874, "_annotatednamedtupl": 1874, "_namedtupleannot": 1874, "_unannotatednamedtupl": 1874, "mistak": [1874, 1901, 1946], "nameerror": 1874, "remedi": 1874, "tsbuiltinclass": 1874, "tscustomclass": 1874, "tsenum": 1874, "tstensor": 1874, "subtensor": [1874, 1899, 1958], "subwithtorchfunct": 1874, "script_g": 1874, "tsclassdef": 1874, "methoddefinit": 1874, "__torch__": [1874, 1912], "class2": 1874, "tsenumdef": 1874, "tsenumtyp": 1874, "memberidentifi": 1874, "intenum": 1874, "intflag": 1874, "basecolor": 1874, "compli": [1874, 1916], "classbodydefinit": 1874, "moduleobj": 1874, "testmodul": 1874, "dosometh": 1874, "strateg": 1874, "congruent": 1874, "python3": 1874, "unannot": 1874, "python3annot": 1874, "paramannot": 1874, "returnannot": 1874, "funcormethodbodi": 1874, "mypyannot": 1874, "localvarannot": 1874, "setval": 1874, "moduletyp": [1874, 1916], "classidentifi": 1874, "instanceattridentifi": 1874, "offset_": 1874, "tsstructualtyp": 1874, "grammar": 1874, "chapter": [1874, 1902], "floattyp": 1874, "inttyp": 1874, "stringtyp": 1874, "devicetyp": 1874, "bullet": 1874, "tupletyp": 1874, "listtyp": 1874, "enclosur": 1874, "parenth_form": 1874, "list_displai": 1874, "dict_displai": 1874, "legal": 1874, "stringliter": 1874, "floatnumb": 1874, "expression_list": 1874, "list_comprehens": 1874, "comp_for": 1874, "target_list": 1874, "or_expr": 1874, "key_datum_list": 1874, "dict_comprehens": 1874, "key_datum": 1874, "ongo": [1874, 1912, 1922, 1924], "enclos": 1874, "datum": [1874, 1938], "attributeref": 1874, "slice_list": 1874, "slice_item": 1874, "proper_slic": 1874, "argument_list": 1874, "desugar": [1874, 1946], "u_expr": 1874, "tightli": [1874, 1905], "m_expr": 1874, "a_expr": 1874, "shift_expr": 1874, "and_expr": 1874, "xor_expr": 1874, "comp_oper": 1874, "__contains__": 1874, "or_test": 1874, "and_test": 1874, "not_test": 1874, "conditional_express": 1874, "starred_item": 1874, "expression_stmt": 1874, "starred_express": 1874, "assignment_express": 1874, "assignment_stmt": 1874, "augmented_assignment_stmt": 1874, "augtarget": 1874, "augop": 1874, "annotated_assignment_stmt": 1874, "raise_stmt": 1874, "assert_stmt": 1874, "return_stmt": 1874, "del_stmt": 1874, "pass_stmt": 1874, "print_stmt": 1874, "break_stmt": 1874, "continue_stmt": 1874, "if_stmt": 1874, "while_stmt": 1874, "for_stmt": 1874, "with_stmt": 1874, "with_item": 1874, "__enter__": 1874, "suppress": [1874, 1923], "tuple_stmt": 1874, "getattr_stmt": 1874, "hasattr_stmt": 1874, "zip_stmt": 1874, "iterable1": 1874, "iterable2": 1874, "enumerate_stmt": 1874, "add_stat_valu": 1874, "sugaredvalu": 1874, "unrecogn": 1874, "honor": 1874, "__abs__": 1874, "bytearrai": 1874, "delattr": 1874, "exec": 1874, "__index__": 1874, "isint": 1874, "issubclass": [1874, 1899], "ndigit": 1874, "__import__": [1874, 1916], "notimpl": [1874, 1875, 1899, 1946], "rpc_sync": [1874, 1914, 1924, 1925, 1926], "synonym": 1874, "_fork": [1874, 1896], "_wait": [1874, 1896], "lexic": 1875, "indent": 1875, "coroutin": 1875, "__del__": [1875, 1894], "__bytes__": 1875, "__slots__": 1875, "metaclass": 1875, "mro": 1875, "__r": 1875, "__": [1875, 1956], "bytesliter": 1875, "imagnumb": 1875, "parenthes": 1875, "ifs": 1875, "customiz": [1875, 1937, 1944], "compound": 1875, "exc_typ": 1875, "exc_valu": 1875, "adaptivelogsoftmaxwithloss": 1876, "enable_grad": [1876, 1936], "overload_nam": [1878, 1899], "handi": [1878, 1894, 1897], "spotti": 1878, "googl": 1878, "colab": [1878, 1916, 1946], "dispatch_kei": [1878, 1944], "keynam": 1878, "alias_analysi": 1878, "conserv": [1878, 1881, 1897, 1946], "fallthrough": 1878, "div_cpu": 1878, "off_by_default": 1880, "_registr": 1880, "spammi": [1880, 1944], "born": 1881, "citizen": 1881, "afterthought": 1881, "unlock": 1881, "intuit": [1881, 1949], "alik": 1881, "grai": 1881, "systemat": 1881, "onboard": 1881, "maskedarrai": 1881, "masked_tensor": 1881, "mobil": [1882, 1919, 1947], "blocklist": [1882, 1916], "mobileoptimizertyp": 1882, "conv_bn_fus": 1882, "correspondingli": 1882, "prepack": [1882, 1914], "insert_fold_prepack_op": 1882, "arm": [1882, 1919], "remove_dropout": 1882, "hoist": 1882, "hoist_conv_packed_param": 1882, "fuse_add_relu": 1882, "vulkan": 1882, "vulkan_automatic_gpu_transf": 1882, "freeze_modul": 1882, "script_modul": 1882, "optimization_blocklist": 1882, "preserved_method": 1882, "_mobileoptimizertyp": 1882, "recursivescriptmodul": [1882, 1910], "download": [1883, 1911, 1933, 1949], "infrequ": 1884, "window_s": 1884, "max_sampl": 1884, "cap": 1884, "_monitor": 1884, "data_value_t": 1884, "eventhandlerhandl": 1884, "register_event_handl": 1884, "unregister_event_handl": 1884, "tensorboardeventhandl": 1884, "writer": [1884, 1905, 1933], "shader": [1885, 1906], "processor": 1885, "metalperformanceshad": 1885, "shared_memori": 1886, "abruptli": 1886, "get_all_sharing_strategi": 1886, "get_sharing_strategi": 1886, "set_sharing_strategi": 1886, "new_strategi": 1886, "di": [1886, 1942, 1944, 1950], "abnorm": [1886, 1907], "forev": [1886, 1898], "asap": 1886, "queue_2": 1886, "x_clone": 1886, "segfault": [1886, 1908, 1946], "shm_open": 1886, "prone": [1886, 1907, 1946], "destructor": [1886, 1926], "seriou": [1886, 1897, 1946], "torch_shm_manag": 1886, "unnot": 1886, "spawncontext": 1886, "has_nam": 1887, "is_shar": [1887, 1930], "is_sparse_csr": [1887, 1914, 1930], "is_tensor": [1887, 1928], "items": [1887, 1914], "unifies_names_from_input_tensor": 1887, "nbyte": [1887, 1914, 1930], "ndimens": 1887, "position": [1887, 1888], "unnam": [1887, 1888], "misalign": 1887, "inher": 1887, "collaps": [1887, 1914, 1952], "disappear": 1887, "img": [1888, 1933], "renamed_img": 1888, "coexist": 1888, "wildcard": [1888, 1916, 1956], "somewher": [1888, 1904, 1950], "scale_channel": 1888, "more_img": 1888, "named_tensor": 1888, "named_img": 1888, "flat_img": 1888, "named_flat_img": 1888, "unflattened_named_img": 1888, "grad_loss": 1888, "8107": 1888, "6357": 1888, "0783": 1888, "untest": 1888, "rename_map": 1888, "greedili": 1888, "unment": 1888, "49152": 1888, "datastructur": 1889, "seamless": 1889, "nested_tensor": 1889, "nt": 1889, "vein": 1889, "as_nested_tensor": 1889, "irregular": 1889, "indistinguish": 1889, "2286": 1889, "4842": 1889, "7827": 1889, "6745": [1889, 1929], "0658": 1889, "1247": 1889, "4078": 1889, "8083": 1889, "2871": 1889, "5559": 1889, "9885": 1889, "4074": 1889, "4855": 1889, "0733": 1889, "8285": 1889, "6858": 1889, "7030": 1889, "3481": 1889, "0236": 1889, "fake_grad": 1889, "6862": 1889, "1282": 1889, "1031": 1889, "0464": 1889, "3276": 1889, "9967": 1889, "0054": 1889, "8972": 1889, "9174": 1889, "4995": 1889, "8546": 1889, "7194": 1889, "2918": 1889, "1846": 1889, "8793": 1889, "5183": 1889, "6447": 1889, "8009": 1889, "8468": 1889, "9832": 1889, "5272": 1889, "pt_infer": 1889, "pt_larg": 1889, "pt_small": 1889, "bitwidth": [1890, 1905, 1919, 1928], "asymmetr": [1890, 1919, 1922], "sacrific": [1892, 1897], "dirac": 1892, "glorot": 1892, "bengio": 1892, "fan": 1892, "_in": 1892, "_out": [1892, 1902, 1952], "fan_in": 1892, "delv": 1892, "surpass": 1892, "he": 1892, "_mode": 1892, "fan_out": 1892, "redrawn": 1892, "sax": 1892, "2013": 1892, "marten": 1892, "walkthrough": 1893, "clip_grad_value_": 1893, "optimizer2": 1893, "batch_per_it": 1893, "iters_to_accumul": 1893, "num_proc": 1893, "grad_param": 1893, "grad_norm": 1893, "scaled_grad_param": 1893, "inv_scal": 1893, "proce": [1893, 1897, 1924, 1957], "optimizer0": 1893, "optimizer1": 1893, "output0": 1893, "model0": 1893, "model1": 1893, "loss0": 1893, "loss1": 1893, "hundr": [1893, 1904, 1957], "imped": 1893, "poor": [1893, 1894], "dp_model": 1893, "alter": [1893, 1899, 1953], "imported_funct": 1893, "mymm": 1893, "myfloat32func": 1893, "fwd_output": 1893, "cleaner": 1894, "mapsto": 1894, "educ": 1894, "_save": 1894, "_saved_self": 1894, "convex": 1894, "concav": 1894, "togglabl": 1894, "drawback": 1894, "0011": 1894, "dirti": 1894, "hogwild": 1894, "train_fn": 1894, "graphtask": 1894, "copyslic": 1894, "mutex": 1894, "gotten": 1894, "curiou": 1894, "\u2102": 1894, "yj": 1894, "holomorph": 1894, "fulfil": [1894, 1900, 1916, 1950], "theori": 1894, "homomorph": 1894, "mathematician": 1894, "im": 1894, "studi": [1894, 1918], "beauti": 1894, "somewhat": [1894, 1897, 1928], "counterintuit": 1894, "0906": 1894, "4835": 1894, "audio": [1894, 1933], "\u211d": 1894, "_output": 1894, "vj": 1894, "selfdeletingtempfil": 1894, "tmp_dir": 1894, "uuid": 1894, "uuid4": 1894, "temp_fil": 1894, "forbidden": 1894, "savedtensor": 1894, "_raw_saved_": 1894, "_raw_saved_self": 1894, "save_on_disk_threshold": 1894, "tensor_or_sctf": 1894, "_saved_oth": 1894, "register_post_accumulate_grad_hook": 1894, "4th": 1895, "backcompat": 1895, "broadcast_warn": 1895, "userwarn": 1895, "compute_z": 1896, "w_z": 1896, "w_y": 1896, "tbb": 1896, "aten_thread": 1896, "omp": 1896, "mkl_thread": 1896, "bla": 1896, "mkldnn_cpu_runtim": 1896, "use_mkldnn": 1896, "use_tbb": 1896, "use_openmp": 1896, "ON": [1896, 1903, 1904], "set_num_interop_thread": 1896, "get_num_interop_thread": 1896, "set_num_thread": [1896, 1907], "get_num_thread": 1896, "omp_num_thread": 1896, "mkl_num_thread": 1896, "e5": 1896, "oversubscript": 1896, "irrespect": 1897, "spread": 1897, "cuda2": [1897, 1903], "a_ful": 1897, "10240": 1897, "b_full": 1897, "ab_ful": 1897, "7277": 1897, "ab_tf32": 1897, "016": 1897, "ga100": 1897, "1747": 1897, "relative_error": 1897, "0022": 1897, "ab_fp32": 1897, "0031": 1897, "000039": 1897, "7x": 1897, "globalcontext": 1897, "setallowtf32cubla": 1897, "setallowtf32cudnn": 1897, "bench_gemm_transform": 1897, "allow_fp16_reduc": 1897, "4048": 1897, "1634": 1897, "1639": 1897, "4056": 1897, "1670": 1897, "1661": 1897, "4080": 1897, "1664": 1897, "1658": 1897, "1651": 1897, "4104": 1897, "1677": 1897, "1674": 1897, "4128": 1897, "1796": [1897, 1905], "2519": 1897, "5096": 1897, "2144": 1897, "2149": 1897, "2766": 1897, "5120": 1897, "2142": 1897, "9728": 1897, "3875": 1897, "5779": 1897, "16384": [1897, 1949], "6182": 1897, "9656": 1897, "setallowfp16reductioncubla": 1897, "instabl": 1897, "setallowbf16reductioncubla": 1897, "invis": [1897, 1947, 1957], "start_ev": 1897, "elapsed_time_m": 1897, "exploit": 1897, "paragraph": [1897, 1902], "initial_grad": 1897, "memory_alloc": [1897, 1903], "memory_snapshot": [1897, 1903], "memcheck": 1897, "pytorch_no_cuda_memory_cach": [1897, 1903], "option2": 1897, "value2": 1897, "max_split_size_mb": 1897, "borderlin": 1897, "memory_summari": 1897, "resort": [1897, 1902, 1916], "roundup_power2_divis": 1897, "cudacachingalloc": 1897, "1280": 1897, "1536": 1897, "1792": 1897, "256mb": 1897, "512mb": 1897, "1gb": [1897, 1955], "knob": [1897, 1945], "garbage_collection_threshold": 1897, "reclaim": [1897, 1942], "release_cached_block": 1897, "unfavor": 1897, "expandable_seg": 1897, "2mb": 1897, "sliver": 1897, "cuda_runtime_api": 1897, "iostream": 1897, "fpic": 1897, "my_malloc": 1897, "cout": 1897, "endl": [1897, 1904], "my_fre": 1897, "cudafre": [1897, 1959], "cudapluggablealloc": 1897, "new_alloc": 1897, "_cuda_clearcublasworkspac": 1897, "kib": 1897, "lru": 1897, "geometri": 1897, "1023": 1897, "zeta": [1897, 1914, 1929, 1952], "varieti": [1897, 1925], "use_pytorch_kernel_cach": 1897, "pytorch_kernel_cache_path": 1897, "store_tru": 1897, "disable_cuda": 1897, "assess": 1897, "cudagetdevicecount": 1897, "cuinit": 1897, "pytorch_nvml_based_cuda_check": 1897, "nvml": 1897, "nvmldevicegetcount_v2": 1897, "poison": 1897, "train_load": [1897, 1907], "x_cpu": 1897, "x_gpu": 1897, "x_cpu_long": 1897, "y_cpu": 1897, "y_gpu": 1897, "y_cpu_long": 1897, "new_tensor": 1897, "overus": 1897, "principl": [1897, 1947], "cudagraphlaunch": 1897, "elid": 1897, "versatil": 1897, "static_input": 1897, "static_output": 1897, "realist": 1897, "sophist": [1897, 1915], "violat": [1897, 1900], "virtual": 1897, "d_in": 1897, "d_out": 1897, "640": 1897, "static_target": 1897, "static_y_pr": 1897, "static_loss": 1897, "real_input": [1897, 1946], "real_target": 1897, "refil": 1897, "dag": 1897, "rejoin": 1897, "cuda_work": 1897, "nsight": 1897, "reorgan": 1897, "graphabl": 1897, "needlessli": [1897, 1945], "econom": 1897, "static_out_1": 1897, "g1_workload": 1897, "static_in_1": 1897, "static_out_2": 1897, "g2_workload": 1897, "static_in_2": 1897, "real_data_1": 1897, "real_data_2": 1897, "occasion": [1897, 1928, 1946], "29500": [1898, 1917, 1924, 1925], "dive": [1898, 1902, 1916, 1950, 1951], "prerequisit": 1898, "grad0": 1898, "grad1": 1898, "bucket1": 1898, "bucket0": 1898, "hurt": 1898, "kick": [1898, 1924, 1925, 1954], "earliest": 1898, "unreadi": 1898, "perspect": [1898, 1908, 1925, 1950], "hpp": 1898, "processgroupgloo": 1898, "processgroupmpi": 1898, "_sync_param": 1898, "autograd_hook": 1898, "prepare_for_backward": 1898, "_after_": 1898, "log_level": [1898, 1944, 1957], "optimize_ddp": 1898, "mark_dirti": 1899, "mark_non_differenti": [1899, 1900], "set_materialize_grad": 1899, "linearfunct": 1899, "grad_bia": 1899, "mulconst": 1899, "mycub": [1899, 1900], "grad_dx": [1899, 1900], "my_cub": [1899, 1900], "input_featur": 1899, "output_featur": 1899, "duck": [1899, 1916], "__array_function__": 1899, "nep": 1899, "0018": 1899, "scalartensor": 1899, "handled_funct": 1899, "mandat": 1899, "update_wrapp": 1899, "ensure_tensor": 1899, "metadatatensor": 1899, "__add__": 1899, "subtensor2": 1899, "othersubtensor": 1899, "loggingtensor": 1899, "permiss": 1899, "_metadata": 1899, "ndata": 1899, "ministri": 1899, "silli": 1899, "superclass": 1899, "troublesom": 1899, "face": [1899, 1916, 1933, 1946], "_get_overridable_funct": 1899, "overriden": 1899, "get_overridable_funct": [1899, 1958], "func_dict": 1899, "nn_func": 1899, "labori": 1899, "_get_testing_overrid": 1899, "get_testing_overrid": [1899, 1958], "override_dict": 1899, "dummy_add": 1899, "get_ignored_funct": [1899, 1958], "__torch_dispatch__": [1899, 1928, 1946], "2020": 1899, "outdat": 1899, "redispatch": [1899, 1946], "dispatchkei": 1899, "zerotensor": 1899, "compositeimplicitautograd": 1899, "func_nam": [1899, 1924], "exot": 1899, "zoo": 1899, "subclass_zoo": [1899, 1946], "intro": 1899, "custom_vjp": 1900, "custom_jvp": 1900, "to_numpi": 1900, "numpysort": 1900, "ind_inv": 1900, "_1": [1900, 1916], "numpytak": 1900, "numpy_sort": 1900, "saniti": 1900, "ggx": 1900, "vmappabl": 1900, "x_bdim": 1900, "ind_bdim": 1900, "ind_inv_bdim": 1900, "expanded_x": 1900, "expanded_ind": 1900, "expanded_ind_inv": 1900, "new_dim": 1900, "logical_dim": 1900, "maybe_expand_bdim_at_front": 1900, "pseudocod": 1900, "rapidli": [1901, 1907], "fortun": [1901, 1957], "abridg": 1901, "total_loss": 1901, "extrud": 1901, "phenomenon": 1901, "plenti": 1901, "bptt": 1901, "repackag": 1901, "nm": 1901, "blow": 1901, "rememb": [1901, 1907, 1950], "elf": 1901, "grep": [1901, 1941], "run_model": 1901, "recoveri": 1901, "data_parallel": 1901, "pad_packed_sequ": 1901, "padded_input": 1901, "packed_input": 1901, "packed_output": 1901, "my_lstm": 1901, "dp_m": 1901, "padding_input": 1901, "ur": 1902, "ui": [1902, 1933, 1951, 1954], "rewritten": 1902, "j_f": 1902, "calculu": 1902, "cw": 1902, "bigger": 1902, "articl": 1902, "58eb23378f2a376565a66ac32c93a316c45b6131": 1902, "l99": 1902, "l105": 1902, "ds_dx": 1902, "compute_gradi": 1902, "ds_dy": 1902, "conj_w_d": 1902, "w_d": 1902, "d_idx": 1902, "albeit": 1902, "wonder": 1902, "amd": [1903, 1939], "dialect": 1903, "portabl": 1903, "rocmdoc": 1903, "programming_guid": 1903, "hip_api_guid": 1903, "cuda_vers": 1903, "cudaruntimegetvers": 1903, "cudadrivergetvers": 1903, "hip_vers": 1903, "hipruntimegetvers": 1903, "hipdrivergetvers": 1903, "11000": 1903, "use_rocm": 1903, "rocm_vers": 1903, "40300": 1903, "cmake": [1903, 1911], "drocm_force_enable_gpu_assert": 1903, "addglobalcallback": 1904, "recordfunct": 1904, "ivalu": 1904, "threadlocaldebuginfo": 1904, "debuginfoguard": 1904, "recordfunctioncallback": 1904, "onfunctionent": 1904, "onfunctionexit": 1904, "needsinput": 1904, "samplingprob": 1904, "enablerecordfunct": 1904, "cerr": 1904, "broader": [1904, 1936], "inject": 1904, "setapiusagehandl": 1904, "setapiusagelogg": 1904, "event_nam": 1904, "c10_log_api_usage_onc": 1904, "my_api": 1904, "_log_api_usage_onc": 1904, "archiv": 1904, "bundl": 1904, "akin": 1904, "jpeg": 1904, "camera": [1904, 1933], "setexportmoduleextrafileshook": 1904, "extrafilesmap": 1904, "producer_info": 1904, "getenv": 1904, "getsourc": 1904, "precompil": 1904, "pyc": 1904, "loos": 1904, "elabor": 1905, "tpu": 1905, "mylinear": 1905, "sample_input": 1905, "0413": 1905, "2057": 1905, "0597": 1905, "8247": 1905, "1045": 1905, "4299": 1905, "5457": 1905, "4793": 1905, "3634": 1905, "8525": 1905, "6749": 1905, "l0": [1905, 1910], "deeper": [1905, 1916, 1950], "bignet": 1905, "big_net": 1905, "dynamicnet": 1905, "dynamic_net": 1905, "2051": 1905, "7601": 1905, "1963": 1905, "4354": 1905, "6598": 1905, "4446": 1905, "4628": 1905, "8774": 1905, "6848": 1905, "5458": 1905, "4647": 1905, "5310": 1905, "0609": 1905, "0940": 1905, "1266": 1905, "0623": 1905, "3508": 1905, "0550": 1905, "5317": 1905, "5562": 1905, "4028": 1905, "6942": 1905, "0140": 1905, "0329": 1905, "1160": 1905, "0434": 1905, "3889": 1905, "1613": 1905, "6340": 1905, "3887": 1905, "9979": 1905, "0767": 1905, "3526": 1905, "8756": 1905, "5847": 1905, "6016": 1905, "1608": 1905, "0829": 1905, "6338": 1905, "9239": 1905, "6943": 1905, "5034": 1905, "0268": 1905, "4489": 1905, "9403": 1905, "2509": 1905, "5052": 1905, "3088": 1905, "4951": 1905, "3381": 1905, "5166": 1905, "boilerpl": [1905, 1916], "beginn": 1905, "examples_nn": 1905, "polynomial_modul": 1905, "teach": 1905, "0013": [1905, 1929], "0030": 1905, "0008": 1905, "modalmodul": 1905, "6614": 1905, "2669": 1905, "0617": 1905, "4519": 1905, "two_layer_net_optim": 1905, "blitz": 1905, "neural_networks_tutori": 1905, "autograd_tutori": 1905, "new_net": 1905, "runningmean": 1905, "1041": 1905, "0647": 1905, "1515": 1905, "m_load": 1905, "unserialized_th": 1905, "statefulmodul": 1905, "param3": 1905, "param_list": 1905, "parameterlist": 1905, "param_dict": 1905, "parameterdict": 1905, "buffer1": 1905, "buffer2": 1905, "buffer3": 1905, "0322": 1905, "9066": 1905, "1409": 1905, "4852": 1905, "6949": 1905, "2911": 1905, "1044": 1905, "4202": 1905, "1953": 1905, "5299": 1905, "8747": 1905, "6289": 1905, "4898": 1905, "6434": 1905, "5187": 1905, "0346": 1905, "4077": 1905, "4324": 1905, "7022": 1905, "3915": 1905, "6176": 1905, "6062": 1905, "5992": 1905, "4452": 1905, "2843": 1905, "3710": 1905, "3947": 1905, "saving_loading_model": 1905, "what_is_state_dict": 1905, "skip_init": 1905, "skip_param_init": 1905, "forward_hook": [1905, 1953], "backward_hook": [1905, 1953], "new_grad_input": 1905, "5059": 1905, "8158": 1905, "2390": 1905, "0043": 1905, "addmmbackward": 1905, "forward_pre_hook_handl": 1905, "5752": 1905, "7421": 1905, "forward_hook_handl": 1905, "0980": 1905, "4666": 1905, "0256": 1905, "4497": 1905, "5046": 1905, "combat": 1905, "mps_devic": 1906, "yourfavoritenet": 1906, "a3c": 1907, "set_start_method": 1907, "simplequeu": 1907, "cope": 1907, "eleg": 1907, "num_process": 1907, "inappropri": 1907, "vcpu": 1907, "htop": 1907, "exceed": 1907, "competit": 1907, "oversubscrib": 1907, "fairli": [1907, 1917, 1945, 1949], "mnist_hogwild": 1907, "dataloader_kwarg": 1907, "train_epoch": 1907, "30x": 1907, "boost": [1907, 1941], "754": 1908, "1e20": 1908, "4142e": 1908, "struggl": 1908, "benign": 1908, "v_dot2": 1908, "mfma": 1908, "fp64": 1908, "rocbla": 1908, "miopen": 1908, "rocblas_internal_fp16_alt_impl": 1908, "miopen_debug_convolution_attrib_fp16_alt_impl": 1908, "_convbackend": 1908, "slownd": 1908, "slownd_transpos": 1908, "slownd_dil": 1908, "slownd_dilated_transpos": 1908, "convbackend": 1908, "miopendepthwis": 1908, "miopentranspos": 1908, "svd_lowrank": [1909, 1928], "22modul": 1909, "20determin": 1909, "index_add_cuda_": 1909, "1509": 1909, "8027": 1909, "0333": 1909, "1444": 1909, "rese": 1909, "seed_work": 1909, "worker_se": 1909, "train_dataset": 1909, "tensor_dict": 1910, "loaded_numb": 1910, "loaded_even": 1910, "scene": [1910, 1933, 1944], "loaded_smal": 1910, "num_batches_track": 1910, "bn_state_dict": 1910, "new_bn": 1910, "out0_relu": 1910, "1400": 1910, "4563": 1910, "0271": 1910, "4406": 1910, "2827": 1910, "4588": 1910, "2031": 1910, "0300": 1910, "1316": 1910, "6533": 1910, "3413": 1910, "1112": 1910, "m_state_dict": 1910, "new_m": 1910, "original_nam": 1910, "controlflowmodul": 1910, "controlflowmodule_trac": 1910, "3793": 1910, "controlflowmodule_script": 1910, "tagger": 1910, "ipu_tag": 1910, "ipu_deseri": 1910, "startswith": [1910, 1914], "get_default_load_endian": 1910, "byteord": 1910, "loadendian": 1910, "default_load_endian": 1910, "set_default_load_endian": 1910, "endian": 1910, "rem": 1911, "7z": 1911, "curl": 1911, "ossci": 1911, "mkl_2020": 1911, "aoa": 1911, "omkl": 1911, "cuda_prefix": 1911, "cuda102": 1911, "magma_2": 1911, "4_": 1911, "omagma": 1911, "cmake_include_path": 1911, "cd": [1911, 1916, 1918, 1957], "magma_hom": 1911, "studio": 1911, "pip": [1911, 1912, 1933], "cmake_gener": 1911, "ffi": 1911, "create_extens": 1911, "_ext": 1911, "define_macro": 1911, "relative_to": 1911, "c99": 1911, "x86_x64": 1911, "packagesnotfounderror": 1911, "anaconda": 1911, "noarch": 1911, "continuum": 1911, "pkg": 1911, "pro": [1911, 1933], "msys2": 1911, "importerror": [1911, 1916], "dll": 1911, "vc2017": 1911, "redistribut": 1911, "vc": 1911, "vs2017_runtim": 1911, "mkl_fft": 1911, "intel_openmp": 1911, "vs2017": 1911, "openbla": 1911, "forg": 1911, "emerg": [1911, 1945], "bootstrap": 1911, "forgotten": 1911, "idiom": 1911, "freeze_support": 1911, "forkingpickl": 1911, "brokenpipeerror": 1911, "errno": 1911, "couldn": [1911, 1912], "torch_14808_1591070686": 1911, "thalloc": 1911, "tdr": 1911, "thcudacheck": 1911, "csrc": [1911, 1945], "storageshar": 1911, "dummy_input": 1912, "input_nam": 1912, "actual_input_1": 1912, "learned_": 1912, "output_nam": 1912, "learned_0": 1912, "learned_1": 1912, "learned_2": 1912, "learned_3": 1912, "learned_14": 1912, "learned_15": 1912, "kernel_shap": 1912, "9216": 1912, "transb": 1912, "check_model": 1912, "printable_graph": 1912, "onnxruntim": 1912, "ort": 1912, "ort_sess": 1912, "inferencesess": 1912, "astyp": 1912, "seq_length": 1912, "real_seq_length": 1912, "experienc": 1912, "new_data": 1912, "hope": [1912, 1951], "symbolic_opset": 1912, "symbolic_opset9": 1912, "_variablefunct": 1912, "pyi": 1912, "checkout": 1912, "___torch_mangle_0": 1912, "alpha_f": 1912, "myrelu": 1912, "value_t": 1912, "pythonop": [1912, 1914], "mylogexp": 1912, "operator_export_typ": 1912, "onnx_fallthrough": 1912, "onnx_aten_fallback": 1912, "onnx_opset": 1912, "opset15": 1912, "custom_opset": 1912, "67326": 1912, "alphax": 1912, "castlik": 1912, "gammax": 1912, "settyp": 1912, "custom_selu": 1912, "jit_util": 1912, "graphcontext": 1912, "onnxscript_op": 1912, "register_custom_op_symbol": 1912, "symbolic_nam": 1912, "symbolic_fn": 1912, "Be": [1912, 1954], "symbolic_help": 1912, "symbolic_foo_forward": 1912, "custom_domain": 1912, "attr1_f": 1912, "attr2_i": 1912, "custom_op": [1912, 1946], "foo_forward": 1912, "foomodel": 1912, "example_input1": 1912, "caffe2": [1912, 1933], "torch_script_graph": 1912, "unconvertible_op": 1912, "dynamic_ax": 1912, "export_param": 1912, "trainingmod": 1912, "operatorexporttyp": 1912, "do_constant_fold": 1912, "keep_initializers_as_input": 1912, "export_modules_as_funct": 1912, "autograd_inlin": 1912, "OF": 1912, "WITH": 1912, "input_i": 1912, "input_z": 1912, "fileno": 1912, "untrain": 1912, "doc_str": 1912, "onnx_aten": 1912, "build_caffe2": 1912, "summodul": 1912, "dim_valu": 1912, "my_custom_axis_nam": 1912, "dim_param": 1912, "sum_dynamic_axes_1": 1912, "deduplicate_initi": 1912, "predefin": 1912, "74765": 1912, "checkererror": 1912, "unsupportedoperatorerror": 1912, "export_to_pretty_str": 1912, "export_typ": 1912, "google_print": 1912, "add_node_nam": 1912, "nodeproto": 1912, "debugstr": 1912, "contrib": 1912, "test_aten_embedding_2": 1912, "test_oper": 1912, "unregister_custom_op_symbol": 1912, "select_model_mode_for_export": 1912, "is_in_onnx_export": 1912, "middl": 1912, "enable_log": 1912, "disable_log": 1912, "graphinfo": 1912, "incorrect_relu_symbolic_funct": 1912, "2328854203224182": 1912, "699536174352349": 1912, "rapid": 1912, "exportopt": 1912, "my_nn_modul": 1912, "my_nn_module_attribut": 1912, "faketensormod": [1912, 1945, 1946], "faketensor": [1912, 1946], "_subclass": [1912, 1945, 1946], "fake_tensor": [1912, 1945, 1946], "l870": 1912, "my_model_without_initi": 1912, "my_model_with_initi": 1912, "underdevelop": 1913, "parsabl": 1913, "fxe0007": 1913, "fxe0011": 1913, "fxe0012": 1913, "fxe0013": 1913, "fxe0014": 1913, "fxe0015": 1913, "fxe0016": 1913, "poe0001": 1913, "poe0002": 1913, "poe0003": 1913, "poe0004": 1913, "torchscriptonnxexportdiagnost": 1913, "cpp_stack": 1913, "record_cpp_call_stack": 1913, "constantchunk": 1914, "__and_": 1914, "__contains_": 1914, "__derive_index": 1914, "__getitem_": 1914, "__interpol": 1914, "__is_": 1914, "__isnot_": 1914, "__lshift_": 1914, "__not_": 1914, "__or_": 1914, "__range_length": 1914, "__rshift_": 1914, "__xor_": 1914, "_cast_byt": 1914, "_cast_char": 1914, "_cast_doubl": 1914, "_cast_float": 1914, "_cast_half": 1914, "_cast_int": 1914, "_cast_long": 1914, "_cast_short": 1914, "_conj": 1914, "_convolution_mod": 1914, "_dim_arang": 1914, "_log_softmax": [1914, 1952], "_pack_padded_sequ": 1914, "_pad_packed_sequ": 1914, "_reshape_from_tensor": 1914, "_sample_dirichlet": 1914, "_set_item": 1914, "_shape_as_tensor": 1914, "_standard_gamma": 1914, "_uniqu": 1914, "_unique2": 1914, "_weight_norm": 1914, "conv1d_relu": 1914, "conv2d_relu": 1914, "conv3d_relu": 1914, "embedding_renorm": 1914, "floordiv": [1914, 1921], "nonzero_numpi": 1914, "numpy_t": 1914, "unchecked_cast": 1914, "unique_dim": 1914, "_quantiz": 1914, "conv2d_prepack": 1914, "conv3d_prepack": 1914, "conv_transpose1d_prepack": 1914, "conv_transpose2d_prepack": 1914, "conv_transpose3d_prepack": 1914, "linear_dynam": 1914, "linear_prepack": 1914, "linear_prepack_fp16": 1914, "linear_prepack_fp16_legaci": 1914, "linear_prepack_legaci": 1914, "_test": 1914, "get_first": 1914, "compleximplicit": 1914, "floatimplicit": 1914, "intimplicit": 1914, "__iand_": 1914, "__ilshift_": 1914, "__ior_": 1914, "__irshift_": 1914, "__ixor_": 1914, "__round_to_zero_floordiv": 1914, "__upsampl": 1914, "__upsample_bilinear": 1914, "__upsample_nearest": 1914, "_adaptive_avg_pool2d": [1914, 1952], "_adaptive_avg_pool3d": [1914, 1952], "_add_batch_dim": 1914, "_add_relu": 1914, "_addmm_activ": 1914, "_aminmax": 1914, "_amp_foreach_non_finite_check_and_unscal": 1914, "_amp_update_scal": 1914, "_assert_tensor_metadata": 1914, "_autocast_to_full_precis": 1914, "_autocast_to_reduced_precis": 1914, "_batch_norm_impl_index": 1914, "_cdist_forward": [1914, 1952], "_cholesky_solve_help": 1914, "_choose_qparams_per_tensor": 1914, "_coalesc": 1914, "_compute_linear_combin": 1914, "_conj_copi": 1914, "_conj_phys": 1914, "_conv_depthwise2d": 1914, "_convert_indices_from_coo_to_csr": 1914, "_convert_indices_from_csr_to_coo": 1914, "_copy_from": 1914, "_copy_from_and_res": 1914, "_ctc_loss": 1914, "_cudnn_ctc_loss": 1914, "_cudnn_init_dropout_st": 1914, "_cudnn_rnn": 1914, "_cudnn_rnn_flatten_weight": 1914, "_cufft_clear_plan_cach": 1914, "_cufft_get_plan_cache_max_s": 1914, "_cufft_get_plan_cache_s": 1914, "_cufft_set_plan_cache_max_s": 1914, "_cummax_help": 1914, "_cummin_help": 1914, "_debug_has_internal_overlap": 1914, "_dimi": 1914, "_dimv": 1914, "_dirichlet_grad": 1914, "_efficient_attention_forward": 1914, "_efficientzerotensor": 1914, "_embedding_bag": [1914, 1952], "_embedding_bag_forward_onli": 1914, "_empty_affine_quant": 1914, "_empty_per_channel_affine_quant": 1914, "_euclidean_dist": 1914, "_fake_quantize_learnable_per_channel_affin": 1914, "_fake_quantize_learnable_per_tensor_affin": 1914, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1914, "_fft_c2c": 1914, "_fft_c2r": 1914, "_fft_r2c": 1914, "_fill_mem_eff_dropout_mask": 1914, "_flash_attention_forward": 1914, "_foobar": [1914, 1957], "_foreach_ab": 1914, "_foreach_aco": 1914, "_foreach_add": 1914, "_foreach_addcdiv": 1914, "_foreach_addcmul": 1914, "_foreach_asin": 1914, "_foreach_atan": 1914, "_foreach_ceil": 1914, "_foreach_clamp_max": 1914, "_foreach_clamp_min": 1914, "_foreach_copi": 1914, "_foreach_co": 1914, "_foreach_cosh": 1914, "_foreach_div": 1914, "_foreach_erf": 1914, "_foreach_erfc": 1914, "_foreach_exp": 1914, "_foreach_expm1": 1914, "_foreach_floor": 1914, "_foreach_frac": 1914, "_foreach_lerp": 1914, "_foreach_lgamma": 1914, "_foreach_log": 1914, "_foreach_log10": 1914, "_foreach_log1p": 1914, "_foreach_log2": 1914, "_foreach_maximum": 1914, "_foreach_minimum": 1914, "_foreach_mul": 1914, "_foreach_neg": 1914, "_foreach_norm": 1914, "_foreach_pow": 1914, "_foreach_reciproc": 1914, "_foreach_round": 1914, "_foreach_sigmoid": 1914, "_foreach_sign": 1914, "_foreach_sin": 1914, "_foreach_sinh": 1914, "_foreach_sqrt": 1914, "_foreach_sub": 1914, "_foreach_tan": 1914, "_foreach_tanh": 1914, "_foreach_trunc": 1914, "_foreach_zero": 1914, "_functional_assert_async": 1914, "_functional_sym_constrain_rang": 1914, "_functional_sym_constrain_range_for_s": 1914, "_fused_adam": 1914, "_fused_adamw": 1914, "_fused_dropout": 1914, "_fused_moving_avg_obs_fq_help": 1914, "_fused_moving_avg_obs_fq_helper_funct": 1914, "_fused_sdp_choic": 1914, "_fw_primal": 1914, "_fw_primal_copi": 1914, "_get_cpu_cap": 1914, "_get_tracing_st": 1914, "_grad_sum_to_s": 1914, "_has_compatible_shallow_copy_typ": 1914, "_has_same_storage_numel": 1914, "_histogramdd_bin_edg": 1914, "_histogramdd_from_bin_ct": 1914, "_histogramdd_from_bin_tensor": 1914, "_index_put_impl": 1914, "_indices_copi": 1914, "_infer_s": 1914, "_int_mm": 1914, "_is_all_tru": 1914, "_is_any_tru": 1914, "_is_zerotensor": 1914, "_linalg_check_error": 1914, "_linalg_det": 1914, "_linalg_eigh": 1914, "_linalg_slogdet": 1914, "_linalg_solve_ex": 1914, "_linalg_svd": 1914, "_list_to_tensor": 1914, "_logcumsumexp": 1914, "_lstm_mp": 1914, "_make_dep_token": 1914, "_make_du": 1914, "_make_dual_copi": 1914, "_make_per_channel_quantized_tensor": 1914, "_make_per_tensor_quantized_tensor": 1914, "_masked_scal": 1914, "_masked_softmax": 1914, "_mkldnn_reshap": 1914, "_mkldnn_transpos": 1914, "_mps_convolut": 1914, "_mps_convolution_transpos": 1914, "_native_batch_norm_legit": [1914, 1952], "_native_batch_norm_legit_funct": 1914, "_native_batch_norm_legit_no_train": [1914, 1952], "_native_multi_head_attent": 1914, "_ncf_unsqueez": 1914, "_ncf_view": 1914, "_neg_view": 1914, "_neg_view_copi": 1914, "_nested_from_pad": 1914, "_nested_from_padded_and_nested_exampl": 1914, "_nested_tensor_from_mask": 1914, "_nested_tensor_from_mask_left_align": 1914, "_nested_tensor_from_tensor_list": 1914, "_nested_tensor_s": 1914, "_nested_tensor_softmax_with_shap": 1914, "_nested_tensor_storage_offset": 1914, "_nested_tensor_strid": 1914, "_nested_view_from_buff": 1914, "_nested_view_from_buffer_copi": 1914, "_new_zeros_with_same_feature_meta": 1914, "_nnpack_avail": 1914, "_nnpack_spatial_convolut": 1914, "_no_grad_embedding_renorm": 1914, "_no_grad_fil": 1914, "_no_grad_norm": 1914, "_no_grad_uniform": 1914, "_no_grad_zero": 1914, "_pack_sequ": 1914, "_pad_circular": 1914, "_pad_enum": 1914, "_pdist_forward": [1914, 1952], "_pin_memori": 1914, "_prelu_kernel": 1914, "_propagate_xla_data": 1914, "_remove_batch_dim": 1914, "_reshape_alia": 1914, "_reshape_alias_copi": 1914, "_reshape_copi": 1914, "_resize_output": 1914, "_rowwise_prun": 1914, "_saturate_weight_to_fp16": 1914, "_scaled_dot_product_attention_math": 1914, "_scaled_dot_product_efficient_attent": 1914, "_scaled_dot_product_flash_attent": 1914, "_scaled_mm": 1914, "_size_if_not_equ": 1914, "_slow_conv2d_forward": 1914, "_sobol_engine_draw": 1914, "_sobol_engine_ff": 1914, "_sobol_engine_initialize_st": 1914, "_sobol_engine_scrambl": 1914, "_softmax": [1914, 1929, 1952], "_sparse_addmm": 1914, "_sparse_broadcast_to": 1914, "_sparse_broadcast_to_copi": 1914, "_sparse_bsc_tensor_unsaf": 1914, "_sparse_bsr_tensor_unsaf": 1914, "_sparse_compressed_tensor_unsaf": 1914, "_sparse_coo_tensor_unsaf": 1914, "_sparse_coo_tensor_with_dim": 1914, "_sparse_coo_tensor_with_dims_and_tensor": 1914, "_sparse_csc_tensor_unsaf": 1914, "_sparse_csr_prod": 1914, "_sparse_csr_sum": 1914, "_sparse_csr_tensor_unsaf": 1914, "_sparse_log_softmax": 1914, "_sparse_mask_project": 1914, "_sparse_mm": 1914, "_sparse_mm_reduce_impl": 1914, "_sparse_semi_structured_linear": 1914, "_sparse_softmax": 1914, "_sparse_sparse_matmul": 1914, "_sparse_sum": 1914, "_spdiag": 1914, "_standard_gamma_grad": 1914, "_tensor_to_list": 1914, "_test_ambiguous_default": 1914, "_test_autograd_multiple_dispatch": 1914, "_test_autograd_multiple_dispatch_view": 1914, "_test_autograd_multiple_dispatch_view_copi": 1914, "_test_check_tensor": 1914, "_test_functorch_fallback": 1914, "_test_optional_filled_intlist": 1914, "_test_optional_floatlist": 1914, "_test_optional_intlist": 1914, "_test_serialization_subcmul": 1914, "_test_string_default": 1914, "_test_warn_in_autograd": 1914, "_thnn_fused_gru_cel": 1914, "_thnn_fused_lstm_cel": 1914, "_to_copi": [1914, 1952], "_to_cpu": 1914, "_to_dens": 1914, "_to_spars": 1914, "_to_sparse_bsc": 1914, "_to_sparse_bsr": 1914, "_to_sparse_csc": 1914, "_to_sparse_csr": 1914, "_to_sparse_semi_structur": 1914, "_transform_bias_rescale_qkv": 1914, "_transformer_encoder_layer_fwd": 1914, "_trilinear": 1914, "_triton_multi_head_attent": 1914, "_triton_scaled_dot_attent": 1914, "_unpack_du": 1914, "_unsafe_index": 1914, "_unsafe_index_put": 1914, "_unsafe_view": 1914, "_unwrap_opt": 1914, "_upsample_bicubic2d_aa": 1914, "_upsample_bilinear2d_aa": 1914, "_upsample_nearest_exact1d": 1914, "_upsample_nearest_exact2d": 1914, "_upsample_nearest_exact3d": 1914, "_use_cudnn_ctc_loss": 1914, "_use_cudnn_rnn_flatten_weight": 1914, "_validate_compressed_sparse_indic": 1914, "_validate_sparse_bsc_tensor_arg": 1914, "_validate_sparse_bsr_tensor_arg": 1914, "_validate_sparse_compressed_tensor_arg": 1914, "_validate_sparse_coo_tensor_arg": 1914, "_validate_sparse_csc_tensor_arg": 1914, "_validate_sparse_csr_tensor_arg": 1914, "_values_copi": 1914, "_weight_norm_interfac": 1914, "capit": 1914, "confirmed_by_own": [1914, 1924], "convolution_overrid": 1914, "copy_sparse_to_spars": 1914, "endswith": 1914, "expandtab": 1914, "fake_quantize_per_channel_affine_cachemask": 1914, "fake_quantize_per_tensor_affine_cachemask": 1914, "fill_diagon": 1914, "glu_jvp": 1914, "has_torch_funct": [1914, 1958], "is_non_overlapping_and_dens": 1914, "is_own": [1914, 1924], "is_strides_like_format": 1914, "isalnum": 1914, "isalpha": 1914, "isdecim": 1914, "isdigit": 1914, "isidentifi": 1914, "islow": 1914, "isnumer": 1914, "isprint": 1914, "isspac": 1914, "istitl": 1914, "isupp": 1914, "lift_fresh": 1914, "ljust": 1914, "local_valu": [1914, 1917, 1924], "log_sigmoid_forward": 1914, "lstrip": 1914, "matrix_h": 1914, "nll_loss2d_forward": 1914, "nll_loss_forward": 1914, "normal_funct": 1914, "owner_nam": [1914, 1924], "percentformat": 1914, "quantized_gru": 1914, "quantized_lstm": 1914, "resize_as_spars": 1914, "rfind": 1914, "rindex": 1914, "rjust": 1914, "rpartit": 1914, "rsplit": 1914, "rstrip": 1914, "set_data": 1914, "slow_conv3d_forward": 1914, "sparse_res": 1914, "sparse_resize_and_clear": 1914, "splitlin": 1914, "swapcas": 1914, "sym_numel": [1914, 1952], "sym_storage_offset": [1914, 1952], "sym_strid": [1914, 1952], "unique_dim_consecut": 1914, "zfill": 1914, "_allgather_bas": 1914, "_reduce_scatter_bas": 1914, "allgath": 1914, "allgather_coalesc": 1914, "allgather_into_tensor_coalesc": 1914, "allreduce_coalesc": 1914, "alltoal": 1914, "alltoall_bas": 1914, "recv_any_sourc": 1914, "reduce_scatter_tensor_coalesc": 1914, "debugprim": 1914, "load_tensor": 1914, "_mm_plus_mm": 1914, "_mkl_linear": 1914, "_mkl_reorder_linear_weight": 1914, "_convolution_pointwis": 1914, "_convolution_transpose_pointwis": 1914, "_is_mkldnn_bf16_support": 1914, "_linear_pointwis": 1914, "_reorder_convolution_transpose_weight": 1914, "_reorder_convolution_weight": 1914, "_reorder_linear_weight": 1914, "_reorder_mkldnn_rnn_layer_weight": 1914, "mkldnn_prepack": 1914, "conv2d_run": 1914, "conv2d_clamp_prepack": 1914, "conv2d_clamp_run": 1914, "conv2d_transpose_clamp_prepack": 1914, "conv2d_transpose_clamp_run": 1914, "linear_clamp_prepack": 1914, "linear_clamp_run": 1914, "unpack_prepacked_sizes_conv2d": 1914, "unpack_prepacked_sizes_linear": 1914, "addstatvalu": 1914, "autogradadd": 1914, "autogradallnonzero": 1914, "autogradallzero": 1914, "autogradanynonzero": 1914, "autogradzero": 1914, "bailout": [1914, 1945], "bailouttempl": 1914, "broadcastmkldnntensor": 1914, "broadcasts": 1914, "chunksiz": 1914, "constantmkldnntensor": 1914, "differentiablegraph": 1914, "enumnam": 1914, "enumvalu": 1914, "fallbackgraph": 1914, "fusedconcat": 1914, "fusiongroup": 1914, "ifthenels": 1914, "ignoredpythonop": 1914, "mkldnnclamp": 1914, "mkldnnhardsigmoid": 1914, "mkldnnhardswish": 1914, "mkldnnhardtanh": 1914, "mkldnnlayernorm": 1914, "mkldnnscalarmul": 1914, "mmbatchsid": 1914, "mmtreereduc": 1914, "modulecontainerindex": 1914, "numtotensor": 1914, "raiseexcept": 1914, "reductions": 1914, "requiresgradcheck": 1914, "staticruntimecopyout": 1914, "staticsubgraph": 1914, "stringindex": 1914, "tensorexprdynamicgroup": 1914, "tensorexprdynamicguard": 1914, "tensorexprgroup": 1914, "timepoint": 1914, "tupleindex": 1914, "tupleunpack": 1914, "varconcat": 1914, "varstack": 1914, "awaitable_nowait": 1914, "awaitable_wait": 1914, "is_cpu": 1914, "is_ipu": 1914, "is_mkldnn": 1914, "is_mp": 1914, "is_nest": 1914, "is_ort": 1914, "is_quant": 1914, "is_vulkan": 1914, "is_xla": 1914, "is_xpu": 1914, "onednnfusiongroup": 1914, "onednnfusionguard": 1914, "profile_ivalu": 1914, "rangelist": 1914, "rpc_remot": 1914, "unchecked_unwrap_opt": 1914, "bessel_i0": [1914, 1952], "bessel_i1": [1914, 1952], "bessel_j0": [1914, 1929, 1952], "bessel_j1": [1914, 1929, 1952], "broadcast_in_dim": [1914, 1952], "cbrt": [1914, 1952], "collapse_view": [1914, 1952], "convert_element_typ": [1914, 1952], "copy_strid": [1914, 1952], "copy_to": [1914, 1952], "device_put": [1914, 1952], "erf_inv": [1914, 1952], "erfcx": [1914, 1929, 1952], "fft_c2c": [1914, 1952], "fft_c2r": [1914, 1952], "fft_r2c": [1914, 1952], "iota": [1914, 1952], "maximum_valu": [1914, 1952], "minimum_valu": [1914, 1952], "ndtri": [1914, 1929, 1952], "rev": [1914, 1952], "shift_left": [1914, 1952], "shift_right_arithmet": [1914, 1952], "slice_in_dim": [1914, 1952], "spherical_bessel_j0": [1914, 1929, 1952], "split_dim": [1914, 1952], "view_of": [1914, 1952], "xor_sum": [1914, 1952], "_call_end_callbacks_on_jit_fut": 1914, "_record_function_ent": 1914, "_record_function_enter_new": 1914, "_record_function_exit": 1914, "_bfloat16quantizedtofloat": 1914, "_floattobfloat16quant": 1914, "add_out": 1914, "add_relu_out": 1914, "add_scalar_out": 1914, "add_scalar_relu": 1914, "add_scalar_relu_out": 1914, "batch_norm1d": 1914, "batch_norm1d_relu": 1914, "batch_norm2d": 1914, "batch_norm2d_relu": 1914, "batch_norm3d": 1914, "batch_norm3d_relu": 1914, "batch_norm_relu": 1914, "cat_out": 1914, "cat_relu": 1914, "cat_relu_out": 1914, "conv1d_dynam": 1914, "conv1d_prepack": 1914, "conv1d_unpack": 1914, "conv2d_add": 1914, "conv2d_add_relu": 1914, "conv2d_dil": 1914, "conv2d_dynam": 1914, "conv2d_group": 1914, "conv2d_output_pad": 1914, "conv2d_pad": 1914, "conv2d_strid": 1914, "conv2d_transpos": 1914, "conv2d_unpack": 1914, "conv2d_unpack_s": 1914, "conv3d_dil": 1914, "conv3d_dynam": 1914, "conv3d_group": 1914, "conv3d_output_pad": 1914, "conv3d_pad": 1914, "conv3d_strid": 1914, "conv3d_transpos": 1914, "conv3d_unpack": 1914, "conv_prepack": 1914, "conv_transpose1d_dynam": 1914, "conv_transpose1d_unpack": 1914, "conv_transpose2d_dil": 1914, "conv_transpose2d_dynam": 1914, "conv_transpose2d_group": 1914, "conv_transpose2d_output_pad": 1914, "conv_transpose2d_pad": 1914, "conv_transpose2d_strid": 1914, "conv_transpose2d_transpos": 1914, "conv_transpose2d_unpack": 1914, "conv_transpose3d_dil": 1914, "conv_transpose3d_dynam": 1914, "conv_transpose3d_group": 1914, "conv_transpose3d_output_pad": 1914, "conv_transpose3d_pad": 1914, "conv_transpose3d_strid": 1914, "conv_transpose3d_transpos": 1914, "conv_transpose3d_unpack": 1914, "conv_unpack": 1914, "embedding_4bit": 1914, "embedding_bag_2bit_prepack": 1914, "embedding_bag_2bit_rowwise_offset": 1914, "embedding_bag_2bit_unpack": 1914, "embedding_bag_4bit": 1914, "embedding_bag_4bit_prepack": 1914, "embedding_bag_4bit_rowwise_offset": 1914, "embedding_bag_4bit_unpack": 1914, "embedding_bag_byt": 1914, "embedding_bag_byte_prepack": 1914, "embedding_bag_byte_rowwise_offset": 1914, "embedding_bag_byte_unpack": 1914, "embedding_bag_prepack": 1914, "embedding_bag_unpack": 1914, "embedding_byt": 1914, "linear_dynamic_fp16": 1914, "linear_leaky_relu": 1914, "linear_relu": [1914, 1921], "linear_relu_dynam": 1914, "linear_relu_dynamic_fp16": 1914, "linear_tanh": 1914, "linear_unpack": 1914, "linear_unpack_fp16": 1914, "linear_with_input_q_dq_qweight_dq_output_fp32": 1914, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1914, "make_quantized_cell_param": 1914, "make_quantized_cell_params_dynam": 1914, "make_quantized_cell_params_fp16": 1914, "mul_out": 1914, "mul_relu": 1914, "mul_relu_out": 1914, "mul_scalar_out": 1914, "mul_scalar_relu": 1914, "mul_scalar_relu_out": 1914, "quantized_gru_cell_dynam": 1914, "quantized_lstm_cell_dynam": 1914, "quantized_rnn_relu_cell_dynam": 1914, "quantized_rnn_tanh_cell_dynam": 1914, "rngprim": 1914, "philox_rand": 1914, "qlinear": 1914, "qlinear_dynam": 1914, "qlinear_prepack": 1914, "qlinear_relu": 1914, "qlinear_relu_dynam": 1914, "qlinear_unpack": 1914, "static_runtim": 1914, "vartupleunpack": 1914, "clamp_nan_to_num": 1914, "create_owned_ref": 1914, "dequantize_copi": 1914, "dict_unpack": 1914, "expand_dims_copi": 1914, "flatten_copi": 1914, "fused_equally_split": 1914, "reshape_copi": 1914, "select_tensor": 1914, "signed_log1p": 1914, "to_copi": 1914, "to_maybe_copy_out": 1914, "var1": 1915, "var2": 1915, "lbfg": 1915, "adadelta": 1915, "adamax": 1915, "asgd": 1915, "nadam": 1915, "radam": 1915, "rmsprop": 1915, "rprop": 1915, "reducelronplateau": 1915, "multisteplr": 1915, "upgrad": [1915, 1935], "swa_util": 1915, "averagedmodel": 1915, "swalr": 1915, "update_bn": 1915, "optima": 1915, "polyak": 1915, "averaged_model": 1915, "multi_avg_fn": 1915, "get_ema_multi_avg_fn": 1915, "textrm": 1915, "update_paramet": 1915, "avg_fn": 1915, "_foreach": 1915, "ema_model": 1915, "ema_avg": 1915, "averaged_model_paramet": 1915, "model_paramet": 1915, "num_averag": 1915, "swa_schedul": 1915, "anneal_epoch": 1915, "swa_lr": 1915, "swa_model": 1915, "cosineannealinglr": 1915, "swa_start": 1915, "test_input": 1915, "secur": 1916, "unpackag": 1916, "exercis": 1916, "unzip": 1916, "my_packag": 1916, "freeli": 1916, "94304870911616": 1916, "94304900784016": 1916, "extern_modul": 1916, "model_1": 1916, "pkl": 1916, "myzip": 1916, "file_byt": 1916, "writestr": 1916, "new_file_byt": 1916, "vim": 1916, "vimrc": 1916, "bufreadcmd": 1916, "brows": 1916, "amatch": 1916, "vi": 1916, "packageimport": 1916, "queryabl": 1916, "glob": 1916, "packageexport": 1916, "pe": 1916, "save_pickl": 1916, "has_fil": 1916, "importer_file_structur": 1916, "package_a": 1916, "get_rdep": 1916, "all_path": 1916, "dependency_graph_str": 1916, "save_text": 1916, "save_binari": 1916, "my_resourc": 1916, "config_stuff": 1916, "raw_data": 1916, "my_byt": 1916, "complementari": [1916, 1929], "load_pickl": 1916, "load_text": 1916, "load_binari": 1916, "my_tensor": 1916, "__reduce_package__": 1916, "my_str": 1916, "time_import": 1916, "time_export": 1916, "pickler": 1916, "persistent_id": 1916, "persistent_load": 1916, "generated_module_nam": 1916, "get_unique_id": 1916, "clock_gettim": 1916, "unpackage_foo": 1916, "depickl": 1916, "foo_1": 1916, "foo_2": 1916, "foo_packag": 1916, "foo_collect": 1916, "foo1": 1916, "foo2": 1916, "imported_foo": 1916, "9857706": 1916, "650140837": 1916, "652698385": 1916, "__torch_package__": 1916, "is_in_packag": 1916, "userexcept": 1916, "unpackageableexcept": 1916, "loaded_modul": 1916, "import_modul": 1916, "save_source_str": 1916, "save_modul": 1916, "textwrap": 1916, "dedent": 1916, "my_funct": 1916, "is_packag": 1916, "importlib": 1916, "my_pickl": 1916, "get_my_resourc": 1916, "read_text": 1916, "torch_package_import": 1916, "get_my_pickl": 1916, "is_from_packag": 1916, "stdlib": 1916, "my_test": 1916, "f2": [1916, 1917], "sys_import": 1916, "script_model": 1916, "mixed_model": 1916, "python_model_with_scripted_submodul": 1916, "loaded_script": 1916, "loaded_mix": 1916, "convention": 1916, "94286146172688": 1916, "94286146172784": 1916, "consult": [1916, 1945], "essai": 1916, "another_packag": 1916, "pickletool": 1916, "ast": 1916, "deni": 1916, "my_export": 1916, "my_interned_modul": 1916, "package_export": 1916, "my_externed_modul": 1916, "my_mocked_modul": 1916, "unwant": [1916, 1933], "hodg": 1916, "podg": 1916, "bazel": 1916, "buck": 1916, "my_class_inst": 1916, "imported_myclass": 1916, "okai": 1916, "torch_package_0": 1916, "handle_me_this_wai": 1916, "inadvert": 1916, "pun": 1916, "packagingerror": 1916, "dependency_graph": 1916, "emptymatcherror": 1916, "allow_empti": 1916, "_sysimport": 1916, "hermet": 1916, "scan": 1916, "orderedimport": 1916, "add_depend": 1916, "graphviz": 1916, "lang": 1916, "denied_modul": 1916, "my_subpackag": 1916, "digraph": 1916, "externed_modul": 1916, "interned_modul": 1916, "mocked_modul": 1916, "register_extern_hook": 1916, "register_intern_hook": 1916, "register_mock_hook": 1916, "myobject": 1916, "save_source_fil": 1916, "file_or_directori": 1916, "my_subsubpackag": 1916, "file_or_buff": 1916, "module_allow": 1916, "pytorchfileread": 1916, "python_vers": 1916, "is_dir": 1916, "gpipe": 1917, "suffer": 1917, "allevi": [1917, 1947], "microbatch": 1917, "bubbl": 1917, "except_last": 1917, "deferred_batch_norm": 1917, "torchgpip": 1917, "withdevic": 1917, "micro": 1917, "fc": [1917, 1919], "init_rpc": [1917, 1924, 1925], "output_rref": 1917, "fed": [1917, 1933], "nochunk": 1917, "resnext": 1917, "till": 1917, "skippabl": 1917, "1to3": 1917, "layer1": 1917, "f1": 1917, "layer2": 1917, "layer3": 1917, "skip_1to3": 1917, "f3": 1917, "alic": 1917, "bob": 1917, "carol": 1917, "stashstashpop": 1917, "f_alic": 1917, "f_bob": 1917, "verify_skipp": 1917, "unmatch": [1917, 1938], "fairscal": 1917, "_kinetoprofil": 1918, "profileract": 1918, "add_metadata": 1918, "add_metadata_json": 1918, "unaggreg": 1918, "export_chrome_trac": [1918, 1955], "export_memory_timelin": 1918, "gzip": 1918, "export_stack": 1918, "self_cuda_time_tot": 1918, "flamegraph": 1918, "brendangregg": 1918, "pl": 1918, "countnam": 1918, "perf_viz": 1918, "svg": 1918, "on_trace_readi": 1918, "record_and_sav": 1918, "tensorboard_trace_handl": 1918, "dir_nam": 1918, "logdir": [1918, 1933], "plugin": [1918, 1933, 1943], "code_to_profil": 1918, "row_limit": 1918, "trace_handl": 1918, "test_trace_": 1918, "step_num": 1918, "code_iteration_to_profil": 1918, "mtia": 1918, "skip_first": 1918, "worker_nam": [1918, 1924], "use_gzip": 1918, "range_push": 1918, "range_pop": 1918, "4x": 1919, "broadli": 1919, "previous_layer_fp32": 1919, "linear_fp32": 1919, "activation_fp32": 1919, "next_layer_fp32": 1919, "linear_weight_fp32": 1919, "linear_int8_w_fp32_inp": 1919, "linear_weight_int8": 1919, "ptdq": 1919, "model_fp32": 1919, "model_int8": 1919, "quantize_dynam": 1919, "input_fp32": 1919, "previous_layer_int8": 1919, "linear_with_activation_int8": 1919, "next_layer_int8": 1919, "ptsq": 1919, "minmax": 1919, "l2norm": 1919, "model_fp32_fus": 1919, "fuse_modul": [1919, 1920], "model_fp32_prepar": 1919, "fq": 1919, "prepare_qat": 1919, "training_loop": 1919, "requant": 1919, "linear1": 1919, "custom_qconfig": 1919, "fxptq": 1919, "model_fp": 1919, "usermodel": 1919, "model_to_quant": 1919, "default_dynamic_qconfig": 1919, "model_prepar": 1919, "model_quant": 1919, "model_fus": 1919, "per_tensor_symmetr": [1919, 1922], "per_channel_symmetr": [1919, 1922], "per_channel_scal": 1919, "per_channel_zero_point": 1919, "quantized_tensor": 1919, "qengin": 1919, "in4": 1919, "tensorrt": [1919, 1939, 1943, 1947], "fx2trt": 1919, "float_modul": [1919, 1937], "staticquantcustommodul": 1919, "observed_modul": 1919, "default_qconfig": [1919, 1938], "vnni": 1919, "test_quantized_op": 1919, "testquantizedop": 1919, "test_custom_module_lstm": 1919, "test_quantize_fx": 1919, "testquantizefx": 1919, "test_static_lstm": 1919, "some_oper": 1919, "e2": 1919, "thnn_conv2d_forward": 1919, "quantizedcpu": 1919, "some_qconfig": 1919, "linearpackedparam": 1919, "_modul": 1919, "prepare_orig": 1919, "quantized_orig": 1919, "scripted_quant": 1919, "fp32_op": 1920, "int8_op": 1920, "cooperlak": 1920, "audit": 1920, "op_fp32": 1920, "op_int8": 1920, "_numeric_suit": 1920, "_numeric_suite_fx": 1920, "0x7f91ae1e2540": 1921, "0x7f91992f2dc0": 1921, "0x7f91992f2e50": 1921, "num_tensor_args_to_observation_typ": 1921, "convbn1d": 1921, "0x7f9198630040": 1921, "reference_quantized_module_for_root": 1921, "fuse_convtranspose_bn": 1921, "0x7f91986301f0": 1921, "linearbn1d": 1921, "fuse_linear_bn": 1921, "0x7f9198630160": 1921, "convbn2d": 1921, "convbn3d": 1921, "bnrelu2d": 1921, "bnrelu3d": 1921, "input_type_to_index": 1921, "conv_fus": 1921, "convbnrelu1d": 1921, "convbnrelu2d": 1921, "convbnrelu3d": 1921, "convrelu1d": 1921, "convrelu3d": 1921, "0x7f91992f2ee0": 1921, "0x7f91992f4550": 1921, "quint4x2": [1921, 1930, 1934, 1935], "embedding_op": 1921, "0x7f91992f7430": 1921, "00390625": 1921, "0x7f91992f4d30": 1921, "0x7f91992f4ee0": 1921, "0x7f91992f4430": 1921, "0x7f91992f7310": 1921, "0x7f9199272a60": 1921, "0x7f91992f73a0": 1921, "0x7f91992f4700": 1921, "linear_fus": 1921, "_sequential_wrapper2": 1921, "0x7f91b5334430": 1921, "0x7f91992f4310": 1921, "0x7f9196753280": 1921, "fuse_conv_bn_relu": 1921, "0x7f91986300d0": 1921, "0x7f9196753310": 1921, "0x7f91967533a0": 1921, "0x7f9196753430": 1921, "0x7f91967534c0": 1921, "0x7f9196753550": 1921, "0x7f91967535e0": 1921, "0x7f9196753670": 1921, "0x7f9196753700": 1921, "0x7f9196753790": 1921, "0x7f9196753820": 1921, "0x7f91992f44c0": 1921, "0078125": 1921, "customconfig": 1922, "custom_module_config": 1922, "_caller": 1923, "_devices_kw": 1923, "slowli": 1923, "unind": 1923, "deivce_typ": 1923, "shortcom": 1924, "stitch": 1924, "rpc_backend_opt": 1924, "trainer3": 1924, "parameterserver2": 1924, "dash": [1924, 1926], "backendtyp": 1924, "rpcbackendopt": 1924, "rpcagent": 1924, "transmit": 1924, "calle": [1924, 1926], "_set_rpc_timeout": 1924, "5678": 1924, "worker0": 1924, "my_script_add": 1924, "wire": 1924, "fut2": 1924, "meth": 1924, "grace": 1924, "pend": [1924, 1933, 1942], "userrref": [1924, 1926], "async_execut": 1924, "paus": 1924, "outmost": 1924, "async_add_chain": 1924, "worker2": 1924, "script_add": 1924, "async_add": 1924, "asyncexecutionclass": 1924, "static_async_add": 1924, "class_async_add": 1924, "ret_fut": 1924, "bound_async_add": 1924, "rpc_timeout": 1924, "incid": [1924, 1926], "nvlink": 1924, "multiplex": 1924, "tensorpiperpcbackendopt": 1924, "num_worker_thread": 1924, "device_map": 1924, "_transport": 1924, "tensorpipeag": 1924, "set_device_map": 1924, "intermitt": 1924, "pyrref": 1924, "type_hint": 1924, "_distributed_rpc": 1924, "dist_autograd_ctx_id": 1924, "ctx_id": 1924, "ownerrref": [1924, 1926], "remote_modul": 1924, "forward_async": 1924, "remote_devic": 1924, "workernam": 1924, "trainer0": 1924, "ps0": 1924, "remote_linear_modul": 1924, "get_module_rref": 1924, "remote_paramet": 1924, "my_add": [1925, 1958], "t4": 1925, "t5": 1925, "autograd_message_id": 1925, "autograd_context_id": 1925, "send1": 1925, "kickoff": 1925, "recv2": 1925, "heard": 1925, "send2": 1925, "recv1": 1925, "dist_autograd_simpl": 1925, "random_tensor": 1925, "_run_process": 1925, "dst_rank": 1925, "dst_name": 1925, "run_process": 1925, "rrefid": 1926, "transient": 1926, "udf": 1926, "deliveri": 1926, "knowledg": 1926, "danger": 1926, "ancestor": 1926, "trickier": 1926, "wouldn": [1926, 1946], "forkid": 1926, "ack": 1926, "solid": 1926, "gc": 1926, "followup": 1926, "lil": 1928, "stark": 1928, "9093": 1928, "1411": 1928, "7568": 1928, "9589": 1928, "2794": 1928, "catastroph": 1928, "9900": 1928, "sturctur": 1928, "metadata_mask": 1928, "rce": 1928, "rc": 1928, "62": 1928, "to_sparse_semi_structur": 1928, "1x4": 1928, "16x16": 1928, "a_spars": 1928, "sparsesemistructuredtensor": 1928, "000": 1928, "400": 1928, "s2": 1928, "plain_dim_s": 1928, "lp64": 1928, "280": 1928, "310": 1928, "sp": 1928, "9078": 1928, "conception": 1928, "sparsesemistructur": 1928, "lobpcg": 1928, "geneig": 1928, "pca_lowrank": 1928, "kindli": 1928, "airy_ai": 1929, "airi": 1929, "onward": 1929, "9635": 1929, "entr": 1929, "3466": 1929, "int_": 1929, "8427": 1929, "0561": 1929, "4769": 1929, "9213": 1929, "8858": 1929, "7683": 1929, "7481": 1929, "2920": 1929, "int_0": 1929, "gammaln": 1929, "a1": 1929, "a2": 1929, "3528": 1929, "5665": 1929, "6472": 1929, "4335": 1929, "2650": 1929, "2661": 1929, "2796": 1929, "8808": 1929, "3019": 1929, "4658": 1929, "3085": 1929, "2430": 1929, "2070": 1929, "i1": 1929, "5652": 1929, "9534": 1929, "7595": 1929, "2153": 1929, "log_ndtr": 1929, "_ndtr": 1929, "6077": 1929, "7832": 1929, "841": 1929, "6931": 1929, "1728": 1929, "023": 1929, "9331": 1929, "6486": 1929, "1523": 1929, "6516": 1929, "6352": 1929, "6131": 1929, "7169": 1929, "6261": 1929, "displaystyl": 1929, "undefiend": 1929, "6835": 1929, "8474": 1929, "1929": 1929, "7162": 1929, "4180": 1929, "3928": 1929, "4007": 1929, "7586": 1929, "3901": 1929, "5049": 1929, "ndtr": 1929, "0228": 1929, "1587": 1929, "9772": 1929, "9987": 1929, "2p": 1929, "64493": 1929, "4041": 1929, "8288": 1929, "4939": 1929, "97": 1929, "4091": 1929, "8863": 1929, "771": 1929, "scaled_modified_bessel_k0": 1929, "scaled_modified_bessel_k1": 1929, "2948": 1929, "0267": 1929, "1566": 1929, "9186": 1929, "8631": 1929, "0259": 1929, "1300": 1929, "spheric": 1929, "xlog1pi": 1929, "3863": 1929, "1972": 1929, "6094": 1929, "2189": 1929, "8283": 1929, "7726": 1929, "0986": 1929, "1589": 1929, "hurwitz": 1929, "6449": 1929, "0823": 1929, "untyp": 1930, "wrap_storag": 1930, "complex_doubl": 1930, "from_buff": 1930, "is_hpu": 1930, "pickle_storage_typ": 1930, "byteswap": 1930, "quint2x4": [1930, 1935], "twelv": 1931, "halftensor": [1931, 1934], "bfloat16tensor": [1931, 1934], "chartensor": [1931, 1934], "shorttensor": [1931, 1934], "binary16": [1931, 1934], "significand": [1931, 1934], "float_tensor": 1931, "double_tensor": 1931, "complex_float_tensor": 1931, "complex_double_tensor": 1931, "int_tensor": 1931, "long_tensor": 1931, "uint_tensor": 1931, "bool_tensor": 1931, "long_zerodim": 1931, "int_zerodim": 1931, "set_default_devic": 1931, "cuda1": 1931, "nhwc": [1931, 1933], "channels_last_3d": 1931, "ndhwc": 1931, "blogpost": 1932, "totensor": 1933, "trainset": 1933, "mnist": 1933, "mnist_train": 1933, "trainload": 1933, "grayscal": 1933, "make_grid": 1933, "add_imag": 1933, "add_graph": 1933, "clutter": 1933, "n_iter": 1933, "purge_step": 1933, "max_queu": 1933, "flush_sec": 1933, "filename_suffix": 1933, "current_datetime_hostnam": 1933, "exp1": 1933, "global_step": 1933, "purg": 1933, "event_file_writ": 1933, "eventfilewrit": 1933, "may04_22": 1933, "54_": 1933, "macbook": 1933, "my_experi": 1933, "lr_0": 1933, "1_batch_16": 1933, "locallr_0": 1933, "scalar_valu": 1933, "walltim": 1933, "new_styl": 1933, "double_precis": 1933, "blobnam": 1933, "simple_valu": 1933, "2x": [1933, 1951], "main_tag": 1933, "tag_scalar_dict": 1933, "run_14h": 1933, "xsinx": 1933, "xcosx": 1933, "tanx": 1933, "add_histogram": 1933, "max_bin": 1933, "fd": 1933, "img_tensor": 1933, "dataformat": 1933, "chw": 1933, "hwc": 1933, "hw": 1933, "wh": 1933, "3xhxw": 1933, "img_hwc": 1933, "my_imag": 1933, "my_image_hwc": 1933, "img_batch": 1933, "my_image_batch": 1933, "add_figur": 1933, "add_video": 1933, "vid_tensor": 1933, "fp": 1933, "moviepi": 1933, "add_audio": 1933, "snd_tensor": 1933, "sample_r": 1933, "44100": 1933, "add_text": 1933, "text_str": 1933, "input_to_model": 1933, "use_strict_trac": 1933, "add_embed": 1933, "label_img": 1933, "metadata_head": 1933, "projector": 1933, "kwlist": 1933, "add_pr_curv": 1933, "num_threshold": 1933, "pr_curv": 1933, "add_custom_scalar": 1933, "chart": 1933, "categorynam": 1933, "chartnam": 1933, "listofproperti": 1933, "multilin": 1933, "taiwan": 1933, "twse": 1933, "0050": 1933, "2330": 1933, "dow": 1933, "aaa": 1933, "bbb": 1933, "ccc": 1933, "nasdaq": 1933, "add_mesh": 1933, "config_dict": 1933, "threej": 1933, "vertex": 1933, "number_of_vertic": 1933, "vertices_tensor": 1933, "colors_tensor": 1933, "faces_tensor": 1933, "my_mesh": 1933, "add_hparam": 1933, "hparam_dict": 1933, "metric_dict": 1933, "hparam_domain_discret": 1933, "run_nam": 1933, "hparam": 1933, "bsize": 1933, "tini": [1934, 1935, 1951, 1960], "_like": 1934, "allow_subclass": 1935, "check_devic": 1935, "check_layout": 1935, "6e": 1935, "3e": 1935, "assert_equ": 1935, "000000000000001e": 1935, "1e0": 1935, "argh": 1935, "nfooter": 1935, "66": 1935, "footer": 1935, "exclude_zero": 1935, "1205": 1935, "2282": 1935, "6380": 1935, "default_gener": 1936, "click": [1936, 1954, 1955], "data_dependent_output": 1936, "dynamic_output_shap": 1936, "inplace_view": 1936, "nondeterministic_bitwis": 1936, "nondeterministic_seed": 1936, "compare_weight": 1937, "float_dict": 1937, "quantized_dict": 1937, "wt_compare_dict": 1937, "qmodel": 1937, "compute_error": 1937, "weight_dict": 1937, "get_logger_dict": 1937, "shadowlogg": 1937, "outputlogg": [1937, 1938], "target_dict": 1937, "q_modul": 1937, "logger_cl": [1937, 1938], "prepare_model_with_stub": 1937, "module_swap_list": 1937, "q_model": 1937, "ob_dict": 1937, "compare_model_stub": 1937, "quantizablebasicblock": 1937, "get_matching_activ": 1937, "act_dict": 1937, "prepare_model_output": 1937, "compare_model_output": 1937, "act_compare_dict": 1937, "weight_comparison": 1938, "extract_weight": 1938, "sqnr": 1938, "extend_logger_results_with_comparison": 1938, "compute_sqnr": 1938, "mp_n": 1938, "mq_n": 1938, "add_logg": 1938, "act_comparison": 1938, "extract_logger_info": 1938, "mp_shadows_mq": 1938, "add_shadow_logg": 1938, "shadow_act_comparison": 1938, "extract_shadow_logger_info": 1938, "ref_node_nam": 1938, "prev_node_nam": 1938, "model_nam": 1938, "ref_nam": 1938, "prev_node_target_typ": 1938, "ref_node_target_typ": 1938, "results_typ": 1938, "index_within_arg": 1938, "index_of_arg": 1938, "qconfig_str": 1938, "outputcomparisonlogg": 1938, "x_ref": 1938, "nstracer": 1938, "skipped_module_nam": 1938, "skipped_module_class": 1938, "model_name_a": 1938, "model_a": 1938, "model_name_b": 1938, "model_b": 1938, "base_name_to_sets_of_related_op": 1938, "unmatchable_types_map": 1938, "op_to_type_to_weight_extraction_fn": 1938, "nsresultstyp": 1938, "name_a": 1938, "name_b": 1938, "should_log_input": 1938, "model_a_with_logg": 1938, "model_b_with_logg": 1938, "model_name_to_use_for_layer_nam": 1938, "node_type_to_io_type_map": 1938, "model_a_shadows_b": 1938, "model_name_1": 1938, "model_name_2": 1938, "comparison_fn": 1938, "comparison_nam": 1938, "prepare_n_shadows_model": 1938, "qconfig_multi_map": 1938, "custom_prepare_fn": 1938, "custom_prepare_kwarg": 1938, "custom_trac": 1938, "args_kwargs_m": 1938, "op_m": 1938, "output_m": 1938, "op_m_n": 1938, "log_m_n": 1938, "log_m_0": 1938, "qconfig_n": 1938, "args_m": 1938, "op_m_prepared_with_qconfig_n": 1938, "out_m_n": 1938, "kwargs_m": 1938, "docblock": 1938, "loggers_set_en": 1938, "loggers_set_save_activ": 1938, "save_activ": 1938, "convert_n_shadows_model": 1938, "custom_convert_fn": 1938, "custom_convert_kwarg": 1938, "extract_results_n_shadows_model": 1938, "print_comparisons_n_shadows_model": 1938, "compute_normalized_l2_error": 1938, "compute_cosine_similar": 1938, "surfac": 1939, "openai": 1939, "onnxrt": 1939, "ipex": 1939, "tvm": 1939, "apach": 1939, "dashboard": [1939, 1944, 1951], "nnmodul": 1939, "simd": 1941, "slot": [1941, 1958], "isa": 1941, "amx": 1941, "collect_env": 1941, "avx512f": 1941, "avx512bw": 1941, "avx512_vnni": 1941, "amx_til": 1941, "amx_bf16": 1941, "amx_int8": 1941, "debut": 1942, "cachingalloc": 1942, "cudagraph_tre": 1942, "footgun": [1942, 1946], "my_custom_backend": 1943, "f_opt": 1943, "my_compil": [1943, 1944, 1950], "torch_dynamo_backend": 1943, "your_modul": 1943, "minifi": [1943, 1947], "aot_autograd": 1943, "fw_compil": 1943, "bw_compil": 1943, "make_boxed_func": 1943, "model_opt": 1943, "0x7f1a894649a8": 1943, "mockmodul": 1943, "optimized_mod": 1943, "toy_exampl": [1943, 1944, 1947, 1950, 1957], "abs_1": [1943, 1944], "0x7f8d259298a0": 1943, "superior": 1943, "optimize_for_inference_compil": 1943, "code_to_acceler": 1943, "trt_compil": 1943, "inductor_compil": 1943, "523": 1944, "kaichao": 1944, "tensor_match": 1944, "function_match": 1944, "recaptur": 1944, "__compiled_fn_0": 1944, "eval_with_kei": 1944, "0x7f9ca082f8a0": 1944, "load_fast": [1944, 1950], "load_glob": 1944, "load_method": 1944, "load_const": [1944, 1950], "binary_add": 1944, "binary_true_divid": 1944, "store_fast": 1944, "compare_op": 1944, "pop_jump_if_fals": 1944, "binary_multipli": [1944, 1950], "unpack_sequ": 1944, "__resume_at_30_1": 1944, "__resume_at_38_2": 1944, "__resume_at_": 1944, "jump_absolut": 1944, "resume_at": 1944, "eval_fram": 1944, "_debug_get_cache_entry_list": 1944, "__code__": 1944, "codetyp": 1944, "cache_entri": 1944, "_torchdynamo_orig_cal": 1944, "getfullargspec": 1944, "compiled_exampl": 1944, "b_sum_less_than_0": 1944, "symbolic_shap": 1945, "recognit": 1945, "jag": 1945, "induct": 1945, "pt2": [1945, 1946], "mark_dynam": 1945, "automatic_dynamic_shap": 1945, "proactiv": 1945, "shapeenv": [1945, 1946], "faithfulli": 1945, "sympi": 1945, "reusabl": 1945, "plumb": 1945, "symnodeimpl": 1945, "python_symnod": 1945, "_meta_registr": 1945, "decomp": [1945, 1946], "primtorch": [1945, 1946], "symnod": 1945, "apparatu": 1945, "precomput": 1945, "constrain_rang": 1945, "wherebi": 1945, "trash": 1946, "bunch": 1946, "from_real_tensor": 1946, "fakeifi": 1946, "dispatch_devic": 1946, "ly": 1946, "derefer": 1946, "backtrac": 1946, "in_kernel_invocation_manag": 1946, "unwrap": 1946, "test_fake_tensor": 1946, "fake_mod": 1946, "fake_x": 1946, "fake_i": 1946, "fake_z": 1946, "_guard": 1946, "detect_fake_mod": 1946, "fake_arg": 1946, "lifecycl": [1946, 1950], "maybe_disable_fake_tensor_mod": 1946, "nich": 1946, "faketensorprop": 1946, "fake_tensor_prop": 1946, "propagate_dont_convert_input": 1946, "fake_input": 1946, "real_tensor": 1946, "annoi": 1946, "somehow": 1946, "fakecopymod": 1946, "gave": 1946, "fakeif": 1946, "tension": 1946, "analys": 1946, "hopefulli": 1946, "impl_abstract": 1946, "hardcod": 1946, "metaconvert": 1946, "die": 1946, "unback": 1946, "saroufim": 1947, "evalfram": 1947, "usercod": 1947, "rob": 1947, "diminish": 1947, "vast": 1947, "nopython": [1947, 1950, 1957], "250k": 1947, "aitempl": 1947, "aot_eag": [1947, 1957], "compile_tim": [1947, 1955, 1957], "torch_compile_debug": [1947, 1949], "troubl": [1947, 1948, 1957], "compileprofil": [1947, 1957], "profiler_model": [1947, 1957], "traffic": 1947, "frozen_toy_exampl": 1947, "multiprocessor": 1947, "some_fun": [1947, 1957], "insurmount": [1947, 1957], "woo": [1947, 1957], "out_guard": [1947, 1957], "ops_per_graph": [1947, 1957], "builtinvari": [1947, 1957], "constantvari": [1947, 1950, 1957], "generic_jump": [1947, 1957], "torchdynamo_dynamic_shap": 1947, "cv": 1947, "app": 1947, "unnecessarili": 1947, "cold": [1947, 1954], "visibli": 1947, "torchdynamo_repro_level": [1947, 1957], "bisect": [1947, 1957], "torchdynamo_repro_aft": [1947, 1957], "dramat": [1947, 1957], "uncommon": 1947, "a_fn": [1947, 1948], "aa_fn": [1947, 1948], "ab_fn": [1947, 1948], "handel": 1948, "unblock": 1948, "nnthi": 1948, "black": 1948, "nnnote": 1948, "screen": [1948, 1955], "b_fn": 1948, "white": 1948, "new_fn": 1949, "famou": 1949, "crunch": 1949, "torchinductor_": 1949, "your_usernam": 1949, "size_hint": 1949, "i32": 1949, "instance_descriptor": 1949, "divisible_by_16": 1949, "equal_to_1": 1949, "in_ptr0": 1949, "out_ptr0": 1949, "xnumel": 1949, "xblock": 1949, "tl": 1949, "constexpr": 1949, "xoffset": 1949, "program_id": 1949, "xindex": 1949, "xmask": 1949, "tmp0": 1949, "tmp1": 1949, "tmp2": 1949, "tmp3": 1949, "v0": 1949, "opt_model": 1949, "timm": [1949, 1954], "huggingfac": [1949, 1954], "berttoken": 1949, "bertmodel": 1949, "uncas": 1949, "me": 1949, "encoded_input": 1949, "return_tensor": 1949, "trigonometri": 1949, "skim": 1949, "create_model": 1949, "resnext101_32x8d": 1949, "fn_foo": 1950, "grab": 1950, "dig": 1950, "hole": 1950, "neutral": 1950, "check_fn": 1950, "_pyinterpreterstate_setevalframefunc": 1950, "convert_fram": [1950, 1957], "convert_frame_assert": 1950, "gloss": 1950, "222": 1950, "compiler_fn": 1950, "one_graph": 1950, "_convert_frame_assert": 1950, "frametyp": 1950, "f_code": 1950, "needless": 1950, "evict": 1950, "transform_code_object": 1950, "output_instruct": 1950, "guardedcod": 1950, "symbolic_loc": 1950, "f_local": 1950, "variablebuild": 1950, "localsourc": 1950, "_wrap": 1950, "variabletrack": 1950, "make_guard": 1950, "pump": 1950, "cool": 1950, "get_instruct": 1950, "124": 1950, "opnam": 1950, "argval": 1950, "starts_lin": 1950, "is_jump_target": 1950, "inst": 1950, "unimpl": 1950, "dozen": 1950, "symbolic_convert": [1950, 1957], "spoken": 1950, "quiet": 1950, "replace_guard": 1950, "add_guard": 1950, "behalf": 1950, "python_typ": 1950, "as_proxi": 1950, "as_python_proxi": 1950, "bookkeep": 1950, "came": 1950, "flesh": 1950, "relianc": 1950, "build_tupl": 1950, "popn": 1950, "tuplevari": 1950, "pydoc": 1950, "tensorvari": 1950, "instructiontranslatorbas": 1950, "ctor": 1950, "guardsourc": 1950, "create_fn": 1950, "guard_sourc": 1950, "istyp": 1950, "guardbuild": 1950, "equals_match": 1950, "rangevari": 1950, "appar": 1950, "checkfunctionmanag": 1950, "compile_check_fn": 1950, "cacheentri": 1950, "create_cache_entri": 1950, "pyobject": 1950, "guarded_cod": 1950, "malloc": [1950, 1959], "debug_null_check": 1950, "pyobject_getattrstr": 1950, "null_check": 1950, "pycodeobject": 1950, "sort_kei": 1950, "guard_nn_modul": 1950, "is_nn_modul": 1950, "local_build": 1950, "global_build": 1950, "___guarded_cod": 1950, "___check_type_id": 1950, "94367738391392": 1950, "___check_tensor": 1950, "_eval_fram": 1950, "anew": 1950, "massiv": 1950, "weak": 1950, "moduleinvalid": 1950, "torchinductor_unique_kernel_nam": 1951, "triton_poi_fused_cat_155": 1951, "poi": 1951, "torchinductor_benchmark_kernel": 1951, "har": 1951, "torchinductor_max_autotun": 1951, "mixnet_l": 1951, "timm_model": 1951, "torchinductor_shunt": 1951, "qz": 1951, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 1951, "shunting314": 1951, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 1951, "48efc83b12ec3ead950052e4a0220b10": 1951, "compiled_module_profil": 1951, "browser": [1951, 1955], "zoom": [1951, 1955, 1959], "88": 1951, "distort": [1951, 1955], "densenet121": 1951, "69": 1951, "cutlass": 1951, "57": 1951, "ff": 1951, "justifi": 1951, "triton_red_fus": 1951, "__native_batch_norm_legit_functional_16": 1951, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 1951, "_adaptive_avg_pool2d_backward": 1952, "half_to_float": 1952, "no_stat": 1952, "scalartyp": 1952, "memoryformat": 1952, "start_step": 1952, "avg_pool2d_backward": 1952, "convolution_backward": 1952, "bias_siz": 1952, "output_mask": 1952, "embedding_dense_backward": 1952, "num_weight": 1952, "max_pool2d_with_indices_backward": 1952, "native_group_norm_backward": 1952, "rstd": 1952, "native_layer_norm_backward": 1952, "tensor_scalar": 1952, "tensor_tensor": 1952, "dim_int": 1952, "dim_intlist": 1952, "broadcast_dimens": 1952, "start_indic": 1952, "limit_indic": 1952, "start_index": 1952, "limit_index": 1952, "outer_length": 1952, "constabl": 1953, "orchestr": 1953, "_forward_pre_hook": 1953, "_backward_pre_hook": 1953, "_backward_hook": 1953, "_state_dict_hook": 1953, "load_": 1953, "avoiabl": 1953, "skip_nnmodule_hook_guard": 1953, "pre_backward": 1953, "warn_onc": 1953, "hui": 1954, "nightli": 1954, "a100": [1954, 1957], "night": 1954, "40gb": [1954, 1957], "2ghz": 1954, "torchbench": 1954, "trend": 1954, "droplist": 1954, "with_cudagraph": 1954, "toosl": 1955, "ncu": 1955, "model_c": 1955, "fwd_bwd": 1955, "scroll": 1955, "shortcut": 1955, "compiledfunct": 1955, "compiledfunctionbackward": 1955, "ac2g": 1955, "dropdown": 1955, "525": 1955, "_init_for_cuda_graph": 1955, "warmup_compil": 1955, "fn_c": 1955, "record_funct": 1955, "trace_compil": 1955, "synthet": 1955, "modelwithbreak": 1955, "create_sequenti": 1955, "mod1": 1955, "mod2": 1955, "mod3": 1955, "mod4": 1955, "trace_break": 1955, "sit": 1956, "replace_add_with_mul": 1956, "insert_relu_after_add": 1956, "new_relu_nod": 1956, "replaceaddwithmul": 1956, "transformed_graph_modul": 1956, "replaceaddwithmulsub": 1956, "mul_r": 1956, "removedetachpass": 1956, "args_map": 1956, "_schema": 1956, "kwarg_onli": 1956, "scalartotensorpass": 1956, "try_coerc": 1956, "replace_pattern": 1956, "replaced_pattern": 1956, "replace_pattern_with_filt": 1956, "replacedpattern": 1956, "passmanag": 1956, "pass_manag": 1956, "pm": 1956, "replace_add_with_div": 1956, "replace_div_with_mul": 1956, "run_checks_after_each_pass": 1956, "suppress_check_failur": 1956, "graph_module_out": 1956, "set_check": 1956, "check_div_target": 1956, "add_check": 1956, "subgraphmatch": 1956, "matcher_util": 1956, "match_output": 1956, "match_placehold": 1956, "remove_overlapping_match": 1956, "ignore_liter": 1956, "largemodel": 1956, "_bia": 1956, "large_model_graph": 1956, "patternmodel": 1956, "_weight_1": 1956, "_bias_1": 1956, "pattern_graph": 1956, "subgraph_match": 1956, "match_result": 1956, "internalmatch": 1956, "default_factori": 1956, "placeholder_nod": 1956, "returning_nod": 1956, "capabilitybasedpartition": 1956, "l34": 1956, "operator_support": 1956, "operatorsupportbas": 1956, "allows_single_node_partit": 1956, "non_compute_op": 1956, "_oper": 1956, "allowed_single_node_partition_op": 1956, "ll28c1": 1956, "l28c1": 1956, "is_node_support": 1956, "operatorsuppportbas": 1956, "l150": 1956, "any_chain": 1956, "l164": 1956, "addmuloperatorsupport": 1956, "capability_partition": 1956, "op_support": 1956, "partition_list": 1956, "propose_partit": 1956, "fused_graph_modul": 1956, "fuse_partit": 1956, "lazo": 1957, "torchdynamo_verbos": 1957, "replay_record_en": 1957, "torchdynamo_debug_funct": 1957, "test_assertion_error": 1957, "compiled_test_assertion_error": 1957, "mlazo": 1957, "837": 1957, "build_map": 1957, "thousand": 1957, "test_backend_error": 1957, "compiled_test_backend_error": 1957, "decomp_fn": 1957, "810": 1957, "repro_aft": 1957, "minifier_launch": 1957, "base_dir": 1957, "rand_strid": 1957, "0a0": 1957, "gitfddfc44": 1957, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 1957, "2022": 1957, "thu_feb_10_18": 1957, "41_pst_2022": 1957, "v11": 1957, "cuda_11": 1957, "r11": 1957, "30978841_0": 1957, "sxm4": 1957, "compile_fx": 1957, "compile_fx_inn": 1957, "toy_compil": 1957, "debug_util": 1957, "run_fwd_maybe_bwd": 1957, "opt_mod": 1957, "rg": 1957, "test_model": 1957, "debug_dir_root": 1957, "torch_compile_debug_dir": 1957, "run_2023_03_01_08_20_52_143510": 1957, "pid_180167": 1957, "model__0_forward_1": 1957, "aot_model___0_debug": 1957, "fx_graph_read": 1957, "fx_graph_runn": 1957, "fx_graph_transform": 1957, "ir_post_fus": 1957, "ir_pre_fus": 1957, "fx_graph": 1957, "buf1": 1957, "schedulernod": 1957, "computedbuff": 1957, "memorydep": 1957, "unmet_depend": 1957, "buf0": 1957, "met_depend": 1957, "primals_2": 1957, "buf1_loop_bodi": 1957, "var_rang": 1957, "z0": 1957, "index0": 1957, "index1": 1957, "get_index": 1957, "get_index_1": 1957, "load_1": 1957, "get_index_2": 1957, "compiled_fun": 1957, "hinder": 1957, "break_reason": 1957, "explanation_verbos": 1957, "compiled_toi": 1957, "as_subclass": 1958, "resolve_nam": 1958, "handle_torch_funct": 1958, "public_api": 1958, "relevant_arg": 1958, "has_torch_function_unari": 1958, "is_tensor_lik": 1958, "notatensor": 1958, "tensorlik": 1958, "is_tensor_method_or_properti": 1958, "__get__": 1958, "__module__": 1958, "wrap_torch_funct": 1958, "drag": 1959, "interactiv": 1959, "viewer": 1959, "memory_viz": 1959, "run_your_cod": 1959, "my_snapshot": 1959, "javascript": 1959, "upload": 1959, "pan": 1959, "mous": 1959, "slider": 1959, "b7f064c000000_0": 1959, "7f064c000000": 1959, "max_entri": 1959, "_memory_viz": 1959, "2u": 1959, "50n": 1959, "currenli": 1959, "typeddict": 1959, "device_trac": 1959, "traceentri": 1959, "total_s": 1959, "segment_typ": 1959, "allocated_s": 1959, "active_s": 1959, "active_awaiting_fre": 1959, "requested_s": 1959, "active_alloc": 1959, "took": 1959, "free_request": 1959, "free_complet": 1959, "segment_alloc": 1959, "segment_fre": 1959, "coorel": 1959, "device_fre": 1959, "dump_snapshot": 1959, "smallest_norm": 1960, "subnorm": 1960, "denormal_numb": 1960}, "objects": {"": [[1936, 0, 0, "-", "torch"], [1871, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1930, 1, 1, "", "BFloat16Storage"], [1930, 1, 1, "", "BoolStorage"], [1930, 1, 1, "", "ByteStorage"], [1930, 1, 1, "", "CharStorage"], [1930, 1, 1, "", "ComplexDoubleStorage"], [1930, 1, 1, "", "ComplexFloatStorage"], [1930, 1, 1, "", "DoubleStorage"], [1930, 1, 1, "", "FloatStorage"], [79, 1, 1, "", "Generator"], [1930, 1, 1, "", "HalfStorage"], [1930, 1, 1, "", "IntStorage"], [1930, 1, 1, "", "LongStorage"], [1930, 1, 1, "", "QInt32Storage"], [1930, 1, 1, "", "QInt8Storage"], [1930, 1, 1, "", "QUInt2x4Storage"], [1930, 1, 1, "", "QUInt4x2Storage"], [1930, 1, 1, "", "QUInt8Storage"], [1930, 1, 1, "", "ShortStorage"], [1936, 1, 1, "", "SymBool"], [1936, 1, 1, "", "SymFloat"], [1936, 1, 1, "", "SymInt"], [1936, 1, 1, "", "Tag"], [1934, 1, 1, "", "Tensor"], [1930, 1, 1, "", "TypedStorage"], [1930, 1, 1, "", "UntypedStorage"], [12, 0, 0, "-", "__config__"], [613, 5, 1, "", "_assert"], [614, 5, 1, "", "_foreach_abs"], [615, 5, 1, "", "_foreach_abs_"], [616, 5, 1, "", "_foreach_acos"], [617, 5, 1, "", "_foreach_acos_"], [618, 5, 1, "", "_foreach_asin"], [619, 5, 1, "", "_foreach_asin_"], [620, 5, 1, "", "_foreach_atan"], [621, 5, 1, "", "_foreach_atan_"], [622, 5, 1, "", "_foreach_ceil"], [623, 5, 1, "", "_foreach_ceil_"], [624, 5, 1, "", "_foreach_cos"], [625, 5, 1, "", "_foreach_cos_"], [626, 5, 1, "", "_foreach_cosh"], [627, 5, 1, "", "_foreach_cosh_"], [628, 5, 1, "", "_foreach_erf"], [629, 5, 1, "", "_foreach_erf_"], [630, 5, 1, "", "_foreach_erfc"], [631, 5, 1, "", "_foreach_erfc_"], [632, 5, 1, "", "_foreach_exp"], [633, 5, 1, "", "_foreach_exp_"], [634, 5, 1, "", "_foreach_expm1"], [635, 5, 1, "", "_foreach_expm1_"], [636, 5, 1, "", "_foreach_floor"], [637, 5, 1, "", "_foreach_floor_"], [638, 5, 1, "", "_foreach_frac"], [639, 5, 1, "", "_foreach_frac_"], [640, 5, 1, "", "_foreach_lgamma"], [641, 5, 1, "", "_foreach_lgamma_"], [642, 5, 1, "", "_foreach_log"], [643, 5, 1, "", "_foreach_log10"], [644, 5, 1, "", "_foreach_log10_"], [645, 5, 1, "", "_foreach_log1p"], [646, 5, 1, "", "_foreach_log1p_"], [647, 5, 1, "", "_foreach_log2"], [648, 5, 1, "", "_foreach_log2_"], [649, 5, 1, "", "_foreach_log_"], [650, 5, 1, "", "_foreach_neg"], [651, 5, 1, "", "_foreach_neg_"], [652, 5, 1, "", "_foreach_reciprocal"], [653, 5, 1, "", "_foreach_reciprocal_"], [654, 5, 1, "", "_foreach_round"], [655, 5, 1, "", "_foreach_round_"], [656, 5, 1, "", "_foreach_sigmoid"], [657, 5, 1, "", "_foreach_sigmoid_"], [658, 5, 1, "", "_foreach_sin"], [659, 5, 1, "", "_foreach_sin_"], [660, 5, 1, "", "_foreach_sinh"], [661, 5, 1, "", "_foreach_sinh_"], [662, 5, 1, "", "_foreach_sqrt"], [663, 5, 1, "", "_foreach_sqrt_"], [664, 5, 1, "", "_foreach_tan"], [665, 5, 1, "", "_foreach_tan_"], [666, 5, 1, "", "_foreach_trunc"], [667, 5, 1, "", "_foreach_trunc_"], [668, 5, 1, "", "_foreach_zero_"], [1880, 0, 0, "-", "_logging"], [670, 5, 1, "", "abs"], [671, 5, 1, "", "absolute"], [672, 5, 1, "", "acos"], [673, 5, 1, "", "acosh"], [674, 5, 1, "", "add"], [675, 5, 1, "", "addbmm"], [676, 5, 1, "", "addcdiv"], [677, 5, 1, "", "addcmul"], [678, 5, 1, "", "addmm"], [679, 5, 1, "", "addmv"], [680, 5, 1, "", "addr"], [681, 5, 1, "", "adjoint"], [682, 5, 1, "", "all"], [683, 5, 1, "", "allclose"], [684, 5, 1, "", "amax"], [685, 5, 1, "", "amin"], [686, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [687, 5, 1, "", "angle"], [688, 5, 1, "", "any"], [1919, 0, 0, "-", "ao"], [854, 5, 1, "", "arange"], [855, 5, 1, "", "arccos"], [856, 5, 1, "", "arccosh"], [857, 5, 1, "", "arcsin"], [858, 5, 1, "", "arcsinh"], [859, 5, 1, "", "arctan"], [860, 5, 1, "", "arctan2"], [861, 5, 1, "", "arctanh"], [862, 5, 1, "", "are_deterministic_algorithms_enabled"], [863, 5, 1, "", "argmax"], [864, 5, 1, "", "argmin"], [865, 5, 1, "", "argsort"], [866, 5, 1, "", "argwhere"], [867, 5, 1, "", "as_strided"], [868, 5, 1, "", "as_tensor"], [869, 5, 1, "", "asarray"], [870, 5, 1, "", "asin"], [871, 5, 1, "", "asinh"], [872, 5, 1, "", "atan"], [873, 5, 1, "", "atan2"], [874, 5, 1, "", "atanh"], [875, 5, 1, "", "atleast_1d"], [876, 5, 1, "", "atleast_2d"], [877, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [909, 5, 1, "", "baddbmm"], [910, 5, 1, "", "bartlett_window"], [911, 5, 1, "", "bernoulli"], [912, 5, 1, "", "bincount"], [913, 5, 1, "", "bitwise_and"], [914, 5, 1, "", "bitwise_left_shift"], [915, 5, 1, "", "bitwise_not"], [916, 5, 1, "", "bitwise_or"], [917, 5, 1, "", "bitwise_right_shift"], [918, 5, 1, "", "bitwise_xor"], [919, 5, 1, "", "blackman_window"], [920, 5, 1, "", "block_diag"], [921, 5, 1, "", "bmm"], [922, 5, 1, "", "broadcast_shapes"], [923, 5, 1, "", "broadcast_tensors"], [924, 5, 1, "", "broadcast_to"], [925, 5, 1, "", "bucketize"], [926, 5, 1, "", "can_cast"], [927, 5, 1, "", "cartesian_prod"], [928, 5, 1, "", "cat"], [929, 5, 1, "", "cdist"], [930, 5, 1, "", "ceil"], [931, 5, 1, "", "chain_matmul"], [932, 5, 1, "", "cholesky"], [933, 5, 1, "", "cholesky_inverse"], [934, 5, 1, "", "cholesky_solve"], [935, 5, 1, "", "chunk"], [936, 5, 1, "", "clamp"], [937, 5, 1, "", "clip"], [938, 5, 1, "", "clone"], [939, 5, 1, "", "column_stack"], [940, 5, 1, "", "combinations"], [941, 5, 1, "", "compile"], [942, 5, 1, "", "compiled_with_cxx11_abi"], [1940, 0, 0, "-", "compiler"], [949, 5, 1, "", "complex"], [950, 5, 1, "", "concat"], [951, 5, 1, "", "concatenate"], [952, 5, 1, "", "conj"], [953, 5, 1, "", "conj_physical"], [1936, 0, 0, "-", "contrib"], [954, 5, 1, "", "copysign"], [955, 5, 1, "", "corrcoef"], [956, 5, 1, "", "cos"], [957, 5, 1, "", "cosh"], [958, 5, 1, "", "count_nonzero"], [959, 5, 1, "", "cov"], [15, 0, 0, "-", "cpu"], [967, 5, 1, "", "cross"], [16, 0, 0, "-", "cuda"], [1046, 5, 1, "", "cummax"], [1047, 5, 1, "", "cummin"], [1048, 5, 1, "", "cumprod"], [1049, 5, 1, "", "cumsum"], [1050, 5, 1, "", "cumulative_trapezoid"], [1051, 5, 1, "", "deg2rad"], [1052, 5, 1, "", "dequantize"], [1053, 5, 1, "", "det"], [1931, 1, 1, "", "device"], [1054, 5, 1, "", "diag"], [1055, 5, 1, "", "diag_embed"], [1056, 5, 1, "", "diagflat"], [1057, 5, 1, "", "diagonal"], [1058, 5, 1, "", "diagonal_scatter"], [1059, 5, 1, "", "diff"], [1060, 5, 1, "", "digamma"], [1061, 5, 1, "", "dist"], [23, 0, 0, "-", "distributed"], [29, 0, 0, "-", "distributions"], [1062, 5, 1, "", "div"], [1063, 5, 1, "", "divide"], [1064, 5, 1, "", "dot"], [1065, 5, 1, "", "dsplit"], [1066, 5, 1, "", "dstack"], [1931, 1, 1, "", "dtype"], [1067, 5, 1, "", "einsum"], [1068, 5, 1, "", "empty"], [1069, 5, 1, "", "empty_like"], [1070, 5, 1, "", "empty_strided"], [1071, 1, 1, "", "enable_grad"], [1072, 5, 1, "", "eq"], [1073, 5, 1, "", "equal"], [1074, 5, 1, "", "erf"], [1075, 5, 1, "", "erfc"], [1076, 5, 1, "", "erfinv"], [1077, 5, 1, "", "exp"], [1078, 5, 1, "", "exp2"], [1079, 5, 1, "", "expm1"], [44, 0, 0, "-", "export"], [1080, 5, 1, "", "eye"], [1081, 5, 1, "", "fake_quantize_per_channel_affine"], [1082, 5, 1, "", "fake_quantize_per_tensor_affine"], [45, 0, 0, "-", "fft"], [1105, 5, 1, "", "fix"], [1106, 5, 1, "", "flatten"], [1107, 5, 1, "", "flip"], [1108, 5, 1, "", "fliplr"], [1109, 5, 1, "", "flipud"], [1110, 5, 1, "", "float_power"], [1111, 5, 1, "", "floor"], [1112, 5, 1, "", "floor_divide"], [1113, 5, 1, "", "fmax"], [1114, 5, 1, "", "fmin"], [1115, 5, 1, "", "fmod"], [1116, 5, 1, "", "frac"], [1117, 5, 1, "", "frexp"], [1118, 5, 1, "", "from_dlpack"], [1119, 5, 1, "", "from_numpy"], [1120, 5, 1, "", "frombuffer"], [1121, 5, 1, "", "full"], [1122, 5, 1, "", "full_like"], [48, 0, 0, "-", "func"], [53, 0, 0, "-", "futures"], [54, 0, 0, "-", "fx"], [1136, 5, 1, "", "gather"], [1137, 5, 1, "", "gcd"], [1138, 5, 1, "", "ge"], [1139, 5, 1, "", "geqrf"], [1140, 5, 1, "", "ger"], [1141, 5, 1, "", "get_default_dtype"], [1142, 5, 1, "", "get_deterministic_debug_mode"], [1143, 5, 1, "", "get_float32_matmul_precision"], [1144, 5, 1, "", "get_num_interop_threads"], [1145, 5, 1, "", "get_num_threads"], [1146, 5, 1, "", "get_rng_state"], [1147, 5, 1, "", "gradient"], [1148, 5, 1, "", "greater"], [1149, 5, 1, "", "greater_equal"], [1150, 5, 1, "", "gt"], [1151, 5, 1, "", "hamming_window"], [1152, 5, 1, "", "hann_window"], [1153, 5, 1, "", "heaviside"], [1154, 5, 1, "", "histc"], [1155, 5, 1, "", "histogram"], [1156, 5, 1, "", "histogramdd"], [1157, 5, 1, "", "hsplit"], [1158, 5, 1, "", "hspmm"], [1159, 5, 1, "", "hstack"], [1869, 0, 0, "-", "hub"], [1160, 5, 1, "", "hypot"], [1161, 5, 1, "", "i0"], [1162, 5, 1, "", "igamma"], [1163, 5, 1, "", "igammac"], [1164, 5, 1, "", "imag"], [1165, 5, 1, "", "index_add"], [1166, 5, 1, "", "index_copy"], [1167, 5, 1, "", "index_reduce"], [1168, 5, 1, "", "index_select"], [1169, 1, 1, "", "inference_mode"], [1170, 5, 1, "", "initial_seed"], [1171, 5, 1, "", "inner"], [1172, 5, 1, "", "inverse"], [1173, 5, 1, "", "is_complex"], [1174, 5, 1, "", "is_conj"], [1175, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1176, 5, 1, "", "is_floating_point"], [1177, 5, 1, "", "is_grad_enabled"], [1178, 5, 1, "", "is_inference_mode_enabled"], [1179, 5, 1, "", "is_nonzero"], [1180, 5, 1, "", "is_storage"], [1181, 5, 1, "", "is_tensor"], [1182, 5, 1, "", "is_warn_always_enabled"], [1183, 5, 1, "", "isclose"], [1184, 5, 1, "", "isfinite"], [1185, 5, 1, "", "isin"], [1186, 5, 1, "", "isinf"], [1187, 5, 1, "", "isnan"], [1188, 5, 1, "", "isneginf"], [1189, 5, 1, "", "isposinf"], [1190, 5, 1, "", "isreal"], [1191, 5, 1, "", "istft"], [1871, 0, 0, "-", "jit"], [1213, 5, 1, "", "kaiser_window"], [1214, 5, 1, "", "kron"], [1215, 5, 1, "", "kthvalue"], [1931, 1, 1, "", "layout"], [1216, 5, 1, "", "lcm"], [1217, 5, 1, "", "ldexp"], [1218, 5, 1, "", "le"], [1219, 5, 1, "", "lerp"], [1220, 5, 1, "", "less"], [1221, 5, 1, "", "less_equal"], [1222, 5, 1, "", "lgamma"], [1879, 0, 0, "-", "linalg"], [1264, 5, 1, "", "linspace"], [1265, 5, 1, "", "load"], [1266, 5, 1, "", "lobpcg"], [1267, 5, 1, "", "log"], [1268, 5, 1, "", "log10"], [1269, 5, 1, "", "log1p"], [1270, 5, 1, "", "log2"], [1271, 5, 1, "", "logaddexp"], [1272, 5, 1, "", "logaddexp2"], [1273, 5, 1, "", "logcumsumexp"], [1274, 5, 1, "", "logdet"], [1275, 5, 1, "", "logical_and"], [1276, 5, 1, "", "logical_not"], [1277, 5, 1, "", "logical_or"], [1278, 5, 1, "", "logical_xor"], [1279, 5, 1, "", "logit"], [1280, 5, 1, "", "logspace"], [1281, 5, 1, "", "logsumexp"], [1282, 5, 1, "", "lt"], [1283, 5, 1, "", "lu"], [1284, 5, 1, "", "lu_solve"], [1285, 5, 1, "", "lu_unpack"], [1286, 5, 1, "", "manual_seed"], [1881, 0, 0, "-", "masked"], [1287, 5, 1, "", "masked_select"], [1288, 5, 1, "", "matmul"], [1289, 5, 1, "", "matrix_exp"], [1290, 5, 1, "", "matrix_power"], [1291, 5, 1, "", "max"], [1292, 5, 1, "", "maximum"], [1293, 5, 1, "", "mean"], [1294, 5, 1, "", "median"], [1931, 1, 1, "", "memory_format"], [1295, 5, 1, "", "meshgrid"], [1296, 5, 1, "", "min"], [1297, 5, 1, "", "minimum"], [1298, 5, 1, "", "mm"], [1299, 5, 1, "", "mode"], [1884, 0, 0, "-", "monitor"], [1300, 5, 1, "", "moveaxis"], [1301, 5, 1, "", "movedim"], [1885, 0, 0, "-", "mps"], [1315, 5, 1, "", "msort"], [1316, 5, 1, "", "mul"], [1317, 5, 1, "", "multinomial"], [1318, 5, 1, "", "multiply"], [1886, 0, 0, "-", "multiprocessing"], [1319, 5, 1, "", "mv"], [1320, 5, 1, "", "mvlgamma"], [1321, 5, 1, "", "nan_to_num"], [1322, 5, 1, "", "nanmean"], [1323, 5, 1, "", "nanmedian"], [1324, 5, 1, "", "nanquantile"], [1325, 5, 1, "", "nansum"], [1326, 5, 1, "", "narrow"], [1327, 5, 1, "", "narrow_copy"], [1328, 5, 1, "", "ne"], [1329, 5, 1, "", "neg"], [1330, 5, 1, "", "negative"], [1889, 0, 0, "-", "nested"], [1331, 5, 1, "", "nextafter"], [1890, 0, 0, "-", "nn"], [1652, 1, 1, "", "no_grad"], [1653, 5, 1, "", "nonzero"], [1654, 5, 1, "", "norm"], [1655, 5, 1, "", "normal"], [1656, 5, 1, "", "not_equal"], [1657, 5, 1, "", "numel"], [1658, 5, 1, "", "ones"], [1659, 5, 1, "", "ones_like"], [1912, 0, 0, "-", "onnx"], [1915, 0, 0, "-", "optim"], [1702, 5, 1, "", "orgqr"], [1703, 5, 1, "", "ormqr"], [1704, 5, 1, "", "outer"], [1916, 0, 0, "-", "package"], [1705, 5, 1, "", "pca_lowrank"], [1706, 5, 1, "", "permute"], [1707, 5, 1, "", "pinverse"], [1708, 5, 1, "", "poisson"], [1709, 5, 1, "", "polar"], [1710, 5, 1, "", "polygamma"], [1711, 5, 1, "", "positive"], [1712, 5, 1, "", "pow"], [1713, 5, 1, "", "prod"], [1918, 0, 0, "-", "profiler"], [1714, 5, 1, "", "promote_types"], [1715, 5, 1, "", "qr"], [1716, 5, 1, "", "quantile"], [1922, 0, 0, "-", "quantization"], [1717, 5, 1, "", "quantize_per_channel"], [1718, 5, 1, "", "quantize_per_tensor"], [1719, 5, 1, "", "quantized_batch_norm"], [1720, 5, 1, "", "quantized_max_pool1d"], [1721, 5, 1, "", "quantized_max_pool2d"], [1723, 5, 1, "", "rad2deg"], [1724, 5, 1, "", "rand"], [1725, 5, 1, "", "rand_like"], [1726, 5, 1, "", "randint"], [1727, 5, 1, "", "randint_like"], [1728, 5, 1, "", "randn"], [1729, 5, 1, "", "randn_like"], [1923, 0, 0, "-", "random"], [1730, 5, 1, "", "randperm"], [1731, 5, 1, "", "range"], [1732, 5, 1, "", "ravel"], [1733, 5, 1, "", "real"], [1734, 5, 1, "", "reciprocal"], [1735, 5, 1, "", "remainder"], [1736, 5, 1, "", "renorm"], [1737, 5, 1, "", "repeat_interleave"], [1738, 5, 1, "", "reshape"], [1739, 5, 1, "", "resolve_conj"], [1740, 5, 1, "", "resolve_neg"], [1741, 5, 1, "", "result_type"], [1742, 5, 1, "", "roll"], [1743, 5, 1, "", "rot90"], [1744, 5, 1, "", "round"], [1745, 5, 1, "", "row_stack"], [1746, 5, 1, "", "rsqrt"], [1747, 5, 1, "", "save"], [1748, 5, 1, "", "scatter"], [1749, 5, 1, "", "scatter_add"], [1750, 5, 1, "", "scatter_reduce"], [1751, 5, 1, "", "searchsorted"], [1752, 5, 1, "", "seed"], [1753, 5, 1, "", "select"], [1754, 5, 1, "", "select_scatter"], [1755, 5, 1, "", "set_default_device"], [1756, 5, 1, "", "set_default_dtype"], [1757, 5, 1, "", "set_default_tensor_type"], [1758, 5, 1, "", "set_deterministic_debug_mode"], [1759, 5, 1, "", "set_float32_matmul_precision"], [1760, 5, 1, "", "set_flush_denormal"], [1761, 1, 1, "", "set_grad_enabled"], [1762, 5, 1, "", "set_num_interop_threads"], [1763, 5, 1, "", "set_num_threads"], [1764, 5, 1, "", "set_printoptions"], [1765, 5, 1, "", "set_rng_state"], [1766, 5, 1, "", "set_warn_always"], [1767, 5, 1, "", "sgn"], [1768, 5, 1, "", "sigmoid"], [1769, 5, 1, "", "sign"], [1927, 0, 0, "-", "signal"], [1781, 5, 1, "", "signbit"], [1782, 5, 1, "", "sin"], [1783, 5, 1, "", "sinc"], [1784, 5, 1, "", "sinh"], [1785, 5, 1, "", "slice_scatter"], [1786, 5, 1, "", "slogdet"], [1787, 5, 1, "", "smm"], [1788, 5, 1, "", "softmax"], [1789, 5, 1, "", "sort"], [1928, 0, 0, "-", "sparse"], [1798, 5, 1, "", "sparse_bsc_tensor"], [1799, 5, 1, "", "sparse_bsr_tensor"], [1800, 5, 1, "", "sparse_compressed_tensor"], [1801, 5, 1, "", "sparse_coo_tensor"], [1802, 5, 1, "", "sparse_csc_tensor"], [1803, 5, 1, "", "sparse_csr_tensor"], [1929, 0, 0, "-", "special"], [1804, 5, 1, "", "split"], [1805, 5, 1, "", "sqrt"], [1806, 5, 1, "", "square"], [1807, 5, 1, "", "squeeze"], [1808, 5, 1, "", "sspaddmm"], [1809, 5, 1, "", "stack"], [1810, 5, 1, "", "std"], [1811, 5, 1, "", "std_mean"], [1812, 5, 1, "", "stft"], [1813, 5, 1, "", "sub"], [1814, 5, 1, "", "subtract"], [1815, 5, 1, "", "sum"], [1816, 5, 1, "", "svd"], [1817, 5, 1, "", "svd_lowrank"], [1818, 5, 1, "", "swapaxes"], [1819, 5, 1, "", "swapdims"], [1820, 5, 1, "", "sym_float"], [1821, 5, 1, "", "sym_int"], [1822, 5, 1, "", "sym_max"], [1823, 5, 1, "", "sym_min"], [1824, 5, 1, "", "sym_not"], [1825, 5, 1, "", "t"], [1826, 5, 1, "", "take"], [1827, 5, 1, "", "take_along_dim"], [1828, 5, 1, "", "tan"], [1829, 5, 1, "", "tanh"], [1830, 5, 1, "", "tensor"], [1831, 5, 1, "", "tensor_split"], [1832, 5, 1, "", "tensordot"], [1935, 0, 0, "-", "testing"], [1833, 5, 1, "", "tile"], [1834, 5, 1, "", "topk"], [1835, 5, 1, "", "trace"], [1836, 5, 1, "", "transpose"], [1837, 5, 1, "", "trapezoid"], [1838, 5, 1, "", "trapz"], [1839, 5, 1, "", "triangular_solve"], [1840, 5, 1, "", "tril"], [1841, 5, 1, "", "tril_indices"], [1842, 5, 1, "", "triu"], [1843, 5, 1, "", "triu_indices"], [1844, 5, 1, "", "true_divide"], [1845, 5, 1, "", "trunc"], [1846, 5, 1, "", "unbind"], [1847, 5, 1, "", "unflatten"], [1848, 5, 1, "", "unique"], [1849, 5, 1, "", "unique_consecutive"], [1850, 5, 1, "", "unsqueeze"], [1851, 5, 1, "", "use_deterministic_algorithms"], [1961, 0, 0, "-", "utils"], [1856, 5, 1, "", "vander"], [1857, 5, 1, "", "var"], [1858, 5, 1, "", "var_mean"], [1859, 5, 1, "", "vdot"], [1860, 5, 1, "", "view_as_complex"], [1861, 5, 1, "", "view_as_real"], [1862, 5, 1, "", "vmap"], [1863, 5, 1, "", "vsplit"], [1864, 5, 1, "", "vstack"], [1865, 5, 1, "", "where"], [1866, 5, 1, "", "xlogy"], [1867, 5, 1, "", "zeros"], [1868, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1930, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1930, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1930, 2, 1, "", "dtype"]], "torch.CharStorage": [[1930, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1930, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1930, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1930, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1930, 2, 1, "", "dtype"]], "torch.Generator": [[79, 2, 1, "", "device"], [79, 3, 1, "", "get_state"], [79, 3, 1, "", "initial_seed"], [79, 3, 1, "", "manual_seed"], [79, 3, 1, "", "seed"], [79, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1930, 2, 1, "", "dtype"]], "torch.IntStorage": [[1930, 2, 1, "", "dtype"]], "torch.LongStorage": [[1930, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1930, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1930, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1930, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1930, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1930, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1930, 2, 1, "", "dtype"]], "torch.Tag": [[1936, 4, 1, "", "name"]], "torch.Tensor": [[1934, 2, 1, "", "H"], [1934, 2, 1, "", "T"], [80, 3, 1, "", "abs"], [81, 3, 1, "", "abs_"], [82, 3, 1, "", "absolute"], [83, 3, 1, "", "absolute_"], [84, 3, 1, "", "acos"], [85, 3, 1, "", "acos_"], [86, 3, 1, "", "acosh"], [87, 3, 1, "", "acosh_"], [88, 3, 1, "", "add"], [89, 3, 1, "", "add_"], [90, 3, 1, "", "addbmm"], [91, 3, 1, "", "addbmm_"], [92, 3, 1, "", "addcdiv"], [93, 3, 1, "", "addcdiv_"], [94, 3, 1, "", "addcmul"], [95, 3, 1, "", "addcmul_"], [96, 3, 1, "", "addmm"], [97, 3, 1, "", "addmm_"], [98, 3, 1, "", "addmv"], [99, 3, 1, "", "addmv_"], [100, 3, 1, "", "addr"], [101, 3, 1, "", "addr_"], [102, 3, 1, "", "adjoint"], [1888, 3, 1, "", "align_as"], [1888, 3, 1, "", "align_to"], [103, 3, 1, "", "all"], [104, 3, 1, "", "allclose"], [105, 3, 1, "", "amax"], [106, 3, 1, "", "amin"], [107, 3, 1, "", "aminmax"], [108, 3, 1, "", "angle"], [109, 3, 1, "", "any"], [110, 3, 1, "", "apply_"], [111, 3, 1, "", "arccos"], [112, 3, 1, "", "arccos_"], [113, 3, 1, "", "arccosh"], [114, 3, 1, "", "arccosh_"], [115, 3, 1, "", "arcsin"], [116, 3, 1, "", "arcsin_"], [117, 3, 1, "", "arcsinh"], [118, 3, 1, "", "arcsinh_"], [119, 3, 1, "", "arctan"], [120, 3, 1, "", "arctan2"], [121, 3, 1, "", "arctan2_"], [122, 3, 1, "", "arctan_"], [123, 3, 1, "", "arctanh"], [124, 3, 1, "", "arctanh_"], [125, 3, 1, "", "argmax"], [126, 3, 1, "", "argmin"], [127, 3, 1, "", "argsort"], [128, 3, 1, "", "argwhere"], [129, 3, 1, "", "as_strided"], [130, 3, 1, "", "as_subclass"], [131, 3, 1, "", "asin"], [132, 3, 1, "", "asin_"], [133, 3, 1, "", "asinh"], [134, 3, 1, "", "asinh_"], [135, 3, 1, "", "atan"], [136, 3, 1, "", "atan2"], [137, 3, 1, "", "atan2_"], [138, 3, 1, "", "atan_"], [139, 3, 1, "", "atanh"], [140, 3, 1, "", "atanh_"], [141, 3, 1, "", "backward"], [142, 3, 1, "", "baddbmm"], [143, 3, 1, "", "baddbmm_"], [144, 3, 1, "", "bernoulli"], [145, 3, 1, "", "bernoulli_"], [146, 3, 1, "", "bfloat16"], [147, 3, 1, "", "bincount"], [148, 3, 1, "", "bitwise_and"], [149, 3, 1, "", "bitwise_and_"], [150, 3, 1, "", "bitwise_left_shift"], [151, 3, 1, "", "bitwise_left_shift_"], [152, 3, 1, "", "bitwise_not"], [153, 3, 1, "", "bitwise_not_"], [154, 3, 1, "", "bitwise_or"], [155, 3, 1, "", "bitwise_or_"], [156, 3, 1, "", "bitwise_right_shift"], [157, 3, 1, "", "bitwise_right_shift_"], [158, 3, 1, "", "bitwise_xor"], [159, 3, 1, "", "bitwise_xor_"], [160, 3, 1, "", "bmm"], [161, 3, 1, "", "bool"], [162, 3, 1, "", "broadcast_to"], [163, 3, 1, "", "byte"], [164, 3, 1, "", "cauchy_"], [165, 3, 1, "", "ccol_indices"], [166, 3, 1, "", "cdouble"], [167, 3, 1, "", "ceil"], [168, 3, 1, "", "ceil_"], [169, 3, 1, "", "cfloat"], [170, 3, 1, "", "chalf"], [171, 3, 1, "", "char"], [172, 3, 1, "", "cholesky"], [173, 3, 1, "", "cholesky_inverse"], [174, 3, 1, "", "cholesky_solve"], [175, 3, 1, "", "chunk"], [176, 3, 1, "", "clamp"], [177, 3, 1, "", "clamp_"], [178, 3, 1, "", "clip"], [179, 3, 1, "", "clip_"], [180, 3, 1, "", "clone"], [181, 3, 1, "", "coalesce"], [182, 3, 1, "", "col_indices"], [183, 3, 1, "", "conj"], [184, 3, 1, "", "conj_physical"], [185, 3, 1, "", "conj_physical_"], [186, 3, 1, "", "contiguous"], [187, 3, 1, "", "copy_"], [188, 3, 1, "", "copysign"], [189, 3, 1, "", "copysign_"], [190, 3, 1, "", "corrcoef"], [191, 3, 1, "", "cos"], [192, 3, 1, "", "cos_"], [193, 3, 1, "", "cosh"], [194, 3, 1, "", "cosh_"], [195, 3, 1, "", "count_nonzero"], [196, 3, 1, "", "cov"], [197, 3, 1, "", "cpu"], [198, 3, 1, "", "cross"], [199, 3, 1, "", "crow_indices"], [200, 3, 1, "", "cuda"], [201, 3, 1, "", "cummax"], [202, 3, 1, "", "cummin"], [203, 3, 1, "", "cumprod"], [204, 3, 1, "", "cumprod_"], [205, 3, 1, "", "cumsum"], [206, 3, 1, "", "cumsum_"], [207, 3, 1, "", "data_ptr"], [208, 3, 1, "", "deg2rad"], [209, 3, 1, "", "dense_dim"], [210, 3, 1, "", "dequantize"], [211, 3, 1, "", "det"], [212, 3, 1, "", "detach"], [213, 3, 1, "", "detach_"], [214, 2, 1, "", "device"], [215, 3, 1, "", "diag"], [216, 3, 1, "", "diag_embed"], [217, 3, 1, "", "diagflat"], [218, 3, 1, "", "diagonal"], [219, 3, 1, "", "diagonal_scatter"], [220, 3, 1, "", "diff"], [221, 3, 1, "", "digamma"], [222, 3, 1, "", "digamma_"], [223, 3, 1, "", "dim"], [224, 3, 1, "", "dim_order"], [225, 3, 1, "", "dist"], [226, 3, 1, "", "div"], [227, 3, 1, "", "div_"], [228, 3, 1, "", "divide"], [229, 3, 1, "", "divide_"], [230, 3, 1, "", "dot"], [231, 3, 1, "", "double"], [232, 3, 1, "", "dsplit"], [233, 3, 1, "", "element_size"], [234, 3, 1, "", "eq"], [235, 3, 1, "", "eq_"], [236, 3, 1, "", "equal"], [237, 3, 1, "", "erf"], [238, 3, 1, "", "erf_"], [239, 3, 1, "", "erfc"], [240, 3, 1, "", "erfc_"], [241, 3, 1, "", "erfinv"], [242, 3, 1, "", "erfinv_"], [243, 3, 1, "", "exp"], [244, 3, 1, "", "exp_"], [245, 3, 1, "", "expand"], [246, 3, 1, "", "expand_as"], [247, 3, 1, "", "expm1"], [248, 3, 1, "", "expm1_"], [249, 3, 1, "", "exponential_"], [250, 3, 1, "", "fill_"], [251, 3, 1, "", "fill_diagonal_"], [252, 3, 1, "", "fix"], [253, 3, 1, "", "fix_"], [254, 3, 1, "", "flatten"], [255, 3, 1, "", "flip"], [256, 3, 1, "", "fliplr"], [257, 3, 1, "", "flipud"], [258, 3, 1, "", "float"], [259, 3, 1, "", "float_power"], [260, 3, 1, "", "float_power_"], [261, 3, 1, "", "floor"], [262, 3, 1, "", "floor_"], [263, 3, 1, "", "floor_divide"], [264, 3, 1, "", "floor_divide_"], [265, 3, 1, "", "fmax"], [266, 3, 1, "", "fmin"], [267, 3, 1, "", "fmod"], [268, 3, 1, "", "fmod_"], [269, 3, 1, "", "frac"], [270, 3, 1, "", "frac_"], [271, 3, 1, "", "frexp"], [272, 3, 1, "", "gather"], [273, 3, 1, "", "gcd"], [274, 3, 1, "", "gcd_"], [275, 3, 1, "", "ge"], [276, 3, 1, "", "ge_"], [277, 3, 1, "", "geometric_"], [278, 3, 1, "", "geqrf"], [279, 3, 1, "", "ger"], [280, 3, 1, "", "get_device"], [281, 2, 1, "", "grad"], [282, 3, 1, "", "greater"], [283, 3, 1, "", "greater_"], [284, 3, 1, "", "greater_equal"], [285, 3, 1, "", "greater_equal_"], [286, 3, 1, "", "gt"], [287, 3, 1, "", "gt_"], [288, 3, 1, "", "half"], [289, 3, 1, "", "hardshrink"], [290, 3, 1, "", "heaviside"], [291, 3, 1, "", "histc"], [292, 3, 1, "", "histogram"], [293, 3, 1, "", "hsplit"], [294, 3, 1, "", "hypot"], [295, 3, 1, "", "hypot_"], [296, 3, 1, "", "i0"], [297, 3, 1, "", "i0_"], [298, 3, 1, "", "igamma"], [299, 3, 1, "", "igamma_"], [300, 3, 1, "", "igammac"], [301, 3, 1, "", "igammac_"], [302, 2, 1, "", "imag"], [303, 3, 1, "", "index_add"], [304, 3, 1, "", "index_add_"], [305, 3, 1, "", "index_copy"], [306, 3, 1, "", "index_copy_"], [307, 3, 1, "", "index_fill"], [308, 3, 1, "", "index_fill_"], [309, 3, 1, "", "index_put"], [310, 3, 1, "", "index_put_"], [311, 3, 1, "", "index_reduce"], [312, 3, 1, "", "index_reduce_"], [313, 3, 1, "", "index_select"], [314, 3, 1, "", "indices"], [315, 3, 1, "", "inner"], [316, 3, 1, "", "int"], [317, 3, 1, "", "int_repr"], [318, 3, 1, "", "inverse"], [319, 3, 1, "", "is_coalesced"], [320, 3, 1, "", "is_complex"], [321, 3, 1, "", "is_conj"], [322, 3, 1, "", "is_contiguous"], [323, 2, 1, "", "is_cuda"], [324, 3, 1, "", "is_floating_point"], [325, 3, 1, "", "is_inference"], [326, 2, 1, "", "is_leaf"], [327, 2, 1, "", "is_meta"], [328, 3, 1, "", "is_pinned"], [329, 2, 1, "", "is_quantized"], [330, 3, 1, "", "is_set_to"], [331, 3, 1, "", "is_shared"], [332, 3, 1, "", "is_signed"], [333, 2, 1, "", "is_sparse"], [334, 2, 1, "", "is_sparse_csr"], [335, 3, 1, "", "isclose"], [336, 3, 1, "", "isfinite"], [337, 3, 1, "", "isinf"], [338, 3, 1, "", "isnan"], [339, 3, 1, "", "isneginf"], [340, 3, 1, "", "isposinf"], [341, 3, 1, "", "isreal"], [342, 3, 1, "", "istft"], [343, 3, 1, "", "item"], [344, 2, 1, "", "itemsize"], [345, 3, 1, "", "kthvalue"], [346, 3, 1, "", "lcm"], [347, 3, 1, "", "lcm_"], [348, 3, 1, "", "ldexp"], [349, 3, 1, "", "ldexp_"], [350, 3, 1, "", "le"], [351, 3, 1, "", "le_"], [352, 3, 1, "", "lerp"], [353, 3, 1, "", "lerp_"], [354, 3, 1, "", "less"], [355, 3, 1, "", "less_"], [356, 3, 1, "", "less_equal"], [357, 3, 1, "", "less_equal_"], [358, 3, 1, "", "lgamma"], [359, 3, 1, "", "lgamma_"], [360, 3, 1, "", "log"], [361, 3, 1, "", "log10"], [362, 3, 1, "", "log10_"], [363, 3, 1, "", "log1p"], [364, 3, 1, "", "log1p_"], [365, 3, 1, "", "log2"], [366, 3, 1, "", "log2_"], [367, 3, 1, "", "log_"], [368, 3, 1, "", "log_normal_"], [369, 3, 1, "", "logaddexp"], [370, 3, 1, "", "logaddexp2"], [371, 3, 1, "", "logcumsumexp"], [372, 3, 1, "", "logdet"], [373, 3, 1, "", "logical_and"], [374, 3, 1, "", "logical_and_"], [375, 3, 1, "", "logical_not"], [376, 3, 1, "", "logical_not_"], [377, 3, 1, "", "logical_or"], [378, 3, 1, "", "logical_or_"], [379, 3, 1, "", "logical_xor"], [380, 3, 1, "", "logical_xor_"], [381, 3, 1, "", "logit"], [382, 3, 1, "", "logit_"], [383, 3, 1, "", "logsumexp"], [384, 3, 1, "", "long"], [385, 3, 1, "", "lt"], [386, 3, 1, "", "lt_"], [387, 3, 1, "", "lu"], [388, 3, 1, "", "lu_solve"], [1934, 2, 1, "", "mH"], [1934, 2, 1, "", "mT"], [389, 3, 1, "", "map_"], [390, 3, 1, "", "masked_fill"], [391, 3, 1, "", "masked_fill_"], [392, 3, 1, "", "masked_scatter"], [393, 3, 1, "", "masked_scatter_"], [394, 3, 1, "", "masked_select"], [395, 3, 1, "", "matmul"], [396, 3, 1, "", "matrix_exp"], [397, 3, 1, "", "matrix_power"], [398, 3, 1, "", "max"], [399, 3, 1, "", "maximum"], [400, 3, 1, "", "mean"], [401, 3, 1, "", "median"], [402, 3, 1, "", "min"], [403, 3, 1, "", "minimum"], [404, 3, 1, "", "mm"], [405, 3, 1, "", "mode"], [406, 3, 1, "", "moveaxis"], [407, 3, 1, "", "movedim"], [408, 3, 1, "", "msort"], [409, 3, 1, "", "mul"], [410, 3, 1, "", "mul_"], [411, 3, 1, "", "multinomial"], [412, 3, 1, "", "multiply"], [413, 3, 1, "", "multiply_"], [414, 3, 1, "", "mv"], [415, 3, 1, "", "mvlgamma"], [416, 3, 1, "", "mvlgamma_"], [1888, 2, 1, "", "names"], [417, 3, 1, "", "nan_to_num"], [418, 3, 1, "", "nan_to_num_"], [419, 3, 1, "", "nanmean"], [420, 3, 1, "", "nanmedian"], [421, 3, 1, "", "nanquantile"], [422, 3, 1, "", "nansum"], [423, 3, 1, "", "narrow"], [424, 3, 1, "", "narrow_copy"], [425, 2, 1, "", "nbytes"], [426, 2, 1, "", "ndim"], [427, 3, 1, "", "ndimension"], [428, 3, 1, "", "ne"], [429, 3, 1, "", "ne_"], [430, 3, 1, "", "neg"], [431, 3, 1, "", "neg_"], [432, 3, 1, "", "negative"], [433, 3, 1, "", "negative_"], [434, 3, 1, "", "nelement"], [435, 3, 1, "", "new_empty"], [436, 3, 1, "", "new_full"], [437, 3, 1, "", "new_ones"], [438, 3, 1, "", "new_tensor"], [439, 3, 1, "", "new_zeros"], [440, 3, 1, "", "nextafter"], [441, 3, 1, "", "nextafter_"], [442, 3, 1, "", "nonzero"], [443, 3, 1, "", "norm"], [444, 3, 1, "", "normal_"], [445, 3, 1, "", "not_equal"], [446, 3, 1, "", "not_equal_"], [447, 3, 1, "", "numel"], [448, 3, 1, "", "numpy"], [449, 3, 1, "", "orgqr"], [450, 3, 1, "", "ormqr"], [451, 3, 1, "", "outer"], [452, 3, 1, "", "permute"], [453, 3, 1, "", "pin_memory"], [454, 3, 1, "", "pinverse"], [455, 3, 1, "", "polygamma"], [456, 3, 1, "", "polygamma_"], [457, 3, 1, "", "positive"], [458, 3, 1, "", "pow"], [459, 3, 1, "", "pow_"], [460, 3, 1, "", "prod"], [461, 3, 1, "", "put_"], [462, 3, 1, "", "q_per_channel_axis"], [463, 3, 1, "", "q_per_channel_scales"], [464, 3, 1, "", "q_per_channel_zero_points"], [465, 3, 1, "", "q_scale"], [466, 3, 1, "", "q_zero_point"], [467, 3, 1, "", "qr"], [468, 3, 1, "", "qscheme"], [469, 3, 1, "", "quantile"], [470, 3, 1, "", "rad2deg"], [471, 3, 1, "", "random_"], [472, 3, 1, "", "ravel"], [473, 2, 1, "", "real"], [474, 3, 1, "", "reciprocal"], [475, 3, 1, "", "reciprocal_"], [476, 3, 1, "", "record_stream"], [1888, 3, 1, "", "refine_names"], [477, 3, 1, "", "register_hook"], [478, 3, 1, "", "remainder"], [479, 3, 1, "", "remainder_"], [1888, 3, 1, "", "rename"], [1888, 3, 1, "", "rename_"], [480, 3, 1, "", "renorm"], [481, 3, 1, "", "renorm_"], [482, 3, 1, "", "repeat"], [483, 3, 1, "", "repeat_interleave"], [484, 2, 1, "", "requires_grad"], [485, 3, 1, "", "requires_grad_"], [486, 3, 1, "", "reshape"], [487, 3, 1, "", "reshape_as"], [488, 3, 1, "", "resize_"], [489, 3, 1, "", "resize_as_"], [490, 3, 1, "", "resolve_conj"], [491, 3, 1, "", "resolve_neg"], [492, 3, 1, "", "retain_grad"], [493, 2, 1, "", "retains_grad"], [494, 3, 1, "", "roll"], [495, 3, 1, "", "rot90"], [496, 3, 1, "", "round"], [497, 3, 1, "", "round_"], [498, 3, 1, "", "row_indices"], [499, 3, 1, "", "rsqrt"], [500, 3, 1, "", "rsqrt_"], [501, 3, 1, "", "scatter"], [502, 3, 1, "", "scatter_"], [503, 3, 1, "", "scatter_add"], [504, 3, 1, "", "scatter_add_"], [505, 3, 1, "", "scatter_reduce"], [506, 3, 1, "", "scatter_reduce_"], [507, 3, 1, "", "select"], [508, 3, 1, "", "select_scatter"], [509, 3, 1, "", "set_"], [510, 3, 1, "", "sgn"], [511, 3, 1, "", "sgn_"], [512, 2, 1, "", "shape"], [513, 3, 1, "", "share_memory_"], [514, 3, 1, "", "short"], [515, 3, 1, "", "sigmoid"], [516, 3, 1, "", "sigmoid_"], [517, 3, 1, "", "sign"], [518, 3, 1, "", "sign_"], [519, 3, 1, "", "signbit"], [520, 3, 1, "", "sin"], [521, 3, 1, "", "sin_"], [522, 3, 1, "", "sinc"], [523, 3, 1, "", "sinc_"], [524, 3, 1, "", "sinh"], [525, 3, 1, "", "sinh_"], [526, 3, 1, "", "size"], [527, 3, 1, "", "slice_scatter"], [528, 3, 1, "", "slogdet"], [529, 3, 1, "", "smm"], [530, 3, 1, "", "softmax"], [531, 3, 1, "", "sort"], [532, 3, 1, "", "sparse_dim"], [533, 3, 1, "", "sparse_mask"], [534, 3, 1, "", "sparse_resize_"], [535, 3, 1, "", "sparse_resize_and_clear_"], [536, 3, 1, "", "split"], [537, 3, 1, "", "sqrt"], [538, 3, 1, "", "sqrt_"], [539, 3, 1, "", "square"], [540, 3, 1, "", "square_"], [541, 3, 1, "", "squeeze"], [542, 3, 1, "", "squeeze_"], [543, 3, 1, "", "sspaddmm"], [544, 3, 1, "", "std"], [545, 3, 1, "", "stft"], [546, 3, 1, "", "storage"], [547, 3, 1, "", "storage_offset"], [548, 3, 1, "", "storage_type"], [549, 3, 1, "", "stride"], [550, 3, 1, "", "sub"], [551, 3, 1, "", "sub_"], [552, 3, 1, "", "subtract"], [553, 3, 1, "", "subtract_"], [554, 3, 1, "", "sum"], [555, 3, 1, "", "sum_to_size"], [556, 3, 1, "", "svd"], [557, 3, 1, "", "swapaxes"], [558, 3, 1, "", "swapdims"], [559, 3, 1, "", "t"], [560, 3, 1, "", "t_"], [561, 3, 1, "", "take"], [562, 3, 1, "", "take_along_dim"], [563, 3, 1, "", "tan"], [564, 3, 1, "", "tan_"], [565, 3, 1, "", "tanh"], [566, 3, 1, "", "tanh_"], [567, 3, 1, "", "tensor_split"], [568, 3, 1, "", "tile"], [569, 3, 1, "", "to"], [570, 3, 1, "", "to_dense"], [571, 3, 1, "", "to_mkldnn"], [572, 3, 1, "", "to_sparse"], [573, 3, 1, "", "to_sparse_bsc"], [574, 3, 1, "", "to_sparse_bsr"], [575, 3, 1, "", "to_sparse_coo"], [576, 3, 1, "", "to_sparse_csc"], [577, 3, 1, "", "to_sparse_csr"], [578, 3, 1, "", "tolist"], [579, 3, 1, "", "topk"], [580, 3, 1, "", "trace"], [581, 3, 1, "", "transpose"], [582, 3, 1, "", "transpose_"], [583, 3, 1, "", "triangular_solve"], [584, 3, 1, "", "tril"], [585, 3, 1, "", "tril_"], [586, 3, 1, "", "triu"], [587, 3, 1, "", "triu_"], [588, 3, 1, "", "true_divide"], [589, 3, 1, "", "true_divide_"], [590, 3, 1, "", "trunc"], [591, 3, 1, "", "trunc_"], [592, 3, 1, "", "type"], [593, 3, 1, "", "type_as"], [594, 3, 1, "", "unbind"], [595, 3, 1, "", "unflatten"], [596, 3, 1, "", "unfold"], [597, 3, 1, "", "uniform_"], [598, 3, 1, "", "unique"], [599, 3, 1, "", "unique_consecutive"], [600, 3, 1, "", "unsqueeze"], [601, 3, 1, "", "unsqueeze_"], [602, 3, 1, "", "untyped_storage"], [603, 3, 1, "", "values"], [604, 3, 1, "", "var"], [605, 3, 1, "", "vdot"], [606, 3, 1, "", "view"], [607, 3, 1, "", "view_as"], [608, 3, 1, "", "vsplit"], [609, 3, 1, "", "where"], [610, 3, 1, "", "xlogy"], [611, 3, 1, "", "xlogy_"], [612, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1930, 3, 1, "", "bfloat16"], [1930, 3, 1, "", "bool"], [1930, 3, 1, "", "byte"], [1930, 3, 1, "", "char"], [1930, 3, 1, "", "clone"], [1930, 3, 1, "", "complex_double"], [1930, 3, 1, "", "complex_float"], [1930, 3, 1, "", "copy_"], [1930, 3, 1, "", "cpu"], [1930, 3, 1, "", "cuda"], [1930, 3, 1, "", "data_ptr"], [1930, 4, 1, "", "device"], [1930, 3, 1, "", "double"], [1930, 2, 1, "", "dtype"], [1930, 3, 1, "", "element_size"], [1930, 3, 1, "", "fill_"], [1930, 3, 1, "", "float"], [1930, 3, 1, "", "from_buffer"], [1930, 3, 1, "", "from_file"], [1930, 3, 1, "", "get_device"], [1930, 3, 1, "", "half"], [1930, 3, 1, "", "hpu"], [1930, 3, 1, "", "int"], [1930, 4, 1, "", "is_cuda"], [1930, 4, 1, "", "is_hpu"], [1930, 3, 1, "", "is_pinned"], [1930, 3, 1, "", "is_shared"], [1930, 2, 1, "", "is_sparse"], [1930, 3, 1, "", "long"], [1930, 3, 1, "", "nbytes"], [1930, 3, 1, "", "pickle_storage_type"], [1930, 3, 1, "", "pin_memory"], [1930, 3, 1, "", "resize_"], [1930, 3, 1, "", "share_memory_"], [1930, 3, 1, "", "short"], [1930, 3, 1, "", "size"], [1930, 3, 1, "", "tolist"], [1930, 3, 1, "", "type"], [1930, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1930, 3, 1, "", "bfloat16"], [1930, 3, 1, "", "bool"], [1930, 3, 1, "", "byte"], [1930, 3, 1, "", "byteswap"], [1930, 3, 1, "", "char"], [1930, 3, 1, "", "clone"], [1930, 3, 1, "", "complex_double"], [1930, 3, 1, "", "complex_float"], [1930, 3, 1, "", "copy_"], [1930, 3, 1, "", "cpu"], [1930, 3, 1, "", "cuda"], [1930, 3, 1, "", "data_ptr"], [1930, 2, 1, "", "device"], [1930, 3, 1, "", "double"], [1930, 3, 1, "", "element_size"], [1930, 3, 1, "", "fill_"], [1930, 3, 1, "", "float"], [1930, 3, 1, "", "from_buffer"], [1930, 3, 1, "", "from_file"], [1930, 3, 1, "", "get_device"], [1930, 3, 1, "", "half"], [1930, 3, 1, "", "hpu"], [1930, 3, 1, "", "int"], [1930, 4, 1, "", "is_cuda"], [1930, 4, 1, "", "is_hpu"], [1930, 3, 1, "", "is_pinned"], [1930, 3, 1, "", "is_shared"], [1930, 2, 1, "", "is_sparse"], [1930, 2, 1, "", "is_sparse_csr"], [1930, 3, 1, "", "long"], [1930, 3, 1, "", "mps"], [1930, 3, 1, "", "nbytes"], [1930, 3, 1, "", "new"], [1930, 3, 1, "", "pin_memory"], [1930, 3, 1, "", "resize_"], [1930, 3, 1, "", "share_memory_"], [1930, 3, 1, "", "short"], [1930, 3, 1, "", "size"], [1930, 3, 1, "", "tolist"], [1930, 3, 1, "", "type"], [1930, 3, 1, "", "untyped"]], "torch.__config__": [[12, 5, 1, "", "parallel_info"], [12, 5, 1, "", "show"]], "torch._logging": [[669, 5, 1, "", "set_logs"]], "torch.ao": [[1919, 0, 0, "-", "nn"], [1919, 0, 0, "-", "ns"], [1919, 0, 0, "-", "pruning"], [1919, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1922, 0, 0, "-", "intrinsic"], [1922, 0, 0, "-", "qat"], [1919, 0, 0, "-", "quantizable"], [1919, 0, 0, "-", "quantized"], [1919, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[689, 1, 1, "", "BNReLU2d"], [690, 1, 1, "", "BNReLU3d"], [691, 1, 1, "", "ConvBn1d"], [692, 1, 1, "", "ConvBn2d"], [693, 1, 1, "", "ConvBn3d"], [694, 1, 1, "", "ConvBnReLU1d"], [695, 1, 1, "", "ConvBnReLU2d"], [696, 1, 1, "", "ConvBnReLU3d"], [697, 1, 1, "", "ConvReLU1d"], [698, 1, 1, "", "ConvReLU2d"], [699, 1, 1, "", "ConvReLU3d"], [700, 1, 1, "", "LinearReLU"], [1922, 0, 0, "-", "modules"], [1922, 0, 0, "-", "qat"], [1922, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[701, 1, 1, "", "ConvBn1d"], [702, 1, 1, "", "ConvBn2d"], [703, 1, 1, "", "ConvBn3d"], [704, 1, 1, "", "ConvBnReLU1d"], [705, 1, 1, "", "ConvBnReLU2d"], [706, 1, 1, "", "ConvBnReLU3d"], [707, 1, 1, "", "ConvReLU2d"], [708, 1, 1, "", "ConvReLU3d"], [709, 1, 1, "", "LinearReLU"], [710, 1, 1, "", "freeze_bn_stats"], [1922, 0, 0, "-", "modules"], [711, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[712, 1, 1, "", "BNReLU2d"], [713, 1, 1, "", "BNReLU3d"], [714, 1, 1, "", "ConvReLU1d"], [715, 1, 1, "", "ConvReLU2d"], [716, 1, 1, "", "ConvReLU3d"], [717, 1, 1, "", "LinearReLU"], [1922, 0, 0, "-", "dynamic"], [1922, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[718, 1, 1, "", "LinearReLU"], [1922, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[719, 1, 1, "", "Conv2d"], [720, 1, 1, "", "Conv3d"], [721, 1, 1, "", "Linear"], [1922, 0, 0, "-", "dynamic"], [1922, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[721, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[722, 1, 1, "", "Linear"], [1922, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[723, 1, 1, "", "LSTM"], [724, 1, 1, "", "MultiheadAttention"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[724, 3, 1, "", "dequantize"], [724, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[725, 1, 1, "", "BatchNorm2d"], [726, 1, 1, "", "BatchNorm3d"], [727, 1, 1, "", "Conv1d"], [728, 1, 1, "", "Conv2d"], [729, 1, 1, "", "Conv3d"], [730, 1, 1, "", "ConvTranspose1d"], [731, 1, 1, "", "ConvTranspose2d"], [732, 1, 1, "", "ConvTranspose3d"], [733, 1, 1, "", "ELU"], [734, 1, 1, "", "Embedding"], [735, 1, 1, "", "EmbeddingBag"], [736, 1, 1, "", "FXFloatFunctional"], [737, 1, 1, "", "FloatFunctional"], [738, 1, 1, "", "GroupNorm"], [739, 1, 1, "", "Hardswish"], [740, 1, 1, "", "InstanceNorm1d"], [741, 1, 1, "", "InstanceNorm2d"], [742, 1, 1, "", "InstanceNorm3d"], [743, 1, 1, "", "LayerNorm"], [744, 1, 1, "", "LeakyReLU"], [745, 1, 1, "", "Linear"], [746, 1, 1, "", "QFunctional"], [747, 1, 1, "", "ReLU6"], [748, 1, 1, "", "Sigmoid"], [1922, 0, 0, "-", "dynamic"], [1922, 0, 0, "-", "functional"], [1922, 0, 0, "-", "modules"], [1919, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[727, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[728, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[729, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[734, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[735, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[745, 3, 1, "", "from_float"], [745, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[749, 1, 1, "", "GRU"], [750, 1, 1, "", "GRUCell"], [751, 1, 1, "", "LSTM"], [752, 1, 1, "", "LSTMCell"], [753, 1, 1, "", "Linear"], [754, 1, 1, "", "RNNCell"], [1922, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[753, 3, 1, "", "from_float"], [753, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[755, 1, 1, "", "adaptive_avg_pool2d"], [756, 1, 1, "", "adaptive_avg_pool3d"], [757, 1, 1, "", "avg_pool2d"], [758, 1, 1, "", "avg_pool3d"], [759, 1, 1, "", "celu"], [760, 1, 1, "", "clamp"], [761, 1, 1, "", "conv1d"], [762, 1, 1, "", "conv2d"], [763, 1, 1, "", "conv3d"], [764, 1, 1, "", "elu"], [765, 1, 1, "", "hardsigmoid"], [766, 1, 1, "", "hardswish"], [767, 1, 1, "", "hardtanh"], [768, 1, 1, "", "interpolate"], [769, 1, 1, "", "leaky_relu"], [770, 1, 1, "", "linear"], [771, 1, 1, "", "max_pool1d"], [772, 1, 1, "", "max_pool2d"], [773, 1, 1, "", "threshold"], [774, 1, 1, "", "upsample"], [775, 1, 1, "", "upsample_bilinear"], [776, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1919, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1919, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1919, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1937, 0, 0, "-", "_numeric_suite"], [1938, 0, 0, "-", "_numeric_suite_fx"], [1919, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1937, 1, 1, "", "Logger"], [1937, 1, 1, "", "OutputLogger"], [1937, 1, 1, "", "Shadow"], [1937, 1, 1, "", "ShadowLogger"], [1937, 5, 1, "", "compare_model_outputs"], [1937, 5, 1, "", "compare_model_stub"], [1937, 5, 1, "", "compare_weights"], [1937, 5, 1, "", "get_logger_dict"], [1937, 5, 1, "", "get_matching_activations"], [1937, 5, 1, "", "prepare_model_outputs"], [1937, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1937, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1937, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1937, 3, 1, "", "add"], [1937, 3, 1, "", "add_relu"], [1937, 3, 1, "", "add_scalar"], [1937, 3, 1, "", "cat"], [1937, 3, 1, "", "forward"], [1937, 3, 1, "", "mul"], [1937, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1937, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1938, 1, 1, "", "NSTracer"], [1938, 1, 1, "", "OutputComparisonLogger"], [1938, 1, 1, "", "OutputLogger"], [1938, 5, 1, "", "add_loggers"], [1938, 5, 1, "", "add_shadow_loggers"], [1938, 5, 1, "", "convert_n_shadows_model"], [1938, 5, 1, "", "extend_logger_results_with_comparison"], [1938, 5, 1, "", "extract_logger_info"], [1938, 5, 1, "", "extract_results_n_shadows_model"], [1938, 5, 1, "", "extract_shadow_logger_info"], [1938, 5, 1, "", "extract_weights"], [1938, 5, 1, "", "loggers_set_enabled"], [1938, 5, 1, "", "loggers_set_save_activations"], [1938, 5, 1, "", "prepare_n_shadows_model"], [1938, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1938, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1938, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1938, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1938, 5, 1, "", "compute_cosine_similarity"], [1938, 5, 1, "", "compute_normalized_l2_error"], [1938, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1919, 0, 0, "-", "scheduler"], [1919, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[777, 1, 1, "", "DeQuantStub"], [778, 1, 1, "", "QuantStub"], [779, 1, 1, "", "QuantWrapper"], [780, 1, 1, "", "add_quant_dequant"], [1919, 0, 0, "-", "backend_config"], [786, 1, 1, "", "convert"], [787, 1, 1, "", "default_eval_fn"], [803, 1, 1, "", "fuse_modules"], [1919, 0, 0, "-", "fx"], [827, 1, 1, "", "prepare"], [828, 1, 1, "", "prepare_qat"], [829, 1, 1, "", "propagate_qconfig_"], [1922, 0, 0, "-", "pt2e"], [846, 1, 1, "", "quantize"], [847, 1, 1, "", "quantize_dynamic"], [852, 1, 1, "", "quantize_qat"], [1922, 0, 0, "-", "quantizer"], [853, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[781, 1, 1, "", "BackendConfig"], [782, 1, 1, "", "BackendPatternConfig"], [783, 1, 1, "", "DTypeConfig"], [784, 1, 1, "", "DTypeWithConstraints"], [785, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[781, 4, 1, "", "configs"], [781, 3, 1, "", "from_dict"], [781, 3, 1, "", "set_backend_pattern_config"], [781, 3, 1, "", "set_backend_pattern_configs"], [781, 3, 1, "", "set_name"], [781, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[782, 3, 1, "", "add_dtype_config"], [782, 3, 1, "", "from_dict"], [782, 3, 1, "", "set_dtype_configs"], [782, 3, 1, "", "set_fused_module"], [782, 3, 1, "", "set_fuser_method"], [782, 3, 1, "", "set_observation_type"], [782, 3, 1, "", "set_pattern"], [782, 3, 1, "", "set_qat_module"], [782, 3, 1, "", "set_reference_quantized_module"], [782, 3, 1, "", "set_root_module"], [782, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[783, 3, 1, "", "from_dict"], [783, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[785, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [785, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [785, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[788, 1, 1, "", "FakeQuantize"], [789, 1, 1, "", "FakeQuantizeBase"], [790, 1, 1, "", "FixedQParamsFakeQuantize"], [791, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [792, 2, 1, "", "default_fake_quant"], [793, 2, 1, "", "default_fused_act_fake_quant"], [794, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [795, 2, 1, "", "default_fused_wt_fake_quant"], [796, 2, 1, "", "default_histogram_fake_quant"], [797, 2, 1, "", "default_per_channel_weight_fake_quant"], [798, 2, 1, "", "default_weight_fake_quant"], [799, 1, 1, "", "disable_fake_quant"], [800, 1, 1, "", "disable_observer"], [801, 1, 1, "", "enable_fake_quant"], [802, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[804, 1, 1, "", "ConvertCustomConfig"], [805, 1, 1, "", "FuseCustomConfig"], [806, 1, 1, "", "PrepareCustomConfig"], [807, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[804, 3, 1, "", "from_dict"], [804, 3, 1, "", "set_observed_to_quantized_mapping"], [804, 3, 1, "", "set_preserved_attributes"], [804, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[805, 3, 1, "", "from_dict"], [805, 3, 1, "", "set_preserved_attributes"], [805, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[806, 3, 1, "", "from_dict"], [806, 3, 1, "", "set_float_to_observed_mapping"], [806, 3, 1, "", "set_input_quantized_indexes"], [806, 3, 1, "", "set_non_traceable_module_classes"], [806, 3, 1, "", "set_non_traceable_module_names"], [806, 3, 1, "", "set_output_quantized_indexes"], [806, 3, 1, "", "set_preserved_attributes"], [806, 3, 1, "", "set_standalone_module_class"], [806, 3, 1, "", "set_standalone_module_name"], [806, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[808, 1, 1, "", "HistogramObserver"], [809, 1, 1, "", "MinMaxObserver"], [810, 1, 1, "", "MovingAverageMinMaxObserver"], [811, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [812, 1, 1, "", "NoopObserver"], [813, 1, 1, "", "ObserverBase"], [814, 1, 1, "", "PerChannelMinMaxObserver"], [815, 1, 1, "", "PlaceholderObserver"], [816, 1, 1, "", "RecordingObserver"], [817, 2, 1, "", "default_debug_observer"], [818, 2, 1, "", "default_dynamic_quant_observer"], [819, 2, 1, "", "default_float_qparams_observer"], [820, 2, 1, "", "default_histogram_observer"], [821, 2, 1, "", "default_observer"], [822, 2, 1, "", "default_per_channel_weight_observer"], [823, 2, 1, "", "default_placeholder_observer"], [824, 2, 1, "", "default_weight_observer"], [825, 1, 1, "", "get_observer_state_dict"], [826, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[809, 3, 1, "", "calculate_qparams"], [809, 3, 1, "", "forward"], [809, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[813, 3, 1, "", "with_args"], [813, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[814, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[1922, 0, 0, "-", "representation"]], "torch.ao.quantization.qconfig": [[830, 1, 1, "", "QConfig"], [831, 2, 1, "", "default_activation_only_qconfig"], [832, 2, 1, "", "default_debug_qconfig"], [833, 2, 1, "", "default_dynamic_qconfig"], [834, 2, 1, "", "default_per_channel_qconfig"], [835, 2, 1, "", "default_qat_qconfig"], [836, 2, 1, "", "default_qat_qconfig_v2"], [837, 2, 1, "", "default_qconfig"], [838, 2, 1, "", "default_weight_only_qconfig"], [839, 2, 1, "", "float16_dynamic_qconfig"], [840, 2, 1, "", "float16_static_qconfig"], [841, 2, 1, "", "float_qparams_weight_only_qconfig"], [842, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[843, 1, 1, "", "QConfigMapping"], [844, 1, 1, "", "get_default_qat_qconfig_mapping"], [845, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[843, 3, 1, "", "from_dict"], [843, 3, 1, "", "set_global"], [843, 3, 1, "", "set_module_name"], [843, 3, 1, "", "set_module_name_object_type_order"], [843, 3, 1, "", "set_module_name_regex"], [843, 3, 1, "", "set_object_type"], [843, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[848, 1, 1, "", "convert_fx"], [849, 1, 1, "", "fuse_fx"], [850, 1, 1, "", "prepare_fx"], [851, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[1, 1, 1, "", "Function"], [882, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [896, 5, 1, "", "grad"], [897, 5, 1, "", "gradcheck"], [898, 5, 1, "", "gradgradcheck"], [1, 1, 1, "", "set_detect_anomaly"]], "torch.autograd.Function": [[878, 3, 1, "", "backward"], [879, 3, 1, "", "forward"], [880, 3, 1, "", "jvp"], [881, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[883, 1, 1, "", "dual_level"], [884, 5, 1, "", "make_dual"], [885, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[886, 3, 1, "", "mark_dirty"], [887, 3, 1, "", "mark_non_differentiable"], [888, 3, 1, "", "save_for_backward"], [889, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[890, 5, 1, "", "hessian"], [891, 5, 1, "", "hvp"], [892, 5, 1, "", "jacobian"], [893, 5, 1, "", "jvp"], [894, 5, 1, "", "vhp"], [895, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[899, 3, 1, "", "metadata"], [900, 3, 1, "", "name"], [901, 4, 1, "", "next_functions"], [902, 3, 1, "", "register_hook"], [903, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [904, 5, 1, "", "load_nvprof"], [1, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[905, 3, 1, "", "export_chrome_trace"], [906, 3, 1, "", "key_averages"], [907, 4, 1, "", "self_cpu_time_total"], [908, 3, 1, "", "total_average"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPBackend"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "version"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.compiler": [[943, 5, 1, "", "allow_in_graph"], [944, 5, 1, "", "assume_constant_result"], [945, 5, 1, "", "compile"], [946, 5, 1, "", "disable"], [947, 5, 1, "", "list_backends"], [948, 5, 1, "", "reset"]], "torch.cpu": [[960, 1, 1, "", "Stream"], [961, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [962, 5, 1, "", "current_stream"], [963, 5, 1, "", "device_count"], [964, 5, 1, "", "is_available"], [965, 5, 1, "", "stream"], [966, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"]], "torch.cuda": [[968, 1, 1, "", "CUDAGraph"], [969, 1, 1, "", "CUDAPluggableAllocator"], [970, 1, 1, "", "Event"], [971, 1, 1, "", "ExternalStream"], [972, 6, 1, "", "OutOfMemoryError"], [973, 1, 1, "", "Stream"], [974, 1, 1, "", "StreamContext"], [17, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [975, 5, 1, "", "caching_allocator_alloc"], [976, 5, 1, "", "caching_allocator_delete"], [977, 5, 1, "", "can_device_access_peer"], [978, 5, 1, "", "change_current_allocator"], [979, 5, 1, "", "clock_rate"], [985, 5, 1, "", "current_blas_handle"], [986, 5, 1, "", "current_device"], [987, 5, 1, "", "current_stream"], [988, 5, 1, "", "default_stream"], [989, 1, 1, "", "device"], [990, 5, 1, "", "device_count"], [991, 1, 1, "", "device_of"], [992, 5, 1, "", "empty_cache"], [993, 5, 1, "", "get_allocator_backend"], [994, 5, 1, "", "get_arch_list"], [995, 5, 1, "", "get_device_capability"], [996, 5, 1, "", "get_device_name"], [997, 5, 1, "", "get_device_properties"], [998, 5, 1, "", "get_gencode_flags"], [999, 5, 1, "", "get_rng_state"], [1000, 5, 1, "", "get_rng_state_all"], [1001, 5, 1, "", "get_sync_debug_mode"], [1002, 1, 1, "", "graph"], [1003, 5, 1, "", "graph_pool_handle"], [1004, 5, 1, "", "init"], [1005, 5, 1, "", "initial_seed"], [1006, 5, 1, "", "ipc_collect"], [1007, 5, 1, "", "is_available"], [1008, 5, 1, "", "is_current_stream_capturing"], [1009, 5, 1, "", "is_initialized"], [1012, 5, 1, "", "list_gpu_processes"], [1013, 5, 1, "", "make_graphed_callables"], [1014, 5, 1, "", "manual_seed"], [1015, 5, 1, "", "manual_seed_all"], [1016, 5, 1, "", "max_memory_allocated"], [1017, 5, 1, "", "max_memory_cached"], [1018, 5, 1, "", "max_memory_reserved"], [1019, 5, 1, "", "mem_get_info"], [1020, 5, 1, "", "memory_allocated"], [1021, 5, 1, "", "memory_cached"], [1022, 5, 1, "", "memory_reserved"], [1023, 5, 1, "", "memory_snapshot"], [1024, 5, 1, "", "memory_stats"], [1025, 5, 1, "", "memory_summary"], [1026, 5, 1, "", "memory_usage"], [1030, 5, 1, "", "power_draw"], [1031, 5, 1, "", "reset_max_memory_allocated"], [1032, 5, 1, "", "reset_max_memory_cached"], [1033, 5, 1, "", "reset_peak_memory_stats"], [1034, 5, 1, "", "seed"], [1035, 5, 1, "", "seed_all"], [1036, 5, 1, "", "set_device"], [1037, 5, 1, "", "set_per_process_memory_fraction"], [1038, 5, 1, "", "set_rng_state"], [1039, 5, 1, "", "set_rng_state_all"], [1040, 5, 1, "", "set_stream"], [1041, 5, 1, "", "set_sync_debug_mode"], [1042, 5, 1, "", "stream"], [1043, 5, 1, "", "synchronize"], [1044, 5, 1, "", "temperature"], [1045, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[968, 3, 1, "", "capture_begin"], [968, 3, 1, "", "capture_end"], [968, 3, 1, "", "debug_dump"], [968, 3, 1, "", "enable_debug_mode"], [968, 3, 1, "", "pool"], [968, 3, 1, "", "replay"], [968, 3, 1, "", "reset"]], "torch.cuda.Event": [[970, 3, 1, "", "elapsed_time"], [970, 3, 1, "", "from_ipc_handle"], [970, 3, 1, "", "ipc_handle"], [970, 3, 1, "", "query"], [970, 3, 1, "", "record"], [970, 3, 1, "", "synchronize"], [970, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[971, 3, 1, "", "query"], [971, 3, 1, "", "record_event"], [971, 3, 1, "", "synchronize"], [971, 3, 1, "", "wait_event"], [971, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[973, 3, 1, "", "query"], [973, 3, 1, "", "record_event"], [973, 3, 1, "", "synchronize"], [973, 3, 1, "", "wait_event"], [973, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[17, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[0, 3, 1, "", "get_backoff_factor"], [0, 3, 1, "", "get_growth_factor"], [0, 3, 1, "", "get_growth_interval"], [0, 3, 1, "", "get_scale"], [0, 3, 1, "", "is_enabled"], [0, 3, 1, "", "load_state_dict"], [0, 3, 1, "", "scale"], [0, 3, 1, "", "set_backoff_factor"], [0, 3, 1, "", "set_growth_factor"], [0, 3, 1, "", "set_growth_interval"], [0, 3, 1, "", "state_dict"], [0, 3, 1, "", "step"], [0, 3, 1, "", "unscale_"], [0, 3, 1, "", "update"]], "torch.cuda.comm": [[980, 5, 1, "", "broadcast"], [981, 5, 1, "", "broadcast_coalesced"], [982, 5, 1, "", "gather"], [983, 5, 1, "", "reduce_add"], [984, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1010, 5, 1, "", "_create_jit_fn"], [1011, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.memory": [[1959, 5, 1, "", "_dump_snapshot"], [1959, 5, 1, "", "_record_memory_history"], [1959, 5, 1, "", "_snapshot"]], "torch.cuda.nvtx": [[1027, 5, 1, "", "mark"], [1028, 5, 1, "", "range_pop"], [1029, 5, 1, "", "range_push"]], "torch.distributed": [[23, 1, 1, "", "Backend"], [23, 1, 1, "", "DistBackendError"], [23, 1, 1, "", "FileStore"], [21, 1, 1, "", "GradBucket"], [23, 1, 1, "", "HashStore"], [23, 1, 1, "", "P2POp"], [23, 1, 1, "", "PrefixStore"], [23, 1, 1, "", "ReduceOp"], [23, 1, 1, "", "Store"], [23, 1, 1, "", "TCPStore"], [23, 0, 0, "-", "algorithms"], [23, 5, 1, "", "all_gather"], [23, 5, 1, "", "all_gather_into_tensor"], [23, 5, 1, "", "all_gather_multigpu"], [23, 5, 1, "", "all_gather_object"], [23, 5, 1, "", "all_reduce"], [23, 5, 1, "", "all_reduce_multigpu"], [23, 5, 1, "", "all_to_all"], [23, 5, 1, "", "all_to_all_single"], [1924, 0, 0, "-", "autograd"], [23, 5, 1, "", "barrier"], [23, 5, 1, "", "batch_isend_irecv"], [23, 5, 1, "", "broadcast"], [23, 5, 1, "", "broadcast_multigpu"], [23, 5, 1, "", "broadcast_object_list"], [25, 0, 0, "-", "checkpoint"], [23, 0, 0, "-", "elastic"], [46, 0, 0, "-", "fsdp"], [23, 5, 1, "", "gather"], [23, 5, 1, "", "gather_object"], [23, 5, 1, "", "get_backend"], [23, 5, 1, "", "get_global_rank"], [23, 5, 1, "", "get_group_rank"], [23, 5, 1, "", "get_process_group_ranks"], [23, 5, 1, "", "get_rank"], [23, 5, 1, "", "get_world_size"], [23, 5, 1, "", "init_process_group"], [23, 5, 1, "", "irecv"], [23, 5, 1, "", "is_available"], [23, 5, 1, "", "is_gloo_available"], [23, 5, 1, "", "is_initialized"], [23, 5, 1, "", "is_mpi_available"], [23, 5, 1, "", "is_nccl_available"], [23, 5, 1, "", "is_torchelastic_launched"], [23, 5, 1, "", "isend"], [23, 0, 0, "-", "launch"], [23, 0, 0, "-", "launcher"], [23, 5, 1, "", "monitored_barrier"], [23, 5, 1, "", "new_group"], [23, 0, 0, "-", "nn"], [27, 0, 0, "-", "optim"], [23, 0, 0, "-", "pipeline"], [23, 5, 1, "", "recv"], [23, 5, 1, "", "reduce"], [23, 5, 1, "", "reduce_multigpu"], [23, 1, 1, "", "reduce_op"], [23, 5, 1, "", "reduce_scatter"], [23, 5, 1, "", "reduce_scatter_multigpu"], [23, 5, 1, "", "reduce_scatter_tensor"], [1924, 0, 0, "-", "rpc"], [41, 0, 0, "-", "run"], [23, 5, 1, "", "scatter"], [23, 5, 1, "", "scatter_object_list"], [23, 5, 1, "", "send"], [23, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[23, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[21, 5, 1, "", "buffer"], [21, 5, 1, "", "gradients"], [21, 5, 1, "", "index"], [21, 5, 1, "", "is_last"], [21, 5, 1, "", "parameters"], [21, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[23, 5, 1, "", "add"], [23, 5, 1, "", "compare_set"], [23, 5, 1, "", "delete_key"], [23, 5, 1, "", "get"], [23, 5, 1, "", "num_keys"], [23, 5, 1, "", "set"], [23, 5, 1, "", "set_timeout"], [23, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[24, 1, 1, "", "Join"], [24, 1, 1, "", "JoinHook"], [24, 1, 1, "", "Joinable"], [23, 0, 0, "-", "ddp_comm_hooks"], [23, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[24, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[24, 3, 1, "", "main_hook"], [24, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[24, 4, 1, "", "join_device"], [24, 3, 1, "", "join_hook"], [24, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[21, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[21, 5, 1, "", "allreduce_hook"], [21, 5, 1, "", "bf16_compress_hook"], [21, 5, 1, "", "bf16_compress_wrapper"], [21, 5, 1, "", "fp16_compress_hook"], [21, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[21, 1, 1, "", "PowerSGDState"], [21, 5, 1, "", "batched_powerSGD_hook"], [21, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[21, 3, 1, "", "__getstate__"], [21, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1924, 5, 1, "", "backward"], [1924, 1, 1, "", "context"], [1924, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[25, 1, 1, "", "DefaultLoadPlanner"], [25, 1, 1, "", "DefaultSavePlanner"], [25, 1, 1, "", "FileSystemReader"], [25, 1, 1, "", "FileSystemWriter"], [25, 1, 1, "", "LoadPlan"], [25, 1, 1, "", "LoadPlanner"], [25, 1, 1, "", "ReadItem"], [25, 1, 1, "", "SavePlan"], [25, 1, 1, "", "SavePlanner"], [25, 1, 1, "", "StorageReader"], [25, 1, 1, "", "StorageWriter"], [25, 1, 1, "", "WriteItem"], [25, 5, 1, "", "load_state_dict"], [25, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[25, 3, 1, "", "lookup_tensor"], [25, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[25, 3, 1, "", "lookup_object"], [25, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[25, 3, 1, "", "commit_tensor"], [25, 3, 1, "", "create_global_plan"], [25, 3, 1, "", "create_local_plan"], [25, 3, 1, "", "finish_plan"], [25, 3, 1, "", "load_bytes"], [25, 3, 1, "", "resolve_tensor"], [25, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[25, 3, 1, "", "create_global_plan"], [25, 3, 1, "", "create_local_plan"], [25, 3, 1, "", "finish_plan"], [25, 3, 1, "", "resolve_data"], [25, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[25, 3, 1, "", "prepare_global_plan"], [25, 3, 1, "", "prepare_local_plan"], [25, 3, 1, "", "read_data"], [25, 3, 1, "", "read_metadata"], [25, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[25, 3, 1, "", "finish"], [25, 3, 1, "", "prepare_global_plan"], [25, 3, 1, "", "prepare_local_plan"], [25, 3, 1, "", "set_up_storage_writer"], [25, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[31, 0, 0, "-", "agent"], [34, 0, 0, "-", "events"], [37, 0, 0, "-", "metrics"], [38, 0, 0, "-", "multiprocessing"], [40, 0, 0, "-", "rendezvous"], [42, 0, 0, "-", "timer"], [23, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[31, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[31, 1, 1, "", "ElasticAgent"], [31, 1, 1, "", "SimpleElasticAgent"], [31, 1, 1, "", "Worker"], [31, 1, 1, "", "WorkerGroup"], [31, 1, 1, "", "WorkerSpec"], [31, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[31, 3, 1, "", "get_worker_group"], [31, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[31, 3, 1, "", "_assign_worker_ranks"], [31, 3, 1, "", "_exit_barrier"], [31, 3, 1, "", "_initialize_workers"], [31, 3, 1, "", "_monitor_workers"], [31, 3, 1, "", "_rendezvous"], [31, 3, 1, "", "_restart_workers"], [31, 3, 1, "", "_shutdown"], [31, 3, 1, "", "_start_workers"], [31, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[31, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[31, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[31, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[31, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[34, 1, 1, "", "Event"], [34, 2, 1, "", "EventMetadataValue"], [34, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[34, 5, 1, "", "get_logging_handler"], [34, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[37, 1, 1, "", "ConsoleMetricHandler"], [37, 1, 1, "", "MetricHandler"], [37, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[37, 5, 1, "", "configure"], [37, 5, 1, "", "prof"], [37, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[38, 1, 1, "", "MultiprocessContext"], [38, 1, 1, "", "PContext"], [38, 1, 1, "", "RunProcsResult"], [38, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[33, 0, 0, "-", "errors"], [38, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[33, 1, 1, "", "ChildFailedError"], [33, 1, 1, "", "ErrorHandler"], [33, 1, 1, "", "ProcessFailure"], [33, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[40, 1, 1, "", "RendezvousClosedError"], [40, 1, 1, "", "RendezvousConnectionError"], [40, 1, 1, "", "RendezvousError"], [40, 1, 1, "", "RendezvousHandler"], [40, 1, 1, "", "RendezvousHandlerRegistry"], [40, 1, 1, "", "RendezvousParameters"], [40, 1, 1, "", "RendezvousStateError"], [40, 1, 1, "", "RendezvousTimeoutError"], [40, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[40, 3, 1, "", "get_backend"], [40, 3, 1, "", "get_run_id"], [40, 3, 1, "", "is_closed"], [40, 3, 1, "", "next_rendezvous"], [40, 3, 1, "", "num_nodes_waiting"], [40, 3, 1, "", "set_closed"], [40, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[40, 3, 1, "", "create_handler"], [40, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[40, 3, 1, "", "get"], [40, 3, 1, "", "get_as_bool"], [40, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[40, 1, 1, "", "C10dRendezvousBackend"], [40, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[40, 3, 1, "", "get_state"], [40, 4, 1, "", "name"], [40, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[40, 1, 1, "", "DynamicRendezvousHandler"], [40, 1, 1, "", "RendezvousBackend"], [40, 1, 1, "", "RendezvousTimeout"], [40, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[40, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[40, 3, 1, "", "get_state"], [40, 4, 1, "", "name"], [40, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[40, 4, 1, "", "close"], [40, 4, 1, "", "heartbeat"], [40, 4, 1, "", "join"], [40, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[40, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[40, 1, 1, "", "EtcdRendezvousBackend"], [40, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[40, 3, 1, "", "get_state"], [40, 4, 1, "", "name"], [40, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[40, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[40, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[40, 3, 1, "", "add"], [40, 3, 1, "", "check"], [40, 3, 1, "", "get"], [40, 3, 1, "", "set"], [40, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[42, 1, 1, "", "FileTimerClient"], [42, 1, 1, "", "FileTimerServer"], [42, 1, 1, "", "LocalTimerClient"], [42, 1, 1, "", "LocalTimerServer"], [42, 1, 1, "", "TimerClient"], [42, 1, 1, "", "TimerRequest"], [42, 1, 1, "", "TimerServer"], [42, 5, 1, "", "configure"], [42, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[42, 3, 1, "", "acquire"], [42, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[42, 3, 1, "", "clear_timers"], [42, 3, 1, "", "get_expired_timers"], [42, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[23, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[46, 1, 1, "", "BackwardPrefetch"], [46, 1, 1, "", "CPUOffload"], [46, 1, 1, "", "FullOptimStateDictConfig"], [46, 1, 1, "", "FullStateDictConfig"], [46, 1, 1, "", "FullyShardedDataParallel"], [46, 1, 1, "", "LocalOptimStateDictConfig"], [46, 1, 1, "", "LocalStateDictConfig"], [46, 1, 1, "", "MixedPrecision"], [46, 1, 1, "", "OptimStateDictConfig"], [46, 1, 1, "", "ShardedOptimStateDictConfig"], [46, 1, 1, "", "ShardedStateDictConfig"], [46, 1, 1, "", "ShardingStrategy"], [46, 1, 1, "", "StateDictConfig"], [46, 1, 1, "", "StateDictSettings"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "clip_grad_norm_"], [46, 3, 1, "", "flatten_sharded_optim_state_dict"], [46, 3, 1, "", "forward"], [46, 3, 1, "", "fsdp_modules"], [46, 3, 1, "", "full_optim_state_dict"], [46, 3, 1, "", "get_state_dict_type"], [46, 4, 1, "", "module"], [46, 3, 1, "", "named_buffers"], [46, 3, 1, "", "named_parameters"], [46, 3, 1, "", "no_sync"], [46, 3, 1, "", "optim_state_dict"], [46, 3, 1, "", "optim_state_dict_to_load"], [46, 3, 1, "", "register_comm_hook"], [46, 3, 1, "", "rekey_optim_state_dict"], [46, 3, 1, "", "scatter_full_optim_state_dict"], [46, 3, 1, "", "set_state_dict_type"], [46, 3, 1, "", "shard_full_optim_state_dict"], [46, 3, 1, "", "sharded_optim_state_dict"], [46, 3, 1, "", "state_dict_type"], [46, 3, 1, "", "summon_full_params"]], "torch.distributed.nn": [[23, 0, 0, "-", "api"], [23, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1924, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1924, 3, 1, "", "get_module_rref"], [1924, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[23, 0, 0, "-", "templates"]], "torch.distributed.optim": [[27, 1, 1, "", "DistributedOptimizer"], [27, 1, 1, "", "PostLocalSGDOptimizer"], [27, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[27, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[27, 3, 1, "", "load_state_dict"], [27, 3, 1, "", "state_dict"], [27, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[27, 3, 1, "", "add_param_group"], [27, 3, 1, "", "consolidate_state_dict"], [27, 3, 1, "", "join_hook"], [27, 3, 1, "", "load_state_dict"], [27, 3, 1, "", "state_dict"], [27, 3, 1, "", "step"]], "torch.distributed.pipeline": [[23, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1917, 1, 1, "", "Pipe"], [23, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1917, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1917, 1, 1, "", "pop"], [1917, 5, 1, "", "skippable"], [1917, 1, 1, "", "stash"], [1917, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1924, 1, 1, "", "BackendType"], [1924, 1, 1, "", "PyRRef"], [1924, 1, 1, "", "RpcBackendOptions"], [1924, 1, 1, "", "TensorPipeRpcBackendOptions"], [1924, 1, 1, "", "WorkerInfo"], [1924, 5, 1, "", "get_worker_info"], [1924, 5, 1, "", "init_rpc"], [1924, 5, 1, "", "remote"], [1924, 5, 1, "", "rpc_async"], [1924, 5, 1, "", "rpc_sync"], [1924, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[1924, 3, 1, "", "backward"], [1924, 3, 1, "", "confirmed_by_owner"], [1924, 3, 1, "", "is_owner"], [1924, 3, 1, "", "local_value"], [1924, 3, 1, "", "owner"], [1924, 3, 1, "", "owner_name"], [1924, 3, 1, "", "remote"], [1924, 3, 1, "", "rpc_async"], [1924, 3, 1, "", "rpc_sync"], [1924, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[1924, 4, 1, "", "init_method"], [1924, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1924, 4, 1, "", "device_maps"], [1924, 4, 1, "", "devices"], [1924, 4, 1, "", "init_method"], [1924, 4, 1, "", "num_worker_threads"], [1924, 4, 1, "", "rpc_timeout"], [1924, 3, 1, "", "set_device_map"], [1924, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1924, 4, 1, "", "id"], [1924, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1924, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[28, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.ddp": [[28, 5, 1, "", "pre_dp_module_transform"]], "torch.distributed.tensor.parallel.fsdp": [[28, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel": [[28, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[28, 1, 1, "", "ColwiseParallel"], [28, 1, 1, "", "PairwiseParallel"], [28, 1, 1, "", "RowwiseParallel"], [28, 1, 1, "", "SequenceParallel"], [28, 5, 1, "", "make_input_replicate_1d"], [28, 5, 1, "", "make_input_reshard_replicate"], [28, 5, 1, "", "make_input_shard_1d"], [28, 5, 1, "", "make_input_shard_1d_last_dim"], [28, 5, 1, "", "make_output_replicate_1d"], [28, 5, 1, "", "make_output_reshard_tensor"], [28, 5, 1, "", "make_output_shard_1d"], [28, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[29, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.beta": [[29, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "concentration0"], [29, 4, 1, "", "concentration1"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.binomial": [[29, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.categorical": [[29, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[29, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.chi2": [[29, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "df"], [29, 3, 1, "", "expand"]], "torch.distributions": [[29, 0, 0, "-", "constraint_registry"], [29, 0, 0, "-", "constraints"], [29, 0, 0, "-", "kl"], [29, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[29, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[29, 3, 1, "", "register"]], "torch.distributions.constraints": [[29, 1, 1, "", "Constraint"], [29, 2, 1, "", "cat"], [29, 2, 1, "", "dependent_property"], [29, 2, 1, "", "greater_than"], [29, 2, 1, "", "greater_than_eq"], [29, 2, 1, "", "half_open_interval"], [29, 2, 1, "", "independent"], [29, 2, 1, "", "integer_interval"], [29, 2, 1, "", "interval"], [29, 2, 1, "", "less_than"], [29, 2, 1, "", "multinomial"], [29, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[29, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[29, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[29, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.distribution": [[29, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[29, 4, 1, "", "arg_constraints"], [29, 4, 1, "", "batch_shape"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 4, 1, "", "event_shape"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "perplexity"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 3, 1, "", "sample_n"], [29, 3, 1, "", "set_default_validate_args"], [29, 4, 1, "", "stddev"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[29, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[29, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[29, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[29, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.gamma": [[29, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.geometric": [[29, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[29, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[29, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "scale"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[29, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "scale"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.independent": [[29, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "has_enumerate_support"], [29, 4, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.kl": [[29, 5, 1, "", "kl_divergence"], [29, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[29, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.laplace": [[29, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[29, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"]], "torch.distributions.log_normal": [[29, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "loc"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "scale"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[29, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "covariance_matrix"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "precision_matrix"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "scale_tril"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[29, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 4, 1, "", "component_distribution"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mixture_distribution"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[29, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 2, 1, "", "total_count"], [29, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[29, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "covariance_matrix"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "precision_matrix"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "scale_tril"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[29, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.normal": [[29, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[29, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.pareto": [[29, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.poisson": [[29, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[29, 1, 1, "", "LogitRelaxedBernoulli"], [29, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "probs"], [29, 2, 1, "", "support"], [29, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[29, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "probs"], [29, 2, 1, "", "support"], [29, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[29, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[29, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"]], "torch.distributions.transforms": [[29, 1, 1, "", "AbsTransform"], [29, 1, 1, "", "AffineTransform"], [29, 1, 1, "", "CatTransform"], [29, 1, 1, "", "ComposeTransform"], [29, 1, 1, "", "CorrCholeskyTransform"], [29, 1, 1, "", "CumulativeDistributionTransform"], [29, 1, 1, "", "ExpTransform"], [29, 1, 1, "", "IndependentTransform"], [29, 1, 1, "", "LowerCholeskyTransform"], [29, 1, 1, "", "PositiveDefiniteTransform"], [29, 1, 1, "", "PowerTransform"], [29, 1, 1, "", "ReshapeTransform"], [29, 1, 1, "", "SigmoidTransform"], [29, 1, 1, "", "SoftmaxTransform"], [29, 1, 1, "", "SoftplusTransform"], [29, 1, 1, "", "StackTransform"], [29, 1, 1, "", "StickBreakingTransform"], [29, 1, 1, "", "TanhTransform"], [29, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[29, 3, 1, "", "forward_shape"], [29, 4, 1, "", "inv"], [29, 3, 1, "", "inverse_shape"], [29, 3, 1, "", "log_abs_det_jacobian"], [29, 4, 1, "", "sign"]], "torch.distributions.uniform": [[29, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "stddev"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[29, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.weibull": [[29, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.wishart": [[29, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "covariance_matrix"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "precision_matrix"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "scale_tril"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.export": [[44, 1, 1, "", "ArgumentKind"], [44, 1, 1, "", "ArgumentSpec"], [44, 1, 1, "", "Constraint"], [44, 1, 1, "", "ExportBackwardSignature"], [44, 1, 1, "", "ExportGraphSignature"], [44, 1, 1, "", "ExportedProgram"], [44, 1, 1, "", "ModuleCallEntry"], [44, 1, 1, "", "ModuleCallSignature"], [44, 5, 1, "", "constrain_as_size"], [44, 5, 1, "", "constrain_as_value"], [44, 5, 1, "", "dynamic_dim"], [44, 5, 1, "", "export"]], "torch.export.ExportedProgram": [[44, 3, 1, "", "module"], [44, 3, 1, "", "transform"], [44, 3, 1, "", "validate"]], "torch.fft": [[1083, 5, 1, "", "fft"], [1084, 5, 1, "", "fft2"], [1085, 5, 1, "", "fftfreq"], [1086, 5, 1, "", "fftn"], [1087, 5, 1, "", "fftshift"], [1088, 5, 1, "", "hfft"], [1089, 5, 1, "", "hfft2"], [1090, 5, 1, "", "hfftn"], [1091, 5, 1, "", "ifft"], [1092, 5, 1, "", "ifft2"], [1093, 5, 1, "", "ifftn"], [1094, 5, 1, "", "ifftshift"], [1095, 5, 1, "", "ihfft"], [1096, 5, 1, "", "ihfft2"], [1097, 5, 1, "", "ihfftn"], [1098, 5, 1, "", "irfft"], [1099, 5, 1, "", "irfft2"], [1100, 5, 1, "", "irfftn"], [1101, 5, 1, "", "rfft"], [1102, 5, 1, "", "rfft2"], [1103, 5, 1, "", "rfftfreq"], [1104, 5, 1, "", "rfftn"]], "torch.func": [[1123, 5, 1, "", "functional_call"], [1124, 5, 1, "", "functionalize"], [1125, 5, 1, "", "grad"], [1126, 5, 1, "", "grad_and_value"], [1127, 5, 1, "", "hessian"], [1128, 5, 1, "", "jacfwd"], [1129, 5, 1, "", "jacrev"], [1130, 5, 1, "", "jvp"], [1131, 5, 1, "", "linearize"], [1132, 5, 1, "", "replace_all_batch_norm_modules_"], [1133, 5, 1, "", "stack_module_state"], [1134, 5, 1, "", "vjp"], [1135, 5, 1, "", "vmap"]], "torch.futures": [[53, 1, 1, "", "Future"], [53, 5, 1, "", "collect_all"], [53, 5, 1, "", "wait_all"]], "torch.futures.Future": [[53, 3, 1, "", "add_done_callback"], [53, 3, 1, "", "done"], [53, 3, 1, "", "set_exception"], [53, 3, 1, "", "set_result"], [53, 3, 1, "", "then"], [53, 3, 1, "", "value"], [53, 3, 1, "", "wait"]], "torch.fx": [[54, 1, 1, "", "Graph"], [54, 1, 1, "", "GraphModule"], [54, 1, 1, "", "Interpreter"], [54, 1, 1, "", "Node"], [54, 1, 1, "", "Proxy"], [54, 1, 1, "", "Tracer"], [54, 1, 1, "", "Transformer"], [54, 0, 0, "-", "experimental"], [54, 0, 0, "-", "passes"], [54, 5, 1, "", "replace_pattern"], [54, 5, 1, "", "symbolic_trace"], [54, 5, 1, "", "wrap"]], "torch.fx.Graph": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "call_function"], [54, 3, 1, "", "call_method"], [54, 3, 1, "", "call_module"], [54, 3, 1, "", "create_node"], [54, 3, 1, "", "eliminate_dead_code"], [54, 3, 1, "", "erase_node"], [54, 3, 1, "", "get_attr"], [54, 3, 1, "", "graph_copy"], [54, 3, 1, "", "inserting_after"], [54, 3, 1, "", "inserting_before"], [54, 3, 1, "", "lint"], [54, 3, 1, "", "node_copy"], [54, 4, 1, "", "nodes"], [54, 3, 1, "", "on_generate_code"], [54, 3, 1, "", "output"], [54, 3, 1, "", "placeholder"], [54, 3, 1, "", "print_tabular"], [54, 3, 1, "", "process_inputs"], [54, 3, 1, "", "process_outputs"], [54, 3, 1, "", "python_code"], [54, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "add_submodule"], [54, 4, 1, "", "code"], [54, 3, 1, "", "delete_all_unused_submodules"], [54, 3, 1, "", "delete_submodule"], [54, 4, 1, "", "graph"], [54, 3, 1, "", "print_readable"], [54, 3, 1, "", "recompile"], [54, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[54, 3, 1, "", "boxed_run"], [54, 3, 1, "", "call_function"], [54, 3, 1, "", "call_method"], [54, 3, 1, "", "call_module"], [54, 3, 1, "", "fetch_args_kwargs_from_env"], [54, 3, 1, "", "fetch_attr"], [54, 3, 1, "", "get_attr"], [54, 3, 1, "", "map_nodes_to_values"], [54, 3, 1, "", "output"], [54, 3, 1, "", "placeholder"], [54, 3, 1, "", "run"], [54, 3, 1, "", "run_node"]], "torch.fx.Node": [[54, 4, 1, "", "all_input_nodes"], [54, 3, 1, "", "append"], [54, 4, 1, "", "args"], [54, 3, 1, "", "format_node"], [54, 3, 1, "", "is_impure"], [54, 4, 1, "", "kwargs"], [54, 4, 1, "", "next"], [54, 3, 1, "", "normalized_arguments"], [54, 3, 1, "", "prepend"], [54, 4, 1, "", "prev"], [54, 3, 1, "", "replace_all_uses_with"], [54, 3, 1, "", "replace_input_with"], [54, 4, 1, "", "stack_trace"], [54, 3, 1, "", "update_arg"], [54, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[54, 3, 1, "", "call_module"], [54, 3, 1, "", "create_arg"], [54, 3, 1, "", "create_args_for_root"], [54, 3, 1, "", "create_node"], [54, 3, 1, "", "create_proxy"], [54, 3, 1, "", "getattr"], [54, 3, 1, "", "is_leaf_module"], [54, 3, 1, "", "iter"], [54, 3, 1, "", "keys"], [54, 3, 1, "", "path_of_module"], [54, 3, 1, "", "proxy"], [54, 3, 1, "", "to_bool"], [54, 3, 1, "", "trace"]], "torch.fx.Transformer": [[54, 3, 1, "", "call_function"], [54, 3, 1, "", "call_module"], [54, 3, 1, "", "get_attr"], [54, 3, 1, "", "placeholder"], [54, 3, 1, "", "transform"]], "torch.fx.experimental": [[54, 0, 0, "-", "migrate_gradual_types"], [54, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[54, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[54, 0, 0, "-", "backends"], [54, 0, 0, "-", "dialect"], [54, 0, 0, "-", "infra"], [54, 0, 0, "-", "tests"], [54, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[54, 0, 0, "-", "common"]], "torch.hub": [[1869, 5, 1, "", "download_url_to_file"], [1869, 5, 1, "", "get_dir"], [1869, 5, 1, "", "help"], [1869, 5, 1, "", "list"], [1869, 5, 1, "", "load"], [1869, 5, 1, "", "load_state_dict_from_url"], [1869, 5, 1, "", "set_dir"]], "torch.jit": [[1192, 1, 1, "", "Attribute"], [1193, 1, 1, "", "ScriptFunction"], [1194, 1, 1, "", "ScriptModule"], [1195, 5, 1, "", "annotate"], [1196, 5, 1, "", "enable_onednn_fusion"], [1871, 5, 1, "", "export"], [1197, 5, 1, "", "fork"], [1198, 5, 1, "", "freeze"], [1199, 5, 1, "", "ignore"], [1873, 5, 1, "", "is_scripting"], [1873, 5, 1, "", "is_tracing"], [1200, 5, 1, "", "isinstance"], [1201, 5, 1, "", "load"], [1871, 0, 0, "-", "mobile"], [1202, 5, 1, "", "onednn_fusion_enabled"], [1203, 5, 1, "", "optimize_for_inference"], [1204, 5, 1, "", "save"], [1205, 5, 1, "", "script"], [1206, 5, 1, "", "script_if_tracing"], [1207, 5, 1, "", "set_fusion_strategy"], [1208, 1, 1, "", "strict_fusion"], [1872, 0, 0, "-", "supported_ops"], [1209, 5, 1, "", "trace"], [1210, 5, 1, "", "trace_module"], [1876, 0, 0, "-", "unsupported_tensor_ops"], [1211, 5, 1, "", "unused"], [1212, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1192, 3, 1, "", "count"], [1192, 3, 1, "", "index"], [1192, 2, 1, "", "type"], [1192, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1193, 3, 1, "", "get_debug_state"], [1193, 3, 1, "", "save"], [1193, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1194, 3, 1, "", "add_module"], [1194, 3, 1, "", "apply"], [1194, 3, 1, "", "bfloat16"], [1194, 3, 1, "", "buffers"], [1194, 3, 1, "", "children"], [1194, 4, 1, "", "code"], [1194, 4, 1, "", "code_with_constants"], [1194, 3, 1, "", "compile"], [1194, 3, 1, "", "cpu"], [1194, 3, 1, "", "cuda"], [1194, 3, 1, "", "double"], [1194, 3, 1, "", "eval"], [1194, 3, 1, "", "extra_repr"], [1194, 3, 1, "", "float"], [1194, 3, 1, "", "get_buffer"], [1194, 3, 1, "", "get_extra_state"], [1194, 3, 1, "", "get_parameter"], [1194, 3, 1, "", "get_submodule"], [1194, 4, 1, "", "graph"], [1194, 3, 1, "", "half"], [1194, 4, 1, "", "inlined_graph"], [1194, 3, 1, "", "ipu"], [1194, 3, 1, "", "load_state_dict"], [1194, 3, 1, "", "modules"], [1194, 3, 1, "", "named_buffers"], [1194, 3, 1, "", "named_children"], [1194, 3, 1, "", "named_modules"], [1194, 3, 1, "", "named_parameters"], [1194, 3, 1, "", "parameters"], [1194, 3, 1, "", "register_backward_hook"], [1194, 3, 1, "", "register_buffer"], [1194, 3, 1, "", "register_forward_hook"], [1194, 3, 1, "", "register_forward_pre_hook"], [1194, 3, 1, "", "register_full_backward_hook"], [1194, 3, 1, "", "register_full_backward_pre_hook"], [1194, 3, 1, "", "register_load_state_dict_post_hook"], [1194, 3, 1, "", "register_module"], [1194, 3, 1, "", "register_parameter"], [1194, 3, 1, "", "register_state_dict_pre_hook"], [1194, 3, 1, "", "requires_grad_"], [1194, 3, 1, "", "save"], [1194, 3, 1, "", "set_extra_state"], [1194, 3, 1, "", "share_memory"], [1194, 3, 1, "", "state_dict"], [1194, 3, 1, "", "to"], [1194, 3, 1, "", "to_empty"], [1194, 3, 1, "", "train"], [1194, 3, 1, "", "type"], [1194, 3, 1, "", "xpu"], [1194, 3, 1, "", "zero_grad"]], "torch.library": [[1878, 1, 1, "", "Library"], [1878, 5, 1, "", "fallthrough_kernel"]], "torch.library.Library": [[1878, 3, 1, "", "define"], [1878, 3, 1, "", "impl"]], "torch.linalg": [[1223, 5, 1, "", "cholesky"], [1224, 5, 1, "", "cholesky_ex"], [1225, 5, 1, "", "cond"], [1226, 5, 1, "", "cross"], [1227, 5, 1, "", "det"], [1228, 5, 1, "", "diagonal"], [1229, 5, 1, "", "eig"], [1230, 5, 1, "", "eigh"], [1231, 5, 1, "", "eigvals"], [1232, 5, 1, "", "eigvalsh"], [1233, 5, 1, "", "householder_product"], [1234, 5, 1, "", "inv"], [1235, 5, 1, "", "inv_ex"], [1236, 5, 1, "", "ldl_factor"], [1237, 5, 1, "", "ldl_factor_ex"], [1238, 5, 1, "", "ldl_solve"], [1239, 5, 1, "", "lstsq"], [1240, 5, 1, "", "lu"], [1241, 5, 1, "", "lu_factor"], [1242, 5, 1, "", "lu_factor_ex"], [1243, 5, 1, "", "lu_solve"], [1244, 5, 1, "", "matmul"], [1245, 5, 1, "", "matrix_exp"], [1246, 5, 1, "", "matrix_norm"], [1247, 5, 1, "", "matrix_power"], [1248, 5, 1, "", "matrix_rank"], [1249, 5, 1, "", "multi_dot"], [1250, 5, 1, "", "norm"], [1251, 5, 1, "", "pinv"], [1252, 5, 1, "", "qr"], [1253, 5, 1, "", "slogdet"], [1254, 5, 1, "", "solve"], [1255, 5, 1, "", "solve_ex"], [1256, 5, 1, "", "solve_triangular"], [1257, 5, 1, "", "svd"], [1258, 5, 1, "", "svdvals"], [1259, 5, 1, "", "tensorinv"], [1260, 5, 1, "", "tensorsolve"], [1261, 5, 1, "", "vander"], [1262, 5, 1, "", "vecdot"], [1263, 5, 1, "", "vector_norm"]], "torch.masked": [[1881, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1884, 1, 1, "", "Aggregation"], [1884, 1, 1, "", "Event"], [1884, 1, 1, "", "EventHandlerHandle"], [1884, 1, 1, "", "Stat"], [1884, 1, 1, "", "TensorboardEventHandler"], [1884, 1, 1, "", "data_value_t"], [1884, 5, 1, "", "log_event"], [1884, 5, 1, "", "register_event_handler"], [1884, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1884, 4, 1, "", "name"]], "torch.monitor.Event": [[1884, 3, 1, "", "__init__"], [1884, 4, 1, "", "data"], [1884, 4, 1, "", "name"], [1884, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1884, 3, 1, "", "__init__"], [1884, 3, 1, "", "add"], [1884, 4, 1, "", "count"], [1884, 3, 1, "", "get"], [1884, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1884, 3, 1, "", "__init__"]], "torch.mps": [[1302, 5, 1, "", "current_allocated_memory"], [1303, 5, 1, "", "driver_allocated_memory"], [1304, 5, 1, "", "empty_cache"], [1306, 5, 1, "", "get_rng_state"], [1307, 5, 1, "", "manual_seed"], [1311, 5, 1, "", "seed"], [1312, 5, 1, "", "set_per_process_memory_fraction"], [1313, 5, 1, "", "set_rng_state"], [1314, 5, 1, "", "synchronize"]], "torch.mps.event": [[1305, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1305, 3, 1, "", "elapsed_time"], [1305, 3, 1, "", "query"], [1305, 3, 1, "", "record"], [1305, 3, 1, "", "synchronize"], [1305, 3, 1, "", "wait"]], "torch.mps.profiler": [[1308, 5, 1, "", "profile"], [1309, 5, 1, "", "start"], [1310, 5, 1, "", "stop"]], "torch.multiprocessing": [[1886, 1, 1, "", "SpawnContext"], [1886, 5, 1, "", "get_all_sharing_strategies"], [1886, 5, 1, "", "get_sharing_strategy"], [1886, 5, 1, "", "set_sharing_strategy"], [1886, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1886, 3, 1, "", "join"]], "torch.nested": [[1889, 5, 1, "", "as_nested_tensor"], [1889, 5, 1, "", "nested_tensor"], [1889, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1332, 1, 1, "", "AdaptiveAvgPool1d"], [1333, 1, 1, "", "AdaptiveAvgPool2d"], [1334, 1, 1, "", "AdaptiveAvgPool3d"], [1335, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1336, 1, 1, "", "AdaptiveMaxPool1d"], [1337, 1, 1, "", "AdaptiveMaxPool2d"], [1338, 1, 1, "", "AdaptiveMaxPool3d"], [1339, 1, 1, "", "AlphaDropout"], [1340, 1, 1, "", "AvgPool1d"], [1341, 1, 1, "", "AvgPool2d"], [1342, 1, 1, "", "AvgPool3d"], [1343, 1, 1, "", "BCELoss"], [1344, 1, 1, "", "BCEWithLogitsLoss"], [1345, 1, 1, "", "BatchNorm1d"], [1346, 1, 1, "", "BatchNorm2d"], [1347, 1, 1, "", "BatchNorm3d"], [1348, 1, 1, "", "Bilinear"], [1349, 1, 1, "", "CELU"], [1350, 1, 1, "", "CTCLoss"], [1351, 1, 1, "", "ChannelShuffle"], [1352, 1, 1, "", "ConstantPad1d"], [1353, 1, 1, "", "ConstantPad2d"], [1354, 1, 1, "", "ConstantPad3d"], [1355, 1, 1, "", "Conv1d"], [1356, 1, 1, "", "Conv2d"], [1357, 1, 1, "", "Conv3d"], [1358, 1, 1, "", "ConvTranspose1d"], [1359, 1, 1, "", "ConvTranspose2d"], [1360, 1, 1, "", "ConvTranspose3d"], [1361, 1, 1, "", "CosineEmbeddingLoss"], [1362, 1, 1, "", "CosineSimilarity"], [1363, 1, 1, "", "CrossEntropyLoss"], [1364, 1, 1, "", "DataParallel"], [1365, 1, 1, "", "Dropout"], [1366, 1, 1, "", "Dropout1d"], [1367, 1, 1, "", "Dropout2d"], [1368, 1, 1, "", "Dropout3d"], [1369, 1, 1, "", "ELU"], [1370, 1, 1, "", "Embedding"], [1371, 1, 1, "", "EmbeddingBag"], [1372, 1, 1, "", "FeatureAlphaDropout"], [1373, 1, 1, "", "Flatten"], [1374, 1, 1, "", "Fold"], [1375, 1, 1, "", "FractionalMaxPool2d"], [1376, 1, 1, "", "FractionalMaxPool3d"], [1377, 1, 1, "", "GELU"], [1378, 1, 1, "", "GLU"], [1379, 1, 1, "", "GRU"], [1380, 1, 1, "", "GRUCell"], [1381, 1, 1, "", "GaussianNLLLoss"], [1382, 1, 1, "", "GroupNorm"], [1383, 1, 1, "", "Hardshrink"], [1384, 1, 1, "", "Hardsigmoid"], [1385, 1, 1, "", "Hardswish"], [1386, 1, 1, "", "Hardtanh"], [1387, 1, 1, "", "HingeEmbeddingLoss"], [1388, 1, 1, "", "HuberLoss"], [1389, 1, 1, "", "Identity"], [1390, 1, 1, "", "InstanceNorm1d"], [1391, 1, 1, "", "InstanceNorm2d"], [1392, 1, 1, "", "InstanceNorm3d"], [1393, 1, 1, "", "KLDivLoss"], [1394, 1, 1, "", "L1Loss"], [1395, 1, 1, "", "LPPool1d"], [1396, 1, 1, "", "LPPool2d"], [1397, 1, 1, "", "LSTM"], [1398, 1, 1, "", "LSTMCell"], [1399, 1, 1, "", "LayerNorm"], [1400, 1, 1, "", "LazyBatchNorm1d"], [1401, 1, 1, "", "LazyBatchNorm2d"], [1402, 1, 1, "", "LazyBatchNorm3d"], [1403, 1, 1, "", "LazyConv1d"], [1404, 1, 1, "", "LazyConv2d"], [1405, 1, 1, "", "LazyConv3d"], [1406, 1, 1, "", "LazyConvTranspose1d"], [1407, 1, 1, "", "LazyConvTranspose2d"], [1408, 1, 1, "", "LazyConvTranspose3d"], [1409, 1, 1, "", "LazyInstanceNorm1d"], [1410, 1, 1, "", "LazyInstanceNorm2d"], [1411, 1, 1, "", "LazyInstanceNorm3d"], [1412, 1, 1, "", "LazyLinear"], [1413, 1, 1, "", "LeakyReLU"], [1414, 1, 1, "", "Linear"], [1415, 1, 1, "", "LocalResponseNorm"], [1416, 1, 1, "", "LogSigmoid"], [1417, 1, 1, "", "LogSoftmax"], [1418, 1, 1, "", "MSELoss"], [1419, 1, 1, "", "MarginRankingLoss"], [1420, 1, 1, "", "MaxPool1d"], [1421, 1, 1, "", "MaxPool2d"], [1422, 1, 1, "", "MaxPool3d"], [1423, 1, 1, "", "MaxUnpool1d"], [1424, 1, 1, "", "MaxUnpool2d"], [1425, 1, 1, "", "MaxUnpool3d"], [1426, 1, 1, "", "Mish"], [1427, 1, 1, "", "Module"], [1428, 1, 1, "", "ModuleDict"], [1429, 1, 1, "", "ModuleList"], [1430, 1, 1, "", "MultiLabelMarginLoss"], [1431, 1, 1, "", "MultiLabelSoftMarginLoss"], [1432, 1, 1, "", "MultiMarginLoss"], [1433, 1, 1, "", "MultiheadAttention"], [1434, 1, 1, "", "NLLLoss"], [1435, 1, 1, "", "PReLU"], [1436, 1, 1, "", "PairwiseDistance"], [1437, 1, 1, "", "ParameterDict"], [1438, 1, 1, "", "ParameterList"], [1439, 1, 1, "", "PixelShuffle"], [1440, 1, 1, "", "PixelUnshuffle"], [1441, 1, 1, "", "PoissonNLLLoss"], [1442, 1, 1, "", "RNN"], [1443, 1, 1, "", "RNNBase"], [1444, 1, 1, "", "RNNCell"], [1445, 1, 1, "", "RReLU"], [1446, 1, 1, "", "ReLU"], [1447, 1, 1, "", "ReLU6"], [1448, 1, 1, "", "ReflectionPad1d"], [1449, 1, 1, "", "ReflectionPad2d"], [1450, 1, 1, "", "ReflectionPad3d"], [1451, 1, 1, "", "ReplicationPad1d"], [1452, 1, 1, "", "ReplicationPad2d"], [1453, 1, 1, "", "ReplicationPad3d"], [1454, 1, 1, "", "SELU"], [1455, 1, 1, "", "Sequential"], [1456, 1, 1, "", "SiLU"], [1457, 1, 1, "", "Sigmoid"], [1458, 1, 1, "", "SmoothL1Loss"], [1459, 1, 1, "", "SoftMarginLoss"], [1460, 1, 1, "", "Softmax"], [1461, 1, 1, "", "Softmax2d"], [1462, 1, 1, "", "Softmin"], [1463, 1, 1, "", "Softplus"], [1464, 1, 1, "", "Softshrink"], [1465, 1, 1, "", "Softsign"], [1466, 1, 1, "", "SyncBatchNorm"], [1467, 1, 1, "", "Tanh"], [1468, 1, 1, "", "Tanhshrink"], [1469, 1, 1, "", "Threshold"], [1470, 1, 1, "", "Transformer"], [1471, 1, 1, "", "TransformerDecoder"], [1472, 1, 1, "", "TransformerDecoderLayer"], [1473, 1, 1, "", "TransformerEncoder"], [1474, 1, 1, "", "TransformerEncoderLayer"], [1475, 1, 1, "", "TripletMarginLoss"], [1476, 1, 1, "", "TripletMarginWithDistanceLoss"], [1477, 1, 1, "", "Unflatten"], [1478, 1, 1, "", "Unfold"], [1479, 1, 1, "", "Upsample"], [1480, 1, 1, "", "UpsamplingBilinear2d"], [1481, 1, 1, "", "UpsamplingNearest2d"], [1482, 1, 1, "", "ZeroPad1d"], [1483, 1, 1, "", "ZeroPad2d"], [1484, 1, 1, "", "ZeroPad3d"], [1890, 0, 0, "-", "backends"], [1922, 0, 0, "-", "intrinsic"], [1890, 0, 0, "-", "modules"], [1890, 0, 0, "-", "parallel"], [1922, 0, 0, "-", "qat"], [1922, 0, 0, "-", "quantizable"], [1922, 0, 0, "-", "quantized"], [1890, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1335, 3, 1, "", "log_prob"], [1335, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1370, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1371, 3, 1, "", "forward"], [1371, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1400, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1401, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1402, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1403, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1404, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1405, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1406, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1407, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1408, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1409, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1410, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1411, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1412, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1427, 3, 1, "", "add_module"], [1427, 3, 1, "", "apply"], [1427, 3, 1, "", "bfloat16"], [1427, 3, 1, "", "buffers"], [1427, 3, 1, "", "children"], [1427, 3, 1, "", "compile"], [1427, 3, 1, "", "cpu"], [1427, 3, 1, "", "cuda"], [1427, 3, 1, "", "double"], [1427, 3, 1, "", "eval"], [1427, 3, 1, "", "extra_repr"], [1427, 3, 1, "", "float"], [1427, 3, 1, "", "forward"], [1427, 3, 1, "", "get_buffer"], [1427, 3, 1, "", "get_extra_state"], [1427, 3, 1, "", "get_parameter"], [1427, 3, 1, "", "get_submodule"], [1427, 3, 1, "", "half"], [1427, 3, 1, "", "ipu"], [1427, 3, 1, "", "load_state_dict"], [1427, 3, 1, "", "modules"], [1427, 3, 1, "", "named_buffers"], [1427, 3, 1, "", "named_children"], [1427, 3, 1, "", "named_modules"], [1427, 3, 1, "", "named_parameters"], [1427, 3, 1, "", "parameters"], [1427, 3, 1, "", "register_backward_hook"], [1427, 3, 1, "", "register_buffer"], [1427, 3, 1, "", "register_forward_hook"], [1427, 3, 1, "", "register_forward_pre_hook"], [1427, 3, 1, "", "register_full_backward_hook"], [1427, 3, 1, "", "register_full_backward_pre_hook"], [1427, 3, 1, "", "register_load_state_dict_post_hook"], [1427, 3, 1, "", "register_module"], [1427, 3, 1, "", "register_parameter"], [1427, 3, 1, "", "register_state_dict_pre_hook"], [1427, 3, 1, "", "requires_grad_"], [1427, 3, 1, "", "set_extra_state"], [1427, 3, 1, "", "share_memory"], [1427, 3, 1, "", "state_dict"], [1427, 3, 1, "", "to"], [1427, 3, 1, "", "to_empty"], [1427, 3, 1, "", "train"], [1427, 3, 1, "", "type"], [1427, 3, 1, "", "xpu"], [1427, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1428, 3, 1, "", "clear"], [1428, 3, 1, "", "items"], [1428, 3, 1, "", "keys"], [1428, 3, 1, "", "pop"], [1428, 3, 1, "", "update"], [1428, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1429, 3, 1, "", "append"], [1429, 3, 1, "", "extend"], [1429, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1433, 3, 1, "", "forward"], [1433, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1437, 3, 1, "", "clear"], [1437, 3, 1, "", "copy"], [1437, 3, 1, "", "fromkeys"], [1437, 3, 1, "", "get"], [1437, 3, 1, "", "items"], [1437, 3, 1, "", "keys"], [1437, 3, 1, "", "pop"], [1437, 3, 1, "", "popitem"], [1437, 3, 1, "", "setdefault"], [1437, 3, 1, "", "update"], [1437, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1438, 3, 1, "", "append"], [1438, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1443, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1455, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1466, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1470, 3, 1, "", "forward"], [1470, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1471, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1472, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1473, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1474, 3, 1, "", "forward"]], "torch.nn.functional": [[1485, 5, 1, "", "adaptive_avg_pool1d"], [1486, 5, 1, "", "adaptive_avg_pool2d"], [1487, 5, 1, "", "adaptive_avg_pool3d"], [1488, 5, 1, "", "adaptive_max_pool1d"], [1489, 5, 1, "", "adaptive_max_pool2d"], [1490, 5, 1, "", "adaptive_max_pool3d"], [1491, 5, 1, "", "affine_grid"], [1492, 5, 1, "", "alpha_dropout"], [1493, 5, 1, "", "avg_pool1d"], [1494, 5, 1, "", "avg_pool2d"], [1495, 5, 1, "", "avg_pool3d"], [1496, 5, 1, "", "batch_norm"], [1497, 5, 1, "", "bilinear"], [1498, 5, 1, "", "binary_cross_entropy"], [1499, 5, 1, "", "binary_cross_entropy_with_logits"], [1500, 5, 1, "", "celu"], [1501, 5, 1, "", "conv1d"], [1502, 5, 1, "", "conv2d"], [1503, 5, 1, "", "conv3d"], [1504, 5, 1, "", "conv_transpose1d"], [1505, 5, 1, "", "conv_transpose2d"], [1506, 5, 1, "", "conv_transpose3d"], [1507, 5, 1, "", "cosine_embedding_loss"], [1508, 5, 1, "", "cosine_similarity"], [1509, 5, 1, "", "cross_entropy"], [1510, 5, 1, "", "ctc_loss"], [1511, 5, 1, "", "dropout"], [1512, 5, 1, "", "dropout1d"], [1513, 5, 1, "", "dropout2d"], [1514, 5, 1, "", "dropout3d"], [1515, 5, 1, "", "elu"], [1516, 5, 1, "", "elu_"], [1517, 5, 1, "", "embedding"], [1518, 5, 1, "", "embedding_bag"], [1519, 5, 1, "", "feature_alpha_dropout"], [1520, 5, 1, "", "fold"], [1521, 5, 1, "", "fractional_max_pool2d"], [1522, 5, 1, "", "fractional_max_pool3d"], [1523, 5, 1, "", "gaussian_nll_loss"], [1524, 5, 1, "", "gelu"], [1525, 5, 1, "", "glu"], [1526, 5, 1, "", "grid_sample"], [1527, 5, 1, "", "group_norm"], [1528, 5, 1, "", "gumbel_softmax"], [1529, 5, 1, "", "hardshrink"], [1530, 5, 1, "", "hardsigmoid"], [1531, 5, 1, "", "hardswish"], [1532, 5, 1, "", "hardtanh"], [1533, 5, 1, "", "hardtanh_"], [1534, 5, 1, "", "hinge_embedding_loss"], [1535, 5, 1, "", "huber_loss"], [1536, 5, 1, "", "instance_norm"], [1537, 5, 1, "", "interpolate"], [1538, 5, 1, "", "kl_div"], [1539, 5, 1, "", "l1_loss"], [1540, 5, 1, "", "layer_norm"], [1541, 5, 1, "", "leaky_relu"], [1542, 5, 1, "", "leaky_relu_"], [1543, 5, 1, "", "linear"], [1544, 5, 1, "", "local_response_norm"], [1545, 5, 1, "", "log_softmax"], [1546, 5, 1, "", "logsigmoid"], [1547, 5, 1, "", "lp_pool1d"], [1548, 5, 1, "", "lp_pool2d"], [1549, 5, 1, "", "margin_ranking_loss"], [1550, 5, 1, "", "max_pool1d"], [1551, 5, 1, "", "max_pool2d"], [1552, 5, 1, "", "max_pool3d"], [1553, 5, 1, "", "max_unpool1d"], [1554, 5, 1, "", "max_unpool2d"], [1555, 5, 1, "", "max_unpool3d"], [1556, 5, 1, "", "mish"], [1557, 5, 1, "", "mse_loss"], [1558, 5, 1, "", "multi_margin_loss"], [1559, 5, 1, "", "multilabel_margin_loss"], [1560, 5, 1, "", "multilabel_soft_margin_loss"], [1561, 5, 1, "", "nll_loss"], [1562, 5, 1, "", "normalize"], [1563, 5, 1, "", "one_hot"], [1564, 5, 1, "", "pad"], [1565, 5, 1, "", "pairwise_distance"], [1566, 5, 1, "", "pdist"], [1567, 5, 1, "", "pixel_shuffle"], [1568, 5, 1, "", "pixel_unshuffle"], [1569, 5, 1, "", "poisson_nll_loss"], [1570, 5, 1, "", "prelu"], [1571, 5, 1, "", "relu"], [1572, 5, 1, "", "relu6"], [1573, 5, 1, "", "relu_"], [1574, 5, 1, "", "rrelu"], [1575, 5, 1, "", "rrelu_"], [1576, 5, 1, "", "scaled_dot_product_attention"], [1577, 5, 1, "", "selu"], [1578, 5, 1, "", "sigmoid"], [1579, 5, 1, "", "silu"], [1580, 5, 1, "", "smooth_l1_loss"], [1581, 5, 1, "", "soft_margin_loss"], [1582, 5, 1, "", "softmax"], [1583, 5, 1, "", "softmin"], [1584, 5, 1, "", "softplus"], [1585, 5, 1, "", "softshrink"], [1586, 5, 1, "", "softsign"], [1587, 5, 1, "", "tanh"], [1588, 5, 1, "", "tanhshrink"], [1589, 5, 1, "", "threshold"], [1590, 5, 1, "", "threshold_"], [1592, 5, 1, "", "triplet_margin_loss"], [1593, 5, 1, "", "triplet_margin_with_distance_loss"], [1594, 5, 1, "", "unfold"], [1595, 5, 1, "", "upsample"], [1596, 5, 1, "", "upsample_bilinear"], [1597, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1892, 5, 1, "", "calculate_gain"], [1892, 5, 1, "", "constant_"], [1892, 5, 1, "", "dirac_"], [1892, 5, 1, "", "eye_"], [1892, 5, 1, "", "kaiming_normal_"], [1892, 5, 1, "", "kaiming_uniform_"], [1892, 5, 1, "", "normal_"], [1892, 5, 1, "", "ones_"], [1892, 5, 1, "", "orthogonal_"], [1892, 5, 1, "", "sparse_"], [1892, 5, 1, "", "trunc_normal_"], [1892, 5, 1, "", "uniform_"], [1892, 5, 1, "", "xavier_normal_"], [1892, 5, 1, "", "xavier_uniform_"], [1892, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1922, 0, 0, "-", "modules"], [1922, 0, 0, "-", "qat"], [1922, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1922, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1922, 0, 0, "-", "dynamic"], [1922, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1922, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1598, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1598, 3, 1, "", "has_uninitialized_params"], [1598, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1599, 5, 1, "", "register_module_backward_hook"], [1600, 5, 1, "", "register_module_buffer_registration_hook"], [1601, 5, 1, "", "register_module_forward_hook"], [1602, 5, 1, "", "register_module_forward_pre_hook"], [1603, 5, 1, "", "register_module_full_backward_hook"], [1604, 5, 1, "", "register_module_full_backward_pre_hook"], [1605, 5, 1, "", "register_module_module_registration_hook"], [1606, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1607, 1, 1, "", "DistributedDataParallel"], [1591, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1607, 3, 1, "", "join"], [1607, 3, 1, "", "join_hook"], [1607, 3, 1, "", "no_sync"], [1607, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1608, 1, 1, "", "Parameter"], [1609, 1, 1, "", "UninitializedBuffer"], [1610, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1610, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1922, 0, 0, "-", "dynamic"], [1922, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1922, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1922, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1922, 0, 0, "-", "dynamic"], [1922, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1922, 0, 0, "-", "modules"]], "torch.nn.utils": [[1611, 5, 1, "", "clip_grad_norm_"], [1612, 5, 1, "", "clip_grad_value_"], [1613, 5, 1, "", "parameters_to_vector"], [1638, 5, 1, "", "remove_spectral_norm"], [1639, 5, 1, "", "remove_weight_norm"], [1647, 5, 1, "", "skip_init"], [1648, 5, 1, "", "spectral_norm"], [1890, 0, 0, "-", "stateless"], [1650, 5, 1, "", "vector_to_parameters"], [1651, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1614, 5, 1, "", "orthogonal"], [1615, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1616, 1, 1, "", "ParametrizationList"], [1617, 5, 1, "", "cached"], [1618, 5, 1, "", "is_parametrized"], [1619, 5, 1, "", "register_parametrization"], [1620, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1616, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1621, 1, 1, "", "BasePruningMethod"], [1622, 1, 1, "", "CustomFromMask"], [1623, 1, 1, "", "Identity"], [1624, 1, 1, "", "L1Unstructured"], [1625, 1, 1, "", "LnStructured"], [1626, 1, 1, "", "PruningContainer"], [1627, 1, 1, "", "RandomStructured"], [1628, 1, 1, "", "RandomUnstructured"], [1629, 5, 1, "", "custom_from_mask"], [1630, 5, 1, "", "global_unstructured"], [1631, 5, 1, "", "identity"], [1632, 5, 1, "", "is_pruned"], [1633, 5, 1, "", "l1_unstructured"], [1634, 5, 1, "", "ln_structured"], [1635, 5, 1, "", "random_structured"], [1636, 5, 1, "", "random_unstructured"], [1637, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1621, 3, 1, "", "apply"], [1621, 3, 1, "", "apply_mask"], [1621, 3, 1, "", "compute_mask"], [1621, 3, 1, "", "prune"], [1621, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1622, 3, 1, "", "apply"], [1622, 3, 1, "", "apply_mask"], [1622, 3, 1, "", "prune"], [1622, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1623, 3, 1, "", "apply"], [1623, 3, 1, "", "apply_mask"], [1623, 3, 1, "", "prune"], [1623, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1624, 3, 1, "", "apply"], [1624, 3, 1, "", "apply_mask"], [1624, 3, 1, "", "prune"], [1624, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1625, 3, 1, "", "apply"], [1625, 3, 1, "", "apply_mask"], [1625, 3, 1, "", "compute_mask"], [1625, 3, 1, "", "prune"], [1625, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1626, 3, 1, "", "add_pruning_method"], [1626, 3, 1, "", "apply"], [1626, 3, 1, "", "apply_mask"], [1626, 3, 1, "", "compute_mask"], [1626, 3, 1, "", "prune"], [1626, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1627, 3, 1, "", "apply"], [1627, 3, 1, "", "apply_mask"], [1627, 3, 1, "", "compute_mask"], [1627, 3, 1, "", "prune"], [1627, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1628, 3, 1, "", "apply"], [1628, 3, 1, "", "apply_mask"], [1628, 3, 1, "", "prune"], [1628, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1640, 1, 1, "", "PackedSequence"], [1641, 5, 1, "", "pack_padded_sequence"], [1642, 5, 1, "", "pack_sequence"], [1643, 5, 1, "", "pad_packed_sequence"], [1644, 5, 1, "", "pad_sequence"], [1645, 5, 1, "", "unpack_sequence"], [1646, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1640, 2, 1, "", "batch_sizes"], [1640, 3, 1, "", "count"], [1640, 2, 1, "", "data"], [1640, 3, 1, "", "index"], [1640, 4, 1, "", "is_cuda"], [1640, 3, 1, "", "is_pinned"], [1640, 2, 1, "", "sorted_indices"], [1640, 3, 1, "", "to"], [1640, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1649, 5, 1, "", "functional_call"]], "torch.onnx": [[1660, 1, 1, "", "DiagnosticOptions"], [1661, 1, 1, "", "ExportOptions"], [1662, 1, 1, "", "ExportOutput"], [1663, 1, 1, "", "ExportOutputSerializer"], [1664, 1, 1, "", "JitScalarType"], [1665, 1, 1, "", "OnnxExporterError"], [1666, 1, 1, "", "OnnxRegistry"], [1912, 5, 1, "", "disable_log"], [1912, 5, 1, "", "dynamo_export"], [1912, 5, 1, "", "enable_fake_mode"], [1912, 5, 1, "", "enable_log"], [1912, 5, 1, "", "export"], [1912, 5, 1, "", "export_to_pretty_string"], [1912, 5, 1, "", "is_in_onnx_export"], [1912, 5, 1, "", "register_custom_op_symbolic"], [1912, 5, 1, "", "select_model_mode_for_export"], [1912, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1662, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1662, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1662, 4, 1, "", "diagnostic_context"], [1662, 4, 1, "", "fake_context"], [1662, 4, 1, "", "model_proto"], [1662, 3, 1, "", "save"], [1662, 3, 1, "", "save_diagnostics"]], "torch.onnx.ExportOutputSerializer": [[1663, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1664, 3, 1, "", "dtype"], [1664, 3, 1, "", "from_dtype"], [1664, 3, 1, "", "from_value"], [1664, 3, 1, "", "onnx_compatible"], [1664, 3, 1, "", "onnx_type"], [1664, 3, 1, "", "scalar_name"], [1664, 3, 1, "", "torch_name"]], "torch.onnx.OnnxRegistry": [[1666, 3, 1, "", "get_op_functions"], [1666, 3, 1, "", "is_registered_op"], [1666, 4, 1, "", "opset_version"], [1666, 3, 1, "", "register_op"]], "torch.onnx._internal": [[1913, 0, 0, "-", "diagnostics"]], "torch.onnx._internal.diagnostics": [[1913, 1, 1, "", "TorchScriptOnnxExportDiagnostic"]], "torch.onnx._internal.diagnostics.TorchScriptOnnxExportDiagnostic": [[1913, 3, 1, "", "record_cpp_call_stack"]], "torch.onnx.verification": [[1667, 1, 1, "", "GraphInfo"], [1668, 1, 1, "", "VerificationOptions"], [1912, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1667, 3, 1, "", "all_mismatch_leaf_graph_info"], [1667, 3, 1, "", "clear"], [1667, 3, 1, "", "essential_node_count"], [1667, 3, 1, "", "essential_node_kinds"], [1667, 3, 1, "", "export_repro"], [1667, 3, 1, "", "find_mismatch"], [1667, 3, 1, "", "find_partition"], [1667, 3, 1, "", "has_mismatch"], [1667, 3, 1, "", "pretty_print_mismatch"], [1667, 3, 1, "", "pretty_print_tree"], [1667, 3, 1, "", "verify_export"]], "torch.optim": [[1669, 1, 1, "", "ASGD"], [1670, 1, 1, "", "Adadelta"], [1671, 1, 1, "", "Adagrad"], [1672, 1, 1, "", "Adam"], [1673, 1, 1, "", "AdamW"], [1674, 1, 1, "", "Adamax"], [1675, 1, 1, "", "LBFGS"], [1676, 1, 1, "", "NAdam"], [1915, 1, 1, "", "Optimizer"], [1682, 1, 1, "", "RAdam"], [1683, 1, 1, "", "RMSprop"], [1684, 1, 1, "", "Rprop"], [1685, 1, 1, "", "SGD"], [1686, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1669, 3, 1, "", "add_param_group"], [1669, 3, 1, "", "load_state_dict"], [1669, 3, 1, "", "register_load_state_dict_post_hook"], [1669, 3, 1, "", "register_load_state_dict_pre_hook"], [1669, 3, 1, "", "register_state_dict_post_hook"], [1669, 3, 1, "", "register_state_dict_pre_hook"], [1669, 3, 1, "", "register_step_post_hook"], [1669, 3, 1, "", "register_step_pre_hook"], [1669, 3, 1, "", "state_dict"], [1669, 3, 1, "", "step"], [1669, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1670, 3, 1, "", "add_param_group"], [1670, 3, 1, "", "load_state_dict"], [1670, 3, 1, "", "register_load_state_dict_post_hook"], [1670, 3, 1, "", "register_load_state_dict_pre_hook"], [1670, 3, 1, "", "register_state_dict_post_hook"], [1670, 3, 1, "", "register_state_dict_pre_hook"], [1670, 3, 1, "", "register_step_post_hook"], [1670, 3, 1, "", "register_step_pre_hook"], [1670, 3, 1, "", "state_dict"], [1670, 3, 1, "", "step"], [1670, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1671, 3, 1, "", "add_param_group"], [1671, 3, 1, "", "load_state_dict"], [1671, 3, 1, "", "register_load_state_dict_post_hook"], [1671, 3, 1, "", "register_load_state_dict_pre_hook"], [1671, 3, 1, "", "register_state_dict_post_hook"], [1671, 3, 1, "", "register_state_dict_pre_hook"], [1671, 3, 1, "", "register_step_post_hook"], [1671, 3, 1, "", "register_step_pre_hook"], [1671, 3, 1, "", "state_dict"], [1671, 3, 1, "", "step"], [1671, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1672, 3, 1, "", "add_param_group"], [1672, 3, 1, "", "load_state_dict"], [1672, 3, 1, "", "register_load_state_dict_post_hook"], [1672, 3, 1, "", "register_load_state_dict_pre_hook"], [1672, 3, 1, "", "register_state_dict_post_hook"], [1672, 3, 1, "", "register_state_dict_pre_hook"], [1672, 3, 1, "", "register_step_post_hook"], [1672, 3, 1, "", "register_step_pre_hook"], [1672, 3, 1, "", "state_dict"], [1672, 3, 1, "", "step"], [1672, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1673, 3, 1, "", "add_param_group"], [1673, 3, 1, "", "load_state_dict"], [1673, 3, 1, "", "register_load_state_dict_post_hook"], [1673, 3, 1, "", "register_load_state_dict_pre_hook"], [1673, 3, 1, "", "register_state_dict_post_hook"], [1673, 3, 1, "", "register_state_dict_pre_hook"], [1673, 3, 1, "", "register_step_post_hook"], [1673, 3, 1, "", "register_step_pre_hook"], [1673, 3, 1, "", "state_dict"], [1673, 3, 1, "", "step"], [1673, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1674, 3, 1, "", "add_param_group"], [1674, 3, 1, "", "load_state_dict"], [1674, 3, 1, "", "register_load_state_dict_post_hook"], [1674, 3, 1, "", "register_load_state_dict_pre_hook"], [1674, 3, 1, "", "register_state_dict_post_hook"], [1674, 3, 1, "", "register_state_dict_pre_hook"], [1674, 3, 1, "", "register_step_post_hook"], [1674, 3, 1, "", "register_step_pre_hook"], [1674, 3, 1, "", "state_dict"], [1674, 3, 1, "", "step"], [1674, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1675, 3, 1, "", "add_param_group"], [1675, 3, 1, "", "load_state_dict"], [1675, 3, 1, "", "register_load_state_dict_post_hook"], [1675, 3, 1, "", "register_load_state_dict_pre_hook"], [1675, 3, 1, "", "register_state_dict_post_hook"], [1675, 3, 1, "", "register_state_dict_pre_hook"], [1675, 3, 1, "", "register_step_post_hook"], [1675, 3, 1, "", "register_step_pre_hook"], [1675, 3, 1, "", "state_dict"], [1675, 3, 1, "", "step"], [1675, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1676, 3, 1, "", "add_param_group"], [1676, 3, 1, "", "load_state_dict"], [1676, 3, 1, "", "register_load_state_dict_post_hook"], [1676, 3, 1, "", "register_load_state_dict_pre_hook"], [1676, 3, 1, "", "register_state_dict_post_hook"], [1676, 3, 1, "", "register_state_dict_pre_hook"], [1676, 3, 1, "", "register_step_post_hook"], [1676, 3, 1, "", "register_step_pre_hook"], [1676, 3, 1, "", "state_dict"], [1676, 3, 1, "", "step"], [1676, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1677, 3, 1, "", "add_param_group"], [1678, 3, 1, "", "load_state_dict"], [1679, 3, 1, "", "state_dict"], [1680, 3, 1, "", "step"], [1681, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1682, 3, 1, "", "add_param_group"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "register_load_state_dict_post_hook"], [1682, 3, 1, "", "register_load_state_dict_pre_hook"], [1682, 3, 1, "", "register_state_dict_post_hook"], [1682, 3, 1, "", "register_state_dict_pre_hook"], [1682, 3, 1, "", "register_step_post_hook"], [1682, 3, 1, "", "register_step_pre_hook"], [1682, 3, 1, "", "state_dict"], [1682, 3, 1, "", "step"], [1682, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1683, 3, 1, "", "add_param_group"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "register_load_state_dict_post_hook"], [1683, 3, 1, "", "register_load_state_dict_pre_hook"], [1683, 3, 1, "", "register_state_dict_post_hook"], [1683, 3, 1, "", "register_state_dict_pre_hook"], [1683, 3, 1, "", "register_step_post_hook"], [1683, 3, 1, "", "register_step_pre_hook"], [1683, 3, 1, "", "state_dict"], [1683, 3, 1, "", "step"], [1683, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1684, 3, 1, "", "add_param_group"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "register_load_state_dict_post_hook"], [1684, 3, 1, "", "register_load_state_dict_pre_hook"], [1684, 3, 1, "", "register_state_dict_post_hook"], [1684, 3, 1, "", "register_state_dict_pre_hook"], [1684, 3, 1, "", "register_step_post_hook"], [1684, 3, 1, "", "register_step_pre_hook"], [1684, 3, 1, "", "state_dict"], [1684, 3, 1, "", "step"], [1684, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1685, 3, 1, "", "add_param_group"], [1685, 3, 1, "", "load_state_dict"], [1685, 3, 1, "", "register_load_state_dict_post_hook"], [1685, 3, 1, "", "register_load_state_dict_pre_hook"], [1685, 3, 1, "", "register_state_dict_post_hook"], [1685, 3, 1, "", "register_state_dict_pre_hook"], [1685, 3, 1, "", "register_step_post_hook"], [1685, 3, 1, "", "register_step_pre_hook"], [1685, 3, 1, "", "state_dict"], [1685, 3, 1, "", "step"], [1685, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1686, 3, 1, "", "add_param_group"], [1686, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "register_load_state_dict_post_hook"], [1686, 3, 1, "", "register_load_state_dict_pre_hook"], [1686, 3, 1, "", "register_state_dict_post_hook"], [1686, 3, 1, "", "register_state_dict_pre_hook"], [1686, 3, 1, "", "register_step_post_hook"], [1686, 3, 1, "", "register_step_pre_hook"], [1686, 3, 1, "", "state_dict"], [1686, 3, 1, "", "step"], [1686, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1687, 1, 1, "", "ChainedScheduler"], [1688, 1, 1, "", "ConstantLR"], [1689, 1, 1, "", "CosineAnnealingLR"], [1690, 1, 1, "", "CosineAnnealingWarmRestarts"], [1691, 1, 1, "", "CyclicLR"], [1692, 1, 1, "", "ExponentialLR"], [1693, 1, 1, "", "LambdaLR"], [1694, 1, 1, "", "LinearLR"], [1695, 1, 1, "", "MultiStepLR"], [1696, 1, 1, "", "MultiplicativeLR"], [1697, 1, 1, "", "OneCycleLR"], [1698, 1, 1, "", "PolynomialLR"], [1699, 1, 1, "", "ReduceLROnPlateau"], [1700, 1, 1, "", "SequentialLR"], [1701, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1687, 3, 1, "", "get_last_lr"], [1687, 3, 1, "", "load_state_dict"], [1687, 3, 1, "", "print_lr"], [1687, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1688, 3, 1, "", "get_last_lr"], [1688, 3, 1, "", "load_state_dict"], [1688, 3, 1, "", "print_lr"], [1688, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1689, 3, 1, "", "get_last_lr"], [1689, 3, 1, "", "load_state_dict"], [1689, 3, 1, "", "print_lr"], [1689, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1690, 3, 1, "", "get_last_lr"], [1690, 3, 1, "", "load_state_dict"], [1690, 3, 1, "", "print_lr"], [1690, 3, 1, "", "state_dict"], [1690, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1691, 3, 1, "", "get_last_lr"], [1691, 3, 1, "", "get_lr"], [1691, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1692, 3, 1, "", "get_last_lr"], [1692, 3, 1, "", "load_state_dict"], [1692, 3, 1, "", "print_lr"], [1692, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1693, 3, 1, "", "get_last_lr"], [1693, 3, 1, "", "load_state_dict"], [1693, 3, 1, "", "print_lr"], [1693, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1694, 3, 1, "", "get_last_lr"], [1694, 3, 1, "", "load_state_dict"], [1694, 3, 1, "", "print_lr"], [1694, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1695, 3, 1, "", "get_last_lr"], [1695, 3, 1, "", "load_state_dict"], [1695, 3, 1, "", "print_lr"], [1695, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1696, 3, 1, "", "get_last_lr"], [1696, 3, 1, "", "load_state_dict"], [1696, 3, 1, "", "print_lr"], [1696, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1697, 3, 1, "", "get_last_lr"], [1697, 3, 1, "", "load_state_dict"], [1697, 3, 1, "", "print_lr"], [1697, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1698, 3, 1, "", "get_last_lr"], [1698, 3, 1, "", "load_state_dict"], [1698, 3, 1, "", "print_lr"], [1698, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1700, 3, 1, "", "get_last_lr"], [1700, 3, 1, "", "load_state_dict"], [1700, 3, 1, "", "print_lr"], [1700, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1701, 3, 1, "", "get_last_lr"], [1701, 3, 1, "", "load_state_dict"], [1701, 3, 1, "", "print_lr"], [1701, 3, 1, "", "state_dict"]], "torch.overrides": [[1958, 5, 1, "", "get_ignored_functions"], [1958, 5, 1, "", "get_overridable_functions"], [1958, 5, 1, "", "get_testing_overrides"], [1958, 5, 1, "", "handle_torch_function"], [1958, 5, 1, "", "has_torch_function"], [1958, 5, 1, "", "is_tensor_like"], [1958, 5, 1, "", "is_tensor_method_or_property"], [1958, 5, 1, "", "resolve_name"], [1958, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1916, 1, 1, "", "Directory"], [1916, 1, 1, "", "EmptyMatchError"], [1916, 1, 1, "", "PackageExporter"], [1916, 1, 1, "", "PackageImporter"], [1916, 1, 1, "", "PackagingError"], [1916, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1916, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1916, 3, 1, "", "__init__"], [1916, 3, 1, "", "add_dependency"], [1916, 3, 1, "", "all_paths"], [1916, 3, 1, "", "close"], [1916, 3, 1, "", "denied_modules"], [1916, 3, 1, "", "deny"], [1916, 3, 1, "", "dependency_graph_string"], [1916, 3, 1, "", "extern"], [1916, 3, 1, "", "externed_modules"], [1916, 3, 1, "", "get_rdeps"], [1916, 3, 1, "", "get_unique_id"], [1916, 3, 1, "", "intern"], [1916, 3, 1, "", "interned_modules"], [1916, 3, 1, "", "mock"], [1916, 3, 1, "", "mocked_modules"], [1916, 3, 1, "", "register_extern_hook"], [1916, 3, 1, "", "register_intern_hook"], [1916, 3, 1, "", "register_mock_hook"], [1916, 3, 1, "", "save_binary"], [1916, 3, 1, "", "save_module"], [1916, 3, 1, "", "save_pickle"], [1916, 3, 1, "", "save_source_file"], [1916, 3, 1, "", "save_source_string"], [1916, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1916, 3, 1, "", "__init__"], [1916, 3, 1, "", "file_structure"], [1916, 3, 1, "", "id"], [1916, 3, 1, "", "import_module"], [1916, 3, 1, "", "load_binary"], [1916, 3, 1, "", "load_pickle"], [1916, 3, 1, "", "load_text"], [1916, 3, 1, "", "python_version"]], "torch.profiler": [[1918, 1, 1, "", "ProfilerAction"], [1918, 1, 1, "", "ProfilerActivity"], [1918, 1, 1, "", "_KinetoProfile"], [1918, 1, 1, "", "profile"], [1918, 5, 1, "", "schedule"], [1918, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1918, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1918, 3, 1, "", "add_metadata"], [1918, 3, 1, "", "add_metadata_json"], [1918, 3, 1, "", "events"], [1918, 3, 1, "", "export_chrome_trace"], [1918, 3, 1, "", "export_memory_timeline"], [1918, 3, 1, "", "export_stacks"], [1918, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1918, 5, 1, "", "is_available"], [1918, 5, 1, "", "mark"], [1918, 5, 1, "", "range_pop"], [1918, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1918, 3, 1, "", "step"]], "torch.quantization": [[1922, 0, 0, "-", "fx"]], "torch.quasirandom": [[1722, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1722, 3, 1, "", "draw"], [1722, 3, 1, "", "draw_base2"], [1722, 3, 1, "", "fast_forward"], [1722, 3, 1, "", "reset"]], "torch.random": [[1923, 5, 1, "", "fork_rng"], [1923, 5, 1, "", "get_rng_state"], [1923, 5, 1, "", "initial_seed"], [1923, 5, 1, "", "manual_seed"], [1923, 5, 1, "", "seed"], [1923, 5, 1, "", "set_rng_state"]], "torch.serialization": [[1910, 5, 1, "", "get_default_load_endianness"], [1910, 5, 1, "", "register_package"], [1910, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[1927, 0, 0, "-", "windows"]], "torch.signal.windows": [[1770, 5, 1, "", "bartlett"], [1771, 5, 1, "", "blackman"], [1772, 5, 1, "", "cosine"], [1773, 5, 1, "", "exponential"], [1774, 5, 1, "", "gaussian"], [1775, 5, 1, "", "general_cosine"], [1776, 5, 1, "", "general_hamming"], [1777, 5, 1, "", "hamming"], [1778, 5, 1, "", "hann"], [1779, 5, 1, "", "kaiser"], [1780, 5, 1, "", "nuttall"]], "torch.sparse": [[1790, 5, 1, "", "addmm"], [1791, 1, 1, "", "check_sparse_tensor_invariants"], [1792, 5, 1, "", "log_softmax"], [1793, 5, 1, "", "mm"], [1794, 5, 1, "", "sampled_addmm"], [1795, 5, 1, "", "softmax"], [1796, 5, 1, "", "spdiags"], [1797, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1791, 3, 1, "", "disable"], [1791, 3, 1, "", "enable"], [1791, 3, 1, "", "is_enabled"]], "torch.special": [[1929, 5, 1, "", "airy_ai"], [1929, 5, 1, "", "bessel_j0"], [1929, 5, 1, "", "bessel_j1"], [1929, 5, 1, "", "digamma"], [1929, 5, 1, "", "entr"], [1929, 5, 1, "", "erf"], [1929, 5, 1, "", "erfc"], [1929, 5, 1, "", "erfcx"], [1929, 5, 1, "", "erfinv"], [1929, 5, 1, "", "exp2"], [1929, 5, 1, "", "expit"], [1929, 5, 1, "", "expm1"], [1929, 5, 1, "", "gammainc"], [1929, 5, 1, "", "gammaincc"], [1929, 5, 1, "", "gammaln"], [1929, 5, 1, "", "i0"], [1929, 5, 1, "", "i0e"], [1929, 5, 1, "", "i1"], [1929, 5, 1, "", "i1e"], [1929, 5, 1, "", "log1p"], [1929, 5, 1, "", "log_ndtr"], [1929, 5, 1, "", "log_softmax"], [1929, 5, 1, "", "logit"], [1929, 5, 1, "", "logsumexp"], [1929, 5, 1, "", "multigammaln"], [1929, 5, 1, "", "ndtr"], [1929, 5, 1, "", "ndtri"], [1929, 5, 1, "", "polygamma"], [1929, 5, 1, "", "psi"], [1929, 5, 1, "", "round"], [1929, 5, 1, "", "scaled_modified_bessel_k0"], [1929, 5, 1, "", "scaled_modified_bessel_k1"], [1929, 5, 1, "", "sinc"], [1929, 5, 1, "", "softmax"], [1929, 5, 1, "", "spherical_bessel_j0"], [1929, 5, 1, "", "xlog1py"], [1929, 5, 1, "", "xlogy"], [1929, 5, 1, "", "zeta"]], "torch.testing": [[1935, 5, 1, "", "assert_allclose"], [1935, 5, 1, "", "assert_close"], [1935, 5, 1, "", "make_tensor"]], "torch.torch": [[1936, 2, 1, "", "default_generator"], [1960, 1, 1, "", "finfo"], [1960, 1, 1, "", "iinfo"]], "torch.utils": [[1936, 0, 0, "-", "backcompat"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [20, 0, 0, "-", "data"], [1852, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1853, 5, 1, "", "get_cpp_backtrace"], [1936, 0, 0, "-", "hipify"], [1877, 0, 0, "-", "jit"], [1936, 0, 0, "-", "model_dump"], [1883, 0, 0, "-", "model_zoo"], [1854, 5, 1, "", "rename_privateuse1_backend"], [1855, 5, 1, "", "set_module"], [1933, 0, 0, "-", "tensorboard"], [1936, 0, 0, "-", "viz"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[13, 5, 1, "", "BuildExtension"], [13, 5, 1, "", "CUDAExtension"], [13, 5, 1, "", "CppExtension"], [13, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [13, 5, 1, "", "include_paths"], [13, 5, 1, "", "is_ninja_available"], [13, 5, 1, "", "load"], [13, 5, 1, "", "load_inline"], [13, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[20, 1, 1, "", "BatchSampler"], [20, 1, 1, "", "ChainDataset"], [20, 1, 1, "", "ConcatDataset"], [20, 1, 1, "", "DataLoader"], [20, 1, 1, "", "Dataset"], [20, 1, 1, "", "IterableDataset"], [20, 1, 1, "", "RandomSampler"], [20, 1, 1, "", "Sampler"], [20, 1, 1, "", "SequentialSampler"], [20, 1, 1, "", "StackDataset"], [20, 1, 1, "", "Subset"], [20, 1, 1, "", "SubsetRandomSampler"], [20, 1, 1, "", "TensorDataset"], [20, 1, 1, "", "WeightedRandomSampler"], [20, 0, 0, "-", "datapipes"], [20, 5, 1, "", "default_collate"], [20, 5, 1, "", "default_convert"], [20, 5, 1, "", "get_worker_info"], [20, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[20, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[20, 0, 0, "-", "dataframe"], [20, 0, 0, "-", "iter"], [20, 0, 0, "-", "map"], [20, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[20, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[30, 5, 1, "", "from_dlpack"], [30, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1882, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1883, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1933, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1933, 3, 1, "", "__init__"], [1933, 3, 1, "", "add_audio"], [1933, 3, 1, "", "add_custom_scalars"], [1933, 3, 1, "", "add_embedding"], [1933, 3, 1, "", "add_figure"], [1933, 3, 1, "", "add_graph"], [1933, 3, 1, "", "add_histogram"], [1933, 3, 1, "", "add_hparams"], [1933, 3, 1, "", "add_image"], [1933, 3, 1, "", "add_images"], [1933, 3, 1, "", "add_mesh"], [1933, 3, 1, "", "add_pr_curve"], [1933, 3, 1, "", "add_scalar"], [1933, 3, 1, "", "add_scalars"], [1933, 3, 1, "", "add_text"], [1933, 3, 1, "", "add_video"], [1933, 3, 1, "", "close"], [1933, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 20, 1871, 1893, 1900], "mix": [0, 1871, 1893], "precis": [0, 1893, 1897, 1908], "packag": [0, 1, 14, 23, 1886, 1911, 1916], "torch": [0, 1, 2, 3, 4, 5, 10, 12, 13, 15, 16, 20, 22, 23, 25, 26, 28, 29, 30, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 62, 63, 64, 65, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 967, 972, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1677, 1678, 1679, 1680, 1681, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1897, 1899, 1900, 1903, 1908, 1910, 1912, 1913, 1915, 1916, 1918, 1922, 1923, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1947, 1948, 1955, 1958, 1960, 1961], "amp": [0, 1897], "autocast": [0, 1893], "gradient": [0, 1, 52, 1147, 1893, 1894, 1900, 1936], "scale": [0, 1893, 1904], "op": [0, 71, 1876, 1893, 1912, 1936], "refer": [0, 17, 48, 54, 1871, 1873, 1874, 1875, 1884, 1888, 1903, 1913, 1916, 1918, 1919, 1922, 1926, 1934, 1940, 1959], "elig": 0, "cuda": [0, 2, 10, 16, 17, 200, 972, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1886, 1893, 1897, 1901, 1903, 1907, 1909, 1911, 1942, 1955, 1959], "specif": [0, 20, 1928], "behavior": [0, 20, 1894, 1902], "can": [0, 1894, 1901, 1954], "float16": 0, "float32": 0, "promot": [0, 7, 73], "widest": 0, "input": [0, 1887, 1893, 1902], "type": [0, 20, 73, 592, 1873, 1874, 1899, 1912, 1916, 1934, 1960], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1499], "over": [0, 8, 1873], "binary_cross_entropi": [0, 1498], "cpu": [0, 2, 10, 15, 197, 962, 963, 964, 965, 966, 1894, 1896, 1907, 1919, 1941], "bfloat16": [0, 146], "differenti": [1, 1894], "autograd": [1, 10, 11, 14, 51, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 1888, 1893, 1894, 1899, 1900, 1912, 1924, 1925], "forward": [1, 879, 1899, 1925], "mode": [1, 41, 49, 405, 1299, 1894, 1899, 1902, 1912, 1919, 1925], "function": [1, 23, 29, 45, 47, 48, 50, 52, 54, 69, 72, 76, 77, 878, 879, 880, 881, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 1124, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1871, 1872, 1873, 1874, 1876, 1879, 1881, 1887, 1889, 1890, 1891, 1893, 1894, 1900, 1902, 1910, 1912, 1922, 1928, 1929, 1947, 1958], "higher": 1, "level": [1, 10, 71, 1922], "api": [1, 10, 14, 17, 26, 34, 48, 51, 54, 1870, 1871, 1874, 1884, 1888, 1896, 1897, 1899, 1903, 1904, 1913, 1916, 1917, 1918, 1919, 1922, 1940, 1945, 1946, 1947, 1948, 1959], "local": [1, 1874, 1894, 1936, 1954, 1956], "disabl": [1, 20, 946, 1871, 1894, 1936, 1947, 1948], "comput": [1, 52, 1894, 1908, 1925, 1936], "default": [1, 20, 21, 1873, 1894, 1897, 1902, 1921], "layout": [1, 1931], "manual": 1, "In": [1, 8, 1894, 1895, 1936], "place": [1, 51, 1887, 1894, 1895, 1912, 1936], "oper": [1, 10, 21, 23, 51, 74, 78, 1873, 1874, 1879, 1881, 1887, 1888, 1889, 1894, 1899, 1904, 1911, 1912, 1914, 1919, 1928, 1934, 1936, 1946], "tensor": [1, 11, 14, 28, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 1830, 1872, 1876, 1879, 1886, 1887, 1888, 1889, 1894, 1899, 1910, 1912, 1919, 1922, 1928, 1931, 1932, 1934, 1936, 1946], "correct": [1, 54, 1894], "check": [1, 54, 1871, 1894, 1903, 1954], "variabl": [1, 23, 41, 1871, 1873, 1874, 1897, 1950, 1951], "deprec": 1, "context": [1, 24, 38, 59, 1925], "method": [1, 33, 34, 37, 42, 1872, 1873, 1876, 1912, 1922, 1928], "mixin": 1, "numer": [1, 1902, 1908, 1920], "profil": [1, 23, 904, 905, 906, 907, 908, 1308, 1309, 1310, 1885, 1904, 1905, 1918, 1951, 1955, 1957], "anomali": 1, "detect": 1, "graph": [1, 16, 54, 66, 899, 900, 901, 902, 903, 1002, 1871, 1894, 1897, 1919, 1942, 1947, 1955, 1956, 1957], "backend": [2, 23, 40, 41, 1871, 1903, 1906, 1919, 1921, 1924, 1939, 1941, 1943, 1957], "cudnn": 2, "mp": [2, 10, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1885, 1906], "mkl": 2, "mkldnn": [2, 10], "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 1909, 1951], "util": [3, 4, 5, 10, 13, 20, 23, 30, 48, 50, 1045, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1852, 1853, 1854, 1855, 1877, 1882, 1883, 1890, 1910, 1922, 1933, 1936, 1938, 1956, 1961], "bottleneck": 4, "checkpoint": [5, 21, 25], "pytorch": [6, 7, 8, 9, 10, 14, 22, 23, 51, 1870, 1871, 1872, 1876, 1894, 1897, 1899, 1909, 1910, 1912, 1917, 1922, 1939, 1942, 1953, 1954, 1957], "govern": [6, 9, 10], "build": [6, 7, 10, 1896, 1904, 1905, 1911], "ci": [6, 10], "how": [6, 21, 49, 1869, 1894, 1899, 1915, 1916, 1944, 1946, 1947, 1954], "add": [6, 9, 88, 674], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1912], "guid": 7, "process": [7, 9, 20, 38, 1893], "get": [7, 26, 1912, 1939, 1947, 1949], "start": [7, 26, 38, 1309, 1939, 1949], "propos": 7, "featur": [7, 1904, 1905], "report": [7, 1901], "issu": [7, 1871, 1955], "implement": [7, 31, 40, 42, 1869, 1898, 1902, 1912, 1920, 1922, 1926, 1946], "fix": [7, 41, 49, 252, 1105], "bug": 7, "ad": [7, 1899, 1912], "tutori": [7, 10, 1916, 1917, 1924], "improv": [7, 1905], "document": [7, 26, 1870], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 54, 1871, 1897, 1916, 1947], "readabl": 7, "test": [7, 1874, 1899, 1916, 1935, 1954], "case": [7, 1871], "make": [7, 9, 1942, 1950], "codebas": 7, "more": [7, 47, 1924, 1939], "robust": 7, "triag": 7, "about": [7, 1894, 1924, 1946], "sourc": [7, 1909, 1911, 1916], "develop": [7, 1870, 1912, 1939], "common": [7, 23, 54, 1904, 1919], "mistak": 7, "To": 7, "avoid": [7, 1907, 1909, 1912, 1916], "frequent": [7, 1871, 1901, 1912, 1919, 1947], "ask": [7, 1871, 1901, 1912, 1919, 1947], "question": [7, 1871, 1901, 1912, 1919, 1947], "On": [7, 21, 1873], "python": [7, 8, 51, 56, 57, 58, 59, 60, 61, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1899, 1909, 1912, 1950], "doc": [7, 10, 1903], "c": [7, 10, 14, 1894, 1899, 1903, 1910, 1912], "overview": [7, 17, 54, 1913, 1916, 1918, 1928, 1943, 1950], "design": [8, 1874, 1898, 1924, 1925, 1926], "philosophi": 8, "principl": [8, 9], "1": [8, 41, 49, 1871, 1900], "usabl": 8, "perform": [8, 10, 1905, 1910, 1946, 1954, 1955, 1957], "2": [8, 49, 1871, 1897, 1900, 1901, 1922, 1953, 1954, 1957], "simpl": [8, 1873, 1874, 1905, 1925], "easi": 8, "3": [8, 41, 49], "first": [8, 1916], "best": [8, 1897, 1907, 1919, 1941], "class": [8, 33, 54, 1871, 1873, 1874, 1876, 1912, 1915, 1916, 1934], "languag": [8, 1870, 1871, 1873, 1874, 1875], "interoper": 8, "mechan": [9, 1891, 1894, 1902], "summari": [9, 1919, 1950], "modul": [9, 10, 48, 50, 54, 1427, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1871, 1872, 1873, 1874, 1876, 1890, 1894, 1899, 1905, 1910, 1916, 1919, 1953], "core": [9, 10, 1952], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1874], "confirm": 9, "remov": [9, 1637, 1887], "The": [9, 54, 1874, 1894, 1945], "re": [9, 1916], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 41, 49, 1947], "controversi": 9, "gener": [9, 16, 24, 51, 54, 79, 1895, 1900, 1909, 1919, 1920, 1936, 1944, 1959], "polici": [9, 1945], "faq": [9, 1911], "respons": 10, "nn": [10, 48, 50, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1873, 1874, 1890, 1891, 1892, 1894, 1897, 1899, 1910, 1922, 1928, 1953], "optim": [10, 27, 1677, 1678, 1679, 1680, 1681, 1893, 1894, 1915, 1924, 1925, 1936], "compil": [10, 50, 941, 943, 944, 945, 946, 947, 948, 1897, 1939, 1940, 1947, 1948, 1955, 1957], "jit": [10, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1871, 1874, 1877], "torchscript": [10, 14, 1871, 1872, 1873, 1874, 1876, 1896, 1904, 1914, 1916], "fx": [10, 54, 66, 67, 68, 70, 73, 1905, 1919, 1922, 1938], "torchdynamo": [10, 1898, 1912, 1942, 1944, 1948, 1957], "distribut": [10, 23, 25, 26, 27, 28, 29, 41, 1890, 1891, 1898, 1903, 1905, 1924, 1925, 1947], "rng": 10, "multiprocess": [10, 38, 1886, 1897, 1907, 1911], "dataload": [10, 1909], "linear": [10, 11, 721, 722, 745, 753, 770, 1131, 1414, 1543, 1890, 1891, 1908, 1928], "algebra": [10, 11, 1908, 1928], "linalg": [10, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1879, 1908], "spars": [10, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1890, 1891, 1928], "nestedtensor": 10, "nest": [10, 1889], "maskedtensor": [10, 1881], "mask": [10, 1881], "fast": [10, 45, 1902, 1925], "fourier": [10, 45], "transform": [10, 29, 45, 47, 48, 50, 52, 54, 1470, 1890, 1899, 1905, 1947, 1956], "fft": [10, 45, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104], "inductor": 10, "gpu": [10, 23, 1890, 1891, 1893, 1901, 1917, 1951], "triton": [10, 1951], "nvfuser": 10, "amd": [10, 1908], "rocm": [10, 1903], "hip": [10, 1903], "tool": [10, 16, 1920, 1928], "c10": 10, "dispatch": 10, "onnx": [10, 66, 67, 74, 75, 1912, 1913, 1914], "export": [10, 44, 1912, 1916, 1922, 1936, 1947], "mobil": 10, "edg": [10, 1871, 1916], "model": [10, 14, 1869, 1893, 1901, 1904, 1915, 1916, 1917, 1919, 1922, 1945, 1949, 1951], "compress": [10, 1928], "window": [10, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1911, 1927], "appl": 10, "m1": 10, "powerpc": 10, "librari": [10, 1870, 1878, 1909], "xla": 10, "torchserv": 10, "torchvis": [10, 49], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 949, 1894, 1902], "number": [11, 16, 41, 1894, 1896, 1901, 1909, 1936], "creat": [11, 1871, 1888], "transit": [11, 41], "from": [11, 41, 50, 54, 1869, 1887, 1911, 1912, 1916], "old": 11, "represent": [11, 66], "access": [11, 1873, 1916, 1957], "real": [11, 473, 1733, 1902], "imag": [11, 302, 1164], "angl": [11, 108, 687], "ab": [11, 80, 670], "serial": [11, 1910, 1936], "__config__": 12, "cpp_extens": 13, "extend": [14, 31, 1899, 1900], "extens": [14, 16, 1899, 1904, 1911], "author": [14, 54], "stream": [15, 16, 17, 960, 965, 973, 1042, 1897], "event": [15, 16, 32, 34, 970, 1305, 1885], "random": [16, 20, 51, 1901, 1909, 1923, 1936], "commun": [16, 21, 23, 1870], "collect": [16, 23], "beta": [16, 29], "memori": [16, 20, 1897, 1901, 1903, 1905, 1959], "manag": [16, 24, 59, 1886, 1897, 1903, 1916, 1956], "nvidia": [16, 1908], "nvtx": [16, 1027, 1028, 1029], "jiter": [16, 1010, 1011], "sanit": [16, 17], "prototyp": [16, 1919, 1920], "usag": [17, 26, 41, 1897, 1900, 1904, 1905, 1911, 1953, 1959], "data": [20, 51, 61, 1874, 1898, 1901, 1912, 1920, 1934], "dataset": 20, "map": [20, 65, 1903], "style": 20, "iter": [20, 1873], "load": [20, 1201, 1265, 1869, 1910, 1916, 1919], "order": [20, 1894], "sampler": 20, "batch": [20, 49, 1908, 1915], "non": [20, 54, 1890, 1891, 1894, 1897, 1908, 1916, 1919], "work": [20, 48, 1893, 1901, 1928, 1946, 1947, 1955], "collate_fn": 20, "singl": [20, 41, 1893], "multi": [20, 23, 41, 1890, 1891], "platform": 20, "pin": [20, 1897], "ddp": 21, "hook": [21, 1894, 1905, 1953], "us": [21, 23, 54, 1873, 1894, 1897, 1899, 1902, 1912, 1915, 1916, 1917, 1919, 1928, 1947, 1949, 1955, 1957, 1959], "what": [21, 47, 49, 52, 1881, 1894, 1916, 1944, 1947, 1954, 1955], "doe": [21, 1894, 1946, 1947], "powersgd": 21, "state": [21, 1905, 1916, 1959], "debug": [21, 23, 54, 71, 1871, 1919, 1920, 1943, 1957], "acknowledg": [21, 1917], "deploi": 22, "ha": 22, "been": 22, "move": 22, "multipi": 22, "come": [23, 1894], "which": [23, 1894, 1947], "environ": [23, 41, 1897, 1904, 1916, 1951], "choos": 23, "network": [23, 1897, 1901, 1905], "interfac": [23, 1903], "other": [23, 1890, 1909, 1916, 1928, 1936, 1946], "nccl": [23, 1897], "basic": [23, 1874, 1888, 1900, 1924, 1934, 1955], "initi": [23, 1890, 1905, 1934], "tcp": 23, "share": [23, 1886, 1897, 1916, 1926], "file": [23, 1886, 1916], "system": [23, 1874, 1886, 1900], "post": [23, 1919], "kei": [23, 66, 1911], "valu": [23, 603, 1873, 1874, 1908, 1921, 1926], "store": [23, 40], "group": 23, "point": [23, 1904], "synchron": [23, 966, 1043, 1314], "asynchron": [23, 1874, 1897, 1907], "third": 23, "parti": 23, "launch": [23, 41, 1955], "spawn": [23, 1886], "applic": 23, "monitor": [23, 1884], "barrier": 23, "torch_distributed_debug": 23, "log": [23, 360, 1267, 1904], "join": [24, 1936], "elast": [26, 31, 41], "advanc": [26, 1905], "plugin": 26, "parallel": [28, 1591, 1897, 1898, 1901, 1917, 1936], "probabl": 29, "score": 29, "pathwis": 29, "deriv": [29, 1894], "exponentialfamili": 29, "bernoulli": [29, 144, 911], "binomi": 29, "categor": 29, "cauchi": 29, "chi2": 29, "continuousbernoulli": 29, "dirichlet": 29, "exponenti": [29, 1773], "fishersnedecor": 29, "gamma": 29, "geometr": 29, "gumbel": 29, "halfcauchi": 29, "halfnorm": 29, "independ": 29, "kumaraswami": 29, "lkjcholeski": 29, "laplac": 29, "lognorm": 29, "lowrankmultivariatenorm": 29, "mixturesamefamili": 29, "multinomi": [29, 411, 1317], "multivariatenorm": 29, "negativebinomi": 29, "normal": [29, 1562, 1655, 1890, 1915], "onehotcategor": 29, "pareto": 29, "poisson": [29, 1708], "relaxedbernoulli": 29, "logitrelaxedbernoulli": 29, "relaxedonehotcategor": 29, "studentt": 29, "transformeddistribut": 29, "uniform": 29, "vonmis": 29, "weibul": 29, "wishart": 29, "kl": 29, "diverg": [29, 1876], "constraint": [29, 1897], "registri": [29, 40, 74], "dlpack": 30, "agent": 31, "server": [31, 40, 42], "concept": 31, "watchdog": 31, "custom": [32, 42, 54, 76, 1874, 1893, 1897, 1899, 1900, 1905, 1912, 1915, 1916, 1919, 1943], "launcher": 32, "rendezv": [32, 40, 41], "handler": [32, 37, 40, 1901], "metric": [32, 37], "error": [33, 1901, 1911, 1919, 1920, 1957], "propag": [33, 1888], "object": [34, 1916], "exampl": [35, 54, 1893, 1898, 1899, 1900, 1912, 1925, 1943], "torchelast": 36, "kubernet": 36, "multipl": [38, 1893, 1897, 1899, 1917], "worker": [38, 41, 1901], "quickstart": 39, "except": [40, 1901], "dynam": [40, 51, 54, 63, 1919, 1922, 1945, 1946], "c10d": 40, "etcd": 40, "legaci": 40, "torchrun": 41, "node": [41, 67, 70, 73, 75, 899, 900, 901, 902, 903, 1894], "stack": [41, 1809, 1919], "fault": 41, "toler": 41, "size": [41, 526, 1889], "failur": 41, "min": [41, 402, 1296], "max": [41, 398, 1291], "4": [41, 49], "up": [41, 1947], "membership": [41, 1874], "note": [41, 66, 1870, 1874, 1897, 1919, 1924], "definit": [41, 1874], "deploy": [41, 1904], "import": [41, 1869, 1911, 1916, 1946], "notic": [41, 1869], "expir": 42, "timer": 42, "client": 42, "write": [42, 54, 1894, 1899, 1912, 1956], "train": [43, 1893, 1905, 1907, 1919, 1947], "script": [43, 1205, 1871, 1911, 1912], "helper": 45, "fullyshardeddataparallel": 46, "func": [47, 48, 50, 52, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1899, 1900, 1947], "ar": [47, 52, 1869, 1894, 1916, 1947], "compos": [47, 52, 1943], "why": [47, 52, 1897, 1902, 1916, 1928, 1947], "read": [47, 1912, 1939, 1954], "patch": [49, 1916], "norm": [49, 443, 1250, 1654], "": [49, 1916, 1947, 1954], "happen": 49, "option": [49, 1873, 1896, 1911, 1915], "batchnorm": 49, "paramet": [49, 1608, 1873, 1915], "functorch": [49, 50], "eval": [49, 1894], "migrat": [50, 1871], "make_funct": 50, "combine_state_for_ensembl": 50, "ux": 51, "limit": [51, 54, 1869, 1900, 1912, 1942, 1948, 1953], "vmap": [51, 52, 881, 1135, 1862, 1899, 1900], "mutat": [51, 1936], "arbitrari": [51, 1916], "structur": [51, 61, 1874, 1928], "out": [51, 1887, 1901], "depend": [51, 1916, 1925], "control": [51, 54, 60, 1909, 1948], "flow": [51, 54, 60, 1919], "item": [51, 343], "shape": [51, 63, 75, 512, 1912, 1945, 1946], "nonzero": [51, 442, 1653], "friend": 51, "whirlwind": 52, "tour": 52, "i": [52, 1881, 1894, 1916, 1944, 1946, 1947, 1954], "grad": [52, 281, 896, 1125, 1894, 1897], "auto": 52, "vector": 52, "vjp": [52, 895, 1134], "jacobian": [52, 892], "product": [52, 1879, 1947], "jvp": [52, 880, 893, 1130, 1900], "jacrev": [52, 1129], "jacfwd": [52, 1128], "hessian": [52, 890, 1127], "futur": 53, "A": [54, 1905], "quick": 54, "primer": 54, "manipul": [54, 1888], "direct": 54, "subgraph": [54, 1956], "rewrit": [54, 1956], "With": [54, 1876], "replace_pattern": 54, "proxi": 54, "retrac": 54, "interpret": [54, 1871], "pattern": [54, 1873, 1912, 1916], "introduct": [54, 1881, 1889, 1919], "pitfal": [54, 1912], "pdb": 54, "print": [54, 1873, 1874], "to_fold": 54, "graphmodul": 54, "avail": 54, "debugg": 54, "symbol": [54, 69, 72, 76, 77, 1912, 1919, 1936], "trace": [54, 580, 1209, 1835, 1871, 1912, 1918, 1919, 1947, 1948, 1955], "static": [54, 1912, 1919], "tracer": [54, 1871], "leaf": 54, "miscellanea": 54, "exportdb": 55, "tag": [55, 1936], "support": [55, 78, 1872, 1874, 1881, 1887, 1888, 1889, 1900, 1912, 1914, 1919, 1928, 1947, 1953], "assume_constant_result": [55, 64, 944], "autograd_funct": 55, "class_method": 55, "cond_branch_class_method": [55, 62, 63], "cond_branch_nested_funct": [55, 62, 63], "cond_branch_nonlocal_vari": [55, 62, 63], "cond_closed_over_vari": [55, 58, 62], "cond_operand": [55, 62, 63], "cond_pred": [55, 62, 63], "decor": 55, "dictionari": [55, 61, 1874], "dynamic_shape_assert": [55, 56], "dynamic_shape_constructor": [55, 63], "dynamic_shape_if_guard": [55, 60, 63], "dynamic_shape_map": [55, 63, 65], "dynamic_shape_sl": [55, 63], "dynamic_shape_view": [55, 63], "fn_with_kwarg": [55, 61], "list_contain": [55, 56, 61, 63], "list_unpack": [55, 60, 61], "nested_funct": [55, 58], "null_context_manag": [55, 59], "pytree_flatten": 55, "scalar_output": [55, 63], "specialized_attribut": 55, "static_for_loop": [55, 60], "static_if": [55, 60], "tensor_setattr": [55, 57], "Not": [55, 1876], "yet": 55, "dynamic_shape_round": [55, 57, 63], "type_reflection_method": [55, 57], "assert": [56, 1874, 1903], "builtin": [57, 1872], "closur": [58, 1915], "cond": [62, 1225], "escap": 64, "hatch": 64, "fxe0007": 66, "addit": 66, "fxe0008": 67, "fxe0010": 68, "pass": [68, 1874, 1897, 1907, 1919, 1925, 1956], "fxe0011": 69, "call": [69, 1873, 1874, 1900, 1947], "fxe0012": 70, "unsupport": [70, 1873, 1874, 1876, 1912, 1914], "analysi": 70, "fxe0013": 71, "fxe0014": 72, "find": [72, 74, 1916, 1955], "opschema": 72, "match": [72, 1873, 1888], "fxe0015": 73, "insert": 73, "fxe0016": 74, "overload": 74, "poe0001": 75, "miss": [75, 76, 77], "infer": [75, 1888, 1894, 1896, 1910], "poe0002": 76, "poe0003": 77, "standard": 77, "poe0004": 78, "newer": 78, "opset": 78, "version": [78, 1910], "abs_": 81, "absolut": [82, 671], "absolute_": 83, "aco": [84, 672], "acos_": 85, "acosh": [86, 673], "acosh_": 87, "add_": 89, "addbmm": [90, 675], "addbmm_": 91, "addcdiv": [92, 676], "addcdiv_": 93, "addcmul": [94, 677], "addcmul_": 95, "addmm": [96, 678, 1790], "addmm_": 97, "addmv": [98, 679], "addmv_": 99, "addr": [100, 680], "addr_": 101, "adjoint": [102, 681], "all": [103, 682, 1899, 1912, 1915], "allclos": [104, 683], "amax": [105, 684], "amin": [106, 685], "aminmax": [107, 686], "ani": [109, 688, 1874, 1954], "apply_": 110, "arcco": [111, 855], "arccos_": 112, "arccosh": [113, 856], "arccosh_": 114, "arcsin": [115, 857], "arcsin_": 116, "arcsinh": [117, 858], "arcsinh_": 118, "arctan": [119, 859], "arctan2": [120, 860], "arctan2_": 121, "arctan_": 122, "arctanh": [123, 861], "arctanh_": 124, "argmax": [125, 863], "argmin": [126, 864], "argsort": [127, 865], "argwher": [128, 866], "as_strid": [129, 867], "as_subclass": 130, "asin": [131, 870], "asin_": 132, "asinh": [133, 871], "asinh_": 134, "atan": [135, 872], "atan2": [136, 873], "atan2_": 137, "atan_": 138, "atanh": [139, 874], "atanh_": 140, "backward": [141, 878, 882, 1894, 1895, 1897, 1902, 1925], "baddbmm": [142, 909], "baddbmm_": 143, "bernoulli_": 145, "bincount": [147, 912], "bitwise_and": [148, 913], "bitwise_and_": 149, "bitwise_left_shift": [150, 914], "bitwise_left_shift_": 151, "bitwise_not": [152, 915], "bitwise_not_": 153, "bitwise_or": [154, 916], "bitwise_or_": 155, "bitwise_right_shift": [156, 917], "bitwise_right_shift_": 157, "bitwise_xor": [158, 918], "bitwise_xor_": 159, "bmm": [160, 921], "bool": 161, "broadcast_to": [162, 924], "byte": 163, "cauchy_": 164, "ccol_indic": 165, "cdoubl": 166, "ceil": [167, 930], "ceil_": 168, "cfloat": 169, "chalf": 170, "char": 171, "choleski": [172, 932, 1223], "cholesky_invers": [173, 933], "cholesky_solv": [174, 934], "chunk": [175, 935], "clamp": [176, 760, 936], "clamp_": 177, "clip": [178, 937, 1893], "clip_": 179, "clone": [180, 938], "coalesc": 181, "col_indic": 182, "conj": [183, 952], "conj_phys": [184, 953], "conj_physical_": 185, "contigu": 186, "copy_": 187, "copysign": [188, 954], "copysign_": 189, "corrcoef": [190, 955], "co": [191, 956], "cos_": 192, "cosh": [193, 957], "cosh_": 194, "count_nonzero": [195, 958], "cov": [196, 959], "cross": [198, 967, 1226, 1894], "crow_indic": 199, "cummax": [201, 1046], "cummin": [202, 1047], "cumprod": [203, 1048], "cumprod_": 204, "cumsum": [205, 1049], "cumsum_": 206, "data_ptr": 207, "deg2rad": [208, 1051], "dense_dim": 209, "dequant": [210, 1052, 1919], "det": [211, 1053, 1227], "detach": 212, "detach_": 213, "devic": [214, 989, 1897, 1908, 1931], "diag": [215, 1054], "diag_emb": [216, 1055], "diagflat": [217, 1056], "diagon": [218, 1057, 1228], "diagonal_scatt": [219, 1058], "diff": [220, 1059], "digamma": [221, 1060], "digamma_": 222, "dim": [223, 1887], "dim_ord": 224, "dist": [225, 1061], "div": [226, 1062, 1910], "div_": 227, "divid": [228, 1063], "divide_": 229, "dot": [230, 1064], "doubl": 231, "dsplit": [232, 1065], "element_s": 233, "eq": [234, 1072], "eq_": 235, "equal": [236, 1073], "erf": [237, 1074], "erf_": 238, "erfc": [239, 1075], "erfc_": 240, "erfinv": [241, 1076], "erfinv_": 242, "exp": [243, 1077], "exp_": 244, "expand": 245, "expand_a": 246, "expm1": [247, 1079], "expm1_": 248, "exponential_": 249, "fill_": 250, "fill_diagonal_": 251, "fix_": 253, "flatten": [254, 1106, 1373], "flip": [255, 1107], "fliplr": [256, 1108], "flipud": [257, 1109], "float": [258, 1910], "float_pow": [259, 1110], "float_power_": 260, "floor": [261, 1111], "floor_": 262, "floor_divid": [263, 1112], "floor_divide_": 264, "fmax": [265, 1113], "fmin": [266, 1114], "fmod": [267, 1115], "fmod_": 268, "frac": [269, 1116], "frac_": 270, "frexp": [271, 1117], "gather": [272, 982, 1136], "gcd": [273, 1137], "gcd_": 274, "ge": [275, 1138], "ge_": 276, "geometric_": 277, "geqrf": [278, 1139], "ger": [279, 1140], "get_devic": 280, "greater": [282, 1148], "greater_": 283, "greater_equ": [284, 1149], "greater_equal_": 285, "gt": [286, 1150], "gt_": 287, "half": 288, "hardshrink": [289, 1383, 1529], "heavisid": [290, 1153], "histc": [291, 1154], "histogram": [292, 1155], "hsplit": [293, 1157], "hypot": [294, 1160], "hypot_": 295, "i0": [296, 1161], "i0_": 297, "igamma": [298, 1162], "igamma_": 299, "igammac": [300, 1163], "igammac_": 301, "index_add": [303, 1165], "index_add_": 304, "index_copi": [305, 1166], "index_copy_": 306, "index_fil": 307, "index_fill_": 308, "index_put": 309, "index_put_": 310, "index_reduc": [311, 1167], "index_reduce_": 312, "index_select": [313, 1168], "indic": [314, 1870], "inner": [315, 1171], "int": 316, "int_repr": 317, "invers": [318, 1172, 1879], "is_coalesc": 319, "is_complex": [320, 1173], "is_conj": [321, 1174], "is_contigu": 322, "is_cuda": 323, "is_floating_point": [324, 1176], "is_infer": 325, "is_leaf": 326, "is_meta": 327, "is_pin": 328, "is_quant": 329, "is_set_to": 330, "is_shar": 331, "is_sign": 332, "is_spars": 333, "is_sparse_csr": 334, "isclos": [335, 1183], "isfinit": [336, 1184], "isinf": [337, 1186], "isnan": [338, 1187], "isneginf": [339, 1188], "isposinf": [340, 1189], "isreal": [341, 1190], "istft": [342, 1191], "items": 344, "kthvalu": [345, 1215], "lcm": [346, 1216], "lcm_": 347, "ldexp": [348, 1217], "ldexp_": 349, "le": [350, 1218], "le_": 351, "lerp": [352, 1219], "lerp_": 353, "less": [354, 1220], "less_": 355, "less_equ": [356, 1221], "less_equal_": 357, "lgamma": [358, 1222], "lgamma_": 359, "log10": [361, 1268], "log10_": 362, "log1p": [363, 1269], "log1p_": 364, "log2": [365, 1270], "log2_": 366, "log_": 367, "log_normal_": 368, "logaddexp": [369, 1271], "logaddexp2": [370, 1272], "logcumsumexp": [371, 1273], "logdet": [372, 1274], "logical_and": [373, 1275], "logical_and_": 374, "logical_not": [375, 1276], "logical_not_": 376, "logical_or": [377, 1277], "logical_or_": 378, "logical_xor": [379, 1278], "logical_xor_": 380, "logit": [381, 1279], "logit_": 382, "logsumexp": [383, 1281], "long": 384, "lt": [385, 1282], "lt_": 386, "lu": [387, 1240, 1283], "lu_solv": [388, 1243, 1284], "map_": 389, "masked_fil": 390, "masked_fill_": 391, "masked_scatt": 392, "masked_scatter_": 393, "masked_select": [394, 1287], "matmul": [395, 1244, 1288], "matrix_exp": [396, 1245, 1289], "matrix_pow": [397, 1247, 1290], "maximum": [399, 1292], "mean": [400, 1293], "median": [401, 1294], "minimum": [403, 1297], "mm": [404, 1298, 1793], "moveaxi": [406, 1300], "movedim": [407, 1301], "msort": [408, 1315], "mul": [409, 1316], "mul_": 410, "multipli": [412, 1318], "multiply_": 413, "mv": [414, 1319], "mvlgamma": [415, 1320], "mvlgamma_": 416, "nan_to_num": [417, 1321], "nan_to_num_": 418, "nanmean": [419, 1322], "nanmedian": [420, 1323], "nanquantil": [421, 1324], "nansum": [422, 1325], "narrow": [423, 1326], "narrow_copi": [424, 1327], "nbyte": 425, "ndim": 426, "ndimens": 427, "ne": [428, 1328], "ne_": 429, "neg": [430, 432, 1329, 1330], "neg_": 431, "negative_": 433, "nelement": 434, "new_empti": 435, "new_ful": 436, "new_on": 437, "new_tensor": 438, "new_zero": 439, "nextaft": [440, 1331], "nextafter_": 441, "normal_": 444, "not_equ": [445, 1656], "not_equal_": 446, "numel": [447, 1657], "numpi": [448, 1912], "orgqr": [449, 1702], "ormqr": [450, 1703], "outer": [451, 1704], "permut": [452, 1706, 1887], "pin_memori": 453, "pinvers": [454, 1707], "polygamma": [455, 1710], "polygamma_": 456, "posit": [457, 1711], "pow": [458, 1712], "pow_": 459, "prod": [460, 1713], "put_": 461, "q_per_channel_axi": 462, "q_per_channel_scal": 463, "q_per_channel_zero_point": 464, "q_scale": 465, "q_zero_point": 466, "qr": [467, 1252, 1715], "qscheme": 468, "quantil": [469, 1716], "rad2deg": [470, 1723], "random_": 471, "ravel": [472, 1732], "reciproc": [474, 1734], "reciprocal_": 475, "record_stream": 476, "register_hook": [477, 902], "remaind": [478, 1735], "remainder_": 479, "renorm": [480, 1736], "renorm_": 481, "repeat": 482, "repeat_interleav": [483, 1737], "requires_grad": [484, 1894], "requires_grad_": 485, "reshap": [486, 1738], "reshape_a": 487, "resize_": 488, "resize_as_": 489, "resolve_conj": [490, 1739], "resolve_neg": [491, 1740], "retain_grad": 492, "retains_grad": 493, "roll": [494, 1742], "rot90": [495, 1743], "round": [496, 1744], "round_": 497, "row_indic": 498, "rsqrt": [499, 1746], "rsqrt_": 500, "scatter": [501, 984, 1748], "scatter_": 502, "scatter_add": [503, 1749], "scatter_add_": 504, "scatter_reduc": [505, 1750], "scatter_reduce_": 506, "select": [507, 1753, 1881], "select_scatt": [508, 1754], "set_": 509, "sgn": [510, 1767], "sgn_": 511, "share_memory_": 513, "short": 514, "sigmoid": [515, 748, 1457, 1578, 1768], "sigmoid_": 516, "sign": [517, 1769], "sign_": 518, "signbit": [519, 1781], "sin": [520, 1782], "sin_": 521, "sinc": [522, 1783], "sinc_": 523, "sinh": [524, 1784], "sinh_": 525, "slice_scatt": [527, 1785], "slogdet": [528, 1253, 1786], "smm": [529, 1787], "softmax": [530, 1460, 1582, 1788, 1795], "sort": [531, 1789], "sparse_dim": 532, "sparse_mask": 533, "sparse_resize_": 534, "sparse_resize_and_clear_": 535, "split": [536, 1804], "sqrt": [537, 1805], "sqrt_": 538, "squar": [539, 1806], "square_": 540, "squeez": [541, 1807], "squeeze_": 542, "sspaddmm": [543, 1808], "std": [544, 1810], "stft": [545, 1812], "storag": [546, 1930], "storage_offset": 547, "storage_typ": 548, "stride": 549, "sub": [550, 1813], "sub_": 551, "subtract": [552, 1814], "subtract_": 553, "sum": [554, 1797, 1815, 1890], "sum_to_s": 555, "svd": [556, 1257, 1816], "swapax": [557, 1818], "swapdim": [558, 1819], "t": [559, 1825, 1874, 1901, 1947], "t_": 560, "take": [561, 1826, 1915], "take_along_dim": [562, 1827], "tan": [563, 1828], "tan_": 564, "tanh": [565, 1467, 1587, 1829], "tanh_": 566, "tensor_split": [567, 1831], "tile": [568, 1833], "to_dens": 570, "to_mkldnn": 571, "to_spars": 572, "to_sparse_bsc": 573, "to_sparse_bsr": 574, "to_sparse_coo": 575, "to_sparse_csc": 576, "to_sparse_csr": 577, "tolist": 578, "topk": [579, 1834], "transpos": [581, 1836], "transpose_": 582, "triangular_solv": [583, 1839], "tril": [584, 1840], "tril_": 585, "triu": [586, 1842], "triu_": 587, "true_divid": [588, 1844], "true_divide_": 589, "trunc": [590, 1845], "trunc_": 591, "type_a": 593, "unbind": [594, 1846, 1889], "unflatten": [595, 1477, 1847], "unfold": [596, 1478, 1594], "uniform_": 597, "uniqu": [598, 1848], "unique_consecut": [599, 1849], "unsqueez": [600, 1850], "unsqueeze_": 601, "untyped_storag": 602, "var": [604, 1857], "vdot": [605, 1859], "view": [606, 1881, 1910, 1932, 1955], "view_a": 607, "vsplit": [608, 1863], "where": [609, 1865, 1869], "xlogi": [610, 1866], "xlogy_": 611, "zero_": 612, "_assert": 613, "_foreach_ab": 614, "_foreach_abs_": 615, "_foreach_aco": 616, "_foreach_acos_": 617, "_foreach_asin": 618, "_foreach_asin_": 619, "_foreach_atan": 620, "_foreach_atan_": 621, "_foreach_ceil": 622, "_foreach_ceil_": 623, "_foreach_co": 624, "_foreach_cos_": 625, "_foreach_cosh": 626, "_foreach_cosh_": 627, "_foreach_erf": 628, "_foreach_erf_": 629, "_foreach_erfc": 630, "_foreach_erfc_": 631, "_foreach_exp": 632, "_foreach_exp_": 633, "_foreach_expm1": 634, "_foreach_expm1_": 635, "_foreach_floor": 636, "_foreach_floor_": 637, "_foreach_frac": 638, "_foreach_frac_": 639, "_foreach_lgamma": 640, "_foreach_lgamma_": 641, "_foreach_log": 642, "_foreach_log10": 643, "_foreach_log10_": 644, "_foreach_log1p": 645, "_foreach_log1p_": 646, "_foreach_log2": 647, "_foreach_log2_": 648, "_foreach_log_": 649, "_foreach_neg": 650, "_foreach_neg_": 651, "_foreach_reciproc": 652, "_foreach_reciprocal_": 653, "_foreach_round": 654, "_foreach_round_": 655, "_foreach_sigmoid": 656, "_foreach_sigmoid_": 657, "_foreach_sin": 658, "_foreach_sin_": 659, "_foreach_sinh": 660, "_foreach_sinh_": 661, "_foreach_sqrt": 662, "_foreach_sqrt_": 663, "_foreach_tan": 664, "_foreach_tan_": 665, "_foreach_trunc": 666, "_foreach_trunc_": 667, "_foreach_zero_": 668, "_log": [669, 1880], "set_log": 669, "bnrelu2d": [689, 712], "bnrelu3d": [690, 713], "convbn1d": [691, 701], "convbn2d": [692, 702], "convbn3d": [693, 703], "convbnrelu1d": [694, 704], "convbnrelu2d": [695, 705], "convbnrelu3d": [696, 706], "convrelu1d": [697, 714], "convrelu2d": [698, 707, 715], "convrelu3d": [699, 708, 716], "linearrelu": [700, 709, 717, 718], "freeze_bn_stat": 710, "update_bn_stat": 711, "conv2d": [719, 728, 762, 1356, 1502], "conv3d": [720, 729, 763, 1357, 1503], "lstm": [723, 751, 1397, 1909], "multiheadattent": [724, 1433], "batchnorm2d": [725, 1346], "batchnorm3d": [726, 1347], "conv1d": [727, 761, 1355, 1501], "convtranspose1d": [730, 1358], "convtranspose2d": [731, 1359], "convtranspose3d": [732, 1360], "elu": [733, 764, 1369, 1515], "embed": [734, 1370, 1517], "embeddingbag": [735, 1371], "fxfloatfunct": 736, "floatfunct": 737, "groupnorm": [738, 1382], "hardswish": [739, 766, 1385, 1531], "instancenorm1d": [740, 1390], "instancenorm2d": [741, 1391], "instancenorm3d": [742, 1392], "layernorm": [743, 1399], "leakyrelu": [744, 1413], "qfunction": 746, "relu6": [747, 1447, 1572], "gru": [749, 1379], "grucel": [750, 1380], "lstmcell": [752, 1398], "rnncell": [754, 1444], "adaptive_avg_pool2d": [755, 1486], "adaptive_avg_pool3d": [756, 1487], "avg_pool2d": [757, 1494], "avg_pool3d": [758, 1495], "celu": [759, 1349, 1500], "hardsigmoid": [765, 1384, 1530], "hardtanh": [767, 1386, 1532], "interpol": [768, 1537], "leaky_relu": [769, 1541], "max_pool1d": [771, 1550], "max_pool2d": [772, 1551], "threshold": [773, 1469, 1589], "upsampl": [774, 1479, 1595], "upsample_bilinear": [775, 1596], "upsample_nearest": [776, 1597], "dequantstub": 777, "quantstub": 778, "quantwrapp": 779, "add_quant_dequ": 780, "backendconfig": 781, "backendpatternconfig": 782, "dtypeconfig": 783, "dtypewithconstraint": 784, "observationtyp": 785, "convert": [786, 1946], "default_eval_fn": 787, "fakequant": [788, 1919], "fakequantizebas": 789, "fixedqparamsfakequant": 790, "fusedmovingavgobsfakequant": 791, "default_fake_qu": 792, "default_fused_act_fake_qu": 793, "default_fused_per_channel_wt_fake_qu": 794, "default_fused_wt_fake_qu": 795, "default_histogram_fake_qu": 796, "default_per_channel_weight_fake_qu": 797, "default_weight_fake_qu": 798, "disable_fake_qu": 799, "disable_observ": 800, "enable_fake_qu": 801, "enable_observ": 802, "fuse_modul": 803, "convertcustomconfig": 804, "fusecustomconfig": 805, "preparecustomconfig": 806, "standalonemoduleconfigentri": 807, "histogramobserv": 808, "minmaxobserv": 809, "movingaverageminmaxobserv": 810, "movingaverageperchannelminmaxobserv": 811, "noopobserv": 812, "observerbas": 813, "perchannelminmaxobserv": 814, "placeholderobserv": 815, "recordingobserv": 816, "default_debug_observ": 817, "default_dynamic_quant_observ": 818, "default_float_qparams_observ": 819, "default_histogram_observ": 820, "default_observ": 821, "default_per_channel_weight_observ": 822, "default_placeholder_observ": 823, "default_weight_observ": 824, "get_observer_state_dict": 825, "load_observer_state_dict": 826, "prepar": [827, 1919, 1922], "prepare_qat": 828, "propagate_qconfig": 829, "qconfig": [830, 1919, 1922], "default_activation_only_qconfig": 831, "default_debug_qconfig": 832, "default_dynamic_qconfig": 833, "default_per_channel_qconfig": 834, "default_qat_qconfig": 835, "default_qat_qconfig_v2": 836, "default_qconfig": 837, "default_weight_only_qconfig": 838, "float16_dynamic_qconfig": 839, "float16_static_qconfig": 840, "float_qparams_weight_only_qconfig": 841, "per_channel_dynamic_qconfig": 842, "qconfigmap": 843, "get_default_qat_qconfig_map": 844, "get_default_qconfig_map": 845, "quantiz": [846, 1890, 1905, 1912, 1919, 1920, 1921, 1922], "quantize_dynam": 847, "convert_fx": 848, "fuse_fx": 849, "prepare_fx": 850, "prepare_qat_fx": 851, "quantize_qat": 852, "swap_modul": 853, "arang": 854, "are_deterministic_algorithms_en": 862, "as_tensor": 868, "asarrai": 869, "atleast_1d": 875, "atleast_2d": 876, "atleast_3d": 877, "dual_level": 883, "forward_ad": [884, 885], "make_du": 884, "unpack_du": 885, "functionctx": [886, 887, 888, 889], "mark_dirti": 886, "mark_non_differenti": 887, "save_for_backward": 888, "set_materialize_grad": 889, "hvp": 891, "vhp": 894, "gradcheck": [897, 1902], "gradgradcheck": [898, 1902], "metadata": [899, 1904], "name": [900, 1873, 1887, 1888], "next_funct": 901, "register_prehook": 903, "load_nvprof": 904, "export_chrome_trac": 905, "key_averag": 906, "self_cpu_time_tot": 907, "total_averag": 908, "bartlett_window": 910, "blackman_window": 919, "block_diag": 920, "broadcast_shap": 922, "broadcast_tensor": 923, "bucket": 925, "can_cast": 926, "cartesian_prod": 927, "cat": 928, "cdist": 929, "chain_matmul": 931, "column_stack": 939, "combin": [940, 1899], "compiled_with_cxx11_abi": 942, "allow_in_graph": [943, 1948], "list_backend": 947, "reset": 948, "concat": 950, "concaten": 951, "streamcontext": [961, 974], "current_stream": [962, 987], "device_count": [963, 990], "is_avail": [964, 1007], "cudagraph": [968, 1942], "cudapluggablealloc": 969, "externalstream": 971, "outofmemoryerror": 972, "caching_allocator_alloc": 975, "caching_allocator_delet": 976, "can_device_access_p": 977, "change_current_alloc": 978, "clock_rat": 979, "comm": [980, 981, 982, 983, 984], "broadcast": [980, 1895], "broadcast_coalesc": 981, "reduce_add": 983, "current_blas_handl": 985, "current_devic": 986, "default_stream": 988, "device_of": 991, "empty_cach": [992, 1304], "get_allocator_backend": 993, "get_arch_list": 994, "get_device_cap": 995, "get_device_nam": 996, "get_device_properti": 997, "get_gencode_flag": 998, "get_rng_stat": [999, 1146, 1306], "get_rng_state_al": 1000, "get_sync_debug_mod": 1001, "graph_pool_handl": 1003, "init": [1004, 1892], "initial_se": [1005, 1170], "ipc_collect": 1006, "is_current_stream_captur": 1008, "is_initi": 1009, "_create_jit_fn": 1010, "_create_multi_output_jit_fn": 1011, "list_gpu_process": 1012, "make_graphed_cal": 1013, "manual_se": [1014, 1286, 1307], "manual_seed_al": 1015, "max_memory_alloc": 1016, "max_memory_cach": 1017, "max_memory_reserv": 1018, "mem_get_info": 1019, "memory_alloc": 1020, "memory_cach": 1021, "memory_reserv": 1022, "memory_snapshot": 1023, "memory_stat": 1024, "memory_summari": 1025, "memory_usag": 1026, "mark": 1027, "range_pop": 1028, "range_push": 1029, "power_draw": 1030, "reset_max_memory_alloc": 1031, "reset_max_memory_cach": 1032, "reset_peak_memory_stat": 1033, "seed": [1034, 1311, 1752], "seed_al": 1035, "set_devic": 1036, "set_per_process_memory_fract": [1037, 1312], "set_rng_stat": [1038, 1313, 1765], "set_rng_state_al": 1039, "set_stream": 1040, "set_sync_debug_mod": 1041, "temperatur": 1044, "cumulative_trapezoid": 1050, "dstack": 1066, "einsum": 1067, "empti": 1068, "empty_lik": 1069, "empty_strid": 1070, "enable_grad": 1071, "exp2": 1078, "ey": 1080, "fake_quantize_per_channel_affin": 1081, "fake_quantize_per_tensor_affin": 1082, "fft2": 1084, "fftfreq": 1085, "fftn": 1086, "fftshift": 1087, "hfft": 1088, "hfft2": 1089, "hfftn": 1090, "ifft": 1091, "ifft2": 1092, "ifftn": 1093, "ifftshift": 1094, "ihfft": 1095, "ihfft2": 1096, "ihfftn": 1097, "irfft": 1098, "irfft2": 1099, "irfftn": 1100, "rfft": 1101, "rfft2": 1102, "rfftfreq": 1103, "rfftn": 1104, "from_dlpack": 1118, "from_numpi": 1119, "frombuff": 1120, "full": [1121, 1910], "full_lik": 1122, "functional_cal": [1123, 1649], "grad_and_valu": 1126, "replace_all_batch_norm_modules_": 1132, "stack_module_st": 1133, "get_default_dtyp": 1141, "get_deterministic_debug_mod": 1142, "get_float32_matmul_precis": 1143, "get_num_interop_thread": 1144, "get_num_thread": 1145, "hamming_window": 1151, "hann_window": 1152, "histogramdd": 1156, "hspmm": 1158, "hstack": 1159, "inference_mod": 1169, "is_deterministic_algorithms_warn_only_en": 1175, "is_grad_en": 1177, "is_inference_mode_en": 1178, "is_nonzero": 1179, "is_storag": 1180, "is_tensor": 1181, "is_warn_always_en": 1182, "isin": 1185, "attribut": [1192, 1871, 1873, 1874, 1876, 1931], "scriptfunct": 1193, "scriptmodul": [1194, 1910], "annot": [1195, 1874], "enable_onednn_fus": 1196, "fork": 1197, "freez": 1198, "ignor": 1199, "isinst": 1200, "onednn_fusion_en": 1202, "optimize_for_infer": 1203, "save": [1204, 1747, 1869, 1894, 1904, 1910, 1919], "script_if_trac": 1206, "set_fusion_strategi": 1207, "strict_fus": 1208, "trace_modul": 1210, "unus": 1211, "wait": 1212, "kaiser_window": 1213, "kron": 1214, "cholesky_ex": 1224, "eig": 1229, "eigh": 1230, "eigval": 1231, "eigvalsh": 1232, "householder_product": 1233, "inv": 1234, "inv_ex": 1235, "ldl_factor": 1236, "ldl_factor_ex": 1237, "ldl_solv": 1238, "lstsq": 1239, "lu_factor": 1241, "lu_factor_ex": 1242, "matrix_norm": 1246, "matrix_rank": 1248, "multi_dot": 1249, "pinv": 1251, "solv": 1254, "solve_ex": 1255, "solve_triangular": 1256, "svdval": 1258, "tensorinv": 1259, "tensorsolv": 1260, "vander": [1261, 1856], "vecdot": 1262, "vector_norm": 1263, "linspac": 1264, "lobpcg": 1266, "logspac": 1280, "lu_unpack": 1285, "meshgrid": 1295, "current_allocated_memori": 1302, "driver_allocated_memori": 1303, "stop": 1310, "adaptiveavgpool1d": 1332, "adaptiveavgpool2d": 1333, "adaptiveavgpool3d": 1334, "adaptivelogsoftmaxwithloss": 1335, "adaptivemaxpool1d": 1336, "adaptivemaxpool2d": 1337, "adaptivemaxpool3d": 1338, "alphadropout": 1339, "avgpool1d": 1340, "avgpool2d": 1341, "avgpool3d": 1342, "bceloss": 1343, "bcewithlogitsloss": 1344, "batchnorm1d": 1345, "bilinear": [1348, 1497], "ctcloss": 1350, "channelshuffl": 1351, "constantpad1d": 1352, "constantpad2d": 1353, "constantpad3d": 1354, "cosineembeddingloss": 1361, "cosinesimilar": 1362, "crossentropyloss": 1363, "dataparallel": [1364, 1890, 1891, 1893, 1897], "dropout": [1365, 1511, 1890, 1891], "dropout1d": [1366, 1512], "dropout2d": [1367, 1513], "dropout3d": [1368, 1514], "featurealphadropout": 1372, "fold": [1374, 1520], "fractionalmaxpool2d": 1375, "fractionalmaxpool3d": 1376, "gelu": [1377, 1524], "glu": [1378, 1525], "gaussiannllloss": 1381, "hingeembeddingloss": 1387, "huberloss": 1388, "ident": [1389, 1623, 1631, 1874, 1901], "kldivloss": 1393, "l1loss": 1394, "lppool1d": 1395, "lppool2d": 1396, "lazybatchnorm1d": 1400, "lazybatchnorm2d": 1401, "lazybatchnorm3d": 1402, "lazyconv1d": 1403, "lazyconv2d": 1404, "lazyconv3d": 1405, "lazyconvtranspose1d": 1406, "lazyconvtranspose2d": 1407, "lazyconvtranspose3d": 1408, "lazyinstancenorm1d": 1409, "lazyinstancenorm2d": 1410, "lazyinstancenorm3d": 1411, "lazylinear": 1412, "localresponsenorm": 1415, "logsigmoid": [1416, 1546], "logsoftmax": 1417, "mseloss": 1418, "marginrankingloss": 1419, "maxpool1d": 1420, "maxpool2d": 1421, "maxpool3d": 1422, "maxunpool1d": 1423, "maxunpool2d": 1424, "maxunpool3d": 1425, "mish": [1426, 1556], "moduledict": [1428, 1874], "modulelist": [1429, 1873, 1874], "multilabelmarginloss": 1430, "multilabelsoftmarginloss": 1431, "multimarginloss": 1432, "nllloss": 1434, "prelu": [1435, 1570], "pairwisedist": 1436, "parameterdict": 1437, "parameterlist": 1438, "pixelshuffl": 1439, "pixelunshuffl": 1440, "poissonnllloss": 1441, "rnn": [1442, 1641, 1642, 1643, 1644, 1645, 1646, 1909], "rnnbase": 1443, "rrelu": [1445, 1574], "relu": [1446, 1571], "reflectionpad1d": 1448, "reflectionpad2d": 1449, "reflectionpad3d": 1450, "replicationpad1d": 1451, "replicationpad2d": 1452, "replicationpad3d": 1453, "selu": [1454, 1577], "sequenti": 1455, "silu": [1456, 1579], "smoothl1loss": 1458, "softmarginloss": 1459, "softmax2d": 1461, "softmin": [1462, 1583], "softplu": [1463, 1584], "softshrink": [1464, 1585], "softsign": [1465, 1586], "syncbatchnorm": 1466, "tanhshrink": [1468, 1588], "transformerdecod": 1471, "transformerdecoderlay": 1472, "transformerencod": 1473, "transformerencoderlay": 1474, "tripletmarginloss": 1475, "tripletmarginwithdistanceloss": 1476, "upsamplingbilinear2d": 1480, "upsamplingnearest2d": 1481, "zeropad1d": 1482, "zeropad2d": 1483, "zeropad3d": 1484, "adaptive_avg_pool1d": 1485, "adaptive_max_pool1d": 1488, "adaptive_max_pool2d": 1489, "adaptive_max_pool3d": 1490, "affine_grid": 1491, "alpha_dropout": 1492, "avg_pool1d": 1493, "batch_norm": 1496, "conv_transpose1d": 1504, "conv_transpose2d": 1505, "conv_transpose3d": 1506, "cosine_embedding_loss": 1507, "cosine_similar": 1508, "cross_entropi": 1509, "ctc_loss": 1510, "elu_": 1516, "embedding_bag": 1518, "feature_alpha_dropout": 1519, "fractional_max_pool2d": 1521, "fractional_max_pool3d": 1522, "gaussian_nll_loss": 1523, "grid_sampl": 1526, "group_norm": 1527, "gumbel_softmax": 1528, "hardtanh_": 1533, "hinge_embedding_loss": 1534, "huber_loss": 1535, "instance_norm": 1536, "kl_div": 1538, "l1_loss": 1539, "layer_norm": 1540, "leaky_relu_": 1542, "local_response_norm": 1544, "log_softmax": [1545, 1792], "lp_pool1d": 1547, "lp_pool2d": 1548, "margin_ranking_loss": 1549, "max_pool3d": 1552, "max_unpool1d": 1553, "max_unpool2d": 1554, "max_unpool3d": 1555, "mse_loss": 1557, "multi_margin_loss": 1558, "multilabel_margin_loss": 1559, "multilabel_soft_margin_loss": 1560, "nll_loss": 1561, "one_hot": 1563, "pad": [1564, 1890], "pairwise_dist": 1565, "pdist": 1566, "pixel_shuffl": 1567, "pixel_unshuffl": 1568, "poisson_nll_loss": 1569, "relu_": 1573, "rrelu_": 1575, "scaled_dot_product_attent": 1576, "smooth_l1_loss": 1580, "soft_margin_loss": 1581, "threshold_": 1590, "data_parallel": [1591, 1891], "triplet_margin_loss": 1592, "triplet_margin_with_distance_loss": 1593, "lazymodulemixin": 1598, "register_module_backward_hook": 1599, "register_module_buffer_registration_hook": 1600, "register_module_forward_hook": 1601, "register_module_forward_pre_hook": 1602, "register_module_full_backward_hook": 1603, "register_module_full_backward_pre_hook": 1604, "register_module_module_registration_hook": 1605, "register_module_parameter_registration_hook": 1606, "distributeddataparallel": [1607, 1893, 1897, 1898], "uninitializedbuff": 1609, "uninitializedparamet": 1610, "clip_grad_norm_": 1611, "clip_grad_value_": 1612, "parameters_to_vector": 1613, "parametr": [1614, 1615, 1617, 1618, 1619, 1620, 1905], "orthogon": 1614, "spectral_norm": [1615, 1648], "parametrizationlist": 1616, "cach": [1617, 1869, 1897, 1903, 1950], "is_parametr": 1618, "register_parametr": 1619, "remove_parametr": 1620, "basepruningmethod": 1621, "customfrommask": 1622, "l1unstructur": 1624, "lnstructur": 1625, "pruningcontain": 1626, "randomstructur": 1627, "randomunstructur": 1628, "prune": [1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1905], "custom_from_mask": 1629, "global_unstructur": 1630, "is_prun": 1632, "l1_unstructur": 1633, "ln_structur": 1634, "random_structur": 1635, "random_unstructur": 1636, "remove_spectral_norm": 1638, "remove_weight_norm": 1639, "packedsequ": 1640, "pack_padded_sequ": 1641, "pack_sequ": 1642, "pad_packed_sequ": 1643, "pad_sequ": 1644, "unpack_sequ": 1645, "unpad_sequ": 1646, "skip_init": 1647, "stateless": 1649, "vector_to_paramet": 1650, "weight_norm": 1651, "no_grad": 1652, "ones": 1658, "ones_lik": 1659, "diagnosticopt": 1660, "exportopt": 1661, "exportoutput": 1662, "exportoutputseri": 1663, "jitscalartyp": 1664, "onnxexportererror": 1665, "onnxregistri": 1666, "graphinfo": 1667, "verificationopt": 1668, "asgd": 1669, "adadelta": 1670, "adagrad": 1671, "adam": 1672, "adamw": 1673, "adamax": 1674, "lbfg": 1675, "nadam": 1676, "add_param_group": 1677, "load_state_dict": 1678, "state_dict": [1679, 1953], "step": [1680, 1915, 1949], "zero_grad": 1681, "radam": 1682, "rmsprop": 1683, "rprop": 1684, "sgd": 1685, "sparseadam": 1686, "chainedschedul": 1687, "constantlr": 1688, "cosineannealinglr": 1689, "cosineannealingwarmrestart": 1690, "cycliclr": 1691, "exponentiallr": 1692, "lambdalr": 1693, "linearlr": 1694, "multisteplr": 1695, "multiplicativelr": 1696, "onecyclelr": 1697, "polynomiallr": 1698, "reducelronplateau": 1699, "sequentiallr": 1700, "steplr": 1701, "pca_lowrank": 1705, "polar": 1709, "promote_typ": 1714, "quantize_per_channel": 1717, "quantize_per_tensor": 1718, "quantized_batch_norm": 1719, "quantized_max_pool1d": 1720, "quantized_max_pool2d": 1721, "sobolengin": 1722, "rand": 1724, "rand_lik": 1725, "randint": 1726, "randint_lik": 1727, "randn": 1728, "randn_lik": 1729, "randperm": 1730, "rang": [1731, 1873], "result_typ": 1741, "row_stack": 1745, "searchsort": 1751, "set_default_devic": 1755, "set_default_dtyp": 1756, "set_default_tensor_typ": 1757, "set_deterministic_debug_mod": 1758, "set_float32_matmul_precis": 1759, "set_flush_denorm": 1760, "set_grad_en": 1761, "set_num_interop_thread": 1762, "set_num_thread": 1763, "set_printopt": 1764, "set_warn_alwai": 1766, "signal": [1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1927], "bartlett": 1770, "blackman": 1771, "cosin": 1772, "gaussian": 1774, "general_cosin": 1775, "general_ham": 1776, "ham": 1777, "hann": 1778, "kaiser": 1779, "nuttal": 1780, "check_sparse_tensor_invari": 1791, "sampled_addmm": 1794, "spdiag": 1796, "sparse_bsc_tensor": 1798, "sparse_bsr_tensor": 1799, "sparse_compressed_tensor": 1800, "sparse_coo_tensor": 1801, "sparse_csc_tensor": 1802, "sparse_csr_tensor": 1803, "std_mean": 1811, "svd_lowrank": 1817, "sym_float": 1820, "sym_int": 1821, "sym_max": 1822, "sym_min": 1823, "sym_not": 1824, "tensordot": 1832, "trapezoid": 1837, "trapz": 1838, "tril_indic": 1841, "triu_indic": 1843, "use_deterministic_algorithm": 1851, "generate_methods_for_privateuse1_backend": 1852, "get_cpp_backtrac": 1853, "rename_privateuse1_backend": 1854, "set_modul": 1855, "var_mean": 1858, "view_as_complex": 1860, "view_as_r": 1861, "vstack": 1864, "zero": 1867, "zeros_lik": 1868, "hub": 1869, "publish": 1869, "an": [1869, 1912, 1915, 1916], "entrypoint": 1869, "run": [1869, 1954], "my": [1869, 1894, 1901, 1916, 1947, 1954], "download": 1869, "logic": [1869, 1873], "known": [1869, 1871], "bind": 1870, "tabl": [1870, 1910], "built": [1871, 1872, 1874, 1912], "comparison": [1871, 1873, 1874, 1936, 1942], "inspect": [1871, 1944], "warn": 1871, "appendix": [1871, 1874], "recurs": 1871, "constant": [1871, 1873], "fusion": 1871, "math": [1872, 1936], "construct": [1873, 1874, 1876, 1889, 1915, 1928], "refin": [1873, 1874], "enum": [1873, 1874], "tupl": [1873, 1874], "express": [1873, 1874], "liter": [1873, 1874], "list": [1873, 1874, 1912], "dict": 1873, "arithmet": [1873, 1874], "subscript": [1873, 1874], "slice": [1873, 1874, 1908, 1936], "ternari": [1873, 1874], "cast": 1873, "statement": [1873, 1874], "assign": [1873, 1874], "If": 1873, "while": [1873, 1874], "loop": 1873, "For": 1873, "break": [1873, 1874, 1947, 1955, 1957], "continu": [1873, 1874], "return": [1873, 1874, 1901, 1926], "resolut": [1873, 1874], "lookup": 1873, "defin": [1873, 1899, 1900], "terminologi": 1874, "meta": 1874, "primit": 1874, "special": [1874, 1894, 1929], "instanc": 1874, "when": [1874, 1894, 1899, 1912, 1919, 1928, 1947], "signatur": 1874, "expr": 1874, "convers": [1874, 1889], "atom": 1874, "identifi": [1874, 1947, 1957], "parenthes": 1874, "form": 1874, "displai": 1874, "primari": 1874, "power": 1874, "unari": [1874, 1881, 1928], "bitwis": 1874, "binari": [1874, 1881], "shift": 1874, "boolean": 1874, "condit": 1874, "augment": 1874, "rais": 1874, "del": 1874, "compound": 1874, "els": 1874, "getattr": 1874, "hasattr": 1874, "zip": [1874, 1916], "enumer": 1874, "rule": [1874, 1888, 1900, 1913], "remot": [1874, 1926], "procedur": 1874, "execut": [1874, 1894, 1897, 1916, 1917], "program": 1874, "coverag": [1875, 1887, 1899], "properti": [1876, 1879], "correctli": 1876, "bound": 1876, "schema": 1876, "between": [1876, 1916, 1947], "matrix": [1879, 1919], "decomposit": 1879, "solver": 1879, "misc": 1879, "experiment": 1879, "motiv": [1881, 1945, 1946], "reduct": [1881, 1897, 1908, 1936], "mobile_optim": 1882, "model_zoo": 1883, "strategi": [1886, 1915], "descriptor": 1886, "file_descriptor": 1886, "file_system": 1886, "subprocess": 1886, "keep": [1887, 1916], "dimens": [1887, 1888], "unifi": 1887, "contract": 1887, "awai": 1887, "factori": 1887, "variant": 1887, "semant": [1888, 1895, 1897, 1903, 1910], "explicit": 1888, "align": 1888, "current": 1888, "subsystem": 1888, "constructor": 1889, "contain": 1890, "convolut": [1890, 1891, 1908, 1909], "layer": 1890, "pool": [1890, 1891], "activ": [1890, 1891, 1959], "weight": [1890, 1915], "nonlinear": 1890, "recurr": [1890, 1901], "distanc": [1890, 1891], "loss": [1890, 1891, 1893], "vision": [1890, 1891], "shuffl": 1890, "lazi": 1890, "attent": 1891, "typic": 1893, "unscal": 1893, "accumul": 1893, "penalti": 1893, "one": 1893, "per": [1893, 1915], "need": [1893, 1947], "particular": [1893, 1894], "dtype": [1893, 1910, 1922, 1931], "encod": 1894, "histori": [1894, 1959], "set": [1894, 1912], "No": 1894, "evalu": [1894, 1902, 1950], "multithread": 1894, "concurr": 1894, "determin": [1894, 1909], "retain": 1894, "thread": [1894, 1896], "safeti": 1894, "wirting": 1894, "calculu": 1894, "pictur": 1894, "conjug": 1894, "own": 1894, "formula": 1894, "domain": 1894, "regist": [1894, 1943], "whether": [1894, 1916], "fire": 1894, "differ": [1894, 1912, 1947], "modifi": 1894, "compat": 1895, "runtim": [1896, 1901, 1957], "tune": 1896, "tensorfloat": [1897, 1903, 1908], "32": [1897, 1903, 1908, 1911], "tf32": [1897, 1903, 1908], "amper": [1897, 1908], "reduc": [1897, 1908], "fp16": [1897, 1908], "gemm": [1897, 1908], "bf16": [1897, 1908], "bc": 1897, "alloc": [1897, 1901, 1959], "cubla": 1897, "workspac": 1897, "cufft": 1897, "plan": [1897, 1903], "just": 1897, "time": [1897, 1951, 1955], "practic": [1897, 1907, 1919, 1941], "agnost": 1897, "buffer": [1897, 1907], "instead": 1897, "whole": [1897, 1947], "captur": 1897, "partial": 1897, "9": 1897, "6": 1897, "across": [1897, 1910], "intern": [1898, 1912, 1916, 1944, 1945], "processgroup": 1898, "ddpoptim": 1898, "separ": 1899, "setup_context": 1899, "like": [1899, 1916], "subclass": [1899, 1946], "wrapper": 1899, "__torch_function__": 1899, "overrid": [1899, 1958], "nativ": [1899, 1919, 1921], "anoth": 1900, "specifi": 1900, "gotcha": 1900, "staticmethod": 1900, "isn": 1901, "freed": 1901, "properli": 1901, "loader": 1901, "doesn": 1901, "notat": 1902, "background": [1902, 1925, 1926, 1942], "inform": [1902, 1924, 1956], "analyt": 1902, "output": 1902, "u": 1902, "reus": [1903, 1907], "hipfft": 1903, "rocfft": 1903, "enabl": 1903, "kernel": [1903, 1919, 1951], "larg": 1904, "fleet": 1904, "wide": 1904, "attach": 1904, "consider": 1904, "block": 1905, "neural": 1905, "tip": [1907, 1920], "fight": 1907, "deadlock": 1907, "through": 1907, "queue": 1907, "e": 1907, "g": 1907, "hogwild": 1907, "oversubscript": 1907, "accuraci": [1908, 1919, 1920, 1957], "extrem": 1908, "finit": 1908, "instinct": 1908, "mi200": 1908, "reproduc": 1909, "nondeterminist": 1909, "algorithm": [1909, 1915, 1925], "content": [1910, 1916], "preserv": 1910, "them": [1910, 1916], "integ": 1910, "divis": 1910, "alwai": 1910, "includ": [1911, 1916], "compon": 1911, "speed": [1911, 1947], "One": [1911, 1956], "instal": 1911, "cffi": 1911, "cpp": 1911, "found": 1911, "win": 1911, "channel": 1911, "without": 1911, "claus": 1911, "protect": 1911, "broken": 1911, "pipe": [1911, 1917], "driver": 1911, "shut": 1911, "down": 1911, "ipc": 1911, "alexnet": 1912, "v": 1912, "index": [1912, 1936], "aten": [1912, 1952, 1956], "inlin": 1912, "discov": 1912, "unconvert": 1912, "onc": 1912, "preview": 1912, "diagnost": 1913, "base": [1915, 1956], "adjust": 1915, "learn": 1915, "rate": 1915, "averag": 1915, "swa": 1915, "ema": 1915, "schedul": 1915, "care": 1915, "put": 1915, "togeth": 1915, "your": 1916, "do": [1916, 1944, 1947], "see": [1916, 1947], "insid": [1916, 1947], "treat": 1916, "archiv": 1916, "file_structur": 1916, "given": 1916, "wa": 1916, "resourc": [1916, 1946], "later": 1916, "distinguish": 1916, "explan": 1916, "format": 1916, "framework": [1916, 1924], "user": [1916, 1926, 1939], "analyz": 1916, "extern": 1916, "mock": 1916, "refactor": 1916, "sharp": 1916, "global": 1916, "isol": 1916, "each": [1916, 1946], "mangl": 1916, "pipelin": 1917, "skip": 1917, "connect": 1917, "intel": 1918, "instrument": 1918, "technologi": 1918, "eager": 1919, "awar": 1919, "engin": 1919, "observ": [1919, 1922], "hardwar": 1919, "configur": [1919, 1921], "insensit": 1920, "int8": 1920, "sensit": 1920, "ao": [1922, 1937, 1938], "top": 1922, "quantize_fx": 1922, "qconfig_map": 1922, "backend_config": 1922, "custom_config": 1922, "pt2e": 1922, "0": [1922, 1953, 1954, 1957], "relat": [1922, 1946], "fake_quant": 1922, "intrins": 1922, "qat": 1922, "scheme": 1922, "rpc": 1924, "tensorpip": 1924, "rref": [1924, 1926], "remotemodul": 1924, "record": 1925, "dure": 1925, "smart": 1925, "end": 1925, "protocol": 1926, "assumpt": 1926, "lifetim": 1926, "reason": 1926, "scenario": 1926, "owner": 1926, "argument": 1926, "sparsiti": 1928, "semi": 1928, "acceler": 1928, "coo": 1928, "hybrid": 1928, "uncoalesc": 1928, "csr": 1928, "csc": 1928, "bsr": 1928, "bsc": 1928, "memory_format": 1931, "tensorboard": 1933, "creation": 1936, "sampl": 1936, "quasi": 1936, "pointwis": 1936, "spectral": 1936, "bla": 1936, "lapack": 1936, "foreach": 1936, "path": 1936, "n": [1937, 1938], "_numeric_suit": 1937, "_numeric_suite_fx": 1938, "deep": [1939, 1944], "dive": [1939, 1944], "howto": 1939, "vendor": 1939, "x86": 1941, "tree": 1942, "integr": 1942, "callabl": 1942, "previou": 1942, "after": 1943, "aotautograd": 1943, "speedi": 1943, "guard": [1944, 1945, 1950], "dynamo": 1944, "artifact": 1944, "abridg": 1945, "public": 1945, "overal": [1945, 1946], "architectur": [1945, 1946], "dimdynam": 1945, "unback": 1945, "symint": 1945, "fake": 1946, "bit": 1946, "detail": 1946, "individu": [1946, 1951], "characterist": 1946, "interact": 1946, "you": 1947, "still": 1947, "crash": 1947, "slow": 1947, "recompil": [1947, 1957], "am": 1947, "speedup": 1947, "caus": [1947, 1957], "didn": 1947, "incorrect": 1947, "result": 1947, "oom": 1947, "appli": 1947, "handl": 1947, "fine": [1947, 1948], "grain": [1947, 1948], "_dynamo": [1947, 1948], "disallow_in_graph": [1947, 1948], "_dynamo_skip": 1947, "pretrain": 1949, "next": 1949, "frame": 1950, "pep": 1950, "523": 1950, "instructiontransl": 1950, "torchinductor": [1951, 1954, 1957], "relev": 1951, "breakdown": 1951, "ir": [1952, 1956], "prim": 1952, "nnmodul": 1953, "__call__": 1953, "dashboard": 1954, "measur": 1954, "pr": 1954, "affect": 1954, "befor": 1954, "merg": 1954, "understand": [1955, 1959], "around": 1955, "overhead": 1955, "x": 1956, "none": 1956, "partition": 1956, "matcher": 1956, "capabl": 1956, "troubleshoot": 1957, "titl": 1957, "diagnos": 1957, "minifi": 1957, "torch_compile_debug": 1957, "excess": 1957, "snapshot": 1959, "visual": 1959, "timelin": 1959, "info": 1960, "finfo": 1960, "iinfo": 1960}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.cosh_": [[194, "torch-tensor-cosh"]], "torch.Tensor.cholesky": [[172, "torch-tensor-cholesky"]], "torch.Tensor.ccol_indices": [[165, "torch-tensor-ccol-indices"]], "torch.Tensor.clip_": [[179, "torch-tensor-clip"]], "torch.Tensor.bitwise_and": [[148, "torch-tensor-bitwise-and"]], "torch.Tensor.cfloat": [[169, "torch-tensor-cfloat"]], "torch.Tensor.clamp": [[176, "torch-tensor-clamp"]], "torch.Tensor.clip": [[178, "torch-tensor-clip"]], "torch.Tensor.conj": [[183, "torch-tensor-conj"]], "torch.Tensor.col_indices": [[182, "torch-tensor-col-indices"]], "torch.Tensor.ceil_": [[168, "torch-tensor-ceil"]], "torch.Tensor.bitwise_or_": [[155, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_not": [[152, "torch-tensor-bitwise-not"]], "torch.Tensor.bitwise_right_shift": [[156, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.chalf": [[170, "torch-tensor-chalf"]], "torch.Tensor.clamp_": [[177, "torch-tensor-clamp"]], "torch.Tensor.cosh": [[193, "torch-tensor-cosh"]], "torch.Tensor.count_nonzero": [[195, "torch-tensor-count-nonzero"]], "torch.Tensor.contiguous": [[186, "torch-tensor-contiguous"]], "torch.Tensor.copy_": [[187, "torch-tensor-copy"]], "torch.Tensor.bmm": [[160, "torch-tensor-bmm"]], "torch.Tensor.cos": [[191, "torch-tensor-cos"]], "torch.Tensor.broadcast_to": [[162, "torch-tensor-broadcast-to"]], "torch.Tensor.bitwise_xor_": [[159, "torch-tensor-bitwise-xor"]], "torch.Tensor.copysign_": [[189, "torch-tensor-copysign"]], "torch.Tensor.bitwise_left_shift": [[150, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bitwise_and_": [[149, "torch-tensor-bitwise-and"]], "torch.Tensor.cholesky_solve": [[174, "torch-tensor-cholesky-solve"]], "torch.Tensor.cholesky_inverse": [[173, "torch-tensor-cholesky-inverse"]], "torch.Tensor.bitwise_left_shift_": [[151, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.cauchy_": [[164, "torch-tensor-cauchy"]], "torch.Tensor.char": [[171, "torch-tensor-char"]], "torch.Tensor.clone": [[180, "torch-tensor-clone"]], "torch.Tensor.conj_physical": [[184, "torch-tensor-conj-physical"]], "torch.Tensor.copysign": [[188, "torch-tensor-copysign"]], "torch.Tensor.bitwise_or": [[154, "torch-tensor-bitwise-or"]], "torch.Tensor.cdouble": [[166, "torch-tensor-cdouble"]], "torch.Tensor.cos_": [[192, "torch-tensor-cos"]], "torch.Tensor.coalesce": [[181, "torch-tensor-coalesce"]], "torch.Tensor.bincount": [[147, "torch-tensor-bincount"]], "torch.Tensor.byte": [[163, "torch-tensor-byte"]], "torch.Tensor.bool": [[161, "torch-tensor-bool"]], "torch.Tensor.chunk": [[175, "torch-tensor-chunk"]], "torch.Tensor.bitwise_not_": [[153, "torch-tensor-bitwise-not"]], "torch.Tensor.bitwise_right_shift_": [[157, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.conj_physical_": [[185, "torch-tensor-conj-physical"]], "torch.Tensor.ceil": [[167, "torch-tensor-ceil"]], "torch.Tensor.bitwise_xor": [[158, "torch-tensor-bitwise-xor"]], "torch.Tensor.corrcoef": [[190, "torch-tensor-corrcoef"]], "torch.Tensor.expand": [[245, "torch-tensor-expand"]], "torch.Tensor.grad": [[281, "torch-tensor-grad"]], "torch.Tensor.frac_": [[270, "torch-tensor-frac"]], "torch.Tensor.geqrf": [[278, "torch-tensor-geqrf"]], "torch.Tensor.frac": [[269, "torch-tensor-frac"]], "torch.Tensor.fill_": [[250, "torch-tensor-fill"]], "torch.Tensor.ger": [[279, "torch-tensor-ger"]], "torch.Tensor.float_power": [[259, "torch-tensor-float-power"]], "torch.Tensor.frexp": [[271, "torch-tensor-frexp"]], "torch.Tensor.greater_equal": [[284, "torch-tensor-greater-equal"]], "torch.Tensor.flatten": [[254, "torch-tensor-flatten"]], "torch.Tensor.expm1": [[247, "torch-tensor-expm1"]], "torch.Tensor.floor": [[261, "torch-tensor-floor"]], "torch.Tensor.fix": [[252, "torch-tensor-fix"]], "torch.Tensor.fmax": [[265, "torch-tensor-fmax"]], "torch.Tensor.fmod": [[267, "torch-tensor-fmod"]], "torch.Tensor.ge": [[275, "torch-tensor-ge"]], "torch.Tensor.flipud": [[257, "torch-tensor-flipud"]], "torch.Tensor.greater": [[282, "torch-tensor-greater"]], "torch.Tensor.fmod_": [[268, "torch-tensor-fmod"]], "torch.Tensor.fill_diagonal_": [[251, "torch-tensor-fill-diagonal"]], "torch.Tensor.floor_divide": [[263, "torch-tensor-floor-divide"]], "torch.Tensor.greater_": [[283, "torch-tensor-greater"]], "torch.Tensor.gather": [[272, "torch-tensor-gather"]], "torch.Tensor.float": [[258, "torch-tensor-float"]], "torch.Tensor.gcd_": [[274, "torch-tensor-gcd"]], "torch.Tensor.floor_": [[262, "torch-tensor-floor"]], "torch.Tensor.gt": [[286, "torch-tensor-gt"]], "torch.Tensor.hardshrink": [[289, "torch-tensor-hardshrink"]], "torch.Tensor.heaviside": [[290, "torch-tensor-heaviside"]], "torch.Tensor.hsplit": [[293, "torch-tensor-hsplit"]], "torch.Tensor.expand_as": [[246, "torch-tensor-expand-as"]], "torch.Tensor.exponential_": [[249, "torch-tensor-exponential"]], "torch.Tensor.floor_divide_": [[264, "torch-tensor-floor-divide"]], "torch.Tensor.float_power_": [[260, "torch-tensor-float-power"]], "torch.Tensor.fliplr": [[256, "torch-tensor-fliplr"]], "torch.Tensor.fmin": [[266, "torch-tensor-fmin"]], "torch.Tensor.flip": [[255, "torch-tensor-flip"]], "torch.Tensor.gt_": [[287, "torch-tensor-gt"]], "torch.Tensor.histogram": [[292, "torch-tensor-histogram"]], "torch.Tensor.half": [[288, "torch-tensor-half"]], "torch.Tensor.fix_": [[253, "torch-tensor-fix"]], "torch.Tensor.get_device": [[280, "torch-tensor-get-device"]], "torch.Tensor.gcd": [[273, "torch-tensor-gcd"]], "torch.Tensor.geometric_": [[277, "torch-tensor-geometric"]], "torch.Tensor.histc": [[291, "torch-tensor-histc"]], "torch.Tensor.greater_equal_": [[285, "torch-tensor-greater-equal"]], "torch.Tensor.expm1_": [[248, "torch-tensor-expm1"]], "torch.Tensor.ge_": [[276, "torch-tensor-ge"]], "torch.Tensor.arcsinh": [[117, "torch-tensor-arcsinh"]], "torch.Tensor.addr_": [[101, "torch-tensor-addr"]], "torch.Tensor.arccosh": [[113, "torch-tensor-arccosh"]], "torch.Tensor.adjoint": [[102, "torch-tensor-adjoint"]], "torch.Tensor.addmv": [[98, "torch-tensor-addmv"]], "torch.Tensor.argmin": [[126, "torch-tensor-argmin"]], "torch.Tensor.baddbmm": [[142, "torch-tensor-baddbmm"]], "torch.Tensor.as_subclass": [[130, "torch-tensor-as-subclass"]], "torch.Tensor.addr": [[100, "torch-tensor-addr"]], "torch.Tensor.aminmax": [[107, "torch-tensor-aminmax"]], "torch.Tensor.argmax": [[125, "torch-tensor-argmax"]], "torch.Tensor.arcsin": [[115, "torch-tensor-arcsin"]], "torch.Tensor.arctan_": [[122, "torch-tensor-arctan"]], "torch.Tensor.arctanh": [[123, "torch-tensor-arctanh"]], "torch.Tensor.allclose": [[104, "torch-tensor-allclose"]], "torch.Tensor.bfloat16": [[146, "torch-tensor-bfloat16"]], "torch.Tensor.apply_": [[110, "torch-tensor-apply"]], "torch.Tensor.atanh": [[139, "torch-tensor-atanh"]], "torch.Tensor.atan_": [[138, "torch-tensor-atan"]], "torch.Tensor.arctan2_": [[121, "torch-tensor-arctan2"]], "torch.Tensor.argsort": [[127, "torch-tensor-argsort"]], "torch.Tensor.as_strided": [[129, "torch-tensor-as-strided"]], "torch.Tensor.atan": [[135, "torch-tensor-atan"]], "torch.Tensor.asinh_": [[134, "torch-tensor-asinh"]], "torch.Tensor.atan2_": [[137, "torch-tensor-atan2"]], "torch.Tensor.baddbmm_": [[143, "torch-tensor-baddbmm"]], "torch.Tensor.all": [[103, "torch-tensor-all"]], "torch.Tensor.angle": [[108, "torch-tensor-angle"]], "torch.Tensor.backward": [[141, "torch-tensor-backward"]], "torch.Tensor.arcsin_": [[116, "torch-tensor-arcsin"]], "torch.Tensor.arctanh_": [[124, "torch-tensor-arctanh"]], "torch.Tensor.any": [[109, "torch-tensor-any"]], "torch.Tensor.asin_": [[132, "torch-tensor-asin"]], "torch.Tensor.argwhere": [[128, "torch-tensor-argwhere"]], "torch.Tensor.bernoulli": [[144, "torch-tensor-bernoulli"]], "torch.Tensor.amax": [[105, "torch-tensor-amax"]], "torch.Tensor.amin": [[106, "torch-tensor-amin"]], "torch.Tensor.atan2": [[136, "torch-tensor-atan2"]], "torch.Tensor.arccos_": [[112, "torch-tensor-arccos"]], "torch.Tensor.arccosh_": [[114, "torch-tensor-arccosh"]], "torch.Tensor.arctan2": [[120, "torch-tensor-arctan2"]], "torch.Tensor.bernoulli_": [[145, "torch-tensor-bernoulli"]], "torch.Tensor.arccos": [[111, "torch-tensor-arccos"]], "torch.Tensor.arcsinh_": [[118, "torch-tensor-arcsinh"]], "torch.Tensor.asinh": [[133, "torch-tensor-asinh"]], "torch.Tensor.asin": [[131, "torch-tensor-asin"]], "torch.Tensor.atanh_": [[140, "torch-tensor-atanh"]], "torch.Tensor.addmv_": [[99, "torch-tensor-addmv"]], "torch.Tensor.arctan": [[119, "torch-tensor-arctan"]], "torch.Tensor.crow_indices": [[199, "torch-tensor-crow-indices"]], "torch.Tensor.erfinv": [[241, "torch-tensor-erfinv"]], "torch.Tensor.diagonal_scatter": [[219, "torch-tensor-diagonal-scatter"]], "torch.Tensor.dense_dim": [[209, "torch-tensor-dense-dim"]], "torch.Tensor.digamma": [[221, "torch-tensor-digamma"]], "torch.Tensor.dsplit": [[232, "torch-tensor-dsplit"]], "torch.Tensor.element_size": [[233, "torch-tensor-element-size"]], "torch.Tensor.diagonal": [[218, "torch-tensor-diagonal"]], "torch.Tensor.equal": [[236, "torch-tensor-equal"]], "torch.Tensor.detach": [[212, "torch-tensor-detach"]], "torch.Tensor.cummax": [[201, "torch-tensor-cummax"]], "torch.Tensor.cov": [[196, "torch-tensor-cov"]], "torch.Tensor.double": [[231, "torch-tensor-double"]], "torch.Tensor.diagflat": [[217, "torch-tensor-diagflat"]], "torch.Tensor.erfinv_": [[242, "torch-tensor-erfinv"]], "torch.Tensor.erf_": [[238, "torch-tensor-erf"]], "torch.Tensor.diff": [[220, "torch-tensor-diff"]], "torch.Tensor.exp_": [[244, "torch-tensor-exp"]], "torch.Tensor.cummin": [[202, "torch-tensor-cummin"]], "torch.Tensor.cumsum_": [[206, "torch-tensor-cumsum"]], "torch.Tensor.divide": [[228, "torch-tensor-divide"]], "torch.Tensor.dim_order": [[224, "torch-tensor-dim-order"]], "torch.Tensor.dequantize": [[210, "torch-tensor-dequantize"]], "torch.Tensor.cumprod": [[203, "torch-tensor-cumprod"]], "torch.Tensor.detach_": [[213, "torch-tensor-detach"]], "torch.Tensor.cuda": [[200, "torch-tensor-cuda"]], "torch.Tensor.exp": [[243, "torch-tensor-exp"]], "torch.Tensor.erfc_": [[240, "torch-tensor-erfc"]], "torch.Tensor.divide_": [[229, "torch-tensor-divide"]], "torch.Tensor.diag": [[215, "torch-tensor-diag"]], "torch.Tensor.det": [[211, "torch-tensor-det"]], "torch.Tensor.data_ptr": [[207, "torch-tensor-data-ptr"]], "torch.Tensor.diag_embed": [[216, "torch-tensor-diag-embed"]], "torch.Tensor.eq": [[234, "torch-tensor-eq"]], "torch.Tensor.cpu": [[197, "torch-tensor-cpu"]], "torch.Tensor.div_": [[227, "torch-tensor-div"]], "torch.Tensor.eq_": [[235, "torch-tensor-eq"]], "torch.Tensor.deg2rad": [[208, "torch-tensor-deg2rad"]], "torch.Tensor.erfc": [[239, "torch-tensor-erfc"]], "torch.Tensor.cumsum": [[205, "torch-tensor-cumsum"]], "torch.Tensor.div": [[226, "torch-tensor-div"]], "torch.Tensor.dim": [[223, "torch-tensor-dim"]], "torch.Tensor.digamma_": [[222, "torch-tensor-digamma"]], "torch.Tensor.device": [[214, "torch-tensor-device"]], "torch.Tensor.dot": [[230, "torch-tensor-dot"]], "torch.Tensor.erf": [[237, "torch-tensor-erf"]], "torch.Tensor.dist": [[225, "torch-tensor-dist"]], "torch.Tensor.cumprod_": [[204, "torch-tensor-cumprod"]], "torch.Tensor.cross": [[198, "torch-tensor-cross"]], "torch.Tensor.igammac_": [[301, "torch-tensor-igammac"]], "torch.Tensor.isinf": [[337, "torch-tensor-isinf"]], "torch.Tensor.is_quantized": [[329, "torch-tensor-is-quantized"]], "torch.Tensor.is_signed": [[332, "torch-tensor-is-signed"]], "torch.Tensor.is_conj": [[321, "torch-tensor-is-conj"]], "torch.Tensor.is_sparse": [[333, "torch-tensor-is-sparse"]], "torch.Tensor.isneginf": [[339, "torch-tensor-isneginf"]], "torch.Tensor.index_reduce": [[311, "torch-tensor-index-reduce"]], "torch.Tensor.igammac": [[300, "torch-tensor-igammac"]], "torch.Tensor.isclose": [[335, "torch-tensor-isclose"]], "torch.Tensor.is_pinned": [[328, "torch-tensor-is-pinned"]], "torch.Tensor.istft": [[342, "torch-tensor-istft"]], "torch.Tensor.is_inference": [[325, "torch-tensor-is-inference"]], "torch.Tensor.is_meta": [[327, "torch-tensor-is-meta"]], "torch.Tensor.index_add": [[303, "torch-tensor-index-add"]], "torch.Tensor.indices": [[314, "torch-tensor-indices"]], "torch.Tensor.is_complex": [[320, "torch-tensor-is-complex"]], "torch.Tensor.index_copy_": [[306, "torch-tensor-index-copy"]], "torch.Tensor.i0_": [[297, "torch-tensor-i0"]], "torch.Tensor.imag": [[302, "torch-tensor-imag"]], "torch.Tensor.index_select": [[313, "torch-tensor-index-select"]], "torch.Tensor.is_sparse_csr": [[334, "torch-tensor-is-sparse-csr"]], "torch.Tensor.isreal": [[341, "torch-tensor-isreal"]], "torch.Tensor.hypot_": [[295, "torch-tensor-hypot"]], "torch.Tensor.int": [[316, "torch-tensor-int"]], "torch.Tensor.index_copy": [[305, "torch-tensor-index-copy"]], "torch.Tensor.index_put_": [[310, "torch-tensor-index-put"]], "torch.Tensor.isnan": [[338, "torch-tensor-isnan"]], "torch.Tensor.isposinf": [[340, "torch-tensor-isposinf"]], "torch.Tensor.inner": [[315, "torch-tensor-inner"]], "torch.Tensor.is_coalesced": [[319, "torch-tensor-is-coalesced"]], "torch.Tensor.i0": [[296, "torch-tensor-i0"]], "torch.Tensor.isfinite": [[336, "torch-tensor-isfinite"]], "torch.Tensor.index_add_": [[304, "torch-tensor-index-add"]], "torch.Tensor.is_floating_point": [[324, "torch-tensor-is-floating-point"]], "torch.Tensor.index_put": [[309, "torch-tensor-index-put"]], "torch.Tensor.is_leaf": [[326, "torch-tensor-is-leaf"]], "torch.Tensor.igamma": [[298, "torch-tensor-igamma"]], "torch.Tensor.index_fill_": [[308, "torch-tensor-index-fill"]], "torch.Tensor.inverse": [[318, "torch-tensor-inverse"]], "torch.Tensor.igamma_": [[299, "torch-tensor-igamma"]], "torch.Tensor.is_shared": [[331, "torch-tensor-is-shared"]], "torch.Tensor.is_contiguous": [[322, "torch-tensor-is-contiguous"]], "torch.Tensor.is_set_to": [[330, "torch-tensor-is-set-to"]], "torch.Tensor.index_fill": [[307, "torch-tensor-index-fill"]], "torch.Tensor.index_reduce_": [[312, "torch-tensor-index-reduce"]], "torch.Tensor.hypot": [[294, "torch-tensor-hypot"]], "torch.Tensor.int_repr": [[317, "torch-tensor-int-repr"]], "torch.Tensor.is_cuda": [[323, "torch-tensor-is-cuda"]], "torch.Tensor.lt_": [[386, "torch-tensor-lt"]], "torch.Tensor.lu": [[387, "torch-tensor-lu"]], "torch.Tensor.masked_fill_": [[391, "torch-tensor-masked-fill"]], "torch.Tensor.less_equal": [[356, "torch-tensor-less-equal"]], "torch.Tensor.log2_": [[366, "torch-tensor-log2"]], "torch.Tensor.logit_": [[382, "torch-tensor-logit"]], "torch.Tensor.log": [[360, "torch-tensor-log"]], "torch.Tensor.lcm_": [[347, "torch-tensor-lcm"]], "torch.Tensor.lcm": [[346, "torch-tensor-lcm"]], "torch.Tensor.logical_xor_": [[380, "torch-tensor-logical-xor"]], "torch.Tensor.le_": [[351, "torch-tensor-le"]], "torch.Tensor.logical_or_": [[378, "torch-tensor-logical-or"]], "torch.Tensor.logical_not": [[375, "torch-tensor-logical-not"]], "torch.Tensor.logaddexp": [[369, "torch-tensor-logaddexp"]], "torch.Tensor.logdet": [[372, "torch-tensor-logdet"]], "torch.Tensor.lt": [[385, "torch-tensor-lt"]], "torch.Tensor.lu_solve": [[388, "torch-tensor-lu-solve"]], "torch.Tensor.masked_fill": [[390, "torch-tensor-masked-fill"]], "torch.Tensor.logical_or": [[377, "torch-tensor-logical-or"]], "torch.Tensor.log2": [[365, "torch-tensor-log2"]], "torch.Tensor.ldexp_": [[349, "torch-tensor-ldexp"]], "torch.Tensor.less": [[354, "torch-tensor-less"]], "torch.Tensor.log1p": [[363, "torch-tensor-log1p"]], "torch.Tensor.log1p_": [[364, "torch-tensor-log1p"]], "torch.Tensor.lgamma": [[358, "torch-tensor-lgamma"]], "torch.Tensor.logical_xor": [[379, "torch-tensor-logical-xor"]], "torch.Tensor.lgamma_": [[359, "torch-tensor-lgamma"]], "torch.Tensor.ldexp": [[348, "torch-tensor-ldexp"]], "torch.Tensor.logaddexp2": [[370, "torch-tensor-logaddexp2"]], "torch.Tensor.log_": [[367, "torch-tensor-log"]], "torch.Tensor.le": [[350, "torch-tensor-le"]], "torch.Tensor.log_normal_": [[368, "torch-tensor-log-normal"]], "torch.Tensor.lerp": [[352, "torch-tensor-lerp"]], "torch.Tensor.logit": [[381, "torch-tensor-logit"]], "torch.Tensor.less_": [[355, "torch-tensor-less"]], "torch.Tensor.log10": [[361, "torch-tensor-log10"]], "torch.Tensor.logical_and": [[373, "torch-tensor-logical-and"]], "torch.Tensor.logsumexp": [[383, "torch-tensor-logsumexp"]], "torch.Tensor.less_equal_": [[357, "torch-tensor-less-equal"]], "torch.Tensor.long": [[384, "torch-tensor-long"]], "torch.Tensor.itemsize": [[344, "torch-tensor-itemsize"]], "torch.Tensor.logical_and_": [[374, "torch-tensor-logical-and"]], "torch.Tensor.item": [[343, "torch-tensor-item"]], "torch.Tensor.log10_": [[362, "torch-tensor-log10"]], "torch.Tensor.logical_not_": [[376, "torch-tensor-logical-not"]], "torch.Tensor.map_": [[389, "torch-tensor-map"]], "torch.Tensor.logcumsumexp": [[371, "torch-tensor-logcumsumexp"]], "torch.Tensor.kthvalue": [[345, "torch-tensor-kthvalue"]], "torch.Tensor.lerp_": [[353, "torch-tensor-lerp"]], "Type Info": [[1960, "type-info"]], "torch.finfo": [[1960, "torch-finfo"]], "torch.iinfo": [[1960, "torch-iinfo"]], "torch.utils": [[1961, "module-torch.utils"]], "torch.transpose": [[1836, "torch-transpose"]], "torch.unbind": [[1846, "torch-unbind"]], "torch.tensor_split": [[1831, "torch-tensor-split"]], "torch.tensordot": [[1832, "torch-tensordot"]], "torch.unique": [[1848, "torch-unique"]], "torch.triu_indices": [[1843, "torch-triu-indices"]], "torch.sym_int": [[1821, "torch-sym-int"]], "torch.t": [[1825, "torch-t"]], "torch.swapdims": [[1819, "torch-swapdims"]], "torch.utils.set_module": [[1855, "torch-utils-set-module"]], "torch.svd": [[1816, "torch-svd"]], "torch.var_mean": [[1858, "torch-var-mean"]], "torch.trace": [[1835, "torch-trace"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1852, "torch-utils-generate-methods-for-privateuse1-backend"]], "torch.topk": [[1834, "torch-topk"]], "torch.utils.get_cpp_backtrace": [[1853, "torch-utils-get-cpp-backtrace"]], "torch.tan": [[1828, "torch-tan"]], "torch.tril": [[1840, "torch-tril"]], "torch.view_as_complex": [[1860, "torch-view-as-complex"]], "torch.trunc": [[1845, "torch-trunc"]], "torch.trapezoid": [[1837, "torch-trapezoid"]], "torch.tile": [[1833, "torch-tile"]], "torch.sym_not": [[1824, "torch-sym-not"]], "torch.vander": [[1856, "torch-vander"]], "torch.sym_max": [[1822, "torch-sym-max"]], "torch.swapaxes": [[1818, "torch-swapaxes"]], "torch.tensor": [[1830, "torch-tensor"]], "torch.true_divide": [[1844, "torch-true-divide"]], "torch.triangular_solve": [[1839, "torch-triangular-solve"]], "torch.var": [[1857, "torch-var"]], "torch.svd_lowrank": [[1817, "torch-svd-lowrank"]], "torch.take_along_dim": [[1827, "torch-take-along-dim"]], "torch.view_as_real": [[1861, "torch-view-as-real"]], "torch.tanh": [[1829, "torch-tanh"]], "torch.unflatten": [[1847, "torch-unflatten"]], "torch.trapz": [[1838, "torch-trapz"]], "torch.vdot": [[1859, "torch-vdot"]], "torch.unique_consecutive": [[1849, "torch-unique-consecutive"]], "torch.sum": [[1815, "torch-sum"]], "torch.triu": [[1842, "torch-triu"]], "torch.use_deterministic_algorithms": [[1851, "torch-use-deterministic-algorithms"]], "torch.sym_float": [[1820, "torch-sym-float"]], "torch.sub": [[1813, "torch-sub"]], "torch.subtract": [[1814, "torch-subtract"]], "torch.sym_min": [[1823, "torch-sym-min"]], "torch.tril_indices": [[1841, "torch-tril-indices"]], "torch.utils.rename_privateuse1_backend": [[1854, "torch-utils-rename-privateuse1-backend"]], "torch.unsqueeze": [[1850, "torch-unsqueeze"]], "torch.take": [[1826, "torch-take"]], "torch.set_rng_state": [[1765, "torch-set-rng-state"]], "torch.signal.windows.cosine": [[1772, "torch-signal-windows-cosine"]], "check_sparse_tensor_invariants": [[1791, "check-sparse-tensor-invariants"]], "torch.signal.windows.blackman": [[1771, "torch-signal-windows-blackman"]], "torch.set_printoptions": [[1764, "torch-set-printoptions"]], "torch.signal.windows.bartlett": [[1770, "torch-signal-windows-bartlett"]], "torch.sparse.softmax": [[1795, "torch-sparse-softmax"]], "torch.sspaddmm": [[1808, "torch-sspaddmm"]], "torch.sparse_bsr_tensor": [[1799, "torch-sparse-bsr-tensor"]], "torch.stack": [[1809, "torch-stack"]], "torch.sigmoid": [[1768, "torch-sigmoid"]], "torch.smm": [[1787, "torch-smm"]], "torch.sparse_bsc_tensor": [[1798, "torch-sparse-bsc-tensor"]], "torch.set_warn_always": [[1766, "torch-set-warn-always"]], "torch.sparse_csr_tensor": [[1803, "torch-sparse-csr-tensor"]], "torch.softmax": [[1788, "torch-softmax"]], "torch.signal.windows.hamming": [[1777, "torch-signal-windows-hamming"]], "torch.signal.windows.nuttall": [[1780, "torch-signal-windows-nuttall"]], "torch.squeeze": [[1807, "torch-squeeze"]], "torch.sparse.mm": [[1793, "torch-sparse-mm"]], "torch.sinc": [[1783, "torch-sinc"]], "torch.signal.windows.gaussian": [[1774, "torch-signal-windows-gaussian"]], "torch.slice_scatter": [[1785, "torch-slice-scatter"]], "torch.std_mean": [[1811, "torch-std-mean"]], "torch.sgn": [[1767, "torch-sgn"]], "torch.sign": [[1769, "torch-sign"]], "torch.signal.windows.general_cosine": [[1775, "torch-signal-windows-general-cosine"]], "torch.sparse.log_softmax": [[1792, "torch-sparse-log-softmax"]], "torch.sparse.spdiags": [[1796, "torch-sparse-spdiags"]], "torch.sparse_csc_tensor": [[1802, "torch-sparse-csc-tensor"]], "torch.sparse.sum": [[1797, "torch-sparse-sum"]], "torch.sparse_compressed_tensor": [[1800, "torch-sparse-compressed-tensor"]], "torch.split": [[1804, "torch-split"]], "torch.sparse.sampled_addmm": [[1794, "torch-sparse-sampled-addmm"]], "torch.stft": [[1812, "torch-stft"]], "torch.signal.windows.exponential": [[1773, "torch-signal-windows-exponential"]], "torch.square": [[1806, "torch-square"]], "torch.sqrt": [[1805, "torch-sqrt"]], "torch.signal.windows.kaiser": [[1779, "torch-signal-windows-kaiser"]], "torch.sort": [[1789, "torch-sort"]], "torch.signal.windows.hann": [[1778, "torch-signal-windows-hann"]], "torch.slogdet": [[1786, "torch-slogdet"]], "torch.std": [[1810, "torch-std"]], "torch.sparse.addmm": [[1790, "torch-sparse-addmm"]], "torch.sinh": [[1784, "torch-sinh"]], "torch.signal.windows.general_hamming": [[1776, "torch-signal-windows-general-hamming"]], "torch.sin": [[1782, "torch-sin"]], "torch.signbit": [[1781, "torch-signbit"]], "torch.sparse_coo_tensor": [[1801, "torch-sparse-coo-tensor"]], "torch.select_scatter": [[1754, "torch-select-scatter"]], "torch.round": [[1744, "torch-round"]], "torch.set_float32_matmul_precision": [[1759, "torch-set-float32-matmul-precision"]], "torch.randperm": [[1730, "torch-randperm"]], "torch.set_default_dtype": [[1756, "torch-set-default-dtype"]], "torch.scatter_add": [[1749, "torch-scatter-add"]], "torch.result_type": [[1741, "torch-result-type"]], "torch.remainder": [[1735, "torch-remainder"]], "torch.rand_like": [[1725, "torch-rand-like"]], "torch.rand": [[1724, "torch-rand"]], "torch.set_num_interop_threads": [[1762, "torch-set-num-interop-threads"]], "torch.randn": [[1728, "torch-randn"]], "torch.set_default_device": [[1755, "torch-set-default-device"]], "torch.quantile": [[1716, "torch-quantile"]], "torch.set_flush_denormal": [[1760, "torch-set-flush-denormal"]], "torch.randn_like": [[1729, "torch-randn-like"]], "set_grad_enabled": [[1761, "set-grad-enabled"]], "torch.repeat_interleave": [[1737, "torch-repeat-interleave"]], "torch.ravel": [[1732, "torch-ravel"]], "SobolEngine": [[1722, "sobolengine"]], "torch.searchsorted": [[1751, "torch-searchsorted"]], "torch.save": [[1747, "torch-save"]], "torch.quantized_batch_norm": [[1719, "torch-quantized-batch-norm"]], "torch.set_num_threads": [[1763, "torch-set-num-threads"]], "torch.scatter_reduce": [[1750, "torch-scatter-reduce"]], "torch.set_default_tensor_type": [[1757, "torch-set-default-tensor-type"]], "torch.quantized_max_pool2d": [[1721, "torch-quantized-max-pool2d"]], "torch.rad2deg": [[1723, "torch-rad2deg"]], "torch.renorm": [[1736, "torch-renorm"]], "torch.roll": [[1742, "torch-roll"]], "torch.seed": [[1752, "torch-seed"]], "torch.quantized_max_pool1d": [[1720, "torch-quantized-max-pool1d"]], "torch.range": [[1731, "torch-range"]], "torch.real": [[1733, "torch-real"]], "torch.reciprocal": [[1734, "torch-reciprocal"]], "torch.randint_like": [[1727, "torch-randint-like"]], "torch.reshape": [[1738, "torch-reshape"]], "torch.row_stack": [[1745, "torch-row-stack"]], "torch.select": [[1753, "torch-select"]], "torch.resolve_neg": [[1740, "torch-resolve-neg"]], "torch.rsqrt": [[1746, "torch-rsqrt"]], "torch.quantize_per_channel": [[1717, "torch-quantize-per-channel"]], "torch.qr": [[1715, "torch-qr"]], "torch.rot90": [[1743, "torch-rot90"]], "torch.resolve_conj": [[1739, "torch-resolve-conj"]], "torch.quantize_per_tensor": [[1718, "torch-quantize-per-tensor"]], "torch.randint": [[1726, "torch-randint"]], "torch.scatter": [[1748, "torch-scatter"]], "torch.set_deterministic_debug_mode": [[1758, "torch-set-deterministic-debug-mode"]], "torch.Tensor.addcmul_": [[95, "torch-tensor-addcmul"]], "FXE0010:fx-pass": [[68, "fxe0010-fx-pass"]], "POE0004:operator-supported-in-newer-opset-version": [[78, "poe0004-operator-supported-in-newer-opset-version"]], "torch.Tensor.addmm_": [[97, "torch-tensor-addmm"]], "POE0003:missing-standard-symbolic-function": [[77, "poe0003-missing-standard-symbolic-function"]], "torch.Tensor.absolute_": [[83, "torch-tensor-absolute"]], "torch.Tensor.acos_": [[85, "torch-tensor-acos"]], "FXE0011:no-symbolic-function-for-call-function": [[69, "fxe0011-no-symbolic-function-for-call-function"]], "torch.map": [[65, "torch-map"]], "dynamic_shape_map": [[65, "dynamic-shape-map"], [63, "dynamic-shape-map"], [55, "dynamic-shape-map"]], "torch.Tensor.addcmul": [[94, "torch-tensor-addcmul"]], "torch.Tensor.addbmm": [[90, "torch-tensor-addbmm"]], "Migrating from functorch to torch.func": [[50, "migrating-from-functorch-to-torch-func"]], "function transforms": [[50, "function-transforms"]], "NN module utilities": [[50, "nn-module-utilities"]], "functorch.make_functional": [[50, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[50, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[50, "functorch-compile"]], "torch.fx": [[54, "torch-fx"]], "Overview": [[54, "module-torch.fx"], [17, "module-torch.cuda._sanitizer"], [1913, "overview"], [1918, "module-torch.profiler"], [1943, "overview"]], "Writing Transformations": [[54, "writing-transformations"]], "A Quick Primer on Graphs": [[54, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[54, "graph-manipulation"]], "Direct Graph Manipulation": [[54, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[54, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[54, "graph-manipulation-examples"]], "Proxy/Retracing": [[54, "proxy-retracing"]], "The Interpreter Pattern": [[54, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[54, "examples-of-the-interpreter-pattern"]], "Debugging": [[54, "debugging"], [1871, "debugging"]], "Introduction": [[54, "introduction"], [1889, "introduction"], [1881, "introduction"]], "Common Pitfalls in Transform Authoring": [[54, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[54, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[54, "debugging-the-generated-code"]], "Use pdb": [[54, "use-pdb"]], "Print the Generated Code": [[54, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[54, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[54, "debugging-the-transformation"]], "Available Debuggers": [[54, "available-debuggers"]], "Limitations of Symbolic Tracing": [[54, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[54, "dynamic-control-flow"]], "Static Control Flow": [[54, "static-control-flow"]], "Non-torch Functions": [[54, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[54, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[54, "leaf-modules"]], "Miscellanea": [[54, "miscellanea"]], "API Reference": [[54, "api-reference"], [1884, "module-torch.monitor"], [17, "api-reference"], [1913, "api-reference"], [1918, "api-reference"], [1916, "api-reference"]], "torch.dynamic-shape": [[63, "torch-dynamic-shape"]], "cond_branch_class_method": [[63, "cond-branch-class-method"], [55, "cond-branch-class-method"], [62, "cond-branch-class-method"]], "cond_branch_nested_function": [[63, "cond-branch-nested-function"], [55, "cond-branch-nested-function"], [62, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[63, "cond-branch-nonlocal-variables"], [55, "cond-branch-nonlocal-variables"], [62, "cond-branch-nonlocal-variables"]], "cond_operands": [[63, "cond-operands"], [55, "cond-operands"], [62, "cond-operands"]], "cond_predicate": [[63, "cond-predicate"], [55, "cond-predicate"], [62, "cond-predicate"]], "dynamic_shape_constructor": [[63, "dynamic-shape-constructor"], [55, "dynamic-shape-constructor"]], "dynamic_shape_if_guard": [[63, "dynamic-shape-if-guard"], [60, "dynamic-shape-if-guard"], [55, "dynamic-shape-if-guard"]], "dynamic_shape_round": [[63, "dynamic-shape-round"], [55, "dynamic-shape-round"], [57, "dynamic-shape-round"]], "dynamic_shape_slicing": [[63, "dynamic-shape-slicing"], [55, "dynamic-shape-slicing"]], "dynamic_shape_view": [[63, "dynamic-shape-view"], [55, "dynamic-shape-view"]], "list_contains": [[63, "list-contains"], [61, "list-contains"], [56, "list-contains"], [55, "list-contains"]], "scalar_output": [[63, "scalar-output"], [55, "scalar-output"]], "torch.escape-hatch": [[64, "torch-escape-hatch"]], "assume_constant_result": [[64, "assume-constant-result"], [55, "assume-constant-result"]], "FXE0015:fx-node-insert-type-promotion": [[73, "fxe0015-fx-node-insert-type-promotion"]], "FXE0012:unsupported-fx-node-analysis": [[70, "fxe0012-unsupported-fx-node-analysis"]], "python.data-structure": [[61, "python-data-structure"]], "dictionary": [[61, "dictionary"], [55, "dictionary"]], "fn_with_kwargs": [[61, "fn-with-kwargs"], [55, "fn-with-kwargs"]], "list_unpack": [[61, "list-unpack"], [60, "list-unpack"], [55, "list-unpack"]], "torch.Tensor.abs_": [[81, "torch-tensor-abs"]], "torch.Tensor.acosh": [[86, "torch-tensor-acosh"]], "POE0002:missing-custom-symbolic-function": [[76, "poe0002-missing-custom-symbolic-function"]], "python.assert": [[56, "python-assert"]], "dynamic_shape_assert": [[56, "dynamic-shape-assert"], [55, "dynamic-shape-assert"]], "torch.Tensor.add": [[88, "torch-tensor-add"]], "torch.Tensor.addcdiv": [[92, "torch-tensor-addcdiv"]], "torch.Tensor.addcdiv_": [[93, "torch-tensor-addcdiv"]], "python.control-flow": [[60, "python-control-flow"]], "static_for_loop": [[60, "static-for-loop"], [55, "static-for-loop"]], "static_if": [[60, "static-if"], [55, "static-if"]], "torch.func Whirlwind Tour": [[52, "torch-func-whirlwind-tour"]], "What is torch.func?": [[52, "what-is-torch-func"]], "Why composable function transforms?": [[52, "why-composable-function-transforms"], [47, "why-composable-function-transforms"]], "What are the transforms?": [[52, "what-are-the-transforms"]], "grad() (gradient computation)": [[52, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[52, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[52, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[52, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[52, "jacrev-jacfwd-and-hessian"]], "FXE0008:fx-node-to-onnx": [[67, "fxe0008-fx-node-to-onnx"]], "FXE0007:fx-graph-to-onnx": [[66, "fxe0007-fx-graph-to-onnx"]], "Key Representations:": [[66, "key-representations"]], "Additional Notes:": [[66, "additional-notes"]], "torch.Tensor.add_": [[89, "torch-tensor-add"]], "UX Limitations": [[51, "ux-limitations"]], "General limitations": [[51, "general-limitations"]], "torch.autograd APIs": [[51, "torch-autograd-apis"]], "vmap limitations": [[51, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[51, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[51, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[51, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[51, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[51, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[51, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[51, "randomness"]], "FXE0014:find-opschema-matched-symbolic-function": [[72, "fxe0014-find-opschema-matched-symbolic-function"]], "Patching Batch Norm": [[49, "patching-batch-norm"]], "What\u2019s happening?": [[49, "what-s-happening"]], "How to fix": [[49, "how-to-fix"]], "Option 1: Change the BatchNorm": [[49, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[49, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[49, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[49, "option-4-eval-mode"]], "ExportDB": [[55, "exportdb"]], "Tags": [[55, null]], "Supported": [[55, "supported"]], "autograd_function": [[55, "autograd-function"]], "class_method": [[55, "class-method"]], "cond_closed_over_variable": [[55, "cond-closed-over-variable"], [62, "cond-closed-over-variable"], [58, "cond-closed-over-variable"]], "decorator": [[55, "decorator"]], "nested_function": [[55, "nested-function"], [58, "nested-function"]], "null_context_manager": [[55, "null-context-manager"], [59, "null-context-manager"]], "pytree_flatten": [[55, "pytree-flatten"]], "specialized_attribute": [[55, "specialized-attribute"]], "tensor_setattr": [[55, "tensor-setattr"], [57, "tensor-setattr"]], "Not Supported Yet": [[55, "not-supported-yet"]], "type_reflection_method": [[55, "type-reflection-method"], [57, "type-reflection-method"]], "torch.futures": [[53, "torch-futures"]], "torch.Tensor.acos": [[84, "torch-tensor-acos"]], "torch.cond": [[62, "torch-cond"]], "FXE0013:op-level-debugging": [[71, "fxe0013-op-level-debugging"]], "torch.Tensor.absolute": [[82, "torch-tensor-absolute"]], "torch.Tensor.abs": [[80, "torch-tensor-abs"]], "Generator": [[79, "generator"]], "torch.Tensor.addmm": [[96, "torch-tensor-addmm"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[74, "fxe0016-find-operator-overloads-in-onnx-registry"]], "python.builtin": [[57, "python-builtin"]], "python.context-manager": [[59, "python-context-manager"]], "POE0001:node-missing-onnx-shape-inference": [[75, "poe0001-node-missing-onnx-shape-inference"]], "python.closure": [[58, "python-closure"]], "torch.Tensor.acosh_": [[87, "torch-tensor-acosh"]], "torch.Tensor.addbmm_": [[91, "torch-tensor-addbmm"]], "torch.nn.functional.nll_loss": [[1561, "torch-nn-functional-nll-loss"]], "torch.nn.functional.leaky_relu": [[1541, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.leaky_relu_": [[1542, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.gelu": [[1524, "torch-nn-functional-gelu"]], "torch.nn.functional.fractional_max_pool2d": [[1521, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.grid_sample": [[1526, "torch-nn-functional-grid-sample"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1560, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.linear": [[1543, "torch-nn-functional-linear"]], "torch.nn.functional.hardswish": [[1531, "torch-nn-functional-hardswish"]], "torch.nn.functional.log_softmax": [[1545, "torch-nn-functional-log-softmax"]], "torch.nn.functional.pixel_shuffle": [[1567, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.fold": [[1520, "torch-nn-functional-fold"]], "torch.nn.functional.multilabel_margin_loss": [[1559, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.logsigmoid": [[1546, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.feature_alpha_dropout": [[1519, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.hardsigmoid": [[1530, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.mish": [[1556, "torch-nn-functional-mish"]], "torch.nn.functional.normalize": [[1562, "torch-nn-functional-normalize"]], "torch.nn.functional.hardtanh": [[1532, "torch-nn-functional-hardtanh"]], "torch.nn.functional.lp_pool2d": [[1548, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.local_response_norm": [[1544, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.one_hot": [[1563, "torch-nn-functional-one-hot"]], "torch.nn.functional.max_pool3d": [[1552, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.max_pool2d": [[1551, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.mse_loss": [[1557, "torch-nn-functional-mse-loss"]], "torch.nn.functional.pdist": [[1566, "torch-nn-functional-pdist"]], "torch.nn.functional.l1_loss": [[1539, "torch-nn-functional-l1-loss"]], "torch.nn.functional.instance_norm": [[1536, "torch-nn-functional-instance-norm"]], "torch.nn.functional.max_unpool2d": [[1554, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.max_pool1d": [[1550, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.pairwise_distance": [[1565, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.glu": [[1525, "torch-nn-functional-glu"]], "torch.nn.functional.margin_ranking_loss": [[1549, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.hardtanh_": [[1533, "torch-nn-functional-hardtanh"]], "torch.nn.functional.hinge_embedding_loss": [[1534, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.group_norm": [[1527, "torch-nn-functional-group-norm"]], "torch.nn.functional.pad": [[1564, "torch-nn-functional-pad"]], "torch.nn.functional.gaussian_nll_loss": [[1523, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.fractional_max_pool3d": [[1522, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.kl_div": [[1538, "torch-nn-functional-kl-div"]], "torch.nn.functional.hardshrink": [[1529, "torch-nn-functional-hardshrink"]], "torch.nn.functional.lp_pool1d": [[1547, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.interpolate": [[1537, "torch-nn-functional-interpolate"]], "torch.nn.functional.max_unpool3d": [[1555, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.huber_loss": [[1535, "torch-nn-functional-huber-loss"]], "torch.nn.functional.max_unpool1d": [[1553, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.layer_norm": [[1540, "torch-nn-functional-layer-norm"]], "torch.nn.functional.multi_margin_loss": [[1558, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.gumbel_softmax": [[1528, "torch-nn-functional-gumbel-softmax"]], "L1Unstructured": [[1624, "l1unstructured"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1620, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.utils.prune.l1_unstructured": [[1633, "torch-nn-utils-prune-l1-unstructured"]], "torch.ones_like": [[1659, "torch-ones-like"]], "torch.nn.utils.prune.custom_from_mask": [[1629, "torch-nn-utils-prune-custom-from-mask"]], "torch.nn.utils.vector_to_parameters": [[1650, "torch-nn-utils-vector-to-parameters"]], "RandomStructured": [[1627, "randomstructured"]], "torch.not_equal": [[1656, "torch-not-equal"]], "no_grad": [[1652, "no-grad"]], "torch.nn.utils.rnn.unpack_sequence": [[1645, "torch-nn-utils-rnn-unpack-sequence"]], "ExportOutput": [[1662, "exportoutput"]], "torch.nn.utils.skip_init": [[1647, "torch-nn-utils-skip-init"]], "PackedSequence": [[1640, "packedsequence"]], "torch.numel": [[1657, "torch-numel"]], "torch.nn.utils.rnn.unpad_sequence": [[1646, "torch-nn-utils-rnn-unpad-sequence"]], "PruningContainer": [[1626, "pruningcontainer"]], "torch.ones": [[1658, "torch-ones"]], "DiagnosticOptions": [[1660, "diagnosticoptions"]], "torch.nn.utils.remove_spectral_norm": [[1638, "torch-nn-utils-remove-spectral-norm"]], "OnnxExporterError": [[1665, "onnxexportererror"]], "RandomUnstructured": [[1628, "randomunstructured"]], "Identity": [[1623, "identity"], [1389, "identity"]], "torch.nn.utils.prune.is_pruned": [[1632, "torch-nn-utils-prune-is-pruned"]], "torch.normal": [[1655, "torch-normal"]], "torch.nn.utils.parametrize.is_parametrized": [[1618, "torch-nn-utils-parametrize-is-parametrized"]], "torch.norm": [[1654, "torch-norm"]], "ExportOptions": [[1661, "exportoptions"]], "torch.nn.utils.prune.identity": [[1631, "torch-nn-utils-prune-identity"]], "torch.nn.utils.prune.random_structured": [[1635, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1643, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.nn.utils.spectral_norm": [[1648, "torch-nn-utils-spectral-norm"]], "torch.nn.utils.prune.ln_structured": [[1634, "torch-nn-utils-prune-ln-structured"]], "torch.nn.utils.prune.random_unstructured": [[1636, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.utils.weight_norm": [[1651, "torch-nn-utils-weight-norm"]], "ExportOutputSerializer": [[1663, "exportoutputserializer"]], "torch.nn.utils.parametrize.cached": [[1617, "torch-nn-utils-parametrize-cached"]], "BasePruningMethod": [[1621, "basepruningmethod"]], "LnStructured": [[1625, "lnstructured"]], "torch.nn.utils.stateless.functional_call": [[1649, "torch-nn-utils-stateless-functional-call"]], "torch.nn.utils.remove_weight_norm": [[1639, "torch-nn-utils-remove-weight-norm"]], "CustomFromMask": [[1622, "customfrommask"]], "torch.nn.utils.parametrize.register_parametrization": [[1619, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.utils.rnn.pad_sequence": [[1644, "torch-nn-utils-rnn-pad-sequence"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1641, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.prune.remove": [[1637, "torch-nn-utils-prune-remove"]], "torch.nonzero": [[1653, "torch-nonzero"]], "torch.nn.utils.prune.global_unstructured": [[1630, "torch-nn-utils-prune-global-unstructured"]], "JitScalarType": [[1664, "jitscalartype"]], "torch.nn.utils.rnn.pack_sequence": [[1642, "torch-nn-utils-rnn-pack-sequence"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1606, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "DistributedDataParallel": [[1607, "distributeddataparallel"], [1898, "distributeddataparallel"]], "torch.nn.functional.softmin": [[1583, "torch-nn-functional-softmin"]], "torch.nn.functional.pixel_unshuffle": [[1568, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.threshold": [[1589, "torch-nn-functional-threshold"]], "torch.nn.functional.softmax": [[1582, "torch-nn-functional-softmax"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1605, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.modules.module.register_module_forward_hook": [[1601, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.functional.upsample_nearest": [[1597, "torch-nn-functional-upsample-nearest"]], "ParametrizationList": [[1616, "parametrizationlist"]], "torch.nn.functional.sigmoid": [[1578, "torch-nn-functional-sigmoid"]], "torch.nn.functional.softshrink": [[1585, "torch-nn-functional-softshrink"]], "torch.nn.functional.upsample": [[1595, "torch-nn-functional-upsample"]], "torch.nn.functional.smooth_l1_loss": [[1580, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.softsign": [[1586, "torch-nn-functional-softsign"]], "torch.nn.functional.rrelu_": [[1575, "torch-nn-functional-rrelu"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1604, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.functional.poisson_nll_loss": [[1569, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1602, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1603, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.tanh": [[1587, "torch-nn-functional-tanh"]], "torch.nn.functional.relu": [[1571, "torch-nn-functional-relu"]], "torch.nn.functional.rrelu": [[1574, "torch-nn-functional-rrelu"]], "torch.nn.functional.prelu": [[1570, "torch-nn-functional-prelu"]], "torch.nn.functional.silu": [[1579, "torch-nn-functional-silu"]], "torch.nn.functional.threshold_": [[1590, "torch-nn-functional-threshold"]], "torch.nn.functional.selu": [[1577, "torch-nn-functional-selu"]], "torch.nn.modules.module.register_module_backward_hook": [[1599, "torch-nn-modules-module-register-module-backward-hook"]], "UninitializedParameter": [[1610, "uninitializedparameter"]], "LazyModuleMixin": [[1598, "lazymodulemixin"]], "torch.nn.utils.parametrizations.spectral_norm": [[1615, "torch-nn-utils-parametrizations-spectral-norm"]], "Parameter": [[1608, "parameter"]], "torch.nn.functional.triplet_margin_loss": [[1592, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1593, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.utils.clip_grad_value_": [[1612, "torch-nn-utils-clip-grad-value"]], "torch.nn.utils.parametrizations.orthogonal": [[1614, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.functional.softplus": [[1584, "torch-nn-functional-softplus"]], "torch.nn.functional.soft_margin_loss": [[1581, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.tanhshrink": [[1588, "torch-nn-functional-tanhshrink"]], "torch.nn.functional.upsample_bilinear": [[1596, "torch-nn-functional-upsample-bilinear"]], "UninitializedBuffer": [[1609, "uninitializedbuffer"]], "torch.nn.functional.relu6": [[1572, "torch-nn-functional-relu6"]], "torch.nn.utils.parameters_to_vector": [[1613, "torch-nn-utils-parameters-to-vector"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1591, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1600, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.utils.clip_grad_norm_": [[1611, "torch-nn-utils-clip-grad-norm"]], "torch.nn.functional.unfold": [[1594, "torch-nn-functional-unfold"]], "torch.nn.functional.relu_": [[1573, "torch-nn-functional-relu"]], "torch.nn.functional.scaled_dot_product_attention": [[1576, "torch-nn-functional-scaled-dot-product-attention"]], "torch.optim.Optimizer.state_dict": [[1679, "torch-optim-optimizer-state-dict"]], "LambdaLR": [[1693, "lambdalr"]], "ConstantLR": [[1688, "constantlr"]], "CosineAnnealingLR": [[1689, "cosineannealinglr"]], "Adam": [[1672, "adam"]], "Adadelta": [[1670, "adadelta"]], "MultiplicativeLR": [[1696, "multiplicativelr"]], "torch.optim.Optimizer.add_param_group": [[1677, "torch-optim-optimizer-add-param-group"]], "Adamax": [[1674, "adamax"]], "RMSprop": [[1683, "rmsprop"]], "OnnxRegistry": [[1666, "onnxregistry"]], "MultiStepLR": [[1695, "multisteplr"]], "Adagrad": [[1671, "adagrad"]], "ASGD": [[1669, "asgd"]], "LinearLR": [[1694, "linearlr"]], "CosineAnnealingWarmRestarts": [[1690, "cosineannealingwarmrestarts"]], "LBFGS": [[1675, "lbfgs"]], "RAdam": [[1682, "radam"]], "PolynomialLR": [[1698, "polynomiallr"]], "torch.prod": [[1713, "torch-prod"]], "AdamW": [[1673, "adamw"]], "StepLR": [[1701, "steplr"]], "torch.polygamma": [[1710, "torch-polygamma"]], "Rprop": [[1684, "rprop"]], "torch.positive": [[1711, "torch-positive"]], "ExponentialLR": [[1692, "exponentiallr"]], "torch.pca_lowrank": [[1705, "torch-pca-lowrank"]], "torch.polar": [[1709, "torch-polar"]], "torch.pow": [[1712, "torch-pow"]], "torch.promote_types": [[1714, "torch-promote-types"]], "SparseAdam": [[1686, "sparseadam"]], "VerificationOptions": [[1668, "verificationoptions"]], "torch.poisson": [[1708, "torch-poisson"]], "GraphInfo": [[1667, "graphinfo"]], "torch.permute": [[1706, "torch-permute"]], "SequentialLR": [[1700, "sequentiallr"]], "torch.orgqr": [[1702, "torch-orgqr"]], "ReduceLROnPlateau": [[1699, "reducelronplateau"]], "SGD": [[1685, "sgd"]], "torch.outer": [[1704, "torch-outer"]], "torch.optim.Optimizer.step": [[1680, "torch-optim-optimizer-step"]], "CyclicLR": [[1691, "cycliclr"]], "torch.optim.Optimizer.zero_grad": [[1681, "torch-optim-optimizer-zero-grad"]], "torch.optim.Optimizer.load_state_dict": [[1678, "torch-optim-optimizer-load-state-dict"]], "ChainedScheduler": [[1687, "chainedscheduler"]], "torch.pinverse": [[1707, "torch-pinverse"]], "OneCycleLR": [[1697, "onecyclelr"]], "NAdam": [[1676, "nadam"]], "torch.ormqr": [[1703, "torch-ormqr"]], "torch.nn.functional.conv_transpose1d": [[1504, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.batch_norm": [[1496, "torch-nn-functional-batch-norm"]], "torch.nn.functional.conv_transpose2d": [[1505, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.alpha_dropout": [[1492, "torch-nn-functional-alpha-dropout"]], "TripletMarginLoss": [[1475, "tripletmarginloss"]], "Unflatten": [[1477, "unflatten"]], "torch.nn.functional.dropout": [[1511, "torch-nn-functional-dropout"]], "torch.nn.functional.embedding": [[1517, "torch-nn-functional-embedding"]], "Unfold": [[1478, "unfold"]], "TripletMarginWithDistanceLoss": [[1476, "tripletmarginwithdistanceloss"]], "torch.nn.functional.conv1d": [[1501, "torch-nn-functional-conv1d"]], "torch.nn.functional.conv_transpose3d": [[1506, "torch-nn-functional-conv-transpose3d"]], "TransformerDecoderLayer": [[1472, "transformerdecoderlayer"]], "torch.nn.functional.avg_pool3d": [[1495, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.binary_cross_entropy": [[1498, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.ctc_loss": [[1510, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.dropout3d": [[1514, "torch-nn-functional-dropout3d"]], "torch.nn.functional.adaptive_avg_pool1d": [[1485, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.cosine_similarity": [[1508, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.avg_pool1d": [[1493, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.cosine_embedding_loss": [[1507, "torch-nn-functional-cosine-embedding-loss"]], "ZeroPad1d": [[1482, "zeropad1d"]], "TransformerEncoder": [[1473, "transformerencoder"]], "torch.nn.functional.cross_entropy": [[1509, "torch-nn-functional-cross-entropy"]], "UpsamplingBilinear2d": [[1480, "upsamplingbilinear2d"]], "torch.nn.functional.embedding_bag": [[1518, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.affine_grid": [[1491, "torch-nn-functional-affine-grid"]], "ZeroPad2d": [[1483, "zeropad2d"]], "torch.nn.functional.adaptive_max_pool2d": [[1489, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.dropout2d": [[1513, "torch-nn-functional-dropout2d"]], "ZeroPad3d": [[1484, "zeropad3d"]], "torch.nn.functional.elu": [[1515, "torch-nn-functional-elu"]], "TransformerEncoderLayer": [[1474, "transformerencoderlayer"]], "torch.nn.functional.adaptive_max_pool1d": [[1488, "torch-nn-functional-adaptive-max-pool1d"]], "TransformerDecoder": [[1471, "transformerdecoder"]], "torch.nn.functional.dropout1d": [[1512, "torch-nn-functional-dropout1d"]], "torch.nn.functional.adaptive_max_pool3d": [[1490, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.conv2d": [[1502, "torch-nn-functional-conv2d"]], "torch.nn.functional.elu_": [[1516, "torch-nn-functional-elu"]], "UpsamplingNearest2d": [[1481, "upsamplingnearest2d"]], "torch.nn.functional.avg_pool2d": [[1494, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.bilinear": [[1497, "torch-nn-functional-bilinear"]], "torch.nn.functional.adaptive_avg_pool3d": [[1487, "torch-nn-functional-adaptive-avg-pool3d"]], "Upsample": [[1479, "upsample"]], "torch.nn.functional.conv3d": [[1503, "torch-nn-functional-conv3d"]], "Transformer": [[1470, "transformer"], [1956, "transformer"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1499, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.adaptive_avg_pool2d": [[1486, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.celu": [[1500, "torch-nn-functional-celu"]], "torch.logit": [[1279, "torch-logit"]], "torch.mps.synchronize": [[1314, "torch-mps-synchronize"]], "torch.mul": [[1316, "torch-mul"]], "torch.median": [[1294, "torch-median"]], "torch.mps.seed": [[1311, "torch-mps-seed"]], "torch.mean": [[1293, "torch-mean"]], "torch.mps.set_rng_state": [[1313, "torch-mps-set-rng-state"]], "torch.min": [[1296, "torch-min"]], "torch.masked_select": [[1287, "torch-masked-select"]], "torch.meshgrid": [[1295, "torch-meshgrid"]], "torch.multiply": [[1318, "torch-multiply"]], "torch.matrix_exp": [[1289, "torch-matrix-exp"]], "torch.logdet": [[1274, "torch-logdet"]], "torch.lu_unpack": [[1285, "torch-lu-unpack"]], "torch.matrix_power": [[1290, "torch-matrix-power"]], "torch.logspace": [[1280, "torch-logspace"]], "torch.mps.profiler.profile": [[1308, "torch-mps-profiler-profile"]], "torch.minimum": [[1297, "torch-minimum"]], "torch.movedim": [[1301, "torch-movedim"]], "torch.maximum": [[1292, "torch-maximum"]], "torch.mps.driver_allocated_memory": [[1303, "torch-mps-driver-allocated-memory"]], "torch.manual_seed": [[1286, "torch-manual-seed"]], "Event": [[1305, "event"], [970, "event"]], "torch.mps.empty_cache": [[1304, "torch-mps-empty-cache"]], "torch.logical_or": [[1277, "torch-logical-or"]], "torch.logical_xor": [[1278, "torch-logical-xor"]], "torch.mps.current_allocated_memory": [[1302, "torch-mps-current-allocated-memory"]], "torch.mvlgamma": [[1320, "torch-mvlgamma"]], "torch.nanmean": [[1322, "torch-nanmean"]], "torch.mps.manual_seed": [[1307, "torch-mps-manual-seed"]], "torch.mps.profiler.stop": [[1310, "torch-mps-profiler-stop"]], "torch.mps.set_per_process_memory_fraction": [[1312, "torch-mps-set-per-process-memory-fraction"]], "torch.mps.get_rng_state": [[1306, "torch-mps-get-rng-state"]], "torch.multinomial": [[1317, "torch-multinomial"]], "torch.lu": [[1283, "torch-lu"]], "torch.matmul": [[1288, "torch-matmul"]], "torch.mm": [[1298, "torch-mm"]], "torch.moveaxis": [[1300, "torch-moveaxis"]], "torch.max": [[1291, "torch-max"]], "torch.nan_to_num": [[1321, "torch-nan-to-num"]], "torch.lu_solve": [[1284, "torch-lu-solve"]], "torch.logical_and": [[1275, "torch-logical-and"]], "torch.logsumexp": [[1281, "torch-logsumexp"]], "torch.mps.profiler.start": [[1309, "torch-mps-profiler-start"]], "torch.msort": [[1315, "torch-msort"]], "torch.mv": [[1319, "torch-mv"]], "torch.logical_not": [[1276, "torch-logical-not"]], "torch.mode": [[1299, "torch-mode"]], "torch.lt": [[1282, "torch-lt"]], "Flatten": [[1373, "flatten"]], "LazyInstanceNorm3d": [[1411, "lazyinstancenorm3d"]], "InstanceNorm2d": [[1391, "instancenorm2d"], [741, "instancenorm2d"]], "LazyBatchNorm1d": [[1400, "lazybatchnorm1d"]], "Fold": [[1374, "fold"]], "LayerNorm": [[1399, "layernorm"], [743, "layernorm"]], "Hardswish": [[1385, "hardswish"], [739, "hardswish"]], "L1Loss": [[1394, "l1loss"]], "LazyConv2d": [[1404, "lazyconv2d"]], "LSTMCell": [[1398, "lstmcell"], [752, "lstmcell"]], "LazyBatchNorm3d": [[1402, "lazybatchnorm3d"]], "InstanceNorm1d": [[1390, "instancenorm1d"], [740, "instancenorm1d"]], "LocalResponseNorm": [[1415, "localresponsenorm"]], "KLDivLoss": [[1393, "kldivloss"]], "Linear": [[1414, "linear"], [745, "linear"], [753, "linear"], [721, "linear"], [722, "linear"]], "MarginRankingLoss": [[1419, "marginrankingloss"]], "LSTM": [[1397, "lstm"], [751, "lstm"], [723, "lstm"]], "Hardtanh": [[1386, "hardtanh"]], "Hardsigmoid": [[1384, "hardsigmoid"]], "LazyInstanceNorm1d": [[1409, "lazyinstancenorm1d"]], "LazyConv1d": [[1403, "lazyconv1d"]], "LazyConvTranspose1d": [[1406, "lazyconvtranspose1d"]], "LeakyReLU": [[1413, "leakyrelu"], [744, "leakyrelu"]], "LazyConvTranspose3d": [[1408, "lazyconvtranspose3d"]], "LazyBatchNorm2d": [[1401, "lazybatchnorm2d"]], "HuberLoss": [[1388, "huberloss"]], "FeatureAlphaDropout": [[1372, "featurealphadropout"]], "GLU": [[1378, "glu"]], "GroupNorm": [[1382, "groupnorm"], [738, "groupnorm"]], "Hardshrink": [[1383, "hardshrink"]], "LPPool2d": [[1396, "lppool2d"]], "LazyConvTranspose2d": [[1407, "lazyconvtranspose2d"]], "GELU": [[1377, "gelu"]], "FractionalMaxPool3d": [[1376, "fractionalmaxpool3d"]], "FractionalMaxPool2d": [[1375, "fractionalmaxpool2d"]], "MSELoss": [[1418, "mseloss"]], "LazyConv3d": [[1405, "lazyconv3d"]], "LogSigmoid": [[1416, "logsigmoid"]], "MaxPool1d": [[1420, "maxpool1d"]], "GRU": [[1379, "gru"], [749, "gru"]], "LazyInstanceNorm2d": [[1410, "lazyinstancenorm2d"]], "GRUCell": [[1380, "grucell"], [750, "grucell"]], "LPPool1d": [[1395, "lppool1d"]], "LazyLinear": [[1412, "lazylinear"]], "GaussianNLLLoss": [[1381, "gaussiannllloss"]], "HingeEmbeddingLoss": [[1387, "hingeembeddingloss"]], "LogSoftmax": [[1417, "logsoftmax"]], "InstanceNorm3d": [[1392, "instancenorm3d"], [742, "instancenorm3d"]], "MultiLabelSoftMarginLoss": [[1431, "multilabelsoftmarginloss"]], "MultiMarginLoss": [[1432, "multimarginloss"]], "SoftMarginLoss": [[1459, "softmarginloss"]], "RNNBase": [[1443, "rnnbase"]], "MaxUnpool3d": [[1425, "maxunpool3d"]], "ReLU": [[1446, "relu"]], "MaxUnpool2d": [[1424, "maxunpool2d"]], "Tanh": [[1467, "tanh"]], "ReflectionPad2d": [[1449, "reflectionpad2d"]], "MaxUnpool1d": [[1423, "maxunpool1d"]], "ReLU6": [[1447, "relu6"], [747, "relu6"]], "SELU": [[1454, "selu"]], "MaxPool3d": [[1422, "maxpool3d"]], "ReflectionPad3d": [[1450, "reflectionpad3d"]], "PixelUnshuffle": [[1440, "pixelunshuffle"]], "Softmax2d": [[1461, "softmax2d"]], "ReplicationPad2d": [[1452, "replicationpad2d"]], "Softshrink": [[1464, "softshrink"]], "Tanhshrink": [[1468, "tanhshrink"]], "PixelShuffle": [[1439, "pixelshuffle"]], "ModuleDict": [[1428, "moduledict"]], "ReplicationPad3d": [[1453, "replicationpad3d"]], "Mish": [[1426, "mish"]], "MultiheadAttention": [[1433, "multiheadattention"], [724, "multiheadattention"]], "ParameterDict": [[1437, "parameterdict"]], "ModuleList": [[1429, "modulelist"]], "SmoothL1Loss": [[1458, "smoothl1loss"]], "SiLU": [[1456, "silu"]], "RNN": [[1442, "rnn"]], "MultiLabelMarginLoss": [[1430, "multilabelmarginloss"]], "RReLU": [[1445, "rrelu"]], "Softsign": [[1465, "softsign"]], "Threshold": [[1469, "threshold"]], "Softmax": [[1460, "softmax"]], "PairwiseDistance": [[1436, "pairwisedistance"]], "PReLU": [[1435, "prelu"]], "Module": [[1427, "module"]], "NLLLoss": [[1434, "nllloss"]], "ReplicationPad1d": [[1451, "replicationpad1d"]], "Softplus": [[1463, "softplus"]], "PoissonNLLLoss": [[1441, "poissonnllloss"]], "Sequential": [[1455, "sequential"]], "MaxPool2d": [[1421, "maxpool2d"]], "SyncBatchNorm": [[1466, "syncbatchnorm"]], "Softmin": [[1462, "softmin"]], "ReflectionPad1d": [[1448, "reflectionpad1d"]], "ParameterList": [[1438, "parameterlist"]], "RNNCell": [[1444, "rnncell"], [754, "rnncell"]], "Sigmoid": [[1457, "sigmoid"], [748, "sigmoid"]], "torch.narrow_copy": [[1327, "torch-narrow-copy"]], "torch.neg": [[1329, "torch-neg"]], "Conv2d": [[1356, "conv2d"], [719, "conv2d"], [728, "conv2d"]], "AdaptiveMaxPool3d": [[1338, "adaptivemaxpool3d"]], "ConstantPad1d": [[1352, "constantpad1d"]], "Conv3d": [[1357, "conv3d"], [729, "conv3d"], [720, "conv3d"]], "CrossEntropyLoss": [[1363, "crossentropyloss"]], "AvgPool3d": [[1342, "avgpool3d"]], "CosineEmbeddingLoss": [[1361, "cosineembeddingloss"]], "CTCLoss": [[1350, "ctcloss"]], "Dropout": [[1365, "dropout"]], "Conv1d": [[1355, "conv1d"], [727, "conv1d"]], "AvgPool2d": [[1341, "avgpool2d"]], "BatchNorm2d": [[1346, "batchnorm2d"], [725, "batchnorm2d"]], "ConstantPad2d": [[1353, "constantpad2d"]], "AdaptiveMaxPool2d": [[1337, "adaptivemaxpool2d"]], "AdaptiveLogSoftmaxWithLoss": [[1335, "adaptivelogsoftmaxwithloss"]], "torch.nanmedian": [[1323, "torch-nanmedian"]], "Dropout2d": [[1367, "dropout2d"]], "ConvTranspose3d": [[1360, "convtranspose3d"], [732, "convtranspose3d"]], "EmbeddingBag": [[1371, "embeddingbag"], [735, "embeddingbag"]], "AdaptiveAvgPool2d": [[1333, "adaptiveavgpool2d"]], "AdaptiveAvgPool1d": [[1332, "adaptiveavgpool1d"]], "ChannelShuffle": [[1351, "channelshuffle"]], "BatchNorm1d": [[1345, "batchnorm1d"]], "CosineSimilarity": [[1362, "cosinesimilarity"]], "ConvTranspose1d": [[1358, "convtranspose1d"], [730, "convtranspose1d"]], "AlphaDropout": [[1339, "alphadropout"]], "ELU": [[1369, "elu"], [733, "elu"]], "torch.narrow": [[1326, "torch-narrow"]], "Embedding": [[1370, "embedding"], [734, "embedding"]], "torch.nextafter": [[1331, "torch-nextafter"]], "ConstantPad3d": [[1354, "constantpad3d"]], "AvgPool1d": [[1340, "avgpool1d"]], "torch.nansum": [[1325, "torch-nansum"]], "ConvTranspose2d": [[1359, "convtranspose2d"], [731, "convtranspose2d"]], "BatchNorm3d": [[1347, "batchnorm3d"], [726, "batchnorm3d"]], "Dropout3d": [[1368, "dropout3d"]], "Bilinear": [[1348, "bilinear"]], "BCELoss": [[1343, "bceloss"]], "DataParallel": [[1364, "dataparallel"]], "AdaptiveMaxPool1d": [[1336, "adaptivemaxpool1d"]], "CELU": [[1349, "celu"]], "BCEWithLogitsLoss": [[1344, "bcewithlogitsloss"]], "AdaptiveAvgPool3d": [[1334, "adaptiveavgpool3d"]], "torch.negative": [[1330, "torch-negative"]], "Dropout1d": [[1366, "dropout1d"]], "torch.nanquantile": [[1324, "torch-nanquantile"]], "torch.ne": [[1328, "torch-ne"]], "torch.linalg.lu_factor": [[1241, "torch-linalg-lu-factor"]], "torch.linalg.eigvalsh": [[1232, "torch-linalg-eigvalsh"]], "torch.linalg.lu": [[1240, "torch-linalg-lu"]], "torch.linalg.matrix_power": [[1247, "torch-linalg-matrix-power"]], "torch.linalg.ldl_solve": [[1238, "torch-linalg-ldl-solve"]], "torch.linalg.inv_ex": [[1235, "torch-linalg-inv-ex"]], "torch.logcumsumexp": [[1273, "torch-logcumsumexp"]], "torch.linalg.solve": [[1254, "torch-linalg-solve"]], "torch.linalg.lstsq": [[1239, "torch-linalg-lstsq"]], "torch.linalg.householder_product": [[1233, "torch-linalg-householder-product"]], "torch.load": [[1265, "torch-load"]], "torch.log10": [[1268, "torch-log10"]], "torch.logaddexp": [[1271, "torch-logaddexp"]], "torch.logaddexp2": [[1272, "torch-logaddexp2"]], "torch.linalg.diagonal": [[1228, "torch-linalg-diagonal"]], "torch.linalg.tensorinv": [[1259, "torch-linalg-tensorinv"]], "torch.linalg.det": [[1227, "torch-linalg-det"]], "torch.linalg.svd": [[1257, "torch-linalg-svd"]], "torch.linalg.tensorsolve": [[1260, "torch-linalg-tensorsolve"]], "torch.linalg.slogdet": [[1253, "torch-linalg-slogdet"]], "torch.linalg.norm": [[1250, "torch-linalg-norm"]], "torch.linalg.vander": [[1261, "torch-linalg-vander"]], "torch.linalg.inv": [[1234, "torch-linalg-inv"]], "torch.linalg.vecdot": [[1262, "torch-linalg-vecdot"]], "torch.linalg.matmul": [[1244, "torch-linalg-matmul"]], "torch.linalg.vector_norm": [[1263, "torch-linalg-vector-norm"]], "torch.log1p": [[1269, "torch-log1p"]], "torch.linalg.lu_factor_ex": [[1242, "torch-linalg-lu-factor-ex"]], "torch.linalg.solve_triangular": [[1256, "torch-linalg-solve-triangular"]], "torch.log": [[1267, "torch-log"]], "torch.linalg.cross": [[1226, "torch-linalg-cross"]], "torch.linalg.eig": [[1229, "torch-linalg-eig"]], "torch.linalg.ldl_factor_ex": [[1237, "torch-linalg-ldl-factor-ex"]], "torch.linalg.matrix_norm": [[1246, "torch-linalg-matrix-norm"]], "torch.linalg.matrix_rank": [[1248, "torch-linalg-matrix-rank"]], "torch.linalg.ldl_factor": [[1236, "torch-linalg-ldl-factor"]], "torch.linspace": [[1264, "torch-linspace"]], "torch.linalg.matrix_exp": [[1245, "torch-linalg-matrix-exp"]], "torch.linalg.cond": [[1225, "torch-linalg-cond"]], "torch.log2": [[1270, "torch-log2"]], "torch.linalg.pinv": [[1251, "torch-linalg-pinv"]], "torch.linalg.lu_solve": [[1243, "torch-linalg-lu-solve"]], "torch.linalg.eigvals": [[1231, "torch-linalg-eigvals"]], "torch.linalg.eigh": [[1230, "torch-linalg-eigh"]], "torch.linalg.multi_dot": [[1249, "torch-linalg-multi-dot"]], "torch.linalg.solve_ex": [[1255, "torch-linalg-solve-ex"]], "torch.lobpcg": [[1266, "torch-lobpcg"]], "torch.linalg.qr": [[1252, "torch-linalg-qr"]], "torch.linalg.svdvals": [[1258, "torch-linalg-svdvals"]], "torch.histogram": [[1155, "torch-histogram"]], "torch.gather": [[1136, "torch-gather"]], "torch.hsplit": [[1157, "torch-hsplit"]], "torch.func.vjp": [[1134, "torch-func-vjp"]], "torch.get_default_dtype": [[1141, "torch-get-default-dtype"]], "torch.get_rng_state": [[1146, "torch-get-rng-state"]], "torch.imag": [[1164, "torch-imag"]], "torch.hstack": [[1159, "torch-hstack"]], "torch.histogramdd": [[1156, "torch-histogramdd"]], "torch.index_select": [[1168, "torch-index-select"]], "torch.hann_window": [[1152, "torch-hann-window"]], "torch.hspmm": [[1158, "torch-hspmm"]], "torch.func.jacfwd": [[1128, "torch-func-jacfwd"]], "torch.geqrf": [[1139, "torch-geqrf"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1175, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.igammac": [[1163, "torch-igammac"]], "torch.get_deterministic_debug_mode": [[1142, "torch-get-deterministic-debug-mode"]], "torch.heaviside": [[1153, "torch-heaviside"]], "torch.ger": [[1140, "torch-ger"]], "torch.gcd": [[1137, "torch-gcd"]], "torch.func.hessian": [[1127, "torch-func-hessian"]], "torch.igamma": [[1162, "torch-igamma"]], "inference_mode": [[1169, "inference-mode"]], "torch.inverse": [[1172, "torch-inverse"]], "torch.func.stack_module_state": [[1133, "torch-func-stack-module-state"]], "torch.index_add": [[1165, "torch-index-add"]], "torch.is_conj": [[1174, "torch-is-conj"]], "torch.index_reduce": [[1167, "torch-index-reduce"]], "torch.gradient": [[1147, "torch-gradient"]], "torch.greater_equal": [[1149, "torch-greater-equal"]], "torch.greater": [[1148, "torch-greater"]], "torch.histc": [[1154, "torch-histc"]], "torch.is_complex": [[1173, "torch-is-complex"]], "torch.i0": [[1161, "torch-i0"]], "torch.ge": [[1138, "torch-ge"]], "torch.hypot": [[1160, "torch-hypot"]], "torch.index_copy": [[1166, "torch-index-copy"]], "torch.func.jacrev": [[1129, "torch-func-jacrev"]], "torch.func.vmap": [[1135, "torch-func-vmap"]], "torch.initial_seed": [[1170, "torch-initial-seed"]], "torch.inner": [[1171, "torch-inner"]], "torch.get_num_interop_threads": [[1144, "torch-get-num-interop-threads"]], "torch.func.jvp": [[1130, "torch-func-jvp"]], "torch.func.linearize": [[1131, "torch-func-linearize"]], "torch.get_num_threads": [[1145, "torch-get-num-threads"]], "torch.get_float32_matmul_precision": [[1143, "torch-get-float32-matmul-precision"]], "torch.hamming_window": [[1151, "torch-hamming-window"]], "torch.gt": [[1150, "torch-gt"]], "torch.func.replace_all_batch_norm_modules_": [[1132, "torch-func-replace-all-batch-norm-modules"]], "torch.nn.functional": [[1891, "torch-nn-functional"]], "Convolution functions": [[1891, "convolution-functions"]], "Pooling functions": [[1891, "pooling-functions"]], "Attention Mechanisms": [[1891, "attention-mechanisms"]], "Non-linear activation functions": [[1891, "non-linear-activation-functions"]], "Linear functions": [[1891, "linear-functions"]], "Dropout functions": [[1891, "dropout-functions"]], "Sparse functions": [[1891, "sparse-functions"]], "Distance functions": [[1891, "distance-functions"]], "Loss functions": [[1891, "loss-functions"]], "Vision functions": [[1891, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1891, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1891, "data-parallel"]], "TorchScript Language Reference": [[1874, "torchscript-language-reference"], [1873, "torchscript-language-reference"]], "Terminology": [[1874, "terminology"]], "Type System": [[1874, "id1"]], "TorchScript Types": [[1874, "torchscript-types"]], "Meta Types": [[1874, "meta-types"]], "Any Type": [[1874, "any-type"]], "Operators Supported for Any Type": [[1874, "operators-supported-for-any-type"]], "Design Notes": [[1874, "design-notes"], [1924, "design-notes"]], "Primitive Types": [[1874, "primitive-types"]], "Structural Types": [[1874, "structural-types"]], "Nominal Types": [[1874, "nominal-types"]], "Built-in Class": [[1874, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1874, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1874, "custom-class"]], "Enum Type": [[1874, "enum-type"]], "TorchScript Module Class": [[1874, "torchscript-module-class"]], "Module Instance Class": [[1874, "module-instance-class"]], "Type Annotation": [[1874, "type-annotation"]], "When to Annotate Types": [[1874, "when-to-annotate-types"]], "Annotate Function Signature": [[1874, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1874, "annotate-variables-and-data-attributes"]], "Local Variables": [[1874, "local-variables"]], "Instance Data Attributes": [[1874, "instance-data-attributes"]], "Type Annotation APIs": [[1874, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1874, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1874, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1874, "torchscript-type-system-definition"]], "Unsupported Typing Constructs": [[1874, "unsupported-typing-constructs"], [1873, "unsupported-typing-constructs"]], "Expressions": [[1874, "expressions"], [1873, "expressions"]], "Arithmetic Conversions": [[1874, "arithmetic-conversions"]], "Atoms": [[1874, "atoms"]], "Identifiers": [[1874, "identifiers"]], "Literals": [[1874, "literals"], [1873, "literals"]], "Parenthesized Forms": [[1874, "parenthesized-forms"]], "List and Dictionary Displays": [[1874, "list-and-dictionary-displays"]], "Primaries": [[1874, "primaries"]], "Attribute References": [[1874, "attribute-references"]], "Subscriptions": [[1874, "subscriptions"]], "Slicings": [[1874, "slicings"]], "Calls": [[1874, "calls"]], "Power Operator": [[1874, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1874, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1874, "binary-arithmetic-operations"]], "Shifting Operations": [[1874, "shifting-operations"]], "Binary Bitwise Operations": [[1874, "binary-bitwise-operations"]], "Comparisons": [[1874, "comparisons"], [1942, "comparisons"]], "Value Comparisons": [[1874, "value-comparisons"]], "Membership Test Operations": [[1874, "membership-test-operations"]], "Identity Comparisons": [[1874, "identity-comparisons"]], "Boolean Operations": [[1874, "boolean-operations"]], "Conditional Expressions": [[1874, "conditional-expressions"]], "Expression Lists": [[1874, "expression-lists"]], "Simple Statements": [[1874, "simple-statements"]], "Expression Statements": [[1874, "expression-statements"]], "Assignment Statements": [[1874, "assignment-statements"]], "Augmented Assignment Statements": [[1874, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1874, "annotated-assignment-statements"]], "The raise Statement": [[1874, "the-raise-statement"]], "The assert Statement": [[1874, "the-assert-statement"]], "The return Statement": [[1874, "the-return-statement"]], "The del Statement": [[1874, "the-del-statement"]], "The pass Statement": [[1874, "the-pass-statement"]], "The print Statement": [[1874, "the-print-statement"]], "The break Statement": [[1874, "the-break-statement"]], "The continue Statement:": [[1874, "the-continue-statement"]], "Compound Statements": [[1874, "compound-statements"]], "The if Statement": [[1874, "the-if-statement"]], "Basic if/else Statement": [[1874, "basic-if-else-statement"]], "Ternary if/else Statement": [[1874, "ternary-if-else-statement"]], "The while Statement": [[1874, "the-while-statement"]], "The for-in Statement": [[1874, "the-for-in-statement"]], "The with Statement": [[1874, "the-with-statement"]], "The tuple Statement": [[1874, "the-tuple-statement"]], "The getattr Statement": [[1874, "the-getattr-statement"]], "The hasattr Statement": [[1874, "the-hasattr-statement"]], "The zip Statement": [[1874, "the-zip-statement"]], "The enumerate Statement": [[1874, "the-enumerate-statement"]], "Python Values": [[1874, "python-values"]], "Resolution Rules": [[1874, "resolution-rules"]], "Python Built-in Functions Support": [[1874, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1874, "id5"]], "Python Built-in Values Support": [[1874, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1874, "id6"]], "torch.* APIs": [[1874, "torch-apis"]], "Remote Procedure Calls": [[1874, "remote-procedure-calls"]], "Asynchronous Execution": [[1874, "asynchronous-execution"]], "Type Annotations": [[1874, "type-annotations"]], "Meta Programming": [[1874, "meta-programming"]], "Type Refinement": [[1874, "type-refinement"]], "Frequently Asked Questions": [[1901, "frequently-asked-questions"], [1871, "frequently-asked-questions"], [7, "frequently-asked-questions"], [1912, "frequently-asked-questions"], [1919, "frequently-asked-questions"], [1947, "frequently-asked-questions"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1901, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1901, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1901, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1901, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1901, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "torch.nested": [[1889, "module-torch.nested"]], "Construction": [[1889, "construction"], [1928, "construction"]], "size": [[1889, "size"]], "unbind": [[1889, "unbind"]], "Nested tensor constructor and conversion functions": [[1889, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1889, "supported-operations"], [1928, "supported-operations"]], "torch.vmap": [[1862, "torch-vmap"]], "Broadcasting semantics": [[1895, "broadcasting-semantics"]], "General semantics": [[1895, "general-semantics"]], "In-place semantics": [[1895, "in-place-semantics"]], "Backwards compatibility": [[1895, "backwards-compatibility"]], "torch.vstack": [[1864, "torch-vstack"]], "JIT Utils - torch.utils.jit": [[1877, "module-torch.utils.jit"]], "Multiprocessing best practices": [[1907, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1907, "cuda-in-multiprocessing"]], "Best practices and tips": [[1907, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1907, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1907, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1907, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1907, "hogwild"]], "CPU in multiprocessing": [[1907, "cpu-in-multiprocessing"]], "CPU oversubscription": [[1907, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[1907, "avoid-cpu-oversubscription"]], "Named Tensors operator coverage": [[1887, "named-tensors-operator-coverage"]], "Supported Operations": [[1887, "id1"]], "Keeps input names": [[1887, "keeps-input-names"]], "Removes dimensions": [[1887, "removes-dimensions"]], "Unifies names from inputs": [[1887, "unifies-names-from-inputs"]], "Permutes dimensions": [[1887, "permutes-dimensions"]], "Contracts away dims": [[1887, "contracts-away-dims"]], "Factory functions": [[1887, "factory-functions"]], "out function and in-place variants": [[1887, "out-function-and-in-place-variants"]], "torch.nn.init": [[1892, "torch-nn-init"]], "torch._logging": [[1880, "torch-logging"]], "TorchScript Builtins": [[1872, "torchscript-builtins"]], "Supported Tensor Methods": [[1872, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1872, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1872, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1872, "python-built-in-functions"]], "math Module": [[1872, "math-module"]], "HIP (ROCm) semantics": [[1903, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1903, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1903, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1903, "tensorfloat-32-tf32-on-rocm"]], "Memory management": [[1903, "memory-management"], [1897, "memory-management"], [16, "memory-management"]], "hipFFT/rocFFT plan cache": [[1903, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1903, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1903, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1903, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1903, "enabling-kernel-asserts"]], "Distributed Data Parallel": [[1898, "distributed-data-parallel"]], "Example": [[1898, "example"], [1899, "example"]], "Internal Design": [[1898, "internal-design"]], "Implementation": [[1898, "implementation"], [1926, "implementation"]], "ProcessGroup": [[1898, "processgroup"]], "TorchDynamo DDPOptimizer": [[1898, "id1"]], "TorchScript Unsupported PyTorch Constructs": [[1876, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1876, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1876, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1876, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1876, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1876, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1876, "pytorch-unsupported-modules-and-classes"]], "torch.hub": [[1869, "torch-hub"]], "Publishing models": [[1869, "publishing-models"]], "How to implement an entrypoint?": [[1869, "how-to-implement-an-entrypoint"]], "Important Notice": [[1869, "important-notice"]], "Loading models from Hub": [[1869, "loading-models-from-hub"]], "Running a loaded model:": [[1869, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1869, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1869, "caching-logic"]], "Known limitations:": [[1869, "known-limitations"]], "Named Tensors": [[1888, "named-tensors"]], "Creating named tensors": [[1888, "creating-named-tensors"]], "Named dimensions": [[1888, "named-dimensions"]], "Name propagation semantics": [[1888, "name-propagation-semantics"]], "match semantics": [[1888, "match-semantics"]], "Basic name inference rules": [[1888, "basic-name-inference-rules"]], "Explicit alignment by names": [[1888, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1888, "manipulating-dimensions"]], "Autograd support": [[1888, "autograd-support"]], "Currently supported operations and subsystems": [[1888, "currently-supported-operations-and-subsystems"]], "Operators": [[1888, "operators"]], "Subsystems": [[1888, "subsystems"]], "Named tensor API reference": [[1888, "named-tensor-api-reference"]], "Serialization semantics": [[1910, "serialization-semantics"]], "Table of Contents": [[1910, "table-of-contents"]], "Saving and loading tensors": [[1910, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1910, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1910, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1910, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1910, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1910, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1910, "torch-full-always-inferring-a-float-dtype"]], "Utility functions": [[1910, "utility-functions"], [1922, "utility-functions"]], "torch.library": [[1878, "torch-library"]], "CPU threading and TorchScript inference": [[1896, "cpu-threading-and-torchscript-inference"]], "Build options": [[1896, "build-options"]], "Runtime API": [[1896, "runtime-api"]], "Tuning the number of threads": [[1896, "tuning-the-number-of-threads"]], "TorchScript": [[1871, "torchscript"]], "Creating TorchScript Code": [[1871, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1871, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1871, "torchscript-language"]], "Built-in Functions and Modules": [[1871, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1871, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1871, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1871, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1871, "disable-jit-for-debugging"]], "Inspecting Code": [[1871, "inspecting-code"]], "Interpreting Graphs": [[1871, "interpreting-graphs"]], "Tracer": [[1871, "tracer"]], "Tracing Edge Cases": [[1871, "tracing-edge-cases"]], "Automatic Trace Checking": [[1871, "automatic-trace-checking"]], "Tracer Warnings": [[1871, "tracer-warnings"]], "Known Issues": [[1871, "known-issues"]], "Appendix": [[1871, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1871, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1871, "modules"], [1905, "modules"]], "Functions": [[1871, "functions"], [1873, "functions"], [1912, "functions"], [1929, "functions"], [1958, "functions"]], "TorchScript Classes": [[1871, "torchscript-classes"], [1873, "id2"]], "Attributes": [[1871, "attributes"]], "Constants": [[1871, "constants"]], "Variables": [[1871, "variables"], [1873, "variables"], [1950, "variables"]], "Fusion Backends": [[1871, "fusion-backends"]], "References": [[1871, "references"]], "Reproducibility": [[1909, "reproducibility"]], "Controlling sources of randomness": [[1909, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1909, "pytorch-random-number-generator"]], "Python": [[1909, "python"]], "Random number generators in other libraries": [[1909, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1909, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1909, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1909, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1909, "cuda-rnn-and-lstm"]], "DataLoader": [[1909, "dataloader"]], "torch.linalg": [[1879, "torch-linalg"]], "Matrix Properties": [[1879, "matrix-properties"]], "Decompositions": [[1879, "decompositions"]], "Solvers": [[1879, "solvers"]], "Inverses": [[1879, "inverses"]], "Matrix Functions": [[1879, "matrix-functions"]], "Matrix Products": [[1879, "matrix-products"]], "Tensor Operations": [[1879, "tensor-operations"]], "Misc": [[1879, "misc"]], "Experimental Functions": [[1879, "experimental-functions"]], "torch.nn": [[1890, "module-torch.nn"], [1890, "id1"]], "Containers": [[1890, "containers"]], "Convolution Layers": [[1890, "convolution-layers"]], "Pooling layers": [[1890, "pooling-layers"]], "Padding Layers": [[1890, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1890, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1890, "non-linear-activations-other"]], "Normalization Layers": [[1890, "normalization-layers"]], "Recurrent Layers": [[1890, "recurrent-layers"]], "Transformer Layers": [[1890, "transformer-layers"]], "Linear Layers": [[1890, "linear-layers"]], "Dropout Layers": [[1890, "dropout-layers"]], "Sparse Layers": [[1890, "sparse-layers"]], "Distance Functions": [[1890, "distance-functions"]], "Loss Functions": [[1890, "loss-functions"]], "Vision Layers": [[1890, "vision-layers"]], "Shuffle Layers": [[1890, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1890, "module-torch.nn.parallel"]], "Utilities": [[1890, "module-torch.nn.utils"], [1936, "utilities"]], "Quantized Functions": [[1890, "quantized-functions"]], "Lazy Modules Initialization": [[1890, "lazy-modules-initialization"]], "torch.where": [[1865, "torch-where"]], "Python Language Reference Coverage": [[1875, "python-language-reference-coverage"]], "torch.utils.mobile_optimizer": [[1882, "torch-utils-mobile-optimizer"]], "torch.zeros": [[1867, "torch-zeros"]], "CUDA semantics": [[1897, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1897, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1897, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1897, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1897, "asynchronous-execution"]], "CUDA streams": [[1897, "cuda-streams"]], "Stream semantics of backward passes": [[1897, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1897, "bc-note-using-grads-on-the-default-stream"]], "Environment variables": [[1897, "environment-variables"]], "Using custom memory allocators for CUDA": [[1897, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1897, "cublas-workspaces"]], "cuFFT plan cache": [[1897, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1897, "just-in-time-compilation"]], "Best practices": [[1897, "best-practices"]], "Device-agnostic code": [[1897, "device-agnostic-code"]], "Use pinned memory buffers": [[1897, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1897, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1897, "cuda-graphs"]], "Why CUDA Graphs?": [[1897, "why-cuda-graphs"]], "PyTorch API": [[1897, "pytorch-api"]], "Constraints": [[1897, "constraints"], [29, "module-torch.distributions.constraints"]], "Non-constraints": [[1897, "non-constraints"]], "Whole-network capture": [[1897, "whole-network-capture"]], "Partial-network capture": [[1897, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1897, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1897, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1897, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1897, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1897, "id5"]], "Graph memory management": [[1897, "graph-memory-management"]], "Sharing memory across captures": [[1897, "sharing-memory-across-captures"]], "MPS backend": [[1906, "mps-backend"]], "torch.utils.model_zoo": [[1883, "torch-utils-model-zoo"]], "torch.monitor": [[1884, "torch-monitor"]], "Multiprocessing package - torch.multiprocessing": [[1886, "module-torch.multiprocessing"]], "Strategy management": [[1886, "strategy-management"]], "Sharing CUDA tensors": [[1886, "sharing-cuda-tensors"]], "Sharing strategies": [[1886, "sharing-strategies"]], "File descriptor - file_descriptor": [[1886, "file-descriptor-file-descriptor"]], "File system - file_system": [[1886, "file-system-file-system"]], "Spawning subprocesses": [[1886, "spawning-subprocesses"]], "torch.xlogy": [[1866, "torch-xlogy"]], "Types": [[1873, "supported-type"], [1912, "types"]], "Default Types": [[1873, "default-types"]], "Optional Type Refinement": [[1873, "optional-type-refinement"]], "TorchScript Enums": [[1873, "id4"]], "Named Tuples": [[1873, "named-tuples"]], "Iterables": [[1873, "iterables"]], "List Construction": [[1873, "list-construction"]], "Tuple Construction": [[1873, "tuple-construction"]], "Dict Construction": [[1873, "dict-construction"]], "Arithmetic Operators": [[1873, "arithmetic-operators"]], "Comparison Operators": [[1873, "comparison-operators"]], "Logical Operators": [[1873, "logical-operators"]], "Subscripts and Slicing": [[1873, "subscripts-and-slicing"]], "Function Calls": [[1873, "function-calls"]], "Method Calls": [[1873, "method-calls"]], "Ternary Expressions": [[1873, "ternary-expressions"]], "Casts": [[1873, "casts"]], "Accessing Module Parameters": [[1873, "accessing-module-parameters"]], "Statements": [[1873, "statements"]], "Simple Assignments": [[1873, "simple-assignments"]], "Pattern Matching Assignments": [[1873, "pattern-matching-assignments"]], "Print Statements": [[1873, "print-statements"]], "If Statements": [[1873, "if-statements"]], "While Loops": [[1873, "while-loops"]], "For loops with range": [[1873, "for-loops-with-range"]], "For loops over tuples": [[1873, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1873, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1873, "break-and-continue"]], "Return": [[1873, "return"]], "Variable Resolution": [[1873, "variable-resolution"]], "Use of Python Values": [[1873, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[1873, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1873, "python-defined-constants"]], "Module Attributes": [[1873, "module-attributes"]], "torch.masked": [[1881, "torch-masked"]], "Motivation": [[1881, "motivation"], [1946, "motivation"], [1945, "motivation"]], "What is a MaskedTensor?": [[1881, "what-is-a-maskedtensor"]], "Supported Operators": [[1881, "supported-operators"]], "Unary Operators": [[1881, "unary-operators"]], "Binary Operators": [[1881, "binary-operators"]], "Reductions": [[1881, "reductions"]], "View and select functions": [[1881, "view-and-select-functions"]], "CUDA Automatic Mixed Precision examples": [[1893, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1893, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1893, "working-with-unscaled-gradients"]], "Gradient clipping": [[1893, "gradient-clipping"]], "Working with Scaled Gradients": [[1893, "working-with-scaled-gradients"]], "Gradient accumulation": [[1893, "gradient-accumulation"]], "Gradient penalty": [[1893, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1893, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1893, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1893, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1893, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1893, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1893, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1893, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1893, "functions-that-need-a-particular-dtype"]], "A Simple Custom Module": [[1905, "a-simple-custom-module"]], "Modules as Building Blocks": [[1905, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1905, "neural-network-training-with-modules"]], "Module State": [[1905, "module-state"]], "Module Initialization": [[1905, "module-initialization"]], "Module Hooks": [[1905, "module-hooks"]], "Advanced Features": [[1905, "advanced-features"]], "Distributed Training": [[1905, "distributed-training"]], "Profiling Performance": [[1905, "profiling-performance"]], "Improving Performance with Quantization": [[1905, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1905, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1905, "parametrizations"]], "Transforming Modules with FX": [[1905, "transforming-modules-with-fx"]], "Numerical accuracy": [[1908, "numerical-accuracy"]], "Batched computations or slice computations": [[1908, "batched-computations-or-slice-computations"]], "Extremal values": [[1908, "extremal-values"]], "Linear algebra (torch.linalg)": [[1908, "linear-algebra-torch-linalg"]], "Non-finite values": [[1908, "non-finite-values"]], "Extremal values in linalg": [[1908, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1908, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1908, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1908, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "Extending torch.func with autograd.Function": [[1900, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1900, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1900, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1900, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1900, "limitations-and-gotchas"]], "torch.vmap() Support": [[1900, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1900, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1900, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1900, "torch-func-jvp-support"]], "torch.vsplit": [[1863, "torch-vsplit"]], "PyTorch documentation": [[1870, "pytorch-documentation"]], "Community": [[1870, null]], "Developer Notes": [[1870, null]], "Language Bindings": [[1870, null]], "Python API": [[1870, null]], "Libraries": [[1870, null]], "Indices and tables": [[1870, "indices-and-tables"]], "Autograd mechanics": [[1894, "autograd-mechanics"]], "How autograd encodes the history": [[1894, "how-autograd-encodes-the-history"]], "Saved tensors": [[1894, "saved-tensors"]], "Gradients for non-differentiable functions": [[1894, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[1894, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [1936, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[1894, "setting-requires-grad"]], "Grad Modes": [[1894, "grad-modes"]], "Default Mode (Grad Mode)": [[1894, "default-mode-grad-mode"]], "No-grad Mode": [[1894, "no-grad-mode"]], "Inference Mode": [[1894, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1894, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1894, "in-place-operations-with-autograd"]], "In-place correctness checks": [[1894, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[1894, "multithreaded-autograd"]], "Concurrency on CPU": [[1894, "concurrency-on-cpu"]], "Non-determinism": [[1894, "non-determinism"]], "Graph retaining": [[1894, "graph-retaining"]], "Thread Safety on Autograd Node": [[1894, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1894, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1894, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1894, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1894, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1894, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1894, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1894, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1894, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1894, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1894, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1894, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1894, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1894, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1894, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1894, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1894, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "torch.mps": [[1885, "module-torch.mps"]], "MPS Profiler": [[1885, "mps-profiler"]], "MPS Event": [[1885, "mps-event"]], "Features for large-scale deployments": [[1904, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1904, "fleet-wide-operator-profiling"]], "API usage logging": [[1904, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1904, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1904, "build-environment-considerations"]], "Common extension points": [[1904, "common-extension-points"]], "Gradcheck mechanics": [[1902, "gradcheck-mechanics"]], "Notations and background information": [[1902, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1902, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1902, "real-to-real-functions"]], "Default real input numerical evaluation": [[1902, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1902, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1902, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1902, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1902, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1902, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1902, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1902, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1902, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1902, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1902, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1902, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1902, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1902, "gradgradcheck-implementation"]], "Extending PyTorch": [[1899, "extending-pytorch"]], "Extending torch.autograd": [[1899, "extending-torch-autograd"]], "When to use": [[1899, "when-to-use"]], "When not to use": [[1899, "when-not-to-use"]], "How to use": [[1899, "how-to-use"]], "Combined or separate forward() and setup_context()": [[1899, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1899, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1899, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1899, "extending-torch-nn"]], "Adding a Module": [[1899, "adding-a-module"]], "Extending torch Python API": [[1899, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1899, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1899, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1899, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1899, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1899, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1899, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1899, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1899, "writing-custom-c-extensions"]], "torch.zeros_like": [[1868, "torch-zeros-like"]], "torch.erfinv": [[1076, "torch-erfinv"]], "torch.cuda.reset_peak_memory_stats": [[1033, "torch-cuda-reset-peak-memory-stats"]], "torch.diagonal": [[1057, "torch-diagonal"]], "torch.equal": [[1073, "torch-equal"]], "torch.diag_embed": [[1055, "torch-diag-embed"]], "torch.cuda.seed": [[1034, "torch-cuda-seed"]], "torch.cummax": [[1046, "torch-cummax"]], "torch.cumulative_trapezoid": [[1050, "torch-cumulative-trapezoid"]], "torch.empty_like": [[1069, "torch-empty-like"]], "torch.cuda.set_device": [[1036, "torch-cuda-set-device"]], "enable_grad": [[1071, "enable-grad"]], "torch.exp": [[1077, "torch-exp"]], "torch.det": [[1053, "torch-det"]], "torch.diagonal_scatter": [[1058, "torch-diagonal-scatter"]], "torch.empty": [[1068, "torch-empty"]], "torch.cuda.reset_max_memory_allocated": [[1031, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.set_rng_state_all": [[1039, "torch-cuda-set-rng-state-all"]], "torch.div": [[1062, "torch-div"]], "torch.cumsum": [[1049, "torch-cumsum"]], "torch.divide": [[1063, "torch-divide"]], "torch.diagflat": [[1056, "torch-diagflat"]], "torch.cuda.stream": [[1042, "torch-cuda-stream"]], "torch.cuda.utilization": [[1045, "torch-cuda-utilization"]], "torch.eq": [[1072, "torch-eq"]], "torch.cumprod": [[1048, "torch-cumprod"]], "torch.cuda.set_per_process_memory_fraction": [[1037, "torch-cuda-set-per-process-memory-fraction"]], "torch.cuda.temperature": [[1044, "torch-cuda-temperature"]], "torch.empty_strided": [[1070, "torch-empty-strided"]], "torch.cuda.set_sync_debug_mode": [[1041, "torch-cuda-set-sync-debug-mode"]], "torch.diff": [[1059, "torch-diff"]], "torch.cuda.set_rng_state": [[1038, "torch-cuda-set-rng-state"]], "torch.cuda.power_draw": [[1030, "torch-cuda-power-draw"]], "torch.dequantize": [[1052, "torch-dequantize"]], "torch.diag": [[1054, "torch-diag"]], "torch.cummin": [[1047, "torch-cummin"]], "torch.deg2rad": [[1051, "torch-deg2rad"]], "torch.erfc": [[1075, "torch-erfc"]], "torch.digamma": [[1060, "torch-digamma"]], "torch.einsum": [[1067, "torch-einsum"]], "torch.erf": [[1074, "torch-erf"]], "torch.dsplit": [[1065, "torch-dsplit"]], "torch.cuda.reset_max_memory_cached": [[1032, "torch-cuda-reset-max-memory-cached"]], "torch.dot": [[1064, "torch-dot"]], "torch.cuda.synchronize": [[1043, "torch-cuda-synchronize"]], "torch.dist": [[1061, "torch-dist"]], "torch.cuda.nvtx.range_push": [[1029, "torch-cuda-nvtx-range-push"]], "torch.dstack": [[1066, "torch-dstack"]], "torch.cuda.set_stream": [[1040, "torch-cuda-set-stream"]], "torch.cuda.seed_all": [[1035, "torch-cuda-seed-all"]], "torch.kthvalue": [[1215, "torch-kthvalue"]], "torch.jit.onednn_fusion_enabled": [[1202, "torch-jit-onednn-fusion-enabled"]], "ScriptModule": [[1194, "scriptmodule"]], "torch.istft": [[1191, "torch-istft"]], "torch.ldexp": [[1217, "torch-ldexp"]], "torch.is_inference_mode_enabled": [[1178, "torch-is-inference-mode-enabled"]], "torch.is_warn_always_enabled": [[1182, "torch-is-warn-always-enabled"]], "strict_fusion": [[1208, "strict-fusion"]], "torch.jit.script": [[1205, "torch-jit-script"]], "torch.jit.trace_module": [[1210, "torch-jit-trace-module"]], "torch.isposinf": [[1189, "torch-isposinf"]], "torch.jit.set_fusion_strategy": [[1207, "torch-jit-set-fusion-strategy"]], "torch.is_tensor": [[1181, "torch-is-tensor"]], "torch.is_storage": [[1180, "torch-is-storage"]], "torch.jit.load": [[1201, "torch-jit-load"]], "torch.isinf": [[1186, "torch-isinf"]], "torch.jit.save": [[1204, "torch-jit-save"]], "torch.less_equal": [[1221, "torch-less-equal"]], "torch.isclose": [[1183, "torch-isclose"]], "torch.jit.script_if_tracing": [[1206, "torch-jit-script-if-tracing"]], "torch.kron": [[1214, "torch-kron"]], "torch.lerp": [[1219, "torch-lerp"]], "Attribute": [[1192, "attribute"]], "torch.jit.optimize_for_inference": [[1203, "torch-jit-optimize-for-inference"]], "torch.is_nonzero": [[1179, "torch-is-nonzero"]], "torch.isin": [[1185, "torch-isin"]], "torch.less": [[1220, "torch-less"]], "torch.lcm": [[1216, "torch-lcm"]], "torch.isneginf": [[1188, "torch-isneginf"]], "ScriptFunction": [[1193, "scriptfunction"]], "torch.is_grad_enabled": [[1177, "torch-is-grad-enabled"]], "torch.jit.annotate": [[1195, "torch-jit-annotate"]], "torch.kaiser_window": [[1213, "torch-kaiser-window"]], "torch.jit.fork": [[1197, "torch-jit-fork"]], "torch.isnan": [[1187, "torch-isnan"]], "torch.jit.freeze": [[1198, "torch-jit-freeze"]], "torch.isreal": [[1190, "torch-isreal"]], "torch.jit.ignore": [[1199, "torch-jit-ignore"]], "torch.linalg.cholesky": [[1223, "torch-linalg-cholesky"]], "torch.linalg.cholesky_ex": [[1224, "torch-linalg-cholesky-ex"]], "torch.jit.enable_onednn_fusion": [[1196, "torch-jit-enable-onednn-fusion"]], "torch.jit.trace": [[1209, "torch-jit-trace"]], "torch.jit.isinstance": [[1200, "torch-jit-isinstance"]], "torch.lgamma": [[1222, "torch-lgamma"]], "torch.jit.unused": [[1211, "torch-jit-unused"]], "torch.is_floating_point": [[1176, "torch-is-floating-point"]], "torch.le": [[1218, "torch-le"]], "torch.isfinite": [[1184, "torch-isfinite"]], "torch.jit.wait": [[1212, "torch-jit-wait"]], "torch.expm1": [[1079, "torch-expm1"]], "torch.func.grad_and_value": [[1126, "torch-func-grad-and-value"]], "torch.flipud": [[1109, "torch-flipud"]], "torch.fft.fftshift": [[1087, "torch-fft-fftshift"]], "torch.flip": [[1107, "torch-flip"]], "torch.fmin": [[1114, "torch-fmin"]], "torch.full": [[1121, "torch-full"]], "torch.fft.rfft2": [[1102, "torch-fft-rfft2"]], "torch.from_numpy": [[1119, "torch-from-numpy"]], "torch.func.functional_call": [[1123, "torch-func-functional-call"]], "torch.fft.rfft": [[1101, "torch-fft-rfft"]], "torch.eye": [[1080, "torch-eye"]], "torch.fft.rfftn": [[1104, "torch-fft-rfftn"]], "torch.from_dlpack": [[1118, "torch-from-dlpack"]], "torch.func.functionalize": [[1124, "torch-func-functionalize"]], "torch.fft.hfft2": [[1089, "torch-fft-hfft2"]], "torch.fmod": [[1115, "torch-fmod"]], "torch.func.grad": [[1125, "torch-func-grad"]], "torch.fft.irfft": [[1098, "torch-fft-irfft"]], "torch.fft.irfftn": [[1100, "torch-fft-irfftn"]], "torch.float_power": [[1110, "torch-float-power"]], "torch.fft.rfftfreq": [[1103, "torch-fft-rfftfreq"]], "torch.fft.irfft2": [[1099, "torch-fft-irfft2"]], "torch.frac": [[1116, "torch-frac"]], "torch.fake_quantize_per_tensor_affine": [[1082, "torch-fake-quantize-per-tensor-affine"]], "torch.fmax": [[1113, "torch-fmax"]], "torch.fake_quantize_per_channel_affine": [[1081, "torch-fake-quantize-per-channel-affine"]], "torch.fft.fftn": [[1086, "torch-fft-fftn"]], "torch.fft.fft2": [[1084, "torch-fft-fft2"]], "torch.floor": [[1111, "torch-floor"]], "torch.exp2": [[1078, "torch-exp2"]], "torch.fliplr": [[1108, "torch-fliplr"]], "torch.flatten": [[1106, "torch-flatten"]], "torch.fft.ifft": [[1091, "torch-fft-ifft"]], "torch.full_like": [[1122, "torch-full-like"]], "torch.fft.ihfft": [[1095, "torch-fft-ihfft"]], "torch.frexp": [[1117, "torch-frexp"]], "torch.fft.ifftn": [[1093, "torch-fft-ifftn"]], "torch.fft.ihfft2": [[1096, "torch-fft-ihfft2"]], "torch.frombuffer": [[1120, "torch-frombuffer"]], "torch.fft.fft": [[1083, "torch-fft-fft"]], "torch.fft.hfft": [[1088, "torch-fft-hfft"]], "torch.fft.ihfftn": [[1097, "torch-fft-ihfftn"]], "torch.fft.fftfreq": [[1085, "torch-fft-fftfreq"]], "torch.fix": [[1105, "torch-fix"]], "torch.fft.hfftn": [[1090, "torch-fft-hfftn"]], "torch.floor_divide": [[1112, "torch-floor-divide"]], "torch.fft.ifftshift": [[1094, "torch-fft-ifftshift"]], "torch.fft.ifft2": [[1092, "torch-fft-ifft2"]], "torch.cuda.comm.broadcast_coalesced": [[981, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.list_gpu_processes": [[1012, "torch-cuda-list-gpu-processes"]], "torch.cuda.nvtx.range_pop": [[1028, "torch-cuda-nvtx-range-pop"]], "torch.cuda.get_rng_state": [[999, "torch-cuda-get-rng-state"]], "torch.cuda.comm.broadcast": [[980, "torch-cuda-comm-broadcast"]], "torch.cuda.empty_cache": [[992, "torch-cuda-empty-cache"]], "torch.cuda.default_stream": [[988, "torch-cuda-default-stream"]], "torch.cuda.max_memory_reserved": [[1018, "torch-cuda-max-memory-reserved"]], "torch.cuda.memory_snapshot": [[1023, "torch-cuda-memory-snapshot"]], "torch.cuda.is_initialized": [[1009, "torch-cuda-is-initialized"]], "torch.cuda.get_device_capability": [[995, "torch-cuda-get-device-capability"]], "torch.cuda.memory_reserved": [[1022, "torch-cuda-memory-reserved"]], "torch.cuda.current_device": [[986, "torch-cuda-current-device"]], "torch.cuda.get_rng_state_all": [[1000, "torch-cuda-get-rng-state-all"]], "graph": [[1002, "graph"]], "torch.cuda.jiterator._create_jit_fn": [[1010, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.manual_seed": [[1014, "torch-cuda-manual-seed"]], "torch.cuda.memory_stats": [[1024, "torch-cuda-memory-stats"]], "torch.cuda.nvtx.mark": [[1027, "torch-cuda-nvtx-mark"]], "device_of": [[991, "device-of"]], "torch.cuda.current_stream": [[987, "torch-cuda-current-stream"]], "torch.cuda.is_current_stream_capturing": [[1008, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1011, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.memory_allocated": [[1020, "torch-cuda-memory-allocated"]], "torch.cuda.comm.gather": [[982, "torch-cuda-comm-gather"]], "torch.cuda.get_gencode_flags": [[998, "torch-cuda-get-gencode-flags"]], "torch.cuda.current_blas_handle": [[985, "torch-cuda-current-blas-handle"]], "torch.cuda.memory_cached": [[1021, "torch-cuda-memory-cached"]], "torch.cuda.get_arch_list": [[994, "torch-cuda-get-arch-list"]], "torch.cuda.graph_pool_handle": [[1003, "torch-cuda-graph-pool-handle"]], "device": [[989, "device"]], "torch.cuda.init": [[1004, "torch-cuda-init"]], "torch.cuda.get_device_name": [[996, "torch-cuda-get-device-name"]], "torch.cuda.memory_summary": [[1025, "torch-cuda-memory-summary"]], "torch.cuda.get_device_properties": [[997, "torch-cuda-get-device-properties"]], "torch.cuda.comm.scatter": [[984, "torch-cuda-comm-scatter"]], "torch.cuda.mem_get_info": [[1019, "torch-cuda-mem-get-info"]], "torch.cuda.device_count": [[990, "torch-cuda-device-count"]], "torch.cuda.initial_seed": [[1005, "torch-cuda-initial-seed"]], "torch.cuda.ipc_collect": [[1006, "torch-cuda-ipc-collect"]], "torch.cuda.max_memory_allocated": [[1016, "torch-cuda-max-memory-allocated"]], "torch.cuda.comm.reduce_add": [[983, "torch-cuda-comm-reduce-add"]], "torch.cuda.manual_seed_all": [[1015, "torch-cuda-manual-seed-all"]], "torch.cuda.is_available": [[1007, "torch-cuda-is-available"]], "torch.cuda.max_memory_cached": [[1017, "torch-cuda-max-memory-cached"]], "torch.cuda.get_sync_debug_mode": [[1001, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.make_graphed_callables": [[1013, "torch-cuda-make-graphed-callables"]], "torch.cuda.get_allocator_backend": [[993, "torch-cuda-get-allocator-backend"]], "torch.cuda.memory_usage": [[1026, "torch-cuda-memory-usage"]], "torch.chunk": [[935, "torch-chunk"]], "torch.column_stack": [[939, "torch-column-stack"]], "torch.cpu.stream": [[965, "torch-cpu-stream"]], "torch.cuda.caching_allocator_alloc": [[975, "torch-cuda-caching-allocator-alloc"]], "torch.complex": [[949, "torch-complex"]], "torch.cpu.device_count": [[963, "torch-cpu-device-count"]], "torch.cpu.synchronize": [[966, "torch-cpu-synchronize"]], "torch.cholesky_inverse": [[933, "torch-cholesky-inverse"]], "torch.count_nonzero": [[958, "torch-count-nonzero"]], "torch.cross": [[967, "torch-cross"]], "torch.cuda.change_current_allocator": [[978, "torch-cuda-change-current-allocator"]], "ExternalStream": [[971, "externalstream"]], "torch.cosh": [[957, "torch-cosh"]], "torch.compiler.reset": [[948, "torch-compiler-reset"]], "torch.cuda.OutOfMemoryError": [[972, "torch-cuda-outofmemoryerror"]], "torch.clamp": [[936, "torch-clamp"]], "torch.cholesky": [[932, "torch-cholesky"]], "torch.compiler.disable": [[946, "torch-compiler-disable"], [1948, "torch-compiler-disable"]], "torch.concatenate": [[951, "torch-concatenate"]], "StreamContext": [[974, "streamcontext"], [961, "streamcontext"]], "torch.compiler.list_backends": [[947, "torch-compiler-list-backends"]], "torch.compiler.allow_in_graph": [[943, "torch-compiler-allow-in-graph"], [1948, "torch-compiler-allow-in-graph"]], "torch.conj_physical": [[953, "torch-conj-physical"]], "Stream": [[973, "stream"], [960, "stream"]], "torch.cuda.can_device_access_peer": [[977, "torch-cuda-can-device-access-peer"]], "torch.cpu.is_available": [[964, "torch-cpu-is-available"]], "torch.cuda.clock_rate": [[979, "torch-cuda-clock-rate"]], "torch.compiled_with_cxx11_abi": [[942, "torch-compiled-with-cxx11-abi"]], "torch.copysign": [[954, "torch-copysign"]], "torch.clone": [[938, "torch-clone"]], "torch.cov": [[959, "torch-cov"]], "torch.cuda.caching_allocator_delete": [[976, "torch-cuda-caching-allocator-delete"]], "torch.conj": [[952, "torch-conj"]], "torch.compile": [[941, "torch-compile"]], "torch.cholesky_solve": [[934, "torch-cholesky-solve"]], "torch.cpu.current_stream": [[962, "torch-cpu-current-stream"]], "torch.concat": [[950, "torch-concat"]], "CUDAPluggableAllocator": [[969, "cudapluggableallocator"]], "torch.cos": [[956, "torch-cos"]], "torch.clip": [[937, "torch-clip"]], "torch.combinations": [[940, "torch-combinations"]], "torch.compiler.compile": [[945, "torch-compiler-compile"]], "torch.corrcoef": [[955, "torch-corrcoef"]], "torch.chain_matmul": [[931, "torch-chain-matmul"]], "CUDAGraph": [[968, "cudagraph"]], "torch.compiler.assume_constant_result": [[944, "torch-compiler-assume-constant-result"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[886, "torch-autograd-function-functionctx-mark-dirty"]], "torch.can_cast": [[926, "torch-can-cast"]], "torch.autograd.gradgradcheck": [[898, "torch-autograd-gradgradcheck"]], "torch.cat": [[928, "torch-cat"]], "torch.autograd.forward_ad.unpack_dual": [[885, "torch-autograd-forward-ad-unpack-dual"]], "torch.autograd.functional.jvp": [[893, "torch-autograd-functional-jvp"]], "torch.broadcast_shapes": [[922, "torch-broadcast-shapes"]], "torch.broadcast_tensors": [[923, "torch-broadcast-tensors"]], "torch.autograd.graph.Node.register_prehook": [[903, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[889, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.cdist": [[929, "torch-cdist"]], "torch.autograd.functional.vjp": [[895, "torch-autograd-functional-vjp"]], "torch.bincount": [[912, "torch-bincount"]], "torch.autograd.graph.Node.next_functions": [[901, "torch-autograd-graph-node-next-functions"]], "torch.blackman_window": [[919, "torch-blackman-window"]], "torch.autograd.grad": [[896, "torch-autograd-grad"]], "torch.autograd.backward": [[882, "torch-autograd-backward"]], "torch.bitwise_and": [[913, "torch-bitwise-and"]], "torch.autograd.gradcheck": [[897, "torch-autograd-gradcheck"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[888, "torch-autograd-function-functionctx-save-for-backward"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[907, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.autograd.functional.hessian": [[890, "torch-autograd-functional-hessian"]], "torch.bitwise_right_shift": [[917, "torch-bitwise-right-shift"]], "torch.baddbmm": [[909, "torch-baddbmm"]], "dual_level": [[883, "dual-level"]], "torch.autograd.graph.Node.metadata": [[899, "torch-autograd-graph-node-metadata"]], "torch.block_diag": [[920, "torch-block-diag"]], "torch.broadcast_to": [[924, "torch-broadcast-to"]], "torch.bmm": [[921, "torch-bmm"]], "torch.autograd.profiler.profile.total_average": [[908, "torch-autograd-profiler-profile-total-average"]], "torch.bernoulli": [[911, "torch-bernoulli"]], "torch.autograd.profiler.load_nvprof": [[904, "torch-autograd-profiler-load-nvprof"]], "torch.autograd.forward_ad.make_dual": [[884, "torch-autograd-forward-ad-make-dual"]], "torch.bitwise_left_shift": [[914, "torch-bitwise-left-shift"]], "torch.autograd.graph.Node.name": [[900, "torch-autograd-graph-node-name"]], "torch.autograd.functional.hvp": [[891, "torch-autograd-functional-hvp"]], "torch.autograd.functional.jacobian": [[892, "torch-autograd-functional-jacobian"]], "torch.bitwise_not": [[915, "torch-bitwise-not"]], "torch.bitwise_or": [[916, "torch-bitwise-or"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[887, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.autograd.functional.vhp": [[894, "torch-autograd-functional-vhp"]], "torch.ceil": [[930, "torch-ceil"]], "torch.bartlett_window": [[910, "torch-bartlett-window"]], "torch.autograd.profiler.profile.key_averages": [[906, "torch-autograd-profiler-profile-key-averages"]], "torch.bucketize": [[925, "torch-bucketize"]], "torch.autograd.profiler.profile.export_chrome_trace": [[905, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.cartesian_prod": [[927, "torch-cartesian-prod"]], "torch.bitwise_xor": [[918, "torch-bitwise-xor"]], "torch.autograd.graph.Node.register_hook": [[902, "torch-autograd-graph-node-register-hook"]], "torch.arcsinh": [[858, "torch-arcsinh"]], "torch.asin": [[870, "torch-asin"]], "swap_module": [[853, "swap-module"]], "default_qat_qconfig": [[835, "default-qat-qconfig"]], "per_channel_dynamic_qconfig": [[842, "per-channel-dynamic-qconfig"]], "quantize_qat": [[852, "quantize-qat"]], "quantize_dynamic": [[847, "quantize-dynamic"]], "torch.arange": [[854, "torch-arange"]], "torch.atleast_1d": [[875, "torch-atleast-1d"]], "get_default_qat_qconfig_mapping": [[844, "get-default-qat-qconfig-mapping"]], "get_default_qconfig_mapping": [[845, "get-default-qconfig-mapping"]], "torch.are_deterministic_algorithms_enabled": [[862, "torch-are-deterministic-algorithms-enabled"]], "convert_fx": [[848, "convert-fx"]], "default_per_channel_qconfig": [[834, "default-per-channel-qconfig"]], "default_dynamic_qconfig": [[833, "default-dynamic-qconfig"]], "torch.as_strided": [[867, "torch-as-strided"]], "torch.autograd.Function.vmap": [[881, "torch-autograd-function-vmap"]], "torch.asarray": [[869, "torch-asarray"]], "torch.autograd.Function.forward": [[879, "torch-autograd-function-forward"]], "QConfigMapping": [[843, "qconfigmapping"]], "torch.asinh": [[871, "torch-asinh"]], "quantize": [[846, "quantize"]], "torch.argmax": [[863, "torch-argmax"]], "torch.atan": [[872, "torch-atan"]], "float16_dynamic_qconfig": [[839, "float16-dynamic-qconfig"]], "torch.atanh": [[874, "torch-atanh"]], "prepare_qat_fx": [[851, "prepare-qat-fx"]], "default_qconfig": [[837, "default-qconfig"]], "fuse_fx": [[849, "fuse-fx"]], "torch.arctan": [[859, "torch-arctan"]], "torch.autograd.Function.backward": [[878, "torch-autograd-function-backward"]], "torch.argwhere": [[866, "torch-argwhere"]], "float16_static_qconfig": [[840, "float16-static-qconfig"]], "torch.atleast_3d": [[877, "torch-atleast-3d"]], "prepare_fx": [[850, "prepare-fx"]], "torch.arctan2": [[860, "torch-arctan2"]], "default_qat_qconfig_v2": [[836, "default-qat-qconfig-v2"]], "torch.autograd.Function.jvp": [[880, "torch-autograd-function-jvp"]], "torch.argmin": [[864, "torch-argmin"]], "torch.arccosh": [[856, "torch-arccosh"]], "torch.as_tensor": [[868, "torch-as-tensor"]], "float_qparams_weight_only_qconfig": [[841, "float-qparams-weight-only-qconfig"]], "torch.arcsin": [[857, "torch-arcsin"]], "torch.argsort": [[865, "torch-argsort"]], "torch.arccos": [[855, "torch-arccos"]], "torch.atan2": [[873, "torch-atan2"]], "torch.arctanh": [[861, "torch-arctanh"]], "torch.atleast_2d": [[876, "torch-atleast-2d"]], "default_weight_only_qconfig": [[838, "default-weight-only-qconfig"]], "default_histogram_fake_quant": [[796, "default-histogram-fake-quant"]], "default_weight_fake_quant": [[798, "default-weight-fake-quant"]], "default_fused_act_fake_quant": [[793, "default-fused-act-fake-quant"]], "default_histogram_observer": [[820, "default-histogram-observer"]], "default_fused_per_channel_wt_fake_quant": [[794, "default-fused-per-channel-wt-fake-quant"]], "default_placeholder_observer": [[823, "default-placeholder-observer"]], "ObservationType": [[785, "observationtype"]], "default_debug_qconfig": [[832, "default-debug-qconfig"]], "default_activation_only_qconfig": [[831, "default-activation-only-qconfig"]], "convert": [[786, "convert"]], "DTypeWithConstraints": [[784, "dtypewithconstraints"]], "get_observer_state_dict": [[825, "get-observer-state-dict"]], "default_eval_fn": [[787, "default-eval-fn"]], "default_fake_quant": [[792, "default-fake-quant"]], "PerChannelMinMaxObserver": [[814, "perchannelminmaxobserver"]], "prepare": [[827, "prepare"]], "disable_observer": [[800, "disable-observer"]], "enable_observer": [[802, "enable-observer"]], "MovingAverageMinMaxObserver": [[810, "movingaverageminmaxobserver"]], "MovingAveragePerChannelMinMaxObserver": [[811, "movingaverageperchannelminmaxobserver"]], "disable_fake_quant": [[799, "disable-fake-quant"]], "default_debug_observer": [[817, "default-debug-observer"]], "StandaloneModuleConfigEntry": [[807, "standalonemoduleconfigentry"]], "FixedQParamsFakeQuantize": [[790, "fixedqparamsfakequantize"]], "prepare_qat": [[828, "prepare-qat"]], "PrepareCustomConfig": [[806, "preparecustomconfig"]], "load_observer_state_dict": [[826, "load-observer-state-dict"]], "fuse_modules": [[803, "fuse-modules"]], "default_per_channel_weight_observer": [[822, "default-per-channel-weight-observer"]], "default_weight_observer": [[824, "default-weight-observer"]], "default_dynamic_quant_observer": [[818, "default-dynamic-quant-observer"]], "FakeQuantize": [[788, "fakequantize"]], "FakeQuantizeBase": [[789, "fakequantizebase"]], "FusedMovingAvgObsFakeQuantize": [[791, "fusedmovingavgobsfakequantize"]], "enable_fake_quant": [[801, "enable-fake-quant"]], "default_per_channel_weight_fake_quant": [[797, "default-per-channel-weight-fake-quant"]], "default_observer": [[821, "default-observer"]], "propagate_qconfig": [[829, "propagate-qconfig"]], "ObserverBase": [[813, "observerbase"]], "HistogramObserver": [[808, "histogramobserver"]], "NoopObserver": [[812, "noopobserver"]], "default_float_qparams_observer": [[819, "default-float-qparams-observer"]], "default_fused_wt_fake_quant": [[795, "default-fused-wt-fake-quant"]], "MinMaxObserver": [[809, "minmaxobserver"]], "ConvertCustomConfig": [[804, "convertcustomconfig"]], "RecordingObserver": [[816, "recordingobserver"]], "FuseCustomConfig": [[805, "fusecustomconfig"]], "QConfig": [[830, "qconfig"], [1919, "qconfig"]], "PlaceholderObserver": [[815, "placeholderobserver"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Serialization": [[11, "serialization"], [1936, "serialization"]], "Autograd": [[11, "autograd"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"], [1950, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Core Maintainers": [[9, "core-maintainers"], [10, "core-maintainers"]], "Lead Core Maintainer (BDFL)": [[9, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "Elastic Agent": [[31, "module-torch.distributed.elastic.agent"]], "Server": [[31, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[31, "concepts"]], "Implementations": [[31, "implementations"], [40, "implementations"]], "Extending the Agent": [[31, "extending-the-agent"]], "Watchdog in the Agent": [[31, "watchdog-in-the-agent"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "C++": [[14, "c"]], "TorchScript C++ API": [[14, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[14, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[14, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[14, "authoring-models-in-c"]], "Packaging for C++": [[14, "packaging-for-c"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[25, "distributed-checkpoint-torch-distributed-checkpoint"]], "Error Propagation": [[33, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[33, "methods-and-classes"]], "CUDA Stream Sanitizer": [[17, "cuda-stream-sanitizer"]], "Usage": [[17, "usage"], [41, "usage"], [26, null]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "Distributed Optimizers": [[27, "distributed-optimizers"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "torch.func API Reference": [[48, "module-torch.func"]], "Function Transforms": [[48, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[48, "utilities-for-working-with-torch-nn-modules"]], "FullyShardedDataParallel": [[46, "module-torch.distributed.fsdp"]], "DDP Communication Hooks": [[21, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[21, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[21, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[21, "default-communication-hooks"]], "PowerSGD Communication Hook": [[21, "powersgd-communication-hook"]], "PowerSGD State": [[21, "powersgd-state"]], "PowerSGD Hooks": [[21, "powersgd-hooks"]], "Debugging Communication Hooks": [[21, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[21, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[21, "acknowledgements"], [1917, "acknowledgements"]], "torch.utils.dlpack": [[30, "torch-utils-dlpack"]], "torch.utils.data": [[20, "module-torch.utils.data"]], "Dataset Types": [[20, "dataset-types"]], "Map-style datasets": [[20, "map-style-datasets"]], "Iterable-style datasets": [[20, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[20, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[20, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[20, "automatic-batching-default"]], "Disable automatic batching": [[20, "disable-automatic-batching"]], "Working with collate_fn": [[20, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[20, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[20, "single-process-data-loading-default"]], "Multi-process data loading": [[20, "multi-process-data-loading"]], "Platform-specific behaviors": [[20, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[20, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[20, "memory-pinning"]], "Generic Join Context Manager": [[24, "generic-join-context-manager"]], "Probability distributions - torch.distributions": [[29, "module-torch.distributions"]], "Score function": [[29, "score-function"]], "Pathwise derivative": [[29, "pathwise-derivative"]], "Distribution": [[29, "distribution"]], "ExponentialFamily": [[29, "exponentialfamily"]], "Bernoulli": [[29, "bernoulli"]], "Beta": [[29, "beta"]], "Binomial": [[29, "binomial"]], "Categorical": [[29, "categorical"]], "Cauchy": [[29, "cauchy"]], "Chi2": [[29, "chi2"]], "ContinuousBernoulli": [[29, "continuousbernoulli"]], "Dirichlet": [[29, "dirichlet"]], "Exponential": [[29, "exponential"]], "FisherSnedecor": [[29, "fishersnedecor"]], "Gamma": [[29, "gamma"]], "Geometric": [[29, "geometric"]], "Gumbel": [[29, "gumbel"]], "HalfCauchy": [[29, "halfcauchy"]], "HalfNormal": [[29, "halfnormal"]], "Independent": [[29, "independent"]], "Kumaraswamy": [[29, "kumaraswamy"]], "LKJCholesky": [[29, "lkjcholesky"]], "Laplace": [[29, "laplace"]], "LogNormal": [[29, "lognormal"]], "LowRankMultivariateNormal": [[29, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[29, "mixturesamefamily"]], "Multinomial": [[29, "multinomial"]], "MultivariateNormal": [[29, "multivariatenormal"]], "NegativeBinomial": [[29, "negativebinomial"]], "Normal": [[29, "normal"]], "OneHotCategorical": [[29, "onehotcategorical"]], "Pareto": [[29, "pareto"]], "Poisson": [[29, "poisson"]], "RelaxedBernoulli": [[29, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[29, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[29, "relaxedonehotcategorical"]], "StudentT": [[29, "studentt"]], "TransformedDistribution": [[29, "transformeddistribution"]], "Uniform": [[29, "uniform"]], "VonMises": [[29, "vonmises"]], "Weibull": [[29, "weibull"]], "Wishart": [[29, "wishart"]], "KL Divergence": [[29, "module-torch.distributions.kl"]], "Transforms": [[29, "module-torch.distributions.transforms"]], "Constraint Registry": [[29, "module-torch.distributions.constraint_registry"]], "torch.utils.cpp_extension": [[13, "torch-utils-cpp-extension"]], "torch.cuda": [[16, "module-torch.cuda"]], "Random Number Generator": [[16, "random-number-generator"]], "Communication collectives": [[16, "communication-collectives"]], "Streams and events": [[16, "streams-and-events"], [15, "streams-and-events"]], "Graphs (beta)": [[16, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[16, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[16, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[16, "stream-sanitizer-prototype"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Numerical gradient checking": [[1, "numerical-gradient-checking"]], "Profiler": [[1, "profiler"]], "Anomaly detection": [[1, "anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "torch::deploy has been moved to pytorch/multipy": [[22, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "torch.__config__": [[12, "module-torch.__config__"]], "Quickstart": [[39, "quickstart"]], "Multiprocessing": [[38, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[38, "starting-multiple-workers"]], "Process Context": [[38, "process-context"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Getting Started": [[7, "getting-started"], [1949, "getting-started"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [1924, "tutorials"], [1916, "tutorials"], [1917, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "torchrun (Elastic Launch)": [[41, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[41, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Single-node multi-worker": [[41, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[41, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[41, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[41, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[41, "note-on-rendezvous-backend"]], "Definitions": [[41, "definitions"]], "Environment Variables": [[41, "environment-variables"]], "Deployment": [[41, "deployment"]], "Failure Modes": [[41, "failure-modes"]], "Membership Changes": [[41, "membership-changes"]], "Important Notices": [[41, "important-notices"]], "Torch Distributed Elastic": [[26, "torch-distributed-elastic"]], "Get Started": [[26, "get-started"]], "Documentation": [[26, "documentation"]], "API": [[26, null]], "Advanced": [[26, null]], "Plugins": [[26, null]], "Train script": [[43, "train-script"]], "torch.cpu": [[15, "module-torch.cpu"]], "Examples": [[35, "examples"], [1943, "examples"]], "torch.func": [[47, "torch-func"]], "What are composable function transforms?": [[47, "what-are-composable-function-transforms"]], "Read More": [[47, "read-more"], [1939, "read-more"]], "Distributed communication package - torch.distributed": [[23, "distributed-communication-package-torch-distributed"]], "Backends": [[23, "backends"], [1924, "backends"]], "Backends that come with PyTorch": [[23, "backends-that-come-with-pytorch"]], "Which backend to use?": [[23, "which-backend-to-use"]], "Common environment variables": [[23, "common-environment-variables"]], "Choosing the network interface to use": [[23, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[23, "other-nccl-environment-variables"]], "Basics": [[23, "basics"], [1924, "basics"]], "Initialization": [[23, "initialization"]], "TCP initialization": [[23, "tcp-initialization"]], "Shared file-system initialization": [[23, "shared-file-system-initialization"]], "Environment variable initialization": [[23, "environment-variable-initialization"]], "Post-Initialization": [[23, "post-initialization"]], "Distributed Key-Value Store": [[23, "distributed-key-value-store"]], "Groups": [[23, "groups"]], "Point-to-point communication": [[23, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[23, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[23, "collective-functions"]], "Profiling Collective Communication": [[23, "profiling-collective-communication"]], "Multi-GPU collective functions": [[23, "multi-gpu-collective-functions"]], "Third-party backends": [[23, "third-party-backends"]], "Launch utility": [[23, "launch-utility"]], "Spawn utility": [[23, "spawn-utility"]], "Debugging torch.distributed applications": [[23, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[23, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[23, "torch-distributed-debug"]], "Logging": [[23, "logging"]], "Expiration Timers": [[42, "module-torch.distributed.elastic.timer"]], "Client Methods": [[42, "client-methods"]], "Server/Client Implementations": [[42, "server-client-implementations"]], "Writing a custom timer server/client": [[42, "writing-a-custom-timer-server-client"]], "TorchElastic Kubernetes": [[36, "torchelastic-kubernetes"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "Rendezvous": [[40, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[40, "registry"]], "Handler": [[40, "handler"]], "Exceptions": [[40, "exceptions"]], "Dynamic Rendezvous": [[40, "dynamic-rendezvous"]], "C10d Backend": [[40, "c10d-backend"]], "Etcd Backend": [[40, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[40, "etcd-rendezvous-legacy"]], "Etcd Store": [[40, "etcd-store"]], "Etcd Server": [[40, "etcd-server"]], "Metrics": [[37, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[37, "metric-handlers"]], "Methods": [[37, "methods"]], "torch.fft": [[45, "torch-fft"]], "Fast Fourier Transforms": [[45, "fast-fourier-transforms"]], "Helper Functions": [[45, "helper-functions"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[28, "tensor-parallelism-torch-distributed-tensor-parallel"]], "torch.export": [[44, "torch-export"]], "Customization": [[32, "customization"]], "Launcher": [[32, "launcher"]], "Rendezvous Handler": [[32, "rendezvous-handler"]], "Metric Handler": [[32, "metric-handler"]], "Events Handler": [[32, "events-handler"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "Events": [[34, "module-torch.distributed.elastic.events"]], "API Methods": [[34, "api-methods"]], "Event Objects": [[34, "event-objects"]], "max_pool1d": [[771, "max-pool1d"]], "DeQuantStub": [[777, "dequantstub"]], "threshold": [[773, "threshold"]], "DTypeConfig": [[783, "dtypeconfig"]], "QuantStub": [[778, "quantstub"]], "QFunctional": [[746, "qfunctional"]], "upsample_bilinear": [[775, "upsample-bilinear"]], "adaptive_avg_pool3d": [[756, "adaptive-avg-pool3d"]], "avg_pool2d": [[757, "avg-pool2d"]], "elu": [[764, "elu"]], "FXFloatFunctional": [[736, "fxfloatfunctional"]], "adaptive_avg_pool2d": [[755, "adaptive-avg-pool2d"]], "FloatFunctional": [[737, "floatfunctional"]], "max_pool2d": [[772, "max-pool2d"]], "upsample_nearest": [[776, "upsample-nearest"]], "interpolate": [[768, "interpolate"]], "add_quant_dequant": [[780, "add-quant-dequant"]], "conv3d": [[763, "conv3d"]], "BackendPatternConfig": [[782, "backendpatternconfig"]], "linear": [[770, "linear"]], "conv2d": [[762, "conv2d"]], "QuantWrapper": [[779, "quantwrapper"]], "upsample": [[774, "upsample"]], "avg_pool3d": [[758, "avg-pool3d"]], "celu": [[759, "celu"]], "hardsigmoid": [[765, "hardsigmoid"]], "conv1d": [[761, "conv1d"]], "leaky_relu": [[769, "leaky-relu"]], "hardtanh": [[767, "hardtanh"]], "BackendConfig": [[781, "backendconfig"]], "hardswish": [[766, "hardswish"]], "clamp": [[760, "clamp"]], "ConvBnReLU2d": [[695, "convbnrelu2d"], [705, "convbnrelu2d"]], "BNReLU2d": [[689, "bnrelu2d"], [712, "bnrelu2d"]], "ConvBn1d": [[691, "convbn1d"], [701, "convbn1d"]], "freeze_bn_stats": [[710, "freeze-bn-stats"]], "ConvBnReLU3d": [[706, "convbnrelu3d"], [696, "convbnrelu3d"]], "ConvBn2d": [[702, "convbn2d"], [692, "convbn2d"]], "torch.angle": [[687, "torch-angle"]], "BNReLU3d": [[690, "bnrelu3d"], [713, "bnrelu3d"]], "ConvReLU3d": [[708, "convrelu3d"], [716, "convrelu3d"], [699, "convrelu3d"]], "ConvBnReLU1d": [[704, "convbnrelu1d"], [694, "convbnrelu1d"]], "ConvBn3d": [[693, "convbn3d"], [703, "convbn3d"]], "torch.any": [[688, "torch-any"]], "update_bn_stats": [[711, "update-bn-stats"]], "LinearReLU": [[718, "linearrelu"], [700, "linearrelu"], [717, "linearrelu"], [709, "linearrelu"]], "ConvReLU1d": [[714, "convrelu1d"], [697, "convrelu1d"]], "torch.aminmax": [[686, "torch-aminmax"]], "ConvReLU2d": [[707, "convrelu2d"], [715, "convrelu2d"], [698, "convrelu2d"]], "torch._foreach_lgamma_": [[641, "torch-foreach-lgamma"]], "torch.addmm": [[678, "torch-addmm"]], "torch._foreach_trunc": [[666, "torch-foreach-trunc"]], "torch.add": [[674, "torch-add"]], "torch._foreach_sinh_": [[661, "torch-foreach-sinh"]], "torch.addcdiv": [[676, "torch-addcdiv"]], "torch._foreach_neg": [[650, "torch-foreach-neg"]], "torch._foreach_floor_": [[637, "torch-foreach-floor"]], "torch._foreach_neg_": [[651, "torch-foreach-neg"]], "torch._foreach_trunc_": [[667, "torch-foreach-trunc"]], "torch.addmv": [[679, "torch-addmv"]], "torch.addcmul": [[677, "torch-addcmul"]], "torch.addbmm": [[675, "torch-addbmm"]], "torch._foreach_log2": [[647, "torch-foreach-log2"]], "torch._foreach_sqrt_": [[663, "torch-foreach-sqrt"]], "torch.adjoint": [[681, "torch-adjoint"]], "torch.abs": [[670, "torch-abs"]], "torch._foreach_log10_": [[644, "torch-foreach-log10"]], "torch._foreach_lgamma": [[640, "torch-foreach-lgamma"]], "torch.addr": [[680, "torch-addr"]], "torch.allclose": [[683, "torch-allclose"]], "torch._foreach_frac_": [[639, "torch-foreach-frac"]], "torch._foreach_sigmoid_": [[657, "torch-foreach-sigmoid"]], "torch._foreach_tan_": [[665, "torch-foreach-tan"]], "torch._foreach_zero_": [[668, "torch-foreach-zero"]], "torch._foreach_round": [[654, "torch-foreach-round"]], "torch._foreach_round_": [[655, "torch-foreach-round"]], "torch._foreach_sinh": [[660, "torch-foreach-sinh"]], "torch._foreach_frac": [[638, "torch-foreach-frac"]], "torch._foreach_reciprocal_": [[653, "torch-foreach-reciprocal"]], "torch._foreach_log": [[642, "torch-foreach-log"]], "torch._foreach_reciprocal": [[652, "torch-foreach-reciprocal"]], "torch.amin": [[685, "torch-amin"]], "torch.all": [[682, "torch-all"]], "torch._foreach_sigmoid": [[656, "torch-foreach-sigmoid"]], "torch._foreach_log10": [[643, "torch-foreach-log10"]], "torch._foreach_sin_": [[659, "torch-foreach-sin"]], "torch.acos": [[672, "torch-acos"]], "torch._foreach_log2_": [[648, "torch-foreach-log2"]], "torch.amax": [[684, "torch-amax"]], "torch._foreach_log1p_": [[646, "torch-foreach-log1p"]], "torch._foreach_log1p": [[645, "torch-foreach-log1p"]], "torch.absolute": [[671, "torch-absolute"]], "torch._logging.set_logs": [[669, "torch-logging-set-logs"]], "torch._foreach_sqrt": [[662, "torch-foreach-sqrt"]], "torch.acosh": [[673, "torch-acosh"]], "torch._foreach_sin": [[658, "torch-foreach-sin"]], "torch._foreach_log_": [[649, "torch-foreach-log"]], "torch._foreach_tan": [[664, "torch-foreach-tan"]], "torch.Tensor.vsplit": [[608, "torch-tensor-vsplit"]], "torch._foreach_cos": [[624, "torch-foreach-cos"]], "torch.Tensor.view_as": [[607, "torch-tensor-view-as"]], "torch._foreach_asin_": [[619, "torch-foreach-asin"]], "torch._foreach_atan": [[620, "torch-foreach-atan"]], "torch.Tensor.uniform_": [[597, "torch-tensor-uniform"]], "torch.Tensor.true_divide": [[588, "torch-tensor-true-divide"]], "torch._foreach_exp_": [[633, "torch-foreach-exp"]], "torch.Tensor.unfold": [[596, "torch-tensor-unfold"]], "torch.Tensor.view": [[606, "torch-tensor-view"]], "torch.Tensor.unsqueeze": [[600, "torch-tensor-unsqueeze"]], "torch._foreach_acos_": [[617, "torch-foreach-acos"]], "torch.Tensor.xlogy_": [[611, "torch-tensor-xlogy"]], "torch._foreach_asin": [[618, "torch-foreach-asin"]], "torch.Tensor.type_as": [[593, "torch-tensor-type-as"]], "torch.Tensor.var": [[604, "torch-tensor-var"]], "torch._foreach_expm1_": [[635, "torch-foreach-expm1"]], "torch.Tensor.zero_": [[612, "torch-tensor-zero"]], "torch.Tensor.trunc_": [[591, "torch-tensor-trunc"]], "torch._foreach_acos": [[616, "torch-foreach-acos"]], "torch._foreach_erf_": [[629, "torch-foreach-erf"]], "torch.Tensor.unbind": [[594, "torch-tensor-unbind"]], "torch._foreach_floor": [[636, "torch-foreach-floor"]], "torch.Tensor.trunc": [[590, "torch-tensor-trunc"]], "torch._foreach_erf": [[628, "torch-foreach-erf"]], "torch._foreach_erfc_": [[631, "torch-foreach-erfc"]], "torch.Tensor.unique": [[598, "torch-tensor-unique"]], "torch._foreach_abs_": [[615, "torch-foreach-abs"]], "torch._foreach_ceil_": [[623, "torch-foreach-ceil"]], "torch._foreach_abs": [[614, "torch-foreach-abs"]], "torch.Tensor.type": [[592, "torch-tensor-type"]], "torch._foreach_cosh_": [[627, "torch-foreach-cosh"]], "torch._foreach_cos_": [[625, "torch-foreach-cos"]], "torch._foreach_ceil": [[622, "torch-foreach-ceil"]], "torch.Tensor.where": [[609, "torch-tensor-where"]], "torch._foreach_expm1": [[634, "torch-foreach-expm1"]], "torch.Tensor.vdot": [[605, "torch-tensor-vdot"]], "torch._assert": [[613, "torch-assert"]], "torch.Tensor.unsqueeze_": [[601, "torch-tensor-unsqueeze"]], "torch._foreach_exp": [[632, "torch-foreach-exp"]], "torch.Tensor.untyped_storage": [[602, "torch-tensor-untyped-storage"]], "torch.Tensor.unique_consecutive": [[599, "torch-tensor-unique-consecutive"]], "torch.Tensor.xlogy": [[610, "torch-tensor-xlogy"]], "torch._foreach_erfc": [[630, "torch-foreach-erfc"]], "torch._foreach_atan_": [[621, "torch-foreach-atan"]], "torch.Tensor.unflatten": [[595, "torch-tensor-unflatten"]], "torch.Tensor.true_divide_": [[589, "torch-tensor-true-divide"]], "torch._foreach_cosh": [[626, "torch-foreach-cosh"]], "torch.Tensor.values": [[603, "torch-tensor-values"]], "torch.Tensor.sum_to_size": [[555, "torch-tensor-sum-to-size"]], "torch.Tensor.triu": [[586, "torch-tensor-triu"]], "torch.Tensor.tile": [[568, "torch-tensor-tile"]], "torch.Tensor.sub_": [[551, "torch-tensor-sub"]], "torch.Tensor.stride": [[549, "torch-tensor-stride"]], "torch.Tensor.topk": [[579, "torch-tensor-topk"]], "torch.Tensor.storage_type": [[548, "torch-tensor-storage-type"]], "torch.Tensor.take_along_dim": [[562, "torch-tensor-take-along-dim"]], "torch.Tensor.tril_": [[585, "torch-tensor-tril"]], "torch.Tensor.to_dense": [[570, "torch-tensor-to-dense"]], "torch.Tensor.transpose": [[581, "torch-tensor-transpose"]], "torch.Tensor.swapaxes": [[557, "torch-tensor-swapaxes"]], "torch.Tensor.squeeze_": [[542, "torch-tensor-squeeze"]], "torch.Tensor.to_sparse_csc": [[576, "torch-tensor-to-sparse-csc"]], "torch.Tensor.trace": [[580, "torch-tensor-trace"]], "torch.Tensor.sum": [[554, "torch-tensor-sum"]], "torch.Tensor.subtract_": [[553, "torch-tensor-subtract"]], "torch.Tensor.stft": [[545, "torch-tensor-stft"]], "torch.Tensor.tril": [[584, "torch-tensor-tril"]], "torch.Tensor.tan_": [[564, "torch-tensor-tan"]], "torch.Tensor.to_mkldnn": [[571, "torch-tensor-to-mkldnn"]], "torch.Tensor.take": [[561, "torch-tensor-take"]], "torch.Tensor.std": [[544, "torch-tensor-std"]], "torch.Tensor.t": [[559, "torch-tensor-t"]], "torch.Tensor.sub": [[550, "torch-tensor-sub"]], "torch.Tensor.square_": [[540, "torch-tensor-square"]], "torch.Tensor.tanh_": [[566, "torch-tensor-tanh"]], "torch.Tensor.to_sparse": [[572, "torch-tensor-to-sparse"]], "torch.Tensor.to_sparse_bsr": [[574, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.to_sparse_csr": [[577, "torch-tensor-to-sparse-csr"]], "torch.Tensor.svd": [[556, "torch-tensor-svd"]], "torch.Tensor.tolist": [[578, "torch-tensor-tolist"]], "torch.Tensor.squeeze": [[541, "torch-tensor-squeeze"]], "torch.Tensor.triu_": [[587, "torch-tensor-triu"]], "torch.Tensor.t_": [[560, "torch-tensor-t"]], "torch.Tensor.tanh": [[565, "torch-tensor-tanh"]], "torch.Tensor.to_sparse_bsc": [[573, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.sspaddmm": [[543, "torch-tensor-sspaddmm"]], "torch.Tensor.to": [[569, "torch-tensor-to"]], "torch.Tensor.swapdims": [[558, "torch-tensor-swapdims"]], "torch.Tensor.square": [[539, "torch-tensor-square"]], "torch.Tensor.tan": [[563, "torch-tensor-tan"]], "torch.Tensor.to_sparse_coo": [[575, "torch-tensor-to-sparse-coo"]], "torch.Tensor.triangular_solve": [[583, "torch-tensor-triangular-solve"]], "torch.Tensor.storage_offset": [[547, "torch-tensor-storage-offset"]], "torch.Tensor.storage": [[546, "torch-tensor-storage"]], "torch.Tensor.transpose_": [[582, "torch-tensor-transpose"]], "torch.Tensor.tensor_split": [[567, "torch-tensor-tensor-split"]], "torch.Tensor.subtract": [[552, "torch-tensor-subtract"]], "torch.onnx": [[1912, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1912, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1912, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1912, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1912, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1912, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1912, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Limitations": [[1912, "limitations"], [1942, "limitations"], [1948, "limitations"]], "Differences in Operator Implementations": [[1912, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1912, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1912, "reads-gets"]], "Writes / Sets": [[1912, "writes-sets"]], "Adding support for operators": [[1912, "adding-support-for-operators"]], "ONNX exporter internals": [[1912, "onnx-exporter-internals"]], "ATen operators": [[1912, "aten-operators"]], "List of supported operators": [[1912, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1912, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1912, "torch-autograd-functions"]], "Static Symbolic Method": [[1912, "static-symbolic-method"]], "Inline Autograd Function": [[1912, "inline-autograd-function"]], "Custom operators": [[1912, "custom-operators"]], "ONNX-script functions": [[1912, "onnx-script-functions"]], "C++ Operators": [[1912, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1912, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1912, "contributing-developing"]], "Classes": [[1912, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1912, "preview-torch-onnx-torchdynamo-exporter"]], "PyTorch 2.0 Performance Dashboard": [[1954, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[1954, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[1954, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[1954, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[1954, "how-can-i-run-any-performance-test-locally"]], "IRs": [[1952, "irs"]], "Core Aten IR": [[1952, "core-aten-ir"]], "Prims IR": [[1952, "prims-ir"]], "torch.onnx diagnostics": [[1913, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1913, "diagnostic-rules"]], "Guards Overview": [[1950, "guards-overview"]], "Caching and Guards Overview": [[1950, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[1950, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[1950, "instructiontranslator"]], "Making Guards": [[1950, "making-guards"]], "Quantization Accuracy Debugging": [[1920, "quantization-accuracy-debugging"], [1919, "quantization-accuracy-debugging"]], "Data insensitive error": [[1920, "data-insensitive-error"]], "General tips": [[1920, "general-tips"]], "Int8 quantization tips": [[1920, "int8-quantization-tips"]], "Data sensitive error": [[1920, "data-sensitive-error"]], "Implementation error": [[1920, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1920, "numerical-debugging-tooling-prototype"]], "Using a pretrained model": [[1949, "using-a-pretrained-model"]], "Next Steps": [[1949, "next-steps"]], "torch.ao.ns._numeric_suite_fx": [[1938, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1938, "torch-ao-ns-fx-utils"]], "ONNX supported TorchScript operators": [[1914, "onnx-supported-torchscript-operators"]], "Supported operators": [[1914, "supported-operators"]], "ONNX support for TorchScript operators": [[1914, "id1"]], "Unsupported operators": [[1914, "unsupported-operators"], [1914, "id2"]], "torch.profiler": [[1918, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1918, "intel-instrumentation-and-tracing-technology-apis"]], "torch.sparse": [[1928, "torch-sparse"]], "Why and when to use sparsity": [[1928, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1928, "functionality-overview"]], "Operator overview": [[1928, "operator-overview"]], "Sparse Semi-Structured Tensors": [[1928, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[1928, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[1928, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[1928, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[1928, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[1928, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1928, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1928, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1928, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1928, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1928, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1928, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1928, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1928, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1928, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1928, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1928, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1928, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1928, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1928, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[1928, "linear-algebra-operations"]], "Tensor methods and sparse": [[1928, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1928, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1928, "other-functions"]], "Unary functions": [[1928, "unary-functions"]], "torch.ao.ns._numeric_suite": [[1937, "torch-ao-ns-numeric-suite"]], "torch.compiler": [[1939, "torch-compiler"]], "Getting Started for PyTorch Users": [[1939, null]], "Deep Dive for PyTorch Developers": [[1939, null]], "HowTo for PyTorch Backend Vendors": [[1939, null]], "PyTorch 2.0 Troubleshooting": [[1957, "pytorch-2-0-troubleshooting"]], "Title": [[1957, "id1"]], "Diagnosing Runtime Errors": [[1957, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[1957, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[1957, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[1957, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[1957, "minifying-backend-compiler-errors"]], "Performance Profiling": [[1957, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[1957, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[1957, "torchinductor-debugging-using-torch-compile-debug"]], "Graph Breaks": [[1957, "graph-breaks"], [1947, "graph-breaks"]], "Identifying the Cause of a Graph Break": [[1957, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[1957, "excessive-recompilation"]], "Accuracy Debugging": [[1957, "accuracy-debugging"]], "torch.optim": [[1915, "module-torch.optim"]], "How to use an optimizer": [[1915, "how-to-use-an-optimizer"]], "Constructing it": [[1915, "constructing-it"]], "Per-parameter options": [[1915, "per-parameter-options"]], "Taking an optimization step": [[1915, "taking-an-optimization-step"]], "optimizer.step()": [[1915, "optimizer-step"]], "optimizer.step(closure)": [[1915, "optimizer-step-closure"]], "Base class": [[1915, "base-class"]], "Algorithms": [[1915, "algorithms"]], "How to adjust learning rate": [[1915, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1915, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1915, "constructing-averaged-models"]], "Custom averaging strategies": [[1915, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1915, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1915, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1915, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1915, "putting-it-all-together-ema"]], "torch.special": [[1929, "torch-special"]], "Remote Reference Protocol": [[1926, "remote-reference-protocol"]], "Background": [[1926, "background"], [1925, "background"]], "Assumptions": [[1926, "assumptions"]], "RRef Lifetime": [[1926, "rref-lifetime"]], "Design Reasoning": [[1926, "design-reasoning"]], "Protocol Scenarios": [[1926, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1926, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1926, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1926, "owner-share-rref-with-user"]], "User Share RRef with User": [[1926, "user-share-rref-with-user"]], "torch.testing": [[1935, "module-torch.testing"]], "CUDAGraph Trees": [[1942, "cudagraph-trees"]], "CUDAGraph Background": [[1942, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[1942, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[1942, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[1942, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[1942, "cudagraph-trees-integration"]], "Quantization": [[1919, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1919, "introduction-to-quantization"]], "Quantization API Summary": [[1919, "quantization-api-summary"]], "Eager Mode Quantization": [[1919, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1919, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1919, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1919, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1919, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1919, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1919, "quantization-stack"]], "Quantized Model": [[1919, "quantized-model"]], "Quantized Tensor": [[1919, "quantized-tensor"]], "Quantize and Dequantize": [[1919, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1919, "quantized-operators-modules"]], "Quantized Engine": [[1919, "quantized-engine"]], "Quantization Flow": [[1919, "quantization-flow"]], "Observer and FakeQuantize": [[1919, "observer-and-fakequantize"]], "General Quantization Flow": [[1919, "general-quantization-flow"]], "Quantization Support Matrix": [[1919, "quantization-support-matrix"]], "Quantization Mode Support": [[1919, "quantization-mode-support"]], "Quantization Flow Support": [[1919, "quantization-flow-support"]], "Backend/Hardware Support": [[1919, "backend-hardware-support"]], "Note for native CPU backends": [[1919, "note-for-native-cpu-backends"]], "Operator Support": [[1919, "operator-support"]], "Quantization API Reference": [[1919, "quantization-api-reference"], [1922, "quantization-api-reference"]], "Quantization Backend Configuration": [[1919, "quantization-backend-configuration"], [1921, "quantization-backend-configuration"]], "Quantization Customizations": [[1919, "quantization-customizations"]], "Quantization Custom Module API": [[1919, "quantization-custom-module-api"]], "Best Practices": [[1919, "best-practices"]], "Common Errors": [[1919, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1919, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1919, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1919, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1919, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "PyTorch 2.0 NNModule Support": [[1953, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[1953, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[1953, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[1953, "state-dict-hooks"]], "Understanding CUDA Memory Usage": [[1959, "understanding-cuda-memory-usage"]], "Generating a Snapshot": [[1959, "generating-a-snapshot"]], "Using the visualizer": [[1959, "using-the-visualizer"]], "Active Memory Timeline": [[1959, "active-memory-timeline"]], "Allocator State History": [[1959, "allocator-state-history"]], "Snapshot API Reference": [[1959, "snapshot-api-reference"]], "Best Practices for Backends": [[1941, "best-practices-for-backends"]], "x86 CPU": [[1941, "x86-cpu"]], "torch": [[1936, "module-torch"]], "Tensors": [[1936, "tensors"]], "Creation Ops": [[1936, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1936, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1936, "generators"]], "Random sampling": [[1936, "random-sampling"]], "In-place random sampling": [[1936, "in-place-random-sampling"]], "Quasi-random sampling": [[1936, "quasi-random-sampling"]], "Parallelism": [[1936, "parallelism"]], "Math operations": [[1936, "math-operations"]], "Pointwise Ops": [[1936, "pointwise-ops"]], "Reduction Ops": [[1936, "reduction-ops"]], "Comparison Ops": [[1936, "comparison-ops"]], "Spectral Ops": [[1936, "spectral-ops"]], "Other Operations": [[1936, "other-operations"]], "BLAS and LAPACK Operations": [[1936, "blas-and-lapack-operations"]], "Foreach Operations": [[1936, "foreach-operations"]], "Symbolic Numbers": [[1936, "symbolic-numbers"]], "Export Path": [[1936, "export-path"]], "Optimizations": [[1936, "optimizations"]], "Operator Tags": [[1936, "operator-tags"]], "Distributed RPC Framework": [[1924, "distributed-rpc-framework"]], "RPC": [[1924, "rpc"]], "TensorPipe Backend": [[1924, "tensorpipe-backend"]], "RRef": [[1924, "rref"]], "More Information about RRef": [[1924, null]], "RemoteModule": [[1924, "remotemodule"]], "Distributed Autograd Framework": [[1924, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1924, null]], "Distributed Optimizer": [[1924, "distributed-optimizer"], [1925, "distributed-optimizer"]], "torch.package": [[1916, "torch-package"]], "Packaging your first model": [[1916, "packaging-your-first-model"]], "How do I\u2026": [[1916, "how-do-i"]], "See what is inside a package?": [[1916, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1916, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1916, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1916, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1916, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1916, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1916, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1916, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1916, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1916, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1916, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1916, "package-a-torchscript-module"]], "Explanation": [[1916, "explanation"]], "torch.package Format Overview": [[1916, "torch-package-format-overview"]], "Framework files": [[1916, "framework-files"]], "User files": [[1916, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1916, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1916, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1916, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1916, "dependency-management"]], "intern": [[1916, "intern"]], "extern": [[1916, "extern"]], "mock": [[1916, "mock"]], "Refactoring": [[1916, "refactoring"]], "Patterns": [[1916, "patterns"]], "torch.package sharp edges": [[1916, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1916, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1916, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1916, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1916, "mangling"]], "torch.compiler API reference": [[1940, "torch-compiler-api-reference"]], "torch.random": [[1923, "module-torch.random"]], "torch.overrides": [[1958, "torch-overrides"]], "Distributed Autograd Design": [[1925, "distributed-autograd-design"]], "Autograd recording during the forward pass": [[1925, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1925, "distributed-autograd-context"]], "Distributed Backward Pass": [[1925, "distributed-backward-pass"]], "Computing dependencies": [[1925, "computing-dependencies"]], "FAST mode algorithm": [[1925, "fast-mode-algorithm"]], "SMART mode algorithm": [[1925, "smart-mode-algorithm"]], "Simple end to end example": [[1925, "simple-end-to-end-example"]], "Profiling to understand torch.compile performance": [[1955, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[1955, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[1955, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[1955, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[1955, "understanding-compilation-time"]], "Finding graph breaks": [[1955, "finding-graph-breaks"]], "Launch overhead": [[1955, "launch-overhead"]], "Fake tensor": [[1946, "fake-tensor"]], "Related work": [[1946, "related-work"]], "Overall architecture": [[1946, "overall-architecture"], [1945, "overall-architecture"]], "API: the important bits": [[1946, "api-the-important-bits"]], "Details": [[1946, "details"]], "About the tensor subclass": [[1946, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[1946, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[1946, "how-does-the-converter-work"]], "Performance characteristics": [[1946, "performance-characteristics"]], "Fake tensor of fake tensor?": [[1946, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[1946, "interaction-with-dynamic-shapes"]], "Other resources": [[1946, "other-resources"]], "Dynamic shapes": [[1945, "dynamic-shapes"]], "Abridged public API": [[1945, "abridged-public-api"]], "The Guard Model": [[1945, "the-guard-model"]], "Abridged internal API": [[1945, "abridged-internal-api"]], "DimDynamic policy": [[1945, "dimdynamic-policy"]], "Unbacked SymInts": [[1945, "unbacked-symints"]], "torch.ao.quantization": [[1922, "torch-ao-quantization"]], "Top level APIs": [[1922, "top-level-apis"]], "Preparing model for quantization": [[1922, "preparing-model-for-quantization"]], "torch.ao.quantization.quantize_fx": [[1922, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1922, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1922, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1922, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[1922, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[1922, "module-torch.ao.quantization.pt2e"]], "torch (quantization related functions)": [[1922, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1922, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1922, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1922, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1922, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1922, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1922, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1922, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1922, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1922, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1922, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1922, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1922, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1922, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1922, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1922, "quantized-dtypes-and-quantization-schemes"]], "Tensor Views": [[1932, "tensor-views"]], "TorchInductor GPU Profiling": [[1951, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[1951, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[1951, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[1951, "benchmark-individual-triton-kernel"]], "Tensor Attributes": [[1931, "tensor-attributes"]], "torch.dtype": [[1931, "torch-dtype"]], "torch.device": [[1931, "torch-device"]], "torch.layout": [[1931, "torch-layout"]], "torch.memory_format": [[1931, "torch-memory-format"]], "Custom Backends": [[1943, "custom-backends"]], "Registering Custom Backends": [[1943, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[1943, "custom-backends-after-aotautograd"]], "Debugging Backend": [[1943, "debugging-backend"]], "Speedy Backend": [[1943, "speedy-backend"]], "Composable Backends": [[1943, "composable-backends"]], "Pipeline Parallelism": [[1917, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1917, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1917, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1917, "pipe-apis-in-pytorch"]], "Skip connections": [[1917, "skip-connections"]], "Windows FAQ": [[1911, "windows-faq"]], "Building from source": [[1911, "building-from-source"]], "Include optional components": [[1911, "include-optional-components"]], "Speeding CUDA build for Windows": [[1911, "speeding-cuda-build-for-windows"]], "One key install script": [[1911, "one-key-install-script"]], "Extension": [[1911, "extension"]], "CFFI Extension": [[1911, "cffi-extension"]], "Cpp Extension": [[1911, "cpp-extension"]], "Installation": [[1911, "installation"]], "Package not found in win-32 channel.": [[1911, "package-not-found-in-win-32-channel"]], "Import error": [[1911, "import-error"]], "Usage (multiprocessing)": [[1911, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1911, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1911, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1911, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1911, "cuda-ipc-operations"]], "torch.utils.tensorboard": [[1933, "module-torch.utils.tensorboard"]], "torch.signal": [[1927, "module-torch.signal"]], "torch.signal.windows": [[1927, "module-torch.signal.windows"]], "Writing Graph Transformations on ATen IR": [[1956, "writing-graph-transformations-on-aten-ir"]], "Passes": [[1956, "passes"]], "One-to-One Pass": [[1956, "one-to-one-pass"]], "One-to-X Pass": [[1956, "one-to-x-pass"]], "One-to-None Pass": [[1956, "one-to-none-pass"]], "Utilizing Local Information": [[1956, "utilizing-local-information"]], "Subgraph Rewriter": [[1956, "subgraph-rewriter"]], "Pass Manager": [[1956, "pass-manager"]], "Partitioner": [[1956, "partitioner"]], "Subgraph Matcher": [[1956, "subgraph-matcher"]], "Capability Based Partitioner": [[1956, "capability-based-partitioner"]], "torch.Storage": [[1930, "torch-storage"]], "TorchDynamo Deep Dive": [[1944, "torchdynamo-deep-dive"]], "TorchDynamo Internals": [[1944, "torchdynamo-internals"]], "What is a guard?": [[1944, "what-is-a-guard"]], "What is Dynamo doing?": [[1944, "what-is-dynamo-doing"]], "How to inspect artifacts generated by TorchDynamo?": [[1944, "how-to-inspect-artifacts-generated-by-torchdynamo"]], "TorchDynamo APIs for fine-grained tracing": [[1948, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[1948, "id1"]], "torch._dynamo.disallow_in_graph": [[1948, "torch-dynamo-disallow-in-graph"]], "Default values for native configurations": [[1921, "default-values-for-native-configurations"]], "torch.Tensor": [[1934, "torch-tensor"]], "Data types": [[1934, "data-types"]], "Initializing and basic operations": [[1934, "initializing-and-basic-operations"]], "Tensor class reference": [[1934, "tensor-class-reference"]], "Does torch.compile support training?": [[1947, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[1947, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[1947, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[1947, "why-is-my-code-crashing"]], "Why is compilation slow?": [[1947, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[1947, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[1947, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[1947, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[1947, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[1947, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[1947, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[1947, "why-am-i-getting-ooms"]], "torch.func does not work with torch.compile": [[1947, "torch-func-does-not-work-with-torch-compile"]], "Applying a torch.func transform to a function handled with torch.compile": [[1947, "applying-a-torch-func-transform-to-a-function-handled-with-torch-compile"]], "Calling torch.func transform inside of a function handled with torch.compile": [[1947, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Which API to use for fine grain tracing?": [[1947, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[1947, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[1947, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[1947, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "torch.Tensor.sign": [[517, "torch-tensor-sign"]], "torch.Tensor.sgn_": [[511, "torch-tensor-sgn"]], "torch.Tensor.sparse_resize_": [[534, "torch-tensor-sparse-resize"]], "torch.Tensor.sinh_": [[525, "torch-tensor-sinh"]], "torch.Tensor.rot90": [[495, "torch-tensor-rot90"]], "torch.Tensor.scatter_": [[502, "torch-tensor-scatter"]], "torch.Tensor.sparse_mask": [[533, "torch-tensor-sparse-mask"]], "torch.Tensor.round_": [[497, "torch-tensor-round"]], "torch.Tensor.scatter": [[501, "torch-tensor-scatter"]], "torch.Tensor.shape": [[512, "torch-tensor-shape"]], "torch.Tensor.sparse_resize_and_clear_": [[535, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.sinh": [[524, "torch-tensor-sinh"]], "torch.Tensor.smm": [[529, "torch-tensor-smm"]], "torch.Tensor.sparse_dim": [[532, "torch-tensor-sparse-dim"]], "torch.Tensor.share_memory_": [[513, "torch-tensor-share-memory"]], "torch.Tensor.size": [[526, "torch-tensor-size"]], "torch.Tensor.row_indices": [[498, "torch-tensor-row-indices"]], "torch.Tensor.set_": [[509, "torch-tensor-set"]], "torch.Tensor.sigmoid_": [[516, "torch-tensor-sigmoid"]], "torch.Tensor.retain_grad": [[492, "torch-tensor-retain-grad"]], "torch.Tensor.scatter_add_": [[504, "torch-tensor-scatter-add"]], "torch.Tensor.sin": [[520, "torch-tensor-sin"]], "torch.Tensor.sin_": [[521, "torch-tensor-sin"]], "torch.Tensor.round": [[496, "torch-tensor-round"]], "torch.Tensor.scatter_reduce": [[505, "torch-tensor-scatter-reduce"]], "torch.Tensor.roll": [[494, "torch-tensor-roll"]], "torch.Tensor.sinc_": [[523, "torch-tensor-sinc"]], "torch.Tensor.scatter_add": [[503, "torch-tensor-scatter-add"]], "torch.Tensor.sort": [[531, "torch-tensor-sort"]], "torch.Tensor.sgn": [[510, "torch-tensor-sgn"]], "torch.Tensor.select_scatter": [[508, "torch-tensor-select-scatter"]], "torch.Tensor.rsqrt_": [[500, "torch-tensor-rsqrt"]], "torch.Tensor.sinc": [[522, "torch-tensor-sinc"]], "torch.Tensor.scatter_reduce_": [[506, "torch-tensor-scatter-reduce"]], "torch.Tensor.retains_grad": [[493, "torch-tensor-retains-grad"]], "torch.Tensor.resolve_conj": [[490, "torch-tensor-resolve-conj"]], "torch.Tensor.sign_": [[518, "torch-tensor-sign"]], "torch.Tensor.split": [[536, "torch-tensor-split"]], "torch.Tensor.select": [[507, "torch-tensor-select"]], "torch.Tensor.short": [[514, "torch-tensor-short"]], "torch.Tensor.sqrt_": [[538, "torch-tensor-sqrt"]], "torch.Tensor.rsqrt": [[499, "torch-tensor-rsqrt"]], "torch.Tensor.sigmoid": [[515, "torch-tensor-sigmoid"]], "torch.Tensor.signbit": [[519, "torch-tensor-signbit"]], "torch.Tensor.slice_scatter": [[527, "torch-tensor-slice-scatter"]], "torch.Tensor.slogdet": [[528, "torch-tensor-slogdet"]], "torch.Tensor.softmax": [[530, "torch-tensor-softmax"]], "torch.Tensor.resolve_neg": [[491, "torch-tensor-resolve-neg"]], "torch.Tensor.sqrt": [[537, "torch-tensor-sqrt"]], "torch.Tensor.normal_": [[444, "torch-tensor-normal"]], "torch.Tensor.ormqr": [[450, "torch-tensor-ormqr"]], "torch.Tensor.qscheme": [[468, "torch-tensor-qscheme"]], "torch.Tensor.pow_": [[459, "torch-tensor-pow"]], "torch.Tensor.quantile": [[469, "torch-tensor-quantile"]], "torch.Tensor.random_": [[471, "torch-tensor-random"]], "torch.Tensor.nextafter_": [[441, "torch-tensor-nextafter"]], "torch.Tensor.q_per_channel_scales": [[463, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.q_per_channel_zero_points": [[464, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.prod": [[460, "torch-tensor-prod"]], "torch.Tensor.pin_memory": [[453, "torch-tensor-pin-memory"]], "torch.Tensor.ravel": [[472, "torch-tensor-ravel"]], "torch.Tensor.remainder_": [[479, "torch-tensor-remainder"]], "torch.Tensor.pinverse": [[454, "torch-tensor-pinverse"]], "torch.Tensor.q_per_channel_axis": [[462, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.rad2deg": [[470, "torch-tensor-rad2deg"]], "torch.Tensor.orgqr": [[449, "torch-tensor-orgqr"]], "torch.Tensor.remainder": [[478, "torch-tensor-remainder"]], "torch.Tensor.numel": [[447, "torch-tensor-numel"]], "torch.Tensor.q_scale": [[465, "torch-tensor-q-scale"]], "torch.Tensor.q_zero_point": [[466, "torch-tensor-q-zero-point"]], "torch.Tensor.requires_grad": [[484, "torch-tensor-requires-grad"]], "torch.Tensor.resize_as_": [[489, "torch-tensor-resize-as"]], "torch.Tensor.record_stream": [[476, "torch-tensor-record-stream"]], "torch.Tensor.renorm_": [[481, "torch-tensor-renorm"]], "torch.Tensor.reshape": [[486, "torch-tensor-reshape"]], "torch.Tensor.norm": [[443, "torch-tensor-norm"]], "torch.Tensor.nonzero": [[442, "torch-tensor-nonzero"]], "torch.Tensor.pow": [[458, "torch-tensor-pow"]], "torch.Tensor.renorm": [[480, "torch-tensor-renorm"]], "torch.Tensor.requires_grad_": [[485, "torch-tensor-requires-grad"]], "torch.Tensor.positive": [[457, "torch-tensor-positive"]], "torch.Tensor.real": [[473, "torch-tensor-real"]], "torch.Tensor.permute": [[452, "torch-tensor-permute"]], "torch.Tensor.repeat": [[482, "torch-tensor-repeat"]], "torch.Tensor.not_equal": [[445, "torch-tensor-not-equal"]], "torch.Tensor.qr": [[467, "torch-tensor-qr"]], "torch.Tensor.polygamma_": [[456, "torch-tensor-polygamma"]], "torch.Tensor.register_hook": [[477, "torch-tensor-register-hook"]], "torch.Tensor.not_equal_": [[446, "torch-tensor-not-equal"]], "torch.Tensor.outer": [[451, "torch-tensor-outer"]], "torch.Tensor.reciprocal_": [[475, "torch-tensor-reciprocal"]], "torch.Tensor.resize_": [[488, "torch-tensor-resize"]], "torch.Tensor.numpy": [[448, "torch-tensor-numpy"]], "torch.Tensor.polygamma": [[455, "torch-tensor-polygamma"]], "torch.Tensor.put_": [[461, "torch-tensor-put"]], "torch.Tensor.repeat_interleave": [[483, "torch-tensor-repeat-interleave"]], "torch.Tensor.reshape_as": [[487, "torch-tensor-reshape-as"]], "torch.Tensor.reciprocal": [[474, "torch-tensor-reciprocal"]], "torch.Tensor.nansum": [[422, "torch-tensor-nansum"]], "torch.Tensor.msort": [[408, "torch-tensor-msort"]], "torch.Tensor.new_full": [[436, "torch-tensor-new-full"]], "torch.Tensor.nanquantile": [[421, "torch-tensor-nanquantile"]], "torch.Tensor.nanmean": [[419, "torch-tensor-nanmean"]], "torch.Tensor.neg_": [[431, "torch-tensor-neg"]], "torch.Tensor.mvlgamma": [[415, "torch-tensor-mvlgamma"]], "torch.Tensor.neg": [[430, "torch-tensor-neg"]], "torch.Tensor.masked_scatter_": [[393, "torch-tensor-masked-scatter"]], "torch.Tensor.minimum": [[403, "torch-tensor-minimum"]], "torch.Tensor.masked_select": [[394, "torch-tensor-masked-select"]], "torch.Tensor.median": [[401, "torch-tensor-median"]], "torch.Tensor.mul_": [[410, "torch-tensor-mul"]], "torch.Tensor.new_ones": [[437, "torch-tensor-new-ones"]], "torch.Tensor.mode": [[405, "torch-tensor-mode"]], "torch.Tensor.mm": [[404, "torch-tensor-mm"]], "torch.Tensor.multiply_": [[413, "torch-tensor-multiply"]], "torch.Tensor.mvlgamma_": [[416, "torch-tensor-mvlgamma"]], "torch.Tensor.ne_": [[429, "torch-tensor-ne"]], "torch.Tensor.new_empty": [[435, "torch-tensor-new-empty"]], "torch.Tensor.matrix_exp": [[396, "torch-tensor-matrix-exp"]], "torch.Tensor.negative_": [[433, "torch-tensor-negative"]], "torch.Tensor.ne": [[428, "torch-tensor-ne"]], "torch.Tensor.moveaxis": [[406, "torch-tensor-moveaxis"]], "torch.Tensor.new_zeros": [[439, "torch-tensor-new-zeros"]], "torch.Tensor.maximum": [[399, "torch-tensor-maximum"]], "torch.Tensor.matrix_power": [[397, "torch-tensor-matrix-power"]], "torch.Tensor.ndim": [[426, "torch-tensor-ndim"]], "torch.Tensor.multinomial": [[411, "torch-tensor-multinomial"]], "torch.Tensor.min": [[402, "torch-tensor-min"]], "torch.Tensor.nanmedian": [[420, "torch-tensor-nanmedian"]], "torch.Tensor.movedim": [[407, "torch-tensor-movedim"]], "torch.Tensor.max": [[398, "torch-tensor-max"]], "torch.Tensor.masked_scatter": [[392, "torch-tensor-masked-scatter"]], "torch.Tensor.narrow_copy": [[424, "torch-tensor-narrow-copy"]], "torch.Tensor.nelement": [[434, "torch-tensor-nelement"]], "torch.Tensor.mean": [[400, "torch-tensor-mean"]], "torch.Tensor.negative": [[432, "torch-tensor-negative"]], "torch.Tensor.mul": [[409, "torch-tensor-mul"]], "torch.Tensor.nextafter": [[440, "torch-tensor-nextafter"]], "torch.Tensor.nan_to_num": [[417, "torch-tensor-nan-to-num"]], "torch.Tensor.nbytes": [[425, "torch-tensor-nbytes"]], "torch.Tensor.mv": [[414, "torch-tensor-mv"]], "torch.Tensor.nan_to_num_": [[418, "torch-tensor-nan-to-num"]], "torch.Tensor.narrow": [[423, "torch-tensor-narrow"]], "torch.Tensor.new_tensor": [[438, "torch-tensor-new-tensor"]], "torch.Tensor.ndimension": [[427, "torch-tensor-ndimension"]], "torch.Tensor.multiply": [[412, "torch-tensor-multiply"]], "torch.Tensor.matmul": [[395, "torch-tensor-matmul"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.load_state_dict"]], "module": [[0, "module-torch.amp"], [0, "module-torch.cpu.amp"], [0, "module-torch.cuda.amp"], [1, "module-torch.autograd"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [12, "module-torch.__config__"], [15, "module-torch.cpu"], [16, "module-torch.cuda"], [17, "module-torch.cuda._sanitizer"], [20, "module-torch.utils.data"], [20, "module-torch.utils.data.datapipes"], [20, "module-torch.utils.data.datapipes.dataframe"], [20, "module-torch.utils.data.datapipes.iter"], [20, "module-torch.utils.data.datapipes.map"], [20, "module-torch.utils.data.datapipes.utils"], [23, "module-torch.distributed"], [23, "module-torch.distributed.algorithms"], [23, "module-torch.distributed.algorithms.ddp_comm_hooks"], [23, "module-torch.distributed.algorithms.model_averaging"], [23, "module-torch.distributed.elastic"], [23, "module-torch.distributed.elastic.utils"], [23, "module-torch.distributed.elastic.utils.data"], [23, "module-torch.distributed.launch"], [23, "module-torch.distributed.launcher"], [23, "module-torch.distributed.nn"], [23, "module-torch.distributed.nn.api"], [23, "module-torch.distributed.nn.jit"], [23, "module-torch.distributed.nn.jit.templates"], [23, "module-torch.distributed.pipeline"], [23, "module-torch.distributed.pipeline.sync"], [23, "module-torch.distributed.pipeline.sync.skip"], [23, "module-torch.distributed.tensor"], [25, "module-torch.distributed.checkpoint"], [27, "module-torch.distributed.optim"], [28, "module-torch.distributed.tensor.parallel"], [29, "module-torch.distributions"], [29, "module-torch.distributions.constraint_registry"], [29, "module-torch.distributions.constraints"], [29, "module-torch.distributions.kl"], [29, "module-torch.distributions.transforms"], [31, "module-torch.distributed.elastic.agent"], [31, "module-torch.distributed.elastic.agent.server"], [33, "module-torch.distributed.elastic.multiprocessing.errors"], [34, "module-torch.distributed.elastic.events"], [37, "module-torch.distributed.elastic.metrics"], [38, "module-torch.distributed.elastic.multiprocessing"], [40, "module-torch.distributed.elastic.rendezvous"], [40, "module-torch.distributed.elastic.rendezvous.registry"], [41, "module-torch.distributed.run"], [42, "module-torch.distributed.elastic.timer"], [44, "module-torch.export"], [45, "module-torch.fft"], [46, "module-torch.distributed.fsdp"], [48, "module-torch.func"], [53, "module-torch.futures"], [54, "module-torch.fx"], [54, "module-torch.fx.experimental"], [54, "module-torch.fx.experimental.migrate_gradual_types"], [54, "module-torch.fx.experimental.unification"], [54, "module-torch.fx.experimental.unification.multipledispatch"], [54, "module-torch.fx.passes"], [54, "module-torch.fx.passes.backends"], [54, "module-torch.fx.passes.dialect"], [54, "module-torch.fx.passes.dialect.common"], [54, "module-torch.fx.passes.infra"], [54, "module-torch.fx.passes.tests"], [54, "module-torch.fx.passes.utils"], [1869, "module-torch.hub"], [1871, "module-torch.jit"], [1871, "module-torch.jit.mobile"], [1872, "module-torch.jit.supported_ops"], [1876, "module-torch.jit.unsupported_tensor_ops"], [1877, "module-torch.utils.jit"], [1879, "module-torch.linalg"], [1880, "module-torch._logging"], [1881, "module-torch.masked"], [1881, "module-torch.masked.maskedtensor"], [1883, "module-torch.utils.model_zoo"], [1884, "module-torch.monitor"], [1885, "module-torch.mps"], [1886, "module-torch.multiprocessing"], [1889, "module-torch.nested"], [1890, "module-torch.nn"], [1890, "module-torch.nn.backends"], [1890, "module-torch.nn.modules"], [1890, "module-torch.nn.parallel"], [1890, "module-torch.nn.utils"], [1890, "module-torch.nn.utils.stateless"], [1912, "module-torch.onnx"], [1913, "module-torch.onnx._internal.diagnostics"], [1915, "module-torch.optim"], [1916, "module-torch.package"], [1916, "module-torch.package.analyze"], [1918, "module-torch.profiler"], [1919, "module-torch.ao"], [1919, "module-torch.ao.nn"], [1919, "module-torch.ao.nn.quantizable"], [1919, "module-torch.ao.nn.quantizable.modules"], [1919, "module-torch.ao.nn.quantized"], [1919, "module-torch.ao.nn.quantized.reference"], [1919, "module-torch.ao.nn.quantized.reference.modules"], [1919, "module-torch.ao.nn.sparse"], [1919, "module-torch.ao.nn.sparse.quantized"], [1919, "module-torch.ao.nn.sparse.quantized.dynamic"], [1919, "module-torch.ao.ns"], [1919, "module-torch.ao.ns.fx"], [1919, "module-torch.ao.pruning"], [1919, "module-torch.ao.pruning.scheduler"], [1919, "module-torch.ao.pruning.sparsifier"], [1919, "module-torch.ao.quantization"], [1919, "module-torch.ao.quantization.backend_config"], [1919, "module-torch.ao.quantization.fx"], [1922, "module-torch.ao.nn.intrinsic"], [1922, "module-torch.ao.nn.intrinsic.modules"], [1922, "module-torch.ao.nn.intrinsic.qat"], [1922, "module-torch.ao.nn.intrinsic.qat.modules"], [1922, "module-torch.ao.nn.intrinsic.quantized"], [1922, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1922, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1922, "module-torch.ao.nn.intrinsic.quantized.modules"], [1922, "module-torch.ao.nn.qat"], [1922, "module-torch.ao.nn.qat.dynamic"], [1922, "module-torch.ao.nn.qat.dynamic.modules"], [1922, "module-torch.ao.nn.qat.modules"], [1922, "module-torch.ao.nn.quantized.dynamic"], [1922, "module-torch.ao.nn.quantized.dynamic.modules"], [1922, "module-torch.ao.nn.quantized.functional"], [1922, "module-torch.ao.nn.quantized.modules"], [1922, "module-torch.ao.quantization.pt2e"], [1922, "module-torch.ao.quantization.pt2e.representation"], [1922, "module-torch.ao.quantization.quantizer"], [1922, "module-torch.nn.intrinsic"], [1922, "module-torch.nn.intrinsic.modules"], [1922, "module-torch.nn.intrinsic.qat"], [1922, "module-torch.nn.intrinsic.qat.modules"], [1922, "module-torch.nn.intrinsic.quantized"], [1922, "module-torch.nn.intrinsic.quantized.dynamic"], [1922, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1922, "module-torch.nn.intrinsic.quantized.modules"], [1922, "module-torch.nn.qat"], [1922, "module-torch.nn.qat.dynamic"], [1922, "module-torch.nn.qat.dynamic.modules"], [1922, "module-torch.nn.qat.modules"], [1922, "module-torch.nn.quantizable"], [1922, "module-torch.nn.quantizable.modules"], [1922, "module-torch.nn.quantized"], [1922, "module-torch.nn.quantized.dynamic"], [1922, "module-torch.nn.quantized.dynamic.modules"], [1922, "module-torch.nn.quantized.modules"], [1922, "module-torch.quantization"], [1922, "module-torch.quantization.fx"], [1923, "module-torch.random"], [1924, "module-torch.distributed.autograd"], [1924, "module-torch.distributed.rpc"], [1927, "module-torch.signal"], [1927, "module-torch.signal.windows"], [1928, "module-torch.sparse"], [1929, "module-torch.special"], [1933, "module-torch.utils.tensorboard"], [1935, "module-torch.testing"], [1936, "module-torch"], [1936, "module-torch.contrib"], [1936, "module-torch.utils.backcompat"], [1936, "module-torch.utils.hipify"], [1936, "module-torch.utils.model_dump"], [1936, "module-torch.utils.viz"], [1937, "module-torch.ao.ns._numeric_suite"], [1938, "module-torch.ao.ns._numeric_suite_fx"], [1940, "module-torch.compiler"], [1961, "module-torch.utils"]], "scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[0, "module-torch.amp"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "parallel_info() (in module torch.__config__)": [[12, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[12, "torch.__config__.show"]], "torch.__config__": [[12, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[15, "module-torch.cpu"]], "torch.cuda": [[16, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[17, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[17, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[20, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[20, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[20, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[20, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[20, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[20, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[20, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[20, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[20, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[20, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[20, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[20, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[20, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[20, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[20, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[20, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[20, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[20, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[20, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[20, "torch.utils.data.random_split"]], "torch.utils.data": [[20, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[20, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[20, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[20, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[20, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[20, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[21, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[23, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[23, "torch.distributed.DistBackendError"]], "filestore (class in torch.distributed)": [[23, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[23, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[23, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[23, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[23, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[23, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[23, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[23, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[23, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[23, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[23, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[23, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[23, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[23, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[23, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[23, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[23, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[23, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[23, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[23, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[23, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[23, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[23, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[23, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[23, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[23, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[23, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[23, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[23, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[23, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[23, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[23, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[23, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[23, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[23, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[23, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[23, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[23, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[23, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[23, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[23, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[23, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[23, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[23, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[23, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[23, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[23, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[23, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[23, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[23, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[23, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[23, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[23, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[23, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[23, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[23, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[23, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[23, "module-torch.distributed"]], "torch.distributed.algorithms": [[23, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[23, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[23, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[23, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[23, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[23, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[23, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[23, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[23, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[23, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[23, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[23, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[23, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[23, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[23, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[23, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[23, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[24, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[24, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[24, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[24, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[24, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[24, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[24, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[24, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[24, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[25, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[25, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[25, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[25, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[25, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[27, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[27, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[27, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[28, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[28, "torch.distributed.tensor.parallel.parallelize_module"]], "pre_dp_module_transform() (in module torch.distributed.tensor.parallel.ddp)": [[28, "torch.distributed.tensor.parallel.ddp.pre_dp_module_transform"]], "torch.distributed.tensor.parallel": [[28, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[29, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[29, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[29, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[29, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[29, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[29, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[29, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[29, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[29, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[29, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[29, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[29, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[29, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[29, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[29, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[29, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[29, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[29, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[29, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[29, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[29, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[29, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[29, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[29, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[29, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[29, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[29, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[29, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[29, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[29, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[29, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[29, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[29, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[29, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[29, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[29, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[29, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[29, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[29, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[29, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[29, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[29, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[29, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[29, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[29, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[29, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[29, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[29, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[29, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[29, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[29, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[29, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[29, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[29, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[29, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[29, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[29, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[29, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[29, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[29, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[29, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[29, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[29, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[29, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[29, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[29, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[29, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[29, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[29, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[29, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[29, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[29, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[29, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[29, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[29, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[29, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[29, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[29, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[29, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[29, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[29, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[29, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[29, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[29, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[29, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[29, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[29, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[29, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[29, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[29, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[29, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[29, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[29, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[29, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[29, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[29, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[29, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[29, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[29, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[29, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[29, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[29, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[29, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[29, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[29, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[29, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[29, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[29, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[29, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[29, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[29, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[29, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[29, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[29, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[29, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[29, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[29, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[29, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[29, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[29, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[29, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[29, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[29, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[29, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[29, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[29, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[29, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[29, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[29, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[29, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[29, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[29, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[29, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[29, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[29, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[29, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[29, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[29, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[29, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[29, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[29, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[29, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[29, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[29, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[29, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[30, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[30, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[31, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[31, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[31, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[31, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[31, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[31, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[31, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[31, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[33, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[34, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[34, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[34, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[34, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[34, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[34, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[37, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[37, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[37, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[37, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[37, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[37, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[37, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[38, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[38, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[40, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[40, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[40, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[41, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[42, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[42, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[42, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[42, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[42, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[42, "module-torch.distributed.elastic.timer"]], "argumentkind (class in torch.export)": [[44, "torch.export.ArgumentKind"]], "argumentspec (class in torch.export)": [[44, "torch.export.ArgumentSpec"]], "constraint (class in torch.export)": [[44, "torch.export.Constraint"]], "exportbackwardsignature (class in torch.export)": [[44, "torch.export.ExportBackwardSignature"]], "exportgraphsignature (class in torch.export)": [[44, "torch.export.ExportGraphSignature"]], "exportedprogram (class in torch.export)": [[44, "torch.export.ExportedProgram"]], "modulecallentry (class in torch.export)": [[44, "torch.export.ModuleCallEntry"]], "modulecallsignature (class in torch.export)": [[44, "torch.export.ModuleCallSignature"]], "constrain_as_size() (in module torch.export)": [[44, "torch.export.constrain_as_size"]], "constrain_as_value() (in module torch.export)": [[44, "torch.export.constrain_as_value"]], "dynamic_dim() (in module torch.export)": [[44, "torch.export.dynamic_dim"]], "export() (in module torch.export)": [[44, "torch.export.export"]], "module() (torch.export.exportedprogram method)": [[44, "torch.export.ExportedProgram.module"]], "torch.export": [[44, "module-torch.export"]], "transform() (torch.export.exportedprogram method)": [[44, "torch.export.ExportedProgram.transform"]], "validate() (torch.export.exportedprogram method)": [[44, "torch.export.ExportedProgram.validate"]], "torch.fft": [[45, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[46, "module-torch.distributed.fsdp"]], "torch.func": [[48, "module-torch.func"]], "future (class in torch.futures)": [[53, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[53, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[53, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[53, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[53, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[53, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[53, "torch.futures.Future.then"]], "torch.futures": [[53, "module-torch.futures"]], "value() (torch.futures.future method)": [[53, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[53, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[53, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[54, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[54, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[54, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[54, "torch.fx.Node"]], "proxy (class in torch.fx)": [[54, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[54, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[54, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[54, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[54, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[54, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[54, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[54, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[54, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[54, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[54, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[54, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[54, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[54, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[54, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[54, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[54, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[54, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[54, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[54, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[54, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[54, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[54, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[54, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[54, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[54, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[54, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[54, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[54, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[54, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[54, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[54, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[54, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[54, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[54, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[54, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[54, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[54, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[54, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[54, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[54, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[54, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[54, "module-torch.fx"]], "torch.fx.experimental": [[54, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[54, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[54, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[54, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[54, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[54, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[54, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[54, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[54, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[54, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[54, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[54, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[54, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[54, "torch.fx.wrap"]], "generator (class in torch)": [[79, "torch.Generator"]], "device (torch.generator attribute)": [[79, "torch.Generator.device"]], "get_state() (torch.generator method)": [[79, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[79, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[79, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[79, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[79, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[80, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[81, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[82, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[83, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[84, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[85, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[86, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[87, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[88, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[89, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[90, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[91, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[92, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[93, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[94, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[95, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[96, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[97, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[98, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[99, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[100, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[101, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[102, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[103, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[104, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[105, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[106, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[107, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[108, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[109, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[110, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[111, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[112, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[113, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[114, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[115, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[116, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[117, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[118, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[119, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[120, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[121, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[122, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[123, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[124, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[125, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[126, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[127, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[128, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[129, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[130, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[131, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[132, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[133, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[134, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[135, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[136, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[137, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[138, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[139, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[140, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[141, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[142, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[143, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[144, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[145, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[146, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[147, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[148, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[149, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[150, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[151, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[152, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[153, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[154, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[155, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[156, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[157, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[158, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[159, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[160, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[161, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[162, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[163, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[164, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[165, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[166, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[167, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[168, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[169, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[170, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[171, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[172, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[173, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[174, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[175, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[176, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[177, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[178, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[179, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[180, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[181, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[182, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[183, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[184, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[185, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[186, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[187, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[188, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[189, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[190, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[191, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[192, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[193, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[194, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[195, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[196, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[197, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[198, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[199, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[200, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[201, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[202, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[203, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[204, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[205, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[206, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[207, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[208, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[209, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[210, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[211, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[212, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[213, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[214, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[215, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[216, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[217, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[218, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[219, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[220, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[221, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[222, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[223, "torch.Tensor.dim"]], "dim_order() (torch.tensor method)": [[224, "torch.Tensor.dim_order"]], "dist() (torch.tensor method)": [[225, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[226, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[227, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[228, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[229, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[230, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[231, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[232, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[233, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[234, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[235, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[236, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[237, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[238, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[239, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[240, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[241, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[242, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[243, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[244, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[245, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[246, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[247, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[248, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[249, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[250, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[251, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[252, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[253, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[254, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[255, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[256, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[257, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[258, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[259, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[260, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[261, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[262, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[263, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[264, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[265, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[266, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[267, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[268, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[269, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[270, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[271, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[272, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[273, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[274, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[275, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[276, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[277, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[278, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[279, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[280, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[281, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[282, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[283, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[284, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[285, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[286, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[287, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[288, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[289, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[290, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[291, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[292, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[293, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[294, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[295, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[296, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[297, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[298, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[299, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[300, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[301, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[302, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[303, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[304, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[305, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[306, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[307, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[308, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[309, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[310, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[311, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[312, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[313, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[314, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[315, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[316, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[317, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[318, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[319, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[320, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[321, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[322, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[323, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[324, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[325, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[326, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[327, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[328, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[329, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[330, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[331, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[332, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[333, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[334, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[335, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[336, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[337, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[338, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[339, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[340, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[341, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[342, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[343, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[344, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[345, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[346, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[347, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[348, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[349, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[350, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[351, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[352, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[353, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[354, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[355, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[356, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[357, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[358, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[359, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[360, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[361, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[362, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[363, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[364, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[365, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[366, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[367, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[368, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[369, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[370, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[371, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[372, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[373, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[374, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[375, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[376, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[377, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[378, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[379, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[380, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[381, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[382, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[383, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[384, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[385, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[386, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[387, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[388, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[389, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[390, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[391, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[392, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[393, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[394, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[395, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[396, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[397, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[398, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[399, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[400, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[401, "torch.Tensor.median"]], "min() (torch.tensor method)": [[402, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[403, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[404, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[405, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[406, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[407, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[408, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[409, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[410, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[411, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[412, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[413, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[414, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[415, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[416, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[417, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[418, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[419, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[420, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[421, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[422, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[423, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[424, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[425, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[426, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[427, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[428, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[429, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[430, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[431, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[432, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[433, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[434, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[435, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[436, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[437, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[438, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[439, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[440, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[441, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[442, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[443, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[444, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[445, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[446, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[447, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[448, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[449, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[450, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[451, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[452, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[453, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[454, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[455, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[456, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[457, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[458, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[459, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[460, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[461, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[462, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[463, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[464, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[465, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[466, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[467, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[468, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[469, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[470, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[471, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[472, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[473, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[474, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[475, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[476, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[477, "torch.Tensor.register_hook"]], "remainder() (torch.tensor method)": [[478, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[479, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[480, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[481, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[482, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[483, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[484, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[485, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[486, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[487, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[488, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[489, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[490, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[491, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[492, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[493, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[494, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[495, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[496, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[497, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[498, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[499, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[500, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[501, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[502, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[503, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[504, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[505, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[506, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[507, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[508, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[509, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[510, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[511, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[512, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[513, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[514, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[515, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[516, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[517, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[518, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[519, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[520, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[521, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[522, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[523, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[524, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[525, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[526, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[527, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[528, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[529, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[530, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[531, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[532, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[533, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[534, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[535, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[536, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[537, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[538, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[539, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[540, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[541, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[542, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[543, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[544, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[545, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[546, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[547, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[548, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[549, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[550, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[551, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[552, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[553, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[554, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[555, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[556, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[557, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[558, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[559, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[560, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[561, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[562, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[563, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[564, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[565, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[566, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[567, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[568, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[569, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[570, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[571, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[572, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[573, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[574, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[575, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[576, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[577, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[578, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[579, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[580, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[581, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[582, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[583, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[584, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[585, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[586, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[587, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[588, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[589, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[590, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[591, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[592, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[593, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[594, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[595, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[596, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[597, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[598, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[599, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[600, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[601, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[602, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[603, "torch.Tensor.values"]], "var() (torch.tensor method)": [[604, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[605, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[606, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[607, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[608, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[609, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[610, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[611, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[612, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[613, "torch._assert"]], "_foreach_abs() (in module torch)": [[614, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[615, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[616, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[617, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[618, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[619, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[620, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[621, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[622, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[623, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[624, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[625, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[626, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[627, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[628, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[629, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[630, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[631, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[632, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[633, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[634, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[635, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[636, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[637, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[638, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[639, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[640, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[641, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[642, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[643, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[644, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[645, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[646, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[647, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[648, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[649, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[650, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[651, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[652, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[653, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[654, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[655, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[656, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[657, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[658, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[659, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[660, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[661, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[662, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[663, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[664, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[665, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[666, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[667, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[668, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[669, "torch._logging.set_logs"]], "abs() (in module torch)": [[670, "torch.abs"]], "absolute() (in module torch)": [[671, "torch.absolute"]], "acos() (in module torch)": [[672, "torch.acos"]], "acosh() (in module torch)": [[673, "torch.acosh"]], "add() (in module torch)": [[674, "torch.add"]], "addbmm() (in module torch)": [[675, "torch.addbmm"]], "addcdiv() (in module torch)": [[676, "torch.addcdiv"]], "addcmul() (in module torch)": [[677, "torch.addcmul"]], "addmm() (in module torch)": [[678, "torch.addmm"]], "addmv() (in module torch)": [[679, "torch.addmv"]], "addr() (in module torch)": [[680, "torch.addr"]], "adjoint() (in module torch)": [[681, "torch.adjoint"]], "all() (in module torch)": [[682, "torch.all"]], "allclose() (in module torch)": [[683, "torch.allclose"]], "amax() (in module torch)": [[684, "torch.amax"]], "amin() (in module torch)": [[685, "torch.amin"]], "aminmax() (in module torch)": [[686, "torch.aminmax"]], "angle() (in module torch)": [[687, "torch.angle"]], "any() (in module torch)": [[688, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[689, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[690, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[691, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[692, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[693, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[694, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[695, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[701, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[702, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[703, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[704, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[705, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[706, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[707, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[712, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[713, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[714, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[715, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[716, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[717, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[718, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[719, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[720, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[721, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[721, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[722, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[723, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[724, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[724, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[724, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[725, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[726, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[727, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[727, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[728, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[728, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[729, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[729, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[730, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[731, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[734, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[735, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[745, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[745, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[749, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[750, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[751, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[752, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[753, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[753, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[753, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[754, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[755, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[756, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[757, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[758, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[759, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[760, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[761, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[777, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[778, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[779, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[780, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[781, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[781, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[783, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[783, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[783, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[784, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[785, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[785, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[785, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[785, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[786, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[787, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[788, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[789, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[790, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[791, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[792, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[793, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[794, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[803, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[807, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[808, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[809, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[809, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[809, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[809, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[810, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[811, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[812, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[813, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[813, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[813, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[814, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[814, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[827, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[828, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[829, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[830, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[831, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[832, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[833, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[834, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[835, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[836, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[844, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[845, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[846, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[847, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[848, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[849, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[850, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[851, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[852, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[853, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[854, "torch.arange"]], "arccos() (in module torch)": [[855, "torch.arccos"]], "arccosh() (in module torch)": [[856, "torch.arccosh"]], "arcsin() (in module torch)": [[857, "torch.arcsin"]], "arcsinh() (in module torch)": [[858, "torch.arcsinh"]], "arctan() (in module torch)": [[859, "torch.arctan"]], "arctan2() (in module torch)": [[860, "torch.arctan2"]], "arctanh() (in module torch)": [[861, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[862, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[863, "torch.argmax"]], "argmin() (in module torch)": [[864, "torch.argmin"]], "argsort() (in module torch)": [[865, "torch.argsort"]], "argwhere() (in module torch)": [[866, "torch.argwhere"]], "as_strided() (in module torch)": [[867, "torch.as_strided"]], "as_tensor() (in module torch)": [[868, "torch.as_tensor"]], "asarray() (in module torch)": [[869, "torch.asarray"]], "asin() (in module torch)": [[870, "torch.asin"]], "asinh() (in module torch)": [[871, "torch.asinh"]], "atan() (in module torch)": [[872, "torch.atan"]], "atan2() (in module torch)": [[873, "torch.atan2"]], "atanh() (in module torch)": [[874, "torch.atanh"]], "atleast_1d() (in module torch)": [[875, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[876, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[877, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[878, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[879, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[880, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[881, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[882, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[883, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[884, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[885, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[886, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[887, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[888, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[889, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[890, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[891, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[892, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[893, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[894, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[895, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[896, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[897, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[898, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[899, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[900, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[901, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[902, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[903, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[904, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[905, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[906, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[907, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[908, "torch.autograd.profiler.profile.total_average"]], "baddbmm() (in module torch)": [[909, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[910, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[911, "torch.bernoulli"]], "bincount() (in module torch)": [[912, "torch.bincount"]], "bitwise_and() (in module torch)": [[913, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[914, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[915, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[916, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[917, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[918, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[919, "torch.blackman_window"]], "block_diag() (in module torch)": [[920, "torch.block_diag"]], "bmm() (in module torch)": [[921, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[922, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[923, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[924, "torch.broadcast_to"]], "bucketize() (in module torch)": [[925, "torch.bucketize"]], "can_cast() (in module torch)": [[926, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[927, "torch.cartesian_prod"]], "cat() (in module torch)": [[928, "torch.cat"]], "cdist() (in module torch)": [[929, "torch.cdist"]], "ceil() (in module torch)": [[930, "torch.ceil"]], "chain_matmul() (in module torch)": [[931, "torch.chain_matmul"]], "cholesky() (in module torch)": [[932, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[933, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[934, "torch.cholesky_solve"]], "chunk() (in module torch)": [[935, "torch.chunk"]], "clamp() (in module torch)": [[936, "torch.clamp"]], "clip() (in module torch)": [[937, "torch.clip"]], "clone() (in module torch)": [[938, "torch.clone"]], "column_stack() (in module torch)": [[939, "torch.column_stack"]], "combinations() (in module torch)": [[940, "torch.combinations"]], "compile() (in module torch)": [[941, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[942, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[943, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[944, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[945, "torch.compiler.compile"]], "disable() (in module torch.compiler)": [[946, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[947, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[948, "torch.compiler.reset"]], "complex() (in module torch)": [[949, "torch.complex"]], "concat() (in module torch)": [[950, "torch.concat"]], "concatenate() (in module torch)": [[951, "torch.concatenate"]], "conj() (in module torch)": [[952, "torch.conj"]], "conj_physical() (in module torch)": [[953, "torch.conj_physical"]], "copysign() (in module torch)": [[954, "torch.copysign"]], "corrcoef() (in module torch)": [[955, "torch.corrcoef"]], "cos() (in module torch)": [[956, "torch.cos"]], "cosh() (in module torch)": [[957, "torch.cosh"]], "count_nonzero() (in module torch)": [[958, "torch.count_nonzero"]], "cov() (in module torch)": [[959, "torch.cov"]], "stream (class in torch.cpu)": [[960, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[961, "torch.cpu.StreamContext"]], "current_stream() (in module torch.cpu)": [[962, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[963, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[964, "torch.cpu.is_available"]], "stream() (in module torch.cpu)": [[965, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[966, "torch.cpu.synchronize"]], "cross() (in module torch)": [[967, "torch.cross"]], "cudagraph (class in torch.cuda)": [[968, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[968, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[968, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[968, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[968, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[968, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[968, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[968, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[969, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[970, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[970, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[970, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[970, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[970, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[970, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[970, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[970, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[971, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[971, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[971, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[971, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[971, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[971, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[972, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[973, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[973, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[973, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[973, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[973, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[973, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[974, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[975, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[976, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[977, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[978, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[979, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[980, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[981, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[982, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[983, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[984, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[985, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[986, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[987, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[988, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[989, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[990, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[991, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[992, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[993, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[994, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[995, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[996, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[997, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[998, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[999, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1000, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1001, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1002, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1003, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1004, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1005, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1006, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1007, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1008, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1009, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1010, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1011, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1012, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1013, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1014, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1015, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1016, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1017, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1018, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1019, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1020, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1021, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1022, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1023, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1024, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1025, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1026, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1027, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1028, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1029, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1030, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1031, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1032, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1033, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1034, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1035, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1036, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1037, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1038, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1039, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1040, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1041, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1042, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1043, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1044, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1045, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1046, "torch.cummax"]], "cummin() (in module torch)": [[1047, "torch.cummin"]], "cumprod() (in module torch)": [[1048, "torch.cumprod"]], "cumsum() (in module torch)": [[1049, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1050, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1051, "torch.deg2rad"]], "dequantize() (in module torch)": [[1052, "torch.dequantize"]], "det() (in module torch)": [[1053, "torch.det"]], "diag() (in module torch)": [[1054, "torch.diag"]], "diag_embed() (in module torch)": [[1055, "torch.diag_embed"]], "diagflat() (in module torch)": [[1056, "torch.diagflat"]], "diagonal() (in module torch)": [[1057, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1058, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1059, "torch.diff"]], "digamma() (in module torch)": [[1060, "torch.digamma"]], "dist() (in module torch)": [[1061, "torch.dist"]], "div() (in module torch)": [[1062, "torch.div"]], "divide() (in module torch)": [[1063, "torch.divide"]], "dot() (in module torch)": [[1064, "torch.dot"]], "dsplit() (in module torch)": [[1065, "torch.dsplit"]], "dstack() (in module torch)": [[1066, "torch.dstack"]], "einsum() (in module torch)": [[1067, "torch.einsum"]], "empty() (in module torch)": [[1068, "torch.empty"]], "empty_like() (in module torch)": [[1069, "torch.empty_like"]], "empty_strided() (in module torch)": [[1070, "torch.empty_strided"]], "enable_grad (class in torch)": [[1071, "torch.enable_grad"]], "eq() (in module torch)": [[1072, "torch.eq"]], "equal() (in module torch)": [[1073, "torch.equal"]], "erf() (in module torch)": [[1074, "torch.erf"]], "erfc() (in module torch)": [[1075, "torch.erfc"]], "erfinv() (in module torch)": [[1076, "torch.erfinv"]], "exp() (in module torch)": [[1077, "torch.exp"]], "exp2() (in module torch)": [[1078, "torch.exp2"]], "expm1() (in module torch)": [[1079, "torch.expm1"]], "eye() (in module torch)": [[1080, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1081, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1082, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1083, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1084, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1085, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1086, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1087, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1088, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1089, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1090, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1091, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1092, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1093, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1094, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1095, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1096, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1097, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1098, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1099, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1100, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1101, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1102, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1103, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1104, "torch.fft.rfftn"]], "fix() (in module torch)": [[1105, "torch.fix"]], "flatten() (in module torch)": [[1106, "torch.flatten"]], "flip() (in module torch)": [[1107, "torch.flip"]], "fliplr() (in module torch)": [[1108, "torch.fliplr"]], "flipud() (in module torch)": [[1109, "torch.flipud"]], "float_power() (in module torch)": [[1110, "torch.float_power"]], "floor() (in module torch)": [[1111, "torch.floor"]], "floor_divide() (in module torch)": [[1112, "torch.floor_divide"]], "fmax() (in module torch)": [[1113, "torch.fmax"]], "fmin() (in module torch)": [[1114, "torch.fmin"]], "fmod() (in module torch)": [[1115, "torch.fmod"]], "frac() (in module torch)": [[1116, "torch.frac"]], "frexp() (in module torch)": [[1117, "torch.frexp"]], "from_dlpack() (in module torch)": [[1118, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1119, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1120, "torch.frombuffer"]], "full() (in module torch)": [[1121, "torch.full"]], "full_like() (in module torch)": [[1122, "torch.full_like"]], "functional_call() (in module torch.func)": [[1123, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1124, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1125, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1126, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1127, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1128, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1129, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1130, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1131, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1132, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1133, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1134, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1135, "torch.func.vmap"]], "gather() (in module torch)": [[1136, "torch.gather"]], "gcd() (in module torch)": [[1137, "torch.gcd"]], "ge() (in module torch)": [[1138, "torch.ge"]], "geqrf() (in module torch)": [[1139, "torch.geqrf"]], "ger() (in module torch)": [[1140, "torch.ger"]], "get_default_dtype() (in module torch)": [[1141, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1142, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1143, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1144, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1145, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1146, "torch.get_rng_state"]], "gradient() (in module torch)": [[1147, "torch.gradient"]], "greater() (in module torch)": [[1148, "torch.greater"]], "greater_equal() (in module torch)": [[1149, "torch.greater_equal"]], "gt() (in module torch)": [[1150, "torch.gt"]], "hamming_window() (in module torch)": [[1151, "torch.hamming_window"]], "hann_window() (in module torch)": [[1152, "torch.hann_window"]], "heaviside() (in module torch)": [[1153, "torch.heaviside"]], "histc() (in module torch)": [[1154, "torch.histc"]], "histogram() (in module torch)": [[1155, "torch.histogram"]], "histogramdd() (in module torch)": [[1156, "torch.histogramdd"]], "hsplit() (in module torch)": [[1157, "torch.hsplit"]], "hspmm() (in module torch)": [[1158, "torch.hspmm"]], "hstack() (in module torch)": [[1159, "torch.hstack"]], "hypot() (in module torch)": [[1160, "torch.hypot"]], "i0() (in module torch)": [[1161, "torch.i0"]], "igamma() (in module torch)": [[1162, "torch.igamma"]], "igammac() (in module torch)": [[1163, "torch.igammac"]], "imag() (in module torch)": [[1164, "torch.imag"]], "index_add() (in module torch)": [[1165, "torch.index_add"]], "index_copy() (in module torch)": [[1166, "torch.index_copy"]], "index_reduce() (in module torch)": [[1167, "torch.index_reduce"]], "index_select() (in module torch)": [[1168, "torch.index_select"]], "inference_mode (class in torch)": [[1169, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1170, "torch.initial_seed"]], "inner() (in module torch)": [[1171, "torch.inner"]], "inverse() (in module torch)": [[1172, "torch.inverse"]], "is_complex() (in module torch)": [[1173, "torch.is_complex"]], "is_conj() (in module torch)": [[1174, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1175, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1176, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1177, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1178, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1179, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1180, "torch.is_storage"]], "is_tensor() (in module torch)": [[1181, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1182, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1183, "torch.isclose"]], "isfinite() (in module torch)": [[1184, "torch.isfinite"]], "isin() (in module torch)": [[1185, "torch.isin"]], "isinf() (in module torch)": [[1186, "torch.isinf"]], "isnan() (in module torch)": [[1187, "torch.isnan"]], "isneginf() (in module torch)": [[1188, "torch.isneginf"]], "isposinf() (in module torch)": [[1189, "torch.isposinf"]], "isreal() (in module torch)": [[1190, "torch.isreal"]], "istft() (in module torch)": [[1191, "torch.istft"]], "attribute (class in torch.jit)": [[1192, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1192, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1192, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1192, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1192, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1193, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1193, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1193, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1193, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1194, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1194, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1194, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1194, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1194, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1194, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1195, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1196, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1197, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1198, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1199, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1200, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1201, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1202, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1203, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1204, "torch.jit.save"]], "script() (in module torch.jit)": [[1205, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1206, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1207, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1208, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1209, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1210, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1211, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1212, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1213, "torch.kaiser_window"]], "kron() (in module torch)": [[1214, "torch.kron"]], "kthvalue() (in module torch)": [[1215, "torch.kthvalue"]], "lcm() (in module torch)": [[1216, "torch.lcm"]], "ldexp() (in module torch)": [[1217, "torch.ldexp"]], "le() (in module torch)": [[1218, "torch.le"]], "lerp() (in module torch)": [[1219, "torch.lerp"]], "less() (in module torch)": [[1220, "torch.less"]], "less_equal() (in module torch)": [[1221, "torch.less_equal"]], "lgamma() (in module torch)": [[1222, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1223, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1224, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1225, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1226, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1227, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1228, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1229, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1230, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1231, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1232, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1233, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1234, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1235, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1236, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1237, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1238, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1239, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1240, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1241, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1242, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1243, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1244, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1245, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1246, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1247, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1248, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1249, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1250, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1251, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1252, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1253, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1254, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1255, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1256, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1257, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1258, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1259, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1260, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1261, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1262, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1263, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1264, "torch.linspace"]], "load() (in module torch)": [[1265, "torch.load"]], "lobpcg() (in module torch)": [[1266, "torch.lobpcg"]], "log() (in module torch)": [[1267, "torch.log"]], "log10() (in module torch)": [[1268, "torch.log10"]], "log1p() (in module torch)": [[1269, "torch.log1p"]], "log2() (in module torch)": [[1270, "torch.log2"]], "logaddexp() (in module torch)": [[1271, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1272, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1273, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1274, "torch.logdet"]], "logical_and() (in module torch)": [[1275, "torch.logical_and"]], "logical_not() (in module torch)": [[1276, "torch.logical_not"]], "logical_or() (in module torch)": [[1277, "torch.logical_or"]], "logical_xor() (in module torch)": [[1278, "torch.logical_xor"]], "logit() (in module torch)": [[1279, "torch.logit"]], "logspace() (in module torch)": [[1280, "torch.logspace"]], "logsumexp() (in module torch)": [[1281, "torch.logsumexp"]], "lt() (in module torch)": [[1282, "torch.lt"]], "lu() (in module torch)": [[1283, "torch.lu"]], "lu_solve() (in module torch)": [[1284, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1285, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1286, "torch.manual_seed"]], "masked_select() (in module torch)": [[1287, "torch.masked_select"]], "matmul() (in module torch)": [[1288, "torch.matmul"]], "matrix_exp() (in module torch)": [[1289, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1290, "torch.matrix_power"]], "max() (in module torch)": [[1291, "torch.max"]], "maximum() (in module torch)": [[1292, "torch.maximum"]], "mean() (in module torch)": [[1293, "torch.mean"]], "median() (in module torch)": [[1294, "torch.median"]], "meshgrid() (in module torch)": [[1295, "torch.meshgrid"]], "min() (in module torch)": [[1296, "torch.min"]], "minimum() (in module torch)": [[1297, "torch.minimum"]], "mm() (in module torch)": [[1298, "torch.mm"]], "mode() (in module torch)": [[1299, "torch.mode"]], "moveaxis() (in module torch)": [[1300, "torch.moveaxis"]], "movedim() (in module torch)": [[1301, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1302, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1303, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1304, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1305, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1305, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1305, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1305, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1305, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1305, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1306, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1307, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1308, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1309, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1310, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1311, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1312, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1313, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1314, "torch.mps.synchronize"]], "msort() (in module torch)": [[1315, "torch.msort"]], "mul() (in module torch)": [[1316, "torch.mul"]], "multinomial() (in module torch)": [[1317, "torch.multinomial"]], "multiply() (in module torch)": [[1318, "torch.multiply"]], "mv() (in module torch)": [[1319, "torch.mv"]], "mvlgamma() (in module torch)": [[1320, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1321, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1322, "torch.nanmean"]], "nanmedian() (in module torch)": [[1323, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1324, "torch.nanquantile"]], "nansum() (in module torch)": [[1325, "torch.nansum"]], "narrow() (in module torch)": [[1326, "torch.narrow"]], "narrow_copy() (in module torch)": [[1327, "torch.narrow_copy"]], "ne() (in module torch)": [[1328, "torch.ne"]], "neg() (in module torch)": [[1329, "torch.neg"]], "negative() (in module torch)": [[1330, "torch.negative"]], "nextafter() (in module torch)": [[1331, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1332, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1333, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1334, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1335, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1335, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1335, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1336, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1337, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1338, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1339, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1340, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1341, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1342, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1343, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1344, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1345, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1346, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1347, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1348, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1349, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1350, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1351, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1352, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1353, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1354, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1355, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1356, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1357, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1358, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1359, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1360, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1361, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1362, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1363, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1364, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1365, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1366, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1367, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1368, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1369, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1370, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1370, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1371, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1371, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1371, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1372, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1373, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1374, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1375, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1376, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1377, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1378, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1379, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1380, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1381, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1382, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1383, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1384, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1385, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1386, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1387, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1388, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1389, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1390, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1391, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1392, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1393, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1394, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1395, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1396, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1397, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1398, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1399, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1400, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1400, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1401, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1401, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1402, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1402, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1403, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1403, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1404, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1404, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1405, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1405, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1406, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1406, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1407, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1407, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1408, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1408, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1409, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1409, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1410, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1410, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1411, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1411, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1412, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1412, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1413, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1414, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1415, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1416, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1417, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1418, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1419, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1420, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1421, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1422, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1423, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1424, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1425, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1426, "torch.nn.Mish"]], "module (class in torch.nn)": [[1427, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1427, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1427, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1427, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1427, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1427, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1427, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1427, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1427, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1427, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1427, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1427, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1427, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1427, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1427, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1427, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1427, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1427, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1427, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1427, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1427, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1427, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1427, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1427, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1427, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1427, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1427, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1427, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1427, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1427, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1427, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1427, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1427, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1427, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1427, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1427, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1427, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1427, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1427, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1427, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1427, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1428, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1428, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1429, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1429, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1429, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1429, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1430, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1431, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1432, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1433, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1433, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1433, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1434, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1435, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1436, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1437, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1437, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1438, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1438, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1438, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1439, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1440, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1441, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1442, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1443, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1443, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1444, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1445, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1446, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1447, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1448, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1449, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1450, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1451, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1452, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1453, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1454, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1455, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1455, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1456, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1457, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1458, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1459, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1460, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1461, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1462, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1463, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1464, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1465, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1466, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1466, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1467, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1468, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1469, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1470, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1470, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1470, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1471, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1471, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1472, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1472, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1473, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1473, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1474, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1474, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1475, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1476, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1477, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1478, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1479, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1480, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1481, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1482, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1483, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1484, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1485, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1486, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1487, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1488, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1489, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1490, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1491, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1492, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1493, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1494, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1495, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1496, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1497, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1498, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1499, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1500, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1501, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1502, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1503, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1504, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1505, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1506, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1507, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1508, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1509, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1510, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1511, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1512, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1513, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1514, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1515, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1516, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1517, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1518, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1519, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1520, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1521, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1522, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1523, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1524, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1525, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1526, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1527, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1528, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1529, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1530, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1531, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1532, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1533, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1534, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1535, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1536, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1537, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1538, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1539, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1540, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1541, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1542, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1543, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1544, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1545, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1546, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1547, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1548, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1549, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1550, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1551, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1552, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1553, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1554, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1555, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1556, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1557, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1558, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1559, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1560, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1561, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1562, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1563, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1564, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1565, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1566, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1567, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1568, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1569, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1570, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1571, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1572, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1573, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1574, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1575, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1576, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1577, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1578, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1579, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1580, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1581, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1582, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1583, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1584, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1585, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1586, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1587, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1588, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1589, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1590, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1591, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1592, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1593, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1594, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1595, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1596, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1597, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1598, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1598, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1598, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1599, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1600, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1601, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1602, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1603, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1604, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1605, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1606, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1607, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1607, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1607, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1607, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1607, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1608, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1609, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1610, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1610, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1611, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1612, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1613, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1614, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1615, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1616, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1616, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1617, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1618, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1619, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1620, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1621, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1621, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1621, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1621, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1621, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1621, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1622, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1622, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1622, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1622, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1622, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1623, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1623, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1623, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1623, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1623, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1624, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1624, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1624, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1624, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1624, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1625, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1625, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1625, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1625, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1625, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1625, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1626, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1626, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1626, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1626, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1626, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1626, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1626, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1627, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1627, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1627, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1627, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1627, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1627, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1628, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1628, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1628, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1628, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1628, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1629, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1630, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1631, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1632, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1633, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1634, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1635, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1636, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1637, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1638, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1639, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1640, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1640, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1640, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1640, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1640, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1640, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1640, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1640, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1640, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1640, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1641, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1642, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1643, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1644, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1645, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1646, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1647, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1648, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1649, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1650, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1651, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1652, "torch.no_grad"]], "nonzero() (in module torch)": [[1653, "torch.nonzero"]], "norm() (in module torch)": [[1654, "torch.norm"]], "normal() (in module torch)": [[1655, "torch.normal"]], "not_equal() (in module torch)": [[1656, "torch.not_equal"]], "numel() (in module torch)": [[1657, "torch.numel"]], "ones() (in module torch)": [[1658, "torch.ones"]], "ones_like() (in module torch)": [[1659, "torch.ones_like"]], "diagnosticoptions (class in torch.onnx)": [[1660, "torch.onnx.DiagnosticOptions"]], "exportoptions (class in torch.onnx)": [[1661, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1662, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1662, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1662, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1662, "torch.onnx.ExportOutput.diagnostic_context"]], "fake_context (torch.onnx.exportoutput property)": [[1662, "torch.onnx.ExportOutput.fake_context"]], "model_proto (torch.onnx.exportoutput property)": [[1662, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1662, "torch.onnx.ExportOutput.save"]], "save_diagnostics() (torch.onnx.exportoutput method)": [[1662, "torch.onnx.ExportOutput.save_diagnostics"]], "exportoutputserializer (class in torch.onnx)": [[1663, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1663, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1664, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1664, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1664, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1664, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1664, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1664, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1664, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1664, "torch.onnx.JitScalarType.torch_name"]], "onnxexportererror (class in torch.onnx)": [[1665, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[1666, "torch.onnx.OnnxRegistry"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[1666, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[1666, "torch.onnx.OnnxRegistry.is_registered_op"]], "opset_version (torch.onnx.onnxregistry property)": [[1666, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[1666, "torch.onnx.OnnxRegistry.register_op"]], "graphinfo (class in torch.onnx.verification)": [[1667, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1668, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1669, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1670, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1671, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1672, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1672, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1672, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1672, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1672, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1672, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1672, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1672, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1672, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1672, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1672, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1672, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1673, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1674, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1675, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1676, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1677, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1678, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1679, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1680, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1681, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1682, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1683, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1684, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1685, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1686, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1687, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1687, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1687, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1687, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1687, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1688, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1688, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1688, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1688, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1688, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1689, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1689, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1689, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1689, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1689, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1691, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1691, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1691, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1691, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1692, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1692, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1692, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1692, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1692, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1693, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1693, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1693, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1693, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1693, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1694, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1694, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1694, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1694, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1694, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1695, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1695, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1695, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1695, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1695, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1696, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1696, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1696, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1696, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1696, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1697, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1697, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1697, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1697, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1697, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1698, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1698, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1698, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1698, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1698, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1699, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1700, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1700, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1700, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1700, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1700, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1701, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1701, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1701, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1701, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1701, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1702, "torch.orgqr"]], "ormqr() (in module torch)": [[1703, "torch.ormqr"]], "outer() (in module torch)": [[1704, "torch.outer"]], "pca_lowrank() (in module torch)": [[1705, "torch.pca_lowrank"]], "permute() (in module torch)": [[1706, "torch.permute"]], "pinverse() (in module torch)": [[1707, "torch.pinverse"]], "poisson() (in module torch)": [[1708, "torch.poisson"]], "polar() (in module torch)": [[1709, "torch.polar"]], "polygamma() (in module torch)": [[1710, "torch.polygamma"]], "positive() (in module torch)": [[1711, "torch.positive"]], "pow() (in module torch)": [[1712, "torch.pow"]], "prod() (in module torch)": [[1713, "torch.prod"]], "promote_types() (in module torch)": [[1714, "torch.promote_types"]], "qr() (in module torch)": [[1715, "torch.qr"]], "quantile() (in module torch)": [[1716, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1717, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1718, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1719, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1720, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1721, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1722, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1722, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1722, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1722, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1722, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1723, "torch.rad2deg"]], "rand() (in module torch)": [[1724, "torch.rand"]], "rand_like() (in module torch)": [[1725, "torch.rand_like"]], "randint() (in module torch)": [[1726, "torch.randint"]], "randint_like() (in module torch)": [[1727, "torch.randint_like"]], "randn() (in module torch)": [[1728, "torch.randn"]], "randn_like() (in module torch)": [[1729, "torch.randn_like"]], "randperm() (in module torch)": [[1730, "torch.randperm"]], "range() (in module torch)": [[1731, "torch.range"]], "ravel() (in module torch)": [[1732, "torch.ravel"]], "real() (in module torch)": [[1733, "torch.real"]], "reciprocal() (in module torch)": [[1734, "torch.reciprocal"]], "remainder() (in module torch)": [[1735, "torch.remainder"]], "renorm() (in module torch)": [[1736, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1737, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1738, "torch.reshape"]], "resolve_conj() (in module torch)": [[1739, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1740, "torch.resolve_neg"]], "result_type() (in module torch)": [[1741, "torch.result_type"]], "roll() (in module torch)": [[1742, "torch.roll"]], "rot90() (in module torch)": [[1743, "torch.rot90"]], "round() (in module torch)": [[1744, "torch.round"]], "row_stack() (in module torch)": [[1745, "torch.row_stack"]], "rsqrt() (in module torch)": [[1746, "torch.rsqrt"]], "save() (in module torch)": [[1747, "torch.save"]], "scatter() (in module torch)": [[1748, "torch.scatter"]], "scatter_add() (in module torch)": [[1749, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1750, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1751, "torch.searchsorted"]], "seed() (in module torch)": [[1752, "torch.seed"]], "select() (in module torch)": [[1753, "torch.select"]], "select_scatter() (in module torch)": [[1754, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1755, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1756, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1757, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1758, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1759, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1760, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1761, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1762, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1763, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1764, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1765, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1766, "torch.set_warn_always"]], "sgn() (in module torch)": [[1767, "torch.sgn"]], "sigmoid() (in module torch)": [[1768, "torch.sigmoid"]], "sign() (in module torch)": [[1769, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1770, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1771, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1772, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1773, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1774, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1775, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1776, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1777, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1778, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1779, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1780, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1781, "torch.signbit"]], "sin() (in module torch)": [[1782, "torch.sin"]], "sinc() (in module torch)": [[1783, "torch.sinc"]], "sinh() (in module torch)": [[1784, "torch.sinh"]], "slice_scatter() (in module torch)": [[1785, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1786, "torch.slogdet"]], "smm() (in module torch)": [[1787, "torch.smm"]], "softmax() (in module torch)": [[1788, "torch.softmax"]], "sort() (in module torch)": [[1789, "torch.sort"]], "addmm() (in module torch.sparse)": [[1790, "torch.sparse.addmm"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1791, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1791, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1791, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1791, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1792, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1793, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1794, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1795, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1796, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1797, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1798, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1799, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1800, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1801, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1802, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1803, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1804, "torch.split"]], "sqrt() (in module torch)": [[1805, "torch.sqrt"]], "square() (in module torch)": [[1806, "torch.square"]], "squeeze() (in module torch)": [[1807, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1808, "torch.sspaddmm"]], "stack() (in module torch)": [[1809, "torch.stack"]], "std() (in module torch)": [[1810, "torch.std"]], "std_mean() (in module torch)": [[1811, "torch.std_mean"]], "stft() (in module torch)": [[1812, "torch.stft"]], "sub() (in module torch)": [[1813, "torch.sub"]], "subtract() (in module torch)": [[1814, "torch.subtract"]], "sum() (in module torch)": [[1815, "torch.sum"]], "svd() (in module torch)": [[1816, "torch.svd"]], "svd_lowrank() (in module torch)": [[1817, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1818, "torch.swapaxes"]], "swapdims() (in module torch)": [[1819, "torch.swapdims"]], "sym_float() (in module torch)": [[1820, "torch.sym_float"]], "sym_int() (in module torch)": [[1821, "torch.sym_int"]], "sym_max() (in module torch)": [[1822, "torch.sym_max"]], "sym_min() (in module torch)": [[1823, "torch.sym_min"]], "sym_not() (in module torch)": [[1824, "torch.sym_not"]], "t() (in module torch)": [[1825, "torch.t"]], "take() (in module torch)": [[1826, "torch.take"]], "take_along_dim() (in module torch)": [[1827, "torch.take_along_dim"]], "tan() (in module torch)": [[1828, "torch.tan"]], "tanh() (in module torch)": [[1829, "torch.tanh"]], "tensor() (in module torch)": [[1830, "torch.tensor"]], "tensor_split() (in module torch)": [[1831, "torch.tensor_split"]], "tensordot() (in module torch)": [[1832, "torch.tensordot"]], "tile() (in module torch)": [[1833, "torch.tile"]], "topk() (in module torch)": [[1834, "torch.topk"]], "trace() (in module torch)": [[1835, "torch.trace"]], "transpose() (in module torch)": [[1836, "torch.transpose"]], "trapezoid() (in module torch)": [[1837, "torch.trapezoid"]], "trapz() (in module torch)": [[1838, "torch.trapz"]], "triangular_solve() (in module torch)": [[1839, "torch.triangular_solve"]], "tril() (in module torch)": [[1840, "torch.tril"]], "tril_indices() (in module torch)": [[1841, "torch.tril_indices"]], "triu() (in module torch)": [[1842, "torch.triu"]], "triu_indices() (in module torch)": [[1843, "torch.triu_indices"]], "true_divide() (in module torch)": [[1844, "torch.true_divide"]], "trunc() (in module torch)": [[1845, "torch.trunc"]], "unbind() (in module torch)": [[1846, "torch.unbind"]], "unflatten() (in module torch)": [[1847, "torch.unflatten"]], "unique() (in module torch)": [[1848, "torch.unique"]], "unique_consecutive() (in module torch)": [[1849, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1850, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1851, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1852, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1853, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1854, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1855, "torch.utils.set_module"]], "vander() (in module torch)": [[1856, "torch.vander"]], "var() (in module torch)": [[1857, "torch.var"]], "var_mean() (in module torch)": [[1858, "torch.var_mean"]], "vdot() (in module torch)": [[1859, "torch.vdot"]], "view_as_complex() (in module torch)": [[1860, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1861, "torch.view_as_real"]], "vmap() (in module torch)": [[1862, "torch.vmap"]], "vsplit() (in module torch)": [[1863, "torch.vsplit"]], "vstack() (in module torch)": [[1864, "torch.vstack"]], "where() (in module torch)": [[1865, "torch.where"]], "xlogy() (in module torch)": [[1866, "torch.xlogy"]], "zeros() (in module torch)": [[1867, "torch.zeros"]], "zeros_like() (in module torch)": [[1868, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1869, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1869, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1869, "torch.hub.help"]], "list() (in module torch.hub)": [[1869, "torch.hub.list"]], "load() (in module torch.hub)": [[1869, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1869, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1869, "torch.hub.set_dir"]], "torch.hub": [[1869, "module-torch.hub"]], "pytorch_jit": [[1871, "envvar-PYTORCH_JIT"]], "environment variable": [[1871, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1871, "torch.jit.export"]], "torch.jit": [[1871, "module-torch.jit"]], "torch.jit.mobile": [[1871, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1872, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1873, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1873, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1876, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1877, "module-torch.utils.jit"]], "library (class in torch.library)": [[1878, "torch.library.Library"]], "define() (torch.library.library method)": [[1878, "torch.library.Library.define"]], "fallthrough_kernel() (in module torch.library)": [[1878, "torch.library.fallthrough_kernel"]], "impl() (torch.library.library method)": [[1878, "torch.library.Library.impl"]], "torch.linalg": [[1879, "module-torch.linalg"]], "torch._logging": [[1880, "module-torch._logging"]], "torch.masked": [[1881, "module-torch.masked"]], "torch.masked.maskedtensor": [[1881, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1882, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1883, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1883, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1884, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1884, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1884, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1884, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1884, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1884, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1884, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1884, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1884, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1884, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1884, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1884, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1884, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1884, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1884, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1884, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1884, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1884, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1884, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1884, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1884, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1885, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1886, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1886, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1886, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1886, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1886, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1886, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1886, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1888, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1888, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1888, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1888, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1888, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1888, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1889, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1889, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1889, "torch.nested.to_padded_tensor"]], "torch.nested": [[1889, "module-torch.nested"]], "torch.nn": [[1890, "module-torch.nn"]], "torch.nn.backends": [[1890, "module-torch.nn.backends"]], "torch.nn.modules": [[1890, "module-torch.nn.modules"]], "torch.nn.parallel": [[1890, "module-torch.nn.parallel"]], "torch.nn.utils": [[1890, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1890, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1892, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1892, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1892, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1892, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1892, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1892, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1892, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1892, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1892, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1892, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1892, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1892, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1892, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1892, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1892, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[1910, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[1910, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[1910, "torch.serialization.set_default_load_endianness"]], "disable_log() (in module torch.onnx)": [[1912, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1912, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[1912, "torch.onnx.enable_fake_mode"]], "enable_log() (in module torch.onnx)": [[1912, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1912, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1912, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1912, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1912, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1912, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1912, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1912, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1912, "torch.onnx.unregister_custom_op_symbolic"]], "torchscriptonnxexportdiagnostic (class in torch.onnx._internal.diagnostics)": [[1913, "torch.onnx._internal.diagnostics.TorchScriptOnnxExportDiagnostic"]], "record_cpp_call_stack() (torch.onnx._internal.diagnostics.torchscriptonnxexportdiagnostic method)": [[1913, "torch.onnx._internal.diagnostics.TorchScriptOnnxExportDiagnostic.record_cpp_call_stack"]], "torch.onnx._internal.diagnostics": [[1913, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1915, "torch.optim.Optimizer"]], "torch.optim": [[1915, "module-torch.optim"]], "directory (class in torch.package)": [[1916, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1916, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1916, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1916, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1916, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1916, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1916, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1916, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1916, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1916, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1916, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1916, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1916, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1916, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1916, "torch.package.PackageExporter.save_text"]], "torch.package": [[1916, "module-torch.package"]], "torch.package.analyze": [[1916, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1917, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1917, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1917, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1917, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1917, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1917, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1918, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1918, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1918, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1918, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1918, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1918, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1918, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1918, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1918, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1918, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1918, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1918, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1918, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1918, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1918, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1918, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1918, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1918, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1918, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1918, "module-torch.profiler"]], "torch.ao": [[1919, "module-torch.ao"]], "torch.ao.nn": [[1919, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1919, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1919, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1919, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1919, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1919, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1919, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1919, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1919, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1919, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1919, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1919, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1919, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1919, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1919, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1919, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1919, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1922, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1922, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1922, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1922, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1922, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1922, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1922, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1922, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1922, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1922, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1922, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1922, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1922, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1922, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1922, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1922, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[1922, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.representation": [[1922, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[1922, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[1922, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1922, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1922, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1922, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1922, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1922, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1922, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1922, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1922, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1922, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1922, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1922, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1922, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1922, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1922, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1922, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1922, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1922, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1922, "module-torch.quantization"]], "torch.quantization.fx": [[1922, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1923, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1923, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1923, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1923, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1923, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1923, "torch.random.set_rng_state"]], "torch.random": [[1923, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1924, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[1924, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1924, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1924, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1924, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1924, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1924, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1924, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[1924, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[1924, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[1924, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1924, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1924, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1924, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1924, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1924, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1924, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1924, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1924, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1924, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[1924, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[1924, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[1924, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1924, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[1924, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[1924, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[1924, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[1924, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1924, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1924, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[1924, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1924, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[1924, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1924, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1924, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1924, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1924, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1924, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[1924, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[1924, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1924, "module-torch.distributed.rpc"]], "torch.signal": [[1927, "module-torch.signal"]], "torch.signal.windows": [[1927, "module-torch.signal.windows"]], "torch.sparse": [[1928, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1929, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1929, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1929, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1929, "torch.special.digamma"]], "entr() (in module torch.special)": [[1929, "torch.special.entr"]], "erf() (in module torch.special)": [[1929, "torch.special.erf"]], "erfc() (in module torch.special)": [[1929, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1929, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1929, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1929, "torch.special.exp2"]], "expit() (in module torch.special)": [[1929, "torch.special.expit"]], "expm1() (in module torch.special)": [[1929, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1929, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1929, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1929, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1929, "torch.special.i0"]], "i0e() (in module torch.special)": [[1929, "torch.special.i0e"]], "i1() (in module torch.special)": [[1929, "torch.special.i1"]], "i1e() (in module torch.special)": [[1929, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1929, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1929, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1929, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1929, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1929, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1929, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1929, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1929, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1929, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1929, "torch.special.psi"]], "round() (in module torch.special)": [[1929, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1929, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1929, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1929, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1929, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1929, "torch.special.spherical_bessel_j0"]], "torch.special": [[1929, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1929, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1929, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1929, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1930, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1930, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1930, "torch.ByteStorage"]], "charstorage (class in torch)": [[1930, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1930, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1930, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1930, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1930, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1930, "torch.HalfStorage"]], "intstorage (class in torch)": [[1930, "torch.IntStorage"]], "longstorage (class in torch)": [[1930, "torch.LongStorage"]], "qint32storage (class in torch)": [[1930, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1930, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1930, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1930, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1930, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1930, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1930, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1930, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1930, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1930, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1930, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1930, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1930, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1930, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1930, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1930, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1930, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1930, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1930, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1930, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1930, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1930, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1930, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1930, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1930, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1930, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1930, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1930, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1930, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1930, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1930, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1930, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1930, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1930, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1930, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1930, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1930, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1930, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1930, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1930, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1930, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1930, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1930, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1930, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1930, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1930, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1930, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1930, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1930, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[1930, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[1930, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1930, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1930, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[1930, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[1930, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[1930, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1930, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1930, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1930, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1930, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1930, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1930, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1930, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1930, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1930, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1930, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1930, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1930, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1930, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1930, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1930, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1930, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1931, "torch.device"]], "dtype (class in torch)": [[1931, "torch.dtype"]], "layout (class in torch)": [[1931, "torch.layout"]], "memory_format (class in torch)": [[1931, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1933, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1933, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1934, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1934, "torch.Tensor.T"]], "tensor (class in torch)": [[1934, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1934, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1934, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1935, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1935, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1935, "torch.testing.make_tensor"]], "torch.testing": [[1935, "module-torch.testing"]], "symbool (class in torch)": [[1936, "torch.SymBool"]], "symfloat (class in torch)": [[1936, "torch.SymFloat"]], "symint (class in torch)": [[1936, "torch.SymInt"]], "tag (class in torch)": [[1936, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1936, "torch.torch.default_generator"]], "name (torch.tag property)": [[1936, "torch.Tag.name"]], "torch": [[1936, "module-torch"]], "torch.contrib": [[1936, "module-torch.contrib"]], "torch.utils.backcompat": [[1936, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1936, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1936, "module-torch.utils.model_dump"]], "torch.utils.viz": [[1936, "module-torch.utils.viz"]], "logger (class in torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1937, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1937, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1937, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1937, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1937, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1937, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1937, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1937, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1937, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1937, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1937, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1937, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1938, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1938, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1938, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1938, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1938, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1938, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1938, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1938, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[1940, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[1958, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1958, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1958, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1958, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1958, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1958, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1958, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1958, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1958, "torch.overrides.wrap_torch_function"]], "_dump_snapshot() (in module torch.cuda.memory)": [[1959, "torch.cuda.memory._dump_snapshot"]], "_record_memory_history() (in module torch.cuda.memory)": [[1959, "torch.cuda.memory._record_memory_history"]], "_snapshot() (in module torch.cuda.memory)": [[1959, "torch.cuda.memory._snapshot"]], "torch.finfo (class in torch)": [[1960, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1960, "torch.torch.iinfo"]], "torch.utils": [[1961, "module-torch.utils"]]}})