Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "cond", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "export", "export.ir_spec", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.dynamic-value", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dim_order", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.register_post_accumulate_grad_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck.gradcheck", "generated/torch.autograd.gradcheck.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.cond", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.interface", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.as_sparse_gradcheck", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_dynamo", "onnx_dynamo_onnxruntime_backend", "onnx_torchscript", "onnx_torchscript_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_deepdive", "torch.compiler_dynamic_shapes", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_guards_overview", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "torch_cuda_memory", "type_info", "utils"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "cond.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "export.ir_spec.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.dynamic-value.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dim_order.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.register_post_accumulate_grad_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.gradcheck.rst", "generated/torch.autograd.gradcheck.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.cond.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.interface.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.as_sparse_gradcheck.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_dynamo.rst", "onnx_dynamo_onnxruntime_backend.rst", "onnx_torchscript.rst", "onnx_torchscript_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_deepdive.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_guards_overview.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "torch_cuda_memory.rst", "type_info.rst", "utils.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "Control Flow - Cond", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.export", "torch.export IR Specification", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "torch.cond", "torch.dynamic-shape", "torch.dynamic-value", "torch.escape-hatch", "torch.map", "FXE0007:fx-graph-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dim_order", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.register_post_accumulate_grad_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck.gradcheck", "torch.autograd.gradcheck.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.cond", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.interface", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "torch.sparse.as_sparse_gradcheck", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "TorchDynamo-based ONNX Exporter", "ONNX Backend for TorchDynamo", "TorchScript-based ONNX Exporter", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deep Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "Guards Overview", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 nn.Module Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Understanding CUDA Memory Usage", "Type Info", "torch.utils"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 14, 15, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 39, 41, 42, 43, 44, 45, 46, 48, 52, 55, 56, 57, 66, 67, 140, 592, 669, 678, 724, 727, 728, 729, 734, 735, 737, 745, 746, 749, 753, 777, 778, 788, 789, 803, 813, 830, 847, 882, 891, 893, 894, 895, 920, 925, 928, 946, 960, 979, 1025, 1068, 1088, 1124, 1136, 1148, 1156, 1157, 1192, 1195, 1202, 1203, 1207, 1209, 1211, 1226, 1243, 1268, 1300, 1360, 1361, 1362, 1365, 1381, 1382, 1390, 1395, 1399, 1400, 1425, 1426, 1427, 1429, 1435, 1436, 1439, 1444, 1446, 1457, 1472, 1473, 1474, 1475, 1476, 1500, 1501, 1578, 1609, 1623, 1643, 1651, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1693, 1696, 1701, 1737, 1747, 1795, 1796, 1797, 1798, 1799, 1800, 1809, 1838, 1840, 1849, 1859, 1866, 1868, 1870, 1871, 1875, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1894, 1895, 1896, 1897, 1899, 1902, 1903, 1905, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1940, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1950, 1954, 1955, 1956, 1958, 1959], "conveni": [0, 3, 7, 14, 38, 41, 42, 48, 54, 1136, 1253, 1600, 1755, 1849, 1851, 1859, 1866, 1870, 1875, 1890, 1891, 1894, 1896, 1901, 1902, 1915, 1922, 1941, 1943, 1944, 1949, 1950], "method": [0, 3, 7, 9, 14, 15, 18, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 39, 41, 45, 48, 55, 56, 57, 59, 64, 65, 70, 211, 212, 313, 475, 476, 477, 486, 487, 488, 509, 603, 782, 786, 788, 804, 805, 806, 827, 830, 843, 863, 864, 865, 882, 886, 887, 888, 889, 902, 903, 1005, 1119, 1148, 1193, 1195, 1196, 1198, 1199, 1200, 1206, 1207, 1211, 1212, 1213, 1241, 1259, 1260, 1267, 1268, 1326, 1329, 1337, 1345, 1372, 1429, 1430, 1431, 1439, 1440, 1445, 1457, 1528, 1600, 1609, 1617, 1618, 1621, 1623, 1625, 1628, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1645, 1650, 1666, 1667, 1668, 1670, 1680, 1712, 1794, 1809, 1813, 1849, 1866, 1867, 1868, 1871, 1872, 1879, 1881, 1883, 1884, 1885, 1889, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1907, 1910, 1914, 1915, 1918, 1920, 1923, 1925, 1929, 1930, 1932, 1933, 1935, 1938, 1942, 1943, 1946, 1949, 1954, 1956, 1957], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 14, 15, 21, 22, 24, 28, 29, 30, 32, 34, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 56, 76, 143, 213, 244, 390, 392, 475, 669, 682, 684, 685, 688, 724, 747, 749, 770, 809, 810, 822, 866, 885, 890, 892, 905, 910, 919, 925, 932, 933, 934, 941, 956, 960, 972, 974, 983, 985, 1047, 1048, 1051, 1055, 1073, 1084, 1085, 1087, 1090, 1091, 1093, 1094, 1096, 1097, 1098, 1100, 1101, 1103, 1105, 1129, 1130, 1131, 1135, 1136, 1139, 1151, 1152, 1153, 1154, 1184, 1185, 1187, 1188, 1191, 1192, 1193, 1196, 1209, 1215, 1216, 1217, 1220, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1267, 1268, 1273, 1276, 1283, 1284, 1285, 1286, 1290, 1293, 1295, 1296, 1297, 1298, 1301, 1319, 1324, 1325, 1327, 1330, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1499, 1501, 1511, 1512, 1519, 1524, 1526, 1527, 1545, 1546, 1563, 1565, 1566, 1569, 1570, 1572, 1578, 1581, 1609, 1611, 1612, 1616, 1643, 1644, 1645, 1646, 1655, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1685, 1686, 1687, 1699, 1709, 1711, 1712, 1732, 1733, 1769, 1775, 1776, 1781, 1785, 1790, 1791, 1792, 1795, 1796, 1797, 1798, 1799, 1800, 1807, 1808, 1809, 1812, 1813, 1827, 1836, 1837, 1838, 1839, 1840, 1845, 1846, 1854, 1855, 1856, 1857, 1858, 1859, 1868, 1869, 1871, 1872, 1877, 1878, 1880, 1883, 1886, 1889, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1906, 1907, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1923, 1925, 1927, 1928, 1930, 1932, 1937, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1954, 1956, 1957, 1958], "some": [0, 1, 3, 7, 8, 9, 14, 20, 21, 22, 24, 26, 29, 30, 32, 34, 42, 43, 45, 46, 48, 51, 53, 54, 55, 56, 75, 77, 466, 485, 556, 678, 737, 941, 969, 1003, 1021, 1025, 1028, 1068, 1089, 1091, 1099, 1100, 1101, 1116, 1125, 1136, 1170, 1192, 1193, 1195, 1196, 1206, 1209, 1211, 1241, 1259, 1265, 1290, 1297, 1300, 1337, 1341, 1345, 1346, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1389, 1392, 1393, 1394, 1395, 1396, 1399, 1420, 1421, 1429, 1432, 1433, 1434, 1436, 1443, 1444, 1445, 1460, 1461, 1477, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1540, 1545, 1563, 1566, 1571, 1578, 1600, 1609, 1610, 1611, 1612, 1616, 1649, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1687, 1693, 1711, 1731, 1755, 1762, 1776, 1813, 1851, 1859, 1866, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1883, 1884, 1885, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1912, 1914, 1915, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1932, 1938, 1943, 1944, 1945, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1956], "oper": [0, 2, 4, 5, 7, 8, 11, 12, 15, 18, 21, 26, 30, 31, 38, 39, 41, 42, 46, 49, 54, 55, 56, 69, 70, 72, 73, 74, 75, 76, 244, 303, 311, 325, 342, 392, 434, 435, 436, 437, 438, 477, 482, 485, 488, 502, 504, 506, 578, 669, 675, 678, 730, 731, 732, 736, 737, 746, 747, 757, 758, 768, 774, 781, 782, 784, 785, 788, 812, 815, 848, 850, 851, 854, 878, 880, 886, 888, 909, 910, 912, 914, 917, 919, 921, 923, 928, 931, 938, 941, 948, 952, 954, 972, 974, 1002, 1011, 1042, 1047, 1048, 1049, 1050, 1063, 1068, 1069, 1070, 1071, 1081, 1086, 1104, 1116, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1136, 1143, 1146, 1152, 1153, 1170, 1195, 1206, 1207, 1211, 1212, 1215, 1225, 1238, 1248, 1251, 1252, 1265, 1266, 1275, 1282, 1290, 1295, 1300, 1310, 1311, 1324, 1327, 1341, 1346, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1386, 1387, 1388, 1389, 1391, 1396, 1415, 1420, 1425, 1426, 1427, 1429, 1442, 1447, 1448, 1449, 1456, 1471, 1472, 1474, 1476, 1480, 1496, 1497, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1524, 1528, 1532, 1539, 1545, 1547, 1553, 1554, 1564, 1566, 1570, 1578, 1584, 1585, 1596, 1597, 1598, 1599, 1609, 1611, 1612, 1645, 1651, 1656, 1660, 1661, 1679, 1685, 1695, 1699, 1708, 1709, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1731, 1737, 1754, 1755, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1787, 1789, 1790, 1791, 1792, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 1812, 1827, 1845, 1848, 1849, 1851, 1859, 1862, 1864, 1865, 1867, 1868, 1872, 1875, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1902, 1903, 1904, 1905, 1906, 1909, 1910, 1914, 1917, 1919, 1921, 1922, 1923, 1924, 1928, 1930, 1931, 1934, 1941, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1951, 1955, 1956], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 25, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 55, 57, 59, 64, 65, 66, 67, 72, 73, 74, 76, 78, 87, 109, 140, 144, 181, 198, 309, 311, 325, 332, 333, 396, 424, 437, 447, 475, 476, 477, 485, 488, 502, 506, 509, 533, 546, 572, 573, 574, 576, 577, 606, 669, 675, 678, 701, 702, 703, 704, 705, 706, 709, 718, 719, 720, 721, 722, 724, 737, 746, 749, 757, 758, 761, 762, 763, 768, 770, 774, 775, 776, 779, 782, 783, 784, 785, 788, 791, 796, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 820, 821, 822, 823, 826, 843, 847, 848, 850, 851, 854, 867, 868, 869, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 892, 893, 896, 897, 898, 902, 903, 906, 909, 910, 911, 919, 921, 922, 929, 931, 941, 944, 948, 952, 953, 956, 958, 969, 970, 971, 972, 974, 976, 977, 979, 982, 992, 993, 996, 997, 1003, 1007, 1011, 1013, 1014, 1015, 1017, 1019, 1020, 1025, 1026, 1035, 1037, 1038, 1044, 1049, 1050, 1051, 1060, 1068, 1069, 1070, 1071, 1081, 1082, 1083, 1086, 1088, 1096, 1098, 1102, 1104, 1111, 1113, 1116, 1122, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1140, 1141, 1145, 1146, 1148, 1152, 1153, 1154, 1155, 1169, 1170, 1182, 1192, 1193, 1195, 1196, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1215, 1217, 1219, 1227, 1231, 1232, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1248, 1249, 1250, 1252, 1253, 1259, 1260, 1261, 1265, 1266, 1267, 1268, 1273, 1276, 1282, 1285, 1286, 1289, 1290, 1295, 1296, 1297, 1300, 1306, 1307, 1319, 1324, 1326, 1327, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1389, 1390, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1415, 1416, 1417, 1422, 1423, 1424, 1425, 1426, 1429, 1431, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1460, 1462, 1465, 1468, 1476, 1477, 1478, 1479, 1481, 1484, 1485, 1486, 1493, 1495, 1496, 1497, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1523, 1524, 1528, 1530, 1537, 1539, 1540, 1547, 1552, 1553, 1554, 1564, 1566, 1572, 1578, 1582, 1584, 1585, 1593, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1643, 1644, 1645, 1649, 1650, 1651, 1653, 1654, 1656, 1657, 1660, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1690, 1691, 1693, 1694, 1696, 1697, 1699, 1709, 1711, 1712, 1713, 1716, 1717, 1718, 1720, 1722, 1724, 1726, 1727, 1733, 1740, 1743, 1748, 1749, 1751, 1752, 1753, 1755, 1757, 1758, 1759, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1780, 1785, 1788, 1789, 1791, 1792, 1795, 1796, 1797, 1798, 1799, 1800, 1809, 1812, 1813, 1814, 1827, 1831, 1834, 1838, 1840, 1845, 1847, 1848, 1849, 1851, 1856, 1859, 1864, 1866, 1867, 1868, 1869, 1871, 1872, 1873, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1890, 1893, 1895, 1897, 1898, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1917, 1919, 1921, 1922, 1923, 1924, 1925, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1955, 1957], "float": [0, 1, 3, 11, 21, 22, 24, 28, 30, 32, 35, 43, 45, 46, 48, 56, 143, 144, 209, 303, 305, 307, 311, 323, 390, 464, 470, 488, 502, 674, 676, 681, 683, 687, 721, 724, 727, 728, 729, 733, 734, 735, 737, 744, 745, 750, 751, 752, 753, 754, 759, 760, 761, 762, 763, 764, 766, 768, 769, 770, 774, 781, 782, 783, 788, 806, 808, 819, 827, 828, 841, 846, 847, 850, 851, 854, 869, 897, 898, 910, 911, 919, 926, 929, 933, 934, 949, 955, 956, 960, 968, 1038, 1051, 1062, 1063, 1069, 1070, 1071, 1073, 1086, 1104, 1113, 1114, 1115, 1116, 1118, 1139, 1142, 1151, 1152, 1153, 1156, 1157, 1177, 1184, 1185, 1187, 1188, 1189, 1190, 1193, 1195, 1211, 1212, 1215, 1219, 1221, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1273, 1282, 1284, 1286, 1314, 1318, 1319, 1323, 1325, 1326, 1327, 1330, 1333, 1337, 1341, 1347, 1348, 1349, 1351, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1377, 1378, 1383, 1384, 1385, 1388, 1389, 1390, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1415, 1417, 1421, 1429, 1434, 1435, 1437, 1438, 1443, 1447, 1450, 1451, 1452, 1453, 1454, 1460, 1466, 1468, 1471, 1472, 1474, 1476, 1477, 1478, 1481, 1482, 1483, 1510, 1511, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1525, 1530, 1539, 1564, 1571, 1578, 1597, 1609, 1613, 1614, 1617, 1626, 1627, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1645, 1646, 1650, 1656, 1657, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1693, 1694, 1695, 1697, 1699, 1705, 1708, 1712, 1713, 1714, 1715, 1727, 1731, 1732, 1752, 1753, 1756, 1760, 1769, 1770, 1772, 1773, 1775, 1810, 1813, 1817, 1834, 1836, 1848, 1868, 1869, 1870, 1871, 1872, 1878, 1881, 1883, 1884, 1886, 1887, 1889, 1890, 1894, 1896, 1898, 1902, 1905, 1910, 1912, 1913, 1915, 1917, 1918, 1919, 1923, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1944, 1946, 1948, 1951, 1955, 1959], "datatyp": [0, 56, 869, 1192, 1195, 1429, 1611, 1612, 1755, 1905, 1912, 1927], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 21, 22, 25, 28, 29, 30, 31, 32, 34, 38, 39, 41, 42, 45, 46, 48, 49, 51, 53, 54, 55, 56, 87, 88, 103, 119, 120, 123, 135, 136, 139, 140, 149, 150, 155, 156, 186, 187, 188, 197, 224, 229, 233, 234, 235, 245, 264, 265, 272, 273, 274, 275, 281, 282, 283, 284, 285, 286, 293, 294, 297, 298, 299, 300, 303, 305, 311, 314, 334, 342, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 368, 369, 384, 385, 398, 402, 427, 428, 439, 440, 444, 445, 476, 477, 487, 509, 550, 551, 552, 553, 569, 572, 605, 606, 607, 610, 611, 669, 674, 683, 727, 728, 729, 730, 731, 732, 749, 803, 815, 850, 854, 860, 867, 868, 873, 879, 882, 883, 896, 897, 898, 902, 903, 913, 914, 916, 917, 918, 920, 925, 941, 955, 968, 969, 972, 974, 976, 983, 993, 1003, 1014, 1056, 1062, 1063, 1064, 1065, 1072, 1073, 1074, 1088, 1095, 1113, 1114, 1115, 1116, 1119, 1125, 1126, 1127, 1128, 1131, 1135, 1137, 1138, 1139, 1149, 1150, 1151, 1160, 1161, 1163, 1164, 1169, 1170, 1172, 1184, 1193, 1195, 1199, 1207, 1216, 1218, 1219, 1220, 1222, 1223, 1228, 1232, 1246, 1248, 1251, 1252, 1265, 1273, 1274, 1275, 1277, 1279, 1280, 1283, 1284, 1290, 1293, 1294, 1298, 1299, 1303, 1306, 1318, 1320, 1330, 1333, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1366, 1376, 1381, 1383, 1395, 1429, 1430, 1439, 1457, 1472, 1476, 1480, 1503, 1504, 1505, 1530, 1539, 1578, 1597, 1600, 1609, 1613, 1614, 1632, 1654, 1658, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1690, 1691, 1697, 1699, 1727, 1731, 1747, 1752, 1755, 1757, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 1810, 1811, 1827, 1833, 1837, 1839, 1845, 1856, 1857, 1862, 1863, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1879, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1910, 1912, 1914, 1918, 1919, 1923, 1924, 1925, 1928, 1932, 1933, 1934, 1941, 1943, 1944, 1946, 1947, 1949, 1951, 1954, 1955, 1956, 1957], "lower": [0, 1, 8, 12, 22, 24, 30, 45, 46, 782, 784, 848, 920, 925, 932, 933, 934, 936, 1082, 1083, 1155, 1156, 1225, 1232, 1234, 1242, 1243, 1250, 1253, 1258, 1296, 1319, 1326, 1337, 1447, 1503, 1504, 1505, 1576, 1577, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1693, 1695, 1710, 1712, 1732, 1747, 1755, 1793, 1836, 1837, 1838, 1868, 1869, 1871, 1887, 1889, 1891, 1902, 1907, 1913, 1918, 1928, 1934, 1951, 1956], "point": [0, 1, 7, 8, 9, 11, 21, 22, 25, 28, 32, 38, 41, 42, 46, 48, 56, 78, 143, 144, 311, 323, 329, 470, 488, 687, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750, 751, 752, 753, 754, 764, 766, 768, 769, 770, 774, 784, 788, 808, 809, 810, 811, 814, 819, 841, 850, 851, 854, 869, 891, 893, 894, 895, 897, 898, 910, 911, 919, 941, 955, 956, 960, 1017, 1019, 1028, 1032, 1033, 1069, 1070, 1071, 1114, 1115, 1116, 1142, 1148, 1152, 1153, 1157, 1177, 1192, 1195, 1211, 1212, 1219, 1221, 1242, 1243, 1266, 1268, 1273, 1282, 1326, 1333, 1342, 1343, 1344, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1422, 1423, 1424, 1429, 1480, 1481, 1493, 1519, 1528, 1539, 1578, 1597, 1609, 1656, 1665, 1696, 1712, 1713, 1714, 1718, 1727, 1740, 1752, 1753, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1848, 1849, 1867, 1868, 1870, 1871, 1872, 1875, 1881, 1887, 1889, 1890, 1891, 1894, 1895, 1899, 1902, 1905, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1927, 1930, 1932, 1933, 1934, 1936, 1942, 1943, 1946, 1948, 1949, 1952, 1955, 1958, 1959], "lower_precision_fp": 0, "half": [0, 1, 10, 22, 30, 606, 949, 1082, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1195, 1258, 1264, 1357, 1358, 1359, 1360, 1361, 1362, 1377, 1378, 1380, 1429, 1523, 1524, 1527, 1662, 1687, 1740, 1809, 1884, 1902, 1905, 1910, 1927, 1929, 1930, 1933], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 24, 29, 30, 39, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 326, 578, 606, 749, 782, 830, 849, 867, 888, 897, 898, 910, 919, 943, 948, 952, 1011, 1012, 1021, 1063, 1068, 1069, 1089, 1111, 1114, 1115, 1121, 1125, 1128, 1129, 1130, 1136, 1152, 1153, 1193, 1195, 1196, 1203, 1206, 1211, 1215, 1242, 1243, 1254, 1267, 1337, 1345, 1373, 1376, 1392, 1393, 1394, 1429, 1430, 1431, 1439, 1440, 1457, 1480, 1522, 1540, 1596, 1600, 1609, 1610, 1611, 1612, 1617, 1642, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1705, 1720, 1724, 1743, 1752, 1755, 1813, 1824, 1849, 1859, 1864, 1866, 1867, 1868, 1870, 1871, 1878, 1883, 1884, 1885, 1890, 1891, 1894, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1914, 1916, 1917, 1918, 1921, 1923, 1924, 1927, 1929, 1930, 1934, 1935, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1958], "linear": [0, 2, 9, 22, 24, 25, 28, 30, 45, 46, 48, 50, 52, 54, 56, 57, 420, 461, 462, 463, 464, 465, 468, 700, 709, 717, 718, 754, 781, 782, 783, 785, 803, 843, 847, 848, 850, 851, 892, 934, 974, 1068, 1124, 1126, 1134, 1136, 1148, 1195, 1199, 1207, 1221, 1227, 1232, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1256, 1258, 1286, 1326, 1345, 1351, 1371, 1379, 1380, 1388, 1414, 1429, 1431, 1444, 1446, 1448, 1456, 1458, 1465, 1468, 1472, 1474, 1476, 1479, 1481, 1517, 1526, 1527, 1539, 1573, 1581, 1586, 1597, 1600, 1609, 1616, 1617, 1621, 1631, 1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1649, 1650, 1653, 1690, 1693, 1701, 1712, 1848, 1859, 1867, 1869, 1870, 1876, 1879, 1886, 1889, 1894, 1895, 1896, 1898, 1902, 1907, 1910, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1923, 1954, 1956], "layer": [0, 8, 22, 24, 26, 28, 29, 48, 51, 723, 724, 749, 830, 847, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1368, 1369, 1370, 1374, 1381, 1382, 1384, 1392, 1393, 1394, 1399, 1400, 1401, 1414, 1416, 1422, 1423, 1424, 1435, 1436, 1444, 1446, 1457, 1468, 1472, 1473, 1474, 1475, 1476, 1542, 1609, 1616, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1867, 1889, 1894, 1896, 1898, 1901, 1902, 1907, 1910, 1912, 1914, 1916, 1918, 1919, 1921, 1927, 1937], "convolut": [0, 1, 2, 45, 727, 728, 729, 730, 731, 732, 761, 762, 763, 941, 1205, 1357, 1358, 1359, 1360, 1361, 1362, 1368, 1369, 1370, 1374, 1405, 1406, 1407, 1408, 1409, 1410, 1441, 1442, 1447, 1477, 1478, 1480, 1503, 1504, 1505, 1506, 1507, 1508, 1527, 1528, 1755, 1867, 1869, 1879, 1889, 1893, 1894, 1899, 1902, 1913, 1917, 1918, 1921, 1951], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 62, 63, 65, 71, 72, 74, 75, 76, 77, 78, 87, 140, 223, 244, 309, 311, 325, 326, 329, 367, 392, 437, 460, 470, 475, 488, 502, 506, 533, 569, 578, 606, 669, 678, 679, 680, 686, 724, 745, 749, 750, 752, 753, 754, 768, 771, 772, 774, 775, 776, 781, 782, 783, 784, 785, 788, 803, 804, 805, 806, 808, 809, 810, 811, 814, 829, 843, 847, 848, 849, 850, 851, 854, 863, 864, 875, 876, 877, 879, 882, 888, 890, 891, 892, 893, 894, 895, 897, 898, 910, 919, 920, 922, 923, 925, 928, 941, 949, 952, 955, 956, 959, 960, 970, 971, 972, 974, 975, 977, 982, 994, 1005, 1011, 1014, 1015, 1025, 1035, 1042, 1051, 1056, 1060, 1063, 1068, 1069, 1070, 1071, 1084, 1085, 1086, 1087, 1089, 1091, 1096, 1098, 1104, 1107, 1109, 1110, 1114, 1115, 1116, 1124, 1125, 1130, 1132, 1134, 1135, 1136, 1140, 1148, 1152, 1153, 1155, 1157, 1170, 1172, 1184, 1185, 1187, 1188, 1191, 1192, 1193, 1195, 1196, 1199, 1202, 1203, 1206, 1209, 1211, 1212, 1217, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1262, 1265, 1266, 1267, 1268, 1277, 1278, 1279, 1280, 1282, 1283, 1285, 1287, 1288, 1290, 1293, 1296, 1297, 1298, 1301, 1303, 1307, 1319, 1323, 1324, 1325, 1326, 1327, 1337, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1373, 1374, 1376, 1381, 1382, 1383, 1384, 1389, 1392, 1393, 1394, 1395, 1396, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1443, 1444, 1446, 1457, 1460, 1461, 1462, 1468, 1472, 1474, 1476, 1477, 1478, 1480, 1481, 1493, 1499, 1500, 1501, 1511, 1512, 1519, 1520, 1521, 1522, 1528, 1539, 1540, 1563, 1566, 1568, 1571, 1578, 1596, 1597, 1598, 1599, 1600, 1605, 1606, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1621, 1628, 1642, 1646, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1657, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1689, 1692, 1693, 1705, 1711, 1712, 1718, 1727, 1730, 1731, 1738, 1740, 1751, 1752, 1755, 1785, 1786, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1805, 1808, 1809, 1812, 1813, 1822, 1824, 1828, 1830, 1831, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1845, 1848, 1849, 1851, 1853, 1854, 1855, 1859, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1887, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "much": [0, 4, 7, 9, 15, 21, 22, 45, 140, 882, 891, 896, 1025, 1231, 1232, 1259, 1268, 1373, 1609, 1632, 1693, 1868, 1891, 1894, 1899, 1902, 1907, 1915, 1916, 1923, 1924, 1927, 1944, 1946, 1949], "faster": [0, 2, 8, 11, 21, 22, 24, 891, 897, 898, 1124, 1225, 1226, 1231, 1232, 1236, 1241, 1249, 1251, 1253, 1256, 1259, 1261, 1265, 1268, 1445, 1462, 1568, 1584, 1609, 1613, 1614, 1616, 1668, 1669, 1680, 1755, 1795, 1796, 1797, 1799, 1800, 1879, 1891, 1894, 1899, 1914, 1918, 1927, 1932, 1938, 1943, 1946, 1952], "reduct": [0, 2, 24, 48, 311, 502, 506, 941, 1241, 1273, 1326, 1345, 1346, 1352, 1363, 1365, 1373, 1383, 1389, 1390, 1395, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1478, 1500, 1501, 1509, 1511, 1512, 1520, 1525, 1536, 1537, 1540, 1541, 1551, 1559, 1560, 1561, 1562, 1563, 1571, 1582, 1583, 1594, 1595, 1609, 1712, 1790, 1869, 1884, 1895, 1899, 1915, 1918, 1950, 1956], "often": [0, 2, 4, 7, 8, 14, 21, 24, 30, 42, 48, 51, 56, 140, 882, 896, 1211, 1242, 1243, 1252, 1301, 1372, 1392, 1393, 1394, 1493, 1501, 1519, 1528, 1600, 1616, 1695, 1871, 1891, 1894, 1898, 1901, 1902, 1904, 1905, 1906, 1910, 1915, 1923, 1932, 1945, 1946, 1954, 1956], "requir": [0, 1, 5, 8, 9, 14, 15, 21, 22, 24, 25, 26, 28, 30, 32, 40, 41, 45, 46, 48, 51, 53, 55, 56, 109, 140, 211, 325, 447, 477, 485, 502, 504, 506, 549, 782, 784, 812, 815, 869, 878, 882, 887, 890, 891, 892, 893, 894, 895, 896, 941, 969, 1024, 1068, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1109, 1110, 1136, 1137, 1192, 1209, 1235, 1266, 1268, 1282, 1365, 1372, 1373, 1472, 1473, 1474, 1475, 1476, 1478, 1520, 1578, 1600, 1609, 1610, 1619, 1621, 1623, 1671, 1681, 1699, 1797, 1809, 1848, 1859, 1866, 1868, 1871, 1873, 1878, 1879, 1883, 1885, 1886, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1910, 1911, 1912, 1915, 1916, 1918, 1919, 1923, 1924, 1925, 1927, 1932, 1934, 1937, 1938, 1941, 1942, 1943, 1945, 1946, 1952, 1954, 1957], "dynam": [0, 12, 14, 15, 21, 46, 57, 58, 59, 62, 63, 64, 67, 68, 669, 718, 722, 749, 750, 751, 752, 753, 754, 783, 804, 815, 818, 833, 839, 840, 841, 842, 847, 848, 941, 970, 1203, 1209, 1211, 1267, 1616, 1870, 1871, 1872, 1889, 1894, 1902, 1905, 1909, 1910, 1912, 1914, 1915, 1919, 1938, 1943, 1946, 1953, 1956], "rang": [0, 1, 3, 21, 24, 25, 28, 30, 41, 42, 44, 45, 46, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 291, 470, 673, 750, 752, 754, 784, 808, 809, 810, 811, 812, 814, 815, 816, 874, 911, 936, 1029, 1030, 1038, 1068, 1118, 1134, 1155, 1156, 1157, 1262, 1273, 1288, 1297, 1314, 1326, 1337, 1365, 1375, 1377, 1378, 1382, 1388, 1400, 1419, 1431, 1436, 1440, 1446, 1462, 1463, 1464, 1468, 1523, 1524, 1528, 1584, 1609, 1614, 1683, 1684, 1686, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1712, 1792, 1847, 1868, 1869, 1871, 1891, 1893, 1894, 1898, 1902, 1904, 1905, 1912, 1913, 1914, 1917, 1918, 1921, 1922, 1928, 1930, 1932, 1933, 1934, 1935, 1942, 1943, 1944, 1949, 1954, 1956], "tri": [0, 2, 3, 7, 21, 30, 34, 56, 77, 569, 1195, 1429, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1870, 1871, 1883, 1894, 1898, 1912, 1915, 1945, 1946, 1948], "match": [0, 1, 3, 12, 24, 26, 28, 30, 41, 45, 48, 56, 57, 64, 65, 74, 140, 303, 305, 311, 462, 463, 488, 489, 569, 572, 682, 688, 768, 782, 783, 784, 843, 867, 882, 896, 897, 898, 952, 968, 971, 983, 984, 985, 1014, 1060, 1068, 1124, 1136, 1172, 1195, 1209, 1211, 1228, 1267, 1289, 1364, 1373, 1429, 1435, 1481, 1500, 1501, 1539, 1565, 1572, 1578, 1597, 1609, 1621, 1651, 1657, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1713, 1747, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1829, 1845, 1859, 1868, 1871, 1878, 1884, 1886, 1891, 1892, 1894, 1896, 1902, 1907, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1923, 1930, 1934, 1936, 1946, 1949, 1955], "each": [0, 1, 2, 5, 9, 14, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 39, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 56, 70, 71, 73, 76, 87, 109, 143, 144, 388, 392, 482, 502, 504, 506, 534, 596, 606, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 675, 682, 684, 685, 688, 724, 749, 781, 829, 830, 848, 850, 851, 854, 866, 875, 876, 877, 878, 880, 881, 882, 887, 896, 909, 912, 921, 925, 929, 930, 932, 935, 939, 941, 943, 960, 980, 981, 985, 1014, 1017, 1019, 1025, 1027, 1031, 1034, 1040, 1045, 1046, 1047, 1048, 1051, 1052, 1063, 1066, 1068, 1085, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1105, 1109, 1110, 1112, 1117, 1121, 1126, 1127, 1131, 1135, 1136, 1137, 1148, 1154, 1156, 1157, 1158, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1195, 1211, 1212, 1217, 1249, 1267, 1268, 1283, 1285, 1293, 1295, 1296, 1297, 1298, 1301, 1303, 1310, 1311, 1319, 1325, 1327, 1337, 1342, 1345, 1346, 1350, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1381, 1382, 1384, 1389, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1409, 1410, 1414, 1416, 1420, 1421, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1443, 1444, 1446, 1457, 1460, 1461, 1463, 1468, 1471, 1477, 1478, 1480, 1498, 1500, 1501, 1506, 1507, 1508, 1511, 1512, 1514, 1515, 1516, 1519, 1520, 1521, 1525, 1528, 1538, 1540, 1563, 1564, 1566, 1568, 1571, 1578, 1591, 1600, 1605, 1606, 1609, 1642, 1643, 1645, 1655, 1656, 1657, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1704, 1708, 1709, 1712, 1719, 1727, 1732, 1733, 1738, 1742, 1747, 1755, 1760, 1771, 1777, 1794, 1795, 1796, 1797, 1799, 1800, 1801, 1812, 1813, 1828, 1830, 1831, 1834, 1845, 1846, 1853, 1859, 1860, 1866, 1870, 1871, 1877, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1910, 1912, 1914, 1916, 1917, 1918, 1923, 1924, 1925, 1927, 1928, 1930, 1932, 1933, 1934, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1958], "its": [0, 1, 4, 5, 7, 8, 9, 12, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 41, 42, 43, 45, 46, 48, 55, 56, 57, 59, 71, 72, 73, 140, 447, 476, 477, 493, 502, 504, 506, 572, 573, 574, 606, 669, 812, 815, 863, 864, 865, 867, 868, 869, 882, 885, 897, 902, 903, 933, 934, 948, 949, 956, 960, 975, 1003, 1005, 1014, 1051, 1055, 1058, 1068, 1071, 1116, 1121, 1125, 1126, 1127, 1130, 1135, 1156, 1157, 1161, 1175, 1195, 1206, 1231, 1232, 1236, 1241, 1248, 1250, 1253, 1254, 1259, 1265, 1290, 1317, 1345, 1347, 1348, 1349, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1392, 1393, 1394, 1429, 1430, 1439, 1460, 1468, 1476, 1528, 1539, 1566, 1572, 1600, 1605, 1606, 1610, 1611, 1612, 1617, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1643, 1649, 1653, 1657, 1663, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1702, 1727, 1731, 1735, 1736, 1752, 1753, 1757, 1777, 1787, 1814, 1833, 1834, 1836, 1844, 1857, 1868, 1870, 1871, 1875, 1879, 1881, 1883, 1890, 1891, 1892, 1894, 1895, 1896, 1898, 1899, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1923, 1924, 1925, 1927, 1930, 1931, 1933, 1936, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1949, 1950, 1952, 1958], "appropri": [0, 7, 8, 9, 24, 25, 30, 48, 55, 56, 883, 960, 1014, 1211, 1755, 1871, 1872, 1875, 1885, 1894, 1899, 1904, 1907, 1910, 1916, 1918, 1921, 1923, 1924, 1925, 1929, 1946, 1949, 1957], "ordinarili": [0, 1890], "train": [0, 1, 12, 15, 21, 22, 24, 25, 27, 28, 32, 39, 40, 41, 42, 48, 51, 52, 56, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 788, 790, 827, 828, 844, 845, 846, 848, 850, 851, 852, 952, 1013, 1014, 1017, 1019, 1026, 1134, 1170, 1195, 1200, 1207, 1210, 1211, 1337, 1341, 1347, 1348, 1349, 1365, 1366, 1367, 1372, 1373, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1429, 1435, 1436, 1447, 1468, 1476, 1494, 1498, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1576, 1577, 1578, 1609, 1617, 1619, 1621, 1650, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1866, 1868, 1869, 1879, 1881, 1889, 1891, 1894, 1895, 1898, 1903, 1905, 1907, 1909, 1912, 1914, 1915, 1916, 1917, 1921, 1923, 1925, 1932, 1938, 1940, 1941, 1942, 1943, 1948, 1950, 1951, 1953, 1956], "gradscal": [0, 1890, 1894], "togeth": [0, 3, 9, 21, 24, 29, 30, 49, 54, 56, 749, 1011, 1068, 1124, 1126, 1130, 1134, 1135, 1140, 1235, 1381, 1399, 1444, 1539, 1609, 1613, 1834, 1879, 1890, 1896, 1897, 1898, 1901, 1902, 1918, 1923, 1924, 1925, 1927, 1932, 1942, 1945, 1946, 1952], "shown": [0, 12, 22, 33, 42, 1011, 1021, 1401, 1621, 1663, 1693, 1760, 1868, 1871, 1890, 1894, 1896, 1898, 1902, 1910, 1916, 1918, 1927, 1942, 1943, 1947], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 14, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 57, 59, 64, 65, 78, 181, 198, 223, 232, 244, 250, 279, 301, 303, 305, 307, 311, 325, 342, 391, 392, 434, 435, 436, 437, 438, 460, 470, 472, 476, 477, 482, 485, 488, 502, 504, 506, 512, 526, 533, 547, 549, 569, 570, 572, 573, 574, 575, 576, 577, 578, 596, 606, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 709, 717, 718, 723, 727, 728, 729, 730, 731, 732, 734, 735, 737, 745, 746, 747, 749, 750, 751, 752, 753, 754, 761, 762, 763, 774, 781, 782, 783, 785, 786, 799, 800, 801, 802, 803, 804, 805, 806, 813, 827, 843, 848, 849, 850, 851, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 900, 902, 903, 909, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 941, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 968, 1011, 1012, 1017, 1019, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1132, 1134, 1136, 1137, 1138, 1139, 1142, 1148, 1151, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1165, 1169, 1170, 1172, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1317, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1493, 1495, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1519, 1520, 1523, 1524, 1528, 1530, 1563, 1565, 1566, 1569, 1570, 1578, 1597, 1600, 1609, 1616, 1617, 1619, 1621, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1700, 1702, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1747, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1760, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1781, 1785, 1787, 1788, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1808, 1810, 1812, 1813, 1815, 1816, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1875, 1877, 1878, 1880, 1881, 1884, 1885, 1886, 1889, 1891, 1892, 1893, 1894, 1898, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1909, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1957], "recip": [0, 3, 28, 1429, 1609, 1623, 1890, 1902, 1945], "howev": [0, 2, 3, 4, 5, 7, 9, 14, 15, 21, 22, 24, 28, 30, 32, 38, 45, 46, 48, 49, 50, 52, 53, 55, 56, 57, 62, 65, 71, 74, 75, 76, 470, 534, 883, 890, 971, 993, 1014, 1056, 1058, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1124, 1125, 1129, 1130, 1132, 1135, 1136, 1195, 1198, 1199, 1206, 1208, 1235, 1250, 1251, 1253, 1267, 1268, 1285, 1345, 1347, 1348, 1349, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1373, 1429, 1503, 1504, 1505, 1528, 1600, 1609, 1642, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1795, 1796, 1797, 1798, 1799, 1800, 1859, 1867, 1871, 1886, 1890, 1891, 1894, 1896, 1900, 1902, 1904, 1906, 1907, 1908, 1909, 1912, 1915, 1916, 1923, 1925, 1927, 1941, 1943, 1944, 1945, 1946, 1947], "modular": [0, 1890, 1910], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 20, 21, 22, 24, 28, 30, 31, 32, 34, 38, 40, 41, 45, 48, 49, 53, 55, 56, 74, 186, 211, 244, 303, 311, 447, 504, 506, 545, 592, 606, 669, 678, 804, 805, 806, 850, 881, 888, 890, 892, 896, 897, 906, 912, 923, 935, 941, 953, 954, 956, 958, 969, 971, 972, 980, 993, 1003, 1004, 1005, 1011, 1012, 1014, 1025, 1027, 1031, 1045, 1046, 1068, 1107, 1111, 1116, 1119, 1121, 1128, 1129, 1131, 1157, 1192, 1195, 1198, 1199, 1205, 1206, 1208, 1209, 1211, 1217, 1226, 1227, 1231, 1232, 1233, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1251, 1253, 1254, 1257, 1258, 1259, 1265, 1267, 1268, 1273, 1290, 1300, 1314, 1337, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1395, 1399, 1425, 1426, 1427, 1429, 1436, 1444, 1474, 1476, 1481, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1520, 1528, 1530, 1539, 1545, 1566, 1578, 1596, 1597, 1598, 1599, 1600, 1609, 1616, 1618, 1619, 1621, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1687, 1711, 1731, 1734, 1752, 1755, 1762, 1780, 1793, 1809, 1813, 1836, 1848, 1866, 1867, 1868, 1870, 1871, 1875, 1877, 1878, 1879, 1881, 1885, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1902, 1905, 1906, 1907, 1908, 1910, 1912, 1915, 1917, 1918, 1919, 1921, 1923, 1925, 1927, 1929, 1935, 1941, 1944, 1945, 1946, 1949, 1950, 1954, 1956, 1957, 1958], "separ": [0, 1, 3, 9, 14, 21, 24, 28, 41, 42, 48, 49, 51, 54, 55, 56, 724, 749, 879, 1068, 1085, 1087, 1093, 1094, 1097, 1098, 1103, 1105, 1124, 1206, 1241, 1256, 1384, 1392, 1393, 1394, 1435, 1437, 1547, 1657, 1866, 1869, 1871, 1877, 1890, 1891, 1893, 1894, 1897, 1907, 1910, 1914, 1915, 1924, 1927, 1928, 1932, 1941, 1956], "desir": [0, 1, 3, 21, 24, 30, 48, 56, 78, 145, 160, 162, 165, 168, 169, 170, 185, 196, 199, 230, 244, 257, 287, 315, 383, 434, 435, 436, 437, 438, 486, 488, 489, 509, 514, 533, 534, 535, 549, 569, 572, 592, 593, 606, 782, 854, 868, 910, 919, 938, 1015, 1016, 1039, 1040, 1049, 1050, 1069, 1070, 1071, 1081, 1086, 1104, 1121, 1122, 1123, 1152, 1153, 1195, 1215, 1266, 1282, 1288, 1295, 1309, 1315, 1324, 1326, 1327, 1345, 1346, 1429, 1479, 1501, 1547, 1584, 1585, 1600, 1642, 1656, 1660, 1661, 1702, 1709, 1712, 1713, 1714, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1761, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1789, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1812, 1827, 1838, 1840, 1864, 1865, 1884, 1885, 1886, 1890, 1891, 1894, 1897, 1900, 1902, 1907, 1916, 1922, 1923, 1928, 1929, 1930, 1956], "As": [0, 1, 8, 22, 24, 26, 30, 45, 46, 48, 51, 52, 56, 244, 923, 1068, 1199, 1227, 1231, 1232, 1242, 1243, 1254, 1259, 1368, 1369, 1370, 1374, 1395, 1429, 1460, 1596, 1655, 1661, 1865, 1868, 1870, 1871, 1878, 1886, 1891, 1894, 1896, 1898, 1902, 1905, 1908, 1909, 1910, 1912, 1915, 1916, 1922, 1923, 1924, 1925, 1927, 1938, 1940, 1942, 1946, 1947, 1948, 1949, 1956], "section": [0, 1, 7, 21, 30, 32, 33, 46, 52, 56, 76, 109, 1025, 1068, 1148, 1366, 1381, 1399, 1427, 1444, 1511, 1645, 1828, 1868, 1869, 1870, 1871, 1872, 1883, 1885, 1886, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1904, 1924, 1932, 1942, 1943, 1946, 1947, 1948, 1949, 1950, 1954, 1956], "infer": [0, 1, 2, 3, 5, 11, 12, 15, 30, 41, 48, 569, 606, 850, 851, 854, 868, 869, 952, 985, 1121, 1122, 1157, 1170, 1179, 1193, 1196, 1205, 1210, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1435, 1481, 1539, 1565, 1600, 1654, 1682, 1693, 1727, 1734, 1752, 1753, 1795, 1796, 1797, 1798, 1799, 1800, 1827, 1844, 1867, 1868, 1870, 1871, 1875, 1884, 1886, 1894, 1902, 1912, 1917, 1918, 1919, 1921, 1927, 1938, 1940, 1941, 1944, 1946, 1948, 1953], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 45, 46, 48, 52, 53, 55, 56, 72, 73, 74, 109, 244, 301, 311, 313, 325, 342, 434, 435, 436, 437, 438, 447, 470, 475, 477, 502, 504, 506, 546, 572, 573, 574, 576, 577, 603, 606, 669, 684, 685, 724, 727, 728, 729, 730, 732, 761, 762, 763, 768, 774, 775, 776, 780, 782, 790, 803, 806, 809, 810, 813, 817, 831, 838, 847, 867, 883, 886, 887, 888, 889, 890, 892, 897, 910, 911, 919, 941, 952, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 974, 981, 983, 985, 1003, 1011, 1012, 1014, 1035, 1065, 1069, 1071, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1114, 1115, 1119, 1120, 1125, 1136, 1148, 1152, 1153, 1157, 1165, 1176, 1184, 1193, 1195, 1198, 1199, 1207, 1211, 1212, 1215, 1226, 1231, 1232, 1234, 1235, 1236, 1237, 1239, 1241, 1242, 1243, 1244, 1254, 1256, 1257, 1259, 1260, 1267, 1268, 1285, 1290, 1337, 1360, 1361, 1362, 1365, 1366, 1372, 1373, 1376, 1399, 1401, 1429, 1432, 1434, 1435, 1437, 1445, 1468, 1476, 1480, 1481, 1511, 1520, 1522, 1528, 1539, 1566, 1596, 1597, 1600, 1603, 1604, 1605, 1606, 1609, 1611, 1612, 1622, 1642, 1643, 1644, 1656, 1664, 1665, 1668, 1669, 1671, 1682, 1685, 1689, 1692, 1693, 1695, 1699, 1711, 1720, 1724, 1726, 1728, 1751, 1755, 1756, 1758, 1762, 1787, 1790, 1794, 1804, 1809, 1813, 1827, 1838, 1840, 1845, 1846, 1848, 1849, 1851, 1856, 1857, 1858, 1859, 1866, 1869, 1870, 1871, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1921, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1956, 1958], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 29, 30, 32, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 69, 70, 71, 186, 211, 244, 279, 303, 305, 311, 325, 342, 460, 470, 482, 488, 502, 504, 506, 572, 578, 592, 606, 675, 676, 677, 678, 679, 682, 688, 723, 727, 728, 729, 730, 731, 732, 749, 781, 782, 783, 803, 847, 848, 881, 897, 909, 913, 915, 916, 918, 921, 930, 941, 1003, 1017, 1019, 1025, 1049, 1050, 1051, 1068, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1112, 1134, 1136, 1137, 1148, 1157, 1172, 1195, 1206, 1207, 1209, 1211, 1212, 1227, 1231, 1232, 1235, 1238, 1239, 1240, 1241, 1243, 1252, 1253, 1255, 1259, 1268, 1275, 1283, 1290, 1296, 1300, 1337, 1341, 1345, 1346, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1372, 1373, 1375, 1376, 1381, 1383, 1390, 1395, 1399, 1401, 1429, 1432, 1433, 1434, 1435, 1443, 1444, 1450, 1451, 1452, 1453, 1454, 1455, 1460, 1465, 1479, 1480, 1484, 1485, 1486, 1501, 1503, 1504, 1505, 1528, 1539, 1564, 1566, 1578, 1586, 1600, 1605, 1606, 1609, 1619, 1642, 1643, 1644, 1646, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1695, 1740, 1749, 1787, 1788, 1798, 1804, 1813, 1828, 1830, 1834, 1842, 1845, 1849, 1851, 1857, 1858, 1859, 1866, 1867, 1868, 1871, 1873, 1875, 1877, 1878, 1879, 1881, 1884, 1885, 1886, 1887, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1938, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1953, 1955, 1956, 1957], "api": [0, 2, 3, 5, 8, 9, 22, 24, 25, 29, 32, 33, 34, 38, 39, 40, 41, 42, 48, 49, 52, 55, 57, 62, 65, 66, 67, 223, 789, 813, 850, 883, 884, 885, 893, 930, 969, 1003, 1004, 1005, 1011, 1012, 1014, 1041, 1072, 1112, 1125, 1128, 1129, 1131, 1136, 1206, 1207, 1209, 1314, 1609, 1651, 1653, 1654, 1662, 1740, 1751, 1757, 1842, 1851, 1859, 1866, 1875, 1877, 1878, 1879, 1882, 1883, 1884, 1886, 1891, 1895, 1907, 1909, 1919, 1923, 1924, 1927, 1930, 1932, 1935, 1938, 1941, 1943, 1948, 1957], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 24, 28, 29, 30, 31, 38, 41, 45, 46, 48, 52, 53, 54, 55, 56, 57, 64, 65, 77, 144, 208, 211, 212, 244, 313, 502, 504, 506, 512, 532, 603, 730, 731, 732, 749, 789, 803, 850, 869, 878, 879, 888, 910, 919, 933, 934, 941, 946, 968, 1011, 1014, 1025, 1049, 1050, 1068, 1072, 1088, 1119, 1125, 1131, 1135, 1136, 1137, 1140, 1142, 1152, 1153, 1157, 1170, 1195, 1198, 1199, 1202, 1205, 1209, 1211, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1297, 1303, 1317, 1325, 1337, 1345, 1347, 1348, 1349, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1373, 1376, 1381, 1395, 1399, 1429, 1436, 1444, 1458, 1460, 1468, 1477, 1478, 1480, 1506, 1507, 1508, 1528, 1565, 1581, 1600, 1609, 1619, 1621, 1631, 1633, 1635, 1636, 1637, 1638, 1654, 1668, 1669, 1683, 1689, 1693, 1696, 1699, 1724, 1731, 1743, 1753, 1768, 1769, 1786, 1790, 1804, 1813, 1822, 1824, 1827, 1833, 1834, 1845, 1846, 1859, 1862, 1866, 1867, 1868, 1870, 1871, 1875, 1877, 1878, 1879, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1914, 1915, 1916, 1918, 1923, 1924, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958], "arg": [0, 1, 3, 4, 5, 14, 21, 22, 24, 28, 30, 32, 33, 39, 40, 42, 43, 44, 45, 46, 48, 55, 56, 57, 62, 63, 64, 65, 569, 592, 669, 721, 736, 738, 740, 741, 742, 743, 749, 751, 752, 813, 850, 879, 881, 886, 887, 945, 1014, 1124, 1128, 1129, 1130, 1136, 1195, 1198, 1285, 1345, 1346, 1363, 1365, 1389, 1391, 1396, 1418, 1420, 1421, 1429, 1432, 1433, 1434, 1436, 1443, 1457, 1459, 1460, 1461, 1463, 1467, 1468, 1469, 1470, 1477, 1500, 1501, 1511, 1540, 1563, 1571, 1600, 1609, 1623, 1628, 1642, 1649, 1651, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1814, 1846, 1856, 1859, 1866, 1869, 1871, 1872, 1883, 1885, 1891, 1894, 1895, 1896, 1897, 1904, 1910, 1912, 1915, 1916, 1923, 1924, 1925, 1929, 1937, 1942, 1943, 1945, 1946, 1949, 1955, 1956, 1957], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 140, 143, 144, 145, 160, 162, 165, 168, 169, 170, 180, 181, 185, 186, 196, 198, 199, 208, 213, 223, 230, 244, 245, 257, 280, 287, 301, 303, 305, 309, 311, 313, 315, 318, 319, 320, 321, 322, 323, 325, 326, 328, 330, 331, 332, 333, 342, 383, 390, 392, 396, 437, 447, 460, 461, 470, 472, 475, 476, 477, 482, 484, 485, 486, 487, 488, 489, 492, 493, 502, 504, 506, 509, 513, 514, 526, 532, 533, 534, 546, 549, 569, 570, 572, 573, 574, 576, 577, 578, 592, 593, 596, 603, 606, 607, 609, 613, 669, 670, 672, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 752, 753, 754, 757, 758, 761, 762, 763, 764, 765, 766, 767, 768, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 788, 790, 791, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 813, 815, 816, 822, 827, 828, 829, 846, 847, 848, 850, 851, 854, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 906, 909, 910, 911, 912, 914, 917, 919, 921, 922, 925, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 943, 944, 948, 952, 953, 954, 955, 956, 957, 958, 959, 960, 965, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 983, 985, 988, 989, 990, 992, 996, 997, 1000, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1078, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1148, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1215, 1216, 1217, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1278, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1317, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1460, 1461, 1462, 1464, 1465, 1468, 1469, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1493, 1496, 1497, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1530, 1539, 1540, 1545, 1547, 1549, 1550, 1552, 1553, 1554, 1563, 1564, 1566, 1568, 1569, 1570, 1571, 1572, 1578, 1581, 1584, 1585, 1593, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1642, 1643, 1644, 1645, 1646, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1718, 1720, 1721, 1722, 1724, 1725, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1742, 1743, 1747, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1807, 1808, 1809, 1812, 1813, 1814, 1815, 1816, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1844, 1845, 1846, 1848, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1944, 1947, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959], "equival": [0, 3, 5, 12, 21, 22, 28, 30, 34, 41, 42, 45, 48, 52, 53, 56, 72, 145, 160, 162, 165, 168, 169, 170, 230, 245, 257, 287, 309, 315, 383, 437, 447, 487, 489, 514, 593, 599, 606, 607, 609, 681, 733, 737, 744, 746, 748, 774, 775, 776, 865, 879, 922, 924, 927, 929, 932, 939, 940, 952, 1056, 1060, 1063, 1066, 1067, 1068, 1070, 1085, 1087, 1090, 1093, 1094, 1097, 1098, 1100, 1103, 1105, 1123, 1125, 1128, 1130, 1136, 1158, 1160, 1172, 1194, 1195, 1206, 1211, 1212, 1215, 1227, 1248, 1252, 1260, 1265, 1297, 1302, 1317, 1324, 1337, 1347, 1348, 1349, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1372, 1373, 1384, 1390, 1392, 1393, 1394, 1395, 1399, 1401, 1429, 1460, 1468, 1480, 1482, 1547, 1568, 1578, 1597, 1598, 1599, 1609, 1661, 1682, 1718, 1721, 1725, 1749, 1755, 1763, 1785, 1792, 1805, 1815, 1816, 1822, 1827, 1846, 1859, 1860, 1861, 1865, 1868, 1870, 1871, 1891, 1910, 1912, 1915, 1919, 1927, 1928, 1930, 1933, 1934, 1942, 1943, 1949, 1957, 1959], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 41, 42, 45, 46, 48, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 76, 77, 301, 311, 447, 572, 606, 674, 675, 676, 678, 682, 684, 685, 688, 718, 727, 728, 729, 761, 762, 763, 768, 774, 775, 776, 781, 782, 783, 784, 790, 806, 822, 848, 850, 851, 881, 883, 888, 897, 898, 909, 910, 914, 917, 919, 921, 933, 934, 941, 952, 955, 968, 970, 1011, 1012, 1014, 1031, 1063, 1065, 1068, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1131, 1135, 1152, 1153, 1165, 1192, 1199, 1207, 1211, 1215, 1216, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1286, 1290, 1294, 1299, 1300, 1318, 1357, 1358, 1359, 1360, 1361, 1362, 1369, 1372, 1373, 1376, 1396, 1416, 1434, 1435, 1468, 1476, 1478, 1480, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1520, 1522, 1528, 1539, 1545, 1578, 1596, 1597, 1599, 1609, 1656, 1661, 1665, 1668, 1669, 1671, 1699, 1711, 1730, 1731, 1752, 1755, 1756, 1786, 1787, 1790, 1793, 1810, 1813, 1836, 1838, 1840, 1849, 1851, 1856, 1857, 1858, 1865, 1866, 1867, 1868, 1870, 1872, 1873, 1875, 1879, 1881, 1883, 1887, 1891, 1892, 1893, 1894, 1895, 1896, 1900, 1902, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1955, 1956, 1957], "now": [0, 1, 12, 24, 29, 31, 38, 42, 43, 45, 48, 53, 56, 211, 485, 889, 896, 952, 983, 1011, 1032, 1033, 1119, 1142, 1192, 1193, 1199, 1211, 1245, 1426, 1445, 1481, 1600, 1621, 1632, 1653, 1671, 1752, 1804, 1809, 1851, 1868, 1878, 1884, 1885, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1902, 1903, 1912, 1915, 1918, 1924, 1925, 1927, 1941, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1955, 1956, 1957, 1958], "new": [0, 1, 5, 8, 14, 18, 21, 23, 24, 26, 30, 32, 41, 42, 45, 48, 49, 52, 53, 54, 55, 56, 76, 211, 244, 301, 437, 472, 476, 485, 488, 533, 569, 572, 606, 669, 673, 749, 780, 803, 808, 843, 868, 870, 871, 872, 873, 874, 884, 902, 903, 924, 925, 928, 930, 939, 943, 955, 957, 958, 972, 974, 1052, 1056, 1078, 1082, 1083, 1109, 1110, 1112, 1125, 1134, 1136, 1165, 1169, 1170, 1184, 1185, 1188, 1191, 1195, 1202, 1207, 1209, 1269, 1270, 1271, 1272, 1289, 1328, 1331, 1347, 1348, 1349, 1381, 1392, 1393, 1394, 1429, 1430, 1435, 1439, 1468, 1479, 1481, 1539, 1602, 1605, 1606, 1607, 1608, 1609, 1617, 1621, 1623, 1627, 1628, 1629, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1646, 1650, 1653, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1695, 1719, 1729, 1730, 1734, 1735, 1736, 1742, 1743, 1747, 1752, 1753, 1763, 1765, 1776, 1778, 1780, 1802, 1803, 1806, 1823, 1825, 1826, 1842, 1844, 1847, 1848, 1857, 1858, 1859, 1866, 1868, 1870, 1871, 1875, 1878, 1879, 1883, 1884, 1885, 1886, 1887, 1891, 1894, 1896, 1897, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1917, 1918, 1921, 1925, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1937, 1941, 1943, 1944, 1946, 1949, 1955, 1956], "version": [0, 1, 2, 5, 8, 12, 14, 20, 22, 24, 26, 30, 42, 45, 48, 51, 52, 56, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 111, 113, 115, 117, 120, 121, 123, 131, 133, 136, 137, 139, 142, 148, 150, 152, 154, 156, 158, 167, 176, 184, 188, 191, 193, 203, 205, 221, 226, 228, 234, 237, 239, 241, 243, 247, 252, 259, 261, 263, 267, 269, 273, 275, 282, 284, 286, 294, 296, 298, 300, 302, 304, 306, 308, 346, 348, 350, 352, 354, 356, 358, 361, 363, 365, 366, 373, 375, 377, 379, 381, 385, 389, 391, 409, 412, 415, 417, 428, 430, 432, 440, 445, 455, 458, 474, 479, 481, 497, 500, 501, 503, 505, 511, 516, 518, 521, 523, 525, 538, 540, 542, 545, 551, 553, 560, 564, 566, 582, 585, 587, 589, 591, 601, 611, 724, 725, 726, 738, 739, 740, 741, 742, 743, 764, 765, 766, 767, 769, 773, 774, 793, 794, 795, 828, 836, 844, 845, 847, 952, 1014, 1124, 1152, 1170, 1192, 1195, 1198, 1199, 1203, 1206, 1225, 1232, 1238, 1239, 1243, 1244, 1257, 1290, 1328, 1346, 1399, 1429, 1430, 1444, 1481, 1493, 1518, 1528, 1535, 1544, 1575, 1577, 1592, 1593, 1597, 1601, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1650, 1651, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1744, 1745, 1746, 1804, 1807, 1808, 1809, 1813, 1833, 1848, 1854, 1855, 1866, 1884, 1885, 1891, 1892, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1906, 1908, 1910, 1912, 1914, 1915, 1917, 1921, 1927, 1934, 1935, 1944, 1946, 1947, 1954, 1956, 1958], "1": [0, 1, 2, 3, 11, 12, 14, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 126, 141, 142, 163, 181, 195, 198, 215, 217, 218, 219, 223, 232, 244, 248, 253, 276, 279, 301, 302, 303, 305, 307, 311, 342, 367, 391, 392, 434, 436, 437, 443, 460, 470, 472, 476, 477, 482, 485, 488, 502, 504, 506, 526, 527, 531, 533, 543, 544, 545, 547, 549, 550, 551, 552, 553, 570, 572, 573, 574, 576, 577, 596, 597, 604, 606, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 719, 720, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 740, 741, 742, 745, 746, 747, 749, 759, 761, 762, 763, 764, 767, 771, 772, 774, 785, 797, 798, 808, 809, 810, 811, 814, 816, 844, 850, 851, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 883, 886, 888, 889, 890, 891, 892, 893, 894, 895, 902, 903, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 940, 942, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 964, 968, 980, 1011, 1012, 1027, 1031, 1038, 1042, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1074, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1165, 1166, 1169, 1170, 1172, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1199, 1201, 1206, 1207, 1211, 1212, 1215, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1314, 1317, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1471, 1472, 1474, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1493, 1495, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1526, 1527, 1528, 1530, 1532, 1534, 1535, 1536, 1537, 1538, 1546, 1548, 1552, 1553, 1554, 1560, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1572, 1576, 1577, 1578, 1579, 1580, 1582, 1584, 1585, 1586, 1588, 1593, 1594, 1595, 1596, 1597, 1600, 1609, 1616, 1617, 1621, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1642, 1643, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1704, 1705, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1747, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1760, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1781, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1843, 1844, 1845, 1846, 1847, 1848, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1869, 1870, 1871, 1872, 1875, 1878, 1879, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1959], "10": [0, 1, 12, 20, 21, 22, 24, 25, 30, 31, 41, 43, 45, 57, 62, 64, 65, 303, 311, 325, 460, 502, 549, 570, 572, 573, 574, 674, 675, 686, 723, 734, 735, 749, 750, 751, 752, 754, 909, 921, 931, 934, 935, 939, 952, 960, 1047, 1048, 1049, 1050, 1051, 1066, 1068, 1085, 1087, 1090, 1091, 1093, 1094, 1097, 1098, 1100, 1101, 1103, 1105, 1111, 1119, 1138, 1148, 1158, 1184, 1200, 1206, 1207, 1213, 1218, 1221, 1248, 1250, 1251, 1266, 1268, 1270, 1275, 1277, 1278, 1279, 1280, 1282, 1290, 1301, 1319, 1335, 1336, 1337, 1339, 1340, 1346, 1349, 1352, 1353, 1356, 1359, 1362, 1372, 1373, 1381, 1382, 1383, 1384, 1394, 1399, 1400, 1401, 1426, 1430, 1431, 1436, 1439, 1440, 1444, 1446, 1468, 1472, 1473, 1474, 1475, 1476, 1480, 1486, 1505, 1508, 1512, 1519, 1520, 1530, 1600, 1609, 1632, 1640, 1654, 1657, 1663, 1667, 1687, 1693, 1695, 1713, 1714, 1722, 1747, 1755, 1760, 1766, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1776, 1785, 1801, 1813, 1814, 1824, 1828, 1829, 1832, 1834, 1848, 1860, 1866, 1868, 1869, 1870, 1871, 1872, 1878, 1891, 1894, 1895, 1896, 1902, 1905, 1906, 1907, 1908, 1911, 1912, 1913, 1918, 1927, 1928, 1930, 1932, 1933, 1934, 1941, 1942, 1943, 1946, 1948, 1949, 1954, 1956, 1959], "class": [0, 1, 2, 3, 12, 15, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 35, 38, 39, 41, 43, 45, 46, 48, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 546, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 825, 826, 827, 828, 829, 830, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 883, 886, 887, 888, 889, 961, 962, 969, 970, 971, 972, 974, 975, 990, 992, 1003, 1043, 1072, 1134, 1170, 1193, 1194, 1195, 1198, 1200, 1201, 1202, 1206, 1207, 1210, 1211, 1212, 1213, 1307, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1501, 1511, 1519, 1563, 1565, 1600, 1609, 1610, 1611, 1612, 1618, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1642, 1649, 1654, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1718, 1757, 1788, 1849, 1867, 1869, 1872, 1875, 1878, 1881, 1883, 1885, 1890, 1891, 1894, 1896, 1897, 1898, 1902, 1904, 1907, 1910, 1916, 1917, 1918, 1920, 1921, 1923, 1924, 1927, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1942, 1943, 1944, 1949, 1952, 1954, 1955, 1956, 1957, 1958, 1959], "device_typ": [0, 1, 24, 1890, 1922], "dtype": [0, 1, 5, 11, 12, 18, 19, 21, 24, 26, 45, 46, 48, 56, 57, 62, 64, 65, 66, 67, 75, 143, 144, 181, 198, 202, 203, 204, 205, 232, 301, 303, 305, 307, 309, 311, 399, 418, 421, 434, 435, 436, 437, 438, 442, 447, 459, 470, 472, 502, 504, 554, 569, 570, 592, 606, 676, 678, 681, 682, 686, 688, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 747, 749, 750, 753, 754, 761, 762, 763, 783, 784, 788, 808, 809, 810, 811, 812, 813, 814, 815, 816, 830, 847, 848, 850, 851, 854, 868, 869, 886, 888, 890, 892, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 926, 933, 934, 949, 952, 953, 954, 960, 968, 984, 1049, 1050, 1069, 1070, 1071, 1081, 1085, 1086, 1087, 1093, 1094, 1104, 1111, 1116, 1118, 1120, 1121, 1122, 1123, 1142, 1152, 1153, 1165, 1195, 1199, 1209, 1215, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1277, 1278, 1279, 1280, 1282, 1285, 1286, 1290, 1294, 1295, 1296, 1299, 1300, 1319, 1323, 1324, 1325, 1327, 1337, 1346, 1347, 1348, 1349, 1350, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1372, 1373, 1376, 1381, 1382, 1384, 1392, 1393, 1394, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1429, 1435, 1436, 1437, 1444, 1445, 1446, 1450, 1451, 1452, 1453, 1454, 1468, 1472, 1474, 1476, 1480, 1481, 1482, 1483, 1495, 1511, 1512, 1539, 1545, 1547, 1578, 1584, 1585, 1600, 1611, 1612, 1618, 1621, 1622, 1642, 1656, 1660, 1661, 1662, 1664, 1699, 1705, 1709, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1737, 1740, 1752, 1753, 1755, 1756, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1784, 1787, 1789, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1812, 1813, 1824, 1827, 1838, 1840, 1845, 1848, 1849, 1851, 1857, 1858, 1862, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1873, 1878, 1885, 1886, 1894, 1896, 1902, 1905, 1910, 1912, 1913, 1918, 1919, 1920, 1927, 1928, 1929, 1932, 1933, 1934, 1943, 1945, 1946, 1951, 1956, 1959], "none": [0, 1, 2, 3, 5, 12, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 38, 39, 41, 43, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 104, 105, 106, 108, 124, 125, 128, 140, 143, 144, 146, 163, 175, 176, 177, 178, 194, 195, 197, 199, 202, 203, 204, 205, 219, 223, 225, 226, 227, 228, 248, 276, 280, 291, 325, 341, 344, 367, 397, 399, 400, 401, 404, 410, 416, 417, 418, 419, 420, 421, 434, 435, 436, 437, 438, 442, 443, 459, 468, 470, 476, 477, 483, 492, 502, 509, 526, 527, 541, 542, 544, 545, 554, 569, 570, 572, 577, 579, 592, 597, 598, 599, 604, 615, 617, 619, 621, 623, 625, 627, 629, 631, 633, 635, 637, 639, 641, 644, 646, 648, 649, 651, 653, 655, 657, 659, 661, 663, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 738, 739, 740, 741, 742, 743, 744, 755, 756, 757, 758, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 782, 783, 784, 786, 788, 803, 806, 808, 809, 810, 811, 814, 815, 827, 828, 829, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 867, 868, 869, 870, 871, 872, 873, 874, 878, 879, 880, 881, 882, 883, 884, 885, 888, 889, 891, 893, 894, 895, 896, 897, 898, 902, 903, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 925, 928, 930, 931, 932, 933, 934, 936, 937, 939, 941, 946, 949, 950, 951, 954, 955, 957, 958, 959, 960, 963, 967, 968, 969, 971, 972, 974, 975, 976, 980, 981, 983, 984, 985, 988, 989, 990, 996, 997, 1003, 1013, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1038, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1060, 1061, 1063, 1064, 1065, 1067, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1122, 1123, 1124, 1125, 1126, 1130, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1172, 1173, 1189, 1190, 1192, 1194, 1195, 1199, 1203, 1205, 1206, 1207, 1209, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1372, 1373, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1443, 1444, 1445, 1446, 1460, 1461, 1462, 1463, 1464, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1488, 1489, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1519, 1520, 1523, 1524, 1525, 1526, 1528, 1529, 1536, 1538, 1539, 1540, 1541, 1542, 1545, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1568, 1571, 1578, 1582, 1583, 1584, 1585, 1593, 1594, 1595, 1597, 1598, 1599, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1620, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1642, 1644, 1645, 1646, 1647, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1704, 1705, 1706, 1708, 1709, 1711, 1712, 1715, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731, 1732, 1733, 1738, 1740, 1741, 1742, 1747, 1760, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1784, 1785, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1824, 1825, 1826, 1827, 1829, 1831, 1834, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1845, 1846, 1849, 1851, 1853, 1854, 1855, 1856, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1889, 1891, 1894, 1896, 1897, 1902, 1904, 1907, 1910, 1912, 1915, 1916, 1917, 1918, 1920, 1922, 1923, 1928, 1929, 1930, 1932, 1934, 1936, 1937, 1942, 1943, 1946, 1949, 1951, 1956, 1957, 1958], "enabl": [0, 1, 2, 5, 8, 12, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 32, 42, 48, 69, 75, 77, 477, 492, 493, 669, 749, 801, 802, 883, 888, 941, 952, 969, 1014, 1068, 1072, 1170, 1178, 1179, 1197, 1204, 1310, 1311, 1381, 1399, 1444, 1445, 1475, 1578, 1609, 1618, 1619, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1654, 1681, 1756, 1757, 1760, 1788, 1848, 1851, 1871, 1877, 1878, 1879, 1882, 1886, 1890, 1891, 1892, 1893, 1894, 1896, 1901, 1903, 1905, 1906, 1910, 1912, 1916, 1917, 1922, 1923, 1924, 1927, 1935, 1937, 1938, 1940, 1942, 1943, 1945, 1946, 1949, 1950, 1954, 1956, 1957, 1958], "true": [0, 1, 2, 3, 5, 12, 14, 21, 22, 24, 25, 26, 28, 30, 32, 43, 45, 48, 53, 54, 55, 56, 57, 64, 65, 140, 186, 199, 250, 309, 311, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 341, 386, 390, 392, 437, 447, 449, 460, 466, 476, 477, 484, 485, 488, 493, 505, 506, 545, 556, 569, 570, 579, 583, 592, 598, 606, 669, 676, 681, 682, 683, 684, 685, 686, 688, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 735, 738, 743, 745, 749, 750, 753, 754, 757, 758, 768, 774, 775, 786, 803, 815, 848, 862, 864, 865, 869, 878, 881, 882, 883, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 902, 903, 910, 913, 916, 918, 919, 925, 926, 932, 940, 941, 944, 946, 952, 953, 971, 1009, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1090, 1091, 1097, 1098, 1121, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1135, 1136, 1137, 1139, 1151, 1152, 1153, 1156, 1157, 1168, 1170, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1195, 1199, 1200, 1202, 1205, 1211, 1212, 1213, 1215, 1217, 1220, 1225, 1226, 1237, 1238, 1239, 1242, 1243, 1244, 1245, 1248, 1250, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1262, 1265, 1267, 1268, 1277, 1278, 1279, 1280, 1283, 1284, 1285, 1287, 1289, 1293, 1295, 1296, 1297, 1298, 1301, 1307, 1319, 1324, 1327, 1330, 1333, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1377, 1378, 1381, 1382, 1383, 1384, 1389, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1438, 1443, 1444, 1445, 1446, 1460, 1461, 1468, 1472, 1474, 1475, 1476, 1477, 1478, 1481, 1482, 1493, 1495, 1496, 1497, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1523, 1524, 1528, 1530, 1532, 1538, 1539, 1540, 1552, 1553, 1554, 1563, 1571, 1578, 1597, 1598, 1600, 1603, 1609, 1610, 1612, 1613, 1616, 1617, 1620, 1621, 1622, 1634, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1699, 1701, 1709, 1711, 1712, 1716, 1717, 1718, 1735, 1736, 1743, 1746, 1747, 1755, 1756, 1757, 1760, 1762, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1785, 1787, 1788, 1790, 1798, 1807, 1808, 1809, 1812, 1813, 1827, 1831, 1836, 1845, 1846, 1848, 1851, 1853, 1854, 1855, 1859, 1862, 1866, 1869, 1870, 1871, 1878, 1880, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1905, 1906, 1907, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1943, 1944, 1946, 1948, 1949, 1951, 1954, 1955, 1956, 1957], "cache_en": [0, 1014], "sourc": [0, 1, 2, 3, 4, 5, 9, 13, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 41, 43, 45, 46, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 140, 186, 199, 223, 302, 303, 311, 330, 341, 386, 391, 392, 405, 406, 442, 460, 476, 477, 502, 504, 506, 509, 513, 536, 545, 546, 548, 575, 592, 595, 598, 599, 613, 669, 684, 685, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 825, 826, 827, 828, 829, 830, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 862, 875, 876, 877, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 920, 922, 923, 927, 929, 931, 941, 942, 943, 944, 945, 946, 947, 948, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1068, 1072, 1119, 1121, 1137, 1143, 1144, 1147, 1166, 1167, 1168, 1170, 1171, 1176, 1181, 1182, 1183, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1267, 1268, 1288, 1297, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1493, 1494, 1498, 1500, 1501, 1502, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1525, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1546, 1547, 1549, 1550, 1551, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1571, 1573, 1574, 1576, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1588, 1589, 1590, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1701, 1718, 1743, 1748, 1751, 1752, 1753, 1754, 1755, 1757, 1760, 1761, 1762, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1787, 1788, 1794, 1801, 1809, 1814, 1817, 1818, 1819, 1820, 1821, 1829, 1848, 1849, 1850, 1851, 1852, 1866, 1868, 1869, 1870, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1889, 1898, 1900, 1901, 1905, 1907, 1910, 1912, 1914, 1916, 1917, 1918, 1922, 1923, 1924, 1929, 1932, 1934, 1935, 1936, 1937, 1943, 1946, 1947, 1949, 1956, 1957, 1958], "instanc": [0, 3, 21, 24, 25, 26, 28, 30, 31, 32, 38, 41, 42, 43, 48, 53, 56, 129, 606, 669, 723, 737, 746, 782, 785, 813, 815, 830, 847, 969, 1068, 1119, 1193, 1195, 1207, 1211, 1268, 1372, 1373, 1376, 1392, 1393, 1394, 1401, 1429, 1439, 1473, 1475, 1476, 1480, 1538, 1609, 1617, 1628, 1642, 1650, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1798, 1828, 1868, 1870, 1872, 1877, 1879, 1883, 1885, 1890, 1891, 1894, 1895, 1896, 1898, 1902, 1906, 1910, 1915, 1918, 1923, 1924, 1925, 1927, 1929, 1934, 1941, 1949, 1955, 1957], "serv": [0, 7, 8, 15, 24, 77, 1878, 1910, 1914, 1923, 1924, 1942, 1946, 1951], "context": [0, 2, 5, 21, 28, 32, 41, 42, 48, 56, 57, 140, 781, 878, 879, 880, 882, 883, 896, 897, 946, 962, 966, 975, 990, 992, 1003, 1009, 1014, 1021, 1041, 1043, 1072, 1126, 1130, 1135, 1170, 1195, 1310, 1429, 1578, 1600, 1609, 1610, 1619, 1621, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1757, 1788, 1867, 1871, 1872, 1883, 1890, 1891, 1894, 1896, 1900, 1901, 1904, 1910, 1912, 1915, 1917, 1922, 1923, 1925, 1927, 1930, 1935, 1944, 1945, 1946, 1949, 1954, 1958], "manag": [0, 1, 2, 5, 7, 24, 28, 30, 32, 39, 41, 42, 43, 48, 56, 57, 78, 475, 883, 946, 962, 966, 969, 970, 972, 975, 976, 977, 979, 990, 992, 993, 994, 1003, 1004, 1014, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1032, 1033, 1034, 1041, 1043, 1072, 1126, 1130, 1135, 1170, 1310, 1445, 1578, 1609, 1618, 1619, 1621, 1654, 1757, 1788, 1867, 1871, 1872, 1891, 1896, 1898, 1901, 1910, 1912, 1916, 1917, 1922, 1923, 1924, 1927, 1930, 1935, 1944, 1945, 1946, 1949], "decor": [0, 1, 30, 34, 38, 42, 56, 67, 888, 943, 946, 1072, 1170, 1200, 1201, 1207, 1213, 1654, 1787, 1788, 1868, 1870, 1871, 1875, 1890, 1891, 1896, 1916, 1923, 1942, 1943, 1947, 1957], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 24, 25, 30, 32, 33, 41, 42, 45, 48, 49, 51, 52, 53, 54, 56, 57, 59, 140, 502, 669, 724, 782, 786, 788, 813, 882, 884, 896, 897, 926, 940, 944, 952, 1011, 1014, 1038, 1068, 1129, 1195, 1200, 1213, 1251, 1273, 1314, 1328, 1342, 1343, 1344, 1365, 1366, 1383, 1422, 1423, 1424, 1429, 1432, 1435, 1457, 1472, 1609, 1614, 1655, 1664, 1680, 1790, 1848, 1866, 1870, 1871, 1878, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1927, 1930, 1931, 1932, 1934, 1943, 1944, 1945, 1946, 1949, 1952, 1955, 1956], "region": [0, 3, 5, 30, 38, 757, 758, 941, 1342, 1343, 1344, 1377, 1378, 1388, 1390, 1422, 1423, 1424, 1496, 1497, 1523, 1524, 1553, 1554, 1868, 1883, 1890, 1894, 1945, 1946, 1954], "your": [0, 1, 2, 4, 7, 8, 9, 11, 14, 15, 17, 21, 24, 28, 29, 30, 33, 34, 38, 40, 41, 42, 43, 44, 45, 48, 52, 53, 55, 56, 882, 888, 890, 891, 896, 941, 944, 1170, 1195, 1199, 1200, 1205, 1208, 1211, 1212, 1213, 1429, 1436, 1476, 1609, 1618, 1621, 1654, 1682, 1756, 1845, 1849, 1851, 1868, 1870, 1871, 1875, 1877, 1883, 1884, 1885, 1887, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1908, 1912, 1914, 1916, 1919, 1922, 1924, 1927, 1932, 1933, 1935, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1950, 1953, 1954, 1956, 1957, 1958], "script": [0, 2, 4, 18, 21, 24, 27, 32, 34, 40, 42, 43, 45, 1196, 1198, 1199, 1200, 1201, 1202, 1205, 1206, 1208, 1210, 1211, 1213, 1866, 1867, 1870, 1871, 1879, 1893, 1901, 1903, 1907, 1909, 1910, 1915, 1918, 1923, 1940, 1942, 1948, 1950, 1953], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 14, 15, 18, 21, 22, 24, 25, 28, 30, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 140, 477, 781, 787, 806, 808, 809, 810, 811, 814, 846, 850, 851, 852, 882, 896, 897, 898, 941, 1013, 1014, 1125, 1130, 1136, 1170, 1195, 1196, 1198, 1199, 1201, 1203, 1205, 1207, 1209, 1211, 1212, 1232, 1241, 1267, 1268, 1296, 1347, 1348, 1349, 1366, 1392, 1393, 1394, 1402, 1403, 1404, 1411, 1412, 1413, 1429, 1457, 1468, 1578, 1600, 1603, 1609, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1755, 1759, 1792, 1838, 1840, 1848, 1859, 1867, 1868, 1871, 1879, 1881, 1882, 1883, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1918, 1921, 1922, 1923, 1924, 1925, 1927, 1932, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1954, 1955, 1956, 1958], "In": [0, 2, 3, 4, 7, 9, 15, 18, 21, 24, 26, 28, 30, 34, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 55, 56, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 111, 113, 115, 117, 120, 121, 123, 131, 133, 136, 137, 139, 142, 144, 148, 150, 152, 154, 156, 158, 167, 176, 184, 188, 191, 193, 203, 205, 211, 221, 226, 228, 234, 237, 239, 241, 243, 247, 252, 259, 261, 263, 267, 269, 273, 275, 282, 284, 286, 294, 296, 298, 300, 346, 348, 350, 352, 354, 356, 358, 361, 363, 365, 366, 373, 375, 377, 379, 381, 385, 409, 412, 415, 417, 428, 430, 432, 440, 445, 455, 458, 474, 479, 481, 497, 500, 511, 516, 518, 521, 523, 525, 538, 540, 542, 551, 553, 560, 564, 566, 582, 585, 587, 589, 591, 601, 611, 669, 749, 789, 813, 843, 888, 917, 925, 953, 954, 968, 1014, 1025, 1037, 1038, 1042, 1043, 1068, 1089, 1091, 1099, 1100, 1101, 1116, 1126, 1130, 1133, 1135, 1192, 1193, 1195, 1205, 1208, 1209, 1211, 1227, 1236, 1241, 1242, 1243, 1251, 1254, 1259, 1264, 1268, 1273, 1276, 1285, 1290, 1296, 1297, 1324, 1342, 1343, 1344, 1346, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1368, 1369, 1370, 1374, 1376, 1381, 1390, 1399, 1414, 1422, 1423, 1424, 1429, 1435, 1472, 1474, 1476, 1480, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1518, 1528, 1535, 1544, 1572, 1575, 1577, 1578, 1592, 1609, 1616, 1621, 1622, 1654, 1682, 1693, 1695, 1731, 1747, 1749, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1809, 1813, 1814, 1836, 1848, 1849, 1851, 1856, 1857, 1866, 1867, 1868, 1870, 1871, 1877, 1878, 1883, 1884, 1885, 1886, 1889, 1890, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1910, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1923, 1924, 1925, 1927, 1932, 1934, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1958], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 69, 70, 71, 73, 75, 76, 78, 140, 144, 180, 211, 232, 244, 303, 305, 311, 313, 318, 325, 488, 502, 504, 506, 526, 534, 549, 596, 603, 606, 669, 676, 677, 724, 730, 731, 732, 745, 749, 754, 768, 774, 776, 778, 781, 785, 804, 806, 812, 815, 843, 850, 851, 853, 867, 868, 869, 878, 880, 881, 882, 884, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 904, 905, 906, 912, 928, 938, 941, 953, 954, 956, 969, 971, 972, 974, 981, 982, 983, 984, 985, 1003, 1004, 1011, 1012, 1014, 1026, 1028, 1038, 1042, 1043, 1053, 1066, 1068, 1069, 1070, 1071, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1108, 1111, 1119, 1121, 1124, 1125, 1128, 1129, 1130, 1132, 1134, 1136, 1137, 1140, 1148, 1156, 1157, 1158, 1192, 1193, 1195, 1198, 1199, 1201, 1203, 1206, 1207, 1209, 1211, 1212, 1213, 1214, 1225, 1226, 1231, 1232, 1237, 1239, 1241, 1244, 1245, 1249, 1252, 1254, 1257, 1258, 1265, 1267, 1268, 1285, 1287, 1290, 1296, 1307, 1314, 1319, 1328, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1381, 1389, 1393, 1394, 1397, 1398, 1399, 1401, 1411, 1412, 1413, 1414, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1444, 1446, 1448, 1457, 1460, 1462, 1463, 1464, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1482, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1503, 1504, 1505, 1506, 1507, 1508, 1513, 1519, 1520, 1522, 1523, 1524, 1528, 1539, 1546, 1547, 1549, 1550, 1552, 1553, 1554, 1578, 1582, 1597, 1599, 1600, 1603, 1609, 1613, 1614, 1615, 1616, 1619, 1620, 1621, 1628, 1645, 1652, 1654, 1656, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1711, 1716, 1717, 1718, 1737, 1739, 1743, 1751, 1754, 1763, 1769, 1790, 1793, 1794, 1798, 1801, 1806, 1809, 1813, 1827, 1828, 1844, 1845, 1846, 1848, 1851, 1857, 1858, 1859, 1860, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "chosen": [0, 53, 1056, 1217, 1578, 1760, 1785, 1831, 1886, 1890, 1894, 1896, 1904, 1912, 1918, 1956], "improv": [0, 1, 3, 9, 14, 19, 22, 24, 45, 48, 56, 749, 793, 794, 795, 890, 892, 896, 956, 1148, 1367, 1381, 1399, 1444, 1475, 1578, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1695, 1867, 1868, 1890, 1895, 1896, 1897, 1905, 1906, 1910, 1918, 1919, 1923, 1946, 1950, 1952, 1954, 1956, 1958], "perform": [0, 1, 2, 3, 4, 5, 11, 14, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 41, 42, 45, 48, 52, 55, 56, 71, 109, 196, 199, 447, 569, 592, 606, 675, 676, 677, 678, 679, 680, 749, 770, 793, 794, 795, 836, 847, 850, 883, 888, 890, 892, 893, 896, 897, 909, 921, 941, 953, 954, 970, 976, 1025, 1049, 1050, 1063, 1088, 1111, 1113, 1124, 1125, 1128, 1159, 1170, 1195, 1205, 1206, 1211, 1239, 1241, 1244, 1248, 1251, 1252, 1256, 1257, 1265, 1266, 1268, 1273, 1282, 1295, 1300, 1310, 1311, 1321, 1324, 1327, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1369, 1372, 1373, 1381, 1399, 1429, 1435, 1437, 1444, 1457, 1472, 1475, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1547, 1564, 1578, 1584, 1585, 1600, 1609, 1611, 1612, 1617, 1621, 1642, 1649, 1651, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1701, 1709, 1737, 1751, 1755, 1783, 1789, 1790, 1791, 1792, 1812, 1814, 1848, 1867, 1868, 1871, 1881, 1882, 1883, 1884, 1885, 1887, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1903, 1904, 1905, 1906, 1912, 1914, 1915, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1938, 1940, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1952, 1957, 1958], "while": [0, 2, 3, 5, 7, 8, 11, 14, 21, 22, 24, 25, 26, 30, 43, 45, 46, 48, 53, 55, 56, 75, 684, 685, 724, 843, 873, 881, 972, 1043, 1125, 1157, 1195, 1198, 1211, 1212, 1268, 1325, 1337, 1353, 1390, 1392, 1393, 1394, 1399, 1429, 1435, 1447, 1460, 1468, 1472, 1476, 1547, 1603, 1609, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1656, 1747, 1755, 1872, 1877, 1878, 1885, 1886, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1906, 1907, 1912, 1914, 1916, 1918, 1921, 1923, 1925, 1927, 1928, 1931, 1932, 1933, 1945, 1946, 1947, 1949, 1950, 1956], "maintain": [0, 7, 8, 21, 22, 24, 30, 45, 48, 52, 56, 1341, 1369, 1374, 1521, 1609, 1642, 1656, 1867, 1886, 1890, 1891, 1894, 1896, 1902, 1910, 1918, 1944, 1945, 1949], "accuraci": [0, 22, 941, 1259, 1578, 1755, 1867, 1881, 1890, 1902, 1932, 1936, 1946], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 17, 20, 21, 24, 25, 30, 33, 41, 42, 44, 45, 48, 53, 54, 55, 56, 79, 83, 85, 87, 89, 91, 93, 95, 97, 99, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 116, 118, 119, 122, 124, 125, 126, 127, 128, 130, 132, 134, 135, 138, 140, 141, 143, 144, 145, 146, 147, 149, 151, 153, 155, 157, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 179, 182, 183, 187, 189, 190, 192, 194, 195, 197, 200, 201, 202, 204, 207, 208, 210, 214, 215, 216, 217, 218, 219, 220, 224, 225, 227, 229, 230, 231, 233, 235, 236, 238, 240, 242, 245, 246, 251, 253, 254, 255, 256, 257, 258, 260, 262, 264, 265, 266, 268, 270, 271, 272, 274, 277, 278, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 295, 297, 299, 303, 311, 312, 313, 314, 315, 317, 318, 324, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 349, 351, 353, 355, 357, 359, 360, 362, 364, 368, 369, 370, 371, 372, 374, 376, 378, 380, 382, 383, 384, 386, 387, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 416, 418, 419, 420, 421, 422, 423, 427, 429, 431, 439, 441, 442, 444, 446, 448, 449, 450, 451, 453, 454, 456, 457, 459, 466, 468, 469, 471, 473, 476, 477, 478, 480, 482, 483, 484, 486, 487, 488, 490, 491, 494, 495, 496, 499, 504, 506, 507, 508, 510, 512, 514, 515, 517, 519, 520, 522, 524, 527, 528, 529, 531, 532, 536, 537, 539, 541, 543, 544, 545, 550, 552, 554, 556, 557, 558, 559, 561, 562, 563, 565, 567, 568, 579, 580, 581, 583, 584, 586, 588, 590, 594, 595, 598, 599, 600, 603, 604, 605, 607, 608, 609, 610, 669, 682, 684, 685, 688, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 734, 735, 737, 745, 746, 749, 750, 751, 752, 753, 754, 755, 756, 757, 760, 761, 762, 763, 768, 769, 770, 771, 772, 773, 774, 782, 829, 848, 849, 850, 851, 854, 863, 864, 865, 868, 879, 881, 882, 883, 884, 885, 887, 888, 892, 896, 897, 902, 903, 906, 910, 912, 919, 921, 924, 938, 941, 945, 958, 969, 970, 971, 972, 974, 976, 977, 979, 993, 994, 1003, 1004, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1032, 1033, 1034, 1063, 1066, 1068, 1069, 1071, 1072, 1081, 1086, 1104, 1107, 1122, 1127, 1128, 1129, 1131, 1140, 1148, 1152, 1153, 1157, 1158, 1166, 1167, 1168, 1170, 1195, 1199, 1207, 1211, 1212, 1214, 1215, 1217, 1227, 1232, 1235, 1238, 1241, 1243, 1250, 1252, 1253, 1261, 1265, 1266, 1268, 1274, 1276, 1282, 1283, 1285, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1310, 1311, 1317, 1324, 1326, 1327, 1337, 1345, 1346, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1372, 1373, 1375, 1381, 1383, 1389, 1390, 1395, 1396, 1399, 1420, 1421, 1425, 1426, 1427, 1428, 1429, 1432, 1433, 1434, 1435, 1436, 1441, 1442, 1443, 1444, 1447, 1456, 1458, 1460, 1461, 1473, 1474, 1475, 1476, 1477, 1478, 1481, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1525, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1597, 1598, 1599, 1609, 1610, 1616, 1617, 1618, 1621, 1627, 1636, 1645, 1650, 1653, 1654, 1655, 1656, 1660, 1699, 1709, 1710, 1720, 1722, 1724, 1726, 1727, 1731, 1734, 1737, 1743, 1752, 1755, 1757, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1780, 1788, 1789, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1807, 1808, 1809, 1812, 1822, 1824, 1827, 1833, 1834, 1838, 1840, 1845, 1848, 1851, 1854, 1855, 1860, 1862, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1916, 1917, 1918, 1919, 1922, 1923, 1924, 1927, 1928, 1930, 1931, 1933, 1934, 1935, 1938, 1939, 1942, 1943, 1944, 1947, 1948, 1949, 1950, 1954, 1955, 1956, 1957, 1958, 1959], "detail": [0, 1, 2, 3, 7, 8, 11, 13, 14, 15, 17, 18, 21, 24, 25, 26, 30, 32, 42, 46, 48, 54, 56, 69, 70, 71, 140, 313, 484, 603, 669, 724, 727, 728, 729, 730, 731, 732, 749, 755, 756, 757, 760, 761, 762, 763, 768, 769, 771, 772, 773, 774, 782, 848, 849, 850, 851, 862, 879, 881, 882, 883, 884, 885, 888, 897, 924, 945, 958, 970, 974, 976, 977, 979, 993, 994, 1003, 1014, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1032, 1033, 1034, 1051, 1068, 1107, 1129, 1140, 1143, 1144, 1148, 1176, 1183, 1195, 1199, 1211, 1232, 1235, 1253, 1260, 1268, 1274, 1276, 1296, 1337, 1341, 1351, 1360, 1361, 1362, 1366, 1372, 1373, 1374, 1375, 1377, 1378, 1381, 1399, 1429, 1435, 1441, 1442, 1444, 1456, 1477, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1529, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1567, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1600, 1609, 1610, 1645, 1655, 1663, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1682, 1687, 1699, 1711, 1743, 1754, 1780, 1789, 1834, 1845, 1848, 1851, 1866, 1868, 1869, 1870, 1871, 1878, 1880, 1882, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1905, 1906, 1907, 1912, 1915, 1916, 1918, 1920, 1922, 1923, 1924, 1925, 1927, 1931, 1932, 1934, 1935, 1949, 1953, 1956, 1957, 1958], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 53, 54, 55, 56, 72, 74, 75, 87, 140, 181, 198, 250, 303, 311, 437, 476, 477, 486, 487, 502, 504, 506, 533, 549, 569, 606, 669, 675, 678, 724, 757, 758, 768, 774, 780, 782, 813, 829, 847, 854, 866, 869, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 909, 912, 921, 929, 932, 933, 934, 940, 941, 953, 954, 958, 971, 973, 983, 985, 1007, 1013, 1014, 1026, 1051, 1068, 1107, 1111, 1116, 1121, 1125, 1126, 1131, 1134, 1135, 1136, 1148, 1170, 1184, 1185, 1187, 1188, 1191, 1195, 1196, 1198, 1207, 1208, 1209, 1211, 1212, 1216, 1217, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1265, 1266, 1267, 1268, 1276, 1282, 1285, 1290, 1296, 1297, 1300, 1319, 1324, 1325, 1326, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1372, 1373, 1376, 1379, 1381, 1382, 1384, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1443, 1444, 1456, 1457, 1460, 1461, 1462, 1463, 1465, 1468, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1493, 1495, 1496, 1497, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1520, 1526, 1528, 1539, 1540, 1563, 1566, 1568, 1571, 1572, 1578, 1586, 1597, 1598, 1599, 1600, 1605, 1606, 1609, 1610, 1611, 1612, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1645, 1650, 1654, 1655, 1656, 1657, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1699, 1701, 1708, 1711, 1712, 1734, 1740, 1747, 1752, 1755, 1762, 1780, 1786, 1790, 1792, 1793, 1794, 1798, 1804, 1809, 1813, 1822, 1827, 1829, 1834, 1838, 1840, 1845, 1848, 1849, 1859, 1862, 1866, 1867, 1868, 1870, 1877, 1879, 1881, 1883, 1884, 1885, 1889, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1914, 1915, 1916, 1917, 1922, 1923, 1924, 1925, 1928, 1930, 1931, 1932, 1933, 1934, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1952, 1954, 1955, 1956, 1958], "enter": [0, 24, 883, 1170, 1896], "tensor": [0, 2, 5, 7, 8, 12, 14, 17, 18, 21, 22, 24, 25, 26, 28, 30, 31, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 78, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 709, 721, 723, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 739, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 773, 774, 775, 776, 777, 778, 779, 783, 787, 788, 789, 790, 791, 808, 809, 810, 811, 813, 814, 816, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 902, 903, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 968, 981, 982, 983, 984, 985, 992, 1000, 1001, 1007, 1011, 1014, 1017, 1021, 1032, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1177, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1198, 1199, 1201, 1202, 1203, 1206, 1207, 1209, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1308, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1337, 1341, 1342, 1345, 1346, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1381, 1382, 1383, 1389, 1395, 1396, 1399, 1400, 1416, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1444, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1461, 1462, 1463, 1464, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1605, 1606, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1822, 1823, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1870, 1871, 1875, 1878, 1887, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1913, 1914, 1915, 1916, 1917, 1919, 1922, 1923, 1924, 1928, 1929, 1932, 1934, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1951, 1955, 1956, 1957, 1958], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 35, 39, 40, 41, 42, 44, 45, 46, 48, 53, 55, 56, 78, 140, 244, 488, 534, 606, 686, 747, 770, 781, 782, 783, 789, 799, 800, 801, 802, 804, 805, 806, 807, 812, 813, 815, 843, 854, 878, 879, 880, 882, 888, 890, 896, 897, 898, 917, 923, 927, 928, 953, 971, 1007, 1014, 1025, 1069, 1070, 1071, 1084, 1085, 1087, 1088, 1089, 1091, 1095, 1099, 1100, 1101, 1116, 1124, 1125, 1132, 1133, 1134, 1136, 1157, 1194, 1195, 1199, 1202, 1206, 1207, 1209, 1211, 1217, 1225, 1227, 1231, 1232, 1236, 1241, 1242, 1243, 1248, 1249, 1252, 1256, 1259, 1265, 1267, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1345, 1346, 1350, 1351, 1357, 1358, 1359, 1366, 1367, 1371, 1375, 1376, 1379, 1380, 1383, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1395, 1396, 1415, 1416, 1418, 1419, 1420, 1428, 1429, 1437, 1439, 1440, 1443, 1447, 1448, 1449, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1478, 1479, 1480, 1499, 1503, 1504, 1505, 1545, 1564, 1565, 1578, 1600, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1633, 1643, 1644, 1646, 1649, 1651, 1656, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1687, 1727, 1743, 1758, 1760, 1813, 1859, 1866, 1868, 1869, 1870, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1929, 1932, 1934, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1948, 1949, 1951, 1954, 1955, 1956, 1957, 1958], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 20, 21, 22, 24, 28, 29, 30, 32, 33, 38, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 65, 66, 67, 72, 73, 140, 244, 325, 437, 477, 488, 669, 678, 723, 724, 737, 746, 770, 878, 879, 880, 881, 882, 887, 888, 890, 891, 892, 896, 923, 941, 969, 992, 1003, 1005, 1014, 1015, 1035, 1068, 1124, 1125, 1128, 1129, 1130, 1131, 1136, 1170, 1195, 1199, 1200, 1208, 1211, 1212, 1213, 1241, 1259, 1267, 1290, 1297, 1300, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1399, 1425, 1426, 1427, 1429, 1434, 1435, 1436, 1444, 1463, 1472, 1474, 1476, 1481, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1539, 1545, 1578, 1596, 1597, 1600, 1609, 1617, 1643, 1651, 1653, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1693, 1711, 1734, 1743, 1751, 1795, 1796, 1797, 1799, 1800, 1804, 1849, 1851, 1859, 1866, 1868, 1870, 1871, 1873, 1875, 1878, 1879, 1881, 1883, 1884, 1886, 1889, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1933, 1934, 1935, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1958], "should": [0, 1, 3, 4, 5, 9, 14, 15, 18, 21, 22, 24, 25, 26, 28, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 45, 46, 48, 52, 53, 55, 56, 57, 62, 63, 65, 74, 109, 140, 144, 303, 311, 388, 392, 434, 435, 436, 437, 438, 476, 477, 485, 502, 504, 506, 572, 573, 574, 576, 577, 675, 678, 679, 724, 749, 761, 762, 763, 782, 785, 789, 806, 813, 827, 828, 843, 844, 845, 848, 854, 878, 879, 880, 881, 882, 886, 887, 888, 889, 890, 891, 892, 896, 902, 903, 909, 910, 911, 912, 919, 932, 946, 960, 971, 974, 984, 985, 1003, 1005, 1014, 1059, 1069, 1070, 1071, 1081, 1086, 1089, 1090, 1091, 1099, 1100, 1101, 1104, 1119, 1121, 1122, 1123, 1125, 1126, 1130, 1134, 1135, 1136, 1152, 1153, 1156, 1157, 1192, 1193, 1195, 1196, 1200, 1205, 1207, 1208, 1211, 1212, 1213, 1215, 1240, 1265, 1266, 1267, 1273, 1282, 1285, 1286, 1287, 1307, 1337, 1345, 1346, 1350, 1363, 1365, 1366, 1368, 1369, 1370, 1373, 1374, 1395, 1399, 1421, 1429, 1435, 1436, 1437, 1456, 1477, 1481, 1493, 1499, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1520, 1528, 1578, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1642, 1643, 1644, 1647, 1649, 1660, 1661, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1711, 1713, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1734, 1750, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1795, 1796, 1797, 1798, 1799, 1800, 1813, 1827, 1836, 1851, 1859, 1864, 1865, 1866, 1867, 1868, 1870, 1871, 1875, 1877, 1878, 1880, 1881, 1883, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1902, 1904, 1905, 1906, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1925, 1927, 1931, 1932, 1934, 1940, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1954, 1955, 1956, 1957], "call": [0, 1, 2, 3, 8, 11, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 41, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 65, 70, 76, 140, 280, 313, 325, 447, 475, 476, 477, 545, 569, 603, 606, 669, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 770, 779, 786, 813, 846, 850, 851, 882, 886, 887, 888, 889, 890, 892, 893, 896, 902, 903, 924, 941, 946, 948, 969, 972, 974, 1003, 1005, 1015, 1016, 1025, 1032, 1033, 1035, 1036, 1066, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1124, 1125, 1136, 1140, 1158, 1170, 1180, 1192, 1195, 1198, 1200, 1206, 1207, 1208, 1215, 1251, 1259, 1263, 1265, 1267, 1268, 1297, 1341, 1347, 1348, 1349, 1366, 1367, 1368, 1369, 1370, 1372, 1374, 1376, 1414, 1425, 1426, 1427, 1429, 1436, 1437, 1457, 1468, 1480, 1506, 1507, 1508, 1514, 1515, 1516, 1521, 1539, 1578, 1597, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1618, 1621, 1628, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1644, 1650, 1651, 1653, 1654, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1724, 1751, 1758, 1759, 1788, 1807, 1808, 1809, 1829, 1845, 1848, 1849, 1851, 1854, 1855, 1859, 1860, 1866, 1868, 1872, 1875, 1881, 1883, 1885, 1886, 1887, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1938, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1955, 1956, 1957, 1958, 1959], "model": [0, 1, 2, 3, 4, 5, 8, 9, 12, 22, 24, 25, 26, 28, 29, 30, 40, 42, 44, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 72, 73, 781, 782, 783, 786, 787, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 813, 814, 815, 825, 826, 827, 828, 843, 846, 847, 848, 849, 850, 851, 852, 941, 1015, 1035, 1124, 1125, 1126, 1134, 1136, 1170, 1195, 1199, 1200, 1205, 1207, 1211, 1213, 1267, 1337, 1366, 1383, 1394, 1395, 1429, 1435, 1457, 1468, 1472, 1474, 1475, 1476, 1527, 1609, 1610, 1615, 1617, 1619, 1632, 1651, 1652, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1687, 1693, 1695, 1809, 1859, 1867, 1868, 1870, 1871, 1872, 1879, 1880, 1886, 1891, 1893, 1894, 1895, 1896, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1912, 1917, 1919, 1923, 1924, 1926, 1927, 1928, 1932, 1936, 1937, 1940, 1941, 1942, 1945, 1946, 1947, 1949, 1952, 1954, 1956], "": [0, 1, 2, 3, 4, 7, 8, 9, 12, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 37, 38, 39, 41, 42, 45, 46, 48, 50, 52, 53, 55, 56, 70, 71, 76, 77, 452, 470, 482, 485, 502, 533, 547, 570, 613, 669, 678, 683, 684, 685, 724, 749, 782, 783, 784, 804, 805, 806, 809, 812, 815, 843, 850, 851, 864, 866, 867, 868, 869, 885, 886, 887, 891, 892, 894, 898, 925, 927, 940, 952, 953, 954, 955, 960, 967, 969, 971, 975, 990, 994, 1003, 1005, 1010, 1011, 1014, 1015, 1016, 1035, 1036, 1037, 1043, 1060, 1063, 1065, 1066, 1068, 1082, 1083, 1085, 1086, 1087, 1090, 1091, 1093, 1094, 1097, 1098, 1100, 1101, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1134, 1136, 1140, 1148, 1156, 1157, 1158, 1182, 1184, 1192, 1193, 1195, 1199, 1206, 1207, 1211, 1226, 1227, 1237, 1238, 1239, 1241, 1244, 1248, 1250, 1252, 1253, 1257, 1258, 1259, 1260, 1265, 1267, 1268, 1283, 1290, 1295, 1297, 1300, 1302, 1303, 1307, 1310, 1311, 1314, 1323, 1324, 1327, 1329, 1335, 1336, 1337, 1345, 1346, 1347, 1348, 1349, 1352, 1366, 1372, 1383, 1429, 1430, 1435, 1439, 1445, 1457, 1460, 1462, 1468, 1472, 1474, 1476, 1482, 1483, 1500, 1501, 1512, 1525, 1528, 1539, 1540, 1545, 1578, 1584, 1597, 1600, 1605, 1606, 1609, 1610, 1621, 1632, 1645, 1649, 1656, 1657, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1699, 1701, 1705, 1712, 1727, 1730, 1731, 1734, 1735, 1736, 1738, 1740, 1747, 1754, 1755, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 1807, 1808, 1809, 1812, 1813, 1814, 1815, 1816, 1824, 1828, 1830, 1836, 1851, 1854, 1855, 1856, 1859, 1860, 1866, 1868, 1869, 1870, 1871, 1872, 1875, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957], "wrap": [0, 1, 15, 21, 22, 24, 28, 29, 34, 43, 48, 52, 53, 56, 57, 250, 779, 780, 972, 1125, 1195, 1211, 1366, 1429, 1468, 1604, 1609, 1619, 1645, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1868, 1869, 1871, 1878, 1890, 1891, 1894, 1895, 1896, 1897, 1902, 1908, 1912, 1916, 1917, 1918, 1923, 1924, 1935, 1937, 1942, 1943, 1946, 1949, 1956, 1957], "forward": [0, 5, 7, 8, 12, 14, 22, 24, 25, 28, 29, 30, 45, 46, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 140, 211, 212, 669, 724, 737, 746, 749, 789, 804, 805, 806, 809, 813, 850, 851, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 896, 897, 952, 1014, 1060, 1072, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1125, 1127, 1128, 1129, 1131, 1134, 1170, 1195, 1198, 1199, 1200, 1202, 1206, 1207, 1211, 1212, 1213, 1341, 1345, 1347, 1348, 1349, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1381, 1399, 1414, 1425, 1426, 1427, 1429, 1430, 1431, 1435, 1436, 1439, 1440, 1444, 1445, 1457, 1472, 1473, 1474, 1475, 1476, 1514, 1515, 1516, 1521, 1566, 1600, 1603, 1604, 1605, 1606, 1609, 1619, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639, 1650, 1653, 1654, 1718, 1757, 1786, 1848, 1867, 1868, 1870, 1871, 1877, 1879, 1883, 1885, 1889, 1890, 1891, 1893, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1905, 1907, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1923, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1946, 1949, 1950, 1951, 1952, 1954, 1955, 1956], "pass": [0, 1, 3, 5, 6, 7, 14, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 52, 53, 55, 56, 57, 64, 65, 69, 76, 140, 244, 437, 477, 502, 504, 506, 533, 549, 782, 783, 812, 815, 848, 850, 869, 878, 879, 880, 881, 882, 888, 896, 925, 941, 947, 969, 1003, 1014, 1058, 1089, 1090, 1091, 1099, 1100, 1101, 1107, 1121, 1124, 1125, 1129, 1130, 1131, 1134, 1135, 1157, 1193, 1195, 1196, 1199, 1201, 1205, 1207, 1211, 1212, 1240, 1256, 1258, 1267, 1314, 1337, 1338, 1339, 1340, 1347, 1348, 1349, 1366, 1372, 1373, 1377, 1378, 1429, 1434, 1435, 1457, 1473, 1474, 1475, 1476, 1481, 1493, 1523, 1524, 1528, 1539, 1540, 1566, 1578, 1600, 1603, 1604, 1605, 1606, 1609, 1619, 1621, 1623, 1628, 1642, 1645, 1649, 1651, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1743, 1747, 1751, 1813, 1866, 1868, 1872, 1875, 1879, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1895, 1896, 1897, 1899, 1901, 1902, 1905, 1910, 1912, 1914, 1915, 1916, 1923, 1925, 1927, 1928, 1930, 1932, 1933, 1934, 1937, 1938, 1942, 1943, 1944, 1945, 1946, 1949, 1953, 1956, 1957], "e": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 44, 45, 46, 48, 51, 53, 55, 56, 57, 64, 65, 140, 248, 325, 367, 569, 606, 724, 737, 746, 749, 782, 783, 804, 806, 843, 847, 848, 850, 851, 869, 878, 882, 887, 897, 898, 920, 922, 925, 952, 1000, 1014, 1039, 1068, 1078, 1119, 1125, 1130, 1134, 1145, 1170, 1174, 1175, 1177, 1180, 1192, 1195, 1202, 1203, 1211, 1231, 1232, 1247, 1259, 1267, 1268, 1269, 1271, 1273, 1290, 1301, 1345, 1346, 1347, 1348, 1349, 1352, 1357, 1358, 1359, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1381, 1384, 1389, 1392, 1393, 1394, 1395, 1396, 1399, 1401, 1402, 1403, 1404, 1420, 1429, 1430, 1435, 1436, 1438, 1439, 1443, 1444, 1460, 1468, 1472, 1476, 1477, 1478, 1480, 1503, 1504, 1505, 1512, 1514, 1515, 1516, 1519, 1520, 1521, 1528, 1539, 1571, 1578, 1597, 1599, 1600, 1605, 1609, 1610, 1611, 1612, 1617, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1642, 1643, 1649, 1653, 1656, 1668, 1669, 1704, 1715, 1733, 1740, 1747, 1751, 1755, 1758, 1763, 1798, 1809, 1813, 1866, 1868, 1870, 1871, 1872, 1875, 1878, 1879, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1900, 1901, 1902, 1905, 1907, 1910, 1912, 1914, 1915, 1917, 1918, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1934, 1941, 1944, 1945, 1946, 1949, 1954, 1956, 1957, 1959], "network": [0, 1, 7, 8, 15, 28, 30, 41, 830, 1014, 1195, 1211, 1212, 1341, 1347, 1348, 1349, 1352, 1360, 1361, 1362, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1383, 1395, 1399, 1429, 1436, 1441, 1442, 1447, 1456, 1458, 1468, 1472, 1474, 1476, 1493, 1527, 1528, 1581, 1600, 1617, 1619, 1645, 1650, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1687, 1693, 1868, 1870, 1871, 1889, 1890, 1896, 1905, 1906, 1909, 1912, 1914, 1918, 1923, 1924, 1925, 1944], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 14, 15, 21, 22, 24, 26, 38, 41, 42, 45, 46, 48, 56, 71, 73, 311, 477, 506, 572, 757, 758, 848, 850, 943, 1096, 1098, 1156, 1193, 1195, 1196, 1225, 1304, 1305, 1342, 1343, 1344, 1350, 1352, 1366, 1375, 1383, 1416, 1425, 1426, 1427, 1429, 1435, 1472, 1473, 1474, 1475, 1476, 1479, 1495, 1496, 1497, 1512, 1525, 1545, 1609, 1643, 1644, 1646, 1776, 1837, 1838, 1839, 1840, 1866, 1868, 1870, 1871, 1878, 1879, 1881, 1883, 1891, 1893, 1894, 1898, 1901, 1902, 1907, 1909, 1912, 1917, 1918, 1923, 1925, 1932, 1935, 1938, 1940, 1942, 1943, 1945, 1946, 1947, 1952, 1953, 1954, 1956, 1957, 1958], "loss": [0, 1, 22, 24, 25, 28, 30, 48, 1126, 1192, 1231, 1232, 1241, 1259, 1337, 1345, 1346, 1352, 1363, 1365, 1372, 1383, 1389, 1390, 1395, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1478, 1500, 1501, 1511, 1512, 1525, 1540, 1563, 1571, 1609, 1643, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1686, 1695, 1755, 1866, 1867, 1881, 1885, 1891, 1894, 1895, 1898, 1899, 1902, 1914, 1918, 1919, 1923, 1924, 1932], "comput": [0, 3, 5, 7, 8, 11, 14, 17, 21, 22, 24, 26, 30, 32, 34, 45, 46, 48, 49, 50, 52, 140, 280, 476, 484, 670, 672, 686, 687, 749, 757, 758, 789, 791, 808, 809, 810, 811, 813, 814, 878, 882, 883, 884, 886, 887, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 913, 914, 915, 916, 917, 918, 929, 931, 932, 933, 934, 940, 954, 956, 968, 1011, 1014, 1051, 1060, 1062, 1065, 1068, 1072, 1073, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1111, 1113, 1114, 1115, 1117, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1138, 1139, 1140, 1148, 1151, 1154, 1155, 1156, 1157, 1170, 1172, 1195, 1198, 1207, 1215, 1216, 1218, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1268, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1294, 1295, 1296, 1299, 1324, 1326, 1330, 1337, 1341, 1342, 1343, 1344, 1347, 1348, 1349, 1360, 1361, 1362, 1364, 1365, 1367, 1372, 1373, 1381, 1384, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1435, 1436, 1438, 1443, 1444, 1462, 1464, 1468, 1477, 1478, 1481, 1495, 1496, 1497, 1510, 1511, 1519, 1520, 1527, 1528, 1530, 1539, 1547, 1552, 1553, 1554, 1555, 1556, 1557, 1568, 1571, 1578, 1584, 1585, 1600, 1603, 1605, 1606, 1609, 1610, 1613, 1616, 1619, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1635, 1636, 1643, 1649, 1653, 1654, 1656, 1666, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1705, 1711, 1712, 1716, 1717, 1731, 1732, 1755, 1757, 1763, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1786, 1789, 1790, 1791, 1792, 1809, 1813, 1814, 1829, 1834, 1856, 1859, 1867, 1868, 1871, 1878, 1881, 1884, 1885, 1887, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1909, 1910, 1912, 1914, 1918, 1921, 1923, 1927, 1928, 1933, 1936, 1940, 1941, 1943, 1944, 1945, 1946, 1948, 1955, 1958], "backward": [0, 1, 5, 9, 24, 25, 26, 28, 30, 45, 48, 52, 53, 56, 57, 280, 325, 476, 477, 485, 492, 493, 502, 504, 506, 570, 669, 675, 678, 749, 804, 805, 806, 879, 884, 885, 886, 887, 888, 889, 891, 893, 896, 897, 902, 903, 909, 921, 1014, 1072, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1124, 1125, 1195, 1268, 1276, 1290, 1300, 1345, 1346, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1372, 1381, 1382, 1383, 1396, 1399, 1400, 1416, 1420, 1421, 1429, 1435, 1436, 1443, 1444, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1500, 1501, 1511, 1512, 1528, 1539, 1563, 1566, 1601, 1605, 1606, 1609, 1621, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1699, 1711, 1786, 1790, 1794, 1813, 1848, 1866, 1867, 1869, 1871, 1877, 1885, 1886, 1889, 1890, 1895, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1910, 1914, 1915, 1917, 1918, 1923, 1927, 1928, 1933, 1938, 1941, 1942, 1946, 1950, 1952, 1954, 1955, 1956], "under": [0, 1, 3, 4, 5, 9, 21, 24, 41, 45, 48, 49, 51, 53, 55, 71, 897, 905, 926, 1170, 1195, 1352, 1429, 1493, 1519, 1520, 1616, 1618, 1621, 1663, 1732, 1883, 1890, 1891, 1894, 1895, 1897, 1899, 1904, 1910, 1915, 1916, 1918, 1921, 1922, 1925, 1928, 1932, 1935, 1937, 1943, 1944, 1945, 1949, 1951, 1954, 1956], "recommend": [0, 1, 5, 21, 22, 24, 26, 29, 30, 32, 41, 42, 48, 52, 55, 56, 57, 74, 75, 77, 437, 882, 948, 953, 954, 1089, 1090, 1091, 1099, 1100, 1101, 1182, 1198, 1241, 1268, 1314, 1337, 1366, 1540, 1609, 1718, 1845, 1849, 1866, 1868, 1880, 1883, 1885, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1902, 1904, 1905, 1907, 1910, 1912, 1915, 1918, 1947], "same": [0, 1, 3, 7, 12, 14, 15, 17, 18, 21, 22, 24, 25, 26, 28, 30, 32, 38, 39, 41, 42, 43, 44, 45, 46, 48, 51, 53, 55, 56, 57, 64, 65, 129, 143, 185, 211, 245, 301, 303, 305, 309, 311, 329, 434, 435, 436, 437, 438, 460, 472, 486, 487, 489, 502, 504, 506, 509, 533, 569, 606, 607, 675, 678, 682, 684, 685, 686, 688, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 747, 750, 751, 752, 753, 754, 768, 774, 777, 778, 782, 783, 785, 789, 791, 803, 808, 811, 813, 814, 848, 850, 867, 868, 869, 881, 884, 887, 890, 891, 892, 893, 894, 895, 897, 898, 909, 911, 912, 921, 923, 925, 928, 933, 934, 935, 941, 944, 949, 952, 968, 969, 971, 982, 984, 1003, 1014, 1051, 1056, 1058, 1059, 1065, 1068, 1070, 1071, 1074, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1116, 1120, 1121, 1123, 1124, 1125, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1137, 1140, 1148, 1156, 1157, 1165, 1169, 1186, 1192, 1195, 1201, 1206, 1207, 1211, 1212, 1216, 1217, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1263, 1283, 1287, 1289, 1290, 1293, 1295, 1296, 1297, 1298, 1301, 1324, 1327, 1328, 1329, 1335, 1336, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1376, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1401, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1432, 1433, 1434, 1435, 1437, 1438, 1443, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1480, 1481, 1484, 1485, 1486, 1493, 1499, 1500, 1501, 1503, 1504, 1505, 1511, 1520, 1528, 1530, 1539, 1540, 1578, 1597, 1609, 1616, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1642, 1646, 1651, 1656, 1657, 1661, 1664, 1699, 1704, 1705, 1708, 1709, 1721, 1723, 1725, 1729, 1731, 1733, 1734, 1738, 1740, 1747, 1750, 1755, 1763, 1786, 1795, 1796, 1797, 1799, 1800, 1806, 1807, 1808, 1812, 1813, 1823, 1834, 1845, 1846, 1847, 1848, 1854, 1855, 1856, 1859, 1865, 1866, 1868, 1870, 1871, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1907, 1910, 1912, 1914, 1915, 1916, 1918, 1921, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1940, 1941, 1942, 1944, 1945, 1946, 1949, 1952, 1954, 1955, 1956, 1957], "correspond": [0, 1, 7, 18, 21, 22, 24, 26, 28, 29, 30, 41, 45, 48, 56, 72, 462, 463, 502, 504, 506, 533, 534, 669, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 724, 782, 786, 825, 827, 846, 847, 848, 853, 869, 878, 880, 881, 882, 887, 890, 892, 897, 955, 1014, 1034, 1063, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1148, 1157, 1184, 1195, 1212, 1226, 1231, 1232, 1237, 1240, 1259, 1266, 1268, 1282, 1297, 1319, 1366, 1372, 1399, 1429, 1435, 1475, 1519, 1528, 1565, 1605, 1609, 1617, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1650, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1687, 1704, 1705, 1715, 1738, 1747, 1763, 1798, 1807, 1808, 1813, 1844, 1847, 1854, 1855, 1866, 1868, 1869, 1871, 1875, 1881, 1884, 1885, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1906, 1910, 1912, 1915, 1917, 1918, 1923, 1924, 1927, 1928, 1929, 1932, 1934, 1936, 1937, 1947, 1953, 1954, 1956], "devic": [0, 1, 2, 5, 8, 14, 16, 18, 21, 22, 24, 25, 26, 29, 42, 43, 45, 46, 48, 52, 55, 56, 57, 62, 65, 66, 67, 78, 186, 196, 199, 279, 303, 311, 325, 434, 435, 436, 437, 438, 504, 506, 569, 675, 678, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 741, 742, 743, 744, 854, 866, 868, 869, 890, 892, 909, 910, 912, 919, 921, 961, 962, 963, 964, 965, 966, 967, 970, 971, 972, 974, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 987, 988, 989, 992, 996, 997, 998, 1000, 1001, 1009, 1011, 1012, 1013, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1069, 1070, 1071, 1081, 1086, 1104, 1122, 1123, 1152, 1153, 1195, 1199, 1203, 1206, 1209, 1215, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1250, 1253, 1254, 1256, 1257, 1259, 1260, 1266, 1267, 1282, 1285, 1290, 1296, 1300, 1307, 1314, 1316, 1337, 1347, 1348, 1349, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1372, 1373, 1381, 1382, 1384, 1392, 1393, 1394, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1429, 1435, 1437, 1444, 1445, 1446, 1468, 1472, 1474, 1476, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1520, 1539, 1545, 1578, 1593, 1597, 1598, 1599, 1600, 1609, 1611, 1612, 1613, 1614, 1642, 1649, 1655, 1657, 1660, 1661, 1671, 1711, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1751, 1755, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1813, 1827, 1829, 1838, 1840, 1848, 1849, 1851, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1873, 1879, 1884, 1886, 1890, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1906, 1907, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1922, 1923, 1927, 1929, 1933, 1934, 1941, 1943, 1945, 1946, 1948, 1951, 1953, 1954, 1956, 1958], "creat": [0, 1, 3, 5, 6, 7, 9, 14, 21, 22, 24, 26, 28, 30, 32, 33, 39, 41, 42, 43, 44, 45, 46, 48, 55, 56, 57, 74, 75, 77, 78, 140, 212, 244, 325, 569, 570, 572, 573, 574, 576, 577, 669, 721, 727, 728, 729, 734, 735, 745, 753, 781, 782, 783, 803, 804, 805, 806, 808, 813, 843, 867, 868, 869, 882, 884, 896, 920, 922, 933, 934, 938, 939, 941, 955, 970, 979, 1011, 1012, 1021, 1056, 1071, 1120, 1121, 1122, 1192, 1195, 1198, 1208, 1214, 1219, 1225, 1226, 1232, 1234, 1253, 1266, 1282, 1297, 1319, 1345, 1363, 1372, 1373, 1376, 1390, 1396, 1420, 1421, 1429, 1432, 1433, 1434, 1457, 1460, 1461, 1468, 1477, 1478, 1480, 1609, 1621, 1642, 1649, 1654, 1662, 1663, 1682, 1750, 1781, 1793, 1798, 1827, 1834, 1867, 1871, 1872, 1875, 1879, 1883, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1902, 1903, 1904, 1907, 1910, 1912, 1914, 1915, 1917, 1918, 1923, 1924, 1925, 1927, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1955, 1956, 1958, 1959], "optim": [0, 1, 2, 7, 8, 11, 14, 15, 22, 24, 25, 26, 30, 46, 48, 56, 808, 897, 906, 941, 944, 1068, 1134, 1195, 1199, 1205, 1207, 1211, 1212, 1251, 1268, 1347, 1348, 1349, 1365, 1372, 1392, 1393, 1394, 1429, 1432, 1433, 1434, 1435, 1461, 1468, 1476, 1578, 1600, 1609, 1616, 1621, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1701, 1867, 1868, 1870, 1879, 1885, 1889, 1893, 1894, 1895, 1896, 1898, 1899, 1902, 1904, 1912, 1917, 1918, 1927, 1938, 1940, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1956], "default": [0, 2, 3, 5, 9, 11, 12, 14, 18, 24, 25, 26, 28, 29, 30, 32, 33, 38, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 54, 56, 57, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 140, 145, 160, 162, 165, 168, 169, 170, 185, 196, 199, 230, 257, 280, 287, 315, 321, 383, 434, 435, 436, 437, 438, 447, 485, 488, 489, 509, 514, 569, 570, 572, 669, 683, 686, 701, 702, 703, 704, 705, 706, 709, 719, 720, 721, 722, 724, 744, 747, 749, 757, 758, 759, 761, 762, 763, 768, 774, 782, 787, 792, 797, 798, 803, 806, 808, 809, 810, 811, 814, 817, 818, 819, 820, 821, 822, 823, 824, 830, 831, 832, 833, 834, 835, 837, 838, 843, 844, 845, 847, 854, 868, 869, 882, 883, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 910, 919, 925, 929, 932, 933, 934, 938, 941, 960, 968, 971, 974, 976, 980, 983, 984, 985, 988, 989, 996, 997, 1000, 1011, 1013, 1014, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1038, 1039, 1042, 1044, 1045, 1046, 1049, 1050, 1051, 1056, 1057, 1058, 1059, 1060, 1063, 1068, 1069, 1070, 1071, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1135, 1136, 1140, 1142, 1148, 1152, 1153, 1156, 1157, 1184, 1186, 1192, 1195, 1196, 1199, 1207, 1211, 1212, 1215, 1216, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1282, 1285, 1287, 1293, 1295, 1296, 1297, 1301, 1307, 1323, 1324, 1326, 1327, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1443, 1444, 1446, 1447, 1448, 1449, 1456, 1460, 1461, 1465, 1466, 1468, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1525, 1527, 1528, 1530, 1532, 1539, 1540, 1547, 1552, 1553, 1554, 1563, 1564, 1566, 1571, 1578, 1584, 1585, 1593, 1597, 1603, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1643, 1644, 1646, 1648, 1649, 1650, 1651, 1653, 1655, 1656, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1709, 1711, 1712, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1733, 1739, 1740, 1743, 1747, 1751, 1752, 1753, 1754, 1755, 1760, 1762, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1807, 1808, 1809, 1812, 1813, 1814, 1827, 1828, 1834, 1836, 1838, 1840, 1845, 1846, 1848, 1849, 1851, 1853, 1854, 1855, 1859, 1864, 1865, 1866, 1867, 1868, 1871, 1875, 1877, 1879, 1880, 1883, 1886, 1889, 1890, 1893, 1895, 1896, 1897, 1898, 1900, 1902, 1905, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1922, 1923, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1938, 1942, 1944, 1945, 1946, 1950, 1952, 1953, 1955, 1956, 1958, 1959], "net": [0, 6, 15, 32, 51, 56, 1195, 1211, 1212, 1366, 1429, 1609, 1632, 1686, 1870, 1871, 1890, 1891, 1894, 1902, 1932], "sgd": [0, 21, 22, 28, 477, 1372, 1600, 1609, 1687, 1693, 1695, 1890, 1894, 1895, 1902, 1904, 1914, 1923, 1924], "paramet": [0, 1, 2, 3, 5, 11, 12, 14, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 35, 39, 41, 43, 45, 46, 48, 50, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 140, 145, 160, 162, 165, 168, 169, 170, 185, 186, 196, 199, 223, 230, 244, 245, 250, 257, 287, 303, 305, 307, 309, 311, 315, 321, 383, 390, 392, 434, 435, 436, 437, 438, 447, 460, 482, 485, 486, 487, 488, 489, 502, 504, 506, 509, 514, 526, 533, 534, 535, 549, 555, 572, 573, 574, 576, 577, 592, 593, 596, 606, 607, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 739, 744, 745, 747, 748, 749, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 780, 782, 784, 786, 788, 789, 790, 803, 808, 809, 810, 811, 812, 813, 814, 815, 816, 827, 828, 829, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 904, 905, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 943, 944, 946, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 963, 967, 968, 969, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 983, 984, 985, 988, 989, 990, 992, 996, 997, 998, 1000, 1003, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1172, 1174, 1175, 1177, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1202, 1203, 1206, 1207, 1208, 1209, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1303, 1307, 1309, 1310, 1311, 1314, 1315, 1317, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1530, 1532, 1539, 1540, 1547, 1552, 1553, 1554, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1578, 1584, 1585, 1593, 1597, 1598, 1599, 1600, 1603, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1781, 1783, 1785, 1786, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1813, 1817, 1818, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1868, 1871, 1873, 1875, 1879, 1880, 1883, 1885, 1886, 1887, 1889, 1890, 1891, 1894, 1895, 1896, 1900, 1901, 1902, 1904, 1906, 1907, 1910, 1912, 1915, 1916, 1917, 1918, 1922, 1923, 1924, 1927, 1928, 1929, 1932, 1934, 1936, 1937, 1946, 1955, 1957, 1958], "target": [0, 14, 28, 45, 46, 48, 52, 54, 55, 56, 57, 70, 488, 724, 755, 756, 781, 786, 848, 850, 851, 926, 1126, 1195, 1205, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1345, 1346, 1352, 1363, 1365, 1377, 1378, 1383, 1389, 1390, 1395, 1396, 1420, 1421, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1443, 1460, 1461, 1472, 1481, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1500, 1501, 1509, 1511, 1512, 1523, 1524, 1525, 1536, 1537, 1540, 1541, 1551, 1559, 1560, 1561, 1562, 1563, 1571, 1578, 1582, 1583, 1609, 1681, 1848, 1869, 1871, 1890, 1891, 1894, 1904, 1910, 1912, 1914, 1915, 1918, 1919, 1923, 1932, 1936, 1942, 1943, 1944, 1949, 1955, 1956], "data": [0, 1, 2, 3, 7, 11, 12, 18, 19, 22, 24, 26, 28, 29, 30, 31, 32, 35, 38, 41, 43, 46, 48, 52, 56, 57, 58, 62, 65, 129, 140, 185, 186, 316, 319, 323, 326, 331, 434, 437, 470, 482, 486, 488, 606, 727, 728, 729, 749, 761, 762, 763, 770, 781, 782, 783, 787, 808, 809, 810, 811, 812, 814, 816, 854, 868, 869, 879, 882, 910, 919, 925, 972, 1049, 1050, 1069, 1070, 1071, 1081, 1082, 1083, 1086, 1088, 1089, 1091, 1099, 1100, 1101, 1104, 1107, 1108, 1109, 1110, 1119, 1121, 1122, 1123, 1125, 1134, 1152, 1153, 1155, 1174, 1177, 1203, 1207, 1211, 1215, 1266, 1267, 1268, 1282, 1287, 1295, 1297, 1310, 1311, 1324, 1326, 1327, 1350, 1352, 1357, 1358, 1359, 1366, 1381, 1384, 1392, 1393, 1394, 1399, 1401, 1416, 1436, 1444, 1445, 1481, 1493, 1498, 1499, 1503, 1504, 1505, 1538, 1545, 1547, 1584, 1585, 1609, 1610, 1611, 1612, 1642, 1643, 1644, 1645, 1647, 1656, 1660, 1661, 1662, 1663, 1687, 1693, 1701, 1709, 1712, 1713, 1714, 1718, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1734, 1747, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1789, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1812, 1813, 1827, 1836, 1838, 1840, 1847, 1848, 1849, 1864, 1865, 1867, 1868, 1869, 1872, 1878, 1879, 1881, 1883, 1886, 1890, 1891, 1892, 1894, 1896, 1897, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1913, 1914, 1915, 1916, 1918, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1940, 1944, 1945, 1946, 1948, 1949, 1954, 1958], "zero_grad": [0, 1, 28, 1195, 1429, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1686, 1890, 1894, 1898, 1902, 1904, 1914], "output": [0, 1, 4, 5, 7, 12, 18, 21, 22, 24, 28, 29, 30, 32, 38, 39, 45, 52, 53, 54, 56, 57, 65, 70, 129, 303, 311, 434, 435, 436, 438, 502, 506, 555, 606, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 709, 717, 718, 723, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 761, 762, 763, 764, 766, 768, 769, 770, 771, 772, 774, 775, 776, 781, 782, 783, 785, 788, 791, 803, 806, 847, 850, 851, 852, 854, 863, 864, 867, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 909, 911, 912, 913, 914, 915, 916, 917, 918, 921, 925, 928, 929, 930, 931, 932, 933, 934, 936, 939, 952, 954, 955, 957, 958, 968, 981, 983, 984, 985, 1011, 1012, 1014, 1024, 1025, 1047, 1048, 1049, 1050, 1052, 1055, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1073, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1122, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1148, 1151, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1169, 1172, 1189, 1190, 1192, 1195, 1199, 1207, 1211, 1212, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1317, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1519, 1520, 1522, 1523, 1524, 1525, 1528, 1530, 1539, 1540, 1545, 1547, 1552, 1553, 1554, 1563, 1564, 1568, 1569, 1570, 1571, 1578, 1593, 1597, 1598, 1599, 1603, 1605, 1606, 1609, 1617, 1618, 1619, 1622, 1643, 1645, 1646, 1650, 1653, 1655, 1656, 1657, 1660, 1661, 1663, 1664, 1682, 1686, 1699, 1700, 1708, 1709, 1712, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731, 1732, 1733, 1735, 1736, 1740, 1742, 1747, 1755, 1760, 1763, 1765, 1777, 1778, 1780, 1785, 1790, 1791, 1793, 1794, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1813, 1824, 1825, 1826, 1831, 1834, 1836, 1837, 1839, 1842, 1844, 1845, 1846, 1848, 1853, 1854, 1855, 1856, 1859, 1861, 1862, 1864, 1865, 1866, 1868, 1869, 1871, 1877, 1879, 1884, 1885, 1886, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1902, 1905, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1920, 1924, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1955, 1956], "loss_fn": [0, 28, 1681, 1890, 1894, 1895, 1904, 1914], "exit": [0, 1, 2, 4, 18, 24, 32, 41, 48, 55, 56, 883, 1609, 1871, 1883, 1891, 1896, 1904, 1912, 1925, 1949], "befor": [0, 1, 3, 6, 7, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 33, 38, 40, 41, 42, 43, 45, 46, 48, 56, 87, 140, 736, 749, 777, 778, 779, 882, 886, 888, 939, 948, 971, 1049, 1050, 1051, 1060, 1068, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1109, 1110, 1113, 1121, 1124, 1195, 1207, 1209, 1232, 1248, 1252, 1265, 1295, 1307, 1324, 1327, 1366, 1372, 1373, 1376, 1381, 1429, 1430, 1431, 1468, 1472, 1480, 1528, 1547, 1584, 1585, 1600, 1603, 1604, 1605, 1606, 1609, 1617, 1650, 1653, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1695, 1709, 1712, 1738, 1747, 1758, 1759, 1789, 1792, 1795, 1796, 1797, 1799, 1800, 1809, 1812, 1834, 1845, 1868, 1870, 1871, 1883, 1890, 1891, 1894, 1895, 1896, 1899, 1901, 1902, 1905, 1907, 1908, 1909, 1910, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1928, 1932, 1934, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949], "step": [0, 1, 2, 4, 9, 14, 21, 22, 24, 25, 26, 28, 30, 42, 45, 48, 52, 56, 69, 527, 596, 675, 757, 758, 846, 854, 883, 884, 885, 912, 936, 1154, 1243, 1266, 1267, 1268, 1282, 1285, 1297, 1377, 1378, 1399, 1496, 1497, 1523, 1524, 1609, 1642, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1718, 1727, 1755, 1781, 1851, 1868, 1869, 1885, 1890, 1891, 1894, 1895, 1896, 1898, 1902, 1904, 1906, 1908, 1910, 1912, 1915, 1917, 1918, 1923, 1924, 1927, 1932, 1946, 1949, 1950, 1951, 1954, 1956], "usag": [0, 1, 4, 7, 9, 12, 15, 21, 24, 28, 30, 31, 32, 35, 38, 39, 41, 43, 48, 56, 57, 58, 737, 746, 781, 782, 783, 799, 800, 801, 802, 804, 805, 806, 843, 847, 879, 941, 1017, 1037, 1041, 1068, 1119, 1124, 1128, 1129, 1130, 1209, 1268, 1609, 1867, 1868, 1871, 1881, 1885, 1890, 1891, 1896, 1898, 1910, 1912, 1917, 1925, 1932, 1933, 1935, 1936, 1937, 1944, 1945, 1946, 1947, 1956], "along": [0, 14, 18, 21, 24, 30, 34, 41, 45, 57, 63, 303, 305, 307, 311, 482, 502, 504, 506, 675, 686, 808, 864, 865, 928, 935, 959, 968, 983, 985, 1051, 1059, 1060, 1067, 1068, 1084, 1089, 1092, 1096, 1099, 1102, 1108, 1136, 1137, 1160, 1169, 1172, 1217, 1228, 1264, 1317, 1324, 1328, 1329, 1338, 1339, 1340, 1346, 1364, 1377, 1378, 1419, 1422, 1423, 1424, 1462, 1464, 1493, 1501, 1510, 1523, 1524, 1527, 1530, 1547, 1552, 1553, 1554, 1564, 1584, 1585, 1627, 1629, 1636, 1637, 1646, 1655, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1693, 1712, 1732, 1733, 1738, 1749, 1785, 1789, 1792, 1793, 1801, 1806, 1824, 1828, 1831, 1834, 1843, 1856, 1859, 1861, 1866, 1870, 1875, 1886, 1892, 1896, 1898, 1901, 1902, 1910, 1915, 1918, 1928], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 17, 20, 21, 22, 24, 25, 30, 31, 32, 33, 37, 40, 41, 42, 43, 46, 48, 51, 52, 53, 54, 56, 71, 73, 75, 76, 140, 244, 245, 303, 311, 476, 477, 482, 484, 487, 502, 504, 506, 534, 607, 669, 724, 760, 769, 773, 782, 843, 848, 849, 850, 862, 875, 876, 877, 879, 881, 882, 888, 890, 892, 896, 897, 898, 902, 903, 912, 920, 923, 925, 931, 932, 933, 934, 941, 952, 971, 972, 974, 976, 977, 993, 1012, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1032, 1033, 1034, 1038, 1046, 1051, 1057, 1066, 1068, 1072, 1084, 1085, 1087, 1089, 1108, 1109, 1110, 1111, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1143, 1144, 1148, 1157, 1158, 1170, 1176, 1180, 1182, 1183, 1195, 1209, 1212, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1265, 1268, 1271, 1274, 1276, 1286, 1287, 1310, 1311, 1314, 1325, 1337, 1341, 1346, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1372, 1373, 1374, 1390, 1399, 1425, 1426, 1427, 1429, 1435, 1441, 1442, 1443, 1444, 1456, 1468, 1476, 1493, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1517, 1519, 1520, 1528, 1531, 1532, 1533, 1534, 1539, 1543, 1547, 1548, 1558, 1565, 1572, 1573, 1574, 1576, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1596, 1597, 1598, 1599, 1600, 1609, 1610, 1616, 1618, 1619, 1654, 1655, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1699, 1710, 1711, 1737, 1743, 1747, 1755, 1757, 1788, 1789, 1813, 1834, 1836, 1845, 1848, 1851, 1859, 1860, 1866, 1867, 1868, 1870, 1871, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1905, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1924, 1925, 1927, 1930, 1931, 1932, 1933, 1934, 1935, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1956, 1957, 1958, 1959], "complex": [0, 1, 3, 7, 8, 21, 22, 24, 56, 301, 319, 472, 488, 674, 681, 897, 898, 933, 934, 953, 954, 1063, 1069, 1070, 1071, 1089, 1111, 1116, 1148, 1165, 1174, 1185, 1187, 1188, 1191, 1192, 1195, 1216, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1245, 1248, 1250, 1252, 1253, 1254, 1255, 1259, 1260, 1264, 1265, 1266, 1268, 1276, 1282, 1294, 1299, 1318, 1357, 1358, 1359, 1396, 1429, 1503, 1504, 1505, 1616, 1656, 1705, 1718, 1731, 1752, 1763, 1809, 1810, 1813, 1848, 1856, 1857, 1858, 1866, 1867, 1869, 1871, 1872, 1880, 1904, 1910, 1913, 1929, 1930, 1933, 1934, 1946, 1947, 1948], "scenario": [0, 21, 24, 41, 1662, 1849, 1894, 1899, 1904, 1910, 1912, 1917, 1923, 1946, 1947], "g": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 44, 45, 48, 51, 53, 55, 56, 57, 64, 65, 569, 606, 737, 746, 749, 782, 783, 804, 806, 843, 848, 850, 851, 878, 887, 897, 898, 922, 952, 1014, 1068, 1119, 1125, 1129, 1130, 1145, 1148, 1170, 1192, 1195, 1202, 1203, 1211, 1267, 1352, 1353, 1366, 1368, 1369, 1370, 1374, 1376, 1381, 1389, 1395, 1399, 1400, 1429, 1430, 1439, 1444, 1460, 1512, 1514, 1515, 1516, 1521, 1528, 1609, 1610, 1611, 1612, 1653, 1656, 1666, 1667, 1668, 1669, 1672, 1678, 1679, 1680, 1681, 1733, 1740, 1751, 1755, 1758, 1776, 1798, 1809, 1866, 1868, 1870, 1871, 1872, 1875, 1878, 1883, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1905, 1906, 1910, 1912, 1914, 1915, 1917, 1918, 1923, 1927, 1930, 1931, 1932, 1942, 1944, 1945, 1946, 1954, 1956, 1957], "penalti": [0, 770, 1025, 1665, 1666, 1667, 1668, 1670, 1672, 1678, 1679, 1681, 1919], "multipl": [0, 1, 2, 3, 5, 21, 22, 24, 25, 26, 30, 31, 34, 41, 42, 43, 45, 48, 53, 55, 56, 69, 181, 198, 305, 502, 675, 677, 678, 684, 685, 749, 830, 863, 864, 867, 896, 929, 931, 941, 956, 960, 983, 984, 985, 1011, 1066, 1068, 1071, 1121, 1129, 1130, 1131, 1132, 1135, 1136, 1140, 1144, 1158, 1159, 1209, 1212, 1217, 1218, 1233, 1234, 1235, 1251, 1256, 1261, 1262, 1290, 1293, 1298, 1300, 1345, 1346, 1360, 1361, 1362, 1363, 1365, 1373, 1376, 1381, 1389, 1395, 1396, 1417, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1480, 1500, 1501, 1511, 1520, 1540, 1563, 1571, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1680, 1688, 1689, 1690, 1691, 1692, 1697, 1699, 1755, 1783, 1790, 1791, 1795, 1796, 1797, 1799, 1800, 1828, 1829, 1836, 1844, 1848, 1859, 1860, 1866, 1867, 1870, 1871, 1883, 1884, 1885, 1886, 1891, 1893, 1895, 1897, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1912, 1914, 1915, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1937, 1938, 1940, 1941, 1945, 1946, 1955], "custom": [0, 1, 3, 5, 14, 15, 21, 24, 25, 26, 27, 28, 34, 37, 38, 40, 45, 46, 48, 57, 59, 70, 72, 73, 74, 75, 77, 488, 782, 786, 803, 804, 805, 806, 827, 829, 848, 849, 850, 851, 888, 941, 943, 970, 979, 1043, 1195, 1429, 1472, 1476, 1477, 1478, 1623, 1632, 1649, 1687, 1849, 1851, 1867, 1872, 1875, 1877, 1883, 1884, 1891, 1901, 1906, 1907, 1908, 1910, 1921, 1922, 1936, 1938, 1945, 1947, 1949], "autograd": [0, 4, 5, 7, 8, 12, 24, 28, 30, 45, 48, 49, 52, 57, 129, 325, 434, 435, 436, 437, 438, 477, 485, 678, 854, 868, 869, 883, 910, 919, 938, 943, 952, 1014, 1069, 1070, 1071, 1081, 1086, 1104, 1121, 1122, 1123, 1124, 1125, 1134, 1136, 1152, 1153, 1170, 1195, 1215, 1235, 1266, 1282, 1290, 1300, 1383, 1429, 1435, 1476, 1530, 1545, 1609, 1660, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1759, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1787, 1795, 1796, 1797, 1798, 1799, 1800, 1827, 1859, 1864, 1865, 1867, 1869, 1873, 1878, 1886, 1889, 1894, 1895, 1898, 1899, 1901, 1902, 1917, 1933, 1934, 1938, 1946, 1947, 1952, 1956, 1957], "function": [0, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 25, 26, 28, 29, 31, 32, 34, 38, 39, 41, 42, 45, 46, 48, 51, 53, 55, 57, 59, 60, 64, 65, 68, 70, 71, 73, 74, 77, 78, 109, 140, 185, 250, 279, 288, 311, 476, 477, 482, 485, 506, 530, 545, 669, 678, 682, 683, 687, 688, 737, 746, 747, 749, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 782, 786, 787, 789, 803, 804, 805, 806, 813, 815, 827, 830, 843, 846, 848, 850, 851, 852, 866, 867, 882, 883, 884, 885, 896, 897, 898, 902, 903, 906, 910, 919, 921, 929, 931, 935, 938, 941, 943, 944, 945, 946, 948, 952, 953, 954, 963, 964, 965, 966, 967, 969, 970, 972, 974, 976, 979, 996, 997, 1000, 1005, 1006, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1024, 1025, 1032, 1033, 1035, 1036, 1037, 1041, 1051, 1056, 1058, 1059, 1066, 1068, 1072, 1084, 1085, 1087, 1107, 1111, 1114, 1115, 1116, 1119, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1140, 1141, 1148, 1152, 1153, 1154, 1156, 1158, 1166, 1167, 1168, 1170, 1182, 1192, 1193, 1194, 1195, 1196, 1198, 1200, 1201, 1202, 1206, 1207, 1208, 1209, 1211, 1213, 1215, 1216, 1217, 1219, 1224, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1247, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1271, 1273, 1282, 1285, 1286, 1290, 1293, 1296, 1298, 1300, 1301, 1302, 1321, 1324, 1325, 1341, 1345, 1351, 1352, 1354, 1355, 1356, 1363, 1367, 1371, 1374, 1379, 1380, 1381, 1382, 1383, 1385, 1386, 1387, 1388, 1389, 1395, 1397, 1398, 1399, 1400, 1415, 1418, 1419, 1421, 1428, 1429, 1434, 1435, 1437, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1474, 1476, 1477, 1478, 1480, 1482, 1484, 1485, 1486, 1601, 1605, 1606, 1609, 1616, 1617, 1621, 1632, 1642, 1643, 1644, 1646, 1649, 1650, 1651, 1653, 1654, 1656, 1657, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1683, 1686, 1687, 1689, 1692, 1693, 1694, 1699, 1700, 1701, 1705, 1711, 1718, 1722, 1727, 1740, 1749, 1750, 1751, 1754, 1757, 1763, 1771, 1775, 1776, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1792, 1798, 1805, 1809, 1815, 1816, 1824, 1828, 1830, 1834, 1844, 1845, 1846, 1848, 1849, 1856, 1857, 1858, 1859, 1860, 1865, 1866, 1867, 1872, 1875, 1877, 1880, 1881, 1883, 1885, 1889, 1892, 1894, 1895, 1896, 1898, 1901, 1902, 1904, 1905, 1910, 1914, 1915, 1916, 1917, 1918, 1920, 1922, 1923, 1924, 1925, 1930, 1932, 1934, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1951, 1952, 1953, 1955, 1956], "autocastmodel": 0, "nn": [0, 3, 5, 12, 15, 21, 22, 24, 25, 28, 29, 42, 45, 46, 48, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 288, 530, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 781, 782, 803, 843, 848, 849, 850, 851, 853, 1011, 1014, 1068, 1124, 1133, 1134, 1193, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1205, 1206, 1207, 1211, 1212, 1213, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1600, 1609, 1610, 1611, 1612, 1618, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1642, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1784, 1809, 1848, 1849, 1866, 1867, 1868, 1869, 1873, 1885, 1886, 1890, 1895, 1898, 1902, 1904, 1905, 1906, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1920, 1923, 1932, 1934, 1937, 1938, 1942, 1945, 1946, 1949, 1954, 1955, 1956], "modul": [0, 1, 3, 5, 6, 8, 11, 12, 14, 18, 22, 24, 26, 28, 29, 33, 35, 38, 41, 42, 45, 46, 48, 49, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 476, 477, 669, 675, 678, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 727, 728, 729, 734, 735, 736, 745, 750, 751, 752, 753, 754, 777, 778, 779, 780, 781, 782, 786, 788, 789, 791, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 827, 828, 829, 843, 846, 847, 848, 849, 850, 851, 853, 902, 903, 909, 921, 941, 1014, 1124, 1133, 1134, 1136, 1170, 1193, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1211, 1212, 1213, 1267, 1290, 1300, 1337, 1341, 1347, 1348, 1349, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1382, 1384, 1392, 1393, 1394, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1430, 1431, 1439, 1440, 1445, 1457, 1462, 1468, 1472, 1476, 1519, 1520, 1593, 1600, 1609, 1610, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1645, 1649, 1650, 1651, 1653, 1682, 1743, 1788, 1849, 1851, 1852, 1859, 1866, 1867, 1872, 1877, 1879, 1881, 1883, 1885, 1886, 1889, 1893, 1894, 1895, 1898, 1901, 1903, 1904, 1906, 1908, 1909, 1910, 1912, 1914, 1916, 1917, 1920, 1921, 1923, 1926, 1927, 1928, 1932, 1935, 1936, 1937, 1938, 1942, 1943, 1945, 1946, 1950, 1954, 1955, 1956, 1957], "def": [0, 1, 12, 21, 22, 24, 25, 26, 30, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 388, 781, 782, 850, 851, 879, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 941, 952, 1072, 1124, 1125, 1126, 1128, 1129, 1130, 1132, 1134, 1135, 1136, 1170, 1193, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1206, 1207, 1210, 1211, 1212, 1213, 1429, 1430, 1431, 1439, 1440, 1478, 1578, 1600, 1609, 1621, 1654, 1788, 1859, 1866, 1868, 1870, 1871, 1875, 1885, 1890, 1891, 1893, 1895, 1896, 1897, 1898, 1902, 1904, 1906, 1907, 1908, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1925, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1954, 1955, 1956, 1957], "self": [0, 1, 9, 12, 18, 21, 22, 24, 26, 32, 33, 38, 43, 45, 46, 48, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 87, 129, 140, 143, 144, 145, 160, 162, 165, 168, 169, 170, 180, 181, 185, 186, 198, 206, 208, 222, 223, 230, 244, 245, 248, 249, 257, 276, 280, 287, 301, 303, 305, 307, 309, 311, 313, 315, 316, 318, 319, 320, 321, 323, 331, 367, 383, 388, 390, 391, 392, 443, 460, 470, 472, 486, 487, 488, 489, 502, 504, 506, 509, 512, 514, 526, 532, 533, 534, 535, 547, 549, 569, 570, 572, 573, 574, 576, 577, 593, 596, 597, 603, 606, 607, 609, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 850, 851, 907, 1124, 1125, 1134, 1165, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1206, 1207, 1211, 1212, 1213, 1337, 1341, 1374, 1381, 1399, 1428, 1429, 1430, 1431, 1435, 1439, 1440, 1444, 1456, 1458, 1468, 1474, 1476, 1558, 1581, 1600, 1618, 1619, 1621, 1627, 1629, 1642, 1651, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1708, 1729, 1868, 1869, 1870, 1871, 1875, 1881, 1884, 1885, 1889, 1891, 1892, 1893, 1896, 1898, 1902, 1907, 1910, 1912, 1915, 1916, 1918, 1923, 1929, 1942, 1943, 1949, 1951, 1954, 1955, 1956], "produc": [0, 7, 14, 21, 24, 26, 31, 33, 35, 38, 43, 45, 46, 53, 54, 55, 56, 69, 78, 721, 727, 728, 729, 734, 735, 745, 753, 781, 782, 912, 932, 1007, 1099, 1100, 1101, 1119, 1129, 1130, 1136, 1148, 1207, 1211, 1212, 1215, 1231, 1232, 1235, 1242, 1243, 1254, 1259, 1293, 1296, 1297, 1298, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1405, 1406, 1407, 1408, 1409, 1410, 1435, 1512, 1520, 1528, 1539, 1597, 1598, 1599, 1656, 1682, 1711, 1718, 1727, 1813, 1848, 1859, 1868, 1870, 1871, 1883, 1884, 1890, 1891, 1892, 1894, 1896, 1900, 1901, 1902, 1905, 1906, 1907, 1908, 1912, 1927, 1931, 1942, 1944, 1946, 1949, 1952, 1956], "after": [0, 1, 7, 9, 12, 14, 21, 22, 24, 25, 26, 28, 29, 41, 43, 48, 55, 56, 57, 62, 63, 250, 477, 749, 779, 846, 848, 850, 851, 882, 883, 886, 941, 948, 969, 971, 1007, 1014, 1067, 1125, 1180, 1195, 1199, 1251, 1267, 1290, 1307, 1333, 1366, 1381, 1414, 1429, 1432, 1472, 1474, 1476, 1493, 1528, 1600, 1603, 1609, 1621, 1623, 1627, 1629, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1686, 1687, 1693, 1695, 1751, 1809, 1834, 1849, 1851, 1861, 1866, 1870, 1871, 1881, 1883, 1889, 1890, 1891, 1894, 1895, 1896, 1898, 1899, 1901, 1902, 1904, 1905, 1912, 1914, 1915, 1917, 1918, 1923, 1924, 1925, 1926, 1928, 1930, 1932, 1941, 1943, 1946, 1947, 1949, 1950, 1952, 1954, 1955, 1956], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 109, 143, 145, 160, 162, 165, 168, 169, 170, 180, 181, 185, 186, 196, 198, 199, 206, 208, 209, 211, 222, 223, 230, 232, 244, 250, 257, 279, 287, 301, 309, 313, 315, 316, 318, 319, 320, 321, 323, 327, 329, 331, 342, 367, 383, 424, 434, 435, 436, 437, 438, 447, 461, 462, 463, 464, 465, 467, 472, 476, 477, 485, 486, 487, 502, 504, 512, 514, 526, 532, 533, 545, 546, 547, 548, 549, 569, 570, 571, 572, 578, 592, 593, 596, 598, 602, 603, 606, 673, 681, 682, 684, 685, 686, 687, 688, 724, 755, 756, 759, 760, 764, 765, 766, 767, 770, 773, 780, 781, 782, 783, 803, 804, 805, 806, 825, 829, 830, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 906, 907, 908, 910, 911, 912, 919, 920, 922, 925, 927, 929, 930, 931, 932, 934, 935, 936, 938, 940, 941, 942, 943, 944, 947, 952, 953, 954, 956, 957, 958, 960, 963, 964, 965, 966, 968, 969, 971, 972, 974, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1062, 1068, 1069, 1070, 1071, 1072, 1073, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1116, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1151, 1152, 1153, 1155, 1156, 1157, 1161, 1165, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1191, 1192, 1193, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1220, 1221, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1275, 1276, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1304, 1305, 1307, 1308, 1314, 1319, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1333, 1337, 1338, 1339, 1340, 1345, 1346, 1363, 1364, 1365, 1366, 1373, 1377, 1378, 1389, 1395, 1396, 1419, 1420, 1421, 1422, 1423, 1424, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1443, 1457, 1460, 1461, 1462, 1463, 1464, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1498, 1500, 1501, 1502, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1571, 1573, 1574, 1576, 1578, 1579, 1581, 1582, 1583, 1584, 1585, 1591, 1593, 1594, 1595, 1596, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1701, 1702, 1704, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1740, 1742, 1747, 1748, 1749, 1750, 1756, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1781, 1785, 1787, 1788, 1789, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1808, 1809, 1812, 1813, 1814, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1831, 1832, 1833, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1850, 1851, 1853, 1855, 1857, 1858, 1859, 1862, 1864, 1865, 1866, 1868, 1872, 1875, 1879, 1880, 1881, 1883, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1905, 1907, 1908, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1922, 1923, 1924, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1954, 1955, 1956, 1957, 1958, 1959], "disabl": [0, 2, 5, 25, 30, 48, 56, 799, 800, 941, 1014, 1068, 1072, 1124, 1170, 1195, 1197, 1211, 1212, 1429, 1435, 1468, 1476, 1578, 1609, 1610, 1651, 1654, 1756, 1757, 1760, 1788, 1867, 1870, 1877, 1890, 1893, 1894, 1895, 1896, 1900, 1905, 1906, 1912, 1916, 1922, 1927, 1934, 1945, 1950, 1953, 1956, 1958], "them": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 21, 24, 26, 32, 33, 38, 41, 43, 45, 48, 52, 53, 55, 56, 140, 211, 244, 723, 882, 888, 892, 923, 1014, 1053, 1056, 1068, 1195, 1217, 1226, 1237, 1251, 1263, 1267, 1295, 1327, 1353, 1372, 1429, 1462, 1464, 1584, 1628, 1643, 1646, 1683, 1792, 1794, 1812, 1845, 1849, 1851, 1866, 1870, 1871, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1900, 1901, 1902, 1906, 1908, 1914, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1928, 1932, 1933, 1936, 1943, 1944, 1945, 1946, 1949, 1952, 1953, 1955, 1956], "differ": [0, 1, 3, 5, 8, 14, 18, 21, 24, 26, 28, 29, 30, 32, 33, 34, 38, 39, 41, 42, 44, 45, 46, 48, 49, 52, 53, 54, 56, 186, 475, 482, 606, 669, 675, 678, 684, 685, 724, 749, 782, 785, 786, 811, 813, 814, 850, 851, 854, 868, 869, 897, 898, 909, 921, 922, 960, 1051, 1056, 1058, 1060, 1068, 1108, 1109, 1110, 1114, 1115, 1121, 1124, 1129, 1130, 1136, 1148, 1169, 1195, 1201, 1206, 1211, 1225, 1231, 1232, 1242, 1243, 1251, 1254, 1259, 1263, 1290, 1300, 1337, 1346, 1347, 1348, 1349, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1381, 1382, 1390, 1392, 1393, 1394, 1395, 1399, 1400, 1416, 1429, 1432, 1435, 1450, 1451, 1453, 1454, 1455, 1457, 1460, 1468, 1474, 1476, 1478, 1481, 1484, 1485, 1486, 1493, 1501, 1519, 1528, 1539, 1541, 1552, 1553, 1554, 1578, 1600, 1609, 1611, 1612, 1616, 1651, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1695, 1701, 1711, 1733, 1807, 1808, 1813, 1834, 1845, 1846, 1848, 1854, 1855, 1859, 1866, 1868, 1870, 1871, 1873, 1877, 1878, 1883, 1884, 1886, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1902, 1904, 1905, 1906, 1908, 1910, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1925, 1927, 1930, 1932, 1933, 1934, 1937, 1938, 1940, 1943, 1945, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1956], "caus": [0, 1, 2, 3, 5, 14, 18, 21, 24, 28, 34, 40, 41, 42, 45, 53, 56, 74, 545, 606, 866, 869, 882, 944, 1121, 1207, 1211, 1231, 1232, 1259, 1314, 1539, 1540, 1597, 1600, 1609, 1655, 1664, 1751, 1762, 1809, 1848, 1868, 1871, 1883, 1892, 1894, 1896, 1898, 1904, 1906, 1908, 1912, 1915, 1918, 1919, 1925, 1927, 1930, 1945, 1947], "mismatch": [0, 24, 56, 75, 77, 869, 1196, 1663, 1664, 1870, 1890, 1895, 1896, 1898, 1912, 1934], "error": [0, 1, 5, 8, 14, 17, 18, 21, 22, 24, 25, 27, 30, 39, 41, 42, 45, 48, 51, 53, 55, 56, 57, 58, 72, 73, 74, 75, 77, 180, 211, 303, 305, 311, 313, 318, 477, 534, 545, 603, 606, 669, 808, 854, 867, 869, 888, 890, 891, 892, 893, 894, 895, 896, 969, 979, 1003, 1014, 1025, 1038, 1042, 1066, 1124, 1128, 1129, 1131, 1136, 1158, 1195, 1200, 1210, 1225, 1226, 1235, 1237, 1239, 1242, 1243, 1244, 1254, 1257, 1267, 1285, 1314, 1319, 1345, 1346, 1379, 1390, 1396, 1420, 1429, 1458, 1460, 1526, 1537, 1559, 1578, 1581, 1582, 1609, 1611, 1612, 1613, 1651, 1656, 1663, 1664, 1707, 1747, 1754, 1798, 1804, 1809, 1848, 1851, 1859, 1860, 1866, 1867, 1868, 1870, 1871, 1877, 1878, 1883, 1884, 1885, 1886, 1890, 1891, 1894, 1896, 1897, 1899, 1900, 1906, 1910, 1912, 1915, 1921, 1923, 1928, 1933, 1934, 1936, 1937, 1941, 1944, 1945, 1946, 1958], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 64, 65, 66, 67, 72, 73, 74, 75, 77, 87, 140, 144, 185, 196, 199, 244, 305, 309, 311, 434, 435, 436, 437, 438, 447, 460, 470, 485, 488, 506, 509, 526, 534, 569, 570, 572, 573, 574, 576, 577, 592, 596, 606, 669, 675, 678, 679, 680, 682, 684, 685, 686, 688, 724, 745, 749, 753, 768, 770, 774, 783, 784, 806, 809, 810, 811, 814, 843, 847, 850, 854, 863, 864, 865, 866, 867, 868, 869, 878, 880, 881, 882, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 909, 910, 912, 919, 921, 922, 923, 925, 929, 931, 932, 935, 936, 943, 949, 953, 954, 955, 959, 960, 968, 971, 972, 974, 976, 979, 981, 983, 985, 992, 1003, 1009, 1014, 1015, 1035, 1038, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1068, 1069, 1070, 1071, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1111, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1135, 1136, 1137, 1148, 1152, 1153, 1155, 1156, 1157, 1158, 1169, 1172, 1186, 1192, 1195, 1198, 1199, 1200, 1203, 1205, 1207, 1208, 1211, 1212, 1215, 1216, 1217, 1221, 1225, 1226, 1231, 1232, 1234, 1235, 1237, 1238, 1239, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1278, 1282, 1283, 1285, 1287, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1314, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1337, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1381, 1382, 1383, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1414, 1416, 1420, 1421, 1422, 1423, 1424, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1443, 1444, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1460, 1461, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1484, 1485, 1486, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1523, 1524, 1528, 1530, 1532, 1539, 1540, 1545, 1547, 1549, 1550, 1552, 1553, 1554, 1563, 1564, 1565, 1568, 1571, 1572, 1578, 1584, 1585, 1596, 1597, 1603, 1609, 1610, 1613, 1614, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1642, 1643, 1644, 1645, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1699, 1700, 1705, 1709, 1711, 1712, 1716, 1717, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1732, 1733, 1738, 1740, 1743, 1747, 1749, 1751, 1754, 1755, 1760, 1762, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1785, 1789, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1807, 1808, 1809, 1812, 1813, 1824, 1827, 1828, 1830, 1831, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1845, 1846, 1848, 1851, 1853, 1854, 1855, 1859, 1864, 1865, 1866, 1868, 1871, 1873, 1875, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1956, 1957, 1958], "so": [0, 1, 2, 3, 7, 9, 14, 17, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 41, 42, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 66, 67, 325, 447, 485, 669, 848, 883, 888, 890, 891, 896, 938, 941, 970, 993, 1056, 1058, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1119, 1121, 1124, 1128, 1129, 1131, 1132, 1182, 1192, 1195, 1198, 1199, 1205, 1207, 1209, 1251, 1253, 1263, 1268, 1273, 1285, 1306, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1373, 1376, 1383, 1429, 1445, 1462, 1464, 1480, 1493, 1503, 1504, 1505, 1528, 1584, 1585, 1600, 1609, 1655, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1777, 1792, 1804, 1809, 1813, 1833, 1845, 1849, 1853, 1868, 1870, 1871, 1877, 1879, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1914, 1915, 1918, 1922, 1923, 1927, 1928, 1930, 1932, 1933, 1935, 1941, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1955, 1956, 1958], "cast": [0, 6, 22, 39, 48, 76, 325, 592, 593, 926, 1049, 1050, 1195, 1248, 1252, 1265, 1295, 1324, 1327, 1429, 1547, 1584, 1585, 1656, 1709, 1789, 1792, 1798, 1812, 1817, 1818, 1868, 1890, 1905, 1912, 1928, 1929, 1930, 1946], "back": [0, 1, 2, 14, 21, 22, 24, 26, 29, 30, 41, 45, 48, 53, 56, 57, 62, 65, 724, 826, 897, 938, 941, 1088, 1125, 1196, 1209, 1261, 1267, 1475, 1613, 1614, 1794, 1866, 1868, 1871, 1891, 1896, 1897, 1904, 1905, 1906, 1912, 1914, 1915, 1918, 1923, 1927, 1941, 1946, 1948, 1949, 1957], "from": [0, 1, 3, 5, 6, 7, 8, 9, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 39, 41, 43, 44, 45, 46, 48, 49, 51, 53, 54, 55, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 78, 143, 144, 163, 186, 211, 212, 223, 248, 276, 303, 305, 309, 311, 367, 392, 437, 443, 460, 462, 463, 470, 475, 476, 477, 482, 488, 502, 504, 506, 533, 535, 549, 569, 596, 597, 599, 606, 669, 701, 702, 703, 704, 705, 706, 709, 717, 718, 721, 724, 727, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 761, 762, 763, 770, 777, 778, 781, 782, 783, 786, 789, 804, 805, 806, 813, 815, 829, 843, 847, 849, 850, 851, 853, 854, 868, 869, 880, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 902, 903, 910, 911, 919, 920, 925, 926, 938, 970, 971, 974, 983, 984, 985, 1003, 1007, 1025, 1052, 1068, 1069, 1070, 1071, 1088, 1090, 1091, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1152, 1153, 1157, 1172, 1192, 1193, 1195, 1196, 1198, 1200, 1201, 1202, 1203, 1206, 1207, 1219, 1235, 1239, 1248, 1251, 1252, 1265, 1266, 1267, 1268, 1282, 1286, 1287, 1300, 1305, 1307, 1310, 1311, 1312, 1314, 1319, 1328, 1329, 1337, 1341, 1347, 1348, 1349, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1381, 1382, 1383, 1384, 1390, 1392, 1393, 1394, 1395, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1429, 1430, 1431, 1435, 1439, 1440, 1444, 1446, 1447, 1468, 1473, 1474, 1476, 1478, 1480, 1481, 1493, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1525, 1528, 1530, 1539, 1552, 1553, 1554, 1566, 1596, 1600, 1609, 1613, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1636, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1653, 1657, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1704, 1712, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1733, 1734, 1737, 1739, 1740, 1747, 1760, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1809, 1810, 1814, 1824, 1827, 1836, 1838, 1840, 1845, 1846, 1848, 1850, 1851, 1853, 1862, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1889, 1891, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1909, 1910, 1914, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1953, 1954, 1955, 1956, 1957, 1958], "alreadi": [0, 1, 11, 21, 22, 24, 25, 41, 42, 48, 55, 56, 185, 196, 199, 452, 475, 513, 569, 592, 593, 781, 829, 843, 847, 868, 979, 1005, 1195, 1205, 1267, 1429, 1604, 1609, 1642, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1843, 1845, 1851, 1866, 1868, 1878, 1880, 1884, 1885, 1890, 1891, 1894, 1896, 1899, 1904, 1912, 1914, 1915, 1918, 1924, 1925, 1927, 1929, 1931, 1941, 1943, 1945], "incur": [0, 5, 22, 24, 48, 931, 1904, 1923], "addit": [0, 1, 3, 5, 7, 9, 14, 15, 21, 24, 25, 26, 30, 35, 41, 42, 46, 48, 55, 56, 57, 65, 325, 502, 596, 738, 740, 741, 742, 743, 747, 749, 770, 784, 803, 848, 1025, 1192, 1195, 1199, 1205, 1210, 1337, 1348, 1349, 1350, 1360, 1361, 1362, 1373, 1380, 1381, 1383, 1390, 1393, 1394, 1401, 1408, 1409, 1410, 1414, 1415, 1416, 1417, 1419, 1425, 1426, 1427, 1429, 1435, 1437, 1462, 1464, 1468, 1472, 1474, 1476, 1478, 1499, 1506, 1507, 1508, 1545, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1755, 1845, 1846, 1857, 1868, 1870, 1871, 1877, 1881, 1884, 1885, 1886, 1891, 1893, 1894, 1896, 1897, 1901, 1904, 1905, 1908, 1912, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1931, 1934, 1941, 1944, 1946, 1952, 1953, 1956, 1958], "overhead": [0, 1, 3, 4, 8, 22, 24, 48, 770, 941, 1025, 1207, 1609, 1891, 1893, 1894, 1895, 1900, 1901, 1904, 1916, 1917, 1924, 1927, 1933, 1941, 1945, 1946, 1948, 1949, 1950], "here": [0, 1, 7, 8, 9, 12, 15, 18, 21, 22, 24, 25, 30, 40, 42, 45, 46, 50, 51, 52, 53, 55, 56, 75, 77, 569, 782, 783, 958, 977, 1068, 1085, 1087, 1088, 1093, 1094, 1095, 1097, 1098, 1103, 1105, 1124, 1134, 1193, 1207, 1347, 1348, 1349, 1360, 1361, 1362, 1392, 1393, 1394, 1437, 1468, 1528, 1530, 1618, 1679, 1682, 1693, 1755, 1780, 1866, 1868, 1870, 1871, 1873, 1884, 1885, 1886, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1908, 1912, 1914, 1915, 1916, 1918, 1921, 1927, 1931, 1932, 1934, 1941, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1956], "assum": [0, 11, 12, 21, 24, 29, 30, 32, 34, 41, 42, 45, 46, 48, 51, 54, 56, 806, 952, 1051, 1086, 1089, 1091, 1099, 1100, 1101, 1104, 1186, 1192, 1193, 1196, 1211, 1231, 1232, 1234, 1241, 1250, 1253, 1256, 1258, 1268, 1352, 1421, 1481, 1512, 1578, 1609, 1618, 1621, 1646, 1683, 1684, 1689, 1690, 1691, 1694, 1696, 1697, 1701, 1814, 1834, 1836, 1851, 1866, 1868, 1870, 1871, 1884, 1891, 1894, 1896, 1897, 1899, 1901, 1904, 1905, 1912, 1914, 1915, 1916, 1923, 1924, 1925, 1927, 1943, 1944, 1952], "a_float32": 0, "rand": [0, 1, 18, 30, 45, 56, 325, 682, 688, 890, 891, 892, 893, 894, 895, 960, 1011, 1012, 1085, 1087, 1090, 1091, 1093, 1094, 1097, 1098, 1100, 1101, 1103, 1105, 1126, 1201, 1202, 1207, 1211, 1212, 1213, 1269, 1270, 1272, 1345, 1395, 1472, 1473, 1474, 1475, 1476, 1500, 1519, 1520, 1578, 1609, 1621, 1654, 1704, 1715, 1716, 1717, 1721, 1868, 1869, 1870, 1871, 1873, 1884, 1885, 1896, 1910, 1912, 1913, 1916, 1918, 1923, 1924, 1927, 1928, 1931, 1932, 1935, 1951, 1954], "8": [0, 1, 14, 20, 21, 22, 24, 30, 32, 45, 57, 62, 303, 305, 307, 311, 391, 392, 460, 502, 506, 549, 596, 606, 674, 675, 686, 687, 734, 735, 750, 752, 754, 762, 763, 809, 810, 811, 814, 893, 912, 920, 931, 934, 935, 939, 1011, 1012, 1047, 1051, 1066, 1071, 1084, 1100, 1101, 1107, 1108, 1111, 1118, 1148, 1157, 1158, 1219, 1248, 1251, 1252, 1253, 1261, 1263, 1266, 1267, 1328, 1329, 1334, 1335, 1336, 1338, 1339, 1340, 1353, 1364, 1399, 1425, 1426, 1432, 1434, 1436, 1443, 1444, 1447, 1450, 1451, 1452, 1453, 1454, 1455, 1468, 1472, 1473, 1474, 1475, 1476, 1480, 1504, 1507, 1510, 1566, 1571, 1576, 1577, 1578, 1656, 1657, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1687, 1695, 1700, 1704, 1708, 1728, 1738, 1739, 1740, 1747, 1755, 1760, 1767, 1770, 1775, 1781, 1785, 1793, 1795, 1796, 1801, 1809, 1813, 1823, 1828, 1829, 1830, 1832, 1834, 1843, 1848, 1853, 1860, 1868, 1872, 1878, 1894, 1896, 1907, 1910, 1912, 1913, 1915, 1916, 1917, 1918, 1921, 1923, 1927, 1928, 1930, 1931, 1933, 1943, 1949, 1956], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 1199, 1251, 1290, 1439, 1440, 1711, 1813, 1848, 1869, 1870, 1884, 1890, 1893, 1896, 1905, 1913, 1927, 1950, 1951], "list": [0, 1, 3, 5, 6, 7, 9, 14, 15, 18, 21, 22, 24, 25, 26, 28, 30, 32, 41, 43, 45, 46, 48, 53, 55, 56, 57, 58, 62, 63, 64, 65, 73, 174, 231, 292, 434, 436, 438, 567, 572, 573, 574, 578, 608, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 781, 782, 787, 803, 804, 805, 806, 827, 843, 850, 868, 875, 876, 877, 923, 924, 927, 931, 935, 940, 941, 943, 947, 995, 1001, 1053, 1066, 1068, 1069, 1108, 1122, 1134, 1148, 1158, 1195, 1199, 1201, 1202, 1207, 1209, 1211, 1212, 1295, 1297, 1327, 1366, 1372, 1401, 1429, 1431, 1440, 1457, 1468, 1479, 1519, 1593, 1609, 1610, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1656, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1691, 1692, 1693, 1695, 1696, 1714, 1716, 1717, 1720, 1724, 1739, 1776, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1807, 1808, 1812, 1827, 1828, 1829, 1845, 1846, 1848, 1849, 1851, 1854, 1855, 1860, 1864, 1866, 1868, 1869, 1872, 1873, 1877, 1879, 1881, 1884, 1885, 1886, 1896, 1900, 1902, 1905, 1906, 1907, 1909, 1910, 1913, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1927, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1938, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1954, 1955, 1956, 1957, 1958], "No": [0, 9, 12, 44, 46, 55, 57, 65, 889, 1609, 1654, 1870, 1894, 1912, 1921, 1931, 1934, 1941], "manual": [0, 21, 24, 39, 41, 42, 44, 48, 56, 786, 827, 867, 896, 1157, 1199, 1345, 1346, 1365, 1433, 1434, 1436, 1457, 1476, 1500, 1501, 1511, 1563, 1621, 1642, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1868, 1871, 1883, 1890, 1894, 1896, 1897, 1898, 1899, 1902, 1908, 1912, 1918, 1919, 1932, 1941, 1944, 1953], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 14, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 41, 42, 48, 55, 56, 476, 477, 829, 879, 889, 902, 903, 943, 955, 971, 986, 1013, 1026, 1068, 1114, 1115, 1136, 1195, 1226, 1366, 1429, 1476, 1478, 1528, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1731, 1777, 1814, 1859, 1866, 1881, 1883, 1885, 1894, 1896, 1897, 1898, 1899, 1904, 1909, 1910, 1912, 1915, 1918, 1923, 1925, 1934, 1935, 1941, 1945, 1947, 1949, 1952], "f_float16": 0, "g_float32": 0, "epoch": [0, 21, 34, 44, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1881, 1890, 1904, 1914, 1932], "eval": [0, 56, 803, 849, 850, 1134, 1195, 1199, 1205, 1211, 1347, 1348, 1349, 1392, 1393, 1394, 1402, 1403, 1404, 1411, 1412, 1413, 1429, 1435, 1468, 1476, 1617, 1871, 1879, 1902, 1909, 1912, 1918, 1937, 1944, 1957], "jit": [0, 11, 14, 45, 1011, 1012, 1043, 1145, 1193, 1194, 1195, 1210, 1662, 1663, 1758, 1759, 1867, 1870, 1873, 1879, 1885, 1893, 1901, 1907, 1909, 1912, 1918, 1923, 1932, 1942, 1943, 1944, 1946, 1948], "trace": [0, 1, 5, 12, 15, 18, 21, 22, 24, 34, 45, 46, 57, 60, 61, 62, 63, 66, 67, 69, 669, 904, 905, 906, 941, 952, 1068, 1198, 1207, 1208, 1212, 1268, 1310, 1311, 1312, 1664, 1850, 1867, 1869, 1870, 1871, 1873, 1877, 1891, 1894, 1895, 1907, 1909, 1910, 1913, 1915, 1932, 1938, 1942, 1944, 1945, 1948, 1949, 1950, 1952, 1956, 1958], "testmodel": 0, "__init__": [0, 1, 12, 21, 22, 24, 30, 45, 56, 57, 62, 64, 65, 67, 850, 851, 1134, 1193, 1196, 1198, 1201, 1202, 1207, 1211, 1212, 1213, 1429, 1430, 1431, 1439, 1440, 1600, 1868, 1870, 1871, 1881, 1891, 1896, 1898, 1902, 1907, 1910, 1912, 1915, 1918, 1932, 1942, 1944, 1954, 1955, 1956], "input_s": [0, 723, 749, 750, 754, 1381, 1382, 1399, 1400, 1444, 1445, 1446, 1869], "num_class": [0, 1565, 1869, 1948], "super": [0, 9, 12, 21, 22, 24, 26, 45, 56, 57, 62, 64, 65, 67, 850, 851, 1134, 1193, 1198, 1201, 1202, 1207, 1211, 1212, 1213, 1429, 1430, 1431, 1439, 1440, 1441, 1442, 1600, 1693, 1868, 1870, 1871, 1872, 1891, 1896, 1902, 1907, 1910, 1912, 1915, 1918, 1942, 1954, 1955, 1956], "fc1": [0, 22, 1600, 1910, 1916], "x": [0, 1, 3, 11, 12, 14, 21, 22, 24, 30, 32, 38, 45, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 163, 244, 248, 276, 279, 301, 303, 305, 307, 311, 342, 367, 437, 472, 482, 488, 547, 549, 572, 596, 597, 606, 681, 747, 749, 759, 768, 769, 773, 774, 785, 788, 791, 809, 810, 850, 851, 867, 873, 875, 876, 877, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 923, 924, 925, 928, 929, 934, 941, 952, 953, 956, 959, 960, 1011, 1012, 1051, 1058, 1062, 1063, 1068, 1072, 1082, 1083, 1084, 1085, 1087, 1088, 1093, 1094, 1096, 1098, 1102, 1103, 1105, 1108, 1109, 1110, 1118, 1124, 1126, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1148, 1165, 1169, 1170, 1182, 1200, 1201, 1202, 1206, 1207, 1210, 1211, 1212, 1213, 1217, 1227, 1240, 1241, 1245, 1248, 1252, 1256, 1258, 1261, 1262, 1263, 1264, 1265, 1268, 1273, 1274, 1275, 1283, 1286, 1289, 1290, 1297, 1323, 1324, 1328, 1329, 1335, 1336, 1345, 1346, 1347, 1348, 1349, 1351, 1363, 1365, 1371, 1377, 1378, 1379, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1415, 1418, 1419, 1420, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1444, 1446, 1447, 1448, 1449, 1456, 1458, 1459, 1460, 1461, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1477, 1478, 1481, 1502, 1526, 1528, 1532, 1533, 1539, 1543, 1547, 1558, 1563, 1568, 1572, 1574, 1579, 1580, 1581, 1585, 1586, 1588, 1589, 1590, 1597, 1600, 1617, 1619, 1621, 1642, 1643, 1644, 1645, 1646, 1651, 1654, 1655, 1656, 1663, 1666, 1687, 1701, 1702, 1713, 1715, 1729, 1732, 1733, 1735, 1736, 1738, 1739, 1743, 1747, 1757, 1785, 1787, 1790, 1804, 1807, 1808, 1809, 1815, 1816, 1822, 1828, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1846, 1847, 1853, 1854, 1855, 1857, 1858, 1859, 1862, 1866, 1868, 1869, 1870, 1871, 1872, 1883, 1884, 1885, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1908, 1910, 1911, 1912, 1915, 1918, 1923, 1927, 1928, 1930, 1932, 1933, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1954, 1956], "2": [0, 1, 3, 11, 12, 14, 18, 19, 20, 21, 22, 24, 25, 28, 30, 31, 32, 34, 39, 41, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 163, 181, 198, 215, 223, 224, 244, 250, 303, 305, 307, 311, 325, 367, 391, 392, 434, 435, 436, 437, 438, 470, 476, 477, 482, 485, 488, 502, 504, 506, 533, 547, 549, 569, 570, 572, 573, 574, 576, 577, 578, 596, 606, 669, 670, 672, 673, 674, 675, 678, 679, 680, 681, 682, 684, 686, 687, 688, 723, 727, 728, 729, 730, 731, 732, 734, 735, 744, 747, 749, 751, 782, 785, 809, 854, 863, 864, 865, 866, 867, 868, 869, 873, 875, 876, 877, 879, 888, 890, 891, 892, 893, 894, 895, 902, 903, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 927, 928, 929, 931, 932, 933, 934, 935, 939, 940, 949, 953, 954, 955, 956, 959, 960, 968, 1042, 1047, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1078, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1129, 1130, 1131, 1135, 1136, 1137, 1138, 1139, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1169, 1170, 1172, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1198, 1199, 1205, 1207, 1209, 1211, 1215, 1216, 1217, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1272, 1273, 1274, 1275, 1282, 1284, 1285, 1286, 1287, 1289, 1290, 1293, 1294, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1314, 1317, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1336, 1341, 1342, 1343, 1344, 1345, 1346, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1379, 1380, 1381, 1383, 1385, 1386, 1387, 1388, 1390, 1397, 1398, 1399, 1400, 1401, 1415, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1435, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1493, 1495, 1500, 1501, 1512, 1519, 1520, 1526, 1528, 1530, 1532, 1539, 1545, 1552, 1553, 1554, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1578, 1594, 1600, 1609, 1613, 1616, 1617, 1621, 1633, 1634, 1635, 1636, 1638, 1639, 1642, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1690, 1694, 1695, 1696, 1700, 1701, 1702, 1704, 1705, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1724, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1743, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1760, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1781, 1785, 1786, 1787, 1788, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1808, 1809, 1810, 1812, 1813, 1814, 1815, 1816, 1822, 1823, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1865, 1869, 1870, 1871, 1872, 1878, 1879, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1920, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1954, 1955], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 24, 26, 28, 29, 30, 31, 32, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 66, 67, 76, 485, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 768, 774, 777, 778, 780, 782, 783, 827, 846, 848, 850, 851, 854, 882, 883, 886, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 910, 919, 941, 1025, 1068, 1086, 1088, 1089, 1090, 1091, 1098, 1103, 1104, 1105, 1119, 1128, 1129, 1131, 1136, 1148, 1152, 1153, 1169, 1193, 1195, 1198, 1199, 1207, 1209, 1211, 1251, 1254, 1259, 1267, 1268, 1287, 1319, 1337, 1345, 1346, 1395, 1429, 1481, 1528, 1530, 1539, 1597, 1604, 1609, 1616, 1618, 1627, 1629, 1632, 1636, 1637, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1684, 1690, 1695, 1712, 1755, 1845, 1849, 1859, 1866, 1867, 1868, 1870, 1871, 1873, 1875, 1878, 1879, 1883, 1884, 1885, 1886, 1891, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1930, 1932, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956], "suggest": [0, 9, 22, 45, 49, 72, 73, 75, 77, 1363, 1866, 1873, 1890, 1891, 1898, 1927, 1950, 1956], "issu": [0, 2, 3, 5, 9, 10, 11, 14, 20, 21, 24, 31, 45, 48, 49, 51, 53, 56, 57, 74, 75, 890, 896, 941, 943, 944, 1119, 1130, 1132, 1136, 1241, 1285, 1297, 1395, 1399, 1425, 1426, 1427, 1444, 1481, 1539, 1540, 1653, 1751, 1859, 1866, 1867, 1871, 1873, 1878, 1883, 1884, 1885, 1886, 1890, 1891, 1894, 1896, 1904, 1905, 1906, 1908, 1912, 1915, 1918, 1919, 1923, 1927, 1928, 1930, 1941, 1946, 1947, 1956, 1958], "http": [0, 2, 3, 4, 7, 9, 12, 14, 15, 22, 23, 24, 29, 30, 41, 42, 48, 140, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 781, 782, 882, 941, 952, 1068, 1125, 1268, 1297, 1352, 1399, 1425, 1426, 1427, 1447, 1448, 1472, 1475, 1478, 1653, 1701, 1718, 1751, 1755, 1776, 1848, 1851, 1866, 1872, 1880, 1882, 1891, 1892, 1896, 1899, 1900, 1902, 1906, 1908, 1912, 1915, 1917, 1930, 1932, 1948, 1950, 1955, 1959], "github": [0, 7, 9, 14, 23, 24, 37, 48, 49, 53, 140, 781, 782, 882, 896, 1125, 1297, 1425, 1426, 1427, 1472, 1653, 1687, 1751, 1851, 1866, 1873, 1878, 1896, 1899, 1906, 1912, 1917, 1918, 1927, 1928, 1930, 1946, 1950, 1955], "com": [0, 7, 14, 23, 24, 40, 42, 48, 140, 781, 782, 882, 1125, 1297, 1425, 1426, 1427, 1472, 1653, 1751, 1848, 1851, 1866, 1880, 1882, 1896, 1899, 1900, 1906, 1908, 1912, 1917, 1930, 1950, 1955], "pytorch": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 17, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 46, 48, 49, 52, 54, 56, 57, 72, 73, 74, 75, 76, 77, 140, 502, 572, 669, 687, 719, 720, 721, 722, 734, 735, 745, 749, 750, 751, 752, 753, 754, 781, 782, 799, 800, 801, 802, 869, 882, 926, 931, 932, 941, 942, 952, 993, 994, 1005, 1010, 1068, 1113, 1119, 1125, 1126, 1130, 1135, 1136, 1141, 1181, 1182, 1206, 1226, 1232, 1237, 1239, 1240, 1241, 1244, 1257, 1266, 1282, 1285, 1286, 1297, 1345, 1346, 1352, 1381, 1395, 1425, 1426, 1427, 1472, 1501, 1578, 1609, 1642, 1650, 1651, 1653, 1656, 1664, 1711, 1743, 1751, 1752, 1762, 1809, 1813, 1836, 1848, 1851, 1859, 1866, 1870, 1871, 1875, 1877, 1878, 1880, 1881, 1885, 1886, 1887, 1892, 1893, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1908, 1909, 1910, 1914, 1915, 1917, 1919, 1920, 1923, 1924, 1927, 1928, 1930, 1931, 1932, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1957, 1958, 1959], "75956": 0, "_c": [0, 21, 22, 24, 55, 890, 896, 1194, 1207, 1662, 1869, 1871, 1881, 1894, 1901, 1905, 1908, 1912, 1923], "_jit_set_autocast_mod": 0, "fals": [0, 1, 3, 5, 12, 14, 21, 22, 24, 25, 26, 28, 30, 32, 45, 48, 51, 56, 57, 62, 64, 65, 66, 67, 102, 103, 104, 105, 106, 108, 124, 125, 126, 140, 171, 172, 173, 186, 199, 250, 291, 308, 309, 311, 318, 322, 325, 326, 328, 332, 333, 334, 341, 344, 382, 386, 397, 399, 400, 401, 404, 410, 418, 419, 420, 421, 434, 435, 436, 437, 438, 442, 447, 449, 459, 460, 468, 484, 485, 493, 506, 531, 544, 545, 554, 569, 583, 592, 598, 599, 604, 606, 669, 682, 683, 684, 685, 686, 688, 701, 702, 703, 704, 705, 706, 723, 724, 734, 735, 740, 741, 742, 744, 747, 749, 757, 758, 765, 767, 768, 769, 771, 772, 774, 786, 803, 808, 809, 810, 811, 813, 814, 815, 827, 828, 846, 847, 852, 854, 863, 864, 865, 869, 882, 883, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 906, 910, 913, 916, 918, 919, 925, 926, 932, 933, 934, 940, 941, 952, 953, 971, 1009, 1014, 1026, 1068, 1069, 1070, 1071, 1073, 1074, 1081, 1085, 1086, 1087, 1088, 1093, 1094, 1099, 1100, 1101, 1103, 1104, 1105, 1121, 1122, 1123, 1124, 1126, 1127, 1129, 1130, 1131, 1133, 1135, 1137, 1139, 1151, 1152, 1153, 1156, 1157, 1170, 1180, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1195, 1200, 1202, 1203, 1211, 1212, 1213, 1215, 1217, 1220, 1225, 1226, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1248, 1250, 1252, 1253, 1256, 1257, 1258, 1259, 1260, 1265, 1266, 1267, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1289, 1293, 1295, 1296, 1298, 1301, 1307, 1310, 1311, 1319, 1324, 1325, 1326, 1327, 1330, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1363, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1377, 1378, 1381, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1414, 1415, 1416, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1432, 1433, 1434, 1435, 1436, 1438, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1456, 1458, 1460, 1461, 1468, 1471, 1472, 1473, 1474, 1476, 1477, 1478, 1481, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1523, 1524, 1525, 1528, 1530, 1532, 1533, 1534, 1539, 1540, 1543, 1549, 1550, 1552, 1553, 1554, 1558, 1563, 1567, 1571, 1573, 1574, 1576, 1577, 1578, 1579, 1581, 1591, 1594, 1595, 1597, 1603, 1609, 1611, 1613, 1616, 1618, 1621, 1622, 1634, 1643, 1644, 1645, 1646, 1648, 1651, 1654, 1655, 1656, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1709, 1711, 1712, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1735, 1736, 1743, 1747, 1755, 1756, 1757, 1760, 1762, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1785, 1795, 1796, 1797, 1798, 1799, 1800, 1807, 1808, 1809, 1812, 1813, 1827, 1831, 1836, 1845, 1848, 1851, 1853, 1854, 1855, 1862, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1877, 1878, 1879, 1880, 1883, 1885, 1886, 1890, 1891, 1894, 1895, 1896, 1898, 1902, 1905, 1906, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1922, 1923, 1927, 1928, 1929, 1931, 1932, 1934, 1935, 1937, 1941, 1943, 1944, 1946, 1949, 1951, 1955, 1956, 1957], "randn": [0, 1, 11, 12, 24, 30, 45, 50, 52, 53, 54, 56, 57, 59, 64, 65, 279, 301, 472, 533, 569, 573, 574, 575, 576, 577, 578, 606, 672, 673, 674, 675, 676, 677, 678, 679, 684, 685, 688, 709, 717, 718, 723, 727, 728, 729, 730, 731, 732, 745, 747, 749, 750, 751, 752, 753, 754, 761, 762, 763, 850, 851, 863, 864, 865, 867, 870, 871, 872, 873, 874, 909, 921, 928, 930, 931, 932, 933, 934, 936, 955, 956, 957, 958, 959, 968, 1047, 1048, 1049, 1050, 1055, 1056, 1057, 1058, 1062, 1068, 1082, 1083, 1112, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1165, 1169, 1172, 1207, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1271, 1275, 1276, 1283, 1285, 1286, 1287, 1289, 1290, 1293, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1317, 1318, 1321, 1331, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1427, 1428, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1455, 1456, 1458, 1459, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1477, 1479, 1480, 1484, 1485, 1486, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1523, 1524, 1530, 1563, 1569, 1570, 1659, 1702, 1707, 1708, 1709, 1711, 1712, 1725, 1729, 1730, 1742, 1778, 1780, 1785, 1791, 1794, 1802, 1803, 1812, 1813, 1822, 1825, 1826, 1829, 1833, 1836, 1837, 1839, 1842, 1844, 1848, 1857, 1858, 1859, 1862, 1869, 1870, 1871, 1873, 1884, 1885, 1886, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1902, 1906, 1907, 1910, 1911, 1912, 1913, 1915, 1918, 1923, 1927, 1928, 1930, 1932, 1935, 1937, 1941, 1942, 1943, 1946, 1948, 1949, 1951, 1954, 1956], "freez": [0, 48, 1195, 1205, 1372, 1373, 1429, 1891], "_": [0, 1, 3, 21, 22, 24, 25, 28, 34, 54, 56, 670, 672, 673, 687, 854, 870, 871, 872, 873, 874, 883, 889, 911, 930, 954, 955, 957, 958, 960, 1112, 1117, 1131, 1135, 1161, 1216, 1224, 1275, 1283, 1347, 1348, 1349, 1392, 1393, 1394, 1468, 1609, 1617, 1650, 1679, 1681, 1701, 1724, 1727, 1730, 1742, 1757, 1763, 1765, 1771, 1778, 1780, 1802, 1813, 1825, 1826, 1891, 1894, 1897, 1898, 1902, 1908, 1914, 1915, 1917, 1928, 1942, 1943, 1949, 1950, 1954, 1956], "3": [0, 1, 3, 4, 6, 9, 11, 12, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 34, 39, 41, 45, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 181, 198, 223, 244, 250, 279, 303, 305, 307, 311, 391, 392, 434, 435, 436, 437, 438, 460, 476, 477, 482, 485, 488, 502, 504, 506, 512, 526, 533, 547, 549, 570, 572, 573, 574, 576, 577, 596, 606, 669, 670, 674, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 688, 723, 727, 728, 729, 730, 731, 732, 735, 737, 746, 749, 750, 751, 752, 754, 761, 762, 763, 774, 782, 813, 850, 851, 854, 864, 865, 867, 868, 869, 876, 877, 890, 891, 892, 893, 894, 895, 909, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 927, 928, 929, 931, 932, 933, 934, 935, 939, 940, 949, 953, 954, 959, 960, 968, 1011, 1012, 1014, 1050, 1051, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1081, 1084, 1089, 1092, 1096, 1102, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1126, 1131, 1132, 1134, 1136, 1137, 1138, 1139, 1148, 1151, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1169, 1170, 1172, 1180, 1182, 1184, 1186, 1195, 1199, 1202, 1205, 1207, 1211, 1212, 1216, 1217, 1218, 1219, 1220, 1221, 1225, 1227, 1228, 1229, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1276, 1278, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1317, 1318, 1319, 1321, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1342, 1343, 1344, 1345, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1365, 1372, 1373, 1376, 1377, 1378, 1379, 1381, 1382, 1384, 1386, 1387, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1432, 1434, 1436, 1441, 1442, 1444, 1446, 1447, 1450, 1451, 1452, 1453, 1454, 1455, 1462, 1463, 1464, 1468, 1476, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1493, 1495, 1500, 1501, 1504, 1505, 1507, 1508, 1511, 1519, 1520, 1523, 1524, 1526, 1528, 1532, 1533, 1539, 1547, 1563, 1565, 1566, 1569, 1570, 1576, 1577, 1584, 1585, 1597, 1609, 1617, 1631, 1633, 1635, 1636, 1637, 1638, 1642, 1644, 1645, 1646, 1647, 1650, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1690, 1693, 1694, 1696, 1700, 1702, 1704, 1708, 1709, 1711, 1712, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1726, 1727, 1728, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1743, 1747, 1751, 1752, 1753, 1760, 1763, 1765, 1767, 1769, 1770, 1771, 1775, 1776, 1777, 1785, 1787, 1788, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1812, 1813, 1815, 1816, 1822, 1823, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1853, 1856, 1859, 1860, 1861, 1862, 1864, 1865, 1868, 1869, 1870, 1871, 1872, 1878, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1899, 1902, 1903, 1907, 1908, 1910, 1912, 1914, 1915, 1918, 1920, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1941, 1943, 1946, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956], "bug": [0, 14, 18, 24, 45, 56, 1128, 1129, 1131, 1285, 1890, 1904, 1927, 1946, 1956], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 59, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 109, 140, 144, 185, 186, 196, 199, 211, 212, 213, 245, 250, 279, 280, 303, 311, 313, 325, 327, 330, 342, 434, 435, 436, 437, 438, 447, 475, 476, 477, 482, 484, 485, 486, 487, 488, 489, 492, 493, 502, 504, 506, 513, 545, 555, 572, 573, 574, 576, 577, 578, 592, 593, 603, 606, 607, 669, 673, 675, 678, 682, 683, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 724, 725, 726, 733, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748, 749, 764, 765, 766, 767, 768, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 791, 799, 800, 801, 802, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 843, 848, 850, 851, 863, 864, 865, 866, 867, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 906, 909, 912, 914, 917, 921, 922, 925, 929, 931, 932, 935, 936, 938, 941, 943, 944, 945, 946, 948, 953, 954, 956, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 974, 975, 976, 979, 990, 992, 995, 996, 997, 999, 1000, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1021, 1024, 1025, 1026, 1032, 1033, 1035, 1036, 1037, 1041, 1042, 1043, 1049, 1050, 1051, 1056, 1058, 1059, 1063, 1066, 1067, 1068, 1072, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1119, 1121, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1140, 1141, 1142, 1148, 1152, 1158, 1160, 1170, 1182, 1192, 1193, 1195, 1196, 1198, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1271, 1273, 1276, 1285, 1286, 1290, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1307, 1310, 1311, 1321, 1324, 1325, 1326, 1327, 1329, 1337, 1341, 1345, 1346, 1347, 1348, 1349, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1381, 1382, 1384, 1389, 1390, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1414, 1416, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1432, 1435, 1436, 1439, 1441, 1444, 1445, 1457, 1460, 1462, 1465, 1468, 1474, 1475, 1476, 1477, 1480, 1481, 1482, 1483, 1493, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1523, 1524, 1528, 1530, 1532, 1539, 1545, 1547, 1552, 1553, 1554, 1564, 1566, 1568, 1578, 1584, 1585, 1593, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1642, 1643, 1644, 1645, 1646, 1649, 1650, 1651, 1653, 1654, 1656, 1657, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1690, 1691, 1693, 1695, 1697, 1699, 1700, 1701, 1705, 1709, 1711, 1718, 1722, 1727, 1731, 1733, 1740, 1747, 1749, 1750, 1751, 1753, 1754, 1755, 1757, 1760, 1762, 1763, 1781, 1786, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1805, 1807, 1808, 1809, 1812, 1813, 1815, 1816, 1822, 1824, 1828, 1830, 1834, 1836, 1844, 1845, 1846, 1847, 1848, 1849, 1851, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "what": [0, 1, 3, 5, 7, 8, 9, 24, 29, 30, 34, 38, 39, 45, 48, 50, 52, 53, 56, 57, 881, 1129, 1211, 1212, 1285, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1423, 1424, 1457, 1480, 1552, 1553, 1554, 1578, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1712, 1866, 1867, 1868, 1870, 1871, 1884, 1894, 1896, 1897, 1899, 1902, 1904, 1912, 1914, 1917, 1918, 1923, 1924, 1927, 1941, 1942, 1944, 1945, 1947, 1948, 1949, 1956, 1958], "observ": [0, 22, 32, 41, 745, 778, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 797, 798, 800, 802, 804, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 848, 850, 851, 853, 956, 960, 1209, 1297, 1345, 1346, 1347, 1348, 1349, 1363, 1365, 1389, 1392, 1393, 1394, 1395, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1468, 1477, 1500, 1501, 1511, 1540, 1563, 1571, 1890, 1891, 1894, 1895, 1901, 1904, 1919, 1937, 1940, 1941, 1946, 1954, 1956, 1958], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 24, 30, 33, 36, 37, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 66, 67, 71, 76, 244, 245, 487, 502, 607, 678, 719, 720, 721, 722, 723, 724, 730, 731, 732, 734, 735, 745, 750, 751, 752, 753, 754, 850, 851, 881, 883, 884, 885, 890, 892, 893, 896, 923, 952, 1051, 1124, 1128, 1129, 1130, 1131, 1132, 1136, 1192, 1195, 1259, 1290, 1300, 1352, 1360, 1395, 1429, 1528, 1539, 1540, 1545, 1566, 1578, 1596, 1609, 1650, 1651, 1653, 1668, 1669, 1689, 1751, 1798, 1859, 1873, 1878, 1884, 1885, 1886, 1887, 1890, 1891, 1896, 1897, 1900, 1905, 1906, 1908, 1912, 1914, 1915, 1918, 1921, 1923, 1924, 1927, 1928, 1930, 1931, 1932, 1934, 1942, 1943, 1945, 1946, 1953, 1956], "file": [0, 1, 3, 6, 7, 9, 11, 14, 18, 21, 26, 32, 34, 39, 41, 43, 45, 46, 51, 53, 56, 890, 896, 904, 905, 970, 1007, 1128, 1129, 1131, 1132, 1170, 1195, 1203, 1206, 1267, 1663, 1743, 1788, 1866, 1868, 1871, 1872, 1873, 1880, 1884, 1885, 1886, 1891, 1894, 1896, 1901, 1904, 1906, 1907, 1908, 1910, 1912, 1917, 1921, 1924, 1927, 1929, 1932, 1942, 1944, 1946, 1948, 1950, 1953, 1954, 1956, 1958], "subregion": 0, "nest": [0, 1, 5, 12, 14, 26, 45, 48, 56, 57, 60, 64, 65, 578, 782, 804, 806, 883, 892, 1029, 1030, 1126, 1136, 1195, 1198, 1211, 1429, 1435, 1475, 1476, 1664, 1859, 1867, 1897, 1910, 1912, 1917, 1923], "local": [0, 24, 26, 28, 29, 32, 39, 41, 42, 43, 44, 48, 56, 1011, 1072, 1125, 1170, 1195, 1268, 1368, 1369, 1370, 1374, 1376, 1417, 1429, 1480, 1522, 1546, 1596, 1609, 1610, 1654, 1757, 1788, 1866, 1867, 1870, 1883, 1890, 1894, 1895, 1898, 1912, 1915, 1916, 1920, 1923, 1924, 1925, 1932, 1943, 1946, 1949, 1956, 1958], "want": [0, 1, 7, 8, 9, 14, 21, 24, 29, 30, 38, 48, 50, 51, 52, 53, 55, 56, 57, 437, 485, 488, 770, 780, 827, 1007, 1124, 1125, 1208, 1211, 1212, 1297, 1377, 1378, 1481, 1523, 1524, 1539, 1597, 1609, 1610, 1651, 1654, 1668, 1669, 1682, 1743, 1851, 1866, 1875, 1878, 1890, 1891, 1893, 1894, 1896, 1897, 1899, 1902, 1912, 1914, 1915, 1918, 1927, 1932, 1933, 1936, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1955], "forc": [0, 1, 14, 18, 48, 447, 869, 941, 1007, 1198, 1210, 1214, 1762, 1798, 1866, 1868, 1871, 1890, 1894, 1932, 1935, 1941, 1943, 1946], "particular": [0, 3, 7, 21, 26, 32, 38, 41, 42, 45, 46, 48, 56, 57, 62, 65, 549, 669, 850, 851, 1042, 1136, 1195, 1290, 1366, 1429, 1859, 1868, 1870, 1878, 1886, 1894, 1896, 1898, 1901, 1902, 1905, 1910, 1912, 1914, 1927, 1929, 1935, 1941, 1945, 1946, 1947, 1956, 1957, 1958], "give": [0, 3, 4, 7, 9, 12, 18, 21, 22, 26, 28, 40, 45, 48, 56, 897, 898, 960, 1086, 1088, 1089, 1091, 1095, 1104, 1128, 1129, 1130, 1209, 1225, 1232, 1357, 1358, 1359, 1434, 1480, 1481, 1616, 1655, 1668, 1669, 1809, 1848, 1866, 1868, 1883, 1885, 1889, 1891, 1894, 1896, 1897, 1899, 1900, 1902, 1906, 1912, 1914, 1916, 1927, 1941, 1944, 1945, 1953, 1956, 1957], "explicit": [0, 8, 12, 24, 45, 48, 52, 56, 1003, 1148, 1182, 1540, 1751, 1829, 1866, 1867, 1871, 1872, 1884, 1890, 1894, 1896, 1915, 1930, 1931, 1951], "control": [0, 1, 2, 14, 21, 22, 24, 25, 26, 30, 32, 37, 40, 41, 46, 57, 63, 65, 744, 788, 847, 850, 865, 869, 883, 910, 919, 952, 1055, 1056, 1057, 1058, 1059, 1152, 1153, 1207, 1208, 1209, 1211, 1226, 1232, 1234, 1237, 1239, 1242, 1244, 1248, 1254, 1257, 1259, 1265, 1285, 1337, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1415, 1423, 1424, 1480, 1578, 1609, 1699, 1755, 1756, 1770, 1785, 1788, 1793, 1809, 1813, 1831, 1837, 1838, 1839, 1840, 1867, 1868, 1877, 1891, 1893, 1894, 1895, 1902, 1904, 1905, 1907, 1909, 1910, 1912, 1914, 1918, 1925, 1927, 1941, 1942, 1944, 1946, 1949], "execut": [0, 1, 2, 3, 4, 5, 7, 14, 15, 21, 24, 26, 28, 32, 33, 35, 42, 45, 46, 48, 53, 55, 56, 71, 476, 477, 902, 903, 941, 974, 985, 1046, 1125, 1195, 1196, 1198, 1211, 1212, 1267, 1310, 1311, 1366, 1429, 1435, 1472, 1473, 1474, 1475, 1476, 1603, 1605, 1609, 1758, 1867, 1868, 1870, 1872, 1879, 1890, 1892, 1893, 1898, 1901, 1902, 1904, 1906, 1908, 1910, 1912, 1917, 1918, 1923, 1924, 1927, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1955, 1956], "surround": [0, 56, 779, 1870, 1890, 1894], "ensur": [0, 1, 4, 6, 7, 9, 21, 24, 25, 26, 28, 32, 41, 42, 44, 45, 48, 55, 56, 470, 475, 724, 808, 886, 888, 948, 1125, 1195, 1341, 1422, 1429, 1432, 1472, 1528, 1552, 1553, 1554, 1578, 1609, 1759, 1866, 1868, 1870, 1878, 1880, 1883, 1890, 1891, 1894, 1896, 1897, 1899, 1904, 1906, 1915, 1918, 1919, 1923, 1924, 1941, 1945, 1946, 1956], "necessari": [0, 1, 3, 9, 14, 21, 26, 32, 41, 42, 45, 48, 55, 78, 181, 198, 549, 578, 889, 1125, 1169, 1207, 1435, 1643, 1644, 1868, 1871, 1885, 1889, 1891, 1892, 1894, 1895, 1900, 1902, 1905, 1908, 1915, 1918, 1923, 1924, 1925, 1930, 1946, 1956], "becaus": [0, 1, 3, 4, 5, 7, 8, 14, 21, 22, 24, 28, 30, 34, 45, 46, 48, 52, 53, 55, 56, 57, 64, 65, 485, 892, 897, 898, 1089, 1090, 1091, 1099, 1100, 1101, 1126, 1130, 1135, 1136, 1192, 1196, 1199, 1203, 1242, 1243, 1267, 1285, 1347, 1348, 1349, 1366, 1468, 1600, 1609, 1610, 1685, 1727, 1755, 1809, 1859, 1867, 1868, 1871, 1873, 1883, 1884, 1885, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1910, 1912, 1915, 1918, 1919, 1923, 1925, 1927, 1932, 1934, 1937, 1941, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1954, 1956, 1957, 1958], "wa": [0, 1, 3, 7, 18, 22, 24, 39, 40, 41, 42, 45, 46, 48, 55, 56, 325, 475, 485, 669, 774, 781, 843, 931, 942, 971, 972, 995, 999, 1014, 1027, 1046, 1088, 1136, 1192, 1202, 1211, 1226, 1237, 1239, 1243, 1267, 1285, 1307, 1319, 1399, 1425, 1426, 1427, 1458, 1481, 1493, 1528, 1581, 1597, 1609, 1610, 1645, 1687, 1693, 1807, 1808, 1845, 1846, 1854, 1855, 1859, 1866, 1868, 1870, 1871, 1872, 1875, 1877, 1878, 1881, 1883, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1901, 1903, 1912, 1914, 1916, 1918, 1922, 1923, 1927, 1934, 1944, 1945, 1946, 1949, 1955, 1958], "f_float32": 0, "re": [0, 1, 4, 5, 7, 14, 21, 24, 28, 31, 38, 41, 45, 48, 49, 50, 51, 52, 53, 55, 56, 477, 921, 969, 1003, 1119, 1195, 1199, 1429, 1584, 1610, 1645, 1738, 1792, 1868, 1871, 1878, 1883, 1890, 1891, 1894, 1896, 1897, 1899, 1904, 1918, 1924, 1925, 1928, 1941, 1943, 1944, 1945, 1946, 1955, 1956, 1957], "again": [0, 18, 21, 24, 28, 32, 45, 51, 1319, 1891, 1896, 1897, 1902, 1941, 1945, 1949, 1950], "regardless": [0, 21, 40, 48, 954, 1195, 1199, 1205, 1429, 1603, 1845, 1890, 1894, 1907, 1923, 1934, 1946], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 57, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 140, 181, 186, 198, 199, 211, 223, 245, 280, 301, 303, 305, 309, 311, 388, 390, 391, 392, 437, 447, 472, 475, 476, 477, 482, 484, 487, 488, 502, 504, 506, 526, 533, 572, 592, 606, 607, 669, 673, 676, 677, 678, 679, 683, 684, 685, 686, 724, 737, 746, 749, 755, 756, 757, 758, 761, 762, 763, 768, 769, 771, 772, 774, 775, 776, 781, 782, 783, 784, 788, 791, 804, 806, 808, 809, 810, 811, 814, 816, 826, 827, 843, 848, 853, 866, 867, 869, 873, 874, 878, 879, 881, 882, 883, 884, 885, 890, 891, 893, 894, 895, 896, 897, 898, 902, 903, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 926, 927, 940, 944, 946, 949, 952, 956, 960, 970, 971, 977, 984, 1000, 1011, 1012, 1014, 1015, 1016, 1025, 1038, 1039, 1040, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1068, 1069, 1073, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1116, 1118, 1119, 1120, 1121, 1122, 1125, 1128, 1131, 1134, 1135, 1136, 1139, 1140, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1161, 1165, 1169, 1172, 1192, 1195, 1198, 1200, 1203, 1206, 1207, 1209, 1211, 1212, 1215, 1216, 1220, 1221, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1245, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1262, 1265, 1267, 1268, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1296, 1304, 1305, 1309, 1310, 1311, 1314, 1315, 1319, 1325, 1328, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1372, 1373, 1374, 1376, 1377, 1378, 1381, 1382, 1383, 1384, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1429, 1432, 1434, 1436, 1443, 1444, 1445, 1446, 1447, 1457, 1458, 1460, 1468, 1471, 1472, 1477, 1478, 1480, 1481, 1493, 1496, 1497, 1511, 1512, 1519, 1520, 1521, 1523, 1524, 1527, 1528, 1530, 1539, 1540, 1552, 1553, 1554, 1563, 1566, 1578, 1581, 1597, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1635, 1636, 1639, 1645, 1649, 1650, 1653, 1655, 1656, 1657, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1701, 1702, 1705, 1708, 1711, 1716, 1717, 1718, 1720, 1722, 1724, 1729, 1731, 1733, 1735, 1736, 1738, 1740, 1743, 1750, 1751, 1752, 1753, 1755, 1760, 1761, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1781, 1787, 1788, 1790, 1791, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 1807, 1808, 1809, 1813, 1814, 1823, 1829, 1830, 1831, 1833, 1834, 1837, 1838, 1839, 1840, 1847, 1848, 1851, 1853, 1854, 1855, 1857, 1859, 1862, 1866, 1868, 1869, 1870, 1872, 1873, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1958, 1959], "state": [0, 1, 2, 5, 9, 21, 24, 26, 28, 30, 32, 34, 41, 44, 45, 46, 48, 56, 78, 737, 749, 825, 948, 1000, 1001, 1005, 1010, 1014, 1024, 1039, 1040, 1125, 1134, 1147, 1195, 1198, 1211, 1268, 1308, 1315, 1381, 1382, 1399, 1400, 1429, 1444, 1446, 1476, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1718, 1761, 1788, 1851, 1867, 1879, 1890, 1891, 1894, 1895, 1896, 1900, 1904, 1907, 1910, 1912, 1914, 1922, 1936, 1941, 1943, 1944, 1945, 1946, 1952], "thread": [0, 1, 3, 21, 24, 26, 32, 43, 48, 55, 969, 971, 1003, 1072, 1145, 1146, 1170, 1307, 1366, 1654, 1757, 1758, 1759, 1850, 1867, 1868, 1881, 1890, 1894, 1901, 1904, 1923, 1925, 1935, 1943], "must": [0, 3, 5, 6, 9, 12, 14, 21, 24, 26, 28, 30, 31, 32, 39, 42, 43, 45, 46, 48, 51, 53, 55, 56, 57, 64, 65, 78, 87, 129, 143, 144, 186, 250, 303, 305, 311, 388, 390, 392, 502, 533, 534, 555, 572, 573, 574, 576, 577, 606, 675, 676, 677, 678, 679, 680, 686, 737, 746, 761, 762, 763, 782, 804, 806, 848, 849, 867, 873, 878, 879, 880, 881, 883, 889, 891, 893, 894, 895, 897, 898, 909, 911, 913, 914, 915, 916, 917, 918, 921, 925, 928, 949, 952, 960, 970, 971, 981, 982, 983, 985, 1011, 1012, 1014, 1056, 1058, 1059, 1060, 1062, 1065, 1066, 1068, 1089, 1090, 1091, 1096, 1098, 1099, 1100, 1101, 1102, 1109, 1110, 1119, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1148, 1157, 1158, 1161, 1172, 1192, 1195, 1206, 1211, 1218, 1221, 1250, 1251, 1252, 1253, 1259, 1261, 1262, 1265, 1266, 1268, 1282, 1286, 1288, 1289, 1290, 1296, 1303, 1319, 1325, 1328, 1329, 1333, 1346, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1372, 1373, 1376, 1377, 1378, 1383, 1384, 1390, 1422, 1429, 1432, 1433, 1435, 1460, 1466, 1481, 1501, 1510, 1512, 1520, 1539, 1552, 1553, 1554, 1572, 1609, 1632, 1642, 1643, 1649, 1651, 1656, 1691, 1693, 1700, 1701, 1704, 1705, 1708, 1716, 1717, 1738, 1747, 1750, 1759, 1775, 1786, 1790, 1791, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1809, 1814, 1824, 1828, 1829, 1833, 1838, 1840, 1844, 1848, 1851, 1856, 1857, 1859, 1860, 1862, 1868, 1869, 1870, 1871, 1878, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1900, 1904, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1918, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1934, 1941, 1942, 1944, 1946, 1947, 1949, 1955, 1956, 1957], "invok": [0, 2, 8, 15, 18, 21, 24, 39, 41, 42, 55, 56, 890, 892, 1011, 1012, 1195, 1198, 1205, 1366, 1429, 1602, 1604, 1607, 1608, 1653, 1687, 1693, 1868, 1871, 1872, 1879, 1890, 1893, 1894, 1895, 1896, 1897, 1901, 1902, 1915, 1923, 1924, 1941, 1945, 1946, 1947, 1949], "affect": [0, 1, 2, 7, 9, 18, 20, 31, 48, 211, 212, 774, 972, 974, 1072, 1119, 1142, 1170, 1195, 1310, 1311, 1399, 1429, 1444, 1481, 1597, 1610, 1654, 1751, 1754, 1755, 1757, 1890, 1891, 1894, 1899, 1902, 1905, 1906, 1929, 1952, 1954], "dataparallel": [0, 24, 1593, 1609, 1645, 1867, 1891, 1898, 1904, 1923], "parallel": [0, 13, 14, 21, 22, 24, 25, 26, 28, 41, 42, 48, 1145, 1146, 1198, 1366, 1435, 1468, 1528, 1609, 1758, 1759, 1867, 1871, 1890, 1891, 1893, 1904, 1908, 1923, 1925, 1940, 1946], "distributeddataparallel": [0, 21, 22, 24, 25, 28, 29, 42, 48, 1366, 1468, 1904, 1916, 1923, 1946], "than": [0, 3, 4, 5, 6, 8, 9, 11, 14, 21, 22, 24, 25, 26, 30, 31, 32, 34, 38, 41, 42, 43, 45, 48, 53, 56, 57, 58, 65, 140, 244, 488, 534, 606, 669, 682, 688, 768, 774, 882, 891, 892, 906, 912, 923, 930, 931, 935, 936, 983, 1021, 1025, 1038, 1056, 1057, 1108, 1109, 1110, 1112, 1116, 1121, 1132, 1139, 1151, 1155, 1169, 1180, 1192, 1193, 1196, 1207, 1216, 1217, 1220, 1225, 1226, 1232, 1236, 1241, 1249, 1250, 1252, 1253, 1256, 1261, 1267, 1271, 1284, 1287, 1293, 1296, 1298, 1301, 1314, 1319, 1329, 1345, 1346, 1357, 1358, 1359, 1366, 1372, 1373, 1390, 1399, 1421, 1435, 1443, 1460, 1466, 1476, 1477, 1478, 1493, 1503, 1504, 1505, 1519, 1520, 1528, 1539, 1565, 1578, 1596, 1597, 1600, 1609, 1616, 1617, 1618, 1619, 1645, 1650, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1693, 1695, 1709, 1710, 1731, 1732, 1755, 1760, 1794, 1795, 1796, 1797, 1799, 1800, 1830, 1838, 1840, 1848, 1866, 1868, 1870, 1871, 1873, 1885, 1886, 1887, 1889, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1906, 1907, 1912, 1914, 1915, 1916, 1918, 1919, 1923, 1927, 1928, 1930, 1932, 1933, 1934, 1941, 1942, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1954, 1956, 1958], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 38, 41, 43, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 62, 64, 65, 72, 73, 74, 75, 77, 140, 211, 244, 342, 392, 475, 502, 509, 534, 549, 686, 737, 746, 782, 843, 844, 845, 869, 875, 881, 882, 883, 884, 886, 892, 912, 923, 925, 935, 939, 943, 952, 967, 972, 974, 979, 981, 985, 1012, 1035, 1046, 1057, 1068, 1072, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1107, 1111, 1114, 1115, 1116, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1148, 1157, 1158, 1170, 1174, 1177, 1180, 1199, 1205, 1209, 1215, 1216, 1226, 1227, 1237, 1240, 1241, 1243, 1248, 1252, 1254, 1256, 1259, 1265, 1266, 1282, 1290, 1294, 1299, 1319, 1325, 1337, 1342, 1345, 1346, 1347, 1348, 1349, 1352, 1357, 1360, 1361, 1362, 1373, 1377, 1378, 1383, 1392, 1393, 1394, 1396, 1397, 1398, 1408, 1409, 1410, 1420, 1429, 1433, 1435, 1468, 1476, 1481, 1493, 1503, 1506, 1507, 1508, 1523, 1524, 1525, 1530, 1565, 1578, 1596, 1600, 1609, 1610, 1615, 1617, 1618, 1622, 1632, 1643, 1652, 1653, 1654, 1655, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1691, 1692, 1693, 1713, 1714, 1731, 1747, 1755, 1757, 1760, 1763, 1804, 1813, 1828, 1833, 1834, 1836, 1844, 1845, 1847, 1848, 1851, 1859, 1867, 1868, 1871, 1875, 1877, 1879, 1881, 1883, 1884, 1885, 1886, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1904, 1906, 1907, 1908, 1912, 1914, 1915, 1916, 1918, 1919, 1923, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1953, 1955, 1956, 1958], "gpu": [0, 1, 2, 3, 4, 7, 14, 17, 19, 21, 22, 26, 32, 42, 43, 48, 55, 186, 199, 279, 322, 592, 749, 941, 976, 977, 980, 981, 982, 983, 984, 985, 991, 992, 993, 1000, 1006, 1007, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1031, 1032, 1033, 1034, 1035, 1036, 1039, 1045, 1046, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1116, 1195, 1205, 1242, 1267, 1296, 1304, 1305, 1306, 1310, 1311, 1337, 1366, 1381, 1399, 1429, 1444, 1445, 1468, 1593, 1609, 1642, 1813, 1867, 1868, 1879, 1882, 1894, 1896, 1900, 1902, 1903, 1905, 1906, 1908, 1918, 1923, 1927, 1929, 1933, 1935, 1938, 1941, 1943, 1945, 1948, 1953, 1954, 1956, 1958], "per": [0, 14, 21, 22, 24, 25, 26, 28, 29, 31, 32, 34, 40, 42, 43, 48, 49, 54, 461, 462, 463, 723, 724, 790, 797, 808, 811, 814, 822, 834, 842, 881, 890, 892, 941, 975, 1051, 1082, 1126, 1136, 1268, 1345, 1346, 1347, 1348, 1349, 1363, 1365, 1366, 1373, 1384, 1389, 1392, 1393, 1394, 1395, 1396, 1401, 1420, 1421, 1429, 1432, 1433, 1434, 1435, 1436, 1443, 1460, 1461, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1500, 1501, 1511, 1540, 1563, 1571, 1609, 1653, 1657, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1687, 1693, 1701, 1713, 1760, 1762, 1814, 1830, 1834, 1851, 1859, 1881, 1885, 1887, 1893, 1894, 1895, 1897, 1901, 1916, 1918, 1919, 1921, 1924, 1927, 1932, 1944, 1958], "process": [0, 1, 3, 11, 14, 22, 24, 25, 26, 30, 32, 33, 34, 35, 41, 42, 43, 44, 45, 48, 56, 69, 70, 71, 74, 76, 971, 1007, 1013, 1038, 1195, 1206, 1268, 1305, 1314, 1345, 1346, 1363, 1365, 1372, 1373, 1389, 1396, 1420, 1421, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1468, 1472, 1474, 1476, 1477, 1500, 1501, 1511, 1540, 1563, 1571, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1690, 1696, 1762, 1776, 1851, 1866, 1867, 1868, 1881, 1883, 1884, 1885, 1891, 1893, 1894, 1895, 1896, 1901, 1902, 1904, 1906, 1908, 1910, 1912, 1915, 1916, 1917, 1918, 1921, 1923, 1925, 1927, 1929, 1936, 1940, 1944, 1946, 1949, 1954, 1956], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 14, 15, 17, 24, 25, 26, 28, 29, 30, 31, 32, 41, 42, 43, 44, 45, 48, 49, 53, 56, 57, 64, 65, 71, 109, 140, 342, 434, 435, 436, 437, 438, 475, 576, 577, 810, 850, 851, 882, 896, 941, 969, 971, 972, 974, 1003, 1014, 1015, 1035, 1069, 1071, 1088, 1108, 1109, 1110, 1125, 1195, 1199, 1207, 1208, 1231, 1232, 1259, 1260, 1268, 1307, 1366, 1426, 1429, 1445, 1462, 1566, 1584, 1609, 1663, 1693, 1720, 1724, 1726, 1752, 1758, 1824, 1827, 1851, 1866, 1868, 1871, 1872, 1882, 1883, 1884, 1885, 1886, 1889, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1904, 1907, 1908, 1912, 1915, 1916, 1918, 1921, 1923, 1924, 1933, 1935, 1942, 1943, 1944, 1947, 1948, 1949, 1952, 1953, 1956, 1957, 1958], "str": [0, 1, 2, 3, 5, 14, 21, 22, 24, 26, 28, 29, 30, 32, 35, 39, 41, 43, 45, 46, 48, 56, 311, 502, 506, 592, 768, 774, 781, 782, 783, 804, 805, 806, 843, 890, 892, 900, 904, 905, 929, 941, 947, 969, 970, 981, 982, 983, 985, 994, 995, 997, 998, 999, 1003, 1011, 1012, 1013, 1025, 1026, 1028, 1030, 1042, 1063, 1068, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1124, 1125, 1129, 1134, 1136, 1144, 1193, 1194, 1195, 1196, 1198, 1199, 1202, 1205, 1241, 1254, 1259, 1260, 1267, 1268, 1297, 1310, 1311, 1326, 1345, 1346, 1352, 1357, 1358, 1359, 1363, 1365, 1373, 1379, 1383, 1389, 1390, 1395, 1396, 1405, 1406, 1407, 1420, 1421, 1429, 1430, 1432, 1433, 1434, 1436, 1439, 1443, 1446, 1457, 1460, 1461, 1472, 1474, 1476, 1477, 1478, 1479, 1481, 1500, 1501, 1511, 1512, 1520, 1525, 1528, 1539, 1540, 1563, 1571, 1597, 1609, 1616, 1617, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1651, 1653, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1687, 1693, 1695, 1712, 1743, 1747, 1754, 1755, 1790, 1809, 1850, 1851, 1859, 1866, 1868, 1869, 1870, 1871, 1872, 1879, 1880, 1881, 1883, 1885, 1889, 1891, 1907, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1922, 1923, 1929, 1932, 1934, 1936, 1937, 1946, 1949, 1951, 1955, 1956, 1957, 1958], "possibl": [0, 2, 9, 14, 15, 18, 24, 26, 30, 45, 52, 53, 56, 486, 487, 569, 606, 847, 868, 869, 935, 941, 978, 1069, 1070, 1071, 1116, 1128, 1195, 1209, 1236, 1249, 1252, 1253, 1256, 1261, 1267, 1346, 1352, 1429, 1435, 1519, 1520, 1539, 1572, 1597, 1621, 1622, 1731, 1734, 1749, 1801, 1809, 1827, 1868, 1870, 1871, 1883, 1884, 1889, 1891, 1893, 1894, 1895, 1896, 1899, 1904, 1905, 1906, 1908, 1915, 1918, 1923, 1925, 1930, 1934, 1938, 1941, 1942, 1944, 1945, 1946, 1947, 1949, 1952, 1956], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 18, 21, 22, 25, 26, 28, 30, 32, 33, 35, 38, 39, 41, 42, 45, 46, 48, 50, 53, 55, 56, 57, 59, 62, 65, 67, 78, 91, 92, 93, 94, 109, 140, 144, 211, 225, 226, 227, 228, 244, 249, 250, 262, 263, 289, 301, 303, 305, 306, 307, 308, 309, 311, 313, 316, 342, 389, 390, 408, 409, 411, 412, 460, 470, 472, 488, 502, 504, 506, 526, 533, 549, 572, 573, 574, 576, 577, 588, 589, 669, 670, 673, 676, 677, 680, 684, 685, 686, 724, 745, 753, 759, 760, 768, 773, 774, 776, 782, 784, 785, 788, 791, 808, 809, 810, 811, 814, 815, 816, 843, 848, 854, 863, 864, 865, 869, 874, 878, 880, 882, 884, 885, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 910, 911, 912, 917, 919, 925, 929, 933, 934, 936, 946, 955, 956, 959, 972, 1002, 1011, 1012, 1025, 1038, 1047, 1048, 1051, 1059, 1060, 1069, 1070, 1071, 1073, 1082, 1083, 1085, 1087, 1089, 1090, 1091, 1096, 1098, 1099, 1100, 1101, 1102, 1111, 1116, 1122, 1124, 1125, 1126, 1127, 1131, 1132, 1134, 1135, 1137, 1139, 1143, 1144, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1165, 1180, 1185, 1186, 1187, 1188, 1191, 1192, 1193, 1195, 1196, 1198, 1202, 1203, 1211, 1214, 1216, 1217, 1220, 1224, 1225, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1238, 1239, 1240, 1241, 1245, 1248, 1250, 1252, 1253, 1255, 1259, 1260, 1265, 1266, 1267, 1268, 1271, 1276, 1282, 1284, 1285, 1288, 1293, 1295, 1296, 1298, 1301, 1314, 1317, 1319, 1323, 1324, 1325, 1326, 1329, 1330, 1333, 1337, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1371, 1372, 1373, 1374, 1376, 1383, 1384, 1385, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1443, 1457, 1460, 1462, 1463, 1464, 1465, 1466, 1468, 1471, 1472, 1474, 1476, 1477, 1478, 1480, 1481, 1500, 1501, 1503, 1504, 1505, 1510, 1511, 1520, 1521, 1525, 1528, 1530, 1539, 1540, 1541, 1552, 1553, 1554, 1563, 1564, 1565, 1566, 1568, 1571, 1578, 1591, 1592, 1597, 1599, 1600, 1602, 1604, 1607, 1608, 1609, 1614, 1616, 1617, 1618, 1619, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1635, 1636, 1642, 1645, 1646, 1649, 1651, 1655, 1656, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1687, 1693, 1701, 1705, 1708, 1712, 1714, 1715, 1727, 1729, 1731, 1732, 1733, 1738, 1739, 1740, 1747, 1750, 1760, 1763, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1781, 1785, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1809, 1813, 1814, 1824, 1828, 1831, 1834, 1837, 1838, 1839, 1840, 1842, 1845, 1846, 1847, 1848, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1872, 1878, 1880, 1881, 1883, 1886, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1906, 1907, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1921, 1922, 1923, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1941, 1943, 1944, 1946, 1949, 1950, 1951, 1955, 1956], "xpu": [0, 1195, 1429, 1917], "hpu": [0, 1929], "attribut": [0, 1, 11, 12, 21, 22, 24, 25, 31, 46, 56, 57, 70, 75, 140, 280, 484, 485, 716, 727, 728, 729, 730, 731, 732, 734, 735, 745, 753, 780, 791, 804, 805, 806, 827, 828, 829, 847, 848, 878, 882, 884, 888, 1119, 1192, 1194, 1195, 1196, 1198, 1199, 1201, 1206, 1207, 1268, 1366, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1429, 1472, 1609, 1610, 1620, 1621, 1622, 1643, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1809, 1849, 1852, 1867, 1869, 1872, 1886, 1890, 1891, 1894, 1896, 1897, 1902, 1907, 1912, 1915, 1918, 1923, 1933, 1934, 1946, 1949, 1955, 1957, 1959], "thu": [0, 1, 11, 21, 24, 30, 42, 45, 46, 48, 56, 774, 811, 814, 843, 1068, 1089, 1259, 1290, 1369, 1481, 1597, 1609, 1668, 1669, 1679, 1798, 1868, 1871, 1878, 1879, 1891, 1893, 1896, 1898, 1899, 1901, 1902, 1912, 1918, 1923, 1927, 1931, 1933, 1934], "obtain": [0, 3, 21, 24, 30, 34, 55, 56, 485, 907, 1140, 1314, 1352, 1436, 1512, 1609, 1672, 1678, 1701, 1718, 1814, 1871, 1883, 1884, 1893, 1906, 1912, 1914, 1917, 1918, 1954], "bool": [0, 1, 2, 3, 5, 12, 14, 21, 22, 24, 25, 26, 28, 29, 30, 32, 35, 41, 43, 45, 46, 48, 55, 56, 140, 186, 199, 235, 250, 309, 311, 318, 319, 320, 321, 323, 324, 329, 331, 434, 435, 436, 437, 438, 447, 460, 485, 506, 570, 592, 669, 682, 683, 684, 685, 686, 688, 724, 747, 768, 769, 774, 783, 803, 854, 862, 863, 864, 865, 869, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 910, 913, 915, 916, 918, 919, 925, 926, 932, 933, 934, 940, 941, 942, 952, 965, 971, 978, 1008, 1014, 1026, 1069, 1070, 1071, 1074, 1081, 1086, 1104, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1129, 1130, 1131, 1135, 1137, 1152, 1153, 1156, 1157, 1170, 1176, 1180, 1183, 1184, 1186, 1192, 1195, 1199, 1202, 1203, 1211, 1212, 1215, 1217, 1225, 1226, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1248, 1250, 1252, 1253, 1256, 1257, 1258, 1259, 1265, 1266, 1267, 1268, 1277, 1278, 1279, 1280, 1282, 1283, 1285, 1287, 1293, 1295, 1296, 1298, 1301, 1307, 1310, 1311, 1319, 1324, 1325, 1326, 1327, 1328, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1377, 1378, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1420, 1421, 1422, 1423, 1424, 1429, 1432, 1433, 1434, 1435, 1436, 1438, 1443, 1446, 1447, 1448, 1449, 1456, 1460, 1461, 1468, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1481, 1493, 1500, 1501, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1525, 1528, 1530, 1532, 1539, 1540, 1563, 1571, 1578, 1597, 1603, 1609, 1610, 1613, 1614, 1616, 1618, 1620, 1621, 1622, 1643, 1644, 1645, 1646, 1648, 1651, 1656, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1707, 1709, 1711, 1712, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1747, 1752, 1756, 1757, 1762, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1785, 1795, 1796, 1797, 1798, 1799, 1800, 1807, 1808, 1809, 1812, 1813, 1821, 1827, 1831, 1836, 1845, 1846, 1848, 1849, 1851, 1853, 1854, 1855, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1880, 1881, 1883, 1884, 1885, 1886, 1900, 1907, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1922, 1923, 1927, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1944, 1946, 1951, 1955, 1957], "option": [0, 1, 3, 5, 14, 21, 24, 28, 29, 30, 32, 35, 39, 40, 41, 43, 44, 45, 48, 56, 71, 73, 78, 140, 145, 160, 162, 165, 168, 169, 170, 185, 196, 199, 230, 257, 287, 315, 321, 383, 434, 435, 436, 437, 438, 476, 488, 489, 502, 509, 514, 526, 549, 569, 570, 572, 573, 574, 576, 577, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 724, 747, 768, 769, 774, 781, 783, 788, 807, 843, 848, 851, 854, 865, 867, 868, 869, 870, 871, 872, 873, 874, 881, 882, 890, 891, 892, 893, 894, 895, 896, 897, 898, 901, 902, 903, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 925, 928, 930, 931, 932, 933, 934, 936, 938, 939, 940, 941, 946, 947, 954, 955, 957, 958, 959, 960, 963, 967, 968, 969, 971, 972, 974, 976, 980, 981, 983, 984, 985, 988, 989, 996, 997, 1000, 1003, 1011, 1012, 1013, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1073, 1078, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1121, 1122, 1123, 1124, 1125, 1128, 1129, 1130, 1137, 1138, 1139, 1140, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1169, 1172, 1184, 1186, 1189, 1190, 1192, 1193, 1195, 1196, 1199, 1202, 1209, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1307, 1310, 1311, 1317, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1333, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1383, 1386, 1387, 1388, 1389, 1390, 1395, 1396, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1415, 1420, 1421, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1443, 1447, 1448, 1449, 1456, 1460, 1461, 1468, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1493, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1519, 1520, 1523, 1524, 1525, 1528, 1530, 1539, 1540, 1547, 1552, 1553, 1554, 1563, 1564, 1571, 1578, 1584, 1585, 1597, 1605, 1606, 1609, 1610, 1616, 1617, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1653, 1655, 1656, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1676, 1678, 1679, 1680, 1681, 1682, 1686, 1699, 1700, 1701, 1704, 1708, 1709, 1711, 1712, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731, 1732, 1733, 1740, 1742, 1747, 1760, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1781, 1785, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1813, 1814, 1824, 1825, 1826, 1827, 1828, 1831, 1833, 1836, 1837, 1838, 1839, 1840, 1842, 1845, 1846, 1848, 1853, 1854, 1855, 1856, 1861, 1862, 1864, 1865, 1866, 1868, 1869, 1871, 1873, 1875, 1877, 1879, 1880, 1881, 1886, 1889, 1894, 1896, 1897, 1898, 1901, 1902, 1906, 1907, 1910, 1912, 1915, 1917, 1918, 1923, 1927, 1928, 1930, 1932, 1934, 1937, 1938, 1946, 1949, 1953, 1955, 1956, 1958], "whether": [0, 1, 2, 7, 14, 21, 22, 24, 25, 26, 29, 30, 32, 40, 41, 48, 56, 77, 309, 311, 460, 506, 606, 669, 682, 684, 685, 688, 863, 864, 869, 878, 886, 889, 890, 892, 897, 898, 910, 919, 932, 933, 934, 940, 941, 942, 944, 946, 1010, 1026, 1124, 1136, 1152, 1153, 1170, 1192, 1195, 1203, 1204, 1212, 1217, 1225, 1226, 1232, 1234, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1250, 1252, 1253, 1256, 1257, 1258, 1259, 1267, 1283, 1285, 1293, 1295, 1296, 1298, 1301, 1319, 1324, 1325, 1326, 1327, 1352, 1389, 1395, 1429, 1438, 1443, 1478, 1490, 1491, 1492, 1512, 1540, 1571, 1603, 1609, 1616, 1618, 1621, 1634, 1648, 1651, 1656, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1687, 1699, 1709, 1712, 1756, 1757, 1807, 1808, 1809, 1812, 1813, 1831, 1836, 1845, 1846, 1848, 1849, 1854, 1855, 1859, 1866, 1871, 1877, 1878, 1880, 1886, 1890, 1894, 1896, 1900, 1910, 1912, 1916, 1918, 1923, 1927, 1929, 1931, 1932, 1937, 1943, 1946, 1949, 1956], "torch_dtyp": 0, "weight": [0, 21, 24, 30, 45, 46, 48, 54, 56, 57, 146, 291, 351, 352, 485, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 734, 735, 738, 740, 741, 742, 743, 745, 749, 750, 752, 753, 754, 761, 762, 763, 770, 781, 782, 783, 797, 798, 822, 824, 830, 834, 838, 839, 840, 841, 842, 847, 848, 850, 851, 912, 960, 1124, 1126, 1134, 1136, 1156, 1157, 1195, 1199, 1205, 1207, 1212, 1221, 1319, 1345, 1346, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1372, 1373, 1381, 1382, 1384, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1429, 1433, 1434, 1435, 1436, 1437, 1444, 1446, 1458, 1472, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1519, 1520, 1529, 1538, 1542, 1545, 1560, 1562, 1563, 1572, 1581, 1600, 1609, 1616, 1617, 1619, 1621, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1649, 1650, 1651, 1653, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1715, 1848, 1859, 1866, 1867, 1869, 1870, 1871, 1879, 1880, 1885, 1886, 1889, 1896, 1898, 1902, 1907, 1910, 1918, 1919, 1920, 1921, 1927, 1932, 1936, 1937, 1946, 1951], "cach": [0, 2, 3, 30, 56, 475, 941, 948, 993, 994, 1011, 1014, 1019, 1021, 1023, 1025, 1033, 1038, 1304, 1305, 1306, 1610, 1621, 1653, 1883, 1898, 1941, 1943, 1946, 1950, 1954, 1956, 1958], "insid": [0, 1, 7, 21, 41, 45, 46, 48, 53, 55, 56, 886, 887, 888, 889, 977, 1014, 1126, 1130, 1135, 1207, 1609, 1868, 1870, 1871, 1879, 1890, 1894, 1896, 1897, 1901, 1912, 1927, 1936, 1945, 1949, 1956], "custom_fwd": [0, 1890], "fwd": [0, 1950], "cast_input": [0, 1890], "helper": [0, 3, 5, 24, 52, 56, 1468, 1866, 1867, 1870, 1894, 1895, 1912, 1915, 1923, 1955, 1957], "subclass": [0, 1, 14, 21, 26, 30, 34, 53, 56, 129, 526, 878, 879, 880, 1193, 1196, 1206, 1429, 1610, 1623, 1628, 1649, 1868, 1871, 1872, 1878, 1890, 1902, 1912, 1923, 1927, 1943, 1946, 1949, 1957], "page": [0, 6, 7, 9, 21, 25, 42, 44, 1268, 1472, 1474, 1476, 1894, 1895, 1902, 1913, 1923, 1953], "incom": [0, 24, 43, 770, 808, 809, 810, 811, 814, 1350, 1416, 1499, 1545, 1883, 1891], "non": [0, 1, 3, 5, 14, 20, 22, 24, 25, 26, 29, 30, 32, 34, 41, 43, 44, 46, 48, 55, 57, 67, 74, 78, 140, 325, 477, 493, 502, 506, 534, 687, 723, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 754, 761, 762, 763, 827, 854, 866, 878, 880, 882, 887, 889, 897, 898, 912, 925, 928, 941, 953, 954, 959, 1025, 1114, 1115, 1121, 1125, 1130, 1136, 1172, 1195, 1198, 1208, 1211, 1212, 1231, 1232, 1239, 1243, 1244, 1257, 1259, 1268, 1278, 1285, 1290, 1295, 1319, 1324, 1325, 1329, 1342, 1343, 1344, 1358, 1359, 1361, 1362, 1365, 1375, 1381, 1398, 1399, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1432, 1434, 1436, 1444, 1446, 1460, 1511, 1530, 1558, 1563, 1605, 1606, 1609, 1655, 1682, 1704, 1747, 1748, 1763, 1775, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1829, 1845, 1859, 1866, 1867, 1868, 1870, 1871, 1873, 1883, 1886, 1889, 1892, 1896, 1897, 1898, 1902, 1906, 1912, 1916, 1917, 1922, 1923, 1925, 1927, 1928, 1930, 1931, 1932, 1934, 1941, 1944, 1945, 1946, 1947, 1954, 1955, 1957], "intern": [0, 3, 8, 9, 14, 21, 22, 24, 26, 30, 32, 38, 45, 48, 53, 56, 969, 1003, 1024, 1125, 1195, 1232, 1234, 1250, 1253, 1276, 1347, 1348, 1349, 1383, 1468, 1503, 1504, 1505, 1528, 1618, 1662, 1755, 1798, 1848, 1872, 1890, 1891, 1893, 1894, 1899, 1905, 1906, 1910, 1924, 1925, 1929, 1931, 1938, 1946, 1949, 1956], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 21, 24, 26, 28, 29, 30, 32, 34, 41, 42, 45, 46, 48, 49, 55, 56, 70, 78, 140, 199, 211, 475, 486, 487, 488, 730, 732, 770, 782, 784, 806, 848, 850, 851, 854, 868, 869, 879, 882, 883, 890, 891, 892, 897, 910, 919, 952, 963, 965, 969, 970, 971, 972, 974, 979, 980, 983, 984, 986, 987, 988, 989, 992, 993, 994, 996, 997, 1000, 1002, 1003, 1006, 1008, 1009, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1041, 1044, 1045, 1046, 1069, 1071, 1081, 1086, 1104, 1120, 1122, 1142, 1143, 1144, 1152, 1153, 1178, 1179, 1195, 1199, 1211, 1215, 1266, 1268, 1282, 1297, 1304, 1306, 1307, 1369, 1372, 1376, 1429, 1468, 1476, 1480, 1522, 1528, 1539, 1578, 1596, 1597, 1599, 1609, 1622, 1626, 1627, 1628, 1629, 1630, 1635, 1636, 1637, 1638, 1660, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1711, 1720, 1722, 1724, 1726, 1727, 1751, 1755, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1788, 1795, 1796, 1797, 1798, 1799, 1800, 1809, 1827, 1838, 1840, 1845, 1850, 1851, 1864, 1867, 1868, 1870, 1871, 1872, 1873, 1875, 1878, 1881, 1883, 1886, 1890, 1891, 1894, 1895, 1900, 1901, 1902, 1903, 1904, 1907, 1908, 1912, 1914, 1915, 1916, 1918, 1921, 1923, 1924, 1927, 1929, 1930, 1932, 1933, 1936, 1945, 1946, 1949, 1952, 1953, 1956, 1957, 1958], "outsid": [0, 5, 9, 21, 34, 45, 46, 48, 53, 57, 66, 67, 673, 784, 874, 1124, 1126, 1130, 1135, 1196, 1528, 1609, 1684, 1685, 1690, 1691, 1697, 1870, 1871, 1889, 1891, 1894, 1897, 1898, 1934, 1946, 1952], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 140, 186, 199, 245, 250, 325, 434, 435, 436, 437, 438, 462, 463, 477, 485, 487, 533, 569, 570, 592, 593, 607, 669, 678, 682, 684, 685, 686, 688, 724, 749, 768, 770, 774, 776, 780, 786, 827, 829, 836, 847, 853, 863, 864, 866, 878, 881, 882, 884, 886, 892, 897, 898, 911, 929, 932, 933, 934, 941, 943, 952, 953, 954, 955, 968, 971, 972, 974, 979, 1007, 1010, 1011, 1056, 1058, 1072, 1104, 1116, 1124, 1125, 1128, 1129, 1132, 1136, 1148, 1157, 1158, 1169, 1192, 1195, 1199, 1203, 1206, 1207, 1208, 1211, 1216, 1217, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1249, 1250, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1262, 1263, 1267, 1276, 1283, 1285, 1290, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1307, 1324, 1325, 1326, 1327, 1345, 1346, 1347, 1348, 1349, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1366, 1367, 1373, 1376, 1377, 1378, 1381, 1384, 1389, 1392, 1393, 1394, 1399, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1433, 1434, 1435, 1436, 1437, 1444, 1460, 1462, 1468, 1476, 1480, 1481, 1493, 1503, 1504, 1505, 1511, 1520, 1523, 1524, 1528, 1539, 1563, 1565, 1566, 1568, 1572, 1578, 1584, 1597, 1599, 1600, 1603, 1604, 1609, 1616, 1618, 1620, 1623, 1627, 1629, 1632, 1642, 1643, 1650, 1651, 1655, 1657, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1685, 1686, 1687, 1689, 1693, 1695, 1699, 1709, 1711, 1712, 1713, 1714, 1731, 1733, 1743, 1755, 1777, 1791, 1792, 1793, 1798, 1804, 1806, 1807, 1808, 1809, 1812, 1813, 1824, 1830, 1836, 1854, 1855, 1859, 1868, 1870, 1871, 1877, 1878, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1932, 1933, 1934, 1935, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1956], "effect": [0, 3, 7, 14, 21, 22, 24, 30, 43, 45, 46, 48, 53, 56, 57, 60, 186, 199, 592, 724, 768, 774, 1003, 1051, 1136, 1195, 1238, 1239, 1240, 1241, 1297, 1337, 1352, 1360, 1361, 1362, 1367, 1368, 1369, 1370, 1374, 1429, 1435, 1481, 1539, 1566, 1597, 1603, 1609, 1610, 1628, 1679, 1687, 1788, 1793, 1813, 1834, 1849, 1859, 1866, 1868, 1879, 1889, 1890, 1891, 1894, 1896, 1918, 1921, 1929, 1930, 1932, 1941, 1946], "custom_bwd": [0, 1890], "bwd": 0, "small": [0, 3, 7, 9, 21, 22, 24, 30, 41, 45, 854, 897, 898, 941, 982, 1025, 1258, 1259, 1271, 1273, 1337, 1364, 1438, 1443, 1457, 1477, 1481, 1510, 1564, 1571, 1609, 1684, 1690, 1699, 1813, 1868, 1870, 1871, 1894, 1896, 1898, 1902, 1905, 1907, 1912, 1915, 1918, 1919, 1927, 1928, 1934, 1941, 1944, 1945, 1946, 1947, 1950, 1954, 1956, 1958], "magnitud": [0, 955, 1653, 1763, 1889, 1890, 1894], "represent": [0, 3, 14, 21, 24, 26, 39, 45, 46, 56, 71, 470, 747, 815, 972, 1084, 1085, 1087, 1111, 1140, 1195, 1235, 1238, 1240, 1243, 1323, 1429, 1435, 1699, 1867, 1868, 1871, 1886, 1896, 1905, 1910, 1912, 1915, 1918, 1927, 1934, 1944, 1946, 1956, 1959], "These": [0, 1, 2, 3, 8, 14, 15, 21, 24, 25, 30, 49, 51, 54, 56, 783, 869, 960, 1068, 1132, 1192, 1195, 1238, 1303, 1337, 1429, 1600, 1617, 1867, 1868, 1869, 1870, 1871, 1881, 1884, 1885, 1887, 1890, 1891, 1894, 1895, 1896, 1902, 1905, 1907, 1912, 1915, 1921, 1923, 1924, 1930, 1935, 1941, 1943, 1944, 1946, 1949, 1952, 1956, 1957], "flush": [0, 1, 26, 45, 1025, 1206, 1743, 1756, 1905, 1932], "zero": [0, 1, 2, 22, 24, 25, 28, 30, 43, 46, 48, 53, 56, 140, 250, 305, 502, 504, 533, 534, 573, 574, 576, 577, 612, 668, 680, 687, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 749, 753, 757, 758, 761, 762, 763, 764, 766, 769, 770, 784, 788, 808, 809, 810, 811, 814, 819, 866, 875, 876, 877, 882, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 911, 912, 932, 933, 934, 939, 955, 959, 1014, 1025, 1029, 1030, 1059, 1063, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1116, 1121, 1124, 1132, 1154, 1155, 1158, 1180, 1192, 1195, 1207, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1268, 1276, 1277, 1278, 1279, 1280, 1285, 1286, 1319, 1323, 1327, 1341, 1342, 1343, 1344, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1381, 1382, 1384, 1397, 1398, 1399, 1400, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1435, 1438, 1441, 1442, 1443, 1444, 1446, 1466, 1480, 1481, 1484, 1485, 1486, 1495, 1496, 1497, 1506, 1507, 1508, 1510, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1528, 1549, 1550, 1564, 1565, 1566, 1578, 1626, 1627, 1628, 1629, 1644, 1651, 1655, 1659, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1699, 1711, 1713, 1714, 1715, 1731, 1740, 1750, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 1813, 1827, 1828, 1830, 1836, 1865, 1868, 1869, 1871, 1873, 1881, 1883, 1884, 1885, 1886, 1889, 1891, 1894, 1896, 1902, 1905, 1908, 1912, 1913, 1915, 1917, 1918, 1921, 1923, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1945], "underflow": [0, 1395, 1890], "updat": [0, 9, 11, 21, 22, 26, 28, 32, 41, 45, 48, 51, 52, 56, 76, 211, 477, 502, 504, 749, 788, 789, 813, 1124, 1133, 1195, 1232, 1347, 1348, 1349, 1366, 1372, 1373, 1381, 1392, 1393, 1394, 1429, 1430, 1439, 1468, 1519, 1520, 1617, 1621, 1651, 1665, 1671, 1676, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1866, 1868, 1879, 1890, 1891, 1894, 1895, 1896, 1902, 1904, 1907, 1908, 1912, 1913, 1914, 1916, 1918, 1923, 1924, 1925, 1932, 1941, 1955], "lost": [0, 32, 42, 44, 1366, 1425, 1426, 1427], "To": [0, 1, 2, 3, 4, 5, 6, 9, 14, 15, 21, 22, 24, 25, 28, 29, 30, 32, 33, 39, 40, 42, 43, 45, 46, 48, 53, 56, 69, 72, 73, 76, 325, 488, 546, 723, 883, 896, 938, 941, 970, 1015, 1035, 1056, 1058, 1068, 1096, 1098, 1102, 1113, 1195, 1196, 1198, 1199, 1206, 1207, 1241, 1263, 1268, 1296, 1337, 1346, 1369, 1395, 1425, 1426, 1427, 1429, 1482, 1483, 1501, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1653, 1693, 1701, 1712, 1751, 1755, 1759, 1798, 1814, 1866, 1868, 1870, 1871, 1875, 1883, 1884, 1885, 1887, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1907, 1912, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1933, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1954, 1955, 1956, 1958], "prevent": [0, 7, 8, 21, 22, 24, 25, 32, 48, 56, 488, 724, 888, 971, 1049, 1050, 1069, 1070, 1071, 1192, 1295, 1307, 1324, 1327, 1367, 1435, 1460, 1547, 1584, 1585, 1600, 1609, 1709, 1789, 1792, 1812, 1838, 1840, 1848, 1883, 1890, 1891, 1894, 1895, 1898, 1902, 1915, 1917, 1925, 1927, 1928, 1941, 1945, 1946, 1949], "multipli": [0, 24, 45, 303, 311, 412, 502, 674, 675, 676, 677, 678, 679, 680, 749, 768, 774, 775, 776, 909, 921, 1038, 1051, 1068, 1148, 1159, 1219, 1231, 1232, 1236, 1249, 1251, 1253, 1259, 1261, 1290, 1300, 1314, 1318, 1321, 1345, 1357, 1358, 1359, 1362, 1381, 1399, 1481, 1482, 1483, 1539, 1597, 1598, 1599, 1621, 1684, 1690, 1692, 1699, 1755, 1783, 1786, 1790, 1791, 1805, 1809, 1810, 1813, 1834, 1869, 1884, 1894, 1899, 1902, 1905, 1913, 1927, 1928, 1946], "factor": [0, 3, 22, 30, 56, 678, 679, 680, 788, 808, 909, 932, 1238, 1239, 1240, 1243, 1245, 1285, 1286, 1287, 1367, 1390, 1417, 1441, 1442, 1569, 1570, 1578, 1679, 1680, 1681, 1683, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1695, 1696, 1697, 1711, 1769, 1791, 1813, 1889, 1890, 1918, 1927, 1946], "flow": [0, 46, 57, 63, 65, 938, 952, 1208, 1211, 1493, 1528, 1609, 1867, 1868, 1889, 1891, 1894, 1896, 1907, 1909, 1912, 1925, 1941, 1942, 1944, 1946, 1949, 1954], "through": [0, 5, 7, 9, 15, 21, 24, 26, 30, 34, 45, 46, 48, 53, 55, 56, 57, 60, 62, 69, 485, 781, 829, 843, 850, 851, 888, 897, 898, 976, 1014, 1095, 1128, 1136, 1193, 1196, 1198, 1211, 1212, 1214, 1231, 1232, 1253, 1259, 1276, 1436, 1473, 1474, 1475, 1476, 1530, 1600, 1609, 1621, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1711, 1859, 1866, 1867, 1870, 1871, 1875, 1877, 1881, 1883, 1884, 1885, 1891, 1894, 1896, 1898, 1899, 1901, 1902, 1908, 1909, 1910, 1912, 1915, 1916, 1918, 1921, 1923, 1924, 1925, 1927, 1931, 1935, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1955, 1956, 1959], "word": [0, 1, 8, 24, 41, 42, 46, 51, 55, 56, 925, 1337, 1357, 1358, 1359, 1372, 1373, 1472, 1519, 1520, 1539, 1597, 1609, 1616, 1747, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1870, 1891, 1898, 1915, 1924], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 21, 24, 25, 26, 28, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 56, 57, 64, 65, 74, 143, 144, 211, 212, 303, 305, 311, 325, 388, 392, 437, 447, 460, 475, 476, 477, 492, 502, 504, 506, 509, 533, 606, 669, 678, 682, 684, 685, 686, 688, 804, 806, 830, 869, 878, 882, 890, 892, 902, 903, 910, 911, 919, 928, 929, 941, 944, 952, 960, 974, 983, 984, 1014, 1025, 1059, 1067, 1074, 1088, 1098, 1103, 1105, 1119, 1124, 1125, 1136, 1137, 1138, 1152, 1153, 1156, 1157, 1169, 1170, 1192, 1194, 1195, 1198, 1199, 1201, 1203, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1217, 1218, 1227, 1231, 1232, 1248, 1255, 1256, 1259, 1261, 1267, 1276, 1278, 1283, 1290, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1319, 1324, 1325, 1327, 1329, 1337, 1341, 1345, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1366, 1372, 1373, 1377, 1378, 1383, 1388, 1392, 1393, 1394, 1421, 1429, 1432, 1433, 1434, 1435, 1436, 1476, 1478, 1510, 1519, 1520, 1523, 1524, 1528, 1545, 1563, 1565, 1568, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1613, 1614, 1616, 1618, 1621, 1645, 1649, 1654, 1656, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1709, 1735, 1736, 1750, 1755, 1763, 1786, 1790, 1794, 1795, 1796, 1797, 1799, 1800, 1807, 1808, 1809, 1812, 1813, 1824, 1828, 1834, 1836, 1848, 1851, 1854, 1855, 1857, 1859, 1861, 1866, 1868, 1869, 1870, 1871, 1873, 1875, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1953, 1955, 1956, 1957, 1958], "larger": [0, 9, 24, 30, 56, 244, 488, 898, 912, 1025, 1125, 1250, 1253, 1337, 1366, 1372, 1373, 1421, 1478, 1481, 1519, 1520, 1891, 1894, 1898, 1899, 1901, 1905, 1907, 1927, 1932, 1949, 1950, 1953, 1954, 1955], "thei": [0, 1, 3, 5, 7, 9, 11, 12, 17, 18, 21, 24, 26, 30, 31, 41, 45, 46, 48, 51, 52, 55, 56, 74, 311, 325, 326, 675, 678, 679, 686, 789, 804, 805, 806, 813, 830, 843, 848, 879, 888, 898, 909, 941, 1014, 1072, 1119, 1124, 1134, 1170, 1184, 1185, 1192, 1195, 1203, 1208, 1217, 1231, 1232, 1238, 1259, 1267, 1289, 1293, 1296, 1298, 1301, 1319, 1342, 1343, 1344, 1360, 1361, 1362, 1376, 1414, 1422, 1423, 1424, 1429, 1435, 1445, 1457, 1480, 1528, 1530, 1600, 1609, 1610, 1613, 1616, 1618, 1619, 1642, 1645, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1689, 1692, 1751, 1757, 1809, 1813, 1848, 1849, 1853, 1866, 1868, 1870, 1871, 1873, 1875, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1887, 1889, 1890, 1891, 1894, 1895, 1896, 1897, 1900, 1902, 1904, 1905, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1918, 1923, 1927, 1932, 1934, 1935, 1936, 1941, 1944, 1945, 1946, 1947, 1948, 1956, 1957], "don": [0, 1, 4, 7, 9, 11, 24, 40, 49, 51, 53, 56, 57, 66, 67, 140, 774, 784, 882, 883, 896, 1042, 1124, 1211, 1289, 1392, 1393, 1394, 1481, 1597, 1600, 1609, 1657, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1754, 1866, 1868, 1872, 1883, 1884, 1885, 1891, 1894, 1896, 1898, 1902, 1904, 1908, 1912, 1914, 1915, 1916, 1918, 1923, 1924, 1927, 1943, 1944, 1945, 1946, 1947, 1949, 1957], "t": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 21, 22, 24, 26, 30, 31, 34, 38, 40, 41, 45, 46, 49, 51, 53, 54, 55, 56, 57, 59, 66, 67, 71, 74, 140, 303, 305, 311, 447, 512, 526, 560, 676, 677, 686, 749, 770, 774, 784, 812, 815, 866, 867, 868, 869, 878, 880, 882, 883, 886, 888, 891, 896, 932, 933, 934, 939, 952, 960, 969, 972, 993, 1011, 1012, 1042, 1066, 1084, 1089, 1090, 1091, 1092, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1119, 1120, 1121, 1124, 1125, 1126, 1136, 1137, 1148, 1158, 1192, 1193, 1195, 1196, 1198, 1202, 1203, 1207, 1209, 1211, 1214, 1216, 1225, 1226, 1232, 1234, 1235, 1238, 1245, 1253, 1254, 1259, 1267, 1268, 1276, 1289, 1302, 1303, 1317, 1326, 1346, 1350, 1352, 1357, 1358, 1359, 1366, 1372, 1373, 1381, 1390, 1392, 1393, 1394, 1395, 1399, 1416, 1429, 1444, 1460, 1462, 1472, 1480, 1481, 1499, 1503, 1504, 1505, 1512, 1519, 1520, 1540, 1545, 1564, 1584, 1597, 1600, 1603, 1604, 1609, 1610, 1616, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1643, 1645, 1646, 1657, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1685, 1695, 1701, 1707, 1711, 1728, 1753, 1754, 1763, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1786, 1790, 1809, 1813, 1814, 1824, 1827, 1833, 1836, 1859, 1860, 1866, 1868, 1869, 1870, 1872, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1901, 1902, 1904, 1907, 1908, 1912, 1913, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1943, 1944, 1945, 1947, 1949, 1951, 1954, 1956, 1957], "grad": [0, 1, 5, 24, 30, 49, 52, 53, 56, 140, 325, 447, 476, 477, 484, 485, 492, 493, 570, 869, 878, 882, 883, 889, 890, 892, 897, 898, 902, 903, 1014, 1072, 1124, 1125, 1127, 1131, 1135, 1136, 1170, 1178, 1195, 1268, 1429, 1609, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1757, 1790, 1848, 1859, 1867, 1868, 1869, 1884, 1885, 1886, 1890, 1895, 1896, 1897, 1899, 1902, 1904, 1913, 1923, 1924, 1927, 1933, 1952], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 14, 24, 28, 29, 30, 32, 34, 38, 40, 41, 43, 45, 46, 48, 51, 52, 53, 55, 56, 57, 140, 244, 325, 424, 447, 572, 606, 669, 684, 685, 737, 746, 749, 779, 783, 850, 869, 921, 1005, 1009, 1059, 1068, 1072, 1121, 1124, 1136, 1169, 1194, 1196, 1199, 1206, 1211, 1221, 1226, 1238, 1239, 1243, 1244, 1251, 1257, 1259, 1265, 1268, 1285, 1289, 1290, 1296, 1300, 1304, 1321, 1347, 1348, 1349, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1369, 1372, 1373, 1376, 1381, 1382, 1392, 1393, 1394, 1399, 1400, 1402, 1403, 1404, 1411, 1412, 1413, 1423, 1424, 1430, 1436, 1439, 1444, 1446, 1468, 1480, 1511, 1563, 1609, 1610, 1618, 1621, 1625, 1651, 1654, 1656, 1661, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1696, 1700, 1705, 1747, 1750, 1751, 1755, 1757, 1781, 1786, 1813, 1833, 1836, 1848, 1849, 1859, 1865, 1866, 1867, 1868, 1870, 1871, 1873, 1879, 1883, 1884, 1885, 1886, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1902, 1904, 1905, 1906, 1909, 1910, 1912, 1915, 1916, 1918, 1923, 1925, 1927, 1930, 1934, 1941, 1944, 1949, 1956, 1958], "interfer": [0, 1881, 1894, 1912, 1946], "learn": [0, 7, 8, 15, 30, 40, 45, 48, 56, 76, 1350, 1363, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1389, 1401, 1414, 1416, 1437, 1458, 1472, 1474, 1476, 1477, 1478, 1581, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1867, 1875, 1887, 1889, 1894, 1900, 1902, 1903, 1909, 1915, 1918, 1923, 1925, 1938, 1940, 1942, 1944, 1949], "rate": [0, 8, 22, 30, 48, 1368, 1369, 1370, 1374, 1475, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1704, 1867, 1901, 1932, 1946, 1953], "fp16": [0, 2, 718, 1609, 1918, 1919], "everi": [0, 1, 2, 8, 9, 21, 22, 24, 26, 28, 30, 32, 46, 48, 53, 56, 470, 476, 599, 669, 770, 808, 886, 902, 903, 941, 1051, 1068, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1125, 1148, 1157, 1195, 1227, 1241, 1251, 1254, 1285, 1341, 1367, 1368, 1369, 1370, 1374, 1422, 1429, 1462, 1464, 1468, 1514, 1515, 1516, 1521, 1552, 1553, 1554, 1568, 1585, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1617, 1650, 1653, 1654, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1751, 1813, 1846, 1871, 1877, 1881, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1903, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1929, 1930, 1932, 1934, 1944, 1945, 1949, 1953, 1954, 1955, 1956], "most": [0, 1, 3, 4, 7, 8, 15, 21, 24, 26, 28, 30, 31, 32, 33, 40, 41, 43, 44, 48, 53, 54, 55, 56, 57, 488, 782, 886, 887, 888, 893, 897, 906, 941, 1037, 1051, 1068, 1125, 1170, 1180, 1193, 1196, 1301, 1337, 1476, 1528, 1578, 1609, 1621, 1676, 1755, 1788, 1834, 1866, 1868, 1870, 1871, 1873, 1878, 1883, 1885, 1886, 1891, 1894, 1896, 1904, 1905, 1906, 1910, 1914, 1917, 1918, 1924, 1925, 1927, 1930, 1932, 1934, 1938, 1940, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1956], "bf16": [0, 2], "pretrain": [0, 851, 1372, 1373, 1866, 1891, 1912], "cannot": [0, 3, 8, 9, 12, 21, 22, 24, 30, 31, 34, 41, 45, 48, 49, 53, 54, 55, 56, 57, 212, 244, 513, 534, 869, 952, 1089, 1091, 1099, 1100, 1101, 1107, 1124, 1192, 1200, 1319, 1352, 1372, 1481, 1512, 1578, 1609, 1662, 1814, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1881, 1885, 1886, 1891, 1895, 1896, 1907, 1908, 1912, 1918, 1923, 1925, 1927, 1929, 1930, 1941, 1946, 1947, 1957], "numer": [0, 21, 30, 46, 49, 54, 676, 782, 897, 898, 925, 1199, 1211, 1212, 1227, 1231, 1232, 1236, 1241, 1249, 1250, 1253, 1256, 1259, 1261, 1283, 1285, 1346, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1462, 1465, 1468, 1477, 1519, 1540, 1547, 1578, 1584, 1586, 1617, 1650, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1715, 1747, 1813, 1867, 1871, 1872, 1876, 1879, 1894, 1896, 1897, 1912, 1918, 1928, 1933, 1946, 1956, 1959], "max": [0, 21, 24, 32, 34, 40, 41, 43, 45, 48, 56, 57, 66, 67, 106, 175, 176, 177, 178, 290, 684, 685, 686, 747, 759, 760, 769, 771, 772, 791, 808, 809, 810, 811, 814, 863, 912, 929, 936, 937, 941, 960, 1047, 1082, 1083, 1155, 1207, 1227, 1241, 1248, 1250, 1252, 1253, 1265, 1338, 1339, 1340, 1351, 1352, 1363, 1364, 1373, 1377, 1378, 1383, 1388, 1389, 1397, 1398, 1415, 1417, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1432, 1433, 1434, 1437, 1448, 1449, 1456, 1477, 1478, 1480, 1490, 1491, 1492, 1502, 1510, 1520, 1523, 1524, 1539, 1543, 1552, 1553, 1554, 1564, 1568, 1572, 1574, 1579, 1597, 1613, 1645, 1668, 1669, 1670, 1680, 1685, 1686, 1695, 1716, 1717, 1790, 1807, 1808, 1819, 1820, 1848, 1854, 1855, 1868, 1869, 1878, 1881, 1886, 1892, 1894, 1898, 1913, 1918, 1921, 1945, 1950, 1951, 1959], "65504": 0, "overflow": [0, 1049, 1050, 1295, 1324, 1327, 1547, 1584, 1585, 1709, 1740, 1789, 1792, 1812, 1838, 1840, 1894, 1905, 1928], "instead": [0, 1, 3, 5, 8, 9, 14, 21, 22, 24, 26, 29, 30, 32, 38, 41, 42, 45, 46, 48, 51, 52, 53, 56, 57, 59, 65, 211, 396, 447, 488, 502, 737, 746, 757, 758, 782, 806, 815, 869, 879, 890, 891, 892, 893, 896, 897, 925, 931, 1103, 1105, 1129, 1130, 1131, 1132, 1135, 1136, 1141, 1182, 1193, 1195, 1196, 1200, 1225, 1226, 1232, 1234, 1250, 1253, 1259, 1265, 1267, 1296, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1365, 1366, 1368, 1369, 1370, 1374, 1381, 1389, 1395, 1396, 1397, 1398, 1399, 1420, 1421, 1422, 1423, 1424, 1429, 1432, 1433, 1434, 1436, 1443, 1444, 1456, 1460, 1461, 1462, 1468, 1477, 1495, 1496, 1497, 1500, 1501, 1511, 1521, 1528, 1540, 1552, 1553, 1554, 1563, 1571, 1584, 1609, 1651, 1653, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1687, 1693, 1716, 1717, 1727, 1747, 1751, 1794, 1809, 1813, 1848, 1859, 1868, 1870, 1871, 1878, 1885, 1889, 1890, 1891, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1917, 1918, 1921, 1924, 1927, 1934, 1935, 1937, 1941, 1942, 1944, 1945, 1946, 1949, 1952, 1955, 1956, 1957], "case": [0, 1, 3, 4, 8, 9, 11, 14, 15, 21, 22, 24, 26, 28, 30, 32, 33, 34, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 74, 140, 144, 186, 342, 485, 488, 669, 749, 773, 780, 783, 809, 810, 812, 815, 847, 854, 882, 890, 892, 896, 910, 912, 917, 955, 968, 993, 1015, 1016, 1035, 1036, 1037, 1068, 1089, 1091, 1099, 1100, 1101, 1116, 1126, 1130, 1135, 1154, 1180, 1193, 1196, 1205, 1208, 1209, 1211, 1225, 1227, 1231, 1232, 1236, 1241, 1242, 1243, 1245, 1251, 1254, 1259, 1261, 1265, 1267, 1268, 1273, 1276, 1285, 1296, 1319, 1337, 1342, 1343, 1344, 1345, 1346, 1357, 1358, 1359, 1361, 1362, 1363, 1365, 1368, 1369, 1370, 1371, 1373, 1374, 1376, 1385, 1386, 1387, 1388, 1389, 1390, 1396, 1397, 1398, 1415, 1420, 1422, 1423, 1424, 1435, 1436, 1437, 1447, 1460, 1466, 1471, 1476, 1478, 1480, 1493, 1511, 1520, 1528, 1532, 1533, 1563, 1565, 1572, 1609, 1611, 1612, 1616, 1618, 1621, 1622, 1655, 1656, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1693, 1731, 1734, 1747, 1749, 1763, 1766, 1798, 1813, 1814, 1844, 1845, 1848, 1862, 1866, 1871, 1876, 1883, 1884, 1885, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1907, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1938, 1944, 1945, 1946, 1947, 1949, 1952, 1954, 1955, 1956, 1957, 1959], "decreas": [0, 30, 1025, 1241, 1368, 1369, 1370, 1374, 1442, 1643, 1644, 1680, 1687, 1695, 1877, 1879, 1904, 1906, 1927, 1930], "attempt": [0, 1, 8, 14, 24, 41, 42, 48, 53, 75, 935, 941, 944, 956, 1199, 1206, 1285, 1578, 1611, 1612, 1668, 1669, 1848, 1851, 1868, 1871, 1884, 1885, 1890, 1894, 1896, 1908, 1909, 1914, 1915, 1923, 1944, 1945, 1946, 1956], "bring": [0, 49, 56, 1089, 1493, 1528, 1916, 1950, 1953], "number": [0, 1, 2, 3, 4, 5, 7, 14, 21, 22, 24, 28, 29, 30, 32, 39, 40, 41, 44, 45, 49, 51, 54, 56, 57, 62, 75, 78, 144, 163, 208, 222, 244, 303, 342, 367, 388, 392, 424, 435, 460, 462, 463, 470, 482, 486, 488, 502, 504, 506, 532, 534, 535, 547, 572, 573, 574, 576, 577, 578, 597, 606, 674, 675, 676, 677, 678, 679, 680, 687, 747, 749, 757, 758, 761, 762, 763, 770, 808, 854, 866, 879, 897, 909, 911, 912, 917, 921, 923, 927, 935, 936, 940, 955, 959, 960, 964, 974, 976, 982, 991, 1000, 1001, 1012, 1014, 1015, 1016, 1025, 1035, 1036, 1039, 1040, 1060, 1063, 1065, 1068, 1069, 1073, 1081, 1111, 1113, 1116, 1121, 1123, 1137, 1139, 1145, 1146, 1147, 1151, 1155, 1156, 1157, 1169, 1171, 1192, 1193, 1195, 1209, 1216, 1219, 1220, 1227, 1241, 1250, 1259, 1263, 1268, 1273, 1284, 1288, 1296, 1308, 1309, 1313, 1315, 1318, 1319, 1323, 1327, 1330, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1351, 1352, 1353, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1395, 1396, 1399, 1400, 1405, 1406, 1407, 1408, 1409, 1410, 1415, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1443, 1444, 1446, 1447, 1448, 1449, 1456, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1495, 1496, 1497, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1519, 1520, 1523, 1524, 1529, 1539, 1540, 1542, 1545, 1552, 1553, 1554, 1563, 1565, 1571, 1572, 1578, 1600, 1609, 1617, 1621, 1626, 1627, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1642, 1643, 1644, 1646, 1650, 1655, 1656, 1657, 1659, 1660, 1663, 1671, 1684, 1685, 1686, 1687, 1690, 1691, 1693, 1694, 1695, 1701, 1704, 1708, 1718, 1720, 1721, 1722, 1724, 1725, 1726, 1731, 1733, 1734, 1737, 1738, 1739, 1740, 1748, 1752, 1755, 1756, 1758, 1759, 1760, 1761, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1786, 1791, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1805, 1806, 1807, 1808, 1809, 1810, 1814, 1828, 1829, 1830, 1838, 1840, 1845, 1846, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1867, 1869, 1870, 1871, 1872, 1873, 1878, 1881, 1883, 1886, 1889, 1892, 1894, 1896, 1899, 1902, 1904, 1905, 1907, 1912, 1914, 1915, 1916, 1917, 1919, 1922, 1923, 1924, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1941, 1944, 1945, 1946, 1953, 1956, 1958, 1959], "expect": [0, 1, 3, 5, 7, 9, 12, 21, 22, 24, 26, 28, 32, 39, 41, 43, 45, 46, 48, 53, 54, 56, 70, 669, 686, 749, 843, 890, 891, 892, 893, 894, 895, 1014, 1089, 1091, 1108, 1109, 1110, 1129, 1130, 1169, 1192, 1195, 1211, 1212, 1240, 1261, 1262, 1296, 1348, 1349, 1365, 1381, 1382, 1383, 1384, 1393, 1394, 1395, 1399, 1400, 1401, 1411, 1412, 1413, 1429, 1435, 1436, 1444, 1446, 1462, 1468, 1472, 1474, 1476, 1481, 1519, 1525, 1539, 1563, 1571, 1572, 1584, 1597, 1598, 1599, 1600, 1609, 1643, 1696, 1752, 1822, 1857, 1866, 1867, 1873, 1891, 1895, 1898, 1899, 1902, 1912, 1914, 1915, 1918, 1919, 1920, 1923, 1927, 1932, 1934, 1942, 1945, 1946, 1950, 1952], "alwai": [0, 5, 7, 14, 17, 21, 22, 24, 39, 43, 45, 46, 48, 52, 56, 330, 437, 447, 783, 869, 887, 890, 896, 910, 919, 929, 935, 941, 964, 1014, 1025, 1055, 1063, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1101, 1102, 1104, 1107, 1111, 1152, 1153, 1195, 1206, 1211, 1226, 1231, 1232, 1233, 1234, 1236, 1237, 1249, 1252, 1253, 1254, 1255, 1259, 1261, 1325, 1345, 1347, 1348, 1349, 1366, 1392, 1393, 1394, 1402, 1403, 1404, 1411, 1412, 1413, 1429, 1465, 1468, 1600, 1609, 1642, 1735, 1736, 1762, 1809, 1813, 1845, 1848, 1871, 1872, 1883, 1886, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1901, 1902, 1915, 1916, 1922, 1923, 1925, 1927, 1930, 1933, 1934, 1941, 1944, 1945], "abov": [0, 1, 3, 12, 15, 24, 30, 34, 41, 43, 45, 46, 48, 49, 54, 56, 57, 59, 72, 606, 669, 781, 782, 869, 910, 919, 1025, 1051, 1055, 1056, 1057, 1058, 1059, 1068, 1140, 1152, 1153, 1195, 1196, 1216, 1227, 1231, 1232, 1250, 1252, 1253, 1256, 1259, 1262, 1265, 1268, 1345, 1376, 1429, 1457, 1465, 1480, 1578, 1600, 1657, 1687, 1711, 1722, 1723, 1755, 1760, 1773, 1793, 1834, 1837, 1838, 1839, 1840, 1866, 1868, 1870, 1871, 1878, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1902, 1904, 1906, 1907, 1910, 1912, 1915, 1918, 1923, 1924, 1925, 1927, 1928, 1934, 1938, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1956], "our": [0, 3, 7, 8, 24, 37, 40, 41, 42, 44, 52, 53, 54, 56, 886, 1088, 1125, 1345, 1668, 1669, 1755, 1891, 1896, 1899, 1904, 1909, 1912, 1914, 1918, 1924, 1927, 1938, 1941, 1944, 1945, 1946, 1948, 1949, 1950, 1955, 1956], "NOT": [0, 21, 24, 32, 41, 42, 43, 45, 56, 915, 969, 1003, 1195, 1278, 1369, 1609, 1610, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639, 1654, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1891, 1910, 1925, 1927], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 21, 22, 24, 26, 27, 29, 30, 32, 33, 38, 41, 42, 43, 44, 45, 52, 53, 56, 57, 67, 129, 212, 485, 768, 774, 850, 851, 882, 932, 971, 972, 974, 1056, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1108, 1109, 1110, 1195, 1199, 1205, 1206, 1225, 1226, 1238, 1239, 1240, 1268, 1307, 1345, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1390, 1429, 1439, 1476, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1528, 1530, 1539, 1578, 1597, 1609, 1616, 1632, 1649, 1689, 1752, 1785, 1795, 1796, 1797, 1799, 1800, 1831, 1848, 1851, 1866, 1868, 1870, 1871, 1875, 1881, 1883, 1884, 1886, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1904, 1906, 1908, 1912, 1914, 1915, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1930, 1932, 1936, 1938, 1943, 1944, 1945, 1946, 1948, 1950, 1952, 1955, 1956, 1957], "guarante": [0, 1, 5, 9, 21, 24, 26, 28, 30, 41, 43, 45, 46, 53, 55, 56, 57, 865, 941, 1195, 1205, 1366, 1429, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1785, 1787, 1848, 1891, 1893, 1894, 1905, 1906, 1915, 1917, 1919, 1923, 1925, 1944], "encount": [0, 5, 24, 45, 53, 55, 56, 669, 1609, 1868, 1871, 1873, 1877, 1893, 1905, 1915, 1918, 1942, 1946, 1949, 1952, 1954, 1956], "nan": [0, 1, 30, 416, 417, 488, 673, 675, 678, 679, 680, 683, 686, 687, 870, 874, 909, 925, 1069, 1070, 1071, 1114, 1115, 1116, 1155, 1184, 1185, 1187, 1188, 1235, 1242, 1255, 1258, 1271, 1276, 1294, 1295, 1299, 1323, 1324, 1325, 1326, 1327, 1528, 1613, 1705, 1742, 1747, 1802, 1836, 1848, 1869, 1878, 1890, 1891, 1897, 1905, 1928, 1934], "verifi": [0, 24, 56, 77, 897, 1051, 1663, 1664, 1682, 1834, 1866, 1868, 1880, 1896, 1899, 1912, 1916, 1948], "compat": [0, 1, 14, 21, 26, 30, 32, 45, 48, 52, 53, 56, 57, 486, 487, 592, 606, 669, 804, 805, 806, 879, 922, 953, 954, 1195, 1200, 1213, 1226, 1237, 1250, 1253, 1429, 1435, 1472, 1473, 1474, 1475, 1476, 1539, 1653, 1662, 1734, 1866, 1867, 1870, 1871, 1877, 1883, 1884, 1890, 1896, 1907, 1910, 1915, 1917, 1918, 1921, 1923, 1927, 1929, 1935], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 12, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 144, 146, 163, 174, 181, 198, 214, 215, 216, 217, 218, 223, 244, 250, 253, 279, 288, 290, 301, 303, 305, 307, 311, 342, 391, 392, 416, 417, 434, 437, 438, 443, 470, 472, 476, 477, 485, 496, 497, 502, 504, 506, 509, 527, 532, 533, 536, 545, 547, 549, 567, 569, 570, 572, 573, 574, 576, 577, 578, 584, 585, 586, 587, 594, 596, 597, 606, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 740, 741, 742, 744, 745, 746, 747, 749, 757, 758, 759, 761, 762, 763, 764, 767, 769, 771, 772, 774, 783, 785, 788, 791, 806, 809, 810, 811, 814, 843, 845, 854, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 887, 890, 891, 892, 894, 897, 898, 900, 902, 903, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 925, 928, 929, 930, 931, 932, 933, 935, 936, 939, 950, 951, 952, 955, 956, 957, 958, 959, 960, 968, 974, 983, 985, 1011, 1012, 1038, 1042, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1066, 1068, 1070, 1071, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1127, 1128, 1129, 1130, 1134, 1135, 1136, 1137, 1138, 1148, 1152, 1154, 1155, 1156, 1157, 1158, 1161, 1165, 1169, 1172, 1180, 1191, 1192, 1193, 1195, 1199, 1201, 1202, 1203, 1207, 1215, 1216, 1217, 1218, 1219, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1285, 1289, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1302, 1303, 1314, 1317, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1336, 1337, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1381, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1417, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1460, 1462, 1463, 1464, 1466, 1468, 1471, 1472, 1474, 1476, 1477, 1478, 1480, 1481, 1484, 1485, 1486, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1528, 1531, 1532, 1533, 1536, 1537, 1538, 1539, 1543, 1544, 1546, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1563, 1564, 1565, 1566, 1567, 1568, 1571, 1572, 1574, 1578, 1579, 1582, 1584, 1587, 1593, 1594, 1595, 1596, 1597, 1600, 1609, 1613, 1616, 1617, 1621, 1626, 1627, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1642, 1643, 1645, 1646, 1648, 1649, 1650, 1651, 1653, 1655, 1656, 1657, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1702, 1704, 1705, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1737, 1738, 1739, 1740, 1742, 1743, 1747, 1749, 1750, 1751, 1754, 1756, 1760, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1781, 1785, 1787, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1808, 1809, 1810, 1812, 1813, 1815, 1816, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1845, 1846, 1847, 1850, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1878, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1924, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1950, 1951, 1954, 1955, 1957, 1959], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 12, 14, 18, 19, 21, 22, 24, 30, 39, 45, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 144, 181, 198, 223, 250, 279, 288, 303, 305, 307, 311, 391, 392, 434, 460, 488, 502, 504, 506, 512, 526, 533, 547, 549, 573, 574, 575, 576, 577, 596, 674, 675, 679, 686, 723, 728, 729, 730, 731, 732, 734, 735, 749, 751, 762, 763, 850, 851, 854, 869, 875, 876, 877, 890, 893, 895, 909, 912, 919, 920, 921, 925, 927, 931, 933, 934, 935, 936, 939, 955, 959, 1047, 1049, 1051, 1058, 1060, 1062, 1063, 1066, 1067, 1068, 1071, 1084, 1086, 1088, 1089, 1095, 1096, 1099, 1104, 1107, 1108, 1111, 1114, 1116, 1117, 1118, 1126, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1138, 1148, 1154, 1156, 1158, 1160, 1161, 1172, 1180, 1184, 1202, 1206, 1207, 1216, 1217, 1218, 1221, 1224, 1225, 1242, 1245, 1248, 1251, 1252, 1253, 1254, 1259, 1260, 1263, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1278, 1282, 1289, 1290, 1296, 1297, 1301, 1326, 1328, 1329, 1331, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1346, 1347, 1348, 1349, 1353, 1354, 1355, 1356, 1358, 1359, 1361, 1362, 1363, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1381, 1383, 1384, 1385, 1390, 1392, 1393, 1394, 1395, 1396, 1399, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1417, 1420, 1425, 1426, 1429, 1436, 1439, 1443, 1444, 1450, 1451, 1452, 1453, 1454, 1457, 1460, 1466, 1468, 1472, 1474, 1476, 1478, 1479, 1480, 1481, 1482, 1483, 1494, 1495, 1503, 1504, 1506, 1507, 1511, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1523, 1524, 1526, 1528, 1531, 1539, 1563, 1565, 1571, 1587, 1597, 1598, 1599, 1609, 1621, 1631, 1634, 1636, 1637, 1639, 1644, 1645, 1647, 1649, 1655, 1656, 1657, 1659, 1660, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1684, 1690, 1694, 1700, 1702, 1704, 1705, 1707, 1708, 1711, 1712, 1715, 1716, 1717, 1718, 1722, 1727, 1728, 1731, 1732, 1738, 1739, 1740, 1747, 1760, 1767, 1769, 1770, 1771, 1772, 1775, 1776, 1785, 1791, 1793, 1794, 1795, 1796, 1798, 1801, 1809, 1812, 1813, 1814, 1815, 1816, 1823, 1825, 1827, 1828, 1829, 1831, 1832, 1834, 1843, 1844, 1848, 1853, 1859, 1860, 1861, 1864, 1868, 1869, 1870, 1871, 1872, 1878, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1896, 1898, 1899, 1902, 1903, 1907, 1908, 1910, 1912, 1914, 1916, 1918, 1923, 1927, 1928, 1930, 1932, 1933, 1934, 1943, 1954, 1955, 1956], "growth_interv": 0, "2000": [0, 24, 28, 1086, 1088, 1095, 1104, 1117, 1273, 1481, 1687, 1715, 1765, 1766, 1827], "scaler": [0, 1890, 1894], "help": [0, 1, 4, 7, 8, 11, 14, 21, 22, 24, 38, 41, 48, 53, 56, 897, 898, 906, 993, 1025, 1125, 1126, 1136, 1195, 1196, 1215, 1297, 1310, 1311, 1368, 1369, 1370, 1374, 1429, 1616, 1762, 1859, 1866, 1871, 1878, 1884, 1885, 1890, 1891, 1892, 1894, 1895, 1897, 1900, 1902, 1905, 1910, 1912, 1915, 1923, 1924, 1927, 1935, 1945, 1948, 1949, 1950, 1954, 1956], "given": [0, 1, 2, 3, 7, 9, 14, 21, 22, 24, 25, 26, 28, 29, 30, 32, 39, 41, 43, 45, 48, 54, 55, 56, 140, 209, 303, 305, 307, 311, 316, 367, 388, 392, 461, 462, 463, 464, 465, 467, 502, 504, 506, 573, 574, 593, 596, 669, 682, 684, 685, 687, 688, 724, 749, 768, 774, 781, 782, 783, 784, 788, 789, 791, 809, 813, 826, 829, 843, 847, 854, 865, 878, 880, 882, 884, 886, 888, 890, 891, 892, 893, 894, 895, 898, 911, 912, 915, 923, 927, 928, 933, 934, 935, 940, 941, 954, 956, 959, 960, 962, 963, 966, 968, 971, 972, 974, 975, 976, 980, 988, 989, 992, 996, 997, 1013, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1043, 1044, 1045, 1046, 1053, 1055, 1060, 1068, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1108, 1124, 1134, 1135, 1161, 1192, 1195, 1203, 1211, 1212, 1217, 1221, 1231, 1233, 1234, 1243, 1245, 1251, 1259, 1268, 1275, 1277, 1278, 1279, 1280, 1283, 1293, 1295, 1297, 1298, 1301, 1327, 1337, 1345, 1346, 1352, 1357, 1358, 1359, 1361, 1362, 1363, 1365, 1366, 1372, 1373, 1377, 1378, 1381, 1389, 1399, 1421, 1425, 1426, 1427, 1429, 1431, 1433, 1434, 1436, 1438, 1440, 1444, 1457, 1463, 1477, 1478, 1481, 1482, 1483, 1493, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1519, 1520, 1523, 1524, 1528, 1539, 1563, 1578, 1593, 1597, 1598, 1599, 1603, 1604, 1605, 1617, 1642, 1649, 1650, 1653, 1656, 1657, 1663, 1689, 1692, 1694, 1696, 1699, 1704, 1709, 1712, 1713, 1714, 1727, 1733, 1738, 1749, 1750, 1755, 1781, 1785, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1806, 1809, 1812, 1814, 1823, 1824, 1829, 1831, 1833, 1843, 1845, 1848, 1852, 1866, 1867, 1868, 1871, 1875, 1877, 1878, 1880, 1883, 1886, 1887, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1906, 1907, 1910, 1912, 1914, 1917, 1918, 1923, 1924, 1927, 1928, 1929, 1932, 1934, 1937, 1940, 1945, 1946, 1949, 1955, 1956, 1957], "safe": [0, 24, 41, 45, 55, 56, 75, 77, 1015, 1016, 1035, 1036, 1609, 1665, 1668, 1669, 1672, 1868, 1871, 1890, 1891, 1894, 1897, 1901, 1923, 1938, 1941, 1946, 1947, 1949, 1956], "onc": [0, 1, 7, 9, 15, 21, 22, 24, 25, 26, 28, 30, 31, 33, 34, 41, 48, 51, 53, 55, 56, 72, 886, 887, 888, 890, 892, 1068, 1195, 1199, 1267, 1366, 1429, 1609, 1619, 1621, 1653, 1691, 1695, 1711, 1758, 1762, 1851, 1868, 1871, 1879, 1881, 1883, 1890, 1891, 1893, 1894, 1896, 1899, 1901, 1902, 1914, 1915, 1927, 1932, 1941, 1943, 1946, 1949, 1953], "begin": [0, 18, 21, 22, 24, 25, 33, 41, 48, 56, 485, 669, 749, 773, 809, 810, 854, 910, 955, 969, 1017, 1019, 1088, 1148, 1154, 1216, 1251, 1263, 1344, 1345, 1346, 1363, 1365, 1371, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1396, 1399, 1400, 1415, 1420, 1423, 1424, 1436, 1437, 1444, 1447, 1460, 1466, 1471, 1478, 1511, 1532, 1533, 1609, 1616, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1685, 1687, 1693, 1760, 1763, 1766, 1809, 1834, 1845, 1862, 1871, 1890, 1891, 1894, 1896, 1899, 1901, 1906, 1912, 1914, 1921, 1928, 1946, 1956], "first": [0, 1, 4, 5, 7, 9, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 34, 38, 41, 42, 45, 46, 48, 54, 56, 57, 65, 68, 206, 244, 280, 578, 599, 675, 678, 680, 683, 749, 782, 783, 803, 843, 846, 848, 863, 864, 873, 878, 879, 880, 881, 896, 897, 909, 913, 914, 916, 917, 918, 921, 923, 925, 939, 968, 971, 982, 1056, 1058, 1059, 1060, 1065, 1068, 1073, 1086, 1088, 1107, 1121, 1126, 1127, 1129, 1130, 1131, 1135, 1136, 1139, 1148, 1151, 1159, 1160, 1161, 1172, 1184, 1193, 1203, 1208, 1209, 1215, 1220, 1225, 1228, 1235, 1251, 1254, 1261, 1262, 1264, 1267, 1268, 1284, 1290, 1293, 1296, 1297, 1298, 1300, 1317, 1319, 1325, 1330, 1333, 1337, 1343, 1344, 1350, 1358, 1359, 1361, 1362, 1372, 1373, 1375, 1380, 1381, 1395, 1398, 1399, 1414, 1421, 1423, 1424, 1444, 1457, 1510, 1596, 1600, 1609, 1618, 1619, 1621, 1632, 1642, 1648, 1668, 1669, 1670, 1671, 1672, 1678, 1681, 1682, 1686, 1690, 1693, 1695, 1701, 1711, 1712, 1738, 1739, 1747, 1755, 1775, 1790, 1793, 1798, 1828, 1829, 1833, 1838, 1840, 1846, 1853, 1856, 1859, 1861, 1866, 1868, 1870, 1871, 1878, 1880, 1883, 1884, 1886, 1890, 1891, 1894, 1896, 1898, 1899, 1902, 1904, 1905, 1906, 1907, 1908, 1912, 1914, 1916, 1917, 1918, 1923, 1924, 1925, 1927, 1928, 1932, 1936, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1954, 1955, 1956, 1957], "param": [0, 1, 28, 30, 33, 41, 48, 50, 52, 56, 477, 753, 784, 1124, 1134, 1195, 1214, 1429, 1435, 1439, 1440, 1608, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1695, 1850, 1869, 1879, 1889, 1890, 1894, 1895, 1914, 1957], "contain": [0, 1, 2, 3, 5, 11, 14, 15, 21, 24, 25, 28, 29, 30, 32, 34, 35, 39, 42, 45, 46, 48, 55, 56, 57, 58, 63, 65, 73, 78, 140, 144, 181, 185, 198, 280, 301, 303, 305, 309, 311, 460, 472, 533, 592, 596, 675, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 749, 803, 826, 830, 866, 881, 882, 890, 891, 892, 893, 894, 895, 896, 906, 909, 910, 911, 919, 921, 925, 943, 955, 956, 960, 970, 981, 982, 983, 984, 985, 1014, 1068, 1102, 1103, 1105, 1111, 1131, 1132, 1135, 1136, 1152, 1153, 1156, 1157, 1165, 1169, 1186, 1193, 1195, 1196, 1202, 1203, 1206, 1211, 1212, 1215, 1226, 1232, 1233, 1234, 1235, 1237, 1239, 1241, 1242, 1258, 1267, 1285, 1289, 1296, 1319, 1325, 1337, 1346, 1365, 1366, 1372, 1373, 1376, 1381, 1382, 1384, 1389, 1399, 1400, 1421, 1429, 1430, 1431, 1436, 1439, 1444, 1446, 1457, 1461, 1468, 1480, 1511, 1519, 1520, 1522, 1593, 1600, 1603, 1604, 1609, 1617, 1618, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1649, 1650, 1653, 1655, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1701, 1704, 1729, 1743, 1747, 1808, 1809, 1813, 1829, 1836, 1838, 1840, 1845, 1846, 1850, 1851, 1855, 1859, 1867, 1868, 1870, 1871, 1872, 1878, 1881, 1885, 1886, 1890, 1891, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1905, 1907, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1923, 1925, 1927, 1929, 1930, 1932, 1933, 1935, 1936, 1937, 1940, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1953, 1955, 1956, 1957, 1958], "inf": [0, 30, 45, 48, 673, 675, 678, 679, 680, 874, 909, 925, 1184, 1185, 1187, 1189, 1190, 1227, 1242, 1248, 1252, 1255, 1265, 1276, 1323, 1419, 1462, 1472, 1578, 1613, 1627, 1636, 1656, 1740, 1747, 1890, 1891, 1897, 1905, 1928, 1934, 1956], "otherwis": [0, 1, 3, 5, 7, 9, 11, 14, 21, 24, 25, 31, 34, 48, 49, 53, 56, 78, 199, 311, 318, 322, 326, 328, 332, 333, 484, 493, 549, 569, 570, 572, 592, 606, 669, 675, 676, 677, 678, 679, 682, 684, 685, 686, 688, 724, 749, 757, 758, 773, 783, 806, 809, 810, 850, 851, 854, 881, 884, 892, 897, 909, 925, 1009, 1068, 1074, 1107, 1119, 1186, 1192, 1195, 1198, 1202, 1208, 1217, 1241, 1256, 1265, 1267, 1268, 1283, 1288, 1293, 1295, 1296, 1298, 1300, 1301, 1324, 1327, 1343, 1344, 1363, 1365, 1368, 1369, 1370, 1374, 1381, 1385, 1386, 1387, 1388, 1390, 1399, 1415, 1429, 1433, 1434, 1435, 1436, 1437, 1439, 1444, 1445, 1447, 1460, 1466, 1468, 1471, 1472, 1474, 1476, 1477, 1478, 1496, 1497, 1530, 1532, 1533, 1537, 1572, 1582, 1609, 1616, 1621, 1642, 1646, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1699, 1701, 1709, 1711, 1718, 1727, 1734, 1747, 1755, 1763, 1807, 1808, 1809, 1812, 1844, 1845, 1846, 1854, 1855, 1862, 1866, 1868, 1870, 1871, 1878, 1879, 1884, 1890, 1896, 1897, 1904, 1910, 1911, 1912, 1918, 1919, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1931, 1932, 1934, 1957], "skip": [0, 41, 46, 848, 943, 1068, 1121, 1225, 1226, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1781, 1850, 1868, 1890, 1891, 1894, 1895, 1896, 1902, 1914, 1917, 1923, 1944, 1946, 1947, 1949], "next": [0, 3, 21, 24, 30, 41, 46, 48, 56, 549, 749, 1199, 1333, 1382, 1400, 1446, 1609, 1644, 1883, 1890, 1891, 1893, 1894, 1896, 1897, 1902, 1904, 1916, 1917, 1923, 1924, 1927, 1930, 1932, 1943, 1946, 1949], "iter": [0, 1, 2, 3, 7, 22, 24, 25, 26, 28, 30, 42, 44, 45, 48, 56, 57, 62, 981, 982, 983, 984, 985, 1014, 1017, 1019, 1040, 1195, 1268, 1429, 1430, 1431, 1439, 1440, 1609, 1610, 1613, 1614, 1615, 1617, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1650, 1652, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1685, 1686, 1687, 1690, 1701, 1771, 1814, 1869, 1871, 1872, 1883, 1885, 1890, 1891, 1892, 1894, 1895, 1896, 1899, 1902, 1914, 1917, 1922, 1932, 1946, 1949, 1955, 1956, 1957], "clip": [0, 48, 956, 1613, 1614, 1869, 1897, 1912, 1913], "accumul": [0, 1, 2, 48, 140, 280, 303, 308, 309, 311, 460, 477, 675, 882, 896, 1265, 1609, 1666, 1667, 1848, 1868, 1869, 1881, 1891, 1894, 1895, 1898, 1905, 1914, 1919, 1923, 1924, 1927, 1944, 1946, 1951, 1956], "estim": [0, 1, 3, 21, 30, 956, 960, 1148, 1192, 1347, 1348, 1349, 1379, 1383, 1384, 1392, 1393, 1394, 1401, 1468, 1526, 1617, 1679, 1776, 1917], "minim": [0, 1, 7, 8, 808, 864, 1298, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1679, 1680, 1681, 1682, 1695, 1866, 1881, 1890, 1894, 1902, 1904, 1907, 1912, 1916, 1918, 1946, 1956], "larg": [0, 2, 3, 7, 8, 21, 24, 56, 669, 847, 958, 960, 1025, 1232, 1241, 1259, 1337, 1376, 1480, 1522, 1609, 1693, 1780, 1793, 1867, 1883, 1885, 1886, 1893, 1894, 1898, 1902, 1905, 1907, 1910, 1912, 1915, 1916, 1919, 1923, 1927, 1930, 1933, 1941, 1946, 1954, 1956, 1958], "becom": [0, 7, 8, 9, 12, 21, 24, 30, 56, 280, 749, 865, 1148, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1381, 1399, 1414, 1434, 1444, 1457, 1511, 1528, 1600, 1685, 1785, 1834, 1878, 1879, 1891, 1895, 1896, 1912, 1915, 1917, 1923, 1949, 1956, 1958], "too": [0, 7, 9, 14, 22, 26, 41, 53, 56, 1025, 1124, 1241, 1259, 1325, 1352, 1365, 1429, 1512, 1610, 1651, 1871, 1893, 1898, 1899, 1904, 1905, 1906, 1908, 1910, 1915, 1916, 1925, 1927, 1944, 1945, 1956, 1958], "therefor": [0, 3, 5, 21, 22, 24, 30, 31, 39, 48, 51, 57, 62, 63, 76, 437, 533, 896, 910, 919, 943, 1014, 1102, 1119, 1121, 1124, 1152, 1153, 1208, 1211, 1241, 1254, 1372, 1373, 1480, 1519, 1520, 1528, 1651, 1687, 1871, 1890, 1891, 1894, 1896, 1898, 1901, 1912, 1925, 1927, 1943, 1947, 1949], "largest": [0, 48, 579, 912, 1112, 1227, 1248, 1250, 1252, 1253, 1268, 1565, 1617, 1831, 1869, 1870, 1871, 1951, 1955, 1959], "without": [0, 1, 3, 5, 7, 8, 9, 14, 18, 21, 22, 24, 25, 26, 28, 30, 34, 41, 45, 48, 49, 54, 55, 56, 57, 58, 244, 477, 606, 938, 941, 972, 974, 1009, 1089, 1090, 1091, 1099, 1100, 1101, 1192, 1193, 1195, 1196, 1242, 1243, 1258, 1265, 1319, 1347, 1348, 1349, 1369, 1373, 1392, 1393, 1394, 1426, 1429, 1437, 1468, 1476, 1520, 1600, 1609, 1633, 1649, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1687, 1718, 1734, 1751, 1752, 1843, 1866, 1870, 1871, 1878, 1879, 1881, 1883, 1885, 1890, 1891, 1892, 1894, 1895, 1896, 1899, 1900, 1902, 1904, 1906, 1907, 1910, 1912, 1915, 1916, 1918, 1922, 1923, 1927, 1932, 1937, 1941, 1943, 1944, 1945, 1946, 1956, 1959], "approxim": [0, 1, 3, 22, 28, 41, 56, 1132, 1148, 1259, 1268, 1337, 1379, 1443, 1458, 1465, 1526, 1571, 1581, 1617, 1665, 1682, 1701, 1755, 1814, 1834, 1869, 1871, 1894, 1895, 1896, 1899, 1912, 1951, 1959], "time": [0, 1, 3, 4, 7, 8, 9, 14, 21, 22, 24, 25, 26, 28, 30, 31, 32, 38, 41, 42, 43, 45, 46, 48, 53, 55, 56, 57, 66, 67, 78, 280, 303, 476, 482, 606, 669, 674, 675, 676, 677, 678, 679, 680, 683, 734, 735, 745, 749, 753, 757, 758, 788, 790, 813, 830, 866, 896, 902, 903, 907, 909, 921, 929, 931, 941, 953, 960, 971, 972, 974, 1014, 1027, 1046, 1049, 1060, 1082, 1083, 1089, 1090, 1091, 1097, 1108, 1109, 1110, 1118, 1121, 1130, 1131, 1132, 1135, 1136, 1184, 1192, 1195, 1203, 1208, 1211, 1212, 1216, 1221, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1240, 1241, 1242, 1245, 1247, 1251, 1254, 1256, 1258, 1259, 1267, 1268, 1290, 1300, 1307, 1318, 1319, 1321, 1331, 1339, 1340, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1373, 1376, 1377, 1378, 1381, 1392, 1393, 1394, 1399, 1401, 1415, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1441, 1442, 1444, 1465, 1468, 1480, 1481, 1482, 1483, 1493, 1496, 1497, 1523, 1524, 1568, 1569, 1570, 1586, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1616, 1617, 1619, 1621, 1655, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1689, 1699, 1700, 1711, 1733, 1739, 1790, 1804, 1809, 1810, 1829, 1859, 1867, 1870, 1871, 1872, 1877, 1879, 1883, 1889, 1891, 1893, 1895, 1896, 1898, 1899, 1901, 1902, 1904, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1932, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1952, 1953, 1955, 1956, 1958], "check": [0, 4, 5, 11, 14, 21, 24, 25, 30, 32, 41, 45, 48, 57, 58, 63, 65, 211, 330, 488, 683, 850, 886, 888, 889, 897, 898, 943, 971, 972, 974, 978, 1007, 1025, 1182, 1192, 1195, 1211, 1212, 1225, 1226, 1231, 1232, 1234, 1237, 1239, 1244, 1250, 1253, 1257, 1259, 1260, 1285, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1429, 1600, 1609, 1618, 1621, 1634, 1644, 1663, 1664, 1788, 1795, 1796, 1797, 1798, 1799, 1800, 1849, 1851, 1866, 1867, 1870, 1871, 1872, 1884, 1885, 1890, 1894, 1896, 1897, 1898, 1901, 1902, 1903, 1906, 1910, 1912, 1914, 1915, 1916, 1917, 1923, 1927, 1932, 1934, 1940, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1956, 1957], "dure": [0, 1, 5, 14, 18, 22, 24, 26, 32, 33, 35, 41, 45, 48, 55, 56, 57, 71, 73, 74, 325, 477, 492, 493, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 782, 816, 878, 879, 888, 969, 1003, 1013, 1014, 1026, 1027, 1046, 1206, 1208, 1209, 1211, 1267, 1341, 1347, 1348, 1349, 1366, 1367, 1372, 1373, 1392, 1393, 1394, 1447, 1468, 1474, 1476, 1513, 1519, 1520, 1600, 1609, 1611, 1612, 1649, 1663, 1696, 1794, 1838, 1840, 1870, 1877, 1878, 1879, 1881, 1884, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1905, 1906, 1910, 1912, 1915, 1917, 1918, 1921, 1923, 1925, 1934, 1941, 1942, 1946, 1949, 1953, 1954, 1955, 1956, 1958], "unscale_": [0, 1890], "found": [0, 7, 15, 16, 18, 41, 45, 56, 57, 65, 73, 75, 76, 77, 925, 968, 1047, 1048, 1195, 1199, 1217, 1293, 1296, 1298, 1301, 1325, 1341, 1351, 1374, 1429, 1456, 1678, 1747, 1866, 1868, 1871, 1886, 1890, 1896, 1899, 1902, 1904, 1912, 1915, 1917, 1918, 1923, 1932, 1942, 1945, 1950, 1953, 1955, 1957], "underli": [0, 24, 26, 28, 30, 32, 45, 48, 53, 56, 87, 301, 316, 367, 390, 392, 462, 463, 464, 465, 472, 488, 509, 513, 546, 547, 548, 602, 737, 746, 867, 971, 1165, 1169, 1195, 1267, 1328, 1571, 1729, 1833, 1847, 1868, 1871, 1886, 1894, 1898, 1900, 1916, 1923, 1929, 1931, 1938, 1945, 1949], "themselv": [0, 1, 9, 30, 41, 48, 782, 830, 1831, 1894, 1915, 1957], "remain": [0, 5, 8, 30, 41, 56, 1303, 1372, 1373, 1519, 1520, 1600, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639, 1712, 1734, 1881, 1883, 1890, 1898, 1902, 1943], "uncorrupt": 0, "usual": [0, 7, 14, 21, 22, 26, 41, 42, 46, 48, 56, 75, 470, 820, 821, 822, 823, 830, 882, 890, 892, 896, 1136, 1368, 1369, 1370, 1374, 1389, 1392, 1393, 1394, 1395, 1600, 1609, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1859, 1868, 1871, 1886, 1890, 1891, 1893, 1894, 1896, 1898, 1901, 1914, 1919, 1921, 1923, 1932, 1940, 1945, 1950, 1957], "unskip": 0, "occur": [0, 11, 21, 24, 34, 35, 41, 48, 53, 72, 74, 186, 305, 941, 1028, 1068, 1192, 1198, 1209, 1239, 1352, 1468, 1512, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1870, 1881, 1885, 1890, 1891, 1894, 1898, 1905, 1910, 1912, 1917, 1923, 1925, 1931, 1934, 1944, 1946, 1948, 1952, 1954, 1956, 1957, 1958], "consecut": [0, 24, 48, 599, 1644, 1683, 1834, 1845, 1846, 1885, 1912], "appear": [0, 4, 22, 24, 30, 45, 46, 56, 843, 1014, 1068, 1109, 1110, 1136, 1267, 1301, 1303, 1605, 1610, 1733, 1762, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1859, 1868, 1871, 1884, 1885, 1896, 1897, 1902, 1912, 1915, 1946], "few": [0, 1, 7, 8, 22, 26, 32, 1068, 1125, 1373, 1609, 1866, 1871, 1891, 1894, 1896, 1898, 1900, 1905, 1908, 1912, 1914, 1916, 1918, 1921, 1927, 1931, 1933, 1935, 1944, 1946, 1948, 1949, 1950, 1954, 1956], "calibr": [0, 777, 778, 786, 827, 828, 846, 848, 850, 1890, 1918, 1919, 1921, 1937], "rare": [0, 7, 1890, 1912, 1944, 1947, 1957], "hundr": [0, 1890, 1901, 1956], "thousand": [0, 1956], "16": [0, 20, 24, 45, 311, 606, 727, 728, 729, 730, 731, 732, 761, 1066, 1084, 1111, 1148, 1158, 1195, 1207, 1219, 1225, 1231, 1232, 1236, 1252, 1329, 1341, 1343, 1344, 1352, 1353, 1356, 1357, 1358, 1359, 1361, 1362, 1367, 1368, 1369, 1370, 1374, 1377, 1378, 1397, 1398, 1399, 1417, 1422, 1423, 1424, 1426, 1427, 1429, 1436, 1444, 1455, 1472, 1486, 1503, 1505, 1506, 1508, 1512, 1523, 1524, 1659, 1708, 1755, 1785, 1848, 1856, 1860, 1868, 1872, 1889, 1894, 1902, 1905, 1907, 1912, 1913, 1916, 1923, 1927, 1928, 1930, 1932, 1933, 1943, 1946, 1956], "initi": [0, 1, 2, 3, 4, 8, 17, 18, 21, 22, 26, 28, 32, 34, 41, 42, 44, 48, 70, 78, 485, 488, 569, 701, 702, 703, 704, 705, 706, 709, 719, 720, 721, 722, 734, 735, 745, 749, 753, 850, 851, 868, 948, 971, 979, 1000, 1005, 1006, 1009, 1010, 1035, 1069, 1070, 1071, 1142, 1171, 1193, 1195, 1208, 1209, 1267, 1268, 1285, 1347, 1348, 1349, 1350, 1352, 1360, 1361, 1362, 1366, 1372, 1373, 1381, 1382, 1384, 1392, 1393, 1394, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1429, 1437, 1444, 1445, 1446, 1468, 1478, 1519, 1600, 1609, 1611, 1612, 1616, 1618, 1621, 1649, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1751, 1752, 1753, 1795, 1796, 1797, 1798, 1799, 1800, 1827, 1867, 1869, 1870, 1871, 1881, 1886, 1889, 1891, 1894, 1895, 1896, 1901, 1908, 1910, 1912, 1914, 1915, 1916, 1918, 1922, 1923, 1924, 1941, 1949, 1954, 1955], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 45, 46, 48, 52, 53, 55, 56, 57, 64, 65, 78, 140, 279, 303, 305, 307, 309, 311, 325, 461, 475, 476, 488, 502, 504, 506, 526, 549, 593, 596, 606, 613, 673, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 749, 753, 770, 779, 780, 786, 788, 808, 812, 815, 827, 843, 846, 847, 848, 850, 865, 869, 874, 881, 882, 883, 884, 890, 891, 892, 893, 894, 895, 896, 902, 903, 906, 912, 925, 928, 931, 935, 941, 943, 952, 958, 959, 960, 968, 969, 974, 981, 982, 983, 984, 985, 996, 997, 998, 1025, 1027, 1032, 1033, 1044, 1046, 1051, 1055, 1056, 1057, 1058, 1059, 1068, 1084, 1089, 1092, 1096, 1099, 1102, 1107, 1108, 1109, 1110, 1111, 1116, 1119, 1124, 1125, 1128, 1129, 1130, 1131, 1132, 1136, 1137, 1140, 1157, 1169, 1180, 1186, 1192, 1193, 1195, 1196, 1198, 1201, 1205, 1206, 1207, 1211, 1228, 1231, 1232, 1241, 1245, 1247, 1248, 1251, 1252, 1256, 1258, 1259, 1261, 1264, 1265, 1267, 1273, 1289, 1296, 1301, 1319, 1325, 1328, 1329, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1347, 1348, 1349, 1352, 1358, 1359, 1361, 1362, 1365, 1366, 1373, 1380, 1381, 1390, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1401, 1415, 1419, 1423, 1424, 1425, 1426, 1427, 1429, 1432, 1434, 1435, 1457, 1460, 1462, 1464, 1468, 1477, 1478, 1510, 1527, 1528, 1530, 1540, 1547, 1565, 1566, 1584, 1585, 1593, 1600, 1609, 1616, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1651, 1653, 1656, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1701, 1713, 1727, 1731, 1733, 1734, 1738, 1740, 1747, 1751, 1755, 1760, 1762, 1780, 1785, 1789, 1790, 1792, 1793, 1801, 1804, 1809, 1828, 1833, 1834, 1837, 1838, 1839, 1840, 1844, 1845, 1847, 1848, 1851, 1859, 1866, 1868, 1870, 1871, 1873, 1877, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1906, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "int": [0, 2, 3, 12, 18, 21, 22, 24, 26, 28, 29, 30, 32, 35, 38, 39, 41, 42, 44, 45, 46, 48, 56, 57, 64, 65, 66, 67, 78, 206, 208, 222, 223, 232, 244, 303, 305, 307, 311, 426, 433, 434, 436, 438, 446, 461, 465, 482, 486, 488, 502, 504, 506, 509, 526, 532, 534, 535, 547, 549, 555, 572, 573, 574, 576, 577, 596, 606, 669, 682, 684, 685, 686, 688, 744, 745, 764, 766, 768, 769, 774, 775, 776, 808, 863, 864, 865, 867, 881, 888, 901, 910, 912, 919, 926, 928, 935, 940, 959, 960, 963, 964, 967, 968, 970, 972, 974, 976, 977, 980, 981, 982, 983, 984, 985, 987, 988, 989, 990, 991, 996, 997, 998, 1000, 1002, 1006, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1037, 1038, 1039, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1066, 1069, 1071, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1136, 1137, 1143, 1145, 1146, 1148, 1152, 1153, 1155, 1156, 1157, 1158, 1169, 1171, 1192, 1193, 1195, 1196, 1198, 1201, 1202, 1207, 1215, 1217, 1227, 1228, 1248, 1249, 1252, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1275, 1282, 1283, 1288, 1293, 1295, 1296, 1298, 1301, 1303, 1304, 1305, 1309, 1319, 1324, 1325, 1326, 1327, 1328, 1329, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1372, 1373, 1375, 1376, 1377, 1378, 1380, 1382, 1384, 1392, 1393, 1394, 1397, 1398, 1400, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1414, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1431, 1434, 1436, 1437, 1440, 1441, 1442, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1462, 1464, 1465, 1468, 1472, 1474, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1510, 1511, 1512, 1519, 1520, 1527, 1530, 1539, 1547, 1563, 1564, 1565, 1569, 1570, 1584, 1585, 1593, 1597, 1598, 1599, 1609, 1617, 1626, 1627, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1643, 1645, 1650, 1653, 1656, 1657, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1701, 1702, 1709, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1723, 1724, 1726, 1732, 1733, 1734, 1737, 1738, 1739, 1740, 1743, 1748, 1749, 1750, 1754, 1758, 1759, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1781, 1785, 1789, 1792, 1793, 1794, 1801, 1804, 1806, 1807, 1808, 1809, 1812, 1814, 1818, 1824, 1828, 1829, 1831, 1833, 1834, 1837, 1838, 1839, 1840, 1843, 1844, 1845, 1846, 1847, 1850, 1851, 1853, 1854, 1855, 1859, 1860, 1864, 1868, 1869, 1870, 1871, 1872, 1881, 1883, 1884, 1886, 1889, 1894, 1897, 1904, 1907, 1910, 1912, 1913, 1916, 1917, 1918, 1922, 1923, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1944, 1946, 1949, 1951, 1955, 1958, 1959], "simpli": [0, 1, 3, 14, 21, 30, 34, 42, 45, 55, 56, 852, 1125, 1182, 1193, 1341, 1367, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1755, 1868, 1870, 1891, 1897, 1899, 1902, 1903, 1917, 1927, 1944, 1946], "get_backoff_factor": 0, "python": [0, 1, 3, 4, 9, 12, 14, 15, 18, 21, 24, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 45, 46, 48, 56, 57, 64, 65, 342, 578, 613, 669, 770, 869, 890, 891, 892, 893, 894, 895, 897, 898, 927, 928, 940, 941, 943, 952, 1005, 1011, 1012, 1014, 1063, 1068, 1086, 1088, 1116, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1170, 1171, 1193, 1195, 1196, 1198, 1199, 1200, 1206, 1207, 1211, 1267, 1430, 1431, 1439, 1440, 1578, 1609, 1705, 1727, 1731, 1751, 1752, 1788, 1851, 1852, 1859, 1866, 1875, 1877, 1882, 1883, 1885, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1901, 1904, 1907, 1908, 1909, 1910, 1915, 1918, 1922, 1923, 1924, 1925, 1930, 1933, 1934, 1938, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1952, 1953, 1956, 1957, 1958], "backoff": [0, 1923], "get_growth_factor": 0, "growth": [0, 8], "get_growth_interv": 0, "interv": [0, 30, 43, 854, 956, 1118, 1310, 1311, 1696, 1720, 1721, 1769, 1881, 1894, 1917], "get_scal": [0, 1890], "sync": [0, 24, 28, 48, 55, 56, 1609, 1894, 1895, 1916, 1941, 1945], "is_en": [0, 1788, 1795, 1796, 1797, 1798, 1799, 1800], "indic": [0, 1, 2, 3, 12, 21, 22, 24, 25, 29, 30, 41, 45, 46, 70, 73, 74, 181, 198, 211, 303, 305, 307, 308, 309, 311, 460, 502, 504, 506, 533, 561, 562, 572, 603, 684, 685, 724, 734, 735, 863, 864, 865, 866, 867, 887, 897, 898, 925, 932, 933, 934, 946, 952, 965, 969, 971, 972, 974, 1008, 1047, 1048, 1071, 1126, 1127, 1129, 1130, 1131, 1135, 1136, 1137, 1148, 1169, 1193, 1195, 1200, 1209, 1212, 1213, 1217, 1226, 1237, 1239, 1250, 1253, 1267, 1275, 1283, 1285, 1287, 1293, 1296, 1298, 1301, 1307, 1319, 1325, 1329, 1337, 1338, 1339, 1340, 1365, 1372, 1373, 1377, 1378, 1423, 1424, 1425, 1426, 1427, 1432, 1434, 1435, 1490, 1491, 1492, 1511, 1519, 1520, 1523, 1524, 1540, 1555, 1556, 1557, 1565, 1578, 1593, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1635, 1636, 1655, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1691, 1693, 1712, 1747, 1785, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1823, 1824, 1828, 1831, 1837, 1838, 1839, 1840, 1845, 1846, 1848, 1849, 1851, 1859, 1862, 1868, 1869, 1871, 1875, 1884, 1885, 1896, 1904, 1907, 1912, 1913, 1923, 1927, 1931, 1932, 1934, 1947, 1949, 1951, 1956], "load_state_dict": [0, 22, 26, 28, 48, 1195, 1267, 1429, 1600, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1866, 1867, 1902, 1907, 1918], "state_dict": [0, 22, 26, 28, 45, 46, 48, 825, 826, 1195, 1429, 1600, 1635, 1653, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1866, 1880, 1895, 1902, 1904, 1907, 1910, 1912, 1918, 1936], "load": [0, 1, 11, 14, 15, 22, 26, 28, 45, 48, 826, 851, 905, 941, 970, 1199, 1206, 1211, 1373, 1600, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1743, 1867, 1868, 1879, 1880, 1885, 1891, 1894, 1901, 1902, 1906, 1908, 1912, 1923, 1932, 1948, 1950, 1954, 1956], "dict": [0, 3, 5, 21, 22, 24, 25, 26, 28, 29, 30, 32, 35, 39, 43, 45, 46, 48, 50, 52, 56, 669, 781, 782, 783, 804, 805, 806, 825, 843, 899, 941, 1011, 1012, 1025, 1034, 1124, 1134, 1136, 1193, 1194, 1195, 1196, 1202, 1207, 1211, 1212, 1267, 1268, 1366, 1376, 1429, 1430, 1439, 1480, 1600, 1609, 1632, 1651, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1859, 1866, 1868, 1869, 1871, 1872, 1880, 1881, 1896, 1902, 1907, 1910, 1912, 1913, 1914, 1923, 1924, 1932, 1936, 1937, 1943, 1952, 1955, 1957], "object": [0, 1, 3, 5, 6, 8, 14, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 41, 43, 45, 46, 48, 55, 56, 57, 59, 78, 196, 199, 592, 782, 783, 843, 850, 869, 879, 880, 881, 906, 908, 941, 992, 1003, 1043, 1068, 1107, 1119, 1121, 1126, 1127, 1129, 1130, 1131, 1135, 1181, 1182, 1195, 1202, 1203, 1206, 1207, 1211, 1212, 1227, 1248, 1252, 1265, 1267, 1268, 1288, 1366, 1368, 1369, 1370, 1374, 1392, 1393, 1394, 1429, 1439, 1468, 1609, 1619, 1634, 1643, 1644, 1647, 1648, 1649, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1743, 1817, 1818, 1821, 1849, 1852, 1866, 1870, 1871, 1872, 1875, 1879, 1880, 1883, 1887, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1904, 1906, 1907, 1908, 1910, 1912, 1914, 1918, 1920, 1921, 1922, 1923, 1925, 1929, 1930, 1932, 1934, 1942, 1943, 1945, 1949, 1952, 1955, 1957, 1958, 1959], "tupl": [0, 3, 5, 12, 14, 21, 26, 32, 38, 39, 41, 45, 46, 48, 56, 223, 309, 434, 436, 438, 486, 509, 526, 549, 572, 573, 574, 684, 685, 686, 724, 755, 756, 757, 758, 761, 762, 763, 768, 774, 775, 776, 782, 806, 807, 843, 850, 851, 867, 868, 875, 876, 877, 878, 879, 881, 890, 891, 892, 893, 894, 895, 896, 897, 898, 901, 902, 903, 924, 943, 947, 952, 959, 981, 982, 985, 996, 1014, 1020, 1047, 1048, 1066, 1069, 1071, 1085, 1087, 1088, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1100, 1101, 1103, 1105, 1108, 1118, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1140, 1156, 1158, 1195, 1202, 1207, 1211, 1212, 1217, 1226, 1231, 1232, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1248, 1252, 1254, 1255, 1257, 1259, 1262, 1265, 1283, 1285, 1287, 1293, 1295, 1297, 1298, 1301, 1303, 1324, 1327, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1376, 1377, 1378, 1397, 1398, 1405, 1406, 1407, 1408, 1409, 1410, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1435, 1439, 1450, 1451, 1452, 1453, 1454, 1455, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1491, 1492, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1523, 1524, 1539, 1552, 1553, 1554, 1564, 1566, 1597, 1598, 1599, 1604, 1605, 1606, 1609, 1621, 1632, 1645, 1651, 1655, 1656, 1660, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1701, 1702, 1711, 1720, 1722, 1724, 1734, 1738, 1739, 1785, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1807, 1808, 1812, 1813, 1814, 1827, 1828, 1829, 1830, 1831, 1836, 1843, 1844, 1845, 1846, 1854, 1855, 1859, 1860, 1862, 1864, 1868, 1869, 1872, 1883, 1886, 1891, 1894, 1896, 1897, 1902, 1907, 1910, 1912, 1914, 1915, 1918, 1923, 1927, 1932, 1934, 1937, 1946, 1949, 1955, 1957], "unmodifi": [0, 24, 1943], "set_backoff_factor": 0, "new_factor": 0, "new_scal": 0, "set_growth_factor": 0, "set_growth_interv": 0, "new_interv": 0, "It": [0, 1, 3, 4, 5, 7, 8, 12, 17, 18, 21, 22, 24, 25, 26, 29, 30, 32, 34, 38, 39, 40, 41, 42, 43, 45, 46, 48, 50, 52, 53, 54, 55, 56, 57, 74, 140, 186, 462, 463, 502, 504, 506, 533, 546, 878, 879, 880, 881, 882, 886, 941, 943, 946, 948, 952, 953, 954, 985, 990, 996, 997, 1015, 1016, 1035, 1036, 1044, 1091, 1120, 1125, 1128, 1136, 1137, 1156, 1192, 1195, 1196, 1201, 1202, 1206, 1228, 1232, 1236, 1239, 1241, 1243, 1244, 1249, 1253, 1254, 1256, 1257, 1259, 1261, 1264, 1265, 1267, 1268, 1276, 1337, 1346, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1366, 1376, 1423, 1424, 1425, 1426, 1427, 1429, 1436, 1457, 1460, 1480, 1482, 1530, 1540, 1584, 1602, 1603, 1604, 1607, 1608, 1609, 1617, 1618, 1621, 1642, 1645, 1646, 1654, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1699, 1718, 1731, 1747, 1757, 1763, 1770, 1792, 1844, 1859, 1866, 1870, 1871, 1881, 1883, 1885, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1928, 1929, 1931, 1935, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1950, 1955, 1956, 1958], "five": [0, 1871, 1907], "entri": [0, 3, 24, 25, 28, 30, 39, 41, 42, 305, 724, 847, 848, 906, 1011, 1012, 1058, 1109, 1110, 1169, 1195, 1216, 1372, 1373, 1429, 1435, 1519, 1520, 1605, 1606, 1627, 1628, 1636, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1792, 1868, 1871, 1872, 1878, 1886, 1891, 1895, 1896, 1899, 1902, 1921, 1927, 1932, 1936, 1942, 1943, 1944, 1949], "_growth_track": 0, "recent": [0, 1, 7, 8, 44, 55, 1170, 1180, 1788, 1870, 1871, 1886, 1896, 1905, 1906, 1927, 1934, 1953, 1956], "empti": [0, 3, 24, 26, 32, 39, 46, 48, 53, 56, 223, 311, 502, 504, 512, 526, 534, 806, 911, 912, 922, 928, 1068, 1070, 1193, 1196, 1221, 1241, 1242, 1247, 1254, 1277, 1278, 1279, 1280, 1287, 1346, 1365, 1373, 1436, 1501, 1520, 1566, 1649, 1661, 1662, 1798, 1813, 1827, 1848, 1865, 1868, 1869, 1870, 1871, 1873, 1879, 1884, 1885, 1886, 1889, 1892, 1894, 1896, 1912, 1913, 1915, 1927, 1928, 1935, 1944, 1945, 1951, 1954], "wish": [0, 1131, 1804, 1890, 1894, 1896, 1897], "checkpoint": [0, 28, 42, 44, 48, 905, 1267, 1609, 1866, 1867, 1880, 1898, 1907, 1910, 1916, 1925, 1941], "kwarg": [0, 1, 5, 14, 21, 24, 25, 28, 41, 45, 46, 48, 56, 57, 569, 592, 736, 749, 751, 752, 810, 811, 813, 816, 879, 945, 972, 974, 1011, 1012, 1124, 1135, 1136, 1195, 1198, 1200, 1259, 1285, 1391, 1418, 1429, 1459, 1463, 1467, 1469, 1470, 1600, 1605, 1609, 1623, 1628, 1632, 1642, 1649, 1651, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1743, 1846, 1859, 1866, 1871, 1872, 1896, 1897, 1902, 1910, 1914, 1923, 1929, 1937, 1942, 1943, 1955, 1956, 1957], "carri": [0, 52, 326, 786, 827, 828, 846, 847, 1892, 1918], "out": [0, 1, 2, 3, 7, 8, 9, 11, 15, 18, 21, 24, 26, 29, 30, 38, 39, 42, 45, 49, 52, 56, 57, 61, 63, 223, 302, 304, 306, 308, 389, 391, 437, 485, 501, 503, 505, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 745, 749, 753, 761, 762, 763, 768, 770, 774, 786, 825, 827, 828, 846, 847, 854, 855, 856, 857, 858, 859, 860, 861, 866, 870, 871, 872, 873, 874, 883, 884, 885, 888, 897, 909, 911, 912, 913, 914, 915, 916, 917, 918, 921, 925, 928, 930, 931, 932, 933, 934, 936, 937, 939, 941, 949, 950, 951, 954, 955, 957, 958, 968, 973, 981, 983, 985, 1012, 1013, 1025, 1026, 1038, 1042, 1047, 1048, 1049, 1050, 1052, 1055, 1060, 1061, 1063, 1064, 1065, 1067, 1068, 1069, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1126, 1128, 1129, 1131, 1136, 1137, 1138, 1139, 1140, 1141, 1149, 1150, 1151, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1189, 1190, 1195, 1201, 1207, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1314, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1338, 1339, 1340, 1342, 1343, 1344, 1350, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1367, 1368, 1369, 1370, 1372, 1374, 1377, 1378, 1381, 1382, 1397, 1398, 1399, 1414, 1416, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1441, 1442, 1444, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1472, 1473, 1474, 1475, 1476, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1499, 1503, 1504, 1505, 1506, 1507, 1508, 1514, 1515, 1516, 1521, 1524, 1528, 1539, 1545, 1564, 1566, 1597, 1609, 1626, 1627, 1628, 1629, 1655, 1656, 1657, 1658, 1660, 1661, 1682, 1699, 1700, 1704, 1705, 1706, 1708, 1711, 1712, 1718, 1719, 1720, 1722, 1724, 1726, 1727, 1730, 1731, 1732, 1736, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1763, 1764, 1765, 1777, 1778, 1779, 1780, 1785, 1790, 1791, 1802, 1803, 1805, 1806, 1807, 1808, 1810, 1811, 1813, 1824, 1825, 1826, 1829, 1831, 1833, 1836, 1837, 1839, 1841, 1842, 1848, 1854, 1855, 1856, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1878, 1881, 1883, 1885, 1886, 1891, 1892, 1894, 1895, 1896, 1897, 1902, 1904, 1910, 1912, 1914, 1915, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1928, 1930, 1932, 1933, 1937, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1954, 1955, 1957, 1958], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 38, 39, 40, 41, 42, 45, 46, 48, 50, 52, 53, 56, 57, 59, 64, 65, 72, 73, 74, 476, 477, 606, 669, 749, 768, 774, 781, 782, 783, 789, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 843, 850, 851, 878, 879, 880, 884, 902, 903, 925, 930, 934, 952, 1011, 1025, 1068, 1086, 1088, 1112, 1121, 1134, 1148, 1195, 1196, 1205, 1209, 1216, 1227, 1238, 1248, 1251, 1252, 1265, 1268, 1287, 1290, 1337, 1346, 1352, 1365, 1373, 1376, 1381, 1399, 1429, 1444, 1460, 1476, 1480, 1547, 1578, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1616, 1656, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1690, 1693, 1701, 1712, 1740, 1747, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1788, 1789, 1790, 1791, 1798, 1809, 1834, 1842, 1848, 1851, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1878, 1879, 1880, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1933, 1934, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1954, 1956, 1957, 1958, 1959], "two": [0, 1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 38, 39, 41, 42, 45, 46, 48, 52, 53, 56, 74, 75, 572, 573, 574, 576, 577, 596, 606, 669, 681, 683, 749, 782, 876, 879, 892, 897, 929, 931, 978, 1017, 1019, 1047, 1048, 1056, 1065, 1068, 1074, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1114, 1115, 1124, 1134, 1156, 1158, 1184, 1193, 1195, 1206, 1209, 1216, 1219, 1221, 1226, 1228, 1231, 1232, 1237, 1238, 1243, 1248, 1251, 1252, 1254, 1255, 1257, 1259, 1264, 1267, 1290, 1293, 1296, 1298, 1301, 1326, 1343, 1345, 1346, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1376, 1381, 1389, 1390, 1396, 1398, 1399, 1420, 1421, 1423, 1429, 1432, 1433, 1434, 1436, 1437, 1443, 1444, 1460, 1461, 1476, 1477, 1478, 1480, 1500, 1501, 1511, 1530, 1540, 1547, 1563, 1571, 1578, 1616, 1621, 1643, 1653, 1655, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1686, 1687, 1689, 1693, 1712, 1727, 1740, 1755, 1793, 1798, 1813, 1829, 1833, 1834, 1836, 1845, 1856, 1860, 1866, 1868, 1870, 1871, 1875, 1877, 1878, 1884, 1885, 1886, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1902, 1907, 1908, 1909, 1912, 1914, 1915, 1916, 1918, 1919, 1923, 1924, 1925, 1927, 1928, 1932, 1933, 1934, 1936, 1937, 1941, 1942, 1944, 1945, 1951, 1954, 1956], "unless": [0, 1, 4, 7, 22, 24, 43, 45, 48, 49, 56, 140, 477, 488, 829, 847, 886, 912, 969, 1003, 1124, 1195, 1239, 1244, 1257, 1267, 1296, 1383, 1429, 1476, 1604, 1632, 1651, 1676, 1682, 1747, 1848, 1871, 1877, 1891, 1894, 1906, 1912, 1915, 1919, 1944], "explicitli": [0, 8, 14, 24, 29, 34, 48, 76, 1005, 1056, 1058, 1068, 1157, 1236, 1249, 1253, 1261, 1303, 1539, 1597, 1693, 1809, 1868, 1870, 1871, 1872, 1877, 1894, 1896, 1899, 1901, 1907, 1912, 1915, 1916, 1922, 1923, 1927, 1946], "earlier": [0, 1, 6, 48, 1813, 1891, 1894, 1898, 1901, 1907, 1912, 1917], "part": [0, 1, 3, 4, 5, 6, 7, 9, 14, 15, 18, 21, 22, 24, 26, 30, 41, 42, 45, 46, 48, 52, 53, 56, 72, 73, 830, 896, 949, 1068, 1185, 1187, 1188, 1191, 1195, 1206, 1208, 1211, 1212, 1226, 1232, 1234, 1243, 1250, 1253, 1429, 1468, 1578, 1609, 1619, 1685, 1712, 1794, 1834, 1837, 1838, 1839, 1840, 1866, 1867, 1868, 1870, 1871, 1879, 1880, 1890, 1891, 1894, 1896, 1898, 1899, 1902, 1907, 1912, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1932, 1934, 1942, 1945, 1946, 1947, 1954, 1955, 1956], "avoid": [0, 5, 8, 9, 21, 24, 29, 30, 39, 42, 48, 56, 57, 64, 65, 181, 198, 437, 770, 854, 882, 922, 941, 1025, 1195, 1241, 1267, 1364, 1395, 1396, 1420, 1429, 1438, 1443, 1480, 1510, 1540, 1564, 1571, 1609, 1617, 1682, 1733, 1762, 1809, 1827, 1845, 1881, 1885, 1891, 1893, 1894, 1898, 1899, 1902, 1916, 1923, 1924, 1931, 1932, 1933, 1944, 1945, 1946, 1947, 1949, 1952], "corrupt": [0, 24, 41, 1366, 1894, 1904], "appli": [0, 1, 3, 5, 8, 12, 22, 26, 28, 29, 30, 32, 34, 41, 45, 48, 52, 53, 54, 56, 57, 67, 71, 72, 73, 109, 311, 388, 461, 502, 506, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 724, 727, 728, 729, 730, 731, 732, 747, 749, 755, 756, 757, 758, 759, 760, 761, 762, 763, 769, 770, 771, 772, 773, 799, 800, 801, 802, 829, 847, 886, 888, 889, 897, 914, 917, 943, 952, 955, 1056, 1058, 1063, 1072, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1116, 1124, 1125, 1132, 1135, 1136, 1195, 1199, 1245, 1268, 1285, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1371, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1443, 1444, 1447, 1448, 1449, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1482, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1521, 1523, 1524, 1525, 1526, 1529, 1531, 1532, 1533, 1534, 1538, 1539, 1540, 1542, 1543, 1545, 1546, 1547, 1548, 1549, 1550, 1552, 1553, 1554, 1558, 1563, 1571, 1572, 1573, 1574, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1600, 1605, 1606, 1609, 1616, 1617, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1642, 1643, 1650, 1651, 1653, 1654, 1656, 1666, 1678, 1682, 1695, 1708, 1713, 1714, 1715, 1716, 1717, 1757, 1789, 1790, 1792, 1809, 1845, 1846, 1847, 1859, 1868, 1871, 1878, 1883, 1885, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1902, 1905, 1912, 1914, 1915, 1916, 1918, 1921, 1924, 1927, 1928, 1940, 1941, 1943, 1946, 1947, 1955], "argument": [0, 1, 3, 4, 5, 8, 9, 12, 14, 18, 21, 24, 25, 26, 28, 30, 32, 39, 42, 44, 45, 46, 48, 52, 53, 55, 56, 57, 63, 64, 65, 74, 78, 140, 186, 199, 303, 311, 434, 435, 436, 437, 438, 476, 477, 502, 506, 549, 569, 570, 572, 573, 574, 576, 577, 592, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 723, 727, 728, 729, 730, 731, 732, 782, 783, 788, 808, 809, 810, 813, 814, 815, 830, 846, 847, 850, 852, 854, 869, 870, 871, 872, 873, 874, 878, 879, 880, 881, 882, 886, 887, 888, 891, 893, 894, 895, 896, 897, 902, 903, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 921, 925, 928, 930, 931, 932, 933, 934, 936, 938, 939, 945, 949, 952, 954, 955, 957, 958, 960, 968, 990, 992, 996, 997, 1003, 1011, 1012, 1014, 1037, 1041, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1078, 1081, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1169, 1172, 1189, 1190, 1192, 1195, 1198, 1207, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1317, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1333, 1347, 1348, 1349, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1373, 1376, 1379, 1381, 1388, 1391, 1392, 1393, 1394, 1395, 1399, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1425, 1426, 1427, 1429, 1430, 1435, 1436, 1437, 1444, 1468, 1476, 1480, 1482, 1483, 1526, 1528, 1564, 1600, 1603, 1604, 1605, 1606, 1609, 1620, 1621, 1623, 1627, 1628, 1632, 1636, 1642, 1651, 1655, 1657, 1660, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1687, 1699, 1700, 1704, 1705, 1708, 1709, 1711, 1712, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731, 1732, 1733, 1740, 1742, 1747, 1751, 1757, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1785, 1788, 1790, 1791, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1813, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1842, 1845, 1848, 1854, 1855, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1869, 1870, 1871, 1873, 1875, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1906, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1927, 1928, 1929, 1930, 1932, 1934, 1941, 1943, 1945, 1946, 1950, 1955, 1957, 1959], "keyword": [0, 1, 5, 21, 24, 25, 28, 45, 46, 53, 56, 57, 63, 74, 78, 303, 311, 434, 435, 436, 437, 438, 570, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 850, 854, 869, 870, 871, 872, 873, 874, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 921, 925, 928, 930, 932, 933, 934, 936, 938, 939, 949, 954, 955, 957, 958, 960, 968, 981, 983, 985, 1011, 1012, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1060, 1063, 1065, 1067, 1069, 1070, 1071, 1073, 1078, 1081, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1121, 1122, 1123, 1124, 1137, 1138, 1139, 1140, 1148, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1169, 1172, 1189, 1190, 1195, 1198, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1317, 1318, 1319, 1321, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1333, 1366, 1388, 1391, 1429, 1603, 1604, 1609, 1621, 1623, 1628, 1632, 1651, 1655, 1657, 1660, 1661, 1699, 1700, 1704, 1705, 1708, 1709, 1711, 1712, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731, 1732, 1733, 1740, 1742, 1747, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1785, 1788, 1791, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1805, 1806, 1807, 1808, 1810, 1812, 1813, 1824, 1825, 1826, 1827, 1831, 1834, 1836, 1837, 1838, 1839, 1840, 1842, 1848, 1854, 1855, 1856, 1861, 1862, 1864, 1865, 1866, 1871, 1872, 1885, 1886, 1896, 1905, 1910, 1912, 1914, 1923, 1927, 1928, 1932, 1946, 1957], "closur": [0, 12, 28, 57, 64, 65, 943, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1943, 1947], "divid": [0, 5, 22, 24, 28, 228, 572, 573, 574, 985, 1063, 1066, 1086, 1104, 1113, 1157, 1158, 1206, 1345, 1346, 1352, 1353, 1363, 1389, 1390, 1396, 1420, 1421, 1432, 1433, 1434, 1443, 1460, 1461, 1477, 1478, 1500, 1501, 1511, 1512, 1540, 1563, 1571, 1609, 1813, 1860, 1869, 1913], "need": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 21, 22, 24, 25, 26, 28, 29, 30, 33, 34, 39, 41, 42, 44, 45, 46, 48, 50, 51, 53, 56, 57, 66, 67, 75, 76, 140, 244, 460, 477, 484, 488, 572, 669, 723, 724, 808, 809, 810, 813, 814, 815, 830, 847, 878, 882, 886, 887, 896, 922, 923, 931, 1005, 1014, 1021, 1056, 1058, 1068, 1089, 1091, 1111, 1124, 1195, 1289, 1319, 1365, 1372, 1425, 1426, 1427, 1429, 1435, 1472, 1474, 1476, 1503, 1504, 1505, 1596, 1609, 1621, 1623, 1627, 1629, 1657, 1682, 1728, 1733, 1747, 1806, 1834, 1849, 1851, 1867, 1868, 1870, 1871, 1878, 1879, 1883, 1885, 1886, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1918, 1921, 1923, 1924, 1925, 1927, 1929, 1930, 1934, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1954, 1956, 1957], "modifi": [0, 1, 18, 21, 22, 24, 25, 26, 28, 48, 56, 57, 250, 476, 477, 780, 827, 828, 829, 886, 888, 889, 902, 903, 943, 953, 954, 1148, 1192, 1195, 1198, 1199, 1215, 1372, 1429, 1472, 1474, 1476, 1519, 1520, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1614, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1685, 1693, 1775, 1868, 1871, 1884, 1890, 1894, 1896, 1897, 1902, 1907, 1915, 1916, 1918, 1923, 1928, 1931, 1933, 1937, 1943, 1944, 1945, 1946, 1956], "inspect": [0, 1, 24, 45, 48, 56, 905, 1195, 1207, 1890, 1896, 1901, 1915, 1919, 1930, 1946, 1948, 1950, 1957], "between": [0, 1, 2, 3, 7, 17, 18, 22, 24, 29, 30, 31, 41, 42, 43, 45, 46, 48, 55, 56, 186, 502, 572, 573, 574, 576, 577, 596, 606, 678, 679, 680, 684, 685, 749, 761, 762, 763, 791, 846, 854, 873, 882, 884, 891, 893, 894, 895, 897, 898, 929, 941, 960, 971, 978, 980, 1027, 1031, 1045, 1046, 1051, 1068, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1119, 1148, 1155, 1192, 1195, 1207, 1231, 1232, 1254, 1259, 1326, 1345, 1346, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1368, 1369, 1370, 1374, 1376, 1381, 1390, 1396, 1405, 1406, 1407, 1408, 1409, 1410, 1420, 1422, 1423, 1424, 1429, 1432, 1433, 1434, 1438, 1457, 1460, 1461, 1462, 1477, 1478, 1480, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1527, 1552, 1553, 1554, 1568, 1584, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1686, 1687, 1693, 1695, 1704, 1712, 1716, 1717, 1722, 1723, 1727, 1752, 1806, 1807, 1808, 1809, 1813, 1833, 1834, 1854, 1855, 1868, 1870, 1871, 1872, 1878, 1883, 1886, 1890, 1891, 1893, 1894, 1895, 1899, 1900, 1902, 1904, 1906, 1907, 1909, 1910, 1912, 1914, 1916, 1918, 1919, 1923, 1925, 1927, 1929, 1932, 1936, 1941, 1949, 1954, 1956], "simpl": [0, 15, 18, 22, 34, 41, 45, 52, 54, 56, 477, 960, 1025, 1126, 1134, 1135, 1136, 1195, 1199, 1207, 1347, 1348, 1349, 1372, 1402, 1403, 1404, 1429, 1468, 1519, 1768, 1859, 1866, 1868, 1872, 1886, 1893, 1894, 1895, 1896, 1898, 1899, 1901, 1912, 1915, 1923, 1927, 1943, 1945, 1948, 1949], "util": [0, 7, 17, 42, 45, 46, 48, 49, 55, 56, 57, 721, 724, 727, 728, 729, 734, 735, 745, 749, 753, 779, 787, 985, 1119, 1195, 1381, 1399, 1429, 1444, 1445, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1618, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1642, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1687, 1693, 1817, 1818, 1819, 1820, 1821, 1867, 1871, 1881, 1890, 1892, 1893, 1894, 1896, 1898, 1899, 1901, 1902, 1904, 1912, 1914, 1915, 1916, 1944, 1946, 1954, 1956], "clip_grad_norm_": [0, 48, 1890], "max_norm": [0, 48, 734, 735, 1372, 1373, 1519, 1520, 1613, 1869, 1890], "own": [0, 7, 9, 24, 25, 28, 30, 33, 41, 43, 48, 56, 669, 1003, 1102, 1121, 1157, 1195, 1267, 1357, 1358, 1359, 1360, 1361, 1362, 1429, 1618, 1621, 1871, 1887, 1890, 1894, 1915, 1918, 1919, 1923, 1925, 1927, 1945, 1948], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 28, 30, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 53, 54, 55, 56, 78, 140, 250, 303, 305, 311, 325, 475, 477, 502, 504, 506, 535, 549, 596, 599, 606, 669, 675, 676, 681, 683, 687, 688, 724, 749, 780, 782, 783, 803, 829, 843, 847, 850, 863, 866, 878, 879, 880, 882, 883, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 906, 907, 908, 911, 920, 922, 927, 928, 932, 935, 936, 940, 941, 943, 948, 952, 959, 967, 971, 972, 974, 975, 983, 984, 993, 1001, 1005, 1011, 1015, 1016, 1024, 1025, 1032, 1033, 1035, 1036, 1040, 1042, 1044, 1085, 1086, 1087, 1088, 1091, 1094, 1095, 1098, 1101, 1103, 1105, 1121, 1124, 1125, 1131, 1132, 1134, 1135, 1137, 1157, 1160, 1191, 1192, 1195, 1203, 1206, 1207, 1210, 1211, 1231, 1258, 1267, 1283, 1285, 1293, 1295, 1298, 1306, 1307, 1316, 1324, 1325, 1326, 1327, 1337, 1344, 1346, 1350, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1372, 1373, 1376, 1381, 1382, 1383, 1384, 1389, 1395, 1396, 1399, 1400, 1416, 1420, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1444, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1468, 1472, 1474, 1476, 1477, 1480, 1485, 1486, 1493, 1499, 1501, 1519, 1520, 1525, 1530, 1549, 1550, 1578, 1584, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1616, 1621, 1628, 1632, 1642, 1646, 1654, 1655, 1656, 1657, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1690, 1691, 1694, 1695, 1696, 1697, 1709, 1755, 1788, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 1806, 1807, 1808, 1809, 1812, 1828, 1830, 1837, 1838, 1839, 1840, 1843, 1845, 1846, 1851, 1854, 1855, 1857, 1861, 1866, 1868, 1869, 1870, 1871, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1913, 1915, 1916, 1917, 1918, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1956, 1957, 1958], "assign": [0, 1, 7, 9, 10, 21, 24, 32, 41, 42, 53, 56, 669, 827, 828, 829, 1193, 1195, 1196, 1337, 1365, 1429, 1436, 1439, 1440, 1610, 1621, 1868, 1872, 1890, 1896, 1897, 1898, 1912, 1918, 1924, 1925, 1931, 1932], "been": [0, 1, 5, 7, 9, 11, 21, 22, 24, 25, 28, 29, 30, 32, 34, 41, 44, 48, 51, 52, 56, 74, 477, 669, 749, 886, 972, 974, 979, 1007, 1010, 1067, 1072, 1125, 1198, 1199, 1205, 1210, 1267, 1381, 1388, 1399, 1444, 1493, 1528, 1609, 1618, 1623, 1627, 1629, 1649, 1650, 1665, 1685, 1686, 1687, 1693, 1695, 1711, 1809, 1824, 1851, 1861, 1877, 1881, 1883, 1884, 1885, 1890, 1891, 1893, 1894, 1899, 1900, 1902, 1904, 1906, 1908, 1910, 1912, 1914, 1915, 1923, 1925, 1927, 1932, 1941, 1942, 1946, 1952, 1956], "twice": [0, 55, 606, 891, 1132, 1890, 1891, 1898, 1899, 1945], "trigger": [0, 7, 9, 24, 41, 55, 74, 75, 77, 211, 1042, 1760, 1890, 1891, 1894, 1895, 1896, 1901, 1907, 1923, 1941, 1943, 1946, 1952, 1953, 1956], "runtimeerror": [0, 1, 14, 24, 28, 53, 56, 74, 78, 572, 686, 886, 922, 1116, 1170, 1180, 1195, 1225, 1226, 1227, 1235, 1236, 1237, 1239, 1243, 1249, 1256, 1261, 1262, 1288, 1319, 1429, 1662, 1749, 1788, 1848, 1868, 1870, 1871, 1884, 1886, 1890, 1892, 1898, 1906, 1908, 1912, 1918, 1922, 1927, 1930], "spars": [0, 1, 11, 180, 181, 198, 208, 211, 313, 318, 332, 333, 424, 532, 533, 534, 535, 570, 572, 573, 574, 575, 576, 577, 603, 678, 734, 735, 897, 898, 1042, 1137, 1159, 1180, 1268, 1290, 1300, 1329, 1372, 1373, 1462, 1519, 1520, 1545, 1682, 1701, 1749, 1783, 1788, 1795, 1796, 1797, 1798, 1799, 1800, 1805, 1814, 1833, 1848, 1849, 1867, 1869, 1873, 1878, 1889, 1905, 1906, 1913, 1920, 1930, 1931, 1934, 1944, 1951], "place": [0, 3, 7, 11, 12, 21, 22, 24, 26, 31, 32, 45, 48, 51, 52, 56, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 111, 113, 115, 117, 120, 121, 123, 131, 133, 136, 137, 139, 142, 148, 150, 152, 154, 156, 158, 167, 176, 184, 188, 191, 193, 203, 205, 211, 212, 221, 226, 228, 234, 237, 239, 241, 243, 244, 247, 250, 252, 259, 261, 263, 267, 269, 273, 275, 282, 284, 286, 294, 296, 298, 300, 302, 304, 306, 308, 346, 348, 350, 352, 354, 356, 358, 361, 363, 365, 366, 373, 375, 377, 379, 381, 385, 389, 391, 409, 412, 415, 417, 428, 430, 432, 440, 445, 455, 458, 474, 476, 477, 479, 481, 485, 488, 497, 500, 501, 503, 505, 511, 516, 518, 521, 523, 525, 538, 540, 542, 551, 553, 560, 564, 566, 582, 585, 587, 589, 591, 592, 601, 611, 747, 782, 786, 803, 827, 828, 846, 847, 886, 888, 902, 903, 923, 952, 981, 982, 984, 985, 1005, 1068, 1119, 1124, 1125, 1133, 1195, 1240, 1258, 1319, 1341, 1351, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1386, 1387, 1388, 1415, 1429, 1446, 1447, 1448, 1449, 1456, 1471, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1532, 1535, 1544, 1575, 1577, 1592, 1596, 1600, 1605, 1606, 1609, 1613, 1614, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1651, 1682, 1738, 1740, 1744, 1745, 1746, 1793, 1829, 1867, 1868, 1870, 1871, 1878, 1885, 1890, 1894, 1896, 1901, 1909, 1914, 1915, 1916, 1923, 1924, 1929, 1931, 1933, 1944, 1945, 1946, 1949, 1953, 1955], "replac": [0, 1, 14, 21, 22, 24, 26, 40, 42, 45, 48, 50, 51, 52, 53, 54, 56, 72, 74, 75, 77, 109, 410, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 736, 803, 828, 847, 932, 1014, 1068, 1124, 1125, 1200, 1203, 1213, 1285, 1286, 1319, 1323, 1460, 1471, 1600, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1651, 1653, 1711, 1809, 1813, 1836, 1868, 1869, 1871, 1879, 1894, 1896, 1897, 1899, 1901, 1904, 1908, 1912, 1913, 1915, 1918, 1934, 1942, 1944, 1946, 1948, 1955], "were": [0, 1, 2, 3, 18, 24, 32, 41, 44, 45, 48, 53, 55, 56, 140, 311, 325, 460, 843, 878, 880, 882, 896, 1014, 1125, 1136, 1203, 1267, 1493, 1609, 1613, 1618, 1628, 1645, 1747, 1751, 1823, 1830, 1859, 1870, 1878, 1890, 1894, 1896, 1907, 1912, 1915, 1941, 1945, 1946, 1952, 1955, 1956], "reduc": [0, 2, 3, 14, 22, 24, 25, 26, 28, 48, 311, 502, 505, 506, 675, 682, 684, 685, 686, 688, 808, 809, 810, 811, 814, 816, 863, 864, 941, 982, 993, 1025, 1168, 1248, 1252, 1254, 1259, 1265, 1283, 1293, 1295, 1296, 1298, 1301, 1324, 1325, 1326, 1327, 1345, 1346, 1347, 1348, 1349, 1363, 1365, 1373, 1389, 1395, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1468, 1477, 1500, 1501, 1509, 1511, 1520, 1536, 1539, 1540, 1541, 1551, 1559, 1560, 1561, 1562, 1563, 1564, 1571, 1582, 1583, 1594, 1597, 1609, 1617, 1654, 1671, 1695, 1709, 1711, 1712, 1746, 1790, 1794, 1807, 1808, 1812, 1813, 1834, 1848, 1854, 1855, 1869, 1883, 1884, 1891, 1893, 1895, 1896, 1902, 1904, 1906, 1907, 1908, 1913, 1914, 1915, 1916, 1918, 1927, 1941, 1944, 1946, 1951, 1956, 1957], "increas": [0, 1, 3, 7, 22, 24, 30, 38, 48, 669, 843, 887, 925, 993, 1025, 1068, 1156, 1157, 1337, 1346, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1441, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1569, 1570, 1578, 1680, 1686, 1687, 1691, 1693, 1695, 1747, 1755, 1834, 1853, 1869, 1877, 1882, 1893, 1894, 1900, 1904, 1919, 1927, 1941, 1946, 1950], "set": [0, 1, 2, 3, 5, 8, 9, 13, 14, 20, 21, 22, 24, 25, 26, 28, 30, 32, 34, 39, 41, 42, 43, 44, 45, 46, 48, 51, 52, 55, 56, 57, 69, 71, 78, 140, 144, 244, 320, 434, 435, 436, 437, 438, 447, 485, 488, 509, 569, 570, 669, 724, 730, 732, 749, 768, 774, 781, 782, 783, 786, 804, 805, 806, 809, 810, 811, 814, 815, 830, 843, 847, 848, 850, 851, 854, 867, 879, 881, 882, 889, 890, 891, 892, 893, 894, 895, 896, 920, 925, 936, 940, 941, 954, 969, 979, 994, 1003, 1015, 1016, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1069, 1070, 1071, 1124, 1133, 1142, 1157, 1175, 1176, 1195, 1199, 1203, 1205, 1207, 1209, 1211, 1212, 1231, 1232, 1235, 1241, 1248, 1250, 1252, 1253, 1265, 1266, 1267, 1268, 1282, 1285, 1288, 1309, 1313, 1314, 1315, 1337, 1341, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1374, 1381, 1384, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1414, 1416, 1420, 1421, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1439, 1443, 1444, 1460, 1461, 1468, 1472, 1474, 1476, 1477, 1478, 1493, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1515, 1516, 1521, 1528, 1532, 1539, 1540, 1549, 1550, 1563, 1565, 1571, 1578, 1597, 1609, 1611, 1612, 1617, 1622, 1651, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1711, 1718, 1720, 1724, 1726, 1727, 1735, 1736, 1747, 1748, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1777, 1793, 1798, 1807, 1808, 1827, 1837, 1838, 1839, 1840, 1848, 1851, 1852, 1854, 1855, 1866, 1868, 1870, 1871, 1872, 1875, 1877, 1879, 1880, 1881, 1883, 1886, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1932, 1934, 1936, 1937, 1940, 1945, 1946, 1947, 1949, 1951, 1953, 1955, 1956, 1957], "directli": [0, 1, 3, 7, 9, 14, 15, 21, 22, 24, 26, 30, 31, 32, 40, 45, 46, 48, 52, 56, 546, 721, 736, 879, 888, 943, 1051, 1119, 1125, 1132, 1134, 1140, 1226, 1435, 1462, 1481, 1539, 1584, 1643, 1834, 1868, 1870, 1871, 1881, 1891, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1907, 1915, 1917, 1918, 1923, 1927, 1932, 1934, 1944, 1945, 1946, 1948, 1950, 1955, 1956], "fill": [0, 24, 144, 163, 248, 249, 250, 276, 307, 311, 367, 390, 434, 435, 436, 438, 443, 470, 597, 612, 912, 1056, 1069, 1070, 1071, 1122, 1123, 1226, 1237, 1239, 1373, 1472, 1520, 1566, 1660, 1661, 1720, 1721, 1722, 1723, 1724, 1725, 1813, 1848, 1864, 1865, 1869, 1875, 1885, 1886, 1889, 1894, 1896, 1907, 1913, 1927, 1934, 1945, 1949, 1951], "later": [0, 1, 2, 3, 7, 20, 22, 24, 29, 48, 55, 56, 734, 735, 745, 753, 905, 1003, 1267, 1399, 1422, 1423, 1424, 1444, 1458, 1552, 1553, 1554, 1581, 1609, 1813, 1868, 1891, 1893, 1894, 1895, 1902, 1907, 1924, 1925, 1949], "chang": [0, 1, 2, 3, 7, 11, 12, 18, 22, 24, 26, 28, 29, 30, 32, 40, 45, 46, 48, 49, 52, 53, 55, 56, 129, 211, 223, 244, 311, 447, 485, 488, 506, 509, 545, 606, 669, 808, 866, 897, 898, 941, 952, 953, 954, 968, 969, 970, 979, 990, 992, 1003, 1004, 1011, 1012, 1014, 1056, 1104, 1124, 1142, 1148, 1169, 1192, 1195, 1206, 1207, 1226, 1237, 1239, 1240, 1241, 1244, 1257, 1297, 1369, 1372, 1390, 1399, 1429, 1460, 1481, 1493, 1528, 1552, 1553, 1554, 1578, 1600, 1601, 1609, 1611, 1612, 1618, 1621, 1622, 1651, 1655, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1687, 1690, 1691, 1693, 1695, 1697, 1711, 1751, 1755, 1793, 1804, 1807, 1808, 1809, 1833, 1851, 1854, 1855, 1866, 1867, 1868, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1902, 1904, 1905, 1907, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1941, 1944, 1945, 1947, 1948, 1949, 1952, 1953, 1956], "further": [0, 1, 4, 9, 12, 14, 22, 24, 48, 55, 57, 66, 67, 1140, 1199, 1235, 1337, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1609, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1699, 1871, 1878, 1902, 1904, 1915, 1917, 1925, 1932, 1937, 1940, 1944, 1951, 1954, 1956], "floattensor": [0, 24, 311, 476, 675, 676, 677, 678, 679, 724, 897, 898, 909, 1142, 1372, 1373, 1432, 1472, 1753, 1930, 1933], "end": [0, 7, 8, 9, 21, 22, 24, 30, 34, 38, 51, 56, 351, 352, 527, 749, 773, 786, 809, 810, 854, 910, 955, 969, 1029, 1058, 1068, 1107, 1121, 1148, 1154, 1155, 1192, 1195, 1216, 1221, 1251, 1261, 1263, 1266, 1268, 1282, 1328, 1329, 1344, 1345, 1346, 1363, 1365, 1371, 1375, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1396, 1399, 1400, 1415, 1420, 1423, 1424, 1429, 1431, 1436, 1437, 1440, 1444, 1447, 1457, 1460, 1466, 1471, 1478, 1511, 1520, 1532, 1533, 1609, 1616, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1685, 1690, 1727, 1760, 1763, 1766, 1781, 1834, 1845, 1846, 1862, 1868, 1869, 1870, 1871, 1883, 1890, 1891, 1894, 1895, 1896, 1898, 1899, 1905, 1908, 1910, 1912, 1914, 1917, 1918, 1921, 1923, 1928, 1941, 1945, 1948, 1951, 1956], "reason": [0, 3, 8, 9, 21, 24, 26, 45, 48, 53, 71, 669, 830, 1089, 1091, 1195, 1211, 1212, 1231, 1232, 1259, 1296, 1345, 1369, 1429, 1530, 1578, 1605, 1606, 1621, 1743, 1868, 1870, 1871, 1877, 1891, 1895, 1897, 1905, 1907, 1912, 1923, 1930, 1942, 1944, 1945, 1946, 1949, 1950, 1956, 1957], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 21, 22, 24, 28, 29, 31, 32, 34, 41, 42, 43, 45, 48, 49, 50, 53, 54, 55, 56, 74, 484, 502, 504, 506, 747, 812, 815, 852, 881, 883, 888, 897, 927, 940, 941, 969, 1003, 1014, 1047, 1048, 1049, 1050, 1119, 1121, 1130, 1137, 1157, 1170, 1182, 1192, 1195, 1198, 1207, 1211, 1241, 1259, 1268, 1275, 1285, 1287, 1296, 1319, 1329, 1341, 1351, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1386, 1387, 1388, 1415, 1447, 1448, 1449, 1456, 1471, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1530, 1532, 1547, 1600, 1609, 1657, 1662, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1699, 1705, 1755, 1848, 1866, 1867, 1868, 1869, 1871, 1873, 1875, 1883, 1884, 1885, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1914, 1917, 1918, 1919, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1941, 1944, 1945, 1948, 1949, 1953, 1955, 1956, 1958], "synchron": [0, 3, 4, 17, 18, 22, 26, 28, 32, 41, 48, 55, 866, 971, 972, 974, 982, 1002, 1042, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1243, 1244, 1250, 1253, 1256, 1257, 1259, 1260, 1268, 1307, 1468, 1609, 1655, 1657, 1733, 1867, 1893, 1894, 1895, 1900, 1904, 1916, 1923, 1946], "fall": [0, 2, 7, 14, 21, 45, 784, 897, 941, 1157, 1209, 1267, 1390, 1460, 1537, 1582, 1613, 1614, 1866, 1912, 1918, 1946], "below": [0, 1, 5, 9, 12, 14, 21, 22, 24, 30, 32, 33, 38, 41, 42, 43, 44, 45, 46, 56, 57, 64, 65, 669, 723, 737, 746, 784, 803, 1011, 1055, 1056, 1057, 1058, 1059, 1068, 1096, 1098, 1102, 1140, 1148, 1195, 1212, 1252, 1253, 1258, 1265, 1297, 1360, 1361, 1362, 1381, 1383, 1390, 1399, 1401, 1425, 1426, 1427, 1429, 1444, 1460, 1481, 1511, 1537, 1582, 1609, 1621, 1655, 1682, 1752, 1755, 1793, 1824, 1834, 1837, 1838, 1839, 1840, 1868, 1870, 1871, 1873, 1877, 1878, 1883, 1884, 1890, 1891, 1894, 1895, 1896, 1899, 1900, 1902, 1904, 1906, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1920, 1923, 1924, 1925, 1928, 1931, 1934, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1952, 1954, 1956], "someth": [0, 3, 7, 45, 46, 50, 56, 57, 59, 890, 892, 1068, 1195, 1211, 1429, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1873, 1881, 1883, 1884, 1891, 1900, 1908, 1912, 1923, 1942, 1944, 1946, 1948, 1949, 1955, 1956, 1957], "wrong": [0, 24, 56, 74, 886, 1193, 1196, 1895, 1904, 1908, 1912, 1914], "incompat": [0, 9, 14, 53, 922, 1192, 1892, 1915], "due": [0, 3, 4, 5, 7, 22, 24, 30, 40, 45, 48, 53, 56, 57, 59, 74, 475, 869, 890, 891, 896, 956, 1208, 1231, 1232, 1259, 1285, 1369, 1383, 1472, 1481, 1539, 1578, 1649, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1814, 1868, 1886, 1894, 1895, 1899, 1900, 1906, 1910, 1912, 1918, 1919, 1923, 1925, 1946, 1949, 1952, 1956, 1958], "float64": [0, 11, 230, 435, 438, 569, 869, 949, 1111, 1120, 1142, 1177, 1195, 1225, 1231, 1232, 1234, 1236, 1252, 1429, 1578, 1668, 1669, 1705, 1713, 1752, 1753, 1756, 1787, 1795, 1796, 1797, 1798, 1799, 1800, 1827, 1857, 1862, 1902, 1905, 1927, 1929, 1930, 1933, 1934, 1959], "variant": [0, 5, 22, 847, 1226, 1237, 1250, 1253, 1326, 1329, 1668, 1669, 1670, 1682, 1787, 1836, 1867, 1901, 1921, 1933, 1951, 1952, 1955], "suppli": [0, 5, 7, 14, 15, 24, 1003, 1435, 1664, 1871, 1894, 1912, 1927, 1946, 1956], "won": [0, 8, 22, 26, 41, 51, 447, 1195, 1207, 1429, 1564, 1603, 1604, 1866, 1891, 1896, 1923, 1935, 1945, 1946, 1949, 1954, 1956], "go": [0, 1, 7, 15, 21, 24, 38, 43, 52, 56, 488, 489, 549, 887, 902, 1268, 1342, 1343, 1344, 1422, 1423, 1424, 1870, 1871, 1878, 1883, 1884, 1885, 1891, 1893, 1894, 1896, 1897, 1901, 1902, 1904, 1908, 1912, 1915, 1930, 1932, 1942, 1943, 1944, 1945, 1946, 1949], "addmm": [0, 45, 46, 57, 96, 1805, 1869, 1884, 1905, 1913, 1927, 1951, 1955], "b": [0, 1, 3, 11, 12, 21, 24, 26, 30, 39, 45, 56, 57, 60, 75, 77, 250, 325, 388, 606, 674, 675, 737, 746, 770, 813, 869, 886, 888, 889, 900, 902, 903, 909, 920, 921, 923, 927, 929, 931, 934, 939, 952, 955, 961, 962, 963, 964, 965, 966, 967, 968, 1011, 1012, 1060, 1063, 1067, 1068, 1113, 1114, 1115, 1116, 1121, 1125, 1138, 1160, 1172, 1192, 1198, 1206, 1207, 1215, 1216, 1218, 1227, 1228, 1236, 1240, 1241, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1261, 1262, 1265, 1268, 1277, 1279, 1280, 1286, 1294, 1299, 1301, 1318, 1346, 1350, 1372, 1373, 1380, 1416, 1499, 1501, 1520, 1527, 1545, 1616, 1643, 1644, 1645, 1646, 1647, 1648, 1656, 1679, 1681, 1712, 1718, 1731, 1734, 1750, 1762, 1781, 1790, 1795, 1796, 1797, 1799, 1800, 1804, 1809, 1810, 1812, 1819, 1820, 1829, 1836, 1837, 1839, 1856, 1861, 1868, 1869, 1870, 1871, 1884, 1885, 1886, 1889, 1890, 1892, 1894, 1896, 1898, 1899, 1900, 1905, 1907, 1910, 1917, 1918, 1924, 1925, 1927, 1928, 1931, 1932, 1937, 1942, 1943, 1946, 1948, 1949, 1951, 1955, 1956, 1958], "c": [0, 1, 3, 8, 9, 14, 21, 24, 30, 39, 46, 51, 56, 75, 77, 250, 325, 488, 509, 606, 674, 810, 866, 869, 888, 920, 931, 956, 1005, 1011, 1045, 1060, 1063, 1068, 1114, 1115, 1116, 1125, 1126, 1130, 1135, 1138, 1148, 1195, 1206, 1218, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1245, 1247, 1251, 1252, 1254, 1256, 1258, 1259, 1318, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1365, 1368, 1369, 1370, 1374, 1376, 1377, 1378, 1384, 1392, 1393, 1394, 1397, 1398, 1400, 1401, 1411, 1412, 1413, 1417, 1422, 1423, 1424, 1425, 1426, 1427, 1432, 1433, 1434, 1436, 1441, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1463, 1468, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1493, 1501, 1511, 1512, 1524, 1528, 1563, 1569, 1570, 1578, 1616, 1644, 1646, 1647, 1648, 1655, 1656, 1699, 1715, 1731, 1769, 1790, 1804, 1809, 1829, 1846, 1850, 1851, 1867, 1868, 1869, 1870, 1871, 1875, 1884, 1885, 1893, 1894, 1895, 1897, 1899, 1901, 1908, 1915, 1924, 1925, 1927, 1928, 1931, 1932, 1938, 1943, 1944, 1945, 1946, 1948, 1949, 1951, 1955, 1956, 1957, 1958], "addmm_": [0, 1869, 1884, 1927], "d": [0, 1, 11, 21, 22, 24, 29, 30, 45, 49, 56, 303, 311, 325, 460, 502, 504, 506, 533, 572, 606, 675, 679, 854, 869, 888, 909, 910, 912, 919, 920, 921, 925, 931, 1055, 1057, 1067, 1068, 1081, 1085, 1086, 1087, 1088, 1093, 1094, 1097, 1098, 1103, 1104, 1105, 1108, 1109, 1110, 1136, 1137, 1152, 1153, 1160, 1169, 1192, 1196, 1200, 1238, 1239, 1289, 1300, 1321, 1336, 1344, 1345, 1349, 1359, 1363, 1364, 1368, 1369, 1370, 1372, 1374, 1376, 1381, 1383, 1394, 1399, 1401, 1413, 1424, 1438, 1444, 1468, 1477, 1478, 1480, 1493, 1528, 1539, 1545, 1572, 1596, 1597, 1617, 1650, 1655, 1656, 1680, 1700, 1718, 1727, 1739, 1747, 1752, 1804, 1809, 1822, 1823, 1829, 1832, 1837, 1838, 1839, 1840, 1853, 1859, 1861, 1866, 1869, 1878, 1884, 1885, 1886, 1889, 1891, 1894, 1896, 1897, 1899, 1900, 1907, 1912, 1923, 1924, 1927, 1928, 1932, 1933, 1945, 1946, 1948, 1954, 1956, 1958], "best": [0, 1, 7, 15, 18, 21, 24, 30, 42, 48, 51, 850, 851, 906, 928, 941, 1211, 1212, 1241, 1435, 1682, 1695, 1867, 1868, 1870, 1883, 1889, 1890, 1891, 1896, 1898, 1915, 1923, 1927, 1938, 1943, 1946, 1950], "stabil": [0, 1227, 1232, 1283, 1346, 1347, 1348, 1349, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1465, 1468, 1477, 1525, 1586, 1617, 1650, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1715, 1897, 1946, 1956], "respect": [0, 1, 5, 8, 24, 25, 28, 30, 39, 41, 48, 54, 55, 56, 186, 199, 476, 569, 592, 678, 679, 680, 749, 784, 808, 830, 874, 880, 882, 896, 898, 902, 903, 936, 960, 1056, 1058, 1059, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1135, 1148, 1195, 1227, 1231, 1232, 1241, 1251, 1254, 1256, 1259, 1268, 1300, 1323, 1345, 1352, 1360, 1361, 1362, 1366, 1381, 1383, 1399, 1429, 1430, 1444, 1474, 1476, 1477, 1478, 1479, 1481, 1519, 1528, 1605, 1606, 1623, 1627, 1629, 1651, 1653, 1681, 1695, 1786, 1790, 1813, 1829, 1885, 1890, 1891, 1894, 1896, 1899, 1902, 1903, 1916, 1921, 1927, 1928, 1929, 1934, 1945, 1950], "describ": [0, 5, 7, 8, 9, 21, 22, 26, 28, 29, 32, 33, 39, 41, 45, 46, 56, 223, 502, 781, 782, 783, 804, 805, 806, 830, 848, 926, 994, 1011, 1028, 1068, 1148, 1216, 1256, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1367, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1384, 1387, 1390, 1392, 1393, 1394, 1396, 1401, 1420, 1422, 1423, 1424, 1435, 1436, 1443, 1447, 1460, 1468, 1476, 1477, 1478, 1480, 1511, 1523, 1524, 1533, 1566, 1693, 1834, 1867, 1868, 1870, 1871, 1889, 1890, 1891, 1894, 1895, 1896, 1898, 1899, 1901, 1902, 1907, 1912, 1915, 1917, 1918, 1921, 1924, 1925, 1934, 1946, 1947, 1952], "expos": [0, 1, 8, 24, 28, 48, 55, 56, 784, 1121, 1891, 1894, 1901, 1915, 1918, 1957], "namespac": [0, 56, 1042, 1868, 1872, 1875, 1896, 1902, 1910, 1912, 1916, 1921, 1938, 1943, 1957], "defin": [0, 1, 2, 3, 5, 9, 14, 15, 21, 22, 24, 25, 26, 29, 30, 32, 33, 39, 41, 42, 45, 46, 48, 53, 56, 424, 434, 436, 438, 506, 555, 781, 786, 788, 827, 848, 849, 850, 851, 878, 879, 880, 881, 1025, 1051, 1068, 1069, 1088, 1116, 1122, 1138, 1140, 1154, 1156, 1157, 1184, 1195, 1201, 1218, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1245, 1247, 1248, 1252, 1253, 1254, 1256, 1258, 1259, 1265, 1301, 1366, 1371, 1377, 1378, 1385, 1386, 1387, 1388, 1395, 1397, 1398, 1429, 1435, 1447, 1462, 1464, 1469, 1471, 1493, 1528, 1578, 1584, 1600, 1603, 1609, 1627, 1629, 1636, 1637, 1657, 1660, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1687, 1690, 1693, 1711, 1720, 1722, 1724, 1731, 1760, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1790, 1792, 1834, 1837, 1838, 1839, 1840, 1862, 1864, 1866, 1868, 1871, 1873, 1875, 1883, 1884, 1886, 1891, 1894, 1895, 1899, 1900, 1902, 1904, 1908, 1912, 1914, 1915, 1916, 1917, 1918, 1921, 1923, 1927, 1928, 1933, 1934, 1935, 1941, 1942, 1945, 1947, 1949, 1953, 1957], "still": [0, 1, 2, 7, 8, 21, 24, 29, 30, 32, 41, 45, 48, 55, 56, 783, 788, 887, 892, 1199, 1205, 1213, 1396, 1420, 1609, 1610, 1611, 1612, 1695, 1743, 1868, 1871, 1883, 1884, 1885, 1886, 1890, 1891, 1894, 1895, 1896, 1898, 1900, 1907, 1908, 1912, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1945, 1949, 1951, 1952, 1956, 1958], "unlist": 0, "downstream": [0, 3, 1881, 1946, 1947, 1949, 1956], "stabl": [0, 1, 2, 12, 24, 30, 41, 42, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 865, 952, 1068, 1231, 1232, 1236, 1241, 1249, 1253, 1256, 1259, 1261, 1268, 1346, 1785, 1867, 1869, 1889, 1892, 1906, 1923], "believ": [0, 8, 1946], "unstabl": [0, 30, 1231, 1232, 1259, 1276, 1285, 1547, 1813, 1928], "__matmul__": 0, "addbmm": [0, 90, 909, 1869, 1905, 1913], "addmv": [0, 98, 1869, 1884, 1913], "addr": [0, 24, 100, 1869, 1913, 1958], "baddbmm": [0, 142, 1869, 1905, 1913], "bmm": [0, 1848, 1869, 1884, 1886, 1905, 1906, 1913, 1927, 1951], "chain_matmul": [0, 1869, 1913], "multi_dot": [0, 931], "conv1d": [0, 697, 701, 704, 714, 730, 1360, 1368, 1405, 1848, 1869, 1913, 1918, 1920], "conv2d": [0, 45, 698, 702, 705, 707, 715, 731, 781, 803, 1195, 1205, 1207, 1211, 1212, 1361, 1369, 1406, 1429, 1430, 1436, 1457, 1480, 1636, 1848, 1868, 1869, 1879, 1912, 1913, 1918, 1920, 1921, 1932, 1937], "conv3d": [0, 699, 703, 706, 708, 716, 732, 1362, 1370, 1407, 1848, 1869, 1913, 1918, 1920], "conv_transpose1d": [0, 1869, 1913, 1920], "conv_transpose2d": [0, 1869, 1913, 1920], "conv_transpose3d": [0, 1869, 1913, 1920], "grucel": [0, 1905, 1918, 1920, 1921], "lstmcell": [0, 1905, 1918, 1920, 1921], "matmul": [0, 2, 11, 921, 941, 1135, 1300, 1480, 1701, 1711, 1755, 1813, 1869, 1884, 1886, 1894, 1905, 1913, 1920, 1927, 1941], "mv": [0, 11, 1207, 1848, 1869, 1884, 1913, 1927], "prelu": [0, 1430, 1869, 1913, 1920], "rnncell": [0, 1918, 1920, 1921], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 84, 616, 617, 855, 1869, 1884, 1913, 1934, 1951], "asin": [0, 131, 618, 619, 857, 1869, 1884, 1913, 1927, 1951], "cosh": [0, 193, 626, 627, 673, 1869, 1884, 1913, 1951], "cosine_embedding_loss": [0, 1869, 1913], "cdist": [0, 1894, 1913], "cosine_similar": [0, 1478, 1869, 1913], "cross_entropi": [0, 1869], "cumprod": [0, 203, 1869, 1884, 1913], "cumsum": [0, 205, 1051, 1848, 1869, 1884, 1913, 1951], "dist": [0, 22, 24, 25, 28, 30, 42, 48, 932, 933, 934, 1225, 1231, 1232, 1233, 1235, 1236, 1237, 1241, 1242, 1253, 1254, 1257, 1259, 1260, 1283, 1286, 1438, 1468, 1609, 1616, 1813, 1869, 1895, 1913, 1923, 1925], "erfinv": [0, 241, 1869, 1884, 1913, 1927, 1928], "exp": [0, 1, 30, 243, 632, 633, 759, 892, 893, 895, 1111, 1255, 1275, 1283, 1346, 1351, 1365, 1371, 1395, 1418, 1419, 1433, 1443, 1456, 1459, 1461, 1462, 1464, 1465, 1469, 1502, 1548, 1571, 1579, 1580, 1584, 1586, 1589, 1616, 1708, 1769, 1770, 1792, 1809, 1869, 1884, 1891, 1912, 1913, 1928, 1951], "expm1": [0, 247, 634, 635, 1869, 1884, 1913, 1927, 1928, 1951], "group_norm": [0, 1869, 1913, 1920], "hinge_embedding_loss": [0, 1869, 1913], "kl_div": [0, 1869, 1913], "l1_loss": [0, 1869, 1913], "layer_norm": [0, 1401, 1869, 1913, 1920], "log": [0, 14, 21, 22, 30, 32, 34, 35, 38, 39, 43, 69, 71, 366, 367, 642, 649, 669, 1078, 1271, 1273, 1275, 1276, 1283, 1311, 1337, 1345, 1346, 1365, 1383, 1395, 1418, 1419, 1433, 1436, 1443, 1461, 1462, 1465, 1525, 1530, 1540, 1547, 1548, 1563, 1571, 1584, 1586, 1609, 1867, 1869, 1877, 1881, 1884, 1891, 1894, 1896, 1910, 1912, 1913, 1917, 1928, 1932, 1935, 1936, 1937, 1948, 1949, 1950, 1951, 1953, 1954, 1956], "log_softmax": [0, 1352, 1395, 1512, 1563, 1584, 1869, 1885, 1913, 1928], "log10": [0, 361, 643, 644, 1869, 1884, 1913, 1951], "log1p": [0, 363, 645, 646, 1869, 1884, 1913, 1927, 1928, 1951], "log2": [0, 365, 647, 648, 1869, 1884, 1913, 1928, 1951], "margin_ranking_loss": [0, 1869, 1913], "mse_loss": [0, 52, 1124, 1869, 1913], "multilabel_margin_loss": [0, 1869, 1913], "multi_margin_loss": [0, 1869, 1913], "nll_loss": [0, 1869, 1913], "norm": [0, 30, 48, 50, 56, 691, 692, 693, 694, 695, 696, 929, 1062, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1227, 1231, 1240, 1241, 1248, 1253, 1265, 1372, 1373, 1420, 1438, 1473, 1474, 1475, 1476, 1477, 1519, 1520, 1564, 1568, 1613, 1617, 1626, 1627, 1632, 1635, 1636, 1650, 1653, 1670, 1732, 1869, 1873, 1890, 1891, 1899, 1902, 1905, 1913], "normal": [0, 1, 22, 28, 41, 45, 48, 56, 72, 326, 341, 367, 443, 545, 960, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1156, 1192, 1195, 1200, 1231, 1273, 1341, 1347, 1348, 1349, 1368, 1369, 1370, 1374, 1384, 1392, 1393, 1394, 1401, 1411, 1412, 1413, 1417, 1456, 1468, 1472, 1473, 1474, 1475, 1476, 1498, 1528, 1529, 1538, 1542, 1546, 1572, 1613, 1614, 1617, 1632, 1640, 1641, 1650, 1653, 1679, 1695, 1715, 1724, 1725, 1732, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1809, 1848, 1866, 1867, 1868, 1869, 1873, 1884, 1886, 1889, 1891, 1894, 1897, 1912, 1913, 1915, 1920, 1923, 1928, 1932, 1934, 1935, 1940, 1951, 1959], "pdist": [0, 1438, 1869, 1913], "poisson_nll_loss": [0, 1869, 1913], "pow": [0, 1, 458, 485, 890, 891, 894, 1111, 1869, 1871, 1884, 1890, 1891, 1913, 1927, 1933, 1951], "prod": [0, 38, 311, 506, 1085, 1087, 1090, 1091, 1093, 1094, 1097, 1098, 1100, 1101, 1103, 1105, 1261, 1262, 1372, 1376, 1480, 1848, 1869, 1884, 1913, 1927, 1951], "reciproc": [0, 474, 652, 653, 1742, 1869, 1884, 1913, 1951], "rsqrt": [0, 500, 1869, 1884, 1913, 1951], "sinh": [0, 525, 660, 661, 871, 1869, 1884, 1913, 1927, 1951], "smooth_l1_loss": [0, 1869, 1913], "soft_margin_loss": [0, 1869, 1913], "softmax": [0, 30, 785, 1337, 1365, 1395, 1419, 1463, 1511, 1530, 1540, 1547, 1578, 1585, 1789, 1869, 1884, 1885, 1886, 1894, 1913, 1920, 1927, 1928], "softmin": [0, 1869], "softplu": [0, 30, 1428, 1558, 1869, 1913], "sum": [0, 1, 12, 21, 24, 25, 28, 30, 32, 48, 53, 54, 56, 485, 506, 555, 735, 882, 890, 891, 892, 893, 894, 895, 896, 902, 903, 907, 960, 983, 984, 985, 1050, 1051, 1068, 1128, 1129, 1130, 1135, 1172, 1227, 1248, 1252, 1265, 1273, 1274, 1275, 1283, 1319, 1327, 1345, 1346, 1352, 1362, 1363, 1365, 1366, 1373, 1376, 1383, 1389, 1390, 1395, 1396, 1397, 1398, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1462, 1464, 1477, 1478, 1480, 1500, 1501, 1511, 1512, 1520, 1525, 1530, 1540, 1549, 1550, 1563, 1571, 1584, 1585, 1609, 1632, 1637, 1638, 1656, 1687, 1733, 1755, 1771, 1790, 1792, 1832, 1834, 1848, 1867, 1869, 1871, 1875, 1881, 1884, 1890, 1891, 1894, 1895, 1896, 1897, 1902, 1905, 1912, 1913, 1923, 1924, 1927, 1928, 1933, 1941, 1942, 1943, 1946, 1949, 1951, 1954, 1956, 1958], "renorm": [0, 481, 1372, 1373, 1519, 1520, 1869, 1913], "tan": [0, 564, 664, 665, 872, 1869, 1884, 1913, 1927, 1932, 1951], "triplet_margin_loss": [0, 1869, 1913], "take": [0, 1, 2, 3, 4, 7, 9, 14, 21, 22, 24, 26, 28, 30, 32, 40, 41, 42, 43, 45, 48, 50, 51, 53, 54, 55, 56, 57, 64, 65, 77, 749, 782, 787, 803, 809, 815, 851, 890, 891, 892, 893, 894, 895, 897, 898, 968, 1005, 1056, 1058, 1059, 1084, 1086, 1089, 1092, 1096, 1097, 1099, 1102, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1228, 1250, 1253, 1337, 1346, 1373, 1377, 1378, 1381, 1399, 1423, 1424, 1425, 1426, 1427, 1429, 1437, 1444, 1472, 1482, 1483, 1523, 1524, 1541, 1565, 1578, 1609, 1654, 1679, 1683, 1708, 1836, 1849, 1859, 1866, 1868, 1869, 1871, 1878, 1879, 1883, 1884, 1885, 1886, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1906, 1907, 1908, 1912, 1913, 1915, 1917, 1918, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1936, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1954, 1955], "addcdiv": [0, 92, 1869, 1913], "addcmul": [0, 94, 1869, 1913], "atan2": [0, 136, 860, 1869, 1884, 1913, 1951], "bilinear": [0, 768, 774, 775, 1068, 1481, 1482, 1528, 1539, 1597, 1598, 1848, 1869, 1913], "cross": [0, 7, 8, 26, 30, 32, 1345, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1500, 1501, 1511, 1869, 1894, 1908, 1913, 1949], "dot": [0, 2, 14, 53, 54, 606, 891, 893, 894, 895, 1047, 1048, 1049, 1050, 1126, 1136, 1172, 1216, 1263, 1264, 1290, 1345, 1346, 1365, 1376, 1389, 1396, 1420, 1435, 1436, 1478, 1578, 1809, 1856, 1857, 1858, 1859, 1869, 1884, 1899, 1913, 1915], "grid_sampl": [0, 1493, 1848, 1869, 1913], "index_put": [0, 1848, 1869, 1913, 1951], "scatter_add": [0, 1869, 1913, 1951], "tensordot": [0, 1172, 1261, 1262, 1873, 1894, 1913], "binari": [0, 2, 14, 15, 22, 30, 32, 34, 39, 41, 56, 144, 724, 911, 1289, 1345, 1346, 1435, 1500, 1501, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1663, 1867, 1872, 1884, 1885, 1901, 1910, 1912, 1915, 1932], "add": [0, 1, 3, 7, 12, 15, 17, 21, 24, 26, 28, 38, 41, 45, 46, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 72, 76, 88, 280, 303, 502, 504, 675, 676, 677, 680, 736, 737, 746, 779, 782, 827, 848, 850, 851, 984, 1014, 1025, 1068, 1125, 1195, 1207, 1337, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1405, 1406, 1407, 1408, 1409, 1410, 1429, 1431, 1435, 1436, 1440, 1443, 1530, 1571, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1755, 1805, 1866, 1868, 1869, 1870, 1871, 1875, 1879, 1881, 1884, 1886, 1890, 1892, 1893, 1896, 1897, 1900, 1901, 1902, 1904, 1909, 1910, 1912, 1913, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1936, 1937, 1941, 1942, 1943, 1944, 1946, 1947, 1950, 1951, 1954, 1955, 1956, 1957, 1958], "nativ": [0, 2, 11, 22, 29, 48, 56, 994, 1125, 1206, 1613, 1614, 1755, 1868, 1871, 1883, 1894, 1907, 1909, 1914, 1915, 1923, 1946], "intervent": [0, 8, 1923], "mixtur": [0, 30, 1365, 1511], "bceloss": [0, 1346, 1500], "aren": [0, 8, 53, 56, 71, 1125, 1884, 1891, 1924, 1957], "mean": [0, 2, 3, 5, 7, 8, 12, 15, 18, 21, 22, 24, 26, 28, 30, 41, 43, 45, 46, 48, 49, 51, 54, 55, 56, 244, 311, 325, 367, 443, 477, 484, 506, 747, 749, 770, 783, 785, 850, 851, 909, 922, 952, 960, 1124, 1126, 1206, 1296, 1314, 1319, 1324, 1328, 1329, 1335, 1336, 1337, 1339, 1340, 1341, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1363, 1365, 1367, 1371, 1373, 1374, 1375, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1399, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1415, 1416, 1418, 1419, 1420, 1421, 1428, 1432, 1433, 1434, 1436, 1437, 1443, 1444, 1447, 1448, 1449, 1456, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1477, 1478, 1479, 1499, 1500, 1501, 1509, 1511, 1512, 1520, 1521, 1525, 1536, 1537, 1540, 1541, 1545, 1551, 1559, 1560, 1561, 1562, 1563, 1571, 1582, 1583, 1594, 1595, 1609, 1657, 1682, 1715, 1724, 1725, 1755, 1769, 1790, 1807, 1808, 1814, 1848, 1854, 1855, 1866, 1868, 1869, 1870, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1894, 1895, 1896, 1898, 1899, 1902, 1908, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1923, 1924, 1925, 1927, 1944, 1945, 1946, 1949, 1950, 1951, 1952, 1953], "doesn": [0, 1, 2, 7, 8, 11, 12, 21, 24, 26, 46, 51, 53, 55, 56, 74, 812, 815, 869, 886, 896, 952, 972, 993, 1125, 1136, 1203, 1209, 1235, 1259, 1267, 1276, 1357, 1358, 1359, 1366, 1395, 1462, 1503, 1504, 1505, 1540, 1584, 1609, 1610, 1632, 1671, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1786, 1790, 1859, 1868, 1871, 1872, 1884, 1886, 1891, 1892, 1894, 1896, 1897, 1901, 1904, 1908, 1914, 1916, 1924, 1927, 1945, 1951, 1956], "revers": [0, 30, 54, 56, 502, 723, 782, 890, 892, 1086, 1088, 1108, 1128, 1130, 1135, 1263, 1399, 1442, 1570, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639, 1836, 1853, 1869, 1870, 1871, 1891, 1895, 1897, 1913, 1933], "rais": [0, 1, 5, 7, 14, 24, 28, 30, 32, 34, 41, 45, 48, 53, 55, 56, 57, 78, 303, 305, 311, 686, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 922, 931, 973, 1038, 1111, 1116, 1193, 1195, 1200, 1203, 1211, 1213, 1225, 1227, 1235, 1236, 1239, 1243, 1244, 1249, 1256, 1257, 1261, 1262, 1267, 1288, 1314, 1429, 1578, 1603, 1621, 1622, 1627, 1629, 1632, 1642, 1662, 1663, 1749, 1798, 1848, 1866, 1872, 1878, 1883, 1891, 1894, 1896, 1898, 1905, 1910, 1912, 1915, 1916, 1922, 1923, 1934, 1944, 1945, 1946, 1949, 1955, 1956, 1957], "mani": [0, 3, 7, 11, 14, 21, 22, 24, 30, 41, 45, 48, 52, 53, 56, 78, 392, 669, 878, 880, 890, 892, 1068, 1208, 1352, 1682, 1781, 1830, 1837, 1838, 1839, 1840, 1868, 1870, 1884, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1901, 1902, 1905, 1909, 1912, 1914, 1918, 1925, 1927, 1930, 1932, 1933, 1935, 1942, 1944, 1945, 1946, 1948, 1949, 1950, 1955, 1956, 1958], "sigmoid": [0, 30, 56, 516, 656, 657, 749, 784, 1345, 1346, 1372, 1381, 1382, 1399, 1400, 1458, 1500, 1527, 1581, 1869, 1884, 1885, 1889, 1910, 1913, 1920, 1928, 1951], "right": [0, 2, 7, 9, 12, 24, 26, 30, 48, 56, 809, 854, 910, 917, 919, 920, 925, 930, 934, 952, 1062, 1068, 1109, 1112, 1113, 1117, 1148, 1152, 1153, 1157, 1161, 1192, 1215, 1240, 1245, 1256, 1258, 1259, 1267, 1273, 1274, 1319, 1337, 1342, 1343, 1344, 1345, 1346, 1357, 1358, 1359, 1376, 1383, 1396, 1397, 1398, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1432, 1433, 1434, 1438, 1439, 1445, 1477, 1480, 1481, 1482, 1483, 1528, 1548, 1566, 1614, 1621, 1671, 1685, 1686, 1727, 1747, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1809, 1829, 1834, 1836, 1851, 1853, 1866, 1869, 1871, 1883, 1884, 1885, 1891, 1896, 1899, 1910, 1912, 1914, 1921, 1925, 1928, 1943, 1945, 1954], "entropi": [0, 30, 1345, 1365, 1433, 1500, 1501, 1511, 1928], "combin": [0, 3, 21, 22, 24, 41, 54, 55, 606, 678, 701, 702, 703, 704, 705, 706, 707, 708, 782, 843, 879, 1025, 1097, 1098, 1103, 1105, 1157, 1290, 1300, 1346, 1376, 1390, 1435, 1476, 1480, 1522, 1545, 1628, 1868, 1869, 1870, 1890, 1894, 1897, 1912, 1913, 1914, 1916, 1918, 1921, 1923, 1942, 1949], "bcewithlogitsloss": [0, 1501], "bcewithlogit": 0, "_convolut": [0, 1913], "avg_pool3d": [0, 1869, 1913, 1920, 1951], "grid_sampler_2d": [0, 1869, 1913, 1951], "_grid_sampler_2d_cpu_fallback": [0, 1913], "grid_sampler_3d": [0, 1869, 1913], "polar": [0, 30, 1255, 1869, 1913], "quantil": [0, 1296, 1326, 1869, 1913, 1928], "nanquantil": [0, 1869, 1913], "stft": [0, 910, 919, 1152, 1153, 1192, 1215, 1869, 1913], "view_as_complex": [0, 11, 1869, 1913], "choleski": [0, 2, 30, 933, 934, 1226, 1232, 1268, 1869, 1913], "cholesky_invers": [0, 2, 1869, 1913], "cholesky_solv": [0, 2, 1869, 1913], "invers": [0, 30, 672, 673, 871, 874, 928, 933, 934, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1192, 1236, 1237, 1249, 1253, 1256, 1261, 1262, 1360, 1361, 1362, 1372, 1373, 1376, 1425, 1426, 1427, 1480, 1519, 1520, 1555, 1556, 1557, 1618, 1621, 1645, 1687, 1693, 1844, 1867, 1869, 1871, 1905, 1913, 1928], "lu_solv": [0, 2, 1243, 1869, 1913], "orgqr": [0, 1869, 1913], "ormqr": [0, 1140, 1235, 1869, 1913], "pinvers": [0, 1241, 1869, 1913], "max_pool3d": [0, 1869, 1913, 1920], "max_unpool2d": [0, 1523, 1553, 1869, 1913], "max_unpool3d": [0, 1524, 1554, 1869, 1913], "adaptive_avg_pool3d": [0, 1869, 1896, 1913, 1920], "reflection_pad1d": [0, 1869, 1913, 1951], "reflection_pad2d": [0, 1869, 1913, 1951], "replication_pad1d": [0, 1869, 1913], "replication_pad2d": [0, 1869, 1913, 1951], "replication_pad3d": [0, 1869, 1913, 1951], "ctc_loss": [0, 1352, 1869, 1913], "fft_fft": [0, 1869, 1913], "fft_ifft": [0, 1869, 1913], "fft_fft2": [0, 1869, 1913], "fft_ifft2": [0, 1869, 1913], "fft_fftn": [0, 1869, 1913], "fft_ifftn": [0, 1869, 1913], "fft_rfft": [0, 1869, 1913], "fft_irfft": [0, 1869, 1913], "fft_rfft2": [0, 1869, 1913], "fft_irfft2": [0, 1869, 1913], "fft_rfftn": [0, 1869, 1913], "fft_irfftn": [0, 1869, 1913], "fft_hfft": [0, 1869, 1913], "fft_ihfft": [0, 1869, 1913], "linalg_matrix_norm": [0, 1869, 1913], "linalg_cond": [0, 1869, 1913], "linalg_matrix_rank": [0, 1869, 1913], "linalg_solv": [0, 1869, 1913], "linalg_choleski": [0, 1869, 1913], "linalg_svdv": [0, 1869, 1913], "linalg_eigv": [0, 1869, 1913], "linalg_eigvalsh": [0, 1869, 1913], "linalg_inv": [0, 1869, 1913], "linalg_householder_product": [0, 1869, 1913], "linalg_tensorinv": [0, 1869, 1913], "linalg_tensorsolv": [0, 1869, 1913], "fake_quantize_per_tensor_affin": [0, 1869, 1913], "eig": [0, 1232, 1233, 1259, 1905], "geqrf": [0, 1235, 1699, 1869, 1913], "lstsq": [0, 1140, 1227, 1253], "_lu_with_info": [0, 1913], "qr": [0, 2, 1140, 1231, 1232, 1235, 1241, 1259, 1616, 1699, 1869, 1913], "solv": [0, 7, 11, 1140, 1148, 1227, 1236, 1238, 1239, 1242, 1243, 1245, 1249, 1257, 1258, 1262, 1268, 1286, 1836, 1891, 1899, 1905, 1908, 1938, 1946], "svd": [0, 2, 11, 1231, 1232, 1241, 1253, 1260, 1276, 1621, 1701, 1814, 1869, 1905, 1913, 1927, 1951], "symeig": 0, "triangular_solv": [0, 1869, 1913], "fractional_max_pool2d": [0, 1869, 1913], "fractional_max_pool3d": [0, 1869, 1913], "adaptive_max_pool3d": [0, 1869, 1913], "multilabel_margin_loss_forward": [0, 1913], "linalg_qr": [0, 1869, 1913], "linalg_cholesky_ex": [0, 1869, 1913], "linalg_svd": [0, 1869, 1913], "linalg_eig": [0, 1869, 1913], "linalg_eigh": [0, 1869, 1913], "linalg_lstsq": [0, 1869, 1913], "linalg_inv_ex": [0, 1869, 1913], "cat": [0, 24, 30, 56, 533, 736, 737, 746, 782, 785, 950, 951, 1297, 1448, 1794, 1806, 1868, 1869, 1884, 1912, 1913, 1915, 1918, 1920, 1927, 1936, 1944, 1951], "stack": [0, 8, 18, 21, 22, 24, 30, 34, 45, 46, 52, 53, 56, 749, 906, 928, 939, 1029, 1030, 1067, 1134, 1136, 1160, 1297, 1352, 1381, 1399, 1400, 1444, 1473, 1475, 1646, 1850, 1859, 1861, 1867, 1869, 1886, 1894, 1895, 1898, 1913, 1915, 1917, 1920, 1927, 1943, 1945, 1946, 1949, 1956, 1958], "index_copi": [0, 1848, 1869, 1913], "implement": [1, 2, 5, 8, 12, 16, 17, 21, 22, 24, 25, 26, 28, 30, 33, 38, 39, 42, 45, 48, 53, 56, 57, 59, 65, 70, 74, 140, 502, 504, 506, 676, 727, 728, 729, 730, 731, 732, 749, 768, 770, 774, 782, 789, 808, 809, 810, 813, 814, 815, 867, 869, 882, 891, 897, 898, 952, 958, 1068, 1111, 1116, 1121, 1128, 1129, 1131, 1132, 1195, 1201, 1203, 1205, 1206, 1209, 1251, 1254, 1267, 1268, 1296, 1337, 1352, 1366, 1381, 1397, 1398, 1429, 1435, 1441, 1445, 1448, 1465, 1474, 1476, 1528, 1566, 1578, 1586, 1609, 1613, 1614, 1616, 1617, 1621, 1632, 1645, 1649, 1650, 1653, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1693, 1711, 1718, 1731, 1740, 1743, 1780, 1790, 1813, 1814, 1829, 1845, 1848, 1849, 1851, 1870, 1871, 1872, 1875, 1878, 1883, 1886, 1887, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1914, 1915, 1916, 1918, 1923, 1924, 1927, 1928, 1931, 1933, 1941, 1944, 1946, 1949, 1952, 1957], "arbitrari": [1, 3, 24, 28, 45, 57, 60, 64, 244, 879, 1051, 1259, 1267, 1366, 1372, 1396, 1420, 1480, 1500, 1501, 1519, 1540, 1566, 1642, 1813, 1834, 1871, 1877, 1891, 1897, 1901, 1902, 1914, 1916, 1918, 1927, 1935, 1946, 1952, 1956, 1957], "scalar": [1, 12, 24, 30, 45, 46, 57, 65, 87, 140, 144, 250, 303, 435, 578, 676, 677, 727, 728, 729, 730, 731, 732, 868, 869, 882, 890, 891, 894, 896, 914, 917, 925, 956, 960, 1063, 1068, 1083, 1116, 1122, 1148, 1155, 1172, 1186, 1220, 1221, 1290, 1297, 1326, 1337, 1345, 1346, 1352, 1363, 1365, 1366, 1383, 1389, 1390, 1395, 1396, 1401, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1478, 1530, 1572, 1655, 1660, 1661, 1662, 1695, 1708, 1710, 1712, 1730, 1731, 1747, 1796, 1797, 1798, 1799, 1800, 1827, 1845, 1846, 1862, 1864, 1865, 1869, 1870, 1871, 1881, 1886, 1889, 1891, 1896, 1899, 1912, 1923, 1927, 1930, 1932, 1934, 1945, 1946, 1951, 1955], "exist": [1, 7, 8, 9, 11, 14, 21, 24, 25, 26, 30, 32, 34, 39, 41, 42, 46, 48, 52, 56, 57, 72, 73, 244, 488, 781, 843, 867, 890, 891, 892, 893, 894, 895, 896, 897, 961, 962, 963, 964, 965, 966, 967, 1009, 1195, 1199, 1211, 1231, 1236, 1242, 1243, 1268, 1326, 1429, 1430, 1439, 1788, 1806, 1851, 1866, 1868, 1875, 1878, 1883, 1884, 1886, 1887, 1891, 1892, 1894, 1896, 1897, 1900, 1901, 1902, 1903, 1905, 1907, 1912, 1915, 1916, 1917, 1918, 1923, 1925, 1927, 1931, 1933, 1941, 1942, 1945, 1947, 1951, 1954, 1958], "code": [1, 3, 4, 8, 9, 11, 14, 15, 16, 21, 22, 24, 29, 30, 32, 42, 43, 45, 46, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 109, 669, 941, 943, 961, 962, 963, 964, 965, 966, 967, 1011, 1012, 1025, 1125, 1170, 1195, 1199, 1200, 1206, 1207, 1208, 1211, 1212, 1213, 1226, 1237, 1239, 1267, 1445, 1457, 1609, 1759, 1866, 1867, 1870, 1871, 1877, 1885, 1891, 1892, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1908, 1910, 1912, 1914, 1922, 1923, 1924, 1925, 1927, 1930, 1931, 1938, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1954, 1955, 1956, 1957, 1958], "declar": [1, 9, 14, 21, 42, 1870, 1871, 1872, 1896, 1912, 1915, 1916], "requires_grad": [1, 5, 30, 48, 54, 325, 434, 435, 436, 437, 438, 476, 477, 485, 854, 869, 886, 888, 889, 897, 898, 900, 902, 903, 910, 919, 1014, 1069, 1070, 1071, 1072, 1081, 1086, 1104, 1121, 1122, 1123, 1126, 1136, 1152, 1153, 1170, 1195, 1215, 1266, 1282, 1345, 1346, 1363, 1365, 1372, 1373, 1383, 1395, 1396, 1420, 1421, 1429, 1435, 1436, 1443, 1476, 1477, 1500, 1501, 1511, 1563, 1609, 1610, 1611, 1612, 1649, 1654, 1660, 1661, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1757, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1790, 1795, 1796, 1797, 1798, 1799, 1800, 1827, 1848, 1859, 1864, 1865, 1869, 1873, 1884, 1885, 1886, 1894, 1896, 1897, 1902, 1907, 1912, 1913, 1923, 1924, 1933, 1934, 1935, 1943, 1945, 1946, 1951, 1954], "type": [1, 2, 3, 5, 12, 14, 15, 17, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 45, 48, 53, 55, 56, 57, 59, 62, 63, 65, 66, 67, 70, 71, 75, 77, 78, 140, 181, 186, 198, 316, 319, 323, 331, 434, 435, 436, 437, 438, 470, 548, 593, 669, 674, 675, 676, 677, 678, 679, 723, 724, 727, 728, 729, 738, 740, 741, 742, 743, 745, 753, 755, 756, 759, 760, 761, 762, 763, 764, 765, 766, 767, 770, 773, 781, 782, 783, 786, 804, 805, 806, 808, 809, 810, 811, 812, 814, 816, 829, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 862, 868, 878, 879, 880, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 909, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 925, 926, 927, 928, 929, 931, 940, 941, 942, 947, 952, 963, 964, 965, 966, 978, 980, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1006, 1008, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1031, 1043, 1045, 1046, 1049, 1050, 1063, 1068, 1069, 1070, 1071, 1081, 1082, 1083, 1086, 1104, 1111, 1113, 1114, 1115, 1116, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1132, 1133, 1134, 1136, 1138, 1142, 1143, 1144, 1147, 1152, 1153, 1155, 1156, 1157, 1171, 1174, 1176, 1177, 1180, 1183, 1191, 1192, 1193, 1195, 1196, 1198, 1201, 1202, 1205, 1207, 1209, 1211, 1212, 1214, 1215, 1218, 1227, 1231, 1248, 1252, 1259, 1265, 1266, 1267, 1268, 1282, 1285, 1288, 1295, 1297, 1304, 1305, 1308, 1318, 1324, 1327, 1337, 1341, 1357, 1358, 1359, 1366, 1373, 1419, 1429, 1430, 1431, 1435, 1439, 1440, 1457, 1462, 1463, 1464, 1472, 1473, 1474, 1475, 1476, 1488, 1489, 1493, 1494, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1525, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1546, 1547, 1549, 1550, 1551, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1571, 1573, 1574, 1576, 1578, 1579, 1581, 1582, 1583, 1584, 1585, 1591, 1593, 1594, 1595, 1596, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1653, 1655, 1656, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1701, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731, 1733, 1737, 1740, 1747, 1748, 1751, 1752, 1753, 1755, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1789, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1809, 1810, 1812, 1813, 1814, 1827, 1836, 1838, 1840, 1845, 1846, 1848, 1849, 1850, 1853, 1859, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1872, 1879, 1880, 1881, 1884, 1886, 1889, 1890, 1891, 1893, 1894, 1899, 1900, 1901, 1902, 1905, 1907, 1908, 1910, 1911, 1913, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1927, 1928, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1942, 1943, 1944, 1946, 1949, 1951, 1955, 1957], "doubl": [1, 3, 32, 46, 470, 476, 606, 738, 740, 741, 742, 743, 745, 755, 756, 770, 886, 888, 893, 897, 898, 926, 933, 934, 949, 968, 1014, 1083, 1111, 1148, 1195, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1276, 1277, 1278, 1279, 1280, 1286, 1373, 1429, 1488, 1491, 1520, 1600, 1662, 1699, 1705, 1795, 1796, 1797, 1799, 1800, 1813, 1827, 1836, 1862, 1871, 1884, 1894, 1896, 1897, 1905, 1912, 1915, 1929, 1930, 1933], "bfloat16": [1, 22, 48, 1177, 1195, 1247, 1264, 1429, 1662, 1668, 1669, 1755, 1884, 1894, 1927, 1929, 1930, 1933, 1934, 1959], "cfloat": [1, 11, 24, 301, 472, 606, 933, 934, 968, 1165, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1286, 1699, 1729, 1813, 1836, 1858, 1930, 1933], "cdoubl": [1, 11, 933, 934, 968, 1195, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1286, 1429, 1699, 1813, 1836, 1930, 1933], "beta": [1, 2, 11, 49, 55, 89, 90, 95, 96, 97, 98, 99, 100, 141, 142, 311, 506, 543, 675, 678, 679, 680, 909, 969, 1003, 1004, 1011, 1012, 1014, 1152, 1215, 1290, 1300, 1347, 1348, 1349, 1384, 1390, 1392, 1393, 1394, 1401, 1417, 1460, 1465, 1468, 1545, 1546, 1578, 1582, 1586, 1668, 1669, 1670, 1672, 1678, 1682, 1715, 1773, 1775, 1786, 1791, 1805, 1867, 1869, 1879, 1894, 1909, 1910, 1911, 1912, 1918, 1923, 1927, 1930, 1935, 1951], "even": [1, 8, 21, 22, 24, 29, 32, 48, 55, 56, 77, 533, 569, 804, 805, 806, 882, 960, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1101, 1104, 1135, 1180, 1208, 1225, 1227, 1231, 1232, 1233, 1234, 1248, 1252, 1254, 1255, 1259, 1260, 1265, 1290, 1296, 1366, 1468, 1503, 1504, 1505, 1566, 1609, 1616, 1654, 1656, 1693, 1740, 1751, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1813, 1857, 1868, 1871, 1872, 1881, 1886, 1890, 1891, 1894, 1896, 1898, 1900, 1902, 1904, 1905, 1906, 1907, 1914, 1915, 1916, 1925, 1930, 1941, 1944, 1945, 1946, 1948, 1949, 1958], "though": [1, 24, 56, 57, 60, 140, 783, 879, 882, 892, 1084, 1085, 1087, 1193, 1196, 1290, 1656, 1868, 1872, 1885, 1886, 1891, 1894, 1896, 1897, 1904, 1905, 1914, 1918, 1945, 1958], "signatur": [1, 12, 21, 34, 45, 46, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 388, 476, 477, 545, 902, 903, 952, 970, 1195, 1429, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1621, 1642, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1809, 1894, 1896, 1897, 1912, 1915, 1916, 1923, 1927, 1943, 1948, 1949, 1957], "veri": [1, 4, 7, 8, 18, 21, 22, 24, 52, 54, 56, 943, 958, 1126, 1134, 1136, 1258, 1392, 1393, 1394, 1609, 1610, 1616, 1671, 1693, 1699, 1776, 1780, 1836, 1859, 1870, 1883, 1891, 1896, 1898, 1899, 1900, 1902, 1904, 1905, 1908, 1914, 1915, 1922, 1923, 1924, 1927, 1945, 1946, 1948, 1949, 1955, 1956], "unlik": [1, 3, 7, 30, 46, 48, 54, 477, 482, 1065, 1104, 1107, 1111, 1170, 1231, 1232, 1251, 1254, 1259, 1263, 1293, 1296, 1298, 1401, 1611, 1612, 1730, 1752, 1856, 1870, 1871, 1883, 1886, 1894, 1904, 1906, 1930, 1935, 1944, 1946], "coverag": [1, 7, 45, 49, 56, 1128, 1129, 1867, 1868, 1873, 1885, 1918, 1927, 1957], "plan": [1, 2, 7, 9, 24, 26, 29, 883, 1609, 1711, 1886, 1891, 1896, 1915, 1927, 1955, 1956], "consid": [1, 5, 8, 22, 24, 32, 41, 45, 46, 48, 53, 55, 56, 683, 768, 774, 783, 890, 892, 893, 897, 960, 1055, 1056, 1057, 1058, 1059, 1089, 1124, 1184, 1188, 1191, 1195, 1236, 1238, 1239, 1240, 1241, 1249, 1250, 1253, 1258, 1261, 1365, 1376, 1429, 1432, 1480, 1493, 1528, 1539, 1597, 1610, 1616, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1651, 1681, 1749, 1769, 1804, 1809, 1837, 1838, 1839, 1840, 1866, 1868, 1871, 1875, 1878, 1890, 1891, 1892, 1896, 1898, 1899, 1902, 1905, 1910, 1915, 1917, 1919, 1924, 1925, 1927, 1930, 1933, 1934, 1944, 1946, 1955, 1957, 1958], "ad": [1, 3, 9, 14, 21, 22, 24, 28, 30, 38, 48, 51, 53, 54, 55, 56, 211, 212, 303, 309, 460, 504, 669, 675, 676, 677, 678, 679, 680, 724, 883, 884, 885, 890, 891, 892, 893, 897, 909, 1068, 1072, 1128, 1129, 1131, 1170, 1195, 1209, 1273, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1435, 1436, 1438, 1443, 1457, 1468, 1472, 1477, 1480, 1506, 1507, 1508, 1525, 1552, 1553, 1554, 1578, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1621, 1628, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1715, 1716, 1717, 1757, 1786, 1791, 1805, 1866, 1868, 1870, 1875, 1881, 1885, 1890, 1897, 1899, 1901, 1902, 1915, 1918, 1921, 1927, 1932, 1935, 1942, 1944, 1945, 1946, 1951, 1952, 1955, 1958], "tutori": [1, 3, 9, 15, 24, 25, 28, 56, 883, 884, 885, 888, 1851, 1867, 1868, 1875, 1878, 1887, 1896, 1901, 1902, 1904, 1907, 1912, 1918, 1945, 1946, 1948], "how": [1, 3, 5, 7, 8, 9, 12, 15, 17, 21, 24, 26, 29, 33, 41, 42, 43, 45, 48, 49, 50, 52, 53, 56, 57, 64, 65, 70, 223, 476, 477, 774, 781, 782, 785, 830, 848, 850, 851, 883, 884, 885, 888, 902, 903, 1051, 1072, 1125, 1134, 1148, 1170, 1195, 1206, 1267, 1376, 1429, 1480, 1481, 1566, 1597, 1609, 1642, 1654, 1731, 1755, 1757, 1770, 1781, 1867, 1868, 1870, 1871, 1875, 1878, 1880, 1883, 1884, 1885, 1887, 1890, 1893, 1894, 1895, 1897, 1898, 1899, 1902, 1904, 1906, 1907, 1912, 1916, 1918, 1921, 1923, 1924, 1925, 1927, 1932, 1944, 1948, 1949, 1950, 1958], "major": [1, 6, 7, 8, 9, 996, 1813, 1867, 1871, 1914, 1944, 1946, 1948, 1950], "build": [1, 8, 9, 14, 15, 24, 30, 56, 1195, 1205, 1429, 1475, 1493, 1528, 1867, 1868, 1878, 1887, 1891, 1912, 1916, 1918, 1924, 1932, 1933, 1938, 1941, 1956], "basic": [1, 3, 7, 9, 12, 26, 41, 56, 57, 58, 1128, 1129, 1130, 1202, 1268, 1609, 1687, 1867, 1872, 1887, 1892, 1894, 1895, 1899, 1915, 1924, 1931, 1932, 1943, 1946, 1948, 1949], "jacobian": [1, 30, 49, 50, 52, 53, 882, 884, 890, 893, 895, 896, 897, 898, 1129, 1130, 1131, 1135, 1136, 1859, 1891, 1896, 1899], "hessian": [1, 49, 52, 53, 891, 894, 1129, 1130, 1889, 1897], "etc": [1, 3, 5, 11, 12, 21, 22, 24, 30, 32, 41, 42, 46, 48, 848, 849, 850, 943, 952, 1192, 1195, 1365, 1429, 1609, 1733, 1866, 1870, 1871, 1878, 1896, 1897, 1898, 1902, 1904, 1910, 1912, 1914, 1915, 1918, 1923, 1927, 1929, 1932, 1935, 1941, 1943, 1949], "user": [1, 2, 5, 7, 8, 9, 10, 11, 12, 15, 21, 22, 24, 25, 26, 29, 30, 31, 32, 34, 38, 41, 42, 44, 46, 48, 49, 52, 53, 55, 56, 57, 74, 140, 325, 721, 727, 728, 729, 734, 735, 745, 753, 783, 786, 788, 827, 843, 850, 851, 882, 888, 896, 972, 1005, 1119, 1124, 1125, 1195, 1232, 1267, 1429, 1472, 1474, 1475, 1476, 1578, 1603, 1604, 1609, 1618, 1632, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1866, 1867, 1868, 1870, 1871, 1875, 1878, 1883, 1885, 1886, 1890, 1891, 1892, 1894, 1896, 1899, 1900, 1901, 1902, 1904, 1910, 1912, 1914, 1916, 1917, 1918, 1920, 1923, 1924, 1927, 1931, 1932, 1934, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1954, 1956, 1957], "input": [1, 2, 3, 5, 9, 11, 12, 15, 19, 21, 22, 24, 25, 28, 29, 30, 31, 34, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 64, 65, 70, 72, 74, 75, 76, 78, 140, 250, 270, 291, 391, 472, 488, 506, 598, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 709, 717, 718, 723, 724, 727, 728, 729, 730, 731, 732, 734, 735, 745, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 791, 803, 806, 808, 826, 827, 828, 829, 846, 847, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 940, 941, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 968, 984, 1011, 1012, 1014, 1047, 1048, 1049, 1050, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1137, 1138, 1139, 1140, 1141, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1172, 1173, 1174, 1175, 1177, 1180, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1195, 1198, 1199, 1202, 1203, 1207, 1209, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1286, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1596, 1597, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1619, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1635, 1636, 1637, 1638, 1642, 1643, 1644, 1646, 1651, 1654, 1655, 1656, 1658, 1659, 1661, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1686, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1721, 1723, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1744, 1745, 1746, 1749, 1750, 1752, 1755, 1763, 1764, 1765, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1822, 1823, 1824, 1825, 1826, 1828, 1830, 1831, 1832, 1833, 1836, 1837, 1839, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1863, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1878, 1879, 1885, 1886, 1887, 1889, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1905, 1906, 1907, 1909, 1910, 1912, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1927, 1928, 1930, 1931, 1934, 1936, 1937, 1941, 1943, 1944, 1945, 1946, 1951, 1954, 1955, 1956, 1957], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 140, 144, 244, 313, 325, 447, 476, 477, 502, 504, 534, 603, 606, 669, 676, 718, 730, 731, 732, 737, 746, 747, 749, 757, 758, 761, 762, 763, 774, 780, 781, 782, 783, 786, 788, 803, 809, 812, 813, 815, 826, 830, 843, 847, 848, 850, 851, 852, 868, 869, 878, 879, 880, 882, 883, 884, 885, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 905, 911, 928, 941, 944, 947, 953, 960, 969, 971, 981, 983, 985, 992, 993, 1003, 1011, 1013, 1017, 1019, 1021, 1025, 1026, 1051, 1068, 1069, 1072, 1073, 1086, 1088, 1089, 1090, 1091, 1104, 1107, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1134, 1135, 1136, 1139, 1140, 1148, 1151, 1156, 1157, 1170, 1186, 1192, 1193, 1195, 1196, 1198, 1199, 1201, 1202, 1206, 1207, 1209, 1211, 1212, 1217, 1220, 1227, 1235, 1238, 1242, 1243, 1248, 1251, 1254, 1255, 1259, 1265, 1267, 1284, 1285, 1287, 1297, 1306, 1307, 1326, 1328, 1329, 1330, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1377, 1378, 1381, 1386, 1387, 1388, 1390, 1396, 1398, 1399, 1402, 1403, 1404, 1415, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1434, 1435, 1436, 1438, 1439, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1456, 1457, 1460, 1465, 1468, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1481, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1523, 1524, 1539, 1552, 1553, 1554, 1572, 1578, 1597, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1621, 1642, 1643, 1649, 1654, 1656, 1660, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1690, 1691, 1693, 1697, 1699, 1708, 1712, 1720, 1724, 1734, 1740, 1743, 1755, 1757, 1758, 1760, 1785, 1788, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 1807, 1808, 1809, 1813, 1827, 1831, 1834, 1836, 1844, 1845, 1847, 1849, 1851, 1854, 1855, 1859, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959], "lambda": [1, 12, 21, 26, 30, 51, 54, 55, 56, 57, 60, 64, 65, 68, 248, 476, 477, 902, 903, 929, 1126, 1131, 1135, 1136, 1231, 1232, 1233, 1234, 1267, 1385, 1466, 1478, 1568, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1681, 1687, 1689, 1692, 1787, 1859, 1872, 1891, 1896, 1897, 1914, 1915, 1923, 1934, 1946, 1957], "captur": [1, 12, 15, 45, 46, 56, 57, 60, 64, 65, 669, 952, 969, 971, 1003, 1009, 1014, 1198, 1307, 1665, 1668, 1669, 1672, 1868, 1872, 1877, 1896, 1897, 1900, 1909, 1910, 1912, 1915, 1918, 1937, 1938, 1941, 1943, 1944, 1946, 1949, 1954, 1956], "f": [1, 10, 22, 24, 30, 32, 33, 38, 39, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 163, 248, 276, 325, 367, 884, 885, 960, 1086, 1088, 1095, 1104, 1125, 1126, 1128, 1129, 1130, 1131, 1135, 1136, 1148, 1195, 1203, 1206, 1207, 1267, 1395, 1397, 1398, 1400, 1429, 1478, 1495, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1519, 1520, 1523, 1524, 1530, 1563, 1565, 1566, 1578, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1743, 1859, 1868, 1870, 1871, 1884, 1885, 1891, 1894, 1896, 1898, 1899, 1900, 1902, 1908, 1910, 1911, 1912, 1915, 1916, 1923, 1927, 1932, 1934, 1942, 1944, 1946, 1949, 1955, 1957], "three": [1, 2, 6, 9, 24, 28, 48, 50, 53, 56, 77, 877, 1066, 1068, 1148, 1157, 1239, 1242, 1243, 1244, 1259, 1287, 1344, 1359, 1362, 1401, 1424, 1578, 1616, 1656, 1687, 1755, 1871, 1891, 1894, 1895, 1896, 1912, 1915, 1916, 1918, 1923, 1925, 1927, 1932, 1953], "anoth": [1, 5, 7, 12, 21, 22, 24, 26, 30, 31, 32, 43, 45, 48, 56, 475, 948, 969, 971, 972, 974, 1119, 1205, 1231, 1232, 1235, 1259, 1372, 1373, 1430, 1439, 1600, 1617, 1751, 1868, 1870, 1871, 1877, 1890, 1891, 1893, 1894, 1896, 1902, 1904, 1908, 1915, 1916, 1924, 1925, 1927, 1933, 1935, 1941, 1942, 1946, 1948, 1949, 1952, 1955, 1958], "constant": [1, 12, 21, 45, 46, 56, 57, 58, 62, 63, 65, 67, 733, 764, 810, 811, 944, 1051, 1108, 1109, 1110, 1192, 1195, 1199, 1211, 1243, 1268, 1354, 1355, 1356, 1373, 1376, 1383, 1438, 1460, 1477, 1480, 1525, 1528, 1566, 1617, 1663, 1679, 1684, 1687, 1834, 1869, 1871, 1890, 1896, 1902, 1906, 1912, 1914, 1927, 1945, 1948, 1949], "boolean": [1, 12, 14, 30, 41, 56, 57, 64, 65, 390, 392, 878, 913, 915, 916, 918, 946, 952, 971, 972, 974, 1073, 1139, 1151, 1170, 1184, 1185, 1186, 1187, 1188, 1191, 1220, 1268, 1284, 1289, 1330, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1429, 1468, 1578, 1618, 1621, 1711, 1807, 1808, 1831, 1854, 1855, 1870, 1872, 1894, 1896, 1929, 1930, 1932, 1933, 1934, 1935, 1946], "flag": [1, 2, 14, 24, 25, 31, 42, 44, 48, 51, 53, 56, 724, 862, 890, 892, 910, 919, 932, 933, 934, 941, 999, 1119, 1124, 1126, 1127, 1129, 1130, 1131, 1135, 1136, 1152, 1153, 1170, 1176, 1183, 1267, 1287, 1435, 1539, 1540, 1609, 1618, 1621, 1651, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1755, 1757, 1762, 1788, 1798, 1836, 1848, 1859, 1867, 1868, 1871, 1883, 1891, 1894, 1896, 1905, 1906, 1912, 1915, 1918, 1932, 1933, 1946, 1947, 1955, 1956], "inform": [1, 2, 3, 4, 7, 8, 9, 17, 18, 20, 21, 22, 24, 25, 28, 32, 33, 34, 37, 41, 42, 45, 46, 48, 50, 56, 69, 181, 198, 245, 303, 311, 476, 477, 487, 504, 506, 607, 669, 724, 892, 897, 898, 902, 903, 912, 1072, 1103, 1105, 1125, 1170, 1192, 1195, 1212, 1225, 1232, 1241, 1357, 1358, 1359, 1360, 1361, 1362, 1390, 1399, 1425, 1426, 1427, 1429, 1435, 1444, 1456, 1472, 1474, 1476, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1520, 1539, 1578, 1597, 1598, 1599, 1609, 1642, 1654, 1663, 1678, 1710, 1737, 1755, 1757, 1762, 1788, 1848, 1868, 1871, 1877, 1878, 1886, 1887, 1891, 1893, 1894, 1895, 1896, 1901, 1902, 1905, 1910, 1912, 1915, 1917, 1918, 1930, 1932, 1933, 1934, 1937, 1940, 1944, 1945, 1946, 1949, 1950, 1954, 1956, 1958, 1959], "well": [1, 3, 5, 7, 9, 14, 22, 24, 29, 41, 45, 48, 53, 54, 56, 606, 780, 811, 814, 850, 1011, 1129, 1130, 1195, 1199, 1206, 1211, 1231, 1232, 1233, 1235, 1241, 1254, 1259, 1305, 1347, 1348, 1349, 1365, 1399, 1429, 1468, 1549, 1550, 1609, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1711, 1845, 1868, 1871, 1878, 1884, 1886, 1890, 1891, 1894, 1896, 1897, 1899, 1902, 1904, 1906, 1912, 1915, 1918, 1921, 1923, 1925, 1927, 1931, 1932, 1935, 1942, 1945, 1946, 1947, 1952], "relat": [1, 6, 7, 9, 21, 24, 32, 45, 46, 47, 48, 53, 57, 58, 63, 65, 69, 669, 1148, 1235, 1376, 1460, 1480, 1609, 1701, 1849, 1886, 1891, 1907, 1915, 1923, 1927, 1928, 1934, 1946, 1957], "mechan": [1, 8, 24, 35, 39, 41, 45, 46, 56, 868, 1072, 1170, 1195, 1429, 1578, 1654, 1757, 1827, 1867, 1883, 1886, 1895, 1896, 1901, 1902, 1921, 1923, 1924, 1941], "confus": [1, 8, 57, 1195, 1429, 1891, 1894, 1915, 1927, 1947, 1949], "receiv": [1, 7, 9, 21, 24, 28, 30, 46, 53, 55, 1025, 1195, 1429, 1605, 1606, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1696, 1871, 1881, 1883, 1890, 1891, 1904, 1916, 1923, 1924, 1925, 1927, 1944, 1949, 1956, 1958], "memori": [1, 2, 3, 5, 11, 22, 26, 28, 30, 31, 46, 48, 52, 56, 140, 145, 160, 162, 165, 168, 169, 170, 185, 196, 199, 223, 230, 244, 257, 287, 315, 321, 327, 329, 330, 383, 434, 435, 436, 437, 438, 447, 452, 475, 488, 489, 513, 514, 569, 592, 606, 723, 752, 867, 869, 882, 888, 897, 898, 923, 938, 941, 969, 970, 973, 976, 977, 979, 993, 994, 1003, 1004, 1007, 1011, 1013, 1014, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1032, 1033, 1034, 1038, 1068, 1069, 1070, 1071, 1119, 1120, 1121, 1123, 1124, 1125, 1130, 1132, 1136, 1195, 1213, 1241, 1267, 1304, 1305, 1306, 1314, 1373, 1399, 1400, 1429, 1472, 1473, 1474, 1476, 1578, 1596, 1609, 1616, 1642, 1654, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1720, 1721, 1723, 1724, 1725, 1726, 1827, 1848, 1859, 1865, 1867, 1868, 1879, 1883, 1885, 1886, 1891, 1896, 1904, 1910, 1912, 1916, 1917, 1918, 1923, 1927, 1929, 1930, 1931, 1933, 1934, 1941, 1945, 1946, 1948, 1953, 1955], "overlap": [1, 21, 22, 24, 28, 48, 56, 867, 897, 898, 1071, 1125, 1192, 1376, 1480, 1609, 1809, 1848, 1894, 1895, 1930, 1944, 1946, 1955], "dens": [1, 28, 208, 534, 535, 572, 573, 574, 575, 576, 577, 910, 919, 1152, 1153, 1215, 1268, 1682, 1783, 1786, 1790, 1791, 1794, 1795, 1796, 1797, 1799, 1800, 1805, 1814, 1848, 1886, 1906, 1927, 1930, 1944], "stride": [1, 11, 45, 46, 57, 62, 65, 66, 67, 128, 211, 244, 329, 434, 435, 436, 437, 438, 488, 509, 533, 570, 572, 573, 574, 576, 577, 606, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 757, 758, 761, 762, 763, 771, 772, 854, 867, 910, 919, 1069, 1071, 1081, 1086, 1104, 1122, 1123, 1152, 1153, 1159, 1195, 1205, 1209, 1215, 1266, 1282, 1300, 1342, 1343, 1344, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1397, 1398, 1405, 1406, 1407, 1408, 1409, 1410, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1441, 1480, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1522, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1557, 1596, 1609, 1660, 1716, 1717, 1720, 1722, 1723, 1724, 1726, 1727, 1734, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1787, 1790, 1833, 1838, 1840, 1857, 1864, 1869, 1872, 1884, 1912, 1913, 1923, 1927, 1929, 1930, 1932, 1933, 1934, 1943, 1944, 1945, 1946, 1951, 1956], "rowmajor": [1, 1609], "contigu": [1, 11, 22, 26, 321, 488, 509, 606, 1375, 1432, 1568, 1609, 1728, 1734, 1813, 1869, 1885, 1886, 1913, 1920, 1927, 1929, 1931], "create_graph": [1, 140, 477, 882, 890, 891, 892, 893, 894, 895, 896, 1869, 1890, 1896], "preserv": [1, 12, 21, 30, 45, 48, 56, 488, 768, 774, 843, 865, 868, 1109, 1110, 1125, 1195, 1199, 1206, 1429, 1430, 1439, 1481, 1539, 1597, 1664, 1743, 1747, 1785, 1827, 1868, 1879, 1884, 1886, 1889, 1894, 1897, 1906, 1909, 1910, 1912, 1923, 1927, 1930, 1941, 1945], "preexist": [1, 1944, 1945], "behavior": [1, 2, 7, 14, 20, 22, 24, 25, 26, 28, 30, 31, 34, 39, 42, 45, 46, 48, 52, 53, 55, 56, 76, 244, 309, 460, 488, 502, 533, 606, 676, 774, 782, 815, 867, 881, 917, 923, 925, 927, 940, 968, 1063, 1068, 1069, 1070, 1071, 1113, 1120, 1121, 1125, 1195, 1206, 1209, 1211, 1241, 1248, 1252, 1265, 1266, 1267, 1282, 1290, 1297, 1366, 1369, 1390, 1399, 1429, 1444, 1468, 1481, 1493, 1528, 1596, 1597, 1600, 1601, 1609, 1610, 1653, 1655, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1705, 1711, 1727, 1734, 1776, 1813, 1834, 1848, 1866, 1868, 1872, 1873, 1875, 1877, 1884, 1886, 1892, 1894, 1896, 1897, 1905, 1906, 1907, 1912, 1914, 1915, 1916, 1919, 1920, 1923, 1928, 1931, 1944, 1945, 1947, 1949], "let": [1, 7, 8, 21, 22, 29, 30, 42, 53, 56, 475, 485, 933, 934, 936, 1148, 1195, 1215, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1245, 1247, 1254, 1256, 1258, 1259, 1429, 1609, 1616, 1827, 1875, 1884, 1885, 1891, 1894, 1895, 1896, 1897, 1902, 1904, 1905, 1906, 1907, 1908, 1915, 1924, 1925, 1927, 1932, 1941, 1942, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1956], "accord": [1, 9, 32, 45, 786, 850, 851, 869, 911, 923, 1066, 1158, 1256, 1289, 1319, 1337, 1373, 1600, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1687, 1693, 1712, 1776, 1801, 1828, 1860, 1871, 1881, 1885, 1886, 1889, 1902, 1906, 1908, 1915, 1925, 1934], "retain": [1, 9, 24, 682, 684, 685, 688, 863, 864, 869, 1199, 1217, 1248, 1252, 1265, 1283, 1293, 1295, 1296, 1298, 1301, 1324, 1325, 1326, 1327, 1656, 1709, 1712, 1743, 1807, 1808, 1812, 1837, 1838, 1839, 1840, 1854, 1855, 1883, 1904, 1927], "over": [1, 9, 12, 21, 22, 24, 25, 29, 30, 32, 39, 42, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 64, 65, 68, 470, 669, 686, 727, 728, 729, 730, 731, 732, 755, 756, 761, 762, 763, 771, 772, 881, 906, 928, 980, 1025, 1027, 1031, 1045, 1046, 1047, 1048, 1049, 1050, 1068, 1124, 1128, 1130, 1134, 1136, 1148, 1156, 1195, 1211, 1228, 1248, 1252, 1264, 1265, 1267, 1275, 1295, 1297, 1327, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1373, 1376, 1377, 1378, 1384, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1401, 1417, 1420, 1421, 1422, 1423, 1424, 1429, 1432, 1433, 1434, 1436, 1443, 1457, 1460, 1461, 1463, 1468, 1477, 1480, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1523, 1524, 1540, 1546, 1549, 1550, 1552, 1553, 1554, 1563, 1564, 1571, 1578, 1604, 1613, 1653, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1716, 1717, 1732, 1792, 1794, 1807, 1808, 1809, 1812, 1829, 1844, 1854, 1855, 1859, 1871, 1881, 1883, 1884, 1885, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1902, 1904, 1905, 1910, 1914, 1918, 1923, 1924, 1927, 1935, 1941, 1943, 1944, 1945, 1946, 1949, 1956, 1958], "4": [1, 3, 11, 12, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 39, 41, 45, 46, 53, 56, 57, 58, 59, 62, 63, 64, 65, 67, 181, 198, 232, 244, 279, 301, 303, 305, 307, 311, 391, 392, 434, 435, 460, 472, 476, 482, 485, 488, 502, 506, 512, 526, 533, 545, 547, 549, 573, 574, 596, 606, 672, 673, 674, 675, 678, 680, 681, 682, 684, 685, 686, 688, 728, 730, 731, 732, 735, 737, 746, 749, 762, 763, 813, 854, 863, 864, 865, 869, 870, 871, 872, 873, 874, 876, 877, 888, 890, 893, 894, 895, 909, 912, 915, 919, 920, 921, 925, 927, 930, 931, 934, 935, 936, 939, 949, 952, 955, 956, 957, 958, 968, 1048, 1051, 1058, 1060, 1062, 1063, 1066, 1067, 1068, 1071, 1073, 1083, 1084, 1086, 1088, 1096, 1102, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1116, 1118, 1119, 1121, 1124, 1126, 1134, 1135, 1136, 1137, 1138, 1139, 1148, 1151, 1155, 1156, 1157, 1158, 1160, 1161, 1165, 1169, 1172, 1184, 1186, 1192, 1201, 1202, 1207, 1209, 1216, 1217, 1218, 1219, 1220, 1221, 1225, 1227, 1228, 1234, 1236, 1238, 1239, 1240, 1243, 1245, 1248, 1250, 1252, 1254, 1256, 1258, 1261, 1262, 1263, 1265, 1266, 1269, 1271, 1272, 1277, 1279, 1280, 1282, 1284, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1317, 1318, 1319, 1327, 1328, 1329, 1330, 1337, 1342, 1353, 1354, 1355, 1358, 1359, 1361, 1362, 1370, 1372, 1373, 1374, 1376, 1380, 1381, 1399, 1400, 1425, 1426, 1432, 1434, 1436, 1441, 1442, 1444, 1450, 1451, 1452, 1453, 1454, 1468, 1480, 1481, 1482, 1483, 1484, 1485, 1493, 1495, 1504, 1507, 1519, 1520, 1528, 1539, 1563, 1566, 1569, 1570, 1596, 1597, 1598, 1599, 1600, 1609, 1616, 1621, 1632, 1644, 1645, 1647, 1649, 1655, 1656, 1657, 1659, 1661, 1665, 1678, 1683, 1684, 1690, 1694, 1695, 1696, 1700, 1704, 1705, 1708, 1709, 1711, 1712, 1714, 1718, 1720, 1722, 1724, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1738, 1739, 1740, 1742, 1743, 1747, 1760, 1767, 1769, 1770, 1775, 1776, 1778, 1780, 1785, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1809, 1812, 1815, 1816, 1823, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1839, 1840, 1842, 1843, 1844, 1846, 1847, 1848, 1853, 1856, 1857, 1858, 1859, 1860, 1861, 1865, 1868, 1869, 1870, 1871, 1872, 1878, 1883, 1885, 1886, 1889, 1891, 1892, 1894, 1895, 1896, 1902, 1904, 1907, 1908, 1910, 1912, 1915, 1916, 1918, 1920, 1923, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1941, 1943, 1944, 1946, 1949, 1951, 1954, 1956], "fact": [1, 3, 8, 48, 484, 910, 919, 954, 1148, 1152, 1153, 1231, 1232, 1259, 1868, 1896, 1899, 1912, 1924, 1927, 1941, 1945, 1950], "reset": [1, 24, 749, 809, 814, 882, 969, 1017, 1019, 1032, 1033, 1034, 1195, 1381, 1429, 1445, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1701, 1718, 1814, 1881, 1912, 1922], "phase": [1, 22, 782, 1231, 1232, 1693, 1813, 1869, 1908, 1946, 1956], "recreat": [1, 1891, 1955], "valid": [1, 24, 30, 39, 41, 45, 46, 56, 74, 78, 736, 737, 746, 780, 932, 944, 947, 1011, 1068, 1193, 1195, 1196, 1217, 1231, 1232, 1241, 1242, 1243, 1254, 1259, 1290, 1357, 1358, 1359, 1503, 1504, 1505, 1528, 1600, 1627, 1632, 1636, 1662, 1663, 1683, 1684, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1711, 1868, 1869, 1870, 1871, 1885, 1886, 1891, 1894, 1896, 1900, 1912, 1914, 1917, 1923, 1924, 1943, 1944, 1949, 1956], "altern": [1, 9, 21, 24, 56, 669, 803, 1128, 1129, 1157, 1203, 1267, 1457, 1474, 1476, 1547, 1609, 1661, 1682, 1754, 1848, 1865, 1866, 1872, 1891, 1900, 1902, 1905, 1906, 1908, 1946, 1954], "never": [1, 5, 7, 22, 24, 41, 42, 45, 46, 211, 212, 785, 868, 929, 941, 1192, 1242, 1243, 1254, 1267, 1609, 1642, 1891, 1894, 1896, 1915, 1916, 1923, 1934, 1941, 1944], "long": [1, 7, 9, 21, 41, 45, 55, 723, 738, 740, 741, 742, 743, 745, 752, 770, 1125, 1171, 1296, 1301, 1325, 1352, 1365, 1373, 1399, 1400, 1436, 1512, 1662, 1710, 1824, 1828, 1838, 1840, 1845, 1867, 1871, 1878, 1883, 1884, 1885, 1891, 1892, 1894, 1896, 1898, 1904, 1906, 1912, 1915, 1917, 1922, 1929, 1930, 1932, 1933, 1946, 1951, 1954, 1956], "hard": [1, 7, 8, 24, 29, 42, 943, 1068, 1268, 1385, 1530, 1531, 1868, 1869, 1870, 1891, 1912, 1915, 1946, 1947], "matter": [1, 4, 24, 48, 886, 1056, 1068, 1203, 1206, 1211, 1609, 1886, 1891, 1915], "discourag": [1, 1037, 1041, 1891, 1923], "aggress": [1, 48, 1192, 1891, 1923, 1946], "buffer": [1, 4, 21, 22, 24, 45, 46, 48, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 869, 982, 1014, 1121, 1124, 1134, 1195, 1203, 1206, 1217, 1267, 1347, 1348, 1349, 1366, 1402, 1403, 1404, 1429, 1468, 1602, 1609, 1611, 1618, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1649, 1651, 1679, 1681, 1743, 1785, 1831, 1870, 1887, 1891, 1895, 1896, 1902, 1907, 1910, 1912, 1916, 1946], "free": [1, 7, 24, 26, 30, 32, 41, 42, 48, 56, 57, 64, 65, 1020, 1038, 1198, 1211, 1268, 1879, 1889, 1891, 1894, 1896, 1898, 1904, 1908, 1912, 1927, 1944, 1946, 1958], "reus": [1, 24, 29, 56, 475, 1891, 1894, 1923, 1941, 1944, 1946, 1951, 1956, 1958], "effici": [1, 2, 3, 8, 11, 21, 30, 48, 49, 54, 140, 749, 882, 887, 896, 931, 1132, 1140, 1213, 1251, 1268, 1287, 1337, 1368, 1369, 1370, 1373, 1374, 1381, 1435, 1441, 1442, 1476, 1578, 1879, 1886, 1891, 1895, 1896, 1899, 1903, 1904, 1905, 1914, 1916, 1918, 1923, 1924, 1927, 1930, 1931, 1935], "occas": [1, 7, 1891], "actual": [1, 8, 26, 32, 34, 45, 46, 48, 53, 56, 779, 953, 1086, 1104, 1207, 1211, 1360, 1361, 1362, 1528, 1609, 1633, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1687, 1866, 1870, 1871, 1884, 1891, 1894, 1895, 1896, 1899, 1904, 1908, 1910, 1918, 1923, 1929, 1934, 1944, 1945, 1946, 1948, 1949], "signific": [1, 3, 26, 1695, 1755, 1891, 1894, 1927, 1948, 1952], "amount": [1, 2, 3, 4, 7, 21, 24, 26, 32, 41, 56, 898, 993, 1019, 1021, 1025, 1192, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1376, 1417, 1432, 1480, 1511, 1626, 1627, 1629, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1885, 1891, 1893, 1894, 1897, 1898, 1900, 1910, 1923, 1927, 1944, 1950, 1954, 1956, 1958], "heavi": [1, 24, 1891, 1908, 1945], "pressur": [1, 48, 1891], "might": [1, 3, 4, 9, 14, 15, 18, 24, 26, 28, 29, 30, 41, 45, 53, 55, 56, 75, 77, 140, 475, 533, 882, 968, 1211, 1212, 1528, 1609, 1610, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1866, 1868, 1881, 1886, 1891, 1893, 1894, 1895, 1896, 1899, 1901, 1906, 1909, 1912, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1931, 1933, 1934, 1938, 1941, 1944, 1945, 1946, 1947, 1948, 1949, 1955, 1956], "keep": [1, 3, 5, 7, 21, 22, 26, 28, 32, 41, 45, 46, 48, 57, 972, 1267, 1347, 1348, 1349, 1353, 1372, 1392, 1393, 1394, 1438, 1468, 1528, 1539, 1609, 1628, 1664, 1732, 1755, 1866, 1867, 1868, 1883, 1885, 1886, 1891, 1894, 1895, 1897, 1898, 1899, 1904, 1910, 1914, 1918, 1923, 1924, 1925, 1943, 1944, 1945, 1946, 1949, 1954, 1958], "track": [1, 32, 45, 46, 57, 69, 70, 71, 76, 325, 977, 1017, 1019, 1032, 1033, 1034, 1124, 1125, 1170, 1297, 1347, 1348, 1349, 1392, 1393, 1394, 1402, 1403, 1404, 1411, 1412, 1413, 1468, 1609, 1628, 1881, 1883, 1885, 1886, 1891, 1894, 1896, 1897, 1898, 1901, 1902, 1910, 1914, 1916, 1917, 1924, 1925, 1927, 1944, 1945, 1946, 1949, 1953], "save": [1, 5, 7, 11, 15, 22, 24, 26, 28, 45, 48, 485, 826, 878, 879, 888, 1132, 1194, 1195, 1200, 1203, 1211, 1213, 1267, 1429, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1692, 1696, 1868, 1869, 1880, 1885, 1896, 1897, 1902, 1904, 1906, 1910, 1913, 1914, 1915, 1917, 1923, 1927, 1932, 1936, 1941, 1946, 1948, 1958], "afterward": [1, 45, 1429, 1600, 1609, 1927], "start": [1, 3, 4, 8, 9, 21, 22, 24, 26, 32, 38, 40, 41, 42, 43, 48, 52, 55, 56, 223, 392, 422, 423, 485, 527, 687, 854, 1017, 1019, 1030, 1032, 1033, 1090, 1091, 1107, 1121, 1193, 1208, 1221, 1266, 1282, 1328, 1329, 1337, 1342, 1343, 1344, 1373, 1375, 1422, 1423, 1424, 1430, 1432, 1520, 1566, 1609, 1623, 1627, 1629, 1642, 1665, 1687, 1693, 1727, 1758, 1781, 1795, 1796, 1797, 1799, 1800, 1866, 1867, 1869, 1870, 1875, 1878, 1883, 1885, 1891, 1892, 1894, 1895, 1896, 1898, 1902, 1903, 1904, 1908, 1912, 1914, 1917, 1918, 1923, 1924, 1925, 1927, 1940, 1944, 1946, 1951, 1953], "sure": [1, 7, 9, 21, 24, 26, 31, 33, 42, 44, 51, 56, 850, 851, 882, 1119, 1199, 1211, 1212, 1268, 1609, 1654, 1689, 1831, 1871, 1884, 1891, 1895, 1898, 1899, 1908, 1912, 1917, 1918, 1923, 1924, 1925, 1927, 1932, 1946, 1948, 1956], "longer": [1, 24, 43, 52, 53, 676, 879, 897, 898, 1192, 1199, 1609, 1653, 1656, 1881, 1891, 1894, 1910, 1923, 1925, 1941, 1956], "find": [1, 7, 14, 24, 41, 53, 56, 72, 1068, 1148, 1217, 1268, 1360, 1361, 1362, 1399, 1663, 1701, 1712, 1747, 1814, 1866, 1879, 1883, 1885, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1904, 1906, 1910, 1912, 1913, 1918, 1923, 1927, 1930, 1932, 1934, 1936, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1956, 1957], "quick": [1, 7, 51, 1878, 1902, 1911, 1939, 1954], "guid": [1, 8, 21, 70, 72, 73, 1207, 1653, 1867, 1894, 1897, 1915, 1918, 1949, 1954], "var": [1, 34, 39, 41, 44, 1347, 1348, 1349, 1383, 1384, 1392, 1393, 1394, 1401, 1468, 1525, 1715, 1855, 1869, 1871, 1884, 1913, 1944, 1949, 1951, 1956], "thing": [1, 3, 7, 8, 24, 45, 53, 56, 1125, 1205, 1297, 1345, 1530, 1786, 1870, 1891, 1894, 1896, 1897, 1898, 1899, 1904, 1912, 1915, 1918, 1919, 1925, 1941, 1945, 1946, 1949, 1954, 1956], "detach": [1, 5, 212, 437, 447, 938, 1124, 1195, 1352, 1429, 1512, 1530, 1790, 1827, 1868, 1869, 1884, 1886, 1896, 1898, 1912, 1913, 1920, 1927, 1931, 1933, 1955], "register_hook": [1, 1884, 1891], "name": [1, 2, 3, 14, 22, 24, 29, 30, 32, 34, 35, 38, 39, 41, 43, 45, 46, 48, 56, 77, 669, 686, 736, 737, 746, 781, 803, 804, 805, 806, 813, 829, 843, 847, 906, 947, 970, 997, 1124, 1134, 1193, 1195, 1196, 1203, 1206, 1211, 1212, 1226, 1231, 1232, 1238, 1239, 1241, 1242, 1243, 1244, 1254, 1255, 1257, 1259, 1260, 1267, 1429, 1479, 1602, 1607, 1608, 1609, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1651, 1653, 1662, 1663, 1743, 1753, 1849, 1851, 1853, 1866, 1867, 1868, 1869, 1871, 1872, 1875, 1877, 1880, 1881, 1883, 1889, 1891, 1894, 1895, 1896, 1899, 1901, 1902, 1910, 1912, 1913, 1915, 1916, 1917, 1923, 1924, 1929, 1932, 1934, 1935, 1936, 1937, 1942, 1943, 1946, 1949, 1950, 1953, 1955, 1956, 1957, 1958, 1959], "factori": [1, 2, 11, 30, 32, 35, 39, 45, 53, 813, 1068, 1654, 1663, 1751, 1867, 1869, 1885, 1894, 1896, 1913, 1930, 1944, 1945], "ones": [1, 21, 24, 28, 30, 45, 48, 53, 54, 55, 56, 57, 59, 62, 64, 65, 66, 67, 140, 244, 303, 392, 434, 435, 437, 504, 783, 848, 882, 891, 893, 894, 895, 896, 897, 911, 923, 941, 1051, 1059, 1081, 1124, 1131, 1132, 1135, 1170, 1192, 1195, 1207, 1216, 1242, 1258, 1267, 1346, 1363, 1372, 1376, 1383, 1384, 1401, 1429, 1433, 1434, 1436, 1438, 1480, 1519, 1578, 1596, 1600, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1646, 1648, 1651, 1661, 1662, 1715, 1732, 1750, 1755, 1781, 1830, 1834, 1851, 1862, 1869, 1871, 1873, 1884, 1885, 1891, 1892, 1894, 1896, 1903, 1905, 1906, 1912, 1913, 1914, 1915, 1918, 1923, 1925, 1928, 1930, 1933, 1950, 1955, 1956], "autograd_tensor": 1, "base": [1, 3, 7, 9, 12, 14, 15, 21, 24, 25, 26, 28, 29, 30, 32, 34, 39, 41, 42, 43, 45, 46, 48, 53, 56, 75, 76, 77, 780, 785, 789, 791, 809, 810, 811, 813, 814, 850, 851, 888, 941, 960, 1029, 1030, 1066, 1068, 1111, 1148, 1158, 1197, 1209, 1221, 1259, 1270, 1272, 1274, 1282, 1366, 1429, 1432, 1433, 1434, 1438, 1445, 1472, 1474, 1476, 1545, 1578, 1609, 1613, 1614, 1616, 1623, 1627, 1629, 1665, 1666, 1667, 1668, 1669, 1670, 1679, 1680, 1681, 1682, 1708, 1718, 1743, 1755, 1757, 1813, 1814, 1828, 1838, 1840, 1860, 1867, 1869, 1871, 1893, 1894, 1895, 1896, 1902, 1916, 1917, 1918, 1923, 1924, 1927, 1928, 1931, 1932, 1934, 1936, 1937, 1943, 1944, 1946, 1948, 1949], "static": [1, 3, 8, 14, 25, 30, 32, 45, 46, 48, 57, 62, 63, 65, 783, 804, 806, 815, 821, 846, 848, 878, 879, 880, 881, 1209, 1472, 1609, 1788, 1868, 1869, 1870, 1871, 1894, 1901, 1909, 1910, 1916, 1919, 1923, 1929, 1941, 1943, 1944, 1949], "Then": [1, 24, 42, 56, 1376, 1480, 1618, 1663, 1849, 1891, 1892, 1894, 1895, 1896, 1897, 1905, 1906, 1912, 1914, 1915, 1923, 1924, 1936, 1941, 1947], "op": [1, 4, 24, 45, 46, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 76, 77, 140, 492, 513, 593, 746, 781, 782, 783, 812, 815, 843, 850, 851, 882, 888, 896, 931, 941, 975, 990, 992, 996, 997, 1011, 1012, 1037, 1041, 1043, 1125, 1145, 1196, 1209, 1211, 1212, 1267, 1273, 1445, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1699, 1758, 1836, 1867, 1871, 1875, 1877, 1878, 1879, 1881, 1884, 1885, 1893, 1894, 1895, 1896, 1904, 1910, 1915, 1917, 1918, 1919, 1920, 1921, 1927, 1929, 1931, 1933, 1937, 1941, 1942, 1945, 1946, 1947, 1948, 1949, 1951, 1955, 1956], "ctx": [1, 39, 57, 61, 878, 879, 880, 886, 887, 888, 889, 1890, 1896, 1897, 1912], "gradcheck": [1, 1787, 1867, 1896, 1927], "extend": [1, 21, 24, 26, 30, 33, 43, 56, 850, 879, 881, 888, 1431, 1440, 1787, 1849, 1867, 1875, 1886, 1891, 1901, 1903, 1904, 1912, 1913, 1915, 1921, 1927, 1944, 1957], "staticmethod": [1, 57, 879, 881, 886, 887, 888, 889, 1871, 1890, 1896, 1912, 1923], "result": [1, 3, 4, 5, 7, 8, 9, 12, 14, 18, 21, 22, 24, 26, 30, 32, 34, 39, 42, 45, 46, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 143, 211, 212, 244, 245, 305, 325, 388, 485, 487, 488, 545, 572, 573, 574, 576, 577, 607, 675, 676, 677, 678, 679, 682, 684, 685, 686, 688, 749, 782, 866, 868, 884, 885, 890, 891, 892, 893, 894, 895, 897, 898, 909, 912, 923, 927, 932, 938, 940, 941, 944, 952, 956, 958, 981, 983, 985, 1011, 1012, 1025, 1047, 1048, 1049, 1050, 1051, 1063, 1068, 1086, 1089, 1095, 1104, 1111, 1113, 1116, 1120, 1121, 1124, 1125, 1126, 1129, 1130, 1135, 1136, 1140, 1156, 1157, 1159, 1172, 1186, 1195, 1198, 1199, 1207, 1211, 1212, 1214, 1216, 1217, 1221, 1235, 1237, 1239, 1240, 1248, 1252, 1254, 1256, 1257, 1258, 1265, 1275, 1276, 1283, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1324, 1327, 1366, 1368, 1369, 1370, 1374, 1376, 1381, 1395, 1399, 1429, 1435, 1444, 1472, 1473, 1474, 1475, 1476, 1480, 1510, 1528, 1539, 1593, 1596, 1597, 1609, 1616, 1618, 1651, 1654, 1655, 1656, 1657, 1663, 1693, 1699, 1701, 1708, 1709, 1712, 1718, 1731, 1737, 1752, 1780, 1791, 1793, 1794, 1798, 1805, 1807, 1808, 1809, 1812, 1813, 1814, 1823, 1827, 1828, 1833, 1834, 1836, 1837, 1839, 1851, 1854, 1855, 1859, 1868, 1869, 1870, 1871, 1878, 1879, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1909, 1910, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1923, 1924, 1927, 1930, 1932, 1933, 1934, 1937, 1938, 1942, 1944, 1945, 1949, 1950, 1953, 1954, 1955, 1956, 1957], "save_for_backward": [1, 879, 887, 889, 1890, 1891, 1896, 1897, 1912], "grad_output": [1, 57, 878, 886, 896, 898, 902, 903, 1195, 1429, 1605, 1606, 1869, 1891, 1894, 1896, 1897, 1902, 1951], "saved_tensor": [1, 887, 888, 889, 1890, 1891, 1896, 1897], "avail": [1, 2, 5, 8, 9, 14, 15, 21, 24, 32, 41, 42, 46, 72, 73, 965, 991, 993, 994, 1005, 1008, 1015, 1016, 1035, 1036, 1038, 1068, 1202, 1259, 1260, 1285, 1472, 1481, 1539, 1578, 1597, 1701, 1755, 1809, 1814, 1848, 1851, 1866, 1867, 1868, 1870, 1871, 1875, 1878, 1883, 1891, 1894, 1896, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1914, 1915, 1917, 1918, 1919, 1923, 1937, 1938, 1943, 1948, 1956, 1957], "cost": [1, 3, 4, 8, 9, 22, 48, 931, 941, 1251, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1578, 1751, 1894, 1906, 1919, 1924, 1930, 1956], "both": [1, 2, 3, 14, 21, 22, 24, 25, 26, 29, 30, 34, 39, 40, 41, 42, 45, 46, 48, 55, 56, 57, 64, 65, 87, 329, 718, 757, 758, 761, 762, 763, 782, 840, 881, 885, 891, 892, 893, 894, 895, 909, 946, 960, 992, 1063, 1084, 1114, 1115, 1116, 1124, 1138, 1140, 1148, 1155, 1172, 1185, 1186, 1192, 1195, 1209, 1217, 1218, 1266, 1282, 1290, 1296, 1310, 1311, 1342, 1343, 1347, 1348, 1349, 1354, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1384, 1390, 1392, 1393, 1394, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1422, 1423, 1424, 1429, 1435, 1468, 1476, 1480, 1481, 1484, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1552, 1553, 1554, 1578, 1609, 1621, 1651, 1668, 1669, 1693, 1716, 1717, 1755, 1786, 1788, 1790, 1809, 1813, 1833, 1834, 1868, 1870, 1871, 1878, 1884, 1885, 1887, 1890, 1891, 1892, 1896, 1897, 1899, 1902, 1905, 1906, 1907, 1912, 1915, 1916, 1918, 1921, 1923, 1925, 1927, 1928, 1934, 1936, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1953, 1956], "cpu": [1, 4, 5, 14, 17, 21, 24, 26, 45, 46, 48, 57, 62, 65, 66, 67, 78, 109, 186, 279, 316, 325, 434, 435, 436, 437, 438, 447, 569, 578, 854, 869, 907, 910, 919, 958, 961, 962, 971, 981, 982, 983, 985, 1069, 1071, 1081, 1086, 1104, 1116, 1121, 1122, 1145, 1146, 1152, 1153, 1195, 1203, 1205, 1206, 1215, 1225, 1227, 1231, 1232, 1233, 1234, 1236, 1238, 1241, 1243, 1244, 1250, 1253, 1256, 1259, 1260, 1266, 1267, 1282, 1285, 1296, 1307, 1366, 1372, 1429, 1472, 1593, 1609, 1613, 1614, 1642, 1643, 1657, 1660, 1711, 1720, 1722, 1724, 1726, 1727, 1751, 1756, 1758, 1759, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1780, 1790, 1795, 1796, 1797, 1798, 1799, 1800, 1813, 1827, 1828, 1829, 1838, 1840, 1845, 1848, 1864, 1867, 1868, 1869, 1871, 1875, 1879, 1883, 1884, 1886, 1894, 1896, 1897, 1900, 1902, 1905, 1906, 1908, 1912, 1913, 1916, 1917, 1919, 1922, 1923, 1927, 1929, 1930, 1933, 1934, 1935, 1938, 1941, 1943, 1945, 1946, 1948, 1950, 1953, 1954, 1956], "There": [1, 5, 6, 7, 9, 12, 14, 20, 24, 26, 29, 41, 45, 46, 49, 53, 54, 56, 74, 75, 77, 669, 723, 782, 879, 941, 1125, 1366, 1399, 1444, 1578, 1609, 1649, 1654, 1866, 1868, 1870, 1871, 1877, 1878, 1885, 1891, 1894, 1896, 1897, 1898, 1901, 1904, 1908, 1909, 1912, 1915, 1918, 1919, 1923, 1925, 1933, 1935, 1941, 1943, 1944, 1945, 1946, 1949, 1955, 1956], "moment": [1, 29, 57, 63, 761, 762, 763, 956, 1668, 1669, 1670, 1672, 1678, 1682, 1879, 1883, 1886, 1917, 1923, 1949, 1953], "nvprof": [1, 4, 904, 1894], "regist": [1, 15, 22, 24, 28, 29, 30, 41, 43, 45, 46, 48, 56, 70, 72, 73, 74, 75, 77, 476, 477, 669, 781, 782, 843, 902, 903, 941, 1014, 1195, 1267, 1429, 1430, 1431, 1439, 1440, 1457, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1616, 1617, 1618, 1619, 1621, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1849, 1851, 1875, 1881, 1883, 1895, 1896, 1901, 1902, 1907, 1910, 1912, 1915, 1923, 1945, 1948], "activ": [1, 5, 7, 9, 43, 45, 48, 54, 69, 71, 781, 783, 785, 792, 796, 830, 831, 840, 850, 851, 970, 979, 994, 1007, 1025, 1124, 1126, 1136, 1268, 1341, 1368, 1369, 1370, 1374, 1384, 1401, 1428, 1430, 1447, 1458, 1472, 1474, 1476, 1521, 1558, 1581, 1609, 1619, 1620, 1621, 1651, 1656, 1859, 1867, 1879, 1883, 1894, 1896, 1897, 1902, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1923, 1927, 1936, 1937, 1941, 1945, 1951, 1956], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 1917], "use_devic": 1, "record_shap": [1, 1917], "with_flop": [1, 1917], "profile_memori": [1, 1917], "with_stack": [1, 1917], "with_modul": [1, 1917], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 1917], "hold": [1, 24, 39, 41, 43, 44, 45, 48, 52, 55, 56, 526, 1268, 1376, 1430, 1431, 1439, 1440, 1480, 1600, 1609, 1611, 1612, 1618, 1628, 1642, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1795, 1796, 1797, 1798, 1799, 1800, 1892, 1894, 1896, 1898, 1901, 1904, 1914, 1917, 1923, 1924, 1925, 1927, 1929, 1930, 1932, 1933, 1944, 1949], "summari": [1, 3, 42, 1026, 1760, 1867, 1881, 1932, 1937, 1950, 1956, 1958], "hood": [1, 45, 55, 1883, 1891, 1894, 1895, 1904, 1915, 1925, 1943, 1945, 1949], "just": [1, 2, 7, 14, 22, 24, 29, 30, 32, 39, 56, 578, 676, 686, 779, 812, 815, 878, 880, 906, 953, 954, 1211, 1212, 1250, 1253, 1258, 1259, 1285, 1368, 1369, 1370, 1374, 1609, 1621, 1622, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1751, 1837, 1838, 1839, 1840, 1849, 1866, 1868, 1883, 1890, 1891, 1896, 1897, 1899, 1901, 1902, 1903, 1907, 1915, 1916, 1923, 1924, 1927, 1930, 1931, 1933, 1937, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1955], "record": [1, 5, 28, 33, 34, 35, 39, 42, 45, 55, 56, 434, 435, 436, 437, 438, 485, 808, 809, 810, 811, 814, 816, 854, 910, 919, 971, 972, 974, 1069, 1070, 1071, 1081, 1086, 1104, 1121, 1122, 1123, 1152, 1153, 1195, 1211, 1215, 1266, 1282, 1307, 1310, 1311, 1366, 1429, 1660, 1661, 1663, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1795, 1796, 1797, 1798, 1799, 1800, 1827, 1864, 1865, 1868, 1870, 1886, 1890, 1891, 1894, 1896, 1909, 1910, 1912, 1917, 1923, 1932, 1933, 1934, 1935, 1936, 1937, 1941, 1944, 1946, 1956, 1958], "event": [1, 27, 30, 32, 40, 43, 55, 906, 907, 908, 972, 974, 1025, 1028, 1211, 1212, 1273, 1310, 1311, 1578, 1867, 1881, 1883, 1894, 1917, 1932, 1954, 1958], "being": [1, 3, 5, 9, 12, 21, 24, 26, 28, 30, 32, 34, 41, 42, 43, 45, 46, 48, 52, 53, 55, 56, 57, 65, 71, 87, 392, 749, 782, 788, 881, 890, 896, 939, 952, 972, 980, 1027, 1031, 1045, 1046, 1081, 1114, 1115, 1125, 1134, 1135, 1184, 1195, 1199, 1285, 1294, 1299, 1345, 1346, 1363, 1365, 1372, 1373, 1377, 1378, 1383, 1389, 1396, 1420, 1421, 1429, 1432, 1433, 1434, 1435, 1436, 1443, 1460, 1461, 1477, 1493, 1500, 1501, 1511, 1523, 1524, 1528, 1540, 1563, 1571, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1635, 1636, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1711, 1712, 1807, 1808, 1809, 1854, 1855, 1868, 1871, 1878, 1881, 1884, 1885, 1886, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1910, 1912, 1915, 1918, 1921, 1923, 1924, 1927, 1934, 1936, 1941, 1944, 1945, 1946, 1949, 1954, 1956, 1957], "those": [1, 2, 4, 5, 14, 21, 22, 24, 26, 28, 30, 45, 48, 53, 55, 56, 71, 813, 897, 983, 993, 1056, 1058, 1136, 1211, 1253, 1259, 1267, 1306, 1337, 1345, 1346, 1363, 1365, 1373, 1389, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1481, 1500, 1501, 1511, 1520, 1540, 1563, 1571, 1663, 1682, 1813, 1834, 1859, 1870, 1884, 1885, 1890, 1891, 1894, 1896, 1897, 1900, 1902, 1906, 1907, 1912, 1914, 1921, 1923, 1925, 1941, 1943, 1945, 1946, 1948, 1949, 1950, 1953, 1956], "report": [1, 3, 4, 18, 24, 34, 42, 45, 55, 56, 74, 75, 77, 1025, 1128, 1129, 1131, 1890, 1894, 1916, 1927, 1946, 1950, 1953, 1956, 1958], "runtim": [1, 3, 5, 14, 24, 45, 46, 56, 816, 867, 906, 1066, 1068, 1158, 1195, 1201, 1211, 1429, 1611, 1612, 1664, 1707, 1848, 1860, 1871, 1884, 1885, 1891, 1894, 1896, 1904, 1909, 1911, 1912, 1938, 1944, 1946], "note": [1, 2, 3, 5, 8, 11, 12, 14, 15, 18, 20, 21, 22, 24, 26, 28, 30, 31, 32, 39, 41, 43, 45, 46, 48, 52, 54, 55, 56, 57, 64, 65, 74, 75, 76, 77, 140, 211, 367, 477, 488, 489, 502, 504, 506, 724, 730, 731, 732, 780, 782, 783, 784, 788, 830, 850, 854, 873, 882, 888, 890, 891, 892, 893, 894, 895, 896, 898, 925, 931, 941, 952, 968, 1043, 1051, 1056, 1068, 1089, 1119, 1121, 1136, 1137, 1148, 1170, 1182, 1192, 1193, 1195, 1196, 1202, 1268, 1290, 1310, 1311, 1345, 1346, 1352, 1360, 1361, 1362, 1363, 1365, 1372, 1373, 1381, 1383, 1389, 1395, 1396, 1399, 1420, 1421, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1443, 1444, 1460, 1461, 1468, 1472, 1477, 1481, 1500, 1501, 1511, 1519, 1520, 1528, 1539, 1540, 1563, 1566, 1571, 1572, 1585, 1600, 1609, 1610, 1656, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1693, 1695, 1711, 1718, 1794, 1795, 1796, 1797, 1799, 1800, 1805, 1809, 1813, 1834, 1848, 1849, 1851, 1859, 1866, 1868, 1869, 1872, 1878, 1883, 1886, 1887, 1891, 1892, 1893, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1910, 1912, 1914, 1915, 1917, 1919, 1921, 1922, 1924, 1925, 1927, 1931, 1932, 1943, 1944, 1946, 1947, 1954, 1955, 1956, 1959], "propag": [1, 26, 27, 29, 30, 32, 41, 56, 57, 65, 502, 675, 678, 679, 680, 684, 685, 686, 687, 755, 756, 757, 758, 768, 771, 772, 774, 775, 776, 827, 829, 909, 1114, 1115, 1324, 1794, 1867, 1883, 1884, 1890, 1894, 1896, 1899, 1901, 1923, 1936, 1937, 1944, 1945, 1949, 1955], "async": [1, 24, 25, 55, 592, 1609, 1872, 1894, 1901, 1929], "task": [1, 3, 7, 22, 49, 54, 1198, 1214, 1392, 1393, 1394, 1871, 1893, 1901, 1902, 1904, 1908, 1946], "cuda": [1, 3, 4, 5, 14, 16, 20, 21, 22, 24, 26, 28, 48, 78, 140, 279, 303, 311, 325, 330, 504, 506, 513, 569, 854, 866, 868, 882, 896, 910, 912, 919, 941, 969, 970, 971, 972, 974, 975, 990, 992, 1003, 1069, 1070, 1071, 1081, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1122, 1152, 1153, 1195, 1215, 1217, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1250, 1253, 1256, 1257, 1259, 1260, 1266, 1267, 1282, 1285, 1301, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1372, 1399, 1429, 1444, 1468, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1520, 1528, 1539, 1566, 1578, 1597, 1598, 1599, 1600, 1609, 1611, 1612, 1613, 1614, 1655, 1657, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1711, 1720, 1722, 1724, 1726, 1727, 1751, 1755, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1813, 1827, 1829, 1838, 1840, 1845, 1848, 1864, 1867, 1869, 1875, 1884, 1886, 1896, 1897, 1902, 1905, 1912, 1913, 1914, 1916, 1917, 1922, 1923, 1927, 1929, 1930, 1933, 1934, 1935, 1938, 1943, 1945, 1948, 1953, 1956], "cudaev": 1, "4u": 1, "shape": [1, 5, 8, 11, 12, 22, 24, 30, 46, 48, 50, 52, 54, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 87, 161, 181, 198, 208, 390, 392, 434, 436, 438, 460, 486, 487, 502, 504, 506, 533, 555, 606, 669, 674, 676, 677, 686, 724, 734, 735, 745, 747, 749, 753, 755, 756, 757, 758, 761, 762, 763, 770, 785, 867, 873, 887, 891, 893, 894, 895, 906, 911, 912, 914, 917, 922, 924, 928, 929, 933, 934, 941, 952, 955, 984, 1058, 1059, 1060, 1062, 1063, 1068, 1069, 1071, 1073, 1088, 1089, 1090, 1091, 1099, 1100, 1101, 1107, 1113, 1114, 1115, 1116, 1122, 1129, 1130, 1134, 1135, 1136, 1137, 1139, 1151, 1156, 1157, 1161, 1169, 1172, 1186, 1192, 1209, 1211, 1212, 1215, 1220, 1221, 1225, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1284, 1285, 1289, 1297, 1302, 1303, 1318, 1319, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1519, 1520, 1524, 1528, 1530, 1539, 1540, 1545, 1552, 1553, 1554, 1564, 1565, 1568, 1569, 1570, 1572, 1578, 1597, 1600, 1609, 1611, 1612, 1616, 1618, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1657, 1660, 1662, 1664, 1699, 1708, 1712, 1716, 1717, 1720, 1722, 1723, 1724, 1731, 1733, 1734, 1738, 1747, 1750, 1775, 1790, 1791, 1793, 1796, 1798, 1804, 1809, 1810, 1813, 1823, 1830, 1834, 1844, 1845, 1846, 1859, 1862, 1864, 1868, 1869, 1871, 1884, 1885, 1886, 1891, 1892, 1894, 1896, 1897, 1898, 1910, 1913, 1917, 1920, 1923, 1927, 1928, 1932, 1933, 1934, 1935, 1938, 1943, 1946, 1951, 1955, 1956], "about": [1, 8, 9, 12, 17, 21, 24, 25, 28, 32, 34, 38, 40, 42, 45, 49, 53, 56, 76, 245, 487, 607, 897, 898, 952, 976, 977, 993, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1032, 1033, 1034, 1125, 1225, 1232, 1373, 1642, 1678, 1682, 1693, 1754, 1866, 1868, 1870, 1871, 1875, 1878, 1893, 1894, 1895, 1896, 1898, 1901, 1904, 1905, 1907, 1909, 1915, 1917, 1918, 1921, 1924, 1925, 1927, 1931, 1933, 1942, 1944, 1946, 1949, 1952, 1956], "dimens": [1, 11, 21, 24, 29, 30, 45, 46, 48, 53, 54, 56, 57, 62, 65, 68, 74, 208, 222, 223, 244, 250, 303, 305, 307, 311, 422, 423, 461, 462, 463, 482, 502, 504, 506, 526, 532, 534, 535, 549, 572, 573, 574, 576, 577, 596, 606, 675, 681, 682, 684, 685, 686, 688, 724, 747, 768, 770, 774, 863, 864, 865, 866, 875, 876, 877, 881, 896, 920, 928, 931, 932, 933, 934, 935, 968, 983, 985, 1047, 1048, 1049, 1050, 1051, 1056, 1057, 1058, 1059, 1060, 1066, 1068, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1136, 1137, 1148, 1157, 1158, 1169, 1172, 1192, 1216, 1217, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1275, 1276, 1283, 1286, 1290, 1293, 1295, 1296, 1297, 1298, 1301, 1303, 1317, 1324, 1325, 1326, 1327, 1328, 1329, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1371, 1372, 1373, 1375, 1376, 1379, 1380, 1383, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1401, 1409, 1410, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1428, 1435, 1436, 1437, 1438, 1441, 1442, 1443, 1447, 1448, 1449, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1476, 1477, 1478, 1479, 1480, 1493, 1499, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1527, 1528, 1529, 1530, 1539, 1542, 1545, 1546, 1547, 1564, 1565, 1566, 1578, 1584, 1585, 1597, 1616, 1617, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1643, 1644, 1646, 1648, 1650, 1653, 1655, 1656, 1699, 1702, 1709, 1711, 1712, 1713, 1718, 1732, 1733, 1734, 1738, 1747, 1749, 1750, 1760, 1781, 1785, 1789, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1806, 1807, 1808, 1809, 1812, 1813, 1822, 1824, 1828, 1829, 1830, 1831, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1843, 1844, 1845, 1846, 1847, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1867, 1869, 1870, 1871, 1886, 1889, 1892, 1894, 1897, 1898, 1899, 1905, 1910, 1916, 1918, 1927, 1928, 1930, 1932, 1933, 1944, 1951], "collect": [1, 3, 7, 21, 25, 26, 28, 32, 41, 48, 55, 56, 788, 789, 813, 850, 851, 929, 1007, 1069, 1157, 1297, 1609, 1632, 1660, 1720, 1724, 1864, 1867, 1869, 1870, 1871, 1881, 1894, 1895, 1897, 1914, 1917, 1918, 1921, 1925, 1927, 1932, 1934, 1946, 1949, 1953, 1955, 1956, 1958], "group": [1, 3, 9, 21, 22, 25, 26, 28, 32, 38, 41, 42, 43, 44, 48, 51, 56, 599, 669, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 761, 762, 763, 869, 906, 1353, 1357, 1358, 1359, 1360, 1361, 1362, 1384, 1405, 1406, 1407, 1408, 1409, 1410, 1468, 1503, 1504, 1505, 1506, 1507, 1508, 1529, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1846, 1866, 1867, 1869, 1871, 1883, 1889, 1894, 1895, 1912, 1914, 1915, 1917, 1923, 1932, 1942, 1946, 1951, 1956], "prof": [1, 38, 1917, 1946, 1954, 1956], "key_averag": [1, 1917], "group_by_input_shap": [1, 906, 1917], "skew": [1, 3, 4, 1247, 1616], "neglig": [1, 1208, 1755], "bottom": [1, 48, 1528, 1878, 1954], "But": [1, 7, 48, 55, 475, 1211, 1241, 1609, 1891, 1896, 1898, 1899, 1915, 1916, 1927, 1931, 1945, 1946, 1949, 1950, 1957], "total": [1, 3, 4, 7, 21, 22, 24, 38, 40, 41, 42, 48, 866, 907, 985, 1020, 1025, 1038, 1121, 1156, 1157, 1305, 1352, 1376, 1389, 1396, 1420, 1435, 1480, 1565, 1609, 1613, 1655, 1657, 1659, 1687, 1693, 1733, 1760, 1809, 1866, 1870, 1881, 1894, 1900, 1904, 1914, 1927], "artifici": [1, 1927], "flop": [1, 1917], "hardwar": [1, 8, 848, 850, 851, 1231, 1232, 1259, 1848, 1894, 1904, 1906, 1919, 1927, 1946, 1948, 1956], "matrix": [1, 2, 22, 24, 30, 181, 198, 675, 678, 679, 680, 749, 909, 911, 920, 921, 929, 931, 932, 933, 934, 941, 956, 960, 1051, 1055, 1056, 1058, 1068, 1136, 1140, 1144, 1159, 1216, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1263, 1265, 1268, 1276, 1285, 1287, 1290, 1300, 1319, 1321, 1372, 1373, 1381, 1399, 1480, 1519, 1520, 1616, 1621, 1650, 1656, 1699, 1700, 1701, 1711, 1755, 1783, 1786, 1790, 1791, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1805, 1813, 1814, 1829, 1832, 1834, 1836, 1837, 1838, 1839, 1840, 1853, 1859, 1867, 1871, 1884, 1885, 1886, 1889, 1893, 1894, 1896, 1899, 1902, 1905, 1917, 1927, 1932, 1933, 1946], "2d": [1, 26, 29, 30, 576, 577, 689, 692, 695, 724, 728, 731, 755, 757, 762, 768, 772, 774, 775, 776, 956, 960, 1056, 1068, 1251, 1252, 1335, 1339, 1343, 1346, 1347, 1348, 1358, 1361, 1365, 1369, 1373, 1377, 1392, 1393, 1398, 1423, 1432, 1434, 1435, 1436, 1481, 1482, 1483, 1488, 1491, 1493, 1496, 1501, 1504, 1507, 1515, 1520, 1523, 1550, 1553, 1563, 1566, 1617, 1650, 1717, 1793, 1798, 1836, 1879, 1889, 1896, 1917, 1918, 1927], "alloc": [1, 4, 11, 18, 22, 26, 30, 32, 41, 48, 244, 321, 434, 435, 436, 437, 438, 475, 970, 972, 974, 976, 977, 979, 992, 993, 994, 1017, 1019, 1021, 1023, 1024, 1025, 1026, 1033, 1034, 1038, 1069, 1071, 1304, 1305, 1306, 1314, 1720, 1724, 1726, 1751, 1827, 1867, 1883, 1886, 1891, 1895, 1900, 1904, 1910, 1917, 1930, 1940, 1941, 1944, 1945, 1954], "dealloc": [1, 56, 1121, 1883, 1894, 1898, 1900, 1917], "line": [1, 4, 18, 24, 45, 46, 56, 669, 906, 1068, 1125, 1170, 1195, 1206, 1429, 1493, 1528, 1760, 1788, 1868, 1871, 1872, 1886, 1892, 1896, 1899, 1900, 1906, 1908, 1912, 1917, 1927, 1940, 1943, 1946, 1948, 1949, 1950, 1953, 1956, 1958], "hierarchi": [1, 56, 829, 1199, 1668, 1669, 1872, 1896, 1917, 1918, 1944], "callstack": [1, 24, 1917], "A": [1, 2, 3, 5, 7, 8, 9, 12, 14, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 38, 41, 42, 43, 45, 46, 48, 49, 54, 55, 57, 58, 59, 62, 75, 78, 549, 569, 572, 573, 574, 583, 613, 669, 681, 686, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 734, 735, 745, 750, 751, 752, 753, 754, 779, 781, 803, 847, 848, 850, 851, 908, 910, 919, 920, 922, 927, 932, 933, 934, 940, 941, 943, 946, 947, 952, 956, 960, 971, 972, 974, 982, 984, 985, 1053, 1068, 1073, 1081, 1082, 1083, 1095, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1148, 1151, 1152, 1153, 1157, 1185, 1186, 1187, 1188, 1191, 1193, 1195, 1198, 1203, 1206, 1208, 1211, 1212, 1216, 1220, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1268, 1276, 1284, 1285, 1286, 1287, 1291, 1330, 1346, 1350, 1352, 1365, 1372, 1373, 1382, 1383, 1391, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1419, 1428, 1429, 1435, 1457, 1462, 1464, 1472, 1477, 1478, 1493, 1499, 1511, 1519, 1530, 1540, 1547, 1558, 1578, 1584, 1585, 1600, 1609, 1610, 1611, 1612, 1616, 1618, 1621, 1643, 1644, 1647, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1686, 1687, 1689, 1692, 1693, 1695, 1701, 1711, 1713, 1714, 1715, 1716, 1717, 1728, 1734, 1740, 1743, 1776, 1785, 1788, 1789, 1792, 1804, 1808, 1809, 1813, 1814, 1831, 1836, 1837, 1838, 1839, 1840, 1844, 1845, 1846, 1847, 1848, 1855, 1859, 1862, 1866, 1868, 1869, 1870, 1871, 1875, 1878, 1879, 1884, 1885, 1889, 1890, 1893, 1894, 1896, 1897, 1898, 1904, 1905, 1907, 1912, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1937, 1941, 1942, 1943, 1945, 1946, 1948, 1949, 1951, 1954, 1955, 1956, 1957, 1958, 1959], "aten": [1, 2, 3, 12, 14, 18, 45, 46, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 75, 1011, 1125, 1319, 1662, 1663, 1788, 1868, 1869, 1875, 1893, 1896, 1908, 1910, 1913, 1917, 1918, 1927, 1938, 1942, 1947, 1950, 1956], "torchscript": [1, 3, 8, 28, 45, 46, 56, 606, 1193, 1196, 1198, 1199, 1200, 1202, 1207, 1211, 1213, 1663, 1867, 1872, 1907, 1917, 1923, 1958], "eager": [1, 8, 45, 941, 1043, 1193, 1196, 1207, 1759, 1871, 1894, 1917, 1919, 1921, 1941, 1946, 1947, 1948, 1953, 1956], "experiment": [1, 2, 22, 24, 28, 29, 45, 46, 48, 56, 57, 60, 64, 65, 68, 223, 890, 892, 896, 941, 947, 1042, 1125, 1226, 1237, 1239, 1240, 1244, 1257, 1609, 1682, 1867, 1868, 1870, 1884, 1885, 1894, 1895, 1906, 1908, 1910, 1912, 1915, 1916, 1917, 1944, 1945, 1946, 1956], "kineto": [1, 1917], "_experimentalconfig": [1, 1917], "librari": [1, 2, 3, 4, 8, 9, 11, 14, 15, 21, 24, 31, 39, 43, 49, 52, 53, 54, 56, 669, 958, 972, 995, 999, 1011, 1119, 1208, 1239, 1285, 1780, 1881, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1908, 1912, 1915, 1917, 1918, 1923, 1946, 1957], "100": [1, 21, 24, 28, 30, 56, 57, 64, 65, 290, 727, 728, 731, 732, 1155, 1195, 1207, 1213, 1251, 1266, 1273, 1282, 1297, 1318, 1337, 1345, 1346, 1347, 1348, 1349, 1358, 1359, 1361, 1362, 1364, 1365, 1392, 1393, 1394, 1429, 1436, 1438, 1468, 1477, 1510, 1511, 1563, 1671, 1683, 1684, 1689, 1690, 1691, 1692, 1694, 1696, 1697, 1713, 1769, 1869, 1871, 1883, 1893, 1894, 1912, 1914, 1919, 1925, 1927, 1932, 1942, 1943, 1949, 1950], "realli": [1, 7, 56, 943, 1871, 1891, 1915, 1945], "y": [1, 11, 14, 21, 30, 38, 45, 46, 48, 53, 54, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 606, 609, 770, 873, 875, 876, 877, 884, 885, 888, 890, 891, 892, 893, 894, 895, 923, 929, 953, 960, 1011, 1012, 1051, 1062, 1068, 1072, 1124, 1126, 1129, 1130, 1131, 1135, 1136, 1170, 1202, 1207, 1211, 1264, 1273, 1274, 1297, 1345, 1346, 1347, 1348, 1349, 1350, 1363, 1365, 1384, 1389, 1390, 1392, 1393, 1394, 1396, 1401, 1416, 1420, 1421, 1432, 1433, 1434, 1436, 1438, 1460, 1461, 1468, 1471, 1477, 1478, 1499, 1528, 1545, 1568, 1600, 1621, 1654, 1715, 1733, 1735, 1736, 1757, 1790, 1804, 1830, 1834, 1835, 1859, 1862, 1868, 1869, 1870, 1871, 1884, 1885, 1889, 1891, 1892, 1893, 1894, 1897, 1899, 1900, 1903, 1910, 1912, 1915, 1918, 1923, 1925, 1928, 1932, 1935, 1936, 1937, 1941, 1942, 1944, 1946, 1948, 1949, 1955, 1956], "column": [1, 3, 22, 29, 181, 250, 573, 576, 939, 956, 960, 1051, 1081, 1109, 1110, 1160, 1231, 1232, 1235, 1251, 1254, 1259, 1263, 1268, 1319, 1438, 1480, 1519, 1520, 1616, 1701, 1711, 1793, 1795, 1796, 1797, 1799, 1800, 1813, 1834, 1838, 1840, 1853, 1889, 1899, 1927], "remov": [1, 3, 21, 22, 24, 26, 30, 42, 44, 48, 56, 476, 477, 502, 535, 546, 686, 786, 804, 805, 806, 848, 902, 903, 931, 932, 1014, 1125, 1141, 1192, 1195, 1199, 1285, 1286, 1290, 1429, 1430, 1439, 1530, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1617, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1635, 1636, 1637, 1638, 1640, 1641, 1651, 1653, 1656, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1711, 1727, 1749, 1804, 1813, 1836, 1843, 1845, 1866, 1867, 1879, 1891, 1896, 1902, 1907, 1912, 1913, 1915, 1925, 1929, 1934, 1946, 1948, 1952, 1955], "breviti": [1, 56, 960, 1912], "print": [1, 3, 12, 18, 21, 24, 32, 33, 38, 39, 42, 45, 46, 48, 53, 55, 709, 717, 718, 723, 734, 735, 745, 753, 900, 902, 903, 1124, 1125, 1134, 1195, 1199, 1202, 1203, 1207, 1285, 1350, 1353, 1391, 1416, 1429, 1441, 1442, 1510, 1566, 1569, 1570, 1621, 1631, 1632, 1633, 1634, 1637, 1647, 1651, 1663, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1760, 1852, 1866, 1868, 1869, 1891, 1893, 1894, 1896, 1902, 1903, 1910, 1911, 1912, 1913, 1915, 1917, 1923, 1932, 1933, 1936, 1937, 1942, 1943, 1946, 1948, 1949, 1956], "tabl": [1, 3, 24, 56, 1372, 1519, 1869, 1871, 1896, 1914, 1915, 1917, 1918, 1923, 1927, 1934, 1945, 1947, 1950, 1953, 1956], "sort_bi": [1, 1917], "self_cpu_time_tot": [1, 1917], "avg": [1, 24, 1666], "mul": [1, 18, 45, 56, 57, 60, 63, 64, 409, 736, 737, 746, 1172, 1320, 1868, 1869, 1871, 1884, 1886, 1896, 1912, 1913, 1920, 1924, 1927, 1930, 1936, 1942, 1944, 1951, 1955], "32": [1, 2, 22, 24, 45, 78, 735, 1121, 1192, 1205, 1285, 1343, 1368, 1369, 1370, 1374, 1375, 1377, 1378, 1398, 1417, 1423, 1434, 1472, 1473, 1474, 1475, 1476, 1493, 1523, 1524, 1530, 1578, 1885, 1886, 1902, 1906, 1912, 1921, 1927, 1930, 1932, 1933, 1943, 1949, 1950], "048m": 1, "200": [1, 28, 45, 1195, 1273, 1429, 1713, 1871, 1927, 1956], "27": [1, 606, 1263, 1686, 1708, 1853, 1912], "041m": 1, "powbackward0": 1, "9": [1, 7, 21, 22, 24, 31, 56, 57, 62, 303, 305, 307, 311, 391, 392, 460, 502, 549, 570, 572, 686, 734, 735, 843, 925, 931, 935, 939, 960, 1051, 1066, 1069, 1090, 1091, 1100, 1101, 1111, 1114, 1115, 1118, 1119, 1148, 1158, 1225, 1227, 1248, 1250, 1252, 1263, 1265, 1328, 1329, 1335, 1336, 1339, 1340, 1353, 1372, 1373, 1425, 1426, 1441, 1442, 1451, 1454, 1519, 1520, 1566, 1569, 1570, 1656, 1657, 1666, 1668, 1669, 1670, 1671, 1672, 1678, 1681, 1682, 1683, 1687, 1693, 1695, 1696, 1700, 1704, 1740, 1747, 1756, 1760, 1770, 1775, 1785, 1793, 1801, 1827, 1828, 1832, 1834, 1843, 1853, 1860, 1868, 1872, 1878, 1898, 1902, 1907, 1908, 1912, 1913, 1914, 1915, 1923, 1927, 1928, 1930, 1934, 1943], "727m": 1, "55": [1, 1383, 1912], "483m": 1, "accumulategrad": [1, 1891], "148m": 1, "graphroot": 1, "691": 1, "816u": 1, "emit": [1, 14, 33, 38, 56, 669, 1211, 1762, 1871, 1877, 1910, 1922, 1927], "nvtx": [1, 4, 1867], "program": [1, 3, 4, 8, 12, 18, 21, 24, 33, 42, 44, 45, 46, 48, 56, 606, 953, 954, 1017, 1019, 1125, 1755, 1868, 1870, 1872, 1882, 1891, 1894, 1898, 1901, 1903, 1904, 1907, 1908, 1918, 1932, 1938, 1941, 1943, 1944, 1945, 1946, 1948, 1954, 1956, 1958], "off": [1, 5, 7, 8, 14, 24, 32, 48, 56, 71, 910, 919, 1029, 1125, 1152, 1153, 1192, 1211, 1259, 1342, 1343, 1344, 1346, 1422, 1423, 1424, 1528, 1566, 1757, 1893, 1894, 1895, 1898, 1901, 1905, 1917, 1918, 1919, 1923, 1924, 1944, 1945, 1949, 1953], "o": [1, 22, 24, 25, 30, 42, 43, 44, 45, 56, 1195, 1267, 1310, 1311, 1312, 1400, 1429, 1435, 1609, 1743, 1866, 1872, 1883, 1891, 1894, 1895, 1898, 1908, 1915, 1916, 1923], "trace_nam": 1, "regular": [1, 3, 4, 24, 32, 42, 48, 51, 56, 1011, 1012, 1124, 1243, 1244, 1352, 1367, 1368, 1369, 1370, 1374, 1414, 1428, 1429, 1430, 1431, 1439, 1440, 1521, 1558, 1600, 1611, 1612, 1651, 1669, 1678, 1871, 1885, 1886, 1894, 1896, 1897, 1901, 1902, 1910, 1912, 1915, 1918, 1921, 1923, 1927, 1928, 1935, 1937, 1949], "command": [1, 4, 24, 32, 39, 42, 56, 1894, 1900, 1904, 1908, 1916, 1917, 1924, 1950, 1953], "unfortun": [1, 9, 21, 45, 1609, 1891, 1896, 1943, 1945], "wai": [1, 3, 5, 7, 8, 9, 14, 21, 22, 24, 26, 28, 29, 30, 34, 38, 45, 48, 50, 51, 55, 56, 140, 569, 669, 785, 808, 811, 814, 850, 851, 879, 882, 891, 893, 894, 895, 896, 897, 1089, 1091, 1125, 1148, 1195, 1225, 1226, 1241, 1256, 1345, 1373, 1392, 1393, 1394, 1399, 1411, 1412, 1413, 1429, 1457, 1474, 1476, 1520, 1572, 1609, 1619, 1649, 1682, 1686, 1693, 1868, 1870, 1871, 1875, 1877, 1878, 1881, 1883, 1884, 1885, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1908, 1910, 1912, 1914, 1915, 1918, 1923, 1924, 1927, 1931, 1933, 1937, 1941, 1942, 1944, 1945, 1946, 1949, 1954, 1955, 1956, 1958], "disk": [1, 21, 1267, 1743, 1891, 1902, 1915, 1932], "annot": [1, 34, 39, 45, 56, 904, 1193, 1201, 1207, 1868, 1870, 1872, 1912, 1923, 1946, 1947, 1949], "wait": [1, 18, 24, 32, 39, 41, 55, 813, 967, 971, 972, 974, 1044, 1198, 1307, 1310, 1311, 1316, 1695, 1869, 1871, 1883, 1893, 1894, 1895, 1913, 1917, 1923, 1946, 1954, 1958], "either": [1, 8, 9, 14, 18, 21, 22, 24, 28, 29, 30, 32, 34, 39, 41, 42, 43, 45, 46, 48, 53, 55, 56, 144, 211, 303, 311, 502, 504, 606, 669, 721, 727, 728, 729, 734, 735, 745, 753, 768, 774, 780, 847, 879, 881, 888, 897, 898, 928, 941, 982, 1068, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1121, 1125, 1148, 1170, 1172, 1188, 1195, 1211, 1251, 1266, 1267, 1282, 1297, 1335, 1336, 1339, 1340, 1343, 1344, 1345, 1346, 1357, 1358, 1359, 1361, 1362, 1363, 1365, 1373, 1383, 1389, 1396, 1398, 1420, 1421, 1423, 1424, 1429, 1432, 1433, 1434, 1435, 1436, 1443, 1444, 1446, 1460, 1461, 1476, 1477, 1479, 1481, 1482, 1483, 1500, 1501, 1511, 1539, 1540, 1563, 1571, 1597, 1604, 1609, 1634, 1656, 1668, 1669, 1671, 1678, 1693, 1708, 1710, 1752, 1755, 1809, 1813, 1862, 1866, 1868, 1870, 1871, 1873, 1877, 1885, 1889, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1906, 1910, 1912, 1914, 1915, 1916, 1918, 1924, 1925, 1927, 1928, 1931, 1934, 1944, 1947, 1959], "nvidia": [1, 14, 24, 980, 993, 1021, 1027, 1031, 1045, 1046, 1848, 1867, 1894, 1898, 1900, 1906, 1908, 1918, 1927, 1935, 1938, 1953, 1954, 1956], "visual": [1, 56, 1297, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1422, 1423, 1424, 1480, 1867, 1894, 1902, 1908, 1910, 1917, 1932, 1946, 1954, 1956], "nvvp": 1, "timelin": [1, 4, 1310, 1311, 1867, 1917], "load_nvprof": 1, "repl": [1, 1948], "append": [1, 24, 55, 56, 57, 62, 219, 244, 596, 750, 752, 754, 1014, 1058, 1060, 1290, 1382, 1400, 1431, 1440, 1446, 1457, 1609, 1869, 1870, 1871, 1891, 1893, 1894, 1904, 1908, 1912, 1913, 1927, 1932, 1946, 1949, 1955], "size": [1, 2, 3, 7, 18, 21, 22, 24, 26, 30, 32, 41, 45, 46, 48, 51, 56, 57, 58, 63, 64, 65, 128, 198, 211, 232, 244, 245, 303, 305, 311, 329, 434, 435, 436, 438, 476, 482, 487, 488, 489, 502, 504, 506, 509, 512, 533, 534, 535, 555, 570, 572, 573, 574, 576, 577, 595, 596, 606, 607, 669, 679, 680, 682, 684, 685, 686, 688, 709, 717, 718, 724, 730, 731, 732, 734, 735, 745, 753, 755, 756, 757, 758, 768, 774, 775, 776, 785, 847, 854, 866, 867, 869, 881, 890, 891, 892, 893, 894, 895, 906, 909, 910, 912, 919, 921, 922, 923, 924, 925, 932, 935, 941, 960, 968, 970, 976, 982, 983, 985, 1025, 1049, 1050, 1056, 1059, 1066, 1068, 1069, 1070, 1071, 1074, 1085, 1086, 1087, 1089, 1090, 1091, 1093, 1094, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1121, 1122, 1123, 1130, 1131, 1136, 1137, 1152, 1153, 1157, 1158, 1169, 1172, 1192, 1195, 1217, 1226, 1235, 1240, 1248, 1252, 1256, 1259, 1261, 1262, 1263, 1265, 1266, 1268, 1276, 1282, 1283, 1285, 1286, 1290, 1293, 1295, 1296, 1297, 1298, 1301, 1302, 1303, 1304, 1305, 1319, 1321, 1324, 1327, 1329, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1372, 1373, 1375, 1376, 1377, 1378, 1381, 1383, 1384, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1441, 1442, 1444, 1450, 1451, 1452, 1453, 1454, 1455, 1460, 1468, 1472, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1501, 1506, 1507, 1508, 1511, 1512, 1519, 1520, 1523, 1524, 1528, 1539, 1546, 1552, 1553, 1554, 1563, 1564, 1566, 1569, 1570, 1572, 1578, 1597, 1598, 1599, 1600, 1609, 1632, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1653, 1655, 1657, 1660, 1661, 1671, 1680, 1699, 1700, 1701, 1702, 1704, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1733, 1738, 1747, 1750, 1769, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1806, 1807, 1808, 1809, 1812, 1813, 1814, 1827, 1828, 1829, 1834, 1836, 1844, 1845, 1846, 1847, 1854, 1855, 1857, 1858, 1859, 1860, 1864, 1865, 1867, 1868, 1869, 1871, 1879, 1881, 1884, 1885, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1906, 1907, 1912, 1913, 1916, 1917, 1918, 1920, 1923, 1927, 1929, 1930, 1932, 1933, 1941, 1943, 1944, 1945, 1946, 1950, 1951, 1954, 1956, 1958], "format": [1, 19, 22, 24, 26, 34, 43, 46, 56, 71, 145, 160, 162, 165, 168, 169, 170, 185, 196, 199, 230, 257, 287, 315, 321, 383, 488, 489, 514, 569, 572, 573, 574, 575, 576, 577, 669, 724, 749, 781, 782, 938, 1014, 1068, 1069, 1070, 1123, 1192, 1195, 1209, 1238, 1352, 1373, 1381, 1399, 1429, 1444, 1476, 1609, 1643, 1645, 1661, 1663, 1721, 1723, 1725, 1743, 1786, 1790, 1795, 1796, 1797, 1798, 1799, 1800, 1809, 1865, 1866, 1868, 1871, 1872, 1877, 1894, 1896, 1902, 1907, 1909, 1910, 1912, 1913, 1917, 1918, 1923, 1924, 1927, 1930, 1932, 1934, 1954, 1956], "arg0": [1, 24, 1910], "arg1": [1, 24, 39, 40, 42, 46, 1910], "repres": [1, 8, 11, 21, 22, 30, 31, 32, 34, 35, 41, 43, 45, 46, 48, 56, 70, 72, 223, 749, 781, 782, 785, 878, 943, 947, 956, 960, 969, 1001, 1004, 1068, 1089, 1091, 1096, 1098, 1099, 1100, 1101, 1125, 1148, 1155, 1184, 1185, 1188, 1191, 1194, 1211, 1212, 1243, 1285, 1337, 1352, 1429, 1435, 1476, 1478, 1480, 1609, 1615, 1618, 1623, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1642, 1652, 1663, 1687, 1693, 1699, 1701, 1712, 1755, 1795, 1796, 1797, 1799, 1800, 1809, 1813, 1845, 1846, 1851, 1857, 1858, 1868, 1870, 1871, 1878, 1881, 1886, 1891, 1896, 1897, 1899, 1901, 1902, 1905, 1909, 1910, 1912, 1916, 1918, 1919, 1921, 1923, 1927, 1930, 1944, 1945, 1949, 1958, 1959], "order": [1, 3, 5, 24, 25, 26, 28, 30, 42, 45, 48, 49, 54, 55, 56, 140, 181, 198, 223, 303, 305, 307, 311, 321, 392, 476, 477, 669, 781, 782, 791, 843, 865, 882, 883, 896, 902, 903, 920, 931, 972, 1014, 1025, 1056, 1059, 1060, 1068, 1086, 1088, 1089, 1095, 1107, 1108, 1109, 1110, 1126, 1136, 1148, 1195, 1215, 1226, 1232, 1234, 1241, 1248, 1251, 1252, 1259, 1260, 1263, 1265, 1268, 1297, 1303, 1317, 1319, 1337, 1346, 1352, 1366, 1429, 1430, 1439, 1456, 1457, 1493, 1501, 1528, 1552, 1553, 1554, 1578, 1600, 1609, 1618, 1628, 1642, 1643, 1644, 1645, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1693, 1699, 1702, 1712, 1747, 1750, 1775, 1785, 1813, 1831, 1838, 1840, 1845, 1848, 1853, 1859, 1866, 1867, 1868, 1869, 1871, 1872, 1875, 1883, 1884, 1885, 1886, 1889, 1892, 1894, 1895, 1896, 1897, 1899, 1902, 1905, 1907, 1910, 1912, 1914, 1915, 1916, 1918, 1920, 1923, 1924, 1925, 1927, 1928, 1930, 1934, 1937, 1941, 1942, 1944, 1946, 1950, 1954, 1956], "backend": [1, 14, 40, 44, 46, 48, 730, 731, 732, 781, 782, 822, 844, 845, 848, 850, 851, 890, 896, 941, 947, 994, 1025, 1068, 1125, 1209, 1232, 1239, 1241, 1259, 1310, 1311, 1312, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1528, 1566, 1578, 1609, 1663, 1664, 1755, 1849, 1851, 1867, 1869, 1870, 1875, 1879, 1882, 1893, 1894, 1896, 1905, 1906, 1912, 1919, 1921, 1927, 1943, 1946, 1947, 1948, 1949, 1950, 1951, 1953], "side": [1, 14, 24, 41, 43, 45, 46, 53, 56, 57, 60, 757, 758, 761, 762, 763, 934, 1003, 1062, 1084, 1085, 1087, 1090, 1091, 1096, 1098, 1099, 1100, 1101, 1104, 1192, 1193, 1240, 1245, 1256, 1258, 1342, 1343, 1344, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1405, 1406, 1407, 1408, 1409, 1410, 1422, 1423, 1424, 1450, 1451, 1453, 1454, 1455, 1480, 1484, 1485, 1486, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1552, 1553, 1554, 1566, 1687, 1716, 1717, 1747, 1809, 1836, 1866, 1868, 1869, 1871, 1890, 1891, 1894, 1896, 1899, 1923, 1941, 1946, 1949], "creation": [1, 2, 21, 24, 26, 56, 734, 735, 745, 753, 813, 971, 1125, 1609, 1610, 1623, 1868, 1872, 1881, 1883, 1891, 1894, 1923, 1925, 1927, 1933, 1944, 1949], "warmup": [1, 3, 1014, 1894, 1917, 1941, 1946, 1954], "correl": [1, 30, 42, 956, 1357, 1358, 1359, 1360, 1361, 1362, 1368, 1369, 1370, 1374], "view": [1, 7, 8, 11, 18, 21, 22, 26, 28, 32, 45, 46, 48, 56, 57, 65, 69, 212, 244, 424, 486, 487, 488, 596, 607, 681, 686, 749, 867, 875, 876, 877, 885, 923, 935, 953, 954, 1058, 1059, 1066, 1107, 1108, 1109, 1110, 1125, 1158, 1170, 1195, 1251, 1262, 1311, 1373, 1381, 1399, 1429, 1444, 1480, 1481, 1482, 1483, 1520, 1565, 1605, 1606, 1609, 1613, 1702, 1734, 1738, 1739, 1743, 1749, 1750, 1781, 1801, 1812, 1823, 1828, 1832, 1844, 1857, 1858, 1860, 1867, 1868, 1869, 1883, 1885, 1886, 1892, 1896, 1910, 1913, 1920, 1923, 1925, 1927, 1929, 1930, 1933, 1945, 1951, 1953, 1955, 1956], "difficult": [1, 7, 9, 45, 53, 1136, 1859, 1945, 1946, 1952, 1954, 1956], "eas": [1, 56, 1893, 1896, 1900, 1944, 1955], "sequenc": [1, 21, 26, 28, 29, 30, 45, 48, 140, 555, 724, 749, 803, 869, 882, 896, 925, 927, 928, 931, 939, 974, 981, 982, 985, 1053, 1067, 1069, 1136, 1156, 1157, 1160, 1211, 1251, 1297, 1337, 1347, 1352, 1357, 1366, 1373, 1381, 1399, 1435, 1444, 1457, 1472, 1473, 1474, 1475, 1476, 1520, 1578, 1618, 1621, 1628, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1657, 1660, 1664, 1679, 1718, 1720, 1724, 1747, 1806, 1809, 1859, 1861, 1864, 1868, 1869, 1870, 1886, 1894, 1898, 1910, 1912, 1915, 1916, 1923, 1933, 1934, 1941, 1943, 1944, 1946, 1955, 1956], "gener": [1, 2, 3, 7, 8, 14, 21, 22, 24, 30, 34, 35, 42, 45, 48, 49, 50, 57, 59, 62, 65, 74, 143, 144, 163, 248, 276, 367, 410, 443, 470, 597, 669, 898, 911, 941, 943, 1000, 1003, 1011, 1012, 1015, 1016, 1035, 1036, 1038, 1039, 1040, 1068, 1090, 1091, 1125, 1136, 1147, 1152, 1171, 1199, 1205, 1216, 1227, 1232, 1241, 1258, 1259, 1263, 1268, 1288, 1296, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1319, 1365, 1376, 1390, 1472, 1480, 1481, 1493, 1600, 1617, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1650, 1653, 1657, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1699, 1701, 1704, 1718, 1720, 1722, 1723, 1724, 1726, 1748, 1761, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1814, 1829, 1833, 1849, 1851, 1853, 1859, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1879, 1884, 1889, 1891, 1894, 1896, 1898, 1899, 1901, 1902, 1904, 1908, 1910, 1912, 1914, 1915, 1917, 1922, 1923, 1924, 1927, 1930, 1932, 1934, 1936, 1938, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1954, 1955, 1956, 1957], "seq": [1, 594, 749, 928, 940, 1297, 1381, 1399, 1435, 1444, 1472, 1474, 1476, 1645, 1843], "n": [1, 3, 24, 26, 29, 30, 32, 34, 39, 42, 46, 56, 219, 250, 396, 454, 455, 675, 678, 679, 680, 724, 747, 749, 770, 866, 906, 909, 910, 912, 919, 921, 925, 931, 932, 933, 934, 960, 961, 962, 963, 964, 965, 966, 967, 1049, 1050, 1060, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1128, 1131, 1136, 1148, 1152, 1153, 1157, 1192, 1195, 1207, 1211, 1212, 1215, 1216, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1268, 1276, 1285, 1290, 1292, 1297, 1300, 1321, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1411, 1412, 1413, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1432, 1433, 1434, 1435, 1436, 1438, 1444, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1460, 1462, 1463, 1464, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1493, 1499, 1511, 1512, 1520, 1524, 1528, 1563, 1566, 1568, 1578, 1609, 1616, 1627, 1636, 1655, 1699, 1700, 1701, 1706, 1711, 1712, 1718, 1724, 1726, 1739, 1747, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1790, 1791, 1807, 1808, 1809, 1813, 1814, 1828, 1829, 1834, 1838, 1840, 1853, 1854, 1855, 1856, 1859, 1869, 1871, 1875, 1884, 1885, 1889, 1891, 1894, 1896, 1898, 1899, 1904, 1915, 1917, 1918, 1919, 1927, 1928, 1932, 1933, 1934, 1946, 1949, 1951], "counter": [1, 24, 1007, 1025, 1170, 1366, 1881, 1883, 1891], "increment": [1, 24, 41, 45, 1121, 1157, 1199, 1366, 1868, 1870, 1891, 1910, 1923, 1941], "stash": [1, 5, 1894, 1896, 1916], "associ": [1, 8, 9, 24, 26, 35, 45, 46, 884, 941, 977, 1028, 1030, 1156, 1157, 1195, 1245, 1256, 1258, 1267, 1352, 1429, 1439, 1512, 1609, 1617, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1769, 1771, 1868, 1871, 1877, 1884, 1885, 1891, 1899, 1902, 1905, 1907, 1910, 1915, 1916, 1917, 1923, 1924, 1930, 1933, 1945, 1946, 1949, 1956, 1958], "tell": [1, 7, 56, 485, 1196, 1203, 1267, 1664, 1868, 1878, 1891, 1896, 1897, 1915, 1943, 1958], "top": [1, 3, 7, 8, 12, 21, 26, 29, 30, 34, 46, 48, 52, 56, 736, 906, 1345, 1346, 1365, 1389, 1396, 1420, 1436, 1478, 1481, 1528, 1623, 1627, 1629, 1776, 1831, 1850, 1872, 1878, 1883, 1896, 1910, 1914, 1943, 1953, 1954], "m": [1, 4, 8, 22, 24, 29, 30, 38, 42, 45, 56, 675, 678, 679, 680, 709, 717, 718, 727, 728, 729, 730, 731, 732, 734, 735, 745, 747, 753, 803, 849, 850, 851, 909, 921, 925, 929, 1081, 1134, 1157, 1193, 1195, 1200, 1202, 1206, 1207, 1213, 1216, 1227, 1235, 1241, 1242, 1243, 1244, 1248, 1249, 1250, 1252, 1253, 1254, 1259, 1260, 1261, 1262, 1268, 1285, 1286, 1290, 1300, 1319, 1321, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1367, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1377, 1378, 1379, 1380, 1384, 1385, 1386, 1387, 1388, 1391, 1392, 1393, 1394, 1397, 1398, 1415, 1416, 1418, 1419, 1422, 1423, 1424, 1428, 1429, 1436, 1437, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1566, 1568, 1609, 1616, 1621, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1649, 1650, 1653, 1699, 1700, 1701, 1711, 1718, 1747, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1790, 1791, 1809, 1813, 1814, 1829, 1836, 1868, 1869, 1870, 1871, 1894, 1896, 1898, 1899, 1902, 1904, 1907, 1918, 1927, 1937, 1938, 1940, 1946], "By": [1, 2, 3, 5, 14, 21, 24, 29, 33, 38, 45, 48, 56, 434, 435, 436, 437, 438, 869, 941, 960, 974, 1017, 1019, 1051, 1063, 1086, 1088, 1089, 1090, 1091, 1099, 1100, 1101, 1126, 1127, 1129, 1130, 1136, 1148, 1156, 1157, 1199, 1248, 1259, 1267, 1296, 1301, 1323, 1345, 1346, 1347, 1348, 1349, 1363, 1365, 1383, 1389, 1392, 1393, 1394, 1395, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1468, 1477, 1500, 1501, 1511, 1540, 1563, 1571, 1653, 1701, 1712, 1733, 1788, 1834, 1859, 1866, 1870, 1875, 1878, 1891, 1894, 1896, 1898, 1902, 1904, 1905, 1907, 1910, 1912, 1914, 1922, 1923, 1927, 1934, 1943, 1946, 1950, 1952, 1956], "compar": [1, 3, 5, 14, 21, 45, 48, 56, 75, 683, 854, 865, 896, 1025, 1072, 1073, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1114, 1115, 1139, 1151, 1170, 1184, 1220, 1284, 1294, 1299, 1330, 1435, 1609, 1654, 1757, 1845, 1871, 1881, 1894, 1896, 1899, 1905, 1908, 1918, 1919, 1923, 1927, 1932, 1934, 1936, 1937, 1941, 1947, 1953], "down": [1, 7, 14, 21, 30, 32, 39, 40, 42, 56, 768, 1025, 1063, 1110, 1116, 1205, 1241, 1539, 1712, 1740, 1896, 1901, 1904, 1912, 1923, 1925, 1927, 1932, 1950, 1956], "irrelev": [1, 3, 1872], "hand": [1, 4, 24, 48, 53, 56, 934, 1062, 1068, 1193, 1240, 1245, 1256, 1258, 1341, 1439, 1457, 1836, 1848, 1868, 1870, 1871, 1891, 1899, 1902, 1904, 1907, 1915, 1927, 1945, 1949], "underwai": [1, 1009, 1894], "up": [1, 6, 7, 8, 9, 14, 21, 22, 24, 28, 30, 32, 34, 38, 40, 41, 43, 44, 48, 51, 56, 768, 774, 879, 941, 1011, 1012, 1014, 1051, 1068, 1097, 1098, 1103, 1105, 1110, 1125, 1186, 1199, 1205, 1208, 1209, 1254, 1337, 1352, 1376, 1435, 1474, 1476, 1480, 1481, 1493, 1519, 1528, 1539, 1597, 1609, 1682, 1718, 1740, 1845, 1846, 1866, 1868, 1870, 1875, 1878, 1881, 1883, 1884, 1885, 1891, 1892, 1893, 1894, 1898, 1899, 1900, 1902, 1905, 1912, 1915, 1917, 1918, 1923, 1924, 1934, 1941, 1943, 1945, 1949, 1952, 1954, 1956, 1958], "nonzero": [1, 48, 1192, 1277, 1279, 1280, 1285, 1862, 1869, 1913, 1944, 1945, 1951], "origin": [1, 5, 11, 12, 18, 21, 22, 24, 26, 34, 45, 46, 48, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 199, 211, 475, 534, 592, 596, 606, 669, 749, 786, 827, 828, 843, 846, 847, 926, 931, 972, 1088, 1089, 1091, 1095, 1099, 1100, 1101, 1107, 1124, 1134, 1169, 1192, 1203, 1207, 1208, 1211, 1212, 1289, 1303, 1337, 1341, 1353, 1365, 1366, 1381, 1458, 1468, 1511, 1581, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1642, 1645, 1648, 1650, 1651, 1653, 1663, 1678, 1693, 1702, 1738, 1749, 1785, 1801, 1834, 1845, 1846, 1868, 1871, 1877, 1883, 1885, 1891, 1894, 1896, 1898, 1901, 1904, 1905, 1907, 1912, 1915, 1916, 1918, 1919, 1927, 1929, 1936, 1937, 1942, 1943, 1945, 1946, 1947, 1949, 1950, 1955, 1956, 1957], "did": [1, 7, 8, 24, 41, 1326, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1870, 1871, 1899, 1907, 1915, 1948, 1949, 1958], "relationship": [1, 9, 38, 56, 938, 1148, 1478, 1891, 1894, 1907, 1915, 1945, 1949], "conceptu": [1, 3, 1891, 1897, 1925, 1943], "tag": [1, 3, 7, 24, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 947, 1267, 1866, 1867, 1901, 1907, 1915, 1932], "eventu": [1, 7, 41, 48, 1866, 1916, 1945], "itt": [1, 1917], "intel": [1, 4, 1867, 1908, 1953], "r": [1, 30, 54, 140, 878, 880, 882, 896, 897, 929, 940, 956, 1068, 1126, 1128, 1131, 1136, 1137, 1140, 1148, 1207, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1245, 1247, 1254, 1256, 1258, 1259, 1268, 1372, 1373, 1382, 1441, 1442, 1460, 1519, 1520, 1569, 1570, 1616, 1680, 1711, 1859, 1868, 1869, 1870, 1891, 1893, 1896, 1899, 1908, 1927, 1930, 1932, 1949, 1956], "instrument": [1, 3, 22, 1311, 1867, 1901, 1937], "technologi": [1, 45, 1867, 1910, 1911, 1938], "applic": [1, 2, 9, 30, 41, 477, 788, 799, 800, 801, 802, 888, 941, 993, 1130, 1306, 1365, 1366, 1474, 1476, 1511, 1609, 1848, 1867, 1878, 1886, 1891, 1893, 1894, 1895, 1896, 1900, 1901, 1902, 1906, 1912, 1914, 1918, 1923, 1924, 1925, 1927, 1933, 1946, 1958], "across": [1, 8, 14, 21, 22, 24, 26, 28, 32, 42, 48, 53, 56, 606, 724, 808, 863, 907, 985, 1024, 1025, 1068, 1082, 1136, 1206, 1211, 1297, 1346, 1366, 1376, 1417, 1435, 1437, 1468, 1480, 1498, 1501, 1530, 1546, 1593, 1609, 1628, 1632, 1656, 1743, 1859, 1867, 1868, 1881, 1884, 1886, 1891, 1895, 1898, 1901, 1902, 1904, 1905, 1906, 1914, 1916, 1919, 1923, 1924, 1929, 1932, 1937, 1941, 1944, 1946, 1949, 1956], "tool": [1, 4, 8, 9, 18, 24, 42, 46, 56, 850, 905, 1311, 1788, 1866, 1867, 1868, 1870, 1893, 1894, 1908, 1912, 1915, 1917, 1937, 1943, 1946, 1950, 1954, 1956, 1958], "With": [1, 18, 21, 24, 30, 45, 48, 55, 728, 729, 730, 731, 732, 774, 1025, 1089, 1090, 1091, 1099, 1100, 1101, 1212, 1347, 1348, 1349, 1358, 1359, 1361, 1362, 1375, 1392, 1393, 1394, 1468, 1479, 1481, 1504, 1507, 1539, 1564, 1597, 1679, 1722, 1872, 1891, 1894, 1896, 1918, 1923, 1927, 1932, 1940, 1947, 1949, 1953, 1956], "abl": [1, 2, 7, 8, 18, 24, 26, 41, 45, 53, 1125, 1193, 1206, 1472, 1609, 1868, 1875, 1884, 1891, 1896, 1897, 1907, 1912, 1915, 1918, 1923, 1927, 1934, 1942, 1944, 1945, 1946, 1947, 1956, 1958], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 15, 325, 730, 731, 732, 886, 896, 1136, 1718, 1859, 1891, 1894, 1895, 1896, 1909, 1910, 1923, 1924, 1938, 1946], "traceback": [1, 18, 34, 42, 55, 56, 1170, 1180, 1788, 1870, 1871, 1872, 1883, 1886, 1896, 1906, 1927, 1934, 1956, 1958], "fail": [1, 7, 24, 30, 32, 33, 34, 39, 40, 41, 42, 44, 45, 55, 56, 57, 62, 65, 74, 897, 898, 972, 1025, 1196, 1203, 1206, 1225, 1254, 1259, 1267, 1268, 1285, 1662, 1871, 1873, 1883, 1891, 1894, 1896, 1904, 1905, 1908, 1912, 1915, 1923, 1942, 1943, 1944, 1946, 1947, 1949, 1956, 1958], "debug": [1, 2, 4, 5, 8, 21, 38, 45, 69, 71, 669, 816, 817, 821, 832, 897, 898, 941, 943, 947, 969, 1002, 1042, 1143, 1225, 1603, 1604, 1605, 1606, 1754, 1762, 1867, 1870, 1877, 1891, 1893, 1894, 1895, 1900, 1901, 1902, 1906, 1908, 1910, 1912, 1915, 1936, 1943, 1944, 1947, 1948, 1958], "test": [1, 3, 14, 18, 24, 39, 41, 42, 45, 56, 57, 64, 65, 682, 688, 941, 1085, 1087, 1088, 1093, 1094, 1099, 1100, 1101, 1103, 1105, 1181, 1182, 1186, 1187, 1189, 1190, 1663, 1777, 1867, 1868, 1872, 1881, 1883, 1891, 1899, 1906, 1912, 1914, 1932, 1937, 1945, 1956, 1957], "slow": [1, 897, 1205, 1209, 1225, 1226, 1613, 1614, 1649, 1845, 1899, 1904, 1932, 1944, 1945], "import": [1, 2, 3, 5, 7, 9, 12, 14, 17, 18, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 35, 38, 39, 43, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 211, 669, 723, 730, 731, 732, 761, 762, 763, 781, 849, 850, 851, 900, 902, 920, 927, 960, 1119, 1121, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1134, 1170, 1192, 1193, 1196, 1198, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1211, 1212, 1213, 1247, 1248, 1251, 1252, 1265, 1297, 1395, 1429, 1609, 1619, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1644, 1645, 1646, 1647, 1648, 1649, 1656, 1681, 1682, 1705, 1868, 1870, 1871, 1872, 1881, 1883, 1886, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1918, 1921, 1923, 1924, 1925, 1927, 1930, 1932, 1933, 1934, 1937, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1954, 1955, 1956, 1957], "myfunc": [1, 1897], "inp": [1, 12, 21, 24, 56, 883, 884, 885, 1480, 1609, 1951, 1954, 1957], "clone": [1, 15, 21, 48, 57, 244, 437, 886, 889, 900, 902, 903, 923, 1199, 1372, 1596, 1827, 1836, 1869, 1883, 1886, 1907, 1913, 1917, 1927, 1929, 1930, 1934, 1951], "run_fn": [1, 5, 846, 852], "last": [1, 5, 6, 11, 21, 22, 25, 28, 29, 30, 41, 46, 55, 56, 305, 606, 681, 749, 866, 910, 919, 925, 935, 1011, 1051, 1056, 1060, 1085, 1087, 1090, 1091, 1093, 1094, 1097, 1098, 1100, 1101, 1103, 1105, 1107, 1152, 1153, 1157, 1170, 1172, 1180, 1192, 1217, 1251, 1254, 1259, 1296, 1301, 1337, 1350, 1365, 1373, 1375, 1381, 1399, 1401, 1416, 1436, 1439, 1443, 1444, 1457, 1473, 1474, 1480, 1499, 1520, 1529, 1542, 1565, 1566, 1609, 1610, 1655, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1738, 1747, 1755, 1785, 1788, 1795, 1796, 1797, 1799, 1800, 1801, 1809, 1813, 1829, 1831, 1834, 1857, 1858, 1870, 1871, 1881, 1884, 1886, 1891, 1894, 1896, 1899, 1906, 1912, 1915, 1916, 1927, 1933, 1934, 1942, 1950, 1956], "stdin": [1, 1170, 1788, 1886, 1896, 1906, 1927], "instal": [1, 3, 14, 15, 24, 56, 1866, 1902, 1903, 1910, 1911, 1912, 1915, 1923, 1932, 1942, 1943, 1944, 1949, 1952], "_tensor": [1, 144], "py": [1, 4, 14, 18, 24, 28, 30, 33, 40, 42, 46, 48, 56, 76, 849, 1609, 1866, 1868, 1871, 1877, 1895, 1899, 1901, 1904, 1912, 1915, 1918, 1924, 1940, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1953, 1955, 1956, 1958], "93": [1, 606], "retain_graph": [1, 140, 882, 896, 902, 903, 1136, 1859, 1869, 1890, 1891, 1896, 1923], "90": [1, 1052, 1697, 1739], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 14, 24, 39, 41, 1866, 1894, 1917, 1950], "53": [1, 470], "44": [1, 311, 434, 1071, 1344, 1424, 1649, 1943], "set_detect_anomali": 1, "behaviour": [1, 682, 683, 688, 1528, 1566, 1693, 1762, 1866, 1905], "interpos": [1, 1896], "grad_fn": [1, 140, 325, 477, 869, 882, 890, 891, 892, 893, 894, 895, 900, 902, 903, 1124, 1617, 1790, 1891, 1896, 1902, 1907], "node": [1, 24, 28, 32, 34, 40, 41, 45, 48, 56, 57, 65, 69, 72, 669, 808, 809, 810, 813, 814, 815, 1014, 1134, 1210, 1352, 1366, 1609, 1663, 1879, 1894, 1910, 1912, 1915, 1916, 1923, 1924, 1925, 1935, 1937, 1944, 1945, 1946, 1953, 1955, 1956], "grad_mod": [1, 1869], "least": [1, 5, 6, 8, 22, 26, 30, 40, 41, 48, 250, 392, 686, 912, 1056, 1058, 1059, 1068, 1109, 1110, 1148, 1156, 1157, 1192, 1218, 1241, 1268, 1290, 1323, 1337, 1609, 1643, 1866, 1871, 1885, 1889, 1891, 1892, 1894, 1898, 1916, 1919, 1925, 1927, 1928, 1929, 1934, 1946, 1948, 1956], "intermediari": [1, 14, 30, 888, 1891, 1899], "access": [1, 9, 18, 21, 24, 26, 46, 48, 55, 57, 59, 70, 477, 546, 723, 888, 978, 1195, 1198, 1211, 1258, 1337, 1429, 1600, 1611, 1612, 1617, 1621, 1643, 1653, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1867, 1868, 1869, 1871, 1872, 1875, 1879, 1882, 1883, 1885, 1886, 1891, 1894, 1898, 1899, 1901, 1902, 1910, 1923, 1927, 1930, 1931, 1933, 1941, 1943, 1944, 1945, 1946, 1948, 1952, 1959], "isinst": [1, 21, 30, 56, 900, 902, 903, 1182, 1193, 1869, 1871, 1891, 1896, 1902, 1915, 1927, 1955, 1956], "dir": [1, 1011, 1663, 1866, 1871, 1915], "__call__": [1, 1195, 1429], "__class__": [1, 57, 59], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1872], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1872], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1871], "__ne__": 1, "__new__": [1, 1870, 1872], "__reduce__": [1, 1915], "__reduce_ex__": 1, "__repr__": [1, 3, 1896], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 56, 1869, 1871], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1891], "metadata": [1, 3, 12, 26, 34, 35, 45, 57, 64, 65, 952, 1267, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1743, 1886, 1891, 1896, 1897, 1907, 1910, 1915, 1917, 1923, 1924, 1927, 1932, 1945, 1955], "next_funct": 1, "register_prehook": [1, 1891], "allclos": [1, 53, 54, 56, 897, 898, 1011, 1090, 1091, 1097, 1098, 1125, 1126, 1128, 1129, 1130, 1131, 1135, 1136, 1243, 1245, 1256, 1258, 1261, 1262, 1287, 1621, 1648, 1711, 1859, 1869, 1897, 1913, 1927], "pack": [1, 28, 727, 728, 729, 730, 731, 732, 734, 735, 749, 770, 1211, 1212, 1287, 1366, 1381, 1399, 1444, 1642, 1643, 1644, 1645, 1869, 1879, 1886, 1891, 1898, 1908, 1918], "unpack": [1, 57, 62, 63, 749, 885, 1211, 1243, 1287, 1366, 1645, 1647, 1654, 1664, 1871, 1872, 1891, 1896, 1898], "hook": [1, 25, 28, 29, 48, 476, 477, 737, 746, 888, 902, 903, 1014, 1195, 1366, 1429, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639, 1650, 1653, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1867, 1887, 1895, 1896, 1901, 1909, 1910, 1915, 1918, 1943, 1945, 1946, 1947, 1949], "common": [1, 3, 8, 21, 32, 41, 53, 57, 71, 76, 674, 782, 854, 914, 917, 922, 955, 1063, 1068, 1113, 1114, 1115, 1116, 1138, 1218, 1267, 1318, 1347, 1348, 1349, 1352, 1468, 1510, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1731, 1743, 1810, 1851, 1867, 1871, 1876, 1885, 1891, 1894, 1896, 1897, 1898, 1902, 1904, 1907, 1912, 1915, 1927, 1928, 1931, 1934, 1944, 1946, 1949, 1952, 1954, 1955, 1956, 1958], "trade": [1, 5, 8, 48, 1259, 1346, 1755, 1893, 1898, 1919], "leav": [1, 8, 32, 42, 140, 882, 1200, 1213, 1619, 1622, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1804, 1868, 1870, 1871, 1891, 1894, 1910, 1915, 1919, 1949], "especi": [1, 9, 11, 21, 24, 46, 56, 244, 923, 941, 948, 1596, 1870, 1891, 1896, 1897, 1905, 1907, 1918, 1923, 1927, 1941, 1945, 1946, 1948, 1949], "notic": [1, 12, 24, 46, 678, 1088, 1102, 1290, 1300, 1345, 1481, 1545, 1684, 1685, 1690, 1691, 1697, 1845, 1867, 1868, 1891, 1927, 1946, 1950, 1954], "fit": [1, 9, 33, 52, 53, 488, 906, 1192, 1671, 1733, 1894, 1910, 1916, 1934, 1956], "evalu": [1, 4, 8, 9, 28, 29, 30, 45, 51, 56, 682, 688, 787, 852, 897, 1025, 1131, 1132, 1195, 1337, 1341, 1347, 1348, 1349, 1367, 1384, 1392, 1393, 1394, 1401, 1429, 1443, 1447, 1468, 1571, 1593, 1619, 1671, 1687, 1718, 1871, 1872, 1896, 1902, 1909, 1910, 1927, 1935, 1938, 1943, 1944, 1945], "saved_tensors_hook": [1, 888, 1891], "pack_hook": [1, 1891], "unpack_hook": [1, 1891], "pair": [1, 24, 26, 29, 30, 41, 43, 606, 724, 854, 929, 960, 1102, 1209, 1259, 1297, 1421, 1430, 1435, 1439, 1568, 1680, 1727, 1870, 1871, 1877, 1884, 1891, 1894, 1916, 1923, 1924, 1925, 1932, 1934, 1937, 1946], "retriev": [1, 21, 22, 24, 28, 32, 41, 56, 526, 878, 879, 1372, 1376, 1480, 1519, 1609, 1643, 1663, 1788, 1886, 1891, 1901, 1912, 1915, 1916, 1923, 1924, 1925, 1943, 1949, 1958], "everytim": 1, "store": [1, 3, 5, 14, 18, 22, 26, 32, 42, 45, 46, 48, 56, 316, 322, 388, 675, 811, 814, 879, 921, 981, 983, 985, 1140, 1195, 1201, 1203, 1206, 1226, 1237, 1238, 1239, 1268, 1273, 1285, 1347, 1348, 1349, 1372, 1429, 1457, 1609, 1616, 1618, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1642, 1793, 1866, 1867, 1868, 1885, 1886, 1887, 1895, 1896, 1897, 1898, 1901, 1910, 1915, 1918, 1923, 1924, 1925, 1927, 1929, 1932, 1933, 1937, 1943, 1945, 1948, 1949], "content": [1, 3, 7, 26, 34, 45, 46, 56, 888, 1203, 1206, 1226, 1237, 1239, 1244, 1257, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1804, 1833, 1866, 1871, 1880, 1883, 1891, 1904, 1923, 1931, 1932, 1933, 1952, 1956], "equal": [1, 12, 22, 24, 30, 41, 42, 43, 45, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 250, 488, 534, 606, 669, 683, 684, 685, 728, 729, 730, 731, 732, 749, 757, 758, 809, 810, 811, 814, 850, 865, 910, 917, 919, 930, 931, 949, 960, 983, 985, 1038, 1057, 1073, 1112, 1126, 1127, 1139, 1152, 1153, 1155, 1156, 1157, 1180, 1184, 1220, 1241, 1254, 1258, 1261, 1262, 1285, 1286, 1297, 1314, 1330, 1334, 1335, 1336, 1338, 1339, 1340, 1345, 1346, 1352, 1358, 1359, 1361, 1362, 1366, 1373, 1376, 1377, 1378, 1381, 1383, 1399, 1434, 1435, 1443, 1444, 1480, 1496, 1497, 1501, 1504, 1507, 1519, 1520, 1523, 1524, 1530, 1609, 1643, 1646, 1699, 1712, 1769, 1770, 1775, 1801, 1809, 1828, 1844, 1849, 1862, 1869, 1872, 1878, 1884, 1885, 1886, 1891, 1892, 1899, 1905, 1913, 1914, 1916, 1928, 1932, 1934, 1955], "term": [1, 8, 9, 30, 41, 46, 56, 547, 723, 752, 781, 931, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1099, 1100, 1101, 1104, 1116, 1227, 1337, 1345, 1383, 1390, 1399, 1400, 1434, 1443, 1460, 1525, 1537, 1571, 1582, 1609, 1616, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1731, 1776, 1867, 1871, 1890, 1891, 1896, 1897, 1898, 1899, 1904, 1912, 1915, 1918, 1924, 1927, 1938, 1944, 1946], "mulbackward0": [1, 891, 894, 895, 1896], "inplac": [1, 45, 51, 53, 56, 57, 64, 65, 744, 747, 765, 767, 769, 780, 786, 803, 827, 828, 829, 846, 847, 852, 886, 1125, 1195, 1341, 1351, 1367, 1368, 1369, 1370, 1371, 1374, 1386, 1387, 1388, 1415, 1428, 1429, 1447, 1448, 1449, 1456, 1458, 1471, 1494, 1502, 1513, 1514, 1515, 1516, 1517, 1521, 1532, 1533, 1534, 1543, 1558, 1573, 1574, 1576, 1579, 1581, 1591, 1603, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1848, 1869, 1878, 1891, 1896, 1912, 1937, 1951, 1955], "lead": [1, 5, 7, 20, 24, 31, 46, 48, 54, 56, 886, 890, 892, 896, 898, 943, 1119, 1136, 1226, 1399, 1444, 1460, 1798, 1804, 1859, 1871, 1885, 1886, 1891, 1893, 1895, 1896, 1897, 1904, 1905, 1908, 1914, 1915, 1918, 1923, 1927, 1932, 1933, 1941, 1946, 1947], "undefin": [1, 24, 31, 34, 48, 309, 460, 606, 867, 889, 897, 898, 917, 925, 1071, 1120, 1121, 1345, 1662, 1705, 1891, 1894, 1896, 1897, 1923], "recurs": [1, 30, 45, 48, 56, 943, 946, 1060, 1195, 1207, 1209, 1429, 1685, 1870, 1896, 1902, 1915, 1923, 1943, 1946, 1947, 1949], "inner": [1, 3, 48, 49, 54, 804, 806, 890, 1051, 1126, 1130, 1135, 1834, 1869, 1896, 1913, 1923, 1937], "save_on_cpu": 1, "pin_memori": [1, 21, 45, 57, 62, 65, 66, 67, 434, 435, 436, 437, 438, 1069, 1071, 1720, 1724, 1726, 1827, 1868, 1869, 1886, 1894, 1896, 1913, 1929, 1951], "within": [1, 5, 9, 12, 21, 22, 24, 28, 29, 30, 41, 42, 43, 45, 46, 48, 55, 56, 69, 70, 78, 477, 867, 897, 898, 941, 952, 975, 1051, 1195, 1199, 1288, 1342, 1343, 1344, 1352, 1368, 1369, 1370, 1374, 1376, 1422, 1423, 1424, 1429, 1435, 1468, 1480, 1528, 1552, 1553, 1554, 1609, 1619, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1635, 1636, 1637, 1638, 1639, 1716, 1717, 1747, 1769, 1847, 1851, 1868, 1870, 1871, 1881, 1886, 1889, 1893, 1894, 1896, 1900, 1901, 1902, 1905, 1912, 1914, 1915, 1918, 1921, 1922, 1923, 1924, 1932, 1944, 1946, 1948, 1955, 1956], "move": [1, 5, 7, 8, 9, 14, 24, 26, 48, 56, 513, 578, 810, 1088, 1195, 1203, 1262, 1267, 1303, 1347, 1348, 1349, 1402, 1403, 1404, 1429, 1468, 1566, 1611, 1612, 1679, 1870, 1879, 1880, 1883, 1885, 1894, 1897, 1898, 1902, 1903, 1904, 1907, 1914, 1915, 1916, 1918, 1923, 1929, 1934, 1946, 1949, 1956], "copi": [1, 7, 11, 21, 22, 24, 26, 32, 39, 45, 48, 52, 53, 56, 180, 186, 196, 199, 305, 392, 437, 447, 452, 460, 482, 488, 569, 570, 571, 572, 592, 606, 781, 803, 827, 828, 868, 869, 884, 930, 938, 941, 981, 982, 1107, 1108, 1109, 1110, 1112, 1125, 1195, 1207, 1267, 1268, 1329, 1366, 1376, 1429, 1439, 1480, 1609, 1642, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1728, 1734, 1740, 1827, 1836, 1842, 1868, 1869, 1883, 1886, 1891, 1892, 1894, 1896, 1904, 1913, 1915, 1916, 1917, 1918, 1923, 1927, 1929, 1930, 1931, 1933, 1937, 1945, 1946, 1948, 1951, 1955], "pin": [1, 199, 327, 434, 435, 436, 437, 438, 452, 569, 592, 1069, 1071, 1195, 1429, 1642, 1720, 1724, 1726, 1827, 1867, 1886, 1929], "asynchron": [1, 3, 4, 55, 186, 199, 569, 592, 994, 1195, 1198, 1214, 1429, 1867, 1872, 1893, 1895, 1923, 1929, 1932, 1954], "prod_1": 1, "prod_2": 1, "del": [1, 1872, 1883, 1896, 1898], "illustr": [1, 1871, 1890, 1896, 1927, 1941, 1949, 1950], "aliv": [1, 5, 21, 32, 41, 972, 1891, 1894, 1898, 1904, 1923, 1924, 1925], "live": [1, 28, 1011, 1014, 1195, 1429, 1868, 1894, 1898, 1923, 1925, 1941, 1945, 1958], "releas": [1, 7, 20, 24, 41, 43, 52, 56, 502, 676, 931, 932, 968, 969, 970, 976, 993, 1003, 1004, 1007, 1011, 1012, 1014, 1025, 1141, 1192, 1195, 1226, 1237, 1239, 1240, 1241, 1244, 1257, 1285, 1286, 1306, 1369, 1399, 1429, 1444, 1552, 1553, 1554, 1656, 1711, 1727, 1743, 1809, 1813, 1836, 1866, 1867, 1870, 1881, 1883, 1891, 1893, 1894, 1900, 1905, 1906, 1907, 1908, 1912, 1918, 1923, 1933, 1934, 1946, 1956], "delet": [1, 24, 56, 883, 969, 977, 1866, 1879, 1883, 1891, 1913, 1922, 1923, 1925, 1955], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 12, 15, 18, 24, 26, 28, 42, 45, 48, 49, 55, 57, 71, 669, 678, 749, 757, 758, 890, 892, 896, 952, 1042, 1207, 1290, 1300, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1347, 1362, 1367, 1368, 1369, 1370, 1374, 1377, 1378, 1381, 1382, 1392, 1399, 1400, 1435, 1444, 1446, 1463, 1472, 1474, 1476, 1477, 1478, 1479, 1496, 1497, 1514, 1515, 1516, 1521, 1523, 1524, 1545, 1609, 1701, 1848, 1867, 1868, 1870, 1871, 1872, 1875, 1877, 1885, 1886, 1891, 1896, 1898, 1899, 1906, 1909, 1912, 1917, 1918, 1923, 1927, 1932, 1935, 1938, 1947, 1948], "messag": [1, 2, 5, 18, 24, 34, 43, 45, 53, 56, 57, 58, 73, 74, 613, 669, 1028, 1030, 1225, 1226, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1866, 1868, 1869, 1871, 1872, 1877, 1898, 1910, 1912, 1916, 1917, 1923, 1925, 1934, 1948, 1956], "get": [1, 8, 12, 14, 21, 24, 25, 26, 29, 41, 42, 43, 44, 45, 48, 53, 55, 56, 78, 140, 325, 675, 723, 777, 778, 850, 851, 882, 885, 925, 996, 997, 998, 1015, 1055, 1125, 1128, 1129, 1130, 1142, 1170, 1211, 1263, 1372, 1373, 1397, 1398, 1425, 1426, 1427, 1439, 1456, 1609, 1610, 1617, 1643, 1650, 1732, 1747, 1851, 1866, 1867, 1868, 1871, 1881, 1883, 1884, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1907, 1910, 1913, 1915, 1918, 1923, 1925, 1927, 1931, 1932, 1933, 1941, 1943, 1944, 1945, 1949, 1950, 1956, 1957], "register_multi_grad_hook": [1, 1891], "fn": [1, 32, 33, 34, 38, 43, 45, 48, 56, 902, 903, 943, 944, 946, 1126, 1132, 1136, 1195, 1196, 1208, 1213, 1429, 1859, 1868, 1870, 1871, 1875, 1883, 1891, 1901, 1923, 1942, 1946, 1947, 1948, 1949, 1954, 1955, 1956], "multi": [1, 4, 32, 41, 749, 972, 1015, 1035, 1068, 1088, 1157, 1195, 1346, 1366, 1381, 1399, 1429, 1432, 1433, 1434, 1435, 1444, 1472, 1474, 1481, 1501, 1609, 1867, 1868, 1871, 1891, 1893, 1894, 1902, 1906, 1914, 1923, 1927, 1930, 1933, 1935], "specifi": [1, 2, 3, 5, 8, 12, 14, 21, 22, 24, 28, 29, 30, 32, 34, 39, 40, 41, 42, 45, 46, 48, 56, 87, 140, 185, 249, 309, 321, 460, 470, 482, 486, 488, 489, 502, 504, 506, 526, 534, 535, 549, 569, 572, 573, 574, 576, 577, 592, 669, 724, 730, 731, 732, 757, 758, 782, 783, 784, 788, 803, 812, 815, 829, 843, 847, 848, 850, 867, 869, 881, 882, 896, 912, 935, 941, 959, 960, 969, 971, 972, 981, 982, 983, 985, 1000, 1003, 1014, 1039, 1049, 1050, 1051, 1055, 1056, 1058, 1068, 1071, 1082, 1085, 1087, 1088, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1103, 1105, 1126, 1127, 1130, 1136, 1137, 1148, 1156, 1157, 1192, 1195, 1199, 1211, 1212, 1238, 1248, 1250, 1252, 1253, 1262, 1265, 1267, 1268, 1278, 1295, 1297, 1303, 1323, 1324, 1327, 1343, 1344, 1345, 1346, 1352, 1361, 1363, 1365, 1366, 1372, 1373, 1376, 1383, 1389, 1390, 1395, 1396, 1399, 1420, 1421, 1426, 1429, 1432, 1433, 1434, 1435, 1436, 1443, 1460, 1461, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1496, 1497, 1500, 1501, 1511, 1512, 1519, 1520, 1525, 1528, 1540, 1547, 1563, 1564, 1571, 1578, 1584, 1585, 1609, 1614, 1616, 1617, 1620, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1653, 1656, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1676, 1678, 1679, 1680, 1681, 1682, 1687, 1692, 1693, 1701, 1709, 1718, 1734, 1739, 1740, 1743, 1760, 1787, 1789, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1804, 1807, 1808, 1809, 1812, 1828, 1830, 1834, 1844, 1845, 1846, 1847, 1851, 1853, 1854, 1855, 1859, 1866, 1868, 1870, 1871, 1875, 1877, 1878, 1880, 1881, 1884, 1885, 1891, 1894, 1896, 1900, 1902, 1904, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1922, 1923, 1927, 1928, 1929, 1930, 1932, 1934, 1942, 1944, 1955], "ignor": [1, 5, 7, 24, 28, 33, 39, 45, 48, 56, 140, 488, 533, 675, 678, 679, 680, 724, 783, 784, 847, 850, 851, 863, 882, 896, 897, 898, 909, 931, 933, 934, 960, 963, 967, 1015, 1016, 1035, 1036, 1089, 1091, 1099, 1100, 1101, 1140, 1155, 1195, 1207, 1213, 1216, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1287, 1324, 1325, 1326, 1342, 1343, 1344, 1345, 1346, 1363, 1365, 1373, 1381, 1383, 1389, 1395, 1396, 1399, 1420, 1421, 1422, 1423, 1424, 1429, 1432, 1433, 1434, 1435, 1436, 1443, 1444, 1460, 1461, 1472, 1477, 1500, 1501, 1511, 1520, 1540, 1563, 1571, 1609, 1656, 1664, 1687, 1695, 1699, 1760, 1791, 1792, 1809, 1813, 1836, 1868, 1871, 1872, 1878, 1885, 1891, 1894, 1896, 1912, 1927, 1934, 1941, 1943, 1955], "rel": [1, 8, 9, 14, 22, 24, 30, 48, 56, 476, 477, 683, 865, 897, 898, 902, 903, 960, 1184, 1250, 1253, 1477, 1478, 1493, 1528, 1664, 1668, 1669, 1695, 1878, 1881, 1893, 1894, 1901, 1912, 1915, 1934, 1949], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 12, 45, 46, 56, 57, 64, 65, 786, 827, 828, 846, 847, 941, 952, 1125, 1199, 1915, 1933, 1945, 1946], "_allowmutationonsavedcontext": 1, "purpos": [1, 22, 24, 56, 77, 460, 488, 749, 897, 1205, 1290, 1352, 1381, 1435, 1603, 1604, 1605, 1606, 1760, 1881, 1886, 1891, 1896, 1915, 1924, 1942, 1946, 1949, 1950, 1956], "clear": [1, 2, 8, 9, 43, 56, 948, 1195, 1429, 1430, 1439, 1663, 1866, 1891, 1894, 1902, 1907, 1913, 1914], "upon": [1, 2, 21, 25, 32, 34, 56, 941, 1609, 1618, 1621, 1845, 1883, 1891, 1894, 1912, 1918, 1925], "sin_": [1, 1869, 1884], "8415": [1, 1896, 1927], "sinbackward0": 1, "variou": [2, 5, 14, 21, 24, 45, 56, 1268, 1849, 1851, 1875, 1878, 1883, 1886, 1896, 1902, 1904, 1914, 1918, 1920, 1927, 1938, 1945, 1957], "get_cpu_cap": 2, "capabl": [2, 8, 14, 15, 24, 996, 1718, 1875, 1894, 1900, 1901, 1903, 1935], "string": [2, 3, 5, 13, 14, 21, 24, 32, 38, 39, 41, 45, 46, 56, 592, 803, 843, 947, 994, 1011, 1012, 1068, 1125, 1195, 1203, 1206, 1267, 1357, 1358, 1359, 1429, 1430, 1439, 1472, 1474, 1476, 1503, 1504, 1505, 1632, 1711, 1743, 1751, 1753, 1850, 1851, 1866, 1869, 1870, 1871, 1872, 1885, 1891, 1896, 1901, 1902, 1907, 1910, 1912, 1915, 1917, 1923, 1929, 1930, 1932, 1937, 1942, 1946, 1949, 1956, 1957, 1958], "vsx": 2, "z": [2, 3, 10, 30, 48, 53, 57, 60, 64, 65, 606, 809, 866, 888, 932, 949, 1068, 1072, 1297, 1382, 1528, 1621, 1654, 1655, 1705, 1735, 1736, 1868, 1869, 1870, 1885, 1891, 1893, 1894, 1899, 1900, 1910, 1912, 1915, 1921, 1923, 1925, 1941, 1944, 1946, 1955, 1956], "vector": [2, 11, 22, 30, 48, 49, 53, 244, 303, 305, 311, 678, 679, 680, 873, 882, 884, 890, 891, 892, 893, 894, 895, 896, 922, 923, 929, 940, 956, 960, 968, 1049, 1050, 1055, 1057, 1131, 1135, 1136, 1140, 1228, 1235, 1243, 1251, 1252, 1256, 1259, 1263, 1264, 1265, 1285, 1290, 1297, 1319, 1321, 1347, 1348, 1349, 1352, 1366, 1372, 1373, 1376, 1384, 1392, 1393, 1394, 1438, 1468, 1477, 1480, 1519, 1520, 1528, 1530, 1564, 1568, 1596, 1613, 1615, 1617, 1621, 1652, 1656, 1700, 1701, 1793, 1813, 1853, 1856, 1859, 1891, 1899, 1918, 1927, 1932, 1948], "NO": [2, 75, 77], "avx": [2, 1940], "avx2": [2, 1918, 1940], "avx512": [2, 1940], "is_built": [2, 1903], "built": [2, 3, 7, 8, 14, 22, 24, 29, 34, 51, 56, 942, 994, 1205, 1478, 1687, 1867, 1886, 1891, 1893, 1894, 1896, 1900, 1902, 1903, 1904, 1918, 1920, 1942, 1943, 1949, 1956, 1957], "necessarili": [2, 22, 24, 30, 32, 41, 45, 74, 460, 897, 1232, 1254, 1265, 1296, 1365, 1436, 1894, 1896], "machin": [2, 24, 32, 41, 48, 49, 54, 1199, 1205, 1241, 1465, 1900, 1901, 1902, 1903, 1904, 1906, 1909, 1910, 1915, 1922, 1923, 1924, 1938, 1940, 1948], "driver": [2, 1140, 1241, 1259, 1260, 1305, 1869, 1894, 1905, 1923, 1954, 1956], "would": [2, 3, 5, 8, 9, 11, 14, 21, 24, 30, 32, 34, 41, 42, 45, 46, 48, 50, 53, 56, 140, 434, 435, 436, 437, 438, 687, 749, 783, 843, 882, 886, 896, 931, 1069, 1071, 1089, 1129, 1130, 1193, 1195, 1196, 1200, 1203, 1211, 1212, 1310, 1311, 1342, 1343, 1344, 1345, 1346, 1381, 1395, 1399, 1422, 1423, 1424, 1429, 1439, 1444, 1528, 1539, 1600, 1609, 1610, 1642, 1654, 1682, 1720, 1724, 1726, 1737, 1747, 1827, 1828, 1833, 1868, 1870, 1871, 1884, 1885, 1886, 1887, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1904, 1907, 1912, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1941, 1942, 1944, 1945, 1946, 1948, 1950, 1952, 1955, 1956], "allow_tf32": [2, 1755, 1869, 1894, 1905], "tensorfloat": 2, "core": [2, 3, 7, 8, 45, 52, 70, 941, 964, 1025, 1662, 1871, 1875, 1893, 1894, 1895, 1904, 1905, 1915, 1935, 1944, 1949, 1953], "amper": [2, 1927], "newer": [2, 14, 45, 1031, 1650, 1893, 1894, 1907, 1909, 1914, 1915, 1919, 1948], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1894, 1905], "precis": [2, 3, 8, 11, 14, 22, 30, 48, 675, 678, 897, 898, 909, 921, 1014, 1111, 1144, 1241, 1259, 1265, 1290, 1300, 1342, 1343, 1344, 1346, 1357, 1358, 1359, 1360, 1361, 1362, 1382, 1400, 1416, 1422, 1423, 1424, 1481, 1539, 1578, 1609, 1740, 1755, 1760, 1867, 1871, 1881, 1887, 1891, 1902, 1915, 1918, 1919, 1921, 1928, 1930, 1932, 1933, 1953, 1959], "gemm": [2, 1893, 1912, 1946], "allow_bf16_reduced_precision_reduct": [2, 1894, 1905], "cufft_plan_cach": [2, 1894], "cufft": 2, "queri": [2, 24, 41, 56, 724, 971, 972, 974, 980, 1027, 1031, 1045, 1046, 1195, 1307, 1429, 1435, 1578, 1620, 1869, 1894, 1915, 1944, 1945, 1949], "specif": [2, 3, 7, 8, 9, 14, 24, 26, 28, 30, 32, 39, 41, 43, 45, 48, 53, 56, 57, 69, 71, 76, 78, 502, 843, 850, 906, 974, 1059, 1088, 1157, 1192, 1199, 1205, 1209, 1211, 1212, 1296, 1376, 1401, 1578, 1603, 1604, 1623, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1678, 1679, 1680, 1681, 1682, 1750, 1755, 1790, 1849, 1866, 1868, 1870, 1871, 1873, 1875, 1877, 1881, 1885, 1887, 1891, 1894, 1896, 1900, 1904, 1906, 1910, 1912, 1914, 1915, 1917, 1918, 1919, 1921, 1923, 1925, 1932, 1933, 1940, 1944, 1945, 1946, 1948, 1949, 1953, 1955, 1956], "via": [2, 7, 14, 15, 21, 24, 26, 30, 39, 45, 46, 48, 52, 56, 506, 606, 897, 898, 928, 969, 1005, 1025, 1072, 1128, 1268, 1347, 1348, 1349, 1366, 1384, 1392, 1393, 1394, 1401, 1468, 1616, 1650, 1653, 1693, 1868, 1870, 1871, 1881, 1883, 1886, 1889, 1891, 1894, 1896, 1897, 1898, 1900, 1902, 1904, 1905, 1912, 1915, 1918, 1923, 1924, 1927, 1930, 1931, 1942, 1944, 1945, 1949, 1952, 1957], "readonli": 2, "show": [2, 4, 7, 13, 18, 21, 22, 24, 26, 31, 45, 48, 56, 70, 890, 896, 941, 1119, 1195, 1297, 1429, 1600, 1663, 1866, 1867, 1871, 1884, 1893, 1894, 1895, 1896, 1899, 1900, 1902, 1910, 1912, 1914, 1915, 1923, 1925, 1948, 1950, 1953, 1954, 1956, 1958], "max_siz": [2, 40, 42, 1894], "capac": [2, 1038, 1894, 1904], "preferred_linalg_librari": [2, 1232], "subject": [2, 3, 11, 18, 24, 28, 29, 48, 55, 56, 223, 854, 1578, 1609, 1871, 1884, 1885, 1891, 1896, 1912, 1916, 1917, 1918, 1919, 1923, 1927, 1930, 1935, 1936, 1937, 1944, 1953], "algebra": [2, 9, 1068, 1232, 1253, 1867, 1876], "cusolv": [2, 1259, 1260, 1813], "magma": [2, 1241, 1285, 1711, 1813, 1908, 1927], "decid": [2, 4, 7, 24, 41, 52, 1632, 1878, 1912, 1927, 1945, 1946, 1950], "heurist": [2, 14, 21, 41, 42, 56, 1068, 1950], "overrid": [2, 14, 22, 24, 25, 30, 34, 42, 48, 53, 56, 781, 782, 843, 879, 881, 1011, 1345, 1346, 1363, 1365, 1389, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1445, 1460, 1461, 1477, 1500, 1501, 1511, 1540, 1563, 1571, 1623, 1682, 1743, 1760, 1867, 1871, 1875, 1907, 1914, 1915, 1918, 1923, 1927, 1932, 1937, 1955], "wherev": [2, 9, 1884, 1949], "pick": [2, 24, 40, 42, 502, 941, 1891, 1923, 1943, 1944, 1950], "prefer": [2, 9, 21, 26, 32, 48, 851, 867, 892, 1193, 1236, 1249, 1253, 1261, 1268, 1436, 1578, 1747, 1809, 1827, 1868, 1891, 1894, 1915, 1927, 1946], "environ": [2, 3, 7, 14, 15, 18, 20, 22, 30, 32, 34, 39, 44, 45, 56, 69, 71, 669, 1205, 1211, 1399, 1444, 1848, 1866, 1868, 1877, 1891, 1893, 1895, 1900, 1905, 1906, 1908, 1916, 1923, 1940, 1942, 1946, 1956], "variabl": [2, 3, 5, 12, 14, 18, 20, 22, 30, 32, 34, 39, 44, 46, 48, 53, 56, 57, 60, 64, 65, 69, 71, 437, 669, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 717, 718, 719, 720, 721, 723, 727, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 788, 886, 952, 956, 960, 1037, 1069, 1136, 1209, 1211, 1268, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1372, 1373, 1381, 1382, 1399, 1400, 1401, 1414, 1416, 1429, 1432, 1437, 1444, 1446, 1609, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1660, 1664, 1666, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1720, 1722, 1724, 1848, 1859, 1864, 1866, 1867, 1877, 1878, 1885, 1886, 1891, 1893, 1895, 1898, 1899, 1905, 1906, 1908, 1910, 1912, 1914, 1918, 1923, 1929, 1932, 1943, 1944, 1946, 1948, 1956], "torch_linalg_prefer_cusolv": 2, "global": [2, 3, 5, 8, 12, 21, 24, 26, 28, 29, 30, 32, 42, 48, 53, 55, 56, 57, 60, 64, 65, 843, 850, 854, 862, 910, 919, 952, 969, 1003, 1020, 1027, 1069, 1071, 1081, 1086, 1104, 1122, 1125, 1152, 1153, 1176, 1183, 1195, 1198, 1211, 1215, 1266, 1282, 1429, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1628, 1632, 1660, 1720, 1722, 1724, 1727, 1751, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1864, 1868, 1871, 1872, 1887, 1890, 1896, 1901, 1902, 1904, 1906, 1907, 1918, 1923, 1924, 1925, 1927, 1930, 1932, 1943, 1945, 1946, 1947, 1955, 1956], "overridden": [2, 14, 56, 878, 879, 880, 1011, 1429, 1788, 1871, 1891, 1896, 1905, 1916, 1956, 1957], "achiev": [2, 21, 22, 24, 30, 42, 48, 1068, 1132, 1195, 1346, 1352, 1429, 1435, 1436, 1501, 1530, 1609, 1882, 1894, 1901, 1904, 1915, 1923, 1925, 1956], "better": [2, 3, 7, 8, 9, 14, 21, 24, 32, 52, 941, 1037, 1124, 1128, 1129, 1170, 1182, 1211, 1365, 1462, 1584, 1609, 1693, 1718, 1871, 1890, 1891, 1893, 1894, 1899, 1908, 1912, 1914, 1917, 1918, 1919, 1927, 1932, 1937, 1942, 1943, 1949, 1953], "select": [2, 5, 15, 19, 21, 24, 30, 32, 46, 303, 305, 307, 311, 749, 931, 962, 963, 966, 975, 976, 980, 987, 988, 989, 990, 992, 1013, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1037, 1038, 1041, 1043, 1045, 1046, 1088, 1268, 1297, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1381, 1399, 1444, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1578, 1637, 1638, 1750, 1824, 1851, 1862, 1868, 1869, 1871, 1883, 1884, 1885, 1886, 1891, 1893, 1894, 1899, 1906, 1913, 1918, 1927, 1931, 1934, 1943, 1949, 1951, 1953, 1958], "incorrect": [2, 4, 5, 48, 56, 74, 75, 77, 244, 502, 545, 888, 897, 923, 1211, 1254, 1267, 1435, 1472, 1473, 1474, 1475, 1476, 1596, 1656, 1798, 1809, 1868, 1871, 1894, 1905, 1912], "linalg": [2, 396, 931, 932, 933, 934, 968, 1054, 1140, 1173, 1276, 1285, 1286, 1287, 1291, 1292, 1616, 1617, 1621, 1656, 1698, 1703, 1705, 1711, 1782, 1813, 1814, 1836, 1856, 1867], "inv": [2, 30, 1173, 1227, 1231, 1237, 1253, 1257, 1261], "inv_ex": 2, "cholesky_ex": [2, 1225], "lu_factor": [2, 1244, 1245, 1285, 1286, 1287], "lu": [2, 10, 1237, 1243, 1244, 1245, 1286, 1287, 1869], "eigh": [2, 1225, 1231, 1234, 1253, 1259, 1905], "eighval": 2, "svdval": [2, 1227, 1241, 1250, 1259, 1813, 1905], "_linalgbackend": 2, "sdpbackend": 2, "enum": [2, 24, 57, 785, 1896, 1912, 1918, 1923, 1949], "scale": [2, 7, 21, 30, 32, 40, 42, 87, 462, 464, 606, 674, 678, 679, 680, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 759, 761, 762, 763, 764, 766, 769, 770, 784, 788, 791, 808, 809, 810, 811, 814, 909, 1082, 1083, 1086, 1104, 1135, 1136, 1282, 1341, 1367, 1372, 1373, 1374, 1390, 1401, 1456, 1481, 1482, 1483, 1519, 1520, 1521, 1537, 1539, 1578, 1579, 1584, 1666, 1687, 1713, 1714, 1715, 1716, 1717, 1791, 1792, 1810, 1859, 1867, 1869, 1885, 1889, 1894, 1898, 1902, 1910, 1918, 1919, 1921, 1928, 1946], "product": [2, 15, 24, 30, 41, 140, 675, 678, 679, 680, 749, 882, 884, 891, 893, 894, 895, 896, 909, 921, 927, 931, 956, 968, 980, 1027, 1031, 1045, 1046, 1049, 1065, 1068, 1131, 1135, 1136, 1172, 1216, 1228, 1235, 1261, 1262, 1264, 1290, 1297, 1300, 1321, 1381, 1382, 1399, 1400, 1527, 1578, 1616, 1699, 1700, 1709, 1755, 1829, 1844, 1856, 1859, 1867, 1868, 1884, 1891, 1899, 1901, 1905, 1915, 1918, 1927, 1958], "attent": [2, 7, 724, 1346, 1435, 1472, 1474, 1476, 1501, 1578, 1867, 1908, 1931], "stai": [2, 7, 28, 129, 1366, 1894, 1904, 1918, 1923, 1927], "align": [2, 9, 22, 71, 749, 768, 774, 809, 815, 941, 1068, 1148, 1251, 1344, 1352, 1365, 1381, 1395, 1399, 1423, 1424, 1444, 1481, 1511, 1512, 1539, 1540, 1597, 1616, 1656, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1685, 1834, 1867, 1884, 1891, 1899, 1912, 1921, 1928], "src": [2, 3, 24, 56, 186, 218, 303, 311, 460, 501, 502, 503, 504, 505, 506, 508, 527, 1059, 1125, 1319, 1472, 1475, 1476, 1662, 1744, 1745, 1746, 1750, 1781, 1823, 1848, 1869, 1915, 1951], "transform": [2, 3, 12, 21, 26, 29, 45, 48, 53, 69, 70, 71, 770, 786, 827, 828, 846, 847, 932, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1124, 1125, 1126, 1130, 1135, 1192, 1205, 1350, 1384, 1392, 1393, 1394, 1401, 1416, 1457, 1473, 1474, 1475, 1476, 1493, 1499, 1528, 1545, 1564, 1600, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1776, 1809, 1867, 1897, 1916, 1918, 1927, 1932, 1937, 1938, 1943, 1948, 1949], "sdp_utils_cpp": 2, "h": [2, 4, 10, 14, 30, 476, 477, 730, 731, 732, 749, 933, 934, 1225, 1232, 1235, 1245, 1259, 1335, 1336, 1343, 1344, 1346, 1348, 1349, 1353, 1358, 1359, 1361, 1369, 1370, 1372, 1374, 1381, 1382, 1393, 1394, 1399, 1400, 1401, 1412, 1413, 1423, 1424, 1441, 1442, 1444, 1446, 1463, 1479, 1482, 1483, 1493, 1501, 1528, 1563, 1569, 1570, 1616, 1617, 1650, 1662, 1813, 1869, 1884, 1885, 1891, 1894, 1895, 1896, 1898, 1899, 1912, 1931, 1932, 1933, 1944, 1953], "flash_sdp_en": 2, "flash": 2, "enable_mem_efficient_sdp": [2, 1578], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1578], "math_sdp_en": 2, "math": [2, 21, 56, 1078, 1245, 1247, 1540, 1578, 1701, 1718, 1814, 1867, 1868, 1870, 1871, 1905, 1927, 1928, 1934, 1956], "enable_math_sdp": [2, 1578], "sdp_kernel": [2, 1578], "enable_flash": 2, "enable_math": [2, 1578], "enable_mem_effici": 2, "temporarili": [2, 32, 1751, 1891, 1912, 1917, 1950], "previou": [2, 18, 24, 41, 45, 48, 56, 545, 749, 941, 1003, 1113, 1148, 1206, 1266, 1282, 1381, 1399, 1444, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1663, 1718, 1809, 1879, 1891, 1894, 1896, 1902, 1908, 1910, 1918, 1925, 1946], "restor": [2, 5, 28, 56, 78, 948, 1113, 1266, 1282, 1653, 1738, 1760, 1902, 1907, 1943], "is_avail": [2, 17, 24, 1851, 1867, 1894, 1900, 1903, 1907, 1917], "determinist": [2, 3, 5, 20, 24, 30, 56, 74, 78, 502, 862, 1143, 1176, 1198, 1211, 1212, 1293, 1296, 1298, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1399, 1444, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1578, 1748, 1754, 1848, 1869, 1891, 1906, 1914, 1922], "algorithm": [2, 3, 7, 11, 19, 22, 25, 28, 30, 32, 48, 78, 749, 768, 774, 931, 1192, 1236, 1243, 1249, 1253, 1259, 1268, 1285, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1379, 1381, 1399, 1444, 1480, 1481, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1528, 1539, 1578, 1597, 1609, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1682, 1701, 1740, 1755, 1813, 1814, 1848, 1867, 1891, 1894, 1905, 1923, 1927], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 488, 862, 1069, 1070, 1071, 1176, 1754, 1906], "benchmark": [2, 1867, 1869, 1894, 1900, 1941, 1946, 1953], "fastest": [2, 866, 1609, 1655, 1668, 1669, 1899, 1906, 1914], "benchmark_limit": 2, "maximum": [2, 30, 41, 42, 45, 488, 684, 686, 760, 784, 809, 810, 811, 814, 815, 863, 982, 1017, 1019, 1025, 1032, 1033, 1047, 1048, 1069, 1070, 1071, 1114, 1130, 1155, 1156, 1157, 1268, 1293, 1314, 1388, 1519, 1520, 1614, 1685, 1693, 1718, 1732, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1848, 1850, 1869, 1877, 1889, 1890, 1894, 1904, 1913, 1921, 1934, 1944, 1951, 1958], "try": [2, 3, 4, 7, 8, 24, 26, 29, 33, 34, 38, 41, 45, 48, 52, 53, 72, 73, 941, 1038, 1121, 1130, 1136, 1200, 1202, 1211, 1232, 1314, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1472, 1473, 1475, 1481, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1578, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1859, 1866, 1868, 1871, 1872, 1891, 1894, 1896, 1898, 1899, 1904, 1912, 1914, 1915, 1918, 1919, 1923, 1927, 1942, 1944, 1945, 1946, 1948, 1956, 1958], "dispatch": [2, 24, 48, 56, 74, 75, 77, 1200, 1310, 1311, 1849, 1851, 1871, 1875, 1894, 1896, 1910, 1912, 1946, 1947, 1957], "v8": 2, "verbos": [2, 14, 24, 56, 669, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1866, 1877, 1885, 1912, 1932, 1956], "On": [2, 14, 20, 21, 24, 25, 30, 42, 48, 53, 56, 675, 678, 909, 921, 1243, 1290, 1300, 1357, 1358, 1359, 1360, 1361, 1362, 1382, 1397, 1398, 1399, 1400, 1416, 1439, 1444, 1457, 1609, 1668, 1669, 1678, 1681, 1867, 1868, 1878, 1891, 1893, 1894, 1896, 1905, 1915, 1923, 1924, 1925, 1927, 1941, 1944, 1945], "demand": [2, 21, 1005, 1870, 1901, 1904, 1923], "onemkl": 2, "easier": [2, 7, 21, 45, 56, 1868, 1870, 1886, 1891, 1892, 1896, 1897, 1927, 1946, 1956], "dump": [2, 56, 969, 1895, 1908, 1946, 1949, 1956], "durat": [2, 24, 38, 41, 1310, 1311, 1881, 1910, 1917, 1946, 1956], "kernel": [2, 3, 4, 11, 14, 18, 24, 48, 55, 728, 729, 730, 731, 732, 761, 762, 763, 941, 967, 972, 974, 975, 1011, 1012, 1044, 1046, 1316, 1342, 1343, 1344, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1377, 1378, 1397, 1398, 1405, 1406, 1407, 1408, 1409, 1410, 1422, 1423, 1424, 1425, 1426, 1427, 1480, 1503, 1504, 1505, 1506, 1507, 1508, 1523, 1524, 1578, 1619, 1849, 1851, 1868, 1875, 1879, 1886, 1894, 1896, 1897, 1903, 1905, 1912, 1914, 1917, 1919, 1927, 1941, 1943, 1945, 1946, 1947, 1948, 1954, 1956], "mkl_verbos": 2, "methodologi": 2, "moreov": [2, 48, 71, 502, 1609, 1681], "investig": [2, 7, 24, 53, 1954], "singl": [2, 3, 5, 12, 14, 22, 24, 26, 28, 29, 30, 32, 34, 40, 41, 48, 49, 51, 52, 53, 54, 55, 56, 57, 64, 65, 244, 669, 684, 685, 755, 756, 757, 758, 761, 762, 763, 803, 883, 890, 891, 892, 893, 894, 895, 896, 910, 919, 923, 941, 952, 956, 960, 1011, 1014, 1124, 1126, 1127, 1130, 1132, 1136, 1152, 1153, 1157, 1180, 1194, 1195, 1211, 1212, 1215, 1273, 1297, 1310, 1311, 1335, 1336, 1339, 1340, 1343, 1344, 1346, 1357, 1358, 1359, 1361, 1362, 1365, 1366, 1377, 1378, 1384, 1397, 1398, 1401, 1423, 1424, 1429, 1437, 1441, 1442, 1457, 1468, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1523, 1524, 1525, 1552, 1553, 1554, 1596, 1602, 1604, 1607, 1608, 1609, 1613, 1614, 1615, 1651, 1652, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1687, 1708, 1734, 1755, 1801, 1807, 1808, 1845, 1846, 1848, 1854, 1855, 1859, 1867, 1868, 1870, 1871, 1878, 1879, 1883, 1885, 1886, 1891, 1893, 1894, 1896, 1897, 1899, 1902, 1904, 1905, 1906, 1907, 1912, 1914, 1915, 1916, 1917, 1918, 1924, 1925, 1927, 1930, 1933, 1934, 1937, 1940, 1941, 1943, 1944, 1945, 1946, 1948, 1949, 1955, 1956], "enough": [2, 8, 22, 56, 1207, 1319, 1478, 1795, 1796, 1797, 1798, 1799, 1800, 1848, 1870, 1883, 1886, 1894, 1896, 1899, 1914, 1915, 1930, 1946, 1957], "scope": [2, 7, 12, 43, 56, 71, 952, 1121, 1468, 1632, 1868, 1870, 1871, 1894, 1898, 1912, 1915, 1925, 1945, 1955], "second": [2, 5, 14, 18, 24, 28, 32, 34, 41, 43, 45, 54, 56, 675, 678, 680, 683, 749, 783, 863, 864, 865, 873, 881, 897, 898, 909, 913, 914, 916, 917, 918, 921, 968, 980, 1027, 1031, 1045, 1046, 1056, 1058, 1059, 1065, 1073, 1114, 1115, 1126, 1129, 1130, 1131, 1135, 1136, 1138, 1139, 1148, 1151, 1159, 1160, 1161, 1172, 1184, 1218, 1220, 1228, 1264, 1267, 1273, 1274, 1284, 1290, 1294, 1296, 1297, 1299, 1300, 1325, 1330, 1333, 1337, 1343, 1344, 1350, 1358, 1359, 1361, 1362, 1372, 1373, 1380, 1381, 1395, 1398, 1399, 1417, 1421, 1423, 1424, 1444, 1457, 1510, 1512, 1546, 1600, 1632, 1668, 1669, 1672, 1678, 1682, 1693, 1739, 1790, 1798, 1833, 1838, 1840, 1853, 1856, 1859, 1870, 1871, 1891, 1894, 1896, 1897, 1898, 1899, 1902, 1906, 1910, 1912, 1917, 1923, 1928, 1932, 1941, 1949], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 12, 15, 18, 21, 24, 32, 33, 34, 38, 45, 46, 48, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 77, 488, 669, 736, 883, 884, 885, 893, 1125, 1140, 1366, 1609, 1867, 1868, 1871, 1872, 1877, 1881, 1883, 1886, 1889, 1891, 1893, 1896, 1899, 1910, 1915, 1917, 1918, 1919, 1923, 1927, 1932, 1936, 1937, 1938, 1943, 1944, 1946, 1947, 1949, 1951, 1954, 1955, 1956, 1957], "verbose_off": 2, "dnn": [2, 1893], "onednn": [2, 844, 845, 848, 1197, 1204, 1913, 1918], "former": [2, 48, 1399, 1429, 1891], "dnnl_verbos": 2, "verbose_on_cr": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 16, 17, 22, 30, 45, 52, 55, 1528, 1609, 1866, 1867, 1882, 1896, 1902, 1910, 1914, 1921, 1923, 1932, 1935, 1942], "els": [2, 7, 12, 21, 24, 26, 30, 32, 33, 41, 45, 56, 57, 592, 749, 912, 952, 1207, 1213, 1395, 1468, 1565, 1578, 1609, 1668, 1669, 1672, 1678, 1679, 1680, 1681, 1735, 1736, 1769, 1775, 1851, 1868, 1870, 1872, 1873, 1878, 1883, 1886, 1894, 1896, 1897, 1902, 1903, 1910, 1911, 1912, 1914, 1915, 1929, 1941, 1942, 1944, 1955], "einsum": [2, 1869, 1913], "readthedoc": [2, 1068], "io": [2, 7, 21, 26, 45, 1068, 1203, 1206, 1267, 1399, 1400, 1476, 1578, 1743, 1908, 1910, 1918], "en": [2, 22, 1068, 1900, 1932, 1959], "path_find": [2, 1068], "html": [2, 3, 4, 7, 15, 42, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 941, 1068, 1478, 1848, 1851, 1892, 1900, 1902, 1906, 1915, 1932], "calcul": [2, 21, 24, 38, 749, 757, 758, 788, 791, 808, 809, 813, 929, 960, 1056, 1060, 1068, 1072, 1186, 1192, 1251, 1273, 1274, 1276, 1342, 1343, 1344, 1347, 1348, 1349, 1352, 1360, 1361, 1362, 1376, 1381, 1383, 1384, 1392, 1393, 1394, 1401, 1468, 1477, 1480, 1481, 1495, 1496, 1497, 1525, 1528, 1539, 1568, 1617, 1628, 1650, 1654, 1656, 1687, 1733, 1757, 1807, 1808, 1838, 1840, 1854, 1855, 1891, 1892, 1895, 1899, 1905, 1908, 1918, 1927, 1937], "path": [2, 3, 4, 8, 14, 24, 26, 39, 41, 43, 44, 45, 48, 56, 723, 904, 905, 969, 970, 1068, 1195, 1429, 1445, 1476, 1663, 1866, 1867, 1869, 1870, 1891, 1894, 1896, 1900, 1907, 1910, 1915, 1917, 1927, 1936, 1941, 1948, 1949, 1950], "contract": [2, 46, 1068, 1829, 1867, 1885, 1915, 1942, 1949], "left": [2, 21, 56, 449, 488, 803, 809, 854, 910, 914, 917, 919, 920, 925, 930, 1068, 1088, 1095, 1109, 1112, 1113, 1117, 1148, 1152, 1153, 1157, 1192, 1193, 1200, 1215, 1236, 1245, 1249, 1253, 1256, 1257, 1258, 1259, 1261, 1273, 1274, 1319, 1337, 1342, 1343, 1344, 1345, 1346, 1357, 1358, 1359, 1376, 1383, 1396, 1397, 1398, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1432, 1433, 1434, 1438, 1439, 1477, 1480, 1481, 1482, 1483, 1528, 1548, 1566, 1614, 1685, 1686, 1699, 1727, 1740, 1747, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1809, 1829, 1834, 1853, 1868, 1869, 1871, 1891, 1896, 1902, 1921, 1928, 1954, 1958], "strategi": [2, 3, 7, 21, 22, 24, 28, 34, 48, 890, 892, 1068, 1128, 1209, 1337, 1609, 1693, 1870, 1897, 1899, 1919, 1946], "auto": [2, 24, 49, 72, 73, 1068, 1345, 1346, 1871, 1912, 1932, 1945], "greedi": [2, 28, 1068], "doc": [2, 3, 4, 9, 15, 41, 42, 46, 72, 76, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 829, 941, 1136, 1214, 1473, 1474, 1475, 1476, 1848, 1859, 1872, 1883, 1892, 1895, 1896, 1902, 1906, 1915, 1923, 1927, 1932, 1947, 1952], "timer": [3, 27, 1867], "stmt": [3, 1893], "setup": [3, 14, 22, 41, 42, 48, 809, 810, 811, 814, 1136, 1609, 1859, 1893, 1894, 1903, 1923, 1924, 1942], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 21, 28, 1068, 1337, 1346, 1352, 1363, 1365, 1389, 1421, 1432, 1433, 1512, 1643, 1686, 1895, 1904, 1906, 1932], "sub_label": 3, "descript": [3, 7, 13, 14, 21, 34, 41, 56, 723, 1166, 1167, 1168, 1241, 1268, 1493, 1711, 1755, 1870, 1871, 1894, 1896, 1899, 1901, 1902, 1912, 1938, 1947, 1959], "env": [3, 24, 30, 34, 39, 41, 42, 44, 56, 1025, 1895, 1905, 1910, 1911, 1923, 1946, 1956], "num_thread": [3, 1904], "languag": [3, 14, 34, 45, 1207, 1337, 1472, 1527, 1898, 1909], "measur": [3, 30, 38, 971, 1017, 1019, 1227, 1307, 1345, 1346, 1363, 1389, 1396, 1420, 1421, 1477, 1478, 1500, 1501, 1559, 1695, 1867, 1894, 1901, 1902, 1914, 1927], "statement": [3, 12, 30, 46, 53, 56, 57, 62, 64, 65, 952, 1196, 1211, 1872, 1891, 1896, 1904, 1907, 1909, 1912, 1915, 1921, 1923, 1942, 1949], "full": [3, 7, 8, 15, 21, 22, 24, 28, 30, 41, 44, 45, 48, 49, 53, 56, 57, 62, 65, 66, 67, 502, 889, 910, 919, 941, 1096, 1097, 1098, 1102, 1103, 1105, 1123, 1135, 1136, 1152, 1153, 1199, 1233, 1234, 1241, 1242, 1243, 1254, 1259, 1260, 1268, 1285, 1346, 1352, 1383, 1443, 1472, 1503, 1504, 1505, 1512, 1525, 1571, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1760, 1813, 1814, 1859, 1866, 1868, 1869, 1870, 1871, 1873, 1885, 1890, 1894, 1895, 1896, 1899, 1902, 1905, 1906, 1910, 1913, 1915, 1918, 1921, 1924, 1931, 1934, 1943, 1946, 1949, 1950, 1951, 1956], "org": [3, 4, 7, 9, 10, 12, 15, 22, 29, 30, 42, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 941, 952, 1268, 1399, 1447, 1448, 1475, 1478, 1653, 1701, 1755, 1776, 1851, 1866, 1872, 1891, 1892, 1902, 1906, 1908, 1912, 1915, 1932, 1958, 1959], "timeit": [3, 1893], "sever": [3, 12, 15, 21, 24, 29, 30, 48, 56, 727, 728, 729, 730, 731, 732, 755, 756, 761, 762, 763, 771, 772, 941, 1014, 1072, 1170, 1195, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1357, 1358, 1359, 1360, 1361, 1362, 1377, 1378, 1397, 1398, 1417, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1482, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1503, 1504, 1505, 1506, 1507, 1508, 1523, 1524, 1546, 1549, 1550, 1552, 1553, 1554, 1609, 1618, 1619, 1621, 1622, 1654, 1662, 1716, 1717, 1757, 1844, 1868, 1890, 1891, 1893, 1894, 1901, 1902, 1904, 1912, 1914, 1918, 1923, 1943, 1946], "kei": [3, 21, 26, 32, 39, 41, 42, 46, 48, 56, 592, 669, 724, 843, 848, 906, 1034, 1124, 1134, 1195, 1211, 1212, 1267, 1429, 1430, 1435, 1439, 1472, 1473, 1474, 1475, 1476, 1578, 1635, 1651, 1849, 1851, 1867, 1869, 1870, 1871, 1875, 1894, 1896, 1901, 1902, 1907, 1912, 1913, 1914, 1917, 1918, 1921, 1923, 1924, 1929, 1932, 1934, 1936, 1938, 1947, 1949, 1953, 1954, 1955], "awar": [3, 7, 74, 475, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 827, 828, 844, 851, 852, 1476, 1578, 1609, 1817, 1818, 1819, 1820, 1821, 1885, 1891, 1894, 1915, 1921, 1924, 1927, 1953], "element": [3, 12, 21, 24, 30, 45, 46, 53, 54, 56, 57, 63, 64, 65, 87, 109, 140, 144, 186, 206, 232, 244, 248, 276, 303, 305, 307, 309, 311, 342, 388, 390, 392, 424, 443, 460, 462, 463, 486, 488, 502, 504, 506, 509, 534, 535, 547, 549, 598, 599, 606, 670, 672, 673, 676, 677, 682, 683, 687, 688, 724, 747, 749, 759, 760, 761, 762, 763, 769, 773, 782, 863, 865, 866, 867, 870, 871, 872, 873, 874, 882, 890, 891, 893, 894, 895, 897, 898, 911, 920, 923, 930, 936, 940, 952, 954, 956, 957, 958, 1011, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1057, 1058, 1059, 1063, 1065, 1068, 1071, 1073, 1074, 1078, 1098, 1102, 1103, 1105, 1107, 1112, 1114, 1115, 1117, 1121, 1126, 1127, 1129, 1130, 1131, 1135, 1136, 1137, 1138, 1139, 1140, 1148, 1151, 1154, 1155, 1156, 1157, 1172, 1180, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1215, 1217, 1218, 1220, 1237, 1239, 1243, 1254, 1258, 1269, 1270, 1272, 1275, 1277, 1278, 1279, 1280, 1284, 1285, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1317, 1319, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1341, 1342, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1376, 1381, 1382, 1385, 1386, 1387, 1388, 1389, 1390, 1395, 1396, 1399, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1415, 1418, 1420, 1421, 1422, 1423, 1424, 1428, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1456, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1477, 1478, 1480, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1513, 1517, 1520, 1521, 1526, 1527, 1531, 1532, 1533, 1534, 1537, 1540, 1541, 1543, 1548, 1552, 1553, 1554, 1558, 1559, 1563, 1564, 1566, 1569, 1570, 1571, 1572, 1573, 1574, 1578, 1579, 1580, 1581, 1582, 1584, 1586, 1588, 1589, 1590, 1591, 1596, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1635, 1636, 1642, 1643, 1645, 1646, 1655, 1656, 1657, 1659, 1664, 1704, 1705, 1708, 1709, 1716, 1717, 1719, 1730, 1733, 1734, 1738, 1740, 1742, 1760, 1763, 1765, 1777, 1778, 1780, 1781, 1785, 1792, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1807, 1808, 1812, 1823, 1825, 1826, 1830, 1831, 1832, 1834, 1836, 1837, 1838, 1839, 1840, 1842, 1844, 1845, 1846, 1848, 1854, 1855, 1856, 1859, 1862, 1869, 1871, 1878, 1886, 1889, 1892, 1893, 1896, 1899, 1905, 1907, 1912, 1914, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1945, 1948, 1957], "lazili": [3, 17, 26, 971, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1600, 1868, 1896, 1954], "threadpool": 3, "comparison": [3, 22, 24, 45, 56, 1195, 1211, 1212, 1429, 1664, 1872, 1896, 1934, 1937, 1943], "appl": [3, 1882], "focu": [3, 46, 1695, 1949], "replic": [3, 21, 29, 48, 76, 1148, 1206, 1357, 1358, 1359, 1366, 1376, 1405, 1406, 1407, 1453, 1454, 1455, 1480, 1566, 1593, 1916], "particularli": [3, 21, 22, 43, 1365, 1366, 1436, 1868, 1894, 1944, 1954], "variat": [3, 30, 1871, 1896, 1914, 1919, 1956], "confound": 3, "quantifi": [3, 1478], "nois": [3, 1869, 1906, 1956], "median": [3, 30, 163, 1325, 1848, 1869, 1884, 1913], "robust": [3, 1268, 1883, 1902], "deviat": [3, 30, 48, 367, 1341, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1401, 1468, 1657, 1770, 1775, 1807, 1808, 1889, 1946], "merg": [3, 6, 7, 9, 21, 24, 26, 42, 1430, 1435, 1439], "repeat": [3, 30, 45, 53, 483, 960, 1068, 1259, 1285, 1425, 1426, 1427, 1500, 1501, 1701, 1733, 1793, 1813, 1814, 1830, 1869, 1871, 1894, 1913, 1917, 1920, 1927, 1951], "autorang": 3, "exact": [3, 14, 21, 32, 43, 46, 75, 329, 730, 731, 732, 784, 863, 864, 865, 897, 898, 941, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1296, 1361, 1399, 1476, 1539, 1578, 1609, 1696, 1786, 1889, 1895, 1904, 1927, 1945, 1946, 1953, 1956, 1957], "discuss": [3, 5, 8, 9, 10, 30, 45, 56, 1390, 1539, 1878, 1891, 1896, 1902, 1906, 1923, 1925, 1927, 1943], "docstr": [3, 14, 45, 56, 850, 851, 1195, 1429, 1866, 1894], "adapt": [3, 755, 756, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1367, 1487, 1488, 1489, 1490, 1491, 1492, 1666, 1667, 1678, 1680, 1687, 1894, 1910, 1944], "field": [3, 7, 24, 28, 32, 34, 38, 39, 46, 48, 56, 477, 815, 882, 1193, 1195, 1337, 1345, 1346, 1363, 1365, 1389, 1395, 1396, 1420, 1421, 1429, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1493, 1500, 1501, 1511, 1528, 1540, 1563, 1571, 1642, 1676, 1682, 1881, 1891, 1895, 1904, 1912, 1923, 1924, 1932, 1949, 1955, 1956], "displai": [3, 18, 1013, 1026, 1539, 1597, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1866, 1872, 1877, 1880, 1912, 1932, 1934, 1946, 1956], "instruct": [3, 4, 11, 14, 43, 55, 1755, 1868, 1871, 1894, 1905, 1912, 1918, 1934, 1940, 1945, 1949, 1956], "count": [3, 21, 30, 38, 56, 912, 959, 1007, 1121, 1156, 1157, 1193, 1233, 1234, 1642, 1845, 1846, 1869, 1881, 1894, 1913, 1917, 1923, 1925, 1927, 1949], "wall": [3, 1950], "callgrind": 3, "analog": [3, 45, 56, 683, 1051, 1089, 1091, 1170, 1245, 1399, 1681, 1813, 1830, 1886, 1902, 1944, 1949], "constructor": [3, 14, 21, 22, 28, 45, 48, 56, 57, 65, 813, 850, 851, 1337, 1434, 1439, 1440, 1457, 1482, 1483, 1609, 1649, 1788, 1867, 1868, 1871, 1872, 1894, 1895, 1902, 1923, 1927, 1929, 1930, 1933, 1959], "snippet": [3, 42, 1866, 1902, 1907, 1948, 1949], "loop": [3, 22, 43, 45, 46, 49, 53, 54, 56, 57, 62, 851, 852, 896, 1014, 1017, 1019, 1130, 1136, 1211, 1609, 1619, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1859, 1868, 1869, 1871, 1881, 1893, 1894, 1898, 1899, 1902, 1905, 1909, 1912, 1914, 1917, 1918, 1932, 1941, 1945, 1949, 1955], "callabl": [3, 5, 12, 21, 22, 24, 28, 30, 32, 34, 39, 41, 43, 45, 46, 48, 55, 56, 109, 388, 830, 941, 943, 952, 1011, 1012, 1014, 1125, 1126, 1127, 1132, 1135, 1136, 1195, 1198, 1201, 1207, 1211, 1267, 1268, 1429, 1472, 1474, 1476, 1478, 1603, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1689, 1692, 1859, 1866, 1868, 1870, 1871, 1872, 1881, 1894, 1896, 1902, 1907, 1910, 1912, 1915, 1916, 1917, 1923, 1934, 1936, 1937, 1942, 1943, 1947, 1949, 1955, 1957], "present": [3, 9, 21, 24, 41, 46, 48, 1193, 1285, 1337, 1399, 1439, 1642, 1662, 1809, 1866, 1880, 1883, 1884, 1885, 1890, 1891, 1894, 1896, 1899, 1902, 1907, 1912, 1915, 1924, 1927, 1930, 1947, 1952, 1958], "default_tim": 3, "summar": [3, 4, 42, 1760, 1871, 1886, 1927, 1943, 1949, 1956], "relu": [3, 22, 45, 53, 54, 56, 689, 690, 694, 695, 696, 697, 698, 699, 700, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 754, 781, 782, 803, 843, 849, 1011, 1126, 1136, 1201, 1207, 1429, 1444, 1446, 1457, 1465, 1472, 1474, 1476, 1575, 1576, 1600, 1663, 1859, 1868, 1869, 1879, 1885, 1886, 1889, 1891, 1902, 1907, 1912, 1913, 1918, 1920, 1921, 1942, 1948, 1951, 1954, 1955, 1956], "readabl": [3, 13, 21, 39, 45, 56, 1013, 1026, 1827, 1912, 1914, 1943, 1956, 1957], "supplement": 3, "disambigu": [3, 39, 56, 1273, 1956], "ident": [3, 14, 21, 24, 30, 56, 777, 803, 897, 898, 1056, 1233, 1234, 1235, 1236, 1249, 1261, 1264, 1268, 1285, 1324, 1325, 1341, 1367, 1568, 1616, 1618, 1856, 1862, 1872, 1889, 1905, 1906, 1915, 1920, 1927, 1945, 1956], "easi": [3, 21, 26, 41, 45, 1868, 1891, 1898, 1901, 1902, 1904, 1915, 1918, 1923, 1924, 1927, 1942, 1943, 1946, 1948, 1949, 1954], "differenti": [3, 30, 49, 54, 140, 342, 578, 791, 878, 880, 882, 884, 885, 887, 890, 891, 892, 893, 894, 895, 896, 897, 898, 938, 1014, 1129, 1130, 1131, 1135, 1210, 1242, 1243, 1254, 1285, 1351, 1352, 1372, 1530, 1564, 1609, 1621, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1848, 1867, 1878, 1896, 1898, 1899, 1912, 1914, 1923, 1933], "distinguish": [3, 1918, 1927], "princip": [3, 1242, 1701], "signal": [3, 11, 26, 32, 41, 43, 727, 728, 729, 755, 756, 771, 772, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1192, 1258, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1357, 1358, 1359, 1377, 1378, 1397, 1398, 1417, 1422, 1423, 1424, 1482, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1503, 1506, 1523, 1524, 1546, 1549, 1550, 1552, 1553, 1554, 1809, 1867, 1883, 1904, 1917, 1923], "form": [3, 7, 9, 11, 21, 24, 30, 40, 41, 42, 45, 46, 48, 53, 56, 749, 768, 774, 932, 1056, 1096, 1098, 1195, 1235, 1238, 1243, 1254, 1259, 1335, 1336, 1339, 1340, 1352, 1377, 1378, 1381, 1399, 1429, 1444, 1480, 1481, 1512, 1523, 1524, 1527, 1539, 1566, 1597, 1621, 1681, 1699, 1829, 1866, 1868, 1872, 1886, 1891, 1896, 1902, 1910, 1912, 1915, 1918, 1927, 1932, 1943, 1948, 1955], "treat": [3, 30, 40, 51, 56, 57, 62, 63, 311, 460, 782, 897, 898, 1011, 1124, 1195, 1248, 1251, 1253, 1265, 1267, 1277, 1278, 1279, 1280, 1297, 1327, 1373, 1383, 1401, 1433, 1434, 1435, 1436, 1439, 1457, 1462, 1520, 1609, 1651, 1655, 1687, 1740, 1755, 1809, 1823, 1824, 1830, 1845, 1870, 1871, 1884, 1891, 1910, 1912, 1923, 1927, 1930, 1937, 1947, 1952, 1955], "distinct": [3, 70, 1124, 1231, 1232, 1276, 1871, 1896, 1907, 1912, 1923, 1924, 1944], "workload": [3, 8, 21, 24, 48, 1014, 1894, 1901, 1905, 1923, 1940, 1954], "good": [3, 7, 8, 14, 56, 941, 1128, 1437, 1776, 1866, 1875, 1883, 1894, 1896, 1901, 1902, 1904, 1912, 1915, 1916, 1918, 1943, 1944, 1945, 1949, 1953], "intrins": [3, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 781, 782, 1919, 1920], "contrast": [3, 30, 32, 45, 749, 1381, 1681, 1889, 1891, 1897, 1927, 1951], "blocked_autorang": 3, "callback": [3, 22, 41, 43, 55, 56, 1609, 1881, 1896, 1901, 1917, 1923], "min_run_tim": 3, "minimum": [3, 14, 22, 32, 41, 42, 45, 685, 686, 760, 784, 809, 810, 811, 814, 815, 864, 912, 1048, 1115, 1155, 1156, 1157, 1298, 1352, 1388, 1478, 1685, 1686, 1693, 1776, 1795, 1796, 1797, 1798, 1799, 1800, 1869, 1889, 1891, 1899, 1913, 1921, 1930, 1951], "At": [3, 5, 6, 7, 15, 21, 1102, 1347, 1348, 1349, 1357, 1358, 1359, 1360, 1361, 1362, 1397, 1398, 1849, 1879, 1886, 1893, 1899, 1918, 1923, 1928, 1943, 1946, 1949, 1956], "high": [3, 4, 7, 8, 9, 10, 15, 22, 24, 30, 32, 38, 40, 42, 56, 109, 1352, 1475, 1722, 1723, 1755, 1869, 1881, 1883, 1896, 1899, 1900, 1902, 1903, 1904, 1914, 1918, 1919, 1923, 1927, 1932, 1933, 1934, 1937, 1940, 1941, 1949, 1951, 1956], "pseudo": [3, 78], "total_tim": 3, "block_siz": 3, "choic": [3, 8, 9, 24, 1211, 1259, 1430, 1439, 1718, 1893, 1912, 1921, 1927, 1944, 1956], "block": [3, 7, 8, 21, 24, 28, 41, 43, 48, 55, 56, 572, 573, 574, 920, 971, 1025, 1216, 1268, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1405, 1406, 1407, 1408, 1409, 1410, 1432, 1480, 1522, 1596, 1609, 1795, 1796, 1797, 1868, 1870, 1871, 1881, 1883, 1887, 1891, 1894, 1895, 1899, 1912, 1918, 1923, 1927, 1938, 1954, 1958], "qualiti": [3, 7, 22], "balanc": [3, 941], "compet": [3, 1904], "statist": [3, 22, 24, 30, 788, 789, 809, 810, 811, 813, 814, 980, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1045, 1046, 1273, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1468, 1881, 1891, 1898, 1914, 1916, 1918, 1921, 1946, 1956], "amort": 3, "invoc": [3, 5, 56, 830, 941, 1198, 1211, 1868, 1871, 1894, 1896, 1901, 1912, 1923, 1925, 1941, 1949, 1954], "less": [3, 6, 7, 14, 21, 22, 24, 30, 32, 43, 45, 48, 354, 669, 890, 892, 897, 898, 960, 1021, 1038, 1068, 1112, 1116, 1121, 1124, 1220, 1232, 1268, 1284, 1285, 1337, 1390, 1443, 1460, 1466, 1645, 1731, 1838, 1840, 1866, 1869, 1871, 1886, 1894, 1896, 1904, 1905, 1913, 1916, 1918, 1946], "bias": [3, 22, 723, 749, 783, 1347, 1348, 1349, 1381, 1382, 1384, 1392, 1393, 1394, 1399, 1400, 1401, 1444, 1446, 1468], "trivial": [3, 32, 34, 724, 931, 1616, 1798, 1912, 1925, 1945], "low": [3, 7, 18, 22, 30, 48, 488, 893, 1140, 1352, 1701, 1718, 1722, 1723, 1740, 1814, 1869, 1881, 1883, 1894, 1904, 1917, 1934, 1950, 1951, 1957], "digit": [3, 925, 1760, 1866, 1880, 1901, 1905], "microsecond": [3, 1894], "bia": [3, 9, 24, 45, 57, 701, 702, 703, 704, 705, 706, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 738, 740, 741, 742, 743, 745, 749, 750, 753, 754, 761, 762, 763, 770, 781, 1134, 1195, 1205, 1337, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1381, 1382, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1429, 1435, 1444, 1445, 1446, 1472, 1474, 1476, 1498, 1499, 1503, 1504, 1505, 1506, 1507, 1508, 1529, 1538, 1542, 1545, 1600, 1609, 1616, 1617, 1631, 1633, 1635, 1650, 1653, 1715, 1869, 1879, 1896, 1902, 1907, 1910, 1918, 1920, 1927, 1932, 1951], "period": [3, 9, 28, 41, 910, 919, 980, 1013, 1026, 1027, 1031, 1045, 1046, 1088, 1152, 1153, 1215, 1697, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1869, 1881, 1904], "until": [3, 5, 7, 21, 22, 24, 28, 32, 41, 48, 55, 56, 475, 971, 972, 974, 1005, 1121, 1216, 1268, 1307, 1310, 1311, 1528, 1600, 1609, 1684, 1690, 1830, 1883, 1889, 1894, 1898, 1907, 1910, 1912, 1917, 1923, 1925, 1946], "overal": [3, 9, 21, 24, 41, 897, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1475, 1891, 1893, 1894, 1904, 1918, 1919, 1950], "main": [3, 7, 21, 22, 24, 25, 30, 32, 33, 34, 39, 41, 42, 43, 44, 45, 56, 250, 485, 941, 1055, 1056, 1057, 1058, 1059, 1258, 1530, 1793, 1837, 1838, 1839, 1840, 1866, 1868, 1881, 1883, 1885, 1886, 1890, 1891, 1894, 1895, 1896, 1897, 1902, 1904, 1908, 1909, 1910, 1918, 1923, 1924, 1932, 1933, 1938, 1942, 1946, 1949, 1955], "repetit": [3, 1733, 1830], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1867], "modulo": [3, 30, 1116, 1731], "determin": [3, 5, 8, 11, 14, 17, 18, 20, 21, 22, 24, 30, 32, 39, 41, 45, 48, 53, 56, 75, 76, 77, 812, 815, 890, 892, 897, 898, 910, 919, 926, 931, 1015, 1070, 1089, 1099, 1123, 1124, 1152, 1153, 1156, 1157, 1209, 1229, 1241, 1252, 1255, 1276, 1290, 1373, 1377, 1378, 1399, 1435, 1438, 1444, 1520, 1523, 1524, 1539, 1572, 1597, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1651, 1661, 1693, 1721, 1723, 1725, 1752, 1795, 1796, 1797, 1798, 1799, 1800, 1809, 1865, 1871, 1872, 1885, 1894, 1895, 1896, 1902, 1910, 1912, 1915, 1918, 1923, 1925, 1927, 1929, 1930, 1932, 1934, 1944, 1945, 1946, 1955, 1956], "itself": [3, 5, 7, 8, 24, 25, 45, 48, 54, 56, 477, 682, 688, 868, 960, 1129, 1130, 1195, 1207, 1211, 1429, 1462, 1584, 1609, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1787, 1868, 1883, 1896, 1902, 1904, 1906, 1909, 1912, 1915, 1923, 1927, 1931, 1942, 1945, 1949, 1956], "jitter": 3, "interpret": [3, 21, 24, 28, 30, 32, 41, 43, 46, 768, 774, 869, 896, 1024, 1089, 1090, 1091, 1096, 1098, 1099, 1100, 1101, 1121, 1145, 1157, 1195, 1200, 1207, 1211, 1248, 1268, 1369, 1528, 1539, 1540, 1597, 1752, 1758, 1866, 1870, 1871, 1883, 1893, 1894, 1912, 1927, 1929, 1931, 1943, 1949], "ideal": [3, 40, 42, 48, 1211, 1682, 1885, 1946], "analysi": [3, 22, 30, 56, 1215, 1701, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1872, 1902, 1909, 1910, 1937, 1942, 1943, 1945, 1950], "valgrind": 3, "degrad": [3, 14, 48, 1893, 1895, 1896, 1927], "amelior": 3, "suffici": [3, 14, 22, 30, 33, 41, 46, 48, 1668, 1669, 1866, 1927, 1930, 1946], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 56, 768, 774, 925, 1148, 1354, 1355, 1356, 1450, 1451, 1452, 1453, 1454, 1455, 1481, 1484, 1485, 1486, 1539, 1597, 1687, 1693, 1869, 1895, 1915, 1916, 1923, 1946], "caller": [3, 32, 41, 56, 843, 1195, 1429, 1476, 1605, 1606, 1798, 1891, 1894, 1923, 1925], "structur": [3, 5, 9, 12, 21, 22, 24, 31, 32, 34, 42, 45, 46, 48, 56, 57, 58, 62, 65, 881, 952, 1119, 1131, 1136, 1211, 1429, 1628, 1632, 1664, 1701, 1814, 1859, 1867, 1870, 1872, 1878, 1881, 1886, 1894, 1895, 1896, 1897, 1904, 1907, 1908, 1910, 1912, 1914, 1915, 1923, 1932, 1933, 1934, 1935, 1937, 1943, 1944, 1946, 1947, 1952, 1958], "restrict": [3, 8, 12, 21, 30, 46, 48, 53, 54, 952, 1267, 1290, 1365, 1870, 1871, 1872, 1885, 1886, 1891, 1894, 1899, 1916, 1918, 1944], "builtin": [3, 24, 56, 57, 65, 1208, 1267, 1727, 1868, 1870, 1872, 1923, 1925, 1946, 1956], "surpris": [3, 8, 48, 1866, 1899, 1905, 1945], "serial": [3, 15, 21, 24, 26, 28, 41, 1195, 1205, 1206, 1267, 1429, 1600, 1743, 1866, 1867, 1869, 1880, 1885, 1891, 1894, 1901, 1902, 1904, 1910, 1915, 1918, 1923, 1924], "subsequ": [3, 7, 14, 15, 24, 45, 48, 56, 941, 972, 1195, 1207, 1211, 1357, 1358, 1359, 1360, 1361, 1362, 1429, 1457, 1605, 1606, 1894, 1906, 1912, 1923, 1927, 1941, 1946, 1949], "deseri": [3, 26, 1267, 1600, 1866, 1880, 1907, 1923], "globalsbridg": 3, "care": [3, 7, 14, 24, 30, 55, 56, 943, 1089, 1091, 1429, 1883, 1893, 1894, 1895, 1896, 1898, 1902, 1904, 1907, 1912, 1923, 1927, 1941, 1945, 1946, 1947], "reli": [3, 9, 14, 21, 22, 32, 34, 48, 56, 140, 882, 897, 943, 1068, 1366, 1682, 1891, 1893, 1895, 1896, 1906, 1907, 1927, 1931, 1945, 1946, 1947, 1950], "pickl": [3, 21, 22, 24, 1195, 1267, 1429, 1743, 1866, 1880, 1883, 1907, 1915, 1923, 1958], "transfer": [3, 21, 24, 48, 1879, 1883, 1894, 1900, 1902, 1915, 1923], "properli": [3, 7, 21, 22, 26, 28, 32, 41, 55, 1089, 1090, 1091, 1099, 1100, 1101, 1297, 1430, 1431, 1439, 1440, 1609, 1849, 1866, 1878, 1896, 1899, 1902, 1904, 1907, 1923, 1924, 1930], "profil": [3, 4, 38, 56, 941, 1209, 1603, 1604, 1605, 1606, 1760, 1867, 1913, 1923, 1938, 1946], "drive": [3, 9, 24, 1891, 1949], "facil": [3, 1267, 1883], "analyz": [3, 4, 18, 56, 1895, 1896, 1905, 1956], "manipul": [3, 48, 55, 1199, 1867, 1890, 1898, 1902, 1916, 1921, 1955], "1000000": [3, 1665], "mirror": [3, 129], "semant": [3, 9, 17, 24, 41, 42, 45, 46, 48, 56, 140, 783, 863, 864, 865, 882, 896, 923, 974, 1025, 1125, 1136, 1199, 1206, 1265, 1346, 1501, 1572, 1682, 1846, 1859, 1867, 1870, 1871, 1875, 1878, 1886, 1897, 1902, 1912, 1923, 1927, 1946], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 22, 1868], "consum": [3, 21, 26, 31, 43, 46, 55, 424, 1068, 1883, 1894, 1904, 1909, 1910, 1912, 1932, 1949], "extrapol": 3, "sinc": [3, 7, 21, 22, 24, 29, 30, 34, 43, 45, 48, 56, 305, 477, 523, 736, 774, 782, 797, 798, 931, 943, 1017, 1019, 1021, 1068, 1108, 1109, 1110, 1124, 1192, 1195, 1200, 1206, 1209, 1285, 1345, 1372, 1425, 1426, 1427, 1429, 1481, 1493, 1528, 1530, 1597, 1600, 1603, 1632, 1651, 1656, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1685, 1686, 1687, 1693, 1809, 1868, 1869, 1870, 1871, 1877, 1879, 1881, 1886, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1907, 1908, 1909, 1912, 1913, 1915, 1916, 1917, 1918, 1922, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1933, 1934, 1941, 1946, 1949, 1952, 1955, 1956], "properti": [3, 21, 24, 25, 26, 30, 33, 38, 41, 45, 46, 48, 56, 781, 869, 901, 907, 998, 1084, 1085, 1087, 1089, 1090, 1091, 1099, 1100, 1101, 1195, 1341, 1429, 1462, 1584, 1600, 1610, 1611, 1612, 1642, 1867, 1871, 1875, 1881, 1891, 1894, 1896, 1899, 1910, 1914, 1917, 1923, 1927, 1929, 1930, 1933, 1935, 1943, 1944, 1945, 1957, 1959], "significant_figur": 3, "figur": [3, 7, 8, 26, 56, 1893, 1895, 1896, 1912, 1916, 1925, 1932, 1937, 1946], "intend": [3, 41, 45, 56, 879, 888, 976, 1215, 1493, 1603, 1604, 1605, 1606, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1871, 1886, 1889, 1891, 1902, 1915], "interquartil": 3, "mitig": [3, 57], "tail": [3, 21, 39], "645": 3, "conjunct": [3, 21, 24, 28, 48, 813, 1493, 1528, 1609, 1921, 1923], "trim_sigfig": 3, "human": [3, 13, 39, 45, 1013, 1026, 1889, 1912, 1943, 1957], "raw": [3, 56, 1121, 1254, 1894, 1915], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 15, 21, 24, 26, 29, 30, 32, 39, 46, 48, 55, 56, 485, 669, 749, 897, 1085, 1087, 1090, 1091, 1093, 1094, 1097, 1098, 1100, 1101, 1103, 1105, 1211, 1285, 1347, 1348, 1349, 1366, 1369, 1381, 1392, 1393, 1394, 1411, 1412, 1413, 1414, 1439, 1468, 1474, 1476, 1609, 1804, 1871, 1875, 1879, 1883, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1902, 1905, 1912, 1914, 1916, 1918, 1919, 1923, 1925, 1942, 1944, 1945, 1949, 1953, 1955], "functioncount": [3, 1867], "stat": [3, 51, 815, 825, 826, 1025, 1032, 1033, 1034, 1468, 1609, 1881, 1894, 1936, 1946, 1956], "as_standard": 3, "strip": [3, 1530, 1609, 1868, 1913, 1927], "prefix": [3, 24, 26, 41, 48, 737, 746, 1195, 1429, 1609, 1866, 1877, 1891, 1912, 1915, 1936], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 15, 18, 24, 29, 30, 56, 669, 897, 1088, 1089, 1091, 1099, 1100, 1101, 1235, 1472, 1473, 1474, 1475, 1476, 1600, 1701, 1809, 1857, 1858, 1872, 1877, 1891, 1895, 1896, 1901, 1902, 1910, 1916, 1927, 1942, 1947, 1949, 1956], "locat": [3, 9, 14, 24, 30, 38, 77, 140, 144, 244, 502, 669, 923, 925, 983, 1047, 1048, 1217, 1267, 1293, 1298, 1301, 1319, 1366, 1376, 1463, 1480, 1493, 1528, 1593, 1596, 1609, 1621, 1712, 1747, 1769, 1791, 1794, 1848, 1866, 1868, 1880, 1894, 1907, 1912, 1915, 1917, 1923, 1925, 1927, 1932, 1936, 1941, 1945], "resembl": [3, 15], "23234231": 3, "first_build_dir": 3, "foo": [3, 14, 24, 38, 39, 45, 55, 56, 57, 64, 65, 813, 843, 848, 941, 1124, 1125, 1134, 1193, 1198, 1203, 1206, 1207, 1210, 1211, 1651, 1849, 1851, 1866, 1868, 1870, 1871, 1875, 1896, 1902, 1912, 1915, 1934, 1941], "9823794": 3, "bar": [3, 7, 38, 45, 56, 57, 64, 65, 843, 848, 960, 1124, 1198, 1206, 1807, 1808, 1854, 1855, 1866, 1868, 1870, 1880, 1902, 1912, 1915, 1934, 1949], "53453": 3, "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1192], "site": [3, 7], "denois": 3, "explan": [3, 9, 34, 851, 1195, 1429, 1867, 1895, 1896, 1902, 1946, 1953, 1956], "delta": [3, 30, 749, 960, 1381, 1390, 1399, 1460, 1537, 1666, 1807, 1808, 1834, 1854, 1855, 1869, 1889], "inclus": [3, 30, 45, 78, 502, 1155, 1157, 1266, 1282, 1288, 1722, 1723, 1806, 1922, 1934], "diff": [3, 7, 1868, 1869, 1913], "One": [3, 8, 14, 24, 26, 29, 46, 48, 51, 53, 56, 572, 920, 1125, 1136, 1186, 1481, 1565, 1616, 1619, 1682, 1687, 1695, 1722, 1723, 1844, 1859, 1868, 1870, 1871, 1885, 1886, 1892, 1893, 1894, 1896, 1901, 1916, 1925, 1932, 1942, 1943, 1944, 1945, 1954], "unit": [3, 11, 14, 30, 32, 42, 48, 56, 749, 750, 1086, 1104, 1341, 1351, 1371, 1374, 1379, 1380, 1381, 1382, 1447, 1448, 1458, 1493, 1517, 1521, 1526, 1527, 1573, 1581, 1625, 1626, 1630, 1633, 1635, 1638, 1836, 1882, 1891, 1893, 1899, 1915, 1940, 1941], "logic": [3, 5, 12, 14, 21, 44, 48, 56, 913, 915, 916, 918, 1085, 1087, 1090, 1091, 1093, 1094, 1097, 1098, 1100, 1101, 1103, 1105, 1125, 1199, 1277, 1278, 1279, 1280, 1290, 1435, 1609, 1710, 1737, 1821, 1871, 1872, 1894, 1895, 1896, 1897, 1899, 1918, 1949], "question": [3, 10, 21, 56, 1653, 1867, 1891, 1938, 1944, 1945], "why": [3, 7, 21, 53, 56, 1068, 1199, 1578, 1867, 1878, 1897, 1944, 1945, 1954, 1958], "involv": [3, 5, 7, 9, 11, 21, 24, 45, 48, 51, 53, 56, 70, 1609, 1755, 1871, 1884, 1886, 1891, 1894, 1895, 1898, 1902, 1912, 1918, 1923, 1924, 1925, 1927, 1944, 1945], "look": [3, 4, 7, 8, 9, 12, 15, 24, 30, 40, 41, 45, 46, 50, 53, 56, 57, 66, 67, 851, 890, 892, 952, 1195, 1290, 1337, 1429, 1519, 1634, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1795, 1796, 1797, 1799, 1800, 1868, 1870, 1884, 1890, 1891, 1894, 1897, 1901, 1902, 1904, 1908, 1912, 1915, 1918, 1923, 1924, 1937, 1941, 1942, 1944, 1946, 1947, 1948, 1949, 1950, 1953, 1955, 1956, 1958], "autom": [3, 8, 56, 1868, 1918, 1946, 1956], "easili": [3, 7, 8, 11, 22, 24, 1125, 1436, 1528, 1566, 1682, 1740, 1849, 1896, 1897, 1899, 1902, 1907, 1914, 1922, 1923, 1925, 1932, 1955, 1956], "exclus": [3, 21, 24, 30, 32, 41, 45, 56, 724, 1157, 1609, 1722, 1723, 1726, 1891, 1934], "basi": [3, 9, 10, 30, 1268, 1687, 1894, 1901, 1918, 1923], "thought": [3, 38, 56, 1086, 1088, 1104], "path_and_function_nam": 3, "children": [3, 34, 48, 56, 780, 1195, 1429, 1883, 1902, 1915, 1925], "identifi": [3, 7, 9, 24, 32, 35, 38, 41, 42, 43, 56, 806, 1157, 1267, 1468, 1872, 1883, 1892, 1901, 1902, 1915, 1923, 1924, 1925, 1932, 1944, 1949, 1954], "hot": [3, 30, 1530, 1565, 1899, 1949], "spot": 3, "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 303, 553, 854, 1121, 1530, 1795, 1796, 1797, 1799, 1800, 1810, 1869, 1886, 1913, 1927], "index": [3, 15, 21, 22, 26, 30, 39, 45, 56, 181, 198, 271, 302, 303, 304, 305, 306, 307, 309, 311, 312, 460, 461, 501, 502, 503, 504, 505, 506, 507, 508, 684, 685, 806, 843, 866, 881, 925, 987, 990, 1047, 1048, 1088, 1128, 1129, 1130, 1134, 1136, 1137, 1166, 1167, 1168, 1169, 1193, 1212, 1217, 1225, 1243, 1261, 1275, 1283, 1285, 1289, 1293, 1296, 1297, 1298, 1301, 1319, 1325, 1328, 1329, 1337, 1352, 1365, 1372, 1373, 1430, 1431, 1436, 1439, 1440, 1478, 1480, 1519, 1520, 1565, 1627, 1629, 1636, 1637, 1642, 1655, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1696, 1697, 1712, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1781, 1792, 1793, 1795, 1796, 1797, 1799, 1800, 1809, 1823, 1844, 1845, 1847, 1848, 1851, 1859, 1867, 1868, 1869, 1871, 1878, 1883, 1884, 1885, 1886, 1891, 1894, 1895, 1897, 1900, 1906, 1913, 1925, 1927, 1930, 1931, 1932, 1933, 1934, 1945, 1946, 1951, 1956], "cpython": [3, 45, 56, 1938, 1943], "known": [3, 7, 9, 20, 24, 28, 35, 46, 49, 52, 54, 57, 66, 67, 1131, 1132, 1211, 1212, 1267, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1399, 1444, 1458, 1460, 1480, 1539, 1581, 1600, 1768, 1769, 1827, 1848, 1867, 1869, 1873, 1881, 1883, 1886, 1889, 1891, 1893, 1906, 1912, 1914, 1923, 1925, 1928, 1938, 1944, 1947, 1956], "quit": [3, 7, 56, 1871, 1896, 1898, 1915, 1923, 1954], "noisi": 3, "higher": [3, 7, 8, 22, 24, 48, 49, 54, 57, 62, 65, 140, 882, 883, 896, 974, 1014, 1025, 1060, 1126, 1132, 1136, 1155, 1172, 1326, 1365, 1421, 1436, 1578, 1712, 1814, 1859, 1867, 1894, 1896, 1897, 1899, 1901, 1907, 1918, 1919, 1923, 1930, 1944], "filter": [3, 533, 761, 762, 763, 1192, 1215, 1357, 1358, 1359, 1360, 1361, 1362, 1503, 1504, 1505, 1506, 1507, 1508, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1809, 1871, 1915, 1956], "rather": [3, 8, 9, 14, 24, 32, 34, 43, 45, 48, 56, 57, 65, 768, 774, 906, 931, 1193, 1196, 1267, 1329, 1493, 1528, 1539, 1597, 1617, 1755, 1760, 1868, 1871, 1885, 1886, 1892, 1894, 1896, 1897, 1912, 1915, 1918, 1923, 1927, 1932, 1941, 1942, 1945, 1946, 1947, 1948, 1949], "unicod": [3, 1872], "dictionari": [3, 14, 21, 22, 30, 52, 56, 669, 781, 782, 783, 786, 804, 805, 806, 827, 828, 829, 843, 847, 853, 941, 1025, 1124, 1134, 1195, 1196, 1203, 1207, 1211, 1212, 1267, 1268, 1372, 1373, 1429, 1430, 1439, 1519, 1632, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1870, 1872, 1896, 1902, 1910, 1912, 1914, 1923, 1932, 1936, 1957, 1958], "lookup": [3, 26, 30, 1372, 1519, 1868, 1872, 1893, 1924, 1949, 1950], "map": [3, 14, 24, 26, 30, 32, 38, 39, 41, 42, 45, 46, 48, 53, 54, 56, 57, 65, 70, 673, 724, 781, 782, 786, 788, 803, 804, 806, 828, 829, 843, 844, 845, 846, 847, 853, 874, 922, 1125, 1136, 1148, 1157, 1203, 1206, 1267, 1268, 1360, 1361, 1362, 1368, 1369, 1370, 1374, 1376, 1425, 1426, 1427, 1430, 1439, 1514, 1515, 1516, 1521, 1616, 1632, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1712, 1714, 1845, 1846, 1859, 1872, 1885, 1887, 1891, 1894, 1895, 1896, 1897, 1903, 1908, 1910, 1915, 1918, 1921, 1923, 1924, 1925, 1929, 1934, 1943, 1945, 1949, 1955, 1957], "agnost": [3, 16, 41, 961, 962, 963, 964, 965, 966, 967, 1528, 1885], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 14, 24, 25, 29, 30, 32, 33, 34, 38, 42, 45, 46, 48, 55, 56, 572, 576, 577, 606, 673, 682, 684, 685, 688, 749, 874, 897, 898, 928, 935, 939, 973, 983, 985, 1013, 1026, 1060, 1066, 1068, 1114, 1115, 1134, 1136, 1158, 1195, 1203, 1211, 1213, 1217, 1251, 1267, 1283, 1293, 1295, 1296, 1298, 1301, 1324, 1327, 1329, 1381, 1399, 1429, 1444, 1481, 1565, 1603, 1609, 1617, 1642, 1649, 1650, 1654, 1656, 1709, 1733, 1749, 1786, 1798, 1805, 1807, 1808, 1812, 1834, 1854, 1855, 1859, 1860, 1867, 1868, 1870, 1871, 1872, 1873, 1878, 1883, 1886, 1894, 1896, 1902, 1905, 1908, 1910, 1915, 1916, 1923, 1925, 1927, 1929, 1930, 1934, 1942, 1945, 1954, 1955, 1958], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 313, 318, 533, 603, 982, 1794, 1798, 1844, 1869, 1895, 1913, 1927, 1946, 1949], "finit": [4, 30, 897, 898, 1184, 1185, 1231, 1232, 1242, 1243, 1259, 1285, 1319, 1323, 1345, 1813, 1896, 1899, 1934], "natur": [4, 7, 8, 11, 24, 30, 48, 57, 59, 74, 897, 898, 1224, 1229, 1255, 1269, 1271, 1276, 1337, 1476, 1578, 1899, 1909, 1910, 1927, 1928], "against": [4, 5, 14, 24, 32, 41, 783, 854, 897, 898, 1096, 1097, 1098, 1102, 1103, 1105, 1137, 1186, 1195, 1211, 1212, 1429, 1435, 1663, 1866, 1871, 1915, 1937, 1953], "cprofil": 4, "mode": [4, 8, 21, 22, 24, 26, 30, 41, 43, 53, 54, 56, 69, 211, 212, 477, 735, 736, 761, 762, 763, 768, 774, 775, 776, 804, 806, 812, 815, 848, 849, 878, 880, 883, 884, 885, 890, 891, 892, 893, 897, 941, 969, 1002, 1042, 1043, 1072, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1125, 1128, 1129, 1130, 1131, 1134, 1135, 1143, 1170, 1178, 1179, 1193, 1195, 1196, 1199, 1211, 1213, 1254, 1267, 1297, 1310, 1311, 1347, 1348, 1349, 1357, 1358, 1359, 1373, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1429, 1445, 1468, 1481, 1482, 1503, 1504, 1505, 1520, 1528, 1539, 1566, 1597, 1598, 1599, 1610, 1617, 1621, 1654, 1687, 1695, 1711, 1754, 1756, 1757, 1848, 1867, 1869, 1879, 1884, 1889, 1894, 1895, 1897, 1898, 1902, 1909, 1910, 1913, 1917, 1919, 1920, 1921, 1923, 1935, 1943, 1945, 1946, 1947, 1948, 1951, 1956, 1957], "correct": [4, 6, 7, 22, 24, 25, 26, 30, 41, 45, 195, 196, 199, 211, 544, 569, 592, 593, 604, 886, 898, 960, 1089, 1091, 1099, 1100, 1101, 1169, 1193, 1196, 1211, 1212, 1231, 1366, 1383, 1395, 1600, 1609, 1642, 1759, 1807, 1808, 1854, 1855, 1868, 1869, 1870, 1884, 1885, 1894, 1896, 1899, 1929, 1951, 1955], "launch": [4, 14, 21, 27, 32, 33, 34, 39, 40, 41, 44, 55, 972, 1609, 1867, 1891, 1893, 1894, 1895, 1896, 1923, 1941, 1948], "spent": [4, 24, 907, 1693, 1893, 1902, 1946, 1954, 1956], "extrem": [4, 1609, 1891, 1912, 1945, 1949], "expens": [4, 21, 30, 48, 1616, 1894, 1899, 1901, 1917, 1923, 1933, 1944, 1946, 1950, 1953, 1956], "bound": [4, 15, 22, 24, 45, 48, 470, 784, 925, 936, 1082, 1083, 1195, 1342, 1343, 1344, 1422, 1423, 1424, 1429, 1447, 1528, 1695, 1726, 1747, 1871, 1872, 1889, 1891, 1915, 1918, 1928, 1944, 1945, 1956], "greater": [4, 24, 41, 57, 58, 282, 606, 669, 917, 930, 931, 936, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1139, 1151, 1250, 1314, 1345, 1477, 1528, 1539, 1565, 1578, 1597, 1617, 1650, 1848, 1869, 1891, 1894, 1906, 1913, 1927, 1928], "spend": [4, 7, 1268, 1950], "sens": [4, 30, 41, 56, 1632, 1845, 1846, 1871, 1891], "respons": [4, 7, 9, 24, 26, 28, 30, 32, 38, 43, 48, 55, 972, 1417, 1546, 1609, 1798, 1891, 1894, 1896, 1897, 1902, 1923, 1945], "Of": [4, 1655, 1866, 1895, 1896, 1946], "cours": [4, 56, 1866, 1895, 1896, 1923, 1946, 1949], "realiti": 4, "complic": [4, 22, 56, 782, 1755, 1875, 1885, 1892, 1915, 1923, 1925, 1945], "depend": [4, 5, 12, 14, 21, 24, 28, 30, 32, 41, 42, 43, 46, 48, 56, 305, 774, 867, 980, 1027, 1031, 1045, 1046, 1089, 1091, 1099, 1100, 1101, 1126, 1130, 1135, 1207, 1211, 1231, 1232, 1259, 1285, 1290, 1345, 1346, 1363, 1365, 1373, 1376, 1389, 1395, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1480, 1481, 1493, 1500, 1501, 1511, 1520, 1528, 1540, 1563, 1571, 1578, 1597, 1600, 1609, 1621, 1622, 1628, 1687, 1699, 1701, 1718, 1734, 1795, 1796, 1797, 1799, 1800, 1813, 1836, 1862, 1866, 1868, 1870, 1871, 1878, 1883, 1891, 1893, 1894, 1896, 1897, 1899, 1902, 1904, 1909, 1911, 1912, 1917, 1918, 1923, 1927, 1933, 1934, 1938, 1941, 1942, 1944, 1945, 1946, 1948, 1949, 1952, 1955, 1958], "could": [4, 5, 7, 8, 21, 24, 30, 32, 41, 48, 53, 55, 56, 572, 573, 574, 576, 577, 943, 1007, 1089, 1091, 1099, 1100, 1101, 1192, 1201, 1226, 1267, 1285, 1310, 1311, 1686, 1790, 1845, 1870, 1871, 1878, 1883, 1891, 1894, 1895, 1908, 1912, 1915, 1918, 1919, 1923, 1924, 1925, 1927, 1931, 1932, 1942, 1946, 1947, 1952, 1956], "account": [4, 39, 56, 1609, 1889, 1893, 1927, 1941], "heavili": [4, 1671, 1893, 1896, 1915], "similarli": [4, 7, 45, 55, 56, 749, 779, 783, 847, 932, 1088, 1195, 1251, 1429, 1476, 1605, 1606, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639, 1837, 1838, 1839, 1840, 1870, 1891, 1896, 1898, 1899, 1905, 1927, 1941, 1945, 1948], "platform": [4, 8, 9, 14, 24, 33, 34, 38, 1242, 1243, 1254, 1711, 1813, 1879, 1900, 1905, 1906, 1918], "startup": 4, "slower": [4, 14, 24, 865, 891, 1108, 1109, 1110, 1225, 1232, 1547, 1616, 1896, 1906, 1914, 1928, 1945], "rerun": [5, 24, 1894], "segment": [5, 1025, 1121, 1460, 1894, 1915, 1946, 1952, 1958], "persist": [5, 19, 26, 48, 749, 804, 805, 806, 1195, 1381, 1399, 1429, 1444, 1902, 1907, 1908, 1941, 1945, 1950], "rng": [5, 21, 1000, 1039, 1748, 1894, 1906, 1922], "advanc": [5, 15, 21, 22, 32, 1472, 1474, 1476, 1655, 1851, 1875, 1878, 1885, 1894, 1896, 1900, 1904, 1910, 1931, 1932, 1946], "juggl": 5, "dropout": [5, 56, 723, 724, 749, 1195, 1341, 1368, 1369, 1370, 1374, 1381, 1399, 1429, 1435, 1444, 1445, 1472, 1474, 1476, 1494, 1514, 1515, 1516, 1521, 1578, 1867, 1869, 1879, 1885, 1886, 1891, 1894, 1913, 1920], "moder": 5, "hit": [5, 8, 14, 1609, 1866, 1894, 1941, 1946, 1950, 1956], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1867], "omit": [5, 14, 24, 42, 1102, 1103, 1105, 1383, 1443, 1908, 1912, 1923, 1934, 1947], "exclud": [5, 9, 22, 41, 56, 947, 1157, 1373, 1520, 1568, 1663, 1755, 1837, 1838, 1839, 1840, 1891, 1900, 1915, 1924, 1943, 1946], "_infer_device_typ": 5, "consequ": [5, 53, 1259, 1399, 1813, 1871, 1891, 1894, 1904, 1906, 1909], "random": [5, 30, 32, 41, 42, 49, 56, 74, 78, 144, 749, 881, 911, 1000, 1001, 1006, 1015, 1016, 1035, 1036, 1039, 1040, 1129, 1136, 1147, 1171, 1268, 1288, 1308, 1309, 1313, 1315, 1341, 1352, 1374, 1381, 1399, 1447, 1521, 1571, 1576, 1600, 1617, 1623, 1629, 1630, 1637, 1638, 1657, 1701, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1748, 1761, 1814, 1851, 1859, 1866, 1867, 1869, 1877, 1889, 1897, 1899, 1905, 1912, 1913, 1932, 1946, 1956], "gradient": [5, 11, 21, 22, 24, 28, 29, 30, 48, 49, 52, 140, 211, 212, 280, 325, 476, 477, 484, 502, 684, 685, 869, 878, 880, 882, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 912, 938, 1072, 1124, 1125, 1126, 1127, 1131, 1136, 1137, 1170, 1195, 1231, 1232, 1235, 1242, 1243, 1259, 1268, 1285, 1287, 1293, 1296, 1298, 1345, 1352, 1360, 1361, 1362, 1365, 1366, 1372, 1373, 1383, 1397, 1398, 1429, 1436, 1460, 1511, 1512, 1519, 1520, 1530, 1539, 1547, 1549, 1550, 1563, 1597, 1598, 1599, 1605, 1606, 1609, 1610, 1613, 1614, 1616, 1621, 1654, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1686, 1699, 1757, 1794, 1813, 1859, 1867, 1868, 1869, 1878, 1885, 1886, 1889, 1894, 1895, 1896, 1898, 1899, 1902, 1905, 1913, 1914, 1923, 1924, 1927, 1946, 1954], "among": [5, 21, 22, 24, 28, 30, 41, 981, 982, 985, 1157, 1366, 1657, 1871, 1904, 1945], "detect": [5, 14, 17, 18, 21, 24, 25, 32, 34, 48, 890, 891, 892, 893, 894, 895, 941, 1125, 1199, 1472, 1473, 1475, 1609, 1848, 1867, 1883, 1886, 1894, 1899, 1905, 1912, 1915, 1923, 1944, 1946, 1952, 1956], "priorit": [5, 1128, 1129, 1131, 1668, 1669, 1927], "defaultdevicetyp": 5, "anticip": [5, 1958], "belong": [5, 24, 26, 28, 30, 38, 56, 925, 974, 1683, 1866, 1894, 1914, 1949, 1955, 1957], "use_reentr": [5, 1609], "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 56, 1367, 1623, 1834, 1887, 1902, 1909, 1910, 1914, 1916, 1918, 1940, 1949, 1956], "recomput": [5, 888, 1481, 1539, 1653, 1914, 1944], "refer": [5, 7, 14, 21, 22, 24, 25, 26, 28, 30, 33, 36, 37, 41, 42, 48, 49, 55, 69, 70, 71, 74, 76, 244, 723, 724, 745, 753, 781, 782, 783, 808, 809, 810, 813, 814, 815, 848, 862, 867, 882, 923, 1007, 1012, 1071, 1121, 1143, 1144, 1176, 1183, 1195, 1198, 1207, 1214, 1227, 1232, 1248, 1252, 1265, 1268, 1352, 1383, 1429, 1478, 1493, 1501, 1510, 1528, 1539, 1596, 1609, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1701, 1718, 1754, 1755, 1776, 1814, 1848, 1866, 1867, 1869, 1883, 1884, 1886, 1887, 1890, 1891, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1904, 1906, 1912, 1914, 1919, 1920, 1923, 1924, 1927, 1930, 1931, 1932, 1935, 1938, 1942, 1943, 1948, 1949, 1952, 1956], "potenti": [5, 8, 24, 41, 43, 48, 74, 181, 198, 1205, 1241, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1578, 1609, 1848, 1870, 1878, 1883, 1891, 1894, 1896, 1915, 1927, 1931, 1944, 1946, 1949], "silent": [5, 45, 1015, 1016, 1035, 1036, 1169, 1211, 1429, 1613, 1614, 1798, 1894, 1905, 1912], "consider": [5, 7, 71, 873, 1192, 1373, 1609, 1871, 1893], "limit": [5, 8, 9, 12, 21, 46, 48, 49, 54, 71, 952, 1038, 1125, 1209, 1314, 1352, 1372, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1578, 1609, 1632, 1760, 1867, 1871, 1875, 1883, 1885, 1886, 1891, 1894, 1895, 1902, 1905, 1906, 1907, 1909, 1915, 1918, 1921, 1923, 1924, 1927, 1934, 1944, 1945, 1949, 1953, 1956], "reentrant": [5, 1609], "stop": [5, 30, 32, 41, 42, 43, 46, 854, 1007, 1193, 1268, 1352, 1642, 1695, 1727, 1868, 1871, 1923, 1947], "soon": [5, 41, 45, 48, 782, 1891, 1918, 1923, 1925, 1946, 1949], "intermedi": [5, 12, 14, 31, 45, 46, 53, 56, 71, 922, 952, 1119, 1125, 1132, 1285, 1373, 1472, 1474, 1476, 1520, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1868, 1871, 1894, 1896, 1897, 1898, 1905, 1937, 1944, 1945], "set_checkpoint_early_stop": 5, "entireti": 5, "graph": [5, 8, 12, 24, 26, 30, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 129, 140, 211, 212, 669, 736, 781, 782, 804, 805, 806, 812, 815, 882, 888, 896, 941, 943, 969, 1004, 1009, 1014, 1125, 1195, 1198, 1199, 1205, 1207, 1211, 1609, 1663, 1665, 1668, 1669, 1672, 1867, 1871, 1877, 1879, 1887, 1890, 1895, 1896, 1899, 1902, 1903, 1909, 1910, 1912, 1915, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1932, 1937, 1938, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1953], "no_grad": [5, 477, 850, 1072, 1126, 1130, 1135, 1170, 1195, 1372, 1429, 1435, 1476, 1610, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1889, 1891, 1902, 1918, 1935], "condit": [5, 12, 19, 21, 45, 46, 53, 56, 57, 60, 64, 65, 606, 609, 613, 683, 749, 891, 897, 898, 952, 1192, 1211, 1225, 1227, 1232, 1235, 1241, 1242, 1243, 1254, 1259, 1381, 1399, 1444, 1476, 1644, 1649, 1836, 1862, 1868, 1869, 1870, 1872, 1886, 1891, 1896, 1905, 1916, 1932, 1943, 1944, 1945, 1951], "unmet": 5, "particip": [5, 9, 21, 24, 25, 28, 41, 42, 1609, 1924, 1944], "wherea": [5, 45, 1251, 1310, 1311, 1324, 1682, 1813, 1871, 1891, 1934, 1945], "know": [5, 7, 8, 14, 25, 31, 45, 56, 475, 886, 891, 1119, 1125, 1206, 1609, 1868, 1871, 1878, 1890, 1891, 1894, 1896, 1899, 1912, 1915, 1923, 1924, 1925, 1927, 1941, 1943, 1944, 1945, 1946, 1949], "lstm": [5, 752, 1400, 1445, 1869, 1894, 1912, 1913, 1918, 1920, 1921, 1932], "hidden": [5, 749, 1134, 1381, 1382, 1399, 1400, 1444, 1446, 1610, 1894, 1932], "correctli": [5, 21, 24, 41, 45, 48, 475, 1125, 1195, 1211, 1429, 1547, 1868, 1870, 1871, 1881, 1885, 1890, 1891, 1895, 1896, 1897, 1904, 1906, 1918, 1923], "entrant": 5, "futur": [5, 8, 9, 12, 22, 24, 26, 32, 41, 42, 45, 53, 56, 280, 311, 502, 506, 546, 669, 676, 782, 804, 805, 806, 815, 850, 888, 931, 932, 941, 952, 953, 954, 968, 969, 971, 972, 974, 1003, 1004, 1011, 1012, 1014, 1141, 1192, 1195, 1198, 1205, 1206, 1209, 1214, 1226, 1237, 1239, 1240, 1241, 1244, 1257, 1285, 1286, 1297, 1307, 1369, 1429, 1530, 1552, 1553, 1554, 1601, 1609, 1613, 1650, 1651, 1656, 1671, 1711, 1727, 1809, 1813, 1836, 1867, 1868, 1869, 1870, 1871, 1872, 1877, 1878, 1879, 1881, 1885, 1886, 1893, 1894, 1896, 1907, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1927, 1929, 1933, 1934, 1935, 1937, 1944, 1946, 1951, 1958], "turn": [5, 14, 21, 53, 56, 71, 669, 862, 941, 1183, 1211, 1473, 1475, 1795, 1796, 1797, 1798, 1799, 1800, 1878, 1891, 1894, 1905, 1906, 1912, 1917, 1918, 1924, 1927, 1944, 1945, 1948, 1949, 1954], "open": [5, 8, 9, 14, 21, 30, 41, 45, 49, 678, 904, 925, 1118, 1203, 1267, 1290, 1300, 1545, 1868, 1878, 1883, 1886, 1900, 1908, 1909, 1912, 1915, 1918, 1923, 1927, 1928, 1946, 1954, 1958], "ran": [5, 18, 48, 1946, 1952, 1956], "sequenti": [5, 21, 28, 45, 46, 48, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 782, 1136, 1195, 1205, 1375, 1429, 1468, 1479, 1618, 1632, 1696, 1859, 1868, 1883, 1886, 1894, 1902, 1912, 1914, 1916, 1918, 1937, 1946, 1954, 1956], "func": [5, 24, 29, 51, 53, 56, 57, 59, 851, 881, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 1170, 1198, 1211, 1212, 1651, 1851, 1859, 1867, 1871, 1890, 1923, 1925, 1957], "compris": [5, 42, 45], "chunk": [5, 21, 24, 26, 48, 928, 985, 1130, 1366, 1609, 1801, 1868, 1869, 1884, 1913, 1914, 1916, 1923, 1927, 1931], "input_var": [5, 1366], "person": [6, 7, 9], "land": [6, 9, 10, 1953], "six": [6, 70, 1359], "commit": [6, 7, 9, 14, 49, 1866, 1867, 1905, 1906, 1953], "repositori": [6, 9, 52, 56, 1866, 1904], "submit": [6, 9, 971, 972, 974, 1307, 1894, 1906, 1946, 1953], "month": [6, 9], "qualifi": [6, 24, 29, 38, 56, 669, 1195, 1429, 1877, 1910, 1915], "pr": [6, 7, 1701, 1814, 1937, 1946], "interest": [6, 7, 9, 71, 1891, 1897, 1899, 1902, 1909, 1943, 1945, 1950, 1954], "merge_rul": 6, "vote": [6, 9], "decis": [6, 26, 32, 41, 43, 45, 56, 1211, 1878, 1890, 1944], "criteria": [6, 9, 1268], "approv": [6, 9], "Not": [6, 42, 70, 1327, 1476, 1809, 1868, 1870, 1871, 1872, 1894, 1896, 1913, 1918, 1923, 1949], "busi": [6, 9, 1950], "dai": [6, 7, 1945, 1953], "contributor": [6, 7, 8, 9], "seen": [6, 12, 18, 30, 56, 211, 928, 941, 960, 1297, 1360, 1361, 1362, 1460, 1552, 1553, 1554, 1695, 1868, 1878, 1891, 1894, 1912, 1927, 1949], "thumb": [6, 24], "deprec": [7, 24, 32, 41, 42, 45, 48, 52, 396, 502, 546, 592, 774, 775, 776, 782, 815, 896, 897, 931, 932, 968, 1018, 1022, 1141, 1195, 1250, 1253, 1285, 1286, 1345, 1346, 1363, 1365, 1388, 1389, 1395, 1396, 1420, 1421, 1429, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1482, 1483, 1500, 1501, 1511, 1540, 1563, 1571, 1597, 1598, 1599, 1601, 1609, 1650, 1651, 1653, 1656, 1711, 1727, 1809, 1813, 1836, 1867, 1868, 1873, 1883, 1892, 1917, 1921, 1929, 1933, 1934, 1946], "wiki": [7, 9, 22, 1909, 1959], "acceler": [7, 22, 1347, 1348, 1349, 1468, 1665, 1900, 1938, 1941, 1946], "deep": [7, 9, 56, 1347, 1348, 1349, 1371, 1468, 1681, 1867, 1889, 1894, 1902, 1918, 1940, 1944, 1956], "neural": [7, 8, 15, 56, 1341, 1352, 1367, 1374, 1383, 1395, 1428, 1429, 1436, 1441, 1442, 1456, 1458, 1472, 1474, 1476, 1558, 1581, 1619, 1679, 1687, 1693, 1868, 1870, 1871, 1889, 1894, 1896, 1905, 1909, 1918, 1944], "tape": [7, 1941], "system": [7, 8, 14, 15, 17, 21, 42, 53, 56, 934, 948, 1148, 1203, 1227, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1256, 1257, 1258, 1262, 1267, 1286, 1314, 1472, 1474, 1476, 1609, 1619, 1621, 1756, 1836, 1872, 1877, 1881, 1891, 1893, 1894, 1901, 1902, 1904, 1908, 1915, 1923, 1944, 1954], "organ": [7, 1895, 1901, 1915, 1946, 1949], "govern": [7, 8, 1867, 1918], "technic": [7, 9, 41, 45, 48, 56, 1195, 1429, 1605, 1606, 1891, 1898, 1904, 1915, 1944], "md": [7, 56, 781, 1915], "healthi": [7, 32, 41], "team": [7, 24, 49, 74, 75, 77, 1907, 1916], "commun": [7, 8, 9, 25, 26, 28, 32, 41, 43, 48, 669, 1609, 1891, 1895, 1909, 1923, 1924, 1946], "project": [7, 26, 1297, 1399, 1435, 1621, 1701, 1866, 1900, 1909, 1955], "ve": [7, 51, 52, 53, 56, 1199, 1851, 1878, 1883, 1891, 1897, 1924, 1932, 1945, 1946, 1949], "come": [7, 8, 9, 21, 29, 30, 31, 38, 41, 45, 49, 53, 941, 1068, 1119, 1125, 1195, 1267, 1368, 1369, 1370, 1374, 1395, 1662, 1875, 1879, 1895, 1897, 1901, 1915, 1923, 1925, 1927, 1943, 1949, 1952], "peopl": [7, 1891, 1918, 1948], "scratch": [7, 1891, 1956], "itch": 7, "acquaint": 7, "tip": [7, 1894, 1946], "tracker": [7, 1268], "confirm": [7, 1866, 1868, 1896, 1912, 1923, 1925], "tend": [7, 892, 1848], "bootcamp": 7, "1hr": 7, "although": [7, 8, 30, 53, 56, 1360, 1361, 1362, 1429, 1437, 1609, 1867, 1871, 1890, 1896, 1905, 1916, 1918, 1954, 1955], "join": [7, 22, 24, 28, 41, 42, 55, 56, 1609, 1866, 1867, 1872, 1883, 1891, 1895, 1904, 1913, 1933], "u": [7, 8, 12, 49, 54, 56, 57, 749, 890, 932, 1232, 1234, 1238, 1242, 1243, 1259, 1285, 1287, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1381, 1382, 1399, 1400, 1414, 1416, 1444, 1446, 1447, 1468, 1479, 1621, 1701, 1813, 1814, 1868, 1869, 1878, 1885, 1889, 1891, 1894, 1895, 1896, 1897, 1902, 1915, 1917, 1927, 1931, 1932, 1944, 1946, 1949, 1950, 1951, 1956], "dev": [7, 10, 33, 38, 1943, 1956], "happi": 7, "research": [7, 8, 9, 1609, 1866, 1891, 1899, 1907], "partner": [7, 1938], "speed": [7, 8, 14, 28, 48, 980, 1068, 1124, 1186, 1199, 1205, 1259, 1337, 1435, 1755, 1813, 1891, 1893, 1894, 1895, 1896, 1898, 1900, 1905, 1918, 1923, 1943, 1949], "reach": [7, 8, 9, 21, 22, 24, 25, 32, 41, 45, 49, 1268, 1609, 1684, 1687, 1690, 1691, 1891, 1896, 1904, 1916, 1918, 1919, 1923, 1943], "design": [7, 9, 21, 30, 38, 41, 46, 49, 52, 53, 54, 897, 898, 1195, 1215, 1429, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1824, 1866, 1867, 1881, 1894, 1896, 1900, 1902, 1910, 1915, 1943, 1944, 1946, 1948, 1951, 1956], "comment": [7, 56, 1653, 1751, 1871, 1872, 1896, 1930, 1932, 1950], "crack": 7, "idea": [7, 49, 1068, 1337, 1609, 1894, 1901, 1912, 1924, 1946], "rfc": [7, 1891, 1918, 1924], "big": [7, 1668, 1669, 1672, 1678, 1679, 1795, 1796, 1797, 1798, 1799, 1800, 1894, 1914, 1918, 1944, 1945, 1950], "post": [7, 8, 25, 26, 28, 48, 477, 845, 846, 850, 1195, 1429, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1867, 1875, 1891, 1895, 1896, 1898, 1908, 1927, 1943, 1945, 1956], "standard": [7, 14, 18, 22, 30, 34, 35, 39, 46, 53, 56, 342, 367, 578, 1088, 1341, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1395, 1401, 1468, 1474, 1476, 1657, 1701, 1724, 1770, 1775, 1807, 1808, 1870, 1872, 1886, 1889, 1893, 1894, 1904, 1905, 1909, 1912, 1915, 1928], "lot": [7, 14, 21, 45, 1883, 1891, 1894, 1899, 1904, 1915, 1916, 1922, 1924, 1932, 1944, 1945, 1949, 1950, 1958], "boil": 7, "mostli": [7, 30, 1193, 1609, 1894, 1918, 1927, 1944, 1957], "evid": 7, "peer": [7, 24, 28, 41, 48, 978, 1609, 1894, 1923], "paper": [7, 9, 22, 30, 46, 749, 1337, 1341, 1347, 1348, 1349, 1351, 1360, 1361, 1362, 1367, 1368, 1369, 1370, 1371, 1374, 1377, 1378, 1381, 1384, 1387, 1392, 1393, 1394, 1401, 1435, 1441, 1442, 1447, 1456, 1460, 1468, 1472, 1474, 1476, 1477, 1478, 1523, 1524, 1533, 1668, 1669, 1678, 1680, 1687, 1693, 1899, 1916], "framework": [7, 8, 9, 30, 38, 49, 55, 749, 976, 1305, 1381, 1609, 1616, 1681, 1760, 1867, 1903, 1916, 1918, 1924, 1925], "bit": [7, 56, 78, 320, 447, 750, 752, 754, 808, 809, 810, 811, 814, 816, 847, 914, 917, 953, 954, 1121, 1175, 1735, 1736, 1748, 1755, 1777, 1894, 1902, 1905, 1908, 1918, 1921, 1922, 1927, 1930, 1933, 1949, 1950, 1959], "accept": [7, 9, 21, 24, 26, 29, 45, 48, 49, 50, 52, 54, 140, 502, 791, 878, 879, 880, 881, 882, 887, 896, 931, 1011, 1014, 1120, 1136, 1157, 1195, 1199, 1365, 1429, 1436, 1457, 1476, 1628, 1642, 1643, 1649, 1664, 1752, 1790, 1804, 1859, 1871, 1885, 1894, 1896, 1897, 1912, 1914, 1923, 1930, 1932, 1946, 1956], "overwhelm": [7, 1923, 1956], "newli": [7, 48, 56, 1082, 1083, 1372, 1373, 1713, 1714, 1875, 1949], "publish": [7, 9, 33, 38, 41, 1268, 1867], "ground": [7, 9, 1365, 1511, 1932], "break": [7, 30, 51, 56, 669, 882, 941, 943, 1195, 1241, 1429, 1740, 1760, 1867, 1872, 1877, 1895, 1914, 1927, 1935, 1941, 1943, 1944, 1947, 1949, 1950, 1952], "refactor": [7, 56, 1908, 1918], "coordin": [7, 24, 26, 30, 32, 572, 575, 873, 1148, 1157, 1297, 1705, 1798, 1838, 1840, 1891, 1927, 1932, 1946, 1956], "pace": 7, "branch": [7, 12, 45, 56, 57, 60, 62, 64, 65, 952, 1866, 1870, 1871, 1894, 1944, 1953], "fast": [7, 8, 21, 24, 897, 1371, 1392, 1393, 1394, 1460, 1476, 1578, 1693, 1699, 1718, 1740, 1755, 1867, 1893, 1894, 1896, 1900, 1914, 1923, 1927, 1930, 1931, 1938, 1945, 1948, 1950, 1958], "definit": [7, 8, 21, 24, 25, 30, 37, 45, 46, 56, 75, 932, 933, 934, 960, 1011, 1116, 1216, 1225, 1226, 1268, 1395, 1540, 1585, 1656, 1731, 1834, 1866, 1868, 1870, 1872, 1890, 1891, 1896, 1899, 1915, 1918, 1932, 1934, 1949], "fundament": [7, 53, 1870, 1902, 1923, 1927, 1945], "cut": [7, 1946], "guidanc": [7, 9, 15, 50, 1916, 1944], "stage": [7, 18, 22, 28, 38, 48, 55, 1867, 1878, 1886, 1916, 1925, 1956], "piec": [7, 1877, 1886, 1924, 1946, 1949, 1958], "advic": [7, 1946], "readi": [7, 14, 55, 850, 851, 910, 919, 1152, 1153, 1609, 1868, 1895, 1923, 1924, 1941], "draft": 7, "convert": [7, 21, 24, 29, 30, 31, 46, 48, 52, 56, 70, 71, 72, 140, 569, 573, 574, 575, 576, 577, 724, 777, 778, 779, 781, 782, 783, 804, 805, 806, 827, 828, 843, 846, 847, 848, 868, 869, 927, 940, 1052, 1088, 1119, 1195, 1265, 1429, 1439, 1440, 1468, 1475, 1600, 1611, 1612, 1615, 1652, 1662, 1663, 1682, 1713, 1714, 1719, 1795, 1796, 1797, 1798, 1799, 1800, 1868, 1869, 1870, 1871, 1886, 1896, 1900, 1909, 1910, 1912, 1918, 1921, 1927, 1932, 1934, 1937, 1938, 1943, 1946, 1949, 1955, 1956], "press": [7, 56], "button": [7, 1953], "prepend": [7, 14, 21, 24, 28, 56, 219, 1060, 1195, 1290, 1429, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1830, 1869, 1892], "titl": [7, 1913, 1917], "wip": 7, "progress": [7, 24, 28, 32, 42, 44, 45, 69, 971, 1307, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1853, 1866, 1880], "ci": [7, 1867, 1953], "folk": 7, "who": [7, 8, 9, 11, 41, 57, 71, 1915, 1949], "regularli": 7, "queue": [7, 32, 43, 1883, 1932], "everyth": [7, 21, 30, 46, 52, 57, 1868, 1883, 1915, 1944, 1946, 1949, 1950, 1956], "happen": [7, 9, 24, 26, 28, 30, 32, 34, 41, 45, 48, 53, 56, 596, 780, 803, 1125, 1468, 1609, 1616, 1684, 1690, 1691, 1697, 1813, 1867, 1881, 1883, 1891, 1894, 1895, 1896, 1897, 1898, 1903, 1904, 1908, 1912, 1918, 1923, 1931, 1941, 1946, 1949], "subsystem": [7, 11, 49, 54, 943, 1867, 1896], "patch": [7, 50, 1376, 1480, 1849, 1947], "feel": [7, 1886, 1912, 1927, 1946], "ll": [7, 53, 56, 749, 809, 810, 850, 851, 932, 933, 934, 1014, 1225, 1381, 1382, 1399, 1400, 1878, 1891, 1894, 1896, 1897, 1904, 1912, 1918, 1924, 1942, 1945, 1950, 1954], "round": [7, 21, 24, 57, 59, 65, 497, 654, 655, 788, 791, 809, 854, 956, 958, 1025, 1063, 1089, 1090, 1091, 1095, 1099, 1100, 1101, 1116, 1241, 1254, 1481, 1539, 1711, 1712, 1731, 1780, 1869, 1871, 1884, 1894, 1913, 1918, 1921, 1927, 1928, 1951, 1958], "trip": [7, 56, 1089, 1090, 1091, 1095, 1099, 1100, 1101], "noth": [7, 14, 32, 56, 669, 1005, 1621, 1668, 1669, 1696, 1868, 1870, 1925], "accompani": [7, 73], "solut": [7, 8, 53, 934, 1240, 1241, 1245, 1253, 1256, 1258, 1262, 1345, 1609, 1836, 1868, 1869, 1889, 1890, 1898, 1904, 1918], "think": [7, 9, 56, 57, 1682, 1868, 1870, 1891, 1914, 1915, 1925, 1945, 1947], "confid": [7, 1932, 1947], "ahead": [7, 45, 1867, 1918, 1938, 1944, 1946], "search": [7, 11, 22, 808, 925, 1387, 1533, 1609, 1663, 1718, 1747, 1868, 1884, 1885, 1912, 1915, 1927, 1942, 1945, 1953, 1958], "repo": [7, 57, 1687, 1866, 1896, 1908], "unabl": [7, 53, 72, 1912, 1914], "similar": [7, 9, 21, 24, 30, 38, 46, 48, 53, 55, 56, 482, 504, 701, 702, 703, 704, 705, 706, 709, 719, 720, 721, 722, 734, 735, 745, 753, 791, 866, 881, 922, 927, 940, 941, 1114, 1115, 1195, 1363, 1364, 1376, 1389, 1392, 1393, 1394, 1429, 1477, 1510, 1642, 1656, 1657, 1682, 1705, 1733, 1740, 1790, 1824, 1830, 1846, 1870, 1871, 1883, 1884, 1886, 1891, 1893, 1894, 1896, 1897, 1899, 1905, 1912, 1915, 1916, 1918, 1923, 1924, 1927, 1928, 1933, 1944, 1945, 1946, 1948, 1949, 1952, 1956, 1959], "reproduc": [7, 21, 53, 303, 311, 504, 506, 912, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1425, 1426, 1427, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1520, 1528, 1539, 1566, 1578, 1597, 1598, 1599, 1600, 1848, 1866, 1867, 1914, 1915, 1946, 1956], "problemat": [7, 21, 56, 1868, 1905, 1919], "insight": [7, 18, 69, 1958], "individu": [7, 9, 14, 21, 22, 24, 26, 28, 48, 56, 73, 232, 669, 781, 827, 828, 932, 1034, 1086, 1104, 1195, 1352, 1429, 1468, 1609, 1871, 1884, 1890, 1891, 1894, 1896, 1901, 1905, 1906, 1910, 1912, 1921, 1923, 1934, 1941, 1948, 1953, 1958], "intent": [7, 39, 41, 48, 53, 1752, 1878, 1915, 1918, 1952], "lock": [7, 21, 24, 28, 30, 1891, 1894, 1904, 1915, 1924, 1958], "strike": 7, "convers": [7, 447, 569, 572, 782, 926, 1180, 1642, 1867, 1872, 1896, 1900, 1912, 1918, 1919, 1927, 1944, 1945, 1955], "medium": [7, 48, 1755], "prioriti": [7, 9, 10, 24, 669, 843, 974, 1870, 1907], "entranc": [7, 1894], "great": [7, 12, 45, 1891, 1899, 1941, 1944], "deal": [7, 8, 21, 32, 43, 45, 70, 1829, 1883, 1898, 1923, 1944, 1945, 1949, 1950], "welcom": [7, 1886, 1909, 1914, 1927], "aim": [7, 45, 71, 1897, 1927, 1938], "typo": 7, "send": [7, 21, 24, 32, 43, 1007, 1600, 1609, 1883, 1895, 1904, 1908, 1913, 1917, 1923, 1924, 1925, 1935, 1937, 1945, 1948], "forum": [7, 9, 1898, 1904], "share": [7, 10, 14, 21, 25, 28, 30, 31, 41, 42, 46, 48, 53, 211, 301, 330, 447, 472, 509, 513, 606, 848, 868, 869, 886, 897, 898, 941, 969, 971, 1003, 1007, 1119, 1120, 1121, 1165, 1243, 1328, 1329, 1366, 1445, 1609, 1619, 1657, 1729, 1743, 1804, 1827, 1833, 1847, 1869, 1890, 1891, 1893, 1904, 1907, 1908, 1912, 1923, 1927, 1929, 1931, 1936, 1941], "resolv": [7, 8, 9, 26, 30, 48, 56, 72, 73, 1195, 1360, 1361, 1362, 1376, 1426, 1429, 1870, 1871, 1872, 1908, 1915, 1929, 1944, 1957], "challeng": [7, 24, 1924, 1946], "feedback": [7, 18, 22, 48, 49, 1609, 1867, 1927], "direct": [7, 9, 11, 24, 46, 749, 781, 1109, 1110, 1195, 1381, 1399, 1429, 1444, 1653, 1680, 1701, 1718, 1739, 1891, 1894, 1896, 1902, 1923, 1949, 1955], "yourself": [7, 51, 969, 1849, 1896, 1902, 1904, 1946, 1957], "problem": [7, 21, 24, 41, 45, 53, 57, 1068, 1211, 1241, 1253, 1268, 1365, 1436, 1493, 1751, 1883, 1891, 1894, 1898, 1899, 1904, 1908, 1916, 1918, 1919, 1925, 1930, 1938, 1944, 1946, 1956], "area": [7, 9, 46, 1539, 1902, 1918, 1928], "appreci": 7, "strive": 7, "respond": [7, 24], "quickli": [7, 8, 22, 41, 1948], "ey": [7, 30, 181, 198, 933, 934, 1136, 1216, 1225, 1236, 1247, 1250, 1253, 1254, 1261, 1262, 1616, 1711, 1791, 1859, 1869, 1873, 1896, 1913], "everyon": [7, 32, 41], "touch": [7, 39, 56], "versu": [7, 1433], "write": [7, 8, 9, 12, 16, 18, 21, 24, 26, 32, 34, 38, 39, 40, 41, 45, 48, 53, 54, 70, 72, 73, 244, 502, 686, 923, 943, 1120, 1136, 1172, 1206, 1226, 1237, 1238, 1239, 1243, 1244, 1257, 1596, 1743, 1836, 1848, 1859, 1867, 1870, 1881, 1885, 1894, 1897, 1898, 1899, 1910, 1914, 1915, 1918, 1927, 1932, 1938, 1944, 1946, 1948, 1950, 1956], "blog": [7, 8, 12, 952, 1875, 1895, 1896, 1918, 1927], "around": [7, 9, 11, 24, 30, 52, 53, 55, 56, 140, 613, 882, 896, 966, 969, 971, 972, 974, 1043, 1114, 1115, 1125, 1195, 1307, 1609, 1740, 1868, 1883, 1891, 1894, 1912, 1918, 1923, 1941, 1949], "internet": 7, "grow": [7, 8, 56, 1894, 1927], "market": [7, 9], "benefit": [7, 8, 24, 56, 836, 1695, 1883, 1894, 1918, 1927, 1956], "opinion": [7, 8, 1927], "isn": [7, 21, 56, 447, 1192, 1891, 1894, 1896, 1923, 1934, 1945], "categor": [7, 34, 1530, 1867, 1872, 1919, 1923, 1955], "aspect": [7, 24, 56, 1445, 1896, 1902], "seem": [7, 1912], "unusu": [7, 1945], "claim": [7, 1693, 1899], "wast": [7, 1894], "someon": [7, 9, 1193, 1885], "advisori": 7, "fashion": [7, 21, 24, 43, 45, 504, 1273, 1632, 1868], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 1956], "wrote": [7, 8], "implicitli": [7, 24, 34, 56, 1051, 1140, 1148, 1211, 1212, 1267, 1342, 1343, 1344, 1422, 1423, 1424, 1752, 1834, 1868, 1870, 1871, 1891, 1896, 1900], "lifetim": [7, 1923, 1945], "immedi": [7, 8, 9, 41, 42, 48, 55, 1195, 1198, 1429, 1871, 1902, 1907, 1914, 1923, 1925, 1944, 1945], "sai": [7, 45, 46, 56, 485, 1128, 1129, 1130, 1195, 1429, 1868, 1890, 1891, 1898, 1915, 1924, 1925, 1927, 1941, 1944, 1949, 1950, 1955], "bugfix": 7, "Or": [7, 32, 56, 869, 936, 1900, 1903, 1912, 1927, 1949], "motiv": [7, 8, 56, 724, 1902, 1924, 1956], "ye": [7, 1912, 1914, 1927, 1946], "knuth": 7, "bewar": 7, "mere": [7, 46], "proven": [7, 1367, 1609], "ok": [7, 34, 39, 52, 941, 1200, 1925, 1946], "sometim": [7, 56, 893, 1025, 1201, 1211, 1376, 1480, 1506, 1507, 1508, 1621, 1867, 1871, 1883, 1891, 1894, 1897, 1898, 1902, 1904, 1915, 1930, 1933, 1944, 1945, 1950, 1957], "obvious": [7, 1945], "broken": [7, 21, 1025, 1912, 1915], "contrari": [7, 1893], "accident": 7, "put": [7, 9, 21, 24, 32, 52, 55, 56, 309, 1088, 1267, 1384, 1687, 1866, 1869, 1883, 1894, 1904, 1913, 1915, 1924, 1925, 1945, 1947], "difficulti": [7, 1889], "nonlinearli": 7, "sign": [7, 30, 331, 518, 873, 955, 1056, 1104, 1116, 1121, 1229, 1254, 1255, 1276, 1421, 1680, 1731, 1763, 1777, 1869, 1884, 1913, 1921, 1927, 1930, 1933, 1934, 1951], "split": [7, 21, 24, 56, 606, 761, 762, 763, 848, 850, 851, 928, 935, 1025, 1066, 1158, 1366, 1380, 1381, 1399, 1435, 1444, 1503, 1504, 1505, 1506, 1507, 1508, 1527, 1828, 1860, 1868, 1869, 1884, 1894, 1913, 1915, 1916, 1918, 1923, 1927, 1931, 1954, 1958], "shippabl": 7, "complet": [7, 14, 21, 24, 26, 32, 33, 39, 41, 43, 53, 55, 475, 669, 850, 943, 967, 971, 972, 974, 1044, 1124, 1125, 1198, 1207, 1209, 1214, 1226, 1254, 1307, 1310, 1311, 1316, 1493, 1609, 1618, 1651, 1711, 1755, 1867, 1870, 1871, 1872, 1877, 1883, 1890, 1891, 1894, 1897, 1900, 1906, 1915, 1916, 1923, 1924, 1940, 1947, 1949, 1953, 1954], "subtl": [7, 1392, 1393, 1394, 1896, 1945, 1946, 1956], "nuanc": [7, 1909, 1949], "extra": [7, 14, 21, 22, 24, 28, 30, 45, 48, 56, 1068, 1125, 1136, 1195, 1203, 1206, 1241, 1267, 1429, 1436, 1616, 1809, 1859, 1870, 1885, 1891, 1893, 1895, 1896, 1898, 1901, 1910, 1915, 1917, 1927, 1934, 1935, 1945, 1949, 1950], "understand": [7, 8, 9, 24, 26, 32, 33, 57, 70, 71, 1125, 1253, 1867, 1875, 1889, 1891, 1894, 1900, 1907, 1917, 1932, 1938, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1956], "hack": 7, "answer": [7, 10, 56, 813, 1346, 1634, 1945, 1946], "regress": [7, 1345, 1906, 1941, 1952], "scrutini": 7, "undertak": 7, "rest": [7, 21, 22, 42, 48, 56, 782, 803, 1121, 1261, 1262, 1828, 1885, 1902, 1906, 1915, 1916, 1918, 1923, 1927, 1947, 1949, 1950, 1954], "chanc": [7, 26, 30, 1896, 1945, 1946, 1950], "unrel": [7, 948, 1134, 1890, 1896, 1915], "aid": [7, 56, 1891, 1956], "troubleshoot": [7, 24, 1938, 1946], "mayb": [7, 1132, 1851, 1945], "bracnh": 7, "rebas": 7, "latest": [7, 24, 28, 30, 45, 1628, 1866, 1896, 1900, 1910, 1912], "statu": [7, 9, 32, 1285, 1867, 1872, 1883, 1918], "hud": 7, "risk": [7, 8, 48, 1618, 1621], "anyth": [7, 31, 34, 48, 55, 812, 815, 1207, 1682, 1868, 1875, 1886, 1902, 1915, 1944], "configur": [7, 13, 21, 22, 24, 32, 33, 38, 41, 42, 43, 48, 777, 778, 781, 782, 786, 803, 804, 805, 806, 812, 815, 827, 828, 829, 832, 834, 837, 847, 848, 849, 850, 851, 941, 1025, 1609, 1642, 1756, 1848, 1867, 1877, 1881, 1894, 1895, 1896, 1906, 1908, 1915, 1921, 1923, 1932, 1934, 1944, 1946, 1953, 1954, 1956], "riski": 7, "had": [7, 56, 1211, 1600, 1830, 1891, 1897, 1944], "beforehand": [7, 55, 1946], "hei": 7, "my": [7, 21, 1366, 1901, 1912, 1918], "member": [7, 9, 21, 24, 32, 41, 42, 56, 57, 59, 1195, 1383, 1429, 1525, 1868, 1870, 1871, 1881, 1898, 1917, 1923, 1934, 1935], "sphinx": 7, "folder": [7, 9, 14, 21, 56, 1663, 1866, 1910, 1932, 1948, 1956], "tree": [7, 34, 52, 941, 1429, 1472, 1663, 1912, 1915, 1917, 1925, 1938], "master": [7, 24, 44, 781, 1125, 1472, 1866, 1923], "doxygen": 7, "special": [7, 11, 29, 34, 43, 46, 53, 56, 57, 62, 64, 65, 730, 731, 732, 812, 815, 897, 941, 1061, 1075, 1076, 1077, 1079, 1080, 1089, 1091, 1162, 1163, 1164, 1209, 1267, 1281, 1322, 1366, 1476, 1610, 1611, 1612, 1655, 1682, 1706, 1764, 1775, 1779, 1863, 1867, 1872, 1877, 1885, 1894, 1896, 1899, 1901, 1912, 1915, 1918, 1931, 1932, 1943, 1944, 1945, 1949, 1952], "server": [7, 21, 24, 42, 1199, 1894, 1915, 1918, 1923, 1940], "cppdoc": [7, 15], "cpp": [7, 14, 24, 1319, 1895, 1944], "accomplish": [7, 26, 1902, 1946], "holist": 7, "concept": [7, 46, 53, 56, 1875, 1896, 1897, 1902, 1930, 1947], "galleri": 7, "restructur": [7, 1915], "text": [7, 21, 30, 46, 143, 144, 163, 597, 606, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 687, 734, 735, 745, 747, 749, 753, 757, 758, 759, 761, 762, 763, 769, 773, 809, 810, 854, 870, 871, 872, 873, 874, 909, 910, 911, 914, 917, 919, 921, 930, 933, 934, 936, 954, 955, 957, 958, 960, 1063, 1082, 1083, 1112, 1113, 1117, 1118, 1139, 1151, 1152, 1153, 1154, 1161, 1184, 1192, 1216, 1219, 1220, 1221, 1224, 1225, 1232, 1235, 1241, 1245, 1250, 1253, 1259, 1266, 1275, 1282, 1283, 1284, 1285, 1318, 1319, 1330, 1331, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1432, 1433, 1434, 1435, 1436, 1437, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1495, 1496, 1497, 1499, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1514, 1515, 1516, 1521, 1524, 1526, 1527, 1528, 1532, 1533, 1543, 1548, 1552, 1553, 1554, 1558, 1563, 1566, 1571, 1572, 1574, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1590, 1614, 1616, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1687, 1704, 1705, 1708, 1711, 1724, 1727, 1730, 1742, 1763, 1765, 1766, 1778, 1780, 1791, 1792, 1802, 1809, 1810, 1813, 1825, 1826, 1862, 1886, 1889, 1899, 1912, 1915, 1921, 1928, 1932, 1934, 1948], "rst": 7, "rebuild": [7, 22], "entir": [7, 14, 21, 24, 32, 42, 56, 686, 897, 898, 1125, 1148, 1368, 1369, 1370, 1374, 1392, 1393, 1394, 1401, 1514, 1515, 1516, 1521, 1609, 1627, 1629, 1653, 1871, 1886, 1891, 1894, 1896, 1897, 1898, 1901, 1902, 1912, 1915, 1918, 1923, 1925, 1927, 1942, 1943, 1944, 1945, 1946, 1949, 1956, 1958], "circleci": 7, "shard": [7, 21, 26, 28, 29, 48, 1609, 1946], "worker": [7, 14, 21, 22, 24, 25, 28, 32, 33, 34, 35, 41, 43, 44, 48, 1609, 1871, 1906, 1916, 1917, 1923, 1924, 1925], "40": [7, 1148, 1268, 1350, 1392, 1616, 1617, 1640, 1641, 1650, 1653, 1824, 1943], "minut": [7, 10, 24, 1932], "netlifi": 7, "noplot": 7, "render": [7, 24, 1932, 1958], "notebook": 7, "rebuilt": [7, 22, 28], "deploi": [7, 12, 32, 41, 1867, 1901, 1907, 1915, 1940], "action": [7, 24, 30, 32, 35, 56, 969, 1003, 1894, 1910, 1915, 1917, 1925, 1958], "document": [8, 9, 10, 17, 21, 24, 45, 46, 48, 49, 56, 669, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 862, 863, 864, 865, 926, 971, 972, 974, 1025, 1068, 1140, 1143, 1144, 1176, 1183, 1195, 1310, 1311, 1326, 1337, 1372, 1373, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1429, 1618, 1627, 1636, 1656, 1710, 1737, 1754, 1848, 1866, 1868, 1870, 1871, 1882, 1883, 1884, 1885, 1887, 1890, 1896, 1898, 1902, 1906, 1907, 1912, 1914, 1915, 1918, 1919, 1920, 1923, 1927, 1931, 1935, 1938, 1942, 1947, 1949, 1955], "develop": [8, 9, 10, 14, 22, 24, 56, 1870, 1871, 1878, 1882, 1891, 1896, 1901, 1902, 1906, 1912, 1915, 1918, 1919, 1923, 1927, 1948, 1951, 1956], "meant": [8, 25, 41, 43, 48, 1642, 1890, 1923], "rule": [8, 9, 14, 24, 30, 56, 57, 64, 65, 75, 76, 77, 140, 849, 881, 882, 925, 926, 1051, 1245, 1256, 1347, 1348, 1349, 1392, 1393, 1394, 1468, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1747, 1834, 1868, 1870, 1884, 1886, 1891, 1892, 1896, 1899, 1930, 1934, 1945, 1946], "concern": [8, 21, 48, 1883, 1894, 1912, 1954], "disagr": 8, "contribut": [8, 9, 26, 906, 1156, 1157, 1365, 1372, 1373, 1436, 1511, 1519, 1520, 1563, 1609, 1867, 1886, 1896, 1897, 1912, 1916], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": 8, "obsess": 8, "soumith": [8, 10], "goe": [8, 56, 1121, 1341, 1668, 1669, 1898, 1910, 1946, 1947, 1949], "depth": [8, 9, 45, 71, 768, 774, 1029, 1030, 1209, 1344, 1359, 1362, 1424, 1481, 1539, 1597, 1878, 1895, 1902, 1917, 1943, 1958], "primari": [8, 9, 24, 56, 71, 1205, 1872, 1878, 1927, 1945], "goal": [8, 38, 52, 56, 1297, 1878, 1891, 1895, 1899, 1925, 1948], "secondari": 8, "abil": [8, 45, 1743, 1878, 1901, 1910, 1915], "flexibl": [8, 22, 45, 48, 52, 1252, 1609, 1878, 1894, 1896, 1902, 1918, 1949], "abstract": [8, 16, 21, 22, 25, 26, 30, 32, 41, 43, 899, 900, 901, 902, 903, 1623, 1871, 1895, 1918, 1923, 1941, 1949], "critic": [8, 41, 669, 1617, 1650, 1881, 1893, 1894, 1946, 1947, 1949], "concret": [8, 30, 44, 46, 52, 56, 774, 789, 813, 830, 941, 1481, 1566, 1597, 1868, 1871, 1894, 1896, 1904, 1944, 1945, 1949], "manner": [8, 32, 502, 890, 892, 1885, 1887, 1892], "jump": [8, 549, 1930], "regim": 8, "ei": 8, "tradeoff": [8, 22, 45, 1918, 1924, 1946, 1952], "temptat": 8, "impos": [8, 43, 54, 1751, 1883, 1890, 1930], "strict": [8, 46, 890, 891, 892, 893, 894, 895, 1124, 1131, 1195, 1211, 1212, 1429, 1651, 1915, 1932, 1934], "upfront": [8, 1944], "simplifi": [8, 22, 55, 1203, 1419, 1617, 1682, 1878, 1891, 1896, 1899, 1902, 1914, 1918, 1924, 1944], "worth": [8, 9, 21, 22, 44, 46, 1125, 1866, 1931, 1949, 1950], "friction": 8, "compel": 8, "narrow": [8, 1265, 1329, 1682, 1770, 1869, 1871, 1884, 1913, 1920, 1931, 1956], "subproblem": 8, "fragment": [8, 993, 1025, 1875, 1894, 1956], "ecosystem": [8, 1901, 1903], "incomprehens": 8, "seamlessli": [8, 1886], "softwar": [8, 1231, 1232, 1259, 1848, 1894, 1900, 1938], "experi": [8, 9, 11, 22, 45, 54, 1136, 1458, 1581, 1609, 1859, 1878, 1896, 1932, 1943], "rich": [8, 1871], "denomin": [8, 676, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1468, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1715], "subset": [8, 21, 24, 28, 42, 46, 1207, 1682, 1868, 1870, 1871, 1896, 1909, 1912, 1921, 1951], "borrow": 8, "zen": 8, "implicit": [8, 46, 76, 757, 758, 761, 762, 763, 1140, 1148, 1342, 1343, 1344, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1422, 1423, 1424, 1480, 1495, 1496, 1497, 1503, 1504, 1505, 1552, 1553, 1554, 1699, 1869, 1871, 1872, 1912, 1915, 1931, 1951], "concis": [8, 34, 1923], "interchang": [8, 30, 1679, 1833, 1870, 1900, 1910, 1938, 1947], "everydai": 8, "english": 8, "movement": [8, 1931, 1946], "worri": [8, 1923], "placement": [8, 29, 32, 848, 1600, 1918, 1923, 1946], "favor": [8, 24, 774, 775, 776, 932, 943, 1037, 1041, 1195, 1250, 1253, 1285, 1286, 1388, 1429, 1482, 1483, 1597, 1598, 1599, 1601, 1711, 1813, 1836, 1949], "practition": 8, "debugg": [8, 1200, 1899, 1946, 1956], "plug": 8, "ir": [8, 45, 56, 69, 71, 749, 1198, 1199, 1381, 1382, 1663, 1868, 1871, 1910, 1912, 1938, 1944, 1945, 1946, 1956], "classic": [8, 1891], "sort": [8, 28, 32, 56, 579, 598, 865, 866, 887, 1068, 1155, 1317, 1337, 1643, 1644, 1655, 1712, 1747, 1831, 1845, 1869, 1871, 1896, 1898, 1913, 1927, 1944, 1946, 1949, 1951], "distribut": [8, 11, 21, 22, 25, 32, 33, 34, 35, 38, 39, 40, 41, 43, 44, 48, 55, 163, 248, 276, 367, 443, 470, 597, 669, 684, 685, 808, 911, 1042, 1319, 1337, 1341, 1365, 1366, 1367, 1368, 1369, 1370, 1374, 1379, 1383, 1395, 1443, 1447, 1468, 1511, 1513, 1514, 1515, 1516, 1521, 1525, 1526, 1530, 1540, 1571, 1609, 1657, 1704, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1867, 1871, 1885, 1886, 1889, 1890, 1894, 1916, 1917, 1919, 1925, 1928, 1932, 1935], "tldr": 8, "resourc": [8, 14, 21, 32, 37, 41, 45, 56, 1871, 1883, 1904, 1927, 1946, 1953], "characterist": [8, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1814, 1897, 1902], "uniformli": [8, 30, 1722, 1723, 1934], "leak": [8, 882, 888, 1871, 1883, 1891], "smart": [8, 1896, 1915, 1923], "anywai": [8, 1891], "obviou": [8, 1898, 1925, 1945], "extens": [8, 14, 18, 24, 26, 29, 30, 45, 1267, 1268, 1743, 1763, 1867, 1878, 1886, 1890, 1907, 1910, 1915, 1927, 1945, 1946, 1956], "unavoid": 8, "latenc": [8, 38, 1893, 1894, 1946, 1953], "caveat": [8, 48, 1600, 1649, 1878, 1883, 1894, 1902, 1907, 1942, 1952, 1956], "valuabl": 8, "certainli": [8, 1878], "heterogen": [8, 1870], "cluster": [8, 24, 26, 40, 41, 42, 48, 1337, 1932], "focus": [8, 1870, 1871, 1896, 1956], "beaten": 8, "space": [8, 9, 21, 30, 761, 762, 763, 1051, 1086, 1088, 1090, 1091, 1097, 1104, 1148, 1157, 1211, 1212, 1266, 1282, 1337, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1395, 1405, 1406, 1407, 1408, 1409, 1410, 1423, 1424, 1480, 1503, 1504, 1505, 1506, 1507, 1508, 1540, 1834, 1869, 1887, 1891, 1899, 1902, 1907, 1958], "innov": 8, "ultim": [8, 9, 14, 34, 43, 45, 1895, 1938], "evidenc": 8, "began": 8, "bind": [8, 14, 24, 46, 56, 1005, 1871, 1872, 1896, 1915], "monolith": 8, "deepli": 8, "integr": [8, 21, 29, 35, 46, 52, 144, 911, 913, 914, 915, 916, 917, 918, 960, 1051, 1156, 1195, 1219, 1263, 1264, 1328, 1429, 1718, 1730, 1834, 1886, 1896, 1901, 1902, 1911, 1914, 1916, 1918, 1928, 1930, 1934, 1942], "numpi": [8, 21, 53, 437, 482, 682, 683, 688, 866, 868, 869, 886, 925, 1063, 1065, 1066, 1068, 1086, 1107, 1108, 1109, 1110, 1114, 1115, 1120, 1136, 1158, 1226, 1227, 1237, 1248, 1250, 1251, 1252, 1253, 1254, 1259, 1260, 1263, 1265, 1297, 1302, 1705, 1730, 1733, 1740, 1752, 1760, 1795, 1796, 1797, 1798, 1799, 1800, 1813, 1815, 1816, 1824, 1827, 1828, 1830, 1856, 1859, 1860, 1878, 1892, 1896, 1897, 1905, 1906, 1908, 1915, 1930, 1931, 1932, 1933, 1934, 1959], "scipi": [8, 929, 1242, 1243, 1568, 1705, 1915, 1926, 1928, 1932], "scikit": [8, 1539], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1908], "year": [8, 1927], "rewrot": 8, "frontend": [8, 15, 46, 52, 56, 1946], "familiar": [8, 15, 46, 56, 969, 1003, 1024, 1868, 1891, 1897, 1915, 1918, 1924, 1925, 1946, 1955], "perhap": [8, 1897, 1949], "importantli": [8, 1949], "huge": [8, 1814, 1881], "scientif": [8, 1760], "pareto": [8, 1867], "close": [8, 15, 24, 41, 56, 57, 60, 64, 1007, 1184, 1231, 1232, 1258, 1259, 1285, 1346, 1460, 1478, 1501, 1678, 1813, 1836, 1881, 1891, 1896, 1905, 1912, 1915, 1918, 1923, 1932, 1934], "curv": [8, 1932], "torchdynamo": [8, 45, 57, 67, 669, 941, 943, 1867, 1877, 1912, 1938, 1942, 1944, 1946, 1948, 1949], "frame": [8, 45, 56, 941, 1192, 1809, 1850, 1898, 1909, 1910, 1932, 1938, 1943, 1944, 1946, 1947, 1956, 1958], "torch_funct": [8, 1896], "torch_dispatch": 8, "torch": [8, 9, 11, 15, 18, 19, 22, 25, 28, 32, 33, 34, 35, 38, 39, 41, 43, 44, 48, 51, 57, 58, 59, 60, 61, 62, 63, 71, 72, 74, 76, 78, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 883, 961, 962, 969, 970, 971, 972, 974, 975, 990, 992, 1003, 1072, 1170, 1193, 1194, 1195, 1210, 1307, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1600, 1609, 1610, 1611, 1612, 1618, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1642, 1654, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1718, 1757, 1788, 1867, 1868, 1869, 1870, 1884, 1885, 1890, 1891, 1892, 1893, 1895, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1908, 1910, 1911, 1916, 1918, 1919, 1920, 1923, 1924, 1925, 1931, 1941, 1942, 1943, 1944, 1945, 1948, 1949, 1952, 1955, 1956, 1958], "fx": [8, 12, 45, 46, 72, 669, 736, 804, 805, 806, 807, 849, 1125, 1867, 1909, 1910, 1919, 1920, 1942, 1943, 1944, 1945, 1946, 1949, 1955, 1956], "tracer": [8, 45, 1211, 1912, 1932, 1937, 1949], "functorch": [8, 46, 49, 54, 57, 60, 64, 65, 68, 1942], "anchor": [8, 56, 1477, 1478, 1594, 1595, 1869, 1955], "hackabl": 8, "todai": [8, 46, 49, 54, 941, 1918, 1944], "evolv": [8, 1895, 1910, 1911], "ai": [8, 1912, 1928], "adopt": [9, 24, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 1910], "hierarch": [9, 1932], "pull": [9, 10, 15, 56, 140, 882, 1912, 1915, 1945], "request": [9, 10, 11, 24, 26, 43, 678, 850, 868, 869, 1025, 1268, 1290, 1300, 1545, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1866, 1886, 1890, 1891, 1893, 1894, 1912, 1915, 1923, 1924, 1925, 1927, 1928, 1944, 1958], "overseen": 9, "catch": [9, 34, 1868, 1891, 1897, 1899, 1947], "maker": 9, "strong": 9, "toward": [9, 57, 1063, 1156, 1157, 1268, 1333, 1609, 1690, 1731, 1739, 1740, 1916], "philosophi": [9, 52, 1867], "beyond": [9, 22, 1314, 1365, 1668, 1669, 1678, 1738, 1898, 1902, 1910, 1944], "encourag": [9, 32, 1886, 1918, 1927, 1934], "propos": [9, 1665, 1685, 1686, 1878, 1899, 1914, 1924], "review": [9, 10, 22, 1915, 1948, 1949], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 56], "codebas": [9, 1896], "strictli": [9, 21, 140, 181, 198, 882, 925, 1157, 1195, 1199, 1429, 1891, 1928], "compani": 9, "bui": 9, "addition": [9, 21, 22, 24, 30, 45, 48, 140, 502, 606, 882, 1125, 1129, 1130, 1199, 1259, 1337, 1392, 1393, 1394, 1790, 1898, 1935, 1958], "membership": [9, 32, 40, 41, 1872], "That": [9, 12, 32, 39, 42, 45, 50, 56, 952, 1192, 1266, 1282, 1848, 1879, 1896, 1897, 1898, 1907, 1915, 1923, 1946], "seat": 9, "reserv": [9, 38, 1025, 1872, 1894, 1902, 1958], "emploi": [9, 1681, 1902, 1915, 1916], "directori": [9, 14, 24, 26, 39, 71, 1663, 1866, 1880, 1901, 1915, 1917, 1932, 1946, 1956], "procedur": [9, 30, 848, 1211, 1212, 1268, 1788, 1923, 1956], "disput": 9, "made": [9, 26, 28, 29, 42, 45, 56, 71, 888, 898, 1195, 1429, 1474, 1476, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1728, 1870, 1878, 1891, 1908, 1915, 1932, 1934, 1941, 1944, 1949, 1956, 1957], "public": [9, 10, 1125, 1896, 1957], "relev": [9, 25, 32, 41, 55, 669, 1259, 1401, 1872, 1890, 1891, 1915, 1918, 1946, 1947, 1948, 1949], "resolut": [9, 1441, 1442, 1493, 1528, 1569, 1570, 1834, 1872, 1915, 1959], "conclus": 9, "publicli": [9, 1957], "vision": [9, 1205, 1365, 1511, 1866, 1867, 1948], "roadmap": [9, 10], "parti": [9, 41, 1866, 1867, 1868, 1894, 1897, 1902, 1915], "triag": [9, 10], "meet": [9, 10, 12, 40, 952, 1225, 1894, 1946], "Their": [9, 1060, 1896, 1945], "articul": 9, "cohes": 9, "negoti": [9, 1923], "contenti": 9, "broad": [9, 1902], "stakehold": 9, "power": [9, 12, 40, 1031, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1111, 1219, 1249, 1263, 1397, 1398, 1549, 1550, 1617, 1650, 1665, 1694, 1708, 1732, 1853, 1872, 1894, 1927], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 30, 48, 1297, 1871, 1873, 1890, 1891, 1914, 1918, 1930, 1938, 1940, 1944], "merit": 9, "demonstr": [9, 42, 45, 56, 57, 64, 65, 1352, 1868, 1902, 1907, 1910, 1916, 1923, 1943, 1946, 1948, 1954], "expertis": 9, "continu": [9, 21, 24, 30, 44, 48, 56, 392, 597, 808, 891, 1148, 1231, 1232, 1259, 1351, 1352, 1609, 1872, 1878, 1891, 1907, 1910, 1917, 1935, 1942, 1943, 1946, 1949], "light": [9, 1932], "mainten": [9, 41, 42], "emeritu": [9, 10], "inact": [9, 1025, 1894, 1958], "contact": 9, "item": [9, 21, 26, 45, 57, 66, 67, 572, 573, 574, 578, 781, 782, 783, 803, 804, 805, 806, 1195, 1365, 1429, 1430, 1439, 1621, 1760, 1866, 1868, 1869, 1870, 1871, 1884, 1894, 1912, 1913, 1915, 1923, 1932, 1933, 1941, 1944, 1945, 1949, 1951], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 21, 30, 45, 56, 78, 392, 460, 534, 724, 846, 850, 852, 897, 910, 912, 919, 932, 933, 934, 1084, 1085, 1086, 1087, 1088, 1096, 1098, 1102, 1104, 1121, 1131, 1132, 1135, 1152, 1153, 1187, 1190, 1195, 1198, 1225, 1226, 1237, 1239, 1250, 1253, 1254, 1268, 1288, 1303, 1323, 1328, 1329, 1346, 1357, 1358, 1359, 1364, 1365, 1366, 1373, 1383, 1390, 1429, 1435, 1465, 1472, 1477, 1478, 1493, 1501, 1520, 1525, 1528, 1594, 1595, 1603, 1604, 1605, 1738, 1740, 1791, 1793, 1837, 1838, 1839, 1840, 1847, 1866, 1869, 1884, 1885, 1896, 1897, 1899, 1910, 1912, 1913, 1916, 1922, 1927, 1928, 1934, 1946, 1957, 1959], "neg": [9, 11, 14, 21, 24, 30, 43, 56, 78, 430, 432, 447, 650, 651, 687, 744, 769, 912, 917, 955, 958, 974, 990, 996, 997, 1025, 1037, 1084, 1085, 1086, 1087, 1088, 1089, 1103, 1104, 1105, 1111, 1121, 1185, 1187, 1189, 1249, 1276, 1288, 1310, 1311, 1319, 1323, 1328, 1329, 1337, 1346, 1374, 1383, 1415, 1422, 1423, 1424, 1432, 1436, 1438, 1443, 1460, 1477, 1478, 1521, 1525, 1528, 1530, 1539, 1543, 1552, 1553, 1554, 1563, 1571, 1594, 1595, 1597, 1704, 1705, 1736, 1740, 1775, 1777, 1780, 1792, 1829, 1837, 1838, 1839, 1840, 1847, 1868, 1869, 1884, 1886, 1889, 1891, 1896, 1897, 1912, 1913, 1922, 1927, 1928, 1944, 1946, 1951], "interact": [9, 15, 21, 29, 56, 851, 972, 1005, 1170, 1872, 1895, 1896, 1915, 1918, 1932, 1941, 1946, 1950, 1958], "final": [9, 24, 26, 28, 30, 32, 41, 45, 46, 48, 52, 53, 675, 678, 679, 749, 909, 927, 940, 1068, 1107, 1125, 1148, 1267, 1285, 1290, 1381, 1383, 1399, 1444, 1457, 1600, 1791, 1834, 1868, 1870, 1871, 1872, 1884, 1896, 1899, 1902, 1905, 1907, 1909, 1910, 1912, 1915, 1924, 1925, 1941, 1943, 1944, 1956], "declin": 9, "conflict": [9, 22, 42, 45, 1915], "lack": [9, 11, 1231, 1232, 1259], "unfit": 9, "conduct": [9, 1609, 1701, 1814, 1923], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 906, 1869, 1915], "letter": [9, 1068], "befit": 9, "candidaci": 9, "behind": [9, 1867, 1907, 1924, 1945], "75": [9, 1156, 1417, 1528, 1546, 1665, 1712, 1869, 1928], "choos": [9, 15, 56, 881, 906, 994, 1241, 1254, 1259, 1345, 1889, 1890, 1893, 1915, 1919, 1932], "unforeseen": 9, "circumst": [9, 41, 941, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1578, 1894], "perman": [9, 56, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639, 1891, 1925], "unavail": [9, 1870], "rank": [9, 21, 22, 24, 25, 26, 28, 29, 30, 32, 39, 41, 42, 44, 46, 48, 57, 65, 1241, 1242, 1243, 1250, 1285, 1421, 1468, 1609, 1621, 1701, 1814, 1869, 1895, 1904, 1912, 1916, 1923, 1924, 1944, 1956], "elect": 9, "invit": [9, 1866], "convinc": 9, "approach": [9, 22, 24, 56, 77, 929, 1136, 1755, 1788, 1859, 1868, 1883, 1886, 1894, 1896, 1899, 1909, 1910, 1918, 1923, 1946], "interview": 9, "talk": [9, 43, 1896, 1901], "gather": [9, 24, 41, 48, 502, 1824, 1848, 1869, 1896, 1898, 1901, 1913, 1915, 1951], "read": [9, 12, 18, 21, 24, 26, 31, 32, 34, 41, 42, 46, 48, 52, 56, 437, 952, 1027, 1051, 1119, 1120, 1121, 1203, 1267, 1695, 1867, 1884, 1885, 1891, 1892, 1894, 1895, 1897, 1901, 1905, 1909, 1915, 1918, 1923, 1941, 1943, 1946, 1948, 1949], "attend": [9, 724, 1435, 1472], "confer": [9, 1383], "pipelin": [9, 56, 1867, 1923, 1946], "world": [9, 24, 28, 32, 39, 41, 42, 48, 1468, 1609, 1891, 1915, 1918, 1943, 1944], "cover": [9, 46, 49, 56, 57, 1042, 1068, 1422, 1552, 1553, 1554, 1871, 1873, 1885, 1891, 1896, 1899, 1901, 1902, 1923, 1943, 1949, 1950], "push": [9, 33, 1030, 1136, 1261, 1859, 1917, 1949], "codeown": 9, "notifi": [9, 25, 42, 1925], "expert": 9, "strongli": [9, 24, 32, 42, 1368, 1369, 1370, 1374, 1809, 1866], "failur": [9, 24, 30, 32, 33, 34, 38, 39, 40, 41, 44, 669, 897, 898, 941, 1125, 1211, 1212, 1314, 1871, 1877, 1883, 1910, 1916, 1923, 1925, 1934, 1946, 1949, 1956], "revert": [9, 30, 48, 1465, 1586, 1925], "substanti": [9, 22, 1894, 1941], "syntact": [9, 34, 56], "establish": [9, 24, 41, 1891], "seri": [9, 56, 1352, 1392, 1906, 1912, 1941, 1952, 1957], "lf": 9, "llc": 9, "guidelin": [9, 1632, 1904, 1909, 1915, 1918, 1919], "trademark": 9, "www": [9, 1352, 1478, 1932], "lfproject": 9, "acknowledg": [9, 24, 1867, 1925, 1927], "copyright": [9, 1956], "holder": 9, "independ": [9, 21, 24, 41, 48, 55, 143, 144, 768, 774, 890, 891, 892, 893, 894, 895, 974, 1148, 1157, 1254, 1367, 1368, 1369, 1370, 1374, 1514, 1515, 1516, 1521, 1539, 1597, 1653, 1711, 1867, 1868, 1890, 1891, 1894, 1907, 1915], "authorship": 9, "claus": [9, 1898], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 22, 30, 420, 468, 747, 1140, 1216, 1232, 1235, 1254, 1296, 1326, 1395, 1435, 1616, 1699, 1701, 1711, 1712, 1814, 1868, 1869, 1899, 1906, 1912, 1927, 1928, 1945], "partli": [9, 1871], "domain": [9, 30, 34, 673, 815, 874, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1096, 1098, 1099, 1100, 1101, 1148, 1886, 1912, 1918], "absolut": [9, 11, 14, 56, 82, 670, 683, 897, 898, 1116, 1184, 1224, 1229, 1250, 1253, 1255, 1276, 1390, 1396, 1460, 1537, 1541, 1582, 1626, 1627, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1656, 1664, 1705, 1731, 1763, 1869, 1902, 1912, 1913, 1928, 1933, 1934], "health": 9, "success": [9, 26, 30, 32, 38, 56, 1226, 1237, 1239, 1285, 1628, 1795, 1796, 1797, 1799, 1800, 1894, 1902, 1912, 1927, 1956], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 1912], "clearli": [9, 1878, 1915], "sponsorship": 9, "foundat": [9, 1910], "ptf": 9, "minor": [9, 996, 1226, 1242, 1927], "committ": 9, "prior": [9, 22, 24, 26, 32, 69, 71, 889, 1268, 1474, 1476, 1578, 1632, 1892, 1894, 1896, 1914, 1918, 1941, 1946], "walkthrough": [9, 1890], "facebook": 9, "infrastructur": [9, 33, 1915, 1944], "employe": 9, "expand": [9, 30, 245, 482, 867, 889, 897, 898, 924, 1248, 1249, 1297, 1435, 1479, 1572, 1844, 1866, 1869, 1877, 1884, 1885, 1892, 1894, 1896, 1897, 1910, 1912, 1913, 1915, 1916, 1931, 1951], "deliv": [9, 1917], "offici": [9, 24, 45, 77, 1337, 1918], "showcas": [9, 12, 1425, 1894, 1904], "whenev": [9, 45, 869, 1616, 1617, 1881, 1883, 1896, 1921, 1924, 1925, 1945, 1949, 1957], "fix": [10, 18, 21, 24, 29, 30, 32, 41, 45, 50, 53, 56, 72, 73, 252, 784, 790, 1125, 1209, 1241, 1372, 1373, 1447, 1519, 1520, 1539, 1609, 1868, 1869, 1881, 1889, 1890, 1894, 1895, 1898, 1904, 1908, 1910, 1912, 1913, 1914, 1941, 1946, 1954, 1956], "plu": [10, 14, 26, 890, 1121, 1242, 1927], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1268], "ezyang": [10, 1896, 1931], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1701, 1814], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": [10, 1896], "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 25, 28, 30, 48, 1669, 1670, 1672, 1678, 1682, 1914], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 1956], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 1943], "ansel": [10, 1943], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 12, 1326, 1712, 1894, 1946], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 30], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1268], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1148], "robi": 10, "robieta": 10, "xu": [10, 48], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 24, 48, 56, 1798, 1870, 1885, 1912, 1941, 1952], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1851], "sebastian": 10, "messmer": 10, "smessmer": 10, "bowen": 10, "bao": [10, 1953], "bowenbao": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1337], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 782], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 1917, 1946, 1956], "johnson": 10, "peterjc123": [10, 1908], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 30], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "hirsch": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 12, 26, 46, 49, 53, 54, 56, 57, 64, 65, 309, 952, 1193, 1196, 1653, 1809, 1872, 1879, 1886, 1891, 1896, 1918, 1944, 1946, 1956, 1957], "bj": 11, "j": [11, 24, 30, 303, 305, 311, 502, 504, 506, 681, 884, 890, 892, 949, 1068, 1084, 1085, 1092, 1098, 1102, 1103, 1137, 1192, 1195, 1231, 1232, 1243, 1259, 1268, 1275, 1283, 1285, 1290, 1368, 1369, 1370, 1374, 1429, 1432, 1514, 1515, 1516, 1521, 1705, 1712, 1792, 1809, 1813, 1856, 1870, 1889, 1891, 1896, 1899, 1907, 1932], "imaginari": [11, 301, 897, 949, 956, 1089, 1091, 1099, 1100, 1101, 1165, 1185, 1187, 1188, 1191, 1809, 1857, 1858, 1872, 1891, 1899, 1934], "satisfi": [11, 19, 22, 30, 46, 606, 683, 749, 783, 891, 897, 898, 925, 1084, 1085, 1087, 1089, 1091, 1099, 1100, 1101, 1116, 1209, 1235, 1261, 1262, 1337, 1352, 1376, 1381, 1399, 1444, 1632, 1649, 1731, 1747, 1788, 1809, 1871, 1891, 1894, 1899, 1914, 1916, 1927, 1930, 1943], "equat": [11, 934, 1068, 1140, 1152, 1239, 1240, 1241, 1242, 1243, 1245, 1256, 1258, 1345, 1773, 1836, 1869, 1891, 1899, 1914, 1928], "frequent": [11, 26, 1337, 1867, 1894, 1904, 1905, 1907, 1927, 1938, 1948], "mathemat": [11, 56, 890, 891, 892, 893, 894, 895, 1116, 1148, 1345, 1347, 1348, 1349, 1392, 1393, 1394, 1395, 1468, 1547, 1585, 1609, 1656, 1731, 1790, 1791, 1871, 1891, 1905, 1928, 1935], "topic": [11, 45, 1901, 1902, 1943], "tradition": 11, "torchaudio": [11, 1867], "mimick": 11, "assembli": 11, "lapack": [11, 1140, 1226, 1237, 1238, 1239, 1241, 1244, 1257, 1711, 1813], "cubla": [11, 986, 1848, 1906, 1941], "spectral": [11, 1215, 1231, 1259, 1617, 1640, 1650, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1905], "fft": [11, 1867, 1894], "4621": 11, "0303j": 11, "2438": [11, 1241, 1519], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 165, 949, 1111, 1120, 1174, 1195, 1225, 1226, 1231, 1232, 1233, 1234, 1235, 1236, 1357, 1358, 1359, 1429, 1503, 1504, 1505, 1662, 1705, 1752, 1929, 1930, 1933, 1934, 1946], "complex64": [11, 168, 933, 934, 949, 1085, 1087, 1088, 1093, 1094, 1120, 1174, 1227, 1250, 1253, 1357, 1358, 1359, 1503, 1504, 1505, 1662, 1705, 1752, 1929, 1930, 1933, 1934, 1946], "apart": [11, 1871, 1891], "linspac": [11, 912, 936, 1089, 1099, 1297, 1869, 1873, 1913], "logspac": [11, 1869, 1873, 1913], "arang": [11, 21, 24, 31, 502, 596, 680, 681, 682, 686, 688, 875, 876, 877, 923, 935, 939, 1051, 1066, 1084, 1088, 1096, 1102, 1104, 1108, 1109, 1110, 1111, 1118, 1119, 1158, 1216, 1217, 1221, 1224, 1248, 1251, 1252, 1265, 1329, 1450, 1451, 1452, 1453, 1454, 1481, 1482, 1483, 1565, 1656, 1657, 1700, 1708, 1712, 1727, 1734, 1739, 1760, 1793, 1801, 1812, 1828, 1829, 1831, 1832, 1834, 1860, 1869, 1878, 1886, 1907, 1913, 1928, 1932, 1933, 1941, 1948, 1951], "switch": [11, 21, 51, 55, 56, 69, 1238, 1239, 1240, 1369, 1528, 1566, 1613, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1743, 1848, 1883, 1891, 1894, 1902, 1904, 1914, 1947], "view_as_r": [11, 1809, 1869, 1913, 1931], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 1869, 1884, 1886, 1927], "2250": [11, 1252, 1656], "7546": 11, "1722": 11, "x1": [11, 45, 929, 1243, 1364, 1421, 1477, 1478, 1510, 1567, 1869, 1946, 1951], "3j": [11, 24, 687, 953, 954, 1735, 1736, 1752], "4j": [11, 24, 1763], "0000": [11, 30, 502, 854, 890, 892, 912, 932, 936, 956, 1049, 1055, 1056, 1057, 1082, 1083, 1086, 1088, 1089, 1095, 1096, 1099, 1104, 1116, 1117, 1118, 1148, 1154, 1157, 1161, 1221, 1224, 1225, 1226, 1238, 1239, 1242, 1247, 1248, 1252, 1254, 1266, 1282, 1324, 1372, 1373, 1481, 1482, 1484, 1485, 1519, 1520, 1656, 1705, 1711, 1716, 1717, 1718, 1727, 1731, 1732, 1756, 1763, 1765, 1766, 1768, 1771, 1772, 1773, 1774, 1791, 1836, 1837, 1839, 1862, 1878, 1886, 1894, 1927, 1928, 1933], "6569": [11, 1161], "5708": [11, 1052], "7854": 11, "complex_tensor": 11, "pt": [11, 22, 48, 1200, 1203, 1206, 1213, 1267, 1743, 1868, 1902, 1907, 1915, 1948], "conjug": [11, 320, 447, 681, 897, 933, 934, 953, 954, 1175, 1225, 1226, 1232, 1235, 1238, 1245, 1259, 1264, 1268, 1616, 1699, 1735, 1809, 1813, 1856, 1899, 1914, 1933], "wirting": [11, 897, 1899], "deriv": [11, 24, 48, 140, 727, 728, 729, 730, 731, 732, 770, 789, 813, 882, 896, 897, 898, 1131, 1135, 1148, 1192, 1253, 1285, 1476, 1600, 1867, 1870, 1896, 1897, 1899, 1923, 1927, 1928], "steepest": [11, 1891], "descent": [11, 30, 1665, 1681, 1685, 1686, 1891, 1902], "box": [11, 24, 29, 42, 56, 1136, 1859, 1885, 1891, 1895, 1910, 1942, 1944, 1947, 1948], "fulli": [11, 14, 21, 24, 28, 29, 45, 52, 56, 669, 1031, 1195, 1425, 1426, 1427, 1429, 1871, 1877, 1896, 1915, 1918, 1944, 1949, 1951], "quantiz": [11, 56, 209, 316, 328, 461, 462, 463, 464, 465, 467, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 906, 1053, 1082, 1083, 1713, 1714, 1715, 1716, 1717, 1848, 1867, 1913, 1930, 1933, 1934, 1936, 1937], "pred": [12, 57, 60, 64, 65, 952, 1395, 1609, 1903, 1914, 1923, 1951], "union": [12, 14, 21, 26, 29, 32, 35, 39, 42, 45, 46, 48, 56, 952, 1207, 1267, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1377, 1378, 1397, 1398, 1422, 1423, 1424, 1429, 1472, 1474, 1476, 1479, 1621, 1662, 1743, 1851, 1869, 1870, 1871, 1907, 1910, 1912, 1915, 1929, 1934, 1937], "true_fn": [12, 46, 57, 60, 64, 65, 952], "false_fn": [12, 46, 57, 60, 64, 65, 952], "operand": [12, 57, 64, 65, 917, 952, 1068, 1871, 1872, 1896, 1927, 1930], "Its": [12, 24, 46, 56, 960, 983, 1195, 1243, 1261, 1262, 1287, 1429, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1856, 1871, 1895], "uniqu": [12, 24, 32, 38, 41, 42, 43, 502, 506, 1186, 1231, 1232, 1236, 1242, 1243, 1245, 1254, 1256, 1258, 1259, 1296, 1303, 1790, 1813, 1846, 1866, 1868, 1877, 1880, 1896, 1915, 1917, 1923, 1924, 1925, 1927, 1932, 1941, 1958], "aibilti": 12, "predic": [12, 57, 62, 64, 65], "unlock": [12, 1878], "flexibilti": 12, "architectur": [12, 56, 995, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1365, 1472, 1511, 1756, 1894, 1905, 1918, 1927, 1940], "prototyp": [12, 18, 24, 45, 669, 890, 892, 896, 897, 898, 952, 1205, 1476, 1867, 1877, 1878, 1881, 1885, 1886, 1902, 1907, 1921, 1923, 1927, 1930, 1935, 1936, 1937], "classif": [12, 952, 1346, 1352, 1365, 1432, 1434, 1436, 1461, 1512, 1867, 1889, 1919], "co": [12, 45, 46, 54, 57, 61, 62, 64, 65, 66, 67, 191, 624, 625, 672, 919, 941, 952, 1011, 1126, 1129, 1130, 1135, 1152, 1153, 1247, 1363, 1364, 1367, 1685, 1686, 1693, 1705, 1767, 1768, 1771, 1772, 1773, 1774, 1776, 1795, 1796, 1797, 1799, 1800, 1869, 1884, 1913, 1914, 1927, 1932, 1934, 1942, 1948, 1951], "sin": [12, 14, 45, 46, 53, 54, 57, 61, 62, 64, 65, 66, 67, 521, 658, 659, 870, 941, 952, 1011, 1126, 1128, 1129, 1130, 1132, 1135, 1153, 1247, 1297, 1705, 1768, 1774, 1869, 1884, 1891, 1913, 1927, 1928, 1932, 1942, 1946, 1948, 1951, 1954], "dynamicshapecondpred": 12, "dyn_shape_mod": 12, "eagerli": [12, 1000, 1006, 1894, 1944, 1946], "vari": [12, 45, 808, 1201, 1460, 1642, 1769, 1881, 1904, 1905, 1914, 1918, 1919, 1927, 1944, 1945, 1946, 1956, 1958], "inp2": 12, "assert": [12, 21, 22, 30, 45, 50, 52, 53, 54, 56, 57, 63, 65, 613, 900, 902, 903, 1126, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1193, 1198, 1199, 1205, 1578, 1662, 1859, 1870, 1872, 1896, 1897, 1902, 1907, 1915, 1918, 1934, 1944, 1955, 1956], "export": [12, 15, 18, 24, 31, 44, 57, 59, 62, 64, 65, 71, 669, 905, 952, 971, 1198, 1200, 1201, 1207, 1213, 1643, 1644, 1663, 1664, 1867, 1868, 1870, 1871, 1896, 1913, 1917, 1923, 1944, 1954, 1955], "deploy": [12, 32, 41, 45, 1867, 1947], "dim_batch": 12, "dim": [12, 24, 29, 30, 45, 53, 54, 56, 57, 59, 64, 65, 102, 104, 105, 106, 108, 124, 125, 126, 174, 194, 197, 200, 201, 202, 203, 204, 205, 219, 223, 250, 254, 271, 302, 303, 304, 305, 306, 307, 311, 312, 344, 370, 382, 397, 399, 400, 401, 404, 418, 419, 420, 421, 425, 426, 442, 451, 459, 468, 480, 481, 483, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 526, 527, 530, 531, 533, 536, 541, 542, 544, 549, 554, 562, 567, 568, 572, 573, 574, 576, 577, 579, 594, 595, 598, 599, 600, 601, 604, 606, 682, 684, 685, 686, 688, 863, 864, 865, 892, 893, 895, 928, 935, 950, 952, 959, 968, 983, 985, 1047, 1048, 1049, 1050, 1051, 1060, 1066, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1108, 1126, 1136, 1137, 1148, 1158, 1166, 1167, 1168, 1169, 1172, 1217, 1227, 1228, 1248, 1252, 1262, 1264, 1265, 1275, 1283, 1293, 1295, 1296, 1298, 1301, 1303, 1317, 1324, 1325, 1326, 1327, 1328, 1329, 1337, 1364, 1365, 1366, 1369, 1373, 1375, 1380, 1395, 1400, 1419, 1435, 1436, 1437, 1462, 1464, 1476, 1478, 1479, 1510, 1511, 1527, 1530, 1539, 1547, 1552, 1553, 1554, 1563, 1564, 1566, 1568, 1572, 1578, 1584, 1585, 1593, 1609, 1617, 1623, 1627, 1629, 1636, 1637, 1650, 1653, 1656, 1702, 1709, 1712, 1732, 1733, 1738, 1739, 1744, 1745, 1746, 1749, 1750, 1781, 1784, 1785, 1789, 1792, 1794, 1801, 1804, 1806, 1807, 1808, 1809, 1812, 1824, 1828, 1829, 1830, 1831, 1834, 1835, 1843, 1844, 1845, 1846, 1847, 1854, 1855, 1859, 1860, 1867, 1868, 1869, 1885, 1886, 1897, 1898, 1907, 1910, 1912, 1913, 1927, 1928, 1930, 1936, 1944, 1951], "batch": [12, 22, 24, 30, 42, 44, 45, 48, 49, 50, 53, 54, 56, 57, 64, 65, 572, 573, 574, 576, 577, 675, 691, 692, 693, 694, 695, 696, 724, 749, 768, 774, 896, 897, 898, 909, 921, 922, 929, 932, 933, 934, 941, 968, 1056, 1058, 1068, 1129, 1130, 1136, 1192, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1268, 1276, 1285, 1286, 1290, 1345, 1346, 1347, 1348, 1349, 1352, 1357, 1358, 1363, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1381, 1382, 1383, 1384, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1399, 1400, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1420, 1421, 1432, 1433, 1434, 1435, 1436, 1438, 1441, 1442, 1443, 1444, 1446, 1460, 1461, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1493, 1498, 1500, 1501, 1511, 1512, 1514, 1515, 1516, 1519, 1520, 1521, 1522, 1525, 1538, 1539, 1540, 1563, 1571, 1578, 1596, 1597, 1600, 1609, 1616, 1642, 1643, 1645, 1646, 1648, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1686, 1687, 1693, 1699, 1701, 1711, 1715, 1795, 1796, 1797, 1799, 1800, 1804, 1809, 1813, 1814, 1833, 1836, 1837, 1839, 1856, 1859, 1867, 1884, 1885, 1886, 1890, 1894, 1897, 1898, 1902, 1904, 1916, 1918, 1923, 1927, 1932, 1933, 1944, 1945, 1946, 1950, 1954, 1956], "min": [12, 21, 24, 34, 41, 45, 56, 57, 66, 67, 106, 175, 176, 177, 178, 290, 684, 685, 686, 747, 759, 760, 769, 791, 808, 809, 810, 811, 814, 864, 936, 937, 1011, 1048, 1082, 1083, 1155, 1227, 1241, 1242, 1248, 1252, 1254, 1259, 1265, 1285, 1319, 1351, 1388, 1415, 1417, 1437, 1449, 1456, 1502, 1539, 1543, 1572, 1574, 1579, 1597, 1680, 1685, 1686, 1695, 1699, 1701, 1711, 1813, 1837, 1838, 1839, 1840, 1869, 1881, 1884, 1912, 1913, 1918, 1921, 1923, 1946, 1951, 1959], "ep": [12, 45, 701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 738, 740, 741, 742, 743, 784, 808, 809, 810, 811, 814, 815, 897, 898, 1205, 1281, 1333, 1347, 1348, 1349, 1364, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1438, 1443, 1468, 1472, 1474, 1476, 1477, 1498, 1510, 1525, 1529, 1530, 1538, 1542, 1564, 1567, 1571, 1594, 1617, 1650, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1695, 1715, 1869, 1896, 1899, 1928, 1951, 1959], "dynamic_shap": [12, 45, 1910, 1953], "graphmodul": [12, 45, 46, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 848, 849, 850, 851, 1918, 1937, 1942, 1943, 1945, 1949, 1955, 1956], "arg0_1": [12, 45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "f32": [12, 45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "s0": [12, 45, 46, 57, 64, 65, 1944, 1956], "sym_siz": [12, 46, 57, 64, 65, 66, 67, 1913, 1951], "sym": [12, 57, 64, 65, 66, 67, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776], "gt": [12, 57, 64, 65, 286, 1149, 1869, 1884, 1899, 1913, 1951], "true_graph_0": [12, 46, 57, 60, 64, 65], "false_graph_0": [12, 46, 57, 60, 64, 65], "symbol": [12, 14, 20, 45, 46, 57, 59, 65, 69, 70, 73, 74, 77, 613, 806, 943, 1210, 1264, 1399, 1444, 1836, 1856, 1867, 1871, 1910, 1944, 1945, 1946], "sub": [12, 34, 48, 55, 57, 60, 64, 65, 551, 803, 850, 851, 1207, 1211, 1212, 1293, 1296, 1298, 1441, 1442, 1472, 1473, 1475, 1732, 1811, 1828, 1845, 1866, 1868, 1869, 1884, 1886, 1891, 1904, 1912, 1913, 1927, 1930, 1951, 1955], "exmapl": 12, "dependet": 12, "datadependentcondpredicact": 12, "sum_1": [12, 56, 1942, 1943], "b8": [12, 57, 60, 64], "flatten": [12, 22, 45, 46, 48, 56, 57, 63, 863, 864, 1057, 1157, 1252, 1265, 1480, 1656, 1664, 1712, 1728, 1733, 1738, 1824, 1844, 1845, 1846, 1869, 1884, 1885, 1889, 1910, 1912, 1913, 1920, 1931, 1944], "flat": [12, 1733, 1776, 1869, 1886, 1912, 1927], "_higher_order_op": 12, "condition": [12, 41, 952, 1757], "compil": [12, 14, 15, 45, 46, 48, 49, 56, 669, 952, 970, 995, 999, 1011, 1012, 1125, 1193, 1195, 1196, 1199, 1200, 1207, 1208, 1209, 1211, 1212, 1213, 1429, 1867, 1868, 1870, 1871, 1872, 1873, 1877, 1890, 1893, 1895, 1901, 1908, 1911, 1912, 1923, 1935, 1940, 1941, 1942, 1943, 1944, 1945, 1948, 1950, 1951, 1952, 1953], "constraint": [12, 24, 29, 45, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 783, 784, 891, 952, 1003, 1014, 1130, 1609, 1617, 1642, 1682, 1867, 1871, 1886, 1897, 1899, 1902, 1927, 1941, 1944], "met": [12, 606, 952, 1235, 1242, 1243, 1254, 1268, 1476, 1798], "true_branch": [12, 952], "false_branch": [12, 952], "consist": [12, 21, 24, 26, 29, 30, 41, 42, 45, 46, 56, 897, 932, 933, 934, 952, 1195, 1225, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1263, 1265, 1429, 1476, 1618, 1621, 1664, 1711, 1813, 1868, 1871, 1878, 1885, 1886, 1897, 1902, 1904, 1906, 1912, 1914, 1917, 1927, 1942, 1943, 1950, 1956], "aka": [12, 24, 46, 57, 64, 65, 906, 952, 1390, 1891, 1910, 1930, 1944], "add_": [12, 24, 45, 51, 53, 211, 477, 952, 1125, 1869, 1884, 1892, 1927], "tempor": [12, 952, 1347, 1349, 1352, 1468, 1481, 1512, 1539, 1597], "pytre": [12, 56, 57, 952, 1897], "parallel_info": [13, 1867, 1893], "cppextens": [14, 1867], "setuptool": 14, "bare": 14, "buildextens": [14, 1867], "ext_modul": 14, "extra_compile_arg": [14, 1908], "cmdclass": 14, "build_ext": 14, "cudaextens": [14, 1867], "cuda_extens": 14, "extension_kernel": 14, "cu": 14, "cxx": 14, "nvcc": [14, 999, 1956], "o2": 14, "arch": 14, "card": [14, 1908], "visibl": [14, 24, 26, 38, 46, 993, 1038, 1430, 1431, 1439, 1440, 1944, 1947], "ptx": 14, "road": 14, "recompil": [14, 56, 669, 941, 1209, 1877, 1900, 1943, 1944, 1949, 1952], "cc": [14, 24, 1894], "newest": [14, 52, 1909], "torch_cuda_arch_list": 14, "6": [14, 18, 21, 22, 24, 30, 39, 56, 57, 58, 62, 63, 64, 65, 66, 67, 303, 305, 307, 311, 391, 392, 460, 476, 488, 502, 506, 549, 596, 674, 675, 680, 686, 730, 731, 732, 734, 735, 747, 750, 752, 754, 890, 891, 893, 894, 895, 912, 920, 925, 931, 935, 939, 960, 980, 1027, 1031, 1045, 1046, 1047, 1051, 1052, 1063, 1066, 1067, 1084, 1092, 1097, 1098, 1102, 1103, 1105, 1107, 1108, 1111, 1118, 1148, 1158, 1160, 1161, 1184, 1206, 1217, 1221, 1232, 1248, 1252, 1253, 1254, 1261, 1262, 1266, 1268, 1297, 1301, 1327, 1328, 1329, 1342, 1353, 1356, 1361, 1364, 1372, 1373, 1382, 1383, 1384, 1386, 1387, 1425, 1426, 1430, 1438, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1472, 1473, 1475, 1477, 1480, 1486, 1495, 1525, 1532, 1533, 1565, 1567, 1574, 1600, 1644, 1645, 1647, 1649, 1655, 1656, 1657, 1666, 1680, 1700, 1701, 1704, 1711, 1712, 1718, 1719, 1722, 1728, 1738, 1739, 1743, 1747, 1760, 1781, 1785, 1790, 1793, 1795, 1796, 1801, 1812, 1814, 1815, 1816, 1823, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1839, 1843, 1848, 1860, 1861, 1868, 1871, 1872, 1878, 1886, 1889, 1891, 1896, 1897, 1902, 1907, 1912, 1923, 1924, 1927, 1928, 1930, 1933, 1934, 1943, 1946, 1951, 1953, 1956, 1957], "build_my_extens": 14, "7": [14, 21, 22, 24, 30, 56, 57, 62, 223, 250, 303, 305, 307, 311, 391, 392, 460, 502, 549, 596, 606, 674, 686, 734, 735, 893, 895, 917, 920, 925, 931, 933, 935, 939, 1051, 1063, 1065, 1066, 1069, 1084, 1107, 1108, 1111, 1114, 1118, 1148, 1158, 1172, 1217, 1221, 1231, 1236, 1238, 1239, 1242, 1243, 1247, 1248, 1252, 1259, 1327, 1328, 1329, 1335, 1336, 1339, 1340, 1342, 1353, 1372, 1417, 1425, 1426, 1450, 1451, 1452, 1453, 1454, 1477, 1480, 1495, 1566, 1634, 1639, 1649, 1656, 1671, 1718, 1722, 1728, 1738, 1739, 1740, 1747, 1760, 1763, 1765, 1776, 1777, 1785, 1793, 1795, 1796, 1801, 1813, 1815, 1816, 1823, 1828, 1829, 1832, 1834, 1843, 1856, 1860, 1868, 1872, 1878, 1885, 1886, 1892, 1894, 1896, 1905, 1907, 1912, 1913, 1918, 1927, 1930, 1931, 1932, 1933, 1934, 1948, 1953], "older": [14, 1894, 1907, 1915], "modestli": [14, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682], "imag": [14, 21, 730, 731, 732, 850, 851, 949, 1335, 1339, 1340, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1376, 1377, 1378, 1393, 1401, 1436, 1441, 1442, 1463, 1480, 1482, 1483, 1493, 1504, 1505, 1507, 1508, 1522, 1523, 1528, 1539, 1596, 1597, 1736, 1867, 1869, 1886, 1899, 1913, 1916, 1918, 1931, 1932, 1944, 1946, 1947, 1951], "11": [14, 24, 311, 502, 669, 931, 935, 1014, 1066, 1158, 1216, 1252, 1266, 1282, 1337, 1353, 1378, 1426, 1524, 1656, 1657, 1663, 1785, 1828, 1860, 1868, 1872, 1878, 1885, 1894, 1896, 1907, 1908, 1912, 1913, 1927, 1928, 1943, 1956], "pars": [14, 24, 44, 904, 1871, 1915, 1923], "window": [14, 21, 24, 56, 341, 545, 910, 919, 1152, 1153, 1192, 1215, 1342, 1343, 1344, 1377, 1378, 1397, 1398, 1422, 1423, 1424, 1425, 1426, 1427, 1495, 1523, 1524, 1552, 1553, 1554, 1716, 1717, 1809, 1867, 1869, 1881, 1894, 1944], "workaround": [14, 21, 29, 56, 1199, 1866, 1906, 1912, 1918, 1946], "pure": [14, 15, 45, 53, 1198, 1868, 1896], "sigmoidalphablendforwardcuda": 14, "69460": 14, "facebookresearch": 14, "pytorch3d": 14, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 14, "relocat": 14, "link": [14, 15, 30, 56, 72, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1422, 1423, 1424, 1480, 1530, 1885, 1901, 1902, 1927], "rdc": 14, "dc": 14, "anymor": [14, 24, 48, 211], "dlto": 14, "dlink": 14, "protent": 14, "perf": [14, 669, 1918, 1949, 1950], "lib": [14, 1908], "nvshmem": 14, "ninja": [14, 1908], "dlink_librari": 14, "dlink_lib": 14, "std": [14, 32, 39, 78, 367, 443, 1082, 1083, 1114, 1115, 1116, 1657, 1705, 1731, 1770, 1775, 1808, 1846, 1869, 1884, 1889, 1894, 1901, 1908, 1913, 1951], "17": [14, 24, 674, 1192, 1248, 1426, 1785, 1868, 1912, 1913, 1927, 1946, 1956], "mix": [14, 22, 30, 45, 48, 1014, 1609, 1867, 1891, 1893, 1918, 1927, 1943, 1944, 1946], "use_ninja": 14, "greatli": [14, 56, 1894, 1944], "fallback": [14, 24, 41, 45, 51, 77, 1209, 1259, 1890, 1894, 1907, 1941, 1946, 1956], "distutil": 14, "max_job": 14, "extra_cflag": 14, "extra_cuda_cflag": 14, "extra_ldflag": 14, "extra_include_path": 14, "build_directori": 14, "with_cuda": [14, 1908], "is_python_modul": 14, "is_standalon": 14, "keep_intermedi": 14, "torch_extens": 14, "temporari": [14, 56, 812, 815, 1610, 1891, 1898, 1948], "torch_extensions_dir": 14, "subfold": [14, 1956], "o3": 14, "cuh": 14, "Such": [14, 21, 22, 45, 55, 1853, 1927], "lib64": 14, "cudart": [14, 1908], "fine": [14, 24, 26, 28, 31, 45, 847, 850, 1119, 1211, 1578, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1866, 1883, 1891, 1894, 1896, 1912, 1915, 1916, 1918, 1927, 1938, 1948, 1956], "cuda_hom": 14, "safest": 14, "pybind11": [14, 15, 1870], "linker": 14, "workspac": [14, 941], "header": [14, 39, 1908, 1934], "automat": [14, 22, 24, 41, 42, 45, 56, 76, 140, 578, 878, 880, 941, 1005, 1014, 1157, 1205, 1211, 1297, 1475, 1578, 1610, 1730, 1760, 1849, 1866, 1867, 1870, 1871, 1879, 1880, 1884, 1885, 1891, 1892, 1894, 1896, 1902, 1904, 1912, 1915, 1916, 1918, 1919, 1923, 1932, 1933, 1944, 1945, 1946, 1948, 1956], "construct": [14, 15, 21, 24, 26, 28, 29, 30, 41, 45, 46, 48, 50, 52, 53, 56, 57, 62, 63, 66, 67, 140, 437, 781, 782, 813, 867, 868, 882, 896, 949, 1055, 1071, 1136, 1157, 1195, 1207, 1211, 1212, 1219, 1226, 1266, 1267, 1282, 1297, 1372, 1373, 1429, 1519, 1600, 1609, 1611, 1612, 1642, 1649, 1701, 1705, 1752, 1788, 1795, 1796, 1797, 1798, 1799, 1800, 1814, 1827, 1830, 1859, 1867, 1868, 1881, 1894, 1895, 1902, 1904, 1907, 1910, 1915, 1918, 1923, 1925, 1930, 1932, 1933, 1934, 1946, 1949], "plain": [14, 1346, 1430, 1439, 1616, 1797, 1896, 1927, 1945], "standalon": [14, 40, 41, 42, 806, 1207, 1211, 1868, 1950], "torch_lib_path": 14, "load_inlin": [14, 1867], "cpp_sourc": 14, "cuda_sourc": 14, "with_pytorch_error_handl": 14, "use_pch": 14, "behav": [14, 15, 24, 55, 56, 303, 311, 482, 504, 506, 830, 1135, 1211, 1425, 1426, 1427, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1870, 1871, 1878, 1891, 1896, 1897, 1902, 1906, 1915, 1923, 1927], "exactli": [14, 22, 24, 30, 43, 46, 897, 898, 935, 981, 985, 1068, 1114, 1115, 1192, 1195, 1237, 1373, 1376, 1377, 1378, 1429, 1457, 1460, 1520, 1530, 1609, 1656, 1664, 1755, 1878, 1884, 1891, 1894, 1895, 1896, 1899, 1900, 1912, 1915, 1916, 1941, 1949], "filenam": [14, 21, 45, 56, 1194, 1203, 1206, 1866, 1869, 1880, 1891, 1915, 1929, 1932, 1948, 1958], "typic": [14, 21, 22, 24, 30, 31, 32, 34, 41, 42, 43, 46, 48, 56, 73, 960, 969, 1111, 1119, 1195, 1216, 1219, 1267, 1363, 1389, 1429, 1600, 1609, 1668, 1669, 1755, 1795, 1796, 1797, 1799, 1800, 1866, 1867, 1868, 1871, 1877, 1891, 1893, 1894, 1905, 1906, 1907, 1912, 1914, 1916, 1918, 1923, 1931, 1940, 1942, 1944, 1945, 1954, 1956, 1958, 1959], "inlin": [14, 45, 55, 57, 59, 63, 66, 67, 1011, 1195, 1199, 1211, 1893, 1946], "concaten": [14, 21, 24, 29, 892, 928, 939, 983, 1067, 1160, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1373, 1399, 1512, 1520, 1613, 1621, 1806, 1861, 1869, 1872, 1912, 1913, 1927], "furthermor": [14, 39, 52, 1231, 1232, 1259, 1285, 1367, 1884, 1885, 1891, 1906, 1921, 1923], "cuda_runtim": 14, "se": 14, "warn": [14, 18, 22, 24, 28, 74, 75, 77, 669, 890, 896, 931, 980, 1027, 1031, 1042, 1045, 1046, 1136, 1176, 1192, 1211, 1253, 1297, 1435, 1472, 1473, 1474, 1475, 1476, 1618, 1621, 1754, 1762, 1809, 1848, 1859, 1866, 1877, 1881, 1892, 1896, 1910, 1913, 1915, 1922, 1949, 1956], "macro": [14, 1900], "pybind": 14, "_safe_foo": 14, "redirect": [14, 32, 39, 1935], "obscur": 14, "sin_add": 14, "inline_extens": 14, "include_path": [14, 1867], "get_compiler_abi_compatibility_and_vers": [14, 1867], "abi": [14, 15], "alongsid": [14, 1195, 1429, 1896, 1949], "shell": 14, "torchvers": 14, "verify_ninja_avail": [14, 1867], "is_ninja_avail": [14, 1867], "embed": [15, 46, 56, 724, 735, 884, 1059, 1337, 1363, 1373, 1389, 1401, 1435, 1478, 1520, 1578, 1682, 1750, 1869, 1893, 1913, 1918, 1920, 1923, 1927, 1932, 1951], "modif": [15, 48, 56, 71, 211, 769, 886, 1120, 1121, 1195, 1429, 1609, 1891, 1896, 1902, 1915, 1918, 1946], "submodul": [15, 45, 46, 48, 56, 70, 780, 786, 803, 827, 828, 829, 847, 850, 851, 1134, 1195, 1199, 1201, 1206, 1207, 1366, 1429, 1430, 1431, 1457, 1607, 1868, 1870, 1871, 1879, 1902, 1907, 1915, 1918, 1923, 1937, 1942, 1955], "preprocess": [15, 45, 69, 485, 1195], "augment": [15, 1872, 1934], "walk": [15, 56, 1875, 1896, 1915, 1924, 1925, 1931, 1956], "interfac": [15, 22, 26, 31, 33, 38, 41, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 734, 735, 745, 750, 751, 752, 753, 754, 783, 1121, 1600, 1754, 1809, 1848, 1871, 1881, 1882, 1896, 1901, 1914, 1921, 1927, 1932, 1951], "opencv": [15, 1528, 1539], "struct": [15, 1135, 1136, 1859, 1879, 1901], "explain": [15, 24, 45, 1682, 1755, 1866, 1871, 1890, 1894, 1897, 1904, 1927, 1946, 1956], "reshap": [15, 24, 30, 487, 488, 502, 533, 606, 681, 939, 1051, 1066, 1067, 1107, 1158, 1216, 1248, 1252, 1261, 1262, 1265, 1329, 1376, 1450, 1451, 1452, 1453, 1454, 1480, 1617, 1650, 1656, 1793, 1794, 1801, 1828, 1829, 1834, 1860, 1861, 1869, 1878, 1885, 1886, 1912, 1913, 1920, 1931, 1932, 1951], "classat_1_1_tensor": 15, "tensor_index": 15, "crucial": [15, 1875, 1948, 1949, 1950], "cpp_autograd": 15, "workflow": [15, 1866, 1896, 1918, 1919, 1935, 1938, 1944, 1945, 1950, 1953], "undesir": [15, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1578, 1809, 1896], "overview": [15, 24, 38, 1609, 1867, 1878, 1883, 1891, 1899, 1902, 1911, 1916, 1918, 1923, 1938, 1939, 1943], "cpp_frontend": 15, "library_root": 15, "libtorch": 15, "linux": [15, 24, 1866], "gcc": 15, "pre": [15, 24, 28, 48, 56, 896, 903, 1195, 1429, 1604, 1606, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1684, 1690, 1866, 1868, 1871, 1879, 1891, 1893, 1894, 1902, 1910, 1912, 1916, 1933, 1945, 1946, 1952, 1956], "cxx11": 15, "facilit": [16, 25, 30, 53, 961, 962, 963, 964, 965, 966, 967, 972, 1056, 1752, 1866, 1868, 1871, 1906], "earli": [18, 22, 32, 55, 1368, 1369, 1370, 1374, 1867, 1918, 1919, 1936, 1937, 1945, 1949], "introduc": [18, 30, 53, 749, 1268, 1381, 1399, 1444, 1539, 1738, 1866, 1871, 1892, 1895, 1896, 1903, 1912, 1915, 1916, 1917, 1923, 1927, 1933, 1938, 1946, 1952, 1956], "race": [18, 24, 1891], "enable_cuda_sanit": 18, "torch_cuda_sanit": 18, "concurr": [18, 24, 28, 1893, 1894, 1904, 1923, 1924], "uniniti": [18, 434, 488, 1069, 1070, 1600, 1611, 1612, 1649, 1886, 1913], "overwrit": [18, 21, 24, 56, 1430, 1439, 1871, 1891, 1941], "commandlin": 18, "example_error": 18, "csan": 18, "pointer": [18, 129, 986, 1445, 1894, 1895, 1901, 1923, 1925, 1945], "139719969079296": 18, "94646435460352": 18, "_sanit": 18, "364": 18, "_handle_kernel_launch": 18, "stack_trac": [18, 46, 56], "stacksummari": 18, "extract": [18, 56, 825, 933, 934, 1372, 1376, 1480, 1519, 1596, 1910, 1917, 1923, 1937, 1940, 1942, 1943, 1946, 1947], "10000": [18, 22, 683, 1693, 1740, 1898, 1902, 1927, 1932, 1948], "420": 18, "_handle_memory_alloc": 18, "incorrectli": [18, 48, 972, 1113, 1947], "id": [18, 21, 24, 28, 32, 40, 41, 42, 48, 56, 763, 813, 969, 1004, 1468, 1554, 1593, 1609, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1871, 1901, 1912, 1913, 1915, 1922, 1923, 1924, 1929, 1949, 1953, 1956], "faulti": [18, 24], "schema": [18, 24, 26, 46, 75, 1868, 1869, 1871, 1875, 1912, 1951, 1955], "current_stream": [18, 971, 1867, 1894], "wait_stream": [18, 24, 972, 974, 1894], "default_stream": [18, 24, 1867], "suspect": [18, 1682, 1894, 1956], "cudnn": [19, 20, 749, 1205, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1381, 1399, 1444, 1445, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1578, 1755, 1867, 1869, 1894, 1905, 1906, 1950], "float16": [19, 22, 26, 48, 287, 675, 678, 749, 812, 815, 823, 839, 840, 847, 909, 921, 1120, 1177, 1195, 1290, 1300, 1357, 1358, 1359, 1360, 1361, 1362, 1381, 1382, 1399, 1400, 1416, 1429, 1444, 1539, 1578, 1668, 1669, 1740, 1851, 1890, 1902, 1918, 1920, 1927, 1929, 1930, 1933, 1934, 1959], "v100": [19, 749, 1381, 1399, 1444, 1894], "packedsequ": [19, 749, 1381, 1399, 1444, 1643, 1644, 1645, 1647], "rnn": [20, 723, 749, 750, 751, 752, 754, 847, 1381, 1382, 1399, 1400, 1445, 1446, 1610, 1619, 1642, 1873, 1898, 1902, 1920, 1932], "enforc": [20, 22, 55, 784, 879, 1195, 1399, 1429, 1444, 1871, 1902, 1931], "cuda_launch_block": [20, 1399, 1444, 1894], "colon": [20, 1399, 1444, 1923], "cublas_workspace_config": [20, 1399, 1444, 1848, 1894, 1906], "4096": [20, 1399, 1444, 1848, 1894, 1912], "heart": [21, 1949], "dataload": [21, 485, 1609, 1686, 1687, 1693, 1894, 1898, 1904, 1908, 1914, 1932], "batch_siz": [21, 30, 52, 54, 881, 1126, 1134, 1136, 1435, 1642, 1644, 1645, 1647, 1859, 1869, 1897, 1898, 1906, 1912, 1932], "shuffl": [21, 1867, 1932], "batch_sampl": 21, "num_work": [21, 32, 1906, 1908], "drop_last": 21, "timeout": [21, 24, 41, 1883, 1923], "worker_init_fn": [21, 1898, 1906], "prefetch_factor": 21, "persistent_work": 21, "__getitem__": [21, 1848], "__len__": [21, 56, 1869], "protocol": [21, 26, 31, 41, 43, 869, 1119, 1121, 1743, 1896, 1908, 1910, 1912, 1923, 1957], "possibli": [21, 41, 45, 48, 1195, 1211, 1238, 1243, 1429, 1609, 1868, 1875, 1906, 1915, 1945, 1958], "sampl": [21, 26, 30, 45, 49, 54, 56, 78, 143, 144, 367, 443, 470, 597, 768, 911, 960, 980, 1014, 1027, 1031, 1045, 1046, 1086, 1104, 1126, 1136, 1148, 1192, 1212, 1285, 1319, 1341, 1345, 1346, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1383, 1389, 1392, 1393, 1394, 1395, 1396, 1414, 1416, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1447, 1460, 1461, 1468, 1477, 1493, 1500, 1501, 1511, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1525, 1528, 1530, 1538, 1539, 1540, 1563, 1571, 1609, 1617, 1657, 1686, 1701, 1704, 1718, 1720, 1722, 1724, 1726, 1791, 1807, 1808, 1809, 1854, 1855, 1859, 1867, 1881, 1889, 1890, 1894, 1901, 1902, 1915, 1918, 1919, 1932, 1956], "idx": [21, 56, 887, 1195, 1201, 1337, 1372, 1429, 1617, 1845, 1869, 1885], "th": [21, 144, 303, 305, 311, 749, 890, 892, 911, 931, 1055, 1060, 1169, 1192, 1217, 1235, 1243, 1249, 1285, 1319, 1368, 1369, 1370, 1374, 1381, 1389, 1399, 1444, 1514, 1515, 1516, 1521, 1712, 1809, 1896, 1908, 1928, 1930, 1958], "iterabledataset": [21, 1901], "__iter__": [21, 1872], "suitabl": [21, 30, 925, 1215, 1682, 1747, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1905, 1917, 1919, 1932, 1947], "improb": 21, "fetch": [21, 55, 56, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1662, 1923], "stream": [21, 24, 32, 39, 48, 55, 140, 475, 882, 896, 962, 963, 967, 969, 970, 971, 972, 975, 976, 977, 985, 988, 989, 1003, 1009, 1041, 1044, 1307, 1310, 1311, 1316, 1733, 1867, 1869, 1871, 1910, 1923, 1946, 1958], "databas": 21, "remot": [21, 24, 28, 32, 1609, 1916, 1923, 1924], "real": [21, 30, 56, 74, 675, 676, 677, 678, 679, 681, 687, 897, 909, 933, 934, 949, 956, 1014, 1084, 1085, 1087, 1089, 1090, 1091, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1185, 1187, 1188, 1191, 1192, 1216, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1238, 1239, 1240, 1245, 1248, 1250, 1252, 1253, 1254, 1255, 1259, 1260, 1264, 1265, 1266, 1276, 1282, 1396, 1438, 1441, 1442, 1478, 1616, 1809, 1813, 1856, 1857, 1858, 1866, 1867, 1869, 1871, 1891, 1894, 1910, 1913, 1915, 1918, 1923, 1925, 1931, 1933, 1934, 1942, 1944, 1945, 1946, 1948, 1949, 1951, 1957], "replica": [21, 22, 24, 28, 39, 1366, 1609, 1895], "duplic": [21, 305, 309, 460, 533, 910, 919, 940, 1152, 1153, 1195, 1429, 1845, 1846, 1912, 1927], "yield": [21, 22, 45, 48, 56, 1056, 1058, 1195, 1242, 1243, 1429, 1862, 1871, 1872, 1878, 1916, 1918, 1928, 1946], "stochast": [21, 30, 1377, 1378, 1523, 1524, 1665, 1667, 1668, 1670, 1681, 1685, 1686, 1902, 1914], "decent": 21, "randomli": [21, 734, 735, 745, 753, 898, 1341, 1367, 1368, 1369, 1370, 1374, 1447, 1513, 1514, 1515, 1516, 1521, 1629, 1886, 1901, 1902], "permut": [21, 45, 57, 65, 1068, 1242, 1243, 1262, 1285, 1287, 1726, 1867, 1869, 1885, 1913, 1920, 1931, 1933, 1951], "mini": [21, 768, 774, 1347, 1348, 1349, 1372, 1373, 1384, 1389, 1392, 1393, 1394, 1401, 1421, 1432, 1434, 1468, 1477, 1519, 1520, 1539, 1597, 1916], "neither": [21, 24, 784, 885, 888, 1051, 1111, 1435, 1476, 1656, 1834, 1896, 1905, 1923], "nor": [21, 24, 32, 48, 784, 888, 1231, 1232, 1259, 1435, 1476, 1609, 1656, 1710, 1813, 1896, 1912, 1945], "notion": [21, 897, 1347, 1348, 1349, 1392, 1393, 1394, 1468, 1949], "collat": 21, "minibatch": [21, 757, 758, 761, 762, 763, 1285, 1337, 1345, 1346, 1363, 1365, 1389, 1395, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1481, 1495, 1496, 1497, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1540, 1552, 1553, 1554, 1563, 1571, 1916], "loader": [21, 1914], "essenti": [21, 24, 29, 32, 56, 1285, 1885, 1894, 1908, 1927, 1941], "dummi": [21, 28, 1875, 1891, 1896, 1910, 1956, 1957], "infinit": [21, 1187, 1268, 1345, 1352, 1512, 1705, 1896, 1905, 1923, 1945], "drop": [21, 52, 54, 56, 1014, 1200, 1254, 1259, 1341, 1651, 1755, 1809, 1868, 1885, 1904, 1949, 1958], "roughli": [21, 1395, 1895, 1954, 1955], "dataset_it": 21, "pad": [21, 22, 45, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 724, 727, 728, 729, 730, 731, 732, 757, 758, 761, 762, 763, 768, 771, 772, 774, 941, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1192, 1342, 1343, 1344, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1372, 1373, 1376, 1405, 1406, 1407, 1408, 1409, 1410, 1422, 1423, 1424, 1425, 1426, 1427, 1432, 1435, 1450, 1451, 1452, 1453, 1454, 1455, 1475, 1476, 1480, 1484, 1485, 1486, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1519, 1520, 1522, 1528, 1539, 1552, 1553, 1554, 1555, 1556, 1557, 1596, 1597, 1643, 1645, 1646, 1648, 1716, 1717, 1809, 1867, 1869, 1886, 1898, 1912, 1913, 1918, 1932, 1944, 1951], "length": [21, 22, 24, 26, 30, 250, 303, 305, 311, 341, 422, 423, 572, 573, 574, 724, 749, 803, 882, 896, 940, 985, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1121, 1136, 1169, 1192, 1211, 1215, 1328, 1329, 1347, 1352, 1357, 1366, 1373, 1376, 1381, 1397, 1399, 1435, 1444, 1472, 1480, 1503, 1504, 1505, 1512, 1520, 1539, 1578, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1718, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1793, 1795, 1796, 1797, 1799, 1800, 1809, 1834, 1859, 1869, 1871, 1878, 1885, 1886, 1892, 1898, 1927, 1934, 1944, 1946, 1951, 1956], "certain": [21, 22, 24, 38, 39, 45, 53, 55, 56, 74, 675, 678, 724, 909, 921, 993, 1056, 1170, 1192, 1195, 1203, 1267, 1290, 1300, 1357, 1358, 1359, 1360, 1361, 1362, 1382, 1400, 1416, 1429, 1435, 1480, 1529, 1540, 1542, 1655, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1871, 1878, 1885, 1891, 1892, 1894, 1896, 1901, 1902, 1905, 1912, 1916, 1917, 1923, 1924, 1927, 1945, 1946, 1949, 1950, 1956], "cheaper": [21, 55], "bulk": [21, 1945], "arrai": [21, 32, 437, 749, 809, 810, 868, 869, 912, 930, 956, 960, 1068, 1112, 1120, 1121, 1129, 1130, 1267, 1297, 1376, 1381, 1382, 1399, 1400, 1522, 1733, 1740, 1760, 1795, 1796, 1797, 1799, 1800, 1824, 1827, 1834, 1842, 1853, 1868, 1872, 1894, 1902, 1927, 1929, 1933, 1934, 1946], "untouch": 21, "slightli": [21, 24, 30, 45, 48, 1656, 1701, 1814, 1866, 1894, 1896, 1899, 1905, 1915, 1946], "default_col": 21, "channel": [21, 51, 461, 462, 463, 768, 774, 797, 811, 814, 822, 834, 842, 1082, 1347, 1348, 1349, 1353, 1357, 1358, 1359, 1360, 1361, 1362, 1367, 1368, 1369, 1370, 1374, 1376, 1384, 1392, 1393, 1394, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1417, 1437, 1463, 1468, 1480, 1481, 1482, 1483, 1498, 1514, 1515, 1516, 1521, 1538, 1539, 1546, 1572, 1597, 1627, 1628, 1629, 1636, 1637, 1653, 1713, 1885, 1887, 1889, 1891, 1918, 1919, 1921, 1932], "class_index": 21, "namedtupl": [21, 45, 46, 56, 885, 1047, 1048, 1140, 1195, 1207, 1217, 1237, 1287, 1293, 1296, 1298, 1301, 1325, 1337, 1429, 1701, 1711, 1785, 1813, 1831, 1836, 1868, 1870, 1871, 1918], "situat": [21, 30, 43, 56, 75, 77, 941, 956, 1621, 1883, 1896, 1897, 1904, 1905, 1915, 1918, 1925, 1944, 1945, 1946, 1957], "gil": [21, 24, 28, 1891, 1894, 1923], "integ": [21, 24, 30, 41, 45, 46, 78, 279, 434, 436, 438, 488, 534, 549, 555, 674, 675, 676, 677, 678, 679, 755, 756, 774, 776, 854, 881, 909, 910, 919, 930, 955, 972, 974, 990, 996, 997, 1025, 1063, 1066, 1068, 1069, 1070, 1071, 1111, 1112, 1113, 1114, 1115, 1116, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1138, 1152, 1153, 1156, 1157, 1158, 1206, 1209, 1218, 1219, 1226, 1237, 1239, 1249, 1268, 1318, 1337, 1352, 1357, 1358, 1359, 1401, 1487, 1488, 1489, 1490, 1491, 1492, 1599, 1642, 1657, 1660, 1689, 1692, 1696, 1701, 1713, 1714, 1720, 1722, 1723, 1724, 1726, 1731, 1740, 1752, 1801, 1810, 1814, 1828, 1829, 1842, 1848, 1860, 1864, 1870, 1871, 1872, 1884, 1897, 1899, 1916, 1918, 1919, 1921, 1927, 1928, 1930, 1933, 1934, 1944, 1959], "descriptor": [21, 24, 1477, 1478, 1872, 1912], "parent": [21, 34, 39, 43, 48, 669, 777, 778, 806, 1429, 1883, 1908, 1915, 1925, 1932], "simplest": [21, 26, 32, 56, 847, 1342, 1343, 1344, 1357, 1358, 1359, 1422, 1423, 1424, 1619, 1895, 1896, 1902, 1910, 1918, 1925, 1927, 1946, 1949], "refcount": [21, 1883, 1904], "panda": 21, "pyarrow": 21, "13246": 21, "enumer": [21, 30, 56, 1195, 1429, 1431, 1440, 1686, 1869, 1870, 1890, 1894, 1908, 1932, 1955], "get_worker_info": [21, 1923], "seed": [21, 78, 1006, 1015, 1016, 1036, 1171, 1288, 1309, 1701, 1718, 1814, 1851, 1867, 1869, 1898, 1904, 1906, 1922], "naiv": [21, 1916, 1941, 1944, 1946], "shut": [21, 1923], "garbag": [21, 1925], "subtleti": [21, 57, 1366, 1896, 1898], "multiprocess": [21, 22, 24, 25, 27, 32, 34, 42, 43, 1366, 1609, 1867, 1885, 1895, 1924], "unix": [21, 39, 970, 1883], "fork": [21, 39, 1214, 1609, 1871, 1893, 1894, 1898, 1901, 1904, 1908, 1922, 1923, 1925], "child": [21, 32, 34, 48, 780, 1195, 1429, 1628, 1883, 1902, 1908, 1925], "address": [21, 24, 41, 44, 53, 206, 897, 898, 977, 1878, 1883, 1894, 1896, 1923, 1924, 1941, 1958], "maco": [21, 24, 1883, 1903], "spawn": [21, 22, 25, 32, 33, 39, 43, 1198, 1609, 1867, 1890, 1895, 1904, 1908, 1924], "__name__": [21, 22, 24, 33, 34, 42, 1895, 1896, 1904, 1908, 1915, 1924], "__main__": [21, 22, 24, 33, 34, 42, 1892, 1895, 1904, 1908, 1924], "bytecod": [21, 45, 669, 1877, 1909, 1910, 1915, 1942, 1943, 1946, 1949, 1956], "base_se": 21, "worker_id": [21, 43, 1906], "therebi": [21, 30, 1914, 1918], "mandatorili": 21, "faq": [21, 1366, 1645, 1867], "initial_se": [21, 78, 1867, 1906, 1922], "host": [21, 24, 32, 34, 40, 41, 42, 43, 186, 199, 569, 592, 866, 1195, 1429, 1609, 1621, 1655, 1894, 1916, 1923, 1924, 1929, 1941, 1945, 1958], "recogn": [21, 71, 1871, 1923, 1927, 1945], "simplecustombatch": 21, "transposed_data": 21, "zip": [21, 26, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1866, 1869, 1870, 1880, 1894, 1901, 1927], "tgt": [21, 1472, 1473, 1474], "collate_wrapp": 21, "float32": [21, 22, 24, 45, 48, 57, 62, 65, 66, 67, 257, 569, 606, 808, 809, 810, 811, 814, 815, 869, 949, 1082, 1083, 1120, 1142, 1144, 1177, 1333, 1346, 1472, 1481, 1482, 1483, 1495, 1668, 1669, 1705, 1710, 1718, 1722, 1737, 1752, 1753, 1755, 1798, 1857, 1886, 1890, 1894, 1905, 1910, 1912, 1920, 1927, 1928, 1929, 1930, 1933, 1934, 1946, 1956, 1959], "tensordataset": 21, "batch_ndx": 21, "is_pin": [21, 1642, 1869, 1884, 1913, 1929, 1946], "multiprocessing_context": 21, "pin_memory_devic": 21, "reshuffl": 21, "draw": [21, 144, 911, 1031, 1319, 1718, 1932, 1954], "mutual": [21, 24, 32, 724, 1934], "subprocess": [21, 24, 39, 41, 43, 1898, 1904], "incomplet": [21, 890, 1873, 1928], "divis": [21, 572, 606, 676, 761, 762, 763, 935, 1063, 1113, 1116, 1206, 1239, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1384, 1396, 1420, 1438, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1564, 1731, 1801, 1828, 1871, 1890, 1894], "smaller": [21, 56, 488, 534, 960, 1399, 1609, 1695, 1710, 1755, 1801, 1894, 1907, 1915, 1942, 1958, 1959], "basecontext": 21, "randomsampl": 21, "prefetch": [21, 48], "unpickl": [21, 24, 1267, 1915], "practic": [21, 24, 30, 46, 48, 1867, 1868, 1878, 1883, 1885, 1891, 1896, 1899, 1902, 1907, 1915, 1923, 1938, 1945, 1946], "len": [21, 24, 26, 56, 57, 62, 208, 534, 684, 685, 1087, 1091, 1094, 1098, 1101, 1105, 1135, 1199, 1262, 1283, 1295, 1324, 1327, 1366, 1566, 1627, 1629, 1645, 1686, 1693, 1798, 1801, 1807, 1808, 1812, 1853, 1854, 1855, 1868, 1869, 1871, 1896, 1913, 1927, 1932, 1955], "proper": [21, 32, 55, 56, 1059, 1750, 1870, 1891, 1894, 1896, 1904, 1908], "guess": 21, "trust": [21, 24, 1267, 1866, 1915], "inaccur": [21, 22, 1539], "kwd": 21, "__getitems__": 21, "speedup": [21, 22, 1435, 1476, 1938, 1941, 1949, 1953], "myiterabledataset": 21, "worker_info": 21, "iter_start": 21, "iter_end": 21, "per_work": 21, "ceil": [21, 167, 622, 623, 757, 758, 1342, 1343, 1344, 1397, 1398, 1422, 1423, 1424, 1495, 1496, 1497, 1552, 1553, 1554, 1716, 1717, 1740, 1869, 1884, 1894, 1913, 1927, 1951], "mult": 21, "12": [21, 22, 24, 48, 311, 506, 606, 675, 730, 731, 732, 734, 735, 931, 935, 1066, 1084, 1158, 1199, 1215, 1232, 1254, 1337, 1353, 1361, 1376, 1377, 1378, 1426, 1441, 1442, 1463, 1472, 1480, 1523, 1524, 1564, 1569, 1570, 1617, 1650, 1700, 1711, 1760, 1775, 1785, 1828, 1844, 1860, 1866, 1868, 1869, 1872, 1878, 1894, 1896, 1903, 1907, 1912, 1913, 1927, 1934, 1943, 1953, 1954], "overall_start": 21, "overall_end": 21, "stackdataset": 21, "assembl": [21, 1943], "imagedataset": 21, "textdataset": 21, "tuple_stack": 21, "dict_stack": 21, "concatdataset": 21, "chaindataset": 21, "chain": [21, 22, 30, 55, 56, 140, 882, 931, 1251, 1373, 1457, 1683, 1696, 1871, 1891, 1894, 1896, 1899, 1902, 1914, 1955], "fly": [21, 1011, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1891], "whole": [21, 24, 26, 1136, 1195, 1429, 1457, 1468, 1609, 1859, 1891, 1895, 1904, 1905, 1915, 1945, 1947, 1949, 1952, 1953], "_util": [21, 1954], "collate_fn_map": 21, "registri": [21, 1867, 1907, 1910, 1912], "default_collate_fn_map": 21, "insert": [21, 24, 30, 48, 55, 56, 736, 781, 782, 850, 851, 1430, 1431, 1439, 1609, 1747, 1750, 1760, 1781, 1806, 1847, 1868, 1879, 1894, 1910, 1913, 1918, 1955], "collate_tensor_fn": 21, "custom_col": 21, "collate_map": 21, "outer": [21, 680, 890, 1068, 1126, 1130, 1135, 1141, 1869, 1871, 1913], "unchang": [21, 488, 502, 504, 724, 803, 1107, 1195, 1429, 1472, 1732, 1804, 1890, 1905, 1918], "byte": [21, 24, 30, 41, 232, 424, 547, 869, 976, 1017, 1019, 1021, 1023, 1121, 1194, 1267, 1304, 1305, 1662, 1671, 1743, 1870, 1871, 1872, 1884, 1907, 1915, 1927, 1929, 1958], "k": [21, 24, 26, 30, 42, 56, 276, 344, 495, 502, 504, 506, 579, 606, 749, 934, 1055, 1068, 1124, 1137, 1157, 1217, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1240, 1241, 1242, 1245, 1247, 1254, 1256, 1258, 1259, 1268, 1286, 1290, 1342, 1344, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1377, 1378, 1381, 1382, 1399, 1400, 1414, 1416, 1417, 1422, 1424, 1435, 1436, 1444, 1446, 1511, 1523, 1524, 1546, 1563, 1616, 1699, 1701, 1711, 1739, 1790, 1791, 1792, 1793, 1795, 1796, 1797, 1799, 1800, 1809, 1831, 1836, 1869, 1870, 1889, 1894, 1896, 1908, 1927, 1928, 1930, 1946, 1949, 1950, 1951, 1956], "v_i": [21, 1235], "v_1": 21, "v_2": 21, "v1_i": 21, "v2_i": 21, "v1_1": 21, "v1_2": 21, "v2_1": 21, "v2_2": 21, "elem": [21, 1869], "customtyp": 21, "collate_customtype_fn": 21, "custotyp": 21, "default_convert": 21, "np": [21, 929, 1063, 1068, 1108, 1109, 1110, 1568, 1705, 1897, 1906, 1912, 1932, 1933, 1934, 1946], "fraction": [21, 30, 1038, 1111, 1117, 1314, 1360, 1361, 1362, 1377, 1378, 1435, 1476, 1523, 1524, 1626, 1627, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1712, 1889, 1946], "workerinfo": [21, 1923], "random_split": 21, "floor": [21, 57, 59, 65, 261, 636, 637, 757, 758, 1063, 1113, 1206, 1342, 1343, 1344, 1397, 1398, 1422, 1423, 1424, 1495, 1496, 1497, 1552, 1553, 1554, 1716, 1717, 1731, 1740, 1809, 1869, 1871, 1884, 1904, 1907, 1913, 1927, 1951], "frac": [21, 30, 269, 367, 638, 639, 676, 749, 761, 762, 763, 854, 910, 919, 956, 960, 1063, 1113, 1148, 1152, 1153, 1215, 1227, 1231, 1232, 1235, 1247, 1259, 1266, 1282, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1367, 1376, 1381, 1382, 1383, 1384, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1414, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1432, 1433, 1434, 1436, 1444, 1446, 1447, 1459, 1461, 1462, 1464, 1465, 1467, 1468, 1469, 1480, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1548, 1564, 1566, 1568, 1578, 1580, 1584, 1586, 1588, 1589, 1666, 1667, 1670, 1672, 1678, 1685, 1686, 1715, 1727, 1730, 1742, 1763, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1792, 1807, 1808, 1809, 1813, 1834, 1854, 1855, 1869, 1884, 1889, 1891, 1899, 1913, 1927, 1928], "remaind": [21, 479, 1116, 1148, 1869, 1913, 1943, 1951], "robin": [21, 24], "generator1": 21, "manual_se": [21, 53, 78, 1867, 1869, 1884, 1902, 1904, 1906, 1912, 1913, 1922], "42": [21, 813, 919, 1318, 1767, 1894, 1902, 1943], "generator2": 21, "30": [21, 24, 30, 32, 41, 434, 606, 709, 717, 718, 745, 753, 1148, 1218, 1350, 1352, 1356, 1416, 1480, 1486, 1503, 1512, 1600, 1689, 1691, 1697, 1714, 1824, 1896, 1912, 1914, 1923, 1943], "data_sourc": 21, "accedingsequencelengthsampl": 21, "argsort": [21, 1824, 1869, 1897, 1913], "tolist": [21, 342, 1871, 1913, 1929], "accedingsequencelengthbatchsampl": 21, "sequentialsampl": 21, "num_sampl": [21, 410, 1319, 1869], "drawn": [21, 163, 248, 276, 1319, 1657, 1718, 1722, 1723, 1889, 1934, 1935], "subsetrandomsampl": 21, "weightedrandomsampl": 21, "probabl": [21, 48, 144, 749, 911, 1156, 1273, 1319, 1337, 1341, 1345, 1352, 1365, 1367, 1368, 1369, 1370, 1374, 1381, 1383, 1399, 1435, 1436, 1444, 1500, 1511, 1512, 1513, 1514, 1515, 1516, 1521, 1530, 1540, 1563, 1578, 1711, 1883, 1896, 1908, 1912, 1928, 1932, 1944, 1945, 1946, 1947, 1952], "row": [21, 22, 29, 30, 198, 303, 305, 311, 574, 577, 682, 688, 866, 890, 892, 929, 956, 960, 1051, 1081, 1109, 1110, 1130, 1136, 1157, 1217, 1243, 1251, 1254, 1259, 1283, 1285, 1293, 1295, 1296, 1298, 1301, 1319, 1325, 1326, 1327, 1519, 1520, 1568, 1616, 1655, 1709, 1712, 1732, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1812, 1831, 1834, 1838, 1840, 1853, 1859, 1861, 1869, 1899, 1927, 1932], "05": [21, 28, 56, 103, 334, 683, 701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 738, 740, 741, 742, 743, 897, 898, 1082, 1184, 1211, 1212, 1282, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1468, 1472, 1474, 1476, 1498, 1529, 1538, 1542, 1609, 1684, 1690, 1691, 1697, 1769, 1770, 1775, 1868, 1869, 1914, 1924, 1934], "batchsampl": 21, "distributedsampl": [21, 1609], "num_replica": 21, "world_siz": [21, 22, 24, 25, 28, 32, 41, 42, 44, 48, 1609, 1895, 1916, 1923, 1924], "evenli": [21, 572, 573, 574, 684, 685, 1066, 1158, 1266, 1282, 1860], "set_epoch": 21, "is_distribut": [21, 1869, 1913, 1946], "start_epoch": 21, "n_epoch": 21, "vanilla": [22, 46, 1878], "allreduc": [22, 24, 1609, 1894, 1895, 1913], "besid": [22, 24, 1894, 1895, 1910, 1932, 1942], "register_comm_hook": [22, 28, 48, 1609], "mainli": [22, 30, 816, 1352, 1512, 1936], "bucket": [22, 28, 29, 1337, 1609, 1869, 1895, 1913, 1946, 1956], "gradbucket": [22, 1609], "decompos": [22, 45, 56, 1118, 1125, 1240, 1891, 1896, 1912, 1951], "get_per_parameter_tensor": 22, "wise": [22, 24, 30, 676, 677, 687, 747, 759, 760, 769, 773, 873, 954, 1068, 1073, 1114, 1115, 1138, 1139, 1151, 1160, 1218, 1220, 1277, 1278, 1279, 1280, 1284, 1294, 1297, 1299, 1330, 1351, 1362, 1369, 1371, 1385, 1386, 1387, 1388, 1390, 1415, 1418, 1428, 1437, 1447, 1448, 1449, 1456, 1458, 1459, 1460, 1465, 1467, 1469, 1470, 1502, 1517, 1526, 1527, 1531, 1532, 1533, 1534, 1537, 1541, 1543, 1548, 1558, 1559, 1572, 1573, 1574, 1579, 1580, 1581, 1582, 1586, 1588, 1589, 1590, 1793, 1861, 1893, 1896, 1927, 1928, 1931, 1953], "_distributed_c10d": [22, 24], "1d": [22, 29, 30, 48, 691, 694, 727, 730, 761, 771, 940, 956, 960, 1051, 1065, 1156, 1157, 1172, 1192, 1251, 1252, 1297, 1326, 1334, 1338, 1342, 1352, 1357, 1360, 1365, 1368, 1369, 1373, 1397, 1421, 1422, 1434, 1436, 1481, 1487, 1490, 1493, 1495, 1503, 1506, 1514, 1520, 1549, 1552, 1712, 1713, 1716, 1809, 1824, 1834, 1856], "is_last": 22, "set_buff": 22, "stateless": [22, 53, 1887, 1902], "ddp_comm_hook": [22, 28], "default_hook": 22, "allreduce_hook": 22, "process_group": [22, 25, 26, 28, 48, 1468, 1609], "aggreg": [22, 24, 26, 34, 48, 1373, 1520, 1609, 1632, 1881, 1916, 1946, 1956], "henc": [22, 28, 32, 40, 41, 44, 48, 55, 911, 1121, 1425, 1426, 1427, 1481, 1798, 1886, 1891, 1894, 1895, 1923, 1925, 1941], "unaffect": [22, 488, 489, 1383], "ddp_model": [22, 24, 1609, 1895], "fp16_compress_hook": 22, "compress": [22, 48, 198, 576, 577, 1090, 1091, 1100, 1101, 1609, 1795, 1796, 1797, 1799, 1800, 1833, 1867, 1953], "decompress": [22, 1866, 1880], "bf16_compress_hook": 22, "nccl": [22, 25, 26, 42, 48, 1609, 1900], "brain": [22, 1930, 1933], "wrapper": [22, 24, 29, 30, 48, 55, 56, 57, 613, 746, 779, 813, 966, 969, 971, 972, 974, 1041, 1043, 1114, 1115, 1134, 1195, 1307, 1366, 1868, 1870, 1871, 1881, 1883, 1894, 1895, 1912, 1916, 1941], "fp16_compress_wrapp": 22, "powersgdst": 22, "matrix_approximation_rank": 22, "start_powersgd_it": 22, "powersgd_hook": 22, "bf16_compress_wrapp": 22, "wikipedia": [22, 1565, 1891, 1899, 1959], "bfloat16_float": 22, "point_format": 22, "vogel": 22, "et": [22, 30, 48, 1352, 1441, 1442, 1477, 1478, 1681, 1776, 1814, 1889], "al": [22, 30, 48, 1352, 1441, 1442, 1477, 1478, 1681, 1776, 1814, 1889], "neurip": [22, 30], "2019": [22, 30, 1025], "bandwidth": [22, 24, 40, 42, 1918, 1923, 1948, 1950], "hyperparamet": [22, 48, 56, 1932], "1000": [22, 1083, 1088, 1114, 1115, 1337, 1372, 1478, 1713, 1740, 1760, 1827, 1891, 1907, 1912, 1932], "min_compression_r": 22, "use_error_feedback": 22, "warm_start": 22, "orthogonalization_epsilon": 22, "random_se": 22, "compression_stats_logging_frequ": 22, "batch_tensors_with_same_shap": 22, "tune": [22, 24, 28, 1025, 1232, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1891, 1894, 1903, 1918, 1956], "stronger": [22, 45, 46, 57], "threshold": [22, 56, 1250, 1253, 1390, 1460, 1465, 1586, 1592, 1695, 1760, 1869, 1890, 1894, 1913, 1932], "exponenti": [22, 248, 1078, 1247, 1273, 1274, 1275, 1283, 1351, 1371, 1517, 1867, 1871, 1913, 1914, 1928, 1935], "grid": [22, 1088, 1297, 1493, 1528, 1869, 1894, 1932, 1951], "satisfactori": 22, "nlp": [22, 1392, 1393, 1394, 1401, 1946], "appendix": [22, 1867], "defer": [22, 48, 1894, 1916], "hybrid": [22, 48, 208, 532, 572, 573, 574, 576, 577, 1159], "scheme": [22, 41, 467, 791, 808, 809, 810, 811, 814, 816, 1902], "sensit": [22, 1390, 1460, 1912, 1915, 1924, 1945], "suboptim": [22, 1948], "trajectori": 22, "irrecover": 22, "impact": [22, 24, 71, 1025, 1755, 1879, 1881, 1891, 1918, 1931, 1946, 1952, 1956], "warm": [22, 28, 1014, 1685, 1686, 1894, 1917, 1941, 1946, 1954], "num_row": 22, "num_col": 22, "1e": [22, 56, 103, 334, 683, 701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 738, 740, 741, 742, 743, 744, 897, 898, 932, 933, 934, 1184, 1211, 1212, 1262, 1347, 1348, 1349, 1364, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1415, 1438, 1443, 1468, 1472, 1474, 1476, 1477, 1498, 1510, 1525, 1529, 1530, 1538, 1542, 1564, 1567, 1571, 1594, 1617, 1650, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1682, 1695, 1703, 1756, 1868, 1869, 1896, 1902, 1912, 1914, 1928, 1934], "orthogon": [22, 1232, 1235, 1254, 1259, 1268, 1699, 1711, 1889, 1891, 1902, 1927], "div": [22, 226, 1064, 1113, 1116, 1337, 1441, 1442, 1731, 1841, 1869, 1875, 1884, 1913, 1927, 1930, 1951, 1955], "epsilon": [22, 56, 808, 809, 810, 811, 814, 854, 1250, 1253, 1347, 1348, 1349, 1364, 1384, 1392, 1393, 1394, 1401, 1438, 1468, 1510, 1564, 1617, 1650, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1715, 1869, 1928], "bucket_cap_mb": [22, 1609, 1895], "footprint": [22, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1910, 1927, 1953], "bottleneck": [22, 1867, 1902, 1948], "memor": 22, "compens": 22, "apex": 22, "uncompress": [22, 1927], "p": [22, 26, 30, 48, 56, 144, 224, 276, 414, 415, 442, 477, 480, 481, 597, 675, 678, 909, 911, 921, 929, 1062, 1216, 1227, 1233, 1234, 1242, 1243, 1285, 1287, 1290, 1300, 1322, 1341, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1395, 1397, 1398, 1434, 1438, 1440, 1477, 1478, 1494, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1549, 1550, 1560, 1564, 1567, 1568, 1594, 1613, 1619, 1621, 1627, 1636, 1656, 1681, 1732, 1790, 1869, 1870, 1890, 1891, 1894, 1898, 1899, 1904, 1917, 1927, 1928, 1950, 1951], "pq": 22, "mq": [22, 1918, 1937], "tp": [22, 29], "awai": [22, 56, 944, 1528, 1867, 1885, 1891, 1897, 1944], "config": [22, 48, 56, 781, 782, 783, 784, 848, 850, 941, 1895, 1908, 1921, 1946, 1948, 1949, 1950, 1956], "comm": [22, 24, 1895], "handler": [22, 24, 34, 35, 1628, 1881, 1896, 1901, 1915, 1957], "batched_powersgd_hook": 22, "destroi": [22, 41, 1366, 1891, 1923], "squar": [22, 30, 540, 728, 729, 730, 731, 768, 774, 783, 960, 1055, 1057, 1192, 1227, 1229, 1231, 1232, 1233, 1236, 1237, 1241, 1243, 1245, 1247, 1249, 1253, 1255, 1256, 1258, 1259, 1263, 1276, 1285, 1335, 1339, 1343, 1344, 1358, 1359, 1361, 1362, 1377, 1378, 1390, 1398, 1420, 1423, 1424, 1427, 1460, 1472, 1495, 1504, 1507, 1523, 1524, 1528, 1537, 1539, 1559, 1582, 1597, 1616, 1666, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1742, 1802, 1836, 1853, 1869, 1913, 1927], "truncat": [22, 1113, 1755, 1842, 1886, 1889, 1898, 1905], "impli": [22, 41, 48, 1883, 1891, 1912, 1916, 1921, 1923, 1945], "debugging_hook": 22, "noop_hook": 22, "noop": [22, 1609], "headroom": 22, "desynchron": [22, 24], "trainer": [22, 32, 34, 39, 42, 43, 1609, 1923], "restart": [22, 32, 40, 42, 44, 1685, 1686, 1883, 1932, 1943], "__setstate__": 22, "__getstate__": 22, "reload": [22, 28, 48, 1866], "sy": [22, 33, 42, 44, 1866, 1894, 1915], "tempfil": 22, "mp": [22, 24, 25, 43, 1307, 1609, 1867, 1895, 1896, 1904, 1918, 1924, 1929, 1930, 1937], "simplemodel": 22, "24": [22, 24, 30, 914, 1254, 1417, 1493, 1649, 1711, 1755, 1829, 1868, 1889, 1893, 1928, 1943], "fc2": [22, 1600, 1910, 1916], "master_addr": [22, 24, 32, 42, 44, 1895, 1916, 1923, 1924], "localhost": [22, 24, 41, 42, 1895, 1916, 1923, 1924], "master_port": [22, 24, 32, 42, 44, 1895, 1916, 1923, 1924], "12355": 22, "init_process_group": [22, 24, 25, 28, 32, 42, 44, 1609, 1894, 1895, 1923], "cleanup": 22, "destroy_process_group": 22, "run_demo": 22, "demo_fn": 22, "nproc": [22, 24, 39, 40, 42, 1883, 1895, 1924], "demo_seri": 22, "gettempdir": 22, "device_id": [22, 24, 25, 28, 42, 48, 1267, 1366, 1468, 1593, 1609, 1895], "powersgd_st": 22, "lr": [22, 25, 28, 48, 477, 1600, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1894, 1895, 1902, 1904, 1914, 1924, 1932], "001": [22, 897, 898, 1205, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1694, 1895, 1912], "comm_hook": 22, "comm_hook_st": 22, "barrier": [22, 32, 41, 1913], "map_loc": [22, 1199, 1203, 1267, 1609, 1866, 1880, 1915], "new_ddp_model": 22, "n_gpu": 22, "device_count": [22, 24, 1851, 1867], "got": [22, 24, 880, 1851, 1896, 1934], "thank": [22, 30, 1896, 1916], "author": [22, 41, 42, 48, 1136, 1678, 1718, 1859, 1890, 1943, 1946, 1948, 1952, 1953, 1956], "thij": 22, "par": 22, "home": [23, 1894], "brief": [24, 1609, 1883, 1923], "introduct": [24, 30, 1003, 1609, 1867, 1868, 1872, 1884, 1892, 1902, 1912, 1923, 1927, 1932], "mpi": [24, 1609], "gloo": [24, 42, 1609, 1895, 1900, 1923], "recv": [24, 1609, 1913, 1924], "broadcast": [24, 28, 30, 48, 53, 87, 186, 388, 390, 391, 392, 502, 504, 506, 555, 674, 675, 676, 677, 678, 679, 680, 686, 724, 873, 909, 914, 917, 921, 922, 923, 924, 955, 982, 1011, 1062, 1063, 1068, 1073, 1113, 1114, 1115, 1116, 1137, 1139, 1151, 1161, 1220, 1221, 1228, 1241, 1245, 1250, 1251, 1253, 1256, 1264, 1284, 1289, 1290, 1300, 1318, 1321, 1330, 1333, 1346, 1364, 1383, 1435, 1501, 1510, 1572, 1609, 1664, 1700, 1708, 1731, 1733, 1810, 1829, 1834, 1862, 1867, 1871, 1884, 1885, 1886, 1895, 1912, 1913, 1928, 1946, 1951], "all_reduc": [24, 43, 1609], "all_gath": 24, "scatter": [24, 28, 48, 502, 504, 506, 1366, 1848, 1869, 1898, 1913, 1923, 1951], "reduce_scatt": [24, 1913], "all_to_al": 24, "v1": [24, 48, 1264, 1700, 1866, 1895, 1923], "init_method": [24, 1609, 1923], "adher": [24, 1871, 1927], "some_fil": 24, "machine_nam": 24, "share_folder_nam": 24, "tcpstore": [24, 41], "past": [24, 56, 980, 1027, 1031, 1045, 1046, 1609, 1898, 1948, 1950, 1953], "ask": [24, 52, 53, 1866, 1867, 1897, 1899, 1938, 1958], "infiniband": [24, 1609, 1923], "interconnect": 24, "gpudirect": 24, "ethernet": 24, "ip": [24, 41], "ib": 24, "upcom": [24, 1890], "nccl_socket_ifnam": 24, "eth0": 24, "gloo_socket_ifnam": 24, "comma": [24, 1068, 1871, 1877], "eth1": 24, "eth2": 24, "eth3": 24, "imper": 24, "nccl_debug": 24, "info": [24, 32, 35, 39, 669, 881, 971, 972, 974, 1226, 1237, 1239, 1240, 1244, 1257, 1285, 1310, 1311, 1662, 1867, 1869, 1877, 1895, 1896, 1897, 1912, 1915, 1943, 1944, 1945, 1956], "nccl_debug_subsi": 24, "coll": 24, "hang": [24, 25, 28, 1609, 1895], "topologi": [24, 26, 29, 32], "effort": [24, 45, 1923, 1950], "socket": [24, 1883, 1923], "nccl_socket_nthread": 24, "nccl_nsocks_perthread": 24, "cloud": [24, 1927, 1932], "aw": [24, 33, 960], "gcp": [24, 1953], "primit": [24, 28, 41, 45, 1267, 1868, 1870, 1872, 1893, 1903, 1912, 1923, 1951], "kind": [24, 35, 45, 56, 669, 1215, 1610, 1663, 1710, 1775, 1866, 1875, 1896, 1904, 1912, 1915, 1918, 1928, 1930, 1949], "connect": [24, 32, 41, 1357, 1358, 1359, 1360, 1361, 1362, 1405, 1406, 1407, 1408, 1409, 1410, 1457, 1883, 1923, 1954], "advantag": [24, 41, 42, 1346, 1390, 1895, 1898, 1909, 1910, 1923, 1927, 1941], "redund": [24, 48, 1084, 1085, 1087, 1089, 1103, 1105, 1809], "averag": [24, 28, 724, 755, 756, 757, 758, 810, 811, 906, 908, 960, 1031, 1045, 1195, 1334, 1335, 1336, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1363, 1365, 1373, 1383, 1389, 1395, 1396, 1397, 1398, 1402, 1403, 1404, 1420, 1421, 1429, 1432, 1433, 1434, 1435, 1436, 1443, 1460, 1461, 1468, 1477, 1487, 1488, 1489, 1495, 1496, 1497, 1500, 1501, 1511, 1525, 1540, 1549, 1550, 1563, 1571, 1609, 1665, 1666, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1834, 1867, 1895, 1917], "elimin": [24, 45, 56, 599, 1845, 1846, 1906, 1948, 1955], "thrash": 24, "recurr": [24, 749, 750, 1211, 1352, 1366, 1381, 1382, 1399, 1444, 1619, 1645, 1679, 1867, 1894], "use_distribut": 24, "datetim": [24, 1881, 1946], "timedelta": [24, 41, 1881], "1800": 24, "group_nam": [24, 38], "pg_option": 24, "url": [24, 41, 905, 1866, 1880, 1923], "discov": [24, 1923], "encod": [24, 32, 38, 41, 48, 56, 1243, 1267, 1310, 1311, 1345, 1346, 1472, 1473, 1474, 1475, 1476, 1609, 1755, 1795, 1796, 1797, 1799, 1800, 1868, 1871, 1872, 1896, 1907, 1915, 1924, 1927], "ucc": 24, "lowercas": 24, "deadlock": [24, 1609], "job": [24, 32, 34, 35, 37, 38, 40, 41, 42, 43, 1609, 1687, 1693, 1894, 1901, 1917, 1932, 1958], "exchang": [24, 41, 972, 1056, 1894, 1909], "nccl_blocking_wait": 24, "nccl_async_error_handl": [24, 1894], "throw": [24, 25, 29, 55, 56, 180, 313, 318, 534, 603, 1180, 1195, 1236, 1285, 1429, 1609, 1611, 1612, 1645, 1656, 1707, 1848, 1886, 1891, 1906, 1923, 1933, 1946, 1956], "abort": [24, 1894], "crash": [24, 34, 41, 1232, 1883, 1891, 1923, 1925, 1932, 1944], "caught": [24, 1609, 1883], "littl": [24, 1896, 1925, 1949], "watch": [24, 1943], "dog": 24, "processgroupopt": 24, "processgroupnccl": [24, 1895], "is_high_priority_stream": 24, "backend_nam": [24, 1851], "custom_backend": 24, "is_initi": [24, 1867], "is_mpi_avail": 24, "is_nccl_avail": 24, "is_gloo_avail": 24, "is_torchelastic_launch": 24, "elast": [24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 1867], "torchelast": [24, 27, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44], "torchelastic_run_id": [24, 42], "proxi": [24, 26, 1918, 1923, 1949], "rendezv": [24, 27, 32, 38, 40, 44, 1895, 1923], "null": [24, 33, 35, 38, 57, 61], "discoveri": [24, 41, 1894, 1915], "reachabl": 24, "multicast": 24, "20": [24, 28, 30, 311, 674, 709, 717, 718, 723, 727, 728, 729, 730, 731, 732, 735, 745, 749, 750, 751, 752, 753, 754, 761, 1148, 1193, 1196, 1207, 1218, 1252, 1318, 1341, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1352, 1356, 1357, 1358, 1359, 1361, 1362, 1367, 1368, 1369, 1370, 1374, 1377, 1378, 1381, 1382, 1384, 1391, 1392, 1393, 1394, 1397, 1398, 1399, 1400, 1401, 1416, 1422, 1423, 1424, 1426, 1427, 1429, 1444, 1446, 1457, 1465, 1468, 1471, 1472, 1473, 1474, 1486, 1503, 1505, 1506, 1508, 1512, 1523, 1524, 1530, 1586, 1616, 1617, 1641, 1650, 1653, 1671, 1686, 1714, 1824, 1868, 1869, 1886, 1895, 1896, 1905, 1910, 1914, 1923, 1927, 1943, 1945, 1949], "23456": 24, "clean": [24, 32, 45, 56, 948, 1007, 1866, 1883, 1915], "fcntl": 24, "nf": 24, "init": [24, 32, 34, 48, 1195, 1429, 1437, 1456, 1649, 1867, 1873, 1891, 1896, 1901, 1902, 1944], "brand": [24, 1896], "succe": [24, 29, 41, 45, 53, 1894, 1896, 1908, 1956, 1958], "unexpect": [24, 31, 56, 968, 1119, 1121, 1124, 1195, 1429, 1651, 1664, 1804, 1868, 1891, 1896, 1905, 1945, 1946, 1949], "unsuccess": 24, "mnt": 24, "sharedfil": 24, "port": [24, 32, 40, 41, 42, 1900], "backend_str": 24, "uppercas": 24, "classmethod": [24, 41, 57, 59, 721, 727, 728, 729, 734, 735, 745, 753, 781, 782, 783, 804, 805, 806, 813, 843, 971, 1372, 1373, 1468, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1662, 1871, 1872, 1896, 1918, 1923, 1929, 1957], "register_backend": [24, 1923, 1942], "extended_api": 24, "instanti": [24, 28, 40, 41, 42, 48, 56, 830, 1373, 1520, 1618, 1642, 1649, 1866, 1868, 1870, 1871, 1894, 1896, 1902, 1910, 1929], "3rd": [24, 30, 41, 606, 1695, 1892], "processgroup": [24, 26, 28, 48, 1609], "four": [24, 1241, 1358, 1896, 1899, 1923, 1925], "c10d": [24, 32, 40, 42, 44, 1609, 1895, 1913], "distributedbackendopt": 24, "get_backend": [24, 41], "get_rank": [24, 48, 1468], "get_world_s": 24, "filestor": [24, 41], "hashstor": 24, "client": [24, 28, 41, 1025, 1915, 1946], "host_nam": 24, "hostnam": [24, 32, 41, 1917], "listen": 24, "is_mast": 24, "300": [24, 32, 1273, 1346, 1646, 1648, 1914], "wait_for_work": 24, "multi_ten": 24, "tcpserver": 24, "master_listen_fd": 24, "server_stor": 24, "127": [24, 783, 1885, 1918, 1932], "1234": [24, 41, 1172], "client_stor": 24, "first_kei": 24, "first_valu": 24, "hashmap": 24, "file_nam": [24, 1866, 1880, 1915], "store1": 24, "store2": 24, "prefixstor": 24, "old": [24, 31, 56, 843, 1119, 1369, 1653, 1661, 1695, 1743, 1865, 1867, 1868, 1891, 1894, 1896, 1908, 1918, 1932, 1945, 1949], "whose": [24, 30, 45, 48, 56, 533, 848, 884, 931, 955, 1056, 1068, 1073, 1121, 1139, 1148, 1151, 1157, 1195, 1201, 1212, 1220, 1266, 1282, 1284, 1330, 1429, 1609, 1657, 1705, 1763, 1830, 1871, 1891, 1896, 1899, 1915, 1927, 1932, 1934, 1944, 1956], "quantiti": [24, 49, 54, 1231, 1232, 1259, 1395, 1626, 1627, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1695, 1897, 1899], "compare_set": 24, "arg2": [24, 46], "expected_valu": 24, "desired_valu": 24, "second_valu": 24, "overload": [24, 45, 56, 606, 1870, 1871, 1875, 1910], "bad_kei": 24, "num_kei": 24, "written": [24, 34, 53, 905, 1027, 1366, 1681, 1868, 1870, 1878, 1879, 1891, 1895, 1896, 1897, 1902, 1907, 1910, 1912, 1915, 1917, 1929, 1932, 1938, 1943, 1944, 1948, 1950, 1955, 1956], "destruct": [24, 1881, 1923, 1925], "delete_kei": 24, "successfulli": [24, 32, 38, 1202, 1756, 1883, 1902, 1907, 1923, 1956], "set_timeout": 24, "grain": [24, 45, 847, 850, 1578, 1891, 1912, 1927, 1938, 1948, 1956], "plai": [24, 1943, 1946], "new_group": [24, 48, 1468], "opaqu": [24, 31, 969, 1003, 1004, 1119, 1952], "pattern": [24, 26, 781, 782, 783, 785, 843, 850, 1011, 1366, 1645, 1791, 1868, 1871, 1891, 1894, 1896, 1898, 1900, 1907, 1919, 1920, 1927, 1941, 1944, 1945, 1955, 1958], "use_local_synchron": 24, "enqueu": [24, 55, 972, 974, 975, 1894, 1924], "significantli": [24, 45, 48, 891, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1755, 1927, 1942], "taken": [24, 30, 45, 55, 56, 57, 62, 854, 1089, 1091, 1114, 1115, 1352, 1365, 1373, 1436, 1512, 1520, 1760, 1793, 1889, 1891, 1893, 1894, 1896, 1898, 1901, 1907, 1912, 1915, 1917, 1956, 1958], "get_group_rank": 24, "global_rank": [24, 32], "translat": [24, 1148, 1891, 1909, 1910, 1925, 1949], "get_global_rank": 24, "group_rank": [24, 32, 42], "get_process_group_rank": 24, "dst": [24, 1866, 1915], "destin": [24, 26, 35, 38, 48, 199, 405, 406, 592, 983, 984, 1137, 1195, 1302, 1303, 1429, 1869, 1910, 1923, 1924, 1929], "unspecifi": [24, 470, 809, 810, 811, 814, 897, 898, 1462, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1792, 1798, 1878, 1927, 1932], "sender": [24, 1925], "isend": 24, "irecv": 24, "is_complet": 24, "finish": [24, 26, 32, 38, 39, 41, 43, 55, 1125, 1894, 1895, 1908, 1917, 1923, 1925, 1958], "batch_isend_irecv": 24, "p2p_op_list": 24, "p2pop": 24, "op_list": 24, "send_tensor": 24, "recv_tensor": 24, "send_op": 24, "recv_op": 24, "req": 24, "pg": [24, 1609], "set_devic": [24, 26, 48, 1609, 1751, 1867, 1923, 1930], "p2p": [24, 41], "async_op": 24, "onto": [24, 48, 56, 57, 59, 1030, 1203, 1206, 1267, 1621, 1849, 1866, 1883, 1894, 1897, 1898, 1902, 1917, 1949, 1955, 1958], "get_futur": [24, 1609], "regard": [24, 1360, 1361, 1362, 1372, 1373, 1519, 1520, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1868, 1925, 1927, 1950], "101": [24, 1337], "overwrot": 24, "sent": [24, 26, 1007, 1871, 1883, 1904, 1923, 1924, 1925], "broadcast_object_list": 24, "object_list": 24, "picklabl": [24, 1195, 1429, 1915], "current_devic": [24, 26, 48, 980, 988, 989, 996, 997, 1013, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1031, 1032, 1033, 1034, 1044, 1045, 1046, 1851, 1867, 1930, 1943], "insecur": [24, 1267], "malici": [24, 1267, 1915], "ineffici": [24, 48, 1894, 1918], "redoptyp": 24, "bitwis": [24, 913, 915, 916, 918, 1872, 1905, 1919, 1935], "reduceop": 24, "int64": [24, 74, 181, 198, 303, 311, 383, 854, 912, 925, 1069, 1082, 1083, 1120, 1511, 1642, 1722, 1726, 1727, 1747, 1795, 1796, 1797, 1799, 1800, 1894, 1927, 1929, 1930, 1933, 1959], "1j": [24, 687, 953, 954, 1191, 1735, 1736, 1856, 1891, 1899, 1907], "2j": [24, 687, 953, 954, 1735, 1736, 1763, 1856, 1891], "tensor_list": [24, 1886], "all_gather_into_tensor": 24, "output_tensor": 24, "input_tensor": [24, 1948], "accommod": [24, 1425, 1426, 1427], "ii": [24, 956, 1068, 1399, 1400], "tensor_in": 24, "tensor_out": 24, "tensor_out2": 24, "all_gather_object": 24, "obj": [24, 56, 57, 59, 869, 992, 1181, 1182, 1201, 1202, 1207, 1743, 1852, 1869, 1907, 1908, 1915], "pickabl": 24, "popul": [24, 30, 39, 48, 55, 56, 325, 484, 492, 493, 1296, 1325, 1894, 1896, 1945, 1955], "responsibl": 24, "gather_object": 24, "gather_list": 24, "object_gather_list": 24, "scatter_list": 24, "tensor_s": 24, "t_one": 24, "t_five": 24, "scatter_object_list": 24, "scatter_object_output_list": 24, "scatter_object_input_list": 24, "output_list": 24, "input_list": 24, "reduce_scatter_tensor": 24, "all_to_all_singl": 24, "output_split_s": 24, "input_split_s": 24, "13": [24, 864, 935, 1066, 1069, 1113, 1148, 1158, 1199, 1285, 1353, 1377, 1378, 1426, 1463, 1523, 1524, 1785, 1828, 1860, 1868, 1872, 1913, 1927, 1943, 1950, 1956], "14": [24, 57, 64, 65, 311, 506, 934, 1011, 1012, 1051, 1066, 1158, 1248, 1254, 1323, 1353, 1426, 1711, 1718, 1785, 1828, 1829, 1834, 1860, 1868, 1872, 1913, 1927, 1931, 1932, 1943], "15": [24, 56, 606, 1066, 1138, 1148, 1158, 1218, 1232, 1353, 1426, 1427, 1646, 1648, 1703, 1776, 1785, 1832, 1860, 1868, 1869, 1872, 1912, 1927], "uneven": [24, 25, 28, 1609], "18": [24, 311, 434, 674, 1069, 1148, 1192, 1268, 1426, 1868, 1910, 1912, 1913, 1927, 1943], "21": [24, 30, 674, 931, 1051, 1254, 1711, 1834, 1868, 1927], "22": [24, 30, 311, 606, 1268, 1600, 1646, 1648, 1868, 1906, 1927, 1943], "23": [24, 502, 1268, 1771, 1868, 1927, 1956], "31": [24, 917, 1344, 1424, 1600, 1771, 1912], "33": [24, 727, 728, 729, 730, 731, 732, 761, 1195, 1357, 1358, 1359, 1361, 1362, 1427, 1429, 1503, 1505, 1506, 1508, 1868, 1912], "34": [24, 1943, 1949, 1956], "35": [24, 1254, 1348, 1349, 1393, 1394, 1468, 1711], "36": [24, 311, 1111, 1148, 1943, 1949], "input_split": 24, "output_split": 24, "5j": 24, "6j": 24, "7j": 24, "8j": 24, "9j": 24, "10j": 24, "11j": 24, "12j": 24, "13j": 24, "14j": 24, "15j": 24, "16j": 24, "output_tensor_list": 24, "input_tensor_list": 24, "monitored_barri": [24, 1913], "wait_all_rank": 24, "band": 24, "bor": 24, "bxor": 24, "premul_sum": 24, "suppos": [24, 56, 1192, 1696, 1878, 1927, 1945, 1946, 1947], "_make_nccl_premul_sum": 24, "all_reduce_multigpu": 24, "__members__": 24, "reduce_op": 24, "mention": [24, 45, 1866, 1870, 1871, 1885, 1891, 1894, 1902, 1912, 1927, 1931, 1938, 1949, 1950, 1956], "revisit": 24, "broadcast_multigpu": 24, "reduce_multigpu": 24, "all_gather_multigpu": 24, "reduce_scatter_multigpu": 24, "distributed_test": 24, "dev_idx": 24, "src_tensor": 24, "resid": [24, 48, 55, 186, 279, 327, 1267, 1609, 1894, 1916, 1923], "dst_tensor": 24, "cpp_extens": [24, 1867, 1896], "cpp_c10d_extens": 24, "torchrun": [24, 27, 33, 40, 44], "benefici": [24, 1902], "nproc_per_nod": [24, 33], "num_gpus_you_hav": 24, "your_training_script": [24, 40, 42], "arg3": [24, 46], "192": [24, 606, 1912], "168": 24, "nnode": [24, 40, 42], "offer": [24, 48, 51, 1609, 1848, 1894, 1900, 1915, 1923, 1927, 1942, 1946, 1951], "local_process_rank": 24, "local_rank": [24, 32, 34, 39, 42, 44, 1468], "argpars": [24, 42, 1894], "parser": [24, 42, 1894], "argumentpars": [24, 42, 1894], "add_argu": [24, 42, 1894], "parse_arg": [24, 33, 42, 44, 1894, 1912], "output_devic": [24, 28, 42, 1366, 1468, 1593, 1609], "adjust": [24, 26, 28, 30, 48, 1867, 1893, 1919, 1958], "launcher": [24, 42], "filesystem": [24, 26, 970, 1866, 1915], "12042": 24, "imagenet": [24, 1889], "inconsist": [24, 48, 854, 1727, 1896], "suit": [24, 1868, 1870, 1871, 1912, 1919, 1923, 1953], "group_gloo": 24, "29501": 24, "monitoredbarri": 24, "transport": [24, 1923], "598": 24, "2401": 24, "db00": 24, "eef0": 24, "1100": 24, "3560": 24, "1c05": 24, "25d": 24, "8594": 24, "torch_cpp_log_level": 24, "twolinlayernet": 24, "ddp": [24, 25, 26, 28, 29, 48, 1468, 1609, 1867, 1894, 1895, 1923, 1946], "i0607": 24, "739390": 24, "515217": 24, "logger": [24, 1936, 1937], "173": 24, "broadcast_buff": [24, 1609], "bucket_cap_byt": 24, "26214400": 24, "find_unused_paramet": [24, 1609, 1895], "gradient_as_bucket_view": [24, 1609], "is_multi_device_modul": 24, "num_parameter_tensor": 24, "total_parameter_size_byt": 24, "440": 24, "bucket_s": 24, "cuda_visible_devic": [24, 1037, 1609, 1894], "module_nam": [24, 56, 806, 843, 1915], "nccl_ib_timeout": 24, "nccl_nthread": 24, "58": [24, 1950], "085681": 24, "544067": 24, "344": 24, "unused_parameter_s": 24, "40838608": 24, "5983335": 24, "4326421": 24, "comp": [24, 30], "4207652": 24, "085693": 24, "544066": 24, "42850427": 24, "3885553": 24, "2357981": 24, "2234674": 24, "enhanc": [24, 48, 1609, 1944], "unus": [24, 28, 56, 896, 1007, 1021, 1200, 1207, 1391, 1609, 1664, 1868, 1870, 1871, 1894, 1895, 1900, 1915], "went": [24, 56], "wasn": [24, 1267, 1868], "va": 24, "lue": 24, "indirectli": 24, "outstand": [24, 1923], "stuck": [24, 32, 43], "uninform": 24, "root": [24, 26, 34, 41, 42, 45, 48, 56, 782, 1133, 1233, 1234, 1679, 1742, 1802, 1879, 1891, 1915, 1923, 1924, 1927, 1946], "nontrivi": [24, 1894, 1944], "reveal": [24, 1895], "default_pg": 24, "opt": [24, 28, 1207, 1683, 1684, 1690, 1694, 1696, 1868, 1899], "longtensor": [24, 124, 125, 126, 305, 307, 309, 441, 460, 502, 504, 506, 863, 864, 1137, 1169, 1217, 1319, 1372, 1373, 1432, 1519, 1520, 1565, 1655, 1747, 1785, 1798, 1823, 1831, 1862, 1930, 1933], "set_debug_level": 24, "set_debug_level_from_env": 24, "get_debug_level": 24, "torch_show_cpp_stacktrac": 24, "disterror": 24, "distbackenderror": 24, "thrown": [24, 29, 55, 606, 867, 869, 1025, 1066, 1158, 1195, 1226, 1235, 1237, 1239, 1242, 1243, 1254, 1429, 1613, 1860, 1910, 1915, 1949], "distnetworkerror": 24, "ex": [24, 33, 1609, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1881, 1955], "diststoreerror": 24, "outlin": [25, 1916, 1924, 1946], "joinabl": [25, 28, 1609, 1867], "joinhook": [25, 1867], "throw_on_early_termin": [25, 1609], "shadow": [25, 28, 1609, 1936, 1937], "notify_join_context": 25, "zeroredundancyoptim": [25, 28, 1609, 1867], "01": [25, 28, 43, 477, 744, 769, 810, 811, 1069, 1111, 1415, 1543, 1544, 1600, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1687, 1693, 1713, 1767, 1769, 1770, 1775, 1776, 1869, 1889, 1901, 1912, 1914, 1951], "yet": [25, 32, 45, 46, 48, 53, 55, 56, 70, 72, 73, 971, 1042, 1198, 1200, 1213, 1301, 1609, 1623, 1627, 1629, 1668, 1669, 1867, 1870, 1871, 1877, 1885, 1886, 1894, 1912, 1913, 1918, 1923, 1925, 1927, 1928, 1930, 1941, 1945, 1946, 1949, 1952, 1956], "vacuou": 25, "inherit": [25, 1634, 1868, 1870, 1886, 1896, 1902, 1904], "join_hook": [25, 28, 1609], "join_devic": 25, "join_process_group": 25, "repeatedli": [25, 1894, 1927], "main_hook": 25, "post_hook": 25, "is_last_join": 25, "dcp": 26, "reshard": [26, 29, 48], "storag": [26, 48, 211, 301, 329, 332, 333, 424, 447, 472, 488, 509, 513, 547, 548, 573, 574, 576, 577, 867, 884, 886, 992, 1059, 1165, 1169, 1181, 1195, 1203, 1267, 1289, 1328, 1329, 1366, 1429, 1445, 1729, 1743, 1750, 1781, 1786, 1790, 1804, 1827, 1833, 1849, 1866, 1867, 1869, 1880, 1883, 1891, 1894, 1904, 1907, 1915, 1923, 1927, 1930, 1931, 1933, 1941, 1945], "entrypoint": [26, 29, 32, 34, 39, 42, 45, 1883], "storage_read": 26, "coordinator_rank": 26, "no_dist": 26, "planner": 26, "spmd": 26, "style": [26, 29, 31, 56, 866, 1063, 1119, 1655, 1678, 1868, 1870, 1871, 1912, 1915, 1932, 1947], "fullfil": 26, "shardedtensor": [26, 48], "po": [26, 1912], "storageread": [26, 1867], "rank0": [26, 48], "my_model": [26, 1609, 1868, 1941, 1946, 1956], "mymodul": [26, 45, 46, 48, 56, 1199, 1200, 1202, 1206, 1207, 1213, 1430, 1431, 1439, 1440, 1868, 1870, 1871, 1898, 1907, 1923], "adagrad": [26, 1372, 1878, 1914, 1923], "model_state_dict": [26, 1910], "fs_storage_read": 26, "filesystemread": [26, 1867], "save_state_dict": [26, 1867], "storage_writ": 26, "fsdp": [26, 29, 48, 1867, 1946], "shardingstrategi": [26, 48, 1867], "hybrid_shard": [26, 48], "shard_group": 26, "storagewrit": [26, 1867], "fs_storage_writ": 26, "filesystemwrit": [26, 1867], "act": [26, 30, 32, 39, 53, 847, 1346, 1430, 1431, 1440, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1635, 1636, 1637, 1638, 1639, 1848, 1894, 1902, 1906, 1914, 1949], "told": [26, 1870], "role": [26, 32, 33, 41, 42, 1949], "read_metadata": 26, "set_up_storage_read": 26, "prepare_local_plan": 26, "prepare_global_plan": 26, "read_data": 26, "central": [26, 57, 1148, 1899, 1901], "loadplan": [26, 1867], "storage_data": 26, "loadplann": [26, 1867], "load_byt": 26, "bytesio": [26, 45, 1203, 1206, 1267, 1743, 1912, 1918], "resolve_tensor": 26, "storagelay": 26, "schedul": [26, 32, 34, 40, 55, 669, 1679, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1877, 1895, 1901, 1917, 1946], "is_coordin": 26, "set_up_storage_writ": 26, "write_data": 26, "mark": [26, 41, 45, 55, 56, 57, 62, 65, 815, 886, 887, 944, 1310, 1311, 1609, 1663, 1868, 1870, 1891, 1895, 1896, 1902, 1907, 1915, 1917, 1924, 1933, 1938, 1946, 1947], "recover": 26, "writeresult": 26, "saveplan": [26, 1867], "saveplann": [26, 1867], "resolve_data": 26, "assumpt": [26, 38, 42, 45, 897, 944, 1352, 1383, 1891, 1895, 1899, 1923, 1924, 1927, 1944, 1946, 1952, 1956], "writeitem": [26, 1867], "tensor_data": 26, "set_up_plann": 26, "create_local_plan": 26, "create_global_plan": 26, "commit_tensor": 26, "defaultloadplann": [26, 1867], "rewrit": [26, 45, 53, 57, 59, 64, 65, 72, 73, 1879, 1891, 1899, 1909, 1910, 1912, 1943], "requit": 26, "intrincaci": 26, "renameplann": 26, "original_state_dict": 26, "foo_": [26, 1125], "v": [26, 38, 45, 52, 56, 476, 477, 533, 884, 891, 893, 894, 895, 925, 1124, 1134, 1136, 1192, 1209, 1231, 1235, 1259, 1263, 1268, 1435, 1477, 1478, 1519, 1564, 1648, 1653, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1701, 1734, 1794, 1798, 1813, 1814, 1859, 1868, 1869, 1870, 1871, 1881, 1891, 1899, 1908, 1915, 1927, 1932, 1940], "flatten_sharded_tensor": 26, "_flatten_sharded_tensor": 26, "flatten_state_dict": 26, "read_item": 26, "dest_index": 26, "fqn": [26, 29, 45, 1937], "metamodelmateri": 26, "defaultsaveplann": [26, 1867], "empty_lik": [26, 1848, 1869, 1873, 1884, 1886, 1913, 1927], "global_plan": 26, "finish_plan": 26, "central_plan": 26, "alia": [26, 30, 35, 81, 82, 101, 177, 178, 343, 396, 425, 426, 433, 512, 530, 671, 855, 856, 857, 858, 859, 860, 861, 878, 937, 950, 951, 1054, 1061, 1064, 1075, 1076, 1077, 1079, 1080, 1106, 1141, 1149, 1150, 1162, 1163, 1164, 1173, 1193, 1195, 1222, 1223, 1230, 1246, 1250, 1253, 1281, 1291, 1292, 1302, 1320, 1322, 1332, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1429, 1539, 1612, 1642, 1658, 1698, 1703, 1706, 1741, 1764, 1779, 1782, 1784, 1811, 1815, 1816, 1835, 1841, 1863, 1871, 1896, 1913, 1928, 1929, 1933, 1945, 1951], "readitem": [26, 1867], "planner_data": 26, "loaditemtyp": 26, "metadataindex": 26, "dest_offset": 26, "storage_index": 26, "storage_offset": [26, 128, 509, 606, 867, 1869, 1913, 1946, 1951], "tandem": 26, "fp16planner": 26, "write_item": 26, "writeitemtyp": 26, "byte_io": 26, "itertool": [26, 30, 927, 940], "islic": 26, "dataclass": [26, 45, 46, 1949, 1955], "ddploadbalancingplann": 26, "all_plan": 26, "saveextradataplann": 26, "merged_data": 26, "new_plan": 26, "idempot": [26, 1923, 1925], "hi": [26, 1399, 1400, 1868, 1870, 1899], "peak": [26, 28, 48, 1017, 1019, 1025, 1032, 1033, 1034, 1609, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1687, 1693, 1916, 1953], "late": [26, 41], "tensorwritedata": 26, "nonetyp": [26, 45, 1869, 1871], "single_file_per_rank": 26, "sync_fil": 26, "thread_count": 26, "per_thread_copy_ahead": 26, "10000000": 26, "simplif": [26, 1944], "atom": [26, 41, 56, 1872], "distributedtensor": [26, 29], "dedup_replicated_tensor": 26, "lookup_object": 26, "transform_object": 26, "lookup_tensor": 26, "transform_tensor": 26, "fault": [27, 32, 40, 41, 1121], "toler": [27, 32, 40, 41, 56, 683, 897, 898, 1184, 1211, 1212, 1250, 1253, 1268, 1664, 1671, 1868, 1934], "quickstart": 27, "agent": [27, 33, 34, 35, 38, 40, 42, 43, 1923], "expir": 27, "metric": [27, 1017, 1019, 1025, 1695, 1881, 1902, 1917, 1932, 1946, 1953], "kubernet": 27, "distributedoptim": [28, 1609, 1867, 1923, 1924], "rref": [28, 1609, 1867, 1871, 1916, 1924], "optimizer_class": 28, "params_rref": 28, "get_gradi": [28, 1913, 1923, 1924], "multithread": [28, 1894], "dist_autograd": [28, 1609, 1923, 1924], "rpc": [28, 55, 1609, 1867, 1871, 1916, 1924, 1925], "context_id": [28, 1609, 1923, 1924], "rref1": [28, 1923, 1924], "worker1": [28, 55, 1609, 1923, 1924], "rref2": [28, 1923, 1924], "to_her": [28, 1609, 1913, 1923, 1924, 1925], "dist_optim": [28, 1609, 1924], "postlocalsgdoptim": [28, 1867], "afer": 28, "modelaverag": 28, "localsgd": 28, "model_averag": 28, "post_localsgd_hook": 28, "postlocalsgdst": 28, "subgroup": 28, "start_localsgd_it": 28, "warmup_step": 28, "local_optim": 28, "periodicmodelaverag": 28, "intra": [28, 48, 1893, 1895, 1916], "unnecessari": [28, 1649, 1871, 1891, 1894, 1896, 1907, 1915, 1931], "parameters_as_bucket_view": 28, "overlap_with_ddp": 28, "consumpt": [28, 52, 1654, 1927, 1932, 1938], "partit": [28, 29, 1337, 1834, 1912, 1913, 1916, 1924, 1925, 1946, 1955], "registr": [28, 29, 55, 72, 1011, 1602, 1607, 1608, 1609, 1618, 1621, 1875, 1910, 1915, 1942], "offset": [28, 32, 215, 216, 217, 218, 329, 509, 547, 735, 867, 1056, 1057, 1058, 1059, 1121, 1230, 1373, 1520, 1609, 1713, 1714, 1793, 1838, 1840, 1869, 1871, 1943, 1949, 1951], "intact": [28, 1923], "ddp_zero_hook": 28, "disjointli": 28, "trail": [28, 1644, 1646, 1886, 1889, 1892, 1896], "wari": 28, "static_graph": [28, 1609, 1895], "third": [28, 30, 1067, 1068, 1285, 1337, 1344, 1359, 1362, 1424, 1693, 1867, 1868, 1894, 1897, 1902, 1915, 1917], "add_param_group": [28, 1621, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "param_group": [28, 48, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1678, 1679, 1680, 1681, 1682, 1689, 1692], "frozen": [28, 48, 1199, 1205, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1872, 1908], "trainabl": [28, 1014, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1678, 1679, 1680, 1681, 1682, 1896], "consolidate_state_dict": 28, "consolid": [28, 48, 1916], "pertain": 28, "preced": [28, 32, 48, 669, 1604, 1693, 1833, 1872, 1893, 1914, 1918], "dtensor": [29, 48], "rowwis": 29, "colwis": 29, "pairwis": [29, 30, 1389, 1438, 1477], "parallelize_modul": [29, 1867], "device_mesh": [29, 48], "parallelize_plan": 29, "tp_mesh_dim": 29, "sub_modul": 29, "parallelstyl": 29, "devicemesh": 29, "mesh": [29, 1932], "prepar": [29, 48, 56, 786, 828, 830, 846, 848, 850, 851, 852, 1134, 1205, 1872, 1912, 1936, 1937], "pairwiseparallel": [29, 1867], "finer": [29, 1946], "granular": [29, 48, 70, 1209, 1890, 1954], "rowwiseparallel": [29, 1867], "_prepare_input": 29, "make_input_shard_1d_last_dim": [29, 1867], "_prepare_output": 29, "make_output_tensor": [29, 1867], "colwiseparallel": [29, 1867], "make_input_replicate_1d": [29, 1867], "make_sharded_output_tensor": 29, "megatron": 29, "lm": 29, "arxiv": [29, 30, 1399, 1447, 1448, 1475, 1653, 1701, 1755, 1814, 1891], "ab": [29, 30, 80, 81, 614, 615, 671, 929, 1068, 1227, 1248, 1249, 1251, 1252, 1265, 1268, 1399, 1448, 1475, 1478, 1480, 1568, 1653, 1656, 1695, 1701, 1705, 1755, 1867, 1869, 1871, 1884, 1885, 1886, 1894, 1902, 1913, 1927, 1933, 1941, 1942, 1943, 1946, 1949, 1951, 1956], "1909": [29, 867], "08053": 29, "multiheadattent": [29, 1472, 1474, 1476, 1918], "mlp": [29, 1600, 1910, 1918], "sequenceparallel": [29, 1867], "pdf": [29, 1352, 1447, 1776, 1891], "2205": 29, "05198": 29, "expectedli": 29, "make_input_reshard_repl": [29, 1867], "make_input_shard_1d": [29, 1867], "make_output_replicate_1d": [29, 1867], "make_output_reshard_tensor": [29, 1867], "make_output_shard_1d": [29, 1867], "head": [29, 724, 1337, 1435, 1472, 1474, 1476], "compos": [29, 30, 52, 56, 727, 728, 729, 730, 731, 732, 755, 756, 761, 762, 763, 771, 772, 932, 1126, 1128, 1129, 1130, 1136, 1195, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1357, 1358, 1359, 1360, 1361, 1362, 1377, 1378, 1397, 1398, 1417, 1422, 1423, 1424, 1429, 1477, 1482, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1503, 1504, 1505, 1506, 1507, 1508, 1523, 1524, 1546, 1549, 1550, 1552, 1553, 1554, 1716, 1717, 1859, 1867, 1868, 1871, 1884, 1896, 1897, 1902, 1910, 1912, 1915, 1932, 1949, 1951], "fullyshardeddataparallel": [29, 1867], "enable_2d_with_fsdp": [29, 1867], "pre_dp_module_transform": [29, 1867], "dp": 29, "preforward": 29, "parameteriz": 30, "tensorflow": [30, 1679, 1891, 1932], "backpropag": [30, 898, 1680, 1711, 1898, 1938], "surrog": 30, "likelihood": [30, 1337, 1383, 1436, 1443, 1525, 1563, 1571], "ratio": [30, 32, 606, 1377, 1378, 1523, 1524, 1869, 1927, 1953], "reinforc": [30, 1458, 1581], "polici": [30, 32, 34, 48, 1687, 1693], "reparameter": [30, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639, 1640, 1641, 1653], "trick": [30, 893, 1346, 1530, 1891, 1899, 1901, 1946], "autoencod": 30, "whilst": [30, 1894], "densiti": [30, 291, 1156, 1157, 1776, 1869, 1928], "log_prob": [30, 1337, 1352, 1512, 1869], "theta": [30, 1493, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1869], "alpha": [30, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 141, 142, 302, 303, 477, 543, 550, 551, 552, 553, 674, 675, 678, 679, 680, 733, 759, 764, 909, 1011, 1012, 1152, 1166, 1341, 1351, 1371, 1417, 1456, 1494, 1502, 1517, 1518, 1528, 1546, 1579, 1665, 1679, 1772, 1773, 1786, 1791, 1805, 1810, 1811, 1869, 1891, 1896, 1912, 1914, 1946, 1951], "partial": [30, 32, 41, 45, 48, 51, 56, 830, 1014, 1058, 1135, 1148, 1242, 1243, 1244, 1286, 1425, 1426, 1427, 1555, 1556, 1557, 1609, 1628, 1787, 1793, 1871, 1872, 1885, 1891, 1896, 1899, 1910, 1912, 1925, 1934, 1952], "pi": [30, 163, 367, 687, 919, 1152, 1153, 1247, 1379, 1443, 1526, 1571, 1685, 1686, 1705, 1767, 1768, 1771, 1772, 1773, 1774, 1809, 1870, 1871, 1915, 1928], "reward": 30, "ascent": 30, "prob": [30, 1869], "policy_network": 30, "next_stat": 30, "rsampl": 30, "parameter": [30, 367, 443, 1202, 1887, 1927], "has_rsampl": 30, "batch_shap": 30, "event_shap": 30, "validate_arg": 30, "arg_constraint": 30, "cdf": 30, "cumul": [30, 1047, 1048, 1049, 1050, 1051, 1275, 1347, 1348, 1349, 1379, 1402, 1403, 1404, 1468, 1526], "mass": 30, "enumerate_support": 30, "discret": [30, 47, 470, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1097, 1098, 1103, 1105, 1530, 1776, 1932, 1935], "cardin": [30, 1297], "univari": 30, "singleton": [30, 244, 1401, 1847, 1892], "cartesian": [30, 927, 1297, 1705], "_instanc": 30, "icdf": 30, "perplex": 30, "sample_shap": 30, "sample_n": 30, "set_default_validate_arg": 30, "mimic": [30, 1693], "stddev": 30, "varianc": [30, 960, 1347, 1348, 1349, 1374, 1383, 1392, 1393, 1394, 1402, 1403, 1404, 1411, 1412, 1413, 1468, 1521, 1525, 1678, 1679, 1715, 1724, 1725, 1854, 1855, 1889, 1902], "exp_famili": 30, "famili": 30, "p_": [30, 931, 1287, 1681], "langl": 30, "rangl": 30, "denot": [30, 45, 56, 960, 1216, 1235, 1241, 1254, 1264, 1357, 1358, 1395, 1618, 1621, 1681, 1795, 1796, 1797, 1799, 1800, 1856, 1899, 1921, 1924, 1927], "carrier": 30, "analyt": [30, 897, 898, 1519, 1927], "bregman": 30, "courtesi": 30, "frank": 30, "nielsen": 30, "richard": 30, "nock": 30, "logit": [30, 381, 1346, 1365, 1501, 1511, 1530, 1869, 1913, 1928], "70": [30, 1254, 1711, 1886], "odd": [30, 1089, 1090, 1091, 1099, 1100, 1101, 1503, 1504, 1505], "lower_bound": 30, "upper_bound": 30, "has_enumerate_support": 30, "param_shap": 30, "concentration1": 30, "concentration0": 30, "concentr": 30, "1046": 30, "1st": [30, 1892], "2nd": [30, 606, 1437, 1463, 1566, 1892], "greaterthan": 30, "total_count": 30, "71": 30, "trial": 30, "integergreaterthan": 30, "ldot": [30, 1227, 1235, 1266, 1282, 1297, 1401, 1422, 1423, 1424, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "dimension": [30, 46, 502, 504, 869, 875, 876, 877, 920, 927, 939, 1056, 1058, 1059, 1068, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1102, 1103, 1105, 1107, 1109, 1110, 1121, 1148, 1157, 1158, 1159, 1228, 1233, 1234, 1235, 1236, 1261, 1266, 1282, 1290, 1297, 1337, 1354, 1355, 1356, 1365, 1366, 1372, 1373, 1401, 1419, 1436, 1450, 1451, 1452, 1453, 1454, 1455, 1462, 1464, 1468, 1484, 1485, 1486, 1511, 1563, 1566, 1598, 1599, 1616, 1655, 1718, 1795, 1796, 1797, 1798, 1799, 1800, 1809, 1824, 1827, 1828, 1834, 1871, 1886, 1889, 1892, 1899, 1905, 1927, 1929, 1930, 1933, 1935, 1944], "unnorm": [30, 1365, 1501, 1511, 1530], "likewis": [30, 1833], "25": [30, 485, 575, 576, 577, 929, 1156, 1263, 1268, 1375, 1432, 1434, 1437, 1600, 1609, 1646, 1648, 1671, 1693, 1712, 1853, 1868, 1927, 1928], "independentconstraint": 30, "simplex": 30, "loc": [30, 1267], "lorentz": 30, "3214": 30, "width": [30, 768, 774, 847, 1155, 1156, 1157, 1343, 1344, 1358, 1359, 1361, 1362, 1398, 1423, 1424, 1436, 1463, 1481, 1539, 1597, 1885, 1927], "df": 30, "chi": 30, "continuous_bernoulli": 30, "lim": [30, 1192], "499": 30, "501": 30, "2538": [30, 1227], "pervas": 30, "loaiza": 30, "ganem": 30, "cunningham": 30, "jp": 30, "1907": 30, "06845": 30, "8954": 30, "greaterthaneq": 30, "df1": 30, "df2": 30, "fisher": 30, "snedecor": 30, "2453": 30, "degre": [30, 960, 1045, 1052, 1195, 1233, 1234, 1429, 1438, 1477, 1609, 1719, 1739, 1807, 1808, 1854, 1855, 1869, 1899, 1913, 1927], "freedom": [30, 960, 1807, 1808, 1854, 1855, 1899], "0124": 30, "half_cauchi": 30, "half_norm": 30, "base_distribut": 30, "reinterpreted_batch_ndim": 30, "reinterpret": [30, 488, 1945], "diagon": [30, 53, 214, 250, 584, 585, 586, 587, 920, 956, 960, 1055, 1056, 1057, 1059, 1068, 1081, 1129, 1130, 1140, 1225, 1237, 1239, 1242, 1254, 1258, 1568, 1578, 1793, 1832, 1836, 1837, 1838, 1839, 1840, 1869, 1896, 1913, 1931], "multivari": [30, 1928], "multivariate_norm": 30, "mvn": 30, "scale_tril": 30, "diag": [30, 54, 1128, 1129, 1130, 1231, 1232, 1259, 1701, 1793, 1813, 1814, 1869, 1913], "diagn": 30, "1729": [30, 1902], "lkj_choleski": 30, "lkj": 30, "matric": [30, 250, 675, 678, 909, 921, 922, 931, 932, 933, 934, 1056, 1140, 1216, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1268, 1276, 1285, 1287, 1300, 1380, 1438, 1493, 1527, 1616, 1621, 1699, 1701, 1711, 1760, 1786, 1790, 1791, 1813, 1814, 1836, 1837, 1839, 1869, 1884, 1899, 1905, 1927, 1933], "eta": [30, 1665, 1667, 1680], "proport": [30, 1397, 1398, 1435, 1476], "det": [30, 1233, 1234, 1255, 1276, 1869, 1913], "l": [30, 724, 749, 910, 919, 925, 932, 933, 934, 1068, 1152, 1153, 1195, 1215, 1225, 1226, 1231, 1232, 1233, 1234, 1238, 1242, 1243, 1285, 1287, 1342, 1345, 1346, 1347, 1357, 1365, 1368, 1369, 1376, 1381, 1389, 1390, 1392, 1395, 1396, 1399, 1411, 1420, 1422, 1429, 1431, 1435, 1436, 1444, 1460, 1477, 1478, 1480, 1578, 1627, 1636, 1644, 1646, 1671, 1747, 1809, 1869, 1871, 1891, 1932, 1943, 1956], "lkjcorr": 30, "onion": 30, "3x3": [30, 1051, 1834], "3516": 30, "9361": 30, "1899": [30, 1298], "4748": 30, "8593": 30, "vine": 30, "2009": [30, 1701, 1814], "lewandowski": 30, "dorota": 30, "kurowicka": 30, "harri": [30, 1776], "joe": 30, "journal": [30, 1718], "1016": 30, "jmva": 30, "04": [30, 1111, 1273, 1769, 1776], "008": 30, "corrcholeski": 30, "log_norm": [30, 1913], "lowrank_multivariate_norm": 30, "cov_factor": 30, "cov_diag": 30, "covari": [30, 922, 956, 960, 1347, 1348, 1349, 1468, 1701], "covariance_matrix": 30, "2102": 30, "5429": [30, 1836], "woodburi": 30, "lemma": 30, "formula": [30, 78, 757, 758, 878, 880, 910, 919, 1152, 1153, 1221, 1287, 1288, 1443, 1496, 1497, 1585, 1681, 1714, 1896, 1899, 1917, 1922, 1927, 1944], "capacit": 30, "precision_matrix": 30, "mixture_same_famili": 30, "mixture_distribut": 30, "component_distribut": 30, "rightmost": [30, 922, 1156, 1157, 1871], "gaussian": [30, 1379, 1383, 1458, 1525, 1526, 1581, 1775, 1928], "gmm": 30, "bivari": 30, "categori": [30, 34, 74, 1319, 1871, 1873, 1912, 1914, 1917, 1919, 1930, 1950, 1952], "innermost": [30, 56, 223, 1148, 1157, 1747], "1338": 30, "mathbf": [30, 1216, 1617, 1650, 1653, 1680], "sigma": [30, 163, 367, 749, 1346, 1380, 1381, 1382, 1399, 1400, 1458, 1459, 1527, 1581, 1617, 1650, 1770, 1807, 1808, 1854, 1855, 1869], "triangular": [30, 932, 933, 934, 1225, 1226, 1232, 1234, 1242, 1243, 1250, 1253, 1254, 1256, 1258, 1568, 1687, 1711, 1836, 1837, 1838, 1839, 1840], "decomposit": [30, 46, 56, 71, 932, 933, 934, 1140, 1225, 1226, 1231, 1232, 1233, 1234, 1235, 1237, 1242, 1243, 1244, 1245, 1250, 1254, 1255, 1259, 1260, 1285, 1287, 1616, 1699, 1701, 1705, 1711, 1813, 1814, 1867, 1905, 1944, 1945, 1955], "positivedefinit": 30, "lowercholeski": 30, "negative_binomi": 30, "halfopeninterv": 30, "mu": [30, 367, 1679, 1681], "one_hot_categor": 30, "onehot": 30, "5623": 30, "nonneg": [30, 1478, 1701, 1814, 1928], "pmf": 30, "mathrm": [30, 911, 1233, 1234, 1235, 1236, 1247, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1401, 1438, 1443, 1468, 1616, 1668, 1669, 1670, 1680, 1715, 1891, 1928], "relaxed_bernoulli": 30, "temperatur": [30, 1530, 1867], "parametr": [30, 1124, 1618, 1625, 1650, 1651, 1653, 1887, 1896], "relax": [30, 969, 1003, 1211, 1212, 1621, 1918, 1946], "reparametriz": 30, "99": [30, 1207, 1679, 1868], "2951": [30, 1295], "3442": 30, "8918": 30, "9021": 30, "maddison": 30, "2017": [30, 1472, 1474, 1476, 1794, 1908], "reparametr": [30, 1530, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1633, 1653], "jang": 30, "relaxed_categor": 30, "1294": [30, 932], "2324": [30, 1195, 1429], "3859": 30, "2523": 30, "student": 30, "transformed_distribut": 30, "composit": [30, 53, 1128, 1243, 1616, 1868, 1871, 1897, 1902, 1912], "basedistribut": 30, "dx": [30, 1051, 1345, 1834, 1869, 1896, 1897, 1928], "dy": 30, "logist": [30, 1458, 1461, 1581, 1928], "sigmoidtransform": 30, "affinetransform": 30, "invert": [30, 56, 1186, 1227, 1236, 1237, 1243, 1249, 1256, 1258, 1261, 1262, 1276, 1425, 1426, 1427, 1836, 1869, 1905, 1923], "3418": 30, "upper": [30, 45, 46, 171, 172, 173, 583, 784, 920, 925, 932, 933, 934, 936, 1082, 1083, 1155, 1156, 1225, 1226, 1232, 1234, 1242, 1243, 1254, 1258, 1447, 1568, 1576, 1577, 1687, 1693, 1711, 1726, 1747, 1836, 1839, 1840, 1869, 1889, 1913, 1928, 1934], "von_mis": 30, "circular": [30, 1357, 1358, 1359, 1405, 1406, 1407, 1566], "von": 30, "mise": 30, "unconstrain": [30, 1621], "angl": [30, 744, 873, 1052, 1276, 1415, 1705, 1719, 1763, 1867, 1869, 1913, 1927], "9777": 30, "radian": [30, 687, 873, 1052, 1719, 1869, 1913], "nichola": 30, "simul": [30, 477, 788, 790, 1918, 1921, 1944], "1979": 30, "152": [30, 606], "157": 30, "4784": [30, 1300], "symmetr": [30, 791, 809, 910, 919, 932, 933, 934, 1089, 1090, 1091, 1096, 1098, 1102, 1103, 1105, 1152, 1153, 1215, 1225, 1226, 1231, 1232, 1234, 1238, 1239, 1240, 1247, 1250, 1253, 1259, 1268, 1616, 1621, 1693, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1918, 1921], "x_ij": 30, "wu": [30, 1268], "chu": 30, "2018": [30, 1268, 1709], "sawyer": 30, "2007": 30, "anderson": 30, "w": [30, 54, 140, 749, 878, 880, 882, 888, 896, 910, 919, 960, 1126, 1137, 1152, 1153, 1192, 1235, 1335, 1336, 1343, 1344, 1346, 1348, 1349, 1353, 1358, 1359, 1365, 1369, 1370, 1372, 1373, 1374, 1381, 1393, 1394, 1401, 1412, 1413, 1423, 1424, 1434, 1435, 1436, 1441, 1442, 1463, 1479, 1480, 1482, 1483, 1493, 1501, 1519, 1520, 1528, 1563, 1569, 1570, 1617, 1650, 1653, 1869, 1884, 1885, 1889, 1891, 1896, 1899, 1914, 1915, 1932, 1954], "2003": 30, "ed": [30, 53, 1368, 1369, 1891, 1915, 1954, 1957], "odel": 30, "feiveson": 30, "1966": 30, "samplecovari": 30, "jasa": 30, "61": 30, "313": 30, "199": 30, "203": [30, 606], "ku": 30, "bloomfield": 30, "2010": [30, 1889], "ox": 30, "max_try_correct": 30, "bartlett": [30, 910], "singular": [30, 1227, 1241, 1242, 1248, 1250, 1252, 1253, 1259, 1260, 1268, 1276, 1285, 1617, 1621, 1701, 1813, 1814, 1905], "accordingli": [30, 56, 1205, 1399, 1621, 1886, 1923], "kl_diverg": 30, "kullback": [30, 1395, 1540], "leibler": [30, 1395, 1540], "notimplementederror": [30, 1915, 1949], "register_kl": 30, "type_p": 30, "type_q": 30, "kl_normal_norm": 30, "ambigu": [30, 56, 1180, 1360, 1361, 1362, 1376, 1425, 1426, 1427, 1481, 1871], "runtimewarn": 30, "basep": 30, "derivedq": 30, "kl_version1": 30, "derivedp": 30, "baseq": 30, "kl_version2": 30, "tie": 30, "abstransform": 30, "cache_s": [30, 1949], "event_dim": 30, "pointwis": [30, 941, 1129, 1130, 1273, 1274, 1395, 1884, 1892, 1945, 1948, 1950], "affin": [30, 48, 461, 462, 463, 464, 465, 738, 740, 741, 742, 791, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1468, 1493, 1894, 1902], "cattransform": 30, "tseq": 30, "functor": [30, 1011, 1012], "submatrix": 30, "x0": [30, 1948], "t0": [30, 45, 1148, 1665, 1870], "exptransform": 30, "identity_transform": 30, "composetransform": 30, "corrcholeskytransform": 30, "uncontrain": 30, "euclidean": [30, 929, 1564], "x_i": [30, 53, 936, 1047, 1048, 1049, 1050, 1264, 1271, 1419, 1438, 1462, 1464, 1477, 1548, 1584, 1708, 1792, 1807, 1808, 1834, 1854, 1855, 1856, 1928], "stickbreakingtransform": 30, "r_i": 30, "tanh": [30, 566, 749, 754, 784, 874, 1379, 1381, 1382, 1399, 1400, 1428, 1444, 1446, 1470, 1526, 1558, 1590, 1869, 1884, 1885, 1889, 1913, 1920, 1927, 1951], "unsign": [30, 1921, 1930, 1933, 1934, 1946], "z_i": 30, "s_i": 30, "y_i": [30, 936, 1047, 1048, 1049, 1050, 1264, 1271, 1477, 1834, 1856, 1899], "sqrt": [30, 56, 367, 538, 662, 663, 749, 956, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1161, 1215, 1297, 1347, 1348, 1349, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1379, 1381, 1382, 1384, 1392, 1393, 1394, 1397, 1398, 1399, 1400, 1401, 1414, 1416, 1444, 1446, 1468, 1526, 1578, 1621, 1666, 1667, 1668, 1669, 1672, 1678, 1679, 1715, 1742, 1775, 1807, 1808, 1869, 1884, 1889, 1890, 1891, 1913, 1927, 1928, 1934, 1951], "cumulativedistributiontransform": 30, "copula": 30, "base_dist": 30, "independenttransform": 30, "base_transform": 30, "log_abs_det_jacobian": 30, "lowercholeskytransform": 30, "positivedefinitetransform": 30, "powertransform": 30, "expon": [30, 258, 259, 270, 457, 458, 1111, 1118, 1219, 1249, 1337, 1417, 1564, 1708, 1718, 1755, 1869, 1930, 1933, 1951], "reshapetransform": 30, "in_shap": 30, "out_shap": 30, "softplustransform": 30, "tanhtransform": 30, "softmaxtransform": 30, "biject": 30, "hmc": 30, "stacktransform": 30, "stick": 30, "aris": [30, 56, 1891, 1944], "primarili": [30, 46, 55, 804, 805, 806, 812, 1329, 1881, 1918], "memoiz": [30, 1945], "_call": 30, "_invers": 30, "codomain": [30, 1891], "iff": [30, 1435], "weaker": [30, 1894], "pseudoinvers": [30, 1236, 1253, 1261], "monoton": [30, 1428, 1558, 1747], "forward_shap": 30, "inverse_shap": 30, "corr_choleski": 30, "greater_than": 30, "greater_than_eq": 30, "integer_interv": 30, "less_than": 30, "lower_choleski": 30, "lower_triangular": 30, "nonnegative_integ": 30, "one_hot": [30, 1869, 1913], "positive_integ": 30, "positive_semidefinit": 30, "positive_definit": 30, "real_vector": 30, "unit_interv": 30, "is_discret": 30, "constrain": [30, 45, 1465, 1871, 1902], "_cat": 30, "dependent_properti": 30, "_dependentproperti": 30, "_greaterthan": 30, "_greaterthaneq": 30, "_independentconstraint": 30, "_integerinterv": 30, "_interv": 30, "half_open_interv": 30, "_halfopeninterv": 30, "_lessthan": 30, "_multinomi": 30, "_stack": [30, 1913], "constraintregistri": 30, "biject_to": 30, "transform_to": 30, "overparameter": 30, "rotat": [30, 1739, 1813], "hamiltonian": 30, "mont": 30, "carlo": 30, "invari": [30, 45, 1642, 1788, 1795, 1796, 1797, 1798, 1799, 1800, 1925, 1927, 1941, 1955], "potential_energi": 30, "cheap": [30, 1337], "svi": 30, "fewer": [30, 45, 53, 682, 684, 685, 688, 935, 1216, 1217, 1283, 1293, 1295, 1296, 1298, 1301, 1324, 1327, 1383, 1510, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1709, 1794, 1807, 1808, 1812, 1830, 1854, 1855, 1877, 1892, 1907, 1934, 1958], "my_constraint": 30, "my_transform": 30, "myconstraintclass": 30, "my_factori": 30, "mytransform": 30, "param1": [30, 1902], "param2": [30, 1902], "constraint_registri": 30, "my_registri": 30, "construct_transform": 30, "myconstraint": 30, "from_dlpack": [31, 869, 1867], "ext_tensor": [31, 1119], "extern": [31, 972, 1119, 1211, 1851, 1881, 1893, 1894, 1905, 1912, 1938], "immut": [31, 1119, 1871], "__dlpack__": [31, 1119], "capsul": [31, 869, 1119], "ndarrai": [31, 447, 868, 1119, 1120, 1795, 1796, 1797, 1798, 1799, 1800, 1827, 1912, 1932, 1934, 1946], "pycapsul": [31, 1119], "to_dlpack": [31, 1119, 1867], "t2": [31, 676, 677, 869, 1119, 1148, 1609, 1923, 1924, 1946, 1956], "dltensor": [31, 1119], "t3": [31, 1119, 1924], "legaci": [31, 42, 45, 1530, 1917, 1930], "idiomat": 31, "inde": [31, 1868, 1878, 1915, 1925, 1949], "plane": [32, 41, 727, 728, 729, 730, 731, 732, 755, 756, 757, 758, 761, 762, 763, 771, 772, 1056, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1357, 1358, 1359, 1360, 1361, 1362, 1377, 1378, 1397, 1398, 1401, 1417, 1422, 1423, 1424, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1523, 1524, 1546, 1549, 1550, 1552, 1553, 1554, 1653, 1716, 1717, 1739], "monitor": [32, 42, 43, 76, 971, 1307, 1695, 1867, 1894, 1900], "unhealthi": 32, "tear": 32, "react": 32, "decentr": 32, "diagram": [32, 41, 1195, 1429, 1918, 1925, 1943, 1946, 1956], "elasticag": 32, "quad": [32, 1345, 1346, 1365, 1396, 1420, 1436, 1478], "group_result": 32, "is_fail": [32, 33], "exit_cod": 32, "return_valu": [32, 33, 39, 1943], "get_worker_group": 32, "workergroup": [32, 42], "mutabl": [32, 1211, 1868, 1915, 1932], "implementor": 32, "defens": 32, "retri": [32, 34, 43, 1025, 1923, 1925], "max_restart": [32, 33, 42], "runresult": 32, "workerspec": [32, 33, 42, 43], "local_world_s": [32, 33, 42], "rdzv_handler": [32, 33, 41], "monitor_interv": [32, 33], "local_addr": [32, 41], "tee": [32, 39], "blueprint": 32, "spec": [32, 33, 43, 46, 57, 782, 783, 808, 809, 810, 813, 814, 815, 1910, 1920], "homogen": [32, 42], "rendezvoushandl": [32, 33, 41, 42], "rdzv": [32, 40, 42], "chose": [32, 1890, 1944], "consol": [32, 35, 38, 39, 42, 1932], "get_entrypoint_nam": 32, "__qualname__": 32, "workerst": 32, "unknown": [32, 46, 1611, 1612, 1925], "unrecover": 32, "interrupt": [32, 1883, 1954], "succeed": [32, 41, 1285, 1946], "termin": [32, 41, 43, 46, 56, 1671, 1883, 1923, 1948], "uncaught": [32, 34], "unhandl": 32, "recov": [32, 884, 1089, 1255, 1287, 1609, 1642, 1809, 1890, 1894, 1898, 1899, 1919], "is_run": 32, "role_rank": [32, 42], "role_world_s": [32, 42], "pid": [32, 34, 42, 43, 1468, 1898, 1917], "local_elastic_ag": 32, "localelasticag": [32, 33, 43], "start_method": [32, 33, 39, 43, 1883], "exit_barrier_timeout": 32, "log_dir": [32, 39, 1881, 1932], "inter": [32, 34, 48, 1145, 1758, 1893, 1895, 1916, 1923], "safeti": [32, 56, 943, 944, 1868, 1871, 1885, 1947], "advis": [32, 533, 606, 854, 1904], "pipe": [32, 43, 1867, 1923], "torchelastic_enable_file_tim": 32, "torchelastic_timer_fil": 32, "shared_queu": 32, "get_context": [32, 43, 1904], "nproc_per_process": 32, "foobar": [32, 34, 38, 39], "other_param": [32, 43], "usr": [32, 39, 41, 1894], "bin": [32, 39, 41, 290, 291, 808, 912, 1155, 1156, 1157, 1869, 1871, 1913, 1932, 1953], "simpleelasticag": 32, "scaffold": 32, "_assign_worker_rank": 32, "group_world_s": 32, "_exit_barri": 32, "guard": [32, 45, 57, 62, 65, 669, 941, 1877, 1904, 1913, 1915, 1935, 1938, 1946, 1952, 1956, 1957], "_initialize_work": 32, "worker_group": 32, "fresh": [32, 1059, 1750, 1781, 1866], "start_work": 32, "_stop_work": 32, "optimist": 32, "deleg": 32, "_monitor_work": 32, "_rendezv": 32, "_restart_work": 32, "_shutdown": 32, "death_sig": 32, "sigterm": 32, "_start_work": 32, "gracefulli": [32, 42, 53, 1226, 1897, 1946], "meaning": [32, 34, 35, 1025, 1894, 1950], "canon": [32, 34, 1868, 1942, 1945], "meaningless": 32, "intention": [32, 1065, 1856, 1900, 1923], "ship": [33, 1125, 1893, 1923], "programmat": [33, 56, 1902], "my_launch": 33, "argv": [33, 44], "trainer_entrypoint_fn": 33, "fn_arg": 33, "run_result": 33, "tricki": [33, 49, 54, 1891, 1902, 1925, 1941], "myrendezvoushandl": 33, "elastic_ag": 33, "servic": [33, 1895, 1944], "metrichandl": [33, 38], "mymetrichandl": 33, "metric_data": [33, 38], "metricdata": 33, "sink": [33, 38, 1881], "eventhandl": 33, "cloudwatch": 33, "nulleventhandl": 33, "myeventhandl": 33, "invalid": [34, 39, 944, 1195, 1319, 1429, 1890, 1891, 1912, 1915, 1916, 1945, 1949], "infra": [34, 1955], "start_process": [34, 39, 1883], "torchelastic_error_fil": 34, "smallest": [34, 46, 930, 1217, 1227, 1248, 1252, 1268, 1710, 1831, 1934, 1956, 1959], "timestamp": [34, 35, 38, 42, 1881, 1917, 1932, 1956], "error_handl": 34, "sugar": [34, 1870], "get_error_handl": 34, "childfailederror": 34, "get_first_failur": 34, "dump_error_fil": 34, "error_fil": [34, 39], "exitcod": [34, 42], "nanni": 34, "accur": [34, 971, 1148, 1271, 1307, 1371, 1718, 1834, 1894, 1924, 1938, 1945], "diagnost": [34, 69, 70, 71, 72, 73, 76, 669, 1868], "torchelastic_ag": 34, "trainer_0": 34, "trainer_1": 34, "json": [34, 39, 43, 1901, 1917, 1950, 1954], "trainer_n": 34, "errorhandl": 34, "record_except": 34, "processfailur": 34, "test_ev": 35, "eventsourc": 35, "get_logging_handl": 35, "millisecond": [35, 38, 971, 1307, 1881], "eventmetadatavalu": 35, "readm": [36, 37, 781, 1886], "telemetri": 38, "timeseri": 38, "metric_group": 38, "metric_nam": 38, "sensibl": 38, "my_modul": [38, 46, 48, 56, 1868, 1915], "nullmetricshandl": 38, "consolemetricshandl": 38, "my_method": 38, "put_metr": 38, "calculate_lat": 38, "succinctli": 38, "baz": [38, 56, 843, 1915, 1934], "leaf_modul": 38, "classnam": [38, 1871], "threw": [38, 1958], "my_app": 38, "consolemetrichandl": 38, "toi": [38, 1956], "stdout": [38, 39, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1912], "stdoutmetrichandl": 38, "1574213883": 38, "4182858": 38, "my_metr": 38, "1574213940": 38, "5237644": 38, "nullmetrichandl": 38, "class_nam": [38, 56], "def_nam": 38, "leaf": [38, 46, 140, 212, 325, 437, 477, 492, 493, 780, 827, 829, 868, 882, 1134, 1663, 1827, 1886, 1890, 1891, 1912, 1937, 1945], "metric_valu": 38, "metric_group_nam": 38, "popen": 39, "stderr": [39, 1866, 1880], "err": 39, "echo": 39, "hello": [39, 53, 1870, 1915], "pcontext": 39, "multiprocesscontext": 39, "subprocesscontext": 39, "keyset": 39, "bitmask": 39, "mask": [39, 389, 390, 391, 392, 393, 533, 724, 897, 898, 1289, 1341, 1352, 1374, 1435, 1472, 1473, 1474, 1475, 1476, 1521, 1578, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1682, 1867, 1869, 1884, 1885, 1927, 1946], "miss": [39, 678, 1124, 1195, 1290, 1300, 1363, 1392, 1393, 1394, 1429, 1545, 1651, 1896, 1908, 1912, 1927, 1944, 1947, 1949], "bar0": 39, "bar1": 39, "file1": 39, "file2": 39, "caution": [39, 1947], "short": [39, 56, 723, 752, 1068, 1192, 1352, 1399, 1400, 1512, 1662, 1760, 1809, 1870, 1884, 1891, 1892, 1902, 1923, 1929, 1930, 1933, 1943], "ing": 39, "cmd": [39, 42], "forkserv": [39, 1609, 1883, 1904], "tee_stdout": 39, "tee_stderr": 39, "processcontext": [39, 1883], "superset": [39, 42], "runprocsresult": 39, "num_nod": [40, 42], "trainers_per_nod": 40, "num_allowed_failur": 40, "job_id": [40, 41, 42], "endpoint": [40, 41, 42], "host_node_addr": [40, 42], "min_siz": [40, 42], "num_allowed_failures_or_membership_chang": 40, "node1": [40, 42], "29400": [40, 42], "sidecar": [40, 41], "agre": [41, 1254, 1925], "resum": [41, 1687, 1693, 1695, 1923, 1925, 1932, 1943], "retryabl": 41, "announc": 41, "previous": [41, 45, 48, 49, 52, 53, 54, 56, 211, 687, 781, 782, 1136, 1203, 1807, 1808, 1854, 1855, 1859, 1868, 1892, 1894, 1902, 1915, 1916, 1922, 1923, 1928, 1949, 1958], "lose": [41, 44, 48, 181, 198, 1885], "train_loop": [41, 851], "arriv": [41, 42, 1923, 1925], "dynamicrendezvoushandl": 41, "rendezvousbackend": 41, "c10drendezvousbackend": 41, "etcdrendezvousbackend": 41, "supersed": 41, "etcdrendezvoushandl": 41, "my_run_id": 41, "from_backend": 41, "run_id": [41, 42], "min_nod": 41, "max_nod": 41, "rendezvousparamet": 41, "admit": [41, 42, 1894], "get_as_bool": 41, "get_as_int": 41, "rendezvoushandlerregistri": 41, "create_handl": 41, "creator": [41, 1891, 1923, 1925], "get_run_id": 41, "is_clos": 41, "set_clos": 41, "next_rendezv": 41, "rendezvousclosederror": 41, "rendezvousconnectionerror": 41, "rendezvousstateerror": 41, "rendezvoustimeouterror": 41, "num_nodes_wait": 41, "shutdown": [41, 1923, 1924], "rendezvouserror": 41, "dynamic_rendezv": 41, "join_timeout": 41, "600": 41, "last_call_timeout": 41, "close_timeout": 41, "rendezvoustimeout": 41, "get_stat": [41, 78], "fenc": 41, "token": [41, 969, 1003, 1004, 1866, 1872, 1948], "set_stat": [41, 78], "last_cal": 41, "heartbeat": 41, "keep_al": 41, "c10d_rendezvous_backend": 41, "create_backend": 41, "store_typ": 41, "tcp": [41, 42, 1923], "read_timeout": 41, "60": [41, 43, 1383, 1697, 1824, 1829, 1881, 1923, 1943], "is_host": 41, "cname": 41, "fqdn": [41, 42], "etcd_rendezvous_backend": 41, "ssl_cert": 41, "ssl": 41, "certif": 41, "ssl_cert_kei": 41, "privat": [41, 48, 1894, 1896, 1915, 1941, 1946], "ca_cert": 41, "rool": 41, "key_prefix": 41, "ttl": 41, "hour": 41, "etcd_rendezv": 41, "rdzv_impl": 41, "etcdrendezv": 41, "etcd_address": 41, "min_work": 41, "max_work": 41, "noqa": 41, "w605": 41, "2379": [41, 1293], "etcd_prefix": 41, "etcdstor": 41, "etcd_stor": 41, "etcd_client": 41, "etcd_store_prefix": 41, "c10": [41, 1901, 1944], "piggyback": 41, "num": [41, 734, 735, 749, 1319, 1381, 1384, 1399, 1435, 1444, 1472, 1904], "lookuperror": 41, "override_timeout": 41, "etcdserv": 41, "cumbersom": [41, 1871], "highli": [41, 1337, 1609, 1866, 1903, 1910, 1912, 1927, 1934], "etcd_serv": 41, "data_dir": 41, "v3": [41, 42], "substitut": [41, 56, 71, 1208, 1891, 1930], "torchelastic_etcd_binary_path": 41, "get_client": 41, "etcd_binary_path": 41, "entry_point": [42, 1942], "migrat": [42, 49, 1297, 1653, 1921], "train_script": 42, "aforment": 42, "suffic": [42, 56], "compliant": [42, 44], "num_train": 42, "wors": [42, 1848, 1946], "port_k": 42, "etcd": 42, "v2": [42, 1264, 1700, 1866], "revis": 42, "physic": [42, 223, 1086, 1104, 1872, 1893, 1904, 1927, 1946], "localworkergroup": 42, "rdzv_id": 42, "rdzv_backend": [42, 44], "rdzv_endpoint": [42, 44], "max_nnod": 42, "torchelastic_restart_count": 42, "far": [42, 1205, 1528, 1944], "torchelastic_max_restart": 42, "python_exec": 42, "gang": 42, "departur": 42, "surviv": 42, "kill": [42, 43, 1883, 1898], "frequenc": [42, 912, 960, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1192, 1337, 1372, 1373, 1519, 1520, 1687, 1809, 1955], "ness": [42, 1945], "load_checkpoint": [42, 44], "checkpoint_path": [42, 44], "dataset": [42, 44, 57, 787, 1337, 1346, 1395, 1867, 1898, 1901, 1904, 1908, 1914, 1918, 1919, 1932], "train_step": 42, "should_checkpoint": 42, "save_checkpoint": [42, 44], "acquir": [43, 56, 1902, 1925, 1927], "deadlin": 43, "message_queu": 43, "localtimerserv": 43, "max_interv": 43, "trainer_func": 43, "localtimercli": 43, "expiri": 43, "timer_cli": 43, "countdown": 43, "timefram": [43, 1923], "elig": [43, 1925], "reap": 43, "timerserv": 43, "mp_queue": 43, "daemon": [43, 1883], "filetimerserv": 43, "file_path": 43, "log_ev": [43, 1881], "filetimercli": 43, "fifo": 43, "watchdog": 43, "filetimerrequest": 43, "sigkil": 43, "named_pip": 43, "mkfifo": 43, "timercli": 43, "timerrequest": 43, "scope_id": 43, "expiration_tim": 43, "acquisit": 43, "whatev": [43, 56, 437, 1609, 1751, 1836, 1871, 1897, 1945, 1946], "request_queu": 43, "entiti": [43, 56], "clear_tim": 43, "get_expired_tim": 43, "register_tim": 43, "timer_request": 43, "use_env": 44, "expositori": 44, "worst": [44, 1896], "total_num_epoch": 44, "visit": [44, 1912, 1949, 1950], "WILL": 45, "BE": 45, "aot": [45, 669, 943, 1877, 1938, 1946, 1947, 1956], "example_arg": 45, "exported_program": 45, "exportedprogram": [45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "arg1_1": [45, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68], "exportgraphsignatur": [45, 46, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "user_input": [45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "user_output": [45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "inputs_to_paramet": [45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "inputs_to_buff": [45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "buffers_to_mut": [45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "backward_signatur": [45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "assertion_dep_token": [45, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "sound": [45, 56, 943, 944, 1457, 1875, 1932, 1947], "convent": [45, 48, 56, 325, 930, 1068, 1086, 1088, 1112, 1134, 1347, 1348, 1349, 1392, 1393, 1394, 1468, 1740, 1743, 1842, 1866, 1880, 1886, 1891, 1899, 1902, 1907], "opset": [45, 1910, 1912, 1913, 1942, 1951], "alias": [45, 48, 884, 1125, 1136, 1539, 1859, 1870, 1871, 1875, 1896, 1945], "stacktrac": [45, 46, 57, 65], "leverag": [45, 941, 1909, 1910, 1923, 1938, 1940, 1948], "_dynamo": [45, 57, 67, 941, 1895, 1938, 1941, 1942, 1943, 1944, 1949, 1954, 1956], "massiv": [45, 1949], "pt2": [45, 1944, 1945], "artifact": [45, 669, 1809, 1877, 1901, 1915, 1954, 1956], "untrac": [45, 56], "disjoint": [45, 1868], "usabl": [45, 55, 1871, 1911, 1912, 1943], "traceabl": [45, 56, 613, 806, 1868, 1918, 1944], "symbolic_trac": [45, 46, 56, 1918], "comprehens": [45, 71, 1776, 1871, 1872, 1885, 1894, 1900, 1918], "simpler": [45, 54, 1136, 1859, 1868, 1891, 1896, 1899, 1902], "straight": [45, 1345, 1530], "conv": [45, 56, 691, 692, 693, 694, 695, 696, 697, 698, 699, 781, 782, 785, 803, 843, 849, 1195, 1205, 1211, 1212, 1357, 1358, 1359, 1360, 1361, 1362, 1429, 1430, 1436, 1879, 1889, 1894, 1905, 1912, 1918, 1919, 1920, 1921, 1950, 1952], "in_channel": [45, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 1205, 1357, 1358, 1359, 1360, 1361, 1362, 1405, 1406, 1407, 1408, 1409, 1410], "out_channel": [45, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 1205, 1357, 1358, 1359, 1360, 1361, 1362, 1405, 1406, 1407, 1408, 1409, 1410], "kernel_s": [45, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 757, 758, 771, 772, 1195, 1205, 1342, 1343, 1344, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1377, 1378, 1397, 1398, 1405, 1406, 1407, 1408, 1409, 1410, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1480, 1495, 1496, 1497, 1506, 1507, 1508, 1522, 1523, 1524, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1557, 1596, 1716, 1717, 1869, 1932, 1951], "maxpool": [45, 785, 1377, 1378, 1523, 1524, 1912], "maxpool2d": [45, 772, 1426, 1430, 1553, 1556, 1912, 1920], "256": [45, 1352, 1708, 1894, 1912], "example_kwarg": 45, "arg2_1": [45, 57, 60, 62, 63, 64, 65], "arg3_1": [45, 57, 63], "max_pool2d_with_indic": [45, 1869, 1913, 1951], "getitem": [45, 57, 65, 68, 1955], "85": [45, 56, 1432, 1693, 1950, 1954], "l__self___conv": 45, "lift": [45, 46, 54, 1136, 1859, 1885, 1913, 1945], "get_attr": [45, 56, 70], "branch1": 45, "64": [45, 51, 52, 54, 941, 1129, 1130, 1134, 1334, 1335, 1336, 1338, 1339, 1340, 1346, 1457, 1578, 1748, 1850, 1886, 1908, 1912, 1918, 1922, 1927, 1930, 1932, 1933, 1946, 1948], "branch2": 45, "128": [45, 606, 709, 717, 718, 745, 753, 783, 808, 809, 1350, 1364, 1391, 1416, 1438, 1477, 1478, 1510, 1578, 1885, 1886, 1918, 1920, 1921, 1923, 1927, 1930, 1933, 1954], "x2": [45, 57, 63, 929, 1243, 1421, 1477, 1478, 1510, 1567, 1869, 1946, 1951], "out1": [45, 1125, 1869, 1946], "out2": [45, 1125, 1869, 1946], "arg4_1": [45, 57, 63], "arg5_1": [45, 57, 63], "arg6_1": [45, 57, 63], "permute_1": 45, "addmm_1": 45, "relu_1": [45, 56], "l__self___buff": 45, "rangeconstraint": [45, 46, 57, 64, 65, 66, 67], "min_val": [45, 57, 64, 65, 66, 67, 767, 1388, 1534, 1535, 1869, 1951], "max_val": [45, 57, 64, 65, 66, 67, 767, 1388, 1534, 1535, 1869, 1951], "9223372036854775806": [45, 57, 64, 65], "inputdim": [45, 46], "input_nam": [45, 1912], "range_constraint": [45, 46], "equality_constraint": [45, 46], "dynamic_dim": 45, "saved_exported_program": 45, "example_input": [45, 806, 807, 850, 851, 1207, 1211, 1918, 1937, 1942, 1943, 1945, 1949], "rewritten": [45, 1899], "const": [45, 1383, 1901], "add_1": [45, 56, 57, 60, 62, 64, 65, 1125], "add_2": [45, 56, 57, 60, 62], "shot": 45, "nearli": [45, 140, 882, 896, 1701, 1904, 1923, 1956], "imposs": [45, 1136, 1859, 1890], "unsupport": [45, 53, 57, 59, 65, 71, 72, 74, 77, 1868, 1872, 1885, 1910, 1923, 1927, 1946, 1949, 1952], "exportdb": [45, 1935], "combinatori": 45, "explod": [45, 1460], "cond": [45, 46, 53, 57, 60, 65, 1905], "slice": [45, 56, 57, 65, 67, 596, 684, 685, 1347, 1348, 1349, 1462, 1464, 1468, 1584, 1585, 1732, 1749, 1750, 1781, 1792, 1843, 1868, 1872, 1886, 1894, 1912, 1913, 1927, 1928, 1931, 1933, 1946, 1951], "constrain_as_s": [45, 57, 66, 67], "constrain_as_valu": [45, 57, 66, 67], "undergo": [45, 69], "refin": [45, 1202, 1885], "fake": [45, 56, 74, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 782, 788, 789, 799, 801, 827, 850, 851, 1082, 1083, 1910, 1915, 1918, 1921, 1938], "fatal": [45, 1883, 1904], "dim0_x": [45, 57, 59, 64, 65], "verbatim": 45, "register_dataclass": [45, 46], "ordereddict": [45, 1195, 1429, 1430, 1439, 1457, 1600, 1632, 1869, 1902, 1907, 1934, 1949], "unbound": 45, "t1": [45, 676, 677, 869, 1148, 1609, 1870, 1923, 1924], "hint": [45, 57, 66, 67, 669, 969, 1003, 1196, 1435, 1472, 1473, 1474, 1475, 1476, 1868, 1870, 1871, 1894, 1896, 1910, 1923, 1944, 1946, 1949], "soundli": [45, 46], "wihout": 45, "exc": 45, "placehold": [45, 56, 70, 823, 1391, 1894, 1942, 1943, 1955], "max_1": [45, 56], "call_funct": [45, 56, 70, 72, 73, 1942, 1943, 1946, 1949, 1955, 1956], "_local_scalar_dens": [45, 57, 66, 67, 1913, 1951], "ge": [45, 57, 66, 67, 275, 1150, 1289, 1381, 1386, 1387, 1399, 1532, 1533, 1869, 1884, 1913, 1951], "scalar_tensor": [45, 57, 66, 67, 1869, 1913, 1951], "_assert_async": [45, 57, 66, 67, 1913], "msg": [45, 57, 66, 67, 1028, 1030, 1917, 1934], "le": [45, 57, 66, 67, 350, 1223, 1386, 1387, 1532, 1533, 1869, 1884, 1913, 1934, 1951], "scalar_tensor_1": [45, 57, 66, 67], "_assert_async_1": [45, 57, 66, 67], "sym_constrain_range_for_s": [45, 57, 66, 67, 1869, 1913], "layout": [45, 46, 56, 57, 62, 65, 66, 67, 140, 181, 198, 223, 332, 333, 424, 434, 435, 436, 437, 438, 447, 533, 570, 571, 572, 573, 574, 576, 577, 606, 678, 854, 882, 884, 910, 919, 984, 1069, 1070, 1071, 1081, 1086, 1104, 1122, 1123, 1152, 1153, 1215, 1266, 1282, 1290, 1300, 1329, 1545, 1660, 1661, 1682, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1833, 1838, 1840, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1873, 1886, 1894, 1913, 1915, 1927, 1932, 1933, 1934, 1946, 1951], "bypass": [45, 943, 1068, 1875, 1886, 1894, 1896, 1947], "aforement": [45, 1894, 1904], "1024": [45, 1893, 1894, 1946], "usererror": 45, "f0": 45, "unhint": 45, "sym_constrain_rang": [45, 57, 66, 67, 1869, 1913], "extra_fil": [45, 1203, 1206], "opset_vers": [45, 1910, 1912, 1913], "pathlib": 45, "txt": [45, 1203, 1206, 1915, 1956], "decod": [45, 48, 1267, 1472, 1473, 1474, 1609, 1915], "utf": [45, 1267, 1912, 1915], "expected_opset_vers": 45, "rb": [45, 1203, 1267], "seek": [45, 1203, 1267, 1915, 1918], "typ": 45, "inputdataclass": 45, "outputdataclass": 45, "polymorph": [45, 1870], "graph_signatur": [45, 46], "call_spec": 45, "module_call_graph": 45, "dialect": [45, 1900], "named_buff": [45, 48, 1195, 1429, 1902, 1907], "named_paramet": [45, 48, 50, 52, 1124, 1195, 1199, 1429, 1902, 1907], "exportbackwardsignatur": 45, "gradients_to_paramet": 45, "gradients_to_user_input": 45, "loss_output": 45, "gurante": 45, "getattr": [45, 56, 1869, 1896, 1907, 1923, 1943, 1949], "parameters_buff": 45, "flattened_user_input": 45, "mutated_input": 45, "flattened_user_output": 45, "custommodul": [45, 827, 1918], "my_paramet": [45, 1870], "register_buff": [45, 1195, 1429, 1602, 1868, 1870, 1896, 1902], "my_buffer1": 45, "my_buffer2": 45, "add_tensor": [45, 46], "mul_tensor": 45, "mul_tensor_1": 45, "add_tensor_1": 45, "add_tensor_2": 45, "l__self___my_paramet": 45, "l__self___my_buffer1": 45, "l__self___my_buffer2": 45, "ie": 45, "mangl": 45, "l__self___my_my_buffer1": 45, "modulecallsignatur": 45, "tensorargu": 45, "symintargu": 45, "constantargu": 45, "in_spec": 45, "_pytre": [45, 57], "treespec": 45, "out_spec": 45, "modulecallentri": 45, "bear": 46, "mlir": 46, "streamlin": [46, 71], "audienc": 46, "realiz": [46, 1755], "implic": [46, 1193, 1211, 1896, 1923, 1927], "codegen": [46, 56, 1896, 1946, 1950, 1956], "highlight": [46, 719, 720, 1871], "bundl": [46, 1901], "notabl": [46, 941, 1871], "graph_modul": [46, 848, 1943, 1955], "sympi": [46, 1944], "i0": [46, 57, 66, 67, 296, 1215, 1775, 1869, 1913, 1928], "dag": [46, 1894], "acycl": [46, 781, 1891], "edg": [46, 768, 774, 1148, 1156, 1157, 1539, 1597, 1876, 1897, 1924, 1952], "collorari": 46, "mod": [46, 56, 710, 711, 721, 727, 728, 729, 734, 735, 745, 753, 799, 800, 801, 802, 825, 826, 853, 1124, 1198, 1199, 1205, 1212, 1651, 1852, 1870, 1871, 1915, 1936, 1942, 1956], "_export": [46, 57, 66, 67, 1918], "textual": 46, "machineri": [46, 56, 1896, 1946], "op_nam": [46, 1875, 1910], "meta": [46, 48, 52, 56, 326, 1875, 1910, 1923, 1932, 1934, 1944, 1945, 1947, 1948, 1955], "arg4": 46, "arg5": 46, "compact": [46, 1084, 1085, 1087, 1238, 1240, 1243, 1896, 1912, 1918], "args1": 46, "add1": 46, "predefin": [46, 1912], "readign": 46, "attach": [46, 51, 55, 56, 129, 701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 782, 827, 829, 853, 1600, 1866, 1868, 1870, 1884, 1891, 1896, 1918, 1924, 1936, 1944], "referenc": [46, 56, 972, 1195, 1429, 1836, 1870, 1891, 1912, 1923, 1943, 1949], "19": [46, 674, 735, 934, 1426, 1868, 1912, 1927, 1950], "dummy_help": 46, "helper_util": 46, "89": [46, 606, 1719, 1950], "val": [46, 57, 60, 64, 1011, 1201, 1202, 1869, 1871, 1889, 1945, 1949], "nn_module_stack": 46, "came": [46, 1949], "self_linear": 46, "self_sequenti": 46, "source_fn_stack": 46, "source_fn": 46, "encapsul": [46, 55, 56, 1910, 1923, 1941], "control_flow": [46, 57, 60, 64, 65, 68], "x_1": [46, 1047, 1048, 1049, 1050, 1263, 1350, 1363, 1364, 1499, 1510, 1834], "num_us": [46, 56], "y_1": [46, 1834], "higher_ord": [46, 57, 60, 64, 65], "liter": [46, 1662, 1869, 1872, 1885, 1915, 1955, 1958], "dim_ord": 46, "tensormeta": 46, "promot": [46, 48, 71, 674, 914, 917, 926, 1011, 1063, 1111, 1113, 1114, 1115, 1116, 1318, 1368, 1369, 1370, 1374, 1510, 1710, 1730, 1731, 1737, 1752, 1810, 1871, 1910, 1930, 1934, 1945, 1946, 1951], "max_pool2d_with_index": 46, "add_on": 46, "ph_0": 46, "jax": [46, 49, 52, 53, 54, 1891, 1897, 1946], "int64_t": [46, 1662], "scalartyp": [46, 1951], "memoryformat": [46, 1951], "memory_format": [46, 56, 145, 160, 162, 165, 168, 169, 170, 179, 185, 196, 199, 223, 230, 257, 287, 315, 321, 383, 488, 489, 514, 569, 938, 1069, 1070, 1123, 1195, 1429, 1609, 1661, 1721, 1723, 1725, 1865, 1867, 1869, 1896, 1934, 1951], "_register_pytree_nod": 46, "sharding_strategi": 48, "cpu_offload": 48, "auto_wrap_polici": 48, "backward_prefetch": 48, "backwardprefetch": [48, 1867], "backward_pr": [48, 1195, 1429], "mixed_precis": [48, 1609], "ignored_modul": 48, "param_init_fn": 48, "sync_module_st": 48, "forward_prefetch": 48, "limit_all_gath": 48, "use_orig_param": 48, "ignored_st": 48, "inspir": [48, 1671, 1896, 1948], "deepspe": 48, "shorten": 48, "sharded_modul": 48, "0001": [48, 56, 1049, 1240, 1417, 1546, 1665, 1695, 1869, 1914], "stale": 48, "dev_id": 48, "no_sync": [48, 1609], "offload": 48, "ping": 48, "77724": 48, "isol": [48, 56, 1600, 1883, 1916, 1956], "summon_full_param": 48, "illeg": [48, 1894, 1944], "shard_grad_op": 48, "unshard": 48, "full_shard": 48, "with_grad": 48, "reacquir": 48, "gap": [48, 854, 1727, 1867, 1918, 1954], "delai": [48, 1609, 1925, 1946], "nccl_cross_nic": 48, "cpuoffload": [48, 1867], "modulewrappolici": 48, "custompolici": 48, "proceed": [48, 971, 1307, 1383, 1924, 1925], "nonwrapped_numel": 48, "travers": [48, 825, 1609, 1895, 1896, 1924, 1936, 1937, 1949], "subtre": 48, "size_based_auto_wrap_polici": 48, "exce": [48, 1273, 1894, 1904], "100m": 48, "numel": [48, 424, 433, 939, 960, 1099, 1180, 1869, 1884, 1891, 1913, 1927], "custom_auto_wrap_polici": 48, "min_num_param": 48, "1e8": 48, "my_auto_wrap_polici": 48, "functool": [48, 51, 57, 830, 1787, 1896, 1934], "1e5": 48, "mixedprecis": [48, 1867], "is_meta": [48, 1913, 1946], "reset_paramet": 48, "torchdistx": 48, "deferred_init": 48, "materialize_modul": 48, "my_init_fn": 48, "fsdp_model": 48, "fullstatedictconfig": [48, 1867], "flatparamet": 48, "unifi": [48, 1867, 1885], "norm_typ": [48, 734, 735, 1372, 1373, 1397, 1398, 1519, 1520, 1549, 1550, 1613, 1869], "infin": [48, 958, 1185, 1187, 1189, 1190, 1323, 1345, 1422, 1423, 1424, 1552, 1553, 1554, 1613, 1670, 1780, 1792, 1927, 1928], "no_shard": 48, "fp32": [48, 770, 783, 806, 1053, 1609, 1894, 1905, 1918, 1919, 1921, 1948], "flatten_sharded_optim_state_dict": 48, "sharded_optim_state_dict": 48, "shard_full_optim_state_dict": 48, "unflatten": [48, 1869, 1884, 1885, 1913, 1931], "fsdp_modul": 48, "root_onli": 48, "full_optim_state_dict": 48, "optim_input": 48, "rank0_onli": 48, "get_state_dict_typ": 48, "state_dict_typ": 48, "statedictset": [48, 1867], "optim_state_dict": 48, "assertionerror": [48, 56, 74, 723, 1663, 1934, 1956], "differen": 48, "intercept": [48, 56, 1896, 1947], "occurr": [48, 392, 1193, 1296, 1642, 1845, 1846, 1944], "oom": [48, 1898, 1958], "statedicttyp": 48, "fulloptimstatedictconfig": [48, 1867], "set_state_dict_typ": 48, "full_state_dict": 48, "save_a_checkpoint": 48, "load_a_checkpoint": 48, "optim_state_dict_to_load": 48, "is_named_optim": 48, "load_directli": 48, "original_osd": 48, "namedoptim": 48, "keyedoptim": 48, "torchrec": [48, 1867], "gossipgrad": [48, 1609], "latter": [48, 676, 780, 1195, 1399, 1429, 1436, 1897, 1902, 1904, 1906], "rekey_optim_state_dict": 48, "optim_state_key_typ": 48, "loadabl": [48, 1866], "wrapped_model": 48, "wrapped_optim": 48, "full_osd": 48, "nonwrapped_model": 48, "nonwrapped_optim": 48, "rekeyed_osd": 48, "optimstatekeytyp": 48, "param_id": 48, "osd": 48, "param_nam": 48, "sharded_osd": 48, "scatter_full_optim_state_dict": 48, "new_model": 48, "new_optim": 48, "remap": [48, 78, 1199, 1203, 1267, 1288, 1866, 1880, 1922], "state_dict_config": 48, "optim_state_dict_config": 48, "descend": [48, 56, 126, 531, 865, 1195, 1259, 1260, 1429, 1785, 1813, 1869, 1951], "transpar": [48, 1895, 1916, 1923, 1925], "sharded_state_dict": 48, "shardedstatedictconfig": [48, 1867], "offload_to_cpu": 48, "optimstatedictconfig": [48, 1867], "param_state_dict": 48, "statedictconfig": [48, 1867], "writeback": 48, "summon": 48, "portion": [48, 1117, 1366, 1460, 1568, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1919, 1947, 1956], "discard": [48, 1192, 1253, 1619, 1866, 1870, 1881], "redundantli": [48, 1890], "materi": [48, 889, 953, 1611, 1612, 1682, 1735, 1736, 1896], "throughput": [48, 1868, 1893], "backward_post": 48, "altogeth": [48, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682], "contend": 48, "volum": [48, 1157], "_hybrid_shard_zero2": 48, "freed": [48, 140, 882, 896, 977, 1025, 1883, 1894, 1900, 1923, 1941, 1958], "param_dtyp": 48, "reduce_dtyp": 48, "buffer_dtyp": 48, "keep_low_precision_grad": 48, "cast_forward_input": 48, "cast_root_forward_input": 48, "_module_classes_to_ignor": 48, "batchnorm": [48, 689, 690, 1133, 1195, 1205, 1429, 1468, 1609, 1879, 1891, 1902, 1914, 1916, 1918, 1920, 1921], "_batchnorm": 48, "kept": [48, 52, 56, 686, 768, 774, 1347, 1348, 1349, 1392, 1393, 1394, 1468, 1539, 1597, 1871, 1883, 1921, 1927], "permit": [48, 1927], "thereaft": 48, "local_state_dict": 48, "upcast": 48, "recast": 48, "offload_param": 48, "cfg": 48, "finetun": [48, 1195, 1429], "model_fn": 48, "my_checkpoint": 48, "_use_dtensor": 48, "localstatedictconfig": [48, 1867], "shardedoptimstatedictconfig": [48, 1867], "localoptimstatedictconfig": [48, 1867], "love": 49, "hear": 49, "vmap": [49, 51, 52, 56, 890, 892, 896, 897, 898, 1126, 1129, 1130, 1132, 1134], "arbitrarili": [49, 54, 502, 1198, 1493, 1871, 1891, 1896, 1897], "stock": [49, 54], "ensembl": [49, 52, 54, 1134], "maml": [49, 54], "vjp": [49, 52, 53, 878, 879, 1130, 1136, 1859, 1896, 1897], "whirlwind": 49, "tour": 49, "ux": [49, 54, 1918, 1949], "jacrev": [50, 52, 53, 892, 1128, 1129, 1897], "functional_cal": [50, 52, 1134, 1946], "running_mean": [51, 1133, 1195, 1347, 1348, 1349, 1392, 1393, 1394, 1402, 1403, 1404, 1411, 1412, 1413, 1429, 1468, 1498, 1538, 1869, 1902, 1907, 1951], "running_var": [51, 1133, 1195, 1347, 1348, 1349, 1392, 1393, 1394, 1402, 1403, 1404, 1411, 1412, 1413, 1429, 1468, 1498, 1538, 1869, 1907, 1951], "groupnorm": [51, 1529], "anywher": [51, 1890], "batchnorm2d": [51, 702, 705, 707, 712, 803, 1205, 1366, 1403, 1498, 1879, 1891, 1902, 1918, 1920], "track_running_stat": [51, 740, 741, 742, 1133, 1347, 1348, 1349, 1392, 1393, 1394, 1402, 1403, 1404, 1411, 1412, 1413, 1468, 1907], "resnet": [51, 1866, 1868, 1870, 1902, 1915, 1932, 1936], "regnet": 51, "norm_lay": 51, "resnet18": [51, 56, 1866, 1868, 1870, 1880, 1915, 1954], "num_group": [51, 738, 1384, 1529, 1869], "fragil": 51, "replace_all_batch_norm_modules_": 51, "upstream": [52, 1908], "reflect": [52, 447, 509, 545, 1120, 1121, 1124, 1192, 1357, 1358, 1359, 1405, 1406, 1407, 1450, 1451, 1452, 1528, 1566, 1651, 1696, 1809, 1868, 1869, 1898, 1931, 1941], "coupl": [52, 71, 1868, 1901, 1909, 1924, 1941, 1955], "jvp": [52, 53, 879, 883, 884, 885, 889, 1132, 1896], "jacfwd": [52, 53, 892, 1128, 1897], "carefulli": [52, 55, 1897, 1915, 1945, 1947], "make_functional_with_buff": 52, "hurri": 52, "gist": [52, 782, 1899, 1949, 1950], "emul": [52, 788, 1872, 1896], "fmodel": 52, "compute_loss": [52, 54, 1124, 1126], "predict": [52, 1337, 1346, 1383, 1511, 1914, 1932], "And": [52, 786, 813, 1047, 1048, 1124, 1195, 1217, 1293, 1298, 1352, 1429, 1849, 1851, 1891, 1896, 1897, 1908, 1912, 1918, 1937, 1942, 1947, 1948, 1949], "argnum": [52, 1126, 1127, 1128, 1129, 1130], "stack_module_st": 52, "num_model": [52, 1134], "in_featur": [52, 709, 717, 718, 721, 722, 745, 753, 1134, 1195, 1337, 1414, 1416, 1429, 1600, 1616, 1617, 1649, 1650, 1653, 1902], "out_featur": [52, 709, 717, 718, 721, 722, 745, 753, 1134, 1195, 1350, 1414, 1416, 1429, 1600, 1616, 1617, 1649, 1650, 1653, 1902], "base_model": 52, "deepcopi": [52, 1918, 1937], "clearer": [52, 1252, 1682, 1896, 1910], "call_single_model": 52, "aotautograd": [52, 669, 1877, 1895, 1945, 1946, 1947, 1956], "stori": [52, 1899], "grad_x": [53, 1897, 1946], "has_aux": [53, 1126, 1127, 1129, 1130, 1131, 1135], "mental": [53, 1125], "absenc": 53, "unbind": [53, 1136, 1859, 1867, 1869, 1884, 1913, 1931], "presenc": [53, 56, 1205, 1324, 1904, 1915, 1927, 1952], "pop": [53, 1029, 1430, 1439, 1913, 1916, 1917, 1949], "lst": 53, "in_dim": [53, 54, 881, 1126, 1136, 1859, 1897], "batchedtensor": 53, "batched_tensor_input": 53, "new_": [53, 1894, 1933], "new_zero": [53, 1869, 1913], "new_empti": [53, 1869, 1913], "diag_emb": [53, 1058, 1231, 1232, 1259, 1813, 1869, 1913], "vec": [53, 97, 98, 413, 679, 1321, 1652, 1869, 1927, 1951], "copy_": [53, 211, 1125, 1481, 1868, 1869, 1884, 1894, 1929], "arithmet": [53, 914, 917, 931, 1251, 1737, 1872, 1881, 1884, 1885, 1905, 1918, 1930], "extra_arg": 53, "theoret": 53, "custom_dot": 53, "lax": 53, "while_loop": 53, "is_nonzero": [53, 1869, 1913, 1927, 1946], "rag": 53, "unclear": [53, 606], "add_nois": 53, "prng": 53, "cos_x": [54, 1126], "neg_sin_x": [54, 1126], "hide": [54, 1136, 1859, 1897], "feature_s": [54, 1126, 1136, 1859], "feature_vec": [54, 1126, 1136, 1859], "mseloss": [54, 1126, 1390, 1460, 1559, 1894, 1895], "grad_weight_per_exampl": [54, 1126], "cotang": [54, 1135], "vjp_fn": [54, 1135], "out_tang": 54, "hessian0": 54, "hessian1": 54, "hess": [54, 1128], "rpc_async": [55, 1871, 1913, 1923, 1925], "add_done_callback": 55, "fut": [55, 1198, 1609, 1893, 1923], "set_result": [55, 1609, 1923], "haven": [55, 1902], "set_except": 55, "baseexcept": 55, "valueerror": [55, 57, 74, 1193, 1621, 1622, 1642, 1645, 1896, 1910, 1916, 1934, 1955], "slow_set_futur": 55, "sleep": 55, "cb1": 55, "cb2": 55, "dedic": [55, 1894], "pool": [55, 755, 756, 757, 758, 771, 772, 969, 1003, 1004, 1014, 1025, 1304, 1305, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1377, 1378, 1397, 1398, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1496, 1497, 1523, 1524, 1549, 1550, 1552, 1553, 1554, 1716, 1717, 1867, 1893, 1894, 1896, 1902, 1904, 1920, 1923, 1941], "didn": [55, 1896, 1908, 1914], "cb_fut": 55, "chain_cb_fut": 55, "cb": [55, 1923], "held": [55, 969, 993, 1021, 1306, 1890, 1948], "collect_al": [55, 1867], "fut0": 55, "fut1": [55, 1923], "fut_list": 55, "wait_al": [55, 1867], "toolkit": 56, "clamp": [56, 176, 177, 788, 791, 937, 1202, 1345, 1383, 1528, 1539, 1597, 1869, 1879, 1884, 1912, 1913, 1918, 1920, 1921, 1928, 1934, 1951], "call_modul": [56, 70, 1955], "call_method": [56, 70, 1942, 1943, 1949], "feed": [56, 1868, 1898, 1902, 1936, 1945], "theses": 56, "callsit": 56, "constitut": 56, "tracer_class": 56, "gm": [56, 1942, 1943, 1945, 1949, 1955, 1956], "treatment": 56, "topk": [56, 1869, 1884, 1913, 1951], "print_tabular": [56, 1942, 1943, 1949], "opcod": [56, 1915, 1942, 1943, 1949], "linear_weight": 56, "linear_1": 56, "topk_1": 56, "pose": [56, 1924], "explor": [56, 69, 1866, 1891, 1902, 1915, 1958], "edit": [56, 1915, 1931], "lint": 56, "inserting_aft": [56, 1955], "new_nod": 56, "replace_all_uses_with": [56, 1955], "tediou": 56, "unwieldi": 56, "fusion": [56, 781, 803, 849, 850, 941, 1197, 1204, 1209, 1210, 1211, 1212, 1879, 1902, 1918, 1946, 1948, 1955, 1956], "imagin": [56, 1923, 1947], "requisit": 56, "relu_decomposit": 56, "decomposition_rul": 56, "constitu": [56, 1886, 1896], "new_graph": 56, "graphappendingtrac": 56, "proxy_arg": 56, "output_proxi": 56, "node_copi": 56, "ari": [56, 1912], "unari": [56, 1129, 1130, 1472, 1474, 1476, 1872, 1884], "organiz": 56, "shapeprop": 56, "named_modul": [56, 1195, 1429, 1902], "args_it": 56, "load_arg": 56, "map_arg": 56, "fetch_attr": 56, "target_atom": 56, "attr_itr": 56, "hasattr": [56, 1849, 1869, 1896, 1918, 1943, 1949], "nonexist": [56, 1870, 1871], "elif": [56, 1202, 1395, 1870, 1871, 1900, 1910, 1949, 1955], "self_obj": 56, "encompass": 56, "prove": [56, 1883], "disprov": 56, "led": [56, 1958], "auxiliari": [56, 1126, 1127, 1129, 1130, 1131, 1135, 1866, 1901], "nondeterminist": [56, 303, 305, 311, 488, 504, 506, 912, 1069, 1070, 1071, 1217, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1425, 1426, 1427, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1520, 1528, 1539, 1566, 1578, 1597, 1598, 1599, 1754, 1848, 1942], "unord": [56, 1430, 1439], "nondetermin": [56, 898, 1906], "dedupl": [56, 1912], "straightforward": [56, 1878, 1886, 1902, 1914, 1927, 1942, 1949], "torchvis": [56, 1866, 1867, 1868, 1870, 1912, 1915, 1918, 1932, 1936, 1954], "transformed_resnet18": 56, "input_imag": 56, "224": [56, 850, 851, 1868, 1870, 1912, 1954], "margin": [56, 1363, 1389, 1421, 1432, 1434, 1477, 1478, 1509, 1536, 1551, 1560, 1594, 1595, 1869, 1932], "commut": 56, "toolbox": 56, "tradit": [56, 1476, 1909, 1910], "luckili": 56, "my_pass": 56, "my_module_transform": 56, "input_valu": 56, "prompt": [56, 1866, 1908], "set_trac": [56, 1200, 1207, 1213, 1868], "examin": [56, 1902, 1912, 1917, 1958], "undergon": 56, "subclassm": 56, "pre_trac": 56, "post_trac": 56, "sake": 56, "tabular": [56, 669, 1877], "transform_graph": 56, "session": 56, "luck": 56, "input_nod": 56, "stepwis": 56, "breakpoint": [56, 1871, 1955], "excel": [56, 1947], "onlin": [56, 1667], "realpython": 56, "pycharm": 56, "vscode": 56, "graphic": [56, 1882, 1908, 1954], "parlanc": 56, "func_to_trac": 56, "dyn": 56, "155": 56, "__bool__": [56, 1869, 1871], "to_bool": 56, "traceerror": [56, 1918], "hyper": [56, 1460, 1870, 1932], "do_activ": 56, "512": [56, 1472, 1473, 1474, 1475, 1476, 1894, 1940], "without_activ": 56, "with_activ": 56, "traced_without_activ": 56, "traced_with_activ": 56, "concrete_arg": 56, "truli": [56, 1909, 1912], "__torch_function__": [56, 1957], "161": 56, "len_1": 56, "sqrt_1": 56, "truediv": [56, 1942, 1943], "mycustomtrac": 56, "traced_graph": 56, "runnabl": [56, 1890, 1912, 1932, 1956], "myspecialsubmodul": 56, "submod": 56, "neg_1": 56, "is_leaf_modul": [56, 1937], "sparse_coo_tensor": [56, 533, 570, 1794, 1869, 1873, 1913, 1927], "ones_lik": [56, 1129, 1130, 1135, 1869, 1886, 1894, 1896, 1897, 1902, 1913], "zeros_lik": [56, 887, 889, 1869, 1873, 1886, 1894, 1913, 1927], "viabl": [56, 1894], "torch_randn": 56, "gotcha": 56, "bake": [56, 57, 65, 1199, 1205, 1668, 1669, 1914], "dropoutrepro": 56, "assert_clos": [56, 1085, 1087, 1088, 1093, 1094, 1099, 1100, 1101, 1103, 1105, 1867, 1868, 1934], "greatest": [56, 1138, 1323, 1912, 1934], "6207983493804932": 56, "dropoutrepro2": 56, "overspeci": [56, 941, 1944], "ph": 56, "shouldn": [56, 969, 1915, 1927, 1931], "fn_or_nam": 56, "callfunct": 56, "my_custom_funct": 56, "fn_to_be_trac": 56, "reassign": [56, 1894], "regener": 56, "unset": [56, 1905], "add_submodul": 56, "subpath": 56, "get_submodul": [56, 1195, 1429], "delete_all_unused_submodul": 56, "delete_submodul": 56, "print_read": [56, 1943], "print_output": 56, "date": [56, 1915], "pythoncod": 56, "fxmodul": 56, "pathlik": [56, 1267, 1743, 1915], "owning_modul": 56, "tracer_cl": 56, "tracer_extra": 56, "the_funct": 56, "type_expr": 56, "create_nod": 56, "method_nam": 56, "0th": [56, 1136, 1859], "inserting_befor": 56, "influenc": [56, 1910, 1927], "eliminate_dead_cod": 56, "dead": [56, 1955], "topolog": [56, 1912], "attr_1": 56, "is_impur": 56, "bad": [56, 57, 1883, 1912, 1915, 1918, 1945, 1954], "erase_nod": 56, "to_eras": 56, "eras": [56, 57, 62, 63, 1944], "qualified_nam": 56, "graph_copi": 56, "val_map": 56, "return_output_nod": 56, "opoverload": [56, 1875], "companion": 56, "__exit__": [56, 1871, 1872, 1915], "arg_transform": 56, "value_remap": 56, "_node_list": 56, "doubli": 56, "on_generate_cod": 56, "make_transform": 56, "transformcodefunc": 56, "insert_pdb": 56, "bodi": [56, 57, 65, 68, 1207, 1868, 1870, 1871, 1872, 1910, 1943, 1956], "current_tran": 56, "stuff": [56, 1945], "default_valu": 56, "_not_": 56, "tabul": 56, "process_input": 56, "process_output": 56, "python_cod": 56, "root_modul": [56, 782, 1920], "set_codegen": 56, "return_typ": [56, 686, 1047, 1048, 1157, 1217, 1255, 1293, 1296, 1298, 1301, 1325, 1785, 1831, 1836], "printout": [56, 1013, 1026, 1943], "all_input_nod": 56, "format_nod": 56, "placeholder_nam": 56, "maybe_return_typenam": 56, "autogener": [56, 1897], "impur": 56, "normalized_argu": 56, "arg_typ": 56, "kwarg_typ": 56, "normalize_to_only_use_kwarg": 56, "vararg": 56, "argskwargspair": 56, "bx": 56, "ax": [56, 934, 1227, 1241, 1245, 1256, 1257, 1258, 1286, 1297, 1437, 1447, 1836, 1912, 1946], "prev": [56, 1680], "replace_with": 56, "delete_user_cb": 56, "propagate_meta": 56, "replace_input_with": 56, "old_input": 56, "new_input": 56, "create_proxi": 56, "record_stack_trac": 56, "dynamo": [56, 69, 669, 1877, 1942, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1953, 1954, 1956], "outputgraph": [56, 1949], "update_arg": 56, "update_kwarg": 56, "autowrap_modul": 56, "autowrap_funct": 56, "create_arg": 56, "create_args_for_root": 56, "root_fn": 56, "is_modul": 56, "introspect": [56, 943, 1946], "disallow": [56, 1915, 1923, 1930, 1946, 1947], "proxy_factory_fn": 56, "attr": [56, 57, 59, 140, 882, 1297, 1740], "attr_val": 56, "parameter_proxy_cach": 56, "module_qualified_nam": [56, 1937], "path_of_modul": 56, "some_hyperparamet": 56, "indexed_item": 56, "proxied_valu": 56, "garbage_collect_valu": 56, "run_nod": 56, "swap": [56, 606, 777, 778, 779, 782, 786, 853, 1201, 1285, 1477, 1478, 1594, 1595, 1833, 1869, 1872, 1894, 1918, 1927, 1929, 1936], "vice": [56, 447, 592, 1120, 1121, 1421, 1891, 1921, 1929, 1944], "versa": [56, 447, 592, 1120, 1121, 1421, 1891, 1921, 1929, 1944], "negsigmswapinterpret": 56, "call_self": 56, "args_tail": 56, "boxed_run": 56, "args_list": 56, "promptli": [56, 1268], "fetch_args_kwargs_from_env": 56, "map_nodes_to_valu": 56, "initial_env": 56, "enable_io_process": 56, "negsigmswapxform": 56, "nodes_map": [56, 1955], "subgraph_rewrit": [56, 1955], "w1": 56, "w2": 56, "m1": [56, 1857, 1858], "m2": [56, 1649, 1857, 1858, 1918], "traced_modul": [56, 1907, 1955], "despit": [56, 1211, 1212, 1899], "stack_1": 56, "stack_2": 56, "sum_2": 56, "max_2": 56, "exhaust": [57, 1609], "wih": 57, "escap": [57, 66], "hatch": [57, 66], "assumeconstantresult": [57, 67], "burn": [57, 67, 1941], "tracabl": [57, 67], "get_item": [57, 67], "i64": [57, 62, 63, 66, 67], "slice_1": [57, 65, 67], "myautogradfunct": 57, "autogradfunct": 57, "allow_in_graph": [57, 1946], "cl": [57, 59, 129, 1896, 1918, 1923, 1957], "mul_1": [57, 63, 1942], "mysubmodul": [57, 64, 65], "condbranchclassmethod": [57, 64, 65], "subm": [57, 64, 65], "inner_true_fn": [57, 64, 65], "inner_false_fn": [57, 64, 65], "my_tensor_var": [57, 64, 65], "my_primitive_var": [57, 64, 65], "nonloc": [57, 60, 64, 65, 1872], "_lifted_tensor_constant0": [57, 64, 65], "lift_fresh_copi": [57, 64, 65, 1913], "sub_1": [57, 64, 65], "condclosedovervari": [57, 60, 64], "i4": [57, 66, 67], "ge_1": [57, 66, 67], "scalar_tensor_2": [57, 66, 67], "_assert_async_2": [57, 66, 67], "le_1": [57, 66, 67], "scalar_tensor_3": [57, 66, 67], "_assert_async_3": [57, 66, 67], "i1": [57, 66, 67, 1928], "i2": [57, 66, 67], "i3": [57, 66, 67], "test_decor": 57, "dynamicshapeifguard": [57, 62, 65], "body_graph_0": [57, 65, 68], "map_impl": [57, 65, 68], "slice_2": [57, 65], "9223372036854775807": [57, 65, 1193, 1642, 1881, 1958], "new_x_shap": [57, 65], "pos0": [57, 63], "tuple0": [57, 63], "myarg": [57, 63], "mykw0": [57, 63], "mykwarg": [57, 63], "input0": [57, 63], "input1": [57, 63, 749, 1350, 1363, 1364, 1421, 1438, 1499, 1509, 1510, 1551, 1869, 1890, 1912], "arg7_1": [57, 63], "mul_2": [57, 63], "mul_3": [57, 63], "mul_4": [57, 63], "mul_5": [57, 63], "mul_6": [57, 63], "monkei": [57, 58, 63, 65, 1849], "cow": [57, 58, 63, 65], "pig": [57, 58, 63, 65], "contextlib": [57, 61], "nullcontext": [57, 61], "tree_flatten": 57, "dim1_x": [57, 65], "anim": 57, "moo": 57, "specializedattribut": 57, "staticforloop": [57, 62], "unrol": [57, 62, 1870, 1871, 1912, 1946], "ret": [57, 62, 1896, 1923], "add_3": [57, 62], "add_4": [57, 62], "add_5": [57, 62], "add_6": [57, 62], "add_7": [57, 62], "add_8": [57, 62], "add_9": [57, 62], "staticif": [57, 62], "setattr": [57, 59, 1871], "not_supported_yet": [57, 59, 65], "overli": [57, 59, 1896], "type_reflection_method_rewrit": [57, 59], "gain": [69, 1682, 1889, 1938, 1948, 1950], "fxe0010": [69, 1910], "diagnosticopt": [69, 71, 1910], "verbosity_level": [69, 71, 1910], "torch_log": [69, 71, 669, 941, 1877, 1943, 1944, 1956], "onnx_diagnost": [69, 71, 669], "fxe0008": [69, 1910], "onnxscript": [70, 1910, 1911, 1912], "torchlib": [70, 74], "fxonnxinterpret": 70, "onnx": [71, 72, 74, 75, 76, 669, 1643, 1644, 1662, 1663, 1664, 1867, 1885, 1918, 1938], "endors": 71, "noteworthi": 71, "_intern": [71, 76, 1929], "todo": [72, 73, 815, 848, 850, 851, 1937, 1941, 1945, 1952], "dynamo_export": [72, 1910, 1912], "disregard": [74, 75, 77], "indexerror": [74, 1627, 1629], "typeerror": [74, 1632, 1896, 1916, 1934, 1957], "opschema": [74, 1910], "onnxfunct": [75, 77, 1910], "perfect": 75, "nearest": [75, 768, 774, 776, 1326, 1481, 1483, 1528, 1539, 1597, 1599, 1712, 1740, 1894], "highest": [75, 669, 1337, 1722, 1723, 1755, 1919, 1934], "stringent": 75, "op_level_debug": [75, 77, 1910], "elementwise_dtyp": 76, "_ref": 76, "type_promot": 76, "absent": [77, 1895], "signifi": 77, "g_cpu": 78, "g_cuda": 78, "bytetensor": [78, 1000, 1001, 1039, 1040, 1147, 1308, 1315, 1761, 1851, 1922, 1930, 1933], "2147483647": 78, "0x8000_0000_0000_0000": [78, 1288, 1922], "0xffff_ffff_ffff_ffff": [78, 1288, 1922], "random_devic": 78, "1516516984916": 78, "new_stat": [78, 1039, 1040, 1315, 1761, 1851, 1922], "void": [78, 970, 1012, 1894, 1901, 1946], "g_cpu_oth": 78, "abs_": [82, 1869, 1884, 1933], "acosh": [86, 112, 856, 1869, 1884, 1913, 1951], "batch1": [89, 90, 141, 142, 675, 909, 1869], "batch2": [89, 90, 141, 142, 159, 675, 909, 1869], "tensor1": [91, 92, 93, 94, 676, 677, 1290, 1737, 1869], "tensor2": [91, 92, 93, 94, 304, 394, 676, 677, 1290, 1737, 1869], "mat1": [95, 96, 543, 678, 1159, 1216, 1300, 1786, 1790, 1791, 1805, 1869, 1951], "mat2": [95, 96, 403, 543, 678, 921, 1159, 1216, 1300, 1786, 1790, 1791, 1805, 1869, 1951], "mat": [97, 98, 529, 679, 1321, 1718, 1783, 1786, 1805, 1869, 1932], "vec1": [99, 100, 680, 1869], "vec2": [99, 100, 278, 450, 680, 1141, 1700, 1869], "keepdim": [102, 104, 105, 106, 108, 124, 125, 344, 382, 397, 399, 400, 401, 404, 418, 419, 420, 421, 442, 459, 468, 544, 554, 604, 682, 684, 685, 686, 688, 863, 864, 1217, 1248, 1252, 1265, 1283, 1293, 1295, 1296, 1298, 1301, 1324, 1325, 1326, 1327, 1438, 1567, 1656, 1709, 1712, 1807, 1808, 1812, 1854, 1855, 1869, 1884, 1928, 1951], "rtol": [103, 334, 683, 897, 898, 1184, 1250, 1253, 1664, 1868, 1869, 1934], "atol": [103, 334, 683, 897, 898, 1184, 1250, 1253, 1262, 1664, 1868, 1869, 1896, 1934], "08": [103, 334, 683, 919, 1184, 1242, 1364, 1443, 1571, 1668, 1669, 1670, 1672, 1678, 1679, 1682, 1695, 1767, 1869], "equal_nan": [103, 334, 683, 1184, 1869, 1934], "arcco": [111, 1869, 1913, 1934], "acosh_": [113, 1869, 1884], "arccosh": [113, 1869, 1913], "arcsin": [115, 870, 1869, 1913, 1927], "arcsinh": [117, 1869, 1913], "atan2_": [120, 1869, 1884], "arctan2": [120, 1869, 1913], "arctan": [121, 1869, 1913], "arctanh": [123, 1869, 1913], "asinh": [133, 858, 1869, 1884, 1913, 1927, 1951], "atan": [137, 620, 621, 859, 1869, 1884, 1913, 1927, 1951], "atanh": [139, 861, 1869, 1884, 1913, 1927, 1951], "wrt": [140, 897, 898], "60521": [140, 882], "issuecom": [140, 882], "867061780": [140, 882], "texttt": [143, 144, 683, 1184, 1337, 1934], "bernoulli": [144, 749, 1341, 1367, 1368, 1369, 1370, 1374, 1381, 1399, 1513, 1514, 1515, 1516, 1521, 1867, 1869, 1884, 1913, 1935], "preserve_format": [145, 160, 162, 165, 168, 169, 170, 179, 196, 199, 230, 257, 287, 315, 383, 514, 569, 938, 1070, 1123, 1661, 1721, 1723, 1725, 1865, 1896, 1930], "minlength": [146, 912, 1869], "bitwise_and": [148, 1869, 1913, 1951], "bitwise_left_shift": [150, 1869, 1913], "bitwise_not": [152, 1869, 1884, 1913, 1951], "bitwise_or": [154, 1869, 1913, 1951], "bitwise_right_shift": [156, 1869, 1913], "bitwise_xor": [158, 1869, 1913, 1951], "uint8": [162, 232, 606, 682, 688, 1120, 1710, 1713, 1714, 1737, 1918, 1929, 1930, 1932, 1933, 1959], "cauchi": [163, 1867, 1891, 1899, 1913, 1935], "dfrac": [163, 367, 597, 1364, 1510, 1617, 1650, 1653], "complex32": [169, 1357, 1358, 1359, 1503, 1504, 1505, 1662, 1933, 1934], "int8": [170, 437, 718, 913, 914, 915, 916, 917, 918, 1120, 1277, 1278, 1279, 1280, 1918, 1921, 1927, 1929, 1930, 1933, 1959], "input2": [173, 448, 449, 506, 749, 1350, 1363, 1364, 1421, 1438, 1499, 1509, 1510, 1551, 1869, 1890, 1912], "clamp_": [178, 1869, 1884], "uncoalesc": [180, 318, 1798], "coo": [180, 313, 318, 332, 603, 1159, 1786, 1790, 1795, 1796, 1797, 1798, 1799, 1800, 1867, 1878, 1930, 1934], "inttensor": [181, 198, 1169, 1285, 1286, 1372, 1930, 1933], "csr": [181, 198, 333, 572, 577, 1373, 1786, 1790, 1791, 1797, 1800, 1878, 1934], "sparse_csr": [181, 198, 572, 577, 1790, 1791, 1793, 1797, 1800, 1927], "nnz": [181, 533, 572, 573, 574, 576, 577, 897, 1329, 1788, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1927], "int32": [181, 198, 303, 311, 315, 436, 606, 925, 1070, 1082, 1083, 1118, 1120, 1121, 1226, 1237, 1238, 1239, 1257, 1285, 1352, 1710, 1747, 1918, 1927, 1929, 1930, 1933, 1959], "mkl": [181, 198, 1867, 1893, 1908, 1913, 1927], "routin": [181, 198, 865, 1268, 1785, 1813, 1927], "downcast": [181, 198], "to_sparse_csr": [181, 198, 573, 574, 1787, 1790, 1791, 1869, 1913, 1927], "conj_phys": [184, 953, 1869, 1913, 1927, 1951], "contiguous_format": [185, 321, 488, 489, 1069, 1609, 1930], "non_block": [186, 199, 569, 592, 1195, 1429, 1642, 1869, 1894, 1929, 1951], "copysign": [188, 1869, 1913], "fweight": [195, 960, 1869], "aweight": [195, 960, 1869], "sparse_dim": [208, 534, 535, 1786, 1790, 1794, 1798, 1869, 1913, 1927], "resize_": [211, 489, 1125, 1217, 1848, 1868, 1869, 1870, 1884, 1920, 1929], "resize_as_": [211, 1869, 1884, 1927], "set_": [211, 488, 1869], "transpose_": [211, 1869, 1927], "zero_": [211, 1241, 1519, 1869, 1884, 1885, 1902, 1927], "dim1": [215, 217, 218, 558, 581, 582, 1056, 1058, 1059, 1230, 1816, 1833, 1869], "dim2": [215, 217, 218, 1056, 1058, 1059, 1230, 1869], "digamma": [221, 1869, 1884, 1913, 1928, 1951], "laid": 223, "outermost": [223, 1148], "channels_last": [223, 1195, 1429, 1609, 1930], "rounding_mod": [225, 226, 227, 228, 1063, 1064, 1113, 1116, 1731, 1841, 1869, 1951], "split_size_or_sect": [231, 292, 608, 1801], "eq": [234, 1869, 1884, 1913, 1951], "erf": [237, 628, 629, 1869, 1884, 1913, 1927, 1928, 1951], "erfc": [239, 630, 631, 1869, 1884, 1913, 1928, 1951], "front": [244, 941, 1268, 1432, 1885, 1897], "lambd": [248, 288, 1385, 1466, 1531, 1587, 1665, 1869], "fill_valu": [250, 435, 1122, 1123, 1352, 1869, 1894, 1951], "tall": [250, 1254, 1259, 1896], "start_dim": [253, 1107, 1375, 1869], "end_dim": [253, 1107, 1375, 1869], "float_pow": [259, 1869, 1913], "floor_divid": [263, 1063, 1869, 1913, 1927], "divisor": [266, 267, 478, 479, 757, 758, 1063, 1113, 1116, 1138, 1343, 1344, 1376, 1480, 1496, 1497, 1731, 1841], "fmod": [267, 1731, 1869, 1913, 1951], "mantissa": [270, 470, 1118, 1219, 1755, 1869, 1894, 1905], "gcd": [273, 1869, 1913, 1951], "geometr": [276, 768, 774, 1528, 1539, 1597, 1853, 1867, 1913, 1935, 1953], "ordin": [279, 1795, 1796, 1797, 1799, 1800, 1930], "greater_equ": [284, 1869, 1913], "hypot": [294, 1869, 1913, 1951], "igamma": [298, 1869, 1913, 1951], "igammac": [300, 1869, 1913, 1951], "3100": [301, 472, 1165, 1729], "3553j": [301, 472, 1165, 1729], "5445": [301, 472, 1165, 1729], "7896j": [301, 472, 1165, 1729], "6492": [301, 472, 1165, 1729], "0633j": [301, 472, 1165, 1729], "0638": [301, 472, 1165, 1729], "8119j": [301, 472, 1165, 1729], "3553": [301, 1165], "7896": [301, 1165], "0633": [301, 1165, 1242, 1886], "8119": [301, 1165], "index_add_": [302, 887, 1166, 1167, 1869, 1906], "index_copy_": [304, 1869], "index_fill_": [306, 1869, 1884], "index_put_": [308, 1869], "include_self": [311, 505, 506, 1168, 1746, 1869, 1951], "identit": 311, "amax": [311, 506, 685, 686, 1790, 1869, 1913, 1951], "amin": [311, 506, 684, 686, 1790, 1869, 1913, 1951], "fill_": [311, 1195, 1221, 1429, 1732, 1869, 1884, 1902, 1929], "72": [311, 606, 1148, 1918], "uint8_t": [316, 1662], "retain_grad": [325, 1869, 1891, 1913], "requires_grad_": [325, 437, 1195, 1352, 1429, 1512, 1787, 1790, 1827, 1869, 1884, 1891, 1933, 1956], "n_fft": [341, 545, 1192, 1809, 1869], "hop_length": [341, 545, 1192, 1809, 1869], "win_length": [341, 545, 1192, 1809, 1869], "center": [341, 545, 768, 774, 1088, 1192, 1493, 1528, 1539, 1597, 1679, 1701, 1769, 1809, 1869, 1891, 1913, 1932], "onesid": [341, 545, 1192, 1809, 1869, 1951], "return_complex": [341, 545, 1192, 1809, 1869], "element_s": [343, 424, 1869, 1884, 1913, 1929], "lcm": [346, 1869, 1913], "ldexp": [348, 1118, 1869, 1913], "lerp": [352, 1869, 1913], "lt": [353, 385, 1222, 1868, 1869, 1884, 1913, 1942, 1943, 1951], "less_equ": [356, 1869, 1913], "lgamma": [358, 640, 641, 1869, 1913, 1951], "ln": [367, 1224, 1928], "logical_and": [373, 1869, 1913, 1951], "logical_not": [375, 1578, 1869, 1884, 1886, 1913, 1951], "logical_or": [377, 1869, 1913, 1951], "logical_xor": [379, 1869, 1913, 1951], "pivot": [386, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1285, 1286, 1287, 1711, 1869], "get_info": [386, 1285], "lu_data": [387, 1286, 1287, 1869], "lu_pivot": [387, 1286, 1287, 1869], "masked_fill_": [389, 1578, 1869, 1884, 1885], "booltensor": [390, 392, 724, 1289, 1472, 1862, 1930, 1933], "masked_scatter_": [391, 1869], "mvlgamma": [415, 1869, 1913], "posinf": [416, 417, 1323, 1869], "neginf": [416, 417, 1323, 1869], "nan_to_num": [417, 1869, 1913], "interpol": [420, 468, 774, 775, 776, 808, 1221, 1326, 1481, 1482, 1483, 1493, 1528, 1597, 1598, 1599, 1712, 1848, 1869, 1920], "ne": [428, 1617, 1650, 1658, 1869, 1884, 1913, 1951], "8182e": 434, "5765e": 434, "41": [434, 1071, 1254, 1600, 1649, 1711], "0545e": 434, "0949e": 434, "4842e": [434, 1071], "0000e": [434, 1071, 1111, 1273, 1282, 1323, 1649, 1767, 1769, 1770, 1775, 1776], "00": [434, 1071, 1111, 1273, 1282, 1323, 1649, 1663, 1767, 1769, 1770, 1775, 1776, 1868, 1912], "141592": [435, 1122], "1416": [435, 1052, 1122, 1827], "from_numpi": [437, 868, 869, 1827, 1946], "array_lik": [437, 868, 1795, 1796, 1797, 1798, 1799, 1800, 1827, 1886], "nextaft": [440, 1869, 1913, 1951], "fro": [442, 1227, 1248, 1252, 1265, 1627, 1636, 1656, 1869], "not_equ": [445, 1869, 1913], "resolve_conj": [447, 953, 1869, 1913], "resolve_neg": [447, 1869, 1913], "shorthand": [447, 1215], "input3": [449, 1869], "transpos": [449, 582, 583, 606, 681, 730, 731, 732, 933, 934, 1068, 1135, 1225, 1226, 1232, 1235, 1238, 1245, 1256, 1259, 1360, 1361, 1362, 1480, 1506, 1507, 1508, 1578, 1616, 1645, 1699, 1813, 1815, 1816, 1822, 1836, 1869, 1884, 1886, 1891, 1905, 1912, 1913, 1920, 1927, 1931, 1933, 1951], "polygamma": [455, 1869, 1913, 1928], "q_per_channel_axi": [462, 463, 1869, 1913], "zero_point": [463, 465, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 759, 761, 762, 763, 764, 766, 769, 770, 788, 791, 808, 809, 810, 811, 814, 841, 1082, 1083, 1713, 1714, 1715, 1716, 1717, 1869, 1918, 1919], "qtensor": [467, 1869], "uniform": [470, 597, 911, 1365, 1447, 1511, 1720, 1721, 1769, 1867, 1889, 1913, 1935, 1951], "queu": [475, 975, 1894], "life": [475, 972], "cycl": [475, 882, 972, 1687, 1693, 1891, 1917], "unexpectedli": [475, 1933], "enable_grad": [477, 1873, 1935], "0100": [477, 864, 1249, 1713], "0200": 477, "0300": [477, 1907], "maxnorm": [480, 481, 1732, 1869], "tile": [482, 1869, 1894, 1913, 1927, 1946], "repeat_interleav": [482, 1848, 1869, 1913, 1920], "output_s": [483, 730, 731, 732, 755, 756, 1334, 1335, 1336, 1338, 1339, 1340, 1361, 1376, 1377, 1378, 1425, 1426, 1427, 1480, 1487, 1488, 1489, 1490, 1491, 1492, 1522, 1523, 1524, 1555, 1556, 1557, 1733, 1869, 1886, 1951], "is_leaf": [484, 1869, 1884, 1886, 1913, 1946], "saved_weight": 485, "loaded_weight": 485, "5503": 485, "4926": [485, 1902], "1158": 485, "8303": 485, "1007": 485, "9853": 485, "2316": 485, "6606": 485, "resiz": [488, 489, 513, 534, 535, 1120, 1121, 1125, 1481, 1528, 1539, 1869, 1884, 1913, 1929, 1951], "shift": [494, 914, 917, 1088, 1095, 1341, 1347, 1348, 1349, 1374, 1468, 1521, 1738, 1869, 1872, 1951], "decim": [496, 497, 1740, 1869, 1905, 1959], "scatter_": [501, 504, 1744, 1869], "scatter_add_": [502, 503, 1745, 1848, 1869], "scatter_reduce_": [502, 505, 1746, 1869], "axi": [502, 504, 506, 811, 814, 951, 1067, 1082, 1108, 1137, 1160, 1713, 1733, 1738, 1739, 1861, 1869, 1897, 1912, 1916, 1918, 1946, 1951, 1955], "4600": 502, "2300": 502, "scatter_reduc": [506, 1848, 1869, 1913, 1951], "sgn": [511, 1117, 1765, 1869, 1884, 1886, 1913, 1927], "int16": [514, 1120, 1278, 1927, 1929, 1930, 1933, 1959], "dense_dim": [532, 534, 535, 572, 573, 574, 576, 577, 1798, 1869, 1913, 1927], "nse": [533, 1927], "randint": [533, 912, 960, 1111, 1301, 1352, 1478, 1511, 1512, 1794, 1869, 1873, 1885, 1913, 1932, 1935], "6550": 533, "2397": 533, "1611": 533, "0779": [533, 1232, 1708, 1862], "2326": 533, "0558": 533, "4711": 533, "9678": 533, "5138": 533, "0411": 533, "9417": 533, "5158": 533, "0793": 533, "0036": [533, 1293], "2569": 533, "1055": 533, "sparse_coo": [533, 572, 1329, 1790, 1793, 1794, 1798, 1927, 1930], "split_siz": [536, 1801, 1869, 1951], "squeez": [542, 682, 684, 685, 686, 688, 1217, 1283, 1293, 1295, 1296, 1298, 1301, 1324, 1327, 1510, 1709, 1794, 1807, 1808, 1812, 1854, 1855, 1869, 1884, 1912, 1913, 1920, 1931, 1951], "pad_mod": [545, 1809, 1869], "typedstorag": [546, 1867, 1907, 1929], "untypedstorag": [546, 602, 1867, 1907, 1929], "untyped_storag": 546, "compute_uv": [556, 1259, 1260, 1813, 1869], "axis0": [557, 1815, 1869], "axis1": [557, 1815, 1869], "dim0": [558, 581, 582, 1816, 1833, 1869], "indices_or_sect": [567, 1066, 1158, 1828, 1860], "5044": 569, "0005": [569, 1691, 1697], "3310": 569, "0584": [569, 1813], "cuda0": [569, 1894, 1900, 1933], "masked_grad": [570, 1869], "sparse_mask": [570, 1869, 1913], "mkldnn": [571, 1205, 1867, 1913], "sparsedim": 572, "blocksiz": [572, 573, 574, 1795, 1796, 1797, 1869, 1927], "sparse_csc": [572, 576, 1793, 1797, 1799, 1927], "sparse_bsr": [572, 574, 1796, 1797, 1927], "sparse_bsc": [572, 573, 1795, 1797, 1927], "bsr": [572, 574, 1796, 1797, 1934], "bsc": [572, 573, 1795, 1797, 1934], "csc": [572, 576, 1797, 1799, 1934], "minu": [572, 573, 574, 576, 577, 1928], "crow_indic": [572, 574, 577, 1788, 1790, 1791, 1793, 1796, 1797, 1800, 1869, 1913, 1927, 1934], "col_indic": [572, 574, 577, 1790, 1791, 1793, 1796, 1797, 1800, 1869, 1913, 1927, 1934], "sparsecsr": [572, 1833, 1927], "row_indic": [573, 576, 1795, 1799, 1869, 1913, 1927, 1934], "ccol_indic": [573, 576, 1795, 1799, 1869, 1913, 1927, 1934], "_nnz": [575, 576, 577, 1913], "012766935862600803": 578, "5415473580360413": 578, "08909505605697632": 578, "7729271650314331": 578, "unitriangular": [583, 1258, 1836, 1869], "tril": [585, 1578, 1869, 1913, 1946], "triu": [587, 1621, 1836, 1869, 1912, 1913, 1946], "trunc": [591, 666, 667, 676, 1063, 1106, 1113, 1116, 1740, 1869, 1884, 1913, 1927, 1951], "sizedim": 596, "return_invers": [598, 599, 1845, 1846, 1869], "return_count": [598, 599, 1845, 1846, 1869], "unsqueez": [601, 1088, 1216, 1256, 1372, 1448, 1621, 1830, 1869, 1896, 1913, 1920, 1927, 1931, 1932, 1951], "subspac": [606, 1259, 1435, 1701, 1813, 1814], "span": [606, 1029, 1030, 1365, 1813, 1917, 1923], "foral": 606, "proportion": [606, 774, 1481, 1597], "9482": [606, 1172], "0310": 606, "4999": 606, "5316": 606, "1520": 606, "7472": 606, "5617": 606, "8649": 606, "4724": [606, 1902], "0334": 606, "2976": 606, "8499": 606, "2109": 606, "9913": 606, "9607": 606, "6123": 606, "1064483442": 606, "1124191867": 606, "1069546515": 606, "1089989247": 606, "1105482831": 606, "1061112040": 606, "1057999968": 606, "1084397505": 606, "1071760287": 606, "1123489973": 606, "1097310419": 606, "1084649136": 606, "1101533110": 606, "1073668768": 606, "1082790149": 606, "1088634448": 606, "1000000000": 606, "0047": 606, "0310j": 606, "5316j": 606, "7472j": 606, "8649j": 606, "0334j": 606, "8499j": 606, "9913j": 606, "6123j": 606, "202": 606, "154": [606, 1908], "59": [606, 1838, 1840], "182": 606, "243": [606, 1192, 1813], "253": 606, "188": 606, "185": [606, 1956], "252": [606, 1908], "191": 606, "63": [606, 1908, 1918], "240": 606, "227": 606, "165": 606, "190": 606, "146": 606, "106": 606, "205": 606, "112": [606, 1956], "206": 606, "189": 606, "95": [606, 1689, 1692, 1693], "147": 606, "43": 606, "246": [606, 1956], "87": 606, "235": 606, "226": 606, "254": [606, 1908], "111": [606, 1663, 1912], "117": 606, "177": 606, "28": [606, 735, 1051, 1834, 1912, 1943, 1950], "xlogi": [611, 1869, 1913, 1928], "inductor": [669, 941, 1877, 1913, 1938, 1941, 1942, 1943, 1944, 1946, 1948, 1950, 1953, 1954, 1956, 1958], "aot_graph": [669, 1877], "aot_joint_graph": [669, 1877], "ddp_graph": [669, 1877], "graph_cod": [669, 1877], "graph_break": [669, 1877, 1941, 1946, 1947, 1954], "graph_siz": 669, "trace_sourc": 669, "trace_cal": 669, "output_cod": [669, 1877, 1948, 1956], "perf_hint": [669, 941], "toggl": [669, 1894], "supress": 669, "silenc": 669, "lowest": [669, 931, 1323, 1626, 1627, 1635, 1636, 1722, 1723, 1896, 1934], "notset": 669, "torchinductor": [669, 1877, 1938, 1943, 1944, 1946, 1948], "joint": [669, 1877], "ddpoptim": [669, 1877], "unregist": [669, 1877, 1881, 1912], "cosin": [672, 673, 957, 958, 1363, 1364, 1510, 1685, 1686, 1693, 1771, 1914, 1946], "3348": 672, "5889": 672, "2005": [672, 1855, 1956], "1584": 672, "2294": [672, 1295], "2004": 672, "3690": 672, "7298": [672, 1730], "hyperbol": [673, 871, 874, 958, 1469, 1780, 1826], "uniform_": [673, 874, 911, 1867, 1869, 1884, 1889, 1896, 1928, 1935], "3192": 673, "9915": 673, "9674": 673, "7151": 673, "7791": 673, "3120": [673, 955], "2979": 673, "1341": 673, "_i": [674, 675, 676, 677, 678, 909, 911, 914, 917, 921, 936, 1063, 1113, 1219, 1221, 1318, 1477, 1704, 1708, 1727, 1763, 1810, 1862, 1928], "0202": 674, "0985": 674, "3506": [674, 1285], "6056": 674, "3944": 674, "9732": 674, "3497": 674, "6245": [674, 1227], "4022": [674, 1050, 1813], "3743": 674, "7724": 674, "5811": 674, "8017": 674, "7695": 674, "3930": 674, "3672": [674, 968, 1228], "1450": [674, 1794], "6971": 674, "0736": [674, 1902], "0994": 674, "3216": 674, "7845": 674, "1610": 674, "1868": 674, "4090": 674, "9902": [674, 968, 1228], "3667": [674, 955], "3925": 674, "6147": 674, "sum_": [675, 1192, 1247, 1264, 1342, 1343, 1344, 1357, 1358, 1359, 1365, 1397, 1398, 1417, 1432, 1436, 1438, 1807, 1808, 1809, 1829, 1834, 1854, 1855, 1856, 1928], "mathbin": [675, 678, 679, 909, 921, 1791], "doubletensor": [675, 676, 677, 678, 679, 909, 1753, 1930, 1933], "tensorfloat32": [675, 678, 909, 921, 1290, 1300, 1357, 1358, 1359, 1360, 1361, 1362, 1416, 1503, 1504, 1505, 1506, 1507, 1508, 1545, 1755, 1894, 1905], "rocm": [675, 678, 909, 921, 1290, 1300, 1357, 1358, 1359, 1360, 1361, 1362, 1382, 1400, 1416, 1867], "6311": 675, "0503": 675, "9768": [675, 1902], "0362": 675, "1653": 675, "8185": 675, "4255": [675, 1318], "6760": 675, "9453": 675, "5743": 675, "8202": 675, "3691": 675, "0943": 675, "1109": [675, 1383, 1776], "4730": [675, 1829], "histor": [676, 1025, 1369, 1893, 1902, 1907], "2312": [676, 1794], "6496": 676, "1312": 676, "0428": 676, "4292": 676, "1030": 676, "5369": 676, "9829": 676, "0430": 676, "8635": 677, "6391": 677, "6174": 677, "7617": 677, "5879": 677, "7388": 677, "8353": 677, "6249": 677, "6511": 677, "8716": 678, "4671": 678, "3746": 678, "7573": 678, "9555": 678, "8681": 678, "3768": 679, "5565": 679, "otim": [680, 1216, 1380, 1527], "conj": [681, 954, 1084, 1085, 1087, 1089, 1096, 1098, 1102, 1103, 1105, 1225, 1226, 1232, 1234, 1253, 1735, 1736, 1869, 1896, 1899, 1913, 1933, 1951], "mh": [681, 932, 933, 934, 1232, 1813, 1869, 1913, 1931, 1933], "lvert": [683, 1184, 1477, 1564, 1934], "rvert": [683, 1184, 1934], "leq": [683, 910, 911, 955, 1086, 1088, 1184, 1216, 1220, 1235, 1241, 1352, 1371, 1432, 1434, 1436, 1512, 1563, 1566, 1766, 1809, 1889, 1928], "elementwis": [683, 955, 984, 1011, 1012, 1111, 1113, 1333, 1392, 1393, 1394, 1466, 1587, 1853, 1871, 1886, 1899, 1928], "07": [683, 808, 809, 810, 811, 814, 932, 1071, 1233, 1236, 1241, 1253, 1254, 1260, 1283, 1286, 1616, 1664, 1671, 1770, 1775, 1813, 1912], "09": [683, 1671, 1683, 1896, 1934], "8177": 684, "4878": 684, "2491": 684, "9130": 684, "7158": 684, "1775": 684, "0992": 684, "4817": 684, "0053": 684, "0164": 684, "3738": 684, "0507": [684, 1912], "9700": 684, "1106": 684, "0318": 684, "0816": [684, 1285], "6451": 685, "4866": 685, "2987": 685, "3312": 685, "5744": 685, "2980": [685, 1886], "8397": 685, "2713": 685, "9128": 685, "9214": 685, "7268": 685, "2995": 685, "9023": [685, 1226], "4853": 685, "9075": 685, "6165": 685, "180": [687, 1052, 1719], "14159": [687, 1827], "135": 687, "45": [687, 1348, 1349, 1393, 1394, 1468, 1649, 1912], "ao": [689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1918, 1919, 1920], "batch_norm": [689, 690, 1205, 1869, 1913], "fuse": [689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 781, 782, 791, 793, 794, 795, 803, 836, 848, 849, 941, 1209, 1210, 1578, 1668, 1669, 1755, 1879, 1884, 1912, 1914, 1918, 1919, 1920, 1921, 1946, 1948, 1955], "3d": [690, 693, 696, 724, 729, 732, 756, 758, 763, 768, 1297, 1336, 1340, 1344, 1347, 1349, 1359, 1362, 1369, 1370, 1376, 1378, 1392, 1394, 1424, 1435, 1481, 1489, 1492, 1493, 1497, 1505, 1508, 1516, 1522, 1524, 1539, 1554, 1566, 1597, 1886, 1905, 1918, 1927, 1932], "bn": [691, 692, 693, 694, 695, 696, 803, 849, 1068, 1205, 1907, 1914, 1918, 1919], "qat": [701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 719, 720, 721, 722, 781, 782, 835, 1918, 1919, 1920], "dilat": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 761, 762, 763, 771, 772, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1405, 1406, 1407, 1408, 1409, 1410, 1422, 1423, 1424, 1480, 1503, 1504, 1505, 1506, 1507, 1508, 1522, 1552, 1553, 1554, 1596, 1716, 1717, 1869, 1912, 1951], "padding_mod": [701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 716, 719, 720, 727, 728, 729, 730, 731, 732, 761, 762, 763, 1357, 1358, 1359, 1360, 1361, 1362, 1405, 1406, 1407, 1408, 1409, 1410, 1528, 1869, 1951], "momentum": [701, 702, 703, 704, 705, 706, 712, 713, 725, 726, 740, 741, 742, 1347, 1348, 1349, 1392, 1393, 1394, 1402, 1403, 1404, 1411, 1412, 1413, 1468, 1498, 1538, 1672, 1679, 1681, 1687, 1693, 1695, 1869, 1902, 1904, 1914, 1951], "freeze_bn": [701, 702, 703, 704, 705, 706], "qconfig": [701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 777, 778, 780, 783, 784, 785, 786, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 850, 851, 1937], "batchnorm1d": [701, 704, 1402, 1468, 1498, 1907, 1920], "fakequant": [701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 722, 791, 851], "weight_fake_qu": [701, 702, 703, 704, 705, 706, 707, 708, 719, 720], "quant": [701, 702, 703, 704, 705, 706, 707, 708, 709, 719, 720, 721, 779, 781, 782, 827, 850, 851, 1082, 1083, 1918, 1919], "batchnorm3d": [703, 706, 708, 713, 1404, 1468, 1498, 1920], "num_featur": [712, 713, 725, 726, 740, 741, 742, 1195, 1347, 1348, 1349, 1392, 1393, 1394, 1402, 1403, 1404, 1411, 1412, 1413, 1429, 1468, 1530, 1902], "qint8": [717, 718, 745, 750, 753, 754, 761, 762, 763, 770, 781, 783, 788, 809, 830, 847, 848, 850, 851, 1662, 1713, 1714, 1918, 1920, 1921, 1929, 1933, 1934], "from_float": [721, 727, 728, 729, 734, 735, 745, 753, 786, 806, 812, 815, 827, 1918], "qparams_dict": [721, 727, 728, 729, 753], "hidden_s": [723, 749, 750, 754, 1381, 1382, 1399, 1400, 1444, 1445, 1446, 1869], "num_lay": [723, 749, 1381, 1399, 1444, 1445, 1473, 1475, 1869, 1902], "batch_first": [723, 724, 749, 1381, 1399, 1435, 1444, 1445, 1472, 1474, 1476, 1643, 1645, 1646, 1648, 1869, 1898], "bidirect": [723, 749, 1381, 1399, 1444, 1445, 1869], "_lstmlayer": 723, "nnqa": 723, "h0": [723, 749, 751, 1381, 1399, 1444], "c0": [723, 751, 1399, 1956], "hn": [723, 749, 751, 1381, 1382, 1399, 1444], "cn": [723, 751, 1195, 1399], "weight_ih": [723, 1382, 1400, 1446], "weight_hh": [723, 1382, 1400, 1446], "embed_dim": [724, 1435], "num_head": [724, 1435, 1869], "add_bias_kv": [724, 1435], "add_zero_attn": [724, 1435, 1869], "kdim": [724, 1435], "vdim": [724, 1435], "dequant": [724, 777, 779, 781, 782, 788, 790, 850, 1869, 1913, 1919, 1921, 1934, 1936], "mha": [724, 1435], "conver": 724, "key_padding_mask": [724, 1435, 1869], "need_weight": [724, 1435, 1869], "attn_mask": [724, 1435, 1578, 1869], "average_attn_weight": [724, 1435, 1869], "is_caus": [724, 1435, 1475, 1476, 1578, 1869], "attn_output_weight": [724, 1435], "unmask": [724, 1472], "causal": [724, 1435, 1472, 1473, 1474, 1475, 1476, 1578], "attn_weight": [724, 1435, 1578], "attn_output": [724, 1435], "quint8": [727, 728, 729, 730, 731, 732, 734, 735, 745, 761, 762, 763, 770, 781, 783, 788, 808, 809, 810, 811, 814, 816, 848, 850, 1662, 1713, 1714, 1715, 1716, 1717, 1918, 1920, 1921, 1929, 1933, 1934], "learnabl": [727, 728, 729, 730, 731, 732, 734, 735, 745, 749, 753, 1347, 1348, 1349, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1372, 1373, 1381, 1382, 1384, 1392, 1393, 1394, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1437, 1444, 1446, 1468, 1520, 1572, 1902], "q_input": [727, 728, 729, 730, 731, 732, 761, 762, 763], "quantize_per_tensor": [727, 728, 729, 730, 731, 732, 745, 746, 747, 761, 762, 763, 1715, 1716, 1717, 1869, 1913, 1918], "unequ": [728, 729, 730, 731, 732, 1358, 1359, 1361, 1362], "50": [728, 730, 731, 732, 761, 813, 1251, 1301, 1343, 1344, 1352, 1357, 1358, 1359, 1361, 1362, 1377, 1378, 1397, 1398, 1422, 1423, 1424, 1479, 1505, 1506, 1508, 1512, 1523, 1524, 1680, 1824, 1886, 1894, 1946], "56": [729, 1927, 1950], "output_pad": [730, 731, 732, 1360, 1361, 1362, 1408, 1409, 1410, 1506, 1507, 1508, 1869, 1951], "qnnpack": [730, 731, 745, 753, 844, 845, 848, 850, 851, 1918, 1920], "convtranspose2d": [730, 1409, 1507, 1848, 1920], "nnq": [730, 731, 732, 777, 778, 779, 853, 1918], "downsampl": [730, 731, 732, 1361, 1481, 1493, 1528, 1539], "upsampl": [730, 731, 732, 768, 775, 776, 808, 1361, 1482, 1483, 1493, 1528, 1539, 1598, 1599], "fbgemm": [731, 732, 745, 753, 822, 844, 845, 848, 850, 851, 1918, 1919, 1946, 1947], "cubic": [732, 1378, 1524, 1528], "num_embed": [734, 735, 1372, 1373, 1520], "embedding_dim": [734, 735, 1372, 1373, 1401, 1519, 1520], "padding_idx": [734, 1372, 1373, 1519, 1520, 1869, 1951], "scale_grad_by_freq": [734, 735, 1372, 1373, 1519, 1520, 1869, 1951], "_weight": [734, 735, 1372, 1373, 1672, 1678, 1955], "overwritten": [734, 735, 745, 753, 786, 830, 850, 1891, 1896, 1934, 1941], "_embed": [734, 735], "_dim": [734, 735, 1372], "include_last_offset": [735, 1373, 1520, 1869, 1951], "embedding_bag": [735, 1869, 1913], "floatfunct": [736, 1918], "activation_post_process": [736, 788, 1918], "add_relu": [736, 737, 746, 1879, 1913, 1936], "add_scalar": [736, 737, 746, 1913, 1932, 1936], "mul_scalar": [736, 737, 746, 1913, 1936], "collector": 737, "f_add": 737, "num_channel": [738, 1384, 1885], "normalized_shap": [743, 1401, 1542, 1869, 1886, 1951], "elementwise_affin": [743, 1401], "negative_slop": [744, 769, 1415, 1543, 1544, 1869, 1889, 1951], "slope": [744, 769, 1415, 1460, 1889], "bias_": [745, 753], "_featur": [745, 753, 770, 1337, 1350, 1414, 1416, 1499, 1545], "from_refer": [745, 753], "ref_qlinear": [745, 753], "output_scal": [745, 748, 1715, 1869], "output_zero_point": [745, 748, 1715, 1869], "q_add": 746, "qint32": [746, 747, 1662, 1713, 1714, 1918, 1921, 1929, 1933, 1934], "x_0": [747, 1834], "gate": [749, 750, 1380, 1381, 1382, 1399, 1458, 1527, 1581], "r_t": [749, 1381, 1678], "w_": [749, 1335, 1336, 1339, 1340, 1343, 1344, 1346, 1354, 1355, 1356, 1358, 1359, 1361, 1362, 1365, 1377, 1378, 1381, 1382, 1398, 1399, 1400, 1423, 1424, 1426, 1427, 1436, 1441, 1442, 1444, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1481, 1482, 1483, 1484, 1485, 1486, 1524, 1528], "x_t": [749, 883, 885, 1347, 1348, 1349, 1381, 1392, 1393, 1394, 1399, 1444, 1468, 1666], "b_": [749, 1381, 1382, 1399, 1400, 1417, 1444, 1446, 1829, 1927], "hr": [749, 1381, 1382, 1399, 1899], "h_": [749, 1335, 1336, 1339, 1340, 1343, 1344, 1350, 1355, 1356, 1358, 1359, 1361, 1362, 1377, 1378, 1381, 1382, 1398, 1399, 1416, 1423, 1424, 1425, 1426, 1427, 1441, 1442, 1444, 1446, 1451, 1452, 1454, 1455, 1481, 1482, 1483, 1485, 1486, 1499, 1524, 1528], "z_t": [749, 1381], "iz": [749, 1381, 1382], "hz": [749, 980, 1381, 1382, 1932], "n_t": [749, 1381], "h_t": [749, 1381, 1399, 1444], "hadamard": [749, 1381, 1382, 1399, 1400], "multilay": [749, 1381, 1399, 1910], "_t": [749, 1381, 1399, 1679, 1681, 1896, 1914], "b_ih": [749, 1381, 1382, 1399, 1400, 1444, 1446, 1869], "b_hh": [749, 1381, 1382, 1399, 1400, 1444, 1446, 1869], "h_0": [749, 1381, 1399, 1400, 1444], "seq_len": [749, 1381, 1399, 1435, 1444], "pack_padded_sequ": [749, 1381, 1399, 1444, 1642, 1644, 1645, 1898], "num_direct": [749, 1381, 1399, 1444], "h_n": [749, 1381, 1399, 1444], "_size": [749, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1377, 1378, 1381, 1382, 1397, 1398, 1399, 1400, 1422, 1423, 1424, 1425, 1426, 1427, 1444, 1446, 1480, 1524], "_layer": [749, 1381, 1399, 1444], "_direct": 749, "output1": [749, 1337, 1890, 1912], "output2": [749, 1337], "weight_ih_l": [749, 1381, 1399, 1444], "w_ir": [749, 1381], "w_iz": [749, 1381], "w_in": [749, 1381], "weight_hh_l": [749, 1381, 1399, 1444], "w_hr": [749, 1381], "w_hz": [749, 1381], "w_hn": [749, 1381], "bias_ih_l": [749, 1381, 1399, 1444], "b_ir": [749, 1381], "b_iz": [749, 1381], "b_in": [749, 1381], "bias_hh_l": [749, 1381, 1399, 1444], "b_hr": [749, 1381], "b_hz": [749, 1381], "b_hn": [749, 1381], "mathcal": [749, 1350, 1357, 1358, 1359, 1360, 1361, 1362, 1372, 1373, 1381, 1382, 1399, 1400, 1414, 1416, 1444, 1446, 1447, 1468, 1724, 1889, 1899], "subtli": [749, 1381, 1681], "gru": [750, 1382, 1445, 1869, 1894, 1913, 1918, 1920], "cell": [750, 752, 754, 1381, 1382, 1399, 1400, 1444, 1446], "hx": [750, 752, 754, 1382, 1400, 1446, 1869], "cx": [752, 1400, 1869], "nonlinear": [754, 1345, 1363, 1389, 1444, 1446, 1456, 1867, 1889, 1927], "elman": [754, 1444, 1446], "adaptiveavgpool2d": [755, 1488, 1848, 1920], "adaptiveavgpool3d": [756, 1489, 1848, 1920], "ceil_mod": [757, 758, 771, 772, 1342, 1343, 1344, 1397, 1398, 1422, 1423, 1424, 1495, 1496, 1497, 1549, 1550, 1552, 1553, 1554, 1716, 1717, 1869, 1951], "count_include_pad": [757, 758, 1342, 1343, 1344, 1495, 1496, 1497, 1869, 1951], "divisor_overrid": [757, 758, 1343, 1344, 1496, 1497, 1869, 1951], "kh": [757, 758, 762, 763, 1343, 1344, 1377, 1378, 1423, 1424, 1496, 1497, 1504, 1505, 1507, 1508, 1523, 1524, 1553, 1554], "kw": [757, 758, 762, 763, 1343, 1344, 1377, 1378, 1423, 1424, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1523, 1524, 1552, 1553, 1554], "sh": [757, 758, 762, 763, 1496, 1497, 1504, 1505, 1507, 1508, 1553, 1554, 1956], "sw": [757, 758, 761, 762, 763, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1552, 1553, 1554], "avgpool2d": [757, 1496, 1920], "_channel": [757, 758, 761, 762, 763, 1357, 1358, 1359, 1360, 1361, 1362, 1384, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1552, 1553, 1554, 1923], "ih": [757, 758, 762, 763, 1444, 1446, 1496, 1497, 1504, 1505, 1507, 1508, 1553, 1554], "iw": [757, 758, 761, 762, 763, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508, 1552, 1553, 1554], "padh": [757, 758, 762, 763, 1496, 1497, 1504, 1505, 1507, 1508], "padw": [757, 758, 761, 762, 763, 1495, 1496, 1497, 1503, 1504, 1505, 1506, 1507, 1508], "kd": [758, 763, 1344, 1424], "sd": [758, 763], "padd": [758, 763], "formul": [759, 1351, 1371, 1385, 1419, 1465, 1466, 1547, 1564, 1578, 1899, 1927], "min_": [760, 1231, 1232, 1241, 1259, 1813], "max_": [760, 1422, 1423, 1424, 1617, 1650], "convolv": [761, 762, 763, 1357, 1358, 1359, 1360, 1361, 1362, 1405, 1406, 1407, 1408, 1409, 1410, 1503, 1504, 1505, 1506, 1507, 1508], "dw": [761, 762, 763, 1503, 1504, 1505, 1506, 1507, 1508], "qf": [761, 762, 763], "dtype_input": [761, 762, 763], "dtype_filt": [761, 762, 763], "q_filter": [761, 762, 763], "dh": [762, 763, 1504, 1505, 1507, 1508], "dd": 763, "scale_factor": [768, 774, 775, 776, 1481, 1482, 1483, 1539, 1578, 1597, 1598, 1599, 1869, 1951], "align_corn": [768, 774, 775, 1481, 1482, 1493, 1528, 1539, 1597, 1598, 1869, 1951], "height": [768, 774, 1343, 1344, 1358, 1359, 1361, 1362, 1398, 1423, 1424, 1436, 1463, 1481, 1539, 1597, 1885], "spatial": [768, 774, 775, 776, 929, 1088, 1348, 1376, 1401, 1441, 1442, 1463, 1480, 1481, 1482, 1483, 1493, 1528, 1539, 1568, 1569, 1570, 1597, 1598, 1599], "pixel": [768, 774, 776, 1358, 1365, 1368, 1369, 1370, 1374, 1436, 1441, 1442, 1481, 1493, 1528, 1539, 1597, 1599], "corner": [768, 774, 920, 1481, 1493, 1528, 1539, 1597, 1910], "leakyrelu": [769, 1430, 1543, 1902, 1920], "_slope": [769, 1415, 1543, 1889], "xa": [770, 1245, 1256, 1257, 1258, 1416, 1545], "return_indic": [771, 772, 1338, 1339, 1340, 1377, 1378, 1422, 1423, 1424, 1425, 1426, 1427, 1490, 1491, 1492, 1523, 1524, 1552, 1553, 1554, 1869], "maxpool1d": [771, 1425, 1552, 1555, 1920], "linearli": [774, 1132, 1254, 1481, 1597, 1690, 1711, 1898, 1914, 1921], "neighbour": [776, 1417, 1539, 1599], "stub": [777, 778, 1915], "quantstub": [779, 1918], "dequantstub": [779, 1918], "quantwrapp": 780, "backend_config": [781, 782, 783, 784, 785, 806, 807, 848, 849, 850, 851, 1937], "backendpatternconfig": [781, 850], "blob": [781, 1125, 1899, 1901, 1932, 1955], "dtypeconfig": [781, 782, 784, 850], "observationtyp": [781, 782, 850, 1920], "weighted_int8_dtype_config": [781, 850], "input_dtyp": [781, 783, 850, 1920], "output_dtyp": [781, 783, 850, 1920, 1951], "weight_dtyp": [781, 783, 850, 1920], "bias_dtyp": [781, 783, 1920], "fuse_conv2d_relu": 781, "is_qat": [781, 782], "convrelu2d": [781, 1920], "linear_config": 781, "set_observation_typ": [781, 782, 850], "output_use_different_observer_as_input": [781, 782, 785, 850, 1920], "add_dtype_config": [781, 782, 850], "set_root_modul": [781, 782], "set_qat_modul": [781, 782], "set_reference_quantized_modul": [781, 782], "conv_relu_config": 781, "set_fused_modul": [781, 782], "set_fuser_method": [781, 782], "fused_conv_relu_config": 781, "my_backend": [781, 1942], "set_backend_pattern_config": [781, 850], "from_dict": [781, 782, 783, 804, 805, 806, 843], "backend_config_dict": [781, 1918], "set_nam": 781, "to_dict": [781, 782, 783, 804, 805, 806, 843], "backendconfig": [782, 807, 848, 850, 1921], "dtype_config": [782, 1920], "backend_pattern_config_dict": 782, "observation_typ": [782, 1920], "qat_modul": [782, 1920], "reference_quantized_modul": 782, "fused_modul": [782, 1920], "fuser_method": [782, 803, 1920], "pattern_complex_format": 782, "set_dtype_config": 782, "fuser": [782, 1209, 1868], "fuse_linear_relu": 782, "linearrelu": [782, 1920], "8bea7180a8ba3c279f2c9b050f2a69a6": 782, "understood": [782, 928], "output_share_observer_with_input": [782, 785, 1920], "renam": [782, 1849, 1851, 1869, 1884, 1885, 1913, 1950], "quantdequantstub": 782, "set_pattern": 782, "is_dynam": [783, 815, 1920], "quant1": 783, "dequant1": 783, "fp32_linear": 783, "quant2": 783, "dequant2": 783, "bracket": [783, 1924], "dtype_config1": 783, "dtype_config2": 783, "dtypewithconstraint": [783, 1920], "quant_min_lower_bound": [783, 784, 1920], "quant_max_upper_bound": [783, 784, 1920], "255": [783, 791, 1082, 1083, 1121, 1528, 1539, 1597, 1918, 1920, 1932], "input_dtype_with_constraint": 783, "scale_min_lower_bound": [783, 784, 1920], "scale_max_upper_bound": [783, 784, 1920], "dtype_config_dict": 783, "bias_typ": [783, 850], "scale_exact_match": [784, 1920], "zero_point_exact_match": [784, 1920], "quant_min": [784, 788, 791, 808, 809, 810, 811, 814, 815, 1082, 1083, 1869, 1918], "quant_max": [784, 788, 791, 808, 809, 810, 811, 814, 815, 1082, 1083, 1869, 1918], "fixedqparamsobserv": 784, "fixedqparamsfakequant": 784, "input_output_not_observ": [785, 1920], "remove_qconfig": 786, "is_refer": 786, "convert_custom_config_dict": [786, 804, 1918], "from_observ": [786, 804, 1918], "observed_to_quantized_custom_module_class": [786, 804, 1918], "observedcustommodul": [786, 804, 806, 827, 1918], "quantizedcustommodul": [786, 804], "calib_data": 787, "fake_quant": [788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 851, 1082, 1083, 1937], "movingaverageminmaxobserv": [788, 791, 811], "observer_kwarg": [788, 791], "x_out": [788, 791], "fake_quant_en": 788, "observer_en": 788, "calculate_qparam": [789, 808, 809, 813], "qscheme": [791, 808, 809, 810, 811, 814, 815, 816, 1869, 1913, 1918, 1921, 1934], "fake_qu": [792, 796, 797, 798, 1918], "default_fake_qu": 793, "default_per_channel_weight_fake_qu": 794, "default_weight_fake_qu": 795, "histogram": [796, 808, 820, 1155, 1157, 1869, 1913, 1932], "memoryless": [797, 798], "averaging_const": [797, 798, 810, 811, 1869], "modules_to_fus": 803, "fuser_func": 803, "fuse_known_modul": 803, "fuse_custom_config_dict": [803, 805], "convmodul": 803, "bnmodul": 803, "convbnmodul": 803, "additional_fuser_method_map": 803, "fuse_conv_bn": [803, 1920], "conv1": [803, 1207, 1429, 1457, 1868, 1918, 1932], "bn1": 803, "relu1": [803, 1457, 1600], "fused_m": 803, "custom_config": [804, 805, 806, 807], "convert_fx": [804, 1918, 1937], "convert_custom_config": [804, 848, 1918], "set_observed_to_quantized_map": 804, "set_preserved_attribut": [804, 805, 806], "attr1": [804, 805, 806, 1912], "attr2": [804, 805, 806, 1912], "floatcustommodul": [804, 806], "weight_onli": [804, 848, 1918], "preserved_attribut": [804, 805, 806], "observed_class": [804, 806], "quantized_class": 804, "quant_typ": [804, 806], "quanttyp": [804, 806], "fuse_fx": [805, 1918], "fuse_custom_config": [805, 849], "convertcustomconfig": [805, 848], "prepare_fx": [806, 829, 848, 851, 1918, 1937], "prepare_qat_fx": [806, 848, 1918], "prepare_custom_config": [806, 807, 850, 851, 1918], "set_standalone_module_nam": 806, "module1": [806, 843, 1894], "qconfig_map": [806, 807, 843, 844, 845, 848, 850, 851, 1918], "child_prepare_custom_config": 806, "set_standalone_module_class": 806, "mystandalonemodul": 806, "set_float_to_observed_map": 806, "set_non_traceable_module_nam": 806, "module2": [806, 843, 1894], "module3": [806, 1894], "set_non_traceable_module_class": 806, "nontraceablemodule1": 806, "nontraceablemodule2": 806, "set_input_quantized_index": 806, "set_output_quantized_index": 806, "prepare_custom_config_dict": [806, 827, 829, 1918], "standalone_module_nam": 806, "standalone_module_class": 806, "module_class": 806, "float_to_observed_custom_module_class": [806, 827, 1918], "non_traceable_module_nam": 806, "non_traceable_module_class": 806, "input_quantized_idx": 806, "output_quantized_idx": 806, "float_class": 806, "qconfigmap": [807, 844, 845, 848, 850, 1918, 1921], "preparecustomconfig": [807, 850], "2048": [808, 1472, 1474, 1476, 1894], "upsample_r": 808, "per_tensor_affin": [808, 809, 810, 1714, 1715, 1716, 1717, 1918, 1921], "reduce_rang": [808, 809, 810, 811, 814, 816, 1869, 1918, 1919], "factory_kwarg": [808, 809, 814], "1920928955078125e": [808, 809, 810, 811, 814], "finfo": [808, 809, 810, 811, 814, 1250, 1253, 1333, 1867, 1934], "minmaxobserv": [808, 810, 814, 830, 850, 851, 1921], "x_": [809, 810, 960, 1078, 1269, 1270, 1272, 1275, 1283, 1346, 1365, 1419, 1436, 1462, 1464, 1584, 1790, 1792, 1834, 1891, 1921, 1928], "q_": [809, 1921], "x_orig": 809, "reset_min_max_v": [809, 814], "ch_axi": [811, 814, 1869], "per_channel_affin": [811, 814, 1713, 1918, 1921], "custom_op_nam": [812, 815], "with_arg": [813, 830, 850, 851], "_callable_arg": 813, "_with_arg": 813, "foo_build": 813, "foo_instance1": 813, "foo_instance2": 813, "with_callable_arg": 813, "_with_callable_arg": 813, "cur_tim": 813, "get_time_func": 813, "dan": 813, "creation_tim": 813, "compute_dtyp": 815, "ptq": [820, 1918, 1919, 1921], "obs_dict": 826, "get_observer_state_dict": 826, "allow_list": [827, 1936], "observer_non_leaf_module_list": 827, "preemptiv": [827, 828, 1609], "propagate_qconfig_": 829, "qconfig_dict": [829, 843], "my_qconfig": 830, "default_observ": 830, "default_qat_config": 836, "set_glob": [843, 848, 850, 1918], "set_object_typ": [843, 848, 850], "set_module_name_regex": 843, "regex": 843, "set_module_nam": [843, 848, 850], "set_module_name_object_type_ord": 843, "global_qconfig": 843, "qconfig1": 843, "qconfig2": 843, "qconfig3": 843, "object_typ": 843, "module_name_regex": 843, "module_name_object_type_ord": 843, "conv0": 843, "x86": [844, 845, 1756, 1918, 1920], "run_arg": [846, 852], "counterpart": [846, 853, 1265, 1609, 1871, 1879, 1935, 1936, 1944, 1946], "qconfig_spec": 847, "quantize_fx": [848, 849, 850, 851, 1918, 1937], "_remove_qconfig": 848, "qconfig_from_prepar": 848, "prepared_model": [848, 850, 851], "xnnpack": [848, 1879, 1918], "get_default_backend_config": [848, 850, 851], "quantized_model": 848, "fusion_pattern": 849, "fusecustomconfig": 849, "_equalization_config": 850, "get_default_qconfig_map": [850, 1918], "float_model": [850, 851, 1918, 1936], "data_load": [850, 851, 1687, 1693, 1904, 1918], "get_default_qconfig": [850, 851, 1918], "linear_pattern_config": 850, "suer": 850, "sample_inference_data": [850, 1918], "get_default_qat_qconfig_map": [851, 1918], "load_weight": 851, "train_data": 851, "get_default_qat_qconfig": [851, 1918], "custom_module_class_map": 853, "lceil": [854, 930], "rceil": [854, 930], "adjac": [854, 920, 1368, 1369, 1370, 1374, 1727, 1927], "set_default_tensor_typ": [854, 910, 919, 1069, 1071, 1081, 1086, 1104, 1122, 1142, 1152, 1153, 1215, 1266, 1282, 1660, 1720, 1722, 1724, 1726, 1727, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1795, 1796, 1797, 1798, 1799, 1800, 1838, 1840, 1864], "get_default_dtyp": [854, 1266, 1282, 1662, 1727, 1929, 1930, 1959], "5000": [854, 869, 875, 876, 877, 912, 936, 1086, 1088, 1089, 1096, 1099, 1104, 1114, 1116, 1117, 1118, 1148, 1154, 1157, 1221, 1247, 1266, 1324, 1326, 1354, 1355, 1373, 1481, 1712, 1716, 1717, 1718, 1727, 1731, 1928, 1933], "maxim": [863, 1293, 1363, 1425, 1426, 1427, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1679, 1680, 1681, 1682, 1927, 1946, 1956], "3398": 863, "2663": [863, 1894], "2686": 863, "2450": 863, "7401": 863, "8805": 863, "3402": 863, "1936": 863, "4907": [863, 1283], "3948": [863, 955], "0691": 863, "3132": 863, "6092": 863, "5419": 863, "2993": [863, 1812], "3195": 863, "1139": 864, "2254": 864, "1381": [864, 1812], "3687": 864, "1975": [864, 1886], "0102": 864, "4732": 864, "9240": 864, "1207": [864, 1318], "7506": 864, "0213": 864, "7809": 864, "2960": 864, "9384": 864, "1438": 864, "ascend": [865, 1088, 1232, 1234, 1263, 1317, 1747, 1785, 1845], "0785": 865, "5267": 865, "8521": 865, "4065": 865, "1598": 865, "0788": 865, "0745": 865, "2700": 865, "2208": 865, "0722": 865, "7064": 865, "2564": 865, "0669": 865, "2318": 865, "8229": 865, "9280": 865, "lexicograph": [866, 1655, 1871, 1927], "9039": 867, "6291": 867, "0795": [867, 1712, 1902], "1586": 867, "1939": [867, 1896], "4900": 867, "7503": 867, "9355": 867, "histori": [868, 869, 1134, 1671, 1827, 1867, 1878, 1886, 1896, 1898, 1924], "dlpack": [869, 1119, 1867], "frombuff": 869, "data_ptr": [869, 1884, 1929, 1931], "addbackward0": [869, 1902, 1907], "__array_interface__": [869, 1946], "5962": 870, "4985": 870, "4396": 870, "4525": [870, 1886], "6387": 870, "4552": 870, "sine": [871, 1768, 1778, 1780], "1606": 871, "4267": 871, "0899": 871, "0250": 871, "1599": 871, "1534": 871, "9435": 871, "8990": [871, 1063], "arctang": [872, 873], "2341": 872, "2539": 872, "6256": 872, "6448": 872, "2299": 872, "2487": 872, "5591": [872, 894], "5727": 872, "quadrant": 873, "9041": [873, 929], "0196": [873, 929], "3108": [873, 929], "4423": [873, 929], "9833": 873, "0811": 873, "9743": 873, "4151": 873, "tangent": [874, 884, 885, 1131, 1132, 1469, 1825, 1826], "9385": 874, "2968": 874, "8591": 874, "1871": 874, "7253": 874, "3060": 874, "2899": 874, "1893": 874, "needs_input_grad": [878, 1896], "setup_context": [879, 1897], "save_for_forward": [879, 1897], "grad_input": [880, 887, 889, 902, 1195, 1429, 1605, 1896, 1902], "underneath": 881, "generate_vmap_rul": [881, 1897], "out_dim": [881, 1136, 1859, 1869, 1885, 1897], "grad_tensor": [882, 896, 1869, 1894], "grad_vari": 882, "forward_ad": 883, "dual": [883, 884, 885, 1654, 1897], "make_du": [883, 885], "your_fn": 883, "unpack_du": [883, 884], "grad_aft": 883, "dual_level": [884, 885], "primal": [885, 1127, 1131, 1132, 1135], "x_npy": 886, "once_differenti": [886, 887, 888, 889, 1896], "g1": [887, 889, 1894, 1925], "g2": [887, 889, 1894, 1925], "oppos": [888, 1897], "weren": 888, "grad_out": [888, 1869, 1899, 1951], "gx": 888, "gy": 888, "gz": 888, "simplefunc": 889, "induc": [889, 1528, 1566, 1889, 1944], "outer_jacobian_strategi": 890, "disconnect": [890, 891, 892, 893, 894, 895], "said": [890, 891, 892, 893, 894, 895, 1878, 1905], "cliff": [890, 892, 896], "_debug_only_display_vmap_fallback_warn": [890, 896], "pow_reduc": [890, 891, 894], "2265": 890, "8221": 890, "9456": [890, 911], "2550": 890, "viewbackward": [890, 892], "pow_adder_reduc": [890, 891, 894], "func_output": [891, 893, 894, 895], "1448": 891, "0239": 891, "6456": 891, "4988": 891, "4310": 891, "sumbackward0": [891, 894, 1896], "3030": 891, "vhp": 891, "batched_grad": 892, "exp_reduc": [892, 893, 895], "4917": 892, "4352": 892, "4369": 892, "3799": 892, "exp_add": 892, "8052": 892, "3963": 892, "3090": 893, "6742": 893, "9114": 893, "2106": 893, "sumbackward1": [893, 895], "squeezebackward1": 893, "adder": [893, 895], "2399": 893, "5005": 893, "0689": 894, "2431": 894, "0989": 894, "4456": 894, "8053": [894, 1742], "7817": 895, "2458": 895, "7830": 895, "7782": 895, "4458": 895, "3962": 895, "3042": [895, 1253], "6354": 895, "1288": [895, 1771], "0652": 895, "5483": 895, "5035": 895, "2046": [895, 955, 1896], "1292": 895, "1432": 895, "3059": 895, "3225": 895, "6652": 895, "7753": 895, "0152": 895, "4225": 895, "3340": 895, "only_input": 896, "allow_unus": [896, 1869], "is_grads_batch": 896, "materialize_grad": 896, "require_grad": [896, 1871, 1891], "06": [897, 898, 1236, 1241, 1242, 1253, 1254, 1259, 1383, 1438, 1477, 1480, 1525, 1594, 1666, 1680, 1813, 1869, 1934], "raise_except": [897, 898], "check_sparse_nnz": 897, "nondet_tol": [897, 898], "check_undefined_grad": [897, 898], "check_grad_dtyp": [897, 898], "check_batched_grad": [897, 898], "check_batched_forward_grad": 897, "check_forward_ad": 897, "check_backward_ad": 897, "fast_mod": [897, 898, 1899], "differenc": [897, 1896], "perturb": [897, 898, 1899], "sparsetensor": [897, 1798], "gradgradcheck": [897, 1896], "gen_non_contig_grad_output": 898, "check_fwd_over_rev": 898, "check_rev_over_rev": 898, "noncontigu": [898, 1011, 1934], "inaccuraci": 898, "clonebackward0": 900, "gi": [902, 903, 1902], "removablehandl": [902, 903, 1195, 1429, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1915], "eventlist": [905, 906], "chrome": [905, 1917, 1950, 1954], "group_by_stack_n": [906, 1917], "roof": 906, "functioneventavg": [906, 908], "window_length": [910, 919, 1152, 1153, 1215, 1869], "2n": [910, 1766, 1927], "trim": [910, 919, 1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1152, 1153, 1192], "_length": [910, 919, 1152, 1153, 1192, 1352, 1809], "sim": [911, 1443, 1571, 1704, 1724], "pseudorandom": [911, 1319, 1657, 1701, 1704, 1720, 1722, 1724, 1726, 1814], "1737": 911, "0950": [911, 1791], "3609": 911, "7148": 911, "0289": [911, 1837], "2676": 911, "8937": 911, "7202": 911, "2500": [912, 1086, 1088, 1089, 1099, 1104, 1266, 1481, 1718], "7500": [912, 1089, 1099, 1118, 1148, 1251, 1266, 1481, 1718, 1774], "AND": [913, 1277, 1871, 1891], "OR": [916, 1279, 1871], "xor": [918, 1280, 1871], "blackman": [919, 1776], "arrang": 920, "broadcast_tensor": [922, 1869, 1913], "out_int32": [925, 1747, 1869], "opposit": [925, 1089, 1091, 1813, 1833], "formal": [925, 1747, 1878, 1885], "eg": [925, 1740, 1747, 1955], "tensor_a": [927, 940], "tensor_b": 927, "6580": 928, "0969": 928, "4614": 928, "1034": [928, 1068], "5790": 928, "1497": 928, "compute_mod": [929, 1951], "use_mm_for_euclid_dist_if_necessari": 929, "distanc": [929, 1192, 1231, 1232, 1259, 1389, 1438, 1477, 1478, 1568, 1687, 1809, 1813, 1867], "infti": [929, 1192, 1247, 1345, 1397, 1398, 1460, 1568, 1678, 1928], "use_mm_for_euclid_dist": 929, "donot_use_mm_for_euclid_dist": 929, "minkowski": [929, 1568], "ham": [929, 1152, 1568, 1772], "closest": [929, 1568], "xn": [929, 1568], "4821": [929, 932], "059": 929, "0590": 929, "1763": [929, 1730], "4713": [929, 1730], "6986": [929, 1730], "3702": [929, 1730], "1193": [929, 1285], "0959": 929, "7138": 929, "8322": 929, "2830": [929, 1839], "3791": 929, "6341": 930, "4208": 930, "0900": 930, "5826": 930, "clr": [931, 1687], "3375": 931, "9790": 931, "1119": 931, "6577": 931, "5609": [931, 1519], "5095": 931, "2614": 931, "4038": 931, "3378": [931, 1839], "4982": 931, "2457": [931, 1298], "2561": 931, "4684": 931, "7163": 931, "9647": 931, "8917": [931, 1276], "3213": [931, 1272], "2284": [931, 1048], "8615": 931, "2816": 931, "tu": 932, "mt": [932, 1225, 1232, 1234, 1238, 1239, 1240, 1245, 1254, 1711, 1813, 1869, 1878, 1913, 1931, 1933], "4112": 932, "7486": 932, "4551": 932, "3544": 932, "6724": 932, "5528": 932, "0592": [932, 1902], "9371": 932, "5487": 932, "7023": 932, "03": [932, 1273, 1769, 1770, 1775], "3842e": [932, 1241], "hermitian": [933, 934, 956, 1084, 1085, 1087, 1089, 1090, 1091, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1225, 1226, 1231, 1232, 1234, 1238, 1239, 1240, 1250, 1253, 1259, 1869], "9314": 933, "2251": [933, 968, 1228, 1270], "0889": 933, "4439": 933, "2122": 933, "1412": 933, "6358e": 933, "lh": [934, 1241], "1625": 934, "6097": 934, "8398": 934, "2387": [934, 956], "3771": [934, 1242], "4173": 934, "1626": [934, 968, 1228], "6881e": 934, "tensor_split": [935, 1066, 1158, 1860, 1869, 1913, 1931], "min_valu": [936, 1388], "max_valu": [936, 1388, 1869], "_valu": [936, 1337, 1614, 1798, 1896, 1913, 1927], "7120": 936, "1734": [936, 1169], "0478": [936, 1862], "0922": 936, "3333": [936, 1148, 1157, 1481, 1482, 1827], "horizont": [939, 1158, 1160, 1914, 1916, 1946], "hstack": [939, 1869, 1913, 1927], "with_replac": [940, 1869], "combinations_with_replac": 940, "fullgraph": [941, 1946, 1956], "cache_size_limit": [941, 1946, 1949, 1956], "subgraph": [941, 1663, 1891, 1895, 1912, 1915, 1937, 1943, 1945, 1956], "list_backend": [941, 1938, 1942, 1948], "autotun": [941, 1950], "cudagraph": [941, 1003, 1894, 1938, 1946, 1948, 1950, 1953], "realloc": [941, 1169], "triton": [941, 1897, 1938, 1941, 1943, 1946, 1948, 1956], "_inductor": [941, 1946, 1956], "list_mode_opt": 941, "epilogue_fus": 941, "templat": [941, 1011, 1012, 1914], "max_autotun": 941, "fallback_random": [941, 1946, 1956], "shape_pad": 941, "graph_diagram": 941, "pictur": 941, "list_opt": 941, "_glibcxx_use_cxx11_abi": 942, "exclude_tag": 947, "flip": [953, 1109, 1110, 1263, 1869, 1913, 1914, 1946, 1951], "lazi": [953, 1208, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1600, 1867, 1944], "writeabl": [953, 954], "is_conj": [953, 1735, 1869, 1913, 1946], "geq": [955, 1139, 1227, 1235, 1365, 1415, 1436, 1437, 1447, 1511, 1563, 1616, 1889, 1928], "signbit": [955, 1869, 1913, 1927, 1951], "2557": 955, "0026": 955, "5387": 955, "4740": 955, "9244": 955, "7079": 955, "2778": 955, "0249": [955, 1271], "5719": 955, "0059": 955, "2600": 955, "4475": 955, "9567": [955, 1231, 1812], "5757": 955, "1751": 955, "0742": 955, "2998": 955, "1054": 955, "2373": 955, "3190": [955, 1894], "1128": [955, 1253, 1399], "pearson": 956, "coeffici": [956, 1152, 1666, 1668, 1669, 1670, 1672, 1678, 1682, 1771, 1772, 1773, 1836], "r_": [956, 1829], "ij": [956, 1068, 1275, 1283, 1297, 1432, 1790], "c_": [956, 1357, 1358, 1359, 1360, 1361, 1362, 1399, 1441, 1442], "jj": 956, "cov": [956, 1869, 1913], "2678": [956, 1372], "0908": 956, "3766": 956, "2780": 956, "5812": 956, "1535": [956, 1372], "2350": 956, "3582": 956, "4309": 957, "2706": 957, "8562": 957, "9796": [957, 1241], "1395": 957, "2957": 957, "6553": 957, "5574": 957, "1632": 958, "1835": 958, "6979": 958, "7325": [958, 1058], "0133": 958, "7860": 958, "2536": 958, "2805": 958, "sleef": [958, 1780], "y_": [960, 1078, 1269, 1270, 1272, 1346, 1365, 1395, 1790, 1834, 1891, 1928], "_w": 960, "w_i": [960, 1235], "mu_x": 960, "mu_i": [960, 1672], "w_ia_i": 960, "whichev": [960, 1136, 1528, 1712, 1859, 1894], "w_ix_": 960, "mathbb": [960, 1148, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1245, 1247, 1254, 1256, 1258, 1259, 1365, 1436, 1616], "bessel": [960, 1215, 1775, 1807, 1808, 1854, 1855, 1928], "unbias": [960, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1401, 1468, 1807, 1808, 1854, 1855, 1869, 1951], "corrcoef": [960, 1869, 1913], "6667": [960, 1157, 1481, 1482, 1732, 1766, 1907], "fw": 960, "4282": 960, "0255": [960, 1055], "4144": [960, 1894], "4169": 960, "streamcontext": [966, 1043, 1867], "abstractcontextmanag": 966, "3956": [968, 1228], "1455": [968, 1228, 1908], "6895": [968, 1228], "5849": [968, 1228], "3599": [968, 1228], "7180": [968, 1228], "0521": [968, 1228], "1339": [968, 1228], "0225": [968, 1228, 1241], "0257": [968, 1228], "4725": [968, 1228], "1479": [968, 1228], "7005": [968, 1228], "9757": [968, 1228], "3904": [968, 1228], "3726": [968, 1228], "1836": [968, 1228], "9688": [968, 1228], "7153": [968, 1228, 1928], "2159": [968, 1228], "0844": [968, 1228], "5281": [968, 1228], "6120": [968, 1228], "4490": [968, 1228], "5687": [968, 1228], "9792": [968, 1049, 1228], "8304": [968, 1228], "3037": [968, 1228, 1902], "5650": [968, 1228], "2329": [968, 1228], "9883": [968, 1228], "0551": [968, 1228], "capture_begin": [969, 1894], "capture_error_mod": [969, 1003], "make_graphed_cal": [969, 1894], "graph_pool_handl": [969, 1003], "other_graph_inst": [969, 1003], "cudastreamcapturemod": [969, 1003], "thread_loc": [969, 1003], "cudamalloc": [969, 1003, 1025, 1894, 1958], "unsaf": [969, 1003, 1267, 1618, 1621, 1869, 1894, 1915], "capture_end": [969, 1894], "replai": [969, 1003, 1894, 1910, 1941, 1956], "debug_dump": 969, "debug_path": 969, "enable_debug_mod": 969, "path_to_so_fil": 970, "alloc_fn_nam": 970, "free_fn_nam": 970, "ctype": [970, 1946], "change_current_alloc": [970, 1894], "ssize_t": [970, 1894], "cudastream_t": [970, 972, 1894], "ptr": [970, 1894], "size_t": 970, "oss": 970, "enable_tim": [971, 1307, 1894], "interprocess": 971, "marker": [971, 1307], "elapsed_tim": [971, 1307, 1894], "end_ev": [971, 1307, 1894], "elaps": [971, 1307, 1881], "from_ipc_handl": 971, "reconstruct": [971, 1285, 1345, 1346, 1899, 1907, 1915], "ipc": [971, 1007], "ipc_handl": 971, "cudaeventsynchron": 971, "cudastreamwaitev": [971, 972, 974], "stream_ptr": 972, "record_ev": [972, 974], "cudastreamsynchron": [972, 974], "wait_ev": [972, 974], "interoper": 976, "caching_allocator_delet": 976, "mem_ptr": 977, "caching_allocator_alloc": 977, "peer_devic": 978, "_cudaalloc": 979, "clock": 980, "sm": 980, "hertz": 980, "smi": [980, 993, 1021, 1027, 1031, 1045, 1046, 1894, 1898, 1900], "buffer_s": 982, "10485760": 982, "chunk_siz": [985, 1130, 1136, 1859], "cublashandle_t": 986, "unoccupi": [993, 1306], "pytorch_cuda_alloc_conf": [994, 1894], "cudamallocasync": [994, 1025, 1894], "_cudadeviceproperti": 998, "gencod": 999, "cuda_graph": 1003, "ordinari": [1005, 1609, 1851, 1890], "code_str": [1011, 1012], "temp": 1011, "typenam": [1011, 1012], "my_kernel": [1011, 1012], "jitted_fn": [1011, 1012], "create_jit_fn": [1011, 1012], "util_fn": 1011, "gelu": [1011, 1458, 1472, 1474, 1476, 1581, 1869, 1886, 1913, 1951], "my_gelu": 1011, "my_lib": [1011, 1875, 1908], "impl": [1011, 1201, 1875], "num_output": 1012, "sample_arg": 1014, "num_warmup_it": 1014, "allow_unused_input": 1014, "datadistributedparallel": 1014, "amp": [1014, 1851, 1867, 1890, 1950, 1953, 1956], "autocast": [1014, 1435, 1867, 1894, 1896, 1956], "insuffici": [1015, 1944, 1956], "manual_seed_al": [1015, 1851], "occupi": [1017, 1021, 1032, 1304, 1417, 1546, 1894, 1900, 1959], "reset_peak_memory_stat": [1017, 1019, 1032, 1033], "max_memory_reserv": [1018, 1894, 1900], "cudamemgetinfo": 1020, "memory_reserv": [1022, 1894, 1900], "snapshot": [1024, 1867, 1871, 1894, 1900], "large_pool": 1025, "small_pool": 1025, "allocated_byt": 1025, "reserved_byt": 1025, "active_byt": 1025, "inactive_split": 1025, "inactive_split_byt": 1025, "octob": 1025, "1mb": [1025, 1958], "num_alloc_retri": 1025, "num_oom": 1025, "assist": [1025, 1895], "max_split_s": 1025, "oversize_alloc": 1025, "oversize_seg": 1025, "requested_byt": 1025, "abbrevi": 1026, "percent": [1027, 1046, 1950], "instantan": [1028, 1917], "ascii": [1028, 1030, 1267, 1871, 1917], "sensor": [1031, 1045], "mw": 1031, "milliwatt": 1031, "fermi": 1031, "max_memory_alloc": [1032, 1894, 1900], "max_memory_cach": 1033, "memory_stat": [1034, 1894, 1900], "seed_al": 1035, "environment": [1037, 1950], "total_memori": [1038, 1314], "debug_mod": [1042, 1754], "centigrad": 1045, "x_2": [1047, 1048, 1049, 1050, 1263, 1350, 1363, 1364, 1499, 1510], "x_3": [1047, 1048, 1049, 1050, 1263], "3449": 1047, "5447": 1047, "0685": 1047, "5104": [1047, 1894], "1706": 1047, "2259": 1047, "4696": 1047, "3284": 1047, "9946": 1047, "8209": [1047, 1050], "6628": 1048, "0975": 1048, "2680": [1048, 1893], "3298": [1048, 1055], "4220": 1048, "3885": 1048, "1762": 1048, "9165": 1048, "6684": [1048, 1172], "6001": 1049, "2069": 1049, "1919": 1049, "6727": [1049, 1062], "0062": 1049, "4126": 1049, "2129": 1049, "4206": 1049, "1968": [1049, 1928], "1241": 1049, "0238": 1049, "0233": [1049, 1719], "0157": 1049, "0158": [1049, 1813], "0065": 1049, "0014": [1049, 1928], "0006": 1049, "8286": 1050, "4890": 1050, "5155": 1050, "8443": 1050, "1865": 1050, "1752": [1050, 1058], "0595": 1050, "1850": 1050, "1571": [1050, 1902, 1907], "4243": 1050, "3175": 1050, "8020": [1050, 1709], "0423": 1050, "2289": 1050, "0537": 1050, "0058": 1050, "9780": 1050, "trapezoid": [1051, 1835, 1869, 1913], "360": 1052, "2832": 1052, "diagflat": [1055, 1869, 1913], "5950": 1055, "0872": 1055, "4264": 1055, "1064": [1055, 1902], "8795": 1055, "2429": 1055, "1374": 1055, "1029": 1055, "6482": 1055, "6300": 1055, "5410": 1056, "2934": 1056, "1788": [1056, 1928], "5684": 1056, "0845": [1056, 1780, 1902], "3986": 1056, "2956": [1057, 1228], "9068": 1057, "1695": 1057, "2094": [1057, 1894], "3018": 1057, "1516": 1057, "9342": 1057, "0854": 1058, "1431": 1058, "8536": 1058, "0905": 1058, "0360": [1058, 1318], "6927": 1058, "3735": 1058, "4945": 1058, "2631": [1058, 1317, 1894], "3755": 1058, "5977": [1058, 1896], "8172": 1058, "1065": [1058, 1902], "0401": 1058, "2235": [1058, 1812], "7938": 1058, "3081": 1058, "6166": 1058, "2335": 1058, "0500": 1058, "7336": 1058, "3836": 1058, "1015": 1058, "emb": [1059, 1750, 1781], "5393": 1062, "8675": 1062, "5916": 1062, "6321": 1062, "0967": 1062, "0511": 1062, "6295": 1062, "8360": 1062, "6973": 1062, "6537": 1062, "dividend": [1063, 1113, 1116, 1731, 1841], "true_divid": [1063, 1869, 1913], "3810": [1063, 1156], "2774": 1063, "2972": 1063, "3719": 1063, "4637": [1063, 1896], "7620": 1063, "5548": 1063, "5944": 1063, "7438": 1063, "9274": 1063, "3711": 1063, "9353": 1063, "4605": 1063, "2917": 1063, "1815": [1063, 1276], "0111": [1063, 1769], "9805": 1063, "5923": 1063, "1062": 1063, "4581": [1063, 1235], "7759": 1063, "2344": 1063, "1830": 1063, "0313": 1063, "1908": 1063, "4757": 1063, "8032": 1063, "2930": 1063, "8113": 1063, "2308": 1063, "4620": [1063, 1862], "6051": 1063, "5676": 1063, "2639": 1063, "2260": 1063, "4509": [1063, 1249], "2086": 1063, "1322": 1063, "9764": 1063, "9564": 1063, "3484": 1063, "2278": 1063, "1068": [1063, 1169], "4678": 1063, "3938": [1063, 1822], "depthwis": [1066, 1067, 1357, 1358, 1359], "atleast_3d": [1067, 1869, 1913], "notat": [1068, 1395, 1760, 1872, 1902, 1933], "einstein": 1068, "summat": [1068, 1192, 1275, 1283, 1927], "subscript": [1068, 1872, 1904], "jk": [1068, 1950], "ik": [1068, 1268, 1790], "za": 1068, "alphabet": [1068, 1512, 1923], "arrow": [1068, 1925], "ki": 1068, "ellipsi": [1068, 1871, 1872, 1885], "fourth": 1068, "whitespac": [1068, 1872], "opt_einsum": [1068, 1867], "_the_": 1068, "disclaim": 1068, "sublist": [1068, 1956], "52": 1068, "op1": [1068, 1871], "sublist1": 1068, "op2": [1068, 1871], "sublist2": 1068, "subslist_out": 1068, "2104": 1068, "7952": 1068, "2433": 1068, "4545": 1068, "1156": 1068, "2897": [1068, 1902], "3918": 1068, "4963": 1068, "3744": 1068, "9381": 1068, "2685": 1068, "6070": 1068, "7208": 1068, "8058": 1068, "4419": 1068, "0936": 1068, "1713": 1068, "4291": 1068, "5802": 1068, "7350": [1068, 1928], "5704": 1068, "4290": 1068, "9323": 1068, "4480": 1068, "bij": 1068, "bjk": 1068, "bik": 1068, "0564": 1068, "5904": 1068, "2023": 1068, "1271": 1068, "6706": [1068, 1712], "8097": 1068, "8025": 1068, "1183": 1068, "2239": [1068, 1255], "3107": 1068, "5756": 1068, "2354": 1068, "4558": 1068, "3460": 1068, "5087": 1068, "8530": [1068, 1354, 1484], "8153": 1068, "8787": 1068, "3839": [1068, 1858], "2112": [1068, 1837], "3728": 1068, "1131": [1068, 1709], "0921": 1068, "8305": 1068, "ji": 1068, "anm": 1068, "bm": 1068, "ba": 1068, "3430": [1068, 1276], "2405": 1068, "4494": 1068, "3311": 1068, "5201": 1068, "0356": 1068, "4064e": 1069, "8000e": 1069, "3493e": 1069, "5751e": 1069, "1428e": 1069, "5955e": 1069, "9683e": 1071, "1239e": 1071, "0705e": 1071, "orig_func": [1072, 1654], "set_grad_en": [1072, 1869, 1913, 1935], "doubler": [1072, 1170, 1654], "tripler": [1072, 1654], "elsewher": [1073, 1081, 1139, 1151, 1185, 1187, 1188, 1191, 1220, 1284, 1330, 1791, 1866], "_max": [1082, 1083, 1918], "_min": [1082, 1083, 1918], "nearbi": [1082, 1083], "_int": [1082, 1083], "_point": [1082, 1083], "2525": 1082, "0466": 1082, "3491": [1082, 1249], "2168": [1082, 1829], "5906": [1082, 1928], "6258": 1082, "6444": 1082, "0542": 1082, "0475": [1082, 1928], "0486": 1082, "3405": 1082, "6134": [1082, 1298], "6323": 1082, "0552": 1083, "9730": 1083, "3973": 1083, "0780": 1083, "4000": [1083, 1086, 1095, 1104, 1481, 1715, 1766], "fourier": [1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1192, 1776, 1809, 1867], "rfft": [1084, 1089, 1099, 1103, 1104, 1105], "chalf": [1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1099, 1100, 1101, 1869, 1913, 1933], "sm53": [1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105], "ortho": [1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1268], "orthonorm": [1084, 1085, 1087, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1259, 1616, 1813], "ifft": [1084, 1088, 1089, 1093, 1094, 1096, 1097, 1098, 1099, 1100, 1101], "fftn": [1085, 1088, 1094, 1097, 1105], "rfft2": [1085, 1100], "ifft2": [1085, 1097], "two_fft": [1085, 1087, 1097, 1103, 1105], "check_strid": [1085, 1087, 1088, 1093, 1094, 1099, 1100, 1101, 1103, 1105, 1934], "nyquist": [1086, 1088, 1096, 1098, 1102, 1103, 1104, 1105], "i_1": [1087, 1105, 1216], "i_n": [1087, 1105, 1136, 1216, 1829, 1859], "rfftn": [1087, 1091, 1097, 1101, 1103], "ifftn": [1087, 1093, 1098], "reorder": [1088, 1251], "rearrang": [1088, 1095, 1353, 1441, 1442, 1569, 1570, 1885], "fftfreq": [1088, 1095, 1104], "9000": [1088, 1827], "8000": [1088, 1324, 1481, 1712, 1766], "uncent": 1088, "ifftshift": 1088, "x_center": 1088, "x_uncent": 1088, "fft_uncent": 1088, "fft_center": 1088, "x_centered_2": 1088, "ihfft": [1089, 1097, 1098], "irfft": [1089, 1101, 1102], "symmetri": [1089, 1091, 1809], "transformed_dim_s": [1089, 1099], "0000j": [1089, 1096, 1099, 1225, 1226, 1231, 1232, 1234, 1705, 1763], "1250": [1089, 1317], "1720j": 1089, "0406j": 1089, "2809": 1089, "6250": [1089, 1099, 1118, 1481], "9691": 1089, "hfftn": [1090, 1098], "last_dim_s": [1090, 1091, 1100, 1101, 1951], "ihfft2": 1090, "roundtrip": [1090, 1091, 1099, 1100, 1101], "ihfftn": [1091, 1097], "irfftn": [1091, 1100, 1105], "fft2": [1093, 1103], "two_ifft": [1093, 1094, 1098], "fftshift": 1095, "hfft": 1096, "6882j": 1096, "1625j": 1096, "hfft2": 1097, "8602j": 1099, "2031j": 1099, "1562": 1099, "3511": 1099, "7812": 1099, "2114": 1099, "irfft2": 1103, "wider": [1111, 1868, 1871, 1914, 1927], "49": [1111, 1251, 1893], "2500e": 1111, "1000e": 1111, "7656e": 1111, "lfloor": [1112, 1117, 1337, 1342, 1343, 1344, 1357, 1358, 1359, 1376, 1397, 1398, 1422, 1423, 1424, 1480, 1481, 1482, 1483, 1497, 1566, 1727, 1809], "rfloor": [1112, 1117, 1337, 1342, 1343, 1344, 1357, 1358, 1359, 1376, 1397, 1398, 1422, 1423, 1424, 1480, 1481, 1482, 1483, 1497, 1566, 1727, 1809], "8166": 1112, "5308": 1112, "2530": 1112, "2091": 1112, "7000": [1114, 1373, 1765], "3000": [1115, 1372, 1765, 1894], "entrywis": [1116, 1731], "modulu": [1116, 1255, 1731], "operatornam": [1117, 1231, 1232, 1233, 1234, 1251, 1259, 1345, 1346, 1352, 1389, 1390, 1396, 1420, 1460, 1478, 1765], "8750": [1118, 1481], "char": [1121, 1662, 1884, 1929, 1946], "parameter_and_buffer_dict": 1124, "tie_weight": [1124, 1651], "submodule_nam": [1124, 1651], "parameter_nam": [1124, 1651], "ti": [1124, 1651, 1740, 1945], "ty": [1124, 1651], "foo_ti": [1124, 1651], "new_a": [1124, 1651], "mutlipl": 1124, "grad_weight": [1124, 1896], "detached_param": 1124, "parameters_and_buffer_dict": 1124, "reparamater": [1124, 1651], "paramat": 1124, "intermediate_upd": 1125, "mutations_and_view": 1125, "intermeid": 1125, "proxy_tensor": [1125, 1945, 1956], "make_fx": [1125, 1944, 1956], "inpt": 1125, "f_trace": 1125, "f_no_mutations_trac": 1125, "f_no_mutations_and_views_trac": 1125, "a_1": [1125, 1216], "view_1": 1125, "view_copi": [1125, 1869, 1913, 1935], "view_copy_1": 1125, "as_strid": [1125, 1869, 1913, 1931, 1951], "writ": 1125, "native_funct": [1125, 1896, 1951], "yaml": [1125, 1896, 1951], "aux": [1126, 1127, 1129, 1130, 1131, 1135], "my_loss_func": 1126, "y_pred": [1126, 1894], "loss_per_sampl": 1126, "y_true": 1126, "autodiff": [1129, 1130, 1131, 1254], "jacobian_f": [1129, 1130], "f_x": [1129, 1130], "jacboian": [1129, 1130], "expectedx": [1129, 1130], "expectedi": [1129, 1130], "_preallocate_and_copi": 1130, "stand": [1131, 1135, 1870, 1915, 1925], "jvp_out": 1131, "jvp_fn": 1132, "requr": 1132, "optimiz": [1134, 1868], "l1": [1134, 1389, 1390, 1460, 1537, 1582, 1626, 1635, 1902, 1907], "l2": [1134, 1390, 1420, 1460, 1665, 1666, 1667, 1668, 1670, 1672, 1678, 1679, 1681, 1890], "vjpfunc": 1135, "unsuccessfulli": [1136, 1859], "rummag": [1136, 1859], "batched_dot": [1136, 1859], "jacobian_row": [1136, 1859], "get_vjp": [1136, 1859], "n1": [1136, 1733, 1859], "n0": [1136, 1859], "batched_pow": [1136, 1859], "autobatch": [1136, 1859], "sparse_grad": [1137, 1869, 1951], "tau": [1140, 1235, 1530, 1667, 1681, 1698, 1699, 1769, 1869], "elementari": [1140, 1891, 1899], "reflector": [1140, 1616, 1699], "household": [1140, 1235, 1616, 1699], "householder_product": [1140, 1616, 1698], "gel": [1140, 1241], "set_default_dtyp": 1142, "set_deterministic_debug_mod": [1143, 1848], "set_float32_matmul_precis": 1144, "edge_ord": [1148, 1869], "rightarrow": 1148, "closer": [1148, 1478, 1712, 1896, 1902, 1918, 1948, 1949, 1950], "interior": 1148, "theorem": 1148, "h_l": 1148, "h_r": 1148, "neighbor": [1148, 1192, 1481, 1483, 1809], "xi_1": 1148, "xi_2": 1148, "approx": [1148, 1814, 1899], "80": [1148, 1251, 1691, 1760, 1894, 1914], "halv": 1148, "coord": 1148, "54": [1152, 1391, 1772], "46": [1152, 1771], "hann_window": [1152, 1809, 1869, 1873, 1913], "hann": [1153, 1772], "hist": [1156, 1157, 1869], "bin_edg": [1156, 1157, 1869], "9524": 1156, "leftmost": [1157, 1886], "leg": 1161, "triangl": [1161, 1932], "hypotenus": 1161, "4031": 1161, "gammainc": [1163, 1928], "gammaincc": [1164, 1928], "index_reduce_": [1168, 1869], "1427": 1169, "0231": 1169, "5414": 1169, "0009": 1169, "4664": [1169, 1829], "2647": 1169, "1228": 1169, "6571": 1169, "7230": 1169, "6004": 1169, "inferencemod": [1170, 1891], "bump": 1170, "_version": [1170, 1913], "multidimension": [1172, 1265, 1392], "8173": 1172, "0874": 1172, "1784": 1172, "3279": 1172, "7894": 1172, "4682": 1172, "7159": 1172, "1506": 1172, "4034": 1172, "3657": 1172, "0387": 1172, "9892": 1172, "1774": 1172, "3261": 1172, "3917": 1172, "4537": [1172, 1600], "7493": 1172, "1724": 1172, "2291": 1172, "5749": 1172, "2267": 1172, "7920": 1172, "3607": 1172, "3701": 1172, "3666": 1172, "5850": [1172, 1226], "7242": 1172, "9837": 1172, "1560": 1172, "2907": 1172, "6785": 1172, "5671": [1172, 1227], "5452": 1172, "6912": 1172, "5509": 1172, "1782": 1172, "9843": 1172, "7366": 1172, "5672": [1172, 1657], "5115": 1172, "4864": 1172, "2476": 1172, "4337": 1172, "6347": 1172, "1748": 1172, "3567": [1172, 1226], "6558": 1172, "2469": [1172, 1902], "5787": [1172, 1276], "typecheck": [1182, 1913], "mypi": [1182, 1870, 1871], "warn_alwai": 1183, "set_warn_alwai": 1183, "nonfinit": 1184, "test_el": [1186, 1869], "assume_uniqu": [1186, 1869], "0j": [1191, 1856], "nola": 1192, "envelop": 1192, "hop": [1192, 1809], "shorter": [1192, 1912, 1923], "griffin": 1192, "ieee": [1192, 1383, 1776, 1905], "tran": 1192, "assp": 1192, "vol": [1192, 1383, 1776], "pp": [1192, 1383, 1776], "236": 1192, "apr": 1192, "1984": 1192, "slide": [1192, 1342, 1343, 1344, 1376, 1422, 1423, 1424, 1480, 1522, 1552, 1553, 1554, 1596, 1716, 1717, 1809], "fft_size": 1192, "scriptmodul": [1193, 1194, 1199, 1203, 1205, 1206, 1207, 1211, 1212, 1664, 1868, 1870, 1879, 1912], "attributemodul": 1193, "names_ag": 1193, "get_debug_st": 1194, "graphexecutorst": 1194, "_extra_fil": [1194, 1195, 1203, 1206, 1901], "save_to_buff": 1194, "add_modul": [1195, 1429], "init_weight": [1195, 1429, 1902], "buf": [1195, 1429], "20l": [1195, 1429], "1l": [1195, 1429], "5l": [1195, 1429], "pretti": [1195, 1663, 1760, 1868, 1942, 1945, 1949], "syntax": [1195, 1868, 1871, 1915, 1947], "code_with_const": 1195, "constmap": 1195, "extra_repr": [1195, 1429, 1896], "get_buff": [1195, 1429], "attributeerror": [1195, 1429, 1896, 1918], "get_extra_st": [1195, 1429], "set_extra_st": [1195, 1429], "get_paramet": [1195, 1429], "net_b": [1195, 1429], "net_c": [1195, 1429], "transit": [1195, 1297, 1429, 1809, 1867, 1868, 1938, 1949], "inlined_graph": 1195, "ipu": [1195, 1429, 1907], "missing_kei": [1195, 1429], "unexpected_kei": [1195, 1429], "remove_dupl": [1195, 1429], "named_children": [1195, 1429, 1902], "conv4": [1195, 1429], "conv5": [1195, 1429], "memo": [1195, 1429, 1945], "register_backward_hook": [1195, 1429, 1605], "register_full_backward_hook": [1195, 1429, 1902], "register_forward_hook": [1195, 1429, 1603, 1902], "with_kwarg": [1195, 1429], "always_cal": [1195, 1429, 1603], "fire": [1195, 1429, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682, 1895, 1901, 1952], "register_module_forward_hook": [1195, 1429, 1902], "register_forward_pre_hook": [1195, 1366, 1429, 1604, 1902], "forward_pr": [1195, 1429], "register_module_forward_pre_hook": [1195, 1429, 1902], "register_module_full_backward_hook": [1195, 1429, 1601, 1891, 1902], "register_full_backward_pre_hook": [1195, 1429, 1902], "register_module_full_backward_pre_hook": [1195, 1429, 1902], "register_load_state_dict_post_hook": [1195, 1429, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "incompatible_kei": [1195, 1429], "register_modul": [1195, 1429, 1607], "register_paramet": [1195, 1429, 1608, 1896, 1902], "register_state_dict_pre_hook": [1195, 1429, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "keep_var": [1195, 1429], "gan": [1195, 1429, 1617, 1650], "witch": 1195, "share_memori": [1195, 1429, 1904], "share_memory_": [1195, 1429, 1883, 1929], "shallow": [1195, 1366, 1429, 1477, 1478, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "4d": [1195, 1348, 1376, 1393, 1429, 1481, 1522, 1539, 1566, 1597, 1715], "1913": [1195, 1429], "3420": [1195, 1429], "5113": [1195, 1429, 1829], "2325": [1195, 1228, 1429], "gpu1": [1195, 1429], "1914": [1195, 1429], "5112": [1195, 1429, 1894], "3741": [1195, 1429], "2382": [1195, 1318, 1429], "5593": [1195, 1429], "4443": [1195, 1429], "6122": [1195, 1429], "1150": [1195, 1429], "to_empti": [1195, 1429], "dst_type": [1195, 1429], "set_to_non": [1195, 1429, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1682, 1894], "the_typ": 1196, "the_valu": 1196, "script_bar": 1198, "addmod": 1198, "preserved_attr": 1199, "optimize_numer": 1199, "optimize_for_infer": [1199, 1942], "run_frozen_optim": 1199, "scripted_modul": [1199, 1207, 1907], "frozen_modul": 1199, "modified_tensor": 1199, "mymodule2": 1199, "dump_alias_db": 1199, "pdb": [1200, 1207, 1213, 1868, 1870], "training_method": 1200, "interfacetyp": 1201, "impl1": 1201, "impl2": 1201, "user_fn": 1201, "user_fn_jit": 1201, "target_typ": 1202, "testcod": [1202, 1870], "key1": 1202, "val1": 1202, "key2": 1202, "val2": 1202, "_restore_shap": 1203, "scriptfunct": [1203, 1207, 1208, 1211, 1912], "readlin": [1203, 1267, 1915], "retrac": 1203, "other_method": 1205, "lesser": [1205, 1891, 1893], "extent": [1205, 1893, 1927], "frozen_mod": 1205, "offlin": 1206, "_frames_up": 1207, "_rcb": 1207, "scriptdict": 1207, "scriptlist": 1207, "test_sum": 1207, "scripted_fn": [1207, 1868], "conv2": [1207, 1429, 1457, 1868, 1918], "some_entry_point": 1207, "python_only_fn": 1207, "testnnmodul": 1207, "pdt_model": 1207, "scripted_model": [1207, 1915], "un": [1209, 1352, 1918], "unfus": 1209, "nb": 1209, "check_trac": [1211, 1212], "check_input": [1211, 1212, 1868], "check_toler": [1211, 1212], "_force_outplac": [1211, 1212], "_module_class": [1211, 1212], "_compilation_unit": [1211, 1212], "compilationunit": [1211, 1212], "example_kwarg_input": 1211, "_store_input": [1211, 1212], "trace_modul": [1211, 1868, 1871], "untrack": 1211, "checker": [1211, 1212, 1871, 1912], "diverg": [1211, 1212, 1395, 1540, 1867, 1871], "traced_foo": [1211, 1868], "example_weight": [1211, 1212], "example_forward_input": [1211, 1212], "example_inputs_is_kwarg": 1212, "method2": 1212, "example_method2_input": 1212, "weighted_kernel_sum": 1212, "use_memory_effici": 1213, "memory_effici": 1213, "scriptabl": 1213, "kaiser": [1215, 1472, 1474, 1476], "i_0": [1215, 1216, 1775, 1829, 1928], "zeroth": [1215, 1775, 1928], "out_i": 1215, "kroneck": 1216, "a_0": 1216, "a_n": 1216, "b_0": 1216, "b_1": 1216, "b_n": 1216, "k_0": [1216, 1829], "k_1": 1216, "k_n": 1216, "j_0": 1216, "j_1": 1216, "j_n": 1216, "k_t": 1216, "i_t": [1216, 1399, 1680], "b_t": 1216, "j_t": 1216, "bmatrix": 1216, "a_": [1216, 1287, 1417, 1829], "cdot": [1216, 1241, 1253, 1345, 1346, 1364, 1365, 1387, 1395, 1432, 1433, 1434, 1435, 1436, 1472, 1510, 1533, 1705, 1809, 1928, 1934], "vdot": [1216, 1263, 1264, 1869, 1913], "ddot": [1216, 1263], "kth": 1217, "full_lik": [1221, 1869, 1873, 1913], "logarithm": [1224, 1229, 1255, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1282, 1352, 1512, 1547, 1789, 1928], "gamma": [1224, 1347, 1348, 1349, 1384, 1392, 1393, 1394, 1401, 1468, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1681, 1683, 1687, 1688, 1691, 1696, 1697, 1715, 1867, 1869, 1912, 1913, 1914, 1928], "5724": [1224, 1928], "1208": [1224, 1928], "mathrlap": [1225, 1231, 1232, 1233, 1234, 1242, 1245, 1254, 1256, 1258, 1259, 1616], "qquad": [1225, 1227, 1231, 1232, 1233, 1234, 1235, 1242, 1245, 1254, 1256, 1258, 1259, 1616], "eigenvalu": [1225, 1231, 1232, 1233, 1234, 1247, 1250, 1253, 1258, 1259, 1268, 1701, 1869], "resp": [1225, 1232, 1234, 1258, 1259, 1276], "5266": 1225, "9586": 1225, "0626j": 1225, "4160": 1225, "5895": 1225, "2322": 1225, "2976j": 1225, "4928": [1225, 1829], "4692e": 1225, "8747e": 1225, "check_error": [1226, 1237, 1239, 1244, 1257, 1869], "opportun": [1226, 1868, 1924, 1945, 1946], "performantli": 1226, "3792": 1226, "9831j": 1226, "8757": 1226, "5425": 1226, "6374j": 1226, "kappa": 1227, "_p": [1227, 1438], "frobeniu": [1227, 1241, 1248, 1252, 1656], "nuc": [1227, 1248, 1252, 1265, 1627, 1636, 1656], "nuclear": [1227, 1248, 1252, 1656], "sigma_1": [1227, 1241, 1250, 1253], "sigma_n": 1227, "kappa_2": 1227, "kappa_": 1227, "4142": [1227, 1252, 1656, 1705], "1623": [1227, 1248], "2426": [1227, 1252, 1656], "7071": [1227, 1768], "5917": 1227, "9941": 1228, "5132": 1228, "5681": 1228, "4653": 1228, "4507": 1228, "4119": 1228, "6163": 1228, "1073": 1228, "3957": 1228, "9666": [1228, 1519], "0840": 1228, "3357": 1228, "2139": 1228, "slogdet": [1229, 1276, 1869, 1913], "0934": 1229, "1990": [1229, 1276], "4099": [1229, 1276], "7386": [1229, 1276], "diagonaliz": [1231, 1233], "eigenvector": [1231, 1232, 1268, 1869], "neq": [1231, 1232, 1235, 1259, 1330, 1432, 1434, 1666, 1667, 1668, 1670, 1672, 1678, 1679, 1681, 1685, 1813], "phi": [1231, 1232, 1259, 1379, 1526, 1813], "shall": [1231, 1232, 1259, 1618, 1622], "lambda_i": [1231, 1232, 1247], "lambda_j": [1231, 1232], "eigval": [1231, 1869], "9828": [1231, 1837, 1902], "3889j": 1231, "4617": 1231, "3010j": 1231, "1662": 1231, "7435j": 1231, "6139": 1231, "0562j": 1231, "1226": [1231, 1233], "5738j": [1231, 1233], "7537": [1231, 1233], "1286j": [1231, 1233], "9218": 1231, "1882": 1231, "2220j": 1231, "0270": 1231, "3867j": 1231, "7119e": 1231, "2841e": 1231, "uplo": [1232, 1234, 1869], "unitari": [1232, 1235, 1254, 1259, 1616, 1699], "ill": [1232, 1493, 1905], "eigvalsh": [1232, 1250], "9228": [1232, 1234], "2029": [1232, 1234], "0862j": [1232, 1234], "3464": [1232, 1234], "3277": [1232, 1234], "9415": [1232, 1234], "0846": 1232, "9964": 1232, "9170": 1232, "3898j": 1232, "0331j": 1232, "1062e": 1232, "5423e": 1232, "polynomi": [1233, 1234, 1694, 1946], "_n": [1233, 1234, 1236, 1616, 1896], "4576e": [1233, 1260], "5797": 1234, "4629": 1234, "1605": 1234, "3780": 1234, "1113": [1234, 1902], "7381": 1234, "h_1h_2": 1235, "h_k": 1235, "h_i": [1235, 1463], "_m": [1235, 1616], "tau_i": 1235, "8034": 1235, "4184j": 1235, "2588": 1235, "0174j": 1235, "6853": 1235, "7953j": 1235, "0790": 1235, "5620j": 1235, "6989j": 1235, "5360": 1235, "1193j": 1235, "3877": 1235, "6691j": 1235, "3512": 1235, "3024j": 1235, "4766": 1235, "5783j": 1235, "0361": [1235, 1902], "6587j": 1235, "6396": [1235, 1902], "1612j": 1235, "3693": 1235, "4481j": 1235, "aa": 1236, "pinv": [1236, 1241, 1703], "moor": [1236, 1253], "penros": [1236, 1253], "ainv": [1236, 1237, 1257, 1261], "1921e": 1236, "9073e": [1236, 1480], "5107e": 1236, "ldl": [1238, 1240], "indefinit": 1238, "ld": [1238, 1239, 1240, 1869], "sytrf": [1238, 1239], "ldl_solv": 1238, "ldl_factor_ex": [1238, 1240], "2079": [1238, 1239, 1928], "2414": [1238, 1239], "9428": [1238, 1239], "4554": [1238, 1239], "3264": [1238, 1239], "3823": [1238, 1239], "5884": [1238, 1239], "9595": [1238, 1239, 1768], "2695": [1238, 1239], "8513": [1238, 1239], "1633": [1238, 1239], "ldl_factor": 1239, "rcond": [1241, 1253, 1703, 1869], "_f": 1241, "gelsi": 1241, "gelsd": 1241, "gelss": 1241, "mind": [1241, 1259, 1372, 1891, 1897, 1899, 1918, 1946, 1949, 1954], "tridiagon": 1241, "sigma_i": [1241, 1259, 1813], "residu": [1241, 1268, 1869, 1902], "singular_valu": [1241, 1869], "rh": [1241, 1286], "0838": [1241, 1902], "2275": [1241, 1317], "3844": 1241, "5499": 1241, "1175": 1241, "9102": 1241, "0870": 1241, "6772": 1241, "7758": 1241, "5109": 1241, "4382": 1241, "3769": 1241, "1818": 1241, "3450": 1241, "0806": [1241, 1902], "3967": 1241, "3994": 1241, "1521": 1241, "1473": 1241, "9194": 1241, "0458": 1241, "6705": [1241, 1300], "1802": 1241, "4086": 1241, "5152e": 1241, "almost": [1242, 1243, 1908, 1945], "5007": 1242, "9755": 1242, "0489": 1242, "9644": [1242, 1295], "9605e": 1242, "0376e": 1242, "lu_factor_ex": [1243, 1285], "lu_unpack": [1243, 1285, 1869, 1913], "b1": 1243, "b2": [1243, 1894, 1900], "a_factor": 1243, "getrf": [1244, 1257], "adjoint": [1245, 1869, 1913, 1931, 1933], "_exp": 1247, "7183": [1247, 1902], "3891": 1247, "8660": 1247, "ord": [1248, 1252, 1265, 1656, 1869, 1871, 1913], "la": [1248, 1252, 1265, 1902], "2829": 1248, "2627": 1248, "0756": 1249, "4980": 1249, "6617": 1249, "4994": 1249, "9980": 1249, "2731": 1249, "8001": 1249, "2640": 1249, "4571": 1249, "5511": 1249, "0163": [1249, 1295], "5292": 1249, "4899": 1249, "0822": 1249, "2773": [1249, 1886], "varepsilon": [1250, 1253, 1477], "tol": [1250, 1268, 1869], "fewest": 1251, "nd": [1251, 1905], "bc": [1251, 1914], "75000": 1251, "26": [1251, 1686, 1943, 1956], "148": 1251, "vector_norm": [1252, 1656], "matrix_norm": [1252, 1265, 1617, 1656], "7460": [1252, 1656], "3485": 1252, "8570e": 1252, "8480": 1252, "2361": [1252, 1656, 1657], "7417": [1252, 1656], "computation": [1253, 1899], "5495": [1253, 1317], "0979": 1253, "4092": 1253, "4132": [1253, 1774], "1143": 1253, "3662": 1253, "6374": 1253, "9294": 1253, "3269": [1253, 1902], "5745": [1253, 1807, 1808, 1854, 1855], "0382": [1253, 1318], "5922": 1253, "6759": 1253, "0600": 1253, "1933": 1253, "2090": 1253, "0903": 1253, "0817": 1253, "4752": [1253, 1812], "7124": 1253, "1631": 1253, "2272": 1253, "1356": 1253, "3933": 1253, "5023": 1253, "0308": 1253, "1725": 1253, "5216": 1253, "apinv": 1253, "5633e": 1253, "0830e": 1253, "wide": [1254, 1259, 1616, 1770, 1893, 1896, 1902, 1914, 1946], "51": [1254, 1427, 1711], "167": [1254, 1711], "68": [1254, 1711, 1868, 1870], "8571": [1254, 1711], "3943": [1254, 1711], "3314": [1254, 1711], "4286": [1254, 1711], "9029": [1254, 1711], "0343": [1254, 1711], "2857": [1254, 1711], "1714": [1254, 1711, 1902], "9429": [1254, 1711], "175": [1254, 1711], "q2": 1254, "r2": [1254, 1468], "6099e": 1254, "2158e": 1254, "logabsdet": [1255, 1869], "0032": 1255, "1219": [1255, 1730], "6690": 1255, "1161": 1255, "4053": 1255, "6218": [1255, 1826], "9273": 1255, "0082": 1255, "7576": 1255, "logdet": [1255, 1869, 1913], "linalg_slogdet": [1255, 1869, 1913], "2776": 1255, "solve_triangular": [1256, 1836], "expand_a": [1256, 1869, 1896, 1913, 1931], "rectangular": [1258, 1259, 1287, 1809, 1889, 1910], "triu_": [1258, 1869], "tril_": [1258, 1869], "full_matric": [1259, 1260, 1621, 1813, 1869, 1951], "vh": [1259, 1621, 1813, 1869, 1951], "gesvdj": [1259, 1260, 1813], "jacobi": 1259, "gesvda": [1259, 1260], "gesvd": [1259, 1260, 1813], "u_k": 1259, "v_k": 1259, "sigma_j": [1259, 1813], "eigendecomposit": 1259, "0486e": 1259, "0957e": 1259, "5139": 1260, "1087": 1260, "1066": 1260, "ind": [1261, 1262, 1869, 1897], "tensorsolv": 1261, "ndim": [1261, 1262, 1884, 1886, 1927, 1933, 1943], "atensorinv": 1261, "movedim": [1262, 1302, 1869, 1897, 1913, 1931], "tensorinv": 1262, "vandermond": [1263, 1853], "pmatrix": 1263, "x_n": [1263, 1345, 1346, 1389, 1390, 1396, 1420, 1460, 1834, 1891], "125": [1263, 1447, 1853, 1869], "overlin": [1264, 1856], "3223": 1264, "2815": 1264, "1944": [1264, 1902], "4345": 1265, "pickle_modul": [1267, 1743], "weights_onli": [1267, 1866, 1880], "mmap": [1267, 1883], "pickle_load_arg": 1267, "register_packag": [1267, 1907], "binaryio": [1267, 1743, 1915], "mmape": 1267, "untrust": [1267, 1866, 1880, 1915], "tamper": [1267, 1915], "ram": [1267, 1894], "surg": 1267, "unicodedecodeerror": 1267, "codec": 1267, "0x": 1267, "latin1": 1267, "byte_arrai": 1267, "niter": [1268, 1701, 1814], "ortho_iparam": 1268, "ortho_fparam": 1268, "ortho_bparam": 1268, "knyazev": 1268, "knyazev2001": 1268, "stathopoulosetal2002": 1268, "converg": [1268, 1460, 1616, 1668, 1669, 1693, 1890, 1902, 1905], "precondition": 1268, "eigenpair": 1268, "criterion": [1268, 1345, 1346, 1363, 1365, 1390, 1396, 1420, 1421, 1432, 1433, 1434, 1460, 1461, 1477, 1478, 1511, 1686, 1718, 1898], "fep": 1268, "eigenproblem": 1268, "iparam": 1268, "fparam": 1268, "bparam": 1268, "ivar": 1268, "fvar": 1268, "bvar": 1268, "tvar": 1268, "istep": 1268, "converged_count": 1268, "rerr": 1268, "force_stop": 1268, "2001": 1268, "precondit": 1268, "eigensolv": 1268, "siam": 1268, "sci": 1268, "517": 1268, "541": 1268, "epub": 1268, "doi": [1268, 1383, 1776], "1137": 1268, "s1064827500366124": 1268, "andrea": 1268, "stathopoulo": 1268, "kesheng": 1268, "2002": [1268, 1776], "2165": 1268, "2182": 1268, "s1064827500370883": 1268, "duerschetal2018": 1268, "jed": 1268, "duersch": 1268, "meiyu": 1268, "shao": 1268, "chao": 1268, "ming": 1268, "gu": 1268, "c655": 1268, "c676": 1268, "17m1129830": 1268, "log_": [1269, 1270, 1271, 1272, 1869, 1884], "7767": 1269, "3234": 1269, "2156": 1269, "2411": 1269, "5739": 1269, "5637": 1269, "4640": 1269, "1952": 1269, "4226": 1269, "5204": [1269, 1720], "5224": 1270, "9354": 1270, "7257": 1270, "1301": 1270, "2820": 1270, "0290": 1270, "1392": 1270, "8857": 1270, "6476": 1270, "0090": [1271, 1331, 1707, 1928], "9923": 1271, "5372": 1271, "2492": 1271, "8653": 1271, "7055": 1271, "7705": 1271, "2225": 1271, "8419": 1272, "8003": [1272, 1906], "9971": 1272, "5287": 1272, "0490": 1272, "2483": 1272, "0042": 1272, "9196": 1272, "3504": [1272, 1829], "logsumexp": [1273, 1869, 1884, 1913, 1928], "3069": 1273, "6867": 1273, "8731": 1273, "30000": 1273, "1269e": 1273, "log_2": 1274, "logaddexp": [1274, 1869, 1913], "limits_": 1275, "42296738": 1275, "04462666": 1275, "86278635": 1275, "94622083": 1275, "05277811": 1275, "39202815": 1275, "83525007": 1275, "84492621": 1275, "06084887": 1275, "06844475": 1275, "2611": [1276, 1826], "9254": 1276, "6213": [1276, 1902], "6843": 1276, "3242": 1276, "9665": 1276, "4539": 1276, "0887": [1276, 1928], "1336": 1276, "4025": 1276, "7089": [1276, 1372], "9032": 1276, "3031": 1276, "2589": 1282, "1135": 1282, "5481": [1282, 1295, 1902], "9566": 1282, "sum_j": [1283, 1419, 1462, 1464, 1584, 1792, 1928], "0593": [1283, 1902], "5696": 1283, "6859e": 1283, "compute_pivot": 1285, "transposit": [1285, 1833, 1927], "perm": 1285, "a_lu": 1285, "5558": 1285, "1684": 1285, "1551": 1285, "1940": 1285, "6189": 1285, "5497": 1285, "4526": 1285, "2526": 1285, "3285": 1285, "7988": 1285, "7175": 1285, "9701": 1285, "2634": 1285, "9255": 1285, "3459": 1285, "00000e": 1286, "8312": 1286, "unpack_data": [1287, 1869], "unpack_pivot": [1287, 1869], "l_": [1287, 1334, 1338, 1342, 1346, 1357, 1358, 1359, 1360, 1397, 1422], "u_": [1287, 1666, 1670], "3552": [1289, 1520], "3825": 1289, "8297": 1289, "3477": 1289, "2035": [1289, 1807, 1808, 1854, 1855], "2252": [1289, 1928], "5002": 1289, "6248": [1289, 1298], "1307": 1289, "0608": [1289, 1785], "1244": 1289, "0139": 1289, "6763": 1293, "7445": 1293, "2369": 1293, "argmax": [1293, 1337, 1422, 1552, 1553, 1554, 1824, 1869, 1913, 1951], "max_indic": 1293, "2360": 1293, "2942": 1293, "1222": [1293, 1902], "8475": 1293, "1949": 1293, "1127": 1293, "6702": 1293, "5717": 1293, "9207": 1293, "1297": 1293, "8768": 1293, "6172": 1293, "6060": 1293, "2432": 1293, "3288": 1295, "3367": 1295, "nanmean": [1295, 1869, 1913], "3841": 1295, "6320": 1295, "4254": 1295, "7384": 1295, "0131": 1295, "6549": [1295, 1768], "4279": 1295, "3350": 1295, "7694": 1295, "5600": [1295, 1481], "0842": 1295, "9580": 1295, "3623": 1295, "2343": [1295, 1886], "5085": 1295, "4599": 1295, "1807": 1295, "5219": 1296, "5212": 1296, "2202": 1296, "2505": 1296, "3982": 1296, "9948": 1296, "3518": 1296, "3131": 1296, "3180": [1296, 1927], "6993": 1296, "0436": 1296, "0438": 1296, "2270": 1296, "2751": 1296, "7303": 1296, "2192": 1296, "3321": 1296, "2488": 1296, "0778": 1296, "9510": 1296, "7048": 1296, "4742": [1296, 1842, 1928], "7125": [1296, 1794], "plot": [1297, 1893, 1917, 1932, 1958], "t_0": [1297, 1686], "t_": [1297, 1378, 1524, 1685, 1686, 1869, 1927, 1945], "s_0": 1297, "s_": [1297, 1335, 1336, 1375, 1479], "g_0": 1297, "g_": [1297, 1670, 1680, 1681], "g_i": 1297, "t_i": 1297, "0d": [1297, 1421], "xy": 1297, "50276": 1297, "cartesian_prod": [1297, 1869, 1913], "grid_x": 1297, "grid_i": 1297, "dstack": [1297, 1869, 1913, 1927], "matplotlib": [1297, 1932], "pyplot": [1297, 1932], "plt": 1297, "plot_surfac": 1297, "6750": 1298, "0857": [1298, 1839], "7197": [1298, 1862], "argmin": [1298, 1869, 1913, 1951], "min_indic": [1298, 1869], "1334": 1298, "2803": 1298, "4644": [1298, 1807, 1808, 1854, 1855], "2635": [1298, 1902], "3651": 1298, "0384": 1298, "0128": 1298, "7015": 1298, "1153": 1298, "9849": 1298, "1458": [1298, 1928], "5788": 1298, "deduc": [1300, 1927], "4851": 1300, "5037": 1300, "3633": 1300, "0760": 1300, "3362": [1302, 1303], "8437": [1302, 1303], "9627": [1302, 1303], "1727": [1302, 1303], "5173": [1302, 1303], "1398": [1302, 1303], "mpsalloc": [1304, 1305], "metal": [1305, 1314, 1879, 1882, 1903], "mpsgraph": 1305, "wait_until_complet": [1310, 1311], "signpost": [1310, 1311, 1312], "xcode": 1311, "recommendedmaxworkingsets": 1314, "unlimit": [1314, 1894], "1321": 1317, "4370": [1317, 1927], "1289": 1317, "0527": 1317, "3077": [1317, 1803], "0881": 1317, "1259": 1317, "0284": 1317, "2015": [1318, 1889, 1902], "6087": 1318, "1494": 1318, "5491": 1318, "260": 1318, "8663": 1318, "3137": 1318, "0700": 1318, "8378": 1318, "5146": 1318, "1216": 1318, "5244": 1318, "5767": 1318, "1363": 1318, "5877": 1318, "5083": 1318, "1614": 1318, "1645": 1318, "7021": 1318, "0085": 1318, "0367": 1318, "1567": 1318, "4312": 1318, "1019": 1318, "4394": 1318, "8753": 1318, "_sampl": 1319, "thtensorrandom": 1319, "320": [1319, 1455], "0404": 1321, "6361": 1321, "multigammaln": [1322, 1928], "4028e": 1323, "38": [1323, 1943], "1400e": 1323, "isnan": [1324, 1869, 1913, 1927, 1951], "midpoint": [1326, 1712], "weakli": [1328, 1329, 1928], "to_spars": [1329, 1790, 1869, 1906, 1913, 1927], "2262": [1331, 1707], "0682": [1331, 1707], "2866": [1331, 1707], "3940": [1331, 1707], "5x7": [1335, 1339], "7x7": [1335, 1339], "10x7": [1335, 1339], "cube": [1336, 1340, 1718], "d_": [1336, 1340, 1344, 1356, 1359, 1362, 1424, 1427, 1452, 1455, 1481, 1486, 1528, 1837, 1838, 1839, 1840], "5x7x9": [1336, 1340], "7x7x7": [1336, 1340], "7x9x8": [1336, 1340], "n_class": 1337, "cutoff": [1337, 1889], "div_valu": 1337, "head_bia": 1337, "edouard": 1337, "grave": [1337, 1352], "armand": 1337, "joulin": 1337, "moustapha": 1337, "ciss\u00e9": 1337, "grangier": 1337, "herv\u00e9": 1337, "j\u00e9gou": 1337, "imbalanc": 1337, "zipf": 1337, "law": 1337, "102": [1337, 1950], "1001": 1337, "1002": 1337, "_class": 1337, "maxunpool1d": [1338, 1422, 1555, 1848], "maxunpool2d": [1339, 1377, 1423, 1556, 1848], "maxunpool3d": [1340, 1378, 1424, 1557, 1848], "selu": [1341, 1374, 1521, 1869, 1889, 1912, 1913], "n_i": [1342, 1343, 1344, 1357, 1358, 1359, 1422, 1423, 1424, 1477, 1478], "c_j": [1342, 1343, 1344, 1422, 1423, 1424], "size_averag": [1345, 1346, 1363, 1365, 1389, 1395, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1500, 1501, 1509, 1511, 1536, 1540, 1541, 1551, 1559, 1560, 1561, 1562, 1563, 1571, 1582, 1583, 1594, 1869], "unreduc": [1345, 1346, 1365, 1390, 1396, 1420, 1436, 1460, 1478], "ell": [1345, 1346, 1365, 1389, 1390, 1396, 1420, 1436, 1460, 1478], "l_1": [1345, 1346, 1365, 1389, 1390, 1396, 1420, 1436, 1460, 1478], "l_n": [1345, 1346, 1365, 1389, 1390, 1396, 1420, 1436, 1460, 1478], "w_n": [1345, 1346, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776], "y_n": [1345, 1346, 1365, 1389, 1390, 1396, 1420, 1436, 1460, 1834, 1891], "lim_": [1345, 1891], "secondli": 1345, "rescal": [1345, 1346, 1365, 1433, 1434, 1436, 1462, 1464, 1500, 1501, 1511, 1563, 1621, 1650], "nbatch": [1345, 1346], "meantim": [1345, 1346, 1363, 1365, 1389, 1396, 1420, 1421, 1432, 1433, 1434, 1436, 1443, 1460, 1461, 1477, 1500, 1501, 1511, 1540, 1563, 1571, 1956], "pos_weight": [1346, 1501, 1869], "recal": [1346, 1896, 1932, 1949], "ell_c": 1346, "l_c": 1346, "p_c": 1346, "pai": [1346, 1501, 1908, 1931], "spacial": [1346, 1501], "random_": [1346, 1365, 1436, 1501, 1869, 1884, 1935], "hat": [1347, 1348, 1349, 1392, 1393, 1394, 1468], "terminologi": [1347, 1348, 1349, 1468], "5d": [1349, 1394, 1481, 1528, 1539, 1566, 1597], "volumetr": [1349, 1468, 1481, 1528, 1539, 1597, 1598, 1599], "spatio": [1349, 1468], "in1_featur": 1350, "in2_featur": 1350, "in1": [1350, 1499], "in2": [1350, 1499], "blank": [1352, 1512, 1869, 1872], "zero_infin": [1352, 1512, 1869], "connectionist": [1352, 1512], "unseg": 1352, "longest": [1352, 1643, 1645, 1646, 1898], "input_length": [1352, 1512, 1869, 1898], "target_length": [1352, 1512, 1869], "s_n": 1352, "target_n": 1352, "unbatch": [1352, 1365, 1376, 1381, 1392, 1399, 1435, 1444, 1472, 1522], "s_min": 1352, "toronto": 1352, "edu": [1352, 1718], "icml_2006": 1352, "background": [1352, 1360, 1528, 1566, 1904, 1923], "channel_shuffl": [1353, 1869, 1913], "_left": [1354, 1355, 1356, 1450, 1451, 1452, 1453, 1454, 1455, 1484, 1485, 1486, 1566], "_right": [1354, 1355, 1356, 1450, 1451, 1452, 1453, 1454, 1455, 1484, 1485, 1486, 1566], "0491": [1354, 1484], "7152": [1354, 1484], "0749": [1354, 1484], "3287": [1354, 1484], "8966": [1354, 1484], "1466": [1354, 1484], "2771": [1354, 1484], "6616": [1354, 1484], "4523": [1354, 1484], "1255": [1354, 1484], "6372": [1354, 1484, 1813], "1182": [1354, 1484], "8652": [1354, 1484], "_top": [1355, 1356, 1451, 1452, 1454, 1455, 1485, 1486, 1566], "_bottom": [1355, 1356, 1451, 1452, 1454, 1455, 1485, 1486, 1566], "6585": 1355, "4320": [1355, 1822], "8701": 1355, "4649": 1355, "_front": [1356, 1452, 1455, 1486, 1566], "_back": [1356, 1452, 1455, 1486, 1566], "_j": [1357, 1358], "star": [1357, 1358, 1359, 1871], "\u00e0": [1357, 1358, 1359, 1360, 1361, 1362, 1376, 1480], "trou": [1357, 1358, 1359, 1360, 1361, 1362, 1376, 1480], "harder": [1357, 1358, 1359, 1360, 1361, 1362, 1376, 1423, 1424, 1480], "nice": [1357, 1358, 1359, 1360, 1361, 1362, 1376, 1422, 1423, 1424, 1480, 1885, 1891, 1894, 1915], "prod_": [1358, 1359, 1361, 1362, 1375, 1479, 1672], "out_j": 1359, "deconvolut": [1360, 1361, 1362, 1506, 1507, 1508], "_pad": [1360, 1361, 1362], "semi": [1363, 1389, 1867, 1889], "supervis": [1363, 1389], "vert": [1364, 1438, 1510], "_2": [1364, 1510, 1617, 1650], "ast_1": [1364, 1380], "ast_2": [1364, 1380], "ignore_index": [1365, 1436, 1511, 1563, 1869], "label_smooth": [1365, 1511, 1869], "unbalanc": [1365, 1436], "d_1": [1365, 1436, 1511, 1563], "d_2": [1365, 1436, 1511, 1563], "d_k": [1365, 1436, 1511, 1563], "_index": [1365, 1436], "logsoftmax": [1365, 1436, 1462, 1547], "nllloss": [1365, 1462, 1563, 1584, 1848], "blend": 1365, "smooth": [1365, 1390, 1460, 1465, 1511, 1679], "w_c": 1365, "truth": [1365, 1511, 1878, 1932], "rethink": [1365, 1511], "incept": [1365, 1511], "spectral_norm": [1366, 1640], "neuron": 1367, "detector": 1367, "dropout1d": [1369, 1869], "_freez": 1372, "sparseadam": [1372, 1914], "0251": 1372, "6902": [1372, 1709], "7172": 1372, "6431": 1372, "0748": 1372, "6969": 1372, "4970": 1372, "3448": 1372, "9685": 1372, "3677": 1372, "7265": 1372, "1685": 1372, "4362": 1372, "4004": [1372, 1794], "9400": 1372, "9124": 1372, "3616": 1372, "1151": 1372, "0309": 1372, "9315": 1372, "1655": [1372, 1894], "9897": [1372, 1896], "0635": 1372, "7895": 1372, "0364": 1372, "6778": 1372, "5803": 1372, "from_pretrain": [1372, 1373, 1948], "bag": [1373, 1520], "per_sample_weight": [1373, 1520, 1869, 1951], "embedding_sum": 1373, "8861": 1373, "4350": 1373, "0523": 1373, "1306": 1373, "5798": 1373, "0044": 1373, "7082": [1373, 1520], "2145": [1373, 1520], "6251": [1373, 1520], "6500": 1373, "satur": [1374, 1521], "alphadropout": [1374, 1494], "160": [1375, 1914], "unfold": [1376, 1869, 1913, 1931], "prod_d": [1376, 1480], "neighborhood": [1376, 1480], "col2im": [1376, 1869, 1913, 1951], "fold_param": [1376, 1480], "input_on": [1376, 1480], "output_ratio": [1377, 1378, 1523, 1524, 1869], "_random_sampl": [1377, 1378, 1523, 1524, 1869], "ben": [1377, 1378, 1523, 1524], "graham": [1377, 1378, 1523, 1524], "oh": [1377, 1378, 1523, 1524], "ow": [1377, 1378, 1523, 1524], "_ratio": [1377, 1378, 1524], "13x12": [1377, 1523], "kt": [1378, 1497, 1505, 1508, 1524, 1554], "ot": [1378, 1524], "13x12x11": [1378, 1524], "044715": [1379, 1526], "pack_sequ": [1381, 1399, 1444, 1645, 1647], "bias_ih": [1382, 1400, 1446], "bias_hh": [1382, 1400, 1446], "homoscedast": [1383, 1525], "heteroscedast": [1383, 1525], "nix": 1383, "weigend": 1383, "1994": 1383, "icnn": 1383, "94": 1383, "orlando": 1383, "fl": 1383, "usa": [1383, 1932], "374138": 1383, "instancenorm": [1384, 1920], "layernorm": [1384, 1392, 1393, 1394, 1472, 1474, 1476, 1542, 1886, 1920, 1956], "shrinkag": [1385, 1466, 1531, 1587], "mobilenetv3": [1387, 1533], "_val": 1388, "dissimilar": 1389, "l1loss": [1390, 1460, 1541], "outlier": [1390, 1460, 1918, 1919], "huber": [1390, 1460], "smoothl1loss": [1390, 1582], "insensit": 1391, "unused_argument1": 1391, "unused_argument2": 1391, "ingredi": [1392, 1393, 1394], "styliz": [1392, 1393, 1394], "rgb": [1393, 1394, 1932], "color": [1394, 1870, 1871, 1932, 1947], "log_target": [1395, 1540, 1869], "kl": [1395, 1540, 1867], "summaris": 1395, "loss_pointwis": 1395, "batchmean": [1395, 1540], "kl_loss": 1395, "mae": 1396, "proj_siz": [1399, 1445], "f_t": [1399, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "hf": [1399, 1400], "g_t": [1399, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "ig": [1399, 1400], "hg": [1399, 1400], "o_t": 1399, "ho": [1399, 1400], "c_t": 1399, "odot": 1399, "forget": [1399, 1870, 1871], "1402": 1399, "c_0": [1399, 1400], "proj": 1399, "c_n": 1399, "w_ii": 1399, "w_if": 1399, "w_ig": 1399, "w_io": 1399, "w_hi": 1399, "w_hf": 1399, "w_hg": 1399, "w_ho": 1399, "b_ii": 1399, "b_if": 1399, "b_ig": 1399, "b_io": 1399, "b_hi": 1399, "b_hf": 1399, "b_hg": 1399, "b_ho": 1399, "weight_hr_l": 1399, "_revers": 1399, "h_1": 1400, "c_1": 1400, "time_step": 1400, "_shape": 1401, "sentence_length": 1401, "lazymodulemixin": [1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414], "cls_to_becom": [1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1612], "convtranspose1d": [1408, 1506, 1848, 1920], "convtranspose3d": [1410, 1508, 1848, 1920], "instancenorm1d": [1411, 1538, 1920], "instancenorm2d": [1412, 1538, 1920], "instancenorm3d": [1413, 1538, 1920], "uninitializedparamet": [1414, 1600, 1867], "lrn": 1417, "signal_2d": 1417, "signal_4d": 1417, "output_2d": 1417, "output_4d": 1417, "x_j": [1419, 1462, 1464, 1584, 1792, 1899, 1928], "80827": [1425, 1426, 1427], "unpool": [1425, 1426, 1427], "maxpool3d": [1427, 1554, 1557, 1848, 1920], "unpooled_output": 1427, "t_destin": 1429, "lrelu": [1430, 1902], "hing": [1432, 1434], "sum_i": [1433, 1434, 1461], "nelement": [1433, 1461], "jointli": 1435, "multihead": [1435, 1474], "concat": [1435, 1869, 1913], "head_1": 1435, "head_h": 1435, "head_i": 1435, "qw_i": 1435, "kw_i": 1435, "vw_i": 1435, "scaled_dot_product_attent": [1435, 1869, 1913], "fastpath": [1435, 1945], "inference_mod": [1435, 1476], "nestedtensor": [1435, 1476, 1886], "multihead_attn": 1435, "e_q": 1435, "e_k": 1435, "e_v": 1435, "_head": [1435, 1472], "merge_mask": 1435, "mask_typ": 1435, "merged_mask": 1435, "nll": 1436, "crossentropyloss": [1436, 1511], "num_paramet": 1437, "nchannel": 1437, "decai": [1437, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1684, 1688, 1690, 1691, 1694, 1695, 1697, 1769, 1914], "legitim": [1437, 1528, 1897], "vert_p": 1438, "fromkei": 1439, "popitem": [1439, 1913], "setdefault": [1439, 1913], "upscale_factor": [1441, 1569, 1869, 1951], "upscal": 1441, "video": [1441, 1442, 1885, 1932, 1943], "shi": [1441, 1442], "2016": [1441, 1442, 1478], "_factor": [1441, 1442, 1481, 1482, 1483], "pixel_shuffl": [1441, 1869, 1913, 1920, 1951], "downscale_factor": [1442, 1570, 1869], "pixelshuffl": [1442, 1569, 1570, 1920], "downscal": 1442, "pixel_unshuffl": [1442, 1869, 1913, 1920], "log_input": [1443, 1571, 1869], "poisson": [1443, 1571, 1769, 1867, 1869, 1913], "stirl": [1443, 1571], "hh": [1444, 1446], "flatten_paramet": 1445, "3333333333333333": [1447, 1684, 1690, 1869], "leaki": [1447, 1576, 1889], "rectifi": [1447, 1448, 1573, 1889], "liner": 1447, "empir": 1447, "1505": 1447, "00853": 1447, "crelu": 1448, "1603": 1448, "05201": 1448, "480": 1455, "6732632423543772848170429916717": [1456, 1579], "0507009873554804934193349852946": [1456, 1579], "kaiming_norm": 1456, "kaiming_normal_": [1456, 1867, 1873, 1889], "initialis": 1456, "calculate_gain": [1456, 1867, 1873, 1889], "modulelist": [1457, 1902], "cascad": 1457, "relu2": [1457, 1600], "swish": [1458, 1581], "coin": [1458, 1581], "cnn": [1460, 1918], "ross": 1460, "girshick": 1460, "quadrat": [1460, 1898], "huberloss": [1460, 1537], "lie": [1462, 1464, 1584, 1792, 1928, 1932, 1945], "w_j": 1463, "soft": [1466, 1530, 1587], "softshrinkag": 1466, "convert_sync_batchnorm": 1468, "r1": 1468, "sync_bn_network": 1468, "ddp_sync_bn_network": 1468, "sync_bn_modul": 1468, "d_model": [1472, 1473, 1474, 1475, 1476], "nhead": [1472, 1473, 1474, 1475, 1476], "num_encoder_lay": 1472, "num_decoder_lay": 1472, "dim_feedforward": [1472, 1474, 1476], "custom_encod": 1472, "custom_decod": 1472, "layer_norm_ep": [1472, 1474, 1476], "norm_first": [1472, 1474, 1476], "ashish": [1472, 1474, 1476], "vaswani": [1472, 1474, 1476], "noam": [1472, 1474, 1476], "shazeer": [1472, 1474, 1476], "niki": [1472, 1474, 1476], "parmar": [1472, 1474, 1476], "jakob": [1472, 1474, 1476], "uszkoreit": [1472, 1474, 1476], "llion": [1472, 1474, 1476], "jone": [1472, 1474, 1476], "aidan": [1472, 1474, 1476], "gomez": [1472, 1474, 1476], "lukasz": [1472, 1474, 1476], "illia": [1472, 1474, 1476], "polosukhin": [1472, 1474, 1476], "6000": [1472, 1474, 1476, 1481, 1715, 1763, 1766], "6010": [1472, 1474, 1476], "feedforward": [1472, 1474, 1476, 1889], "transformer_model": 1472, "word_language_model": 1472, "src_mask": [1472, 1476], "tgt_mask": [1472, 1473, 1474], "memory_mask": [1472, 1473, 1474], "src_key_padding_mask": [1472, 1475, 1476], "tgt_key_padding_mask": [1472, 1473, 1474], "memory_key_padding_mask": [1472, 1473, 1474], "src_is_caus": 1472, "tgt_is_caus": [1472, 1473, 1474], "memory_is_caus": [1472, 1473, 1474], "_mask": [1472, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639], "_key_padding_mask": 1472, "generate_square_subsequent_mask": 1472, "sz": 1472, "decoder_lay": [1473, 1474], "transformerdecoderlay": 1473, "transformer_decod": 1473, "attn": [1474, 1476], "encoder_lay": [1475, 1476], "enable_nested_tensor": 1475, "mask_check": 1475, "bert": [1475, 1948], "1810": 1475, "04805": 1475, "transformerencoderlay": 1475, "transformer_encod": 1475, "flashattent": [1476, 1578], "triplet": [1477, 1478], "x3": 1477, "balnta": [1477, 1478], "riba": [1477, 1478], "a_i": [1477, 1478, 1771], "p_i": [1477, 1478], "rm": [1477, 1478], "bf": [1477, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "rvert_p": [1477, 1564], "tripletmarginwithdistanceloss": [1477, 1595], "triplet_loss": [1477, 1478], "distance_funct": [1478, 1595], "l_i": 1478, "tripletmarginloss": [1478, 1594], "l_p": [1478, 1564], "pairwisedist": [1478, 1567], "penal": [1478, 1902], "distant": 1478, "anchor_id": 1478, "positive_id": 1478, "negative_id": 1478, "l_infin": 1478, "bmva": 1478, "bmvc": 1478, "paper119": 1478, "unflattened_s": 1479, "namedtensor": 1479, "namedshap": 1479, "u_1": 1479, "u_n": 1479, "u_i": 1479, "im2col": [1480, 1869, 1913], "fold": [1480, 1814, 1869, 1879, 1912, 1921, 1927], "2x3": 1480, "3x4": 1480, "inp_unf": 1480, "out_unf": 1480, "recompute_scale_factor": [1481, 1539], "bicub": [1481, 1528, 1539, 1597, 1848], "trilinear": [1481, 1528, 1539, 1597, 1848], "input_3x3": 1481, "4375": 1481, "8125": 1481, "9375": 1481, "2400": [1481, 1829], "1200": [1481, 1740, 1894], "8800": 1481, "4400": [1481, 1829], "7200": 1481, "0400": 1481, "2800": [1481, 1763], "3600": 1481, "5200": 1481, "6400": 1481, "1678": 1485, "4418": 1485, "9466": [1485, 1928], "9604": 1485, "4219": 1485, "5241": 1485, "9162": 1485, "5436": [1485, 1829], "6446": 1485, "adaptiveavgpool1d": [1487, 1920], "tripl": [1489, 1492], "adaptivemaxpool1d": 1490, "adaptivemaxpool2d": [1491, 1848], "adaptivemaxpool3d": 1492, "avgpool1d": [1495, 1920], "st": [1497, 1505, 1508, 1554, 1956], "avgpool3d": [1497, 1848, 1920], "iT": [1497, 1505, 1508], "padt": [1497, 1505, 1508], "score": [1501, 1578, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636, 1867], "dt": [1505, 1508, 1928, 1956], "out_padw": [1506, 1507, 1508], "out_padh": [1507, 1508], "out_padt": 1508, "cosineembeddingloss": 1509, "ctcloss": [1512, 1848], "charact": [1512, 1760, 1868, 1871, 1885, 1923], "elu": [1518, 1869, 1912, 1913, 1920], "embedding_matrix": [1519, 1520], "8490": 1519, "9625": 1519, "6753": 1519, "7761": 1519, "6108": 1519, "6246": 1519, "9751": 1519, "3618": 1519, "4161": [1519, 1927], "2419": 1519, "7383": 1519, "0237": 1519, "7794": 1519, "0528": 1519, "3385": 1519, "8612": 1519, "1867": 1519, "5384": 1519, "8720": 1519, "6262": 1519, "7471": 1519, "embeddingbag": [1520, 1848, 1918, 1920, 1933], "3397": 1520, "5545": 1520, "5893": 1520, "4386": 1520, "5882": 1520, "featurealphadropout": 1521, "gaussiannllloss": 1525, "border": 1528, "affine_grid": [1528, 1869], "extrema": 1528, "pil": [1528, 1539], "overshoot": [1528, 1539, 1597], "gumbel": [1530, 1867], "y_hard": 1530, "y_soft": 1530, "hardtanh": [1535, 1869, 1879, 1913, 1920, 1951], "hingeembeddingloss": 1536, "use_input_stat": [1538, 1869], "antialia": 1539, "anti": 1539, "pillow": [1539, 1932], "buggi": 1539, "inter_nearest": 1539, "104157": 1539, "kldivloss": 1540, "batchsiz": [1540, 1795, 1796, 1797, 1799, 1800, 1927], "leaky_relu": [1544, 1869, 1889, 1913, 1920, 1951], "localresponsenorm": 1546, "_stacklevel": [1547, 1584, 1585, 1869], "lppool1d": 1549, "lppool2d": 1550, "marginrankingloss": 1551, "max_unpool1d": [1552, 1869], "multimarginloss": 1560, "multilabelmarginloss": 1561, "multilabelsoftmarginloss": 1562, "n_0": 1564, "n_": 1564, "n_k": 1564, "everywher": [1565, 1809, 1914], "circularpad2d": 1566, "constantpad2d": 1566, "reflectionpad2d": [1566, 1848], "replicationpad2d": [1566, 1848], "t4d": 1566, "p1d": 1566, "p2d": 1566, "p3d": 1566, "pixelunshuffl": [1570, 1920], "poissonnllloss": 1571, "rrelu": [1577, 1869, 1913], "dropout_p": [1578, 1869], "attn_bia": 1578, "temp_mask": 1578, "ev": 1578, "legend": 1578, "softmarginloss": 1583, "module_kwarg": 1593, "upsample_trilinear": 1598, "fo": 1598, "spatia": 1599, "mixin": [1600, 1867], "dry": 1600, "lazymlp": 1600, "lazylinear": 1600, "lazy_mlp": 1600, "8832e": 1600, "5636e": 1600, "1598e": 1600, "5637e": 1600, "8788e": 1600, "0042e": 1600, "0019": 1600, "lazymodul": 1600, "full_mlp": 1600, "3837": [1600, 1709], "0907": 1600, "6708": 1600, "5223": 1600, "9028": 1600, "2851": 1600, "6813": 1600, "5766": 1600, "8678": 1600, "1320": 1600, "2938": 1600, "0679": [1600, 1839], "2793": [1600, 1657], "1088": 1600, "1795": 1600, "2301": 1600, "2807": 1600, "2479": 1600, "1091": 1600, "has_uninitialized_param": 1600, "initialize_paramet": 1600, "register_backward_pre_hook": 1606, "check_reduct": 1609, "delay_all_reduce_named_param": 1609, "param_to_hook_all_reduc": 1609, "optimizer_param": 1609, "loss_func": [1609, 1923], "consume_prefix_in_state_dict_if_pres": 1609, "nccl2": 1609, "dictat": [1609, 1871], "megabyt": 1609, "mb": [1609, 1894], "detach_": [1609, 1869, 1884, 1920, 1927], "ddp_logging_data": 1609, "can_set_static_graph": 1609, "model_ddp": 1609, "_get_ddp_logging_data": 1609, "divide_by_initial_world_s": 1609, "syncbatchnorm": 1609, "deplet": 1609, "pariti": 1609, "discrep": [1609, 1718, 1899], "another_input": 1609, "predivid": 1609, "encode_and_decod": 1609, "encoded_tensor": 1609, "decoded_tensor": 1609, "error_if_nonfinit": 1613, "foreach": [1613, 1614, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1914], "clip_valu": 1614, "orthogonal_map": 1616, "use_trivi": 1616, "qq": 1616, "matrix_exp": [1616, 1869, 1913], "caylei": 1616, "thin": [1616, 1711], "manifold": 1616, "register_parametr": [1616, 1617, 1618, 1619, 1650, 1887], "orth_linear": 1616, "parametrizedlinear": [1616, 1617], "moduledict": [1616, 1617, 1870, 1902], "parametrizationlist": [1616, 1617, 1621], "_orthogon": 1616, "9332e": 1616, "n_power_iter": [1617, 1650], "sn": [1617, 1650], "discrimin": [1617, 1650], "adversari": [1617, 1650], "lipschitz": 1617, "reimplement": [1617, 1650], "_spectralnorm": 1617, "convtranspos": [1617, 1650], "snm": 1617, "0081": 1617, "amaxbackward0": 1617, "original0": [1618, 1621, 1653], "original1": [1618, 1621, 1653], "tensor_nam": [1618, 1620, 1621, 1622], "right_invers": [1618, 1621], "out_rnn": 1619, "rnn_cell": 1619, "simplic": [1621, 1923, 1924], "inbuilt": 1621, "unparametr": 1621, "rankon": 1621, "surject": 1621, "s0_sqrt": 1621, "linear_rank_on": 1621, "matrix_rank": 1621, "leave_parametr": 1622, "unparametris": 1622, "prune": [1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1927], "skeleton": 1623, "compute_mask": [1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630], "importance_scor": [1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1635, 1636], "apply_mask": [1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630], "pruned_tensor": [1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630], "default_mask": [1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630], "_orig": [1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639], "undon": [1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1639], "unprun": [1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638], "basepruningmethod": [1628, 1634], "add_pruning_method": 1628, "pruning_typ": [1628, 1632], "unstructur": [1628, 1632], "ravel": [1628, 1869, 1913], "nonmask": 1628, "bias_mask": [1631, 1633], "pruning_method": 1632, "parameters_to_prun": 1632, "l1unstructur": 1632, "parameters_to_vector": 1632, "forward_pre_hook": [1634, 1902], "random_unstructur": [1634, 1639], "odict_kei": 1635, "weight_orig": 1635, "weight_mask": [1635, 1638], "columns_prun": 1637, "t_modul": [1640, 1641, 1650, 1653], "weight_norm": 1641, "sorted_indic": [1642, 1644, 1645, 1647], "unsorted_indic": [1642, 1644, 1645, 1647], "abc": [1642, 1871], "axbc": 1642, "throughout": [1642, 1899, 1902, 1918], "conform": [1642, 1902], "is_cuda": [1642, 1884, 1913, 1929, 1946], "enforce_sort": [1643, 1644, 1645], "unsort": [1643, 1644, 1747], "shortest": 1643, "uncondition": [1643, 1866, 1896, 1957], "pad_sequ": [1644, 1648, 1869, 1913], "padding_valu": [1645, 1646, 1869], "total_length": [1645, 1898], "seq_unpack": 1645, "lens_unpack": 1645, "packed_sequ": 1647, "unpacked_sequ": 1647, "padded_sequ": 1648, "unpad": 1648, "unstack": 1648, "as_tensor": [1648, 1827, 1869, 1886, 1896, 1913, 1932, 1933, 1934], "unpadded_sequ": 1648, "module_cl": [1649, 1923], "5846e": 1649, "29": [1649, 1776, 1912], "8307e": 1649, "5250e": 1649, "1210e": 1649, "4677e": 1649, "5915e": 1649, "4013e": 1649, "weight_u": 1650, "parameters_and_buff": 1651, "decoupl": [1653, 1669, 1672, 1678], "weight_g": [1653, 1869], "weight_v": 1653, "1602": 1653, "07868": 1653, "modern": [1653, 1905, 1940, 1946], "bother": 1653, "102999": 1653, "remove_parametr": 1653, "as_tupl": [1655, 1862], "complexfloat": [1656, 1662], "0425": 1657, "7969": 1657, "2925": 1657, "7229": 1657, "2134": 1657, "0505": 1657, "1408": 1657, "0563": 1657, "0566": 1657, "0732": [1657, 1829], "0687": 1657, "1177": 1657, "2303": 1657, "1552": 1657, "6148": 1657, "6535": 1657, "8318": 1657, "3987": 1657, "9544": [1657, 1719], "6048": 1657, "7909": 1657, "120": [1659, 1932], "from_valu": 1662, "onnx_typ": 1662, "tensorprotodatatyp": 1662, "torch_c_value_with_type_float": 1662, "from_dtyp": 1662, "jit_type_bas": 1662, "safer": [1662, 1878], "onnxexportererror": [1662, 1910, 1912], "symbolicvalueerror": 1662, "onnx_compat": 1662, "scalar_nam": 1662, "complexhalf": 1662, "complexdoubl": 1662, "float8e5m2": 1662, "float8e4m3fn": 1662, "torch_nam": 1662, "int8_t": 1662, "int16_t": 1662, "float8_e5m2": [1662, 1929], "float8_e4m3fn": [1662, 1929], "verif": [1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1912], "input_arg": [1663, 1912], "params_dict": 1663, "export_opt": [1663, 1910], "_excluded_node_kind": 1663, "frozenset": [1663, 1871], "scalarimplicit": [1663, 1913], "prim": [1663, 1868, 1912, 1913], "listconstruct": [1663, 1868], "all_mismatch_leaf_graph_info": 1663, "essential_node_count": 1663, "essential_node_kind": 1663, "export_repro": 1663, "repro_dir": 1663, "repro": [1663, 1946, 1956], "test_": 1663, "test_data_set_0": 1663, "input_0": [1663, 1912], "pb": [1663, 1912], "input_1": [1663, 1912], "output_0": 1663, "output_1": 1663, "find_mismatch": [1663, 1912], "exhibit": [1663, 1912, 1944, 1956], "verificationopt": [1663, 1912], "find_partit": 1663, "has_mismatch": 1663, "pretty_print_mismatch": 1663, "pretty_print_tre": 1663, "graph_info": [1663, 1912], "__2": [1663, 1912], "__1": [1663, 1912], "__3": [1663, 1912], "110": [1663, 1912], "verify_export": 1663, "onnx_graph": 1663, "onnx_out": 1663, "pt_out": 1663, "ignore_non": 1664, "check_shap": 1664, "check_dtyp": [1664, 1934], "onnxbackend": 1664, "onnx_runtime_cpu": 1664, "remained_onnx_input_idx": 1664, "acceptable_error_percentag": 1664, "percentag": [1664, 1693, 1769, 1918], "weight_decai": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682, 1902], "1e6": 1665, "sizeof": [1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1929, 1949], "tensorlist": [1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "prohibit": [1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1894, 1907], "impair": [1665, 1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "ungraph": [1665, 1668, 1669, 1672], "removeablehandl": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "register_load_state_dict_pre_hook": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "register_state_dict_post_hook": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "register_step_post_hook": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "register_step_pre_hook": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "new_arg": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "new_kwarg": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1682], "momentum_buff": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1675, 1678, 1679, 1680, 1681, 1682], "reevalu": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1914], "rho": 1666, "110mm": [1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "4pt": [1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "textbf": [1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "theta_0": [1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "v_0": [1666, 1668, 1669, 1672, 1678, 1679], "leftarrow": [1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "u_0": [1666, 1670], "hspace": [1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "5mm": [1666, 1667, 1668, 1669, 1670, 1672, 1679, 1680, 1681], "nabla_": [1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "theta_": [1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "10mm": [1666, 1667, 1668, 1669, 1670, 1672, 1679, 1680, 1681], "v_t": [1666, 1668, 1669, 1672, 1678, 1679], "v_": [1666, 1668, 1669, 1672, 1678, 1679, 1681], "2_t": [1666, 1667, 1668, 1669, 1672, 1678, 1679], "21mm": 1666, "u_t": [1666, 1670], "theta_t": [1666, 1667, 1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "lr_decai": 1667, "initial_accumulator_valu": 1667, "12mm": [1667, 1678], "_sum_0": 1667, "tild": [1667, 1679], "_sum_t": 1667, "_sum_": 1667, "subgradi": 1667, "999": [1668, 1669, 1670, 1672, 1678, 1682, 1907, 1914], "amsgrad": [1668, 1669], "beta_1": [1668, 1669, 1670, 1672, 1678], "beta_2": [1668, 1669, 1670, 1672, 1678], "13mm": [1668, 1669, 1670, 1672, 1678, 1679, 1680, 1681], "textit": [1668, 1669, 1672, 1678, 1681], "m_0": [1668, 1669, 1670, 1672, 1678], "widehat": [1668, 1669, 1672, 1678], "m_t": [1668, 1669, 1670, 1672, 1678], "m_": [1668, 1669, 1670, 1672, 1678, 1927], "002": [1670, 1672], "t_1": 1670, "2e": [1670, 1672], "max_it": 1671, "max_ev": 1671, "tolerance_grad": 1671, "tolerance_chang": 1671, "history_s": 1671, "line_search_fn": 1671, "bfg": 1671, "minfunc": 1671, "intens": [1671, 1905], "param_byt": 1671, "strong_wolf": 1671, "momentum_decai": 1672, "004": 1672, "decoupled_weight_decai": [1672, 1678], "gamma_t": 1672, "psi": [1672, 1928], "_decai": [1672, 1678], "15mm": [1672, 1680, 1681], "mu_t": 1672, "96": 1672, "mu_": 1672, "11mm": 1672, "incorpor": [1672, 1918], "nesterov": [1672, 1681], "4e": 1672, "adamw": [1672, 1678, 1914], "nadamw": 1672, "weightdecai": 1678, "18mm": 1678, "rho_": 1678, "6mm": 1678, "rho_t": 1678, "t_2": 1678, "l_t": 1678, "radamw": 1678, "_0": [1679, 1897, 1915, 1958], "av": 1679, "8mm": 1679, "3mm": 1679, "lectur": 1679, "hinton": 1679, "step_siz": [1680, 1697], "resili": [1680, 1905], "eta_": [1680, 1685, 1686], "etaplu": 1680, "etaminu": 1680, "gamma_": [1680, 1928], "0_": 1680, "eta_0": 1680, "i_": [1680, 1829], "eta_t": [1680, 1685, 1686], "dampen": 1681, "sutskev": 1681, "veloc": 1681, "conflat": 1682, "is_spars": [1682, 1884, 1913, 1927, 1929, 1946], "maskedtensor": [1682, 1927], "outweigh": [1682, 1956], "rig": 1682, "insist": 1682, "lr_schedul": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1914], "chainabl": [1683, 1693], "081": 1683, "729": [1683, 1696], "6561": [1683, 1857], "59049": 1683, "scheduler1": [1683, 1696, 1914], "constantlr": [1683, 1696], "total_it": [1683, 1684, 1690, 1694, 1696], "scheduler2": [1683, 1696, 1914], "exponentiallr": [1683, 1696, 1914], "get_last_lr": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697], "print_lr": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697], "is_verbos": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697], "__dict__": [1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697], "last_epoch": [1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697], "mileston": [1684, 1690, 1691, 1696, 1914], "simultan": [1684, 1685, 1690, 1691, 1697, 1891, 1923], "025": [1684, 1690], "t_max": [1685, 1914], "eta_min": [1685, 1686], "anneal": [1685, 1686, 1693, 1914], "cur": [1685, 1686], "sgdr": [1685, 1686], "2k": 1685, "sole": 1685, "t_mult": 1686, "interleav": 1686, "base_lr": [1687, 1693], "max_lr": [1687, 1693], "step_size_up": 1687, "step_size_down": 1687, "scale_fn": 1687, "scale_mod": 1687, "cycle_momentum": [1687, 1693], "base_momentum": [1687, 1693], "max_momentum": [1687, 1693], "cyclic": 1687, "forth": [1687, 1853, 1866, 1917, 1941], "amplitud": [1687, 1693], "triangular2": 1687, "exp_rang": 1687, "bckenstler": 1687, "train_batch": [1687, 1693], "get_lr": 1687, "lr_lambda": [1689, 1692], "lambda1": 1689, "lambda2": 1689, "start_factor": 1690, "end_factor": 1690, "03125": 1690, "0375": 1690, "04375": 1690, "005": [1691, 1697], "lmbda": 1692, "total_step": 1693, "steps_per_epoch": 1693, "pct_start": 1693, "anneal_strategi": [1693, 1914], "div_factor": 1693, "final_div_factor": 1693, "three_phas": 1693, "1cycl": 1693, "fastai": 1693, "unpublish": 1693, "initial_lr": 1693, "min_lr": [1693, 1695], "1e4": 1693, "annihil": 1693, "00075": 1694, "00050": 1694, "00025": 1694, "patienc": 1695, "threshold_mod": 1695, "cooldown": 1695, "stagnat": 1695, "new_lr": 1695, "hasn": [1695, 1881, 1915], "optimum": 1695, "dynamic_threshold": 1695, "val_loss": 1695, "81": 1696, "mn": 1699, "pca": [1701, 1927], "overestim": [1701, 1814], "nathan": [1701, 1814], "halko": [1701, 1814], "gunnar": [1701, 1814], "martinsson": [1701, 1814], "tropp": [1701, 1814], "probabilist": [1701, 1814], "0909": [1701, 1814], "4061": [1701, 1814], "na": [1701, 1814], "cmath": [1705, 1869], "4142j": 1705, "4331": 1708, "2475": [1708, 1812], "6834": 1708, "2791": 1708, "1875": 1708, "5561": 1708, "4670": 1708, "5428": 1709, "5854": 1709, "5261": [1709, 1813], "1857": 1709, "2498": 1709, "1646": [1709, 1894], "0705": [1709, 1896], "0629": 1709, "2962": 1709, "0821": [1709, 1769], "1831": 1709, "type1": [1710, 1869], "type2": [1710, 1869], "2117": 1712, "9765": 1712, "1707": 1712, "4884": 1712, "5661": 1712, "5795": 1712, "5280": 1712, "9206": 1712, "quantization_schem": [1713, 1714, 1715, 1716, 1717], "int_repr": [1713, 1714, 1869, 1913], "nchw": [1715, 1932], "qx": [1715, 1716, 1717], "00001": 1715, "max_pool1d": [1716, 1869, 1913, 1920], "max_pool2d": [1717, 1869, 1913, 1920], "quasirandom": 1718, "scrambl": 1718, "sobol": 1718, "quasi": 1718, "21201": 1718, "web": 1718, "unsw": 1718, "au": [1718, 1915], "fkuo": 1718, "art": 1718, "owen": 1718, "niederreit": 1718, "xing": 1718, "466": 1718, "489": 1718, "decemb": 1718, "1998": 1718, "zh": 1718, "vychisl": 1718, "phy": 1718, "784": 1718, "802": 1718, "1967": 1718, "soboleng": 1718, "draw_base2": 1718, "base2": 1718, "fast_forward": 1718, "142": 1719, "283": 1719, "570": 1719, "359": 1719, "9894": 1719, "2503": 1720, "3525": 1720, "5673": 1720, "8237": 1720, "5781": 1720, "6879": 1720, "3816": 1720, "7249": 1720, "0998": 1720, "1436": 1724, "9966": 1724, "3426": 1724, "6366": 1724, "5954": 1724, "8929": 1724, "0923": 1724, "1719": 1724, "4709": 1724, "1996": 1724, "4595": 1730, "4314": 1730, "n2": 1733, "n3": 1733, "negat": [1736, 1821, 1871], "is_neg": [1736, 1869, 1913, 1946], "equidist": 1740, "inexact": 1740, "1234567": 1740, "1230": 1740, "vstack": [1741, 1869, 1913, 1927], "0370": 1742, "2970": 1742, "5420": 1742, "9105": 1742, "8351": 1742, "pickle_protocol": [1743, 1915], "default_protocol": 1743, "_use_new_zipfile_seri": 1743, "zipfil": [1743, 1915], "sorted_sequ": [1747, 1869], "sorter": [1747, 1869], "sorted_sequence_1d": 1747, "select_copi": [1749, 1869, 1913], "slight": [1751, 1927, 1930], "92701": [1751, 1930], "complaint": 1752, "henry2019": 1755, "briefli": 1755, "perfectli": [1755, 1894, 1916], "nine": 1755, "fma": 1755, "10x": 1755, "1904": 1755, "06376": 1755, "denorm": [1756, 1905], "sse3": 1756, "323": 1756, "88131e": 1756, "324": 1756, "is_train": [1757, 1935], "interop": 1758, "intraop": 1759, "edgeitem": 1760, "linewidth": 1760, "sci_mod": 1760, "shamelessli": 1760, "repr": [1760, 1871], "sane": 1760, "_tensor_str": 1760, "_formatt": 1760, "12345": 1760, "1235": 1760, "excess": [1762, 1946], "24j": 1763, "8000j": 1763, "9600j": 1763, "4472": [1763, 1902], "8944j": 1763, "expit": [1764, 1928], "2222": [1766, 1827], "4444": 1766, "8889": 1766, "4901e": 1767, "4000e": 1767, "0077e": 1767, "4923e": 1767, "waveform": [1768, 1769, 1770], "1564": 1768, "4540": 1768, "8910": 1768, "9877": 1768, "1423": [1768, 1791], "4154": 1768, "8413": [1768, 1928], "0302": 1769, "2231": 1769, "6065": 1769, "5400e": 1769, "3546e": 1769, "4788e": 1769, "8316e": 1769, "02": [1769, 1770, 1775], "3534e": 1769, "0065e": [1770, 1775], "1875e": [1770, 1775], "3937e": [1770, 1775], "2465e": [1770, 1775], "8250e": [1770, 1775], "9858e": [1770, 1775], "1365e": [1770, 1775], "8659e": [1770, 1775], "4658e": [1770, 1775], "3941e": [1770, 1775], "5400": 1771, "3376": 1771, "4200": 1771, "9136": 1771, "wit": [1771, 1868], "0955": [1771, 1772, 1774], "3455": [1771, 1772, 1774], "6545": [1771, 1772, 1774], "9045": [1771, 1772, 1774], "0800": [1772, 1773], "1876": [1772, 1773], "4601": [1772, 1773], "7700": [1772, 1773], "9723": [1772, 1773], "1679": 1773, "3979": 1773, "6821": 1773, "9121": 1773, "1170": 1774, "9698": 1774, "36358": 1776, "z_n": [1776, 1891], "48917": 1776, "2z_n": 1776, "13659": 1776, "3z_n": 1776, "01064": 1776, "4z_n": 1776, "\u03c0": 1776, "sidelob": 1776, "transact": 1776, "acoust": 1776, "speech": 1776, "84": 1776, "91": 1776, "feb": 1776, "1981": 1776, "tassp": 1776, "1163506": 1776, "heinzel": 1776, "spectrum": [1776, 1905], "dft": 1776, "februari": 1776, "holomet": 1776, "fnal": 1776, "gov": 1776, "gh_fft": 1776, "nutal": 1776, "general_ham": 1776, "6280e": 1776, "2698e": 1776, "1052e": 1776, "9826e": 1776, "5461": [1778, 1902], "1347": 1778, "7266": 1778, "2746": 1778, "5194": 1778, "1343": 1778, "4032": 1778, "2711": 1778, "5380": 1780, "8632": 1780, "1265": 1780, "9399": 1780, "5644": 1780, "9744": 1780, "1268": 1780, "2162": 1785, "6719": 1785, "3332": 1785, "5793": [1785, 1902], "0061": 1785, "6058": 1785, "9497": 1785, "5071": 1785, "3343": 1785, "9553": 1785, "0960": 1785, "derivati": [1786, 1790], "to_sparse_coo": 1787, "sparsr": 1788, "run_my_model": 1788, "prev_checks_en": 1788, "check_invari": [1788, 1795, 1796, 1797, 1798, 1799, 1800, 1927], "sparse_csr_tensor": [1788, 1869, 1913, 1927], "z_": [1790, 1891, 1928], "bigoplus_": 1790, "kj": 1790, "bigoplu": 1790, "sparseaddmmbackward0": 1790, "y1": [1790, 1910, 1941], "sparsemmreduceimplbackward0": 1790, "y2": [1790, 1910, 1941], "sparsiti": [1791, 1867, 1878, 1889], "spy": 1791, "2847": 1791, "7805": 1791, "1900": [1791, 1906], "to_dens": [1791, 1793, 1869, 1913, 1927], "3903": 1791, "x_k": 1792, "6438": 1794, "6467": 1794, "3411": 1794, "0918": 1794, "5348": 1794, "0634": 1794, "0494": 1794, "0646": 1794, "1844": 1794, "1276": 1794, "1874": 1794, "6334": 1794, "9682": 1794, "5340": 1794, "7483": 1794, "4512": 1794, "4073": 1794, "8901": 1794, "3183": 1794, "7539": 1794, "6596": 1794, "ncolblock": [1795, 1927], "array_list": [1795, 1796, 1797, 1799, 1800], "nrow": [1795, 1796, 1797, 1799, 1800, 1927], "ncol": [1795, 1796, 1797, 1799, 1800, 1927], "denses": [1795, 1796, 1797, 1799, 1800, 1927], "check_sparse_tensor_invari": [1795, 1796, 1797, 1798, 1799, 1800, 1927], "nrowblock": [1796, 1927], "compressed_indic": [1797, 1869, 1927], "plain_indic": [1797, 1869, 1927], "compressed_dim_s": [1797, 1927], "is_coalesc": [1798, 1869, 1913, 1927, 1946], "rdinat": 1798, "prerequisit": [1798, 1895], "coalescion": 1798, "_indic": [1798, 1913, 1927, 1946], "0755": [1802, 1803], "0226": [1802, 1803], "0831": [1802, 1803], "4806": [1802, 1803], "0112": 1802, "2883": 1802, "6933": 1802, "0457": 1803, "0069": 1803, "2310": 1803, "2959": [1807, 1808, 1854, 1855], "8101": [1807, 1808, 1854, 1855], "5027": [1807, 1808, 1854, 1855], "3270": [1807, 1808, 1854, 1855], "5905": [1807, 1808, 1854, 1855], "6538": [1807, 1808, 1854, 1855, 1902], "3330": [1807, 1808, 1854, 1855], "5596": [1807, 1808, 1854, 1855], "6548": [1807, 1808, 1854, 1855], "1264": [1807, 1808, 1854, 1855], "5080": [1807, 1808, 1813, 1854, 1855, 1902], "6420": [1807, 1808, 1854, 1855], "1992": [1807, 1808, 1854, 1855], "0311": [1807, 1928], "7477": 1807, "2204": 1807, "9087": 1807, "2620": 1808, "0028": [1808, 1833], "0957": 1808, "6038": 1808, "0645": [1808, 1855], "4485": [1808, 1855], "8707": [1808, 1855], "0665": [1808, 1855], "taper": 1809, "librosa": 1809, "omega": 1809, "win": [1809, 1891], "_fft": [1809, 1869], "dimnsion": 1809, "1133": 1812, "2958": 1812, "5475": 1812, "0569": 1812, "0737": 1812, "3429": 1812, "9138": 1812, "9337": 1812, "6864": [1812, 1837], "1132": 1812, "7892": 1812, "1003": 1812, "5688": 1812, "3637": 1812, "9906": 1812, "5197": 1812, "4598": 1812, "3708": 1812, "6217": 1812, "435": 1812, "1335": 1812, "3135": 1812, "gesdd": 1813, "conquer": 1813, "gesvdjbatch": 1813, "fortran": 1813, "\u00b9": 1813, "2364": 1813, "7752": 1813, "7201": 1813, "7394": 1813, "0504": 1813, "3371": 1813, "5296": 1813, "3550": 1813, "5569": 1813, "2445": 1813, "1414": 1813, "4027": 1813, "0287": 1813, "5434": 1813, "1946": 1813, "8833": 1813, "3679": 1813, "4296": 1813, "2890": 1813, "6604": 1813, "2717": 1813, "2618": 1813, "4234": 1813, "2481": 1813, "4733": 1813, "3289": [1813, 1907], "0315": 1813, "7806": 1813, "0199": 1813, "8766": 1813, "4809": 1813, "4054": 1813, "7600": 1813, "8611": 1813, "2594": 1813, "4373": 1813, "6531e": 1813, "a_big": 1813, "6503e": 1813, "swapax": [1816, 1869, 1913, 1931], "symint": [1817, 1818, 1819, 1820, 1821, 1935, 1945, 1951], "symfloat": [1817, 1818, 1935, 1944], "symbool": [1821, 1935, 1944], "1995": 1822, "4608": 1822, "7702": 1822, "4875": 1822, "9158": 1822, "5872": 1822, "6929": 1822, "6932": 1822, "take_along_axi": [1824, 1897], "max_idx": 1824, "sorted_idx": 1824, "2027": 1825, "7687": 1825, "4412": 1825, "3856": 1825, "5930": 1825, "9859": 1825, "4722": 1825, "3366": 1825, "8986": 1826, "7279": 1826, "1745": [1826, 1896], "7156": 1826, "8257": 1826, "2553": 1826, "11111": 1827, "222222": 1827, "3333333": 1827, "1111": 1827, "array_split": 1828, "i_d": 1829, "k_": 1829, "4532": 1829, "4874": 1829, "5018": 1829, "4796": [1829, 1906], "5162": 1829, "5306": 1829, "2922": 1829, "7556": 1829, "2741": 1829, "3161": 1829, "0704": 1829, "0187": 1829, "4079": 1829, "3126": 1829, "8744": 1829, "8223": 1829, "9445": 1829, "4117": 1829, "7780": 1829, "7193": 1829, "4867": 1829, "3204": 1829, "5513": 1829, "4737": [1829, 1858], "2850": 1829, "2573": 1829, "5997": 1829, "sparsebsr": 1833, "sparsecsc": 1833, "sparsebsc": 1833, "9893": 1833, "5809": 1833, "1669": 1833, "7299": 1833, "4942": [1833, 1902], "y_0": 1834, "x_diff": 1834, "y_diff": 1834, "riemann": [1834, 1891, 1899, 1928], "badli": 1836, "cloned_coeffici": 1836, "1527": 1836, "0753": 1836, "7986": 1836, "0210": 1836, "3513": 1836, "5492": 1836, "7403": 1836, "0243": 1836, "7841": 1836, "9046": 1836, "5405": 1836, "9320": 1836, "9270": 1836, "2826": 1836, "lbrace": [1837, 1838, 1839, 1840], "rbrace": [1837, 1838, 1839, 1840], "0813": 1837, "8619": 1837, "7105": 1837, "0935": 1837, "1380": 1837, "3409": [1837, 1906], "2219": 1837, "5653": 1837, "2521": 1837, "2345": 1837, "2544": 1837, "3461": 1837, "4785": 1837, "4477": 1837, "6049": 1837, "6368": 1837, "8775": 1837, "7145": 1837, "1502": 1837, "2716": 1837, "1243": 1837, "5413": 1837, "3615": 1837, "0614": 1837, "7344": 1837, "3164": 1837, "7648": 1837, "4024": 1837, "0978": 1837, "col": [1838, 1840, 1869], "2309": 1839, "5207": 1839, "0049": 1839, "2072": 1839, "0680": 1839, "6602": 1839, "3480": 1839, "5211": 1839, "4573": 1839, "5876": 1839, "0794": [1839, 1928], "8373": 1839, "6654": 1839, "2604": 1839, "5235": 1839, "2447": 1839, "9556": 1839, "2919": 1839, "1768": 1839, "4333": 1839, "3146": [1839, 1902], "6576": 1839, "0432": 1839, "9348": [1839, 1928], "4410": 1839, "9888": 1839, "3337": 1839, "6556": 1839, "4798": 1839, "5466": 1842, "8008": 1842, "9079": 1842, "unique_consecut": [1845, 1869, 1913], "inverse_indic": [1845, 1846], "a_unique_dim0": 1845, "warn_onli": 1848, "alon": [1848, 1870, 1915], "put_": [1848, 1869], "index_add": [1848, 1869, 1913], "index_select": [1848, 1869, 1913, 1927, 1951], "empty_strid": [1848, 1869, 1873, 1913, 1944, 1951], "empty_permut": [1848, 1869, 1913, 1951], "fractionalmaxpool2d": 1848, "fractionalmaxpool3d": 1848, "reflectionpad1d": 1848, "reflectionpad3d": 1848, "replicationpad1d": 1848, "replicationpad3d": 1848, "histc": [1848, 1869, 1913], "bincount": [1848, 1869, 1913], "kthvalu": [1848, 1869, 1884, 1913], "cublasapi_reproduc": [1848, 1906], "avg_pool3d_backward_cuda": 1848, "for_tensor": 1849, "for_modul": 1849, "for_storag": 1849, "unsupported_dtyp": 1849, "privateuse1": [1849, 1851, 1922], "rename_privateuse1_backend": [1849, 1867], "is_foo": 1849, "frames_to_skip": 1850, "maximum_number_of_fram": 1850, "_register_device_modul": 1851, "backendmodul": 1851, "get_amp_supported_dtyp": 1851, "is_autocast_en": [1851, 1869, 1913], "get_autocast_dtyp": 1851, "set_autocast_dtyp": 1851, "set_autocast_en": 1851, "_is_in_bad_fork": 1851, "bad_fork": 1851, "get_rng_stat": [1851, 1867, 1922], "set_rng_stat": [1851, 1867, 1922], "extend_dispatch": 1851, "pytorch_open_registration_exampl": 1851, "nicer": 1852, "alexandr": 1853, "theophil": 1853, "0631": 1854, "5590": 1854, "4893": 1854, "8258": 1854, "5926": 1855, "0056": 1855, "3646": 1855, "vecdot": 1856, "mi": [1857, 1858], "6116": 1857, "5772": [1857, 1928], "4606": 1857, "9120": 1857, "0786": 1857, "7497": 1857, "6623": 1857, "5772j": 1857, "9120j": 1857, "7497j": 1857, "6623j": 1857, "3839j": 1858, "2098": 1858, "6699j": 1858, "3470": 1858, "9451j": 1858, "5174": 1858, "3136j": 1858, "6699": 1858, "9451": 1858, "3136": 1858, "vertic": [1860, 1861, 1914, 1916, 1932, 1946], "atleast_2d": [1861, 1869, 1913], "3139": 1862, "3898": 1862, "1657": 1862, "0383": 1862, "8785": 1862, "1089": 1862, "hubconf": 1866, "entrypoint_nam": 1866, "_resnet18": 1866, "smoother": [1866, 1878], "underscor": [1866, 1885, 1923, 1933], "load_state_dict_from_url": [1866, 1880], "2gb": 1866, "relative_path_to_checkpoint": 1866, "pth": [1866, 1880, 1907], "dirnam": 1866, "__file__": [1866, 1908, 1915, 1948], "5c106cde": [1866, 1880], "force_reload": 1866, "skip_valid": 1866, "trust_repo": 1866, "repo_own": 1866, "repo_nam": 1866, "ref": [1866, 1927, 1944, 1949, 1956], "torchhub": 1866, "owner": [1866, 1896, 1913, 1923, 1924], "github_token": 1866, "repo_or_dir": 1866, "mute": 1866, "resnet50": [1866, 1932, 1948], "resnet50_weight": 1866, "imagenet1k_v1": 1866, "download_url_to_fil": 1866, "hash_prefix": 1866, "temporary_fil": 1866, "sha256": [1866, 1880], "s3": [1866, 1880, 1908], "amazonaw": [1866, 1880, 1908], "model_dir": [1866, 1880], "check_hash": [1866, 1880], "hub_dir": [1866, 1880], "get_dir": [1866, 1880], "ext": [1866, 1880], "eight": [1866, 1880], "hash": [1866, 1869, 1871, 1880, 1913], "succinct": 1866, "set_dir": 1866, "path_to_hub_dir": 1866, "torch_hom": 1866, "xdg_cache_hom": [1866, 1894], "reiniti": 1866, "path_importer_cach": 1866, "subpackag": [1866, 1915], "offend": [1866, 1947], "classifi": [1867, 1871, 1912, 1914, 1918, 1932], "pypi": 1867, "conda": [1867, 1908], "hip": 1867, "javadoc": 1867, "uninitializedbuff": 1867, "anomali": 1867, "fallthrough_kernel": [1867, 1875], "can_device_access_p": 1867, "current_blas_handl": 1867, "device_of": 1867, "get_arch_list": 1867, "get_device_cap": 1867, "get_device_nam": 1867, "get_device_properti": 1867, "get_gencode_flag": 1867, "get_sync_debug_mod": 1867, "ipc_collect": 1867, "memory_usag": 1867, "set_stream": 1867, "set_sync_debug_mod": 1867, "power_draw": 1867, "clock_rat": 1867, "outofmemoryerror": 1867, "jiter": 1867, "sanit": 1867, "_record_memory_histori": [1867, 1958], "_snapshot": [1867, 1958], "_dump_snapshot": [1867, 1958], "empty_cach": [1867, 1894, 1900, 1958], "set_per_process_memory_fract": 1867, "current_allocated_memori": 1867, "driver_allocated_memori": 1867, "openmp": [1867, 1893, 1908, 1943], "xeon": [1867, 1893, 1953], "pathwis": 1867, "exponentialfamili": 1867, "binomi": [1867, 1869, 1913], "chi2": 1867, "continuousbernoulli": 1867, "dirichlet": 1867, "fishersnedecor": 1867, "halfcauchi": 1867, "halfnorm": 1867, "kumaraswami": 1867, "lkjcholeski": 1867, "laplac": 1867, "lognorm": 1867, "lowrankmultivariatenorm": 1867, "mixturesamefamili": 1867, "multinomi": [1867, 1869, 1913], "multivariatenorm": 1867, "negativebinomi": 1867, "onehotcategor": 1867, "relaxedbernoulli": 1867, "logitrelaxedbernoulli": 1867, "relaxedonehotcategor": 1867, "studentt": 1867, "transformeddistribut": 1867, "vonmis": 1867, "weibul": 1867, "wishart": 1867, "hub": [1867, 1880, 1948], "solver": [1867, 1905], "misc": 1867, "normal_": [1867, 1869, 1884, 1889, 1894, 1935], "constant_": [1867, 1889], "ones_": [1867, 1889], "zeros_": [1867, 1889], "eye_": [1867, 1873, 1889], "dirac_": [1867, 1873, 1889], "xavier_uniform_": [1867, 1889], "xavier_normal_": [1867, 1889, 1902], "kaiming_uniform_": [1867, 1889], "trunc_normal_": [1867, 1889], "orthogonal_": [1867, 1873, 1889, 1902], "sparse_": [1867, 1889], "swa": 1867, "ema": 1867, "powersgd": 1867, "remotemodul": 1867, "fork_rng": [1867, 1922], "doublestorag": [1867, 1929], "floatstorag": [1867, 1929], "halfstorag": [1867, 1929], "longstorag": [1867, 1929], "intstorag": [1867, 1929], "shortstorag": [1867, 1929], "charstorag": [1867, 1929], "bytestorag": [1867, 1929], "boolstorag": [1867, 1929], "bfloat16storag": [1867, 1929], "complexdoublestorag": [1867, 1929], "complexfloatstorag": [1867, 1929], "quint8storag": [1867, 1929], "qint8storag": [1867, 1929], "qint32storag": [1867, 1929], "quint4x2storag": [1867, 1929], "quint2x4storag": [1867, 1929], "make_tensor": [1867, 1934], "assert_allclos": [1867, 1934], "generate_methods_for_privateuse1_backend": 1867, "get_cpp_backtrac": 1867, "set_modul": 1867, "sampler": 1867, "mobile_optim": 1867, "optimize_for_mobil": [1867, 1879], "model_zoo": 1867, "load_url": [1867, 1880], "tensorboard": [1867, 1881, 1917], "summarywrit": [1867, 1881, 1932], "iinfo": 1867, "__config__": [1867, 1893], "_log": [1867, 1871, 1956], "set_log": [1867, 1877, 1956], "torchdata": 1867, "torchserv": 1867, "torchtext": 1867, "xla": [1867, 1944], "disadvantag": 1868, "gentl": 1868, "beam": 1868, "traced_bar": 1868, "myscriptmodul": 1868, "103": [1868, 1870], "939": [1868, 1870], "116": [1868, 1870], "779": [1868, 1870], "123": [1868, 1870], "my_script_modul": [1868, 1870], "ins": 1868, "pytorch_jit": 1868, "traced_fn": 1868, "disable_jit_exampl": 1868, "printer": 1868, "rv": 1868, "rv0": 1868, "rv1": 1868, "ssa": 1868, "block0": 1868, "block1": 1868, "loop_in_traced_fn": 1868, "input_tupl": 1868, "fill_row_zero": 1868, "tracerwarn": 1868, "nr": 1868, "09115803241729736": 1868, "6782537698745728": 1868, "cpu_model": 1868, "gpu_model": 1868, "sample_input_cpu": 1868, "sample_input_gpu": 1868, "traced_cpu": 1868, "traced_gpu": 1868, "use_gpu": 1868, "__constants__": [1868, 1870], "my_module_inst": 1868, "redeclar": 1868, "nn_module_inst": 1868, "my_scripted_model": 1868, "pep": [1868, 1870, 1912, 1943], "526": [1868, 1870, 1912], "script_method": 1868, "implicitly_compiled_method": 1868, "another_forward": 1868, "unused_method": 1868, "some_fn": 1868, "ever": [1868, 1929, 1958], "some_fn2": 1868, "some_fn3": 1868, "some_fn4": 1868, "my_dict": [1868, 1870], "my_int": [1868, 1870], "my_const": 1868, "make_dict": 1868, "nnc": 1868, "nvfuser": 1868, "__and__": 1869, "__iand__": 1869, "__ilshift__": 1869, "__ior__": 1869, "__irshift__": 1869, "__ixor__": 1869, "__lshift__": 1869, "__or__": 1869, "__rshift__": 1869, "__xor__": 1869, "absolute_": 1869, "acos_": [1869, 1884], "addbmm_": 1869, "addcdiv_": 1869, "addcmul_": 1869, "addmv_": [1869, 1884], "addr_": 1869, "align_a": [1869, 1884, 1885, 1913], "align_to": [1869, 1884, 1885, 1913], "ellipsis_idx": 1869, "aminmax": [1869, 1913], "arccos_": 1869, "arccosh_": 1869, "arcsin_": [1869, 1927], "arcsinh_": 1869, "arctan2_": 1869, "arctan_": 1869, "arctanh_": 1869, "argwher": [1869, 1913], "as_strided_": 1869, "as_strided_scatt": [1869, 1913, 1951], "asin_": [1869, 1884, 1927], "asinh_": [1869, 1884], "atan_": [1869, 1884], "atanh_": [1869, 1884], "baddbmm_": 1869, "bernoulli_": [1869, 1884, 1935], "bitwise_and_": 1869, "bitwise_left_shift_": 1869, "bitwise_not_": [1869, 1884], "bitwise_or_": 1869, "bitwise_right_shift_": 1869, "bitwise_xor_": 1869, "broadcast_to": [1869, 1913], "cauchy_": [1869, 1884, 1935], "ceil_": [1869, 1884], "clamp_max": [1869, 1913], "clamp_max_": 1869, "clamp_min": [1869, 1913], "clamp_min_": 1869, "clip_": 1869, "conj_physical_": 1869, "copysign_": 1869, "cos_": [1869, 1884, 1891], "cosh_": [1869, 1884], "count_nonzero": [1869, 1913], "cummax": [1869, 1913], "cummin": [1869, 1913], "cumprod_": 1869, "cumsum_": 1869, "deg2rad": [1869, 1884, 1913, 1927], "deg2rad_": [1869, 1884, 1927], "outdim": 1869, "diagonal_scatt": [1869, 1913], "digamma_": [1869, 1884], "div_": [1869, 1884, 1927], "divide_": 1869, "dsplit": [1869, 1913], "eq_": 1869, "erf_": [1869, 1884], "erfc_": [1869, 1884], "erfinv_": [1869, 1884], "exp2": [1869, 1913, 1928, 1932, 1951], "exp2_": 1869, "exp_": [1869, 1884], "expm1_": [1869, 1884], "exponential_": [1869, 1884, 1935], "fill_diagonal_": 1869, "fix_": 1869, "fliplr": [1869, 1913], "flipud": [1869, 1913], "float_power_": 1869, "floor_": [1869, 1884], "floor_divide_": [1869, 1927], "fmax": [1869, 1913, 1951], "fmin": [1869, 1913, 1951], "fmod_": 1869, "frac_": [1869, 1884], "frexp": [1869, 1913], "gcd_": 1869, "ge_": 1869, "geometric_": [1869, 1935], "ger": [1869, 1913], "get_devic": [1869, 1884, 1913, 1927, 1929, 1930], "greater_": 1869, "greater_equal_": 1869, "gt_": 1869, "hardshrink": [1869, 1913], "heavisid": [1869, 1913], "heaviside_": 1869, "hsplit": [1869, 1913, 1931], "hypot_": 1869, "i0_": 1869, "igamma_": 1869, "igammac_": 1869, "index_fil": [1869, 1884, 1913], "index_reduc": [1869, 1913], "is_complex": [1869, 1910, 1913, 1927, 1930, 1946], "is_contigu": [1869, 1884, 1913, 1931, 1946], "is_floating_point": [1869, 1884, 1913, 1927, 1930, 1946], "is_infer": [1869, 1913, 1946], "is_same_s": [1869, 1913, 1927, 1946], "is_set_to": [1869, 1913, 1946], "is_sign": [1869, 1884, 1913, 1927, 1946], "isclos": [1869, 1913], "isfinit": [1869, 1905, 1913, 1951], "isinf": [1869, 1913, 1927, 1951], "isneginf": [1869, 1913, 1927], "isposinf": [1869, 1913, 1927], "isreal": [1869, 1913], "istft": [1869, 1913], "kron": [1869, 1913], "lcm_": 1869, "ldexp_": 1869, "le_": 1869, "lerp_": 1869, "less_": 1869, "less_equal_": 1869, "lgamma_": 1869, "log10_": [1869, 1884], "log1p_": [1869, 1884, 1927], "log2_": [1869, 1884], "log_normal_": [1869, 1884, 1935], "logaddexp2": [1869, 1913], "logcumsumexp": [1869, 1913], "logical_and_": 1869, "logical_not_": [1869, 1884], "logical_or_": 1869, "logical_xor_": 1869, "logit_": 1869, "lt_": 1869, "masked_fil": [1869, 1884, 1886, 1913, 1927], "masked_scatt": [1869, 1913], "masked_select": [1869, 1884, 1913], "matrix_pow": [1869, 1913], "moveaxi": [1869, 1913], "msort": [1869, 1913], "multiply_": 1869, "mvlgamma_": 1869, "nan_to_num_": 1869, "nanmedian": [1869, 1884, 1913], "nansum": [1869, 1913], "narrow_copi": [1869, 1913, 1927], "ne_": 1869, "neg_": [1869, 1884, 1927], "negative_": [1869, 1927], "new_empty_strid": [1869, 1913], "new_ful": [1869, 1894, 1913], "new_on": [1869, 1913], "nextafter_": 1869, "nonzero_stat": [1869, 1913], "not_equal_": 1869, "output_nr": [1869, 1913], "polygamma_": 1869, "pow_": [1869, 1884], "q_per_channel_scal": [1869, 1913], "q_per_channel_zero_point": [1869, 1913], "q_scale": [1869, 1913], "q_zero_point": [1869, 1913], "rad2deg": [1869, 1884, 1913, 1927], "rad2deg_": [1869, 1884, 1927], "reciprocal_": [1869, 1884], "record_stream": [1869, 1894, 1913], "refine_nam": [1869, 1884, 1885, 1913], "relu_": [1869, 1920], "remainder_": 1869, "rename_": [1869, 1884, 1885], "renorm_": 1869, "reshape_a": [1869, 1886, 1913, 1931], "resize_a": [1869, 1913], "the_templ": 1869, "resize_as_sparse_": 1869, "retains_grad": [1869, 1913], "roll": [1869, 1913, 1951], "rot90": [1869, 1913], "round_": [1869, 1884], "rsqrt_": [1869, 1884], "select_scatt": [1869, 1913, 1951], "sgn_": [1869, 1884], "sigmoid_": [1869, 1884, 1920], "sign_": [1869, 1884], "sinc_": 1869, "sinh_": [1869, 1884], "slice_scatt": [1869, 1913, 1951], "smm": [1869, 1913, 1927], "sparse_resize_": 1869, "sparse_resize_and_clear_": 1869, "split_with_s": [1869, 1913, 1931, 1951], "sqrt_": [1869, 1884], "square_": 1869, "squeeze_": [1869, 1920], "sspaddmm": [1869, 1913, 1927], "sub_": [1869, 1884, 1927], "subtract_": 1869, "sum_to_s": [1869, 1913], "swapaxes_": 1869, "swapdim": [1869, 1913, 1931], "swapdims_": 1869, "take_along_dim": [1869, 1913], "tan_": [1869, 1884], "tanh_": [1869, 1884, 1920], "tensor_indices_or_sect": 1869, "to_mkldnn": [1869, 1913], "to_padded_tensor": [1869, 1886, 1913], "to_sparse_bsc": [1869, 1913], "to_sparse_bsr": [1869, 1913, 1927], "to_sparse_csc": [1869, 1913, 1927], "true_divide_": 1869, "trunc_": [1869, 1884], "type_a": [1869, 1884, 1913], "out0": [1869, 1907], "unsafe_chunk": [1869, 1913], "unsafe_split": [1869, 1913], "unsafe_split_with_s": [1869, 1913], "unsqueeze_": [1869, 1920], "view_a": [1869, 1913, 1931], "vsplit": [1869, 1913, 1931], "xlogy_": 1869, "adaptive_avg_pool2d": [1869, 1896, 1913, 1920], "adaptive_max_pool1d_with_indic": [1869, 1896], "adaptive_max_pool2d_with_indic": 1869, "adaptive_max_pool3d_with_indic": 1869, "alpha_dropout": [1869, 1913], "assert_int_or_pair": 1869, "arg_nam": 1869, "binary_cross_entropi": [1869, 1913], "binary_cross_entropy_with_logit": [1869, 1913], "celu": [1869, 1913], "dropout2d": 1869, "dropout3d": 1869, "feature_alpha_dropout": [1869, 1913], "fractional_max_pool2d_with_indic": 1869, "fractional_max_pool3d_with_indic": 1869, "gaussian_nll_loss": 1869, "glu": [1869, 1913], "gumbel_softmax": 1869, "hardsigmoid": [1869, 1913, 1920], "hardswish": [1869, 1913, 1920], "huber_loss": [1869, 1913], "instance_norm": [1869, 1913, 1920], "local_response_norm": 1869, "lp_pool1d": 1869, "lp_pool2d": 1869, "max_pool1d_with_indic": [1869, 1913], "max_pool3d_with_indic": [1869, 1913, 1951], "mish": [1869, 1913], "multi_head_attention_forward": 1869, "embed_dim_to_check": 1869, "in_proj_weight": 1869, "in_proj_bia": 1869, "bias_k": 1869, "bias_v": 1869, "out_proj_weight": 1869, "out_proj_bia": 1869, "use_separate_proj_weight": 1869, "q_proj_weight": 1869, "k_proj_weight": 1869, "v_proj_weight": 1869, "static_k": 1869, "static_v": 1869, "multilabel_soft_margin_loss": 1869, "relu6": [1869, 1913, 1920], "silu": [1869, 1886, 1913], "softsign": 1869, "tanhshrink": 1869, "adaptive_avg_pool1d": [1869, 1896, 1913, 1920, 1951], "adaptive_max_pool1d": [1869, 1896, 1913], "affine_grid_gener": [1869, 1913], "alias_copi": [1869, 1913], "align_tensor": [1869, 1913], "alpha_dropout_": 1869, "as_strided_copi": [1869, 1913], "atleast_1d": [1869, 1913], "avg_pool1d": [1869, 1913, 1920, 1951], "bartlett_window": [1869, 1873, 1913], "cudnn_en": 1869, "batch_norm_backward_elemt": 1869, "invstd": 1869, "sum_di": 1869, "sum_dy_xmu": 1869, "batch_norm_backward_reduc": 1869, "input_g": 1869, "bias_g": 1869, "out3": 1869, "batch_norm_elemt": [1869, 1913], "batch_norm_gather_stat": [1869, 1913], "batch_norm_gather_stats_with_count": [1869, 1913], "batch_norm_stat": [1869, 1913], "batch_norm_update_stat": [1869, 1913], "blackman_window": [1869, 1873, 1913], "block_diag": [1869, 1913], "can_cast": [1869, 1913], "ccol_indices_copi": [1869, 1913], "celu_": 1869, "choose_qparams_optim": [1869, 1913], "n_bin": 1869, "bit_width": 1869, "col_indices_copi": [1869, 1913], "column_stack": [1869, 1913], "constant_pad_nd": [1869, 1913, 1951], "conv_tbc": [1869, 1913], "crow_indices_copi": [1869, 1913], "cudnn_affine_grid_gener": [1869, 1913], "cudnn_batch_norm": [1869, 1913], "exponential_average_factor": 1869, "cudnn_convolut": [1869, 1913], "cudnn_convolution_add_relu": [1869, 1913], "cudnn_convolution_relu": [1869, 1913], "cudnn_convolution_transpos": [1869, 1913], "cudnn_grid_sampl": [1869, 1913], "cudnn_is_accept": [1869, 1913], "cumulative_trapezoid": [1869, 1913], "detach_copi": [1869, 1913, 1955], "diagonal_copi": [1869, 1913], "dropout_": [1869, 1879], "embedding_renorm_": 1869, "physical_layout": [1869, 1951], "empty_quant": [1869, 1913], "anyenumtyp": 1869, "expand_copi": [1869, 1913], "fake_quantize_per_channel_affin": [1869, 1913], "fbgemm_linear_fp16_weight": [1869, 1913], "packed_weight": 1869, "fbgemm_linear_fp16_weight_fp32_activ": [1869, 1913], "fbgemm_linear_int8_weight": [1869, 1913], "col_offset": 1869, "weight_scal": 1869, "weight_zero_point": 1869, "fbgemm_linear_int8_weight_fp32_activ": [1869, 1913], "fbgemm_linear_quantize_weight": [1869, 1913], "fbgemm_pack_gemm_matrix_fp16": [1869, 1913], "fbgemm_pack_quantized_matrix": [1869, 1913], "feature_alpha_dropout_": 1869, "feature_dropout": [1869, 1913], "feature_dropout_": 1869, "frobenius_norm": [1869, 1913], "from_fil": [1869, 1913, 1929], "fused_moving_avg_obs_fake_qu": [1869, 1913], "observer_on": 1869, "fake_quant_on": 1869, "running_min": 1869, "running_max": 1869, "per_row_fake_qu": 1869, "symmetric_qu": 1869, "interpolation_mod": [1869, 1951], "has_bias": 1869, "gru_cel": [1869, 1913], "w_ih": 1869, "w_hh": 1869, "hamming_window": [1869, 1873, 1913], "histogramdd": [1869, 1913], "hspmm": [1869, 1913, 1927], "indices_copi": [1869, 1913], "is_autocast_cpu_en": [1869, 1913], "is_grad_en": [1869, 1913], "is_vulkan_avail": [1869, 1913], "isin": [1869, 1913], "kaiser_window": [1869, 1913], "lstm_cell": [1869, 1913], "meshgrid": [1869, 1913], "miopen_batch_norm": [1869, 1913], "miopen_convolut": [1869, 1913], "miopen_convolution_add_relu": [1869, 1913], "miopen_convolution_relu": [1869, 1913], "miopen_convolution_transpos": [1869, 1913], "miopen_depthwise_convolut": [1869, 1913], "miopen_rnn": [1869, 1913], "weight_stride0": 1869, "dropout_st": 1869, "out4": 1869, "mkldnn_adaptive_avg_pool2d": [1869, 1913], "mkldnn_convolut": [1869, 1913], "mkldnn_linear_backward_weight": 1869, "bias_defin": 1869, "mkldnn_max_pool2d": [1869, 1913], "mkldnn_max_pool3d": [1869, 1913], "mkldnn_rnn_layer": [1869, 1913], "weight0": 1869, "weight1": 1869, "weight2": 1869, "weight3": 1869, "hx_": 1869, "cx_": 1869, "native_batch_norm": [1869, 1913], "save_mean": 1869, "save_invstd": 1869, "native_channel_shuffl": [1869, 1913], "native_dropout": [1869, 1913, 1951], "native_group_norm": [1869, 1913, 1951], "hxw": [1869, 1951], "native_layer_norm": [1869, 1913, 1951], "native_norm": [1869, 1913, 1927], "norm_except_dim": [1869, 1913], "nuclear_norm": [1869, 1913], "pairwise_dist": [1869, 1913], "permute_copi": [1869, 1913], "promote_typ": [1869, 1913, 1934], "quantize_per_channel": [1869, 1913, 1918], "quantize_per_tensor_dynam": [1869, 1913, 1918], "quantized_batch_norm": [1869, 1913], "quantized_gru_cel": [1869, 1913], "packed_ih": 1869, "packed_hh": 1869, "col_offsets_ih": 1869, "col_offsets_hh": 1869, "scale_ih": 1869, "scale_hh": 1869, "zero_point_ih": 1869, "zero_point_hh": 1869, "quantized_lstm_cel": [1869, 1913], "quantized_max_pool1d": [1869, 1913], "quantized_max_pool2d": [1869, 1913], "quantized_max_pool3d": [1869, 1913], "quantized_rnn_relu_cel": [1869, 1913], "quantized_rnn_tanh_cel": [1869, 1913], "rand_lik": [1869, 1873, 1894, 1913, 1935, 1941], "randint_lik": [1869, 1873, 1913, 1935], "randn_lik": [1869, 1873, 1886, 1913, 1935], "randperm": [1869, 1873, 1913, 1935, 1951], "result_typ": [1869, 1913], "scalar1": 1869, "scalar2": 1869, "rnn_relu": [1869, 1913], "rnn_relu_cel": [1869, 1913], "rnn_tanh": [1869, 1913], "rnn_tanh_cel": [1869, 1913], "row_indices_copi": [1869, 1913], "row_stack": [1869, 1913], "rrelu_": 1869, "rsub": [1869, 1913], "searchsort": [1869, 1913], "segment_reduc": [1869, 1913], "selu_": 1869, "slice_copi": [1869, 1913], "sparse_bsc_tensor": [1869, 1913, 1927], "sparse_bsr_tensor": [1869, 1913, 1927], "sparse_compressed_tensor": [1869, 1913, 1927], "sparse_csc_tensor": [1869, 1913, 1927], "split_copi": [1869, 1913], "split_with_sizes_copi": [1869, 1913], "squeeze_copi": [1869, 1913], "std_mean": [1869, 1884, 1913], "t_copi": [1869, 1913], "threshold_": 1869, "transpose_copi": [1869, 1913], "trapz": [1869, 1913], "tril_indic": [1869, 1873, 1913], "triu_indic": [1869, 1873, 1913], "unbind_copi": [1869, 1913], "unfold_copi": [1869, 1913], "unsqueeze_copi": [1869, 1913], "values_copi": [1869, 1913], "vander": [1869, 1873, 1913], "var_mean": [1869, 1884, 1913], "view_as_complex_copi": [1869, 1913], "view_as_real_copi": [1869, 1913], "_nn": 1869, "adaptive_max_pool2d": [1869, 1913], "avg_pool2d": [1869, 1913, 1920, 1951], "conv_depthwise3d": [1869, 1913], "cross_entropy_loss": [1869, 1913], "input_scal": 1869, "elu_": 1869, "flatten_dense_tensor": [1869, 1913], "random_sampl": 1869, "gelu_": 1869, "hardsigmoid_": [1869, 1920], "hardswish_": 1869, "hardtanh_": [1869, 1920], "leaky_relu_": 1869, "log_sigmoid": [1869, 1913], "mish_": 1869, "mkldnn_linear": [1869, 1913], "mkldnn_reorder_conv2d_weight": [1869, 1913], "mkldnn_reorder_conv3d_weight": [1869, 1913], "nll_loss2d": [1869, 1913], "nll_loss_nd": [1869, 1913], "reflection_pad3d": [1869, 1913, 1951], "relu6_": 1869, "rrelu_with_nois": [1869, 1913], "rrelu_with_noise_": 1869, "silu_": 1869, "slow_conv3d": [1869, 1913], "slow_conv_dilated2d": [1869, 1913], "slow_conv_dilated3d": [1869, 1913], "slow_conv_transpose2d": [1869, 1913], "slow_conv_transpose3d": [1869, 1913], "softshrink": [1869, 1913], "thnn_conv2d": [1869, 1913], "unflatten_dense_tensor": [1869, 1913], "upsample_bicubic2d": [1869, 1913], "scales_h": 1869, "scales_w": 1869, "upsample_bilinear2d": [1869, 1913, 1951], "upsample_linear1d": [1869, 1913], "upsample_nearest1d": [1869, 1913], "upsample_nearest2d": [1869, 1913, 1951], "upsample_nearest3d": [1869, 1913], "scales_d": 1869, "upsample_trilinear3d": [1869, 1913], "fft_fftfreq": [1869, 1913], "fft_fftshift": [1869, 1913], "fft_hfft2": [1869, 1913], "fft_hfftn": [1869, 1913], "fft_ifftshift": [1869, 1913], "fft_ihfft2": [1869, 1913], "fft_ihfftn": [1869, 1913], "fft_rfftfreq": [1869, 1913], "_linalg": 1869, "linalg_cross": [1869, 1913], "linalg_det": [1869, 1913], "linalg_diagon": [1869, 1913], "eigvec": 1869, "linalg_ldl_factor": [1869, 1913], "linalg_ldl_factor_ex": [1869, 1913], "linalg_ldl_solv": [1869, 1913], "linalg_lu": [1869, 1913], "linalg_lu_factor": [1869, 1913], "linalg_lu_factor_ex": [1869, 1913], "linalg_lu_solv": [1869, 1913], "linalg_matmul": [1869, 1913], "linalg_matrix_exp": [1869, 1913], "linalg_matrix_pow": [1869, 1913], "linalg_multi_dot": [1869, 1913], "linalg_norm": [1869, 1913], "linalg_pinv": [1869, 1913], "linalg_solve_ex": [1869, 1913], "linalg_solve_triangular": [1869, 1913], "linalg_vand": [1869, 1913], "linalg_vecdot": [1869, 1913], "linalg_vector_norm": [1869, 1913], "_nest": 1869, "nested_to_padded_tensor": [1869, 1913], "_spars": 1869, "sparse_sampled_addmm": [1869, 1913], "_special": 1869, "special_airy_ai": [1869, 1913], "special_bessel_j0": [1869, 1913], "special_bessel_j1": [1869, 1913], "special_bessel_y0": [1869, 1913], "special_bessel_y1": [1869, 1913], "special_chebyshev_polynomial_t": [1869, 1913], "special_chebyshev_polynomial_u": [1869, 1913], "special_chebyshev_polynomial_v": [1869, 1913], "special_chebyshev_polynomial_w": [1869, 1913], "special_digamma": [1869, 1913], "special_entr": [1869, 1913], "special_erf": [1869, 1913], "special_erfc": [1869, 1913], "special_erfcx": [1869, 1913], "special_erfinv": [1869, 1913], "special_exp2": [1869, 1913], "special_expit": [1869, 1913], "special_expm1": [1869, 1913], "special_gammainc": [1869, 1913], "special_gammaincc": [1869, 1913], "special_gammaln": [1869, 1913], "special_hermite_polynomial_h": [1869, 1913], "special_i0": [1869, 1913], "special_i1": [1869, 1913], "special_laguerre_polynomial_l": [1869, 1913], "special_legendre_polynomial_p": [1869, 1913], "special_log1p": [1869, 1913], "special_log_ndtr": [1869, 1913], "special_log_softmax": [1869, 1913], "special_logit": [1869, 1913], "special_logsumexp": [1869, 1913], "special_modified_bessel_i0": [1869, 1913], "special_modified_bessel_i1": [1869, 1913], "special_modified_bessel_k0": [1869, 1913], "special_modified_bessel_k1": [1869, 1913], "special_multigammaln": [1869, 1913], "special_ndtr": [1869, 1913], "special_ndtri": [1869, 1913], "special_polygamma": [1869, 1913], "special_psi": [1869, 1913], "special_round": [1869, 1913], "special_scaled_modified_bessel_k0": [1869, 1913], "special_scaled_modified_bessel_k1": [1869, 1913], "special_shifted_chebyshev_polynomial_t": [1869, 1913], "special_shifted_chebyshev_polynomial_u": [1869, 1913], "special_shifted_chebyshev_polynomial_v": [1869, 1913], "special_shifted_chebyshev_polynomial_w": [1869, 1913], "special_sinc": [1869, 1913], "special_softmax": [1869, 1913], "special_spherical_bessel_j0": [1869, 1913], "special_xlog1pi": [1869, 1913], "special_xlogi": [1869, 1913], "special_zeta": [1869, 1913], "tval": 1869, "is_accept": 1869, "rect": 1869, "magic": [1869, 1872, 1935, 1945], "__complex__": 1869, "__float__": 1869, "__int__": 1869, "hex": [1869, 1871, 1913], "__hex__": 1869, "oct": [1869, 1913], "__oct__": 1869, "divmod": [1869, 1871, 1913], "chr": [1869, 1871, 1913], "int_float": 1869, "float_int": 1869, "fab": [1869, 1913], "int_int": 1869, "float_float": 1869, "complex_complex": 1869, "int_complex": 1869, "complex_int": 1869, "float_complex": 1869, "complex_float": [1869, 1929], "scalar_scalar": 1869, "int_to_int": 1869, "modf": [1869, 1913], "mathremaind": [1869, 1913], "programm": [1870, 1871, 1918], "tn": 1870, "subtyp": 1870, "an_error": 1870, "noreturn": [1870, 1871], "classvar": [1870, 1871], "anystr": [1870, 1871], "nomin": 1870, "newtyp": [1870, 1871], "tup": [1870, 1871], "emptydatastructur": 1870, "my_list": 1870, "aug_add_x": 1870, "inc": [1870, 1871], "assign_x": [1870, 1871], "sum_pair": 1870, "red": [1870, 1871], "green": [1870, 1871, 1947], "enum_fn": [1870, 1871], "my_variable_nam": 1870, "top_level_method": 1870, "other_help": 1870, "ten": [1870, 1932], "my_submodul": 1870, "tuple_or_list": 1870, "a_tupl": 1870, "de": [1870, 1915, 1918], "is_script": [1870, 1871, 1913], "unsupported_linear_op": 1870, "is_trac": [1870, 1871], "univers": 1870, "typing_extens": 1870, "a_dict": 1870, "some_dict": 1870, "delimit": [1871, 1872], "tstype": 1871, "tsmoduletyp": 1871, "tsalltyp": 1871, "tsmetatyp": 1871, "tsprimitivetyp": 1871, "tsstructuraltyp": 1871, "tsnominaltyp": 1871, "myclass": [1871, 1915], "printabl": [1871, 1915], "sortabl": 1871, "nevertheless": [1871, 1925], "inc_first_el": 1871, "cpufloattyp": 1871, "tstupl": 1871, "tsnamedtupl": 1871, "tslist": 1871, "tsdict": 1871, "tsoption": 1871, "tsunion": 1871, "tsfutur": 1871, "tsrref": 1871, "tsawait": 1871, "await": [1871, 1872, 1923], "keytyp": 1871, "tensortyp": [1871, 1955], "_await": 1871, "mytupl": 1871, "scripted_inc": 1871, "_annotatednamedtupl": 1871, "_namedtupleannot": 1871, "_unannotatednamedtupl": 1871, "mistak": [1871, 1898, 1945], "nameerror": 1871, "remedi": 1871, "tsbuiltinclass": 1871, "tscustomclass": 1871, "tsenum": 1871, "tstensor": 1871, "subtensor": [1871, 1896, 1957], "subwithtorchfunct": 1871, "script_g": 1871, "tsclassdef": 1871, "methoddefinit": 1871, "__torch__": [1871, 1912], "class2": 1871, "tsenumdef": 1871, "tsenumtyp": 1871, "memberidentifi": 1871, "intenum": 1871, "intflag": 1871, "basecolor": 1871, "compli": [1871, 1915], "classbodydefinit": 1871, "moduleobj": 1871, "testmodul": 1871, "mymodel": [1871, 1890, 1904, 1910], "dosometh": 1871, "strateg": 1871, "congruent": 1871, "python3": 1871, "unannot": 1871, "python3annot": 1871, "paramannot": 1871, "returnannot": 1871, "funcormethodbodi": 1871, "mypyannot": 1871, "localvarannot": 1871, "setval": 1871, "moduletyp": [1871, 1915], "classidentifi": 1871, "instanceattridentifi": 1871, "offset_": 1871, "tsstructualtyp": 1871, "grammar": 1871, "chapter": [1871, 1899], "floattyp": 1871, "inttyp": 1871, "stringtyp": 1871, "devicetyp": 1871, "bullet": 1871, "tupletyp": 1871, "listtyp": 1871, "enclosur": 1871, "parenth_form": 1871, "list_displai": 1871, "dict_displai": 1871, "legal": 1871, "stringliter": 1871, "floatnumb": 1871, "expression_list": 1871, "list_comprehens": 1871, "comp_for": 1871, "target_list": 1871, "or_expr": 1871, "key_datum_list": 1871, "dict_comprehens": 1871, "key_datum": 1871, "ongo": [1871, 1912, 1921, 1923], "enclos": 1871, "datum": [1871, 1937], "attributeref": 1871, "slice_list": 1871, "slice_item": 1871, "proper_slic": 1871, "argument_list": 1871, "desugar": [1871, 1945], "u_expr": 1871, "tightli": [1871, 1902], "m_expr": 1871, "a_expr": 1871, "shift_expr": 1871, "and_expr": 1871, "xor_expr": 1871, "comp_oper": 1871, "__contains__": 1871, "or_test": 1871, "and_test": 1871, "not_test": 1871, "conditional_express": 1871, "starred_item": 1871, "expression_stmt": 1871, "starred_express": 1871, "assignment_express": 1871, "assignment_stmt": 1871, "augmented_assignment_stmt": 1871, "augtarget": 1871, "augop": 1871, "annotated_assignment_stmt": 1871, "raise_stmt": 1871, "assert_stmt": 1871, "return_stmt": 1871, "del_stmt": 1871, "pass_stmt": 1871, "print_stmt": 1871, "break_stmt": 1871, "continue_stmt": 1871, "if_stmt": 1871, "while_stmt": 1871, "for_stmt": 1871, "with_stmt": 1871, "with_item": 1871, "__enter__": 1871, "suppress": [1871, 1922], "tuple_stmt": 1871, "getattr_stmt": 1871, "hasattr_stmt": 1871, "zip_stmt": 1871, "iterable1": 1871, "iterable2": 1871, "enumerate_stmt": 1871, "add_stat_valu": 1871, "sugaredvalu": 1871, "unrecogn": 1871, "honor": 1871, "__abs__": 1871, "bytearrai": 1871, "delattr": 1871, "exec": 1871, "__index__": 1871, "isint": 1871, "issubclass": [1871, 1896], "ndigit": 1871, "__import__": [1871, 1915], "notimpl": [1871, 1872, 1896, 1945], "rpc_sync": [1871, 1913, 1923, 1924, 1925], "synonym": 1871, "_fork": [1871, 1893], "_wait": [1871, 1893], "lexic": 1872, "indent": 1872, "coroutin": 1872, "__del__": [1872, 1891], "__bytes__": 1872, "__slots__": 1872, "metaclass": 1872, "mro": 1872, "__r": 1872, "__": [1872, 1955], "bytesliter": 1872, "imagnumb": 1872, "parenthes": 1872, "ifs": 1872, "customiz": [1872, 1936, 1943], "compound": 1872, "exc_typ": 1872, "exc_valu": 1872, "adaptivelogsoftmaxwithloss": 1873, "overload_nam": [1875, 1896], "handi": [1875, 1891, 1894], "spotti": 1875, "googl": 1875, "colab": [1875, 1915, 1945], "dispatch_kei": [1875, 1943], "keynam": 1875, "alias_analysi": 1875, "conserv": [1875, 1878, 1894, 1945], "fallthrough": 1875, "div_cpu": 1875, "off_by_default": 1877, "_registr": 1877, "spammi": [1877, 1943], "compiled_autograd": 1877, "born": 1878, "citizen": 1878, "afterthought": 1878, "intuit": [1878, 1948], "alik": 1878, "grai": 1878, "systemat": 1878, "onboard": 1878, "maskedarrai": 1878, "masked_tensor": 1878, "mobil": [1879, 1918, 1946], "blocklist": [1879, 1915], "mobileoptimizertyp": 1879, "conv_bn_fus": 1879, "correspondingli": 1879, "prepack": [1879, 1913], "insert_fold_prepack_op": 1879, "arm": [1879, 1918], "remove_dropout": 1879, "hoist": 1879, "hoist_conv_packed_param": 1879, "fuse_add_relu": 1879, "vulkan": 1879, "vulkan_automatic_gpu_transf": 1879, "freeze_modul": 1879, "script_modul": 1879, "optimization_blocklist": 1879, "preserved_method": 1879, "_mobileoptimizertyp": 1879, "recursivescriptmodul": [1879, 1907], "download": [1880, 1908, 1932, 1948], "infrequ": 1881, "window_s": 1881, "max_sampl": 1881, "cap": 1881, "_monitor": 1881, "data_value_t": 1881, "eventhandlerhandl": 1881, "register_event_handl": 1881, "unregister_event_handl": 1881, "tensorboardeventhandl": 1881, "writer": [1881, 1902, 1932], "shader": [1882, 1903], "processor": 1882, "metalperformanceshad": 1882, "shared_memori": 1883, "abruptli": 1883, "get_all_sharing_strategi": 1883, "get_sharing_strategi": 1883, "set_sharing_strategi": 1883, "new_strategi": 1883, "di": [1883, 1941, 1943, 1949], "abnorm": [1883, 1904], "forev": [1883, 1895], "asap": 1883, "queue_2": 1883, "x_clone": 1883, "segfault": [1883, 1905, 1945], "shm_open": 1883, "prone": [1883, 1904, 1945], "destructor": [1883, 1925], "seriou": [1883, 1894, 1945], "torch_shm_manag": 1883, "unnot": 1883, "spawncontext": 1883, "has_nam": 1884, "is_shar": [1884, 1929, 1946], "is_sparse_csr": [1884, 1913, 1929, 1946], "is_tensor": [1884, 1927], "items": [1884, 1913], "unifies_names_from_input_tensor": 1884, "nbyte": [1884, 1913, 1929], "ndimens": 1884, "register_post_accumulate_grad_hook": [1884, 1891], "position": [1884, 1885], "unnam": [1884, 1885], "misalign": 1884, "inher": 1884, "collaps": [1884, 1913, 1951], "disappear": 1884, "img": [1885, 1932], "renamed_img": 1885, "coexist": 1885, "wildcard": [1885, 1915, 1955], "somewher": [1885, 1901, 1949], "scale_channel": 1885, "more_img": 1885, "named_tensor": 1885, "named_img": 1885, "flat_img": 1885, "named_flat_img": 1885, "unflattened_named_img": 1885, "grad_loss": 1885, "8107": 1885, "6357": 1885, "0783": 1885, "untest": 1885, "rename_map": 1885, "greedili": 1885, "unment": 1885, "49152": 1885, "datastructur": 1886, "seamless": 1886, "nested_tensor": 1886, "nt": 1886, "vein": 1886, "as_nested_tensor": 1886, "irregular": 1886, "indistinguish": 1886, "2286": 1886, "4842": 1886, "7827": 1886, "6745": [1886, 1928], "0658": 1886, "1247": 1886, "4078": 1886, "8083": 1886, "2871": 1886, "5559": 1886, "9885": 1886, "4074": 1886, "4855": 1886, "0733": 1886, "8285": 1886, "6858": 1886, "7030": 1886, "3481": 1886, "0236": 1886, "fake_grad": 1886, "6862": 1886, "1282": 1886, "1031": 1886, "0464": 1886, "3276": 1886, "9967": 1886, "0054": 1886, "8972": 1886, "9174": 1886, "4995": 1886, "8546": 1886, "7194": 1886, "2918": 1886, "1846": 1886, "8793": 1886, "5183": 1886, "6447": 1886, "8009": 1886, "8468": 1886, "9832": 1886, "5272": 1886, "pt_infer": 1886, "pt_larg": 1886, "pt_small": 1886, "bitwidth": [1887, 1902, 1918, 1927], "asymmetr": [1887, 1918, 1921], "sacrific": [1889, 1894], "dirac": 1889, "glorot": 1889, "bengio": 1889, "fan": 1889, "_in": 1889, "_out": [1889, 1899, 1951], "fan_in": 1889, "delv": 1889, "surpass": 1889, "he": 1889, "_mode": 1889, "fan_out": 1889, "redrawn": 1889, "sax": 1889, "2013": 1889, "marten": 1889, "clip_grad_value_": 1890, "optimizer2": 1890, "batch_per_it": 1890, "iters_to_accumul": 1890, "num_proc": 1890, "grad_param": 1890, "grad_norm": 1890, "scaled_grad_param": 1890, "inv_scal": 1890, "proce": [1890, 1894, 1923, 1956], "optimizer0": 1890, "optimizer1": 1890, "output0": 1890, "model0": 1890, "model1": 1890, "loss0": 1890, "loss1": 1890, "imped": 1890, "poor": [1890, 1891], "dp_model": 1890, "alter": [1890, 1896], "imported_funct": 1890, "mymm": 1890, "myfloat32func": 1890, "fwd_output": 1890, "cleaner": 1891, "mapsto": 1891, "educ": 1891, "_save": 1891, "_saved_self": 1891, "convex": 1891, "concav": 1891, "togglabl": 1891, "drawback": 1891, "0011": 1891, "dirti": 1891, "hogwild": 1891, "train_fn": 1891, "graphtask": 1891, "copyslic": 1891, "mutex": 1891, "gotten": 1891, "curiou": 1891, "\u2102": 1891, "yj": 1891, "holomorph": 1891, "fulfil": [1891, 1897, 1915, 1944, 1949], "theori": 1891, "homomorph": 1891, "mathematician": 1891, "im": 1891, "studi": [1891, 1917], "beauti": 1891, "somewhat": [1891, 1894, 1927], "counterintuit": 1891, "0906": 1891, "4835": 1891, "audio": [1891, 1932], "\u211d": 1891, "_output": 1891, "vj": 1891, "selfdeletingtempfil": 1891, "tmp_dir": 1891, "uuid": 1891, "uuid4": 1891, "temp_fil": 1891, "forbidden": 1891, "savedtensor": 1891, "_raw_saved_": 1891, "_raw_saved_self": 1891, "save_on_disk_threshold": 1891, "tensor_or_sctf": 1891, "_saved_oth": 1891, "4th": 1892, "backcompat": 1892, "broadcast_warn": 1892, "userwarn": 1892, "compute_z": 1893, "w_z": 1893, "w_y": 1893, "tbb": 1893, "aten_thread": 1893, "omp": 1893, "mkl_thread": 1893, "bla": 1893, "mkldnn_cpu_runtim": 1893, "use_mkldnn": 1893, "use_tbb": 1893, "use_openmp": 1893, "ON": [1893, 1900, 1901], "set_num_interop_thread": 1893, "get_num_interop_thread": 1893, "set_num_thread": [1893, 1904], "get_num_thread": 1893, "omp_num_thread": 1893, "mkl_num_thread": 1893, "e5": 1893, "oversubscript": 1893, "irrespect": 1894, "spread": 1894, "cuda2": [1894, 1900], "a_ful": 1894, "10240": 1894, "b_full": 1894, "ab_ful": 1894, "7277": 1894, "ab_tf32": 1894, "016": 1894, "ga100": 1894, "1747": 1894, "relative_error": 1894, "0022": 1894, "ab_fp32": 1894, "0031": 1894, "000039": 1894, "7x": 1894, "globalcontext": 1894, "setallowtf32cubla": 1894, "setallowtf32cudnn": 1894, "bench_gemm_transform": 1894, "allow_fp16_reduc": 1894, "4048": 1894, "1634": 1894, "1639": 1894, "4056": 1894, "1670": 1894, "1661": 1894, "4080": 1894, "1664": 1894, "1658": 1894, "1651": 1894, "4104": 1894, "1677": 1894, "1674": 1894, "4128": 1894, "1796": [1894, 1902], "2519": 1894, "5096": 1894, "2144": 1894, "2149": 1894, "2766": 1894, "5120": 1894, "2142": 1894, "9728": 1894, "3875": 1894, "5779": 1894, "16384": [1894, 1948], "6182": 1894, "9656": 1894, "setallowfp16reductioncubla": 1894, "instabl": 1894, "setallowbf16reductioncubla": 1894, "invis": [1894, 1946, 1956], "start_ev": 1894, "elapsed_time_m": 1894, "exploit": 1894, "paragraph": [1894, 1899], "initial_grad": 1894, "memory_alloc": [1894, 1900], "memory_snapshot": [1894, 1900], "memcheck": 1894, "pytorch_no_cuda_memory_cach": [1894, 1900], "option2": 1894, "value2": 1894, "max_split_size_mb": 1894, "borderlin": 1894, "memory_summari": 1894, "resort": [1894, 1899, 1915], "roundup_power2_divis": 1894, "cudacachingalloc": 1894, "1280": 1894, "1536": 1894, "1792": 1894, "256mb": 1894, "512mb": 1894, "1gb": [1894, 1954], "knob": [1894, 1944], "garbage_collection_threshold": 1894, "reclaim": [1894, 1941], "release_cached_block": 1894, "unfavor": 1894, "expandable_seg": 1894, "2mb": 1894, "sliver": 1894, "pinned_use_cuda_host_regist": 1894, "cudahostregist": 1894, "cudahostalloc": 1894, "malloc": [1894, 1949, 1958], "pinned_num_register_thread": 1894, "cuda_runtime_api": 1894, "iostream": 1894, "fpic": 1894, "my_malloc": 1894, "cout": 1894, "endl": [1894, 1901], "my_fre": 1894, "cudafre": [1894, 1958], "cudapluggablealloc": 1894, "new_alloc": 1894, "_cuda_clearcublasworkspac": 1894, "kib": 1894, "lru": 1894, "geometri": 1894, "1023": 1894, "zeta": [1894, 1913, 1928, 1951], "varieti": [1894, 1924], "use_pytorch_kernel_cach": 1894, "pytorch_kernel_cache_path": 1894, "store_tru": 1894, "disable_cuda": 1894, "assess": 1894, "cudagetdevicecount": 1894, "cuinit": 1894, "pytorch_nvml_based_cuda_check": 1894, "nvml": 1894, "nvmldevicegetcount_v2": 1894, "poison": 1894, "train_load": [1894, 1904], "x_cpu": 1894, "x_gpu": 1894, "x_cpu_long": 1894, "y_cpu": 1894, "y_gpu": 1894, "y_cpu_long": 1894, "new_tensor": 1894, "overus": 1894, "principl": [1894, 1946], "cudagraphlaunch": 1894, "elid": 1894, "versatil": 1894, "static_input": 1894, "static_output": 1894, "realist": 1894, "sophist": [1894, 1914], "violat": [1894, 1897], "virtual": 1894, "d_in": 1894, "d_out": 1894, "640": 1894, "static_target": 1894, "static_y_pr": 1894, "static_loss": 1894, "real_input": [1894, 1945], "real_target": 1894, "refil": 1894, "rejoin": 1894, "cuda_work": 1894, "nsight": 1894, "reorgan": 1894, "graphabl": 1894, "needlessli": [1894, 1944], "econom": 1894, "static_out_1": 1894, "g1_workload": 1894, "static_in_1": 1894, "static_out_2": 1894, "g2_workload": 1894, "static_in_2": 1894, "real_data_1": 1894, "real_data_2": 1894, "occasion": [1894, 1927, 1945], "29500": [1895, 1916, 1923, 1924], "dive": [1895, 1899, 1915, 1949, 1950], "grad0": 1895, "grad1": 1895, "bucket1": 1895, "bucket0": 1895, "hurt": 1895, "kick": [1895, 1923, 1924, 1953], "earliest": 1895, "unreadi": 1895, "perspect": [1895, 1905, 1924, 1949], "hpp": 1895, "processgroupgloo": 1895, "processgroupmpi": 1895, "_sync_param": 1895, "autograd_hook": 1895, "prepare_for_backward": 1895, "_after_": 1895, "log_level": [1895, 1956], "optimize_ddp": 1895, "mark_dirti": 1896, "mark_non_differenti": [1896, 1897], "set_materialize_grad": 1896, "linearfunct": 1896, "grad_bia": 1896, "mulconst": 1896, "mycub": [1896, 1897], "grad_dx": [1896, 1897], "my_cub": [1896, 1897], "input_featur": 1896, "output_featur": 1896, "duck": [1896, 1915], "__array_function__": [1896, 1946], "nep": [1896, 1946], "0018": 1896, "scalartensor": 1896, "handled_funct": 1896, "mandat": 1896, "update_wrapp": 1896, "ensure_tensor": 1896, "metadatatensor": 1896, "__add__": 1896, "subtensor2": 1896, "othersubtensor": 1896, "loggingtensor": 1896, "permiss": 1896, "_metadata": 1896, "ndata": 1896, "ministri": 1896, "silli": 1896, "superclass": 1896, "troublesom": 1896, "face": [1896, 1915, 1932, 1945], "_get_overridable_funct": 1896, "get_overridable_funct": [1896, 1957], "func_dict": 1896, "nn_func": 1896, "labori": 1896, "_get_testing_overrid": 1896, "get_testing_overrid": [1896, 1957], "override_dict": 1896, "dummy_add": 1896, "get_ignored_funct": [1896, 1957], "__torch_dispatch__": [1896, 1927, 1945], "2020": 1896, "outdat": 1896, "redispatch": [1896, 1945], "dispatchkei": 1896, "zerotensor": 1896, "compositeimplicitautograd": 1896, "func_nam": [1896, 1923], "exot": 1896, "zoo": 1896, "subclass_zoo": [1896, 1945], "intrus": 1896, "torchfunctionmod": 1896, "_python_dispatch": 1896, "torchdispatchmod": 1896, "resolve_nam": [1896, 1957], "functionlog": 1896, "dispatchlog": 1896, "7164": 1896, "9336": 1896, "4287": 1896, "7989": 1896, "2169": 1896, "7474": 1896, "5624": 1896, "5970": 1896, "4328": 1896, "9794": 1896, "3490": 1896, "8671": 1896, "8573": 1896, "4338": 1896, "4948": 1896, "1249": 1896, "3307": 1896, "2151": 1896, "6018": 1896, "9060": 1896, "2974": 1896, "7708": 1896, "6668": 1896, "0352": 1896, "7948": 1896, "6023": 1896, "4303": 1896, "2036": 1896, "6831": 1896, "8120": 1896, "5949": 1896, "5416": 1896, "3335": 1896, "5897": 1896, "custom_vjp": 1897, "custom_jvp": 1897, "to_numpi": 1897, "numpysort": 1897, "ind_inv": 1897, "_1": [1897, 1915], "numpytak": 1897, "numpy_sort": 1897, "saniti": 1897, "ggx": 1897, "vmappabl": 1897, "x_bdim": 1897, "ind_bdim": 1897, "ind_inv_bdim": 1897, "expanded_x": 1897, "expanded_ind": 1897, "expanded_ind_inv": 1897, "new_dim": 1897, "logical_dim": 1897, "maybe_expand_bdim_at_front": 1897, "pseudocod": 1897, "rapidli": [1898, 1904, 1910, 1911], "fortun": [1898, 1956], "abridg": 1898, "total_loss": 1898, "extrud": 1898, "phenomenon": 1898, "plenti": 1898, "bptt": 1898, "repackag": 1898, "nm": 1898, "blow": 1898, "rememb": [1898, 1904, 1949], "elf": 1898, "grep": [1898, 1940], "run_model": 1898, "recoveri": 1898, "data_parallel": 1898, "pad_packed_sequ": 1898, "padded_input": 1898, "packed_input": 1898, "packed_output": 1898, "my_lstm": 1898, "dp_m": 1898, "padding_input": 1898, "ur": 1899, "ui": [1899, 1932, 1950, 1953], "j_f": 1899, "calculu": 1899, "cw": 1899, "bigger": 1899, "articl": 1899, "58eb23378f2a376565a66ac32c93a316c45b6131": 1899, "l99": 1899, "l105": 1899, "ds_dx": 1899, "compute_gradi": 1899, "ds_dy": 1899, "conj_w_d": 1899, "w_d": 1899, "d_idx": 1899, "albeit": 1899, "wonder": 1899, "amd": [1900, 1938], "portabl": 1900, "rocmdoc": 1900, "programming_guid": 1900, "hip_api_guid": 1900, "cuda_vers": 1900, "cudaruntimegetvers": 1900, "cudadrivergetvers": 1900, "hip_vers": 1900, "hipruntimegetvers": 1900, "hipdrivergetvers": 1900, "11000": 1900, "use_rocm": 1900, "rocm_vers": 1900, "40300": 1900, "cmake": [1900, 1908], "drocm_force_enable_gpu_assert": 1900, "addglobalcallback": 1901, "recordfunct": 1901, "ivalu": 1901, "threadlocaldebuginfo": 1901, "debuginfoguard": 1901, "recordfunctioncallback": 1901, "onfunctionent": 1901, "onfunctionexit": 1901, "needsinput": 1901, "samplingprob": 1901, "enablerecordfunct": 1901, "cerr": 1901, "broader": [1901, 1935], "inject": 1901, "setapiusagehandl": 1901, "setapiusagelogg": 1901, "event_nam": 1901, "c10_log_api_usage_onc": 1901, "my_api": 1901, "_log_api_usage_onc": 1901, "archiv": 1901, "akin": 1901, "jpeg": 1901, "camera": [1901, 1932], "setexportmoduleextrafileshook": 1901, "extrafilesmap": 1901, "producer_info": 1901, "getenv": 1901, "getsourc": 1901, "precompil": 1901, "pyc": 1901, "loos": 1901, "elabor": 1902, "tpu": 1902, "mylinear": 1902, "sample_input": 1902, "0413": 1902, "2057": 1902, "0597": 1902, "8247": 1902, "1045": 1902, "4299": 1902, "5457": 1902, "4793": 1902, "3634": 1902, "8525": 1902, "6749": 1902, "l0": [1902, 1907], "deeper": [1902, 1915, 1949], "bignet": 1902, "big_net": 1902, "dynamicnet": 1902, "dynamic_net": 1902, "2051": 1902, "7601": 1902, "1963": 1902, "4354": 1902, "6598": 1902, "4446": 1902, "4628": 1902, "8774": 1902, "6848": 1902, "5458": 1902, "4647": 1902, "5310": 1902, "0609": 1902, "0940": 1902, "1266": 1902, "0623": 1902, "3508": 1902, "0550": 1902, "5317": 1902, "5562": 1902, "4028": 1902, "6942": 1902, "0140": 1902, "0329": 1902, "1160": 1902, "0434": 1902, "3889": 1902, "1613": 1902, "6340": 1902, "3887": 1902, "9979": 1902, "0767": 1902, "3526": 1902, "8756": 1902, "5847": 1902, "6016": 1902, "1608": 1902, "0829": 1902, "6338": 1902, "9239": 1902, "6943": 1902, "5034": 1902, "0268": 1902, "4489": 1902, "9403": 1902, "2509": 1902, "5052": 1902, "3088": 1902, "4951": 1902, "3381": 1902, "5166": 1902, "boilerpl": [1902, 1915], "beginn": 1902, "examples_nn": 1902, "polynomial_modul": 1902, "teach": 1902, "0013": [1902, 1928], "0030": 1902, "0008": 1902, "modalmodul": 1902, "6614": 1902, "2669": 1902, "0617": 1902, "4519": 1902, "two_layer_net_optim": 1902, "blitz": 1902, "neural_networks_tutori": 1902, "autograd_tutori": 1902, "new_net": 1902, "runningmean": 1902, "1041": 1902, "0647": 1902, "1515": 1902, "m_load": 1902, "unserialized_th": 1902, "statefulmodul": 1902, "param3": 1902, "param_list": 1902, "parameterlist": 1902, "param_dict": 1902, "parameterdict": 1902, "buffer1": 1902, "buffer2": 1902, "buffer3": 1902, "0322": 1902, "9066": 1902, "1409": 1902, "4852": 1902, "6949": 1902, "2911": 1902, "1044": 1902, "4202": 1902, "1953": 1902, "5299": 1902, "8747": 1902, "6289": 1902, "4898": 1902, "6434": 1902, "5187": 1902, "0346": 1902, "4077": 1902, "4324": 1902, "7022": 1902, "3915": 1902, "6176": 1902, "6062": 1902, "5992": 1902, "4452": 1902, "2843": 1902, "3710": 1902, "3947": 1902, "saving_loading_model": 1902, "what_is_state_dict": 1902, "skip_init": 1902, "skip_param_init": 1902, "forward_hook": [1902, 1952], "backward_hook": [1902, 1952], "new_grad_input": 1902, "5059": 1902, "8158": 1902, "2390": 1902, "0043": 1902, "addmmbackward": 1902, "forward_pre_hook_handl": 1902, "5752": 1902, "7421": 1902, "forward_hook_handl": 1902, "0980": 1902, "4666": 1902, "0256": 1902, "4497": 1902, "5046": 1902, "combat": 1902, "mps_devic": 1903, "yourfavoritenet": 1903, "a3c": 1904, "set_start_method": 1904, "simplequeu": 1904, "cope": 1904, "eleg": 1904, "num_process": 1904, "inappropri": 1904, "vcpu": 1904, "htop": 1904, "exceed": 1904, "competit": 1904, "oversubscrib": 1904, "fairli": [1904, 1916, 1944, 1948], "mnist_hogwild": 1904, "dataloader_kwarg": 1904, "train_epoch": 1904, "30x": 1904, "boost": [1904, 1940], "754": 1905, "1e20": 1905, "4142e": 1905, "struggl": 1905, "benign": 1905, "v_dot2": 1905, "mfma": 1905, "fp64": 1905, "rocbla": 1905, "miopen": 1905, "rocblas_internal_fp16_alt_impl": 1905, "miopen_debug_convolution_attrib_fp16_alt_impl": 1905, "_convbackend": 1905, "slownd": 1905, "slownd_transpos": 1905, "slownd_dil": 1905, "slownd_dilated_transpos": 1905, "convbackend": 1905, "miopendepthwis": 1905, "miopentranspos": 1905, "svd_lowrank": [1906, 1927], "22modul": 1906, "20determin": 1906, "index_add_cuda_": 1906, "1509": 1906, "8027": 1906, "0333": 1906, "1444": 1906, "rese": 1906, "seed_work": 1906, "worker_se": 1906, "train_dataset": 1906, "tensor_dict": 1907, "loaded_numb": 1907, "loaded_even": 1907, "scene": [1907, 1932], "loaded_smal": 1907, "num_batches_track": 1907, "bn_state_dict": 1907, "new_bn": 1907, "out0_relu": 1907, "1400": 1907, "4563": 1907, "0271": 1907, "4406": 1907, "2827": 1907, "4588": 1907, "2031": 1907, "1316": 1907, "6533": 1907, "3413": 1907, "1112": 1907, "m_state_dict": 1907, "new_m": 1907, "original_nam": 1907, "controlflowmodul": 1907, "controlflowmodule_trac": 1907, "3793": 1907, "controlflowmodule_script": 1907, "tagger": 1907, "ipu_tag": 1907, "ipu_deseri": 1907, "startswith": [1907, 1913], "get_default_load_endian": 1907, "byteord": 1907, "loadendian": 1907, "default_load_endian": 1907, "set_default_load_endian": 1907, "endian": 1907, "rem": 1908, "7z": 1908, "curl": 1908, "ossci": 1908, "mkl_2020": 1908, "aoa": 1908, "omkl": 1908, "cuda_prefix": 1908, "cuda102": 1908, "magma_2": 1908, "4_": 1908, "omagma": 1908, "cmake_include_path": 1908, "cd": [1908, 1915, 1917, 1956], "magma_hom": 1908, "studio": [1908, 1910], "pip": [1908, 1910, 1911, 1912, 1932, 1943], "cmake_gener": 1908, "ffi": 1908, "create_extens": 1908, "_ext": 1908, "define_macro": 1908, "relative_to": 1908, "c99": 1908, "x86_x64": 1908, "packagesnotfounderror": 1908, "anaconda": 1908, "noarch": 1908, "continuum": 1908, "pkg": 1908, "pro": [1908, 1932], "msys2": 1908, "importerror": [1908, 1915], "dll": 1908, "vc2017": 1908, "redistribut": 1908, "vc": 1908, "vs2017_runtim": 1908, "mkl_fft": 1908, "intel_openmp": 1908, "vs2017": 1908, "openbla": 1908, "forg": 1908, "emerg": [1908, 1944], "bootstrap": 1908, "forgotten": 1908, "idiom": 1908, "freeze_support": 1908, "forkingpickl": 1908, "brokenpipeerror": 1908, "errno": 1908, "couldn": [1908, 1912], "torch_14808_1591070686": 1908, "thalloc": 1908, "tdr": 1908, "thcudacheck": 1908, "csrc": [1908, 1944], "storageshar": 1908, "microsoft": 1909, "flavor": 1909, "polish": [1909, 1910], "orchestr": [1910, 1952], "exportopt": 1910, "onnxregistri": 1910, "extractor": 1910, "fxgraphextractor": 1910, "onnxfakecontext": 1910, "exportoutput": 1910, "exportoutputseri": 1910, "upgrad": [1910, 1914, 1934], "perceptron": 1910, "mlpmodel": 1910, "fc0": 1910, "fc3": 1910, "tensor_x": 1910, "97": [1910, 1928], "export_output": 1910, "model_proto": 1910, "modelproto": 1910, "complianc": 1910, "protobuf": [1910, 1912], "netron": 1910, "icon": 1910, "viewer": [1910, 1958], "parseabl": 1910, "fxe0007": 1910, "fxe0011": 1910, "fxe0012": 1910, "fxe0013": 1910, "fxe0014": 1910, "fxe0015": 1910, "fxe0016": 1910, "model_arg": 1910, "model_kwarg": 1910, "my_simple_model": 1910, "my_dynamic_model": 1910, "tensor_typ": 1910, "elem_typ": 1910, "dim_param": [1910, 1912], "arg0_dim_0": 1910, "arg0_dim_1": 1910, "arg0_dim_2": 1910, "fake_context": 1910, "onnx_registri": 1910, "diagnostic_opt": 1910, "enable_fake_mod": 1910, "_subclass": [1910, 1944, 1945], "fake_tensor": [1910, 1944, 1945], "faketensormod": [1910, 1944, 1945], "faketensor": [1910, 1945], "xdoctest": [1910, 1911], "torch_doctest_onnx": [1910, 1911], "my_nn_modul": 1910, "my_model_without_initi": 1910, "WITH": [1910, 1912], "my_model_with_initi": 1910, "input_adapt": 1910, "output_adapt": 1910, "diagnostic_context": 1910, "export_except": 1910, "adapt_torch_inputs_to_onnx": 1910, "func_with_nested_input_structur": 1910, "x_dict": 1910, "y_tupl": 1910, "y3": 1910, "adapt_torch_outputs_to_onnx": 1910, "model_output": 1910, "func_returning_tupl": 1910, "pt_output": 1910, "diagnosticcontext": 1910, "bufferediobas": 1910, "_initi": 1910, "suffix": [1910, 1932, 1933], "model_initi": 1910, "save_diagnost": 1910, "protobufexportoutputseri": 1910, "serializetostr": 1910, "exported_model": 1910, "get_op_funct": 1910, "is_registered_op": 1910, "register_op": 1910, "tracedonnxfunct": 1910, "sctip": 1910, "warnings_as_error": 1910, "is_onnxrt_backend_support": 1911, "onnxrt": [1911, 1938], "onnxruntim": [1911, 1912], "dummy_input": 1912, "actual_input_1": 1912, "learned_": 1912, "output_nam": 1912, "learned_0": 1912, "learned_1": 1912, "learned_2": 1912, "learned_3": 1912, "learned_14": 1912, "learned_15": 1912, "kernel_shap": 1912, "9216": 1912, "transb": 1912, "check_model": 1912, "printable_graph": 1912, "ort": 1912, "ort_sess": 1912, "inferencesess": 1912, "astyp": 1912, "seq_length": 1912, "real_seq_length": 1912, "experienc": 1912, "new_data": 1912, "hope": [1912, 1950], "symbolic_opset": 1912, "symbolic_opset9": 1912, "_variablefunct": 1912, "pyi": 1912, "checkout": 1912, "___torch_mangle_0": 1912, "alpha_f": 1912, "myrelu": 1912, "value_t": 1912, "pythonop": [1912, 1913], "mylogexp": 1912, "operator_export_typ": 1912, "onnx_fallthrough": 1912, "onnx_aten_fallback": 1912, "onnx_opset": 1912, "opset15": 1912, "custom_opset": 1912, "67326": 1912, "alphax": 1912, "castlik": 1912, "gammax": 1912, "settyp": 1912, "custom_selu": 1912, "jit_util": 1912, "graphcontext": 1912, "onnxscript_op": 1912, "register_custom_op_symbol": 1912, "symbolic_nam": 1912, "symbolic_fn": 1912, "Be": [1912, 1953], "symbolic_help": 1912, "symbolic_foo_forward": 1912, "custom_domain": 1912, "attr1_f": 1912, "attr2_i": 1912, "custom_op": [1912, 1945], "foo_forward": 1912, "foomodel": 1912, "example_input1": 1912, "caffe2": [1912, 1932], "torch_script_graph": 1912, "unconvertible_op": 1912, "dynamic_ax": 1912, "export_param": 1912, "trainingmod": 1912, "operatorexporttyp": 1912, "do_constant_fold": 1912, "keep_initializers_as_input": 1912, "export_modules_as_funct": 1912, "autograd_inlin": 1912, "OF": 1912, "input_i": 1912, "input_z": 1912, "fileno": 1912, "untrain": 1912, "doc_str": 1912, "onnx_aten": 1912, "build_caffe2": 1912, "summodul": 1912, "dim_valu": 1912, "my_custom_axis_nam": 1912, "sum_dynamic_axes_1": 1912, "deduplicate_initi": 1912, "74765": 1912, "checkererror": 1912, "unsupportedoperatorerror": 1912, "export_to_pretty_str": 1912, "export_typ": 1912, "google_print": 1912, "add_node_nam": 1912, "nodeproto": 1912, "debugstr": 1912, "contrib": 1912, "test_aten_embedding_2": 1912, "test_oper": 1912, "unregister_custom_op_symbol": 1912, "select_model_mode_for_export": 1912, "is_in_onnx_export": 1912, "middl": 1912, "enable_log": 1912, "disable_log": 1912, "graphinfo": 1912, "incorrect_relu_symbolic_funct": 1912, "2328854203224182": 1912, "699536174352349": 1912, "constantchunk": 1913, "__and_": 1913, "__contains_": 1913, "__derive_index": 1913, "__getitem_": 1913, "__interpol": 1913, "__is_": 1913, "__isnot_": 1913, "__lshift_": 1913, "__not_": 1913, "__or_": 1913, "__range_length": 1913, "__rshift_": 1913, "__xor_": 1913, "_cast_byt": 1913, "_cast_char": 1913, "_cast_doubl": 1913, "_cast_float": 1913, "_cast_half": 1913, "_cast_int": 1913, "_cast_long": 1913, "_cast_short": 1913, "_conj": 1913, "_convolution_mod": 1913, "_dim_arang": 1913, "_log_softmax": [1913, 1951], "_pack_padded_sequ": 1913, "_pad_packed_sequ": 1913, "_reshape_from_tensor": 1913, "_sample_dirichlet": 1913, "_set_item": 1913, "_shape_as_tensor": 1913, "_standard_gamma": 1913, "_uniqu": 1913, "_unique2": 1913, "_weight_norm": 1913, "conv1d_relu": 1913, "conv2d_relu": 1913, "conv3d_relu": 1913, "embedding_renorm": 1913, "floordiv": [1913, 1920], "linear_relu": [1913, 1920], "nonzero_numpi": 1913, "numpy_t": 1913, "unchecked_cast": 1913, "unique_dim": 1913, "_quantiz": 1913, "conv2d_prepack": 1913, "conv3d_prepack": 1913, "conv_transpose1d_prepack": 1913, "conv_transpose2d_prepack": 1913, "conv_transpose3d_prepack": 1913, "linear_dynam": 1913, "linear_prepack": 1913, "linear_prepack_fp16": 1913, "linear_prepack_fp16_legaci": 1913, "linear_prepack_legaci": 1913, "_test": 1913, "get_first": 1913, "compleximplicit": 1913, "floatimplicit": 1913, "intimplicit": 1913, "__iand_": 1913, "__ilshift_": 1913, "__ior_": 1913, "__irshift_": 1913, "__ixor_": 1913, "__round_to_zero_floordiv": 1913, "__upsampl": 1913, "__upsample_bilinear": 1913, "__upsample_nearest": 1913, "_adaptive_avg_pool2d": [1913, 1951], "_adaptive_avg_pool3d": [1913, 1951], "_add_batch_dim": 1913, "_add_relu": 1913, "_addmm_activ": 1913, "_aminmax": 1913, "_amp_foreach_non_finite_check_and_unscal": 1913, "_amp_update_scal": 1913, "_assert_tensor_metadata": 1913, "_autocast_to_full_precis": 1913, "_autocast_to_reduced_precis": 1913, "_batch_norm_impl_index": 1913, "_cdist_forward": [1913, 1951], "_cholesky_solve_help": 1913, "_choose_qparams_per_tensor": 1913, "_coalesc": 1913, "_compute_linear_combin": 1913, "_conj_copi": 1913, "_conj_phys": 1913, "_conv_depthwise2d": 1913, "_convert_indices_from_coo_to_csr": 1913, "_convert_indices_from_csr_to_coo": 1913, "_copy_from": 1913, "_copy_from_and_res": 1913, "_cslt_compress": 1913, "_cslt_sparse_mm": 1913, "_ctc_loss": 1913, "_cudnn_ctc_loss": 1913, "_cudnn_init_dropout_st": 1913, "_cudnn_rnn": 1913, "_cudnn_rnn_flatten_weight": 1913, "_cufft_clear_plan_cach": 1913, "_cufft_get_plan_cache_max_s": 1913, "_cufft_get_plan_cache_s": 1913, "_cufft_set_plan_cache_max_s": 1913, "_cummax_help": 1913, "_cummin_help": 1913, "_debug_has_internal_overlap": 1913, "_dimi": 1913, "_dimv": 1913, "_dirichlet_grad": 1913, "_efficient_attention_forward": 1913, "_efficientzerotensor": 1913, "_embedding_bag": [1913, 1951], "_embedding_bag_forward_onli": 1913, "_empty_affine_quant": 1913, "_empty_per_channel_affine_quant": 1913, "_euclidean_dist": 1913, "_fake_quantize_learnable_per_channel_affin": 1913, "_fake_quantize_learnable_per_tensor_affin": 1913, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1913, "_fft_c2c": 1913, "_fft_c2r": 1913, "_fft_r2c": 1913, "_fill_mem_eff_dropout_mask": 1913, "_flash_attention_forward": 1913, "_foobar": [1913, 1956], "_foreach_ab": 1913, "_foreach_aco": 1913, "_foreach_add": 1913, "_foreach_addcdiv": 1913, "_foreach_addcmul": 1913, "_foreach_asin": 1913, "_foreach_atan": 1913, "_foreach_ceil": 1913, "_foreach_clamp_max": 1913, "_foreach_clamp_min": 1913, "_foreach_copi": 1913, "_foreach_co": 1913, "_foreach_cosh": 1913, "_foreach_div": 1913, "_foreach_erf": 1913, "_foreach_erfc": 1913, "_foreach_exp": 1913, "_foreach_expm1": 1913, "_foreach_floor": 1913, "_foreach_frac": 1913, "_foreach_lerp": 1913, "_foreach_lgamma": 1913, "_foreach_log": 1913, "_foreach_log10": 1913, "_foreach_log1p": 1913, "_foreach_log2": 1913, "_foreach_maximum": 1913, "_foreach_minimum": 1913, "_foreach_mul": 1913, "_foreach_neg": 1913, "_foreach_norm": 1913, "_foreach_pow": 1913, "_foreach_reciproc": 1913, "_foreach_round": 1913, "_foreach_sigmoid": 1913, "_foreach_sign": 1913, "_foreach_sin": 1913, "_foreach_sinh": 1913, "_foreach_sqrt": 1913, "_foreach_sub": 1913, "_foreach_tan": 1913, "_foreach_tanh": 1913, "_foreach_trunc": 1913, "_foreach_zero": 1913, "_functional_assert_async": 1913, "_functional_sym_constrain_rang": 1913, "_functional_sym_constrain_range_for_s": 1913, "_fused_adam": 1913, "_fused_adamw": 1913, "_fused_dropout": 1913, "_fused_moving_avg_obs_fq_help": 1913, "_fused_moving_avg_obs_fq_helper_funct": 1913, "_fused_sdp_choic": 1913, "_fw_primal": 1913, "_fw_primal_copi": 1913, "_get_cpu_cap": 1913, "_get_tracing_st": 1913, "_grad_sum_to_s": 1913, "_has_compatible_shallow_copy_typ": 1913, "_has_same_storage_numel": 1913, "_histogramdd_bin_edg": 1913, "_histogramdd_from_bin_ct": 1913, "_histogramdd_from_bin_tensor": 1913, "_index_put_impl": 1913, "_indices_copi": 1913, "_infer_s": 1913, "_int_mm": 1913, "_is_all_tru": 1913, "_is_any_tru": 1913, "_is_zerotensor": 1913, "_linalg_check_error": 1913, "_linalg_det": 1913, "_linalg_eigh": 1913, "_linalg_slogdet": 1913, "_linalg_solve_ex": 1913, "_linalg_svd": 1913, "_list_to_tensor": 1913, "_logcumsumexp": 1913, "_lstm_mp": 1913, "_make_dep_token": 1913, "_make_du": 1913, "_make_dual_copi": 1913, "_make_per_channel_quantized_tensor": 1913, "_make_per_tensor_quantized_tensor": 1913, "_masked_scal": 1913, "_masked_softmax": 1913, "_mkldnn_reshap": 1913, "_mkldnn_transpos": 1913, "_mps_convolut": 1913, "_mps_convolution_transpos": 1913, "_native_batch_norm_legit": [1913, 1951], "_native_batch_norm_legit_funct": 1913, "_native_batch_norm_legit_no_train": [1913, 1951], "_native_multi_head_attent": 1913, "_ncf_unsqueez": 1913, "_ncf_view": 1913, "_neg_view": 1913, "_neg_view_copi": 1913, "_nested_from_pad": 1913, "_nested_from_padded_and_nested_exampl": 1913, "_nested_tensor_from_mask": 1913, "_nested_tensor_from_mask_left_align": 1913, "_nested_tensor_from_tensor_list": 1913, "_nested_tensor_s": 1913, "_nested_tensor_softmax_with_shap": 1913, "_nested_tensor_storage_offset": 1913, "_nested_tensor_strid": 1913, "_nested_view_from_buff": 1913, "_nested_view_from_buffer_copi": 1913, "_new_zeros_with_same_feature_meta": 1913, "_nnpack_avail": 1913, "_nnpack_spatial_convolut": 1913, "_no_grad_embedding_renorm": 1913, "_no_grad_fil": 1913, "_no_grad_norm": 1913, "_no_grad_uniform": 1913, "_no_grad_zero": 1913, "_pack_sequ": 1913, "_pad_circular": 1913, "_pad_enum": 1913, "_pdist_forward": [1913, 1951], "_pin_memori": 1913, "_prelu_kernel": 1913, "_propagate_xla_data": 1913, "_remove_batch_dim": 1913, "_reshape_alia": 1913, "_reshape_alias_copi": 1913, "_reshape_copi": 1913, "_resize_output": 1913, "_rowwise_prun": 1913, "_saturate_weight_to_fp16": 1913, "_scaled_dot_product_attention_math": 1913, "_scaled_dot_product_efficient_attent": 1913, "_scaled_dot_product_flash_attent": 1913, "_scaled_mm": 1913, "_size_if_not_equ": 1913, "_slow_conv2d_forward": 1913, "_sobol_engine_draw": 1913, "_sobol_engine_ff": 1913, "_sobol_engine_initialize_st": 1913, "_sobol_engine_scrambl": 1913, "_softmax": [1913, 1928, 1951], "_sparse_addmm": 1913, "_sparse_broadcast_to": 1913, "_sparse_broadcast_to_copi": 1913, "_sparse_bsc_tensor_unsaf": 1913, "_sparse_bsr_tensor_unsaf": 1913, "_sparse_compressed_tensor_unsaf": 1913, "_sparse_coo_tensor_unsaf": 1913, "_sparse_coo_tensor_with_dim": 1913, "_sparse_coo_tensor_with_dims_and_tensor": 1913, "_sparse_csc_tensor_unsaf": 1913, "_sparse_csr_prod": 1913, "_sparse_csr_sum": 1913, "_sparse_csr_tensor_unsaf": 1913, "_sparse_log_softmax": 1913, "_sparse_mask_project": 1913, "_sparse_mm": 1913, "_sparse_mm_reduce_impl": 1913, "_sparse_semi_structured_linear": 1913, "_sparse_softmax": 1913, "_sparse_sparse_matmul": 1913, "_sparse_sum": 1913, "_spdiag": 1913, "_standard_gamma_grad": 1913, "_tensor_to_list": 1913, "_test_ambiguous_default": 1913, "_test_autograd_multiple_dispatch": 1913, "_test_autograd_multiple_dispatch_view": 1913, "_test_autograd_multiple_dispatch_view_copi": 1913, "_test_check_tensor": 1913, "_test_functorch_fallback": 1913, "_test_optional_filled_intlist": 1913, "_test_optional_floatlist": 1913, "_test_optional_intlist": 1913, "_test_serialization_subcmul": 1913, "_test_string_default": 1913, "_test_warn_in_autograd": 1913, "_thnn_fused_gru_cel": 1913, "_thnn_fused_lstm_cel": 1913, "_to_copi": [1913, 1951], "_to_cpu": 1913, "_to_dens": 1913, "_to_spars": 1913, "_to_sparse_bsc": 1913, "_to_sparse_bsr": 1913, "_to_sparse_csc": 1913, "_to_sparse_csr": 1913, "_to_sparse_semi_structur": 1913, "_transform_bias_rescale_qkv": 1913, "_transformer_encoder_layer_fwd": 1913, "_trilinear": 1913, "_triton_multi_head_attent": 1913, "_triton_scaled_dot_attent": 1913, "_unpack_du": 1913, "_unsafe_index": 1913, "_unsafe_index_put": 1913, "_unsafe_view": 1913, "_unwrap_opt": 1913, "_upsample_bicubic2d_aa": 1913, "_upsample_bilinear2d_aa": 1913, "_upsample_nearest_exact1d": 1913, "_upsample_nearest_exact2d": 1913, "_upsample_nearest_exact3d": 1913, "_use_cudnn_ctc_loss": 1913, "_use_cudnn_rnn_flatten_weight": 1913, "_validate_compressed_sparse_indic": 1913, "_validate_sparse_bsc_tensor_arg": 1913, "_validate_sparse_bsr_tensor_arg": 1913, "_validate_sparse_compressed_tensor_arg": 1913, "_validate_sparse_coo_tensor_arg": 1913, "_validate_sparse_csc_tensor_arg": 1913, "_validate_sparse_csr_tensor_arg": 1913, "_values_copi": 1913, "_weight_norm_interfac": 1913, "capit": 1913, "confirmed_by_own": [1913, 1923], "convolution_overrid": 1913, "copy_sparse_to_spars": 1913, "endswith": 1913, "expandtab": 1913, "fake_quantize_per_channel_affine_cachemask": 1913, "fake_quantize_per_tensor_affine_cachemask": 1913, "fill_diagon": 1913, "glu_jvp": 1913, "has_torch_funct": [1913, 1957], "is_non_overlapping_and_dens": 1913, "is_own": [1913, 1923], "is_strides_like_format": 1913, "isalnum": 1913, "isalpha": 1913, "isdecim": 1913, "isdigit": 1913, "isidentifi": 1913, "islow": 1913, "isnumer": 1913, "isprint": 1913, "isspac": 1913, "istitl": 1913, "isupp": 1913, "lift_fresh": 1913, "ljust": 1913, "local_valu": [1913, 1916, 1923], "log_sigmoid_forward": 1913, "lstrip": 1913, "matrix_h": 1913, "nll_loss2d_forward": 1913, "nll_loss_forward": 1913, "normal_funct": 1913, "owner_nam": [1913, 1923], "percentformat": 1913, "quantized_gru": 1913, "quantized_lstm": 1913, "resize_as_spars": 1913, "rfind": 1913, "rindex": 1913, "rjust": 1913, "rpartit": 1913, "rsplit": 1913, "rstrip": 1913, "set_data": 1913, "slow_conv3d_forward": 1913, "sparse_res": 1913, "sparse_resize_and_clear": 1913, "splitlin": 1913, "swapcas": 1913, "sym_numel": [1913, 1951], "sym_storage_offset": [1913, 1951], "sym_strid": [1913, 1951], "unique_dim_consecut": 1913, "zfill": 1913, "_allgather_bas": 1913, "_reduce_scatter_bas": 1913, "allgath": 1913, "allgather_coalesc": 1913, "allgather_into_tensor_coalesc": 1913, "allreduce_coalesc": 1913, "alltoal": 1913, "alltoall_bas": 1913, "recv_any_sourc": 1913, "reduce_scatter_tensor_coalesc": 1913, "debugprim": 1913, "load_tensor": 1913, "_mm_plus_mm": 1913, "_reinterpret_tensor": 1913, "_mkl_linear": 1913, "_mkl_reorder_linear_weight": 1913, "_convolution_pointwis": 1913, "_convolution_transpose_pointwis": 1913, "_is_mkldnn_bf16_support": 1913, "_is_mkldnn_fp16_support": 1913, "_linear_pointwis": 1913, "_reorder_convolution_transpose_weight": 1913, "_reorder_convolution_weight": 1913, "_reorder_linear_weight": 1913, "_reorder_mkldnn_rnn_layer_weight": 1913, "mkldnn_prepack": 1913, "conv2d_run": 1913, "qconv1d_pointwis": 1913, "qconv2d_pointwis": 1913, "qconv3d_pointwis": 1913, "qconv_prepack": 1913, "qlinear_pointwis": 1913, "qlinear_prepack": 1913, "conv2d_clamp_prepack": 1913, "conv2d_clamp_run": 1913, "conv2d_transpose_clamp_prepack": 1913, "conv2d_transpose_clamp_run": 1913, "linear_clamp_prepack": 1913, "linear_clamp_run": 1913, "unpack_prepacked_sizes_conv2d": 1913, "unpack_prepacked_sizes_linear": 1913, "addstatvalu": 1913, "autogradadd": 1913, "autogradallnonzero": 1913, "autogradallzero": 1913, "autogradanynonzero": 1913, "autogradzero": 1913, "bailout": [1913, 1944], "bailouttempl": 1913, "broadcastmkldnntensor": 1913, "broadcasts": 1913, "chunksiz": 1913, "constantmkldnntensor": 1913, "differentiablegraph": 1913, "enumnam": 1913, "enumvalu": 1913, "fallbackgraph": 1913, "fusedconcat": 1913, "fusiongroup": 1913, "ifthenels": 1913, "ignoredpythonop": 1913, "mkldnnclamp": 1913, "mkldnnhardsigmoid": 1913, "mkldnnhardswish": 1913, "mkldnnhardtanh": 1913, "mkldnnlayernorm": 1913, "mkldnnscalarmul": 1913, "mmbatchsid": 1913, "mmtreereduc": 1913, "modulecontainerindex": 1913, "numtotensor": 1913, "raiseexcept": 1913, "reductions": 1913, "requiresgradcheck": 1913, "staticruntimecopyout": 1913, "staticsubgraph": 1913, "stringindex": 1913, "tensorexprdynamicgroup": 1913, "tensorexprdynamicguard": 1913, "tensorexprgroup": 1913, "timepoint": 1913, "tupleindex": 1913, "tupleunpack": 1913, "varconcat": 1913, "varstack": 1913, "awaitable_nowait": 1913, "awaitable_wait": 1913, "is_cpu": [1913, 1946], "is_ipu": [1913, 1946], "is_mkldnn": [1913, 1946], "is_mp": [1913, 1946], "is_mtia": 1913, "is_nest": [1913, 1946], "is_ort": [1913, 1946], "is_quant": [1913, 1946], "is_vulkan": [1913, 1946], "is_xla": [1913, 1946], "is_xpu": [1913, 1946], "onednnfusiongroup": 1913, "onednnfusionguard": 1913, "profile_ivalu": 1913, "rangelist": 1913, "rpc_remot": 1913, "unchecked_unwrap_opt": 1913, "bessel_i0": [1913, 1951], "bessel_i1": [1913, 1951], "bessel_j0": [1913, 1928, 1951], "bessel_j1": [1913, 1928, 1951], "broadcast_in_dim": [1913, 1951], "cbrt": [1913, 1951], "collapse_view": [1913, 1951], "convert_element_typ": [1913, 1951], "copy_strid": [1913, 1951], "copy_to": [1913, 1951], "device_put": [1913, 1951], "erf_inv": [1913, 1951], "erfcx": [1913, 1928, 1951], "fft_c2c": [1913, 1951], "fft_c2r": [1913, 1951], "fft_r2c": [1913, 1951], "iota": [1913, 1951], "maximum_valu": [1913, 1951], "minimum_valu": [1913, 1951], "ndtri": [1913, 1928, 1951], "rev": [1913, 1951], "shift_left": [1913, 1951], "shift_right_arithmet": [1913, 1951], "slice_in_dim": [1913, 1951], "spherical_bessel_j0": [1913, 1928, 1951], "split_dim": [1913, 1951], "view_of": [1913, 1951], "view_of_dtyp": [1913, 1951], "xor_sum": [1913, 1951], "_call_end_callbacks_on_jit_fut": 1913, "_record_function_ent": 1913, "_record_function_enter_new": 1913, "_record_function_exit": 1913, "_bfloat16quantizedtofloat": 1913, "_floattobfloat16quant": 1913, "add_out": 1913, "add_relu_out": 1913, "add_scalar_out": 1913, "add_scalar_relu": 1913, "add_scalar_relu_out": 1913, "batch_norm1d": 1913, "batch_norm1d_relu": 1913, "batch_norm2d": 1913, "batch_norm2d_relu": 1913, "batch_norm3d": 1913, "batch_norm3d_relu": 1913, "batch_norm_relu": 1913, "cat_out": 1913, "cat_relu": 1913, "cat_relu_out": 1913, "conv1d_dynam": 1913, "conv1d_prepack": 1913, "conv1d_unpack": 1913, "conv2d_add": 1913, "conv2d_add_relu": 1913, "conv2d_dil": 1913, "conv2d_dynam": 1913, "conv2d_group": 1913, "conv2d_output_pad": 1913, "conv2d_pad": 1913, "conv2d_strid": 1913, "conv2d_transpos": 1913, "conv2d_unpack": 1913, "conv2d_unpack_s": 1913, "conv3d_dil": 1913, "conv3d_dynam": 1913, "conv3d_group": 1913, "conv3d_output_pad": 1913, "conv3d_pad": 1913, "conv3d_strid": 1913, "conv3d_transpos": 1913, "conv3d_unpack": 1913, "conv_prepack": 1913, "conv_transpose1d_dynam": 1913, "conv_transpose1d_unpack": 1913, "conv_transpose2d_dil": 1913, "conv_transpose2d_dynam": 1913, "conv_transpose2d_group": 1913, "conv_transpose2d_output_pad": 1913, "conv_transpose2d_pad": 1913, "conv_transpose2d_strid": 1913, "conv_transpose2d_transpos": 1913, "conv_transpose2d_unpack": 1913, "conv_transpose3d_dil": 1913, "conv_transpose3d_dynam": 1913, "conv_transpose3d_group": 1913, "conv_transpose3d_output_pad": 1913, "conv_transpose3d_pad": 1913, "conv_transpose3d_strid": 1913, "conv_transpose3d_transpos": 1913, "conv_transpose3d_unpack": 1913, "conv_unpack": 1913, "embedding_4bit": 1913, "embedding_bag_2bit_prepack": 1913, "embedding_bag_2bit_rowwise_offset": 1913, "embedding_bag_2bit_unpack": 1913, "embedding_bag_4bit": 1913, "embedding_bag_4bit_prepack": 1913, "embedding_bag_4bit_rowwise_offset": 1913, "embedding_bag_4bit_unpack": 1913, "embedding_bag_byt": 1913, "embedding_bag_byte_prepack": 1913, "embedding_bag_byte_rowwise_offset": 1913, "embedding_bag_byte_unpack": 1913, "embedding_bag_prepack": 1913, "embedding_bag_unpack": 1913, "embedding_byt": 1913, "linear_dynamic_fp16": 1913, "linear_leaky_relu": 1913, "linear_relu_dynam": 1913, "linear_relu_dynamic_fp16": 1913, "linear_tanh": 1913, "linear_unpack": 1913, "linear_unpack_fp16": 1913, "linear_with_input_q_dq_qweight_dq_output_fp32": 1913, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1913, "make_quantized_cell_param": 1913, "make_quantized_cell_params_dynam": 1913, "make_quantized_cell_params_fp16": 1913, "mul_out": 1913, "mul_relu": 1913, "mul_relu_out": 1913, "mul_scalar_out": 1913, "mul_scalar_relu": 1913, "mul_scalar_relu_out": 1913, "quantized_gru_cell_dynam": 1913, "quantized_lstm_cell_dynam": 1913, "quantized_rnn_relu_cell_dynam": 1913, "quantized_rnn_tanh_cell_dynam": 1913, "rngprim": 1913, "philox_rand": 1913, "qlinear": 1913, "qlinear_dynam": 1913, "qlinear_relu": 1913, "qlinear_relu_dynam": 1913, "qlinear_unpack": 1913, "static_runtim": 1913, "vartupleunpack": 1913, "clamp_nan_to_num": 1913, "create_owned_ref": 1913, "dequantize_copi": 1913, "dict_unpack": 1913, "expand_dims_copi": 1913, "flatten_copi": 1913, "fused_equally_split": 1913, "reshape_copi": 1913, "select_tensor": 1913, "signed_log1p": 1913, "to_copi": 1913, "to_maybe_copy_out": 1913, "var1": 1914, "var2": 1914, "lbfg": 1914, "adadelta": 1914, "adamax": 1914, "asgd": 1914, "nadam": 1914, "radam": 1914, "rmsprop": 1914, "rprop": 1914, "reducelronplateau": 1914, "multisteplr": 1914, "swa_util": 1914, "averagedmodel": 1914, "swalr": 1914, "update_bn": 1914, "optima": 1914, "polyak": 1914, "averaged_model": 1914, "multi_avg_fn": 1914, "get_ema_multi_avg_fn": 1914, "textrm": 1914, "update_paramet": 1914, "avg_fn": 1914, "_foreach": 1914, "ema_model": 1914, "ema_avg": 1914, "averaged_model_paramet": 1914, "model_paramet": 1914, "num_averag": 1914, "swa_schedul": 1914, "anneal_epoch": 1914, "swa_lr": 1914, "swa_model": 1914, "cosineannealinglr": 1914, "swa_start": 1914, "test_input": 1914, "secur": 1915, "unpackag": 1915, "exercis": 1915, "unzip": 1915, "my_packag": 1915, "freeli": 1915, "94304870911616": 1915, "94304900784016": 1915, "extern_modul": 1915, "model_1": 1915, "pkl": 1915, "myzip": 1915, "file_byt": 1915, "writestr": 1915, "new_file_byt": 1915, "vim": 1915, "vimrc": 1915, "bufreadcmd": 1915, "brows": 1915, "amatch": 1915, "vi": 1915, "packageimport": 1915, "queryabl": 1915, "glob": 1915, "packageexport": 1915, "pe": 1915, "save_pickl": 1915, "has_fil": 1915, "importer_file_structur": 1915, "package_a": 1915, "get_rdep": 1915, "all_path": 1915, "dependency_graph_str": 1915, "save_text": 1915, "save_binari": 1915, "my_resourc": 1915, "config_stuff": 1915, "raw_data": 1915, "my_byt": 1915, "complementari": [1915, 1928], "load_pickl": 1915, "load_text": 1915, "load_binari": 1915, "my_tensor": 1915, "__reduce_package__": 1915, "my_str": 1915, "time_import": 1915, "time_export": 1915, "pickler": 1915, "persistent_id": 1915, "persistent_load": 1915, "generated_module_nam": 1915, "get_unique_id": 1915, "clock_gettim": 1915, "unpackage_foo": 1915, "depickl": 1915, "foo_1": 1915, "foo_2": 1915, "foo_packag": 1915, "foo_collect": 1915, "foo1": 1915, "foo2": 1915, "imported_foo": 1915, "9857706": 1915, "650140837": 1915, "652698385": 1915, "__torch_package__": 1915, "is_in_packag": 1915, "userexcept": 1915, "unpackageableexcept": 1915, "loaded_modul": 1915, "import_modul": 1915, "save_source_str": 1915, "save_modul": 1915, "textwrap": 1915, "dedent": 1915, "my_funct": 1915, "is_packag": 1915, "importlib": 1915, "my_pickl": 1915, "get_my_resourc": 1915, "read_text": 1915, "torch_package_import": 1915, "get_my_pickl": 1915, "is_from_packag": 1915, "stdlib": 1915, "my_test": 1915, "f2": [1915, 1916], "sys_import": 1915, "script_model": 1915, "mixed_model": 1915, "python_model_with_scripted_submodul": 1915, "loaded_script": 1915, "loaded_mix": 1915, "convention": 1915, "94286146172688": 1915, "94286146172784": 1915, "consult": [1915, 1944], "essai": 1915, "another_packag": 1915, "pickletool": 1915, "ast": 1915, "deni": 1915, "my_export": 1915, "my_interned_modul": 1915, "package_export": 1915, "my_externed_modul": 1915, "my_mocked_modul": 1915, "unwant": [1915, 1932], "hodg": 1915, "podg": 1915, "bazel": 1915, "buck": 1915, "my_class_inst": 1915, "imported_myclass": 1915, "okai": 1915, "torch_package_0": 1915, "handle_me_this_wai": 1915, "inadvert": 1915, "pun": 1915, "packagingerror": 1915, "dependency_graph": 1915, "emptymatcherror": 1915, "allow_empti": 1915, "_sysimport": 1915, "hermet": 1915, "scan": 1915, "orderedimport": 1915, "add_depend": 1915, "graphviz": 1915, "lang": 1915, "denied_modul": 1915, "my_subpackag": 1915, "digraph": 1915, "externed_modul": 1915, "interned_modul": 1915, "mocked_modul": 1915, "register_extern_hook": 1915, "register_intern_hook": 1915, "register_mock_hook": 1915, "myobject": 1915, "save_source_fil": 1915, "file_or_directori": 1915, "my_subsubpackag": 1915, "file_or_buff": 1915, "module_allow": 1915, "pytorchfileread": 1915, "python_vers": 1915, "is_dir": 1915, "gpipe": 1916, "suffer": 1916, "allevi": [1916, 1946], "microbatch": 1916, "bubbl": 1916, "except_last": 1916, "deferred_batch_norm": 1916, "torchgpip": 1916, "withdevic": 1916, "micro": 1916, "fc": [1916, 1918], "init_rpc": [1916, 1923, 1924], "output_rref": 1916, "fed": [1916, 1932], "nochunk": 1916, "resnext": 1916, "till": 1916, "skippabl": 1916, "1to3": 1916, "layer1": 1916, "f1": 1916, "layer2": 1916, "layer3": 1916, "skip_1to3": 1916, "f3": 1916, "alic": 1916, "bob": 1916, "carol": 1916, "stashstashpop": 1916, "f_alic": 1916, "f_bob": 1916, "verify_skipp": 1916, "unmatch": [1916, 1937], "fairscal": 1916, "_kinetoprofil": 1917, "profileract": 1917, "add_metadata": 1917, "add_metadata_json": 1917, "unaggreg": 1917, "export_chrome_trac": [1917, 1954], "export_memory_timelin": 1917, "gzip": 1917, "export_stack": 1917, "self_cuda_time_tot": 1917, "flamegraph": 1917, "brendangregg": 1917, "pl": 1917, "countnam": 1917, "perf_viz": 1917, "svg": 1917, "on_trace_readi": 1917, "record_and_sav": 1917, "tensorboard_trace_handl": 1917, "dir_nam": 1917, "logdir": [1917, 1932], "plugin": [1917, 1932, 1942], "code_to_profil": 1917, "row_limit": 1917, "trace_handl": 1917, "test_trace_": 1917, "step_num": 1917, "code_iteration_to_profil": 1917, "mtia": 1917, "skip_first": 1917, "worker_nam": [1917, 1923], "use_gzip": 1917, "range_push": 1917, "range_pop": 1917, "4x": 1918, "88": [1918, 1950], "14k": 1918, "broadli": 1918, "domin": 1918, "previous_layer_fp32": 1918, "linear_fp32": 1918, "activation_fp32": 1918, "next_layer_fp32": 1918, "linear_weight_fp32": 1918, "linear_int8_w_fp32_inp": 1918, "linear_weight_int8": 1918, "ptdq": 1918, "model_fp32": 1918, "model_int8": 1918, "quantize_dynam": 1918, "input_fp32": 1918, "previous_layer_int8": 1918, "linear_with_activation_int8": 1918, "next_layer_int8": 1918, "ptsq": 1918, "minmax": 1918, "l2norm": 1918, "model_fp32_fus": 1918, "fuse_modul": [1918, 1919], "model_fp32_prepar": 1918, "fq": 1918, "prepare_qat": 1918, "training_loop": 1918, "requant": 1918, "linear1": 1918, "custom_qconfig": 1918, "fxptq": 1918, "model_fp": 1918, "usermodel": 1918, "model_to_quant": 1918, "default_dynamic_qconfig": 1918, "model_prepar": 1918, "model_quant": 1918, "model_fus": 1918, "quantize_pt2": 1918, "prepare_pt2": 1918, "capture_pre_autograd_graph": 1918, "xnnpackquant": 1918, "get_symmetric_quantization_config": 1918, "shoud": 1918, "prepare_qat_pt2": 1918, "convert_pt2": 1918, "per_tensor_symmetr": [1918, 1921], "per_channel_symmetr": [1918, 1921], "per_channel_scal": 1918, "per_channel_zero_point": 1918, "quantized_tensor": 1918, "qengin": 1918, "in4": 1918, "tensorrt": [1918, 1938, 1942, 1946], "fx2trt": 1918, "float_modul": [1918, 1936], "staticquantcustommodul": 1918, "observed_modul": 1918, "default_qconfig": [1918, 1937], "vnni": 1918, "test_quantized_op": 1918, "testquantizedop": 1918, "test_custom_module_lstm": 1918, "test_quantize_fx": 1918, "testquantizefx": 1918, "test_static_lstm": 1918, "some_oper": 1918, "e2": 1918, "thnn_conv2d_forward": 1918, "quantizedcpu": 1918, "some_qconfig": 1918, "linearpackedparam": 1918, "_modul": 1918, "prepare_orig": 1918, "quantized_orig": 1918, "scripted_quant": 1918, "fp32_op": 1919, "int8_op": 1919, "cooperlak": 1919, "audit": 1919, "op_fp32": 1919, "op_int8": 1919, "_numeric_suit": 1919, "_numeric_suite_fx": 1919, "0x7f58c7c54700": 1920, "0x7f58b2964430": 1920, "0x7f58b29644c0": 1920, "num_tensor_args_to_observation_typ": 1920, "convbn1d": 1920, "0x7f58b1d298b0": 1920, "reference_quantized_module_for_root": 1920, "fuse_convtranspose_bn": 1920, "0x7f58b1d29a60": 1920, "linearbn1d": 1920, "fuse_linear_bn": 1920, "0x7f58b1d299d0": 1920, "convbn2d": 1920, "convbn3d": 1920, "bnrelu2d": 1920, "bnrelu3d": 1920, "input_type_to_index": 1920, "conv_fus": 1920, "convbnrelu1d": 1920, "convbnrelu2d": 1920, "convbnrelu3d": 1920, "convrelu1d": 1920, "convrelu3d": 1920, "0x7f58b2964550": 1920, "0x7f58b2964b80": 1920, "quint4x2": [1920, 1929, 1933, 1934], "embedding_op": 1920, "0x7f58b2968a60": 1920, "00390625": 1920, "0x7f58b29683a0": 1920, "0x7f58b2968550": 1920, "0x7f58b2964a60": 1920, "0x7f58b2968940": 1920, "0x7f58b28fa0d0": 1920, "0x7f58b29689d0": 1920, "0x7f58b2964d30": 1920, "linear_fus": 1920, "_sequential_wrapper2": 1920, "0x7f58ceda6430": 1920, "0x7f58b2964940": 1920, "0x7f58afd87ee0": 1920, "fuse_conv_bn_relu": 1920, "0x7f58b1d29940": 1920, "0x7f58afd87f70": 1920, "0x7f58afd95040": 1920, "0x7f58afd950d0": 1920, "0x7f58afd95160": 1920, "0x7f58afd951f0": 1920, "0x7f58afd95280": 1920, "0x7f58afd95310": 1920, "0x7f58afd953a0": 1920, "0x7f58afd95430": 1920, "0x7f58afd954c0": 1920, "0x7f58b2964af0": 1920, "0078125": 1920, "customconfig": 1921, "custom_module_config": 1921, "_caller": 1922, "_devices_kw": 1922, "slowli": 1922, "unind": 1922, "deivce_typ": 1922, "shortcom": 1923, "stitch": 1923, "rpc_backend_opt": 1923, "trainer3": 1923, "parameterserver2": 1923, "dash": [1923, 1925], "backendtyp": 1923, "rpcbackendopt": 1923, "rpcagent": 1923, "transmit": 1923, "calle": [1923, 1925], "_set_rpc_timeout": 1923, "5678": 1923, "worker0": 1923, "my_script_add": 1923, "wire": 1923, "fut2": 1923, "meth": 1923, "grace": 1923, "pend": [1923, 1932, 1941], "userrref": [1923, 1925], "async_execut": 1923, "paus": 1923, "outmost": 1923, "async_add_chain": 1923, "worker2": 1923, "script_add": 1923, "async_add": 1923, "asyncexecutionclass": 1923, "static_async_add": 1923, "class_async_add": 1923, "ret_fut": 1923, "bound_async_add": 1923, "rpc_timeout": 1923, "incid": [1923, 1925], "nvlink": 1923, "multiplex": 1923, "tensorpiperpcbackendopt": 1923, "num_worker_thread": 1923, "device_map": 1923, "_transport": 1923, "tensorpipeag": 1923, "set_device_map": 1923, "intermitt": 1923, "pyrref": 1923, "type_hint": 1923, "_distributed_rpc": 1923, "dist_autograd_ctx_id": 1923, "ctx_id": 1923, "ownerrref": [1923, 1925], "remote_modul": 1923, "forward_async": 1923, "remote_devic": 1923, "workernam": 1923, "trainer0": 1923, "ps0": 1923, "remote_linear_modul": 1923, "get_module_rref": 1923, "remote_paramet": 1923, "my_add": [1924, 1957], "t4": 1924, "t5": 1924, "autograd_message_id": 1924, "autograd_context_id": 1924, "send1": 1924, "kickoff": 1924, "recv2": 1924, "heard": 1924, "send2": 1924, "recv1": 1924, "dist_autograd_simpl": 1924, "random_tensor": 1924, "_run_process": 1924, "dst_rank": 1924, "dst_name": 1924, "run_process": 1924, "rrefid": 1925, "transient": 1925, "udf": 1925, "deliveri": 1925, "knowledg": 1925, "danger": 1925, "ancestor": 1925, "trickier": 1925, "wouldn": [1925, 1945], "forkid": 1925, "ack": 1925, "solid": 1925, "gc": 1925, "followup": 1925, "lil": 1927, "stark": 1927, "9093": 1927, "1411": 1927, "7568": 1927, "9589": 1927, "2794": 1927, "catastroph": 1927, "9900": 1927, "metadata_mask": 1927, "rce": 1927, "rc": 1927, "62": 1927, "to_sparse_semi_structur": 1927, "1x4": 1927, "16x16": 1927, "a_spars": 1927, "sparsesemistructuredtensor": 1927, "000": 1927, "400": 1927, "s2": 1927, "plain_dim_s": 1927, "lp64": 1927, "280": 1927, "310": 1927, "sp": 1927, "9078": 1927, "conception": 1927, "sparsesemistructur": 1927, "lobpcg": 1927, "geneig": 1927, "pca_lowrank": 1927, "kindli": 1927, "airy_ai": 1928, "airi": 1928, "onward": 1928, "9635": 1928, "entr": 1928, "3466": 1928, "int_": 1928, "8427": 1928, "0561": 1928, "4769": 1928, "9213": 1928, "8858": 1928, "7683": 1928, "7481": 1928, "2920": 1928, "int_0": 1928, "gammaln": 1928, "a1": 1928, "a2": 1928, "3528": 1928, "5665": 1928, "6472": 1928, "4335": 1928, "2650": 1928, "2661": 1928, "2796": 1928, "8808": 1928, "3019": 1928, "4658": 1928, "3085": 1928, "2430": 1928, "2070": 1928, "5652": 1928, "9534": 1928, "7595": 1928, "2153": 1928, "log_ndtr": 1928, "_ndtr": 1928, "6077": 1928, "7832": 1928, "841": 1928, "6931": 1928, "1728": 1928, "023": 1928, "9331": 1928, "6486": 1928, "1523": 1928, "6516": 1928, "6352": 1928, "6131": 1928, "7169": 1928, "6261": 1928, "displaystyl": 1928, "undefiend": 1928, "6835": 1928, "8474": 1928, "1929": 1928, "7162": 1928, "4180": 1928, "3928": 1928, "4007": 1928, "7586": 1928, "3901": 1928, "5049": 1928, "ndtr": 1928, "0228": 1928, "1587": 1928, "9772": 1928, "9987": 1928, "2p": 1928, "64493": 1928, "4041": 1928, "8288": 1928, "4939": 1928, "4091": 1928, "8863": 1928, "771": 1928, "scaled_modified_bessel_k0": 1928, "scaled_modified_bessel_k1": 1928, "2948": 1928, "0267": 1928, "1566": 1928, "9186": 1928, "8631": 1928, "0259": 1928, "1300": 1928, "spheric": 1928, "xlog1pi": 1928, "3863": 1928, "1972": 1928, "6094": 1928, "2189": 1928, "8283": 1928, "7726": 1928, "0986": 1928, "1589": 1928, "hurwitz": 1928, "6449": 1928, "0823": 1928, "untyp": 1929, "wrap_storag": 1929, "complex_doubl": 1929, "from_buff": 1929, "is_hpu": 1929, "pickle_storage_typ": 1929, "byteswap": 1929, "quint2x4": [1929, 1934], "twelv": 1930, "halftensor": [1930, 1933], "bfloat16tensor": [1930, 1933], "chartensor": [1930, 1933], "shorttensor": [1930, 1933], "binary16": [1930, 1933], "significand": [1930, 1933], "float_tensor": 1930, "double_tensor": 1930, "complex_float_tensor": 1930, "complex_double_tensor": 1930, "int_tensor": 1930, "long_tensor": 1930, "uint_tensor": 1930, "bool_tensor": 1930, "long_zerodim": 1930, "int_zerodim": 1930, "set_default_devic": 1930, "cuda1": 1930, "nhwc": [1930, 1932], "channels_last_3d": 1930, "ndhwc": 1930, "blogpost": 1931, "totensor": 1932, "trainset": 1932, "mnist": 1932, "mnist_train": 1932, "trainload": 1932, "grayscal": 1932, "make_grid": 1932, "add_imag": 1932, "add_graph": 1932, "clutter": 1932, "n_iter": 1932, "purge_step": 1932, "max_queu": 1932, "flush_sec": 1932, "filename_suffix": 1932, "current_datetime_hostnam": 1932, "exp1": 1932, "global_step": 1932, "purg": 1932, "event_file_writ": 1932, "eventfilewrit": 1932, "may04_22": 1932, "54_": 1932, "macbook": 1932, "my_experi": 1932, "lr_0": 1932, "1_batch_16": 1932, "locallr_0": 1932, "scalar_valu": 1932, "walltim": 1932, "new_styl": 1932, "double_precis": 1932, "blobnam": 1932, "simple_valu": 1932, "2x": [1932, 1950], "main_tag": 1932, "tag_scalar_dict": 1932, "run_14h": 1932, "xsinx": 1932, "xcosx": 1932, "tanx": 1932, "add_histogram": 1932, "max_bin": 1932, "fd": 1932, "img_tensor": 1932, "dataformat": 1932, "chw": 1932, "hwc": 1932, "hw": 1932, "wh": 1932, "3xhxw": 1932, "img_hwc": 1932, "my_imag": 1932, "my_image_hwc": 1932, "img_batch": 1932, "my_image_batch": 1932, "add_figur": 1932, "add_video": 1932, "vid_tensor": 1932, "fp": 1932, "moviepi": 1932, "add_audio": 1932, "snd_tensor": 1932, "sample_r": 1932, "44100": 1932, "add_text": 1932, "text_str": 1932, "input_to_model": 1932, "use_strict_trac": 1932, "add_embed": 1932, "label_img": 1932, "metadata_head": 1932, "projector": 1932, "kwlist": 1932, "add_pr_curv": 1932, "num_threshold": 1932, "pr_curv": 1932, "add_custom_scalar": 1932, "chart": 1932, "categorynam": 1932, "chartnam": 1932, "listofproperti": 1932, "multilin": 1932, "taiwan": 1932, "twse": 1932, "0050": 1932, "2330": 1932, "dow": 1932, "aaa": 1932, "bbb": 1932, "ccc": 1932, "nasdaq": 1932, "add_mesh": 1932, "config_dict": 1932, "threej": 1932, "vertex": 1932, "number_of_vertic": 1932, "vertices_tensor": 1932, "colors_tensor": 1932, "faces_tensor": 1932, "my_mesh": 1932, "add_hparam": 1932, "hparam_dict": 1932, "metric_dict": 1932, "hparam_domain_discret": 1932, "run_nam": 1932, "hparam": 1932, "bsize": 1932, "tini": [1933, 1934, 1950, 1959], "_like": 1933, "allow_subclass": 1934, "check_devic": 1934, "check_layout": 1934, "6e": 1934, "3e": 1934, "assert_equ": 1934, "000000000000001e": 1934, "1e0": 1934, "argh": 1934, "nfooter": 1934, "66": 1934, "footer": 1934, "exclude_zero": 1934, "1205": 1934, "2282": 1934, "6380": 1934, "default_gener": 1935, "click": [1935, 1953, 1954], "data_dependent_output": 1935, "dynamic_output_shap": 1935, "inplace_view": 1935, "nondeterministic_bitwis": 1935, "nondeterministic_seed": 1935, "compare_weight": 1936, "float_dict": 1936, "quantized_dict": 1936, "wt_compare_dict": 1936, "qmodel": 1936, "compute_error": 1936, "weight_dict": 1936, "get_logger_dict": 1936, "shadowlogg": 1936, "outputlogg": [1936, 1937], "target_dict": 1936, "q_modul": 1936, "logger_cl": [1936, 1937], "prepare_model_with_stub": 1936, "module_swap_list": 1936, "q_model": 1936, "ob_dict": 1936, "compare_model_stub": 1936, "quantizablebasicblock": 1936, "get_matching_activ": 1936, "act_dict": 1936, "prepare_model_output": 1936, "compare_model_output": 1936, "act_compare_dict": 1936, "weight_comparison": 1937, "extract_weight": 1937, "sqnr": 1937, "extend_logger_results_with_comparison": 1937, "compute_sqnr": 1937, "mp_n": 1937, "mq_n": 1937, "add_logg": 1937, "act_comparison": 1937, "extract_logger_info": 1937, "mp_shadows_mq": 1937, "add_shadow_logg": 1937, "shadow_act_comparison": 1937, "extract_shadow_logger_info": 1937, "ref_node_nam": 1937, "prev_node_nam": 1937, "model_nam": 1937, "ref_nam": 1937, "prev_node_target_typ": 1937, "ref_node_target_typ": 1937, "results_typ": 1937, "index_within_arg": 1937, "index_of_arg": 1937, "qconfig_str": 1937, "outputcomparisonlogg": 1937, "x_ref": 1937, "nstracer": 1937, "skipped_module_nam": 1937, "skipped_module_class": 1937, "model_name_a": 1937, "model_a": 1937, "model_name_b": 1937, "model_b": 1937, "base_name_to_sets_of_related_op": 1937, "unmatchable_types_map": 1937, "op_to_type_to_weight_extraction_fn": 1937, "nsresultstyp": 1937, "name_a": 1937, "name_b": 1937, "should_log_input": 1937, "model_a_with_logg": 1937, "model_b_with_logg": 1937, "model_name_to_use_for_layer_nam": 1937, "node_type_to_io_type_map": 1937, "model_a_shadows_b": 1937, "model_name_1": 1937, "model_name_2": 1937, "comparison_fn": 1937, "comparison_nam": 1937, "prepare_n_shadows_model": 1937, "qconfig_multi_map": 1937, "custom_prepare_fn": 1937, "custom_prepare_kwarg": 1937, "custom_trac": 1937, "args_kwargs_m": 1937, "op_m": 1937, "output_m": 1937, "op_m_n": 1937, "log_m_n": 1937, "log_m_0": 1937, "qconfig_n": 1937, "args_m": 1937, "op_m_prepared_with_qconfig_n": 1937, "out_m_n": 1937, "kwargs_m": 1937, "docblock": 1937, "loggers_set_en": 1937, "loggers_set_save_activ": 1937, "save_activ": 1937, "convert_n_shadows_model": 1937, "custom_convert_fn": 1937, "custom_convert_kwarg": 1937, "extract_results_n_shadows_model": 1937, "print_comparisons_n_shadows_model": 1937, "compute_normalized_l2_error": 1937, "compute_cosine_similar": 1937, "surfac": 1938, "openai": 1938, "ipex": 1938, "tvm": 1938, "apach": 1938, "dashboard": [1938, 1943, 1950], "simd": 1940, "slot": [1940, 1957], "isa": 1940, "amx": 1940, "collect_env": 1940, "avx512f": 1940, "avx512bw": 1940, "avx512_vnni": 1940, "amx_til": 1940, "amx_bf16": 1940, "amx_int8": 1940, "debut": 1941, "cachingalloc": 1941, "cudagraph_tre": 1941, "footgun": [1941, 1945], "my_custom_backend": 1942, "f_opt": 1942, "my_compil": [1942, 1943, 1949], "torch_dynamo_backend": 1942, "your_modul": 1942, "minifi": [1942, 1946], "aot_autograd": 1942, "fw_compil": 1942, "bw_compil": 1942, "make_boxed_func": 1942, "model_opt": 1942, "0x7f1a894649a8": 1942, "mockmodul": 1942, "optimized_mod": 1942, "toy_exampl": [1942, 1943, 1946, 1949, 1956], "abs_1": [1942, 1943], "0x7f8d259298a0": 1942, "superior": 1942, "optimize_for_inference_compil": 1942, "code_to_acceler": 1942, "trt_compil": 1942, "inductor_compil": 1942, "523": 1943, "kaichao": 1943, "tensor_match": 1943, "function_match": 1943, "recaptur": 1943, "__compiled_fn_0": 1943, "eval_with_kei": 1943, "0x7f9ca082f8a0": 1943, "load_fast": [1943, 1949], "load_glob": 1943, "load_method": 1943, "load_const": [1943, 1949], "binary_add": 1943, "binary_true_divid": 1943, "store_fast": 1943, "compare_op": 1943, "pop_jump_if_fals": 1943, "binary_multipli": [1943, 1949], "unpack_sequ": 1943, "__resume_at_30_1": 1943, "__resume_at_38_2": 1943, "__resume_at_": 1943, "jump_absolut": 1943, "resume_at": 1943, "eval_fram": 1943, "_debug_get_cache_entry_list": 1943, "__code__": 1943, "codetyp": 1943, "cache_entri": 1943, "_torchdynamo_orig_cal": 1943, "check_fn": [1943, 1949], "depyf": 1943, "decompil": 1943, "___guarded_cod": [1943, 1949], "_var0": 1943, "_dynamo_dynamic_indic": 1943, "_var1": 1943, "___is_grad_en": 1943, "___are_deterministic_algorithms_en": 1943, "___is_torch_function_en": 1943, "utils_devic": 1943, "___check_tensor": [1943, 1949], "tensor_check_nam": 1943, "__temp_1": 1943, "co_freevar": 1943, "__closure__": 1943, "value_a": 1943, "value_b": 1943, "__self__": 1943, "l_a_": 1943, "l_b_": 1943, "compiled_exampl": 1943, "get_cache_entri": 1943, "recompile_and_add_another_cache_entri": 1943, "symbolic_shap": 1944, "recognit": 1944, "jag": 1944, "induct": 1944, "mark_dynam": 1944, "shapeenv": [1944, 1945], "faithfulli": 1944, "reusabl": 1944, "plumb": 1944, "symnodeimpl": 1944, "python_symnod": 1944, "_meta_registr": 1944, "decomp": [1944, 1945], "primtorch": [1944, 1945], "symnod": 1944, "apparatu": 1944, "precomput": 1944, "constrain_rang": 1944, "wherebi": 1944, "trash": 1945, "bunch": 1945, "from_real_tensor": 1945, "fakeifi": 1945, "dispatch_devic": 1945, "ly": 1945, "derefer": 1945, "backtrac": 1945, "in_kernel_invocation_manag": 1945, "unwrap": 1945, "test_fake_tensor": 1945, "fake_mod": 1945, "fake_x": 1945, "fake_i": 1945, "fake_z": 1945, "_guard": 1945, "detect_fake_mod": 1945, "fake_arg": 1945, "lifecycl": [1945, 1949], "maybe_disable_fake_tensor_mod": 1945, "nich": 1945, "faketensorprop": 1945, "fake_tensor_prop": 1945, "propagate_dont_convert_input": 1945, "fake_input": 1945, "real_tensor": 1945, "annoi": 1945, "somehow": 1945, "fakecopymod": 1945, "gave": 1945, "fakeif": 1945, "tension": 1945, "analys": 1945, "hopefulli": 1945, "impl_abstract": 1945, "hardcod": 1945, "metaconvert": 1945, "die": 1945, "unback": 1945, "saroufim": 1946, "evalfram": 1946, "usercod": 1946, "rob": 1946, "diminish": 1946, "vast": 1946, "nopython": [1946, 1949, 1956], "250k": 1946, "aitempl": 1946, "aot_eag": [1946, 1956], "compile_tim": [1946, 1954, 1956], "torch_compile_debug": [1946, 1948], "troubl": [1946, 1947, 1956], "compileprofil": [1946, 1956], "profiler_model": [1946, 1956], "traffic": 1946, "frozen_toy_exampl": 1946, "multiprocessor": 1946, "some_fun": [1946, 1956], "insurmount": [1946, 1956], "woo": [1946, 1956], "out_guard": [1946, 1956], "ops_per_graph": [1946, 1956], "builtinvari": [1946, 1956], "constantvari": [1946, 1949, 1956], "generic_jump": [1946, 1956], "torchdynamo_dynamic_shap": 1946, "cv": 1946, "app": 1946, "unnecessarili": 1946, "cold": [1946, 1953], "visibli": 1946, "torchdynamo_repro_level": [1946, 1956], "bisect": [1946, 1956], "torchdynamo_repro_aft": [1946, 1956], "dramat": [1946, 1956], "capture_func_transform": 1946, "wrapper_fn": 1946, "my_fn": 1946, "some_list": 1946, "bad_fn": 1946, "pitfal": 1946, "_indices_from": 1946, "recarrai": 1946, "float128": 1946, "complex256": 1946, "uint16": 1946, "uint32": 1946, "uint64": 1946, "esoter": 1946, "ufunc": 1946, "poly1d": 1946, "__array_wrap__": 1946, "numpy_fn": 1946, "tweak": 1946, "daunt": 1946, "diagnos": 1946, "tackl": 1946, "pinpoint": 1946, "discern": 1946, "trace_numpi": 1946, "_numpi": 1946, "uncommon": 1946, "a_fn": [1946, 1947], "aa_fn": [1946, 1947], "ab_fn": [1946, 1947], "handel": 1947, "unblock": 1947, "nnthi": 1947, "black": 1947, "nnnote": 1947, "screen": [1947, 1954], "b_fn": 1947, "white": 1947, "new_fn": 1948, "famou": 1948, "crunch": 1948, "torchinductor_": 1948, "your_usernam": 1948, "size_hint": 1948, "i32": 1948, "instance_descriptor": 1948, "divisible_by_16": 1948, "equal_to_1": 1948, "in_ptr0": 1948, "out_ptr0": 1948, "xnumel": 1948, "xblock": 1948, "tl": 1948, "constexpr": 1948, "xoffset": 1948, "program_id": 1948, "xindex": 1948, "xmask": 1948, "tmp0": 1948, "tmp1": 1948, "tmp2": 1948, "tmp3": 1948, "v0": 1948, "opt_model": 1948, "timm": [1948, 1953], "huggingfac": [1948, 1953], "berttoken": 1948, "bertmodel": 1948, "uncas": 1948, "me": 1948, "encoded_input": 1948, "return_tensor": 1948, "trigonometri": 1948, "skim": 1948, "create_model": 1948, "resnext101_32x8d": 1948, "fn_foo": 1949, "grab": 1949, "dig": 1949, "hole": 1949, "neutral": 1949, "_pyinterpreterstate_setevalframefunc": 1949, "convert_fram": [1949, 1956], "convert_frame_assert": 1949, "gloss": 1949, "compiler_fn": 1949, "one_graph": 1949, "_convert_frame_assert": 1949, "frametyp": 1949, "f_code": 1949, "needless": 1949, "evict": 1949, "transform_code_object": 1949, "output_instruct": 1949, "guardedcod": 1949, "symbolic_loc": 1949, "f_local": 1949, "variablebuild": 1949, "localsourc": 1949, "_wrap": 1949, "variabletrack": 1949, "make_guard": 1949, "pump": 1949, "cool": 1949, "get_instruct": 1949, "124": 1949, "opnam": 1949, "argval": 1949, "starts_lin": 1949, "is_jump_target": 1949, "inst": 1949, "unimpl": 1949, "dozen": 1949, "symbolic_convert": [1949, 1956], "spoken": 1949, "quiet": 1949, "replace_guard": 1949, "add_guard": 1949, "behalf": 1949, "python_typ": 1949, "as_proxi": 1949, "as_python_proxi": 1949, "bookkeep": 1949, "flesh": 1949, "relianc": 1949, "build_tupl": 1949, "popn": 1949, "tuplevari": 1949, "pydoc": 1949, "tensorvari": 1949, "instructiontranslatorbas": 1949, "ctor": 1949, "guardsourc": 1949, "create_fn": 1949, "guard_sourc": 1949, "istyp": 1949, "guardbuild": 1949, "equals_match": 1949, "rangevari": 1949, "appar": 1949, "checkfunctionmanag": 1949, "compile_check_fn": 1949, "cacheentri": 1949, "create_cache_entri": 1949, "pyobject": 1949, "guarded_cod": 1949, "debug_null_check": 1949, "pyobject_getattrstr": 1949, "null_check": 1949, "pycodeobject": 1949, "sort_kei": 1949, "guard_nn_modul": 1949, "is_nn_modul": 1949, "local_build": 1949, "global_build": 1949, "___check_type_id": 1949, "94367738391392": 1949, "_eval_fram": 1949, "anew": 1949, "weak": 1949, "moduleinvalid": 1949, "torchinductor_unique_kernel_nam": 1950, "triton_poi_fused_cat_155": 1950, "poi": 1950, "torchinductor_benchmark_kernel": 1950, "har": 1950, "torchinductor_max_autotun": 1950, "mixnet_l": 1950, "timm_model": 1950, "torchinductor_shunt": 1950, "qz": 1950, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 1950, "shunting314": 1950, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 1950, "48efc83b12ec3ead950052e4a0220b10": 1950, "compiled_module_profil": 1950, "browser": [1950, 1954], "zoom": [1950, 1954, 1958], "distort": [1950, 1954], "densenet121": 1950, "69": 1950, "cutlass": 1950, "57": 1950, "ff": 1950, "justifi": 1950, "triton_red_fus": 1950, "__native_batch_norm_legit_functional_16": 1950, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 1950, "_adaptive_avg_pool2d_backward": 1951, "half_to_float": 1951, "no_stat": 1951, "start_step": 1951, "avg_pool2d_backward": 1951, "convolution_backward": 1951, "bias_siz": 1951, "output_mask": 1951, "scalar_mod": 1951, "tensor_mod": 1951, "embedding_dense_backward": 1951, "num_weight": 1951, "max_pool2d_with_indices_backward": 1951, "native_group_norm_backward": 1951, "rstd": 1951, "native_layer_norm_backward": 1951, "tensor_scalar": 1951, "tensor_tensor": 1951, "dim_int": 1951, "dim_intlist": 1951, "broadcast_dimens": 1951, "start_indic": 1951, "limit_indic": 1951, "start_index": 1951, "limit_index": 1951, "outer_length": 1951, "constabl": 1952, "_forward_pre_hook": 1952, "_backward_pre_hook": 1952, "_backward_hook": 1952, "_state_dict_hook": 1952, "load_": 1952, "warn_onc": 1952, "hui": 1953, "nightli": 1953, "a100": [1953, 1956], "night": 1953, "40gb": [1953, 1956], "2ghz": 1953, "torchbench": 1953, "trend": 1953, "droplist": 1953, "with_cudagraph": 1953, "toosl": 1954, "ncu": 1954, "model_c": 1954, "fwd_bwd": 1954, "scroll": 1954, "shortcut": 1954, "compiledfunct": 1954, "compiledfunctionbackward": 1954, "ac2g": 1954, "dropdown": 1954, "525": 1954, "_init_for_cuda_graph": 1954, "warmup_compil": 1954, "fn_c": 1954, "record_funct": 1954, "trace_compil": 1954, "synthet": 1954, "modelwithbreak": 1954, "create_sequenti": 1954, "mod1": 1954, "mod2": 1954, "mod3": 1954, "mod4": 1954, "trace_break": 1954, "sit": 1955, "replace_add_with_mul": 1955, "insert_relu_after_add": 1955, "new_relu_nod": 1955, "replaceaddwithmul": 1955, "transformed_graph_modul": 1955, "replaceaddwithmulsub": 1955, "mul_r": 1955, "removedetachpass": 1955, "args_map": 1955, "_schema": 1955, "kwarg_onli": 1955, "scalartotensorpass": 1955, "try_coerc": 1955, "replace_pattern": 1955, "replaced_pattern": 1955, "replace_pattern_with_filt": 1955, "replacedpattern": 1955, "passmanag": 1955, "pass_manag": 1955, "pm": 1955, "replace_add_with_div": 1955, "replace_div_with_mul": 1955, "run_checks_after_each_pass": 1955, "suppress_check_failur": 1955, "graph_module_out": 1955, "set_check": 1955, "check_div_target": 1955, "add_check": 1955, "subgraphmatch": 1955, "matcher_util": 1955, "match_output": 1955, "match_placehold": 1955, "remove_overlapping_match": 1955, "ignore_liter": 1955, "largemodel": 1955, "_bia": 1955, "large_model_graph": 1955, "patternmodel": 1955, "_weight_1": 1955, "_bias_1": 1955, "pattern_graph": 1955, "subgraph_match": 1955, "match_result": 1955, "internalmatch": 1955, "default_factori": 1955, "placeholder_nod": 1955, "returning_nod": 1955, "capabilitybasedpartition": 1955, "l34": 1955, "operator_support": 1955, "operatorsupportbas": 1955, "allows_single_node_partit": 1955, "non_compute_op": 1955, "_oper": 1955, "allowed_single_node_partition_op": 1955, "ll28c1": 1955, "l28c1": 1955, "is_node_support": 1955, "l150": 1955, "any_chain": 1955, "l164": 1955, "addmuloperatorsupport": 1955, "capability_partition": 1955, "op_support": 1955, "partition_list": 1955, "propose_partit": 1955, "fused_graph_modul": 1955, "fuse_partit": 1955, "lazo": 1956, "torchdynamo_verbos": 1956, "replay_record_en": 1956, "torchdynamo_debug_funct": 1956, "test_assertion_error": 1956, "compiled_test_assertion_error": 1956, "mlazo": 1956, "837": 1956, "build_map": 1956, "test_backend_error": 1956, "compiled_test_backend_error": 1956, "decomp_fn": 1956, "810": 1956, "repro_aft": 1956, "minifier_launch": 1956, "base_dir": 1956, "rand_strid": 1956, "0a0": 1956, "gitfddfc44": 1956, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 1956, "2022": 1956, "thu_feb_10_18": 1956, "41_pst_2022": 1956, "v11": 1956, "cuda_11": 1956, "r11": 1956, "30978841_0": 1956, "sxm4": 1956, "compile_fx": 1956, "compile_fx_inn": 1956, "toy_compil": 1956, "debug_util": 1956, "run_fwd_maybe_bwd": 1956, "opt_mod": 1956, "rg": 1956, "test_model": 1956, "debug_dir_root": 1956, "torch_compile_debug_dir": 1956, "run_2023_03_01_08_20_52_143510": 1956, "pid_180167": 1956, "model__0_forward_1": 1956, "aot_model___0_debug": 1956, "fx_graph_read": 1956, "fx_graph_runn": 1956, "fx_graph_transform": 1956, "ir_post_fus": 1956, "ir_pre_fus": 1956, "fx_graph": 1956, "buf1": 1956, "schedulernod": 1956, "computedbuff": 1956, "memorydep": 1956, "unmet_depend": 1956, "buf0": 1956, "met_depend": 1956, "primals_2": 1956, "buf1_loop_bodi": 1956, "var_rang": 1956, "z0": 1956, "index0": 1956, "index1": 1956, "get_index": 1956, "get_index_1": 1956, "load_1": 1956, "get_index_2": 1956, "compiled_fun": 1956, "hinder": 1956, "break_reason": 1956, "explanation_verbos": 1956, "compiled_toi": 1956, "as_subclass": 1957, "handle_torch_funct": 1957, "public_api": 1957, "relevant_arg": 1957, "has_torch_function_unari": 1957, "is_tensor_lik": 1957, "notatensor": 1957, "tensorlik": 1957, "is_tensor_method_or_properti": 1957, "__get__": 1957, "__module__": 1957, "wrap_torch_funct": 1957, "drag": 1958, "interactiv": 1958, "memory_viz": 1958, "run_your_cod": 1958, "my_snapshot": 1958, "javascript": 1958, "upload": 1958, "pan": 1958, "mous": 1958, "slider": 1958, "b7f064c000000_0": 1958, "7f064c000000": 1958, "max_entri": 1958, "_memory_viz": 1958, "2u": 1958, "50n": 1958, "currenli": 1958, "typeddict": 1958, "device_trac": 1958, "traceentri": 1958, "total_s": 1958, "segment_typ": 1958, "allocated_s": 1958, "active_s": 1958, "active_awaiting_fre": 1958, "requested_s": 1958, "active_alloc": 1958, "took": 1958, "free_request": 1958, "free_complet": 1958, "segment_alloc": 1958, "segment_fre": 1958, "coorel": 1958, "device_fre": 1958, "dump_snapshot": 1958, "smallest_norm": 1959, "subnorm": 1959, "denormal_numb": 1959}, "objects": {"": [[1935, 0, 0, "-", "torch"], [1868, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1929, 1, 1, "", "BFloat16Storage"], [1929, 1, 1, "", "BoolStorage"], [1929, 1, 1, "", "ByteStorage"], [1929, 1, 1, "", "CharStorage"], [1929, 1, 1, "", "ComplexDoubleStorage"], [1929, 1, 1, "", "ComplexFloatStorage"], [1929, 1, 1, "", "DoubleStorage"], [1929, 1, 1, "", "FloatStorage"], [78, 1, 1, "", "Generator"], [1929, 1, 1, "", "HalfStorage"], [1929, 1, 1, "", "IntStorage"], [1929, 1, 1, "", "LongStorage"], [1929, 1, 1, "", "QInt32Storage"], [1929, 1, 1, "", "QInt8Storage"], [1929, 1, 1, "", "QUInt2x4Storage"], [1929, 1, 1, "", "QUInt4x2Storage"], [1929, 1, 1, "", "QUInt8Storage"], [1929, 1, 1, "", "ShortStorage"], [1935, 1, 1, "", "SymBool"], [1935, 1, 1, "", "SymFloat"], [1935, 1, 1, "", "SymInt"], [1935, 1, 1, "", "Tag"], [1933, 1, 1, "", "Tensor"], [1929, 1, 1, "", "TypedStorage"], [1929, 1, 1, "", "UntypedStorage"], [13, 0, 0, "-", "__config__"], [613, 5, 1, "", "_assert"], [614, 5, 1, "", "_foreach_abs"], [615, 5, 1, "", "_foreach_abs_"], [616, 5, 1, "", "_foreach_acos"], [617, 5, 1, "", "_foreach_acos_"], [618, 5, 1, "", "_foreach_asin"], [619, 5, 1, "", "_foreach_asin_"], [620, 5, 1, "", "_foreach_atan"], [621, 5, 1, "", "_foreach_atan_"], [622, 5, 1, "", "_foreach_ceil"], [623, 5, 1, "", "_foreach_ceil_"], [624, 5, 1, "", "_foreach_cos"], [625, 5, 1, "", "_foreach_cos_"], [626, 5, 1, "", "_foreach_cosh"], [627, 5, 1, "", "_foreach_cosh_"], [628, 5, 1, "", "_foreach_erf"], [629, 5, 1, "", "_foreach_erf_"], [630, 5, 1, "", "_foreach_erfc"], [631, 5, 1, "", "_foreach_erfc_"], [632, 5, 1, "", "_foreach_exp"], [633, 5, 1, "", "_foreach_exp_"], [634, 5, 1, "", "_foreach_expm1"], [635, 5, 1, "", "_foreach_expm1_"], [636, 5, 1, "", "_foreach_floor"], [637, 5, 1, "", "_foreach_floor_"], [638, 5, 1, "", "_foreach_frac"], [639, 5, 1, "", "_foreach_frac_"], [640, 5, 1, "", "_foreach_lgamma"], [641, 5, 1, "", "_foreach_lgamma_"], [642, 5, 1, "", "_foreach_log"], [643, 5, 1, "", "_foreach_log10"], [644, 5, 1, "", "_foreach_log10_"], [645, 5, 1, "", "_foreach_log1p"], [646, 5, 1, "", "_foreach_log1p_"], [647, 5, 1, "", "_foreach_log2"], [648, 5, 1, "", "_foreach_log2_"], [649, 5, 1, "", "_foreach_log_"], [650, 5, 1, "", "_foreach_neg"], [651, 5, 1, "", "_foreach_neg_"], [652, 5, 1, "", "_foreach_reciprocal"], [653, 5, 1, "", "_foreach_reciprocal_"], [654, 5, 1, "", "_foreach_round"], [655, 5, 1, "", "_foreach_round_"], [656, 5, 1, "", "_foreach_sigmoid"], [657, 5, 1, "", "_foreach_sigmoid_"], [658, 5, 1, "", "_foreach_sin"], [659, 5, 1, "", "_foreach_sin_"], [660, 5, 1, "", "_foreach_sinh"], [661, 5, 1, "", "_foreach_sinh_"], [662, 5, 1, "", "_foreach_sqrt"], [663, 5, 1, "", "_foreach_sqrt_"], [664, 5, 1, "", "_foreach_tan"], [665, 5, 1, "", "_foreach_tan_"], [666, 5, 1, "", "_foreach_trunc"], [667, 5, 1, "", "_foreach_trunc_"], [668, 5, 1, "", "_foreach_zero_"], [1877, 0, 0, "-", "_logging"], [670, 5, 1, "", "abs"], [671, 5, 1, "", "absolute"], [672, 5, 1, "", "acos"], [673, 5, 1, "", "acosh"], [674, 5, 1, "", "add"], [675, 5, 1, "", "addbmm"], [676, 5, 1, "", "addcdiv"], [677, 5, 1, "", "addcmul"], [678, 5, 1, "", "addmm"], [679, 5, 1, "", "addmv"], [680, 5, 1, "", "addr"], [681, 5, 1, "", "adjoint"], [682, 5, 1, "", "all"], [683, 5, 1, "", "allclose"], [684, 5, 1, "", "amax"], [685, 5, 1, "", "amin"], [686, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [687, 5, 1, "", "angle"], [688, 5, 1, "", "any"], [1918, 0, 0, "-", "ao"], [854, 5, 1, "", "arange"], [855, 5, 1, "", "arccos"], [856, 5, 1, "", "arccosh"], [857, 5, 1, "", "arcsin"], [858, 5, 1, "", "arcsinh"], [859, 5, 1, "", "arctan"], [860, 5, 1, "", "arctan2"], [861, 5, 1, "", "arctanh"], [862, 5, 1, "", "are_deterministic_algorithms_enabled"], [863, 5, 1, "", "argmax"], [864, 5, 1, "", "argmin"], [865, 5, 1, "", "argsort"], [866, 5, 1, "", "argwhere"], [867, 5, 1, "", "as_strided"], [868, 5, 1, "", "as_tensor"], [869, 5, 1, "", "asarray"], [870, 5, 1, "", "asin"], [871, 5, 1, "", "asinh"], [872, 5, 1, "", "atan"], [873, 5, 1, "", "atan2"], [874, 5, 1, "", "atanh"], [875, 5, 1, "", "atleast_1d"], [876, 5, 1, "", "atleast_2d"], [877, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [909, 5, 1, "", "baddbmm"], [910, 5, 1, "", "bartlett_window"], [911, 5, 1, "", "bernoulli"], [912, 5, 1, "", "bincount"], [913, 5, 1, "", "bitwise_and"], [914, 5, 1, "", "bitwise_left_shift"], [915, 5, 1, "", "bitwise_not"], [916, 5, 1, "", "bitwise_or"], [917, 5, 1, "", "bitwise_right_shift"], [918, 5, 1, "", "bitwise_xor"], [919, 5, 1, "", "blackman_window"], [920, 5, 1, "", "block_diag"], [921, 5, 1, "", "bmm"], [922, 5, 1, "", "broadcast_shapes"], [923, 5, 1, "", "broadcast_tensors"], [924, 5, 1, "", "broadcast_to"], [925, 5, 1, "", "bucketize"], [926, 5, 1, "", "can_cast"], [927, 5, 1, "", "cartesian_prod"], [928, 5, 1, "", "cat"], [929, 5, 1, "", "cdist"], [930, 5, 1, "", "ceil"], [931, 5, 1, "", "chain_matmul"], [932, 5, 1, "", "cholesky"], [933, 5, 1, "", "cholesky_inverse"], [934, 5, 1, "", "cholesky_solve"], [935, 5, 1, "", "chunk"], [936, 5, 1, "", "clamp"], [937, 5, 1, "", "clip"], [938, 5, 1, "", "clone"], [939, 5, 1, "", "column_stack"], [940, 5, 1, "", "combinations"], [941, 5, 1, "", "compile"], [942, 5, 1, "", "compiled_with_cxx11_abi"], [1939, 0, 0, "-", "compiler"], [949, 5, 1, "", "complex"], [950, 5, 1, "", "concat"], [951, 5, 1, "", "concatenate"], [952, 5, 1, "", "cond"], [953, 5, 1, "", "conj"], [954, 5, 1, "", "conj_physical"], [1935, 0, 0, "-", "contrib"], [955, 5, 1, "", "copysign"], [956, 5, 1, "", "corrcoef"], [957, 5, 1, "", "cos"], [958, 5, 1, "", "cosh"], [959, 5, 1, "", "count_nonzero"], [960, 5, 1, "", "cov"], [16, 0, 0, "-", "cpu"], [968, 5, 1, "", "cross"], [17, 0, 0, "-", "cuda"], [1047, 5, 1, "", "cummax"], [1048, 5, 1, "", "cummin"], [1049, 5, 1, "", "cumprod"], [1050, 5, 1, "", "cumsum"], [1051, 5, 1, "", "cumulative_trapezoid"], [1052, 5, 1, "", "deg2rad"], [1053, 5, 1, "", "dequantize"], [1054, 5, 1, "", "det"], [1930, 1, 1, "", "device"], [1055, 5, 1, "", "diag"], [1056, 5, 1, "", "diag_embed"], [1057, 5, 1, "", "diagflat"], [1058, 5, 1, "", "diagonal"], [1059, 5, 1, "", "diagonal_scatter"], [1060, 5, 1, "", "diff"], [1061, 5, 1, "", "digamma"], [1062, 5, 1, "", "dist"], [24, 0, 0, "-", "distributed"], [30, 0, 0, "-", "distributions"], [1063, 5, 1, "", "div"], [1064, 5, 1, "", "divide"], [1065, 5, 1, "", "dot"], [1066, 5, 1, "", "dsplit"], [1067, 5, 1, "", "dstack"], [1930, 1, 1, "", "dtype"], [1068, 5, 1, "", "einsum"], [1069, 5, 1, "", "empty"], [1070, 5, 1, "", "empty_like"], [1071, 5, 1, "", "empty_strided"], [1072, 1, 1, "", "enable_grad"], [1073, 5, 1, "", "eq"], [1074, 5, 1, "", "equal"], [1075, 5, 1, "", "erf"], [1076, 5, 1, "", "erfc"], [1077, 5, 1, "", "erfinv"], [1078, 5, 1, "", "exp"], [1079, 5, 1, "", "exp2"], [1080, 5, 1, "", "expm1"], [45, 0, 0, "-", "export"], [1081, 5, 1, "", "eye"], [1082, 5, 1, "", "fake_quantize_per_channel_affine"], [1083, 5, 1, "", "fake_quantize_per_tensor_affine"], [47, 0, 0, "-", "fft"], [1106, 5, 1, "", "fix"], [1107, 5, 1, "", "flatten"], [1108, 5, 1, "", "flip"], [1109, 5, 1, "", "fliplr"], [1110, 5, 1, "", "flipud"], [1111, 5, 1, "", "float_power"], [1112, 5, 1, "", "floor"], [1113, 5, 1, "", "floor_divide"], [1114, 5, 1, "", "fmax"], [1115, 5, 1, "", "fmin"], [1116, 5, 1, "", "fmod"], [1117, 5, 1, "", "frac"], [1118, 5, 1, "", "frexp"], [1119, 5, 1, "", "from_dlpack"], [1120, 5, 1, "", "from_numpy"], [1121, 5, 1, "", "frombuffer"], [1122, 5, 1, "", "full"], [1123, 5, 1, "", "full_like"], [50, 0, 0, "-", "func"], [1935, 0, 0, "-", "functional"], [55, 0, 0, "-", "futures"], [56, 0, 0, "-", "fx"], [1137, 5, 1, "", "gather"], [1138, 5, 1, "", "gcd"], [1139, 5, 1, "", "ge"], [1140, 5, 1, "", "geqrf"], [1141, 5, 1, "", "ger"], [1142, 5, 1, "", "get_default_dtype"], [1143, 5, 1, "", "get_deterministic_debug_mode"], [1144, 5, 1, "", "get_float32_matmul_precision"], [1145, 5, 1, "", "get_num_interop_threads"], [1146, 5, 1, "", "get_num_threads"], [1147, 5, 1, "", "get_rng_state"], [1148, 5, 1, "", "gradient"], [1149, 5, 1, "", "greater"], [1150, 5, 1, "", "greater_equal"], [1151, 5, 1, "", "gt"], [1152, 5, 1, "", "hamming_window"], [1153, 5, 1, "", "hann_window"], [1154, 5, 1, "", "heaviside"], [1155, 5, 1, "", "histc"], [1156, 5, 1, "", "histogram"], [1157, 5, 1, "", "histogramdd"], [1158, 5, 1, "", "hsplit"], [1159, 5, 1, "", "hspmm"], [1160, 5, 1, "", "hstack"], [1866, 0, 0, "-", "hub"], [1161, 5, 1, "", "hypot"], [1162, 5, 1, "", "i0"], [1163, 5, 1, "", "igamma"], [1164, 5, 1, "", "igammac"], [1165, 5, 1, "", "imag"], [1166, 5, 1, "", "index_add"], [1167, 5, 1, "", "index_copy"], [1168, 5, 1, "", "index_reduce"], [1169, 5, 1, "", "index_select"], [1170, 1, 1, "", "inference_mode"], [1171, 5, 1, "", "initial_seed"], [1172, 5, 1, "", "inner"], [1173, 5, 1, "", "inverse"], [1174, 5, 1, "", "is_complex"], [1175, 5, 1, "", "is_conj"], [1176, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1177, 5, 1, "", "is_floating_point"], [1178, 5, 1, "", "is_grad_enabled"], [1179, 5, 1, "", "is_inference_mode_enabled"], [1180, 5, 1, "", "is_nonzero"], [1181, 5, 1, "", "is_storage"], [1182, 5, 1, "", "is_tensor"], [1183, 5, 1, "", "is_warn_always_enabled"], [1184, 5, 1, "", "isclose"], [1185, 5, 1, "", "isfinite"], [1186, 5, 1, "", "isin"], [1187, 5, 1, "", "isinf"], [1188, 5, 1, "", "isnan"], [1189, 5, 1, "", "isneginf"], [1190, 5, 1, "", "isposinf"], [1191, 5, 1, "", "isreal"], [1192, 5, 1, "", "istft"], [1868, 0, 0, "-", "jit"], [1215, 5, 1, "", "kaiser_window"], [1216, 5, 1, "", "kron"], [1217, 5, 1, "", "kthvalue"], [1930, 1, 1, "", "layout"], [1218, 5, 1, "", "lcm"], [1219, 5, 1, "", "ldexp"], [1220, 5, 1, "", "le"], [1221, 5, 1, "", "lerp"], [1222, 5, 1, "", "less"], [1223, 5, 1, "", "less_equal"], [1224, 5, 1, "", "lgamma"], [1875, 0, 0, "-", "library"], [1876, 0, 0, "-", "linalg"], [1266, 5, 1, "", "linspace"], [1267, 5, 1, "", "load"], [1268, 5, 1, "", "lobpcg"], [1269, 5, 1, "", "log"], [1270, 5, 1, "", "log10"], [1271, 5, 1, "", "log1p"], [1272, 5, 1, "", "log2"], [1273, 5, 1, "", "logaddexp"], [1274, 5, 1, "", "logaddexp2"], [1275, 5, 1, "", "logcumsumexp"], [1276, 5, 1, "", "logdet"], [1277, 5, 1, "", "logical_and"], [1278, 5, 1, "", "logical_not"], [1279, 5, 1, "", "logical_or"], [1280, 5, 1, "", "logical_xor"], [1281, 5, 1, "", "logit"], [1282, 5, 1, "", "logspace"], [1283, 5, 1, "", "logsumexp"], [1284, 5, 1, "", "lt"], [1285, 5, 1, "", "lu"], [1286, 5, 1, "", "lu_solve"], [1287, 5, 1, "", "lu_unpack"], [1288, 5, 1, "", "manual_seed"], [1878, 0, 0, "-", "masked"], [1289, 5, 1, "", "masked_select"], [1290, 5, 1, "", "matmul"], [1291, 5, 1, "", "matrix_exp"], [1292, 5, 1, "", "matrix_power"], [1293, 5, 1, "", "max"], [1294, 5, 1, "", "maximum"], [1295, 5, 1, "", "mean"], [1296, 5, 1, "", "median"], [1930, 1, 1, "", "memory_format"], [1297, 5, 1, "", "meshgrid"], [1298, 5, 1, "", "min"], [1299, 5, 1, "", "minimum"], [1300, 5, 1, "", "mm"], [1301, 5, 1, "", "mode"], [1881, 0, 0, "-", "monitor"], [1302, 5, 1, "", "moveaxis"], [1303, 5, 1, "", "movedim"], [1882, 0, 0, "-", "mps"], [1317, 5, 1, "", "msort"], [1318, 5, 1, "", "mul"], [1319, 5, 1, "", "multinomial"], [1320, 5, 1, "", "multiply"], [1883, 0, 0, "-", "multiprocessing"], [1321, 5, 1, "", "mv"], [1322, 5, 1, "", "mvlgamma"], [1323, 5, 1, "", "nan_to_num"], [1324, 5, 1, "", "nanmean"], [1325, 5, 1, "", "nanmedian"], [1326, 5, 1, "", "nanquantile"], [1327, 5, 1, "", "nansum"], [1328, 5, 1, "", "narrow"], [1329, 5, 1, "", "narrow_copy"], [1330, 5, 1, "", "ne"], [1331, 5, 1, "", "neg"], [1332, 5, 1, "", "negative"], [1886, 0, 0, "-", "nested"], [1333, 5, 1, "", "nextafter"], [1887, 0, 0, "-", "nn"], [1654, 1, 1, "", "no_grad"], [1655, 5, 1, "", "nonzero"], [1656, 5, 1, "", "norm"], [1657, 5, 1, "", "normal"], [1658, 5, 1, "", "not_equal"], [1659, 5, 1, "", "numel"], [1660, 5, 1, "", "ones"], [1661, 5, 1, "", "ones_like"], [1912, 0, 0, "-", "onnx"], [1914, 0, 0, "-", "optim"], [1698, 5, 1, "", "orgqr"], [1699, 5, 1, "", "ormqr"], [1700, 5, 1, "", "outer"], [1957, 0, 0, "-", "overrides"], [1915, 0, 0, "-", "package"], [1701, 5, 1, "", "pca_lowrank"], [1702, 5, 1, "", "permute"], [1703, 5, 1, "", "pinverse"], [1704, 5, 1, "", "poisson"], [1705, 5, 1, "", "polar"], [1706, 5, 1, "", "polygamma"], [1707, 5, 1, "", "positive"], [1708, 5, 1, "", "pow"], [1709, 5, 1, "", "prod"], [1917, 0, 0, "-", "profiler"], [1710, 5, 1, "", "promote_types"], [1711, 5, 1, "", "qr"], [1712, 5, 1, "", "quantile"], [1921, 0, 0, "-", "quantization"], [1713, 5, 1, "", "quantize_per_channel"], [1714, 5, 1, "", "quantize_per_tensor"], [1715, 5, 1, "", "quantized_batch_norm"], [1716, 5, 1, "", "quantized_max_pool1d"], [1717, 5, 1, "", "quantized_max_pool2d"], [1935, 0, 0, "-", "quasirandom"], [1719, 5, 1, "", "rad2deg"], [1720, 5, 1, "", "rand"], [1721, 5, 1, "", "rand_like"], [1722, 5, 1, "", "randint"], [1723, 5, 1, "", "randint_like"], [1724, 5, 1, "", "randn"], [1725, 5, 1, "", "randn_like"], [1922, 0, 0, "-", "random"], [1726, 5, 1, "", "randperm"], [1727, 5, 1, "", "range"], [1728, 5, 1, "", "ravel"], [1729, 5, 1, "", "real"], [1730, 5, 1, "", "reciprocal"], [1731, 5, 1, "", "remainder"], [1732, 5, 1, "", "renorm"], [1733, 5, 1, "", "repeat_interleave"], [1734, 5, 1, "", "reshape"], [1735, 5, 1, "", "resolve_conj"], [1736, 5, 1, "", "resolve_neg"], [1737, 5, 1, "", "result_type"], [1935, 0, 0, "-", "return_types"], [1738, 5, 1, "", "roll"], [1739, 5, 1, "", "rot90"], [1740, 5, 1, "", "round"], [1741, 5, 1, "", "row_stack"], [1742, 5, 1, "", "rsqrt"], [1743, 5, 1, "", "save"], [1744, 5, 1, "", "scatter"], [1745, 5, 1, "", "scatter_add"], [1746, 5, 1, "", "scatter_reduce"], [1747, 5, 1, "", "searchsorted"], [1748, 5, 1, "", "seed"], [1749, 5, 1, "", "select"], [1750, 5, 1, "", "select_scatter"], [1935, 0, 0, "-", "serialization"], [1751, 5, 1, "", "set_default_device"], [1752, 5, 1, "", "set_default_dtype"], [1753, 5, 1, "", "set_default_tensor_type"], [1754, 5, 1, "", "set_deterministic_debug_mode"], [1755, 5, 1, "", "set_float32_matmul_precision"], [1756, 5, 1, "", "set_flush_denormal"], [1757, 1, 1, "", "set_grad_enabled"], [1758, 5, 1, "", "set_num_interop_threads"], [1759, 5, 1, "", "set_num_threads"], [1760, 5, 1, "", "set_printoptions"], [1761, 5, 1, "", "set_rng_state"], [1762, 5, 1, "", "set_warn_always"], [1763, 5, 1, "", "sgn"], [1764, 5, 1, "", "sigmoid"], [1765, 5, 1, "", "sign"], [1926, 0, 0, "-", "signal"], [1777, 5, 1, "", "signbit"], [1778, 5, 1, "", "sin"], [1779, 5, 1, "", "sinc"], [1780, 5, 1, "", "sinh"], [1781, 5, 1, "", "slice_scatter"], [1782, 5, 1, "", "slogdet"], [1783, 5, 1, "", "smm"], [1784, 5, 1, "", "softmax"], [1785, 5, 1, "", "sort"], [1927, 0, 0, "-", "sparse"], [1795, 5, 1, "", "sparse_bsc_tensor"], [1796, 5, 1, "", "sparse_bsr_tensor"], [1797, 5, 1, "", "sparse_compressed_tensor"], [1798, 5, 1, "", "sparse_coo_tensor"], [1799, 5, 1, "", "sparse_csc_tensor"], [1800, 5, 1, "", "sparse_csr_tensor"], [1928, 0, 0, "-", "special"], [1801, 5, 1, "", "split"], [1802, 5, 1, "", "sqrt"], [1803, 5, 1, "", "square"], [1804, 5, 1, "", "squeeze"], [1805, 5, 1, "", "sspaddmm"], [1806, 5, 1, "", "stack"], [1807, 5, 1, "", "std"], [1808, 5, 1, "", "std_mean"], [1809, 5, 1, "", "stft"], [1935, 0, 0, "-", "storage"], [1810, 5, 1, "", "sub"], [1811, 5, 1, "", "subtract"], [1812, 5, 1, "", "sum"], [1813, 5, 1, "", "svd"], [1814, 5, 1, "", "svd_lowrank"], [1815, 5, 1, "", "swapaxes"], [1816, 5, 1, "", "swapdims"], [1817, 5, 1, "", "sym_float"], [1818, 5, 1, "", "sym_int"], [1819, 5, 1, "", "sym_max"], [1820, 5, 1, "", "sym_min"], [1821, 5, 1, "", "sym_not"], [1822, 5, 1, "", "t"], [1823, 5, 1, "", "take"], [1824, 5, 1, "", "take_along_dim"], [1825, 5, 1, "", "tan"], [1826, 5, 1, "", "tanh"], [1827, 5, 1, "", "tensor"], [1828, 5, 1, "", "tensor_split"], [1829, 5, 1, "", "tensordot"], [1934, 0, 0, "-", "testing"], [1830, 5, 1, "", "tile"], [1831, 5, 1, "", "topk"], [1935, 0, 0, "-", "torch_version"], [1832, 5, 1, "", "trace"], [1833, 5, 1, "", "transpose"], [1834, 5, 1, "", "trapezoid"], [1835, 5, 1, "", "trapz"], [1836, 5, 1, "", "triangular_solve"], [1837, 5, 1, "", "tril"], [1838, 5, 1, "", "tril_indices"], [1839, 5, 1, "", "triu"], [1840, 5, 1, "", "triu_indices"], [1841, 5, 1, "", "true_divide"], [1842, 5, 1, "", "trunc"], [1935, 0, 0, "-", "types"], [1843, 5, 1, "", "unbind"], [1844, 5, 1, "", "unflatten"], [1845, 5, 1, "", "unique"], [1846, 5, 1, "", "unique_consecutive"], [1847, 5, 1, "", "unsqueeze"], [1848, 5, 1, "", "use_deterministic_algorithms"], [1960, 0, 0, "-", "utils"], [1853, 5, 1, "", "vander"], [1854, 5, 1, "", "var"], [1855, 5, 1, "", "var_mean"], [1856, 5, 1, "", "vdot"], [1935, 0, 0, "-", "version"], [1857, 5, 1, "", "view_as_complex"], [1858, 5, 1, "", "view_as_real"], [1859, 5, 1, "", "vmap"], [1860, 5, 1, "", "vsplit"], [1861, 5, 1, "", "vstack"], [1862, 5, 1, "", "where"], [1863, 5, 1, "", "xlogy"], [1864, 5, 1, "", "zeros"], [1865, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1929, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1929, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1929, 2, 1, "", "dtype"]], "torch.CharStorage": [[1929, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1929, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1929, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1929, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1929, 2, 1, "", "dtype"]], "torch.Generator": [[78, 2, 1, "", "device"], [78, 3, 1, "", "get_state"], [78, 3, 1, "", "initial_seed"], [78, 3, 1, "", "manual_seed"], [78, 3, 1, "", "seed"], [78, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1929, 2, 1, "", "dtype"]], "torch.IntStorage": [[1929, 2, 1, "", "dtype"]], "torch.LongStorage": [[1929, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1929, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1929, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1929, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1929, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1929, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1929, 2, 1, "", "dtype"]], "torch.Tag": [[1935, 4, 1, "", "name"]], "torch.Tensor": [[1933, 2, 1, "", "H"], [1933, 2, 1, "", "T"], [79, 3, 1, "", "abs"], [80, 3, 1, "", "abs_"], [81, 3, 1, "", "absolute"], [82, 3, 1, "", "absolute_"], [83, 3, 1, "", "acos"], [84, 3, 1, "", "acos_"], [85, 3, 1, "", "acosh"], [86, 3, 1, "", "acosh_"], [87, 3, 1, "", "add"], [88, 3, 1, "", "add_"], [89, 3, 1, "", "addbmm"], [90, 3, 1, "", "addbmm_"], [91, 3, 1, "", "addcdiv"], [92, 3, 1, "", "addcdiv_"], [93, 3, 1, "", "addcmul"], [94, 3, 1, "", "addcmul_"], [95, 3, 1, "", "addmm"], [96, 3, 1, "", "addmm_"], [97, 3, 1, "", "addmv"], [98, 3, 1, "", "addmv_"], [99, 3, 1, "", "addr"], [100, 3, 1, "", "addr_"], [101, 3, 1, "", "adjoint"], [1885, 3, 1, "", "align_as"], [1885, 3, 1, "", "align_to"], [102, 3, 1, "", "all"], [103, 3, 1, "", "allclose"], [104, 3, 1, "", "amax"], [105, 3, 1, "", "amin"], [106, 3, 1, "", "aminmax"], [107, 3, 1, "", "angle"], [108, 3, 1, "", "any"], [109, 3, 1, "", "apply_"], [110, 3, 1, "", "arccos"], [111, 3, 1, "", "arccos_"], [112, 3, 1, "", "arccosh"], [113, 3, 1, "", "arccosh_"], [114, 3, 1, "", "arcsin"], [115, 3, 1, "", "arcsin_"], [116, 3, 1, "", "arcsinh"], [117, 3, 1, "", "arcsinh_"], [118, 3, 1, "", "arctan"], [119, 3, 1, "", "arctan2"], [120, 3, 1, "", "arctan2_"], [121, 3, 1, "", "arctan_"], [122, 3, 1, "", "arctanh"], [123, 3, 1, "", "arctanh_"], [124, 3, 1, "", "argmax"], [125, 3, 1, "", "argmin"], [126, 3, 1, "", "argsort"], [127, 3, 1, "", "argwhere"], [128, 3, 1, "", "as_strided"], [129, 3, 1, "", "as_subclass"], [130, 3, 1, "", "asin"], [131, 3, 1, "", "asin_"], [132, 3, 1, "", "asinh"], [133, 3, 1, "", "asinh_"], [134, 3, 1, "", "atan"], [135, 3, 1, "", "atan2"], [136, 3, 1, "", "atan2_"], [137, 3, 1, "", "atan_"], [138, 3, 1, "", "atanh"], [139, 3, 1, "", "atanh_"], [140, 3, 1, "", "backward"], [141, 3, 1, "", "baddbmm"], [142, 3, 1, "", "baddbmm_"], [143, 3, 1, "", "bernoulli"], [144, 3, 1, "", "bernoulli_"], [145, 3, 1, "", "bfloat16"], [146, 3, 1, "", "bincount"], [147, 3, 1, "", "bitwise_and"], [148, 3, 1, "", "bitwise_and_"], [149, 3, 1, "", "bitwise_left_shift"], [150, 3, 1, "", "bitwise_left_shift_"], [151, 3, 1, "", "bitwise_not"], [152, 3, 1, "", "bitwise_not_"], [153, 3, 1, "", "bitwise_or"], [154, 3, 1, "", "bitwise_or_"], [155, 3, 1, "", "bitwise_right_shift"], [156, 3, 1, "", "bitwise_right_shift_"], [157, 3, 1, "", "bitwise_xor"], [158, 3, 1, "", "bitwise_xor_"], [159, 3, 1, "", "bmm"], [160, 3, 1, "", "bool"], [161, 3, 1, "", "broadcast_to"], [162, 3, 1, "", "byte"], [163, 3, 1, "", "cauchy_"], [164, 3, 1, "", "ccol_indices"], [165, 3, 1, "", "cdouble"], [166, 3, 1, "", "ceil"], [167, 3, 1, "", "ceil_"], [168, 3, 1, "", "cfloat"], [169, 3, 1, "", "chalf"], [170, 3, 1, "", "char"], [171, 3, 1, "", "cholesky"], [172, 3, 1, "", "cholesky_inverse"], [173, 3, 1, "", "cholesky_solve"], [174, 3, 1, "", "chunk"], [175, 3, 1, "", "clamp"], [176, 3, 1, "", "clamp_"], [177, 3, 1, "", "clip"], [178, 3, 1, "", "clip_"], [179, 3, 1, "", "clone"], [180, 3, 1, "", "coalesce"], [181, 3, 1, "", "col_indices"], [182, 3, 1, "", "conj"], [183, 3, 1, "", "conj_physical"], [184, 3, 1, "", "conj_physical_"], [185, 3, 1, "", "contiguous"], [186, 3, 1, "", "copy_"], [187, 3, 1, "", "copysign"], [188, 3, 1, "", "copysign_"], [189, 3, 1, "", "corrcoef"], [190, 3, 1, "", "cos"], [191, 3, 1, "", "cos_"], [192, 3, 1, "", "cosh"], [193, 3, 1, "", "cosh_"], [194, 3, 1, "", "count_nonzero"], [195, 3, 1, "", "cov"], [196, 3, 1, "", "cpu"], [197, 3, 1, "", "cross"], [198, 3, 1, "", "crow_indices"], [199, 3, 1, "", "cuda"], [200, 3, 1, "", "cummax"], [201, 3, 1, "", "cummin"], [202, 3, 1, "", "cumprod"], [203, 3, 1, "", "cumprod_"], [204, 3, 1, "", "cumsum"], [205, 3, 1, "", "cumsum_"], [206, 3, 1, "", "data_ptr"], [207, 3, 1, "", "deg2rad"], [208, 3, 1, "", "dense_dim"], [209, 3, 1, "", "dequantize"], [210, 3, 1, "", "det"], [211, 3, 1, "", "detach"], [212, 3, 1, "", "detach_"], [213, 2, 1, "", "device"], [214, 3, 1, "", "diag"], [215, 3, 1, "", "diag_embed"], [216, 3, 1, "", "diagflat"], [217, 3, 1, "", "diagonal"], [218, 3, 1, "", "diagonal_scatter"], [219, 3, 1, "", "diff"], [220, 3, 1, "", "digamma"], [221, 3, 1, "", "digamma_"], [222, 3, 1, "", "dim"], [223, 3, 1, "", "dim_order"], [224, 3, 1, "", "dist"], [225, 3, 1, "", "div"], [226, 3, 1, "", "div_"], [227, 3, 1, "", "divide"], [228, 3, 1, "", "divide_"], [229, 3, 1, "", "dot"], [230, 3, 1, "", "double"], [231, 3, 1, "", "dsplit"], [232, 3, 1, "", "element_size"], [233, 3, 1, "", "eq"], [234, 3, 1, "", "eq_"], [235, 3, 1, "", "equal"], [236, 3, 1, "", "erf"], [237, 3, 1, "", "erf_"], [238, 3, 1, "", "erfc"], [239, 3, 1, "", "erfc_"], [240, 3, 1, "", "erfinv"], [241, 3, 1, "", "erfinv_"], [242, 3, 1, "", "exp"], [243, 3, 1, "", "exp_"], [244, 3, 1, "", "expand"], [245, 3, 1, "", "expand_as"], [246, 3, 1, "", "expm1"], [247, 3, 1, "", "expm1_"], [248, 3, 1, "", "exponential_"], [249, 3, 1, "", "fill_"], [250, 3, 1, "", "fill_diagonal_"], [251, 3, 1, "", "fix"], [252, 3, 1, "", "fix_"], [253, 3, 1, "", "flatten"], [254, 3, 1, "", "flip"], [255, 3, 1, "", "fliplr"], [256, 3, 1, "", "flipud"], [257, 3, 1, "", "float"], [258, 3, 1, "", "float_power"], [259, 3, 1, "", "float_power_"], [260, 3, 1, "", "floor"], [261, 3, 1, "", "floor_"], [262, 3, 1, "", "floor_divide"], [263, 3, 1, "", "floor_divide_"], [264, 3, 1, "", "fmax"], [265, 3, 1, "", "fmin"], [266, 3, 1, "", "fmod"], [267, 3, 1, "", "fmod_"], [268, 3, 1, "", "frac"], [269, 3, 1, "", "frac_"], [270, 3, 1, "", "frexp"], [271, 3, 1, "", "gather"], [272, 3, 1, "", "gcd"], [273, 3, 1, "", "gcd_"], [274, 3, 1, "", "ge"], [275, 3, 1, "", "ge_"], [276, 3, 1, "", "geometric_"], [277, 3, 1, "", "geqrf"], [278, 3, 1, "", "ger"], [279, 3, 1, "", "get_device"], [280, 2, 1, "", "grad"], [281, 3, 1, "", "greater"], [282, 3, 1, "", "greater_"], [283, 3, 1, "", "greater_equal"], [284, 3, 1, "", "greater_equal_"], [285, 3, 1, "", "gt"], [286, 3, 1, "", "gt_"], [287, 3, 1, "", "half"], [288, 3, 1, "", "hardshrink"], [289, 3, 1, "", "heaviside"], [290, 3, 1, "", "histc"], [291, 3, 1, "", "histogram"], [292, 3, 1, "", "hsplit"], [293, 3, 1, "", "hypot"], [294, 3, 1, "", "hypot_"], [295, 3, 1, "", "i0"], [296, 3, 1, "", "i0_"], [297, 3, 1, "", "igamma"], [298, 3, 1, "", "igamma_"], [299, 3, 1, "", "igammac"], [300, 3, 1, "", "igammac_"], [301, 2, 1, "", "imag"], [302, 3, 1, "", "index_add"], [303, 3, 1, "", "index_add_"], [304, 3, 1, "", "index_copy"], [305, 3, 1, "", "index_copy_"], [306, 3, 1, "", "index_fill"], [307, 3, 1, "", "index_fill_"], [308, 3, 1, "", "index_put"], [309, 3, 1, "", "index_put_"], [310, 3, 1, "", "index_reduce"], [311, 3, 1, "", "index_reduce_"], [312, 3, 1, "", "index_select"], [313, 3, 1, "", "indices"], [314, 3, 1, "", "inner"], [315, 3, 1, "", "int"], [316, 3, 1, "", "int_repr"], [317, 3, 1, "", "inverse"], [318, 3, 1, "", "is_coalesced"], [319, 3, 1, "", "is_complex"], [320, 3, 1, "", "is_conj"], [321, 3, 1, "", "is_contiguous"], [322, 2, 1, "", "is_cuda"], [323, 3, 1, "", "is_floating_point"], [324, 3, 1, "", "is_inference"], [325, 2, 1, "", "is_leaf"], [326, 2, 1, "", "is_meta"], [327, 3, 1, "", "is_pinned"], [328, 2, 1, "", "is_quantized"], [329, 3, 1, "", "is_set_to"], [330, 3, 1, "", "is_shared"], [331, 3, 1, "", "is_signed"], [332, 2, 1, "", "is_sparse"], [333, 2, 1, "", "is_sparse_csr"], [334, 3, 1, "", "isclose"], [335, 3, 1, "", "isfinite"], [336, 3, 1, "", "isinf"], [337, 3, 1, "", "isnan"], [338, 3, 1, "", "isneginf"], [339, 3, 1, "", "isposinf"], [340, 3, 1, "", "isreal"], [341, 3, 1, "", "istft"], [342, 3, 1, "", "item"], [343, 2, 1, "", "itemsize"], [344, 3, 1, "", "kthvalue"], [345, 3, 1, "", "lcm"], [346, 3, 1, "", "lcm_"], [347, 3, 1, "", "ldexp"], [348, 3, 1, "", "ldexp_"], [349, 3, 1, "", "le"], [350, 3, 1, "", "le_"], [351, 3, 1, "", "lerp"], [352, 3, 1, "", "lerp_"], [353, 3, 1, "", "less"], [354, 3, 1, "", "less_"], [355, 3, 1, "", "less_equal"], [356, 3, 1, "", "less_equal_"], [357, 3, 1, "", "lgamma"], [358, 3, 1, "", "lgamma_"], [359, 3, 1, "", "log"], [360, 3, 1, "", "log10"], [361, 3, 1, "", "log10_"], [362, 3, 1, "", "log1p"], [363, 3, 1, "", "log1p_"], [364, 3, 1, "", "log2"], [365, 3, 1, "", "log2_"], [366, 3, 1, "", "log_"], [367, 3, 1, "", "log_normal_"], [368, 3, 1, "", "logaddexp"], [369, 3, 1, "", "logaddexp2"], [370, 3, 1, "", "logcumsumexp"], [371, 3, 1, "", "logdet"], [372, 3, 1, "", "logical_and"], [373, 3, 1, "", "logical_and_"], [374, 3, 1, "", "logical_not"], [375, 3, 1, "", "logical_not_"], [376, 3, 1, "", "logical_or"], [377, 3, 1, "", "logical_or_"], [378, 3, 1, "", "logical_xor"], [379, 3, 1, "", "logical_xor_"], [380, 3, 1, "", "logit"], [381, 3, 1, "", "logit_"], [382, 3, 1, "", "logsumexp"], [383, 3, 1, "", "long"], [384, 3, 1, "", "lt"], [385, 3, 1, "", "lt_"], [386, 3, 1, "", "lu"], [387, 3, 1, "", "lu_solve"], [1933, 2, 1, "", "mH"], [1933, 2, 1, "", "mT"], [388, 3, 1, "", "map_"], [389, 3, 1, "", "masked_fill"], [390, 3, 1, "", "masked_fill_"], [391, 3, 1, "", "masked_scatter"], [392, 3, 1, "", "masked_scatter_"], [393, 3, 1, "", "masked_select"], [394, 3, 1, "", "matmul"], [395, 3, 1, "", "matrix_exp"], [396, 3, 1, "", "matrix_power"], [397, 3, 1, "", "max"], [398, 3, 1, "", "maximum"], [399, 3, 1, "", "mean"], [400, 3, 1, "", "median"], [401, 3, 1, "", "min"], [402, 3, 1, "", "minimum"], [403, 3, 1, "", "mm"], [404, 3, 1, "", "mode"], [405, 3, 1, "", "moveaxis"], [406, 3, 1, "", "movedim"], [407, 3, 1, "", "msort"], [408, 3, 1, "", "mul"], [409, 3, 1, "", "mul_"], [410, 3, 1, "", "multinomial"], [411, 3, 1, "", "multiply"], [412, 3, 1, "", "multiply_"], [413, 3, 1, "", "mv"], [414, 3, 1, "", "mvlgamma"], [415, 3, 1, "", "mvlgamma_"], [1885, 2, 1, "", "names"], [416, 3, 1, "", "nan_to_num"], [417, 3, 1, "", "nan_to_num_"], [418, 3, 1, "", "nanmean"], [419, 3, 1, "", "nanmedian"], [420, 3, 1, "", "nanquantile"], [421, 3, 1, "", "nansum"], [422, 3, 1, "", "narrow"], [423, 3, 1, "", "narrow_copy"], [424, 2, 1, "", "nbytes"], [425, 2, 1, "", "ndim"], [426, 3, 1, "", "ndimension"], [427, 3, 1, "", "ne"], [428, 3, 1, "", "ne_"], [429, 3, 1, "", "neg"], [430, 3, 1, "", "neg_"], [431, 3, 1, "", "negative"], [432, 3, 1, "", "negative_"], [433, 3, 1, "", "nelement"], [434, 3, 1, "", "new_empty"], [435, 3, 1, "", "new_full"], [436, 3, 1, "", "new_ones"], [437, 3, 1, "", "new_tensor"], [438, 3, 1, "", "new_zeros"], [439, 3, 1, "", "nextafter"], [440, 3, 1, "", "nextafter_"], [441, 3, 1, "", "nonzero"], [442, 3, 1, "", "norm"], [443, 3, 1, "", "normal_"], [444, 3, 1, "", "not_equal"], [445, 3, 1, "", "not_equal_"], [446, 3, 1, "", "numel"], [447, 3, 1, "", "numpy"], [448, 3, 1, "", "orgqr"], [449, 3, 1, "", "ormqr"], [450, 3, 1, "", "outer"], [451, 3, 1, "", "permute"], [452, 3, 1, "", "pin_memory"], [453, 3, 1, "", "pinverse"], [454, 3, 1, "", "polygamma"], [455, 3, 1, "", "polygamma_"], [456, 3, 1, "", "positive"], [457, 3, 1, "", "pow"], [458, 3, 1, "", "pow_"], [459, 3, 1, "", "prod"], [460, 3, 1, "", "put_"], [461, 3, 1, "", "q_per_channel_axis"], [462, 3, 1, "", "q_per_channel_scales"], [463, 3, 1, "", "q_per_channel_zero_points"], [464, 3, 1, "", "q_scale"], [465, 3, 1, "", "q_zero_point"], [466, 3, 1, "", "qr"], [467, 3, 1, "", "qscheme"], [468, 3, 1, "", "quantile"], [469, 3, 1, "", "rad2deg"], [470, 3, 1, "", "random_"], [471, 3, 1, "", "ravel"], [472, 2, 1, "", "real"], [473, 3, 1, "", "reciprocal"], [474, 3, 1, "", "reciprocal_"], [475, 3, 1, "", "record_stream"], [1885, 3, 1, "", "refine_names"], [476, 3, 1, "", "register_hook"], [477, 3, 1, "", "register_post_accumulate_grad_hook"], [478, 3, 1, "", "remainder"], [479, 3, 1, "", "remainder_"], [1885, 3, 1, "", "rename"], [1885, 3, 1, "", "rename_"], [480, 3, 1, "", "renorm"], [481, 3, 1, "", "renorm_"], [482, 3, 1, "", "repeat"], [483, 3, 1, "", "repeat_interleave"], [484, 2, 1, "", "requires_grad"], [485, 3, 1, "", "requires_grad_"], [486, 3, 1, "", "reshape"], [487, 3, 1, "", "reshape_as"], [488, 3, 1, "", "resize_"], [489, 3, 1, "", "resize_as_"], [490, 3, 1, "", "resolve_conj"], [491, 3, 1, "", "resolve_neg"], [492, 3, 1, "", "retain_grad"], [493, 2, 1, "", "retains_grad"], [494, 3, 1, "", "roll"], [495, 3, 1, "", "rot90"], [496, 3, 1, "", "round"], [497, 3, 1, "", "round_"], [498, 3, 1, "", "row_indices"], [499, 3, 1, "", "rsqrt"], [500, 3, 1, "", "rsqrt_"], [501, 3, 1, "", "scatter"], [502, 3, 1, "", "scatter_"], [503, 3, 1, "", "scatter_add"], [504, 3, 1, "", "scatter_add_"], [505, 3, 1, "", "scatter_reduce"], [506, 3, 1, "", "scatter_reduce_"], [507, 3, 1, "", "select"], [508, 3, 1, "", "select_scatter"], [509, 3, 1, "", "set_"], [510, 3, 1, "", "sgn"], [511, 3, 1, "", "sgn_"], [512, 2, 1, "", "shape"], [513, 3, 1, "", "share_memory_"], [514, 3, 1, "", "short"], [515, 3, 1, "", "sigmoid"], [516, 3, 1, "", "sigmoid_"], [517, 3, 1, "", "sign"], [518, 3, 1, "", "sign_"], [519, 3, 1, "", "signbit"], [520, 3, 1, "", "sin"], [521, 3, 1, "", "sin_"], [522, 3, 1, "", "sinc"], [523, 3, 1, "", "sinc_"], [524, 3, 1, "", "sinh"], [525, 3, 1, "", "sinh_"], [526, 3, 1, "", "size"], [527, 3, 1, "", "slice_scatter"], [528, 3, 1, "", "slogdet"], [529, 3, 1, "", "smm"], [530, 3, 1, "", "softmax"], [531, 3, 1, "", "sort"], [532, 3, 1, "", "sparse_dim"], [533, 3, 1, "", "sparse_mask"], [534, 3, 1, "", "sparse_resize_"], [535, 3, 1, "", "sparse_resize_and_clear_"], [536, 3, 1, "", "split"], [537, 3, 1, "", "sqrt"], [538, 3, 1, "", "sqrt_"], [539, 3, 1, "", "square"], [540, 3, 1, "", "square_"], [541, 3, 1, "", "squeeze"], [542, 3, 1, "", "squeeze_"], [543, 3, 1, "", "sspaddmm"], [544, 3, 1, "", "std"], [545, 3, 1, "", "stft"], [546, 3, 1, "", "storage"], [547, 3, 1, "", "storage_offset"], [548, 3, 1, "", "storage_type"], [549, 3, 1, "", "stride"], [550, 3, 1, "", "sub"], [551, 3, 1, "", "sub_"], [552, 3, 1, "", "subtract"], [553, 3, 1, "", "subtract_"], [554, 3, 1, "", "sum"], [555, 3, 1, "", "sum_to_size"], [556, 3, 1, "", "svd"], [557, 3, 1, "", "swapaxes"], [558, 3, 1, "", "swapdims"], [559, 3, 1, "", "t"], [560, 3, 1, "", "t_"], [561, 3, 1, "", "take"], [562, 3, 1, "", "take_along_dim"], [563, 3, 1, "", "tan"], [564, 3, 1, "", "tan_"], [565, 3, 1, "", "tanh"], [566, 3, 1, "", "tanh_"], [567, 3, 1, "", "tensor_split"], [568, 3, 1, "", "tile"], [569, 3, 1, "", "to"], [570, 3, 1, "", "to_dense"], [571, 3, 1, "", "to_mkldnn"], [572, 3, 1, "", "to_sparse"], [573, 3, 1, "", "to_sparse_bsc"], [574, 3, 1, "", "to_sparse_bsr"], [575, 3, 1, "", "to_sparse_coo"], [576, 3, 1, "", "to_sparse_csc"], [577, 3, 1, "", "to_sparse_csr"], [578, 3, 1, "", "tolist"], [579, 3, 1, "", "topk"], [580, 3, 1, "", "trace"], [581, 3, 1, "", "transpose"], [582, 3, 1, "", "transpose_"], [583, 3, 1, "", "triangular_solve"], [584, 3, 1, "", "tril"], [585, 3, 1, "", "tril_"], [586, 3, 1, "", "triu"], [587, 3, 1, "", "triu_"], [588, 3, 1, "", "true_divide"], [589, 3, 1, "", "true_divide_"], [590, 3, 1, "", "trunc"], [591, 3, 1, "", "trunc_"], [592, 3, 1, "", "type"], [593, 3, 1, "", "type_as"], [594, 3, 1, "", "unbind"], [595, 3, 1, "", "unflatten"], [596, 3, 1, "", "unfold"], [597, 3, 1, "", "uniform_"], [598, 3, 1, "", "unique"], [599, 3, 1, "", "unique_consecutive"], [600, 3, 1, "", "unsqueeze"], [601, 3, 1, "", "unsqueeze_"], [602, 3, 1, "", "untyped_storage"], [603, 3, 1, "", "values"], [604, 3, 1, "", "var"], [605, 3, 1, "", "vdot"], [606, 3, 1, "", "view"], [607, 3, 1, "", "view_as"], [608, 3, 1, "", "vsplit"], [609, 3, 1, "", "where"], [610, 3, 1, "", "xlogy"], [611, 3, 1, "", "xlogy_"], [612, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1929, 3, 1, "", "bfloat16"], [1929, 3, 1, "", "bool"], [1929, 3, 1, "", "byte"], [1929, 3, 1, "", "char"], [1929, 3, 1, "", "clone"], [1929, 3, 1, "", "complex_double"], [1929, 3, 1, "", "complex_float"], [1929, 3, 1, "", "copy_"], [1929, 3, 1, "", "cpu"], [1929, 3, 1, "", "cuda"], [1929, 3, 1, "", "data_ptr"], [1929, 4, 1, "", "device"], [1929, 3, 1, "", "double"], [1929, 2, 1, "", "dtype"], [1929, 3, 1, "", "element_size"], [1929, 3, 1, "", "fill_"], [1929, 3, 1, "", "float"], [1929, 3, 1, "", "float8_e4m3fn"], [1929, 3, 1, "", "float8_e5m2"], [1929, 3, 1, "", "from_buffer"], [1929, 3, 1, "", "from_file"], [1929, 3, 1, "", "get_device"], [1929, 3, 1, "", "half"], [1929, 3, 1, "", "hpu"], [1929, 3, 1, "", "int"], [1929, 4, 1, "", "is_cuda"], [1929, 4, 1, "", "is_hpu"], [1929, 3, 1, "", "is_pinned"], [1929, 3, 1, "", "is_shared"], [1929, 2, 1, "", "is_sparse"], [1929, 3, 1, "", "long"], [1929, 3, 1, "", "nbytes"], [1929, 3, 1, "", "pickle_storage_type"], [1929, 3, 1, "", "pin_memory"], [1929, 3, 1, "", "resize_"], [1929, 3, 1, "", "share_memory_"], [1929, 3, 1, "", "short"], [1929, 3, 1, "", "size"], [1929, 3, 1, "", "tolist"], [1929, 3, 1, "", "type"], [1929, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1929, 3, 1, "", "bfloat16"], [1929, 3, 1, "", "bool"], [1929, 3, 1, "", "byte"], [1929, 3, 1, "", "byteswap"], [1929, 3, 1, "", "char"], [1929, 3, 1, "", "clone"], [1929, 3, 1, "", "complex_double"], [1929, 3, 1, "", "complex_float"], [1929, 3, 1, "", "copy_"], [1929, 3, 1, "", "cpu"], [1929, 3, 1, "", "cuda"], [1929, 3, 1, "", "data_ptr"], [1929, 2, 1, "", "device"], [1929, 3, 1, "", "double"], [1929, 3, 1, "", "element_size"], [1929, 3, 1, "", "fill_"], [1929, 3, 1, "", "float"], [1929, 3, 1, "", "float8_e4m3fn"], [1929, 3, 1, "", "float8_e5m2"], [1929, 3, 1, "", "from_buffer"], [1929, 3, 1, "", "from_file"], [1929, 3, 1, "", "get_device"], [1929, 3, 1, "", "half"], [1929, 3, 1, "", "hpu"], [1929, 3, 1, "", "int"], [1929, 4, 1, "", "is_cuda"], [1929, 4, 1, "", "is_hpu"], [1929, 3, 1, "", "is_pinned"], [1929, 3, 1, "", "is_shared"], [1929, 2, 1, "", "is_sparse"], [1929, 2, 1, "", "is_sparse_csr"], [1929, 3, 1, "", "long"], [1929, 3, 1, "", "mps"], [1929, 3, 1, "", "nbytes"], [1929, 3, 1, "", "new"], [1929, 3, 1, "", "pin_memory"], [1929, 3, 1, "", "resize_"], [1929, 3, 1, "", "share_memory_"], [1929, 3, 1, "", "short"], [1929, 3, 1, "", "size"], [1929, 3, 1, "", "tolist"], [1929, 3, 1, "", "type"], [1929, 3, 1, "", "untyped"]], "torch.__config__": [[13, 5, 1, "", "parallel_info"], [13, 5, 1, "", "show"]], "torch._higher_order_ops.cond": [[12, 5, 1, "", "cond"]], "torch._logging": [[669, 5, 1, "", "set_logs"]], "torch.amp": [[0, 0, 0, "-", "autocast_mode"]], "torch.ao": [[1918, 0, 0, "-", "nn"], [1918, 0, 0, "-", "ns"], [1918, 0, 0, "-", "pruning"], [1918, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1921, 0, 0, "-", "intrinsic"], [1921, 0, 0, "-", "qat"], [1918, 0, 0, "-", "quantizable"], [1918, 0, 0, "-", "quantized"], [1918, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[689, 1, 1, "", "BNReLU2d"], [690, 1, 1, "", "BNReLU3d"], [691, 1, 1, "", "ConvBn1d"], [692, 1, 1, "", "ConvBn2d"], [693, 1, 1, "", "ConvBn3d"], [694, 1, 1, "", "ConvBnReLU1d"], [695, 1, 1, "", "ConvBnReLU2d"], [696, 1, 1, "", "ConvBnReLU3d"], [697, 1, 1, "", "ConvReLU1d"], [698, 1, 1, "", "ConvReLU2d"], [699, 1, 1, "", "ConvReLU3d"], [700, 1, 1, "", "LinearReLU"], [1921, 0, 0, "-", "modules"], [1921, 0, 0, "-", "qat"], [1921, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.modules": [[1918, 0, 0, "-", "fused"]], "torch.ao.nn.intrinsic.qat": [[701, 1, 1, "", "ConvBn1d"], [702, 1, 1, "", "ConvBn2d"], [703, 1, 1, "", "ConvBn3d"], [704, 1, 1, "", "ConvBnReLU1d"], [705, 1, 1, "", "ConvBnReLU2d"], [706, 1, 1, "", "ConvBnReLU3d"], [707, 1, 1, "", "ConvReLU2d"], [708, 1, 1, "", "ConvReLU3d"], [709, 1, 1, "", "LinearReLU"], [710, 1, 1, "", "freeze_bn_stats"], [1921, 0, 0, "-", "modules"], [711, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.qat.modules": [[1918, 0, 0, "-", "conv_fused"], [1918, 0, 0, "-", "linear_fused"], [1918, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized": [[712, 1, 1, "", "BNReLU2d"], [713, 1, 1, "", "BNReLU3d"], [714, 1, 1, "", "ConvReLU1d"], [715, 1, 1, "", "ConvReLU2d"], [716, 1, 1, "", "ConvReLU3d"], [717, 1, 1, "", "LinearReLU"], [1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[718, 1, 1, "", "LinearReLU"], [1921, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1918, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules": [[1918, 0, 0, "-", "bn_relu"], [1918, 0, 0, "-", "conv_add"], [1918, 0, 0, "-", "conv_relu"], [1918, 0, 0, "-", "linear_relu"]], "torch.ao.nn.qat": [[719, 1, 1, "", "Conv2d"], [720, 1, 1, "", "Conv3d"], [721, 1, 1, "", "Linear"], [1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[721, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[722, 1, 1, "", "Linear"], [1921, 0, 0, "-", "modules"]], "torch.ao.nn.qat.dynamic.modules": [[1918, 0, 0, "-", "linear"]], "torch.ao.nn.qat.modules": [[1918, 0, 0, "-", "conv"], [1918, 0, 0, "-", "embedding_ops"], [1918, 0, 0, "-", "linear"]], "torch.ao.nn.quantizable": [[723, 1, 1, "", "LSTM"], [724, 1, 1, "", "MultiheadAttention"], [1918, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[724, 3, 1, "", "dequantize"], [724, 3, 1, "", "forward"]], "torch.ao.nn.quantizable.modules": [[1918, 0, 0, "-", "activation"], [1918, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized": [[725, 1, 1, "", "BatchNorm2d"], [726, 1, 1, "", "BatchNorm3d"], [727, 1, 1, "", "Conv1d"], [728, 1, 1, "", "Conv2d"], [729, 1, 1, "", "Conv3d"], [730, 1, 1, "", "ConvTranspose1d"], [731, 1, 1, "", "ConvTranspose2d"], [732, 1, 1, "", "ConvTranspose3d"], [733, 1, 1, "", "ELU"], [734, 1, 1, "", "Embedding"], [735, 1, 1, "", "EmbeddingBag"], [736, 1, 1, "", "FXFloatFunctional"], [737, 1, 1, "", "FloatFunctional"], [738, 1, 1, "", "GroupNorm"], [739, 1, 1, "", "Hardswish"], [740, 1, 1, "", "InstanceNorm1d"], [741, 1, 1, "", "InstanceNorm2d"], [742, 1, 1, "", "InstanceNorm3d"], [743, 1, 1, "", "LayerNorm"], [744, 1, 1, "", "LeakyReLU"], [745, 1, 1, "", "Linear"], [746, 1, 1, "", "QFunctional"], [747, 1, 1, "", "ReLU6"], [748, 1, 1, "", "Sigmoid"], [1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "functional"], [1921, 0, 0, "-", "modules"], [1918, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[727, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[728, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[729, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[734, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[735, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[745, 3, 1, "", "from_float"], [745, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[749, 1, 1, "", "GRU"], [750, 1, 1, "", "GRUCell"], [751, 1, 1, "", "LSTM"], [752, 1, 1, "", "LSTMCell"], [753, 1, 1, "", "Linear"], [754, 1, 1, "", "RNNCell"], [1921, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[753, 3, 1, "", "from_float"], [753, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic.modules": [[1918, 0, 0, "-", "conv"], [1918, 0, 0, "-", "linear"], [1918, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized.functional": [[755, 1, 1, "", "adaptive_avg_pool2d"], [756, 1, 1, "", "adaptive_avg_pool3d"], [757, 1, 1, "", "avg_pool2d"], [758, 1, 1, "", "avg_pool3d"], [759, 1, 1, "", "celu"], [760, 1, 1, "", "clamp"], [761, 1, 1, "", "conv1d"], [762, 1, 1, "", "conv2d"], [763, 1, 1, "", "conv3d"], [764, 1, 1, "", "elu"], [765, 1, 1, "", "hardsigmoid"], [766, 1, 1, "", "hardswish"], [767, 1, 1, "", "hardtanh"], [768, 1, 1, "", "interpolate"], [769, 1, 1, "", "leaky_relu"], [770, 1, 1, "", "linear"], [771, 1, 1, "", "max_pool1d"], [772, 1, 1, "", "max_pool2d"], [773, 1, 1, "", "threshold"], [774, 1, 1, "", "upsample"], [775, 1, 1, "", "upsample_bilinear"], [776, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.modules": [[1918, 0, 0, "-", "activation"], [1918, 0, 0, "-", "batchnorm"], [1918, 0, 0, "-", "conv"], [1918, 0, 0, "-", "dropout"], [1918, 0, 0, "-", "embedding_ops"], [1918, 0, 0, "-", "functional_modules"], [1918, 0, 0, "-", "linear"], [1918, 0, 0, "-", "normalization"], [1918, 0, 0, "-", "rnn"], [1918, 0, 0, "-", "utils"]], "torch.ao.nn.quantized.reference": [[1918, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.reference.modules": [[1918, 0, 0, "-", "conv"], [1918, 0, 0, "-", "linear"], [1918, 0, 0, "-", "rnn"], [1918, 0, 0, "-", "sparse"], [1918, 0, 0, "-", "utils"]], "torch.ao.nn.sparse": [[1918, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1918, 0, 0, "-", "dynamic"], [1918, 0, 0, "-", "linear"], [1918, 0, 0, "-", "utils"]], "torch.ao.nn.sparse.quantized.dynamic": [[1918, 0, 0, "-", "linear"]], "torch.ao.ns": [[1936, 0, 0, "-", "_numeric_suite"], [1937, 0, 0, "-", "_numeric_suite_fx"], [1918, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1936, 1, 1, "", "Logger"], [1936, 1, 1, "", "OutputLogger"], [1936, 1, 1, "", "Shadow"], [1936, 1, 1, "", "ShadowLogger"], [1936, 5, 1, "", "compare_model_outputs"], [1936, 5, 1, "", "compare_model_stub"], [1936, 5, 1, "", "compare_weights"], [1936, 5, 1, "", "get_logger_dict"], [1936, 5, 1, "", "get_matching_activations"], [1936, 5, 1, "", "prepare_model_outputs"], [1936, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1936, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1936, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1936, 3, 1, "", "add"], [1936, 3, 1, "", "add_relu"], [1936, 3, 1, "", "add_scalar"], [1936, 3, 1, "", "cat"], [1936, 3, 1, "", "forward"], [1936, 3, 1, "", "mul"], [1936, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1936, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1937, 1, 1, "", "NSTracer"], [1937, 1, 1, "", "OutputComparisonLogger"], [1937, 1, 1, "", "OutputLogger"], [1937, 5, 1, "", "add_loggers"], [1937, 5, 1, "", "add_shadow_loggers"], [1937, 5, 1, "", "convert_n_shadows_model"], [1937, 5, 1, "", "extend_logger_results_with_comparison"], [1937, 5, 1, "", "extract_logger_info"], [1937, 5, 1, "", "extract_results_n_shadows_model"], [1937, 5, 1, "", "extract_shadow_logger_info"], [1937, 5, 1, "", "extract_weights"], [1937, 5, 1, "", "loggers_set_enabled"], [1937, 5, 1, "", "loggers_set_save_activations"], [1937, 5, 1, "", "prepare_n_shadows_model"], [1937, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1937, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1937, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1937, 3, 1, "", "forward"]], "torch.ao.ns.fx": [[1918, 0, 0, "-", "graph_matcher"], [1918, 0, 0, "-", "graph_passes"], [1918, 0, 0, "-", "mappings"], [1918, 0, 0, "-", "n_shadows_utils"], [1918, 0, 0, "-", "ns_types"], [1918, 0, 0, "-", "pattern_utils"], [1918, 0, 0, "-", "qconfig_multi_mapping"], [1918, 0, 0, "-", "utils"], [1918, 0, 0, "-", "weight_utils"]], "torch.ao.ns.fx.utils": [[1937, 5, 1, "", "compute_cosine_similarity"], [1937, 5, 1, "", "compute_normalized_l2_error"], [1937, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1918, 0, 0, "-", "scheduler"], [1918, 0, 0, "-", "sparsifier"]], "torch.ao.pruning.scheduler": [[1918, 0, 0, "-", "base_scheduler"], [1918, 0, 0, "-", "cubic_scheduler"], [1918, 0, 0, "-", "lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[1918, 0, 0, "-", "base_sparsifier"], [1918, 0, 0, "-", "nearly_diagonal_sparsifier"], [1918, 0, 0, "-", "utils"], [1918, 0, 0, "-", "weight_norm_sparsifier"]], "torch.ao.quantization": [[777, 1, 1, "", "DeQuantStub"], [778, 1, 1, "", "QuantStub"], [779, 1, 1, "", "QuantWrapper"], [780, 1, 1, "", "add_quant_dequant"], [1918, 0, 0, "-", "backend_config"], [786, 1, 1, "", "convert"], [787, 1, 1, "", "default_eval_fn"], [1918, 0, 0, "-", "fake_quantize"], [1918, 0, 0, "-", "fuse_modules"], [1918, 0, 0, "-", "fuser_method_mappings"], [1918, 0, 0, "-", "fx"], [1918, 0, 0, "-", "observer"], [827, 1, 1, "", "prepare"], [828, 1, 1, "", "prepare_qat"], [829, 1, 1, "", "propagate_qconfig_"], [1921, 0, 0, "-", "pt2e"], [1918, 0, 0, "-", "qconfig"], [1918, 0, 0, "-", "qconfig_mapping"], [1918, 0, 0, "-", "quant_type"], [1918, 0, 0, "-", "quantization_mappings"], [1918, 0, 0, "-", "quantize"], [847, 1, 1, "", "quantize_dynamic"], [1918, 0, 0, "-", "quantize_fx"], [1918, 0, 0, "-", "quantize_jit"], [1918, 0, 0, "-", "quantize_pt2e"], [852, 1, 1, "", "quantize_qat"], [1921, 0, 0, "-", "quantizer"], [1918, 0, 0, "-", "stubs"], [853, 1, 1, "", "swap_module"], [1918, 0, 0, "-", "utils"]], "torch.ao.quantization.backend_config": [[781, 1, 1, "", "BackendConfig"], [782, 1, 1, "", "BackendPatternConfig"], [783, 1, 1, "", "DTypeConfig"], [784, 1, 1, "", "DTypeWithConstraints"], [785, 1, 1, "", "ObservationType"], [1918, 0, 0, "-", "backend_config"], [1918, 0, 0, "-", "executorch"], [1918, 0, 0, "-", "fbgemm"], [1918, 0, 0, "-", "native"], [1918, 0, 0, "-", "observation_type"], [1918, 0, 0, "-", "onednn"], [1918, 0, 0, "-", "qnnpack"], [1918, 0, 0, "-", "tensorrt"], [1918, 0, 0, "-", "utils"], [1918, 0, 0, "-", "x86"]], "torch.ao.quantization.backend_config.BackendConfig": [[781, 4, 1, "", "configs"], [781, 3, 1, "", "from_dict"], [781, 3, 1, "", "set_backend_pattern_config"], [781, 3, 1, "", "set_backend_pattern_configs"], [781, 3, 1, "", "set_name"], [781, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[782, 3, 1, "", "add_dtype_config"], [782, 3, 1, "", "from_dict"], [782, 3, 1, "", "set_dtype_configs"], [782, 3, 1, "", "set_fused_module"], [782, 3, 1, "", "set_fuser_method"], [782, 3, 1, "", "set_observation_type"], [782, 3, 1, "", "set_pattern"], [782, 3, 1, "", "set_qat_module"], [782, 3, 1, "", "set_reference_quantized_module"], [782, 3, 1, "", "set_root_module"], [782, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[783, 3, 1, "", "from_dict"], [783, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[785, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [785, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [785, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[788, 1, 1, "", "FakeQuantize"], [789, 1, 1, "", "FakeQuantizeBase"], [790, 1, 1, "", "FixedQParamsFakeQuantize"], [791, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [792, 2, 1, "", "default_fake_quant"], [793, 2, 1, "", "default_fused_act_fake_quant"], [794, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [795, 2, 1, "", "default_fused_wt_fake_quant"], [796, 2, 1, "", "default_histogram_fake_quant"], [797, 2, 1, "", "default_per_channel_weight_fake_quant"], [798, 2, 1, "", "default_weight_fake_quant"], [799, 1, 1, "", "disable_fake_quant"], [800, 1, 1, "", "disable_observer"], [801, 1, 1, "", "enable_fake_quant"], [802, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fuse_modules": [[803, 1, 1, "", "fuse_modules"]], "torch.ao.quantization.fx": [[1918, 0, 0, "-", "convert"], [1918, 0, 0, "-", "custom_config"], [1918, 0, 0, "-", "fuse"], [1918, 0, 0, "-", "fuse_handler"], [1918, 0, 0, "-", "graph_module"], [1918, 0, 0, "-", "lower_to_fbgemm"], [1918, 0, 0, "-", "lower_to_qnnpack"], [1918, 0, 0, "-", "lstm_utils"], [1918, 0, 0, "-", "match_utils"], [1918, 0, 0, "-", "pattern_utils"], [1918, 0, 0, "-", "prepare"], [1918, 0, 0, "-", "qconfig_mapping_utils"], [1918, 0, 0, "-", "quantize_handler"], [1918, 0, 0, "-", "tracer"], [1918, 0, 0, "-", "utils"]], "torch.ao.quantization.fx.custom_config": [[804, 1, 1, "", "ConvertCustomConfig"], [805, 1, 1, "", "FuseCustomConfig"], [806, 1, 1, "", "PrepareCustomConfig"], [807, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[804, 3, 1, "", "from_dict"], [804, 3, 1, "", "set_observed_to_quantized_mapping"], [804, 3, 1, "", "set_preserved_attributes"], [804, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[805, 3, 1, "", "from_dict"], [805, 3, 1, "", "set_preserved_attributes"], [805, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[806, 3, 1, "", "from_dict"], [806, 3, 1, "", "set_float_to_observed_mapping"], [806, 3, 1, "", "set_input_quantized_indexes"], [806, 3, 1, "", "set_non_traceable_module_classes"], [806, 3, 1, "", "set_non_traceable_module_names"], [806, 3, 1, "", "set_output_quantized_indexes"], [806, 3, 1, "", "set_preserved_attributes"], [806, 3, 1, "", "set_standalone_module_class"], [806, 3, 1, "", "set_standalone_module_name"], [806, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[808, 1, 1, "", "HistogramObserver"], [809, 1, 1, "", "MinMaxObserver"], [810, 1, 1, "", "MovingAverageMinMaxObserver"], [811, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [812, 1, 1, "", "NoopObserver"], [813, 1, 1, "", "ObserverBase"], [814, 1, 1, "", "PerChannelMinMaxObserver"], [815, 1, 1, "", "PlaceholderObserver"], [816, 1, 1, "", "RecordingObserver"], [817, 2, 1, "", "default_debug_observer"], [818, 2, 1, "", "default_dynamic_quant_observer"], [819, 2, 1, "", "default_float_qparams_observer"], [820, 2, 1, "", "default_histogram_observer"], [821, 2, 1, "", "default_observer"], [822, 2, 1, "", "default_per_channel_weight_observer"], [823, 2, 1, "", "default_placeholder_observer"], [824, 2, 1, "", "default_weight_observer"], [825, 1, 1, "", "get_observer_state_dict"], [826, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[809, 3, 1, "", "calculate_qparams"], [809, 3, 1, "", "forward"], [809, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[813, 3, 1, "", "with_args"], [813, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[814, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[1918, 0, 0, "-", "duplicate_dq_pass"], [1918, 0, 0, "-", "eval_utils"], [1918, 0, 0, "-", "graph_utils"], [1918, 0, 0, "-", "port_metadata_pass"], [1918, 0, 0, "-", "prepare"], [1918, 0, 0, "-", "qat_utils"], [1921, 0, 0, "-", "representation"], [1918, 0, 0, "-", "utils"]], "torch.ao.quantization.pt2e.representation": [[1918, 0, 0, "-", "rewrite"]], "torch.ao.quantization.qconfig": [[830, 1, 1, "", "QConfig"], [831, 2, 1, "", "default_activation_only_qconfig"], [832, 2, 1, "", "default_debug_qconfig"], [833, 2, 1, "", "default_dynamic_qconfig"], [834, 2, 1, "", "default_per_channel_qconfig"], [835, 2, 1, "", "default_qat_qconfig"], [836, 2, 1, "", "default_qat_qconfig_v2"], [837, 2, 1, "", "default_qconfig"], [838, 2, 1, "", "default_weight_only_qconfig"], [839, 2, 1, "", "float16_dynamic_qconfig"], [840, 2, 1, "", "float16_static_qconfig"], [841, 2, 1, "", "float_qparams_weight_only_qconfig"], [842, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[843, 1, 1, "", "QConfigMapping"], [844, 1, 1, "", "get_default_qat_qconfig_mapping"], [845, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[843, 3, 1, "", "from_dict"], [843, 3, 1, "", "set_global"], [843, 3, 1, "", "set_module_name"], [843, 3, 1, "", "set_module_name_object_type_order"], [843, 3, 1, "", "set_module_name_regex"], [843, 3, 1, "", "set_object_type"], [843, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[848, 1, 1, "", "convert_fx"], [849, 1, 1, "", "fuse_fx"], [850, 1, 1, "", "prepare_fx"], [851, 1, 1, "", "prepare_qat_fx"]], "torch.ao.quantization.quantizer": [[1918, 0, 0, "-", "composable_quantizer"], [1918, 0, 0, "-", "embedding_quantizer"], [1918, 0, 0, "-", "quantizer"], [1918, 0, 0, "-", "utils"], [1918, 0, 0, "-", "x86_inductor_quantizer"], [1918, 0, 0, "-", "xnnpack_quantizer"], [1918, 0, 0, "-", "xnnpack_quantizer_utils"]], "torch.autograd": [[1, 1, 1, "", "Function"], [1, 0, 0, "-", "anomaly_mode"], [882, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [1, 0, 0, "-", "forward_ad"], [1, 0, 0, "-", "function"], [1, 0, 0, "-", "functional"], [896, 5, 1, "", "grad"], [1, 0, 0, "-", "grad_mode"], [1, 0, 0, "-", "gradcheck"], [1, 0, 0, "-", "graph"], [1, 0, 0, "-", "profiler"], [1, 0, 0, "-", "profiler_legacy"], [1, 0, 0, "-", "profiler_util"], [1, 1, 1, "", "set_detect_anomaly"], [1, 0, 0, "-", "variable"]], "torch.autograd.Function": [[878, 3, 1, "", "backward"], [879, 3, 1, "", "forward"], [880, 3, 1, "", "jvp"], [881, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[883, 1, 1, "", "dual_level"], [884, 5, 1, "", "make_dual"], [885, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[886, 3, 1, "", "mark_dirty"], [887, 3, 1, "", "mark_non_differentiable"], [888, 3, 1, "", "save_for_backward"], [889, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[890, 5, 1, "", "hessian"], [891, 5, 1, "", "hvp"], [892, 5, 1, "", "jacobian"], [893, 5, 1, "", "jvp"], [894, 5, 1, "", "vhp"], [895, 5, 1, "", "vjp"]], "torch.autograd.gradcheck": [[897, 5, 1, "", "gradcheck"], [898, 5, 1, "", "gradgradcheck"]], "torch.autograd.graph.Node": [[899, 3, 1, "", "metadata"], [900, 3, 1, "", "name"], [901, 4, 1, "", "next_functions"], [902, 3, 1, "", "register_hook"], [903, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [904, 5, 1, "", "load_nvprof"], [1, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[905, 3, 1, "", "export_chrome_trace"], [906, 3, 1, "", "key_averages"], [907, 4, 1, "", "self_cpu_time_total"], [908, 3, 1, "", "total_average"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPBackend"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 0, 0, "-", "rnn"], [2, 5, 1, "", "version"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.backends.xeon": [[2, 0, 0, "-", "run_cpu"]], "torch.compiler": [[943, 5, 1, "", "allow_in_graph"], [944, 5, 1, "", "assume_constant_result"], [945, 5, 1, "", "compile"], [946, 5, 1, "", "disable"], [947, 5, 1, "", "list_backends"], [948, 5, 1, "", "reset"]], "torch.cpu": [[961, 1, 1, "", "Stream"], [962, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [963, 5, 1, "", "current_stream"], [964, 5, 1, "", "device_count"], [965, 5, 1, "", "is_available"], [966, 5, 1, "", "stream"], [967, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"]], "torch.cuda": [[969, 1, 1, "", "CUDAGraph"], [970, 1, 1, "", "CUDAPluggableAllocator"], [971, 1, 1, "", "Event"], [972, 1, 1, "", "ExternalStream"], [973, 6, 1, "", "OutOfMemoryError"], [974, 1, 1, "", "Stream"], [975, 1, 1, "", "StreamContext"], [18, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [976, 5, 1, "", "caching_allocator_alloc"], [977, 5, 1, "", "caching_allocator_delete"], [978, 5, 1, "", "can_device_access_peer"], [979, 5, 1, "", "change_current_allocator"], [980, 5, 1, "", "clock_rate"], [17, 0, 0, "-", "comm"], [986, 5, 1, "", "current_blas_handle"], [987, 5, 1, "", "current_device"], [988, 5, 1, "", "current_stream"], [989, 5, 1, "", "default_stream"], [990, 1, 1, "", "device"], [991, 5, 1, "", "device_count"], [992, 1, 1, "", "device_of"], [993, 5, 1, "", "empty_cache"], [17, 0, 0, "-", "error"], [994, 5, 1, "", "get_allocator_backend"], [995, 5, 1, "", "get_arch_list"], [996, 5, 1, "", "get_device_capability"], [997, 5, 1, "", "get_device_name"], [998, 5, 1, "", "get_device_properties"], [999, 5, 1, "", "get_gencode_flags"], [1000, 5, 1, "", "get_rng_state"], [1001, 5, 1, "", "get_rng_state_all"], [1002, 5, 1, "", "get_sync_debug_mode"], [1003, 1, 1, "", "graph"], [1004, 5, 1, "", "graph_pool_handle"], [17, 0, 0, "-", "graphs"], [1005, 5, 1, "", "init"], [1006, 5, 1, "", "initial_seed"], [1007, 5, 1, "", "ipc_collect"], [1008, 5, 1, "", "is_available"], [1009, 5, 1, "", "is_current_stream_capturing"], [1010, 5, 1, "", "is_initialized"], [17, 0, 0, "-", "jiterator"], [1013, 5, 1, "", "list_gpu_processes"], [1014, 5, 1, "", "make_graphed_callables"], [1015, 5, 1, "", "manual_seed"], [1016, 5, 1, "", "manual_seed_all"], [1017, 5, 1, "", "max_memory_allocated"], [1018, 5, 1, "", "max_memory_cached"], [1019, 5, 1, "", "max_memory_reserved"], [1020, 5, 1, "", "mem_get_info"], [17, 0, 0, "-", "memory"], [1021, 5, 1, "", "memory_allocated"], [1022, 5, 1, "", "memory_cached"], [1023, 5, 1, "", "memory_reserved"], [1024, 5, 1, "", "memory_snapshot"], [1025, 5, 1, "", "memory_stats"], [1026, 5, 1, "", "memory_summary"], [1027, 5, 1, "", "memory_usage"], [17, 0, 0, "-", "nccl"], [17, 0, 0, "-", "nvtx"], [1031, 5, 1, "", "power_draw"], [17, 0, 0, "-", "profiler"], [17, 0, 0, "-", "random"], [1032, 5, 1, "", "reset_max_memory_allocated"], [1033, 5, 1, "", "reset_max_memory_cached"], [1034, 5, 1, "", "reset_peak_memory_stats"], [1035, 5, 1, "", "seed"], [1036, 5, 1, "", "seed_all"], [1037, 5, 1, "", "set_device"], [1038, 5, 1, "", "set_per_process_memory_fraction"], [1039, 5, 1, "", "set_rng_state"], [1040, 5, 1, "", "set_rng_state_all"], [1041, 5, 1, "", "set_stream"], [1042, 5, 1, "", "set_sync_debug_mode"], [17, 0, 0, "-", "sparse"], [1043, 5, 1, "", "stream"], [17, 0, 0, "-", "streams"], [1044, 5, 1, "", "synchronize"], [1045, 5, 1, "", "temperature"], [1046, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[969, 3, 1, "", "capture_begin"], [969, 3, 1, "", "capture_end"], [969, 3, 1, "", "debug_dump"], [969, 3, 1, "", "enable_debug_mode"], [969, 3, 1, "", "pool"], [969, 3, 1, "", "replay"], [969, 3, 1, "", "reset"]], "torch.cuda.Event": [[971, 3, 1, "", "elapsed_time"], [971, 3, 1, "", "from_ipc_handle"], [971, 3, 1, "", "ipc_handle"], [971, 3, 1, "", "query"], [971, 3, 1, "", "record"], [971, 3, 1, "", "synchronize"], [971, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[972, 3, 1, "", "query"], [972, 3, 1, "", "record_event"], [972, 3, 1, "", "synchronize"], [972, 3, 1, "", "wait_event"], [972, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[974, 3, 1, "", "query"], [974, 3, 1, "", "record_event"], [974, 3, 1, "", "synchronize"], [974, 3, 1, "", "wait_event"], [974, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[18, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "common"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda.amp.GradScaler": [[0, 3, 1, "", "get_backoff_factor"], [0, 3, 1, "", "get_growth_factor"], [0, 3, 1, "", "get_growth_interval"], [0, 3, 1, "", "get_scale"], [0, 3, 1, "", "is_enabled"], [0, 3, 1, "", "load_state_dict"], [0, 3, 1, "", "scale"], [0, 3, 1, "", "set_backoff_factor"], [0, 3, 1, "", "set_growth_factor"], [0, 3, 1, "", "set_growth_interval"], [0, 3, 1, "", "state_dict"], [0, 3, 1, "", "step"], [0, 3, 1, "", "unscale_"], [0, 3, 1, "", "update"]], "torch.cuda.comm": [[981, 5, 1, "", "broadcast"], [982, 5, 1, "", "broadcast_coalesced"], [983, 5, 1, "", "gather"], [984, 5, 1, "", "reduce_add"], [985, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1011, 5, 1, "", "_create_jit_fn"], [1012, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.memory": [[1958, 5, 1, "", "_dump_snapshot"], [1958, 5, 1, "", "_record_memory_history"], [1958, 5, 1, "", "_snapshot"]], "torch.cuda.nvtx": [[1028, 5, 1, "", "mark"], [1029, 5, 1, "", "range_pop"], [1030, 5, 1, "", "range_push"]], "torch.distributed": [[24, 1, 1, "", "Backend"], [24, 1, 1, "", "DistBackendError"], [24, 1, 1, "", "DistError"], [24, 1, 1, "", "DistNetworkError"], [24, 1, 1, "", "DistStoreError"], [24, 1, 1, "", "FileStore"], [22, 1, 1, "", "GradBucket"], [24, 1, 1, "", "HashStore"], [24, 1, 1, "", "P2POp"], [24, 1, 1, "", "PrefixStore"], [24, 1, 1, "", "ReduceOp"], [24, 1, 1, "", "Store"], [24, 1, 1, "", "TCPStore"], [24, 0, 0, "-", "algorithms"], [24, 5, 1, "", "all_gather"], [24, 5, 1, "", "all_gather_into_tensor"], [24, 5, 1, "", "all_gather_multigpu"], [24, 5, 1, "", "all_gather_object"], [24, 5, 1, "", "all_reduce"], [24, 5, 1, "", "all_reduce_multigpu"], [24, 5, 1, "", "all_to_all"], [24, 5, 1, "", "all_to_all_single"], [24, 0, 0, "-", "argparse_util"], [1923, 0, 0, "-", "autograd"], [24, 5, 1, "", "barrier"], [24, 5, 1, "", "batch_isend_irecv"], [24, 5, 1, "", "broadcast"], [24, 5, 1, "", "broadcast_multigpu"], [24, 5, 1, "", "broadcast_object_list"], [24, 0, 0, "-", "c10d_logger"], [26, 0, 0, "-", "checkpoint"], [24, 0, 0, "-", "collective_utils"], [24, 0, 0, "-", "constants"], [24, 0, 0, "-", "distributed_c10d"], [24, 0, 0, "-", "elastic"], [48, 0, 0, "-", "fsdp"], [24, 5, 1, "", "gather"], [24, 5, 1, "", "gather_object"], [24, 5, 1, "", "get_backend"], [24, 5, 1, "", "get_global_rank"], [24, 5, 1, "", "get_group_rank"], [24, 5, 1, "", "get_process_group_ranks"], [24, 5, 1, "", "get_rank"], [24, 5, 1, "", "get_world_size"], [24, 5, 1, "", "init_process_group"], [24, 5, 1, "", "irecv"], [24, 5, 1, "", "is_available"], [24, 5, 1, "", "is_gloo_available"], [24, 5, 1, "", "is_initialized"], [24, 5, 1, "", "is_mpi_available"], [24, 5, 1, "", "is_nccl_available"], [24, 5, 1, "", "is_torchelastic_launched"], [24, 5, 1, "", "isend"], [24, 0, 0, "-", "launch"], [24, 0, 0, "-", "launcher"], [24, 0, 0, "-", "logging_handlers"], [24, 5, 1, "", "monitored_barrier"], [24, 5, 1, "", "new_group"], [24, 0, 0, "-", "nn"], [28, 0, 0, "-", "optim"], [24, 0, 0, "-", "pipeline"], [24, 5, 1, "", "recv"], [24, 5, 1, "", "reduce"], [24, 5, 1, "", "reduce_multigpu"], [24, 1, 1, "", "reduce_op"], [24, 5, 1, "", "reduce_scatter"], [24, 5, 1, "", "reduce_scatter_multigpu"], [24, 5, 1, "", "reduce_scatter_tensor"], [24, 0, 0, "-", "remote_device"], [24, 0, 0, "-", "rendezvous"], [1923, 0, 0, "-", "rpc"], [42, 0, 0, "-", "run"], [24, 5, 1, "", "scatter"], [24, 5, 1, "", "scatter_object_list"], [24, 5, 1, "", "send"], [24, 0, 0, "-", "tensor"], [24, 0, 0, "-", "utils"]], "torch.distributed.Backend": [[24, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[22, 5, 1, "", "buffer"], [22, 5, 1, "", "gradients"], [22, 5, 1, "", "index"], [22, 5, 1, "", "is_last"], [22, 5, 1, "", "parameters"], [22, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[24, 5, 1, "", "add"], [24, 5, 1, "", "compare_set"], [24, 5, 1, "", "delete_key"], [24, 5, 1, "", "get"], [24, 5, 1, "", "num_keys"], [24, 5, 1, "", "set"], [24, 5, 1, "", "set_timeout"], [24, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[25, 1, 1, "", "Join"], [25, 1, 1, "", "JoinHook"], [25, 1, 1, "", "Joinable"], [24, 0, 0, "-", "ddp_comm_hooks"], [24, 0, 0, "-", "join"], [24, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[25, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[25, 3, 1, "", "main_hook"], [25, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[25, 4, 1, "", "join_device"], [25, 3, 1, "", "join_hook"], [25, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks": [[24, 0, 0, "-", "ddp_zero_hook"], [24, 0, 0, "-", "debugging_hooks"], [24, 0, 0, "-", "default_hooks"], [24, 0, 0, "-", "mixed_precision_hooks"], [24, 0, 0, "-", "optimizer_overlap_hooks"], [24, 0, 0, "-", "post_localSGD_hook"], [24, 0, 0, "-", "powerSGD_hook"], [24, 0, 0, "-", "quantization_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[22, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[22, 5, 1, "", "allreduce_hook"], [22, 5, 1, "", "bf16_compress_hook"], [22, 5, 1, "", "bf16_compress_wrapper"], [22, 5, 1, "", "fp16_compress_hook"], [22, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[22, 1, 1, "", "PowerSGDState"], [22, 5, 1, "", "batched_powerSGD_hook"], [22, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[22, 3, 1, "", "__getstate__"], [22, 3, 1, "", "__setstate__"]], "torch.distributed.algorithms.model_averaging": [[24, 0, 0, "-", "averagers"], [24, 0, 0, "-", "hierarchical_model_averager"], [24, 0, 0, "-", "utils"]], "torch.distributed.autograd": [[1923, 5, 1, "", "backward"], [1923, 1, 1, "", "context"], [1923, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[26, 1, 1, "", "DefaultLoadPlanner"], [26, 1, 1, "", "DefaultSavePlanner"], [26, 1, 1, "", "FileSystemReader"], [26, 1, 1, "", "FileSystemWriter"], [26, 1, 1, "", "LoadPlan"], [26, 1, 1, "", "LoadPlanner"], [26, 1, 1, "", "ReadItem"], [26, 1, 1, "", "SavePlan"], [26, 1, 1, "", "SavePlanner"], [26, 1, 1, "", "StorageReader"], [26, 1, 1, "", "StorageWriter"], [26, 1, 1, "", "WriteItem"], [24, 0, 0, "-", "api"], [24, 0, 0, "-", "default_planner"], [24, 0, 0, "-", "filesystem"], [26, 5, 1, "", "load_state_dict"], [24, 0, 0, "-", "metadata"], [24, 0, 0, "-", "optimizer"], [24, 0, 0, "-", "planner"], [24, 0, 0, "-", "planner_helpers"], [24, 0, 0, "-", "resharding"], [26, 5, 1, "", "save_state_dict"], [24, 0, 0, "-", "state_dict"], [24, 0, 0, "-", "state_dict_loader"], [24, 0, 0, "-", "state_dict_saver"], [24, 0, 0, "-", "storage"], [24, 0, 0, "-", "utils"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[26, 3, 1, "", "lookup_tensor"], [26, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[26, 3, 1, "", "lookup_object"], [26, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[26, 3, 1, "", "commit_tensor"], [26, 3, 1, "", "create_global_plan"], [26, 3, 1, "", "create_local_plan"], [26, 3, 1, "", "finish_plan"], [26, 3, 1, "", "load_bytes"], [26, 3, 1, "", "resolve_tensor"], [26, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[26, 3, 1, "", "create_global_plan"], [26, 3, 1, "", "create_local_plan"], [26, 3, 1, "", "finish_plan"], [26, 3, 1, "", "resolve_data"], [26, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[26, 3, 1, "", "prepare_global_plan"], [26, 3, 1, "", "prepare_local_plan"], [26, 3, 1, "", "read_data"], [26, 3, 1, "", "read_metadata"], [26, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[26, 3, 1, "", "finish"], [26, 3, 1, "", "prepare_global_plan"], [26, 3, 1, "", "prepare_local_plan"], [26, 3, 1, "", "set_up_storage_writer"], [26, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[32, 0, 0, "-", "agent"], [35, 0, 0, "-", "events"], [38, 0, 0, "-", "metrics"], [39, 0, 0, "-", "multiprocessing"], [41, 0, 0, "-", "rendezvous"], [43, 0, 0, "-", "timer"], [24, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[32, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[32, 1, 1, "", "ElasticAgent"], [32, 1, 1, "", "SimpleElasticAgent"], [32, 1, 1, "", "Worker"], [32, 1, 1, "", "WorkerGroup"], [32, 1, 1, "", "WorkerSpec"], [32, 1, 1, "", "WorkerState"], [24, 0, 0, "-", "api"], [24, 0, 0, "-", "local_elastic_agent"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[32, 3, 1, "", "get_worker_group"], [32, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[32, 3, 1, "", "_assign_worker_ranks"], [32, 3, 1, "", "_exit_barrier"], [32, 3, 1, "", "_initialize_workers"], [32, 3, 1, "", "_monitor_workers"], [32, 3, 1, "", "_rendezvous"], [32, 3, 1, "", "_restart_workers"], [32, 3, 1, "", "_shutdown"], [32, 3, 1, "", "_start_workers"], [32, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[32, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[32, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[32, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[32, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events": [[24, 0, 0, "-", "api"], [35, 5, 1, "", "get_logging_handler"], [24, 0, 0, "-", "handlers"], [35, 5, 1, "", "record"]], "torch.distributed.elastic.events.api": [[35, 1, 1, "", "Event"], [35, 2, 1, "", "EventMetadataValue"], [35, 1, 1, "", "EventSource"]], "torch.distributed.elastic.metrics": [[24, 0, 0, "-", "api"], [38, 5, 1, "", "configure"], [38, 5, 1, "", "prof"], [38, 5, 1, "", "put_metric"]], "torch.distributed.elastic.metrics.api": [[38, 1, 1, "", "ConsoleMetricHandler"], [38, 1, 1, "", "MetricHandler"], [38, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.multiprocessing": [[24, 0, 0, "-", "api"], [34, 0, 0, "-", "errors"], [24, 0, 0, "-", "redirects"], [39, 5, 1, "", "start_processes"], [24, 0, 0, "-", "tail_log"]], "torch.distributed.elastic.multiprocessing.api": [[39, 1, 1, "", "MultiprocessContext"], [39, 1, 1, "", "PContext"], [39, 1, 1, "", "RunProcsResult"], [39, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing.errors": [[34, 1, 1, "", "ChildFailedError"], [34, 1, 1, "", "ErrorHandler"], [34, 1, 1, "", "ProcessFailure"], [24, 0, 0, "-", "error_handler"], [24, 0, 0, "-", "handlers"], [34, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[41, 1, 1, "", "RendezvousClosedError"], [41, 1, 1, "", "RendezvousConnectionError"], [41, 1, 1, "", "RendezvousError"], [41, 1, 1, "", "RendezvousHandler"], [41, 1, 1, "", "RendezvousHandlerRegistry"], [41, 1, 1, "", "RendezvousParameters"], [41, 1, 1, "", "RendezvousStateError"], [41, 1, 1, "", "RendezvousTimeoutError"], [24, 0, 0, "-", "api"], [24, 0, 0, "-", "c10d_rendezvous_backend"], [24, 0, 0, "-", "dynamic_rendezvous"], [24, 0, 0, "-", "etcd_rendezvous"], [24, 0, 0, "-", "etcd_rendezvous_backend"], [24, 0, 0, "-", "etcd_server"], [24, 0, 0, "-", "etcd_store"], [41, 0, 0, "-", "registry"], [24, 0, 0, "-", "static_tcp_rendezvous"], [24, 0, 0, "-", "utils"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[41, 3, 1, "", "get_backend"], [41, 3, 1, "", "get_run_id"], [41, 3, 1, "", "is_closed"], [41, 3, 1, "", "next_rendezvous"], [41, 3, 1, "", "num_nodes_waiting"], [41, 3, 1, "", "set_closed"], [41, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[41, 3, 1, "", "create_handler"], [41, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[41, 3, 1, "", "get"], [41, 3, 1, "", "get_as_bool"], [41, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[41, 1, 1, "", "C10dRendezvousBackend"], [41, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[41, 3, 1, "", "get_state"], [41, 4, 1, "", "name"], [41, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[41, 1, 1, "", "DynamicRendezvousHandler"], [41, 1, 1, "", "RendezvousBackend"], [41, 1, 1, "", "RendezvousTimeout"], [41, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[41, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[41, 3, 1, "", "get_state"], [41, 4, 1, "", "name"], [41, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[41, 4, 1, "", "close"], [41, 4, 1, "", "heartbeat"], [41, 4, 1, "", "join"], [41, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[41, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[41, 1, 1, "", "EtcdRendezvousBackend"], [41, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[41, 3, 1, "", "get_state"], [41, 4, 1, "", "name"], [41, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[41, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[41, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[41, 3, 1, "", "add"], [41, 3, 1, "", "check"], [41, 3, 1, "", "get"], [41, 3, 1, "", "set"], [41, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[43, 1, 1, "", "FileTimerClient"], [43, 1, 1, "", "FileTimerServer"], [43, 1, 1, "", "LocalTimerClient"], [43, 1, 1, "", "LocalTimerServer"], [43, 1, 1, "", "TimerClient"], [43, 1, 1, "", "TimerRequest"], [43, 1, 1, "", "TimerServer"], [24, 0, 0, "-", "api"], [43, 5, 1, "", "configure"], [43, 5, 1, "", "expires"], [24, 0, 0, "-", "file_based_local_timer"], [24, 0, 0, "-", "local_timer"]], "torch.distributed.elastic.timer.TimerClient": [[43, 3, 1, "", "acquire"], [43, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[43, 3, 1, "", "clear_timers"], [43, 3, 1, "", "get_expired_timers"], [43, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[24, 0, 0, "-", "api"], [24, 0, 0, "-", "data"], [24, 0, 0, "-", "distributed"], [24, 0, 0, "-", "log_level"], [24, 0, 0, "-", "logging"], [24, 0, 0, "-", "store"]], "torch.distributed.elastic.utils.data": [[24, 0, 0, "-", "cycling_iterator"], [24, 0, 0, "-", "elastic_distributed_sampler"]], "torch.distributed.fsdp": [[48, 1, 1, "", "BackwardPrefetch"], [48, 1, 1, "", "CPUOffload"], [48, 1, 1, "", "FullOptimStateDictConfig"], [48, 1, 1, "", "FullStateDictConfig"], [48, 1, 1, "", "FullyShardedDataParallel"], [48, 1, 1, "", "LocalOptimStateDictConfig"], [48, 1, 1, "", "LocalStateDictConfig"], [48, 1, 1, "", "MixedPrecision"], [48, 1, 1, "", "OptimStateDictConfig"], [48, 1, 1, "", "ShardedOptimStateDictConfig"], [48, 1, 1, "", "ShardedStateDictConfig"], [48, 1, 1, "", "ShardingStrategy"], [48, 1, 1, "", "StateDictConfig"], [48, 1, 1, "", "StateDictSettings"], [24, 0, 0, "-", "api"], [24, 0, 0, "-", "fully_sharded_data_parallel"], [24, 0, 0, "-", "sharded_grad_scaler"], [24, 0, 0, "-", "wrap"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[48, 3, 1, "", "apply"], [48, 3, 1, "", "clip_grad_norm_"], [48, 3, 1, "", "flatten_sharded_optim_state_dict"], [48, 3, 1, "", "forward"], [48, 3, 1, "", "fsdp_modules"], [48, 3, 1, "", "full_optim_state_dict"], [48, 3, 1, "", "get_state_dict_type"], [48, 4, 1, "", "module"], [48, 3, 1, "", "named_buffers"], [48, 3, 1, "", "named_parameters"], [48, 3, 1, "", "no_sync"], [48, 3, 1, "", "optim_state_dict"], [48, 3, 1, "", "optim_state_dict_to_load"], [48, 3, 1, "", "register_comm_hook"], [48, 3, 1, "", "rekey_optim_state_dict"], [48, 3, 1, "", "scatter_full_optim_state_dict"], [48, 3, 1, "", "set_state_dict_type"], [48, 3, 1, "", "shard_full_optim_state_dict"], [48, 3, 1, "", "sharded_optim_state_dict"], [48, 3, 1, "", "state_dict_type"], [48, 3, 1, "", "summon_full_params"]], "torch.distributed.launcher": [[24, 0, 0, "-", "api"]], "torch.distributed.nn": [[24, 0, 0, "-", "api"], [24, 0, 0, "-", "functional"], [24, 0, 0, "-", "jit"]], "torch.distributed.nn.api": [[24, 0, 0, "-", "remote_module"]], "torch.distributed.nn.api.remote_module": [[1923, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1923, 3, 1, "", "get_module_rref"], [1923, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[24, 0, 0, "-", "instantiator"], [24, 0, 0, "-", "templates"]], "torch.distributed.nn.jit.templates": [[24, 0, 0, "-", "remote_module_template"]], "torch.distributed.optim": [[28, 1, 1, "", "DistributedOptimizer"], [28, 1, 1, "", "PostLocalSGDOptimizer"], [28, 1, 1, "", "ZeroRedundancyOptimizer"], [24, 0, 0, "-", "apply_optimizer_in_backward"], [24, 0, 0, "-", "functional_adadelta"], [24, 0, 0, "-", "functional_adagrad"], [24, 0, 0, "-", "functional_adam"], [24, 0, 0, "-", "functional_adamax"], [24, 0, 0, "-", "functional_adamw"], [24, 0, 0, "-", "functional_rmsprop"], [24, 0, 0, "-", "functional_rprop"], [24, 0, 0, "-", "functional_sgd"], [24, 0, 0, "-", "named_optimizer"], [24, 0, 0, "-", "optimizer"], [24, 0, 0, "-", "post_localSGD_optimizer"], [24, 0, 0, "-", "utils"], [24, 0, 0, "-", "zero_redundancy_optimizer"]], "torch.distributed.optim.DistributedOptimizer": [[28, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[28, 3, 1, "", "load_state_dict"], [28, 3, 1, "", "state_dict"], [28, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[28, 3, 1, "", "add_param_group"], [28, 3, 1, "", "consolidate_state_dict"], [28, 3, 1, "", "join_hook"], [28, 3, 1, "", "load_state_dict"], [28, 3, 1, "", "state_dict"], [28, 3, 1, "", "step"]], "torch.distributed.pipeline": [[24, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1916, 1, 1, "", "Pipe"], [24, 0, 0, "-", "batchnorm"], [24, 0, 0, "-", "checkpoint"], [24, 0, 0, "-", "copy"], [24, 0, 0, "-", "dependency"], [24, 0, 0, "-", "microbatch"], [24, 0, 0, "-", "phony"], [24, 0, 0, "-", "pipe"], [24, 0, 0, "-", "pipeline"], [24, 0, 0, "-", "skip"], [24, 0, 0, "-", "stream"], [24, 0, 0, "-", "utils"], [24, 0, 0, "-", "worker"]], "torch.distributed.pipeline.sync.Pipe": [[1916, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip": [[24, 0, 0, "-", "layout"], [24, 0, 0, "-", "namespace"], [24, 0, 0, "-", "portal"], [24, 0, 0, "-", "skippable"], [24, 0, 0, "-", "tracker"]], "torch.distributed.pipeline.sync.skip.skippable": [[1916, 1, 1, "", "pop"], [1916, 5, 1, "", "skippable"], [1916, 1, 1, "", "stash"], [1916, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1923, 1, 1, "", "BackendType"], [1923, 1, 1, "", "PyRRef"], [1923, 1, 1, "", "RpcBackendOptions"], [1923, 1, 1, "", "TensorPipeRpcBackendOptions"], [1923, 1, 1, "", "WorkerInfo"], [24, 0, 0, "-", "api"], [24, 0, 0, "-", "backend_registry"], [24, 0, 0, "-", "constants"], [24, 0, 0, "-", "functions"], [1923, 5, 1, "", "get_worker_info"], [1923, 5, 1, "", "init_rpc"], [24, 0, 0, "-", "internal"], [24, 0, 0, "-", "options"], [1923, 5, 1, "", "remote"], [1923, 5, 1, "", "rpc_async"], [1923, 5, 1, "", "rpc_sync"], [24, 0, 0, "-", "rref_proxy"], [24, 0, 0, "-", "server_process_global_profiler"], [1923, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[1923, 3, 1, "", "backward"], [1923, 3, 1, "", "confirmed_by_owner"], [1923, 3, 1, "", "is_owner"], [1923, 3, 1, "", "local_value"], [1923, 3, 1, "", "owner"], [1923, 3, 1, "", "owner_name"], [1923, 3, 1, "", "remote"], [1923, 3, 1, "", "rpc_async"], [1923, 3, 1, "", "rpc_sync"], [1923, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[1923, 4, 1, "", "init_method"], [1923, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1923, 4, 1, "", "device_maps"], [1923, 4, 1, "", "devices"], [1923, 4, 1, "", "init_method"], [1923, 4, 1, "", "num_worker_threads"], [1923, 4, 1, "", "rpc_timeout"], [1923, 3, 1, "", "set_device_map"], [1923, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1923, 4, 1, "", "id"], [1923, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1923, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[29, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel": [[24, 0, 0, "-", "api"], [24, 0, 0, "-", "ddp"], [24, 0, 0, "-", "fsdp"], [24, 0, 0, "-", "input_reshard"], [29, 5, 1, "", "parallelize_module"], [24, 0, 0, "-", "style"]], "torch.distributed.tensor.parallel.ddp": [[29, 5, 1, "", "pre_dp_module_transform"]], "torch.distributed.tensor.parallel.fsdp": [[29, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel.style": [[29, 1, 1, "", "ColwiseParallel"], [29, 1, 1, "", "PairwiseParallel"], [29, 1, 1, "", "RowwiseParallel"], [29, 1, 1, "", "SequenceParallel"], [29, 5, 1, "", "make_input_replicate_1d"], [29, 5, 1, "", "make_input_reshard_replicate"], [29, 5, 1, "", "make_input_shard_1d"], [29, 5, 1, "", "make_input_shard_1d_last_dim"], [29, 5, 1, "", "make_output_replicate_1d"], [29, 5, 1, "", "make_output_reshard_tensor"], [29, 5, 1, "", "make_output_shard_1d"], [29, 5, 1, "", "make_output_tensor"]], "torch.distributions": [[30, 0, 0, "-", "bernoulli"], [30, 0, 0, "-", "beta"], [30, 0, 0, "-", "binomial"], [30, 0, 0, "-", "categorical"], [30, 0, 0, "-", "cauchy"], [30, 0, 0, "-", "chi2"], [30, 0, 0, "-", "constraint_registry"], [30, 0, 0, "-", "constraints"], [30, 0, 0, "-", "continuous_bernoulli"], [30, 0, 0, "-", "dirichlet"], [30, 0, 0, "-", "distribution"], [30, 0, 0, "-", "exp_family"], [30, 0, 0, "-", "exponential"], [30, 0, 0, "-", "fishersnedecor"], [30, 0, 0, "-", "gamma"], [30, 0, 0, "-", "geometric"], [30, 0, 0, "-", "gumbel"], [30, 0, 0, "-", "half_cauchy"], [30, 0, 0, "-", "half_normal"], [30, 0, 0, "-", "independent"], [30, 0, 0, "-", "kl"], [30, 0, 0, "-", "kumaraswamy"], [30, 0, 0, "-", "laplace"], [30, 0, 0, "-", "lkj_cholesky"], [30, 0, 0, "-", "log_normal"], [30, 0, 0, "-", "logistic_normal"], [30, 0, 0, "-", "lowrank_multivariate_normal"], [30, 0, 0, "-", "mixture_same_family"], [30, 0, 0, "-", "multinomial"], [30, 0, 0, "-", "multivariate_normal"], [30, 0, 0, "-", "negative_binomial"], [30, 0, 0, "-", "normal"], [30, 0, 0, "-", "one_hot_categorical"], [30, 0, 0, "-", "pareto"], [30, 0, 0, "-", "poisson"], [30, 0, 0, "-", "relaxed_bernoulli"], [30, 0, 0, "-", "relaxed_categorical"], [30, 0, 0, "-", "studentT"], [30, 0, 0, "-", "transformed_distribution"], [30, 0, 0, "-", "transforms"], [30, 0, 0, "-", "uniform"], [30, 0, 0, "-", "utils"], [30, 0, 0, "-", "von_mises"], [30, 0, 0, "-", "weibull"], [30, 0, 0, "-", "wishart"]], "torch.distributions.bernoulli": [[30, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_enumerate_support"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.beta": [[30, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[30, 2, 1, "", "arg_constraints"], [30, 4, 1, "", "concentration0"], [30, 4, 1, "", "concentration1"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.binomial": [[30, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_enumerate_support"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.categorical": [[30, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_enumerate_support"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[30, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.chi2": [[30, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[30, 2, 1, "", "arg_constraints"], [30, 4, 1, "", "df"], [30, 3, 1, "", "expand"]], "torch.distributions.constraint_registry": [[30, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[30, 3, 1, "", "register"]], "torch.distributions.constraints": [[30, 1, 1, "", "Constraint"], [30, 2, 1, "", "cat"], [30, 2, 1, "", "dependent_property"], [30, 2, 1, "", "greater_than"], [30, 2, 1, "", "greater_than_eq"], [30, 2, 1, "", "half_open_interval"], [30, 2, 1, "", "independent"], [30, 2, 1, "", "integer_interval"], [30, 2, 1, "", "interval"], [30, 2, 1, "", "less_than"], [30, 2, 1, "", "multinomial"], [30, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[30, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[30, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "rsample"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "stddev"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[30, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.distribution": [[30, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[30, 4, 1, "", "arg_constraints"], [30, 4, 1, "", "batch_shape"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 4, 1, "", "event_shape"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "perplexity"], [30, 3, 1, "", "rsample"], [30, 3, 1, "", "sample"], [30, 3, 1, "", "sample_n"], [30, 3, 1, "", "set_default_validate_args"], [30, 4, 1, "", "stddev"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[30, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[30, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[30, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "stddev"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[30, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.gamma": [[30, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.geometric": [[30, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[30, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "stddev"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[30, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "scale"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[30, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "scale"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.independent": [[30, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 3, 1, "", "expand"], [30, 4, 1, "", "has_enumerate_support"], [30, 4, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.kl": [[30, 5, 1, "", "kl_divergence"], [30, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[30, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.laplace": [[30, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "stddev"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[30, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"]], "torch.distributions.log_normal": [[30, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 4, 1, "", "loc"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "scale"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[30, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[30, 2, 1, "", "arg_constraints"], [30, 4, 1, "", "covariance_matrix"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "precision_matrix"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "scale_tril"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[30, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 4, 1, "", "component_distribution"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mixture_distribution"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[30, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"], [30, 2, 1, "", "total_count"], [30, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[30, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[30, 2, 1, "", "arg_constraints"], [30, 4, 1, "", "covariance_matrix"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "precision_matrix"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "scale_tril"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[30, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.normal": [[30, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "stddev"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[30, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "enumerate_support"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_enumerate_support"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.pareto": [[30, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.poisson": [[30, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[30, 1, 1, "", "LogitRelaxedBernoulli"], [30, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "param_shape"], [30, 4, 1, "", "probs"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "probs"], [30, 2, 1, "", "support"], [30, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[30, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 4, 1, "", "logits"], [30, 4, 1, "", "probs"], [30, 2, 1, "", "support"], [30, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[30, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[30, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "expand"], [30, 4, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 3, 1, "", "rsample"], [30, 3, 1, "", "sample"], [30, 4, 1, "", "support"]], "torch.distributions.transforms": [[30, 1, 1, "", "AbsTransform"], [30, 1, 1, "", "AffineTransform"], [30, 1, 1, "", "CatTransform"], [30, 1, 1, "", "ComposeTransform"], [30, 1, 1, "", "CorrCholeskyTransform"], [30, 1, 1, "", "CumulativeDistributionTransform"], [30, 1, 1, "", "ExpTransform"], [30, 1, 1, "", "IndependentTransform"], [30, 1, 1, "", "LowerCholeskyTransform"], [30, 1, 1, "", "PositiveDefiniteTransform"], [30, 1, 1, "", "PowerTransform"], [30, 1, 1, "", "ReshapeTransform"], [30, 1, 1, "", "SigmoidTransform"], [30, 1, 1, "", "SoftmaxTransform"], [30, 1, 1, "", "SoftplusTransform"], [30, 1, 1, "", "StackTransform"], [30, 1, 1, "", "StickBreakingTransform"], [30, 1, 1, "", "TanhTransform"], [30, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[30, 3, 1, "", "forward_shape"], [30, 4, 1, "", "inv"], [30, 3, 1, "", "inverse_shape"], [30, 3, 1, "", "log_abs_det_jacobian"], [30, 4, 1, "", "sign"]], "torch.distributions.uniform": [[30, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "cdf"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "icdf"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "stddev"], [30, 4, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[30, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 3, 1, "", "sample"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.weibull": [[30, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[30, 2, 1, "", "arg_constraints"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.distributions.wishart": [[30, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[30, 2, 1, "", "arg_constraints"], [30, 4, 1, "", "covariance_matrix"], [30, 3, 1, "", "entropy"], [30, 3, 1, "", "expand"], [30, 2, 1, "", "has_rsample"], [30, 3, 1, "", "log_prob"], [30, 4, 1, "", "mean"], [30, 4, 1, "", "mode"], [30, 4, 1, "", "precision_matrix"], [30, 3, 1, "", "rsample"], [30, 4, 1, "", "scale_tril"], [30, 2, 1, "", "support"], [30, 4, 1, "", "variance"]], "torch.export": [[45, 1, 1, "", "Constraint"], [45, 5, 1, "", "Dim"], [45, 1, 1, "", "ExportBackwardSignature"], [45, 1, 1, "", "ExportGraphSignature"], [45, 1, 1, "", "ExportedProgram"], [45, 1, 1, "", "ModuleCallEntry"], [45, 1, 1, "", "ModuleCallSignature"], [45, 5, 1, "", "constrain_as_size"], [45, 5, 1, "", "constrain_as_value"], [45, 5, 1, "", "dims"], [45, 5, 1, "", "dynamic_dim"], [45, 5, 1, "", "export"], [45, 0, 0, "-", "exported_program"], [45, 5, 1, "", "load"], [45, 5, 1, "", "register_dataclass"], [45, 5, 1, "", "save"]], "torch.export.ExportedProgram": [[45, 3, 1, "", "buffers"], [45, 3, 1, "", "module"], [45, 3, 1, "", "named_buffers"], [45, 3, 1, "", "named_parameters"], [45, 3, 1, "", "parameters"]], "torch.fft": [[1084, 5, 1, "", "fft"], [1085, 5, 1, "", "fft2"], [1086, 5, 1, "", "fftfreq"], [1087, 5, 1, "", "fftn"], [1088, 5, 1, "", "fftshift"], [1089, 5, 1, "", "hfft"], [1090, 5, 1, "", "hfft2"], [1091, 5, 1, "", "hfftn"], [1092, 5, 1, "", "ifft"], [1093, 5, 1, "", "ifft2"], [1094, 5, 1, "", "ifftn"], [1095, 5, 1, "", "ifftshift"], [1096, 5, 1, "", "ihfft"], [1097, 5, 1, "", "ihfft2"], [1098, 5, 1, "", "ihfftn"], [1099, 5, 1, "", "irfft"], [1100, 5, 1, "", "irfft2"], [1101, 5, 1, "", "irfftn"], [1102, 5, 1, "", "rfft"], [1103, 5, 1, "", "rfft2"], [1104, 5, 1, "", "rfftfreq"], [1105, 5, 1, "", "rfftn"]], "torch.func": [[1124, 5, 1, "", "functional_call"], [1125, 5, 1, "", "functionalize"], [1126, 5, 1, "", "grad"], [1127, 5, 1, "", "grad_and_value"], [1128, 5, 1, "", "hessian"], [1129, 5, 1, "", "jacfwd"], [1130, 5, 1, "", "jacrev"], [1131, 5, 1, "", "jvp"], [1132, 5, 1, "", "linearize"], [1133, 5, 1, "", "replace_all_batch_norm_modules_"], [1134, 5, 1, "", "stack_module_state"], [1135, 5, 1, "", "vjp"], [1136, 5, 1, "", "vmap"]], "torch.futures": [[55, 1, 1, "", "Future"], [55, 5, 1, "", "collect_all"], [55, 5, 1, "", "wait_all"]], "torch.futures.Future": [[55, 3, 1, "", "add_done_callback"], [55, 3, 1, "", "done"], [55, 3, 1, "", "set_exception"], [55, 3, 1, "", "set_result"], [55, 3, 1, "", "then"], [55, 3, 1, "", "value"], [55, 3, 1, "", "wait"]], "torch.fx": [[56, 1, 1, "", "Graph"], [56, 1, 1, "", "GraphModule"], [56, 1, 1, "", "Interpreter"], [56, 1, 1, "", "Node"], [56, 1, 1, "", "Proxy"], [56, 1, 1, "", "Tracer"], [56, 1, 1, "", "Transformer"], [56, 0, 0, "-", "annotate"], [56, 0, 0, "-", "config"], [56, 0, 0, "-", "experimental"], [56, 0, 0, "-", "graph"], [56, 0, 0, "-", "graph_module"], [56, 0, 0, "-", "immutable_collections"], [56, 0, 0, "-", "interpreter"], [56, 0, 0, "-", "node"], [56, 0, 0, "-", "operator_schemas"], [56, 0, 0, "-", "passes"], [56, 0, 0, "-", "proxy"], [56, 5, 1, "", "replace_pattern"], [56, 0, 0, "-", "subgraph_rewriter"], [56, 5, 1, "", "symbolic_trace"], [56, 0, 0, "-", "tensor_type"], [56, 0, 0, "-", "traceback"], [56, 5, 1, "", "wrap"]], "torch.fx.Graph": [[56, 3, 1, "", "__init__"], [56, 3, 1, "", "call_function"], [56, 3, 1, "", "call_method"], [56, 3, 1, "", "call_module"], [56, 3, 1, "", "create_node"], [56, 3, 1, "", "eliminate_dead_code"], [56, 3, 1, "", "erase_node"], [56, 3, 1, "", "get_attr"], [56, 3, 1, "", "graph_copy"], [56, 3, 1, "", "inserting_after"], [56, 3, 1, "", "inserting_before"], [56, 3, 1, "", "lint"], [56, 3, 1, "", "node_copy"], [56, 4, 1, "", "nodes"], [56, 3, 1, "", "on_generate_code"], [56, 3, 1, "", "output"], [56, 3, 1, "", "placeholder"], [56, 3, 1, "", "print_tabular"], [56, 3, 1, "", "process_inputs"], [56, 3, 1, "", "process_outputs"], [56, 3, 1, "", "python_code"], [56, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[56, 3, 1, "", "__init__"], [56, 3, 1, "", "add_submodule"], [56, 4, 1, "", "code"], [56, 3, 1, "", "delete_all_unused_submodules"], [56, 3, 1, "", "delete_submodule"], [56, 4, 1, "", "graph"], [56, 3, 1, "", "print_readable"], [56, 3, 1, "", "recompile"], [56, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[56, 3, 1, "", "boxed_run"], [56, 3, 1, "", "call_function"], [56, 3, 1, "", "call_method"], [56, 3, 1, "", "call_module"], [56, 3, 1, "", "fetch_args_kwargs_from_env"], [56, 3, 1, "", "fetch_attr"], [56, 3, 1, "", "get_attr"], [56, 3, 1, "", "map_nodes_to_values"], [56, 3, 1, "", "output"], [56, 3, 1, "", "placeholder"], [56, 3, 1, "", "run"], [56, 3, 1, "", "run_node"]], "torch.fx.Node": [[56, 4, 1, "", "all_input_nodes"], [56, 3, 1, "", "append"], [56, 4, 1, "", "args"], [56, 3, 1, "", "format_node"], [56, 3, 1, "", "is_impure"], [56, 4, 1, "", "kwargs"], [56, 4, 1, "", "next"], [56, 3, 1, "", "normalized_arguments"], [56, 3, 1, "", "prepend"], [56, 4, 1, "", "prev"], [56, 3, 1, "", "replace_all_uses_with"], [56, 3, 1, "", "replace_input_with"], [56, 4, 1, "", "stack_trace"], [56, 3, 1, "", "update_arg"], [56, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[56, 3, 1, "", "call_module"], [56, 3, 1, "", "create_arg"], [56, 3, 1, "", "create_args_for_root"], [56, 3, 1, "", "create_node"], [56, 3, 1, "", "create_proxy"], [56, 3, 1, "", "getattr"], [56, 3, 1, "", "is_leaf_module"], [56, 3, 1, "", "iter"], [56, 3, 1, "", "keys"], [56, 3, 1, "", "path_of_module"], [56, 3, 1, "", "proxy"], [56, 3, 1, "", "to_bool"], [56, 3, 1, "", "trace"]], "torch.fx.Transformer": [[56, 3, 1, "", "call_function"], [56, 3, 1, "", "call_module"], [56, 3, 1, "", "get_attr"], [56, 3, 1, "", "placeholder"], [56, 3, 1, "", "transform"]], "torch.fx.experimental": [[56, 0, 0, "-", "accelerator_partitioner"], [56, 0, 0, "-", "const_fold"], [56, 0, 0, "-", "debug"], [56, 0, 0, "-", "graph_gradual_typechecker"], [56, 0, 0, "-", "merge_matmul"], [56, 0, 0, "-", "meta_tracer"], [56, 0, 0, "-", "migrate_gradual_types"], [56, 0, 0, "-", "normalize"], [56, 0, 0, "-", "optimization"], [56, 0, 0, "-", "partitioner_utils"], [56, 0, 0, "-", "proxy_tensor"], [56, 0, 0, "-", "recording"], [56, 0, 0, "-", "refinement_types"], [56, 0, 0, "-", "rewriter"], [56, 0, 0, "-", "schema_type_annotation"], [56, 0, 0, "-", "symbolic_shapes"], [56, 0, 0, "-", "unification"], [56, 0, 0, "-", "unify_refinements"], [56, 0, 0, "-", "validator"]], "torch.fx.experimental.migrate_gradual_types": [[56, 0, 0, "-", "constraint"], [56, 0, 0, "-", "constraint_generator"], [56, 0, 0, "-", "constraint_transformation"], [56, 0, 0, "-", "operation"], [56, 0, 0, "-", "transform_to_z3"], [56, 0, 0, "-", "util"], [56, 0, 0, "-", "z3_types"]], "torch.fx.experimental.unification": [[56, 0, 0, "-", "core"], [56, 0, 0, "-", "dispatch"], [56, 0, 0, "-", "match"], [56, 0, 0, "-", "more"], [56, 0, 0, "-", "multipledispatch"], [56, 0, 0, "-", "unification_tools"], [56, 0, 0, "-", "utils"], [56, 0, 0, "-", "variable"]], "torch.fx.experimental.unification.multipledispatch": [[56, 0, 0, "-", "conflict"], [56, 0, 0, "-", "core"], [56, 0, 0, "-", "dispatcher"], [56, 0, 0, "-", "utils"], [56, 0, 0, "-", "variadic"]], "torch.fx.passes": [[56, 0, 0, "-", "annotate_getitem_nodes"], [56, 0, 0, "-", "backends"], [56, 0, 0, "-", "dialect"], [56, 0, 0, "-", "fake_tensor_prop"], [56, 0, 0, "-", "graph_drawer"], [56, 0, 0, "-", "graph_manipulation"], [56, 0, 0, "-", "infra"], [56, 0, 0, "-", "net_min_base"], [56, 0, 0, "-", "operator_support"], [56, 0, 0, "-", "param_fetch"], [56, 0, 0, "-", "pass_manager"], [56, 0, 0, "-", "reinplace"], [56, 0, 0, "-", "shape_prop"], [56, 0, 0, "-", "split_module"], [56, 0, 0, "-", "split_utils"], [56, 0, 0, "-", "splitter_base"], [56, 0, 0, "-", "tests"], [56, 0, 0, "-", "tools_common"], [56, 0, 0, "-", "utils"]], "torch.fx.passes.backends": [[56, 0, 0, "-", "cudagraphs"]], "torch.fx.passes.dialect": [[56, 0, 0, "-", "common"]], "torch.fx.passes.dialect.common": [[56, 0, 0, "-", "cse_pass"]], "torch.fx.passes.infra": [[56, 0, 0, "-", "partitioner"], [56, 0, 0, "-", "pass_base"], [56, 0, 0, "-", "pass_manager"]], "torch.fx.passes.tests": [[56, 0, 0, "-", "test_pass_manager"]], "torch.fx.passes.utils": [[56, 0, 0, "-", "common"], [56, 0, 0, "-", "fuser_utils"], [56, 0, 0, "-", "matcher_utils"], [56, 0, 0, "-", "source_matcher_utils"]], "torch.hub": [[1866, 5, 1, "", "download_url_to_file"], [1866, 5, 1, "", "get_dir"], [1866, 5, 1, "", "help"], [1866, 5, 1, "", "list"], [1866, 5, 1, "", "load"], [1866, 5, 1, "", "load_state_dict_from_url"], [1866, 5, 1, "", "set_dir"]], "torch.jit": [[1193, 1, 1, "", "Attribute"], [1194, 1, 1, "", "ScriptFunction"], [1195, 1, 1, "", "ScriptModule"], [1196, 5, 1, "", "annotate"], [1868, 0, 0, "-", "annotations"], [1197, 5, 1, "", "enable_onednn_fusion"], [1868, 5, 1, "", "export"], [1198, 5, 1, "", "fork"], [1199, 5, 1, "", "freeze"], [1868, 0, 0, "-", "frontend"], [1868, 0, 0, "-", "generate_bytecode"], [1200, 5, 1, "", "ignore"], [1201, 5, 1, "", "interface"], [1870, 5, 1, "", "is_scripting"], [1870, 5, 1, "", "is_tracing"], [1202, 5, 1, "", "isinstance"], [1203, 5, 1, "", "load"], [1868, 0, 0, "-", "mobile"], [1204, 5, 1, "", "onednn_fusion_enabled"], [1205, 5, 1, "", "optimize_for_inference"], [1868, 0, 0, "-", "quantized"], [1206, 5, 1, "", "save"], [1207, 5, 1, "", "script"], [1208, 5, 1, "", "script_if_tracing"], [1209, 5, 1, "", "set_fusion_strategy"], [1210, 1, 1, "", "strict_fusion"], [1869, 0, 0, "-", "supported_ops"], [1211, 5, 1, "", "trace"], [1212, 5, 1, "", "trace_module"], [1873, 0, 0, "-", "unsupported_tensor_ops"], [1213, 5, 1, "", "unused"], [1214, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1193, 3, 1, "", "count"], [1193, 3, 1, "", "index"], [1193, 2, 1, "", "type"], [1193, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1194, 3, 1, "", "get_debug_state"], [1194, 3, 1, "", "save"], [1194, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1195, 3, 1, "", "add_module"], [1195, 3, 1, "", "apply"], [1195, 3, 1, "", "bfloat16"], [1195, 3, 1, "", "buffers"], [1195, 3, 1, "", "children"], [1195, 4, 1, "", "code"], [1195, 4, 1, "", "code_with_constants"], [1195, 3, 1, "", "compile"], [1195, 3, 1, "", "cpu"], [1195, 3, 1, "", "cuda"], [1195, 3, 1, "", "double"], [1195, 3, 1, "", "eval"], [1195, 3, 1, "", "extra_repr"], [1195, 3, 1, "", "float"], [1195, 3, 1, "", "get_buffer"], [1195, 3, 1, "", "get_extra_state"], [1195, 3, 1, "", "get_parameter"], [1195, 3, 1, "", "get_submodule"], [1195, 4, 1, "", "graph"], [1195, 3, 1, "", "half"], [1195, 4, 1, "", "inlined_graph"], [1195, 3, 1, "", "ipu"], [1195, 3, 1, "", "load_state_dict"], [1195, 3, 1, "", "modules"], [1195, 3, 1, "", "named_buffers"], [1195, 3, 1, "", "named_children"], [1195, 3, 1, "", "named_modules"], [1195, 3, 1, "", "named_parameters"], [1195, 3, 1, "", "parameters"], [1195, 3, 1, "", "register_backward_hook"], [1195, 3, 1, "", "register_buffer"], [1195, 3, 1, "", "register_forward_hook"], [1195, 3, 1, "", "register_forward_pre_hook"], [1195, 3, 1, "", "register_full_backward_hook"], [1195, 3, 1, "", "register_full_backward_pre_hook"], [1195, 3, 1, "", "register_load_state_dict_post_hook"], [1195, 3, 1, "", "register_module"], [1195, 3, 1, "", "register_parameter"], [1195, 3, 1, "", "register_state_dict_pre_hook"], [1195, 3, 1, "", "requires_grad_"], [1195, 3, 1, "", "save"], [1195, 3, 1, "", "set_extra_state"], [1195, 3, 1, "", "share_memory"], [1195, 3, 1, "", "state_dict"], [1195, 3, 1, "", "to"], [1195, 3, 1, "", "to_empty"], [1195, 3, 1, "", "train"], [1195, 3, 1, "", "type"], [1195, 3, 1, "", "xpu"], [1195, 3, 1, "", "zero_grad"]], "torch.library": [[1875, 1, 1, "", "Library"], [1875, 5, 1, "", "fallthrough_kernel"]], "torch.library.Library": [[1875, 3, 1, "", "define"], [1875, 3, 1, "", "impl"]], "torch.linalg": [[1225, 5, 1, "", "cholesky"], [1226, 5, 1, "", "cholesky_ex"], [1227, 5, 1, "", "cond"], [1228, 5, 1, "", "cross"], [1229, 5, 1, "", "det"], [1230, 5, 1, "", "diagonal"], [1231, 5, 1, "", "eig"], [1232, 5, 1, "", "eigh"], [1233, 5, 1, "", "eigvals"], [1234, 5, 1, "", "eigvalsh"], [1235, 5, 1, "", "householder_product"], [1236, 5, 1, "", "inv"], [1237, 5, 1, "", "inv_ex"], [1238, 5, 1, "", "ldl_factor"], [1239, 5, 1, "", "ldl_factor_ex"], [1240, 5, 1, "", "ldl_solve"], [1241, 5, 1, "", "lstsq"], [1242, 5, 1, "", "lu"], [1243, 5, 1, "", "lu_factor"], [1244, 5, 1, "", "lu_factor_ex"], [1245, 5, 1, "", "lu_solve"], [1246, 5, 1, "", "matmul"], [1247, 5, 1, "", "matrix_exp"], [1248, 5, 1, "", "matrix_norm"], [1249, 5, 1, "", "matrix_power"], [1250, 5, 1, "", "matrix_rank"], [1251, 5, 1, "", "multi_dot"], [1252, 5, 1, "", "norm"], [1253, 5, 1, "", "pinv"], [1254, 5, 1, "", "qr"], [1255, 5, 1, "", "slogdet"], [1256, 5, 1, "", "solve"], [1257, 5, 1, "", "solve_ex"], [1258, 5, 1, "", "solve_triangular"], [1259, 5, 1, "", "svd"], [1260, 5, 1, "", "svdvals"], [1261, 5, 1, "", "tensorinv"], [1262, 5, 1, "", "tensorsolve"], [1263, 5, 1, "", "vander"], [1264, 5, 1, "", "vecdot"], [1265, 5, 1, "", "vector_norm"]], "torch.masked": [[1878, 0, 0, "-", "maskedtensor"]], "torch.masked.maskedtensor": [[1878, 0, 0, "-", "binary"], [1878, 0, 0, "-", "core"], [1878, 0, 0, "-", "creation"], [1878, 0, 0, "-", "passthrough"], [1878, 0, 0, "-", "reductions"], [1878, 0, 0, "-", "unary"]], "torch.monitor": [[1881, 1, 1, "", "Aggregation"], [1881, 1, 1, "", "Event"], [1881, 1, 1, "", "EventHandlerHandle"], [1881, 1, 1, "", "Stat"], [1881, 1, 1, "", "TensorboardEventHandler"], [1881, 1, 1, "", "data_value_t"], [1881, 5, 1, "", "log_event"], [1881, 5, 1, "", "register_event_handler"], [1881, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1881, 4, 1, "", "name"]], "torch.monitor.Event": [[1881, 3, 1, "", "__init__"], [1881, 4, 1, "", "data"], [1881, 4, 1, "", "name"], [1881, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1881, 3, 1, "", "__init__"], [1881, 3, 1, "", "add"], [1881, 4, 1, "", "count"], [1881, 3, 1, "", "get"], [1881, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1881, 3, 1, "", "__init__"]], "torch.mps": [[1304, 5, 1, "", "current_allocated_memory"], [1305, 5, 1, "", "driver_allocated_memory"], [1306, 5, 1, "", "empty_cache"], [1882, 0, 0, "-", "event"], [1308, 5, 1, "", "get_rng_state"], [1309, 5, 1, "", "manual_seed"], [1882, 0, 0, "-", "profiler"], [1313, 5, 1, "", "seed"], [1314, 5, 1, "", "set_per_process_memory_fraction"], [1315, 5, 1, "", "set_rng_state"], [1316, 5, 1, "", "synchronize"]], "torch.mps.event": [[1307, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1307, 3, 1, "", "elapsed_time"], [1307, 3, 1, "", "query"], [1307, 3, 1, "", "record"], [1307, 3, 1, "", "synchronize"], [1307, 3, 1, "", "wait"]], "torch.mps.profiler": [[1310, 5, 1, "", "profile"], [1311, 5, 1, "", "start"], [1312, 5, 1, "", "stop"]], "torch.multiprocessing": [[1883, 1, 1, "", "SpawnContext"], [1883, 5, 1, "", "get_all_sharing_strategies"], [1883, 5, 1, "", "get_sharing_strategy"], [1883, 0, 0, "-", "pool"], [1883, 0, 0, "-", "queue"], [1883, 0, 0, "-", "reductions"], [1883, 5, 1, "", "set_sharing_strategy"], [1883, 0, 0, "-", "spawn"]], "torch.multiprocessing.SpawnContext": [[1883, 3, 1, "", "join"]], "torch.multiprocessing.spawn": [[1883, 5, 1, "", "spawn"]], "torch.nested": [[1886, 5, 1, "", "as_nested_tensor"], [1886, 5, 1, "", "nested_tensor"], [1886, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1334, 1, 1, "", "AdaptiveAvgPool1d"], [1335, 1, 1, "", "AdaptiveAvgPool2d"], [1336, 1, 1, "", "AdaptiveAvgPool3d"], [1337, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1338, 1, 1, "", "AdaptiveMaxPool1d"], [1339, 1, 1, "", "AdaptiveMaxPool2d"], [1340, 1, 1, "", "AdaptiveMaxPool3d"], [1341, 1, 1, "", "AlphaDropout"], [1342, 1, 1, "", "AvgPool1d"], [1343, 1, 1, "", "AvgPool2d"], [1344, 1, 1, "", "AvgPool3d"], [1345, 1, 1, "", "BCELoss"], [1346, 1, 1, "", "BCEWithLogitsLoss"], [1347, 1, 1, "", "BatchNorm1d"], [1348, 1, 1, "", "BatchNorm2d"], [1349, 1, 1, "", "BatchNorm3d"], [1350, 1, 1, "", "Bilinear"], [1351, 1, 1, "", "CELU"], [1352, 1, 1, "", "CTCLoss"], [1353, 1, 1, "", "ChannelShuffle"], [1354, 1, 1, "", "ConstantPad1d"], [1355, 1, 1, "", "ConstantPad2d"], [1356, 1, 1, "", "ConstantPad3d"], [1357, 1, 1, "", "Conv1d"], [1358, 1, 1, "", "Conv2d"], [1359, 1, 1, "", "Conv3d"], [1360, 1, 1, "", "ConvTranspose1d"], [1361, 1, 1, "", "ConvTranspose2d"], [1362, 1, 1, "", "ConvTranspose3d"], [1363, 1, 1, "", "CosineEmbeddingLoss"], [1364, 1, 1, "", "CosineSimilarity"], [1365, 1, 1, "", "CrossEntropyLoss"], [1366, 1, 1, "", "DataParallel"], [1367, 1, 1, "", "Dropout"], [1368, 1, 1, "", "Dropout1d"], [1369, 1, 1, "", "Dropout2d"], [1370, 1, 1, "", "Dropout3d"], [1371, 1, 1, "", "ELU"], [1372, 1, 1, "", "Embedding"], [1373, 1, 1, "", "EmbeddingBag"], [1374, 1, 1, "", "FeatureAlphaDropout"], [1375, 1, 1, "", "Flatten"], [1376, 1, 1, "", "Fold"], [1377, 1, 1, "", "FractionalMaxPool2d"], [1378, 1, 1, "", "FractionalMaxPool3d"], [1379, 1, 1, "", "GELU"], [1380, 1, 1, "", "GLU"], [1381, 1, 1, "", "GRU"], [1382, 1, 1, "", "GRUCell"], [1383, 1, 1, "", "GaussianNLLLoss"], [1384, 1, 1, "", "GroupNorm"], [1385, 1, 1, "", "Hardshrink"], [1386, 1, 1, "", "Hardsigmoid"], [1387, 1, 1, "", "Hardswish"], [1388, 1, 1, "", "Hardtanh"], [1389, 1, 1, "", "HingeEmbeddingLoss"], [1390, 1, 1, "", "HuberLoss"], [1391, 1, 1, "", "Identity"], [1392, 1, 1, "", "InstanceNorm1d"], [1393, 1, 1, "", "InstanceNorm2d"], [1394, 1, 1, "", "InstanceNorm3d"], [1395, 1, 1, "", "KLDivLoss"], [1396, 1, 1, "", "L1Loss"], [1397, 1, 1, "", "LPPool1d"], [1398, 1, 1, "", "LPPool2d"], [1399, 1, 1, "", "LSTM"], [1400, 1, 1, "", "LSTMCell"], [1401, 1, 1, "", "LayerNorm"], [1402, 1, 1, "", "LazyBatchNorm1d"], [1403, 1, 1, "", "LazyBatchNorm2d"], [1404, 1, 1, "", "LazyBatchNorm3d"], [1405, 1, 1, "", "LazyConv1d"], [1406, 1, 1, "", "LazyConv2d"], [1407, 1, 1, "", "LazyConv3d"], [1408, 1, 1, "", "LazyConvTranspose1d"], [1409, 1, 1, "", "LazyConvTranspose2d"], [1410, 1, 1, "", "LazyConvTranspose3d"], [1411, 1, 1, "", "LazyInstanceNorm1d"], [1412, 1, 1, "", "LazyInstanceNorm2d"], [1413, 1, 1, "", "LazyInstanceNorm3d"], [1414, 1, 1, "", "LazyLinear"], [1415, 1, 1, "", "LeakyReLU"], [1416, 1, 1, "", "Linear"], [1417, 1, 1, "", "LocalResponseNorm"], [1418, 1, 1, "", "LogSigmoid"], [1419, 1, 1, "", "LogSoftmax"], [1420, 1, 1, "", "MSELoss"], [1421, 1, 1, "", "MarginRankingLoss"], [1422, 1, 1, "", "MaxPool1d"], [1423, 1, 1, "", "MaxPool2d"], [1424, 1, 1, "", "MaxPool3d"], [1425, 1, 1, "", "MaxUnpool1d"], [1426, 1, 1, "", "MaxUnpool2d"], [1427, 1, 1, "", "MaxUnpool3d"], [1428, 1, 1, "", "Mish"], [1429, 1, 1, "", "Module"], [1430, 1, 1, "", "ModuleDict"], [1431, 1, 1, "", "ModuleList"], [1432, 1, 1, "", "MultiLabelMarginLoss"], [1433, 1, 1, "", "MultiLabelSoftMarginLoss"], [1434, 1, 1, "", "MultiMarginLoss"], [1435, 1, 1, "", "MultiheadAttention"], [1436, 1, 1, "", "NLLLoss"], [1437, 1, 1, "", "PReLU"], [1438, 1, 1, "", "PairwiseDistance"], [1439, 1, 1, "", "ParameterDict"], [1440, 1, 1, "", "ParameterList"], [1441, 1, 1, "", "PixelShuffle"], [1442, 1, 1, "", "PixelUnshuffle"], [1443, 1, 1, "", "PoissonNLLLoss"], [1444, 1, 1, "", "RNN"], [1445, 1, 1, "", "RNNBase"], [1446, 1, 1, "", "RNNCell"], [1447, 1, 1, "", "RReLU"], [1448, 1, 1, "", "ReLU"], [1449, 1, 1, "", "ReLU6"], [1450, 1, 1, "", "ReflectionPad1d"], [1451, 1, 1, "", "ReflectionPad2d"], [1452, 1, 1, "", "ReflectionPad3d"], [1453, 1, 1, "", "ReplicationPad1d"], [1454, 1, 1, "", "ReplicationPad2d"], [1455, 1, 1, "", "ReplicationPad3d"], [1456, 1, 1, "", "SELU"], [1457, 1, 1, "", "Sequential"], [1458, 1, 1, "", "SiLU"], [1459, 1, 1, "", "Sigmoid"], [1460, 1, 1, "", "SmoothL1Loss"], [1461, 1, 1, "", "SoftMarginLoss"], [1462, 1, 1, "", "Softmax"], [1463, 1, 1, "", "Softmax2d"], [1464, 1, 1, "", "Softmin"], [1465, 1, 1, "", "Softplus"], [1466, 1, 1, "", "Softshrink"], [1467, 1, 1, "", "Softsign"], [1468, 1, 1, "", "SyncBatchNorm"], [1469, 1, 1, "", "Tanh"], [1470, 1, 1, "", "Tanhshrink"], [1471, 1, 1, "", "Threshold"], [1472, 1, 1, "", "Transformer"], [1473, 1, 1, "", "TransformerDecoder"], [1474, 1, 1, "", "TransformerDecoderLayer"], [1475, 1, 1, "", "TransformerEncoder"], [1476, 1, 1, "", "TransformerEncoderLayer"], [1477, 1, 1, "", "TripletMarginLoss"], [1478, 1, 1, "", "TripletMarginWithDistanceLoss"], [1479, 1, 1, "", "Unflatten"], [1480, 1, 1, "", "Unfold"], [1481, 1, 1, "", "Upsample"], [1482, 1, 1, "", "UpsamplingBilinear2d"], [1483, 1, 1, "", "UpsamplingNearest2d"], [1484, 1, 1, "", "ZeroPad1d"], [1485, 1, 1, "", "ZeroPad2d"], [1486, 1, 1, "", "ZeroPad3d"], [1887, 0, 0, "-", "backends"], [1887, 0, 0, "-", "common_types"], [1887, 0, 0, "-", "cpp"], [1887, 0, 0, "-", "functional"], [1887, 0, 0, "-", "grad"], [1887, 0, 0, "-", "init"], [1921, 0, 0, "-", "intrinsic"], [1887, 0, 0, "-", "modules"], [1887, 0, 0, "-", "parallel"], [1887, 0, 0, "-", "parameter"], [1921, 0, 0, "-", "qat"], [1921, 0, 0, "-", "quantizable"], [1921, 0, 0, "-", "quantized"], [1887, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1337, 3, 1, "", "log_prob"], [1337, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1372, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1373, 3, 1, "", "forward"], [1373, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1402, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1403, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1404, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1405, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1406, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1407, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1408, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1409, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1410, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1411, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1412, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1413, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1414, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1429, 3, 1, "", "add_module"], [1429, 3, 1, "", "apply"], [1429, 3, 1, "", "bfloat16"], [1429, 3, 1, "", "buffers"], [1429, 3, 1, "", "children"], [1429, 3, 1, "", "compile"], [1429, 3, 1, "", "cpu"], [1429, 3, 1, "", "cuda"], [1429, 3, 1, "", "double"], [1429, 3, 1, "", "eval"], [1429, 3, 1, "", "extra_repr"], [1429, 3, 1, "", "float"], [1429, 3, 1, "", "forward"], [1429, 3, 1, "", "get_buffer"], [1429, 3, 1, "", "get_extra_state"], [1429, 3, 1, "", "get_parameter"], [1429, 3, 1, "", "get_submodule"], [1429, 3, 1, "", "half"], [1429, 3, 1, "", "ipu"], [1429, 3, 1, "", "load_state_dict"], [1429, 3, 1, "", "modules"], [1429, 3, 1, "", "named_buffers"], [1429, 3, 1, "", "named_children"], [1429, 3, 1, "", "named_modules"], [1429, 3, 1, "", "named_parameters"], [1429, 3, 1, "", "parameters"], [1429, 3, 1, "", "register_backward_hook"], [1429, 3, 1, "", "register_buffer"], [1429, 3, 1, "", "register_forward_hook"], [1429, 3, 1, "", "register_forward_pre_hook"], [1429, 3, 1, "", "register_full_backward_hook"], [1429, 3, 1, "", "register_full_backward_pre_hook"], [1429, 3, 1, "", "register_load_state_dict_post_hook"], [1429, 3, 1, "", "register_module"], [1429, 3, 1, "", "register_parameter"], [1429, 3, 1, "", "register_state_dict_pre_hook"], [1429, 3, 1, "", "requires_grad_"], [1429, 3, 1, "", "set_extra_state"], [1429, 3, 1, "", "share_memory"], [1429, 3, 1, "", "state_dict"], [1429, 3, 1, "", "to"], [1429, 3, 1, "", "to_empty"], [1429, 3, 1, "", "train"], [1429, 3, 1, "", "type"], [1429, 3, 1, "", "xpu"], [1429, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1430, 3, 1, "", "clear"], [1430, 3, 1, "", "items"], [1430, 3, 1, "", "keys"], [1430, 3, 1, "", "pop"], [1430, 3, 1, "", "update"], [1430, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1431, 3, 1, "", "append"], [1431, 3, 1, "", "extend"], [1431, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1435, 3, 1, "", "forward"], [1435, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1439, 3, 1, "", "clear"], [1439, 3, 1, "", "copy"], [1439, 3, 1, "", "fromkeys"], [1439, 3, 1, "", "get"], [1439, 3, 1, "", "items"], [1439, 3, 1, "", "keys"], [1439, 3, 1, "", "pop"], [1439, 3, 1, "", "popitem"], [1439, 3, 1, "", "setdefault"], [1439, 3, 1, "", "update"], [1439, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1440, 3, 1, "", "append"], [1440, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1445, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1457, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1468, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1472, 3, 1, "", "forward"], [1472, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1473, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1474, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1475, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1476, 3, 1, "", "forward"]], "torch.nn.backends": [[1887, 0, 0, "-", "thnn"]], "torch.nn.functional": [[1487, 5, 1, "", "adaptive_avg_pool1d"], [1488, 5, 1, "", "adaptive_avg_pool2d"], [1489, 5, 1, "", "adaptive_avg_pool3d"], [1490, 5, 1, "", "adaptive_max_pool1d"], [1491, 5, 1, "", "adaptive_max_pool2d"], [1492, 5, 1, "", "adaptive_max_pool3d"], [1493, 5, 1, "", "affine_grid"], [1494, 5, 1, "", "alpha_dropout"], [1495, 5, 1, "", "avg_pool1d"], [1496, 5, 1, "", "avg_pool2d"], [1497, 5, 1, "", "avg_pool3d"], [1498, 5, 1, "", "batch_norm"], [1499, 5, 1, "", "bilinear"], [1500, 5, 1, "", "binary_cross_entropy"], [1501, 5, 1, "", "binary_cross_entropy_with_logits"], [1502, 5, 1, "", "celu"], [1503, 5, 1, "", "conv1d"], [1504, 5, 1, "", "conv2d"], [1505, 5, 1, "", "conv3d"], [1506, 5, 1, "", "conv_transpose1d"], [1507, 5, 1, "", "conv_transpose2d"], [1508, 5, 1, "", "conv_transpose3d"], [1509, 5, 1, "", "cosine_embedding_loss"], [1510, 5, 1, "", "cosine_similarity"], [1511, 5, 1, "", "cross_entropy"], [1512, 5, 1, "", "ctc_loss"], [1513, 5, 1, "", "dropout"], [1514, 5, 1, "", "dropout1d"], [1515, 5, 1, "", "dropout2d"], [1516, 5, 1, "", "dropout3d"], [1517, 5, 1, "", "elu"], [1518, 5, 1, "", "elu_"], [1519, 5, 1, "", "embedding"], [1520, 5, 1, "", "embedding_bag"], [1521, 5, 1, "", "feature_alpha_dropout"], [1522, 5, 1, "", "fold"], [1523, 5, 1, "", "fractional_max_pool2d"], [1524, 5, 1, "", "fractional_max_pool3d"], [1525, 5, 1, "", "gaussian_nll_loss"], [1526, 5, 1, "", "gelu"], [1527, 5, 1, "", "glu"], [1528, 5, 1, "", "grid_sample"], [1529, 5, 1, "", "group_norm"], [1530, 5, 1, "", "gumbel_softmax"], [1531, 5, 1, "", "hardshrink"], [1532, 5, 1, "", "hardsigmoid"], [1533, 5, 1, "", "hardswish"], [1534, 5, 1, "", "hardtanh"], [1535, 5, 1, "", "hardtanh_"], [1536, 5, 1, "", "hinge_embedding_loss"], [1537, 5, 1, "", "huber_loss"], [1538, 5, 1, "", "instance_norm"], [1539, 5, 1, "", "interpolate"], [1540, 5, 1, "", "kl_div"], [1541, 5, 1, "", "l1_loss"], [1542, 5, 1, "", "layer_norm"], [1543, 5, 1, "", "leaky_relu"], [1544, 5, 1, "", "leaky_relu_"], [1545, 5, 1, "", "linear"], [1546, 5, 1, "", "local_response_norm"], [1547, 5, 1, "", "log_softmax"], [1548, 5, 1, "", "logsigmoid"], [1549, 5, 1, "", "lp_pool1d"], [1550, 5, 1, "", "lp_pool2d"], [1551, 5, 1, "", "margin_ranking_loss"], [1552, 5, 1, "", "max_pool1d"], [1553, 5, 1, "", "max_pool2d"], [1554, 5, 1, "", "max_pool3d"], [1555, 5, 1, "", "max_unpool1d"], [1556, 5, 1, "", "max_unpool2d"], [1557, 5, 1, "", "max_unpool3d"], [1558, 5, 1, "", "mish"], [1559, 5, 1, "", "mse_loss"], [1560, 5, 1, "", "multi_margin_loss"], [1561, 5, 1, "", "multilabel_margin_loss"], [1562, 5, 1, "", "multilabel_soft_margin_loss"], [1563, 5, 1, "", "nll_loss"], [1564, 5, 1, "", "normalize"], [1565, 5, 1, "", "one_hot"], [1566, 5, 1, "", "pad"], [1567, 5, 1, "", "pairwise_distance"], [1568, 5, 1, "", "pdist"], [1569, 5, 1, "", "pixel_shuffle"], [1570, 5, 1, "", "pixel_unshuffle"], [1571, 5, 1, "", "poisson_nll_loss"], [1572, 5, 1, "", "prelu"], [1573, 5, 1, "", "relu"], [1574, 5, 1, "", "relu6"], [1575, 5, 1, "", "relu_"], [1576, 5, 1, "", "rrelu"], [1577, 5, 1, "", "rrelu_"], [1578, 5, 1, "", "scaled_dot_product_attention"], [1579, 5, 1, "", "selu"], [1580, 5, 1, "", "sigmoid"], [1581, 5, 1, "", "silu"], [1582, 5, 1, "", "smooth_l1_loss"], [1583, 5, 1, "", "soft_margin_loss"], [1584, 5, 1, "", "softmax"], [1585, 5, 1, "", "softmin"], [1586, 5, 1, "", "softplus"], [1587, 5, 1, "", "softshrink"], [1588, 5, 1, "", "softsign"], [1589, 5, 1, "", "tanh"], [1590, 5, 1, "", "tanhshrink"], [1591, 5, 1, "", "threshold"], [1592, 5, 1, "", "threshold_"], [1594, 5, 1, "", "triplet_margin_loss"], [1595, 5, 1, "", "triplet_margin_with_distance_loss"], [1596, 5, 1, "", "unfold"], [1597, 5, 1, "", "upsample"], [1598, 5, 1, "", "upsample_bilinear"], [1599, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1889, 5, 1, "", "calculate_gain"], [1889, 5, 1, "", "constant_"], [1889, 5, 1, "", "dirac_"], [1889, 5, 1, "", "eye_"], [1889, 5, 1, "", "kaiming_normal_"], [1889, 5, 1, "", "kaiming_uniform_"], [1889, 5, 1, "", "normal_"], [1889, 5, 1, "", "ones_"], [1889, 5, 1, "", "orthogonal_"], [1889, 5, 1, "", "sparse_"], [1889, 5, 1, "", "trunc_normal_"], [1889, 5, 1, "", "uniform_"], [1889, 5, 1, "", "xavier_normal_"], [1889, 5, 1, "", "xavier_uniform_"], [1889, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1921, 0, 0, "-", "modules"], [1921, 0, 0, "-", "qat"], [1921, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.modules": [[1918, 0, 0, "-", "fused"]], "torch.nn.intrinsic.qat": [[1921, 0, 0, "-", "modules"]], "torch.nn.intrinsic.qat.modules": [[1918, 0, 0, "-", "conv_fused"], [1918, 0, 0, "-", "linear_fused"], [1918, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized": [[1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1921, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1918, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized.modules": [[1918, 0, 0, "-", "bn_relu"], [1918, 0, 0, "-", "conv_relu"], [1918, 0, 0, "-", "linear_relu"]], "torch.nn.modules": [[1887, 0, 0, "-", "activation"], [1887, 0, 0, "-", "adaptive"], [1887, 0, 0, "-", "batchnorm"], [1887, 0, 0, "-", "channelshuffle"], [1887, 0, 0, "-", "container"], [1887, 0, 0, "-", "conv"], [1887, 0, 0, "-", "distance"], [1887, 0, 0, "-", "dropout"], [1887, 0, 0, "-", "flatten"], [1887, 0, 0, "-", "fold"], [1887, 0, 0, "-", "instancenorm"], [1887, 0, 0, "-", "lazy"], [1887, 0, 0, "-", "linear"], [1887, 0, 0, "-", "loss"], [1887, 0, 0, "-", "module"], [1887, 0, 0, "-", "normalization"], [1887, 0, 0, "-", "padding"], [1887, 0, 0, "-", "pixelshuffle"], [1887, 0, 0, "-", "pooling"], [1887, 0, 0, "-", "rnn"], [1887, 0, 0, "-", "sparse"], [1887, 0, 0, "-", "transformer"], [1887, 0, 0, "-", "upsampling"], [1887, 0, 0, "-", "utils"]], "torch.nn.modules.lazy": [[1600, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1600, 3, 1, "", "has_uninitialized_params"], [1600, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1601, 5, 1, "", "register_module_backward_hook"], [1602, 5, 1, "", "register_module_buffer_registration_hook"], [1603, 5, 1, "", "register_module_forward_hook"], [1604, 5, 1, "", "register_module_forward_pre_hook"], [1605, 5, 1, "", "register_module_full_backward_hook"], [1606, 5, 1, "", "register_module_full_backward_pre_hook"], [1607, 5, 1, "", "register_module_module_registration_hook"], [1608, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1609, 1, 1, "", "DistributedDataParallel"], [1887, 0, 0, "-", "comm"], [1887, 0, 0, "-", "data_parallel"], [1887, 0, 0, "-", "distributed"], [1887, 0, 0, "-", "parallel_apply"], [1887, 0, 0, "-", "replicate"], [1887, 0, 0, "-", "scatter_gather"]], "torch.nn.parallel.DistributedDataParallel": [[1609, 3, 1, "", "join"], [1609, 3, 1, "", "join_hook"], [1609, 3, 1, "", "no_sync"], [1609, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1610, 1, 1, "", "Parameter"], [1611, 1, 1, "", "UninitializedBuffer"], [1612, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1612, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1921, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic.modules": [[1918, 0, 0, "-", "linear"]], "torch.nn.qat.modules": [[1918, 0, 0, "-", "conv"], [1918, 0, 0, "-", "embedding_ops"], [1918, 0, 0, "-", "linear"]], "torch.nn.quantizable": [[1921, 0, 0, "-", "modules"]], "torch.nn.quantizable.modules": [[1918, 0, 0, "-", "activation"], [1918, 0, 0, "-", "rnn"]], "torch.nn.quantized": [[1921, 0, 0, "-", "dynamic"], [1918, 0, 0, "-", "functional"], [1921, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1921, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic.modules": [[1918, 0, 0, "-", "conv"], [1918, 0, 0, "-", "linear"], [1918, 0, 0, "-", "rnn"]], "torch.nn.quantized.modules": [[1918, 0, 0, "-", "activation"], [1918, 0, 0, "-", "batchnorm"], [1918, 0, 0, "-", "conv"], [1918, 0, 0, "-", "dropout"], [1918, 0, 0, "-", "embedding_ops"], [1918, 0, 0, "-", "functional_modules"], [1918, 0, 0, "-", "linear"], [1918, 0, 0, "-", "normalization"], [1918, 0, 0, "-", "rnn"], [1918, 0, 0, "-", "utils"]], "torch.nn.utils": [[1887, 0, 0, "-", "clip_grad"], [1613, 5, 1, "", "clip_grad_norm_"], [1614, 5, 1, "", "clip_grad_value_"], [1887, 0, 0, "-", "convert_parameters"], [1887, 0, 0, "-", "fusion"], [1887, 0, 0, "-", "init"], [1887, 0, 0, "-", "memory_format"], [1615, 5, 1, "", "parameters_to_vector"], [1887, 0, 0, "-", "parametrizations"], [1887, 0, 0, "-", "parametrize"], [1887, 0, 0, "-", "prune"], [1640, 5, 1, "", "remove_spectral_norm"], [1641, 5, 1, "", "remove_weight_norm"], [1887, 0, 0, "-", "rnn"], [1649, 5, 1, "", "skip_init"], [1887, 0, 0, "-", "spectral_norm"], [1887, 0, 0, "-", "stateless"], [1652, 5, 1, "", "vector_to_parameters"], [1887, 0, 0, "-", "weight_norm"]], "torch.nn.utils.parametrizations": [[1616, 5, 1, "", "orthogonal"], [1617, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1618, 1, 1, "", "ParametrizationList"], [1619, 5, 1, "", "cached"], [1620, 5, 1, "", "is_parametrized"], [1621, 5, 1, "", "register_parametrization"], [1622, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1618, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1623, 1, 1, "", "BasePruningMethod"], [1624, 1, 1, "", "CustomFromMask"], [1625, 1, 1, "", "Identity"], [1626, 1, 1, "", "L1Unstructured"], [1627, 1, 1, "", "LnStructured"], [1628, 1, 1, "", "PruningContainer"], [1629, 1, 1, "", "RandomStructured"], [1630, 1, 1, "", "RandomUnstructured"], [1631, 5, 1, "", "custom_from_mask"], [1632, 5, 1, "", "global_unstructured"], [1633, 5, 1, "", "identity"], [1634, 5, 1, "", "is_pruned"], [1635, 5, 1, "", "l1_unstructured"], [1636, 5, 1, "", "ln_structured"], [1637, 5, 1, "", "random_structured"], [1638, 5, 1, "", "random_unstructured"], [1639, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1623, 3, 1, "", "apply"], [1623, 3, 1, "", "apply_mask"], [1623, 3, 1, "", "compute_mask"], [1623, 3, 1, "", "prune"], [1623, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1624, 3, 1, "", "apply"], [1624, 3, 1, "", "apply_mask"], [1624, 3, 1, "", "prune"], [1624, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1625, 3, 1, "", "apply"], [1625, 3, 1, "", "apply_mask"], [1625, 3, 1, "", "prune"], [1625, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1626, 3, 1, "", "apply"], [1626, 3, 1, "", "apply_mask"], [1626, 3, 1, "", "prune"], [1626, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1627, 3, 1, "", "apply"], [1627, 3, 1, "", "apply_mask"], [1627, 3, 1, "", "compute_mask"], [1627, 3, 1, "", "prune"], [1627, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1628, 3, 1, "", "add_pruning_method"], [1628, 3, 1, "", "apply"], [1628, 3, 1, "", "apply_mask"], [1628, 3, 1, "", "compute_mask"], [1628, 3, 1, "", "prune"], [1628, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1629, 3, 1, "", "apply"], [1629, 3, 1, "", "apply_mask"], [1629, 3, 1, "", "compute_mask"], [1629, 3, 1, "", "prune"], [1629, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1630, 3, 1, "", "apply"], [1630, 3, 1, "", "apply_mask"], [1630, 3, 1, "", "prune"], [1630, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1642, 1, 1, "", "PackedSequence"], [1643, 5, 1, "", "pack_padded_sequence"], [1644, 5, 1, "", "pack_sequence"], [1645, 5, 1, "", "pad_packed_sequence"], [1646, 5, 1, "", "pad_sequence"], [1647, 5, 1, "", "unpack_sequence"], [1648, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1642, 2, 1, "", "batch_sizes"], [1642, 3, 1, "", "count"], [1642, 2, 1, "", "data"], [1642, 3, 1, "", "index"], [1642, 4, 1, "", "is_cuda"], [1642, 3, 1, "", "is_pinned"], [1642, 2, 1, "", "sorted_indices"], [1642, 3, 1, "", "to"], [1642, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1651, 5, 1, "", "functional_call"]], "torch.onnx": [[1910, 1, 1, "", "DiagnosticOptions"], [1910, 1, 1, "", "ExportOptions"], [1910, 1, 1, "", "ExportOutput"], [1910, 1, 1, "", "ExportOutputSerializer"], [1662, 1, 1, "", "JitScalarType"], [1910, 1, 1, "", "OnnxExporterError"], [1910, 1, 1, "", "OnnxRegistry"], [1912, 5, 1, "", "disable_log"], [1910, 5, 1, "", "dynamo_export"], [1910, 5, 1, "", "enable_fake_mode"], [1912, 5, 1, "", "enable_log"], [1909, 0, 0, "-", "errors"], [1912, 5, 1, "", "export"], [1912, 5, 1, "", "export_to_pretty_string"], [1912, 5, 1, "", "is_in_onnx_export"], [1911, 5, 1, "", "is_onnxrt_backend_supported"], [1909, 0, 0, "-", "operators"], [1912, 5, 1, "", "register_custom_op_symbolic"], [1912, 5, 1, "", "select_model_mode_for_export"], [1909, 0, 0, "-", "symbolic_caffe2"], [1909, 0, 0, "-", "symbolic_helper"], [1909, 0, 0, "-", "symbolic_opset10"], [1909, 0, 0, "-", "symbolic_opset11"], [1909, 0, 0, "-", "symbolic_opset12"], [1909, 0, 0, "-", "symbolic_opset13"], [1909, 0, 0, "-", "symbolic_opset14"], [1909, 0, 0, "-", "symbolic_opset15"], [1909, 0, 0, "-", "symbolic_opset16"], [1909, 0, 0, "-", "symbolic_opset17"], [1909, 0, 0, "-", "symbolic_opset18"], [1909, 0, 0, "-", "symbolic_opset7"], [1909, 0, 0, "-", "symbolic_opset8"], [1909, 0, 0, "-", "symbolic_opset9"], [1912, 5, 1, "", "unregister_custom_op_symbolic"], [1909, 0, 0, "-", "utils"], [1909, 0, 0, "-", "verification"]], "torch.onnx.ExportOutput": [[1910, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1910, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1910, 4, 1, "", "diagnostic_context"], [1910, 4, 1, "", "fake_context"], [1910, 4, 1, "", "model_proto"], [1910, 3, 1, "", "save"], [1910, 3, 1, "", "save_diagnostics"]], "torch.onnx.ExportOutputSerializer": [[1910, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1662, 3, 1, "", "dtype"], [1662, 3, 1, "", "from_dtype"], [1662, 3, 1, "", "from_value"], [1662, 3, 1, "", "onnx_compatible"], [1662, 3, 1, "", "onnx_type"], [1662, 3, 1, "", "scalar_name"], [1662, 3, 1, "", "torch_name"]], "torch.onnx.OnnxRegistry": [[1910, 3, 1, "", "get_op_functions"], [1910, 3, 1, "", "is_registered_op"], [1910, 4, 1, "", "opset_version"], [1910, 3, 1, "", "register_op"]], "torch.onnx.verification": [[1663, 1, 1, "", "GraphInfo"], [1664, 1, 1, "", "VerificationOptions"], [1912, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1663, 3, 1, "", "all_mismatch_leaf_graph_info"], [1663, 3, 1, "", "clear"], [1663, 3, 1, "", "essential_node_count"], [1663, 3, 1, "", "essential_node_kinds"], [1663, 3, 1, "", "export_repro"], [1663, 3, 1, "", "find_mismatch"], [1663, 3, 1, "", "find_partition"], [1663, 3, 1, "", "has_mismatch"], [1663, 3, 1, "", "pretty_print_mismatch"], [1663, 3, 1, "", "pretty_print_tree"], [1663, 3, 1, "", "verify_export"]], "torch.optim": [[1665, 1, 1, "", "ASGD"], [1666, 1, 1, "", "Adadelta"], [1667, 1, 1, "", "Adagrad"], [1668, 1, 1, "", "Adam"], [1669, 1, 1, "", "AdamW"], [1670, 1, 1, "", "Adamax"], [1671, 1, 1, "", "LBFGS"], [1672, 1, 1, "", "NAdam"], [1914, 1, 1, "", "Optimizer"], [1678, 1, 1, "", "RAdam"], [1679, 1, 1, "", "RMSprop"], [1680, 1, 1, "", "Rprop"], [1681, 1, 1, "", "SGD"], [1682, 1, 1, "", "SparseAdam"], [1914, 0, 0, "-", "adadelta"], [1914, 0, 0, "-", "adagrad"], [1914, 0, 0, "-", "adam"], [1914, 0, 0, "-", "adamax"], [1914, 0, 0, "-", "adamw"], [1914, 0, 0, "-", "asgd"], [1914, 0, 0, "-", "lbfgs"], [1914, 0, 0, "-", "lr_scheduler"], [1914, 0, 0, "-", "nadam"], [1914, 0, 0, "-", "optimizer"], [1914, 0, 0, "-", "radam"], [1914, 0, 0, "-", "rmsprop"], [1914, 0, 0, "-", "rprop"], [1914, 0, 0, "-", "sgd"], [1914, 0, 0, "-", "sparse_adam"], [1914, 0, 0, "-", "swa_utils"]], "torch.optim.ASGD": [[1665, 3, 1, "", "add_param_group"], [1665, 3, 1, "", "load_state_dict"], [1665, 3, 1, "", "register_load_state_dict_post_hook"], [1665, 3, 1, "", "register_load_state_dict_pre_hook"], [1665, 3, 1, "", "register_state_dict_post_hook"], [1665, 3, 1, "", "register_state_dict_pre_hook"], [1665, 3, 1, "", "register_step_post_hook"], [1665, 3, 1, "", "register_step_pre_hook"], [1665, 3, 1, "", "state_dict"], [1665, 3, 1, "", "step"], [1665, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1666, 3, 1, "", "add_param_group"], [1666, 3, 1, "", "load_state_dict"], [1666, 3, 1, "", "register_load_state_dict_post_hook"], [1666, 3, 1, "", "register_load_state_dict_pre_hook"], [1666, 3, 1, "", "register_state_dict_post_hook"], [1666, 3, 1, "", "register_state_dict_pre_hook"], [1666, 3, 1, "", "register_step_post_hook"], [1666, 3, 1, "", "register_step_pre_hook"], [1666, 3, 1, "", "state_dict"], [1666, 3, 1, "", "step"], [1666, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1667, 3, 1, "", "add_param_group"], [1667, 3, 1, "", "load_state_dict"], [1667, 3, 1, "", "register_load_state_dict_post_hook"], [1667, 3, 1, "", "register_load_state_dict_pre_hook"], [1667, 3, 1, "", "register_state_dict_post_hook"], [1667, 3, 1, "", "register_state_dict_pre_hook"], [1667, 3, 1, "", "register_step_post_hook"], [1667, 3, 1, "", "register_step_pre_hook"], [1667, 3, 1, "", "state_dict"], [1667, 3, 1, "", "step"], [1667, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1668, 3, 1, "", "add_param_group"], [1668, 3, 1, "", "load_state_dict"], [1668, 3, 1, "", "register_load_state_dict_post_hook"], [1668, 3, 1, "", "register_load_state_dict_pre_hook"], [1668, 3, 1, "", "register_state_dict_post_hook"], [1668, 3, 1, "", "register_state_dict_pre_hook"], [1668, 3, 1, "", "register_step_post_hook"], [1668, 3, 1, "", "register_step_pre_hook"], [1668, 3, 1, "", "state_dict"], [1668, 3, 1, "", "step"], [1668, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1669, 3, 1, "", "add_param_group"], [1669, 3, 1, "", "load_state_dict"], [1669, 3, 1, "", "register_load_state_dict_post_hook"], [1669, 3, 1, "", "register_load_state_dict_pre_hook"], [1669, 3, 1, "", "register_state_dict_post_hook"], [1669, 3, 1, "", "register_state_dict_pre_hook"], [1669, 3, 1, "", "register_step_post_hook"], [1669, 3, 1, "", "register_step_pre_hook"], [1669, 3, 1, "", "state_dict"], [1669, 3, 1, "", "step"], [1669, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1670, 3, 1, "", "add_param_group"], [1670, 3, 1, "", "load_state_dict"], [1670, 3, 1, "", "register_load_state_dict_post_hook"], [1670, 3, 1, "", "register_load_state_dict_pre_hook"], [1670, 3, 1, "", "register_state_dict_post_hook"], [1670, 3, 1, "", "register_state_dict_pre_hook"], [1670, 3, 1, "", "register_step_post_hook"], [1670, 3, 1, "", "register_step_pre_hook"], [1670, 3, 1, "", "state_dict"], [1670, 3, 1, "", "step"], [1670, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1671, 3, 1, "", "add_param_group"], [1671, 3, 1, "", "load_state_dict"], [1671, 3, 1, "", "register_load_state_dict_post_hook"], [1671, 3, 1, "", "register_load_state_dict_pre_hook"], [1671, 3, 1, "", "register_state_dict_post_hook"], [1671, 3, 1, "", "register_state_dict_pre_hook"], [1671, 3, 1, "", "register_step_post_hook"], [1671, 3, 1, "", "register_step_pre_hook"], [1671, 3, 1, "", "state_dict"], [1671, 3, 1, "", "step"], [1671, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1672, 3, 1, "", "add_param_group"], [1672, 3, 1, "", "load_state_dict"], [1672, 3, 1, "", "register_load_state_dict_post_hook"], [1672, 3, 1, "", "register_load_state_dict_pre_hook"], [1672, 3, 1, "", "register_state_dict_post_hook"], [1672, 3, 1, "", "register_state_dict_pre_hook"], [1672, 3, 1, "", "register_step_post_hook"], [1672, 3, 1, "", "register_step_pre_hook"], [1672, 3, 1, "", "state_dict"], [1672, 3, 1, "", "step"], [1672, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1673, 3, 1, "", "add_param_group"], [1674, 3, 1, "", "load_state_dict"], [1675, 3, 1, "", "state_dict"], [1676, 3, 1, "", "step"], [1677, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1678, 3, 1, "", "add_param_group"], [1678, 3, 1, "", "load_state_dict"], [1678, 3, 1, "", "register_load_state_dict_post_hook"], [1678, 3, 1, "", "register_load_state_dict_pre_hook"], [1678, 3, 1, "", "register_state_dict_post_hook"], [1678, 3, 1, "", "register_state_dict_pre_hook"], [1678, 3, 1, "", "register_step_post_hook"], [1678, 3, 1, "", "register_step_pre_hook"], [1678, 3, 1, "", "state_dict"], [1678, 3, 1, "", "step"], [1678, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1679, 3, 1, "", "add_param_group"], [1679, 3, 1, "", "load_state_dict"], [1679, 3, 1, "", "register_load_state_dict_post_hook"], [1679, 3, 1, "", "register_load_state_dict_pre_hook"], [1679, 3, 1, "", "register_state_dict_post_hook"], [1679, 3, 1, "", "register_state_dict_pre_hook"], [1679, 3, 1, "", "register_step_post_hook"], [1679, 3, 1, "", "register_step_pre_hook"], [1679, 3, 1, "", "state_dict"], [1679, 3, 1, "", "step"], [1679, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1680, 3, 1, "", "add_param_group"], [1680, 3, 1, "", "load_state_dict"], [1680, 3, 1, "", "register_load_state_dict_post_hook"], [1680, 3, 1, "", "register_load_state_dict_pre_hook"], [1680, 3, 1, "", "register_state_dict_post_hook"], [1680, 3, 1, "", "register_state_dict_pre_hook"], [1680, 3, 1, "", "register_step_post_hook"], [1680, 3, 1, "", "register_step_pre_hook"], [1680, 3, 1, "", "state_dict"], [1680, 3, 1, "", "step"], [1680, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1681, 3, 1, "", "add_param_group"], [1681, 3, 1, "", "load_state_dict"], [1681, 3, 1, "", "register_load_state_dict_post_hook"], [1681, 3, 1, "", "register_load_state_dict_pre_hook"], [1681, 3, 1, "", "register_state_dict_post_hook"], [1681, 3, 1, "", "register_state_dict_pre_hook"], [1681, 3, 1, "", "register_step_post_hook"], [1681, 3, 1, "", "register_step_pre_hook"], [1681, 3, 1, "", "state_dict"], [1681, 3, 1, "", "step"], [1681, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1682, 3, 1, "", "add_param_group"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "register_load_state_dict_post_hook"], [1682, 3, 1, "", "register_load_state_dict_pre_hook"], [1682, 3, 1, "", "register_state_dict_post_hook"], [1682, 3, 1, "", "register_state_dict_pre_hook"], [1682, 3, 1, "", "register_step_post_hook"], [1682, 3, 1, "", "register_step_pre_hook"], [1682, 3, 1, "", "state_dict"], [1682, 3, 1, "", "step"], [1682, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1683, 1, 1, "", "ChainedScheduler"], [1684, 1, 1, "", "ConstantLR"], [1685, 1, 1, "", "CosineAnnealingLR"], [1686, 1, 1, "", "CosineAnnealingWarmRestarts"], [1687, 1, 1, "", "CyclicLR"], [1688, 1, 1, "", "ExponentialLR"], [1689, 1, 1, "", "LambdaLR"], [1690, 1, 1, "", "LinearLR"], [1691, 1, 1, "", "MultiStepLR"], [1692, 1, 1, "", "MultiplicativeLR"], [1693, 1, 1, "", "OneCycleLR"], [1694, 1, 1, "", "PolynomialLR"], [1695, 1, 1, "", "ReduceLROnPlateau"], [1696, 1, 1, "", "SequentialLR"], [1697, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1683, 3, 1, "", "get_last_lr"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "print_lr"], [1683, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1684, 3, 1, "", "get_last_lr"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "print_lr"], [1684, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1685, 3, 1, "", "get_last_lr"], [1685, 3, 1, "", "load_state_dict"], [1685, 3, 1, "", "print_lr"], [1685, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1686, 3, 1, "", "get_last_lr"], [1686, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "print_lr"], [1686, 3, 1, "", "state_dict"], [1686, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1687, 3, 1, "", "get_last_lr"], [1687, 3, 1, "", "get_lr"], [1687, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1688, 3, 1, "", "get_last_lr"], [1688, 3, 1, "", "load_state_dict"], [1688, 3, 1, "", "print_lr"], [1688, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1689, 3, 1, "", "get_last_lr"], [1689, 3, 1, "", "load_state_dict"], [1689, 3, 1, "", "print_lr"], [1689, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1690, 3, 1, "", "get_last_lr"], [1690, 3, 1, "", "load_state_dict"], [1690, 3, 1, "", "print_lr"], [1690, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1691, 3, 1, "", "get_last_lr"], [1691, 3, 1, "", "load_state_dict"], [1691, 3, 1, "", "print_lr"], [1691, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1692, 3, 1, "", "get_last_lr"], [1692, 3, 1, "", "load_state_dict"], [1692, 3, 1, "", "print_lr"], [1692, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1693, 3, 1, "", "get_last_lr"], [1693, 3, 1, "", "load_state_dict"], [1693, 3, 1, "", "print_lr"], [1693, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1694, 3, 1, "", "get_last_lr"], [1694, 3, 1, "", "load_state_dict"], [1694, 3, 1, "", "print_lr"], [1694, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ReduceLROnPlateau": [[1695, 3, 1, "", "get_last_lr"], [1695, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.SequentialLR": [[1696, 3, 1, "", "get_last_lr"], [1696, 3, 1, "", "load_state_dict"], [1696, 3, 1, "", "print_lr"], [1696, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1697, 3, 1, "", "get_last_lr"], [1697, 3, 1, "", "load_state_dict"], [1697, 3, 1, "", "print_lr"], [1697, 3, 1, "", "state_dict"]], "torch.overrides": [[1957, 5, 1, "", "get_ignored_functions"], [1957, 5, 1, "", "get_overridable_functions"], [1957, 5, 1, "", "get_testing_overrides"], [1957, 5, 1, "", "handle_torch_function"], [1957, 5, 1, "", "has_torch_function"], [1957, 5, 1, "", "is_tensor_like"], [1957, 5, 1, "", "is_tensor_method_or_property"], [1957, 5, 1, "", "resolve_name"], [1957, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1915, 1, 1, "", "Directory"], [1915, 1, 1, "", "EmptyMatchError"], [1915, 1, 1, "", "PackageExporter"], [1915, 1, 1, "", "PackageImporter"], [1915, 1, 1, "", "PackagingError"], [1915, 0, 0, "-", "analyze"], [1915, 0, 0, "-", "file_structure_representation"], [1915, 0, 0, "-", "find_file_dependencies"], [1915, 0, 0, "-", "glob_group"], [1915, 0, 0, "-", "importer"], [1915, 0, 0, "-", "package_exporter"], [1915, 0, 0, "-", "package_importer"]], "torch.package.Directory": [[1915, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1915, 3, 1, "", "__init__"], [1915, 3, 1, "", "add_dependency"], [1915, 3, 1, "", "all_paths"], [1915, 3, 1, "", "close"], [1915, 3, 1, "", "denied_modules"], [1915, 3, 1, "", "deny"], [1915, 3, 1, "", "dependency_graph_string"], [1915, 3, 1, "", "extern"], [1915, 3, 1, "", "externed_modules"], [1915, 3, 1, "", "get_rdeps"], [1915, 3, 1, "", "get_unique_id"], [1915, 3, 1, "", "intern"], [1915, 3, 1, "", "interned_modules"], [1915, 3, 1, "", "mock"], [1915, 3, 1, "", "mocked_modules"], [1915, 3, 1, "", "register_extern_hook"], [1915, 3, 1, "", "register_intern_hook"], [1915, 3, 1, "", "register_mock_hook"], [1915, 3, 1, "", "save_binary"], [1915, 3, 1, "", "save_module"], [1915, 3, 1, "", "save_pickle"], [1915, 3, 1, "", "save_source_file"], [1915, 3, 1, "", "save_source_string"], [1915, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1915, 3, 1, "", "__init__"], [1915, 3, 1, "", "file_structure"], [1915, 3, 1, "", "id"], [1915, 3, 1, "", "import_module"], [1915, 3, 1, "", "load_binary"], [1915, 3, 1, "", "load_pickle"], [1915, 3, 1, "", "load_text"], [1915, 3, 1, "", "python_version"]], "torch.package.analyze": [[1915, 0, 0, "-", "find_first_use_of_broken_modules"], [1915, 0, 0, "-", "is_from_package"], [1915, 0, 0, "-", "trace_dependencies"]], "torch.profiler": [[1917, 1, 1, "", "ProfilerAction"], [1917, 1, 1, "", "ProfilerActivity"], [1917, 1, 1, "", "_KinetoProfile"], [1917, 0, 0, "-", "itt"], [1917, 1, 1, "", "profile"], [1917, 0, 0, "-", "profiler"], [1917, 0, 0, "-", "python_tracer"], [1917, 5, 1, "", "schedule"], [1917, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1917, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1917, 3, 1, "", "add_metadata"], [1917, 3, 1, "", "add_metadata_json"], [1917, 3, 1, "", "events"], [1917, 3, 1, "", "export_chrome_trace"], [1917, 3, 1, "", "export_memory_timeline"], [1917, 3, 1, "", "export_stacks"], [1917, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1917, 5, 1, "", "is_available"], [1917, 5, 1, "", "mark"], [1917, 5, 1, "", "range_pop"], [1917, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1917, 3, 1, "", "step"]], "torch.quantization": [[1918, 0, 0, "-", "fake_quantize"], [1918, 0, 0, "-", "fuse_modules"], [1918, 0, 0, "-", "fuser_method_mappings"], [1921, 0, 0, "-", "fx"], [1918, 0, 0, "-", "observer"], [1918, 0, 0, "-", "qconfig"], [1918, 0, 0, "-", "quant_type"], [1918, 0, 0, "-", "quantization_mappings"], [1918, 0, 0, "-", "quantize"], [1918, 0, 0, "-", "quantize_fx"], [1918, 0, 0, "-", "quantize_jit"], [1918, 0, 0, "-", "stubs"], [1918, 0, 0, "-", "utils"]], "torch.quantization.fx": [[1918, 0, 0, "-", "convert"], [1918, 0, 0, "-", "fuse"], [1918, 0, 0, "-", "fusion_patterns"], [1918, 0, 0, "-", "graph_module"], [1918, 0, 0, "-", "match_utils"], [1918, 0, 0, "-", "pattern_utils"], [1918, 0, 0, "-", "prepare"], [1918, 0, 0, "-", "quantization_patterns"], [1918, 0, 0, "-", "quantization_types"], [1918, 0, 0, "-", "utils"]], "torch.quasirandom": [[1718, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1718, 3, 1, "", "draw"], [1718, 3, 1, "", "draw_base2"], [1718, 3, 1, "", "fast_forward"], [1718, 3, 1, "", "reset"]], "torch.random": [[1922, 5, 1, "", "fork_rng"], [1922, 5, 1, "", "get_rng_state"], [1922, 5, 1, "", "initial_seed"], [1922, 5, 1, "", "manual_seed"], [1922, 5, 1, "", "seed"], [1922, 5, 1, "", "set_rng_state"]], "torch.serialization": [[1907, 5, 1, "", "get_default_load_endianness"], [1907, 5, 1, "", "register_package"], [1907, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[1926, 0, 0, "-", "windows"]], "torch.signal.windows": [[1766, 5, 1, "", "bartlett"], [1767, 5, 1, "", "blackman"], [1768, 5, 1, "", "cosine"], [1769, 5, 1, "", "exponential"], [1770, 5, 1, "", "gaussian"], [1771, 5, 1, "", "general_cosine"], [1772, 5, 1, "", "general_hamming"], [1773, 5, 1, "", "hamming"], [1774, 5, 1, "", "hann"], [1775, 5, 1, "", "kaiser"], [1776, 5, 1, "", "nuttall"], [1935, 0, 0, "-", "windows"]], "torch.sparse": [[1786, 5, 1, "", "addmm"], [1787, 5, 1, "", "as_sparse_gradcheck"], [1788, 1, 1, "", "check_sparse_tensor_invariants"], [1789, 5, 1, "", "log_softmax"], [1790, 5, 1, "", "mm"], [1791, 5, 1, "", "sampled_addmm"], [1935, 0, 0, "-", "semi_structured"], [1792, 5, 1, "", "softmax"], [1793, 5, 1, "", "spdiags"], [1794, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1788, 3, 1, "", "disable"], [1788, 3, 1, "", "enable"], [1788, 3, 1, "", "is_enabled"]], "torch.special": [[1928, 5, 1, "", "airy_ai"], [1928, 5, 1, "", "bessel_j0"], [1928, 5, 1, "", "bessel_j1"], [1928, 5, 1, "", "digamma"], [1928, 5, 1, "", "entr"], [1928, 5, 1, "", "erf"], [1928, 5, 1, "", "erfc"], [1928, 5, 1, "", "erfcx"], [1928, 5, 1, "", "erfinv"], [1928, 5, 1, "", "exp2"], [1928, 5, 1, "", "expit"], [1928, 5, 1, "", "expm1"], [1928, 5, 1, "", "gammainc"], [1928, 5, 1, "", "gammaincc"], [1928, 5, 1, "", "gammaln"], [1928, 5, 1, "", "i0"], [1928, 5, 1, "", "i0e"], [1928, 5, 1, "", "i1"], [1928, 5, 1, "", "i1e"], [1928, 5, 1, "", "log1p"], [1928, 5, 1, "", "log_ndtr"], [1928, 5, 1, "", "log_softmax"], [1928, 5, 1, "", "logit"], [1928, 5, 1, "", "logsumexp"], [1928, 5, 1, "", "multigammaln"], [1928, 5, 1, "", "ndtr"], [1928, 5, 1, "", "ndtri"], [1928, 5, 1, "", "polygamma"], [1928, 5, 1, "", "psi"], [1928, 5, 1, "", "round"], [1928, 5, 1, "", "scaled_modified_bessel_k0"], [1928, 5, 1, "", "scaled_modified_bessel_k1"], [1928, 5, 1, "", "sinc"], [1928, 5, 1, "", "softmax"], [1928, 5, 1, "", "spherical_bessel_j0"], [1928, 5, 1, "", "xlog1py"], [1928, 5, 1, "", "xlogy"], [1928, 5, 1, "", "zeta"]], "torch.testing": [[1934, 5, 1, "", "assert_allclose"], [1934, 5, 1, "", "assert_close"], [1934, 5, 1, "", "make_tensor"]], "torch.torch": [[1935, 2, 1, "", "default_generator"], [1959, 1, 1, "", "finfo"], [1959, 1, 1, "", "iinfo"]], "torch.utils": [[1935, 0, 0, "-", "backcompat"], [1960, 0, 0, "-", "backend_registration"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [1960, 0, 0, "-", "bundled_inputs"], [1960, 0, 0, "-", "checkpoint"], [1960, 0, 0, "-", "collect_env"], [1960, 0, 0, "-", "cpp_backtrace"], [1960, 0, 0, "-", "cpp_extension"], [21, 0, 0, "-", "data"], [1960, 0, 0, "-", "dlpack"], [1960, 0, 0, "-", "file_baton"], [1960, 0, 0, "-", "flop_counter"], [1849, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1850, 5, 1, "", "get_cpp_backtrace"], [1935, 0, 0, "-", "hipify"], [1960, 0, 0, "-", "hooks"], [1874, 0, 0, "-", "jit"], [1960, 0, 0, "-", "mkldnn"], [1960, 0, 0, "-", "mobile_optimizer"], [1935, 0, 0, "-", "model_dump"], [1880, 0, 0, "-", "model_zoo"], [1851, 5, 1, "", "rename_privateuse1_backend"], [1852, 5, 1, "", "set_module"], [1960, 0, 0, "-", "show_pickle"], [1932, 0, 0, "-", "tensorboard"], [1960, 0, 0, "-", "throughput_benchmark"], [1935, 0, 0, "-", "viz"], [1960, 0, 0, "-", "weak"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.examples": [[1960, 0, 0, "-", "blas_compare_setup"], [1960, 0, 0, "-", "compare"], [1960, 0, 0, "-", "fuzzer"], [1960, 0, 0, "-", "op_benchmark"], [1960, 0, 0, "-", "simple_timeit"], [1960, 0, 0, "-", "spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers": [[1960, 0, 0, "-", "binary"], [1960, 0, 0, "-", "sparse_binary"], [1960, 0, 0, "-", "sparse_unary"], [1960, 0, 0, "-", "spectral"], [1960, 0, 0, "-", "unary"]], "torch.utils.benchmark.utils": [[1960, 0, 0, "-", "common"], [1960, 0, 0, "-", "compare"], [1960, 0, 0, "-", "compile"], [1960, 0, 0, "-", "cpp_jit"], [1960, 0, 0, "-", "fuzzer"], [1960, 0, 0, "-", "sparse_fuzzer"], [1960, 0, 0, "-", "timer"], [3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[1960, 0, 0, "-", "timer_interface"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[14, 5, 1, "", "BuildExtension"], [14, 5, 1, "", "CUDAExtension"], [14, 5, 1, "", "CppExtension"], [14, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [14, 5, 1, "", "include_paths"], [14, 5, 1, "", "is_ninja_available"], [14, 5, 1, "", "load"], [14, 5, 1, "", "load_inline"], [14, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[21, 1, 1, "", "BatchSampler"], [21, 1, 1, "", "ChainDataset"], [21, 1, 1, "", "ConcatDataset"], [21, 1, 1, "", "DataLoader"], [21, 1, 1, "", "Dataset"], [21, 1, 1, "", "IterableDataset"], [21, 1, 1, "", "RandomSampler"], [21, 1, 1, "", "Sampler"], [21, 1, 1, "", "SequentialSampler"], [21, 1, 1, "", "StackDataset"], [21, 1, 1, "", "Subset"], [21, 1, 1, "", "SubsetRandomSampler"], [21, 1, 1, "", "TensorDataset"], [21, 1, 1, "", "WeightedRandomSampler"], [1960, 0, 0, "-", "backward_compatibility"], [1960, 0, 0, "-", "dataloader"], [21, 0, 0, "-", "datapipes"], [1960, 0, 0, "-", "dataset"], [21, 5, 1, "", "default_collate"], [21, 5, 1, "", "default_convert"], [1960, 0, 0, "-", "distributed"], [21, 5, 1, "", "get_worker_info"], [1960, 0, 0, "-", "graph"], [1960, 0, 0, "-", "graph_settings"], [21, 5, 1, "", "random_split"], [1960, 0, 0, "-", "sampler"]], "torch.utils.data._utils.collate": [[21, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[21, 0, 0, "-", "dataframe"], [1960, 0, 0, "-", "datapipe"], [1960, 0, 0, "-", "gen_pyi"], [21, 0, 0, "-", "iter"], [21, 0, 0, "-", "map"], [21, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.dataframe": [[1960, 0, 0, "-", "dataframe_wrapper"], [1960, 0, 0, "-", "dataframes"], [1960, 0, 0, "-", "datapipes"], [1960, 0, 0, "-", "structures"]], "torch.utils.data.datapipes.iter": [[1960, 0, 0, "-", "callable"], [1960, 0, 0, "-", "combinatorics"], [1960, 0, 0, "-", "combining"], [1960, 0, 0, "-", "filelister"], [1960, 0, 0, "-", "fileopener"], [1960, 0, 0, "-", "grouping"], [1960, 0, 0, "-", "routeddecoder"], [1960, 0, 0, "-", "selecting"], [1960, 0, 0, "-", "sharding"], [1960, 0, 0, "-", "streamreader"], [1960, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.map": [[1960, 0, 0, "-", "callable"], [1960, 0, 0, "-", "combinatorics"], [1960, 0, 0, "-", "combining"], [1960, 0, 0, "-", "grouping"], [1960, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.utils": [[1960, 0, 0, "-", "common"], [1960, 0, 0, "-", "decoder"], [1960, 0, 0, "-", "snapshot"]], "torch.utils.data.distributed": [[21, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[31, 5, 1, "", "from_dlpack"], [31, 5, 1, "", "to_dlpack"]], "torch.utils.hipify": [[1960, 0, 0, "-", "constants"], [1960, 0, 0, "-", "cuda_to_hip_mappings"], [1960, 0, 0, "-", "hipify_python"], [1960, 0, 0, "-", "version"]], "torch.utils.jit": [[1960, 0, 0, "-", "log_extract"]], "torch.utils.mobile_optimizer": [[1879, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1880, 5, 1, "", "load_url"]], "torch.utils.tensorboard": [[1960, 0, 0, "-", "summary"], [1960, 0, 0, "-", "writer"]], "torch.utils.tensorboard.writer": [[1932, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1932, 3, 1, "", "__init__"], [1932, 3, 1, "", "add_audio"], [1932, 3, 1, "", "add_custom_scalars"], [1932, 3, 1, "", "add_embedding"], [1932, 3, 1, "", "add_figure"], [1932, 3, 1, "", "add_graph"], [1932, 3, 1, "", "add_histogram"], [1932, 3, 1, "", "add_hparams"], [1932, 3, 1, "", "add_image"], [1932, 3, 1, "", "add_images"], [1932, 3, 1, "", "add_mesh"], [1932, 3, 1, "", "add_pr_curve"], [1932, 3, 1, "", "add_scalar"], [1932, 3, 1, "", "add_scalars"], [1932, 3, 1, "", "add_text"], [1932, 3, 1, "", "add_video"], [1932, 3, 1, "", "close"], [1932, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 21, 1868, 1890, 1897], "mix": [0, 1868, 1890], "precis": [0, 1890, 1894, 1905], "packag": [0, 1, 15, 24, 1883, 1908, 1915], "torch": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14, 16, 17, 21, 23, 24, 26, 27, 29, 30, 31, 42, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 64, 65, 66, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 963, 964, 965, 966, 967, 968, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1673, 1674, 1675, 1676, 1677, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1887, 1888, 1889, 1894, 1896, 1897, 1900, 1905, 1907, 1909, 1912, 1914, 1915, 1917, 1921, 1922, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1946, 1947, 1954, 1957, 1959, 1960], "amp": [0, 1894], "autocast": [0, 1890], "gradient": [0, 1, 54, 1148, 1890, 1891, 1897, 1935], "scale": [0, 1890, 1901], "op": [0, 12, 74, 1873, 1890, 1912, 1935], "refer": [0, 12, 18, 45, 46, 50, 56, 1868, 1870, 1871, 1872, 1881, 1885, 1900, 1910, 1915, 1917, 1918, 1921, 1925, 1933, 1939, 1958], "elig": 0, "cuda": [0, 2, 10, 17, 18, 199, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1883, 1890, 1894, 1898, 1900, 1904, 1906, 1908, 1941, 1946, 1954, 1958], "specif": [0, 21, 46, 1927], "behavior": [0, 21, 1891, 1899], "can": [0, 1891, 1898, 1946, 1953], "float16": 0, "float32": 0, "promot": [0, 7, 76], "widest": 0, "input": [0, 45, 1884, 1890, 1899], "type": [0, 21, 46, 76, 592, 1870, 1871, 1896, 1912, 1915, 1933, 1959], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1501], "over": [0, 8, 1870], "binary_cross_entropi": [0, 1500], "cpu": [0, 2, 10, 16, 196, 963, 964, 965, 966, 967, 1891, 1893, 1904, 1918, 1940], "bfloat16": [0, 145], "differenti": [1, 1891], "autograd": [1, 10, 11, 15, 53, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 1885, 1890, 1891, 1896, 1897, 1912, 1923, 1924], "forward": [1, 879, 1896, 1924], "mode": [1, 42, 51, 404, 1301, 1891, 1896, 1899, 1912, 1918, 1924], "function": [1, 24, 30, 47, 49, 50, 52, 54, 56, 72, 75, 878, 879, 880, 881, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 1125, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1868, 1869, 1870, 1871, 1873, 1876, 1878, 1884, 1886, 1887, 1888, 1890, 1891, 1897, 1899, 1907, 1912, 1921, 1927, 1928, 1946, 1957], "higher": 1, "level": [1, 10, 74, 1921], "api": [1, 10, 12, 15, 18, 27, 35, 45, 50, 53, 56, 1867, 1868, 1871, 1881, 1885, 1893, 1894, 1896, 1900, 1901, 1910, 1912, 1915, 1916, 1917, 1918, 1921, 1939, 1944, 1945, 1946, 1947, 1958], "local": [1, 1871, 1891, 1935, 1953, 1955], "disabl": [1, 21, 946, 1868, 1891, 1935, 1946, 1947], "comput": [1, 54, 1891, 1905, 1924, 1935], "default": [1, 21, 22, 1870, 1891, 1894, 1899, 1920], "layout": [1, 1930], "manual": 1, "In": [1, 8, 1891, 1892, 1935], "place": [1, 53, 1884, 1891, 1892, 1912, 1935], "oper": [1, 10, 22, 24, 45, 53, 77, 1870, 1871, 1876, 1878, 1884, 1885, 1886, 1891, 1896, 1901, 1908, 1912, 1913, 1918, 1927, 1933, 1935, 1945], "tensor": [1, 11, 15, 29, 45, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 1827, 1869, 1873, 1876, 1883, 1884, 1885, 1886, 1891, 1896, 1907, 1912, 1918, 1921, 1927, 1930, 1931, 1933, 1935, 1945], "correct": [1, 56, 1891], "check": [1, 56, 1868, 1891, 1900, 1953], "variabl": [1, 24, 42, 1868, 1870, 1871, 1894, 1949, 1950], "deprec": 1, "context": [1, 25, 39, 61, 1924], "method": [1, 34, 35, 38, 43, 1869, 1870, 1873, 1912, 1921, 1927], "mixin": 1, "numer": [1, 1899, 1905, 1919], "profil": [1, 24, 904, 905, 906, 907, 908, 1310, 1311, 1312, 1882, 1901, 1902, 1917, 1950, 1954, 1956], "anomali": 1, "detect": 1, "graph": [1, 17, 45, 46, 56, 69, 899, 900, 901, 902, 903, 1003, 1868, 1891, 1894, 1918, 1941, 1946, 1954, 1955, 1956], "backend": [2, 24, 41, 42, 1868, 1900, 1903, 1911, 1918, 1920, 1923, 1938, 1940, 1942, 1956], "cudnn": 2, "mp": [2, 10, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1882, 1903], "mkl": 2, "mkldnn": [2, 10], "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 1906, 1950], "util": [3, 4, 5, 10, 14, 21, 24, 31, 50, 52, 1046, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1849, 1850, 1851, 1852, 1874, 1879, 1880, 1887, 1907, 1921, 1932, 1935, 1937, 1955, 1960], "bottleneck": 4, "checkpoint": [5, 22, 26], "pytorch": [6, 7, 8, 9, 10, 15, 23, 24, 45, 53, 1867, 1868, 1869, 1873, 1891, 1894, 1896, 1906, 1907, 1912, 1916, 1918, 1921, 1938, 1941, 1952, 1953, 1956], "govern": [6, 9, 10], "build": [6, 7, 10, 1893, 1901, 1902, 1908], "ci": [6, 10], "how": [6, 22, 51, 1866, 1891, 1896, 1914, 1915, 1943, 1945, 1946, 1953], "add": [6, 9, 87, 674], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1909], "guid": 7, "process": [7, 9, 21, 39, 1890], "get": [7, 27, 1912, 1938, 1946, 1948], "start": [7, 27, 39, 1311, 1938, 1948], "propos": 7, "featur": [7, 1901, 1902, 1946], "report": [7, 1898], "issu": [7, 1868, 1910, 1954], "implement": [7, 32, 41, 43, 1866, 1895, 1899, 1912, 1919, 1921, 1925, 1945], "fix": [7, 42, 51, 251, 1106], "bug": 7, "ad": [7, 1896, 1912], "tutori": [7, 10, 1915, 1916, 1923], "improv": [7, 1902], "document": [7, 27, 1867], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 56, 1868, 1894, 1915, 1946], "readabl": 7, "test": [7, 1871, 1896, 1915, 1934, 1953], "case": [7, 1868], "make": [7, 9, 1941, 1949], "codebas": 7, "more": [7, 45, 49, 1923, 1938], "robust": 7, "triag": 7, "about": [7, 1891, 1923, 1945], "sourc": [7, 1906, 1908, 1915], "develop": [7, 45, 1867, 1909, 1938], "common": [7, 24, 56, 1901, 1918], "mistak": 7, "To": 7, "avoid": [7, 1904, 1906, 1912, 1915], "frequent": [7, 1868, 1898, 1912, 1918, 1946], "ask": [7, 1868, 1898, 1912, 1918, 1946], "question": [7, 1868, 1898, 1912, 1918, 1946], "On": [7, 22, 1870], "python": [7, 8, 53, 58, 59, 60, 61, 62, 63, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1896, 1906, 1912, 1949], "doc": [7, 10, 1900], "c": [7, 10, 15, 1891, 1896, 1900, 1907, 1912], "overview": [7, 18, 45, 56, 1909, 1910, 1915, 1917, 1927, 1942, 1949], "design": [8, 1871, 1895, 1923, 1924, 1925], "philosophi": 8, "principl": [8, 9], "1": [8, 42, 51, 1868, 1897], "usabl": 8, "perform": [8, 10, 1902, 1907, 1945, 1953, 1954, 1956], "2": [8, 51, 1868, 1894, 1897, 1898, 1918, 1921, 1952, 1953, 1956], "simpl": [8, 1870, 1871, 1902, 1910, 1924], "easi": 8, "3": [8, 42, 51], "first": [8, 1915], "best": [8, 1894, 1904, 1918, 1940], "class": [8, 34, 56, 1868, 1870, 1871, 1873, 1912, 1914, 1915, 1933], "languag": [8, 1867, 1868, 1870, 1871, 1872], "interoper": 8, "mechan": [9, 1888, 1891, 1899], "summari": [9, 1918, 1949], "modul": [9, 10, 50, 52, 56, 1429, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1868, 1869, 1870, 1871, 1873, 1887, 1891, 1896, 1902, 1907, 1915, 1918, 1952], "core": [9, 10, 1951], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1871], "confirm": 9, "remov": [9, 1639, 1884], "The": [9, 56, 1871, 1891, 1944], "re": [9, 1915], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 42, 51, 1946], "controversi": 9, "gener": [9, 17, 25, 53, 56, 78, 1892, 1897, 1906, 1918, 1919, 1935, 1943, 1958], "polici": [9, 1944], "faq": [9, 1908], "respons": 10, "nn": [10, 50, 52, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1870, 1871, 1887, 1888, 1889, 1891, 1894, 1896, 1907, 1921, 1927, 1952], "optim": [10, 28, 1673, 1674, 1675, 1676, 1677, 1890, 1891, 1914, 1923, 1924, 1935], "compil": [10, 52, 941, 943, 944, 945, 946, 947, 948, 1894, 1938, 1939, 1946, 1947, 1954, 1956], "jit": [10, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1868, 1871, 1874], "torchscript": [10, 15, 1868, 1869, 1870, 1871, 1873, 1893, 1901, 1909, 1912, 1913, 1915], "fx": [10, 56, 69, 70, 71, 73, 76, 1902, 1918, 1921, 1937], "torchdynamo": [10, 1895, 1909, 1910, 1911, 1941, 1943, 1947, 1956], "distribut": [10, 24, 26, 27, 28, 29, 30, 42, 1887, 1888, 1895, 1900, 1902, 1923, 1924, 1946], "rng": 10, "multiprocess": [10, 39, 1883, 1894, 1904, 1908], "dataload": [10, 1906], "linear": [10, 11, 721, 722, 745, 753, 770, 1132, 1416, 1545, 1887, 1888, 1905, 1927], "algebra": [10, 11, 1905, 1927], "linalg": [10, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1876, 1905], "spars": [10, 1786, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1887, 1888, 1927], "nestedtensor": 10, "nest": [10, 1886], "maskedtensor": [10, 1878], "mask": [10, 1878], "fast": [10, 47, 1899, 1924], "fourier": [10, 47], "transform": [10, 30, 47, 49, 50, 52, 54, 56, 1472, 1887, 1896, 1902, 1946, 1955], "fft": [10, 47, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "inductor": 10, "gpu": [10, 24, 1887, 1888, 1890, 1898, 1916, 1950], "triton": [10, 1950], "nvfuser": 10, "amd": [10, 1905], "rocm": [10, 1900], "hip": [10, 1900], "tool": [10, 17, 1919, 1927], "c10": 10, "dispatch": 10, "onnx": [10, 69, 70, 77, 1909, 1910, 1911, 1912, 1913], "export": [10, 45, 46, 1909, 1910, 1912, 1915, 1918, 1921, 1935, 1946], "mobil": 10, "edg": [10, 1868, 1915], "model": [10, 15, 45, 1866, 1890, 1898, 1901, 1910, 1914, 1915, 1916, 1918, 1921, 1944, 1948, 1950], "compress": [10, 1927], "window": [10, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1908, 1926], "appl": 10, "m1": 10, "powerpc": 10, "librari": [10, 1867, 1875, 1906], "xla": 10, "torchserv": 10, "torchvis": [10, 51], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 949, 1891, 1899], "number": [11, 17, 42, 1891, 1893, 1898, 1906, 1935], "creat": [11, 1868, 1885], "transit": [11, 42], "from": [11, 42, 52, 56, 1866, 1884, 1908, 1912, 1915], "old": 11, "represent": [11, 69], "access": [11, 45, 1870, 1915, 1956], "real": [11, 472, 1729, 1899], "imag": [11, 301, 1165], "angl": [11, 107, 687], "ab": [11, 79, 670], "serial": [11, 45, 1907, 1935], "control": [12, 45, 53, 56, 62, 1906, 1935, 1947], "flow": [12, 45, 53, 56, 62, 1918, 1935], "cond": [12, 64, 952, 1227], "exampl": [12, 36, 45, 56, 1890, 1895, 1896, 1897, 1910, 1912, 1924, 1942], "invari": 12, "higher_ord": 12, "__config__": 13, "cpp_extens": 14, "extend": [15, 32, 1896, 1897], "extens": [15, 17, 1896, 1901, 1908], "author": [15, 56], "stream": [16, 17, 18, 961, 966, 974, 1043, 1894], "event": [16, 17, 33, 35, 971, 1307, 1882], "random": [17, 21, 53, 1898, 1906, 1922, 1935], "commun": [17, 22, 24, 1867], "collect": [17, 24], "beta": [17, 30], "memori": [17, 21, 1894, 1898, 1900, 1902, 1958], "manag": [17, 25, 61, 1883, 1894, 1900, 1915, 1955], "nvidia": [17, 1905], "nvtx": [17, 1028, 1029, 1030], "jiter": [17, 1011, 1012], "sanit": [17, 18], "prototyp": [17, 1918, 1919], "usag": [18, 27, 42, 1894, 1897, 1901, 1902, 1908, 1952, 1958], "data": [21, 45, 53, 63, 1871, 1895, 1898, 1912, 1919, 1933], "dataset": 21, "map": [21, 68, 1900], "style": 21, "iter": [21, 1870], "load": [21, 1203, 1267, 1866, 1907, 1915, 1918], "order": [21, 1891], "sampler": 21, "batch": [21, 51, 1905, 1914], "non": [21, 45, 56, 1887, 1888, 1891, 1894, 1905, 1915, 1918], "work": [21, 50, 1890, 1898, 1927, 1945, 1946, 1954], "collate_fn": 21, "singl": [21, 42, 1890], "multi": [21, 24, 42, 1887, 1888], "platform": 21, "pin": [21, 1894], "ddp": 22, "hook": [22, 1891, 1902, 1952], "us": [22, 24, 56, 1870, 1891, 1894, 1896, 1899, 1910, 1912, 1914, 1915, 1916, 1918, 1927, 1946, 1948, 1954, 1956, 1958], "what": [22, 46, 49, 51, 54, 1878, 1891, 1915, 1943, 1946, 1953, 1954], "doe": [22, 1891, 1945, 1946], "powersgd": 22, "state": [22, 1902, 1915, 1958], "debug": [22, 24, 56, 74, 1868, 1918, 1919, 1942, 1946, 1956], "acknowledg": [22, 1916], "deploi": 23, "ha": 23, "been": 23, "move": 23, "multipi": 23, "come": [24, 1891], "which": [24, 1891, 1946], "environ": [24, 42, 1894, 1901, 1915, 1950], "choos": 24, "network": [24, 1894, 1898, 1902], "interfac": [24, 1201, 1900], "other": [24, 1887, 1906, 1915, 1927, 1935, 1945], "nccl": [24, 1894], "basic": [24, 1871, 1885, 1897, 1923, 1933, 1954], "initi": [24, 1887, 1902, 1933], "tcp": 24, "share": [24, 1883, 1894, 1915, 1925], "file": [24, 1883, 1915], "system": [24, 1871, 1883, 1897], "post": [24, 1918], "kei": [24, 69, 1908], "valu": [24, 66, 603, 1870, 1871, 1905, 1920, 1925], "store": [24, 41], "group": 24, "point": [24, 1901], "synchron": [24, 967, 1044, 1316], "asynchron": [24, 1871, 1894, 1904], "third": 24, "parti": 24, "launch": [24, 42, 1954], "spawn": [24, 1883], "applic": 24, "monitor": [24, 1881], "barrier": 24, "torch_distributed_debug": 24, "log": [24, 359, 1269, 1901], "join": [25, 1935], "elast": [27, 32, 42], "advanc": [27, 1902], "plugin": 27, "parallel": [29, 1593, 1894, 1895, 1898, 1916, 1935], "probabl": 30, "score": 30, "pathwis": 30, "deriv": [30, 1891], "exponentialfamili": 30, "bernoulli": [30, 143, 911], "binomi": 30, "categor": 30, "cauchi": 30, "chi2": 30, "continuousbernoulli": 30, "dirichlet": 30, "exponenti": [30, 1769], "fishersnedecor": 30, "gamma": 30, "geometr": 30, "gumbel": 30, "halfcauchi": 30, "halfnorm": 30, "independ": 30, "kumaraswami": 30, "lkjcholeski": 30, "laplac": 30, "lognorm": 30, "lowrankmultivariatenorm": 30, "mixturesamefamili": 30, "multinomi": [30, 410, 1319], "multivariatenorm": 30, "negativebinomi": 30, "normal": [30, 1564, 1657, 1887, 1914], "onehotcategor": 30, "pareto": 30, "poisson": [30, 1704], "relaxedbernoulli": 30, "logitrelaxedbernoulli": 30, "relaxedonehotcategor": 30, "studentt": 30, "transformeddistribut": 30, "uniform": 30, "vonmis": 30, "weibul": 30, "wishart": 30, "kl": 30, "diverg": [30, 1873], "constraint": [30, 1894], "registri": [30, 41, 77], "dlpack": 31, "agent": 32, "server": [32, 41, 43], "concept": 32, "watchdog": 32, "custom": [33, 43, 56, 1871, 1890, 1894, 1896, 1897, 1902, 1912, 1914, 1915, 1918, 1942], "launcher": 33, "rendezv": [33, 41, 42], "handler": [33, 38, 41, 1898], "metric": [33, 38], "error": [34, 1898, 1908, 1918, 1919, 1956], "propag": [34, 1885], "object": [35, 1915], "torchelast": 37, "kubernet": 37, "multipl": [39, 1890, 1894, 1896, 1916], "worker": [39, 42, 1898], "quickstart": 40, "except": [41, 1898], "dynam": [41, 45, 53, 56, 65, 66, 1918, 1921, 1944, 1945], "c10d": 41, "etcd": 41, "legaci": 41, "torchrun": 42, "node": [42, 46, 70, 73, 76, 899, 900, 901, 902, 903, 1891], "stack": [42, 1806, 1918], "fault": 42, "toler": 42, "size": [42, 526, 1886], "failur": 42, "min": [42, 401, 1298], "max": [42, 397, 1293], "4": [42, 51], "up": [42, 1946], "membership": [42, 1871], "note": [42, 69, 1867, 1871, 1894, 1918, 1923], "definit": [42, 1871], "deploy": [42, 1901], "import": [42, 1866, 1908, 1915, 1945], "notic": [42, 1866], "expir": 43, "timer": 43, "client": 43, "write": [43, 56, 1891, 1896, 1912, 1955], "train": [44, 1890, 1902, 1904, 1918, 1946], "script": [44, 1207, 1868, 1908, 1912], "exist": 45, "framework": [45, 1915, 1923], "an": [45, 1866, 1912, 1914, 1915], "express": [45, 1870, 1871], "special": [45, 1871, 1891, 1928], "shape": [45, 53, 65, 512, 1912, 1944, 1945], "limit": [45, 53, 56, 1866, 1897, 1912, 1941, 1946, 1947, 1952], "break": [45, 1870, 1871, 1946, 1954, 1956], "depend": [45, 53, 1910, 1915, 1924], "miss": 45, "meta": [45, 1871], "kernel": [45, 1900, 1918, 1950], "read": [45, 49, 1912, 1938, 1953], "addit": [45, 69], "link": 45, "user": [45, 1915, 1925, 1938], "deep": [45, 1938, 1943], "dive": [45, 1938, 1943], "ir": [46, 1951, 1955], "assumpt": [46, 1925], "i": [46, 54, 1878, 1891, 1915, 1943, 1945, 1946, 1953], "exportedprogram": 46, "call_funct": 46, "metadata": [46, 899, 1901], "placehold": 46, "output": [46, 1899], "get_attr": 46, "symint": [46, 1944], "faketensor": 46, "pytre": 46, "abl": 46, "helper": 47, "fullyshardeddataparallel": 48, "func": [49, 50, 52, 54, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1896, 1897, 1946], "ar": [49, 54, 1866, 1891, 1915, 1946], "compos": [49, 54, 1942], "why": [49, 54, 1894, 1899, 1915, 1927, 1946], "patch": [51, 1915], "norm": [51, 442, 1252, 1656], "": [51, 1915, 1946, 1953], "happen": 51, "option": [51, 1870, 1893, 1908, 1914], "batchnorm": 51, "paramet": [51, 1610, 1870, 1914], "functorch": [51, 52], "eval": [51, 1891], "migrat": [52, 1868], "make_funct": 52, "combine_state_for_ensembl": 52, "ux": 53, "vmap": [53, 54, 881, 1136, 1859, 1896, 1897, 1946], "mutat": [53, 1935], "arbitrari": [53, 1915], "structur": [53, 63, 1871, 1927], "out": [53, 1884, 1898], "item": [53, 342], "nonzero": [53, 441, 1655], "friend": 53, "whirlwind": 54, "tour": 54, "grad": [54, 280, 896, 1126, 1891, 1894, 1946], "auto": 54, "vector": 54, "vjp": [54, 895, 1135], "jacobian": [54, 892], "product": [54, 1876, 1946], "jvp": [54, 880, 893, 1131, 1897], "jacrev": [54, 1130], "jacfwd": [54, 1129], "hessian": [54, 890, 1128], "futur": 55, "A": [56, 1902, 1910], "quick": 56, "primer": 56, "manipul": [56, 1885], "direct": 56, "subgraph": [56, 1955], "rewrit": [56, 1955], "With": [56, 1873], "replace_pattern": 56, "proxi": 56, "retrac": 56, "interpret": [56, 1868], "pattern": [56, 1870, 1912, 1915], "introduct": [56, 1878, 1886, 1918], "pitfal": [56, 1912], "pdb": 56, "print": [56, 1870, 1871], "to_fold": 56, "graphmodul": 56, "avail": 56, "debugg": 56, "symbol": [56, 72, 75, 1912, 1918, 1935], "trace": [56, 580, 1211, 1832, 1868, 1912, 1917, 1918, 1946, 1947, 1954], "static": [56, 1912, 1918], "tracer": [56, 1868], "leaf": 56, "miscellanea": 56, "exportdb": 57, "tag": [57, 1935], "support": [57, 1869, 1871, 1878, 1884, 1885, 1886, 1897, 1912, 1913, 1918, 1927, 1946, 1952], "assume_constant_result": [57, 67, 944], "autograd_funct": 57, "class_method": 57, "cond_branch_class_method": [57, 64, 65], "cond_branch_nested_funct": [57, 64, 65], "cond_branch_nonlocal_vari": [57, 64, 65], "cond_closed_over_vari": [57, 60, 64], "cond_operand": [57, 64, 65], "cond_pred": [57, 64, 65], "constrain_as_size_exampl": [57, 66, 67], "constrain_as_value_exampl": [57, 66, 67], "decor": 57, "dictionari": [57, 63, 1871], "dynamic_shape_assert": [57, 58], "dynamic_shape_constructor": [57, 65], "dynamic_shape_if_guard": [57, 62, 65], "dynamic_shape_map": [57, 65, 68], "dynamic_shape_sl": [57, 65], "dynamic_shape_view": [57, 65], "fn_with_kwarg": [57, 63], "list_contain": [57, 58, 63, 65], "list_unpack": [57, 62, 63], "nested_funct": [57, 60], "null_context_manag": [57, 61], "pytree_flatten": 57, "scalar_output": [57, 65], "specialized_attribut": 57, "static_for_loop": [57, 62], "static_if": [57, 62], "tensor_setattr": [57, 59], "Not": [57, 1873], "yet": 57, "dynamic_shape_round": [57, 59, 65], "type_reflection_method": [57, 59], "assert": [58, 1871, 1900], "builtin": [59, 1869], "closur": [60, 1914], "escap": [67, 1946], "hatch": [67, 1946], "fxe0007": 69, "fxe0008": 70, "fxe0010": 71, "pass": [71, 1871, 1894, 1904, 1918, 1924, 1955], "fxe0011": 72, "call": [72, 1870, 1871, 1897, 1946], "fxe0012": 73, "unsupport": [73, 1870, 1871, 1873, 1912, 1913], "analysi": 73, "fxe0013": 74, "fxe0014": 75, "find": [75, 77, 1915, 1954], "opschema": 75, "match": [75, 1870, 1885], "fxe0015": 76, "insert": 76, "fxe0016": 77, "overload": 77, "abs_": 80, "absolut": [81, 671], "absolute_": 82, "aco": [83, 672], "acos_": 84, "acosh": [85, 673], "acosh_": 86, "add_": 88, "addbmm": [89, 675], "addbmm_": 90, "addcdiv": [91, 676], "addcdiv_": 92, "addcmul": [93, 677], "addcmul_": 94, "addmm": [95, 678, 1786], "addmm_": 96, "addmv": [97, 679], "addmv_": 98, "addr": [99, 680], "addr_": 100, "adjoint": [101, 681], "all": [102, 682, 1896, 1912, 1914], "allclos": [103, 683], "amax": [104, 684], "amin": [105, 685], "aminmax": [106, 686], "ani": [108, 688, 1871, 1946, 1953], "apply_": 109, "arcco": [110, 855], "arccos_": 111, "arccosh": [112, 856], "arccosh_": 113, "arcsin": [114, 857], "arcsin_": 115, "arcsinh": [116, 858], "arcsinh_": 117, "arctan": [118, 859], "arctan2": [119, 860], "arctan2_": 120, "arctan_": 121, "arctanh": [122, 861], "arctanh_": 123, "argmax": [124, 863], "argmin": [125, 864], "argsort": [126, 865], "argwher": [127, 866], "as_strid": [128, 867], "as_subclass": 129, "asin": [130, 870], "asin_": 131, "asinh": [132, 871], "asinh_": 133, "atan": [134, 872], "atan2": [135, 873], "atan2_": 136, "atan_": 137, "atanh": [138, 874], "atanh_": 139, "backward": [140, 878, 882, 1891, 1892, 1894, 1899, 1924], "baddbmm": [141, 909], "baddbmm_": 142, "bernoulli_": 144, "bincount": [146, 912], "bitwise_and": [147, 913], "bitwise_and_": 148, "bitwise_left_shift": [149, 914], "bitwise_left_shift_": 150, "bitwise_not": [151, 915], "bitwise_not_": 152, "bitwise_or": [153, 916], "bitwise_or_": 154, "bitwise_right_shift": [155, 917], "bitwise_right_shift_": 156, "bitwise_xor": [157, 918], "bitwise_xor_": 158, "bmm": [159, 921], "bool": 160, "broadcast_to": [161, 924], "byte": 162, "cauchy_": 163, "ccol_indic": 164, "cdoubl": 165, "ceil": [166, 930], "ceil_": 167, "cfloat": 168, "chalf": 169, "char": 170, "choleski": [171, 932, 1225], "cholesky_invers": [172, 933], "cholesky_solv": [173, 934], "chunk": [174, 935], "clamp": [175, 760, 936], "clamp_": 176, "clip": [177, 937, 1890], "clip_": 178, "clone": [179, 938], "coalesc": 180, "col_indic": 181, "conj": [182, 953], "conj_phys": [183, 954], "conj_physical_": 184, "contigu": 185, "copy_": 186, "copysign": [187, 955], "copysign_": 188, "corrcoef": [189, 956], "co": [190, 957], "cos_": 191, "cosh": [192, 958], "cosh_": 193, "count_nonzero": [194, 959], "cov": [195, 960], "cross": [197, 968, 1228, 1891], "crow_indic": 198, "cummax": [200, 1047], "cummin": [201, 1048], "cumprod": [202, 1049], "cumprod_": 203, "cumsum": [204, 1050], "cumsum_": 205, "data_ptr": 206, "deg2rad": [207, 1052], "dense_dim": 208, "dequant": [209, 1053, 1918], "det": [210, 1054, 1229], "detach": 211, "detach_": 212, "devic": [213, 990, 1894, 1905, 1930], "diag": [214, 1055], "diag_emb": [215, 1056], "diagflat": [216, 1057], "diagon": [217, 1058, 1230], "diagonal_scatt": [218, 1059], "diff": [219, 1060], "digamma": [220, 1061], "digamma_": 221, "dim": [222, 1884], "dim_ord": 223, "dist": [224, 1062], "div": [225, 1063, 1907], "div_": 226, "divid": [227, 1064], "divide_": 228, "dot": [229, 1065], "doubl": 230, "dsplit": [231, 1066], "element_s": 232, "eq": [233, 1073], "eq_": 234, "equal": [235, 1074], "erf": [236, 1075], "erf_": 237, "erfc": [238, 1076], "erfc_": 239, "erfinv": [240, 1077], "erfinv_": 241, "exp": [242, 1078], "exp_": 243, "expand": 244, "expand_a": 245, "expm1": [246, 1080], "expm1_": 247, "exponential_": 248, "fill_": 249, "fill_diagonal_": 250, "fix_": 252, "flatten": [253, 1107, 1375], "flip": [254, 1108], "fliplr": [255, 1109], "flipud": [256, 1110], "float": [257, 1907], "float_pow": [258, 1111], "float_power_": 259, "floor": [260, 1112], "floor_": 261, "floor_divid": [262, 1113], "floor_divide_": 263, "fmax": [264, 1114], "fmin": [265, 1115], "fmod": [266, 1116], "fmod_": 267, "frac": [268, 1117], "frac_": 269, "frexp": [270, 1118], "gather": [271, 983, 1137], "gcd": [272, 1138], "gcd_": 273, "ge": [274, 1139], "ge_": 275, "geometric_": 276, "geqrf": [277, 1140], "ger": [278, 1141], "get_devic": 279, "greater": [281, 1149], "greater_": 282, "greater_equ": [283, 1150], "greater_equal_": 284, "gt": [285, 1151], "gt_": 286, "half": 287, "hardshrink": [288, 1385, 1531], "heavisid": [289, 1154], "histc": [290, 1155], "histogram": [291, 1156], "hsplit": [292, 1158], "hypot": [293, 1161], "hypot_": 294, "i0": [295, 1162], "i0_": 296, "igamma": [297, 1163], "igamma_": 298, "igammac": [299, 1164], "igammac_": 300, "index_add": [302, 1166], "index_add_": 303, "index_copi": [304, 1167], "index_copy_": 305, "index_fil": 306, "index_fill_": 307, "index_put": 308, "index_put_": 309, "index_reduc": [310, 1168], "index_reduce_": 311, "index_select": [312, 1169], "indic": [313, 1867], "inner": [314, 1172], "int": 315, "int_repr": 316, "invers": [317, 1173, 1876], "is_coalesc": 318, "is_complex": [319, 1174], "is_conj": [320, 1175], "is_contigu": 321, "is_cuda": 322, "is_floating_point": [323, 1177], "is_infer": 324, "is_leaf": 325, "is_meta": 326, "is_pin": 327, "is_quant": 328, "is_set_to": 329, "is_shar": 330, "is_sign": 331, "is_spars": 332, "is_sparse_csr": 333, "isclos": [334, 1184], "isfinit": [335, 1185], "isinf": [336, 1187], "isnan": [337, 1188], "isneginf": [338, 1189], "isposinf": [339, 1190], "isreal": [340, 1191], "istft": [341, 1192], "items": 343, "kthvalu": [344, 1217], "lcm": [345, 1218], "lcm_": 346, "ldexp": [347, 1219], "ldexp_": 348, "le": [349, 1220], "le_": 350, "lerp": [351, 1221], "lerp_": 352, "less": [353, 1222], "less_": 354, "less_equ": [355, 1223], "less_equal_": 356, "lgamma": [357, 1224], "lgamma_": 358, "log10": [360, 1270], "log10_": 361, "log1p": [362, 1271], "log1p_": 363, "log2": [364, 1272], "log2_": 365, "log_": 366, "log_normal_": 367, "logaddexp": [368, 1273], "logaddexp2": [369, 1274], "logcumsumexp": [370, 1275], "logdet": [371, 1276], "logical_and": [372, 1277], "logical_and_": 373, "logical_not": [374, 1278], "logical_not_": 375, "logical_or": [376, 1279], "logical_or_": 377, "logical_xor": [378, 1280], "logical_xor_": 379, "logit": [380, 1281], "logit_": 381, "logsumexp": [382, 1283], "long": 383, "lt": [384, 1284], "lt_": 385, "lu": [386, 1242, 1285], "lu_solv": [387, 1245, 1286], "map_": 388, "masked_fil": 389, "masked_fill_": 390, "masked_scatt": 391, "masked_scatter_": 392, "masked_select": [393, 1289], "matmul": [394, 1246, 1290], "matrix_exp": [395, 1247, 1291], "matrix_pow": [396, 1249, 1292], "maximum": [398, 1294], "mean": [399, 1295], "median": [400, 1296], "minimum": [402, 1299], "mm": [403, 1300, 1790], "moveaxi": [405, 1302], "movedim": [406, 1303], "msort": [407, 1317], "mul": [408, 1318], "mul_": 409, "multipli": [411, 1320], "multiply_": 412, "mv": [413, 1321], "mvlgamma": [414, 1322], "mvlgamma_": 415, "nan_to_num": [416, 1323], "nan_to_num_": 417, "nanmean": [418, 1324], "nanmedian": [419, 1325], "nanquantil": [420, 1326], "nansum": [421, 1327], "narrow": [422, 1328], "narrow_copi": [423, 1329], "nbyte": 424, "ndim": 425, "ndimens": 426, "ne": [427, 1330], "ne_": 428, "neg": [429, 431, 1331, 1332], "neg_": 430, "negative_": 432, "nelement": 433, "new_empti": 434, "new_ful": 435, "new_on": 436, "new_tensor": 437, "new_zero": 438, "nextaft": [439, 1333], "nextafter_": 440, "normal_": 443, "not_equ": [444, 1658], "not_equal_": 445, "numel": [446, 1659], "numpi": [447, 1912, 1946], "orgqr": [448, 1698], "ormqr": [449, 1699], "outer": [450, 1700], "permut": [451, 1702, 1884], "pin_memori": 452, "pinvers": [453, 1703], "polygamma": [454, 1706], "polygamma_": 455, "posit": [456, 1707], "pow": [457, 1708], "pow_": 458, "prod": [459, 1709], "put_": 460, "q_per_channel_axi": 461, "q_per_channel_scal": 462, "q_per_channel_zero_point": 463, "q_scale": 464, "q_zero_point": 465, "qr": [466, 1254, 1711], "qscheme": 467, "quantil": [468, 1712], "rad2deg": [469, 1719], "random_": 470, "ravel": [471, 1728], "reciproc": [473, 1730], "reciprocal_": 474, "record_stream": 475, "register_hook": [476, 902], "register_post_accumulate_grad_hook": 477, "remaind": [478, 1731], "remainder_": 479, "renorm": [480, 1732], "renorm_": 481, "repeat": 482, "repeat_interleav": [483, 1733], "requires_grad": [484, 1891], "requires_grad_": 485, "reshap": [486, 1734], "reshape_a": 487, "resize_": 488, "resize_as_": 489, "resolve_conj": [490, 1735], "resolve_neg": [491, 1736], "retain_grad": 492, "retains_grad": 493, "roll": [494, 1738], "rot90": [495, 1739], "round": [496, 1740], "round_": 497, "row_indic": 498, "rsqrt": [499, 1742], "rsqrt_": 500, "scatter": [501, 985, 1744], "scatter_": 502, "scatter_add": [503, 1745], "scatter_add_": 504, "scatter_reduc": [505, 1746], "scatter_reduce_": 506, "select": [507, 1749, 1878], "select_scatt": [508, 1750], "set_": 509, "sgn": [510, 1763], "sgn_": 511, "share_memory_": 513, "short": 514, "sigmoid": [515, 748, 1459, 1580, 1764], "sigmoid_": 516, "sign": [517, 1765], "sign_": 518, "signbit": [519, 1777], "sin": [520, 1778], "sin_": 521, "sinc": [522, 1779], "sinc_": 523, "sinh": [524, 1780], "sinh_": 525, "slice_scatt": [527, 1781], "slogdet": [528, 1255, 1782], "smm": [529, 1783], "softmax": [530, 1462, 1584, 1784, 1792], "sort": [531, 1785], "sparse_dim": 532, "sparse_mask": 533, "sparse_resize_": 534, "sparse_resize_and_clear_": 535, "split": [536, 1801], "sqrt": [537, 1802], "sqrt_": 538, "squar": [539, 1803], "square_": 540, "squeez": [541, 1804], "squeeze_": 542, "sspaddmm": [543, 1805], "std": [544, 1807], "stft": [545, 1809], "storag": [546, 1929], "storage_offset": 547, "storage_typ": 548, "stride": 549, "sub": [550, 1810], "sub_": 551, "subtract": [552, 1811], "subtract_": 553, "sum": [554, 1794, 1812, 1887], "sum_to_s": 555, "svd": [556, 1259, 1813], "swapax": [557, 1815], "swapdim": [558, 1816], "t": [559, 1822, 1871, 1898, 1946], "t_": 560, "take": [561, 1823, 1914], "take_along_dim": [562, 1824], "tan": [563, 1825], "tan_": 564, "tanh": [565, 1469, 1589, 1826], "tanh_": 566, "tensor_split": [567, 1828], "tile": [568, 1830], "to_dens": 570, "to_mkldnn": 571, "to_spars": 572, "to_sparse_bsc": 573, "to_sparse_bsr": 574, "to_sparse_coo": 575, "to_sparse_csc": 576, "to_sparse_csr": 577, "tolist": 578, "topk": [579, 1831], "transpos": [581, 1833], "transpose_": 582, "triangular_solv": [583, 1836], "tril": [584, 1837], "tril_": 585, "triu": [586, 1839], "triu_": 587, "true_divid": [588, 1841], "true_divide_": 589, "trunc": [590, 1842], "trunc_": 591, "type_a": 593, "unbind": [594, 1843, 1886], "unflatten": [595, 1479, 1844], "unfold": [596, 1480, 1596], "uniform_": 597, "uniqu": [598, 1845], "unique_consecut": [599, 1846], "unsqueez": [600, 1847], "unsqueeze_": 601, "untyped_storag": 602, "var": [604, 1854], "vdot": [605, 1856], "view": [606, 1878, 1907, 1931, 1954], "view_a": 607, "vsplit": [608, 1860], "where": [609, 1862, 1866], "xlogi": [610, 1863], "xlogy_": 611, "zero_": 612, "_assert": 613, "_foreach_ab": 614, "_foreach_abs_": 615, "_foreach_aco": 616, "_foreach_acos_": 617, "_foreach_asin": 618, "_foreach_asin_": 619, "_foreach_atan": 620, "_foreach_atan_": 621, "_foreach_ceil": 622, "_foreach_ceil_": 623, "_foreach_co": 624, "_foreach_cos_": 625, "_foreach_cosh": 626, "_foreach_cosh_": 627, "_foreach_erf": 628, "_foreach_erf_": 629, "_foreach_erfc": 630, "_foreach_erfc_": 631, "_foreach_exp": 632, "_foreach_exp_": 633, "_foreach_expm1": 634, "_foreach_expm1_": 635, "_foreach_floor": 636, "_foreach_floor_": 637, "_foreach_frac": 638, "_foreach_frac_": 639, "_foreach_lgamma": 640, "_foreach_lgamma_": 641, "_foreach_log": 642, "_foreach_log10": 643, "_foreach_log10_": 644, "_foreach_log1p": 645, "_foreach_log1p_": 646, "_foreach_log2": 647, "_foreach_log2_": 648, "_foreach_log_": 649, "_foreach_neg": 650, "_foreach_neg_": 651, "_foreach_reciproc": 652, "_foreach_reciprocal_": 653, "_foreach_round": 654, "_foreach_round_": 655, "_foreach_sigmoid": 656, "_foreach_sigmoid_": 657, "_foreach_sin": 658, "_foreach_sin_": 659, "_foreach_sinh": 660, "_foreach_sinh_": 661, "_foreach_sqrt": 662, "_foreach_sqrt_": 663, "_foreach_tan": 664, "_foreach_tan_": 665, "_foreach_trunc": 666, "_foreach_trunc_": 667, "_foreach_zero_": 668, "_log": [669, 1877], "set_log": 669, "bnrelu2d": [689, 712], "bnrelu3d": [690, 713], "convbn1d": [691, 701], "convbn2d": [692, 702], "convbn3d": [693, 703], "convbnrelu1d": [694, 704], "convbnrelu2d": [695, 705], "convbnrelu3d": [696, 706], "convrelu1d": [697, 714], "convrelu2d": [698, 707, 715], "convrelu3d": [699, 708, 716], "linearrelu": [700, 709, 717, 718], "freeze_bn_stat": 710, "update_bn_stat": 711, "conv2d": [719, 728, 762, 1358, 1504], "conv3d": [720, 729, 763, 1359, 1505], "lstm": [723, 751, 1399, 1906], "multiheadattent": [724, 1435], "batchnorm2d": [725, 1348], "batchnorm3d": [726, 1349], "conv1d": [727, 761, 1357, 1503], "convtranspose1d": [730, 1360], "convtranspose2d": [731, 1361], "convtranspose3d": [732, 1362], "elu": [733, 764, 1371, 1517], "embed": [734, 1372, 1519], "embeddingbag": [735, 1373], "fxfloatfunct": 736, "floatfunct": 737, "groupnorm": [738, 1384], "hardswish": [739, 766, 1387, 1533], "instancenorm1d": [740, 1392], "instancenorm2d": [741, 1393], "instancenorm3d": [742, 1394], "layernorm": [743, 1401], "leakyrelu": [744, 1415], "qfunction": 746, "relu6": [747, 1449, 1574], "gru": [749, 1381], "grucel": [750, 1382], "lstmcell": [752, 1400], "rnncell": [754, 1446], "adaptive_avg_pool2d": [755, 1488], "adaptive_avg_pool3d": [756, 1489], "avg_pool2d": [757, 1496], "avg_pool3d": [758, 1497], "celu": [759, 1351, 1502], "hardsigmoid": [765, 1386, 1532], "hardtanh": [767, 1388, 1534], "interpol": [768, 1539], "leaky_relu": [769, 1543], "max_pool1d": [771, 1552], "max_pool2d": [772, 1553], "threshold": [773, 1471, 1591], "upsampl": [774, 1481, 1597], "upsample_bilinear": [775, 1598], "upsample_nearest": [776, 1599], "dequantstub": 777, "quantstub": 778, "quantwrapp": 779, "add_quant_dequ": 780, "backendconfig": 781, "backendpatternconfig": 782, "dtypeconfig": 783, "dtypewithconstraint": 784, "observationtyp": 785, "convert": [786, 1945], "default_eval_fn": 787, "fakequant": [788, 1918], "fakequantizebas": 789, "fixedqparamsfakequant": 790, "fusedmovingavgobsfakequant": 791, "default_fake_qu": 792, "default_fused_act_fake_qu": 793, "default_fused_per_channel_wt_fake_qu": 794, "default_fused_wt_fake_qu": 795, "default_histogram_fake_qu": 796, "default_per_channel_weight_fake_qu": 797, "default_weight_fake_qu": 798, "disable_fake_qu": 799, "disable_observ": 800, "enable_fake_qu": 801, "enable_observ": 802, "fuse_modul": 803, "convertcustomconfig": 804, "fusecustomconfig": 805, "preparecustomconfig": 806, "standalonemoduleconfigentri": 807, "histogramobserv": 808, "minmaxobserv": 809, "movingaverageminmaxobserv": 810, "movingaverageperchannelminmaxobserv": 811, "noopobserv": 812, "observerbas": 813, "perchannelminmaxobserv": 814, "placeholderobserv": 815, "recordingobserv": 816, "default_debug_observ": 817, "default_dynamic_quant_observ": 818, "default_float_qparams_observ": 819, "default_histogram_observ": 820, "default_observ": 821, "default_per_channel_weight_observ": 822, "default_placeholder_observ": 823, "default_weight_observ": 824, "get_observer_state_dict": 825, "load_observer_state_dict": 826, "prepar": [827, 1918, 1921], "prepare_qat": 828, "propagate_qconfig": 829, "qconfig": [830, 1918, 1921], "default_activation_only_qconfig": 831, "default_debug_qconfig": 832, "default_dynamic_qconfig": 833, "default_per_channel_qconfig": 834, "default_qat_qconfig": 835, "default_qat_qconfig_v2": 836, "default_qconfig": 837, "default_weight_only_qconfig": 838, "float16_dynamic_qconfig": 839, "float16_static_qconfig": 840, "float_qparams_weight_only_qconfig": 841, "per_channel_dynamic_qconfig": 842, "qconfigmap": 843, "get_default_qat_qconfig_map": 844, "get_default_qconfig_map": 845, "quantiz": [846, 1887, 1902, 1912, 1918, 1919, 1920, 1921], "quantize_dynam": 847, "convert_fx": 848, "fuse_fx": 849, "prepare_fx": 850, "prepare_qat_fx": 851, "quantize_qat": 852, "swap_modul": 853, "arang": 854, "are_deterministic_algorithms_en": 862, "as_tensor": 868, "asarrai": 869, "atleast_1d": 875, "atleast_2d": 876, "atleast_3d": 877, "dual_level": 883, "forward_ad": [884, 885], "make_du": 884, "unpack_du": 885, "functionctx": [886, 887, 888, 889], "mark_dirti": 886, "mark_non_differenti": 887, "save_for_backward": 888, "set_materialize_grad": 889, "hvp": 891, "vhp": 894, "gradcheck": [897, 898, 1899], "gradgradcheck": [898, 1899], "name": [900, 1870, 1884, 1885], "next_funct": 901, "register_prehook": 903, "load_nvprof": 904, "export_chrome_trac": 905, "key_averag": 906, "self_cpu_time_tot": 907, "total_averag": 908, "bartlett_window": 910, "blackman_window": 919, "block_diag": 920, "broadcast_shap": 922, "broadcast_tensor": 923, "bucket": 925, "can_cast": 926, "cartesian_prod": 927, "cat": 928, "cdist": 929, "chain_matmul": 931, "column_stack": 939, "combin": [940, 1896], "compiled_with_cxx11_abi": 942, "allow_in_graph": [943, 1947], "list_backend": 947, "reset": 948, "concat": 950, "concaten": 951, "streamcontext": [962, 975], "current_stream": [963, 988], "device_count": [964, 991], "is_avail": [965, 1008], "cudagraph": [969, 1941], "cudapluggablealloc": 970, "externalstream": 972, "outofmemoryerror": 973, "caching_allocator_alloc": 976, "caching_allocator_delet": 977, "can_device_access_p": 978, "change_current_alloc": 979, "clock_rat": 980, "comm": [981, 982, 983, 984, 985], "broadcast": [981, 1892], "broadcast_coalesc": 982, "reduce_add": 984, "current_blas_handl": 986, "current_devic": 987, "default_stream": 989, "device_of": 992, "empty_cach": [993, 1306], "get_allocator_backend": 994, "get_arch_list": 995, "get_device_cap": 996, "get_device_nam": 997, "get_device_properti": 998, "get_gencode_flag": 999, "get_rng_stat": [1000, 1147, 1308], "get_rng_state_al": 1001, "get_sync_debug_mod": 1002, "graph_pool_handl": 1004, "init": [1005, 1889], "initial_se": [1006, 1171], "ipc_collect": 1007, "is_current_stream_captur": 1009, "is_initi": 1010, "_create_jit_fn": 1011, "_create_multi_output_jit_fn": 1012, "list_gpu_process": 1013, "make_graphed_cal": 1014, "manual_se": [1015, 1288, 1309], "manual_seed_al": 1016, "max_memory_alloc": 1017, "max_memory_cach": 1018, "max_memory_reserv": 1019, "mem_get_info": 1020, "memory_alloc": 1021, "memory_cach": 1022, "memory_reserv": 1023, "memory_snapshot": 1024, "memory_stat": 1025, "memory_summari": 1026, "memory_usag": 1027, "mark": 1028, "range_pop": 1029, "range_push": 1030, "power_draw": 1031, "reset_max_memory_alloc": 1032, "reset_max_memory_cach": 1033, "reset_peak_memory_stat": 1034, "seed": [1035, 1313, 1748], "seed_al": 1036, "set_devic": 1037, "set_per_process_memory_fract": [1038, 1314], "set_rng_stat": [1039, 1315, 1761], "set_rng_state_al": 1040, "set_stream": 1041, "set_sync_debug_mod": 1042, "temperatur": 1045, "cumulative_trapezoid": 1051, "dstack": 1067, "einsum": 1068, "empti": 1069, "empty_lik": 1070, "empty_strid": 1071, "enable_grad": 1072, "exp2": 1079, "ey": 1081, "fake_quantize_per_channel_affin": 1082, "fake_quantize_per_tensor_affin": 1083, "fft2": 1085, "fftfreq": 1086, "fftn": 1087, "fftshift": 1088, "hfft": 1089, "hfft2": 1090, "hfftn": 1091, "ifft": 1092, "ifft2": 1093, "ifftn": 1094, "ifftshift": 1095, "ihfft": 1096, "ihfft2": 1097, "ihfftn": 1098, "irfft": 1099, "irfft2": 1100, "irfftn": 1101, "rfft": 1102, "rfft2": 1103, "rfftfreq": 1104, "rfftn": 1105, "from_dlpack": 1119, "from_numpi": 1120, "frombuff": 1121, "full": [1122, 1907], "full_lik": 1123, "functional_cal": [1124, 1651], "grad_and_valu": 1127, "replace_all_batch_norm_modules_": 1133, "stack_module_st": 1134, "get_default_dtyp": 1142, "get_deterministic_debug_mod": 1143, "get_float32_matmul_precis": 1144, "get_num_interop_thread": 1145, "get_num_thread": 1146, "hamming_window": 1152, "hann_window": 1153, "histogramdd": 1157, "hspmm": 1159, "hstack": 1160, "inference_mod": 1170, "is_deterministic_algorithms_warn_only_en": 1176, "is_grad_en": 1178, "is_inference_mode_en": 1179, "is_nonzero": 1180, "is_storag": 1181, "is_tensor": 1182, "is_warn_always_en": 1183, "isin": 1186, "attribut": [1193, 1868, 1870, 1871, 1873, 1930], "scriptfunct": 1194, "scriptmodul": [1195, 1907], "annot": [1196, 1871], "enable_onednn_fus": 1197, "fork": 1198, "freez": 1199, "ignor": 1200, "isinst": 1202, "onednn_fusion_en": 1204, "optimize_for_infer": 1205, "save": [1206, 1743, 1866, 1891, 1901, 1907, 1918], "script_if_trac": 1208, "set_fusion_strategi": 1209, "strict_fus": 1210, "trace_modul": 1212, "unus": 1213, "wait": 1214, "kaiser_window": 1215, "kron": 1216, "cholesky_ex": 1226, "eig": 1231, "eigh": 1232, "eigval": 1233, "eigvalsh": 1234, "householder_product": 1235, "inv": 1236, "inv_ex": 1237, "ldl_factor": 1238, "ldl_factor_ex": 1239, "ldl_solv": 1240, "lstsq": 1241, "lu_factor": 1243, "lu_factor_ex": 1244, "matrix_norm": 1248, "matrix_rank": 1250, "multi_dot": 1251, "pinv": 1253, "solv": 1256, "solve_ex": 1257, "solve_triangular": 1258, "svdval": 1260, "tensorinv": 1261, "tensorsolv": 1262, "vander": [1263, 1853], "vecdot": 1264, "vector_norm": 1265, "linspac": 1266, "lobpcg": 1268, "logspac": 1282, "lu_unpack": 1287, "meshgrid": 1297, "current_allocated_memori": 1304, "driver_allocated_memori": 1305, "stop": 1312, "adaptiveavgpool1d": 1334, "adaptiveavgpool2d": 1335, "adaptiveavgpool3d": 1336, "adaptivelogsoftmaxwithloss": 1337, "adaptivemaxpool1d": 1338, "adaptivemaxpool2d": 1339, "adaptivemaxpool3d": 1340, "alphadropout": 1341, "avgpool1d": 1342, "avgpool2d": 1343, "avgpool3d": 1344, "bceloss": 1345, "bcewithlogitsloss": 1346, "batchnorm1d": 1347, "bilinear": [1350, 1499], "ctcloss": 1352, "channelshuffl": 1353, "constantpad1d": 1354, "constantpad2d": 1355, "constantpad3d": 1356, "cosineembeddingloss": 1363, "cosinesimilar": 1364, "crossentropyloss": 1365, "dataparallel": [1366, 1887, 1888, 1890, 1894], "dropout": [1367, 1513, 1887, 1888], "dropout1d": [1368, 1514], "dropout2d": [1369, 1515], "dropout3d": [1370, 1516], "featurealphadropout": 1374, "fold": [1376, 1522], "fractionalmaxpool2d": 1377, "fractionalmaxpool3d": 1378, "gelu": [1379, 1526], "glu": [1380, 1527], "gaussiannllloss": 1383, "hingeembeddingloss": 1389, "huberloss": 1390, "ident": [1391, 1625, 1633, 1871, 1898], "kldivloss": 1395, "l1loss": 1396, "lppool1d": 1397, "lppool2d": 1398, "lazybatchnorm1d": 1402, "lazybatchnorm2d": 1403, "lazybatchnorm3d": 1404, "lazyconv1d": 1405, "lazyconv2d": 1406, "lazyconv3d": 1407, "lazyconvtranspose1d": 1408, "lazyconvtranspose2d": 1409, "lazyconvtranspose3d": 1410, "lazyinstancenorm1d": 1411, "lazyinstancenorm2d": 1412, "lazyinstancenorm3d": 1413, "lazylinear": 1414, "localresponsenorm": 1417, "logsigmoid": [1418, 1548], "logsoftmax": 1419, "mseloss": 1420, "marginrankingloss": 1421, "maxpool1d": 1422, "maxpool2d": 1423, "maxpool3d": 1424, "maxunpool1d": 1425, "maxunpool2d": 1426, "maxunpool3d": 1427, "mish": [1428, 1558], "moduledict": [1430, 1871], "modulelist": [1431, 1870, 1871], "multilabelmarginloss": 1432, "multilabelsoftmarginloss": 1433, "multimarginloss": 1434, "nllloss": 1436, "prelu": [1437, 1572], "pairwisedist": 1438, "parameterdict": 1439, "parameterlist": 1440, "pixelshuffl": 1441, "pixelunshuffl": 1442, "poissonnllloss": 1443, "rnn": [1444, 1643, 1644, 1645, 1646, 1647, 1648, 1906], "rnnbase": 1445, "rrelu": [1447, 1576], "relu": [1448, 1573], "reflectionpad1d": 1450, "reflectionpad2d": 1451, "reflectionpad3d": 1452, "replicationpad1d": 1453, "replicationpad2d": 1454, "replicationpad3d": 1455, "selu": [1456, 1579], "sequenti": 1457, "silu": [1458, 1581], "smoothl1loss": 1460, "softmarginloss": 1461, "softmax2d": 1463, "softmin": [1464, 1585], "softplu": [1465, 1586], "softshrink": [1466, 1587], "softsign": [1467, 1588], "syncbatchnorm": 1468, "tanhshrink": [1470, 1590], "transformerdecod": 1473, "transformerdecoderlay": 1474, "transformerencod": 1475, "transformerencoderlay": 1476, "tripletmarginloss": 1477, "tripletmarginwithdistanceloss": 1478, "upsamplingbilinear2d": 1482, "upsamplingnearest2d": 1483, "zeropad1d": 1484, "zeropad2d": 1485, "zeropad3d": 1486, "adaptive_avg_pool1d": 1487, "adaptive_max_pool1d": 1490, "adaptive_max_pool2d": 1491, "adaptive_max_pool3d": 1492, "affine_grid": 1493, "alpha_dropout": 1494, "avg_pool1d": 1495, "batch_norm": 1498, "conv_transpose1d": 1506, "conv_transpose2d": 1507, "conv_transpose3d": 1508, "cosine_embedding_loss": 1509, "cosine_similar": 1510, "cross_entropi": 1511, "ctc_loss": 1512, "elu_": 1518, "embedding_bag": 1520, "feature_alpha_dropout": 1521, "fractional_max_pool2d": 1523, "fractional_max_pool3d": 1524, "gaussian_nll_loss": 1525, "grid_sampl": 1528, "group_norm": 1529, "gumbel_softmax": 1530, "hardtanh_": 1535, "hinge_embedding_loss": 1536, "huber_loss": 1537, "instance_norm": 1538, "kl_div": 1540, "l1_loss": 1541, "layer_norm": 1542, "leaky_relu_": 1544, "local_response_norm": 1546, "log_softmax": [1547, 1789], "lp_pool1d": 1549, "lp_pool2d": 1550, "margin_ranking_loss": 1551, "max_pool3d": 1554, "max_unpool1d": 1555, "max_unpool2d": 1556, "max_unpool3d": 1557, "mse_loss": 1559, "multi_margin_loss": 1560, "multilabel_margin_loss": 1561, "multilabel_soft_margin_loss": 1562, "nll_loss": 1563, "one_hot": 1565, "pad": [1566, 1887], "pairwise_dist": 1567, "pdist": 1568, "pixel_shuffl": 1569, "pixel_unshuffl": 1570, "poisson_nll_loss": 1571, "relu_": 1575, "rrelu_": 1577, "scaled_dot_product_attent": 1578, "smooth_l1_loss": 1582, "soft_margin_loss": 1583, "threshold_": 1592, "data_parallel": [1593, 1888], "triplet_margin_loss": 1594, "triplet_margin_with_distance_loss": 1595, "lazymodulemixin": 1600, "register_module_backward_hook": 1601, "register_module_buffer_registration_hook": 1602, "register_module_forward_hook": 1603, "register_module_forward_pre_hook": 1604, "register_module_full_backward_hook": 1605, "register_module_full_backward_pre_hook": 1606, "register_module_module_registration_hook": 1607, "register_module_parameter_registration_hook": 1608, "distributeddataparallel": [1609, 1890, 1894, 1895], "uninitializedbuff": 1611, "uninitializedparamet": 1612, "clip_grad_norm_": 1613, "clip_grad_value_": 1614, "parameters_to_vector": 1615, "parametr": [1616, 1617, 1619, 1620, 1621, 1622, 1902], "orthogon": 1616, "spectral_norm": [1617, 1650], "parametrizationlist": 1618, "cach": [1619, 1866, 1894, 1900, 1949], "is_parametr": 1620, "register_parametr": 1621, "remove_parametr": 1622, "basepruningmethod": 1623, "customfrommask": 1624, "l1unstructur": 1626, "lnstructur": 1627, "pruningcontain": 1628, "randomstructur": 1629, "randomunstructur": 1630, "prune": [1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1902], "custom_from_mask": 1631, "global_unstructur": 1632, "is_prun": 1634, "l1_unstructur": 1635, "ln_structur": 1636, "random_structur": 1637, "random_unstructur": 1638, "remove_spectral_norm": 1640, "remove_weight_norm": 1641, "packedsequ": 1642, "pack_padded_sequ": 1643, "pack_sequ": 1644, "pad_packed_sequ": 1645, "pad_sequ": 1646, "unpack_sequ": 1647, "unpad_sequ": 1648, "skip_init": 1649, "stateless": 1651, "vector_to_paramet": 1652, "weight_norm": 1653, "no_grad": 1654, "ones": [1660, 1946], "ones_lik": 1661, "jitscalartyp": 1662, "graphinfo": 1663, "verificationopt": 1664, "asgd": 1665, "adadelta": 1666, "adagrad": 1667, "adam": 1668, "adamw": 1669, "adamax": 1670, "lbfg": 1671, "nadam": 1672, "add_param_group": 1673, "load_state_dict": 1674, "state_dict": [1675, 1952], "step": [1676, 1914, 1948], "zero_grad": 1677, "radam": 1678, "rmsprop": 1679, "rprop": 1680, "sgd": 1681, "sparseadam": 1682, "chainedschedul": 1683, "constantlr": 1684, "cosineannealinglr": 1685, "cosineannealingwarmrestart": 1686, "cycliclr": 1687, "exponentiallr": 1688, "lambdalr": 1689, "linearlr": 1690, "multisteplr": 1691, "multiplicativelr": 1692, "onecyclelr": 1693, "polynomiallr": 1694, "reducelronplateau": 1695, "sequentiallr": 1696, "steplr": 1697, "pca_lowrank": 1701, "polar": 1705, "promote_typ": 1710, "quantize_per_channel": 1713, "quantize_per_tensor": 1714, "quantized_batch_norm": 1715, "quantized_max_pool1d": 1716, "quantized_max_pool2d": 1717, "sobolengin": 1718, "rand": 1720, "rand_lik": 1721, "randint": 1722, "randint_lik": 1723, "randn": 1724, "randn_lik": 1725, "randperm": 1726, "rang": [1727, 1870], "result_typ": 1737, "row_stack": 1741, "searchsort": 1747, "set_default_devic": 1751, "set_default_dtyp": 1752, "set_default_tensor_typ": 1753, "set_deterministic_debug_mod": 1754, "set_float32_matmul_precis": 1755, "set_flush_denorm": 1756, "set_grad_en": 1757, "set_num_interop_thread": 1758, "set_num_thread": 1759, "set_printopt": 1760, "set_warn_alwai": 1762, "signal": [1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1926], "bartlett": 1766, "blackman": 1767, "cosin": 1768, "gaussian": 1770, "general_cosin": 1771, "general_ham": 1772, "ham": 1773, "hann": 1774, "kaiser": 1775, "nuttal": 1776, "as_sparse_gradcheck": 1787, "check_sparse_tensor_invari": 1788, "sampled_addmm": 1791, "spdiag": 1793, "sparse_bsc_tensor": 1795, "sparse_bsr_tensor": 1796, "sparse_compressed_tensor": 1797, "sparse_coo_tensor": 1798, "sparse_csc_tensor": 1799, "sparse_csr_tensor": 1800, "std_mean": 1808, "svd_lowrank": 1814, "sym_float": 1817, "sym_int": 1818, "sym_max": 1819, "sym_min": 1820, "sym_not": 1821, "tensordot": 1829, "trapezoid": 1834, "trapz": 1835, "tril_indic": 1838, "triu_indic": 1840, "use_deterministic_algorithm": 1848, "generate_methods_for_privateuse1_backend": 1849, "get_cpp_backtrac": 1850, "rename_privateuse1_backend": 1851, "set_modul": 1852, "var_mean": 1855, "view_as_complex": 1857, "view_as_r": 1858, "vstack": 1861, "zero": 1864, "zeros_lik": 1865, "hub": 1866, "publish": 1866, "entrypoint": 1866, "run": [1866, 1953], "my": [1866, 1891, 1898, 1915, 1946, 1953], "download": 1866, "logic": [1866, 1870], "known": [1866, 1868], "bind": 1867, "tabl": [1867, 1907], "built": [1868, 1869, 1871, 1912], "comparison": [1868, 1870, 1871, 1935, 1941], "inspect": [1868, 1910, 1943], "warn": 1868, "appendix": [1868, 1871], "recurs": 1868, "constant": [1868, 1870], "fusion": 1868, "math": [1869, 1935], "construct": [1870, 1871, 1873, 1886, 1914, 1927], "refin": [1870, 1871], "enum": [1870, 1871], "tupl": [1870, 1871], "liter": [1870, 1871], "list": [1870, 1871, 1912], "dict": 1870, "arithmet": [1870, 1871], "subscript": [1870, 1871], "slice": [1870, 1871, 1905, 1935], "ternari": [1870, 1871], "cast": 1870, "statement": [1870, 1871], "assign": [1870, 1871], "If": 1870, "while": [1870, 1871], "loop": 1870, "For": 1870, "continu": [1870, 1871], "return": [1870, 1871, 1898, 1925], "resolut": [1870, 1871], "lookup": 1870, "defin": [1870, 1896, 1897], "terminologi": 1871, "primit": 1871, "instanc": 1871, "when": [1871, 1891, 1896, 1912, 1918, 1927, 1946], "signatur": 1871, "expr": 1871, "convers": [1871, 1886], "atom": 1871, "identifi": [1871, 1946, 1956], "parenthes": 1871, "form": 1871, "displai": 1871, "primari": 1871, "power": 1871, "unari": [1871, 1878, 1927], "bitwis": 1871, "binari": [1871, 1878], "shift": 1871, "boolean": 1871, "condit": 1871, "augment": 1871, "rais": 1871, "del": 1871, "compound": 1871, "els": 1871, "getattr": 1871, "hasattr": 1871, "zip": [1871, 1915], "enumer": 1871, "rule": [1871, 1885, 1897, 1910], "remot": [1871, 1925], "procedur": 1871, "execut": [1871, 1891, 1894, 1915, 1916, 1946], "program": 1871, "coverag": [1872, 1884, 1896], "properti": [1873, 1876], "correctli": 1873, "bound": 1873, "schema": 1873, "between": [1873, 1915, 1946], "matrix": [1876, 1918], "decomposit": 1876, "solver": 1876, "misc": 1876, "experiment": 1876, "motiv": [1878, 1944, 1945], "reduct": [1878, 1894, 1905, 1935], "mobile_optim": 1879, "model_zoo": 1880, "strategi": [1883, 1914], "descriptor": 1883, "file_descriptor": 1883, "file_system": 1883, "subprocess": 1883, "keep": [1884, 1915], "dimens": [1884, 1885], "unifi": 1884, "contract": 1884, "awai": 1884, "factori": 1884, "variant": 1884, "semant": [1885, 1892, 1894, 1900, 1907], "infer": [1885, 1891, 1893, 1907], "explicit": 1885, "align": 1885, "current": 1885, "subsystem": 1885, "constructor": 1886, "contain": 1887, "convolut": [1887, 1888, 1905, 1906], "layer": 1887, "pool": [1887, 1888], "activ": [1887, 1888, 1958], "weight": [1887, 1914], "nonlinear": 1887, "recurr": [1887, 1898], "distanc": [1887, 1888], "loss": [1887, 1888, 1890], "vision": [1887, 1888], "shuffl": 1887, "lazi": 1887, "attent": 1888, "typic": 1890, "unscal": 1890, "accumul": 1890, "penalti": 1890, "one": 1890, "per": [1890, 1914], "need": [1890, 1946], "particular": [1890, 1891], "dtype": [1890, 1907, 1921, 1930], "encod": 1891, "histori": [1891, 1958], "set": [1891, 1912], "No": 1891, "evalu": [1891, 1899, 1949], "multithread": 1891, "concurr": 1891, "determin": [1891, 1906], "retain": 1891, "thread": [1891, 1893], "safeti": 1891, "wirting": 1891, "calculu": 1891, "pictur": 1891, "conjug": 1891, "own": 1891, "formula": 1891, "domain": 1891, "regist": [1891, 1942], "whether": [1891, 1915], "fire": 1891, "differ": [1891, 1912, 1946], "modifi": 1891, "compat": 1892, "runtim": [1893, 1898, 1956], "tune": 1893, "tensorfloat": [1894, 1900, 1905], "32": [1894, 1900, 1905, 1908], "tf32": [1894, 1900, 1905], "amper": [1894, 1905], "reduc": [1894, 1905], "fp16": [1894, 1905], "gemm": [1894, 1905], "bf16": [1894, 1905], "bc": 1894, "alloc": [1894, 1898, 1958], "cubla": 1894, "workspac": 1894, "cufft": 1894, "plan": [1894, 1900], "just": 1894, "time": [1894, 1950, 1954], "practic": [1894, 1904, 1918, 1940], "agnost": 1894, "buffer": [1894, 1904], "instead": 1894, "whole": [1894, 1946], "captur": 1894, "partial": 1894, "9": 1894, "6": 1894, "across": [1894, 1907], "intern": [1895, 1912, 1915, 1943, 1944], "processgroup": 1895, "ddpoptim": 1895, "separ": 1896, "setup_context": 1896, "like": [1896, 1915], "subclass": [1896, 1945], "wrapper": 1896, "__torch_function__": 1896, "overrid": [1896, 1957], "nativ": [1896, 1918, 1920], "anoth": 1897, "specifi": 1897, "gotcha": 1897, "staticmethod": 1897, "isn": 1898, "freed": 1898, "properli": 1898, "loader": 1898, "doesn": 1898, "notat": 1899, "background": [1899, 1924, 1925, 1941], "inform": [1899, 1923, 1955], "analyt": 1899, "u": 1899, "reus": [1900, 1904], "hipfft": 1900, "rocfft": 1900, "enabl": 1900, "larg": 1901, "fleet": 1901, "wide": 1901, "attach": 1901, "consider": 1901, "block": 1902, "neural": 1902, "tip": [1904, 1919], "fight": 1904, "deadlock": 1904, "through": 1904, "queue": 1904, "e": 1904, "g": 1904, "hogwild": 1904, "oversubscript": 1904, "accuraci": [1905, 1918, 1919, 1956], "extrem": 1905, "finit": 1905, "instinct": 1905, "mi200": 1905, "reproduc": 1906, "nondeterminist": 1906, "algorithm": [1906, 1914, 1924], "content": [1907, 1915], "preserv": 1907, "them": [1907, 1915], "version": 1907, "integ": 1907, "divis": 1907, "alwai": 1907, "includ": [1908, 1915], "compon": 1908, "speed": [1908, 1946], "One": [1908, 1955], "instal": 1908, "cffi": 1908, "cpp": 1908, "found": 1908, "win": 1908, "channel": 1908, "without": 1908, "claus": 1908, "protect": 1908, "broken": 1908, "pipe": [1908, 1916], "driver": 1908, "shut": 1908, "down": 1908, "ipc": 1908, "base": [1909, 1910, 1912, 1914, 1955], "gui": 1910, "diagnos": [1910, 1956], "sarif": 1910, "diagnost": 1910, "alexnet": 1912, "v": 1912, "index": [1912, 1935], "aten": [1912, 1951, 1955], "inlin": 1912, "discov": 1912, "unconvert": 1912, "onc": 1912, "adjust": 1914, "learn": 1914, "rate": 1914, "averag": 1914, "swa": 1914, "ema": 1914, "schedul": 1914, "care": 1914, "put": 1914, "togeth": 1914, "your": 1915, "do": [1915, 1943, 1946], "see": [1915, 1946], "insid": [1915, 1946], "treat": 1915, "archiv": 1915, "file_structur": 1915, "given": 1915, "wa": 1915, "resourc": [1915, 1945], "later": 1915, "distinguish": 1915, "explan": 1915, "format": 1915, "analyz": 1915, "extern": 1915, "mock": 1915, "refactor": 1915, "sharp": 1915, "global": 1915, "isol": 1915, "each": [1915, 1945], "mangl": 1915, "pipelin": 1916, "skip": 1916, "connect": 1916, "intel": 1917, "instrument": 1917, "technologi": 1917, "eager": 1918, "awar": 1918, "maintainc": 1918, "engin": 1918, "observ": [1918, 1921], "hardwar": 1918, "configur": [1918, 1920], "insensit": 1919, "int8": 1919, "sensit": 1919, "ao": [1921, 1936, 1937], "top": 1921, "quantize_fx": 1921, "qconfig_map": 1921, "backend_config": 1921, "custom_config": 1921, "pt2e": 1921, "0": [1921, 1952, 1953, 1956], "relat": [1921, 1945], "fake_quant": 1921, "intrins": 1921, "qat": 1921, "scheme": 1921, "rpc": 1923, "tensorpip": 1923, "rref": [1923, 1925], "remotemodul": 1923, "record": 1924, "dure": 1924, "smart": 1924, "end": 1924, "protocol": 1925, "lifetim": 1925, "reason": 1925, "scenario": 1925, "owner": 1925, "argument": 1925, "sparsiti": 1927, "semi": 1927, "acceler": 1927, "coo": 1927, "hybrid": 1927, "uncoalesc": 1927, "csr": 1927, "csc": 1927, "bsr": 1927, "bsc": 1927, "memory_format": 1930, "tensorboard": 1932, "creation": 1935, "sampl": 1935, "quasi": 1935, "pointwis": 1935, "spectral": 1935, "bla": 1935, "lapack": 1935, "foreach": 1935, "path": 1935, "n": [1936, 1937], "_numeric_suit": 1936, "_numeric_suite_fx": 1937, "howto": 1938, "vendor": 1938, "x86": 1940, "tree": 1941, "integr": 1941, "callabl": 1941, "previou": 1941, "after": 1942, "aotautograd": 1942, "speedi": 1942, "guard": [1943, 1944, 1949], "dynamo": 1943, "artifact": 1943, "abridg": 1944, "public": 1944, "overal": [1944, 1945], "architectur": [1944, 1945], "dimdynam": 1944, "unback": 1944, "fake": 1945, "bit": 1945, "detail": 1945, "individu": [1945, 1950], "characterist": 1945, "interact": 1945, "you": 1946, "still": 1946, "crash": 1946, "slow": 1946, "recompil": [1946, 1956], "am": 1946, "speedup": 1946, "caus": [1946, 1956], "didn": 1946, "incorrect": 1946, "result": 1946, "oom": 1946, "handl": 1946, "besid": 1946, "via": 1946, "under": 1946, "some": 1946, "did": 1946, "fine": [1946, 1947], "grain": [1946, 1947], "_dynamo": [1946, 1947], "disallow_in_graph": [1946, 1947], "_dynamo_skip": 1946, "pretrain": 1948, "next": 1948, "frame": 1949, "pep": 1949, "523": 1949, "instructiontransl": 1949, "torchinductor": [1950, 1953, 1956], "relev": 1950, "breakdown": 1950, "prim": 1951, "__call__": 1952, "dashboard": 1953, "measur": 1953, "pr": 1953, "affect": 1953, "befor": 1953, "merg": 1953, "understand": [1954, 1958], "around": 1954, "overhead": 1954, "x": 1955, "none": 1955, "partition": 1955, "matcher": 1955, "capabl": 1955, "troubleshoot": 1956, "titl": 1956, "minifi": 1956, "torch_compile_debug": 1956, "excess": 1956, "snapshot": 1958, "visual": 1958, "timelin": 1958, "info": 1959, "finfo": 1959, "iinfo": 1959}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.copysign": [[187, "torch-tensor-copysign"]], "torch.Tensor.bitwise_right_shift": [[155, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.cos": [[190, "torch-tensor-cos"]], "torch.Tensor.broadcast_to": [[161, "torch-tensor-broadcast-to"]], "torch.Tensor.contiguous": [[185, "torch-tensor-contiguous"]], "torch.Tensor.bitwise_right_shift_": [[156, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.cholesky_inverse": [[172, "torch-tensor-cholesky-inverse"]], "torch.Tensor.clip": [[177, "torch-tensor-clip"]], "torch.Tensor.ceil_": [[167, "torch-tensor-ceil"]], "torch.Tensor.cosh": [[192, "torch-tensor-cosh"]], "torch.Tensor.chunk": [[174, "torch-tensor-chunk"]], "torch.Tensor.bitwise_xor": [[157, "torch-tensor-bitwise-xor"]], "torch.Tensor.bitwise_not": [[151, "torch-tensor-bitwise-not"]], "torch.Tensor.cfloat": [[168, "torch-tensor-cfloat"]], "torch.Tensor.count_nonzero": [[194, "torch-tensor-count-nonzero"]], "torch.Tensor.bitwise_or": [[153, "torch-tensor-bitwise-or"]], "torch.Tensor.chalf": [[169, "torch-tensor-chalf"]], "torch.Tensor.cos_": [[191, "torch-tensor-cos"]], "torch.Tensor.conj_physical_": [[184, "torch-tensor-conj-physical"]], "torch.Tensor.bool": [[160, "torch-tensor-bool"]], "torch.Tensor.clone": [[179, "torch-tensor-clone"]], "torch.Tensor.clamp_": [[176, "torch-tensor-clamp"]], "torch.Tensor.bitwise_left_shift_": [[150, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.conj": [[182, "torch-tensor-conj"]], "torch.Tensor.copy_": [[186, "torch-tensor-copy"]], "torch.Tensor.byte": [[162, "torch-tensor-byte"]], "torch.Tensor.clip_": [[178, "torch-tensor-clip"]], "torch.Tensor.cov": [[195, "torch-tensor-cov"]], "torch.Tensor.bitwise_left_shift": [[149, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.conj_physical": [[183, "torch-tensor-conj-physical"]], "torch.Tensor.ccol_indices": [[164, "torch-tensor-ccol-indices"]], "torch.Tensor.copysign_": [[188, "torch-tensor-copysign"]], "torch.Tensor.cholesky": [[171, "torch-tensor-cholesky"]], "torch.Tensor.coalesce": [[180, "torch-tensor-coalesce"]], "torch.Tensor.corrcoef": [[189, "torch-tensor-corrcoef"]], "torch.Tensor.clamp": [[175, "torch-tensor-clamp"]], "torch.Tensor.char": [[170, "torch-tensor-char"]], "torch.Tensor.cosh_": [[193, "torch-tensor-cosh"]], "torch.Tensor.cdouble": [[165, "torch-tensor-cdouble"]], "torch.Tensor.bitwise_and": [[147, "torch-tensor-bitwise-and"]], "torch.Tensor.cholesky_solve": [[173, "torch-tensor-cholesky-solve"]], "torch.Tensor.bmm": [[159, "torch-tensor-bmm"]], "torch.Tensor.bitwise_xor_": [[158, "torch-tensor-bitwise-xor"]], "torch.Tensor.bitwise_or_": [[154, "torch-tensor-bitwise-or"]], "torch.Tensor.cauchy_": [[163, "torch-tensor-cauchy"]], "torch.Tensor.bitwise_and_": [[148, "torch-tensor-bitwise-and"]], "torch.Tensor.bitwise_not_": [[152, "torch-tensor-bitwise-not"]], "torch.Tensor.col_indices": [[181, "torch-tensor-col-indices"]], "torch.Tensor.ceil": [[166, "torch-tensor-ceil"]], "torch.Tensor.get_device": [[279, "torch-tensor-get-device"]], "torch.Tensor.floor_divide": [[262, "torch-tensor-floor-divide"]], "torch.Tensor.expm1": [[246, "torch-tensor-expm1"]], "torch.Tensor.fill_diagonal_": [[250, "torch-tensor-fill-diagonal"]], "torch.Tensor.histc": [[290, "torch-tensor-histc"]], "torch.Tensor.gcd_": [[273, "torch-tensor-gcd"]], "torch.Tensor.exponential_": [[248, "torch-tensor-exponential"]], "torch.Tensor.geometric_": [[276, "torch-tensor-geometric"]], "torch.Tensor.gt": [[285, "torch-tensor-gt"]], "torch.Tensor.fmax": [[264, "torch-tensor-fmax"]], "torch.Tensor.gcd": [[272, "torch-tensor-gcd"]], "torch.Tensor.greater_": [[282, "torch-tensor-greater"]], "torch.Tensor.hardshrink": [[288, "torch-tensor-hardshrink"]], "torch.Tensor.half": [[287, "torch-tensor-half"]], "torch.Tensor.fix": [[251, "torch-tensor-fix"]], "torch.Tensor.hypot": [[293, "torch-tensor-hypot"]], "torch.Tensor.floor_": [[261, "torch-tensor-floor"]], "torch.Tensor.fmod_": [[267, "torch-tensor-fmod"]], "torch.Tensor.ger": [[278, "torch-tensor-ger"]], "torch.Tensor.fmin": [[265, "torch-tensor-fmin"]], "torch.Tensor.greater_equal_": [[284, "torch-tensor-greater-equal"]], "torch.Tensor.floor_divide_": [[263, "torch-tensor-floor-divide"]], "torch.Tensor.greater_equal": [[283, "torch-tensor-greater-equal"]], "torch.Tensor.gt_": [[286, "torch-tensor-gt"]], "torch.Tensor.ge": [[274, "torch-tensor-ge"]], "torch.Tensor.histogram": [[291, "torch-tensor-histogram"]], "torch.Tensor.frac": [[268, "torch-tensor-frac"]], "torch.Tensor.flip": [[254, "torch-tensor-flip"]], "torch.Tensor.float_power": [[258, "torch-tensor-float-power"]], "torch.Tensor.float": [[257, "torch-tensor-float"]], "torch.Tensor.expm1_": [[247, "torch-tensor-expm1"]], "torch.Tensor.fill_": [[249, "torch-tensor-fill"]], "torch.Tensor.expand_as": [[245, "torch-tensor-expand-as"]], "torch.Tensor.fmod": [[266, "torch-tensor-fmod"]], "torch.Tensor.frac_": [[269, "torch-tensor-frac"]], "torch.Tensor.frexp": [[270, "torch-tensor-frexp"]], "torch.Tensor.greater": [[281, "torch-tensor-greater"]], "torch.Tensor.flipud": [[256, "torch-tensor-flipud"]], "torch.Tensor.hsplit": [[292, "torch-tensor-hsplit"]], "torch.Tensor.grad": [[280, "torch-tensor-grad"]], "torch.Tensor.ge_": [[275, "torch-tensor-ge"]], "torch.Tensor.fix_": [[252, "torch-tensor-fix"]], "torch.Tensor.float_power_": [[259, "torch-tensor-float-power"]], "torch.Tensor.flatten": [[253, "torch-tensor-flatten"]], "torch.Tensor.gather": [[271, "torch-tensor-gather"]], "torch.Tensor.fliplr": [[255, "torch-tensor-fliplr"]], "torch.Tensor.geqrf": [[277, "torch-tensor-geqrf"]], "torch.Tensor.floor": [[260, "torch-tensor-floor"]], "torch.Tensor.heaviside": [[289, "torch-tensor-heaviside"]], "torch.Tensor.arccosh_": [[113, "torch-tensor-arccosh"]], "torch.Tensor.amin": [[105, "torch-tensor-amin"]], "torch.Tensor.arccos_": [[111, "torch-tensor-arccos"]], "torch.Tensor.arcsin": [[114, "torch-tensor-arcsin"]], "torch.Tensor.bernoulli_": [[144, "torch-tensor-bernoulli"]], "torch.Tensor.allclose": [[103, "torch-tensor-allclose"]], "torch.Tensor.atanh_": [[139, "torch-tensor-atanh"]], "torch.Tensor.argsort": [[126, "torch-tensor-argsort"]], "torch.Tensor.argwhere": [[127, "torch-tensor-argwhere"]], "torch.Tensor.all": [[102, "torch-tensor-all"]], "torch.Tensor.asinh_": [[133, "torch-tensor-asinh"]], "torch.Tensor.arcsinh_": [[117, "torch-tensor-arcsinh"]], "torch.Tensor.arctanh_": [[123, "torch-tensor-arctanh"]], "torch.Tensor.as_subclass": [[129, "torch-tensor-as-subclass"]], "torch.Tensor.aminmax": [[106, "torch-tensor-aminmax"]], "torch.Tensor.atan2": [[135, "torch-tensor-atan2"]], "torch.Tensor.arccosh": [[112, "torch-tensor-arccosh"]], "torch.Tensor.addr": [[99, "torch-tensor-addr"]], "torch.Tensor.arctanh": [[122, "torch-tensor-arctanh"]], "torch.Tensor.bernoulli": [[143, "torch-tensor-bernoulli"]], "torch.Tensor.angle": [[107, "torch-tensor-angle"]], "torch.Tensor.baddbmm_": [[142, "torch-tensor-baddbmm"]], "torch.Tensor.amax": [[104, "torch-tensor-amax"]], "torch.Tensor.baddbmm": [[141, "torch-tensor-baddbmm"]], "torch.Tensor.arcsinh": [[116, "torch-tensor-arcsinh"]], "torch.Tensor.bfloat16": [[145, "torch-tensor-bfloat16"]], "torch.Tensor.as_strided": [[128, "torch-tensor-as-strided"]], "torch.Tensor.addmv_": [[98, "torch-tensor-addmv"]], "torch.Tensor.arctan": [[118, "torch-tensor-arctan"]], "torch.Tensor.bincount": [[146, "torch-tensor-bincount"]], "torch.Tensor.addr_": [[100, "torch-tensor-addr"]], "torch.Tensor.arccos": [[110, "torch-tensor-arccos"]], "torch.Tensor.argmax": [[124, "torch-tensor-argmax"]], "torch.Tensor.asin_": [[131, "torch-tensor-asin"]], "torch.Tensor.asinh": [[132, "torch-tensor-asinh"]], "torch.Tensor.arcsin_": [[115, "torch-tensor-arcsin"]], "torch.Tensor.backward": [[140, "torch-tensor-backward"]], "torch.Tensor.apply_": [[109, "torch-tensor-apply"]], "torch.Tensor.atan": [[134, "torch-tensor-atan"]], "torch.Tensor.asin": [[130, "torch-tensor-asin"]], "torch.Tensor.atan2_": [[136, "torch-tensor-atan2"]], "torch.Tensor.arctan2_": [[120, "torch-tensor-arctan2"]], "torch.Tensor.atan_": [[137, "torch-tensor-atan"]], "torch.Tensor.arctan_": [[121, "torch-tensor-arctan"]], "torch.Tensor.any": [[108, "torch-tensor-any"]], "torch.Tensor.argmin": [[125, "torch-tensor-argmin"]], "torch.Tensor.arctan2": [[119, "torch-tensor-arctan2"]], "torch.Tensor.adjoint": [[101, "torch-tensor-adjoint"]], "torch.Tensor.atanh": [[138, "torch-tensor-atanh"]], "torch.Tensor.expand": [[244, "torch-tensor-expand"]], "torch.Tensor.diag": [[214, "torch-tensor-diag"]], "torch.Tensor.dist": [[224, "torch-tensor-dist"]], "torch.Tensor.cumsum": [[204, "torch-tensor-cumsum"]], "torch.Tensor.erf": [[236, "torch-tensor-erf"]], "torch.Tensor.eq": [[233, "torch-tensor-eq"]], "torch.Tensor.device": [[213, "torch-tensor-device"]], "torch.Tensor.digamma": [[220, "torch-tensor-digamma"]], "torch.Tensor.cross": [[197, "torch-tensor-cross"]], "torch.Tensor.diagonal_scatter": [[218, "torch-tensor-diagonal-scatter"]], "torch.Tensor.divide": [[227, "torch-tensor-divide"]], "torch.Tensor.cpu": [[196, "torch-tensor-cpu"]], "torch.Tensor.cuda": [[199, "torch-tensor-cuda"]], "torch.Tensor.divide_": [[228, "torch-tensor-divide"]], "torch.Tensor.dot": [[229, "torch-tensor-dot"]], "torch.Tensor.data_ptr": [[206, "torch-tensor-data-ptr"]], "torch.Tensor.det": [[210, "torch-tensor-det"]], "torch.Tensor.erfc": [[238, "torch-tensor-erfc"]], "torch.Tensor.dim_order": [[223, "torch-tensor-dim-order"]], "torch.Tensor.exp_": [[243, "torch-tensor-exp"]], "torch.Tensor.exp": [[242, "torch-tensor-exp"]], "torch.Tensor.div_": [[226, "torch-tensor-div"]], "torch.Tensor.erfc_": [[239, "torch-tensor-erfc"]], "torch.Tensor.digamma_": [[221, "torch-tensor-digamma"]], "torch.Tensor.cumprod": [[202, "torch-tensor-cumprod"]], "torch.Tensor.erf_": [[237, "torch-tensor-erf"]], "torch.Tensor.double": [[230, "torch-tensor-double"]], "torch.Tensor.diag_embed": [[215, "torch-tensor-diag-embed"]], "torch.Tensor.cummin": [[201, "torch-tensor-cummin"]], "torch.Tensor.div": [[225, "torch-tensor-div"]], "torch.Tensor.element_size": [[232, "torch-tensor-element-size"]], "torch.Tensor.diff": [[219, "torch-tensor-diff"]], "torch.Tensor.detach_": [[212, "torch-tensor-detach"]], "torch.Tensor.dequantize": [[209, "torch-tensor-dequantize"]], "torch.Tensor.erfinv": [[240, "torch-tensor-erfinv"]], "torch.Tensor.erfinv_": [[241, "torch-tensor-erfinv"]], "torch.Tensor.diagflat": [[216, "torch-tensor-diagflat"]], "torch.Tensor.deg2rad": [[207, "torch-tensor-deg2rad"]], "torch.Tensor.detach": [[211, "torch-tensor-detach"]], "torch.Tensor.dsplit": [[231, "torch-tensor-dsplit"]], "torch.Tensor.dense_dim": [[208, "torch-tensor-dense-dim"]], "torch.Tensor.cumprod_": [[203, "torch-tensor-cumprod"]], "torch.Tensor.dim": [[222, "torch-tensor-dim"]], "torch.Tensor.cumsum_": [[205, "torch-tensor-cumsum"]], "torch.Tensor.crow_indices": [[198, "torch-tensor-crow-indices"]], "torch.Tensor.equal": [[235, "torch-tensor-equal"]], "torch.Tensor.diagonal": [[217, "torch-tensor-diagonal"]], "torch.Tensor.eq_": [[234, "torch-tensor-eq"]], "torch.Tensor.cummax": [[200, "torch-tensor-cummax"]], "torch.Tensor.is_conj": [[320, "torch-tensor-is-conj"]], "torch.Tensor.isclose": [[334, "torch-tensor-isclose"]], "torch.Tensor.is_meta": [[326, "torch-tensor-is-meta"]], "torch.Tensor.is_shared": [[330, "torch-tensor-is-shared"]], "torch.Tensor.index_put_": [[309, "torch-tensor-index-put"]], "torch.Tensor.is_contiguous": [[321, "torch-tensor-is-contiguous"]], "torch.Tensor.index_copy": [[304, "torch-tensor-index-copy"]], "torch.Tensor.is_leaf": [[325, "torch-tensor-is-leaf"]], "torch.Tensor.is_signed": [[331, "torch-tensor-is-signed"]], "torch.Tensor.is_sparse_csr": [[333, "torch-tensor-is-sparse-csr"]], "torch.Tensor.is_sparse": [[332, "torch-tensor-is-sparse"]], "torch.Tensor.index_fill": [[306, "torch-tensor-index-fill"]], "torch.Tensor.inverse": [[317, "torch-tensor-inverse"]], "torch.Tensor.is_pinned": [[327, "torch-tensor-is-pinned"]], "torch.Tensor.index_add_": [[303, "torch-tensor-index-add"]], "torch.Tensor.index_reduce": [[310, "torch-tensor-index-reduce"]], "torch.Tensor.int_repr": [[316, "torch-tensor-int-repr"]], "torch.Tensor.indices": [[313, "torch-tensor-indices"]], "torch.Tensor.isnan": [[337, "torch-tensor-isnan"]], "torch.Tensor.i0_": [[296, "torch-tensor-i0"]], "torch.Tensor.item": [[342, "torch-tensor-item"]], "torch.Tensor.igammac_": [[300, "torch-tensor-igammac"]], "torch.Tensor.index_select": [[312, "torch-tensor-index-select"]], "torch.Tensor.igamma": [[297, "torch-tensor-igamma"]], "torch.Tensor.is_complex": [[319, "torch-tensor-is-complex"]], "torch.Tensor.isfinite": [[335, "torch-tensor-isfinite"]], "torch.Tensor.index_put": [[308, "torch-tensor-index-put"]], "torch.Tensor.index_copy_": [[305, "torch-tensor-index-copy"]], "torch.Tensor.index_add": [[302, "torch-tensor-index-add"]], "torch.Tensor.index_fill_": [[307, "torch-tensor-index-fill"]], "torch.Tensor.imag": [[301, "torch-tensor-imag"]], "torch.Tensor.is_coalesced": [[318, "torch-tensor-is-coalesced"]], "torch.Tensor.is_cuda": [[322, "torch-tensor-is-cuda"]], "torch.Tensor.hypot_": [[294, "torch-tensor-hypot"]], "torch.Tensor.isinf": [[336, "torch-tensor-isinf"]], "torch.Tensor.igamma_": [[298, "torch-tensor-igamma"]], "torch.Tensor.isposinf": [[339, "torch-tensor-isposinf"]], "torch.Tensor.int": [[315, "torch-tensor-int"]], "torch.Tensor.is_floating_point": [[323, "torch-tensor-is-floating-point"]], "torch.Tensor.istft": [[341, "torch-tensor-istft"]], "torch.Tensor.is_inference": [[324, "torch-tensor-is-inference"]], "torch.Tensor.isneginf": [[338, "torch-tensor-isneginf"]], "torch.Tensor.inner": [[314, "torch-tensor-inner"]], "torch.Tensor.is_quantized": [[328, "torch-tensor-is-quantized"]], "torch.Tensor.is_set_to": [[329, "torch-tensor-is-set-to"]], "torch.Tensor.i0": [[295, "torch-tensor-i0"]], "torch.Tensor.igammac": [[299, "torch-tensor-igammac"]], "torch.Tensor.isreal": [[340, "torch-tensor-isreal"]], "torch.Tensor.index_reduce_": [[311, "torch-tensor-index-reduce"]], "torch.Tensor.less_": [[354, "torch-tensor-less"]], "torch.Tensor.logical_xor": [[378, "torch-tensor-logical-xor"]], "torch.Tensor.masked_scatter": [[391, "torch-tensor-masked-scatter"]], "torch.Tensor.lcm_": [[346, "torch-tensor-lcm"]], "torch.Tensor.lerp": [[351, "torch-tensor-lerp"]], "torch.Tensor.logical_or": [[376, "torch-tensor-logical-or"]], "torch.Tensor.long": [[383, "torch-tensor-long"]], "torch.Tensor.logdet": [[371, "torch-tensor-logdet"]], "torch.Tensor.lgamma_": [[358, "torch-tensor-lgamma"]], "torch.Tensor.logaddexp2": [[369, "torch-tensor-logaddexp2"]], "torch.Tensor.le_": [[350, "torch-tensor-le"]], "torch.Tensor.log2_": [[365, "torch-tensor-log2"]], "torch.Tensor.lt": [[384, "torch-tensor-lt"]], "torch.Tensor.logcumsumexp": [[370, "torch-tensor-logcumsumexp"]], "torch.Tensor.masked_fill_": [[390, "torch-tensor-masked-fill"]], "torch.Tensor.itemsize": [[343, "torch-tensor-itemsize"]], "torch.Tensor.masked_fill": [[389, "torch-tensor-masked-fill"]], "torch.Tensor.log10": [[360, "torch-tensor-log10"]], "torch.Tensor.map_": [[388, "torch-tensor-map"]], "torch.Tensor.lgamma": [[357, "torch-tensor-lgamma"]], "torch.Tensor.logaddexp": [[368, "torch-tensor-logaddexp"]], "torch.Tensor.lu": [[386, "torch-tensor-lu"]], "torch.Tensor.log10_": [[361, "torch-tensor-log10"]], "torch.Tensor.less": [[353, "torch-tensor-less"]], "torch.Tensor.logit": [[380, "torch-tensor-logit"]], "torch.Tensor.lu_solve": [[387, "torch-tensor-lu-solve"]], "torch.Tensor.logical_and_": [[373, "torch-tensor-logical-and"]], "torch.Tensor.logical_and": [[372, "torch-tensor-logical-and"]], "torch.Tensor.ldexp_": [[348, "torch-tensor-ldexp"]], "torch.Tensor.log": [[359, "torch-tensor-log"]], "torch.Tensor.logical_not": [[374, "torch-tensor-logical-not"]], "torch.Tensor.log_": [[366, "torch-tensor-log"]], "torch.Tensor.log_normal_": [[367, "torch-tensor-log-normal"]], "torch.Tensor.log2": [[364, "torch-tensor-log2"]], "torch.Tensor.lt_": [[385, "torch-tensor-lt"]], "torch.Tensor.less_equal": [[355, "torch-tensor-less-equal"]], "torch.Tensor.log1p_": [[363, "torch-tensor-log1p"]], "torch.Tensor.logical_xor_": [[379, "torch-tensor-logical-xor"]], "torch.Tensor.lerp_": [[352, "torch-tensor-lerp"]], "torch.Tensor.logical_not_": [[375, "torch-tensor-logical-not"]], "torch.Tensor.lcm": [[345, "torch-tensor-lcm"]], "torch.Tensor.kthvalue": [[344, "torch-tensor-kthvalue"]], "torch.Tensor.logical_or_": [[377, "torch-tensor-logical-or"]], "torch.Tensor.logit_": [[381, "torch-tensor-logit"]], "torch.Tensor.log1p": [[362, "torch-tensor-log1p"]], "torch.Tensor.le": [[349, "torch-tensor-le"]], "torch.Tensor.logsumexp": [[382, "torch-tensor-logsumexp"]], "torch.Tensor.less_equal_": [[356, "torch-tensor-less-equal"]], "torch.Tensor.ldexp": [[347, "torch-tensor-ldexp"]], "torch.utils": [[1960, "module-torch.utils"]], "torch.unflatten": [[1844, "torch-unflatten"]], "torch.tanh": [[1826, "torch-tanh"]], "torch.take_along_dim": [[1824, "torch-take-along-dim"]], "torch.unsqueeze": [[1847, "torch-unsqueeze"]], "torch.tril": [[1837, "torch-tril"]], "torch.unique": [[1845, "torch-unique"]], "torch.topk": [[1831, "torch-topk"]], "torch.view_as_complex": [[1857, "torch-view-as-complex"]], "torch.trunc": [[1842, "torch-trunc"]], "torch.sym_float": [[1817, "torch-sym-float"]], "torch.vmap": [[1859, "torch-vmap"]], "torch.var_mean": [[1855, "torch-var-mean"]], "torch.take": [[1823, "torch-take"]], "torch.triu": [[1839, "torch-triu"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1849, "torch-utils-generate-methods-for-privateuse1-backend"]], "torch.transpose": [[1833, "torch-transpose"]], "torch.tan": [[1825, "torch-tan"]], "torch.tensordot": [[1829, "torch-tensordot"]], "torch.trapz": [[1835, "torch-trapz"]], "torch.unique_consecutive": [[1846, "torch-unique-consecutive"]], "torch.sym_min": [[1820, "torch-sym-min"]], "torch.vdot": [[1856, "torch-vdot"]], "torch.vander": [[1853, "torch-vander"]], "torch.view_as_real": [[1858, "torch-view-as-real"]], "torch.t": [[1822, "torch-t"]], "torch.true_divide": [[1841, "torch-true-divide"]], "torch.vstack": [[1861, "torch-vstack"]], "torch.sym_max": [[1819, "torch-sym-max"]], "torch.svd": [[1813, "torch-svd"]], "torch.swapdims": [[1816, "torch-swapdims"]], "torch.unbind": [[1843, "torch-unbind"]], "torch.utils.set_module": [[1852, "torch-utils-set-module"]], "torch.svd_lowrank": [[1814, "torch-svd-lowrank"]], "torch.swapaxes": [[1815, "torch-swapaxes"]], "torch.utils.get_cpp_backtrace": [[1850, "torch-utils-get-cpp-backtrace"]], "torch.tensor_split": [[1828, "torch-tensor-split"]], "torch.utils.rename_privateuse1_backend": [[1851, "torch-utils-rename-privateuse1-backend"]], "torch.triu_indices": [[1840, "torch-triu-indices"]], "torch.vsplit": [[1860, "torch-vsplit"]], "torch.trace": [[1832, "torch-trace"]], "torch.tensor": [[1827, "torch-tensor"]], "torch.triangular_solve": [[1836, "torch-triangular-solve"]], "torch.tril_indices": [[1838, "torch-tril-indices"]], "torch.use_deterministic_algorithms": [[1848, "torch-use-deterministic-algorithms"]], "torch.tile": [[1830, "torch-tile"]], "torch.trapezoid": [[1834, "torch-trapezoid"]], "torch.sym_not": [[1821, "torch-sym-not"]], "torch.var": [[1854, "torch-var"]], "torch.sym_int": [[1818, "torch-sym-int"]], "torch.real": [[1729, "torch-real"]], "torch.rad2deg": [[1719, "torch-rad2deg"]], "SobolEngine": [[1718, "sobolengine"]], "torch.randperm": [[1726, "torch-randperm"]], "torch.set_default_tensor_type": [[1753, "torch-set-default-tensor-type"]], "torch.sgn": [[1763, "torch-sgn"]], "torch.set_float32_matmul_precision": [[1755, "torch-set-float32-matmul-precision"]], "torch.set_deterministic_debug_mode": [[1754, "torch-set-deterministic-debug-mode"]], "torch.rand_like": [[1721, "torch-rand-like"]], "torch.remainder": [[1731, "torch-remainder"]], "torch.set_flush_denormal": [[1756, "torch-set-flush-denormal"]], "torch.set_rng_state": [[1761, "torch-set-rng-state"]], "set_grad_enabled": [[1757, "set-grad-enabled"]], "torch.set_default_device": [[1751, "torch-set-default-device"]], "torch.range": [[1727, "torch-range"]], "torch.repeat_interleave": [[1733, "torch-repeat-interleave"]], "torch.resolve_neg": [[1736, "torch-resolve-neg"]], "torch.renorm": [[1732, "torch-renorm"]], "torch.rot90": [[1739, "torch-rot90"]], "torch.round": [[1740, "torch-round"]], "torch.scatter": [[1744, "torch-scatter"]], "torch.select": [[1749, "torch-select"]], "torch.randint": [[1722, "torch-randint"]], "torch.save": [[1743, "torch-save"]], "torch.quantized_batch_norm": [[1715, "torch-quantized-batch-norm"]], "torch.rand": [[1720, "torch-rand"]], "torch.set_printoptions": [[1760, "torch-set-printoptions"]], "torch.set_num_threads": [[1759, "torch-set-num-threads"]], "torch.randn": [[1724, "torch-randn"]], "torch.reshape": [[1734, "torch-reshape"]], "torch.rsqrt": [[1742, "torch-rsqrt"]], "torch.quantized_max_pool1d": [[1716, "torch-quantized-max-pool1d"]], "torch.scatter_add": [[1745, "torch-scatter-add"]], "torch.reciprocal": [[1730, "torch-reciprocal"]], "torch.select_scatter": [[1750, "torch-select-scatter"]], "torch.randn_like": [[1725, "torch-randn-like"]], "torch.seed": [[1748, "torch-seed"]], "torch.quantized_max_pool2d": [[1717, "torch-quantized-max-pool2d"]], "torch.set_warn_always": [[1762, "torch-set-warn-always"]], "torch.randint_like": [[1723, "torch-randint-like"]], "torch.result_type": [[1737, "torch-result-type"]], "torch.resolve_conj": [[1735, "torch-resolve-conj"]], "torch.scatter_reduce": [[1746, "torch-scatter-reduce"]], "torch.set_num_interop_threads": [[1758, "torch-set-num-interop-threads"]], "torch.set_default_dtype": [[1752, "torch-set-default-dtype"]], "torch.row_stack": [[1741, "torch-row-stack"]], "torch.searchsorted": [[1747, "torch-searchsorted"]], "torch.ravel": [[1728, "torch-ravel"]], "torch.roll": [[1738, "torch-roll"]], "torch.sparse.sampled_addmm": [[1791, "torch-sparse-sampled-addmm"]], "torch.sparse.sum": [[1794, "torch-sparse-sum"]], "torch.split": [[1801, "torch-split"]], "torch.sparse.softmax": [[1792, "torch-sparse-softmax"]], "torch.sinh": [[1780, "torch-sinh"]], "torch.signal.windows.kaiser": [[1775, "torch-signal-windows-kaiser"]], "torch.signal.windows.exponential": [[1769, "torch-signal-windows-exponential"]], "torch.signal.windows.hamming": [[1773, "torch-signal-windows-hamming"]], "torch.sparse_bsr_tensor": [[1796, "torch-sparse-bsr-tensor"]], "torch.signbit": [[1777, "torch-signbit"]], "torch.sspaddmm": [[1805, "torch-sspaddmm"]], "torch.sparse_bsc_tensor": [[1795, "torch-sparse-bsc-tensor"]], "torch.slogdet": [[1782, "torch-slogdet"]], "torch.signal.windows.general_hamming": [[1772, "torch-signal-windows-general-hamming"]], "torch.std": [[1807, "torch-std"]], "torch.sort": [[1785, "torch-sort"]], "torch.softmax": [[1784, "torch-softmax"]], "torch.sparse.addmm": [[1786, "torch-sparse-addmm"]], "torch.sparse_csr_tensor": [[1800, "torch-sparse-csr-tensor"]], "torch.signal.windows.cosine": [[1768, "torch-signal-windows-cosine"]], "torch.sin": [[1778, "torch-sin"]], "torch.squeeze": [[1804, "torch-squeeze"]], "torch.sqrt": [[1802, "torch-sqrt"]], "torch.sign": [[1765, "torch-sign"]], "torch.signal.windows.nuttall": [[1776, "torch-signal-windows-nuttall"]], "torch.sparse.as_sparse_gradcheck": [[1787, "torch-sparse-as-sparse-gradcheck"]], "check_sparse_tensor_invariants": [[1788, "check-sparse-tensor-invariants"]], "torch.stft": [[1809, "torch-stft"]], "torch.sparse.log_softmax": [[1789, "torch-sparse-log-softmax"]], "torch.sum": [[1812, "torch-sum"]], "torch.stack": [[1806, "torch-stack"]], "torch.signal.windows.blackman": [[1767, "torch-signal-windows-blackman"]], "torch.sparse_compressed_tensor": [[1797, "torch-sparse-compressed-tensor"]], "torch.smm": [[1783, "torch-smm"]], "torch.sparse.spdiags": [[1793, "torch-sparse-spdiags"]], "torch.signal.windows.gaussian": [[1770, "torch-signal-windows-gaussian"]], "torch.subtract": [[1811, "torch-subtract"]], "torch.signal.windows.hann": [[1774, "torch-signal-windows-hann"]], "torch.sigmoid": [[1764, "torch-sigmoid"]], "torch.square": [[1803, "torch-square"]], "torch.sparse_csc_tensor": [[1799, "torch-sparse-csc-tensor"]], "torch.std_mean": [[1808, "torch-std-mean"]], "torch.sparse.mm": [[1790, "torch-sparse-mm"]], "torch.sparse_coo_tensor": [[1798, "torch-sparse-coo-tensor"]], "torch.sub": [[1810, "torch-sub"]], "torch.sinc": [[1779, "torch-sinc"]], "torch.slice_scatter": [[1781, "torch-slice-scatter"]], "torch.signal.windows.general_cosine": [[1771, "torch-signal-windows-general-cosine"]], "torch.signal.windows.bartlett": [[1766, "torch-signal-windows-bartlett"]], "torch.func Whirlwind Tour": [[54, "torch-func-whirlwind-tour"]], "What is torch.func?": [[54, "what-is-torch-func"]], "Why composable function transforms?": [[54, "why-composable-function-transforms"], [49, "why-composable-function-transforms"]], "What are the transforms?": [[54, "what-are-the-transforms"]], "grad() (gradient computation)": [[54, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[54, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[54, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[54, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[54, "jacrev-jacfwd-and-hessian"]], "torch.Tensor.addmv": [[97, "torch-tensor-addmv"]], "Migrating from functorch to torch.func": [[52, "migrating-from-functorch-to-torch-func"]], "function transforms": [[52, "function-transforms"]], "NN module utilities": [[52, "nn-module-utilities"]], "functorch.make_functional": [[52, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[52, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[52, "functorch-compile"]], "torch.fx": [[56, "torch-fx"]], "Overview": [[56, "module-torch.fx"], [1910, "overview"], [1909, "overview"], [45, "overview"], [18, "module-torch.cuda._sanitizer"], [1917, "module-torch.profiler"], [1942, "overview"]], "Writing Transformations": [[56, "writing-transformations"]], "A Quick Primer on Graphs": [[56, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[56, "graph-manipulation"]], "Direct Graph Manipulation": [[56, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[56, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[56, "graph-manipulation-examples"]], "Proxy/Retracing": [[56, "proxy-retracing"]], "The Interpreter Pattern": [[56, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[56, "examples-of-the-interpreter-pattern"]], "Debugging": [[56, "debugging"], [1868, "debugging"]], "Introduction": [[56, "introduction"], [1878, "introduction"], [1886, "introduction"]], "Common Pitfalls in Transform Authoring": [[56, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[56, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[56, "debugging-the-generated-code"]], "Use pdb": [[56, "use-pdb"]], "Print the Generated Code": [[56, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[56, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[56, "debugging-the-transformation"]], "Available Debuggers": [[56, "available-debuggers"]], "Limitations of Symbolic Tracing": [[56, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[56, "dynamic-control-flow"]], "Static Control Flow": [[56, "static-control-flow"]], "Non-torch Functions": [[56, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[56, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[56, "leaf-modules"]], "Miscellanea": [[56, "miscellanea"]], "API Reference": [[56, "api-reference"], [1881, "module-torch.monitor"], [1910, "api-reference"], [12, "api-reference"], [45, "module-torch.export"], [18, "api-reference"], [1915, "api-reference"], [1917, "api-reference"]], "torch.Tensor.acosh": [[85, "torch-tensor-acosh"]], "python.control-flow": [[62, "python-control-flow"]], "dynamic_shape_if_guard": [[62, "dynamic-shape-if-guard"], [57, "dynamic-shape-if-guard"], [65, "dynamic-shape-if-guard"]], "list_unpack": [[62, "list-unpack"], [57, "list-unpack"], [63, "list-unpack"]], "static_for_loop": [[62, "static-for-loop"], [57, "static-for-loop"]], "static_if": [[62, "static-if"], [57, "static-if"]], "UX Limitations": [[53, "ux-limitations"]], "General limitations": [[53, "general-limitations"]], "torch.autograd APIs": [[53, "torch-autograd-apis"]], "vmap limitations": [[53, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[53, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[53, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[53, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[53, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[53, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[53, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[53, "randomness"]], "python.context-manager": [[61, "python-context-manager"]], "null_context_manager": [[61, "null-context-manager"], [57, "null-context-manager"]], "FXE0008:fx-node-to-onnx": [[70, "fxe0008-fx-node-to-onnx"]], "torch.Tensor.abs": [[79, "torch-tensor-abs"]], "ExportDB": [[57, "exportdb"]], "Tags": [[57, null]], "Supported": [[57, "supported"]], "assume_constant_result": [[57, "assume-constant-result"], [67, "assume-constant-result"]], "autograd_function": [[57, "autograd-function"]], "class_method": [[57, "class-method"]], "cond_branch_class_method": [[57, "cond-branch-class-method"], [64, "cond-branch-class-method"], [65, "cond-branch-class-method"]], "cond_branch_nested_function": [[57, "cond-branch-nested-function"], [64, "cond-branch-nested-function"], [65, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[57, "cond-branch-nonlocal-variables"], [64, "cond-branch-nonlocal-variables"], [65, "cond-branch-nonlocal-variables"]], "cond_closed_over_variable": [[57, "cond-closed-over-variable"], [60, "cond-closed-over-variable"], [64, "cond-closed-over-variable"]], "cond_operands": [[57, "cond-operands"], [64, "cond-operands"], [65, "cond-operands"]], "cond_predicate": [[57, "cond-predicate"], [64, "cond-predicate"], [65, "cond-predicate"]], "constrain_as_size_example": [[57, "constrain-as-size-example"], [66, "constrain-as-size-example"], [67, "constrain-as-size-example"]], "constrain_as_value_example": [[57, "constrain-as-value-example"], [66, "constrain-as-value-example"], [67, "constrain-as-value-example"]], "decorator": [[57, "decorator"]], "dictionary": [[57, "dictionary"], [63, "dictionary"]], "dynamic_shape_assert": [[57, "dynamic-shape-assert"], [58, "dynamic-shape-assert"]], "dynamic_shape_constructor": [[57, "dynamic-shape-constructor"], [65, "dynamic-shape-constructor"]], "dynamic_shape_map": [[57, "dynamic-shape-map"], [68, "dynamic-shape-map"], [65, "dynamic-shape-map"]], "dynamic_shape_slicing": [[57, "dynamic-shape-slicing"], [65, "dynamic-shape-slicing"]], "dynamic_shape_view": [[57, "dynamic-shape-view"], [65, "dynamic-shape-view"]], "fn_with_kwargs": [[57, "fn-with-kwargs"], [63, "fn-with-kwargs"]], "list_contains": [[57, "list-contains"], [58, "list-contains"], [63, "list-contains"], [65, "list-contains"]], "nested_function": [[57, "nested-function"], [60, "nested-function"]], "pytree_flatten": [[57, "pytree-flatten"]], "scalar_output": [[57, "scalar-output"], [65, "scalar-output"]], "specialized_attribute": [[57, "specialized-attribute"]], "tensor_setattr": [[57, "tensor-setattr"], [59, "tensor-setattr"]], "Not Supported Yet": [[57, "not-supported-yet"]], "dynamic_shape_round": [[57, "dynamic-shape-round"], [59, "dynamic-shape-round"], [65, "dynamic-shape-round"]], "type_reflection_method": [[57, "type-reflection-method"], [59, "type-reflection-method"]], "torch.Tensor.acos_": [[84, "torch-tensor-acos"]], "torch.Tensor.addcdiv_": [[92, "torch-tensor-addcdiv"]], "torch.Tensor.absolute_": [[82, "torch-tensor-absolute"]], "torch.Tensor.add_": [[88, "torch-tensor-add"]], "torch.Tensor.addbmm_": [[90, "torch-tensor-addbmm"]], "python.assert": [[58, "python-assert"]], "FXE0013:op-level-debugging": [[74, "fxe0013-op-level-debugging"]], "torch.Tensor.absolute": [[81, "torch-tensor-absolute"]], "torch.func": [[49, "torch-func"]], "What are composable function transforms?": [[49, "what-are-composable-function-transforms"]], "Read More": [[49, "read-more"], [45, "read-more"], [1938, "read-more"]], "FXE0010:fx-pass": [[71, "fxe0010-fx-pass"]], "FXE0014:find-opschema-matched-symbolic-function": [[75, "fxe0014-find-opschema-matched-symbolic-function"]], "torch.Tensor.addcmul_": [[94, "torch-tensor-addcmul"]], "torch.Tensor.add": [[87, "torch-tensor-add"]], "FXE0012:unsupported-fx-node-analysis": [[73, "fxe0012-unsupported-fx-node-analysis"]], "torch.Tensor.abs_": [[80, "torch-tensor-abs"]], "python.closure": [[60, "python-closure"]], "torch.map": [[68, "torch-map"]], "FXE0015:fx-node-insert-type-promotion": [[76, "fxe0015-fx-node-insert-type-promotion"]], "Generator": [[78, "generator"]], "torch.Tensor.acos": [[83, "torch-tensor-acos"]], "torch.dynamic-value": [[66, "torch-dynamic-value"]], "torch.escape-hatch": [[67, "torch-escape-hatch"]], "torch.Tensor.addmm": [[95, "torch-tensor-addmm"]], "torch.Tensor.addcdiv": [[91, "torch-tensor-addcdiv"]], "torch.futures": [[55, "torch-futures"]], "python.data-structure": [[63, "python-data-structure"]], "Patching Batch Norm": [[51, "patching-batch-norm"]], "What\u2019s happening?": [[51, "what-s-happening"]], "How to fix": [[51, "how-to-fix"]], "Option 1: Change the BatchNorm": [[51, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[51, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[51, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[51, "option-4-eval-mode"]], "torch.Tensor.addbmm": [[89, "torch-tensor-addbmm"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[77, "fxe0016-find-operator-overloads-in-onnx-registry"]], "torch.Tensor.addmm_": [[96, "torch-tensor-addmm"]], "FXE0007:fx-graph-to-onnx": [[69, "fxe0007-fx-graph-to-onnx"]], "Key Representations:": [[69, "key-representations"]], "Additional Notes:": [[69, "additional-notes"]], "torch.cond": [[64, "torch-cond"], [952, "torch-cond"]], "FXE0011:no-symbolic-function-for-call-function": [[72, "fxe0011-no-symbolic-function-for-call-function"]], "torch.Tensor.addcmul": [[93, "torch-tensor-addcmul"]], "python.builtin": [[59, "python-builtin"]], "torch.dynamic-shape": [[65, "torch-dynamic-shape"]], "torch.Tensor.acosh_": [[86, "torch-tensor-acosh"]], "torch.func API Reference": [[50, "module-torch.func"]], "Function Transforms": [[50, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[50, "utilities-for-working-with-torch-nn-modules"]], "torch.nn.functional.pdist": [[1568, "torch-nn-functional-pdist"]], "torch.nn.functional.softplus": [[1586, "torch-nn-functional-softplus"]], "LazyModuleMixin": [[1600, "lazymodulemixin"]], "torch.nn.utils.clip_grad_value_": [[1614, "torch-nn-utils-clip-grad-value"]], "torch.nn.functional.softsign": [[1588, "torch-nn-functional-softsign"]], "torch.nn.functional.tanh": [[1589, "torch-nn-functional-tanh"]], "torch.nn.functional.triplet_margin_loss": [[1594, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1608, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.utils.clip_grad_norm_": [[1613, "torch-nn-utils-clip-grad-norm"]], "torch.nn.functional.soft_margin_loss": [[1583, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.pixel_unshuffle": [[1570, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.upsample_nearest": [[1599, "torch-nn-functional-upsample-nearest"]], "torch.nn.functional.rrelu": [[1576, "torch-nn-functional-rrelu"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1607, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.functional.relu": [[1573, "torch-nn-functional-relu"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1595, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.utils.parameters_to_vector": [[1615, "torch-nn-utils-parameters-to-vector"]], "torch.nn.functional.softmin": [[1585, "torch-nn-functional-softmin"]], "Parameter": [[1610, "parameter"]], "torch.nn.functional.relu_": [[1575, "torch-nn-functional-relu"]], "torch.nn.functional.threshold_": [[1592, "torch-nn-functional-threshold"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1593, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.functional.unfold": [[1596, "torch-nn-functional-unfold"]], "torch.nn.functional.sigmoid": [[1580, "torch-nn-functional-sigmoid"]], "torch.nn.functional.softshrink": [[1587, "torch-nn-functional-softshrink"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1602, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1604, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.functional.tanhshrink": [[1590, "torch-nn-functional-tanhshrink"]], "torch.nn.functional.threshold": [[1591, "torch-nn-functional-threshold"]], "torch.nn.functional.upsample": [[1597, "torch-nn-functional-upsample"]], "torch.nn.functional.rrelu_": [[1577, "torch-nn-functional-rrelu"]], "torch.nn.utils.parametrizations.orthogonal": [[1616, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1606, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.functional.smooth_l1_loss": [[1582, "torch-nn-functional-smooth-l1-loss"]], "UninitializedParameter": [[1612, "uninitializedparameter"]], "torch.nn.modules.module.register_module_forward_hook": [[1603, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.modules.module.register_module_backward_hook": [[1601, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.functional.scaled_dot_product_attention": [[1578, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.prelu": [[1572, "torch-nn-functional-prelu"]], "torch.nn.functional.silu": [[1581, "torch-nn-functional-silu"]], "DistributedDataParallel": [[1609, "distributeddataparallel"], [1895, "distributeddataparallel"]], "torch.nn.functional.poisson_nll_loss": [[1571, "torch-nn-functional-poisson-nll-loss"]], "UninitializedBuffer": [[1611, "uninitializedbuffer"]], "torch.nn.functional.pixel_shuffle": [[1569, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.selu": [[1579, "torch-nn-functional-selu"]], "torch.nn.functional.softmax": [[1584, "torch-nn-functional-softmax"]], "torch.nn.functional.relu6": [[1574, "torch-nn-functional-relu6"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1605, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.upsample_bilinear": [[1598, "torch-nn-functional-upsample-bilinear"]], "ReduceLROnPlateau": [[1695, "reducelronplateau"]], "torch.ormqr": [[1699, "torch-ormqr"]], "OneCycleLR": [[1693, "onecyclelr"]], "torch.polar": [[1705, "torch-polar"]], "torch.prod": [[1709, "torch-prod"]], "torch.pow": [[1708, "torch-pow"]], "Adagrad": [[1667, "adagrad"]], "AdamW": [[1669, "adamw"]], "Rprop": [[1680, "rprop"]], "SequentialLR": [[1696, "sequentiallr"]], "torch.positive": [[1707, "torch-positive"]], "torch.optim.Optimizer.state_dict": [[1675, "torch-optim-optimizer-state-dict"]], "torch.orgqr": [[1698, "torch-orgqr"]], "torch.polygamma": [[1706, "torch-polygamma"]], "MultiStepLR": [[1691, "multisteplr"]], "Adamax": [[1670, "adamax"]], "LinearLR": [[1690, "linearlr"]], "LBFGS": [[1671, "lbfgs"]], "Adam": [[1668, "adam"]], "torch.promote_types": [[1710, "torch-promote-types"]], "torch.optim.Optimizer.step": [[1676, "torch-optim-optimizer-step"]], "torch.pinverse": [[1703, "torch-pinverse"]], "torch.optim.Optimizer.add_param_group": [[1673, "torch-optim-optimizer-add-param-group"]], "torch.poisson": [[1704, "torch-poisson"]], "PolynomialLR": [[1694, "polynomiallr"]], "ExponentialLR": [[1688, "exponentiallr"]], "RMSprop": [[1679, "rmsprop"]], "StepLR": [[1697, "steplr"]], "torch.permute": [[1702, "torch-permute"]], "ChainedScheduler": [[1683, "chainedscheduler"]], "SparseAdam": [[1682, "sparseadam"]], "CosineAnnealingLR": [[1685, "cosineannealinglr"]], "ConstantLR": [[1684, "constantlr"]], "torch.quantile": [[1712, "torch-quantile"]], "torch.qr": [[1711, "torch-qr"]], "LambdaLR": [[1689, "lambdalr"]], "torch.quantize_per_tensor": [[1714, "torch-quantize-per-tensor"]], "SGD": [[1681, "sgd"]], "NAdam": [[1672, "nadam"]], "Adadelta": [[1666, "adadelta"]], "torch.optim.Optimizer.zero_grad": [[1677, "torch-optim-optimizer-zero-grad"]], "RAdam": [[1678, "radam"]], "CosineAnnealingWarmRestarts": [[1686, "cosineannealingwarmrestarts"]], "torch.pca_lowrank": [[1701, "torch-pca-lowrank"]], "torch.optim.Optimizer.load_state_dict": [[1674, "torch-optim-optimizer-load-state-dict"]], "torch.outer": [[1700, "torch-outer"]], "MultiplicativeLR": [[1692, "multiplicativelr"]], "CyclicLR": [[1687, "cycliclr"]], "torch.quantize_per_channel": [[1713, "torch-quantize-per-channel"]], "ASGD": [[1665, "asgd"]], "torch.nonzero": [[1655, "torch-nonzero"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1622, "torch-nn-utils-parametrize-remove-parametrizations"]], "JitScalarType": [[1662, "jitscalartype"]], "torch.nn.utils.parametrize.register_parametrization": [[1621, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.utils.prune.is_pruned": [[1634, "torch-nn-utils-prune-is-pruned"]], "RandomStructured": [[1629, "randomstructured"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1643, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.remove_spectral_norm": [[1640, "torch-nn-utils-remove-spectral-norm"]], "torch.nn.utils.prune.remove": [[1639, "torch-nn-utils-prune-remove"]], "GraphInfo": [[1663, "graphinfo"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1645, "torch-nn-utils-rnn-pad-packed-sequence"]], "LnStructured": [[1627, "lnstructured"]], "torch.nn.utils.vector_to_parameters": [[1652, "torch-nn-utils-vector-to-parameters"]], "RandomUnstructured": [[1630, "randomunstructured"]], "torch.nn.utils.parametrize.cached": [[1619, "torch-nn-utils-parametrize-cached"]], "torch.numel": [[1659, "torch-numel"]], "L1Unstructured": [[1626, "l1unstructured"]], "torch.nn.utils.prune.random_unstructured": [[1638, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.utils.rnn.unpad_sequence": [[1648, "torch-nn-utils-rnn-unpad-sequence"]], "torch.nn.utils.skip_init": [[1649, "torch-nn-utils-skip-init"]], "torch.nn.utils.remove_weight_norm": [[1641, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.prune.global_unstructured": [[1632, "torch-nn-utils-prune-global-unstructured"]], "CustomFromMask": [[1624, "customfrommask"]], "torch.nn.utils.spectral_norm": [[1650, "torch-nn-utils-spectral-norm"]], "torch.nn.utils.prune.ln_structured": [[1636, "torch-nn-utils-prune-ln-structured"]], "torch.ones": [[1660, "torch-ones"]], "torch.nn.utils.parametrize.is_parametrized": [[1620, "torch-nn-utils-parametrize-is-parametrized"]], "BasePruningMethod": [[1623, "basepruningmethod"]], "torch.ones_like": [[1661, "torch-ones-like"]], "torch.not_equal": [[1658, "torch-not-equal"]], "PackedSequence": [[1642, "packedsequence"]], "VerificationOptions": [[1664, "verificationoptions"]], "ParametrizationList": [[1618, "parametrizationlist"]], "torch.nn.utils.stateless.functional_call": [[1651, "torch-nn-utils-stateless-functional-call"]], "torch.normal": [[1657, "torch-normal"]], "torch.nn.utils.rnn.unpack_sequence": [[1647, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nn.utils.rnn.pad_sequence": [[1646, "torch-nn-utils-rnn-pad-sequence"]], "torch.nn.utils.prune.custom_from_mask": [[1631, "torch-nn-utils-prune-custom-from-mask"]], "no_grad": [[1654, "no-grad"]], "torch.norm": [[1656, "torch-norm"]], "PruningContainer": [[1628, "pruningcontainer"]], "torch.nn.utils.rnn.pack_sequence": [[1644, "torch-nn-utils-rnn-pack-sequence"]], "torch.nn.utils.prune.random_structured": [[1637, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.parametrizations.spectral_norm": [[1617, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.utils.weight_norm": [[1653, "torch-nn-utils-weight-norm"]], "torch.nn.utils.prune.identity": [[1633, "torch-nn-utils-prune-identity"]], "torch.nn.utils.prune.l1_unstructured": [[1635, "torch-nn-utils-prune-l1-unstructured"]], "Identity": [[1625, "identity"], [1391, "identity"]], "torch.nn.functional.huber_loss": [[1537, "torch-nn-functional-huber-loss"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1562, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.margin_ranking_loss": [[1551, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.max_pool1d": [[1552, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.interpolate": [[1539, "torch-nn-functional-interpolate"]], "torch.nn.functional.leaky_relu_": [[1544, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.multilabel_margin_loss": [[1561, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.fractional_max_pool3d": [[1524, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.nll_loss": [[1563, "torch-nn-functional-nll-loss"]], "torch.nn.functional.hardtanh": [[1534, "torch-nn-functional-hardtanh"]], "torch.nn.functional.gaussian_nll_loss": [[1525, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.layer_norm": [[1542, "torch-nn-functional-layer-norm"]], "torch.nn.functional.pad": [[1566, "torch-nn-functional-pad"]], "torch.nn.functional.hardswish": [[1533, "torch-nn-functional-hardswish"]], "torch.nn.functional.log_softmax": [[1547, "torch-nn-functional-log-softmax"]], "torch.nn.functional.max_unpool1d": [[1555, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.hardshrink": [[1531, "torch-nn-functional-hardshrink"]], "torch.nn.functional.one_hot": [[1565, "torch-nn-functional-one-hot"]], "torch.nn.functional.l1_loss": [[1541, "torch-nn-functional-l1-loss"]], "torch.nn.functional.fold": [[1522, "torch-nn-functional-fold"]], "torch.nn.functional.hardsigmoid": [[1532, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.linear": [[1545, "torch-nn-functional-linear"]], "torch.nn.functional.lp_pool1d": [[1549, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.grid_sample": [[1528, "torch-nn-functional-grid-sample"]], "torch.nn.functional.max_unpool3d": [[1557, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.mish": [[1558, "torch-nn-functional-mish"]], "torch.nn.functional.group_norm": [[1529, "torch-nn-functional-group-norm"]], "torch.nn.functional.mse_loss": [[1559, "torch-nn-functional-mse-loss"]], "torch.nn.functional.glu": [[1527, "torch-nn-functional-glu"]], "torch.nn.functional.gelu": [[1526, "torch-nn-functional-gelu"]], "torch.nn.functional.fractional_max_pool2d": [[1523, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.embedding_bag": [[1520, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.leaky_relu": [[1543, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.lp_pool2d": [[1550, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.normalize": [[1564, "torch-nn-functional-normalize"]], "torch.nn.functional.max_pool3d": [[1554, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.embedding": [[1519, "torch-nn-functional-embedding"]], "torch.nn.functional.max_unpool2d": [[1556, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.multi_margin_loss": [[1560, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.hardtanh_": [[1535, "torch-nn-functional-hardtanh"]], "torch.nn.functional.hinge_embedding_loss": [[1536, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.kl_div": [[1540, "torch-nn-functional-kl-div"]], "torch.nn.functional.local_response_norm": [[1546, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.max_pool2d": [[1553, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.feature_alpha_dropout": [[1521, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.gumbel_softmax": [[1530, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.pairwise_distance": [[1567, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.instance_norm": [[1538, "torch-nn-functional-instance-norm"]], "torch.nn.functional.logsigmoid": [[1548, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.adaptive_avg_pool3d": [[1489, "torch-nn-functional-adaptive-avg-pool3d"]], "TransformerDecoderLayer": [[1474, "transformerdecoderlayer"]], "torch.nn.functional.elu": [[1517, "torch-nn-functional-elu"]], "TransformerEncoder": [[1475, "transformerencoder"]], "torch.nn.functional.avg_pool2d": [[1496, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.dropout1d": [[1514, "torch-nn-functional-dropout1d"]], "torch.nn.functional.elu_": [[1518, "torch-nn-functional-elu"]], "UpsamplingBilinear2d": [[1482, "upsamplingbilinear2d"]], "torch.nn.functional.adaptive_max_pool1d": [[1490, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.dropout3d": [[1516, "torch-nn-functional-dropout3d"]], "ZeroPad1d": [[1484, "zeropad1d"]], "torch.nn.functional.alpha_dropout": [[1494, "torch-nn-functional-alpha-dropout"]], "TripletMarginWithDistanceLoss": [[1478, "tripletmarginwithdistanceloss"]], "ZeroPad2d": [[1485, "zeropad2d"]], "torch.nn.functional.conv1d": [[1503, "torch-nn-functional-conv1d"]], "torch.nn.functional.batch_norm": [[1498, "torch-nn-functional-batch-norm"]], "Unflatten": [[1479, "unflatten"]], "TripletMarginLoss": [[1477, "tripletmarginloss"]], "torch.nn.functional.cosine_similarity": [[1510, "torch-nn-functional-cosine-similarity"]], "TransformerEncoderLayer": [[1476, "transformerencoderlayer"]], "Unfold": [[1480, "unfold"]], "Transformer": [[1472, "transformer"], [1955, "transformer"]], "torch.nn.functional.affine_grid": [[1493, "torch-nn-functional-affine-grid"]], "torch.nn.functional.cosine_embedding_loss": [[1509, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.conv_transpose3d": [[1508, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.dropout": [[1513, "torch-nn-functional-dropout"]], "torch.nn.functional.dropout2d": [[1515, "torch-nn-functional-dropout2d"]], "Threshold": [[1471, "threshold"]], "torch.nn.functional.conv3d": [[1505, "torch-nn-functional-conv3d"]], "torch.nn.functional.ctc_loss": [[1512, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.adaptive_max_pool3d": [[1492, "torch-nn-functional-adaptive-max-pool3d"]], "Upsample": [[1481, "upsample"]], "ZeroPad3d": [[1486, "zeropad3d"]], "torch.nn.functional.avg_pool3d": [[1497, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.binary_cross_entropy": [[1500, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.adaptive_avg_pool2d": [[1488, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.bilinear": [[1499, "torch-nn-functional-bilinear"]], "torch.nn.functional.conv_transpose2d": [[1507, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.celu": [[1502, "torch-nn-functional-celu"]], "torch.nn.functional.conv_transpose1d": [[1506, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.adaptive_max_pool2d": [[1491, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.avg_pool1d": [[1495, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1501, "torch-nn-functional-binary-cross-entropy-with-logits"]], "TransformerDecoder": [[1473, "transformerdecoder"]], "torch.nn.functional.adaptive_avg_pool1d": [[1487, "torch-nn-functional-adaptive-avg-pool1d"]], "UpsamplingNearest2d": [[1483, "upsamplingnearest2d"]], "torch.nn.functional.cross_entropy": [[1511, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.conv2d": [[1504, "torch-nn-functional-conv2d"]], "Tanhshrink": [[1470, "tanhshrink"]], "torch.logical_and": [[1277, "torch-logical-and"]], "torch.mps.set_rng_state": [[1315, "torch-mps-set-rng-state"]], "torch.multinomial": [[1319, "torch-multinomial"]], "torch.lu": [[1285, "torch-lu"]], "torch.logical_or": [[1279, "torch-logical-or"]], "torch.moveaxis": [[1302, "torch-moveaxis"]], "torch.mps.set_per_process_memory_fraction": [[1314, "torch-mps-set-per-process-memory-fraction"]], "torch.mode": [[1301, "torch-mode"]], "torch.logcumsumexp": [[1275, "torch-logcumsumexp"]], "torch.masked_select": [[1289, "torch-masked-select"]], "torch.logdet": [[1276, "torch-logdet"]], "torch.logspace": [[1282, "torch-logspace"]], "torch.movedim": [[1303, "torch-movedim"]], "torch.matrix_exp": [[1291, "torch-matrix-exp"]], "torch.mean": [[1295, "torch-mean"]], "torch.logical_xor": [[1280, "torch-logical-xor"]], "torch.mps.manual_seed": [[1309, "torch-mps-manual-seed"]], "torch.mps.profiler.profile": [[1310, "torch-mps-profiler-profile"]], "torch.manual_seed": [[1288, "torch-manual-seed"]], "torch.mv": [[1321, "torch-mv"]], "torch.mm": [[1300, "torch-mm"]], "torch.mps.current_allocated_memory": [[1304, "torch-mps-current-allocated-memory"]], "torch.msort": [[1317, "torch-msort"]], "torch.mul": [[1318, "torch-mul"]], "torch.multiply": [[1320, "torch-multiply"]], "torch.minimum": [[1299, "torch-minimum"]], "Event": [[1307, "event"], [971, "event"]], "torch.lu_solve": [[1286, "torch-lu-solve"]], "torch.logsumexp": [[1283, "torch-logsumexp"]], "torch.logaddexp2": [[1274, "torch-logaddexp2"]], "torch.logit": [[1281, "torch-logit"]], "torch.maximum": [[1294, "torch-maximum"]], "torch.mps.driver_allocated_memory": [[1305, "torch-mps-driver-allocated-memory"]], "torch.mps.profiler.start": [[1311, "torch-mps-profiler-start"]], "torch.mps.seed": [[1313, "torch-mps-seed"]], "torch.mvlgamma": [[1322, "torch-mvlgamma"]], "torch.mps.profiler.stop": [[1312, "torch-mps-profiler-stop"]], "torch.max": [[1293, "torch-max"]], "torch.min": [[1298, "torch-min"]], "torch.mps.empty_cache": [[1306, "torch-mps-empty-cache"]], "torch.mps.get_rng_state": [[1308, "torch-mps-get-rng-state"]], "torch.median": [[1296, "torch-median"]], "torch.matmul": [[1290, "torch-matmul"]], "torch.meshgrid": [[1297, "torch-meshgrid"]], "torch.mps.synchronize": [[1316, "torch-mps-synchronize"]], "torch.logical_not": [[1278, "torch-logical-not"]], "torch.matrix_power": [[1292, "torch-matrix-power"]], "torch.lu_unpack": [[1287, "torch-lu-unpack"]], "torch.lt": [[1284, "torch-lt"]], "FractionalMaxPool3d": [[1378, "fractionalmaxpool3d"]], "Hardtanh": [[1388, "hardtanh"]], "EmbeddingBag": [[1373, "embeddingbag"], [735, "embeddingbag"]], "GRUCell": [[1382, "grucell"], [750, "grucell"]], "LazyBatchNorm1d": [[1402, "lazybatchnorm1d"]], "LazyConvTranspose3d": [[1410, "lazyconvtranspose3d"]], "Hardsigmoid": [[1386, "hardsigmoid"]], "LazyConv2d": [[1406, "lazyconv2d"]], "LazyInstanceNorm2d": [[1412, "lazyinstancenorm2d"]], "LazyLinear": [[1414, "lazylinear"]], "LazyConvTranspose1d": [[1408, "lazyconvtranspose1d"]], "InstanceNorm2d": [[1393, "instancenorm2d"], [741, "instancenorm2d"]], "InstanceNorm1d": [[1392, "instancenorm1d"], [740, "instancenorm1d"]], "LocalResponseNorm": [[1417, "localresponsenorm"]], "GroupNorm": [[1384, "groupnorm"], [738, "groupnorm"]], "LazyInstanceNorm1d": [[1411, "lazyinstancenorm1d"]], "MSELoss": [[1420, "mseloss"]], "InstanceNorm3d": [[1394, "instancenorm3d"], [742, "instancenorm3d"]], "Flatten": [[1375, "flatten"]], "Linear": [[1416, "linear"], [745, "linear"], [753, "linear"], [722, "linear"], [721, "linear"]], "LazyBatchNorm2d": [[1403, "lazybatchnorm2d"]], "Hardswish": [[1387, "hardswish"], [739, "hardswish"]], "LazyConvTranspose2d": [[1409, "lazyconvtranspose2d"]], "Hardshrink": [[1385, "hardshrink"]], "GRU": [[1381, "gru"], [749, "gru"]], "LSTM": [[1399, "lstm"], [751, "lstm"], [723, "lstm"]], "LPPool1d": [[1397, "lppool1d"]], "LazyInstanceNorm3d": [[1413, "lazyinstancenorm3d"]], "LazyConv1d": [[1405, "lazyconv1d"]], "HingeEmbeddingLoss": [[1389, "hingeembeddingloss"]], "GaussianNLLLoss": [[1383, "gaussiannllloss"]], "Fold": [[1376, "fold"]], "GELU": [[1379, "gelu"]], "KLDivLoss": [[1395, "kldivloss"]], "FeatureAlphaDropout": [[1374, "featurealphadropout"]], "LogSoftmax": [[1419, "logsoftmax"]], "LPPool2d": [[1398, "lppool2d"]], "LSTMCell": [[1400, "lstmcell"], [752, "lstmcell"]], "FractionalMaxPool2d": [[1377, "fractionalmaxpool2d"]], "LazyBatchNorm3d": [[1404, "lazybatchnorm3d"]], "L1Loss": [[1396, "l1loss"]], "Embedding": [[1372, "embedding"], [734, "embedding"]], "LazyConv3d": [[1407, "lazyconv3d"]], "LeakyReLU": [[1415, "leakyrelu"], [744, "leakyrelu"]], "LayerNorm": [[1401, "layernorm"], [743, "layernorm"]], "LogSigmoid": [[1418, "logsigmoid"]], "HuberLoss": [[1390, "huberloss"]], "GLU": [[1380, "glu"]], "ConvTranspose1d": [[1360, "convtranspose1d"], [730, "convtranspose1d"]], "Conv3d": [[1359, "conv3d"], [720, "conv3d"], [729, "conv3d"]], "torch.nan_to_num": [[1323, "torch-nan-to-num"]], "AvgPool2d": [[1343, "avgpool2d"]], "torch.nanmean": [[1324, "torch-nanmean"]], "torch.neg": [[1331, "torch-neg"]], "torch.narrow": [[1328, "torch-narrow"]], "Dropout1d": [[1368, "dropout1d"]], "torch.nextafter": [[1333, "torch-nextafter"]], "AdaptiveAvgPool3d": [[1336, "adaptiveavgpool3d"]], "AdaptiveMaxPool1d": [[1338, "adaptivemaxpool1d"]], "AvgPool1d": [[1342, "avgpool1d"]], "ConvTranspose3d": [[1362, "convtranspose3d"], [732, "convtranspose3d"]], "CosineSimilarity": [[1364, "cosinesimilarity"]], "ConstantPad3d": [[1356, "constantpad3d"]], "torch.ne": [[1330, "torch-ne"]], "AdaptiveAvgPool1d": [[1334, "adaptiveavgpool1d"]], "DataParallel": [[1366, "dataparallel"]], "Dropout2d": [[1369, "dropout2d"]], "Dropout3d": [[1370, "dropout3d"]], "BCELoss": [[1345, "bceloss"]], "CrossEntropyLoss": [[1365, "crossentropyloss"]], "AdaptiveLogSoftmaxWithLoss": [[1337, "adaptivelogsoftmaxwithloss"]], "ELU": [[1371, "elu"], [733, "elu"]], "CELU": [[1351, "celu"]], "AdaptiveAvgPool2d": [[1335, "adaptiveavgpool2d"]], "CosineEmbeddingLoss": [[1363, "cosineembeddingloss"]], "CTCLoss": [[1352, "ctcloss"]], "AlphaDropout": [[1341, "alphadropout"]], "BatchNorm3d": [[1349, "batchnorm3d"], [726, "batchnorm3d"]], "Conv2d": [[1358, "conv2d"], [719, "conv2d"], [728, "conv2d"]], "torch.nanquantile": [[1326, "torch-nanquantile"]], "AdaptiveMaxPool3d": [[1340, "adaptivemaxpool3d"]], "AdaptiveMaxPool2d": [[1339, "adaptivemaxpool2d"]], "torch.nanmedian": [[1325, "torch-nanmedian"]], "AvgPool3d": [[1344, "avgpool3d"]], "ConstantPad1d": [[1354, "constantpad1d"]], "BatchNorm2d": [[1348, "batchnorm2d"], [725, "batchnorm2d"]], "torch.nansum": [[1327, "torch-nansum"]], "BCEWithLogitsLoss": [[1346, "bcewithlogitsloss"]], "torch.negative": [[1332, "torch-negative"]], "Dropout": [[1367, "dropout"]], "Bilinear": [[1350, "bilinear"]], "torch.narrow_copy": [[1329, "torch-narrow-copy"]], "ChannelShuffle": [[1353, "channelshuffle"]], "ConvTranspose2d": [[1361, "convtranspose2d"], [731, "convtranspose2d"]], "ConstantPad2d": [[1355, "constantpad2d"]], "BatchNorm1d": [[1347, "batchnorm1d"]], "Conv1d": [[1357, "conv1d"], [727, "conv1d"]], "MaxUnpool3d": [[1427, "maxunpool3d"]], "MultiMarginLoss": [[1434, "multimarginloss"]], "ReplicationPad3d": [[1455, "replicationpad3d"]], "ParameterDict": [[1439, "parameterdict"]], "PairwiseDistance": [[1438, "pairwisedistance"]], "ReplicationPad2d": [[1454, "replicationpad2d"]], "MaxPool3d": [[1424, "maxpool3d"]], "MaxUnpool1d": [[1425, "maxunpool1d"]], "SELU": [[1456, "selu"]], "ReLU": [[1448, "relu"]], "MaxUnpool2d": [[1426, "maxunpool2d"]], "MaxPool2d": [[1423, "maxpool2d"]], "PixelUnshuffle": [[1442, "pixelunshuffle"]], "ReflectionPad3d": [[1452, "reflectionpad3d"]], "RReLU": [[1447, "rrelu"]], "ReLU6": [[1449, "relu6"], [747, "relu6"]], "Sequential": [[1457, "sequential"]], "ReflectionPad1d": [[1450, "reflectionpad1d"]], "MarginRankingLoss": [[1421, "marginrankingloss"]], "Softmin": [[1464, "softmin"]], "ReplicationPad1d": [[1453, "replicationpad1d"]], "Module": [[1429, "module"]], "SoftMarginLoss": [[1461, "softmarginloss"]], "Softshrink": [[1466, "softshrink"]], "MultiheadAttention": [[1435, "multiheadattention"], [724, "multiheadattention"]], "RNNBase": [[1445, "rnnbase"]], "NLLLoss": [[1436, "nllloss"]], "SmoothL1Loss": [[1460, "smoothl1loss"]], "PixelShuffle": [[1441, "pixelshuffle"]], "Softmax2d": [[1463, "softmax2d"]], "RNN": [[1444, "rnn"]], "ModuleDict": [[1430, "moduledict"]], "Mish": [[1428, "mish"]], "MaxPool1d": [[1422, "maxpool1d"]], "Softmax": [[1462, "softmax"]], "PoissonNLLLoss": [[1443, "poissonnllloss"]], "ParameterList": [[1440, "parameterlist"]], "SiLU": [[1458, "silu"]], "MultiLabelSoftMarginLoss": [[1433, "multilabelsoftmarginloss"]], "MultiLabelMarginLoss": [[1432, "multilabelmarginloss"]], "Softsign": [[1467, "softsign"]], "Tanh": [[1469, "tanh"]], "Sigmoid": [[1459, "sigmoid"], [748, "sigmoid"]], "RNNCell": [[1446, "rnncell"], [754, "rnncell"]], "ReflectionPad2d": [[1451, "reflectionpad2d"]], "Softplus": [[1465, "softplus"]], "SyncBatchNorm": [[1468, "syncbatchnorm"]], "ModuleList": [[1431, "modulelist"]], "PReLU": [[1437, "prelu"]], "torch.linalg.lu_factor_ex": [[1244, "torch-linalg-lu-factor-ex"]], "torch.linalg.svdvals": [[1260, "torch-linalg-svdvals"]], "torch.logaddexp": [[1273, "torch-logaddexp"]], "torch.linalg.multi_dot": [[1251, "torch-linalg-multi-dot"]], "torch.linalg.matmul": [[1246, "torch-linalg-matmul"]], "torch.linalg.tensorinv": [[1261, "torch-linalg-tensorinv"]], "torch.linalg.inv_ex": [[1237, "torch-linalg-inv-ex"]], "torch.linalg.slogdet": [[1255, "torch-linalg-slogdet"]], "torch.linalg.solve_triangular": [[1258, "torch-linalg-solve-triangular"]], "torch.log1p": [[1271, "torch-log1p"]], "torch.linalg.vander": [[1263, "torch-linalg-vander"]], "torch.linalg.matrix_power": [[1249, "torch-linalg-matrix-power"]], "torch.linalg.pinv": [[1253, "torch-linalg-pinv"]], "torch.linalg.solve": [[1256, "torch-linalg-solve"]], "torch.log10": [[1270, "torch-log10"]], "torch.linalg.matrix_norm": [[1248, "torch-linalg-matrix-norm"]], "torch.load": [[1267, "torch-load"]], "torch.linalg.ldl_factor_ex": [[1239, "torch-linalg-ldl-factor-ex"]], "torch.linalg.eig": [[1231, "torch-linalg-eig"]], "torch.linalg.diagonal": [[1230, "torch-linalg-diagonal"]], "torch.linalg.cholesky_ex": [[1226, "torch-linalg-cholesky-ex"]], "torch.linalg.svd": [[1259, "torch-linalg-svd"]], "torch.linalg.vecdot": [[1264, "torch-linalg-vecdot"]], "torch.linalg.ldl_solve": [[1240, "torch-linalg-ldl-solve"]], "torch.linalg.eigvalsh": [[1234, "torch-linalg-eigvalsh"]], "torch.linalg.matrix_exp": [[1247, "torch-linalg-matrix-exp"]], "torch.linalg.lstsq": [[1241, "torch-linalg-lstsq"]], "torch.linalg.cross": [[1228, "torch-linalg-cross"]], "torch.linalg.eigh": [[1232, "torch-linalg-eigh"]], "torch.linalg.lu_solve": [[1245, "torch-linalg-lu-solve"]], "torch.linalg.eigvals": [[1233, "torch-linalg-eigvals"]], "torch.linalg.solve_ex": [[1257, "torch-linalg-solve-ex"]], "torch.linalg.cholesky": [[1225, "torch-linalg-cholesky"]], "torch.linalg.lu_factor": [[1243, "torch-linalg-lu-factor"]], "torch.linalg.qr": [[1254, "torch-linalg-qr"]], "torch.lobpcg": [[1268, "torch-lobpcg"]], "torch.linalg.ldl_factor": [[1238, "torch-linalg-ldl-factor"]], "torch.linalg.det": [[1229, "torch-linalg-det"]], "torch.linalg.lu": [[1242, "torch-linalg-lu"]], "torch.log": [[1269, "torch-log"]], "torch.linalg.cond": [[1227, "torch-linalg-cond"]], "torch.linalg.tensorsolve": [[1262, "torch-linalg-tensorsolve"]], "torch.linalg.householder_product": [[1235, "torch-linalg-householder-product"]], "torch.linalg.matrix_rank": [[1250, "torch-linalg-matrix-rank"]], "torch.linspace": [[1266, "torch-linspace"]], "torch.log2": [[1272, "torch-log2"]], "torch.linalg.vector_norm": [[1265, "torch-linalg-vector-norm"]], "torch.linalg.inv": [[1236, "torch-linalg-inv"]], "torch.linalg.norm": [[1252, "torch-linalg-norm"]], "torch.index_add": [[1166, "torch-index-add"]], "torch.geqrf": [[1140, "torch-geqrf"]], "torch.is_conj": [[1175, "torch-is-conj"]], "torch.func.vjp": [[1135, "torch-func-vjp"]], "torch.index_reduce": [[1168, "torch-index-reduce"]], "torch.hsplit": [[1158, "torch-hsplit"]], "torch.imag": [[1165, "torch-imag"]], "torch.get_num_interop_threads": [[1145, "torch-get-num-interop-threads"]], "torch.func.replace_all_batch_norm_modules_": [[1133, "torch-func-replace-all-batch-norm-modules"]], "torch.get_float32_matmul_precision": [[1144, "torch-get-float32-matmul-precision"]], "torch.index_copy": [[1167, "torch-index-copy"]], "torch.hstack": [[1160, "torch-hstack"]], "torch.gcd": [[1138, "torch-gcd"]], "torch.func.jacfwd": [[1129, "torch-func-jacfwd"]], "torch.gather": [[1137, "torch-gather"]], "torch.get_num_threads": [[1146, "torch-get-num-threads"]], "torch.func.grad_and_value": [[1127, "torch-func-grad-and-value"]], "torch.get_default_dtype": [[1142, "torch-get-default-dtype"]], "torch.get_deterministic_debug_mode": [[1143, "torch-get-deterministic-debug-mode"]], "torch.gt": [[1151, "torch-gt"]], "torch.greater_equal": [[1150, "torch-greater-equal"]], "torch.get_rng_state": [[1147, "torch-get-rng-state"]], "torch.hann_window": [[1153, "torch-hann-window"]], "torch.igamma": [[1163, "torch-igamma"]], "torch.i0": [[1162, "torch-i0"]], "torch.greater": [[1149, "torch-greater"]], "torch.histogram": [[1156, "torch-histogram"]], "torch.func.jacrev": [[1130, "torch-func-jacrev"]], "torch.hspmm": [[1159, "torch-hspmm"]], "torch.histc": [[1155, "torch-histc"]], "torch.func.stack_module_state": [[1134, "torch-func-stack-module-state"]], "torch.ger": [[1141, "torch-ger"]], "torch.hamming_window": [[1152, "torch-hamming-window"]], "inference_mode": [[1170, "inference-mode"]], "torch.igammac": [[1164, "torch-igammac"]], "torch.func.jvp": [[1131, "torch-func-jvp"]], "torch.histogramdd": [[1157, "torch-histogramdd"]], "torch.ge": [[1139, "torch-ge"]], "torch.index_select": [[1169, "torch-index-select"]], "torch.hypot": [[1161, "torch-hypot"]], "torch.func.vmap": [[1136, "torch-func-vmap"]], "torch.func.hessian": [[1128, "torch-func-hessian"]], "torch.heaviside": [[1154, "torch-heaviside"]], "torch.initial_seed": [[1171, "torch-initial-seed"]], "torch.inner": [[1172, "torch-inner"]], "torch.gradient": [[1148, "torch-gradient"]], "torch.inverse": [[1173, "torch-inverse"]], "torch.func.linearize": [[1132, "torch-func-linearize"]], "torch.is_complex": [[1174, "torch-is-complex"]], "torch.monitor": [[1881, "torch-monitor"]], "Named Tensors operator coverage": [[1884, "named-tensors-operator-coverage"]], "Supported Operations": [[1884, "id1"]], "Keeps input names": [[1884, "keeps-input-names"]], "Removes dimensions": [[1884, "removes-dimensions"]], "Unifies names from inputs": [[1884, "unifies-names-from-inputs"]], "Permutes dimensions": [[1884, "permutes-dimensions"]], "Contracts away dims": [[1884, "contracts-away-dims"]], "Factory functions": [[1884, "factory-functions"]], "out function and in-place variants": [[1884, "out-function-and-in-place-variants"]], "torch.nn.functional": [[1888, "torch-nn-functional"]], "Convolution functions": [[1888, "convolution-functions"]], "Pooling functions": [[1888, "pooling-functions"]], "Attention Mechanisms": [[1888, "attention-mechanisms"]], "Non-linear activation functions": [[1888, "non-linear-activation-functions"]], "Linear functions": [[1888, "linear-functions"]], "Dropout functions": [[1888, "dropout-functions"]], "Sparse functions": [[1888, "sparse-functions"]], "Distance functions": [[1888, "distance-functions"]], "Loss functions": [[1888, "loss-functions"]], "Vision functions": [[1888, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1888, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1888, "data-parallel"]], "torch.zeros_like": [[1865, "torch-zeros-like"]], "torch.zeros": [[1864, "torch-zeros"]], "TorchScript Builtins": [[1869, "torchscript-builtins"]], "Supported Tensor Methods": [[1869, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1869, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1869, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1869, "python-built-in-functions"]], "math Module": [[1869, "math-module"]], "torch.nn.init": [[1889, "torch-nn-init"]], "CUDA Automatic Mixed Precision examples": [[1890, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1890, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1890, "working-with-unscaled-gradients"]], "Gradient clipping": [[1890, "gradient-clipping"]], "Working with Scaled Gradients": [[1890, "working-with-scaled-gradients"]], "Gradient accumulation": [[1890, "gradient-accumulation"]], "Gradient penalty": [[1890, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1890, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1890, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1890, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1890, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1890, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1890, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1890, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1890, "functions-that-need-a-particular-dtype"]], "torch.masked": [[1878, "torch-masked"]], "Motivation": [[1878, "motivation"], [1944, "motivation"], [1945, "motivation"]], "What is a MaskedTensor?": [[1878, "what-is-a-maskedtensor"]], "Supported Operators": [[1878, "supported-operators"]], "Unary Operators": [[1878, "unary-operators"]], "Binary Operators": [[1878, "binary-operators"]], "Reductions": [[1878, "reductions"]], "View and select functions": [[1878, "view-and-select-functions"]], "JIT Utils - torch.utils.jit": [[1874, "module-torch.utils.jit"]], "Distributed Data Parallel": [[1895, "distributed-data-parallel"]], "Example": [[1895, "example"], [1896, "example"]], "Internal Design": [[1895, "internal-design"]], "Implementation": [[1895, "implementation"], [1925, "implementation"]], "ProcessGroup": [[1895, "processgroup"]], "TorchDynamo DDPOptimizer": [[1895, "id1"]], "MPS backend": [[1903, "mps-backend"]], "Windows FAQ": [[1908, "windows-faq"]], "Building from source": [[1908, "building-from-source"]], "Include optional components": [[1908, "include-optional-components"]], "Speeding CUDA build for Windows": [[1908, "speeding-cuda-build-for-windows"]], "One key install script": [[1908, "one-key-install-script"]], "Extension": [[1908, "extension"]], "CFFI Extension": [[1908, "cffi-extension"]], "Cpp Extension": [[1908, "cpp-extension"]], "Installation": [[1908, "installation"]], "Package not found in win-32 channel.": [[1908, "package-not-found-in-win-32-channel"]], "Import error": [[1908, "import-error"]], "Usage (multiprocessing)": [[1908, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1908, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1908, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1908, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1908, "cuda-ipc-operations"]], "torch.nn": [[1887, "module-torch.nn"], [1887, "id1"]], "Containers": [[1887, "containers"]], "Convolution Layers": [[1887, "convolution-layers"]], "Pooling layers": [[1887, "pooling-layers"]], "Padding Layers": [[1887, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1887, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1887, "non-linear-activations-other"]], "Normalization Layers": [[1887, "normalization-layers"]], "Recurrent Layers": [[1887, "recurrent-layers"]], "Transformer Layers": [[1887, "transformer-layers"]], "Linear Layers": [[1887, "linear-layers"]], "Dropout Layers": [[1887, "dropout-layers"]], "Sparse Layers": [[1887, "sparse-layers"]], "Distance Functions": [[1887, "distance-functions"]], "Loss Functions": [[1887, "loss-functions"]], "Vision Layers": [[1887, "vision-layers"]], "Shuffle Layers": [[1887, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1887, "module-torch.nn.parallel"]], "Utilities": [[1887, "module-torch.nn.utils"], [1935, "utilities"]], "Quantized Functions": [[1887, "quantized-functions"]], "Lazy Modules Initialization": [[1887, "lazy-modules-initialization"]], "TorchScript Language Reference": [[1871, "torchscript-language-reference"], [1870, "torchscript-language-reference"]], "Terminology": [[1871, "terminology"]], "Type System": [[1871, "id1"]], "TorchScript Types": [[1871, "torchscript-types"]], "Meta Types": [[1871, "meta-types"]], "Any Type": [[1871, "any-type"]], "Operators Supported for Any Type": [[1871, "operators-supported-for-any-type"]], "Design Notes": [[1871, "design-notes"], [1923, "design-notes"]], "Primitive Types": [[1871, "primitive-types"]], "Structural Types": [[1871, "structural-types"]], "Nominal Types": [[1871, "nominal-types"]], "Built-in Class": [[1871, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1871, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1871, "custom-class"]], "Enum Type": [[1871, "enum-type"]], "TorchScript Module Class": [[1871, "torchscript-module-class"]], "Module Instance Class": [[1871, "module-instance-class"]], "Type Annotation": [[1871, "type-annotation"]], "When to Annotate Types": [[1871, "when-to-annotate-types"]], "Annotate Function Signature": [[1871, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1871, "annotate-variables-and-data-attributes"]], "Local Variables": [[1871, "local-variables"]], "Instance Data Attributes": [[1871, "instance-data-attributes"]], "Type Annotation APIs": [[1871, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1871, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1871, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1871, "torchscript-type-system-definition"]], "Unsupported Typing Constructs": [[1871, "unsupported-typing-constructs"], [1870, "unsupported-typing-constructs"]], "Expressions": [[1871, "expressions"], [1870, "expressions"]], "Arithmetic Conversions": [[1871, "arithmetic-conversions"]], "Atoms": [[1871, "atoms"]], "Identifiers": [[1871, "identifiers"]], "Literals": [[1871, "literals"], [1870, "literals"]], "Parenthesized Forms": [[1871, "parenthesized-forms"]], "List and Dictionary Displays": [[1871, "list-and-dictionary-displays"]], "Primaries": [[1871, "primaries"]], "Attribute References": [[1871, "attribute-references"]], "Subscriptions": [[1871, "subscriptions"]], "Slicings": [[1871, "slicings"]], "Calls": [[1871, "calls"]], "Power Operator": [[1871, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1871, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1871, "binary-arithmetic-operations"]], "Shifting Operations": [[1871, "shifting-operations"]], "Binary Bitwise Operations": [[1871, "binary-bitwise-operations"]], "Comparisons": [[1871, "comparisons"], [1941, "comparisons"]], "Value Comparisons": [[1871, "value-comparisons"]], "Membership Test Operations": [[1871, "membership-test-operations"]], "Identity Comparisons": [[1871, "identity-comparisons"]], "Boolean Operations": [[1871, "boolean-operations"]], "Conditional Expressions": [[1871, "conditional-expressions"]], "Expression Lists": [[1871, "expression-lists"]], "Simple Statements": [[1871, "simple-statements"]], "Expression Statements": [[1871, "expression-statements"]], "Assignment Statements": [[1871, "assignment-statements"]], "Augmented Assignment Statements": [[1871, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1871, "annotated-assignment-statements"]], "The raise Statement": [[1871, "the-raise-statement"]], "The assert Statement": [[1871, "the-assert-statement"]], "The return Statement": [[1871, "the-return-statement"]], "The del Statement": [[1871, "the-del-statement"]], "The pass Statement": [[1871, "the-pass-statement"]], "The print Statement": [[1871, "the-print-statement"]], "The break Statement": [[1871, "the-break-statement"]], "The continue Statement:": [[1871, "the-continue-statement"]], "Compound Statements": [[1871, "compound-statements"]], "The if Statement": [[1871, "the-if-statement"]], "Basic if/else Statement": [[1871, "basic-if-else-statement"]], "Ternary if/else Statement": [[1871, "ternary-if-else-statement"]], "The while Statement": [[1871, "the-while-statement"]], "The for-in Statement": [[1871, "the-for-in-statement"]], "The with Statement": [[1871, "the-with-statement"]], "The tuple Statement": [[1871, "the-tuple-statement"]], "The getattr Statement": [[1871, "the-getattr-statement"]], "The hasattr Statement": [[1871, "the-hasattr-statement"]], "The zip Statement": [[1871, "the-zip-statement"]], "The enumerate Statement": [[1871, "the-enumerate-statement"]], "Python Values": [[1871, "python-values"]], "Resolution Rules": [[1871, "resolution-rules"]], "Python Built-in Functions Support": [[1871, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1871, "id5"]], "Python Built-in Values Support": [[1871, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1871, "id6"]], "torch.* APIs": [[1871, "torch-apis"]], "Remote Procedure Calls": [[1871, "remote-procedure-calls"]], "Asynchronous Execution": [[1871, "asynchronous-execution"]], "Type Annotations": [[1871, "type-annotations"]], "Meta Programming": [[1871, "meta-programming"]], "Type Refinement": [[1871, "type-refinement"]], "TorchDynamo-based ONNX Exporter": [[1910, "torchdynamo-based-onnx-exporter"], [1909, "torchdynamo-based-onnx-exporter"]], "Dependencies": [[1910, "dependencies"]], "A simple example": [[1910, "a-simple-example"]], "Inspecting the ONNX model using GUI": [[1910, "inspecting-the-onnx-model-using-gui"]], "Diagnosing issues with SARIF": [[1910, "diagnosing-issues-with-sarif"]], "ONNX Diagnostic SARIF Rules": [[1910, null]], "torch.utils.mobile_optimizer": [[1879, "torch-utils-mobile-optimizer"]], "torch.xlogy": [[1863, "torch-xlogy"]], "PyTorch documentation": [[1867, "pytorch-documentation"]], "Community": [[1867, null]], "Developer Notes": [[1867, null]], "Language Bindings": [[1867, null]], "Python API": [[1867, null], [1912, "module-torch.onnx"]], "Libraries": [[1867, null]], "Indices and tables": [[1867, "indices-and-tables"]], "torch.mps": [[1882, "module-torch.mps"]], "MPS Profiler": [[1882, "mps-profiler"]], "MPS Event": [[1882, "mps-event"]], "Broadcasting semantics": [[1892, "broadcasting-semantics"]], "General semantics": [[1892, "general-semantics"]], "In-place semantics": [[1892, "in-place-semantics"]], "Backwards compatibility": [[1892, "backwards-compatibility"]], "torch.linalg": [[1876, "torch-linalg"]], "Matrix Properties": [[1876, "matrix-properties"]], "Decompositions": [[1876, "decompositions"]], "Solvers": [[1876, "solvers"]], "Inverses": [[1876, "inverses"]], "Matrix Functions": [[1876, "matrix-functions"]], "Matrix Products": [[1876, "matrix-products"]], "Tensor Operations": [[1876, "tensor-operations"]], "Misc": [[1876, "misc"]], "Experimental Functions": [[1876, "experimental-functions"]], "TorchScript": [[1868, "torchscript"]], "Creating TorchScript Code": [[1868, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1868, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1868, "torchscript-language"]], "Built-in Functions and Modules": [[1868, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1868, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1868, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1868, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1868, "disable-jit-for-debugging"]], "Inspecting Code": [[1868, "inspecting-code"]], "Interpreting Graphs": [[1868, "interpreting-graphs"]], "Tracer": [[1868, "tracer"]], "Tracing Edge Cases": [[1868, "tracing-edge-cases"]], "Automatic Trace Checking": [[1868, "automatic-trace-checking"]], "Tracer Warnings": [[1868, "tracer-warnings"]], "Frequently Asked Questions": [[1868, "frequently-asked-questions"], [1898, "frequently-asked-questions"], [7, "frequently-asked-questions"], [1912, "frequently-asked-questions"], [1946, "frequently-asked-questions"], [1918, "frequently-asked-questions"]], "Known Issues": [[1868, "known-issues"]], "Appendix": [[1868, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1868, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1868, "modules"], [1902, "modules"]], "Functions": [[1868, "functions"], [1870, "functions"], [1957, "functions"], [1912, "functions"], [1928, "functions"]], "TorchScript Classes": [[1868, "torchscript-classes"], [1870, "id2"]], "Attributes": [[1868, "attributes"]], "Constants": [[1868, "constants"]], "Variables": [[1868, "variables"], [1870, "variables"], [1949, "variables"]], "Fusion Backends": [[1868, "fusion-backends"]], "References": [[1868, "references"], [46, "references"]], "Serialization semantics": [[1907, "serialization-semantics"]], "Table of Contents": [[1907, "table-of-contents"]], "Saving and loading tensors": [[1907, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1907, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1907, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1907, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1907, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1907, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1907, "torch-full-always-inferring-a-float-dtype"]], "Utility functions": [[1907, "utility-functions"], [1921, "utility-functions"]], "torch.onnx": [[1909, "torch-onnx"]], "TorchScript-based ONNX Exporter": [[1909, "torchscript-based-onnx-exporter"], [1912, "torchscript-based-onnx-exporter"]], "Contributing / Developing": [[1909, "contributing-developing"]], "Extending torch.func with autograd.Function": [[1897, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1897, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1897, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1897, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1897, "limitations-and-gotchas"]], "torch.vmap() Support": [[1897, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1897, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1897, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1897, "torch-func-jvp-support"]], "torch.hub": [[1866, "torch-hub"]], "Publishing models": [[1866, "publishing-models"]], "How to implement an entrypoint?": [[1866, "how-to-implement-an-entrypoint"]], "Important Notice": [[1866, "important-notice"]], "Loading models from Hub": [[1866, "loading-models-from-hub"]], "Running a loaded model:": [[1866, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1866, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1866, "caching-logic"]], "Known limitations:": [[1866, "known-limitations"]], "CUDA semantics": [[1894, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1894, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1894, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1894, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1894, "asynchronous-execution"]], "CUDA streams": [[1894, "cuda-streams"]], "Stream semantics of backward passes": [[1894, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1894, "bc-note-using-grads-on-the-default-stream"]], "Memory management": [[1894, "memory-management"], [1900, "memory-management"], [17, "memory-management"]], "Environment variables": [[1894, "environment-variables"]], "Using custom memory allocators for CUDA": [[1894, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1894, "cublas-workspaces"]], "cuFFT plan cache": [[1894, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1894, "just-in-time-compilation"]], "Best practices": [[1894, "best-practices"]], "Device-agnostic code": [[1894, "device-agnostic-code"]], "Use pinned memory buffers": [[1894, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1894, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1894, "cuda-graphs"]], "Why CUDA Graphs?": [[1894, "why-cuda-graphs"]], "PyTorch API": [[1894, "pytorch-api"]], "Constraints": [[1894, "constraints"], [30, "module-torch.distributions.constraints"]], "Non-constraints": [[1894, "non-constraints"]], "Whole-network capture": [[1894, "whole-network-capture"]], "Partial-network capture": [[1894, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1894, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1894, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1894, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1894, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1894, "id5"]], "Graph memory management": [[1894, "graph-memory-management"]], "Sharing memory across captures": [[1894, "sharing-memory-across-captures"]], "Extending PyTorch": [[1896, "extending-pytorch"]], "Extending torch.autograd": [[1896, "extending-torch-autograd"]], "When to use": [[1896, "when-to-use"]], "When not to use": [[1896, "when-not-to-use"]], "How to use": [[1896, "how-to-use"]], "Combined or separate forward() and setup_context()": [[1896, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1896, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1896, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1896, "extending-torch-nn"]], "Adding a Module": [[1896, "adding-a-module"]], "Extending torch Python API": [[1896, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1896, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1896, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1896, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1896, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1896, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1896, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1896, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1896, "writing-custom-c-extensions"]], "torch._logging": [[1877, "torch-logging"]], "torch.where": [[1862, "torch-where"]], "Named Tensors": [[1885, "named-tensors"]], "Creating named tensors": [[1885, "creating-named-tensors"]], "Named dimensions": [[1885, "named-dimensions"]], "Name propagation semantics": [[1885, "name-propagation-semantics"]], "match semantics": [[1885, "match-semantics"]], "Basic name inference rules": [[1885, "basic-name-inference-rules"]], "Explicit alignment by names": [[1885, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1885, "manipulating-dimensions"]], "Autograd support": [[1885, "autograd-support"]], "Currently supported operations and subsystems": [[1885, "currently-supported-operations-and-subsystems"]], "Operators": [[1885, "operators"]], "Subsystems": [[1885, "subsystems"]], "Named tensor API reference": [[1885, "named-tensor-api-reference"]], "torch.library": [[1875, "module-torch.library"]], "Reproducibility": [[1906, "reproducibility"]], "Controlling sources of randomness": [[1906, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1906, "pytorch-random-number-generator"]], "Python": [[1906, "python"]], "Random number generators in other libraries": [[1906, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1906, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1906, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1906, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1906, "cuda-rnn-and-lstm"]], "DataLoader": [[1906, "dataloader"]], "Multiprocessing package - torch.multiprocessing": [[1883, "module-torch.multiprocessing"]], "Strategy management": [[1883, "strategy-management"]], "Sharing CUDA tensors": [[1883, "sharing-cuda-tensors"]], "Sharing strategies": [[1883, "sharing-strategies"]], "File descriptor - file_descriptor": [[1883, "file-descriptor-file-descriptor"]], "File system - file_system": [[1883, "file-system-file-system"]], "Spawning subprocesses": [[1883, "spawning-subprocesses"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1898, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1898, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1898, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1898, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1898, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "torch.utils.model_zoo": [[1880, "torch-utils-model-zoo"]], "torch.nested": [[1886, "module-torch.nested"]], "Construction": [[1886, "construction"], [1927, "construction"]], "size": [[1886, "size"]], "unbind": [[1886, "unbind"]], "Nested tensor constructor and conversion functions": [[1886, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1886, "supported-operations"], [1927, "supported-operations"]], "HIP (ROCm) semantics": [[1900, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1900, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1900, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1900, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[1900, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1900, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1900, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1900, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1900, "enabling-kernel-asserts"]], "Numerical accuracy": [[1905, "numerical-accuracy"]], "Batched computations or slice computations": [[1905, "batched-computations-or-slice-computations"]], "Extremal values": [[1905, "extremal-values"]], "Linear algebra (torch.linalg)": [[1905, "linear-algebra-torch-linalg"]], "Non-finite values": [[1905, "non-finite-values"]], "Extremal values in linalg": [[1905, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1905, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1905, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1905, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "TorchScript Unsupported PyTorch Constructs": [[1873, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1873, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1873, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1873, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1873, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1873, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1873, "pytorch-unsupported-modules-and-classes"]], "Gradcheck mechanics": [[1899, "gradcheck-mechanics"]], "Notations and background information": [[1899, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1899, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1899, "real-to-real-functions"]], "Default real input numerical evaluation": [[1899, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1899, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1899, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1899, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1899, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1899, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1899, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1899, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1899, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1899, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1899, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1899, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1899, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1899, "gradgradcheck-implementation"]], "Autograd mechanics": [[1891, "autograd-mechanics"]], "How autograd encodes the history": [[1891, "how-autograd-encodes-the-history"]], "Saved tensors": [[1891, "saved-tensors"]], "Gradients for non-differentiable functions": [[1891, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[1891, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [1935, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[1891, "setting-requires-grad"]], "Grad Modes": [[1891, "grad-modes"]], "Default Mode (Grad Mode)": [[1891, "default-mode-grad-mode"]], "No-grad Mode": [[1891, "no-grad-mode"]], "Inference Mode": [[1891, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1891, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1891, "in-place-operations-with-autograd"]], "In-place correctness checks": [[1891, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[1891, "multithreaded-autograd"]], "Concurrency on CPU": [[1891, "concurrency-on-cpu"]], "Non-determinism": [[1891, "non-determinism"]], "Graph retaining": [[1891, "graph-retaining"]], "Thread Safety on Autograd Node": [[1891, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1891, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1891, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1891, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1891, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1891, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1891, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1891, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1891, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1891, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1891, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1891, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1891, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1891, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1891, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1891, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1891, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "CPU threading and TorchScript inference": [[1893, "cpu-threading-and-torchscript-inference"]], "Build options": [[1893, "build-options"]], "Runtime API": [[1893, "runtime-api"]], "Tuning the number of threads": [[1893, "tuning-the-number-of-threads"]], "Multiprocessing best practices": [[1904, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1904, "cuda-in-multiprocessing"]], "Best practices and tips": [[1904, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1904, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1904, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1904, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1904, "hogwild"]], "CPU in multiprocessing": [[1904, "cpu-in-multiprocessing"]], "CPU oversubscription": [[1904, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[1904, "avoid-cpu-oversubscription"]], "Types": [[1870, "supported-type"], [1912, "types"]], "Default Types": [[1870, "default-types"]], "Optional Type Refinement": [[1870, "optional-type-refinement"]], "TorchScript Enums": [[1870, "id4"]], "Named Tuples": [[1870, "named-tuples"]], "Iterables": [[1870, "iterables"]], "List Construction": [[1870, "list-construction"]], "Tuple Construction": [[1870, "tuple-construction"]], "Dict Construction": [[1870, "dict-construction"]], "Arithmetic Operators": [[1870, "arithmetic-operators"]], "Comparison Operators": [[1870, "comparison-operators"]], "Logical Operators": [[1870, "logical-operators"]], "Subscripts and Slicing": [[1870, "subscripts-and-slicing"]], "Function Calls": [[1870, "function-calls"]], "Method Calls": [[1870, "method-calls"]], "Ternary Expressions": [[1870, "ternary-expressions"]], "Casts": [[1870, "casts"]], "Accessing Module Parameters": [[1870, "accessing-module-parameters"]], "Statements": [[1870, "statements"]], "Simple Assignments": [[1870, "simple-assignments"]], "Pattern Matching Assignments": [[1870, "pattern-matching-assignments"]], "Print Statements": [[1870, "print-statements"]], "If Statements": [[1870, "if-statements"]], "While Loops": [[1870, "while-loops"]], "For loops with range": [[1870, "for-loops-with-range"]], "For loops over tuples": [[1870, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1870, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1870, "break-and-continue"]], "Return": [[1870, "return"]], "Variable Resolution": [[1870, "variable-resolution"]], "Use of Python Values": [[1870, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[1870, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1870, "python-defined-constants"]], "Module Attributes": [[1870, "module-attributes"]], "Python Language Reference Coverage": [[1872, "python-language-reference-coverage"]], "Features for large-scale deployments": [[1901, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1901, "fleet-wide-operator-profiling"]], "API usage logging": [[1901, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1901, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1901, "build-environment-considerations"]], "Common extension points": [[1901, "common-extension-points"]], "A Simple Custom Module": [[1902, "a-simple-custom-module"]], "Modules as Building Blocks": [[1902, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1902, "neural-network-training-with-modules"]], "Module State": [[1902, "module-state"]], "Module Initialization": [[1902, "module-initialization"]], "Module Hooks": [[1902, "module-hooks"]], "Advanced Features": [[1902, "advanced-features"]], "Distributed Training": [[1902, "distributed-training"]], "Profiling Performance": [[1902, "profiling-performance"]], "Improving Performance with Quantization": [[1902, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1902, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1902, "parametrizations"]], "Transforming Modules with FX": [[1902, "transforming-modules-with-fx"]], "strict_fusion": [[1210, "strict-fusion"]], "torch.isclose": [[1184, "torch-isclose"]], "torch.jit.unused": [[1213, "torch-jit-unused"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1176, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.jit.freeze": [[1199, "torch-jit-freeze"]], "torch.jit.ignore": [[1200, "torch-jit-ignore"]], "torch.jit.trace": [[1211, "torch-jit-trace"]], "torch.is_tensor": [[1182, "torch-is-tensor"]], "torch.jit.save": [[1206, "torch-jit-save"]], "torch.is_warn_always_enabled": [[1183, "torch-is-warn-always-enabled"]], "torch.jit.enable_onednn_fusion": [[1197, "torch-jit-enable-onednn-fusion"]], "torch.istft": [[1192, "torch-istft"]], "torch.isneginf": [[1189, "torch-isneginf"]], "Attribute": [[1193, "attribute"]], "torch.jit.onednn_fusion_enabled": [[1204, "torch-jit-onednn-fusion-enabled"]], "torch.kaiser_window": [[1215, "torch-kaiser-window"]], "torch.le": [[1220, "torch-le"]], "torch.jit.script": [[1207, "torch-jit-script"]], "torch.isinf": [[1187, "torch-isinf"]], "torch.is_storage": [[1181, "torch-is-storage"]], "torch.lcm": [[1218, "torch-lcm"]], "torch.isin": [[1186, "torch-isin"]], "torch.is_floating_point": [[1177, "torch-is-floating-point"]], "torch.jit.annotate": [[1196, "torch-jit-annotate"]], "torch.is_nonzero": [[1180, "torch-is-nonzero"]], "torch.lerp": [[1221, "torch-lerp"]], "torch.less": [[1222, "torch-less"]], "torch.isreal": [[1191, "torch-isreal"]], "torch.kthvalue": [[1217, "torch-kthvalue"]], "ScriptModule": [[1195, "scriptmodule"]], "torch.isposinf": [[1190, "torch-isposinf"]], "torch.is_grad_enabled": [[1178, "torch-is-grad-enabled"]], "torch.jit.interface": [[1201, "torch-jit-interface"]], "torch.ldexp": [[1219, "torch-ldexp"]], "torch.lgamma": [[1224, "torch-lgamma"]], "torch.isnan": [[1188, "torch-isnan"]], "torch.isfinite": [[1185, "torch-isfinite"]], "torch.jit.script_if_tracing": [[1208, "torch-jit-script-if-tracing"]], "torch.jit.optimize_for_inference": [[1205, "torch-jit-optimize-for-inference"]], "torch.jit.load": [[1203, "torch-jit-load"]], "torch.less_equal": [[1223, "torch-less-equal"]], "ScriptFunction": [[1194, "scriptfunction"]], "torch.jit.set_fusion_strategy": [[1209, "torch-jit-set-fusion-strategy"]], "torch.jit.fork": [[1198, "torch-jit-fork"]], "torch.jit.isinstance": [[1202, "torch-jit-isinstance"]], "torch.kron": [[1216, "torch-kron"]], "torch.jit.trace_module": [[1212, "torch-jit-trace-module"]], "torch.is_inference_mode_enabled": [[1179, "torch-is-inference-mode-enabled"]], "torch.jit.wait": [[1214, "torch-jit-wait"]], "torch.fmax": [[1114, "torch-fmax"]], "torch.fliplr": [[1109, "torch-fliplr"]], "torch.fft.ihfft2": [[1097, "torch-fft-ihfft2"]], "torch.expm1": [[1080, "torch-expm1"]], "torch.fake_quantize_per_tensor_affine": [[1083, "torch-fake-quantize-per-tensor-affine"]], "torch.exp": [[1078, "torch-exp"]], "torch.fft.fftfreq": [[1086, "torch-fft-fftfreq"]], "torch.frac": [[1117, "torch-frac"]], "torch.fmin": [[1115, "torch-fmin"]], "torch.fft.ifftn": [[1094, "torch-fft-ifftn"]], "torch.fft.fft": [[1084, "torch-fft-fft"]], "torch.fix": [[1106, "torch-fix"]], "torch.fft.fftshift": [[1088, "torch-fft-fftshift"]], "torch.exp2": [[1079, "torch-exp2"]], "torch.fft.ihfftn": [[1098, "torch-fft-ihfftn"]], "torch.fft.rfftfreq": [[1104, "torch-fft-rfftfreq"]], "torch.floor": [[1112, "torch-floor"]], "torch.float_power": [[1111, "torch-float-power"]], "torch.floor_divide": [[1113, "torch-floor-divide"]], "torch.fft.hfft2": [[1090, "torch-fft-hfft2"]], "torch.fake_quantize_per_channel_affine": [[1082, "torch-fake-quantize-per-channel-affine"]], "torch.fft.irfft2": [[1100, "torch-fft-irfft2"]], "torch.fft.rfft2": [[1103, "torch-fft-rfft2"]], "torch.flatten": [[1107, "torch-flatten"]], "torch.fft.rfftn": [[1105, "torch-fft-rfftn"]], "torch.fft.irfftn": [[1101, "torch-fft-irfftn"]], "torch.func.functional_call": [[1124, "torch-func-functional-call"]], "torch.fmod": [[1116, "torch-fmod"]], "torch.flipud": [[1110, "torch-flipud"]], "torch.from_dlpack": [[1119, "torch-from-dlpack"]], "torch.frombuffer": [[1121, "torch-frombuffer"]], "torch.full": [[1122, "torch-full"]], "torch.fft.hfft": [[1089, "torch-fft-hfft"]], "torch.full_like": [[1123, "torch-full-like"]], "torch.func.functionalize": [[1125, "torch-func-functionalize"]], "torch.fft.hfftn": [[1091, "torch-fft-hfftn"]], "torch.fft.fftn": [[1087, "torch-fft-fftn"]], "torch.fft.rfft": [[1102, "torch-fft-rfft"]], "torch.flip": [[1108, "torch-flip"]], "torch.func.grad": [[1126, "torch-func-grad"]], "torch.fft.ihfft": [[1096, "torch-fft-ihfft"]], "torch.fft.fft2": [[1085, "torch-fft-fft2"]], "torch.from_numpy": [[1120, "torch-from-numpy"]], "torch.frexp": [[1118, "torch-frexp"]], "torch.fft.irfft": [[1099, "torch-fft-irfft"]], "torch.fft.ifft": [[1092, "torch-fft-ifft"]], "torch.fft.ifftshift": [[1095, "torch-fft-ifftshift"]], "torch.fft.ifft2": [[1093, "torch-fft-ifft2"]], "torch.eye": [[1081, "torch-eye"]], "torch.erfc": [[1076, "torch-erfc"]], "enable_grad": [[1072, "enable-grad"]], "torch.cuda.reset_max_memory_cached": [[1033, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.set_device": [[1037, "torch-cuda-set-device"]], "torch.cuda.set_stream": [[1041, "torch-cuda-set-stream"]], "torch.cuda.temperature": [[1045, "torch-cuda-temperature"]], "torch.dequantize": [[1053, "torch-dequantize"]], "torch.einsum": [[1068, "torch-einsum"]], "torch.diagonal": [[1058, "torch-diagonal"]], "torch.det": [[1054, "torch-det"]], "torch.diagflat": [[1057, "torch-diagflat"]], "torch.equal": [[1074, "torch-equal"]], "torch.divide": [[1064, "torch-divide"]], "torch.div": [[1063, "torch-div"]], "torch.cuda.utilization": [[1046, "torch-cuda-utilization"]], "torch.dist": [[1062, "torch-dist"]], "torch.cuda.seed": [[1035, "torch-cuda-seed"]], "torch.dot": [[1065, "torch-dot"]], "torch.dsplit": [[1066, "torch-dsplit"]], "torch.cuda.synchronize": [[1044, "torch-cuda-synchronize"]], "torch.cumulative_trapezoid": [[1051, "torch-cumulative-trapezoid"]], "torch.erfinv": [[1077, "torch-erfinv"]], "torch.cuda.power_draw": [[1031, "torch-cuda-power-draw"]], "torch.dstack": [[1067, "torch-dstack"]], "torch.empty": [[1069, "torch-empty"]], "torch.cuda.reset_max_memory_allocated": [[1032, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.set_sync_debug_mode": [[1042, "torch-cuda-set-sync-debug-mode"]], "torch.diagonal_scatter": [[1059, "torch-diagonal-scatter"]], "torch.cuda.set_per_process_memory_fraction": [[1038, "torch-cuda-set-per-process-memory-fraction"]], "torch.cummax": [[1047, "torch-cummax"]], "torch.cuda.seed_all": [[1036, "torch-cuda-seed-all"]], "torch.cuda.set_rng_state": [[1039, "torch-cuda-set-rng-state"]], "torch.empty_like": [[1070, "torch-empty-like"]], "torch.erf": [[1075, "torch-erf"]], "torch.digamma": [[1061, "torch-digamma"]], "torch.deg2rad": [[1052, "torch-deg2rad"]], "torch.diag": [[1055, "torch-diag"]], "torch.empty_strided": [[1071, "torch-empty-strided"]], "torch.cumsum": [[1050, "torch-cumsum"]], "torch.cuda.nvtx.range_push": [[1030, "torch-cuda-nvtx-range-push"]], "torch.eq": [[1073, "torch-eq"]], "torch.cuda.set_rng_state_all": [[1040, "torch-cuda-set-rng-state-all"]], "torch.cummin": [[1048, "torch-cummin"]], "torch.cumprod": [[1049, "torch-cumprod"]], "torch.diff": [[1060, "torch-diff"]], "torch.cuda.stream": [[1043, "torch-cuda-stream"]], "torch.cuda.reset_peak_memory_stats": [[1034, "torch-cuda-reset-peak-memory-stats"]], "torch.diag_embed": [[1056, "torch-diag-embed"]], "torch.cuda.nvtx.range_pop": [[1029, "torch-cuda-nvtx-range-pop"]], "torch.cuda.get_allocator_backend": [[994, "torch-cuda-get-allocator-backend"]], "torch.cuda.mem_get_info": [[1020, "torch-cuda-mem-get-info"]], "torch.cuda.nvtx.mark": [[1028, "torch-cuda-nvtx-mark"]], "torch.cuda.make_graphed_callables": [[1014, "torch-cuda-make-graphed-callables"]], "torch.cuda.comm.broadcast": [[981, "torch-cuda-comm-broadcast"]], "torch.cuda.clock_rate": [[980, "torch-cuda-clock-rate"]], "torch.cuda.list_gpu_processes": [[1013, "torch-cuda-list-gpu-processes"]], "torch.cuda.current_stream": [[988, "torch-cuda-current-stream"]], "torch.cuda.memory_stats": [[1025, "torch-cuda-memory-stats"]], "torch.cuda.empty_cache": [[993, "torch-cuda-empty-cache"]], "graph": [[1003, "graph"]], "torch.cuda.memory_reserved": [[1023, "torch-cuda-memory-reserved"]], "torch.cuda.comm.gather": [[983, "torch-cuda-comm-gather"]], "torch.cuda.comm.scatter": [[985, "torch-cuda-comm-scatter"]], "torch.cuda.get_rng_state": [[1000, "torch-cuda-get-rng-state"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1012, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.max_memory_cached": [[1018, "torch-cuda-max-memory-cached"]], "torch.cuda.ipc_collect": [[1007, "torch-cuda-ipc-collect"]], "device": [[990, "device"]], "torch.cuda.get_sync_debug_mode": [[1002, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.device_count": [[991, "torch-cuda-device-count"]], "torch.cuda.memory_allocated": [[1021, "torch-cuda-memory-allocated"]], "torch.cuda.get_device_name": [[997, "torch-cuda-get-device-name"]], "torch.cuda.graph_pool_handle": [[1004, "torch-cuda-graph-pool-handle"]], "torch.cuda.default_stream": [[989, "torch-cuda-default-stream"]], "torch.cuda.memory_cached": [[1022, "torch-cuda-memory-cached"]], "torch.cuda.get_device_properties": [[998, "torch-cuda-get-device-properties"]], "torch.cuda.get_gencode_flags": [[999, "torch-cuda-get-gencode-flags"]], "torch.cuda.memory_snapshot": [[1024, "torch-cuda-memory-snapshot"]], "torch.cuda.is_initialized": [[1010, "torch-cuda-is-initialized"]], "torch.cuda.max_memory_reserved": [[1019, "torch-cuda-max-memory-reserved"]], "torch.cuda.initial_seed": [[1006, "torch-cuda-initial-seed"]], "torch.cuda.comm.broadcast_coalesced": [[982, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.jiterator._create_jit_fn": [[1011, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.get_arch_list": [[995, "torch-cuda-get-arch-list"]], "torch.cuda.is_available": [[1008, "torch-cuda-is-available"]], "torch.cuda.memory_summary": [[1026, "torch-cuda-memory-summary"]], "torch.cuda.init": [[1005, "torch-cuda-init"]], "torch.cuda.get_rng_state_all": [[1001, "torch-cuda-get-rng-state-all"]], "device_of": [[992, "device-of"]], "torch.cuda.manual_seed_all": [[1016, "torch-cuda-manual-seed-all"]], "torch.cuda.memory_usage": [[1027, "torch-cuda-memory-usage"]], "torch.cuda.manual_seed": [[1015, "torch-cuda-manual-seed"]], "torch.cuda.current_blas_handle": [[986, "torch-cuda-current-blas-handle"]], "torch.cuda.current_device": [[987, "torch-cuda-current-device"]], "torch.cuda.is_current_stream_capturing": [[1009, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.max_memory_allocated": [[1017, "torch-cuda-max-memory-allocated"]], "torch.cuda.comm.reduce_add": [[984, "torch-cuda-comm-reduce-add"]], "torch.cuda.get_device_capability": [[996, "torch-cuda-get-device-capability"]], "torch.cpu.current_stream": [[963, "torch-cpu-current-stream"]], "torch.clamp": [[936, "torch-clamp"]], "torch.compile": [[941, "torch-compile"]], "torch.cpu.device_count": [[964, "torch-cpu-device-count"]], "CUDAGraph": [[969, "cudagraph"]], "torch.cuda.can_device_access_peer": [[978, "torch-cuda-can-device-access-peer"]], "torch.count_nonzero": [[959, "torch-count-nonzero"]], "torch.conj_physical": [[954, "torch-conj-physical"]], "torch.compiler.disable": [[946, "torch-compiler-disable"], [1947, "torch-compiler-disable"]], "torch.concatenate": [[951, "torch-concatenate"]], "torch.conj": [[953, "torch-conj"]], "torch.cuda.caching_allocator_alloc": [[976, "torch-cuda-caching-allocator-alloc"]], "torch.cov": [[960, "torch-cov"]], "torch.copysign": [[955, "torch-copysign"]], "torch.cholesky": [[932, "torch-cholesky"]], "torch.cuda.OutOfMemoryError": [[973, "torch-cuda-outofmemoryerror"]], "StreamContext": [[975, "streamcontext"], [962, "streamcontext"]], "torch.compiler.compile": [[945, "torch-compiler-compile"]], "torch.compiler.assume_constant_result": [[944, "torch-compiler-assume-constant-result"]], "torch.cross": [[968, "torch-cross"]], "Stream": [[974, "stream"], [961, "stream"]], "torch.cuda.caching_allocator_delete": [[977, "torch-cuda-caching-allocator-delete"]], "torch.concat": [[950, "torch-concat"]], "torch.cholesky_solve": [[934, "torch-cholesky-solve"]], "torch.compiler.allow_in_graph": [[943, "torch-compiler-allow-in-graph"], [1947, "torch-compiler-allow-in-graph"]], "torch.cpu.synchronize": [[967, "torch-cpu-synchronize"]], "torch.cpu.stream": [[966, "torch-cpu-stream"]], "torch.cosh": [[958, "torch-cosh"]], "torch.cholesky_inverse": [[933, "torch-cholesky-inverse"]], "torch.column_stack": [[939, "torch-column-stack"]], "ExternalStream": [[972, "externalstream"]], "torch.compiled_with_cxx11_abi": [[942, "torch-compiled-with-cxx11-abi"]], "CUDAPluggableAllocator": [[970, "cudapluggableallocator"]], "torch.compiler.list_backends": [[947, "torch-compiler-list-backends"]], "torch.compiler.reset": [[948, "torch-compiler-reset"]], "torch.cuda.change_current_allocator": [[979, "torch-cuda-change-current-allocator"]], "torch.clone": [[938, "torch-clone"]], "torch.combinations": [[940, "torch-combinations"]], "torch.cpu.is_available": [[965, "torch-cpu-is-available"]], "torch.cos": [[957, "torch-cos"]], "torch.chain_matmul": [[931, "torch-chain-matmul"]], "torch.clip": [[937, "torch-clip"]], "torch.chunk": [[935, "torch-chunk"]], "torch.complex": [[949, "torch-complex"]], "torch.corrcoef": [[956, "torch-corrcoef"]], "torch.bucketize": [[925, "torch-bucketize"]], "torch.autograd.graph.Node.name": [[900, "torch-autograd-graph-node-name"]], "torch.autograd.functional.vhp": [[894, "torch-autograd-functional-vhp"]], "torch.ceil": [[930, "torch-ceil"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[907, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.blackman_window": [[919, "torch-blackman-window"]], "torch.block_diag": [[920, "torch-block-diag"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[889, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.autograd.functional.hessian": [[890, "torch-autograd-functional-hessian"]], "torch.autograd.grad": [[896, "torch-autograd-grad"]], "torch.bitwise_or": [[916, "torch-bitwise-or"]], "torch.bitwise_xor": [[918, "torch-bitwise-xor"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[886, "torch-autograd-function-functionctx-mark-dirty"]], "torch.autograd.forward_ad.make_dual": [[884, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.profiler.load_nvprof": [[904, "torch-autograd-profiler-load-nvprof"]], "torch.autograd.graph.Node.next_functions": [[901, "torch-autograd-graph-node-next-functions"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[888, "torch-autograd-function-functionctx-save-for-backward"]], "torch.autograd.gradcheck.gradgradcheck": [[898, "torch-autograd-gradcheck-gradgradcheck"]], "torch.can_cast": [[926, "torch-can-cast"]], "torch.cdist": [[929, "torch-cdist"]], "torch.bitwise_left_shift": [[914, "torch-bitwise-left-shift"]], "torch.bitwise_not": [[915, "torch-bitwise-not"]], "torch.bitwise_right_shift": [[917, "torch-bitwise-right-shift"]], "torch.broadcast_to": [[924, "torch-broadcast-to"]], "torch.autograd.functional.jvp": [[893, "torch-autograd-functional-jvp"]], "torch.autograd.profiler.profile.total_average": [[908, "torch-autograd-profiler-profile-total-average"]], "torch.autograd.functional.jacobian": [[892, "torch-autograd-functional-jacobian"]], "torch.broadcast_shapes": [[922, "torch-broadcast-shapes"]], "torch.bernoulli": [[911, "torch-bernoulli"]], "torch.broadcast_tensors": [[923, "torch-broadcast-tensors"]], "torch.autograd.functional.hvp": [[891, "torch-autograd-functional-hvp"]], "torch.autograd.graph.Node.register_prehook": [[903, "torch-autograd-graph-node-register-prehook"]], "torch.bitwise_and": [[913, "torch-bitwise-and"]], "torch.cartesian_prod": [[927, "torch-cartesian-prod"]], "torch.autograd.forward_ad.unpack_dual": [[885, "torch-autograd-forward-ad-unpack-dual"]], "dual_level": [[883, "dual-level"]], "torch.autograd.profiler.profile.key_averages": [[906, "torch-autograd-profiler-profile-key-averages"]], "torch.bincount": [[912, "torch-bincount"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[887, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.autograd.graph.Node.register_hook": [[902, "torch-autograd-graph-node-register-hook"]], "torch.autograd.graph.Node.metadata": [[899, "torch-autograd-graph-node-metadata"]], "torch.autograd.profiler.profile.export_chrome_trace": [[905, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.cat": [[928, "torch-cat"]], "torch.bmm": [[921, "torch-bmm"]], "torch.autograd.gradcheck.gradcheck": [[897, "torch-autograd-gradcheck-gradcheck"]], "torch.autograd.backward": [[882, "torch-autograd-backward"]], "torch.baddbmm": [[909, "torch-baddbmm"]], "torch.autograd.functional.vjp": [[895, "torch-autograd-functional-vjp"]], "torch.bartlett_window": [[910, "torch-bartlett-window"]], "get_default_qat_qconfig_mapping": [[844, "get-default-qat-qconfig-mapping"]], "prepare_qat_fx": [[851, "prepare-qat-fx"]], "torch.atanh": [[874, "torch-atanh"]], "torch.asinh": [[871, "torch-asinh"]], "default_qat_qconfig_v2": [[836, "default-qat-qconfig-v2"]], "torch.arcsinh": [[858, "torch-arcsinh"]], "default_dynamic_qconfig": [[833, "default-dynamic-qconfig"]], "torch.atleast_1d": [[875, "torch-atleast-1d"]], "torch.autograd.Function.forward": [[879, "torch-autograd-function-forward"]], "torch.autograd.Function.backward": [[878, "torch-autograd-function-backward"]], "per_channel_dynamic_qconfig": [[842, "per-channel-dynamic-qconfig"]], "torch.atan2": [[873, "torch-atan2"]], "get_default_qconfig_mapping": [[845, "get-default-qconfig-mapping"]], "torch.atleast_3d": [[877, "torch-atleast-3d"]], "torch.arctan2": [[860, "torch-arctan2"]], "torch.argmin": [[864, "torch-argmin"]], "QConfigMapping": [[843, "qconfigmapping"]], "torch.as_tensor": [[868, "torch-as-tensor"]], "torch.as_strided": [[867, "torch-as-strided"]], "torch.argmax": [[863, "torch-argmax"]], "torch.arccos": [[855, "torch-arccos"]], "torch.arctan": [[859, "torch-arctan"]], "default_qconfig": [[837, "default-qconfig"]], "convert_fx": [[848, "convert-fx"]], "quantize_dynamic": [[847, "quantize-dynamic"]], "torch.atan": [[872, "torch-atan"]], "float_qparams_weight_only_qconfig": [[841, "float-qparams-weight-only-qconfig"]], "fuse_fx": [[849, "fuse-fx"]], "torch.arctanh": [[861, "torch-arctanh"]], "torch.arange": [[854, "torch-arange"]], "default_per_channel_qconfig": [[834, "default-per-channel-qconfig"]], "torch.are_deterministic_algorithms_enabled": [[862, "torch-are-deterministic-algorithms-enabled"]], "torch.argsort": [[865, "torch-argsort"]], "quantize_qat": [[852, "quantize-qat"]], "prepare_fx": [[850, "prepare-fx"]], "quantize": [[846, "quantize"]], "torch.asarray": [[869, "torch-asarray"]], "default_qat_qconfig": [[835, "default-qat-qconfig"]], "default_weight_only_qconfig": [[838, "default-weight-only-qconfig"]], "float16_static_qconfig": [[840, "float16-static-qconfig"]], "torch.autograd.Function.jvp": [[880, "torch-autograd-function-jvp"]], "torch.autograd.Function.vmap": [[881, "torch-autograd-function-vmap"]], "float16_dynamic_qconfig": [[839, "float16-dynamic-qconfig"]], "torch.arcsin": [[857, "torch-arcsin"]], "torch.argwhere": [[866, "torch-argwhere"]], "torch.asin": [[870, "torch-asin"]], "torch.atleast_2d": [[876, "torch-atleast-2d"]], "swap_module": [[853, "swap-module"]], "torch.arccosh": [[856, "torch-arccosh"]], "get_observer_state_dict": [[825, "get-observer-state-dict"]], "propagate_qconfig": [[829, "propagate-qconfig"]], "default_eval_fn": [[787, "default-eval-fn"]], "MovingAverageMinMaxObserver": [[810, "movingaverageminmaxobserver"]], "RecordingObserver": [[816, "recordingobserver"]], "load_observer_state_dict": [[826, "load-observer-state-dict"]], "DTypeWithConstraints": [[784, "dtypewithconstraints"]], "MovingAveragePerChannelMinMaxObserver": [[811, "movingaverageperchannelminmaxobserver"]], "QConfig": [[830, "qconfig"], [1918, "qconfig"]], "default_per_channel_weight_observer": [[822, "default-per-channel-weight-observer"]], "default_histogram_fake_quant": [[796, "default-histogram-fake-quant"]], "disable_observer": [[800, "disable-observer"]], "ObserverBase": [[813, "observerbase"]], "FixedQParamsFakeQuantize": [[790, "fixedqparamsfakequantize"]], "prepare": [[827, "prepare"]], "NoopObserver": [[812, "noopobserver"]], "default_debug_qconfig": [[832, "default-debug-qconfig"]], "convert": [[786, "convert"]], "default_per_channel_weight_fake_quant": [[797, "default-per-channel-weight-fake-quant"]], "default_histogram_observer": [[820, "default-histogram-observer"]], "ObservationType": [[785, "observationtype"]], "default_observer": [[821, "default-observer"]], "default_dynamic_quant_observer": [[818, "default-dynamic-quant-observer"]], "PlaceholderObserver": [[815, "placeholderobserver"]], "default_fused_per_channel_wt_fake_quant": [[794, "default-fused-per-channel-wt-fake-quant"]], "HistogramObserver": [[808, "histogramobserver"]], "enable_fake_quant": [[801, "enable-fake-quant"]], "disable_fake_quant": [[799, "disable-fake-quant"]], "enable_observer": [[802, "enable-observer"]], "PerChannelMinMaxObserver": [[814, "perchannelminmaxobserver"]], "default_fake_quant": [[792, "default-fake-quant"]], "default_activation_only_qconfig": [[831, "default-activation-only-qconfig"]], "ConvertCustomConfig": [[804, "convertcustomconfig"]], "FakeQuantize": [[788, "fakequantize"]], "fuse_modules": [[803, "fuse-modules"]], "prepare_qat": [[828, "prepare-qat"]], "FuseCustomConfig": [[805, "fusecustomconfig"]], "default_float_qparams_observer": [[819, "default-float-qparams-observer"]], "default_weight_observer": [[824, "default-weight-observer"]], "FusedMovingAvgObsFakeQuantize": [[791, "fusedmovingavgobsfakequantize"]], "FakeQuantizeBase": [[789, "fakequantizebase"]], "default_fused_wt_fake_quant": [[795, "default-fused-wt-fake-quant"]], "StandaloneModuleConfigEntry": [[807, "standalonemoduleconfigentry"]], "default_debug_observer": [[817, "default-debug-observer"]], "default_placeholder_observer": [[823, "default-placeholder-observer"]], "MinMaxObserver": [[809, "minmaxobserver"]], "default_weight_fake_quant": [[798, "default-weight-fake-quant"]], "default_fused_act_fake_quant": [[793, "default-fused-act-fake-quant"]], "PrepareCustomConfig": [[806, "preparecustomconfig"]], "torch.utils.cpp_extension": [[14, "torch-utils-cpp-extension"]], "torch.cuda": [[17, "module-torch.cuda"]], "Random Number Generator": [[17, "random-number-generator"]], "Communication collectives": [[17, "communication-collectives"]], "Streams and events": [[17, "streams-and-events"], [16, "streams-and-events"]], "Graphs (beta)": [[17, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[17, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[17, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[17, "stream-sanitizer-prototype"]], "Customization": [[33, "customization"]], "Launcher": [[33, "launcher"]], "Rendezvous Handler": [[33, "rendezvous-handler"]], "Metric Handler": [[33, "metric-handler"]], "Events Handler": [[33, "events-handler"]], "torch.export IR Specification": [[46, "torch-export-ir-specification"]], "Assumptions": [[46, "assumptions"], [1925, "assumptions"]], "What is Export IR": [[46, "what-is-export-ir"]], "ExportedProgram": [[46, "exportedprogram"]], "Graph": [[46, "graph"]], "Node": [[46, "node"]], "call_function": [[46, "call-function"]], "Metadata": [[46, "metadata"]], "placeholder": [[46, "placeholder"]], "output": [[46, "output"]], "get_attr": [[46, "get-attr"]], "SymInt": [[46, "symint"]], "FakeTensor": [[46, "faketensor"]], "Pytree-able Types": [[46, "pytree-able-types"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Lead Core Maintainer (BDFL)": [[10, "lead-core-maintainer-bdfl"], [9, "lead-core-maintainer-bdfl"]], "Core Maintainers": [[10, "core-maintainers"], [9, "core-maintainers"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "torch.utils.data": [[21, "module-torch.utils.data"]], "Dataset Types": [[21, "dataset-types"]], "Map-style datasets": [[21, "map-style-datasets"]], "Iterable-style datasets": [[21, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[21, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[21, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[21, "automatic-batching-default"]], "Disable automatic batching": [[21, "disable-automatic-batching"]], "Working with collate_fn": [[21, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[21, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[21, "single-process-data-loading-default"]], "Multi-process data loading": [[21, "multi-process-data-loading"]], "Platform-specific behaviors": [[21, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[21, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[21, "memory-pinning"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Serialization": [[11, "serialization"], [45, "serialization"], [1935, "serialization"]], "Autograd": [[11, "autograd"]], "C++": [[15, "c"]], "TorchScript C++ API": [[15, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[15, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[15, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[15, "authoring-models-in-c"]], "Packaging for C++": [[15, "packaging-for-c"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Numerical gradient checking": [[1, "module-torch.autograd.gradcheck"]], "Profiler": [[1, "profiler"]], "Anomaly detection": [[1, "anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "Torch Distributed Elastic": [[27, "torch-distributed-elastic"]], "Get Started": [[27, "get-started"]], "Usage": [[27, null], [42, "usage"], [18, "usage"]], "Documentation": [[27, "documentation"]], "API": [[27, null]], "Advanced": [[27, null]], "Plugins": [[27, null]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "torch::deploy has been moved to pytorch/multipy": [[23, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Generic Join Context Manager": [[25, "generic-join-context-manager"]], "Probability distributions - torch.distributions": [[30, "module-torch.distributions"]], "Score function": [[30, "score-function"]], "Pathwise derivative": [[30, "pathwise-derivative"]], "Distribution": [[30, "distribution"]], "ExponentialFamily": [[30, "exponentialfamily"]], "Bernoulli": [[30, "bernoulli"]], "Beta": [[30, "beta"]], "Binomial": [[30, "binomial"]], "Categorical": [[30, "categorical"]], "Cauchy": [[30, "cauchy"]], "Chi2": [[30, "chi2"]], "ContinuousBernoulli": [[30, "continuousbernoulli"]], "Dirichlet": [[30, "dirichlet"]], "Exponential": [[30, "exponential"]], "FisherSnedecor": [[30, "fishersnedecor"]], "Gamma": [[30, "gamma"]], "Geometric": [[30, "geometric"]], "Gumbel": [[30, "gumbel"]], "HalfCauchy": [[30, "halfcauchy"]], "HalfNormal": [[30, "halfnormal"]], "Independent": [[30, "independent"]], "Kumaraswamy": [[30, "kumaraswamy"]], "LKJCholesky": [[30, "lkjcholesky"]], "Laplace": [[30, "laplace"]], "LogNormal": [[30, "lognormal"]], "LowRankMultivariateNormal": [[30, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[30, "mixturesamefamily"]], "Multinomial": [[30, "multinomial"]], "MultivariateNormal": [[30, "multivariatenormal"]], "NegativeBinomial": [[30, "negativebinomial"]], "Normal": [[30, "normal"]], "OneHotCategorical": [[30, "onehotcategorical"]], "Pareto": [[30, "pareto"]], "Poisson": [[30, "poisson"]], "RelaxedBernoulli": [[30, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[30, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[30, "relaxedonehotcategorical"]], "StudentT": [[30, "studentt"]], "TransformedDistribution": [[30, "transformeddistribution"]], "Uniform": [[30, "uniform"]], "VonMises": [[30, "vonmises"]], "Weibull": [[30, "weibull"]], "Wishart": [[30, "wishart"]], "KL Divergence": [[30, "module-torch.distributions.kl"]], "Transforms": [[30, "module-torch.distributions.transforms"]], "Constraint Registry": [[30, "module-torch.distributions.constraint_registry"]], "Events": [[35, "module-torch.distributed.elastic.events"]], "API Methods": [[35, "api-methods"]], "Event Objects": [[35, "event-objects"]], "torchrun (Elastic Launch)": [[42, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[42, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Single-node multi-worker": [[42, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[42, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[42, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[42, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[42, "note-on-rendezvous-backend"]], "Definitions": [[42, "definitions"]], "Environment Variables": [[42, "environment-variables"]], "Deployment": [[42, "deployment"]], "Failure Modes": [[42, "failure-modes"]], "Membership Changes": [[42, "membership-changes"]], "Important Notices": [[42, "important-notices"]], "Expiration Timers": [[43, "module-torch.distributed.elastic.timer"]], "Client Methods": [[43, "client-methods"]], "Server/Client Implementations": [[43, "server-client-implementations"]], "Writing a custom timer server/client": [[43, "writing-a-custom-timer-server-client"]], "Train script": [[44, "train-script"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "Error Propagation": [[34, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[34, "methods-and-classes"]], "Distributed communication package - torch.distributed": [[24, "distributed-communication-package-torch-distributed"]], "Backends": [[24, "backends"], [1923, "backends"]], "Backends that come with PyTorch": [[24, "backends-that-come-with-pytorch"]], "Which backend to use?": [[24, "which-backend-to-use"]], "Common environment variables": [[24, "common-environment-variables"]], "Choosing the network interface to use": [[24, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[24, "other-nccl-environment-variables"]], "Basics": [[24, "basics"], [1923, "basics"]], "Initialization": [[24, "initialization"]], "TCP initialization": [[24, "tcp-initialization"]], "Shared file-system initialization": [[24, "shared-file-system-initialization"]], "Environment variable initialization": [[24, "environment-variable-initialization"]], "Post-Initialization": [[24, "post-initialization"]], "Distributed Key-Value Store": [[24, "distributed-key-value-store"]], "Groups": [[24, "groups"]], "Point-to-point communication": [[24, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[24, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[24, "collective-functions"]], "Profiling Collective Communication": [[24, "profiling-collective-communication"]], "Multi-GPU collective functions": [[24, "multi-gpu-collective-functions"]], "Third-party backends": [[24, "third-party-backends"]], "Launch utility": [[24, "launch-utility"]], "Spawn utility": [[24, "spawn-utility"]], "Debugging torch.distributed applications": [[24, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[24, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[24, "torch-distributed-debug"]], "Logging": [[24, "logging"]], "torch.__config__": [[13, "module-torch.__config__"]], "TorchElastic Kubernetes": [[37, "torchelastic-kubernetes"]], "Control Flow - Cond": [[12, "control-flow-cond"]], "Examples": [[12, "examples"], [36, "examples"], [1942, "examples"]], "Invariants of torch.ops.higher_order.cond": [[12, "invariants-of-torch-ops-higher-order-cond"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[29, "tensor-parallelism-torch-distributed-tensor-parallel"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"], [1949, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "torch.fft": [[47, "torch-fft"]], "Fast Fourier Transforms": [[47, "fast-fourier-transforms"]], "Helper Functions": [[47, "helper-functions"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[26, "distributed-checkpoint-torch-distributed-checkpoint"]], "torch.utils.dlpack": [[31, "torch-utils-dlpack"]], "DDP Communication Hooks": [[22, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[22, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[22, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[22, "default-communication-hooks"]], "PowerSGD Communication Hook": [[22, "powersgd-communication-hook"]], "PowerSGD State": [[22, "powersgd-state"]], "PowerSGD Hooks": [[22, "powersgd-hooks"]], "Debugging Communication Hooks": [[22, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[22, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[22, "acknowledgements"], [1916, "acknowledgements"]], "Rendezvous": [[41, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[41, "registry"]], "Handler": [[41, "handler"]], "Exceptions": [[41, "exceptions"]], "Implementations": [[41, "implementations"], [32, "implementations"]], "Dynamic Rendezvous": [[41, "dynamic-rendezvous"]], "C10d Backend": [[41, "c10d-backend"]], "Etcd Backend": [[41, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[41, "etcd-rendezvous-legacy"]], "Etcd Store": [[41, "etcd-store"]], "Etcd Server": [[41, "etcd-server"]], "FullyShardedDataParallel": [[48, "module-torch.distributed.fsdp"]], "Quickstart": [[40, "quickstart"]], "Metrics": [[38, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[38, "metric-handlers"]], "Methods": [[38, "methods"]], "torch.export": [[45, "torch-export"]], "Existing frameworks": [[45, "existing-frameworks"]], "Exporting a PyTorch Model": [[45, "exporting-a-pytorch-model"]], "An Example": [[45, "an-example"]], "Expressing Dynamism": [[45, "expressing-dynamism"]], "Specialization": [[45, "specialization"]], "Input shapes": [[45, "input-shapes"]], "Non-tensor inputs": [[45, "non-tensor-inputs"]], "Limitations of torch.export": [[45, "limitations-of-torch-export"]], "Graph Breaks": [[45, "graph-breaks"], [1946, "graph-breaks"], [1956, "graph-breaks"]], "Data/Shape-Dependent Control Flow": [[45, "data-shape-dependent-control-flow"]], "Data-Dependent Accesses": [[45, "data-dependent-accesses"]], "Missing Meta Kernels for Operators": [[45, "missing-meta-kernels-for-operators"]], "Additional Links for Export Users": [[45, null]], "Deep Dive for PyTorch Developers": [[45, null], [1938, null]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Getting Started": [[7, "getting-started"], [1948, "getting-started"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [1916, "tutorials"], [1923, "tutorials"], [1915, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "Elastic Agent": [[32, "module-torch.distributed.elastic.agent"]], "Server": [[32, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[32, "concepts"]], "Extending the Agent": [[32, "extending-the-agent"]], "Watchdog in the Agent": [[32, "watchdog-in-the-agent"]], "Multiprocessing": [[39, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[39, "starting-multiple-workers"]], "Process Context": [[39, "process-context"]], "torch.cpu": [[16, "module-torch.cpu"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "Distributed Optimizers": [[28, "distributed-optimizers"]], "CUDA Stream Sanitizer": [[18, "cuda-stream-sanitizer"]], "hardsigmoid": [[765, "hardsigmoid"]], "add_quant_dequant": [[780, "add-quant-dequant"]], "avg_pool2d": [[757, "avg-pool2d"]], "adaptive_avg_pool3d": [[756, "adaptive-avg-pool3d"]], "max_pool1d": [[771, "max-pool1d"]], "FloatFunctional": [[737, "floatfunctional"]], "BackendPatternConfig": [[782, "backendpatternconfig"]], "upsample_nearest": [[776, "upsample-nearest"]], "avg_pool3d": [[758, "avg-pool3d"]], "upsample_bilinear": [[775, "upsample-bilinear"]], "FXFloatFunctional": [[736, "fxfloatfunctional"]], "interpolate": [[768, "interpolate"]], "QuantStub": [[778, "quantstub"]], "DTypeConfig": [[783, "dtypeconfig"]], "upsample": [[774, "upsample"]], "conv3d": [[763, "conv3d"]], "QuantWrapper": [[779, "quantwrapper"]], "hardtanh": [[767, "hardtanh"]], "QFunctional": [[746, "qfunctional"]], "elu": [[764, "elu"]], "BackendConfig": [[781, "backendconfig"]], "adaptive_avg_pool2d": [[755, "adaptive-avg-pool2d"]], "linear": [[770, "linear"]], "threshold": [[773, "threshold"]], "clamp": [[760, "clamp"]], "conv2d": [[762, "conv2d"]], "max_pool2d": [[772, "max-pool2d"]], "DeQuantStub": [[777, "dequantstub"]], "celu": [[759, "celu"]], "leaky_relu": [[769, "leaky-relu"]], "conv1d": [[761, "conv1d"]], "hardswish": [[766, "hardswish"]], "ConvReLU1d": [[697, "convrelu1d"], [714, "convrelu1d"]], "ConvBn1d": [[701, "convbn1d"], [691, "convbn1d"]], "ConvReLU3d": [[699, "convrelu3d"], [716, "convrelu3d"], [708, "convrelu3d"]], "BNReLU3d": [[690, "bnrelu3d"], [713, "bnrelu3d"]], "ConvBnReLU3d": [[706, "convbnrelu3d"], [696, "convbnrelu3d"]], "torch.aminmax": [[686, "torch-aminmax"]], "ConvReLU2d": [[715, "convrelu2d"], [707, "convrelu2d"], [698, "convrelu2d"]], "LinearReLU": [[709, "linearrelu"], [718, "linearrelu"], [717, "linearrelu"], [700, "linearrelu"]], "torch.any": [[688, "torch-any"]], "ConvBn2d": [[702, "convbn2d"], [692, "convbn2d"]], "BNReLU2d": [[689, "bnrelu2d"], [712, "bnrelu2d"]], "ConvBnReLU2d": [[695, "convbnrelu2d"], [705, "convbnrelu2d"]], "ConvBn3d": [[703, "convbn3d"], [693, "convbn3d"]], "update_bn_stats": [[711, "update-bn-stats"]], "torch.angle": [[687, "torch-angle"]], "freeze_bn_stats": [[710, "freeze-bn-stats"]], "ConvBnReLU1d": [[694, "convbnrelu1d"], [704, "convbnrelu1d"]], "ONNX supported TorchScript operators": [[1913, "onnx-supported-torchscript-operators"]], "Supported operators": [[1913, "supported-operators"]], "ONNX support for TorchScript operators": [[1913, "id1"]], "Unsupported operators": [[1913, "unsupported-operators"], [1913, "id2"]], "Pipeline Parallelism": [[1916, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1916, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1916, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1916, "pipe-apis-in-pytorch"]], "Skip connections": [[1916, "skip-connections"]], "torch.overrides": [[1957, "module-torch.overrides"]], "Using a pretrained model": [[1948, "using-a-pretrained-model"]], "Next Steps": [[1948, "next-steps"]], "PyTorch 2.0 nn.Module Support": [[1952, "pytorch-2-0-nn-module-support"]], "nn.Module Hooks Support": [[1952, "nn-module-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[1952, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[1952, "state-dict-hooks"]], "torch.compiler API reference": [[1939, "torch-compiler-api-reference"]], "Example: AlexNet from PyTorch to ONNX": [[1912, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1912, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1912, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1912, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1912, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1912, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Limitations": [[1912, "limitations"], [1947, "limitations"], [1946, "limitations"], [1941, "limitations"]], "Differences in Operator Implementations": [[1912, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1912, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1912, "reads-gets"]], "Writes / Sets": [[1912, "writes-sets"]], "Adding support for operators": [[1912, "adding-support-for-operators"]], "ONNX exporter internals": [[1912, "onnx-exporter-internals"]], "ATen operators": [[1912, "aten-operators"]], "List of supported operators": [[1912, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1912, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1912, "torch-autograd-functions"]], "Static Symbolic Method": [[1912, "static-symbolic-method"]], "Inline Autograd Function": [[1912, "inline-autograd-function"]], "Custom operators": [[1912, "custom-operators"]], "ONNX-script functions": [[1912, "onnx-script-functions"]], "C++ Operators": [[1912, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1912, "discovering-all-unconvertible-aten-ops-at-once"]], "Classes": [[1912, "classes"]], "Distributed RPC Framework": [[1923, "distributed-rpc-framework"]], "RPC": [[1923, "rpc"]], "TensorPipe Backend": [[1923, "tensorpipe-backend"]], "RRef": [[1923, "rref"]], "More Information about RRef": [[1923, null]], "RemoteModule": [[1923, "remotemodule"]], "Distributed Autograd Framework": [[1923, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1923, null]], "Distributed Optimizer": [[1923, "distributed-optimizer"], [1924, "distributed-optimizer"]], "Guards Overview": [[1949, "guards-overview"]], "Caching and Guards Overview": [[1949, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[1949, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[1949, "instructiontranslator"]], "Making Guards": [[1949, "making-guards"]], "torch.ao.ns._numeric_suite": [[1936, "torch-ao-ns-numeric-suite"]], "Understanding CUDA Memory Usage": [[1958, "understanding-cuda-memory-usage"]], "Generating a Snapshot": [[1958, "generating-a-snapshot"]], "Using the visualizer": [[1958, "using-the-visualizer"]], "Active Memory Timeline": [[1958, "active-memory-timeline"]], "Allocator State History": [[1958, "allocator-state-history"]], "Snapshot API Reference": [[1958, "snapshot-api-reference"]], "Best Practices for Backends": [[1940, "best-practices-for-backends"]], "x86 CPU": [[1940, "x86-cpu"]], "TorchDynamo APIs for fine-grained tracing": [[1947, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[1947, "id1"]], "torch._dynamo.disallow_in_graph": [[1947, "torch-dynamo-disallow-in-graph"]], "torch.utils.tensorboard": [[1932, "module-torch.utils.tensorboard"]], "Type Info": [[1959, "type-info"]], "torch.finfo": [[1959, "torch-finfo"]], "torch.iinfo": [[1959, "torch-iinfo"]], "torch.optim": [[1914, "module-torch.optim"]], "How to use an optimizer": [[1914, "how-to-use-an-optimizer"]], "Constructing it": [[1914, "constructing-it"]], "Per-parameter options": [[1914, "per-parameter-options"]], "Taking an optimization step": [[1914, "taking-an-optimization-step"]], "optimizer.step()": [[1914, "optimizer-step"]], "optimizer.step(closure)": [[1914, "optimizer-step-closure"]], "Base class": [[1914, "base-class"]], "Algorithms": [[1914, "algorithms"]], "How to adjust learning rate": [[1914, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1914, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1914, "constructing-averaged-models"]], "Custom averaging strategies": [[1914, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1914, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1914, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1914, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1914, "putting-it-all-together-ema"]], "TorchDynamo Deep Dive": [[1943, "torchdynamo-deep-dive"]], "TorchDynamo Internals": [[1943, "torchdynamo-internals"]], "What is a guard?": [[1943, "what-is-a-guard"]], "What is Dynamo doing?": [[1943, "what-is-dynamo-doing"]], "How to inspect artifacts generated by TorchDynamo?": [[1943, "how-to-inspect-artifacts-generated-by-torchdynamo"]], "PyTorch 2.0 Performance Dashboard": [[1953, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[1953, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[1953, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[1953, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[1953, "how-can-i-run-any-performance-test-locally"]], "torch.compiler": [[1938, "torch-compiler"]], "Getting Started for PyTorch Users": [[1938, null]], "HowTo for PyTorch Backend Vendors": [[1938, null]], "Does torch.compile support training?": [[1946, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[1946, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[1946, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[1946, "why-is-my-code-crashing"]], "Why is compilation slow?": [[1946, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[1946, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[1946, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[1946, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[1946, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[1946, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[1946, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[1946, "why-am-i-getting-ooms"]], "Does torch.func work with torch.compile (for grad and vmap transforms)?": [[1946, "does-torch-func-work-with-torch-compile-for-grad-and-vmap-transforms"]], "Calling torch.func transform inside of a function handled with torch.compile": [[1946, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Compiling torch.func.grad with torch.compile": [[1946, "compiling-torch-func-grad-with-torch-compile"]], "Compiling torch.vmap with torch.compile": [[1946, "compiling-torch-vmap-with-torch-compile"]], "Compiling functions besides the ones which are supported (escape hatch)": [[1946, "compiling-functions-besides-the-ones-which-are-supported-escape-hatch"]], "Does NumPy work with torch.compile?": [[1946, "does-numpy-work-with-torch-compile"]], "Which NumPy features does torch.compile support?": [[1946, "which-numpy-features-does-torch-compile-support"]], "Can I execute NumPy code on CUDA via torch.compile?": [[1946, "can-i-execute-numpy-code-on-cuda-via-torch-compile"]], "How do I debug NumPy code under torch.compile?": [[1946, "how-do-i-debug-numpy-code-under-torch-compile"]], "I torch.compile some NumPy code and I did not see any speed-up.": [[1946, "i-torch-compile-some-numpy-code-and-i-did-not-see-any-speed-up"]], "Which API to use for fine grain tracing?": [[1946, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[1946, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[1946, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[1946, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "torch.signal": [[1926, "module-torch.signal"]], "torch.signal.windows": [[1926, "module-torch.signal.windows"]], "torch.package": [[1915, "torch-package"]], "Packaging your first model": [[1915, "packaging-your-first-model"]], "How do I\u2026": [[1915, "how-do-i"]], "See what is inside a package?": [[1915, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1915, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1915, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1915, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1915, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1915, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1915, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1915, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1915, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1915, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1915, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1915, "package-a-torchscript-module"]], "Explanation": [[1915, "explanation"]], "torch.package Format Overview": [[1915, "torch-package-format-overview"]], "Framework files": [[1915, "framework-files"]], "User files": [[1915, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1915, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1915, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1915, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1915, "dependency-management"]], "intern": [[1915, "intern"]], "extern": [[1915, "extern"]], "mock": [[1915, "mock"]], "Refactoring": [[1915, "refactoring"]], "Patterns": [[1915, "patterns"]], "torch.package sharp edges": [[1915, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1915, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1915, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1915, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1915, "mangling"]], "torch": [[1935, "module-torch"]], "Tensors": [[1935, "tensors"]], "Creation Ops": [[1935, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1935, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1935, "generators"]], "Random sampling": [[1935, "random-sampling"]], "In-place random sampling": [[1935, "in-place-random-sampling"]], "Quasi-random sampling": [[1935, "quasi-random-sampling"]], "Parallelism": [[1935, "parallelism"]], "Math operations": [[1935, "math-operations"]], "Pointwise Ops": [[1935, "pointwise-ops"]], "Reduction Ops": [[1935, "reduction-ops"]], "Comparison Ops": [[1935, "comparison-ops"]], "Spectral Ops": [[1935, "spectral-ops"]], "Other Operations": [[1935, "other-operations"]], "BLAS and LAPACK Operations": [[1935, "blas-and-lapack-operations"]], "Foreach Operations": [[1935, "foreach-operations"]], "Symbolic Numbers": [[1935, "symbolic-numbers"]], "Export Path": [[1935, "export-path"]], "Control Flow": [[1935, "control-flow"]], "Optimizations": [[1935, "optimizations"]], "Operator Tags": [[1935, "operator-tags"]], "torch.sparse": [[1927, "torch-sparse"]], "Why and when to use sparsity": [[1927, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1927, "functionality-overview"]], "Operator overview": [[1927, "operator-overview"]], "Sparse Semi-Structured Tensors": [[1927, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[1927, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[1927, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[1927, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[1927, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[1927, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1927, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1927, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1927, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1927, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1927, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1927, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1927, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1927, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1927, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1927, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1927, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1927, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1927, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1927, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[1927, "linear-algebra-operations"]], "Tensor methods and sparse": [[1927, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1927, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1927, "other-functions"]], "Unary functions": [[1927, "unary-functions"]], "Quantization Accuracy Debugging": [[1919, "quantization-accuracy-debugging"], [1918, "quantization-accuracy-debugging"]], "Data insensitive error": [[1919, "data-insensitive-error"]], "General tips": [[1919, "general-tips"]], "Int8 quantization tips": [[1919, "int8-quantization-tips"]], "Data sensitive error": [[1919, "data-sensitive-error"]], "Implementation error": [[1919, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1919, "numerical-debugging-tooling-prototype"]], "Tensor Attributes": [[1930, "tensor-attributes"]], "torch.dtype": [[1930, "torch-dtype"]], "torch.device": [[1930, "torch-device"]], "torch.layout": [[1930, "torch-layout"]], "torch.memory_format": [[1930, "torch-memory-format"]], "Profiling to understand torch.compile performance": [[1954, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[1954, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[1954, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[1954, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[1954, "understanding-compilation-time"]], "Finding graph breaks": [[1954, "finding-graph-breaks"]], "Launch overhead": [[1954, "launch-overhead"]], "Distributed Autograd Design": [[1924, "distributed-autograd-design"]], "Background": [[1924, "background"], [1925, "background"]], "Autograd recording during the forward pass": [[1924, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1924, "distributed-autograd-context"]], "Distributed Backward Pass": [[1924, "distributed-backward-pass"]], "Computing dependencies": [[1924, "computing-dependencies"]], "FAST mode algorithm": [[1924, "fast-mode-algorithm"]], "SMART mode algorithm": [[1924, "smart-mode-algorithm"]], "Simple end to end example": [[1924, "simple-end-to-end-example"]], "Dynamic shapes": [[1944, "dynamic-shapes"]], "Abridged public API": [[1944, "abridged-public-api"]], "The Guard Model": [[1944, "the-guard-model"]], "Overall architecture": [[1944, "overall-architecture"], [1945, "overall-architecture"]], "Abridged internal API": [[1944, "abridged-internal-api"]], "DimDynamic policy": [[1944, "dimdynamic-policy"]], "Unbacked SymInts": [[1944, "unbacked-symints"]], "torch.random": [[1922, "module-torch.random"]], "Tensor Views": [[1931, "tensor-views"]], "IRs": [[1951, "irs"]], "Core Aten IR": [[1951, "core-aten-ir"]], "Prims IR": [[1951, "prims-ir"]], "Quantization": [[1918, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1918, "introduction-to-quantization"]], "Quantization API Summary": [[1918, "quantization-api-summary"]], "Eager Mode Quantization": [[1918, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1918, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1918, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1918, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1918, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype - maintaince mode) FX Graph Mode Quantization": [[1918, "prototype-maintaince-mode-fx-graph-mode-quantization"]], "(Prototype) PyTorch 2 Export Quantization": [[1918, "prototype-pytorch-2-export-quantization"]], "Quantization Stack": [[1918, "quantization-stack"]], "Quantized Model": [[1918, "quantized-model"]], "Quantized Tensor": [[1918, "quantized-tensor"]], "Quantize and Dequantize": [[1918, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1918, "quantized-operators-modules"]], "Quantized Engine": [[1918, "quantized-engine"]], "Quantization Flow": [[1918, "quantization-flow"]], "Observer and FakeQuantize": [[1918, "observer-and-fakequantize"]], "General Quantization Flow": [[1918, "general-quantization-flow"]], "Quantization Support Matrix": [[1918, "quantization-support-matrix"]], "Quantization Mode Support": [[1918, "quantization-mode-support"]], "Quantization Flow Support": [[1918, "quantization-flow-support"]], "Backend/Hardware Support": [[1918, "backend-hardware-support"]], "Note for native CPU backends": [[1918, "note-for-native-cpu-backends"]], "Operator Support": [[1918, "operator-support"]], "Quantization API Reference": [[1918, "quantization-api-reference"], [1921, "quantization-api-reference"]], "Quantization Backend Configuration": [[1918, "quantization-backend-configuration"], [1920, "quantization-backend-configuration"]], "Quantization Customizations": [[1918, "quantization-customizations"]], "Quantization Custom Module API": [[1918, "quantization-custom-module-api"]], "Best Practices": [[1918, "best-practices"]], "Common Errors": [[1918, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1918, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1918, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1918, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1918, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "Default values for native configurations": [[1920, "default-values-for-native-configurations"]], "torch.ao.ns._numeric_suite_fx": [[1937, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1937, "torch-ao-ns-fx-utils"]], "CUDAGraph Trees": [[1941, "cudagraph-trees"]], "CUDAGraph Background": [[1941, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[1941, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[1941, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[1941, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[1941, "cudagraph-trees-integration"]], "ONNX Backend for TorchDynamo": [[1911, "onnx-backend-for-torchdynamo"]], "torch.Tensor": [[1933, "torch-tensor"]], "Data types": [[1933, "data-types"]], "Initializing and basic operations": [[1933, "initializing-and-basic-operations"]], "Tensor class reference": [[1933, "tensor-class-reference"]], "torch.testing": [[1934, "module-torch.testing"]], "Fake tensor": [[1945, "fake-tensor"]], "Related work": [[1945, "related-work"]], "API: the important bits": [[1945, "api-the-important-bits"]], "Details": [[1945, "details"]], "About the tensor subclass": [[1945, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[1945, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[1945, "how-does-the-converter-work"]], "Performance characteristics": [[1945, "performance-characteristics"]], "Fake tensor of fake tensor?": [[1945, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[1945, "interaction-with-dynamic-shapes"]], "Other resources": [[1945, "other-resources"]], "torch.special": [[1928, "torch-special"]], "PyTorch 2.0 Troubleshooting": [[1956, "pytorch-2-0-troubleshooting"]], "Title": [[1956, "id1"]], "Diagnosing Runtime Errors": [[1956, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[1956, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[1956, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[1956, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[1956, "minifying-backend-compiler-errors"]], "Performance Profiling": [[1956, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[1956, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[1956, "torchinductor-debugging-using-torch-compile-debug"]], "Identifying the Cause of a Graph Break": [[1956, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[1956, "excessive-recompilation"]], "Accuracy Debugging": [[1956, "accuracy-debugging"]], "Remote Reference Protocol": [[1925, "remote-reference-protocol"]], "RRef Lifetime": [[1925, "rref-lifetime"]], "Design Reasoning": [[1925, "design-reasoning"]], "Protocol Scenarios": [[1925, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1925, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1925, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1925, "owner-share-rref-with-user"]], "User Share RRef with User": [[1925, "user-share-rref-with-user"]], "torch.Storage": [[1929, "torch-storage"]], "torch.profiler": [[1917, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1917, "intel-instrumentation-and-tracing-technology-apis"]], "torch.ao.quantization": [[1921, "torch-ao-quantization"]], "Top level APIs": [[1921, "top-level-apis"]], "Preparing model for quantization": [[1921, "preparing-model-for-quantization"]], "torch.ao.quantization.quantize_fx": [[1921, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1921, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1921, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1921, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[1921, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[1921, "module-torch.ao.quantization.pt2e"]], "torch (quantization related functions)": [[1921, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1921, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1921, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1921, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1921, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1921, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1921, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1921, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1921, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1921, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1921, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1921, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1921, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1921, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1921, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1921, "quantized-dtypes-and-quantization-schemes"]], "TorchInductor GPU Profiling": [[1950, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[1950, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[1950, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[1950, "benchmark-individual-triton-kernel"]], "Writing Graph Transformations on ATen IR": [[1955, "writing-graph-transformations-on-aten-ir"]], "Passes": [[1955, "passes"]], "One-to-One Pass": [[1955, "one-to-one-pass"]], "One-to-X Pass": [[1955, "one-to-x-pass"]], "One-to-None Pass": [[1955, "one-to-none-pass"]], "Utilizing Local Information": [[1955, "utilizing-local-information"]], "Subgraph Rewriter": [[1955, "subgraph-rewriter"]], "Pass Manager": [[1955, "pass-manager"]], "Partitioner": [[1955, "partitioner"]], "Subgraph Matcher": [[1955, "subgraph-matcher"]], "Capability Based Partitioner": [[1955, "capability-based-partitioner"]], "Custom Backends": [[1942, "custom-backends"]], "Registering Custom Backends": [[1942, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[1942, "custom-backends-after-aotautograd"]], "Debugging Backend": [[1942, "debugging-backend"]], "Speedy Backend": [[1942, "speedy-backend"]], "Composable Backends": [[1942, "composable-backends"]], "torch._foreach_log1p": [[645, "torch-foreach-log1p"]], "torch._foreach_log_": [[649, "torch-foreach-log"]], "torch._foreach_sqrt_": [[663, "torch-foreach-sqrt"]], "torch.addbmm": [[675, "torch-addbmm"]], "torch._foreach_neg": [[650, "torch-foreach-neg"]], "torch._foreach_round": [[654, "torch-foreach-round"]], "torch._foreach_log": [[642, "torch-foreach-log"]], "torch.amin": [[685, "torch-amin"]], "torch.absolute": [[671, "torch-absolute"]], "torch.addcmul": [[677, "torch-addcmul"]], "torch._foreach_sinh_": [[661, "torch-foreach-sinh"]], "torch._foreach_sin_": [[659, "torch-foreach-sin"]], "torch.abs": [[670, "torch-abs"]], "torch._foreach_frac_": [[639, "torch-foreach-frac"]], "torch.addmv": [[679, "torch-addmv"]], "torch._foreach_zero_": [[668, "torch-foreach-zero"]], "torch.adjoint": [[681, "torch-adjoint"]], "torch.allclose": [[683, "torch-allclose"]], "torch.add": [[674, "torch-add"]], "torch.addcdiv": [[676, "torch-addcdiv"]], "torch._foreach_trunc_": [[667, "torch-foreach-trunc"]], "torch._foreach_reciprocal": [[652, "torch-foreach-reciprocal"]], "torch._foreach_floor_": [[637, "torch-foreach-floor"]], "torch._foreach_frac": [[638, "torch-foreach-frac"]], "torch._logging.set_logs": [[669, "torch-logging-set-logs"]], "torch._foreach_trunc": [[666, "torch-foreach-trunc"]], "torch._foreach_lgamma_": [[641, "torch-foreach-lgamma"]], "torch._foreach_sqrt": [[662, "torch-foreach-sqrt"]], "torch.addr": [[680, "torch-addr"]], "torch._foreach_round_": [[655, "torch-foreach-round"]], "torch._foreach_log10_": [[644, "torch-foreach-log10"]], "torch._foreach_log1p_": [[646, "torch-foreach-log1p"]], "torch._foreach_log2_": [[648, "torch-foreach-log2"]], "torch._foreach_sin": [[658, "torch-foreach-sin"]], "torch._foreach_reciprocal_": [[653, "torch-foreach-reciprocal"]], "torch.amax": [[684, "torch-amax"]], "torch._foreach_log2": [[647, "torch-foreach-log2"]], "torch._foreach_lgamma": [[640, "torch-foreach-lgamma"]], "torch._foreach_tan": [[664, "torch-foreach-tan"]], "torch.acos": [[672, "torch-acos"]], "torch._foreach_sigmoid": [[656, "torch-foreach-sigmoid"]], "torch._foreach_sigmoid_": [[657, "torch-foreach-sigmoid"]], "torch._foreach_sinh": [[660, "torch-foreach-sinh"]], "torch._foreach_tan_": [[665, "torch-foreach-tan"]], "torch.acosh": [[673, "torch-acosh"]], "torch.addmm": [[678, "torch-addmm"]], "torch.all": [[682, "torch-all"]], "torch._foreach_neg_": [[651, "torch-foreach-neg"]], "torch._foreach_log10": [[643, "torch-foreach-log10"]], "torch._foreach_cosh_": [[627, "torch-foreach-cosh"]], "torch._foreach_cos": [[624, "torch-foreach-cos"]], "torch.Tensor.vdot": [[605, "torch-tensor-vdot"]], "torch._foreach_ceil_": [[623, "torch-foreach-ceil"]], "torch._foreach_exp": [[632, "torch-foreach-exp"]], "torch.Tensor.unique_consecutive": [[599, "torch-tensor-unique-consecutive"]], "torch.Tensor.var": [[604, "torch-tensor-var"]], "torch._foreach_acos": [[616, "torch-foreach-acos"]], "torch.Tensor.type": [[592, "torch-tensor-type"]], "torch.Tensor.where": [[609, "torch-tensor-where"]], "torch.Tensor.view": [[606, "torch-tensor-view"]], "torch.Tensor.unsqueeze": [[600, "torch-tensor-unsqueeze"]], "torch._foreach_cosh": [[626, "torch-foreach-cosh"]], "torch.Tensor.unique": [[598, "torch-tensor-unique"]], "torch._foreach_exp_": [[633, "torch-foreach-exp"]], "torch._foreach_erf": [[628, "torch-foreach-erf"]], "torch.Tensor.type_as": [[593, "torch-tensor-type-as"]], "torch._foreach_abs_": [[615, "torch-foreach-abs"]], "torch._foreach_erfc": [[630, "torch-foreach-erfc"]], "torch._foreach_expm1_": [[635, "torch-foreach-expm1"]], "torch.Tensor.unsqueeze_": [[601, "torch-tensor-unsqueeze"]], "torch.Tensor.trunc_": [[591, "torch-tensor-trunc"]], "torch._assert": [[613, "torch-assert"]], "torch.Tensor.true_divide_": [[589, "torch-tensor-true-divide"]], "torch._foreach_atan_": [[621, "torch-foreach-atan"]], "torch._foreach_atan": [[620, "torch-foreach-atan"]], "torch.Tensor.trunc": [[590, "torch-tensor-trunc"]], "torch._foreach_asin": [[618, "torch-foreach-asin"]], "torch._foreach_expm1": [[634, "torch-foreach-expm1"]], "torch.Tensor.unfold": [[596, "torch-tensor-unfold"]], "torch._foreach_acos_": [[617, "torch-foreach-acos"]], "torch._foreach_erf_": [[629, "torch-foreach-erf"]], "torch.Tensor.uniform_": [[597, "torch-tensor-uniform"]], "torch._foreach_floor": [[636, "torch-foreach-floor"]], "torch._foreach_erfc_": [[631, "torch-foreach-erfc"]], "torch.Tensor.unflatten": [[595, "torch-tensor-unflatten"]], "torch.Tensor.vsplit": [[608, "torch-tensor-vsplit"]], "torch._foreach_asin_": [[619, "torch-foreach-asin"]], "torch.Tensor.untyped_storage": [[602, "torch-tensor-untyped-storage"]], "torch._foreach_cos_": [[625, "torch-foreach-cos"]], "torch.Tensor.xlogy_": [[611, "torch-tensor-xlogy"]], "torch.Tensor.zero_": [[612, "torch-tensor-zero"]], "torch._foreach_ceil": [[622, "torch-foreach-ceil"]], "torch.Tensor.unbind": [[594, "torch-tensor-unbind"]], "torch.Tensor.true_divide": [[588, "torch-tensor-true-divide"]], "torch._foreach_abs": [[614, "torch-foreach-abs"]], "torch.Tensor.view_as": [[607, "torch-tensor-view-as"]], "torch.Tensor.xlogy": [[610, "torch-tensor-xlogy"]], "torch.Tensor.values": [[603, "torch-tensor-values"]], "torch.Tensor.square_": [[540, "torch-tensor-square"]], "torch.Tensor.to_sparse_bsc": [[573, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.squeeze_": [[542, "torch-tensor-squeeze"]], "torch.Tensor.to_sparse_csc": [[576, "torch-tensor-to-sparse-csc"]], "torch.Tensor.subtract": [[552, "torch-tensor-subtract"]], "torch.Tensor.tensor_split": [[567, "torch-tensor-tensor-split"]], "torch.Tensor.tril_": [[585, "torch-tensor-tril"]], "torch.Tensor.sub": [[550, "torch-tensor-sub"]], "torch.Tensor.t_": [[560, "torch-tensor-t"]], "torch.Tensor.to_mkldnn": [[571, "torch-tensor-to-mkldnn"]], "torch.Tensor.t": [[559, "torch-tensor-t"]], "torch.Tensor.stft": [[545, "torch-tensor-stft"]], "torch.Tensor.swapaxes": [[557, "torch-tensor-swapaxes"]], "torch.Tensor.to": [[569, "torch-tensor-to"]], "torch.Tensor.to_sparse_bsr": [[574, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.tril": [[584, "torch-tensor-tril"]], "torch.Tensor.sum": [[554, "torch-tensor-sum"]], "torch.Tensor.trace": [[580, "torch-tensor-trace"]], "torch.Tensor.std": [[544, "torch-tensor-std"]], "torch.Tensor.sub_": [[551, "torch-tensor-sub"]], "torch.Tensor.topk": [[579, "torch-tensor-topk"]], "torch.Tensor.transpose": [[581, "torch-tensor-transpose"]], "torch.Tensor.subtract_": [[553, "torch-tensor-subtract"]], "torch.Tensor.tan": [[563, "torch-tensor-tan"]], "torch.Tensor.storage_type": [[548, "torch-tensor-storage-type"]], "torch.Tensor.squeeze": [[541, "torch-tensor-squeeze"]], "torch.Tensor.swapdims": [[558, "torch-tensor-swapdims"]], "torch.Tensor.to_dense": [[570, "torch-tensor-to-dense"]], "torch.Tensor.to_sparse_coo": [[575, "torch-tensor-to-sparse-coo"]], "torch.Tensor.triu": [[586, "torch-tensor-triu"]], "torch.Tensor.storage": [[546, "torch-tensor-storage"]], "torch.Tensor.tolist": [[578, "torch-tensor-tolist"]], "torch.Tensor.transpose_": [[582, "torch-tensor-transpose"]], "torch.Tensor.to_sparse": [[572, "torch-tensor-to-sparse"]], "torch.Tensor.sspaddmm": [[543, "torch-tensor-sspaddmm"]], "torch.Tensor.tanh_": [[566, "torch-tensor-tanh"]], "torch.Tensor.tile": [[568, "torch-tensor-tile"]], "torch.Tensor.triangular_solve": [[583, "torch-tensor-triangular-solve"]], "torch.Tensor.tan_": [[564, "torch-tensor-tan"]], "torch.Tensor.take": [[561, "torch-tensor-take"]], "torch.Tensor.to_sparse_csr": [[577, "torch-tensor-to-sparse-csr"]], "torch.Tensor.take_along_dim": [[562, "torch-tensor-take-along-dim"]], "torch.Tensor.storage_offset": [[547, "torch-tensor-storage-offset"]], "torch.Tensor.stride": [[549, "torch-tensor-stride"]], "torch.Tensor.square": [[539, "torch-tensor-square"]], "torch.Tensor.sum_to_size": [[555, "torch-tensor-sum-to-size"]], "torch.Tensor.svd": [[556, "torch-tensor-svd"]], "torch.Tensor.triu_": [[587, "torch-tensor-triu"]], "torch.Tensor.tanh": [[565, "torch-tensor-tanh"]], "torch.Tensor.roll": [[494, "torch-tensor-roll"]], "torch.Tensor.sort": [[531, "torch-tensor-sort"]], "torch.Tensor.sgn": [[510, "torch-tensor-sgn"]], "torch.Tensor.short": [[514, "torch-tensor-short"]], "torch.Tensor.sin": [[520, "torch-tensor-sin"]], "torch.Tensor.sinh": [[524, "torch-tensor-sinh"]], "torch.Tensor.row_indices": [[498, "torch-tensor-row-indices"]], "torch.Tensor.select_scatter": [[508, "torch-tensor-select-scatter"]], "torch.Tensor.sqrt_": [[538, "torch-tensor-sqrt"]], "torch.Tensor.share_memory_": [[513, "torch-tensor-share-memory"]], "torch.Tensor.sgn_": [[511, "torch-tensor-sgn"]], "torch.Tensor.sigmoid_": [[516, "torch-tensor-sigmoid"]], "torch.Tensor.shape": [[512, "torch-tensor-shape"]], "torch.Tensor.set_": [[509, "torch-tensor-set"]], "torch.Tensor.sign_": [[518, "torch-tensor-sign"]], "torch.Tensor.retain_grad": [[492, "torch-tensor-retain-grad"]], "torch.Tensor.resolve_neg": [[491, "torch-tensor-resolve-neg"]], "torch.Tensor.sin_": [[521, "torch-tensor-sin"]], "torch.Tensor.smm": [[529, "torch-tensor-smm"]], "torch.Tensor.scatter_add_": [[504, "torch-tensor-scatter-add"]], "torch.Tensor.scatter_reduce": [[505, "torch-tensor-scatter-reduce"]], "torch.Tensor.size": [[526, "torch-tensor-size"]], "torch.Tensor.rsqrt_": [[500, "torch-tensor-rsqrt"]], "torch.Tensor.scatter_add": [[503, "torch-tensor-scatter-add"]], "torch.Tensor.sign": [[517, "torch-tensor-sign"]], "torch.Tensor.slice_scatter": [[527, "torch-tensor-slice-scatter"]], "torch.Tensor.rsqrt": [[499, "torch-tensor-rsqrt"]], "torch.Tensor.sparse_resize_": [[534, "torch-tensor-sparse-resize"]], "torch.Tensor.scatter_": [[502, "torch-tensor-scatter"]], "torch.Tensor.select": [[507, "torch-tensor-select"]], "torch.Tensor.sigmoid": [[515, "torch-tensor-sigmoid"]], "torch.Tensor.sinc_": [[523, "torch-tensor-sinc"]], "torch.Tensor.sinh_": [[525, "torch-tensor-sinh"]], "torch.Tensor.slogdet": [[528, "torch-tensor-slogdet"]], "torch.Tensor.resolve_conj": [[490, "torch-tensor-resolve-conj"]], "torch.Tensor.retains_grad": [[493, "torch-tensor-retains-grad"]], "torch.Tensor.sparse_resize_and_clear_": [[535, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.rot90": [[495, "torch-tensor-rot90"]], "torch.Tensor.sinc": [[522, "torch-tensor-sinc"]], "torch.Tensor.sparse_dim": [[532, "torch-tensor-sparse-dim"]], "torch.Tensor.round": [[496, "torch-tensor-round"]], "torch.Tensor.scatter_reduce_": [[506, "torch-tensor-scatter-reduce"]], "torch.Tensor.round_": [[497, "torch-tensor-round"]], "torch.Tensor.signbit": [[519, "torch-tensor-signbit"]], "torch.Tensor.split": [[536, "torch-tensor-split"]], "torch.Tensor.scatter": [[501, "torch-tensor-scatter"]], "torch.Tensor.sparse_mask": [[533, "torch-tensor-sparse-mask"]], "torch.Tensor.softmax": [[530, "torch-tensor-softmax"]], "torch.Tensor.sqrt": [[537, "torch-tensor-sqrt"]], "torch.Tensor.register_post_accumulate_grad_hook": [[477, "torch-tensor-register-post-accumulate-grad-hook"]], "torch.Tensor.prod": [[459, "torch-tensor-prod"]], "torch.Tensor.record_stream": [[475, "torch-tensor-record-stream"]], "torch.Tensor.outer": [[450, "torch-tensor-outer"]], "torch.Tensor.polygamma_": [[455, "torch-tensor-polygamma"]], "torch.Tensor.q_per_channel_axis": [[461, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.pinverse": [[453, "torch-tensor-pinverse"]], "torch.Tensor.qscheme": [[467, "torch-tensor-qscheme"]], "torch.Tensor.resize_as_": [[489, "torch-tensor-resize-as"]], "torch.Tensor.random_": [[470, "torch-tensor-random"]], "torch.Tensor.q_per_channel_scales": [[462, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.resize_": [[488, "torch-tensor-resize"]], "torch.Tensor.ormqr": [[449, "torch-tensor-ormqr"]], "torch.Tensor.requires_grad_": [[485, "torch-tensor-requires-grad"]], "torch.Tensor.renorm_": [[481, "torch-tensor-renorm"]], "torch.Tensor.qr": [[466, "torch-tensor-qr"]], "torch.Tensor.numel": [[446, "torch-tensor-numel"]], "torch.Tensor.polygamma": [[454, "torch-tensor-polygamma"]], "torch.Tensor.real": [[472, "torch-tensor-real"]], "torch.Tensor.pin_memory": [[452, "torch-tensor-pin-memory"]], "torch.Tensor.permute": [[451, "torch-tensor-permute"]], "torch.Tensor.ravel": [[471, "torch-tensor-ravel"]], "torch.Tensor.renorm": [[480, "torch-tensor-renorm"]], "torch.Tensor.requires_grad": [[484, "torch-tensor-requires-grad"]], "torch.Tensor.register_hook": [[476, "torch-tensor-register-hook"]], "torch.Tensor.not_equal_": [[445, "torch-tensor-not-equal"]], "torch.Tensor.pow": [[457, "torch-tensor-pow"]], "torch.Tensor.q_zero_point": [[465, "torch-tensor-q-zero-point"]], "torch.Tensor.not_equal": [[444, "torch-tensor-not-equal"]], "torch.Tensor.put_": [[460, "torch-tensor-put"]], "torch.Tensor.rad2deg": [[469, "torch-tensor-rad2deg"]], "torch.Tensor.reciprocal_": [[474, "torch-tensor-reciprocal"]], "torch.Tensor.orgqr": [[448, "torch-tensor-orgqr"]], "torch.Tensor.nonzero": [[441, "torch-tensor-nonzero"]], "torch.Tensor.positive": [[456, "torch-tensor-positive"]], "torch.Tensor.remainder": [[478, "torch-tensor-remainder"]], "torch.Tensor.norm": [[442, "torch-tensor-norm"]], "torch.Tensor.repeat": [[482, "torch-tensor-repeat"]], "torch.Tensor.remainder_": [[479, "torch-tensor-remainder"]], "torch.Tensor.repeat_interleave": [[483, "torch-tensor-repeat-interleave"]], "torch.Tensor.reshape": [[486, "torch-tensor-reshape"]], "torch.Tensor.normal_": [[443, "torch-tensor-normal"]], "torch.Tensor.reshape_as": [[487, "torch-tensor-reshape-as"]], "torch.Tensor.quantile": [[468, "torch-tensor-quantile"]], "torch.Tensor.pow_": [[458, "torch-tensor-pow"]], "torch.Tensor.numpy": [[447, "torch-tensor-numpy"]], "torch.Tensor.q_scale": [[464, "torch-tensor-q-scale"]], "torch.Tensor.q_per_channel_zero_points": [[463, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.reciprocal": [[473, "torch-tensor-reciprocal"]], "torch.Tensor.neg_": [[430, "torch-tensor-neg"]], "torch.Tensor.min": [[401, "torch-tensor-min"]], "torch.Tensor.nansum": [[421, "torch-tensor-nansum"]], "torch.Tensor.mm": [[403, "torch-tensor-mm"]], "torch.Tensor.nextafter": [[439, "torch-tensor-nextafter"]], "torch.Tensor.ndim": [[425, "torch-tensor-ndim"]], "torch.Tensor.nan_to_num_": [[417, "torch-tensor-nan-to-num"]], "torch.Tensor.new_ones": [[436, "torch-tensor-new-ones"]], "torch.Tensor.mul": [[408, "torch-tensor-mul"]], "torch.Tensor.narrow": [[422, "torch-tensor-narrow"]], "torch.Tensor.mean": [[399, "torch-tensor-mean"]], "torch.Tensor.multinomial": [[410, "torch-tensor-multinomial"]], "torch.Tensor.narrow_copy": [[423, "torch-tensor-narrow-copy"]], "torch.Tensor.neg": [[429, "torch-tensor-neg"]], "torch.Tensor.matmul": [[394, "torch-tensor-matmul"]], "torch.Tensor.msort": [[407, "torch-tensor-msort"]], "torch.Tensor.negative_": [[432, "torch-tensor-negative"]], "torch.Tensor.movedim": [[406, "torch-tensor-movedim"]], "torch.Tensor.max": [[397, "torch-tensor-max"]], "torch.Tensor.nanmedian": [[419, "torch-tensor-nanmedian"]], "torch.Tensor.matrix_power": [[396, "torch-tensor-matrix-power"]], "torch.Tensor.mvlgamma": [[414, "torch-tensor-mvlgamma"]], "torch.Tensor.nelement": [[433, "torch-tensor-nelement"]], "torch.Tensor.new_empty": [[434, "torch-tensor-new-empty"]], "torch.Tensor.nan_to_num": [[416, "torch-tensor-nan-to-num"]], "torch.Tensor.multiply_": [[412, "torch-tensor-multiply"]], "torch.Tensor.maximum": [[398, "torch-tensor-maximum"]], "torch.Tensor.new_full": [[435, "torch-tensor-new-full"]], "torch.Tensor.mvlgamma_": [[415, "torch-tensor-mvlgamma"]], "torch.Tensor.matrix_exp": [[395, "torch-tensor-matrix-exp"]], "torch.Tensor.nextafter_": [[440, "torch-tensor-nextafter"]], "torch.Tensor.mv": [[413, "torch-tensor-mv"]], "torch.Tensor.nanmean": [[418, "torch-tensor-nanmean"]], "torch.Tensor.nanquantile": [[420, "torch-tensor-nanquantile"]], "torch.Tensor.new_zeros": [[438, "torch-tensor-new-zeros"]], "torch.Tensor.ndimension": [[426, "torch-tensor-ndimension"]], "torch.Tensor.nbytes": [[424, "torch-tensor-nbytes"]], "torch.Tensor.median": [[400, "torch-tensor-median"]], "torch.Tensor.mul_": [[409, "torch-tensor-mul"]], "torch.Tensor.ne_": [[428, "torch-tensor-ne"]], "torch.Tensor.masked_scatter_": [[392, "torch-tensor-masked-scatter"]], "torch.Tensor.mode": [[404, "torch-tensor-mode"]], "torch.Tensor.ne": [[427, "torch-tensor-ne"]], "torch.Tensor.minimum": [[402, "torch-tensor-minimum"]], "torch.Tensor.masked_select": [[393, "torch-tensor-masked-select"]], "torch.Tensor.moveaxis": [[405, "torch-tensor-moveaxis"]], "torch.Tensor.negative": [[431, "torch-tensor-negative"]], "torch.Tensor.new_tensor": [[437, "torch-tensor-new-tensor"]], "torch.Tensor.multiply": [[411, "torch-tensor-multiply"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.load_state_dict"]], "module": [[0, "module-torch.amp"], [0, "module-torch.amp.autocast_mode"], [0, "module-torch.cpu.amp"], [0, "module-torch.cpu.amp.autocast_mode"], [0, "module-torch.cuda.amp"], [0, "module-torch.cuda.amp.autocast_mode"], [0, "module-torch.cuda.amp.common"], [0, "module-torch.cuda.amp.grad_scaler"], [1, "module-torch.autograd"], [1, "module-torch.autograd.anomaly_mode"], [1, "module-torch.autograd.forward_ad"], [1, "module-torch.autograd.function"], [1, "module-torch.autograd.functional"], [1, "module-torch.autograd.grad_mode"], [1, "module-torch.autograd.gradcheck"], [1, "module-torch.autograd.graph"], [1, "module-torch.autograd.profiler"], [1, "module-torch.autograd.profiler_legacy"], [1, "module-torch.autograd.profiler_util"], [1, "module-torch.autograd.variable"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.cudnn.rnn"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xeon.run_cpu"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [13, "module-torch.__config__"], [16, "module-torch.cpu"], [17, "module-torch.cuda"], [17, "module-torch.cuda.comm"], [17, "module-torch.cuda.error"], [17, "module-torch.cuda.graphs"], [17, "module-torch.cuda.jiterator"], [17, "module-torch.cuda.memory"], [17, "module-torch.cuda.nccl"], [17, "module-torch.cuda.nvtx"], [17, "module-torch.cuda.profiler"], [17, "module-torch.cuda.random"], [17, "module-torch.cuda.sparse"], [17, "module-torch.cuda.streams"], [18, "module-torch.cuda._sanitizer"], [21, "module-torch.utils.data"], [21, "module-torch.utils.data.datapipes"], [21, "module-torch.utils.data.datapipes.dataframe"], [21, "module-torch.utils.data.datapipes.iter"], [21, "module-torch.utils.data.datapipes.map"], [21, "module-torch.utils.data.datapipes.utils"], [24, "module-torch.distributed"], [24, "module-torch.distributed.algorithms"], [24, "module-torch.distributed.algorithms.ddp_comm_hooks"], [24, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"], [24, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"], [24, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"], [24, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"], [24, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"], [24, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"], [24, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"], [24, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"], [24, "module-torch.distributed.algorithms.join"], [24, "module-torch.distributed.algorithms.model_averaging"], [24, "module-torch.distributed.algorithms.model_averaging.averagers"], [24, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"], [24, "module-torch.distributed.algorithms.model_averaging.utils"], [24, "module-torch.distributed.argparse_util"], [24, "module-torch.distributed.c10d_logger"], [24, "module-torch.distributed.checkpoint.api"], [24, "module-torch.distributed.checkpoint.default_planner"], [24, "module-torch.distributed.checkpoint.filesystem"], [24, "module-torch.distributed.checkpoint.metadata"], [24, "module-torch.distributed.checkpoint.optimizer"], [24, "module-torch.distributed.checkpoint.planner"], [24, "module-torch.distributed.checkpoint.planner_helpers"], [24, "module-torch.distributed.checkpoint.resharding"], [24, "module-torch.distributed.checkpoint.state_dict"], [24, "module-torch.distributed.checkpoint.state_dict_loader"], [24, "module-torch.distributed.checkpoint.state_dict_saver"], [24, "module-torch.distributed.checkpoint.storage"], [24, "module-torch.distributed.checkpoint.utils"], [24, "module-torch.distributed.collective_utils"], [24, "module-torch.distributed.constants"], [24, "module-torch.distributed.distributed_c10d"], [24, "module-torch.distributed.elastic"], [24, "module-torch.distributed.elastic.agent.server.api"], [24, "module-torch.distributed.elastic.agent.server.local_elastic_agent"], [24, "module-torch.distributed.elastic.events.api"], [24, "module-torch.distributed.elastic.events.handlers"], [24, "module-torch.distributed.elastic.metrics.api"], [24, "module-torch.distributed.elastic.multiprocessing.api"], [24, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"], [24, "module-torch.distributed.elastic.multiprocessing.errors.handlers"], [24, "module-torch.distributed.elastic.multiprocessing.redirects"], [24, "module-torch.distributed.elastic.multiprocessing.tail_log"], [24, "module-torch.distributed.elastic.rendezvous.api"], [24, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"], [24, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"], [24, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"], [24, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"], [24, "module-torch.distributed.elastic.rendezvous.etcd_server"], [24, "module-torch.distributed.elastic.rendezvous.etcd_store"], [24, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"], [24, "module-torch.distributed.elastic.rendezvous.utils"], [24, "module-torch.distributed.elastic.timer.api"], [24, "module-torch.distributed.elastic.timer.file_based_local_timer"], [24, "module-torch.distributed.elastic.timer.local_timer"], [24, "module-torch.distributed.elastic.utils"], [24, "module-torch.distributed.elastic.utils.api"], [24, "module-torch.distributed.elastic.utils.data"], [24, "module-torch.distributed.elastic.utils.data.cycling_iterator"], [24, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"], [24, "module-torch.distributed.elastic.utils.distributed"], [24, "module-torch.distributed.elastic.utils.log_level"], [24, "module-torch.distributed.elastic.utils.logging"], [24, "module-torch.distributed.elastic.utils.store"], [24, "module-torch.distributed.fsdp.api"], [24, "module-torch.distributed.fsdp.fully_sharded_data_parallel"], [24, "module-torch.distributed.fsdp.sharded_grad_scaler"], [24, "module-torch.distributed.fsdp.wrap"], [24, "module-torch.distributed.launch"], [24, "module-torch.distributed.launcher"], [24, "module-torch.distributed.launcher.api"], [24, "module-torch.distributed.logging_handlers"], [24, "module-torch.distributed.nn"], [24, "module-torch.distributed.nn.api"], [24, "module-torch.distributed.nn.api.remote_module"], [24, "module-torch.distributed.nn.functional"], [24, "module-torch.distributed.nn.jit"], [24, "module-torch.distributed.nn.jit.instantiator"], [24, "module-torch.distributed.nn.jit.templates"], [24, "module-torch.distributed.nn.jit.templates.remote_module_template"], [24, "module-torch.distributed.optim.apply_optimizer_in_backward"], [24, "module-torch.distributed.optim.functional_adadelta"], [24, "module-torch.distributed.optim.functional_adagrad"], [24, "module-torch.distributed.optim.functional_adam"], [24, "module-torch.distributed.optim.functional_adamax"], [24, "module-torch.distributed.optim.functional_adamw"], [24, "module-torch.distributed.optim.functional_rmsprop"], [24, "module-torch.distributed.optim.functional_rprop"], [24, "module-torch.distributed.optim.functional_sgd"], [24, "module-torch.distributed.optim.named_optimizer"], [24, "module-torch.distributed.optim.optimizer"], [24, "module-torch.distributed.optim.post_localSGD_optimizer"], [24, "module-torch.distributed.optim.utils"], [24, "module-torch.distributed.optim.zero_redundancy_optimizer"], [24, "module-torch.distributed.pipeline"], [24, "module-torch.distributed.pipeline.sync"], [24, "module-torch.distributed.pipeline.sync.batchnorm"], [24, "module-torch.distributed.pipeline.sync.checkpoint"], [24, "module-torch.distributed.pipeline.sync.copy"], [24, "module-torch.distributed.pipeline.sync.dependency"], [24, "module-torch.distributed.pipeline.sync.microbatch"], [24, "module-torch.distributed.pipeline.sync.phony"], [24, "module-torch.distributed.pipeline.sync.pipe"], [24, "module-torch.distributed.pipeline.sync.pipeline"], [24, "module-torch.distributed.pipeline.sync.skip"], [24, "module-torch.distributed.pipeline.sync.skip.layout"], [24, "module-torch.distributed.pipeline.sync.skip.namespace"], [24, "module-torch.distributed.pipeline.sync.skip.portal"], [24, "module-torch.distributed.pipeline.sync.skip.skippable"], [24, "module-torch.distributed.pipeline.sync.skip.tracker"], [24, "module-torch.distributed.pipeline.sync.stream"], [24, "module-torch.distributed.pipeline.sync.utils"], [24, "module-torch.distributed.pipeline.sync.worker"], [24, "module-torch.distributed.remote_device"], [24, "module-torch.distributed.rendezvous"], [24, "module-torch.distributed.rpc.api"], [24, "module-torch.distributed.rpc.backend_registry"], [24, "module-torch.distributed.rpc.constants"], [24, "module-torch.distributed.rpc.functions"], [24, "module-torch.distributed.rpc.internal"], [24, "module-torch.distributed.rpc.options"], [24, "module-torch.distributed.rpc.rref_proxy"], [24, "module-torch.distributed.rpc.server_process_global_profiler"], [24, "module-torch.distributed.tensor"], [24, "module-torch.distributed.tensor.parallel.api"], [24, "module-torch.distributed.tensor.parallel.ddp"], [24, "module-torch.distributed.tensor.parallel.fsdp"], [24, "module-torch.distributed.tensor.parallel.input_reshard"], [24, "module-torch.distributed.tensor.parallel.style"], [24, "module-torch.distributed.utils"], [26, "module-torch.distributed.checkpoint"], [28, "module-torch.distributed.optim"], [29, "module-torch.distributed.tensor.parallel"], [30, "module-torch.distributions"], [30, "module-torch.distributions.bernoulli"], [30, "module-torch.distributions.beta"], [30, "module-torch.distributions.binomial"], [30, "module-torch.distributions.categorical"], [30, "module-torch.distributions.cauchy"], [30, "module-torch.distributions.chi2"], [30, "module-torch.distributions.constraint_registry"], [30, "module-torch.distributions.constraints"], [30, "module-torch.distributions.continuous_bernoulli"], [30, "module-torch.distributions.dirichlet"], [30, "module-torch.distributions.distribution"], [30, "module-torch.distributions.exp_family"], [30, "module-torch.distributions.exponential"], [30, "module-torch.distributions.fishersnedecor"], [30, "module-torch.distributions.gamma"], [30, "module-torch.distributions.geometric"], [30, "module-torch.distributions.gumbel"], [30, "module-torch.distributions.half_cauchy"], [30, "module-torch.distributions.half_normal"], [30, "module-torch.distributions.independent"], [30, "module-torch.distributions.kl"], [30, "module-torch.distributions.kumaraswamy"], [30, "module-torch.distributions.laplace"], [30, "module-torch.distributions.lkj_cholesky"], [30, "module-torch.distributions.log_normal"], [30, "module-torch.distributions.logistic_normal"], [30, "module-torch.distributions.lowrank_multivariate_normal"], [30, "module-torch.distributions.mixture_same_family"], [30, "module-torch.distributions.multinomial"], [30, "module-torch.distributions.multivariate_normal"], [30, "module-torch.distributions.negative_binomial"], [30, "module-torch.distributions.normal"], [30, "module-torch.distributions.one_hot_categorical"], [30, "module-torch.distributions.pareto"], [30, "module-torch.distributions.poisson"], [30, "module-torch.distributions.relaxed_bernoulli"], [30, "module-torch.distributions.relaxed_categorical"], [30, "module-torch.distributions.studentT"], [30, "module-torch.distributions.transformed_distribution"], [30, "module-torch.distributions.transforms"], [30, "module-torch.distributions.uniform"], [30, "module-torch.distributions.utils"], [30, "module-torch.distributions.von_mises"], [30, "module-torch.distributions.weibull"], [30, "module-torch.distributions.wishart"], [32, "module-torch.distributed.elastic.agent"], [32, "module-torch.distributed.elastic.agent.server"], [34, "module-torch.distributed.elastic.multiprocessing.errors"], [35, "module-torch.distributed.elastic.events"], [38, "module-torch.distributed.elastic.metrics"], [39, "module-torch.distributed.elastic.multiprocessing"], [41, "module-torch.distributed.elastic.rendezvous"], [41, "module-torch.distributed.elastic.rendezvous.registry"], [42, "module-torch.distributed.run"], [43, "module-torch.distributed.elastic.timer"], [45, "module-torch.export"], [45, "module-torch.export.exported_program"], [47, "module-torch.fft"], [48, "module-torch.distributed.fsdp"], [50, "module-torch.func"], [55, "module-torch.futures"], [56, "module-torch.fx"], [56, "module-torch.fx.annotate"], [56, "module-torch.fx.config"], [56, "module-torch.fx.experimental"], [56, "module-torch.fx.experimental.accelerator_partitioner"], [56, "module-torch.fx.experimental.const_fold"], [56, "module-torch.fx.experimental.debug"], [56, "module-torch.fx.experimental.graph_gradual_typechecker"], [56, "module-torch.fx.experimental.merge_matmul"], [56, "module-torch.fx.experimental.meta_tracer"], [56, "module-torch.fx.experimental.migrate_gradual_types"], [56, "module-torch.fx.experimental.migrate_gradual_types.constraint"], [56, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"], [56, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"], [56, "module-torch.fx.experimental.migrate_gradual_types.operation"], [56, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"], [56, "module-torch.fx.experimental.migrate_gradual_types.util"], [56, "module-torch.fx.experimental.migrate_gradual_types.z3_types"], [56, "module-torch.fx.experimental.normalize"], [56, "module-torch.fx.experimental.optimization"], [56, "module-torch.fx.experimental.partitioner_utils"], [56, "module-torch.fx.experimental.proxy_tensor"], [56, "module-torch.fx.experimental.recording"], [56, "module-torch.fx.experimental.refinement_types"], [56, "module-torch.fx.experimental.rewriter"], [56, "module-torch.fx.experimental.schema_type_annotation"], [56, "module-torch.fx.experimental.symbolic_shapes"], [56, "module-torch.fx.experimental.unification"], [56, "module-torch.fx.experimental.unification.core"], [56, "module-torch.fx.experimental.unification.dispatch"], [56, "module-torch.fx.experimental.unification.match"], [56, "module-torch.fx.experimental.unification.more"], [56, "module-torch.fx.experimental.unification.multipledispatch"], [56, "module-torch.fx.experimental.unification.multipledispatch.conflict"], [56, "module-torch.fx.experimental.unification.multipledispatch.core"], [56, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"], [56, "module-torch.fx.experimental.unification.multipledispatch.utils"], [56, "module-torch.fx.experimental.unification.multipledispatch.variadic"], [56, "module-torch.fx.experimental.unification.unification_tools"], [56, "module-torch.fx.experimental.unification.utils"], [56, "module-torch.fx.experimental.unification.variable"], [56, "module-torch.fx.experimental.unify_refinements"], [56, "module-torch.fx.experimental.validator"], [56, "module-torch.fx.graph"], [56, "module-torch.fx.graph_module"], [56, "module-torch.fx.immutable_collections"], [56, "module-torch.fx.interpreter"], [56, "module-torch.fx.node"], [56, "module-torch.fx.operator_schemas"], [56, "module-torch.fx.passes"], [56, "module-torch.fx.passes.annotate_getitem_nodes"], [56, "module-torch.fx.passes.backends"], [56, "module-torch.fx.passes.backends.cudagraphs"], [56, "module-torch.fx.passes.dialect"], [56, "module-torch.fx.passes.dialect.common"], [56, "module-torch.fx.passes.dialect.common.cse_pass"], [56, "module-torch.fx.passes.fake_tensor_prop"], [56, "module-torch.fx.passes.graph_drawer"], [56, "module-torch.fx.passes.graph_manipulation"], [56, "module-torch.fx.passes.infra"], [56, "module-torch.fx.passes.infra.partitioner"], [56, "module-torch.fx.passes.infra.pass_base"], [56, "module-torch.fx.passes.infra.pass_manager"], [56, "module-torch.fx.passes.net_min_base"], [56, "module-torch.fx.passes.operator_support"], [56, "module-torch.fx.passes.param_fetch"], [56, "module-torch.fx.passes.pass_manager"], [56, "module-torch.fx.passes.reinplace"], [56, "module-torch.fx.passes.shape_prop"], [56, "module-torch.fx.passes.split_module"], [56, "module-torch.fx.passes.split_utils"], [56, "module-torch.fx.passes.splitter_base"], [56, "module-torch.fx.passes.tests"], [56, "module-torch.fx.passes.tests.test_pass_manager"], [56, "module-torch.fx.passes.tools_common"], [56, "module-torch.fx.passes.utils"], [56, "module-torch.fx.passes.utils.common"], [56, "module-torch.fx.passes.utils.fuser_utils"], [56, "module-torch.fx.passes.utils.matcher_utils"], [56, "module-torch.fx.passes.utils.source_matcher_utils"], [56, "module-torch.fx.proxy"], [56, "module-torch.fx.subgraph_rewriter"], [56, "module-torch.fx.tensor_type"], [56, "module-torch.fx.traceback"], [1866, "module-torch.hub"], [1868, "module-torch.jit"], [1868, "module-torch.jit.annotations"], [1868, "module-torch.jit.frontend"], [1868, "module-torch.jit.generate_bytecode"], [1868, "module-torch.jit.mobile"], [1868, "module-torch.jit.quantized"], [1869, "module-torch.jit.supported_ops"], [1873, "module-torch.jit.unsupported_tensor_ops"], [1874, "module-torch.utils.jit"], [1875, "module-torch.library"], [1876, "module-torch.linalg"], [1877, "module-torch._logging"], [1878, "module-torch.masked"], [1878, "module-torch.masked.maskedtensor"], [1878, "module-torch.masked.maskedtensor.binary"], [1878, "module-torch.masked.maskedtensor.core"], [1878, "module-torch.masked.maskedtensor.creation"], [1878, "module-torch.masked.maskedtensor.passthrough"], [1878, "module-torch.masked.maskedtensor.reductions"], [1878, "module-torch.masked.maskedtensor.unary"], [1880, "module-torch.utils.model_zoo"], [1881, "module-torch.monitor"], [1882, "module-torch.mps"], [1882, "module-torch.mps.event"], [1882, "module-torch.mps.profiler"], [1883, "module-torch.multiprocessing"], [1883, "module-torch.multiprocessing.pool"], [1883, "module-torch.multiprocessing.queue"], [1883, "module-torch.multiprocessing.reductions"], [1883, "module-torch.multiprocessing.spawn"], [1886, "module-torch.nested"], [1887, "module-torch.nn"], [1887, "module-torch.nn.backends"], [1887, "module-torch.nn.backends.thnn"], [1887, "module-torch.nn.common_types"], [1887, "module-torch.nn.cpp"], [1887, "module-torch.nn.functional"], [1887, "module-torch.nn.grad"], [1887, "module-torch.nn.init"], [1887, "module-torch.nn.modules"], [1887, "module-torch.nn.modules.activation"], [1887, "module-torch.nn.modules.adaptive"], [1887, "module-torch.nn.modules.batchnorm"], [1887, "module-torch.nn.modules.channelshuffle"], [1887, "module-torch.nn.modules.container"], [1887, "module-torch.nn.modules.conv"], [1887, "module-torch.nn.modules.distance"], [1887, "module-torch.nn.modules.dropout"], [1887, "module-torch.nn.modules.flatten"], [1887, "module-torch.nn.modules.fold"], [1887, "module-torch.nn.modules.instancenorm"], [1887, "module-torch.nn.modules.lazy"], [1887, "module-torch.nn.modules.linear"], [1887, "module-torch.nn.modules.loss"], [1887, "module-torch.nn.modules.module"], [1887, "module-torch.nn.modules.normalization"], [1887, "module-torch.nn.modules.padding"], [1887, "module-torch.nn.modules.pixelshuffle"], [1887, "module-torch.nn.modules.pooling"], [1887, "module-torch.nn.modules.rnn"], [1887, "module-torch.nn.modules.sparse"], [1887, "module-torch.nn.modules.transformer"], [1887, "module-torch.nn.modules.upsampling"], [1887, "module-torch.nn.modules.utils"], [1887, "module-torch.nn.parallel"], [1887, "module-torch.nn.parallel.comm"], [1887, "module-torch.nn.parallel.data_parallel"], [1887, "module-torch.nn.parallel.distributed"], [1887, "module-torch.nn.parallel.parallel_apply"], [1887, "module-torch.nn.parallel.replicate"], [1887, "module-torch.nn.parallel.scatter_gather"], [1887, "module-torch.nn.parameter"], [1887, "module-torch.nn.utils"], [1887, "module-torch.nn.utils.clip_grad"], [1887, "module-torch.nn.utils.convert_parameters"], [1887, "module-torch.nn.utils.fusion"], [1887, "module-torch.nn.utils.init"], [1887, "module-torch.nn.utils.memory_format"], [1887, "module-torch.nn.utils.parametrizations"], [1887, "module-torch.nn.utils.parametrize"], [1887, "module-torch.nn.utils.prune"], [1887, "module-torch.nn.utils.rnn"], [1887, "module-torch.nn.utils.spectral_norm"], [1887, "module-torch.nn.utils.stateless"], [1887, "module-torch.nn.utils.weight_norm"], [1909, "module-torch.onnx.errors"], [1909, "module-torch.onnx.operators"], [1909, "module-torch.onnx.symbolic_caffe2"], [1909, "module-torch.onnx.symbolic_helper"], [1909, "module-torch.onnx.symbolic_opset10"], [1909, "module-torch.onnx.symbolic_opset11"], [1909, "module-torch.onnx.symbolic_opset12"], [1909, "module-torch.onnx.symbolic_opset13"], [1909, "module-torch.onnx.symbolic_opset14"], [1909, "module-torch.onnx.symbolic_opset15"], [1909, "module-torch.onnx.symbolic_opset16"], [1909, "module-torch.onnx.symbolic_opset17"], [1909, "module-torch.onnx.symbolic_opset18"], [1909, "module-torch.onnx.symbolic_opset7"], [1909, "module-torch.onnx.symbolic_opset8"], [1909, "module-torch.onnx.symbolic_opset9"], [1909, "module-torch.onnx.utils"], [1909, "module-torch.onnx.verification"], [1912, "module-torch.onnx"], [1914, "module-torch.optim"], [1914, "module-torch.optim.adadelta"], [1914, "module-torch.optim.adagrad"], [1914, "module-torch.optim.adam"], [1914, "module-torch.optim.adamax"], [1914, "module-torch.optim.adamw"], [1914, "module-torch.optim.asgd"], [1914, "module-torch.optim.lbfgs"], [1914, "module-torch.optim.lr_scheduler"], [1914, "module-torch.optim.nadam"], [1914, "module-torch.optim.optimizer"], [1914, "module-torch.optim.radam"], [1914, "module-torch.optim.rmsprop"], [1914, "module-torch.optim.rprop"], [1914, "module-torch.optim.sgd"], [1914, "module-torch.optim.sparse_adam"], [1914, "module-torch.optim.swa_utils"], [1915, "module-torch.package"], [1915, "module-torch.package.analyze"], [1915, "module-torch.package.analyze.find_first_use_of_broken_modules"], [1915, "module-torch.package.analyze.is_from_package"], [1915, "module-torch.package.analyze.trace_dependencies"], [1915, "module-torch.package.file_structure_representation"], [1915, "module-torch.package.find_file_dependencies"], [1915, "module-torch.package.glob_group"], [1915, "module-torch.package.importer"], [1915, "module-torch.package.package_exporter"], [1915, "module-torch.package.package_importer"], [1917, "module-torch.profiler"], [1917, "module-torch.profiler.itt"], [1917, "module-torch.profiler.profiler"], [1917, "module-torch.profiler.python_tracer"], [1918, "module-torch.ao"], [1918, "module-torch.ao.nn"], [1918, "module-torch.ao.nn.intrinsic.modules.fused"], [1918, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"], [1918, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"], [1918, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"], [1918, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [1918, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"], [1918, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"], [1918, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"], [1918, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"], [1918, "module-torch.ao.nn.qat.dynamic.modules.linear"], [1918, "module-torch.ao.nn.qat.modules.conv"], [1918, "module-torch.ao.nn.qat.modules.embedding_ops"], [1918, "module-torch.ao.nn.qat.modules.linear"], [1918, "module-torch.ao.nn.quantizable"], [1918, "module-torch.ao.nn.quantizable.modules"], [1918, "module-torch.ao.nn.quantizable.modules.activation"], [1918, "module-torch.ao.nn.quantizable.modules.rnn"], [1918, "module-torch.ao.nn.quantized"], [1918, "module-torch.ao.nn.quantized.dynamic.modules.conv"], [1918, "module-torch.ao.nn.quantized.dynamic.modules.linear"], [1918, "module-torch.ao.nn.quantized.dynamic.modules.rnn"], [1918, "module-torch.ao.nn.quantized.modules.activation"], [1918, "module-torch.ao.nn.quantized.modules.batchnorm"], [1918, "module-torch.ao.nn.quantized.modules.conv"], [1918, "module-torch.ao.nn.quantized.modules.dropout"], [1918, "module-torch.ao.nn.quantized.modules.embedding_ops"], [1918, "module-torch.ao.nn.quantized.modules.functional_modules"], [1918, "module-torch.ao.nn.quantized.modules.linear"], [1918, "module-torch.ao.nn.quantized.modules.normalization"], [1918, "module-torch.ao.nn.quantized.modules.rnn"], [1918, "module-torch.ao.nn.quantized.modules.utils"], [1918, "module-torch.ao.nn.quantized.reference"], [1918, "module-torch.ao.nn.quantized.reference.modules"], [1918, "module-torch.ao.nn.quantized.reference.modules.conv"], [1918, "module-torch.ao.nn.quantized.reference.modules.linear"], [1918, "module-torch.ao.nn.quantized.reference.modules.rnn"], [1918, "module-torch.ao.nn.quantized.reference.modules.sparse"], [1918, "module-torch.ao.nn.quantized.reference.modules.utils"], [1918, "module-torch.ao.nn.sparse"], [1918, "module-torch.ao.nn.sparse.quantized"], [1918, "module-torch.ao.nn.sparse.quantized.dynamic"], [1918, "module-torch.ao.nn.sparse.quantized.dynamic.linear"], [1918, "module-torch.ao.nn.sparse.quantized.linear"], [1918, "module-torch.ao.nn.sparse.quantized.utils"], [1918, "module-torch.ao.ns"], [1918, "module-torch.ao.ns.fx"], [1918, "module-torch.ao.ns.fx.graph_matcher"], [1918, "module-torch.ao.ns.fx.graph_passes"], [1918, "module-torch.ao.ns.fx.mappings"], [1918, "module-torch.ao.ns.fx.n_shadows_utils"], [1918, "module-torch.ao.ns.fx.ns_types"], [1918, "module-torch.ao.ns.fx.pattern_utils"], [1918, "module-torch.ao.ns.fx.qconfig_multi_mapping"], [1918, "module-torch.ao.ns.fx.utils"], [1918, "module-torch.ao.ns.fx.weight_utils"], [1918, "module-torch.ao.pruning"], [1918, "module-torch.ao.pruning.scheduler"], [1918, "module-torch.ao.pruning.scheduler.base_scheduler"], [1918, "module-torch.ao.pruning.scheduler.cubic_scheduler"], [1918, "module-torch.ao.pruning.scheduler.lambda_scheduler"], [1918, "module-torch.ao.pruning.sparsifier"], [1918, "module-torch.ao.pruning.sparsifier.base_sparsifier"], [1918, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"], [1918, "module-torch.ao.pruning.sparsifier.utils"], [1918, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"], [1918, "module-torch.ao.quantization"], [1918, "module-torch.ao.quantization.backend_config"], [1918, "module-torch.ao.quantization.backend_config.backend_config"], [1918, "module-torch.ao.quantization.backend_config.executorch"], [1918, "module-torch.ao.quantization.backend_config.fbgemm"], [1918, "module-torch.ao.quantization.backend_config.native"], [1918, "module-torch.ao.quantization.backend_config.observation_type"], [1918, "module-torch.ao.quantization.backend_config.onednn"], [1918, "module-torch.ao.quantization.backend_config.qnnpack"], [1918, "module-torch.ao.quantization.backend_config.tensorrt"], [1918, "module-torch.ao.quantization.backend_config.utils"], [1918, "module-torch.ao.quantization.backend_config.x86"], [1918, "module-torch.ao.quantization.fake_quantize"], [1918, "module-torch.ao.quantization.fuse_modules"], [1918, "module-torch.ao.quantization.fuser_method_mappings"], [1918, "module-torch.ao.quantization.fx"], [1918, "module-torch.ao.quantization.fx.convert"], [1918, "module-torch.ao.quantization.fx.custom_config"], [1918, "module-torch.ao.quantization.fx.fuse"], [1918, "module-torch.ao.quantization.fx.fuse_handler"], [1918, "module-torch.ao.quantization.fx.graph_module"], [1918, "module-torch.ao.quantization.fx.lower_to_fbgemm"], [1918, "module-torch.ao.quantization.fx.lower_to_qnnpack"], [1918, "module-torch.ao.quantization.fx.lstm_utils"], [1918, "module-torch.ao.quantization.fx.match_utils"], [1918, "module-torch.ao.quantization.fx.pattern_utils"], [1918, "module-torch.ao.quantization.fx.prepare"], [1918, "module-torch.ao.quantization.fx.qconfig_mapping_utils"], [1918, "module-torch.ao.quantization.fx.quantize_handler"], [1918, "module-torch.ao.quantization.fx.tracer"], [1918, "module-torch.ao.quantization.fx.utils"], [1918, "module-torch.ao.quantization.observer"], [1918, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"], [1918, "module-torch.ao.quantization.pt2e.eval_utils"], [1918, "module-torch.ao.quantization.pt2e.graph_utils"], [1918, "module-torch.ao.quantization.pt2e.port_metadata_pass"], [1918, "module-torch.ao.quantization.pt2e.prepare"], [1918, "module-torch.ao.quantization.pt2e.qat_utils"], [1918, "module-torch.ao.quantization.pt2e.representation.rewrite"], [1918, "module-torch.ao.quantization.pt2e.utils"], [1918, "module-torch.ao.quantization.qconfig"], [1918, "module-torch.ao.quantization.qconfig_mapping"], [1918, "module-torch.ao.quantization.quant_type"], [1918, "module-torch.ao.quantization.quantization_mappings"], [1918, "module-torch.ao.quantization.quantize"], [1918, "module-torch.ao.quantization.quantize_fx"], [1918, "module-torch.ao.quantization.quantize_jit"], [1918, "module-torch.ao.quantization.quantize_pt2e"], [1918, "module-torch.ao.quantization.quantizer.composable_quantizer"], [1918, "module-torch.ao.quantization.quantizer.embedding_quantizer"], [1918, "module-torch.ao.quantization.quantizer.quantizer"], [1918, "module-torch.ao.quantization.quantizer.utils"], [1918, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"], [1918, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"], [1918, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"], [1918, "module-torch.ao.quantization.stubs"], [1918, "module-torch.ao.quantization.utils"], [1918, "module-torch.nn.intrinsic.modules.fused"], [1918, "module-torch.nn.intrinsic.qat.modules.conv_fused"], [1918, "module-torch.nn.intrinsic.qat.modules.linear_fused"], [1918, "module-torch.nn.intrinsic.qat.modules.linear_relu"], [1918, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [1918, "module-torch.nn.intrinsic.quantized.modules.bn_relu"], [1918, "module-torch.nn.intrinsic.quantized.modules.conv_relu"], [1918, "module-torch.nn.intrinsic.quantized.modules.linear_relu"], [1918, "module-torch.nn.qat.dynamic.modules.linear"], [1918, "module-torch.nn.qat.modules.conv"], [1918, "module-torch.nn.qat.modules.embedding_ops"], [1918, "module-torch.nn.qat.modules.linear"], [1918, "module-torch.nn.quantizable.modules.activation"], [1918, "module-torch.nn.quantizable.modules.rnn"], [1918, "module-torch.nn.quantized.dynamic.modules.conv"], [1918, "module-torch.nn.quantized.dynamic.modules.linear"], [1918, "module-torch.nn.quantized.dynamic.modules.rnn"], [1918, "module-torch.nn.quantized.functional"], [1918, "module-torch.nn.quantized.modules.activation"], [1918, "module-torch.nn.quantized.modules.batchnorm"], [1918, "module-torch.nn.quantized.modules.conv"], [1918, "module-torch.nn.quantized.modules.dropout"], [1918, "module-torch.nn.quantized.modules.embedding_ops"], [1918, "module-torch.nn.quantized.modules.functional_modules"], [1918, "module-torch.nn.quantized.modules.linear"], [1918, "module-torch.nn.quantized.modules.normalization"], [1918, "module-torch.nn.quantized.modules.rnn"], [1918, "module-torch.nn.quantized.modules.utils"], [1918, "module-torch.quantization.fake_quantize"], [1918, "module-torch.quantization.fuse_modules"], [1918, "module-torch.quantization.fuser_method_mappings"], [1918, "module-torch.quantization.fx.convert"], [1918, "module-torch.quantization.fx.fuse"], [1918, "module-torch.quantization.fx.fusion_patterns"], [1918, "module-torch.quantization.fx.graph_module"], [1918, "module-torch.quantization.fx.match_utils"], [1918, "module-torch.quantization.fx.pattern_utils"], [1918, "module-torch.quantization.fx.prepare"], [1918, "module-torch.quantization.fx.quantization_patterns"], [1918, "module-torch.quantization.fx.quantization_types"], [1918, "module-torch.quantization.fx.utils"], [1918, "module-torch.quantization.observer"], [1918, "module-torch.quantization.qconfig"], [1918, "module-torch.quantization.quant_type"], [1918, "module-torch.quantization.quantization_mappings"], [1918, "module-torch.quantization.quantize"], [1918, "module-torch.quantization.quantize_fx"], [1918, "module-torch.quantization.quantize_jit"], [1918, "module-torch.quantization.stubs"], [1918, "module-torch.quantization.utils"], [1921, "module-torch.ao.nn.intrinsic"], [1921, "module-torch.ao.nn.intrinsic.modules"], [1921, "module-torch.ao.nn.intrinsic.qat"], [1921, "module-torch.ao.nn.intrinsic.qat.modules"], [1921, "module-torch.ao.nn.intrinsic.quantized"], [1921, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1921, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1921, "module-torch.ao.nn.intrinsic.quantized.modules"], [1921, "module-torch.ao.nn.qat"], [1921, "module-torch.ao.nn.qat.dynamic"], [1921, "module-torch.ao.nn.qat.dynamic.modules"], [1921, "module-torch.ao.nn.qat.modules"], [1921, "module-torch.ao.nn.quantized.dynamic"], [1921, "module-torch.ao.nn.quantized.dynamic.modules"], [1921, "module-torch.ao.nn.quantized.functional"], [1921, "module-torch.ao.nn.quantized.modules"], [1921, "module-torch.ao.quantization.pt2e"], [1921, "module-torch.ao.quantization.pt2e.representation"], [1921, "module-torch.ao.quantization.quantizer"], [1921, "module-torch.nn.intrinsic"], [1921, "module-torch.nn.intrinsic.modules"], [1921, "module-torch.nn.intrinsic.qat"], [1921, "module-torch.nn.intrinsic.qat.modules"], [1921, "module-torch.nn.intrinsic.quantized"], [1921, "module-torch.nn.intrinsic.quantized.dynamic"], [1921, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1921, "module-torch.nn.intrinsic.quantized.modules"], [1921, "module-torch.nn.qat"], [1921, "module-torch.nn.qat.dynamic"], [1921, "module-torch.nn.qat.dynamic.modules"], [1921, "module-torch.nn.qat.modules"], [1921, "module-torch.nn.quantizable"], [1921, "module-torch.nn.quantizable.modules"], [1921, "module-torch.nn.quantized"], [1921, "module-torch.nn.quantized.dynamic"], [1921, "module-torch.nn.quantized.dynamic.modules"], [1921, "module-torch.nn.quantized.modules"], [1921, "module-torch.quantization"], [1921, "module-torch.quantization.fx"], [1922, "module-torch.random"], [1923, "module-torch.distributed.autograd"], [1923, "module-torch.distributed.rpc"], [1926, "module-torch.signal"], [1926, "module-torch.signal.windows"], [1927, "module-torch.sparse"], [1928, "module-torch.special"], [1932, "module-torch.utils.tensorboard"], [1934, "module-torch.testing"], [1935, "module-torch"], [1935, "module-torch.contrib"], [1935, "module-torch.functional"], [1935, "module-torch.quasirandom"], [1935, "module-torch.return_types"], [1935, "module-torch.serialization"], [1935, "module-torch.signal.windows.windows"], [1935, "module-torch.sparse.semi_structured"], [1935, "module-torch.storage"], [1935, "module-torch.torch_version"], [1935, "module-torch.types"], [1935, "module-torch.utils.backcompat"], [1935, "module-torch.utils.hipify"], [1935, "module-torch.utils.model_dump"], [1935, "module-torch.utils.viz"], [1935, "module-torch.version"], [1936, "module-torch.ao.ns._numeric_suite"], [1937, "module-torch.ao.ns._numeric_suite_fx"], [1939, "module-torch.compiler"], [1957, "module-torch.overrides"], [1960, "module-torch.utils"], [1960, "module-torch.utils.backend_registration"], [1960, "module-torch.utils.benchmark.examples.blas_compare_setup"], [1960, "module-torch.utils.benchmark.examples.compare"], [1960, "module-torch.utils.benchmark.examples.fuzzer"], [1960, "module-torch.utils.benchmark.examples.op_benchmark"], [1960, "module-torch.utils.benchmark.examples.simple_timeit"], [1960, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"], [1960, "module-torch.utils.benchmark.op_fuzzers.binary"], [1960, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"], [1960, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"], [1960, "module-torch.utils.benchmark.op_fuzzers.spectral"], [1960, "module-torch.utils.benchmark.op_fuzzers.unary"], [1960, "module-torch.utils.benchmark.utils.common"], [1960, "module-torch.utils.benchmark.utils.compare"], [1960, "module-torch.utils.benchmark.utils.compile"], [1960, "module-torch.utils.benchmark.utils.cpp_jit"], [1960, "module-torch.utils.benchmark.utils.fuzzer"], [1960, "module-torch.utils.benchmark.utils.sparse_fuzzer"], [1960, "module-torch.utils.benchmark.utils.timer"], [1960, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"], [1960, "module-torch.utils.bundled_inputs"], [1960, "module-torch.utils.checkpoint"], [1960, "module-torch.utils.collect_env"], [1960, "module-torch.utils.cpp_backtrace"], [1960, "module-torch.utils.cpp_extension"], [1960, "module-torch.utils.data.backward_compatibility"], [1960, "module-torch.utils.data.dataloader"], [1960, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"], [1960, "module-torch.utils.data.datapipes.dataframe.dataframes"], [1960, "module-torch.utils.data.datapipes.dataframe.datapipes"], [1960, "module-torch.utils.data.datapipes.dataframe.structures"], [1960, "module-torch.utils.data.datapipes.datapipe"], [1960, "module-torch.utils.data.datapipes.gen_pyi"], [1960, "module-torch.utils.data.datapipes.iter.callable"], [1960, "module-torch.utils.data.datapipes.iter.combinatorics"], [1960, "module-torch.utils.data.datapipes.iter.combining"], [1960, "module-torch.utils.data.datapipes.iter.filelister"], [1960, "module-torch.utils.data.datapipes.iter.fileopener"], [1960, "module-torch.utils.data.datapipes.iter.grouping"], [1960, "module-torch.utils.data.datapipes.iter.routeddecoder"], [1960, "module-torch.utils.data.datapipes.iter.selecting"], [1960, "module-torch.utils.data.datapipes.iter.sharding"], [1960, "module-torch.utils.data.datapipes.iter.streamreader"], [1960, "module-torch.utils.data.datapipes.iter.utils"], [1960, "module-torch.utils.data.datapipes.map.callable"], [1960, "module-torch.utils.data.datapipes.map.combinatorics"], [1960, "module-torch.utils.data.datapipes.map.combining"], [1960, "module-torch.utils.data.datapipes.map.grouping"], [1960, "module-torch.utils.data.datapipes.map.utils"], [1960, "module-torch.utils.data.datapipes.utils.common"], [1960, "module-torch.utils.data.datapipes.utils.decoder"], [1960, "module-torch.utils.data.datapipes.utils.snapshot"], [1960, "module-torch.utils.data.dataset"], [1960, "module-torch.utils.data.distributed"], [1960, "module-torch.utils.data.graph"], [1960, "module-torch.utils.data.graph_settings"], [1960, "module-torch.utils.data.sampler"], [1960, "module-torch.utils.dlpack"], [1960, "module-torch.utils.file_baton"], [1960, "module-torch.utils.flop_counter"], [1960, "module-torch.utils.hipify.constants"], [1960, "module-torch.utils.hipify.cuda_to_hip_mappings"], [1960, "module-torch.utils.hipify.hipify_python"], [1960, "module-torch.utils.hipify.version"], [1960, "module-torch.utils.hooks"], [1960, "module-torch.utils.jit.log_extract"], [1960, "module-torch.utils.mkldnn"], [1960, "module-torch.utils.mobile_optimizer"], [1960, "module-torch.utils.show_pickle"], [1960, "module-torch.utils.tensorboard.summary"], [1960, "module-torch.utils.tensorboard.writer"], [1960, "module-torch.utils.throughput_benchmark"], [1960, "module-torch.utils.weak"]], "scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[0, "module-torch.amp"]], "torch.amp.autocast_mode": [[0, "module-torch.amp.autocast_mode"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cpu.amp.autocast_mode": [[0, "module-torch.cpu.amp.autocast_mode"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "torch.cuda.amp.autocast_mode": [[0, "module-torch.cuda.amp.autocast_mode"]], "torch.cuda.amp.common": [[0, "module-torch.cuda.amp.common"]], "torch.cuda.amp.grad_scaler": [[0, "module-torch.cuda.amp.grad_scaler"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "torch.autograd.anomaly_mode": [[1, "module-torch.autograd.anomaly_mode"]], "torch.autograd.forward_ad": [[1, "module-torch.autograd.forward_ad"]], "torch.autograd.function": [[1, "module-torch.autograd.function"]], "torch.autograd.functional": [[1, "module-torch.autograd.functional"]], "torch.autograd.grad_mode": [[1, "module-torch.autograd.grad_mode"]], "torch.autograd.gradcheck": [[1, "module-torch.autograd.gradcheck"]], "torch.autograd.graph": [[1, "module-torch.autograd.graph"]], "torch.autograd.profiler": [[1, "module-torch.autograd.profiler"]], "torch.autograd.profiler_legacy": [[1, "module-torch.autograd.profiler_legacy"]], "torch.autograd.profiler_util": [[1, "module-torch.autograd.profiler_util"]], "torch.autograd.variable": [[1, "module-torch.autograd.variable"]], "sdpbackend (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.cudnn.rnn": [[2, "module-torch.backends.cudnn.rnn"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xeon.run_cpu": [[2, "module-torch.backends.xeon.run_cpu"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "cond() (in module torch._higher_order_ops.cond)": [[12, "torch._higher_order_ops.cond.cond"]], "parallel_info() (in module torch.__config__)": [[13, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[13, "torch.__config__.show"]], "torch.__config__": [[13, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[16, "module-torch.cpu"]], "torch.cuda": [[17, "module-torch.cuda"]], "torch.cuda.comm": [[17, "module-torch.cuda.comm"]], "torch.cuda.error": [[17, "module-torch.cuda.error"]], "torch.cuda.graphs": [[17, "module-torch.cuda.graphs"]], "torch.cuda.jiterator": [[17, "module-torch.cuda.jiterator"]], "torch.cuda.memory": [[17, "module-torch.cuda.memory"]], "torch.cuda.nccl": [[17, "module-torch.cuda.nccl"]], "torch.cuda.nvtx": [[17, "module-torch.cuda.nvtx"]], "torch.cuda.profiler": [[17, "module-torch.cuda.profiler"]], "torch.cuda.random": [[17, "module-torch.cuda.random"]], "torch.cuda.sparse": [[17, "module-torch.cuda.sparse"]], "torch.cuda.streams": [[17, "module-torch.cuda.streams"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[18, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[18, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[21, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[21, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[21, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[21, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[21, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[21, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[21, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[21, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[21, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[21, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[21, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[21, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[21, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[21, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[21, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[21, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[21, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[21, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[21, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[21, "torch.utils.data.random_split"]], "torch.utils.data": [[21, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[21, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[21, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[21, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[21, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[21, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[22, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[24, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[24, "torch.distributed.DistBackendError"]], "disterror (class in torch.distributed)": [[24, "torch.distributed.DistError"]], "distnetworkerror (class in torch.distributed)": [[24, "torch.distributed.DistNetworkError"]], "diststoreerror (class in torch.distributed)": [[24, "torch.distributed.DistStoreError"]], "filestore (class in torch.distributed)": [[24, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[24, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[24, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[24, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[24, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[24, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[24, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[24, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[24, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[24, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[24, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[24, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[24, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[24, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[24, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[24, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[24, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[24, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[24, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[24, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[24, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[24, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[24, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[24, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[24, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[24, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[24, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[24, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[24, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[24, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[24, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[24, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[24, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[24, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[24, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[24, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[24, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[24, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[24, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[24, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[24, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[24, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[24, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[24, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[24, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[24, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[24, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[24, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[24, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[24, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[24, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[24, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[24, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[24, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[24, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[24, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[24, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[24, "module-torch.distributed"]], "torch.distributed.algorithms": [[24, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[24, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook": [[24, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[24, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[24, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks": [[24, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks": [[24, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.post_localsgd_hook": [[24, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook": [[24, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks": [[24, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"]], "torch.distributed.algorithms.join": [[24, "module-torch.distributed.algorithms.join"]], "torch.distributed.algorithms.model_averaging": [[24, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.algorithms.model_averaging.averagers": [[24, "module-torch.distributed.algorithms.model_averaging.averagers"]], "torch.distributed.algorithms.model_averaging.hierarchical_model_averager": [[24, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"]], "torch.distributed.algorithms.model_averaging.utils": [[24, "module-torch.distributed.algorithms.model_averaging.utils"]], "torch.distributed.argparse_util": [[24, "module-torch.distributed.argparse_util"]], "torch.distributed.c10d_logger": [[24, "module-torch.distributed.c10d_logger"]], "torch.distributed.checkpoint.api": [[24, "module-torch.distributed.checkpoint.api"]], "torch.distributed.checkpoint.default_planner": [[24, "module-torch.distributed.checkpoint.default_planner"]], "torch.distributed.checkpoint.filesystem": [[24, "module-torch.distributed.checkpoint.filesystem"]], "torch.distributed.checkpoint.metadata": [[24, "module-torch.distributed.checkpoint.metadata"]], "torch.distributed.checkpoint.optimizer": [[24, "module-torch.distributed.checkpoint.optimizer"]], "torch.distributed.checkpoint.planner": [[24, "module-torch.distributed.checkpoint.planner"]], "torch.distributed.checkpoint.planner_helpers": [[24, "module-torch.distributed.checkpoint.planner_helpers"]], "torch.distributed.checkpoint.resharding": [[24, "module-torch.distributed.checkpoint.resharding"]], "torch.distributed.checkpoint.state_dict": [[24, "module-torch.distributed.checkpoint.state_dict"]], "torch.distributed.checkpoint.state_dict_loader": [[24, "module-torch.distributed.checkpoint.state_dict_loader"]], "torch.distributed.checkpoint.state_dict_saver": [[24, "module-torch.distributed.checkpoint.state_dict_saver"]], "torch.distributed.checkpoint.storage": [[24, "module-torch.distributed.checkpoint.storage"]], "torch.distributed.checkpoint.utils": [[24, "module-torch.distributed.checkpoint.utils"]], "torch.distributed.collective_utils": [[24, "module-torch.distributed.collective_utils"]], "torch.distributed.constants": [[24, "module-torch.distributed.constants"]], "torch.distributed.distributed_c10d": [[24, "module-torch.distributed.distributed_c10d"]], "torch.distributed.elastic": [[24, "module-torch.distributed.elastic"]], "torch.distributed.elastic.agent.server.api": [[24, "module-torch.distributed.elastic.agent.server.api"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[24, "module-torch.distributed.elastic.agent.server.local_elastic_agent"]], "torch.distributed.elastic.events.api": [[24, "module-torch.distributed.elastic.events.api"]], "torch.distributed.elastic.events.handlers": [[24, "module-torch.distributed.elastic.events.handlers"]], "torch.distributed.elastic.metrics.api": [[24, "module-torch.distributed.elastic.metrics.api"]], "torch.distributed.elastic.multiprocessing.api": [[24, "module-torch.distributed.elastic.multiprocessing.api"]], "torch.distributed.elastic.multiprocessing.errors.error_handler": [[24, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"]], "torch.distributed.elastic.multiprocessing.errors.handlers": [[24, "module-torch.distributed.elastic.multiprocessing.errors.handlers"]], "torch.distributed.elastic.multiprocessing.redirects": [[24, "module-torch.distributed.elastic.multiprocessing.redirects"]], "torch.distributed.elastic.multiprocessing.tail_log": [[24, "module-torch.distributed.elastic.multiprocessing.tail_log"]], "torch.distributed.elastic.rendezvous.api": [[24, "module-torch.distributed.elastic.rendezvous.api"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[24, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[24, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[24, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[24, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.etcd_server": [[24, "module-torch.distributed.elastic.rendezvous.etcd_server"]], "torch.distributed.elastic.rendezvous.etcd_store": [[24, "module-torch.distributed.elastic.rendezvous.etcd_store"]], "torch.distributed.elastic.rendezvous.static_tcp_rendezvous": [[24, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"]], "torch.distributed.elastic.rendezvous.utils": [[24, "module-torch.distributed.elastic.rendezvous.utils"]], "torch.distributed.elastic.timer.api": [[24, "module-torch.distributed.elastic.timer.api"]], "torch.distributed.elastic.timer.file_based_local_timer": [[24, "module-torch.distributed.elastic.timer.file_based_local_timer"]], "torch.distributed.elastic.timer.local_timer": [[24, "module-torch.distributed.elastic.timer.local_timer"]], "torch.distributed.elastic.utils": [[24, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.api": [[24, "module-torch.distributed.elastic.utils.api"]], "torch.distributed.elastic.utils.data": [[24, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.elastic.utils.data.cycling_iterator": [[24, "module-torch.distributed.elastic.utils.data.cycling_iterator"]], "torch.distributed.elastic.utils.data.elastic_distributed_sampler": [[24, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"]], "torch.distributed.elastic.utils.distributed": [[24, "module-torch.distributed.elastic.utils.distributed"]], "torch.distributed.elastic.utils.log_level": [[24, "module-torch.distributed.elastic.utils.log_level"]], "torch.distributed.elastic.utils.logging": [[24, "module-torch.distributed.elastic.utils.logging"]], "torch.distributed.elastic.utils.store": [[24, "module-torch.distributed.elastic.utils.store"]], "torch.distributed.fsdp.api": [[24, "module-torch.distributed.fsdp.api"]], "torch.distributed.fsdp.fully_sharded_data_parallel": [[24, "module-torch.distributed.fsdp.fully_sharded_data_parallel"]], "torch.distributed.fsdp.sharded_grad_scaler": [[24, "module-torch.distributed.fsdp.sharded_grad_scaler"]], "torch.distributed.fsdp.wrap": [[24, "module-torch.distributed.fsdp.wrap"]], "torch.distributed.launch": [[24, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[24, "module-torch.distributed.launcher"]], "torch.distributed.launcher.api": [[24, "module-torch.distributed.launcher.api"]], "torch.distributed.logging_handlers": [[24, "module-torch.distributed.logging_handlers"]], "torch.distributed.nn": [[24, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[24, "module-torch.distributed.nn.api"]], "torch.distributed.nn.api.remote_module": [[24, "module-torch.distributed.nn.api.remote_module"]], "torch.distributed.nn.functional": [[24, "module-torch.distributed.nn.functional"]], "torch.distributed.nn.jit": [[24, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.instantiator": [[24, "module-torch.distributed.nn.jit.instantiator"]], "torch.distributed.nn.jit.templates": [[24, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.nn.jit.templates.remote_module_template": [[24, "module-torch.distributed.nn.jit.templates.remote_module_template"]], "torch.distributed.optim.apply_optimizer_in_backward": [[24, "module-torch.distributed.optim.apply_optimizer_in_backward"]], "torch.distributed.optim.functional_adadelta": [[24, "module-torch.distributed.optim.functional_adadelta"]], "torch.distributed.optim.functional_adagrad": [[24, "module-torch.distributed.optim.functional_adagrad"]], "torch.distributed.optim.functional_adam": [[24, "module-torch.distributed.optim.functional_adam"]], "torch.distributed.optim.functional_adamax": [[24, "module-torch.distributed.optim.functional_adamax"]], "torch.distributed.optim.functional_adamw": [[24, "module-torch.distributed.optim.functional_adamw"]], "torch.distributed.optim.functional_rmsprop": [[24, "module-torch.distributed.optim.functional_rmsprop"]], "torch.distributed.optim.functional_rprop": [[24, "module-torch.distributed.optim.functional_rprop"]], "torch.distributed.optim.functional_sgd": [[24, "module-torch.distributed.optim.functional_sgd"]], "torch.distributed.optim.named_optimizer": [[24, "module-torch.distributed.optim.named_optimizer"]], "torch.distributed.optim.optimizer": [[24, "module-torch.distributed.optim.optimizer"]], "torch.distributed.optim.post_localsgd_optimizer": [[24, "module-torch.distributed.optim.post_localSGD_optimizer"]], "torch.distributed.optim.utils": [[24, "module-torch.distributed.optim.utils"]], "torch.distributed.optim.zero_redundancy_optimizer": [[24, "module-torch.distributed.optim.zero_redundancy_optimizer"]], "torch.distributed.pipeline": [[24, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[24, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.batchnorm": [[24, "module-torch.distributed.pipeline.sync.batchnorm"]], "torch.distributed.pipeline.sync.checkpoint": [[24, "module-torch.distributed.pipeline.sync.checkpoint"]], "torch.distributed.pipeline.sync.copy": [[24, "module-torch.distributed.pipeline.sync.copy"]], "torch.distributed.pipeline.sync.dependency": [[24, "module-torch.distributed.pipeline.sync.dependency"]], "torch.distributed.pipeline.sync.microbatch": [[24, "module-torch.distributed.pipeline.sync.microbatch"]], "torch.distributed.pipeline.sync.phony": [[24, "module-torch.distributed.pipeline.sync.phony"]], "torch.distributed.pipeline.sync.pipe": [[24, "module-torch.distributed.pipeline.sync.pipe"]], "torch.distributed.pipeline.sync.pipeline": [[24, "module-torch.distributed.pipeline.sync.pipeline"]], "torch.distributed.pipeline.sync.skip": [[24, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.pipeline.sync.skip.layout": [[24, "module-torch.distributed.pipeline.sync.skip.layout"]], "torch.distributed.pipeline.sync.skip.namespace": [[24, "module-torch.distributed.pipeline.sync.skip.namespace"]], "torch.distributed.pipeline.sync.skip.portal": [[24, "module-torch.distributed.pipeline.sync.skip.portal"]], "torch.distributed.pipeline.sync.skip.skippable": [[24, "module-torch.distributed.pipeline.sync.skip.skippable"]], "torch.distributed.pipeline.sync.skip.tracker": [[24, "module-torch.distributed.pipeline.sync.skip.tracker"]], "torch.distributed.pipeline.sync.stream": [[24, "module-torch.distributed.pipeline.sync.stream"]], "torch.distributed.pipeline.sync.utils": [[24, "module-torch.distributed.pipeline.sync.utils"]], "torch.distributed.pipeline.sync.worker": [[24, "module-torch.distributed.pipeline.sync.worker"]], "torch.distributed.remote_device": [[24, "module-torch.distributed.remote_device"]], "torch.distributed.rendezvous": [[24, "module-torch.distributed.rendezvous"]], "torch.distributed.rpc.api": [[24, "module-torch.distributed.rpc.api"]], "torch.distributed.rpc.backend_registry": [[24, "module-torch.distributed.rpc.backend_registry"]], "torch.distributed.rpc.constants": [[24, "module-torch.distributed.rpc.constants"]], "torch.distributed.rpc.functions": [[24, "module-torch.distributed.rpc.functions"]], "torch.distributed.rpc.internal": [[24, "module-torch.distributed.rpc.internal"]], "torch.distributed.rpc.options": [[24, "module-torch.distributed.rpc.options"]], "torch.distributed.rpc.rref_proxy": [[24, "module-torch.distributed.rpc.rref_proxy"]], "torch.distributed.rpc.server_process_global_profiler": [[24, "module-torch.distributed.rpc.server_process_global_profiler"]], "torch.distributed.tensor": [[24, "module-torch.distributed.tensor"]], "torch.distributed.tensor.parallel.api": [[24, "module-torch.distributed.tensor.parallel.api"]], "torch.distributed.tensor.parallel.ddp": [[24, "module-torch.distributed.tensor.parallel.ddp"]], "torch.distributed.tensor.parallel.fsdp": [[24, "module-torch.distributed.tensor.parallel.fsdp"]], "torch.distributed.tensor.parallel.input_reshard": [[24, "module-torch.distributed.tensor.parallel.input_reshard"]], "torch.distributed.tensor.parallel.style": [[24, "module-torch.distributed.tensor.parallel.style"]], "torch.distributed.utils": [[24, "module-torch.distributed.utils"]], "wait() (in module torch.distributed.store)": [[24, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[25, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[25, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[25, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[25, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[25, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[25, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[25, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[25, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[25, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[26, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[26, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[26, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[26, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[26, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[26, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[26, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[26, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[26, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[26, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[26, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[26, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[26, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[26, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[26, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[26, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[26, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[26, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[26, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[26, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[26, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[26, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[28, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[28, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[28, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[28, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[28, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[28, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[28, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[28, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[29, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[29, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[29, "torch.distributed.tensor.parallel.parallelize_module"]], "pre_dp_module_transform() (in module torch.distributed.tensor.parallel.ddp)": [[29, "torch.distributed.tensor.parallel.ddp.pre_dp_module_transform"]], "torch.distributed.tensor.parallel": [[29, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[30, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[30, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[30, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[30, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[30, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[30, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[30, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[30, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[30, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[30, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[30, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[30, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[30, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[30, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[30, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[30, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[30, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[30, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[30, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[30, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[30, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[30, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[30, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[30, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[30, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[30, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[30, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[30, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[30, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[30, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[30, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[30, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[30, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[30, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[30, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[30, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[30, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[30, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[30, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[30, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[30, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[30, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[30, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[30, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[30, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[30, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[30, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[30, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[30, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[30, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[30, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[30, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[30, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[30, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[30, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[30, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[30, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[30, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[30, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[30, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[30, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[30, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[30, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[30, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[30, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[30, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[30, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[30, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[30, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[30, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[30, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[30, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[30, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[30, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[30, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[30, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[30, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[30, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[30, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[30, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[30, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[30, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[30, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[30, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[30, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[30, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[30, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[30, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[30, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[30, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[30, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[30, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[30, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[30, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[30, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[30, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[30, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[30, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[30, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[30, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[30, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[30, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[30, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[30, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[30, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[30, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[30, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[30, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[30, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[30, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[30, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[30, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[30, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[30, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[30, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[30, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[30, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[30, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[30, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[30, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[30, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[30, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[30, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[30, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[30, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[30, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[30, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[30, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[30, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[30, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[30, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[30, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[30, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[30, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[30, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[30, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[30, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[30, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[30, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[30, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[30, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[30, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[30, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[30, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[30, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[30, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[30, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[30, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[30, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[30, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[30, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[30, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[30, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[30, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[30, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[30, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[30, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[30, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[30, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[30, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[30, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[30, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[30, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[30, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[30, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[30, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[30, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[30, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[30, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[30, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[30, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[30, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[30, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[30, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[30, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[30, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[30, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[30, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[30, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[30, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[30, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[30, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[30, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[30, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[30, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[30, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[30, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[30, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[30, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[30, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[30, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[30, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[30, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[30, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[30, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[30, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[30, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[30, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[30, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[30, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[30, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[30, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[30, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[30, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[30, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[30, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[30, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[30, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[30, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[30, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[30, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[30, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[30, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[30, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[30, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[30, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[30, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[30, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[30, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[30, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[30, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[30, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[30, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[30, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[30, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[30, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[30, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[30, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[30, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[30, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[30, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[30, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[30, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[30, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[30, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[30, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[30, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[30, "module-torch.distributions"]], "torch.distributions.bernoulli": [[30, "module-torch.distributions.bernoulli"]], "torch.distributions.beta": [[30, "module-torch.distributions.beta"]], "torch.distributions.binomial": [[30, "module-torch.distributions.binomial"]], "torch.distributions.categorical": [[30, "module-torch.distributions.categorical"]], "torch.distributions.cauchy": [[30, "module-torch.distributions.cauchy"]], "torch.distributions.chi2": [[30, "module-torch.distributions.chi2"]], "torch.distributions.constraint_registry": [[30, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[30, "module-torch.distributions.constraints"]], "torch.distributions.continuous_bernoulli": [[30, "module-torch.distributions.continuous_bernoulli"]], "torch.distributions.dirichlet": [[30, "module-torch.distributions.dirichlet"]], "torch.distributions.distribution": [[30, "module-torch.distributions.distribution"]], "torch.distributions.exp_family": [[30, "module-torch.distributions.exp_family"]], "torch.distributions.exponential": [[30, "module-torch.distributions.exponential"]], "torch.distributions.fishersnedecor": [[30, "module-torch.distributions.fishersnedecor"]], "torch.distributions.gamma": [[30, "module-torch.distributions.gamma"]], "torch.distributions.geometric": [[30, "module-torch.distributions.geometric"]], "torch.distributions.gumbel": [[30, "module-torch.distributions.gumbel"]], "torch.distributions.half_cauchy": [[30, "module-torch.distributions.half_cauchy"]], "torch.distributions.half_normal": [[30, "module-torch.distributions.half_normal"]], "torch.distributions.independent": [[30, "module-torch.distributions.independent"]], "torch.distributions.kl": [[30, "module-torch.distributions.kl"]], "torch.distributions.kumaraswamy": [[30, "module-torch.distributions.kumaraswamy"]], "torch.distributions.laplace": [[30, "module-torch.distributions.laplace"]], "torch.distributions.lkj_cholesky": [[30, "module-torch.distributions.lkj_cholesky"]], "torch.distributions.log_normal": [[30, "module-torch.distributions.log_normal"]], "torch.distributions.logistic_normal": [[30, "module-torch.distributions.logistic_normal"]], "torch.distributions.lowrank_multivariate_normal": [[30, "module-torch.distributions.lowrank_multivariate_normal"]], "torch.distributions.mixture_same_family": [[30, "module-torch.distributions.mixture_same_family"]], "torch.distributions.multinomial": [[30, "module-torch.distributions.multinomial"]], "torch.distributions.multivariate_normal": [[30, "module-torch.distributions.multivariate_normal"]], "torch.distributions.negative_binomial": [[30, "module-torch.distributions.negative_binomial"]], "torch.distributions.normal": [[30, "module-torch.distributions.normal"]], "torch.distributions.one_hot_categorical": [[30, "module-torch.distributions.one_hot_categorical"]], "torch.distributions.pareto": [[30, "module-torch.distributions.pareto"]], "torch.distributions.poisson": [[30, "module-torch.distributions.poisson"]], "torch.distributions.relaxed_bernoulli": [[30, "module-torch.distributions.relaxed_bernoulli"]], "torch.distributions.relaxed_categorical": [[30, "module-torch.distributions.relaxed_categorical"]], "torch.distributions.studentt": [[30, "module-torch.distributions.studentT"]], "torch.distributions.transformed_distribution": [[30, "module-torch.distributions.transformed_distribution"]], "torch.distributions.transforms": [[30, "module-torch.distributions.transforms"]], "torch.distributions.uniform": [[30, "module-torch.distributions.uniform"]], "torch.distributions.utils": [[30, "module-torch.distributions.utils"]], "torch.distributions.von_mises": [[30, "module-torch.distributions.von_mises"]], "torch.distributions.weibull": [[30, "module-torch.distributions.weibull"]], "torch.distributions.wishart": [[30, "module-torch.distributions.wishart"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[30, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[30, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[30, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[30, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[30, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[30, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[30, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[30, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[30, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[30, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[30, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[30, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[30, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[30, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[30, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[30, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[30, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[30, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[30, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[30, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[30, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[30, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[30, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[30, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[30, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[30, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[30, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[30, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[30, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[30, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[30, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[30, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[30, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[30, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[31, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[31, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[32, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[32, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[32, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[32, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[32, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[32, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[32, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[32, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[32, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[32, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[34, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[34, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[34, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[34, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[34, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[35, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[35, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[35, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[35, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[35, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[35, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[38, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[38, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[38, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[38, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[38, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[38, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[38, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[39, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[39, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[39, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[39, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[39, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[39, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[41, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[41, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[41, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[41, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[41, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[41, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[41, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[41, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[41, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[41, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[42, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[43, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[43, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[43, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[43, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[43, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[43, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[43, "module-torch.distributed.elastic.timer"]], "constraint (class in torch.export)": [[45, "torch.export.Constraint"]], "dim() (in module torch.export)": [[45, "torch.export.Dim"]], "exportbackwardsignature (class in torch.export)": [[45, "torch.export.ExportBackwardSignature"]], "exportgraphsignature (class in torch.export)": [[45, "torch.export.ExportGraphSignature"]], "exportedprogram (class in torch.export)": [[45, "torch.export.ExportedProgram"]], "modulecallentry (class in torch.export)": [[45, "torch.export.ModuleCallEntry"]], "modulecallsignature (class in torch.export)": [[45, "torch.export.ModuleCallSignature"]], "buffers() (torch.export.exportedprogram method)": [[45, "torch.export.ExportedProgram.buffers"]], "constrain_as_size() (in module torch.export)": [[45, "torch.export.constrain_as_size"]], "constrain_as_value() (in module torch.export)": [[45, "torch.export.constrain_as_value"]], "dims() (in module torch.export)": [[45, "torch.export.dims"]], "dynamic_dim() (in module torch.export)": [[45, "torch.export.dynamic_dim"]], "export() (in module torch.export)": [[45, "torch.export.export"]], "load() (in module torch.export)": [[45, "torch.export.load"]], "module() (torch.export.exportedprogram method)": [[45, "torch.export.ExportedProgram.module"]], "named_buffers() (torch.export.exportedprogram method)": [[45, "torch.export.ExportedProgram.named_buffers"]], "named_parameters() (torch.export.exportedprogram method)": [[45, "torch.export.ExportedProgram.named_parameters"]], "parameters() (torch.export.exportedprogram method)": [[45, "torch.export.ExportedProgram.parameters"]], "register_dataclass() (in module torch.export)": [[45, "torch.export.register_dataclass"]], "save() (in module torch.export)": [[45, "torch.export.save"]], "torch.export": [[45, "module-torch.export"]], "torch.export.exported_program": [[45, "module-torch.export.exported_program"]], "torch.fft": [[47, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp)": [[48, "torch.distributed.fsdp.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[48, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[48, "module-torch.distributed.fsdp"]], "torch.func": [[50, "module-torch.func"]], "future (class in torch.futures)": [[55, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[55, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[55, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[55, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[55, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[55, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[55, "torch.futures.Future.then"]], "torch.futures": [[55, "module-torch.futures"]], "value() (torch.futures.future method)": [[55, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[55, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[55, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[56, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[56, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[56, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[56, "torch.fx.Node"]], "proxy (class in torch.fx)": [[56, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[56, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[56, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[56, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[56, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[56, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[56, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[56, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[56, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[56, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[56, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[56, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[56, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[56, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[56, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[56, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[56, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[56, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[56, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[56, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[56, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[56, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[56, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[56, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[56, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[56, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[56, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[56, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[56, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[56, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[56, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[56, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[56, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[56, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[56, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[56, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[56, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[56, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[56, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[56, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[56, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[56, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[56, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[56, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[56, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[56, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[56, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[56, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[56, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[56, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[56, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[56, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[56, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[56, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[56, "module-torch.fx"]], "torch.fx.annotate": [[56, "module-torch.fx.annotate"]], "torch.fx.config": [[56, "module-torch.fx.config"]], "torch.fx.experimental": [[56, "module-torch.fx.experimental"]], "torch.fx.experimental.accelerator_partitioner": [[56, "module-torch.fx.experimental.accelerator_partitioner"]], "torch.fx.experimental.const_fold": [[56, "module-torch.fx.experimental.const_fold"]], "torch.fx.experimental.debug": [[56, "module-torch.fx.experimental.debug"]], "torch.fx.experimental.graph_gradual_typechecker": [[56, "module-torch.fx.experimental.graph_gradual_typechecker"]], "torch.fx.experimental.merge_matmul": [[56, "module-torch.fx.experimental.merge_matmul"]], "torch.fx.experimental.meta_tracer": [[56, "module-torch.fx.experimental.meta_tracer"]], "torch.fx.experimental.migrate_gradual_types": [[56, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.migrate_gradual_types.constraint": [[56, "module-torch.fx.experimental.migrate_gradual_types.constraint"]], "torch.fx.experimental.migrate_gradual_types.constraint_generator": [[56, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"]], "torch.fx.experimental.migrate_gradual_types.constraint_transformation": [[56, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"]], "torch.fx.experimental.migrate_gradual_types.operation": [[56, "module-torch.fx.experimental.migrate_gradual_types.operation"]], "torch.fx.experimental.migrate_gradual_types.transform_to_z3": [[56, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"]], "torch.fx.experimental.migrate_gradual_types.util": [[56, "module-torch.fx.experimental.migrate_gradual_types.util"]], "torch.fx.experimental.migrate_gradual_types.z3_types": [[56, "module-torch.fx.experimental.migrate_gradual_types.z3_types"]], "torch.fx.experimental.normalize": [[56, "module-torch.fx.experimental.normalize"]], "torch.fx.experimental.optimization": [[56, "module-torch.fx.experimental.optimization"]], "torch.fx.experimental.partitioner_utils": [[56, "module-torch.fx.experimental.partitioner_utils"]], "torch.fx.experimental.proxy_tensor": [[56, "module-torch.fx.experimental.proxy_tensor"]], "torch.fx.experimental.recording": [[56, "module-torch.fx.experimental.recording"]], "torch.fx.experimental.refinement_types": [[56, "module-torch.fx.experimental.refinement_types"]], "torch.fx.experimental.rewriter": [[56, "module-torch.fx.experimental.rewriter"]], "torch.fx.experimental.schema_type_annotation": [[56, "module-torch.fx.experimental.schema_type_annotation"]], "torch.fx.experimental.symbolic_shapes": [[56, "module-torch.fx.experimental.symbolic_shapes"]], "torch.fx.experimental.unification": [[56, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.core": [[56, "module-torch.fx.experimental.unification.core"]], "torch.fx.experimental.unification.dispatch": [[56, "module-torch.fx.experimental.unification.dispatch"]], "torch.fx.experimental.unification.match": [[56, "module-torch.fx.experimental.unification.match"]], "torch.fx.experimental.unification.more": [[56, "module-torch.fx.experimental.unification.more"]], "torch.fx.experimental.unification.multipledispatch": [[56, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.experimental.unification.multipledispatch.conflict": [[56, "module-torch.fx.experimental.unification.multipledispatch.conflict"]], "torch.fx.experimental.unification.multipledispatch.core": [[56, "module-torch.fx.experimental.unification.multipledispatch.core"]], "torch.fx.experimental.unification.multipledispatch.dispatcher": [[56, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"]], "torch.fx.experimental.unification.multipledispatch.utils": [[56, "module-torch.fx.experimental.unification.multipledispatch.utils"]], "torch.fx.experimental.unification.multipledispatch.variadic": [[56, "module-torch.fx.experimental.unification.multipledispatch.variadic"]], "torch.fx.experimental.unification.unification_tools": [[56, "module-torch.fx.experimental.unification.unification_tools"]], "torch.fx.experimental.unification.utils": [[56, "module-torch.fx.experimental.unification.utils"]], "torch.fx.experimental.unification.variable": [[56, "module-torch.fx.experimental.unification.variable"]], "torch.fx.experimental.unify_refinements": [[56, "module-torch.fx.experimental.unify_refinements"]], "torch.fx.experimental.validator": [[56, "module-torch.fx.experimental.validator"]], "torch.fx.graph": [[56, "module-torch.fx.graph"]], "torch.fx.graph_module": [[56, "module-torch.fx.graph_module"]], "torch.fx.immutable_collections": [[56, "module-torch.fx.immutable_collections"]], "torch.fx.interpreter": [[56, "module-torch.fx.interpreter"]], "torch.fx.node": [[56, "module-torch.fx.node"]], "torch.fx.operator_schemas": [[56, "module-torch.fx.operator_schemas"]], "torch.fx.passes": [[56, "module-torch.fx.passes"]], "torch.fx.passes.annotate_getitem_nodes": [[56, "module-torch.fx.passes.annotate_getitem_nodes"]], "torch.fx.passes.backends": [[56, "module-torch.fx.passes.backends"]], "torch.fx.passes.backends.cudagraphs": [[56, "module-torch.fx.passes.backends.cudagraphs"]], "torch.fx.passes.dialect": [[56, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[56, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.dialect.common.cse_pass": [[56, "module-torch.fx.passes.dialect.common.cse_pass"]], "torch.fx.passes.fake_tensor_prop": [[56, "module-torch.fx.passes.fake_tensor_prop"]], "torch.fx.passes.graph_drawer": [[56, "module-torch.fx.passes.graph_drawer"]], "torch.fx.passes.graph_manipulation": [[56, "module-torch.fx.passes.graph_manipulation"]], "torch.fx.passes.infra": [[56, "module-torch.fx.passes.infra"]], "torch.fx.passes.infra.partitioner": [[56, "module-torch.fx.passes.infra.partitioner"]], "torch.fx.passes.infra.pass_base": [[56, "module-torch.fx.passes.infra.pass_base"]], "torch.fx.passes.infra.pass_manager": [[56, "module-torch.fx.passes.infra.pass_manager"]], "torch.fx.passes.net_min_base": [[56, "module-torch.fx.passes.net_min_base"]], "torch.fx.passes.operator_support": [[56, "module-torch.fx.passes.operator_support"]], "torch.fx.passes.param_fetch": [[56, "module-torch.fx.passes.param_fetch"]], "torch.fx.passes.pass_manager": [[56, "module-torch.fx.passes.pass_manager"]], "torch.fx.passes.reinplace": [[56, "module-torch.fx.passes.reinplace"]], "torch.fx.passes.shape_prop": [[56, "module-torch.fx.passes.shape_prop"]], "torch.fx.passes.split_module": [[56, "module-torch.fx.passes.split_module"]], "torch.fx.passes.split_utils": [[56, "module-torch.fx.passes.split_utils"]], "torch.fx.passes.splitter_base": [[56, "module-torch.fx.passes.splitter_base"]], "torch.fx.passes.tests": [[56, "module-torch.fx.passes.tests"]], "torch.fx.passes.tests.test_pass_manager": [[56, "module-torch.fx.passes.tests.test_pass_manager"]], "torch.fx.passes.tools_common": [[56, "module-torch.fx.passes.tools_common"]], "torch.fx.passes.utils": [[56, "module-torch.fx.passes.utils"]], "torch.fx.passes.utils.common": [[56, "module-torch.fx.passes.utils.common"]], "torch.fx.passes.utils.fuser_utils": [[56, "module-torch.fx.passes.utils.fuser_utils"]], "torch.fx.passes.utils.matcher_utils": [[56, "module-torch.fx.passes.utils.matcher_utils"]], "torch.fx.passes.utils.source_matcher_utils": [[56, "module-torch.fx.passes.utils.source_matcher_utils"]], "torch.fx.proxy": [[56, "module-torch.fx.proxy"]], "torch.fx.subgraph_rewriter": [[56, "module-torch.fx.subgraph_rewriter"]], "torch.fx.tensor_type": [[56, "module-torch.fx.tensor_type"]], "torch.fx.traceback": [[56, "module-torch.fx.traceback"]], "trace() (torch.fx.tracer method)": [[56, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[56, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[56, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[56, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[56, "torch.fx.wrap"]], "generator (class in torch)": [[78, "torch.Generator"]], "device (torch.generator attribute)": [[78, "torch.Generator.device"]], "get_state() (torch.generator method)": [[78, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[78, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[78, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[78, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[78, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[79, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[80, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[81, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[82, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[83, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[84, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[85, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[86, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[87, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[88, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[89, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[90, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[91, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[92, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[93, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[94, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[95, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[96, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[97, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[98, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[99, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[100, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[101, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[102, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[103, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[104, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[105, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[106, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[107, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[108, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[109, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[110, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[111, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[112, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[113, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[114, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[115, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[116, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[117, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[118, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[119, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[120, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[121, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[122, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[123, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[124, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[125, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[126, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[127, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[128, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[129, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[130, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[131, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[132, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[133, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[134, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[135, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[136, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[137, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[138, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[139, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[140, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[141, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[142, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[143, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[144, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[145, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[146, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[147, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[148, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[149, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[150, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[151, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[152, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[153, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[154, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[155, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[156, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[157, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[158, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[159, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[160, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[161, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[162, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[163, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[164, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[165, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[166, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[167, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[168, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[169, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[170, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[171, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[172, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[173, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[174, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[175, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[176, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[177, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[178, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[179, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[180, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[181, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[182, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[183, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[184, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[185, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[186, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[187, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[188, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[189, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[190, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[191, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[192, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[193, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[194, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[195, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[196, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[197, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[198, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[199, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[200, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[201, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[202, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[203, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[204, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[205, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[206, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[207, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[208, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[209, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[210, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[211, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[212, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[213, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[214, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[215, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[216, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[217, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[218, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[219, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[220, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[221, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[222, "torch.Tensor.dim"]], "dim_order() (torch.tensor method)": [[223, "torch.Tensor.dim_order"]], "dist() (torch.tensor method)": [[224, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[225, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[226, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[227, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[228, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[229, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[230, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[231, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[232, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[233, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[234, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[235, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[236, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[237, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[238, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[239, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[240, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[241, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[242, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[243, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[244, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[245, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[246, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[247, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[248, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[249, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[250, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[251, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[252, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[253, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[254, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[255, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[256, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[257, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[258, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[259, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[260, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[261, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[262, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[263, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[264, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[265, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[266, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[267, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[268, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[269, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[270, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[271, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[272, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[273, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[274, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[275, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[276, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[277, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[278, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[279, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[280, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[281, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[282, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[283, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[284, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[285, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[286, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[287, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[288, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[289, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[290, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[291, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[292, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[293, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[294, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[295, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[296, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[297, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[298, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[299, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[300, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[301, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[302, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[303, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[304, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[305, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[306, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[307, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[308, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[309, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[310, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[311, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[312, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[313, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[314, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[315, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[316, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[317, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[318, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[319, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[320, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[321, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[322, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[323, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[324, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[325, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[326, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[327, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[328, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[329, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[330, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[331, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[332, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[333, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[334, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[335, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[336, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[337, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[338, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[339, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[340, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[341, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[342, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[343, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[344, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[345, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[346, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[347, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[348, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[349, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[350, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[351, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[352, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[353, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[354, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[355, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[356, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[357, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[358, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[359, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[360, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[361, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[362, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[363, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[364, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[365, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[366, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[367, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[368, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[369, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[370, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[371, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[372, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[373, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[374, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[375, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[376, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[377, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[378, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[379, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[380, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[381, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[382, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[383, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[384, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[385, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[386, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[387, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[388, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[389, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[390, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[391, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[392, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[393, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[394, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[395, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[396, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[397, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[398, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[399, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[400, "torch.Tensor.median"]], "min() (torch.tensor method)": [[401, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[402, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[403, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[404, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[405, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[406, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[407, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[408, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[409, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[410, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[411, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[412, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[413, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[414, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[415, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[416, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[417, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[418, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[419, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[420, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[421, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[422, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[423, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[424, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[425, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[426, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[427, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[428, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[429, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[430, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[431, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[432, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[433, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[434, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[435, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[436, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[437, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[438, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[439, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[440, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[441, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[442, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[443, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[444, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[445, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[446, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[447, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[448, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[449, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[450, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[451, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[452, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[453, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[454, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[455, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[456, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[457, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[458, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[459, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[460, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[461, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[462, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[463, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[464, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[465, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[466, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[467, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[468, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[469, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[470, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[471, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[472, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[473, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[474, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[475, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[476, "torch.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (torch.tensor method)": [[477, "torch.Tensor.register_post_accumulate_grad_hook"]], "remainder() (torch.tensor method)": [[478, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[479, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[480, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[481, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[482, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[483, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[484, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[485, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[486, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[487, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[488, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[489, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[490, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[491, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[492, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[493, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[494, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[495, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[496, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[497, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[498, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[499, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[500, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[501, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[502, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[503, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[504, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[505, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[506, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[507, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[508, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[509, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[510, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[511, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[512, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[513, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[514, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[515, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[516, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[517, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[518, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[519, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[520, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[521, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[522, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[523, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[524, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[525, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[526, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[527, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[528, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[529, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[530, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[531, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[532, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[533, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[534, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[535, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[536, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[537, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[538, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[539, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[540, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[541, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[542, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[543, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[544, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[545, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[546, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[547, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[548, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[549, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[550, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[551, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[552, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[553, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[554, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[555, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[556, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[557, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[558, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[559, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[560, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[561, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[562, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[563, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[564, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[565, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[566, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[567, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[568, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[569, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[570, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[571, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[572, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[573, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[574, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[575, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[576, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[577, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[578, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[579, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[580, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[581, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[582, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[583, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[584, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[585, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[586, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[587, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[588, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[589, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[590, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[591, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[592, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[593, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[594, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[595, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[596, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[597, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[598, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[599, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[600, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[601, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[602, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[603, "torch.Tensor.values"]], "var() (torch.tensor method)": [[604, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[605, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[606, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[607, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[608, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[609, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[610, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[611, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[612, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[613, "torch._assert"]], "_foreach_abs() (in module torch)": [[614, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[615, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[616, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[617, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[618, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[619, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[620, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[621, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[622, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[623, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[624, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[625, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[626, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[627, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[628, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[629, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[630, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[631, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[632, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[633, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[634, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[635, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[636, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[637, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[638, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[639, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[640, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[641, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[642, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[643, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[644, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[645, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[646, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[647, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[648, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[649, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[650, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[651, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[652, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[653, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[654, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[655, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[656, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[657, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[658, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[659, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[660, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[661, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[662, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[663, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[664, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[665, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[666, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[667, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[668, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[669, "torch._logging.set_logs"]], "abs() (in module torch)": [[670, "torch.abs"]], "absolute() (in module torch)": [[671, "torch.absolute"]], "acos() (in module torch)": [[672, "torch.acos"]], "acosh() (in module torch)": [[673, "torch.acosh"]], "add() (in module torch)": [[674, "torch.add"]], "addbmm() (in module torch)": [[675, "torch.addbmm"]], "addcdiv() (in module torch)": [[676, "torch.addcdiv"]], "addcmul() (in module torch)": [[677, "torch.addcmul"]], "addmm() (in module torch)": [[678, "torch.addmm"]], "addmv() (in module torch)": [[679, "torch.addmv"]], "addr() (in module torch)": [[680, "torch.addr"]], "adjoint() (in module torch)": [[681, "torch.adjoint"]], "all() (in module torch)": [[682, "torch.all"]], "allclose() (in module torch)": [[683, "torch.allclose"]], "amax() (in module torch)": [[684, "torch.amax"]], "amin() (in module torch)": [[685, "torch.amin"]], "aminmax() (in module torch)": [[686, "torch.aminmax"]], "angle() (in module torch)": [[687, "torch.angle"]], "any() (in module torch)": [[688, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[689, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[690, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[691, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[692, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[693, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[694, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[695, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[701, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[702, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[703, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[704, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[705, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[706, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[707, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[712, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[713, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[714, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[715, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[716, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[717, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[718, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[719, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[720, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[721, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[721, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[722, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[723, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[724, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[724, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[724, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[725, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[726, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[727, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[727, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[728, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[728, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[729, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[729, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[730, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[731, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[734, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[735, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[745, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[745, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[749, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[750, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[751, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[752, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[753, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[753, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[753, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[754, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[755, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[756, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[757, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[758, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[759, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[760, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[761, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[777, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[778, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[779, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[780, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[781, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[781, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[781, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[782, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[783, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[783, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[783, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[784, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[785, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[785, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[785, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[785, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[786, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[787, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[788, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[789, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[790, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[791, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[792, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[793, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[794, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization.fuse_modules)": [[803, "torch.ao.quantization.fuse_modules.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[807, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[808, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[809, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[809, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[809, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[809, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[810, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[811, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[812, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[813, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[813, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[813, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[814, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[814, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[827, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[828, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[829, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[830, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[831, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[832, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[833, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[834, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[835, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[836, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[843, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[844, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[845, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[846, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[847, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[848, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[849, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[850, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[851, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[852, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[853, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[854, "torch.arange"]], "arccos() (in module torch)": [[855, "torch.arccos"]], "arccosh() (in module torch)": [[856, "torch.arccosh"]], "arcsin() (in module torch)": [[857, "torch.arcsin"]], "arcsinh() (in module torch)": [[858, "torch.arcsinh"]], "arctan() (in module torch)": [[859, "torch.arctan"]], "arctan2() (in module torch)": [[860, "torch.arctan2"]], "arctanh() (in module torch)": [[861, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[862, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[863, "torch.argmax"]], "argmin() (in module torch)": [[864, "torch.argmin"]], "argsort() (in module torch)": [[865, "torch.argsort"]], "argwhere() (in module torch)": [[866, "torch.argwhere"]], "as_strided() (in module torch)": [[867, "torch.as_strided"]], "as_tensor() (in module torch)": [[868, "torch.as_tensor"]], "asarray() (in module torch)": [[869, "torch.asarray"]], "asin() (in module torch)": [[870, "torch.asin"]], "asinh() (in module torch)": [[871, "torch.asinh"]], "atan() (in module torch)": [[872, "torch.atan"]], "atan2() (in module torch)": [[873, "torch.atan2"]], "atanh() (in module torch)": [[874, "torch.atanh"]], "atleast_1d() (in module torch)": [[875, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[876, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[877, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[878, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[879, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[880, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[881, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[882, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[883, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[884, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[885, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[886, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[887, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[888, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[889, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[890, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[891, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[892, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[893, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[894, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[895, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[896, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd.gradcheck)": [[897, "torch.autograd.gradcheck.gradcheck"]], "gradgradcheck() (in module torch.autograd.gradcheck)": [[898, "torch.autograd.gradcheck.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[899, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[900, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[901, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[902, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[903, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[904, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[905, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[906, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[907, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[908, "torch.autograd.profiler.profile.total_average"]], "baddbmm() (in module torch)": [[909, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[910, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[911, "torch.bernoulli"]], "bincount() (in module torch)": [[912, "torch.bincount"]], "bitwise_and() (in module torch)": [[913, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[914, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[915, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[916, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[917, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[918, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[919, "torch.blackman_window"]], "block_diag() (in module torch)": [[920, "torch.block_diag"]], "bmm() (in module torch)": [[921, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[922, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[923, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[924, "torch.broadcast_to"]], "bucketize() (in module torch)": [[925, "torch.bucketize"]], "can_cast() (in module torch)": [[926, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[927, "torch.cartesian_prod"]], "cat() (in module torch)": [[928, "torch.cat"]], "cdist() (in module torch)": [[929, "torch.cdist"]], "ceil() (in module torch)": [[930, "torch.ceil"]], "chain_matmul() (in module torch)": [[931, "torch.chain_matmul"]], "cholesky() (in module torch)": [[932, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[933, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[934, "torch.cholesky_solve"]], "chunk() (in module torch)": [[935, "torch.chunk"]], "clamp() (in module torch)": [[936, "torch.clamp"]], "clip() (in module torch)": [[937, "torch.clip"]], "clone() (in module torch)": [[938, "torch.clone"]], "column_stack() (in module torch)": [[939, "torch.column_stack"]], "combinations() (in module torch)": [[940, "torch.combinations"]], "compile() (in module torch)": [[941, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[942, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[943, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[944, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[945, "torch.compiler.compile"]], "disable() (in module torch.compiler)": [[946, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[947, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[948, "torch.compiler.reset"]], "complex() (in module torch)": [[949, "torch.complex"]], "concat() (in module torch)": [[950, "torch.concat"]], "concatenate() (in module torch)": [[951, "torch.concatenate"]], "cond() (in module torch)": [[952, "torch.cond"]], "conj() (in module torch)": [[953, "torch.conj"]], "conj_physical() (in module torch)": [[954, "torch.conj_physical"]], "copysign() (in module torch)": [[955, "torch.copysign"]], "corrcoef() (in module torch)": [[956, "torch.corrcoef"]], "cos() (in module torch)": [[957, "torch.cos"]], "cosh() (in module torch)": [[958, "torch.cosh"]], "count_nonzero() (in module torch)": [[959, "torch.count_nonzero"]], "cov() (in module torch)": [[960, "torch.cov"]], "stream (class in torch.cpu)": [[961, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[962, "torch.cpu.StreamContext"]], "current_stream() (in module torch.cpu)": [[963, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[964, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[965, "torch.cpu.is_available"]], "stream() (in module torch.cpu)": [[966, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[967, "torch.cpu.synchronize"]], "cross() (in module torch)": [[968, "torch.cross"]], "cudagraph (class in torch.cuda)": [[969, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[969, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[969, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[969, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[969, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[969, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[969, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[969, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[970, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[971, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[971, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[971, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[971, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[971, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[971, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[971, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[971, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[972, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[972, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[972, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[972, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[972, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[972, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[973, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[974, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[974, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[974, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[974, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[974, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[974, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[975, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[976, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[977, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[978, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[979, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[980, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[981, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[982, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[983, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[984, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[985, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[986, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[987, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[988, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[989, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[990, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[991, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[992, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[993, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[994, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[995, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[996, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[997, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[998, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[999, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1000, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1001, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1002, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1003, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1004, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1005, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1006, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1007, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1008, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1009, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1010, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1011, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1012, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1013, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1014, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1015, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1016, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1017, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1018, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1019, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1020, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1021, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1022, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1023, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1024, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1025, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1026, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1027, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1028, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1029, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1030, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1031, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1032, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1033, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1034, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1035, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1036, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1037, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1038, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1039, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1040, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1041, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1042, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1043, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1044, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1045, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1046, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1047, "torch.cummax"]], "cummin() (in module torch)": [[1048, "torch.cummin"]], "cumprod() (in module torch)": [[1049, "torch.cumprod"]], "cumsum() (in module torch)": [[1050, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1051, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1052, "torch.deg2rad"]], "dequantize() (in module torch)": [[1053, "torch.dequantize"]], "det() (in module torch)": [[1054, "torch.det"]], "diag() (in module torch)": [[1055, "torch.diag"]], "diag_embed() (in module torch)": [[1056, "torch.diag_embed"]], "diagflat() (in module torch)": [[1057, "torch.diagflat"]], "diagonal() (in module torch)": [[1058, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1059, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1060, "torch.diff"]], "digamma() (in module torch)": [[1061, "torch.digamma"]], "dist() (in module torch)": [[1062, "torch.dist"]], "div() (in module torch)": [[1063, "torch.div"]], "divide() (in module torch)": [[1064, "torch.divide"]], "dot() (in module torch)": [[1065, "torch.dot"]], "dsplit() (in module torch)": [[1066, "torch.dsplit"]], "dstack() (in module torch)": [[1067, "torch.dstack"]], "einsum() (in module torch)": [[1068, "torch.einsum"]], "empty() (in module torch)": [[1069, "torch.empty"]], "empty_like() (in module torch)": [[1070, "torch.empty_like"]], "empty_strided() (in module torch)": [[1071, "torch.empty_strided"]], "enable_grad (class in torch)": [[1072, "torch.enable_grad"]], "eq() (in module torch)": [[1073, "torch.eq"]], "equal() (in module torch)": [[1074, "torch.equal"]], "erf() (in module torch)": [[1075, "torch.erf"]], "erfc() (in module torch)": [[1076, "torch.erfc"]], "erfinv() (in module torch)": [[1077, "torch.erfinv"]], "exp() (in module torch)": [[1078, "torch.exp"]], "exp2() (in module torch)": [[1079, "torch.exp2"]], "expm1() (in module torch)": [[1080, "torch.expm1"]], "eye() (in module torch)": [[1081, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1082, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1083, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1084, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1085, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1086, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1087, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1088, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1089, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1090, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1091, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1092, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1093, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1094, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1095, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1096, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1097, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1098, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1099, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1100, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1101, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1102, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1103, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1104, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1105, "torch.fft.rfftn"]], "fix() (in module torch)": [[1106, "torch.fix"]], "flatten() (in module torch)": [[1107, "torch.flatten"]], "flip() (in module torch)": [[1108, "torch.flip"]], "fliplr() (in module torch)": [[1109, "torch.fliplr"]], "flipud() (in module torch)": [[1110, "torch.flipud"]], "float_power() (in module torch)": [[1111, "torch.float_power"]], "floor() (in module torch)": [[1112, "torch.floor"]], "floor_divide() (in module torch)": [[1113, "torch.floor_divide"]], "fmax() (in module torch)": [[1114, "torch.fmax"]], "fmin() (in module torch)": [[1115, "torch.fmin"]], "fmod() (in module torch)": [[1116, "torch.fmod"]], "frac() (in module torch)": [[1117, "torch.frac"]], "frexp() (in module torch)": [[1118, "torch.frexp"]], "from_dlpack() (in module torch)": [[1119, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1120, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1121, "torch.frombuffer"]], "full() (in module torch)": [[1122, "torch.full"]], "full_like() (in module torch)": [[1123, "torch.full_like"]], "functional_call() (in module torch.func)": [[1124, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1125, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1126, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1127, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1128, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1129, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1130, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1131, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1132, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1133, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1134, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1135, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1136, "torch.func.vmap"]], "gather() (in module torch)": [[1137, "torch.gather"]], "gcd() (in module torch)": [[1138, "torch.gcd"]], "ge() (in module torch)": [[1139, "torch.ge"]], "geqrf() (in module torch)": [[1140, "torch.geqrf"]], "ger() (in module torch)": [[1141, "torch.ger"]], "get_default_dtype() (in module torch)": [[1142, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1143, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1144, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1145, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1146, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1147, "torch.get_rng_state"]], "gradient() (in module torch)": [[1148, "torch.gradient"]], "greater() (in module torch)": [[1149, "torch.greater"]], "greater_equal() (in module torch)": [[1150, "torch.greater_equal"]], "gt() (in module torch)": [[1151, "torch.gt"]], "hamming_window() (in module torch)": [[1152, "torch.hamming_window"]], "hann_window() (in module torch)": [[1153, "torch.hann_window"]], "heaviside() (in module torch)": [[1154, "torch.heaviside"]], "histc() (in module torch)": [[1155, "torch.histc"]], "histogram() (in module torch)": [[1156, "torch.histogram"]], "histogramdd() (in module torch)": [[1157, "torch.histogramdd"]], "hsplit() (in module torch)": [[1158, "torch.hsplit"]], "hspmm() (in module torch)": [[1159, "torch.hspmm"]], "hstack() (in module torch)": [[1160, "torch.hstack"]], "hypot() (in module torch)": [[1161, "torch.hypot"]], "i0() (in module torch)": [[1162, "torch.i0"]], "igamma() (in module torch)": [[1163, "torch.igamma"]], "igammac() (in module torch)": [[1164, "torch.igammac"]], "imag() (in module torch)": [[1165, "torch.imag"]], "index_add() (in module torch)": [[1166, "torch.index_add"]], "index_copy() (in module torch)": [[1167, "torch.index_copy"]], "index_reduce() (in module torch)": [[1168, "torch.index_reduce"]], "index_select() (in module torch)": [[1169, "torch.index_select"]], "inference_mode (class in torch)": [[1170, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1171, "torch.initial_seed"]], "inner() (in module torch)": [[1172, "torch.inner"]], "inverse() (in module torch)": [[1173, "torch.inverse"]], "is_complex() (in module torch)": [[1174, "torch.is_complex"]], "is_conj() (in module torch)": [[1175, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1176, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1177, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1178, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1179, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1180, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1181, "torch.is_storage"]], "is_tensor() (in module torch)": [[1182, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1183, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1184, "torch.isclose"]], "isfinite() (in module torch)": [[1185, "torch.isfinite"]], "isin() (in module torch)": [[1186, "torch.isin"]], "isinf() (in module torch)": [[1187, "torch.isinf"]], "isnan() (in module torch)": [[1188, "torch.isnan"]], "isneginf() (in module torch)": [[1189, "torch.isneginf"]], "isposinf() (in module torch)": [[1190, "torch.isposinf"]], "isreal() (in module torch)": [[1191, "torch.isreal"]], "istft() (in module torch)": [[1192, "torch.istft"]], "attribute (class in torch.jit)": [[1193, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1193, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1193, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1193, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1193, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1194, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1194, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1194, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1194, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1195, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1195, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1195, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1195, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1195, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1195, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1196, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1197, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1198, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1199, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1200, "torch.jit.ignore"]], "interface() (in module torch.jit)": [[1201, "torch.jit.interface"]], "isinstance() (in module torch.jit)": [[1202, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1203, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1204, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1205, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1206, "torch.jit.save"]], "script() (in module torch.jit)": [[1207, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1208, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1209, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1210, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1211, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1212, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1213, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1214, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1215, "torch.kaiser_window"]], "kron() (in module torch)": [[1216, "torch.kron"]], "kthvalue() (in module torch)": [[1217, "torch.kthvalue"]], "lcm() (in module torch)": [[1218, "torch.lcm"]], "ldexp() (in module torch)": [[1219, "torch.ldexp"]], "le() (in module torch)": [[1220, "torch.le"]], "lerp() (in module torch)": [[1221, "torch.lerp"]], "less() (in module torch)": [[1222, "torch.less"]], "less_equal() (in module torch)": [[1223, "torch.less_equal"]], "lgamma() (in module torch)": [[1224, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1225, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1226, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1227, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1228, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1229, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1230, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1231, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1232, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1233, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1234, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1235, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1236, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1237, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1238, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1239, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1240, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1241, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1242, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1243, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1244, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1245, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1246, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1247, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1248, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1249, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1250, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1251, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1252, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1253, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1254, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1255, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1256, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1257, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1258, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1259, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1260, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1261, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1262, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1263, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1264, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1265, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1266, "torch.linspace"]], "load() (in module torch)": [[1267, "torch.load"]], "lobpcg() (in module torch)": [[1268, "torch.lobpcg"]], "log() (in module torch)": [[1269, "torch.log"]], "log10() (in module torch)": [[1270, "torch.log10"]], "log1p() (in module torch)": [[1271, "torch.log1p"]], "log2() (in module torch)": [[1272, "torch.log2"]], "logaddexp() (in module torch)": [[1273, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1274, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1275, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1276, "torch.logdet"]], "logical_and() (in module torch)": [[1277, "torch.logical_and"]], "logical_not() (in module torch)": [[1278, "torch.logical_not"]], "logical_or() (in module torch)": [[1279, "torch.logical_or"]], "logical_xor() (in module torch)": [[1280, "torch.logical_xor"]], "logit() (in module torch)": [[1281, "torch.logit"]], "logspace() (in module torch)": [[1282, "torch.logspace"]], "logsumexp() (in module torch)": [[1283, "torch.logsumexp"]], "lt() (in module torch)": [[1284, "torch.lt"]], "lu() (in module torch)": [[1285, "torch.lu"]], "lu_solve() (in module torch)": [[1286, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1287, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1288, "torch.manual_seed"]], "masked_select() (in module torch)": [[1289, "torch.masked_select"]], "matmul() (in module torch)": [[1290, "torch.matmul"]], "matrix_exp() (in module torch)": [[1291, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1292, "torch.matrix_power"]], "max() (in module torch)": [[1293, "torch.max"]], "maximum() (in module torch)": [[1294, "torch.maximum"]], "mean() (in module torch)": [[1295, "torch.mean"]], "median() (in module torch)": [[1296, "torch.median"]], "meshgrid() (in module torch)": [[1297, "torch.meshgrid"]], "min() (in module torch)": [[1298, "torch.min"]], "minimum() (in module torch)": [[1299, "torch.minimum"]], "mm() (in module torch)": [[1300, "torch.mm"]], "mode() (in module torch)": [[1301, "torch.mode"]], "moveaxis() (in module torch)": [[1302, "torch.moveaxis"]], "movedim() (in module torch)": [[1303, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1304, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1305, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1306, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1307, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1307, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1307, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1307, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1307, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1307, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1308, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1309, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1310, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1311, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1312, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1313, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1314, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1315, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1316, "torch.mps.synchronize"]], "msort() (in module torch)": [[1317, "torch.msort"]], "mul() (in module torch)": [[1318, "torch.mul"]], "multinomial() (in module torch)": [[1319, "torch.multinomial"]], "multiply() (in module torch)": [[1320, "torch.multiply"]], "mv() (in module torch)": [[1321, "torch.mv"]], "mvlgamma() (in module torch)": [[1322, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1323, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1324, "torch.nanmean"]], "nanmedian() (in module torch)": [[1325, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1326, "torch.nanquantile"]], "nansum() (in module torch)": [[1327, "torch.nansum"]], "narrow() (in module torch)": [[1328, "torch.narrow"]], "narrow_copy() (in module torch)": [[1329, "torch.narrow_copy"]], "ne() (in module torch)": [[1330, "torch.ne"]], "neg() (in module torch)": [[1331, "torch.neg"]], "negative() (in module torch)": [[1332, "torch.negative"]], "nextafter() (in module torch)": [[1333, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1334, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1335, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1336, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1337, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1337, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1337, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1338, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1339, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1340, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1341, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1342, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1343, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1344, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1345, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1346, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1347, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1348, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1349, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1350, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1351, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1352, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1353, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1354, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1355, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1356, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1357, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1358, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1359, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1360, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1361, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1362, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1363, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1364, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1365, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1366, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1367, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1368, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1369, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1370, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1371, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1372, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1372, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1373, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1373, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1373, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1374, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1375, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1376, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1377, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1378, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1379, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1380, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1381, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1382, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1383, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1384, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1385, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1386, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1387, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1388, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1389, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1390, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1391, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1392, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1393, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1394, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1395, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1396, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1397, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1398, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1399, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1400, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1401, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1402, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1402, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1403, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1403, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1404, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1404, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1405, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1405, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1406, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1406, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1407, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1407, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1408, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1408, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1409, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1409, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1410, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1410, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1411, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1411, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1412, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1412, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1413, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1413, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1414, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1414, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1415, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1416, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1417, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1418, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1419, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1420, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1421, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1422, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1423, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1424, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1425, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1426, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1427, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1428, "torch.nn.Mish"]], "module (class in torch.nn)": [[1429, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1429, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1429, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1429, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1429, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1429, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1429, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1429, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1429, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1429, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1429, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1429, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1429, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1429, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1429, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1429, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1429, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1429, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1429, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1429, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1429, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1429, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1429, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1429, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1429, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1429, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1429, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1429, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1429, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1429, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1429, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1429, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1429, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1429, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1429, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1429, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1429, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1429, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1429, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1429, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1429, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1429, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1429, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1429, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1429, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1429, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1429, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1430, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1430, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1430, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1430, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1430, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1430, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1430, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1431, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1431, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1431, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1431, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1432, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1433, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1434, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1435, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1435, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1435, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1436, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1437, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1438, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1439, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1439, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1440, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1440, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1440, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1441, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1442, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1443, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1444, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1445, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1445, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1446, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1447, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1448, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1449, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1450, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1451, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1452, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1453, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1454, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1455, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1456, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1457, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1457, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1458, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1459, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1460, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1461, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1462, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1463, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1464, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1465, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1466, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1467, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1468, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1468, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1469, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1470, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1471, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1472, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1472, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1472, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1473, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1473, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1474, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1474, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1475, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1475, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1476, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1476, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1477, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1478, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1479, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1480, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1481, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1482, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1483, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1484, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1485, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1486, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1487, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1488, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1489, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1490, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1491, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1492, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1493, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1494, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1495, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1496, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1497, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1498, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1499, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1500, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1501, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1502, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1503, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1504, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1505, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1506, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1507, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1508, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1509, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1510, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1511, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1512, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1513, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1514, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1515, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1516, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1517, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1518, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1519, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1520, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1521, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1522, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1523, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1524, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1525, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1526, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1527, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1528, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1529, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1530, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1531, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1532, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1533, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1534, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1535, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1536, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1537, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1538, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1539, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1540, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1541, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1542, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1543, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1544, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1545, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1546, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1547, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1548, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1549, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1550, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1551, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1552, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1553, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1554, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1555, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1556, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1557, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1558, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1559, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1560, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1561, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1562, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1563, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1564, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1565, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1566, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1567, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1568, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1569, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1570, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1571, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1572, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1573, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1574, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1575, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1576, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1577, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1578, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1579, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1580, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1581, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1582, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1583, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1584, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1585, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1586, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1587, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1588, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1589, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1590, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1591, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1592, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1593, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1594, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1595, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1596, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1597, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1598, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1599, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1600, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1600, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1600, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1601, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1602, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1603, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1604, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1605, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1606, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1607, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1608, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1609, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1609, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1609, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1609, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1609, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1610, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1611, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1612, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1612, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1613, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1614, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1615, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1616, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1617, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1618, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1618, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1619, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1620, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1621, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1622, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1623, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1623, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1623, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1623, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1623, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1623, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1624, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1624, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1624, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1624, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1624, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1625, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1625, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1625, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1625, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1625, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1626, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1626, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1626, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1626, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1626, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1627, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1627, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1627, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1627, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1627, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1627, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1628, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1628, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1628, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1628, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1628, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1628, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1628, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1629, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1629, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1629, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1629, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1629, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1629, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1630, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1630, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1630, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1630, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1630, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1631, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1632, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1633, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1634, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1635, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1636, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1637, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1638, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1639, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1640, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1641, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1642, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1642, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1642, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1642, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1642, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1642, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1642, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1642, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1642, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1642, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1643, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1644, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1645, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1646, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1647, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1648, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1649, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1650, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1651, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1652, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1653, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1654, "torch.no_grad"]], "nonzero() (in module torch)": [[1655, "torch.nonzero"]], "norm() (in module torch)": [[1656, "torch.norm"]], "normal() (in module torch)": [[1657, "torch.normal"]], "not_equal() (in module torch)": [[1658, "torch.not_equal"]], "numel() (in module torch)": [[1659, "torch.numel"]], "ones() (in module torch)": [[1660, "torch.ones"]], "ones_like() (in module torch)": [[1661, "torch.ones_like"]], "jitscalartype (class in torch.onnx)": [[1662, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1662, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1662, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1662, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1662, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1662, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1662, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1662, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1663, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1663, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1664, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1665, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1665, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1666, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1666, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1667, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1667, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1668, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1668, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1668, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1668, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1668, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1668, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1668, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1668, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1668, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1668, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1668, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1668, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1669, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1669, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1670, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1670, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1671, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1671, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1672, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1672, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1673, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1674, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1675, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1676, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1677, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1678, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1678, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1679, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1679, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1680, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1680, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1681, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1681, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1682, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1682, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1683, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1683, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1683, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1683, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1683, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1684, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1684, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1684, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1684, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1684, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1685, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1685, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1685, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1685, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1685, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1686, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1686, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1686, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1686, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1686, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1686, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1687, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1687, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1687, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1687, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1688, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1688, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1688, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1688, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1688, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1689, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1689, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1689, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1689, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1689, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1690, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1690, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1690, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1690, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1690, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1691, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1691, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1691, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1691, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1691, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1692, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1692, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1692, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1692, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1692, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1693, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1693, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1693, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1693, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1693, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1694, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1694, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1694, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1694, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1694, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1695, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "get_last_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1695, "torch.optim.lr_scheduler.ReduceLROnPlateau.get_last_lr"]], "print_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1695, "torch.optim.lr_scheduler.ReduceLROnPlateau.print_lr"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1696, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1696, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1696, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1696, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1696, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1697, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1697, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1697, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1697, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1697, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1698, "torch.orgqr"]], "ormqr() (in module torch)": [[1699, "torch.ormqr"]], "outer() (in module torch)": [[1700, "torch.outer"]], "pca_lowrank() (in module torch)": [[1701, "torch.pca_lowrank"]], "permute() (in module torch)": [[1702, "torch.permute"]], "pinverse() (in module torch)": [[1703, "torch.pinverse"]], "poisson() (in module torch)": [[1704, "torch.poisson"]], "polar() (in module torch)": [[1705, "torch.polar"]], "polygamma() (in module torch)": [[1706, "torch.polygamma"]], "positive() (in module torch)": [[1707, "torch.positive"]], "pow() (in module torch)": [[1708, "torch.pow"]], "prod() (in module torch)": [[1709, "torch.prod"]], "promote_types() (in module torch)": [[1710, "torch.promote_types"]], "qr() (in module torch)": [[1711, "torch.qr"]], "quantile() (in module torch)": [[1712, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1713, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1714, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1715, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1716, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1717, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1718, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1718, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1718, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1718, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1718, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1719, "torch.rad2deg"]], "rand() (in module torch)": [[1720, "torch.rand"]], "rand_like() (in module torch)": [[1721, "torch.rand_like"]], "randint() (in module torch)": [[1722, "torch.randint"]], "randint_like() (in module torch)": [[1723, "torch.randint_like"]], "randn() (in module torch)": [[1724, "torch.randn"]], "randn_like() (in module torch)": [[1725, "torch.randn_like"]], "randperm() (in module torch)": [[1726, "torch.randperm"]], "range() (in module torch)": [[1727, "torch.range"]], "ravel() (in module torch)": [[1728, "torch.ravel"]], "real() (in module torch)": [[1729, "torch.real"]], "reciprocal() (in module torch)": [[1730, "torch.reciprocal"]], "remainder() (in module torch)": [[1731, "torch.remainder"]], "renorm() (in module torch)": [[1732, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1733, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1734, "torch.reshape"]], "resolve_conj() (in module torch)": [[1735, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1736, "torch.resolve_neg"]], "result_type() (in module torch)": [[1737, "torch.result_type"]], "roll() (in module torch)": [[1738, "torch.roll"]], "rot90() (in module torch)": [[1739, "torch.rot90"]], "round() (in module torch)": [[1740, "torch.round"]], "row_stack() (in module torch)": [[1741, "torch.row_stack"]], "rsqrt() (in module torch)": [[1742, "torch.rsqrt"]], "save() (in module torch)": [[1743, "torch.save"]], "scatter() (in module torch)": [[1744, "torch.scatter"]], "scatter_add() (in module torch)": [[1745, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1746, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1747, "torch.searchsorted"]], "seed() (in module torch)": [[1748, "torch.seed"]], "select() (in module torch)": [[1749, "torch.select"]], "select_scatter() (in module torch)": [[1750, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1751, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1752, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1753, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1754, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1755, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1756, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1757, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1758, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1759, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1760, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1761, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1762, "torch.set_warn_always"]], "sgn() (in module torch)": [[1763, "torch.sgn"]], "sigmoid() (in module torch)": [[1764, "torch.sigmoid"]], "sign() (in module torch)": [[1765, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1766, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1767, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1768, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1769, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1770, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1771, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1772, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1773, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1774, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1775, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1776, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1777, "torch.signbit"]], "sin() (in module torch)": [[1778, "torch.sin"]], "sinc() (in module torch)": [[1779, "torch.sinc"]], "sinh() (in module torch)": [[1780, "torch.sinh"]], "slice_scatter() (in module torch)": [[1781, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1782, "torch.slogdet"]], "smm() (in module torch)": [[1783, "torch.smm"]], "softmax() (in module torch)": [[1784, "torch.softmax"]], "sort() (in module torch)": [[1785, "torch.sort"]], "addmm() (in module torch.sparse)": [[1786, "torch.sparse.addmm"]], "as_sparse_gradcheck() (in module torch.sparse)": [[1787, "torch.sparse.as_sparse_gradcheck"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1788, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1788, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1788, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1788, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1789, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1790, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1791, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1792, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1793, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1794, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1795, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1796, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1797, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1798, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1799, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1800, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1801, "torch.split"]], "sqrt() (in module torch)": [[1802, "torch.sqrt"]], "square() (in module torch)": [[1803, "torch.square"]], "squeeze() (in module torch)": [[1804, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1805, "torch.sspaddmm"]], "stack() (in module torch)": [[1806, "torch.stack"]], "std() (in module torch)": [[1807, "torch.std"]], "std_mean() (in module torch)": [[1808, "torch.std_mean"]], "stft() (in module torch)": [[1809, "torch.stft"]], "sub() (in module torch)": [[1810, "torch.sub"]], "subtract() (in module torch)": [[1811, "torch.subtract"]], "sum() (in module torch)": [[1812, "torch.sum"]], "svd() (in module torch)": [[1813, "torch.svd"]], "svd_lowrank() (in module torch)": [[1814, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1815, "torch.swapaxes"]], "swapdims() (in module torch)": [[1816, "torch.swapdims"]], "sym_float() (in module torch)": [[1817, "torch.sym_float"]], "sym_int() (in module torch)": [[1818, "torch.sym_int"]], "sym_max() (in module torch)": [[1819, "torch.sym_max"]], "sym_min() (in module torch)": [[1820, "torch.sym_min"]], "sym_not() (in module torch)": [[1821, "torch.sym_not"]], "t() (in module torch)": [[1822, "torch.t"]], "take() (in module torch)": [[1823, "torch.take"]], "take_along_dim() (in module torch)": [[1824, "torch.take_along_dim"]], "tan() (in module torch)": [[1825, "torch.tan"]], "tanh() (in module torch)": [[1826, "torch.tanh"]], "tensor() (in module torch)": [[1827, "torch.tensor"]], "tensor_split() (in module torch)": [[1828, "torch.tensor_split"]], "tensordot() (in module torch)": [[1829, "torch.tensordot"]], "tile() (in module torch)": [[1830, "torch.tile"]], "topk() (in module torch)": [[1831, "torch.topk"]], "trace() (in module torch)": [[1832, "torch.trace"]], "transpose() (in module torch)": [[1833, "torch.transpose"]], "trapezoid() (in module torch)": [[1834, "torch.trapezoid"]], "trapz() (in module torch)": [[1835, "torch.trapz"]], "triangular_solve() (in module torch)": [[1836, "torch.triangular_solve"]], "tril() (in module torch)": [[1837, "torch.tril"]], "tril_indices() (in module torch)": [[1838, "torch.tril_indices"]], "triu() (in module torch)": [[1839, "torch.triu"]], "triu_indices() (in module torch)": [[1840, "torch.triu_indices"]], "true_divide() (in module torch)": [[1841, "torch.true_divide"]], "trunc() (in module torch)": [[1842, "torch.trunc"]], "unbind() (in module torch)": [[1843, "torch.unbind"]], "unflatten() (in module torch)": [[1844, "torch.unflatten"]], "unique() (in module torch)": [[1845, "torch.unique"]], "unique_consecutive() (in module torch)": [[1846, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1847, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1848, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1849, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1850, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1851, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1852, "torch.utils.set_module"]], "vander() (in module torch)": [[1853, "torch.vander"]], "var() (in module torch)": [[1854, "torch.var"]], "var_mean() (in module torch)": [[1855, "torch.var_mean"]], "vdot() (in module torch)": [[1856, "torch.vdot"]], "view_as_complex() (in module torch)": [[1857, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1858, "torch.view_as_real"]], "vmap() (in module torch)": [[1859, "torch.vmap"]], "vsplit() (in module torch)": [[1860, "torch.vsplit"]], "vstack() (in module torch)": [[1861, "torch.vstack"]], "where() (in module torch)": [[1862, "torch.where"]], "xlogy() (in module torch)": [[1863, "torch.xlogy"]], "zeros() (in module torch)": [[1864, "torch.zeros"]], "zeros_like() (in module torch)": [[1865, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1866, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1866, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1866, "torch.hub.help"]], "list() (in module torch.hub)": [[1866, "torch.hub.list"]], "load() (in module torch.hub)": [[1866, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1866, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1866, "torch.hub.set_dir"]], "torch.hub": [[1866, "module-torch.hub"]], "pytorch_jit": [[1868, "envvar-PYTORCH_JIT"]], "environment variable": [[1868, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1868, "torch.jit.export"]], "torch.jit": [[1868, "module-torch.jit"]], "torch.jit.annotations": [[1868, "module-torch.jit.annotations"]], "torch.jit.frontend": [[1868, "module-torch.jit.frontend"]], "torch.jit.generate_bytecode": [[1868, "module-torch.jit.generate_bytecode"]], "torch.jit.mobile": [[1868, "module-torch.jit.mobile"]], "torch.jit.quantized": [[1868, "module-torch.jit.quantized"]], "torch.jit.supported_ops": [[1869, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1870, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1870, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1873, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1874, "module-torch.utils.jit"]], "library (class in torch.library)": [[1875, "torch.library.Library"]], "define() (torch.library.library method)": [[1875, "torch.library.Library.define"]], "fallthrough_kernel() (in module torch.library)": [[1875, "torch.library.fallthrough_kernel"]], "impl() (torch.library.library method)": [[1875, "torch.library.Library.impl"]], "torch.library": [[1875, "module-torch.library"]], "torch.linalg": [[1876, "module-torch.linalg"]], "torch._logging": [[1877, "module-torch._logging"]], "torch.masked": [[1878, "module-torch.masked"]], "torch.masked.maskedtensor": [[1878, "module-torch.masked.maskedtensor"]], "torch.masked.maskedtensor.binary": [[1878, "module-torch.masked.maskedtensor.binary"]], "torch.masked.maskedtensor.core": [[1878, "module-torch.masked.maskedtensor.core"]], "torch.masked.maskedtensor.creation": [[1878, "module-torch.masked.maskedtensor.creation"]], "torch.masked.maskedtensor.passthrough": [[1878, "module-torch.masked.maskedtensor.passthrough"]], "torch.masked.maskedtensor.reductions": [[1878, "module-torch.masked.maskedtensor.reductions"]], "torch.masked.maskedtensor.unary": [[1878, "module-torch.masked.maskedtensor.unary"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1879, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1880, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1880, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1881, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1881, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1881, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1881, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1881, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1881, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1881, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1881, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1881, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1881, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1881, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1881, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1881, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1881, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1881, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1881, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1881, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1881, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1881, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1881, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1881, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1882, "module-torch.mps"]], "torch.mps.event": [[1882, "module-torch.mps.event"]], "torch.mps.profiler": [[1882, "module-torch.mps.profiler"]], "spawncontext (class in torch.multiprocessing)": [[1883, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1883, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1883, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1883, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1883, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing.spawn)": [[1883, "torch.multiprocessing.spawn.spawn"]], "torch.multiprocessing": [[1883, "module-torch.multiprocessing"]], "torch.multiprocessing.pool": [[1883, "module-torch.multiprocessing.pool"]], "torch.multiprocessing.queue": [[1883, "module-torch.multiprocessing.queue"]], "torch.multiprocessing.reductions": [[1883, "module-torch.multiprocessing.reductions"]], "torch.multiprocessing.spawn": [[1883, "module-torch.multiprocessing.spawn"]], "align_as() (torch.tensor method)": [[1885, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1885, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1885, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1885, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1885, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1885, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1886, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1886, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1886, "torch.nested.to_padded_tensor"]], "torch.nested": [[1886, "module-torch.nested"]], "torch.nn": [[1887, "module-torch.nn"]], "torch.nn.backends": [[1887, "module-torch.nn.backends"]], "torch.nn.backends.thnn": [[1887, "module-torch.nn.backends.thnn"]], "torch.nn.common_types": [[1887, "module-torch.nn.common_types"]], "torch.nn.cpp": [[1887, "module-torch.nn.cpp"]], "torch.nn.functional": [[1887, "module-torch.nn.functional"]], "torch.nn.grad": [[1887, "module-torch.nn.grad"]], "torch.nn.init": [[1887, "module-torch.nn.init"]], "torch.nn.modules": [[1887, "module-torch.nn.modules"]], "torch.nn.modules.activation": [[1887, "module-torch.nn.modules.activation"]], "torch.nn.modules.adaptive": [[1887, "module-torch.nn.modules.adaptive"]], "torch.nn.modules.batchnorm": [[1887, "module-torch.nn.modules.batchnorm"]], "torch.nn.modules.channelshuffle": [[1887, "module-torch.nn.modules.channelshuffle"]], "torch.nn.modules.container": [[1887, "module-torch.nn.modules.container"]], "torch.nn.modules.conv": [[1887, "module-torch.nn.modules.conv"]], "torch.nn.modules.distance": [[1887, "module-torch.nn.modules.distance"]], "torch.nn.modules.dropout": [[1887, "module-torch.nn.modules.dropout"]], "torch.nn.modules.flatten": [[1887, "module-torch.nn.modules.flatten"]], "torch.nn.modules.fold": [[1887, "module-torch.nn.modules.fold"]], "torch.nn.modules.instancenorm": [[1887, "module-torch.nn.modules.instancenorm"]], "torch.nn.modules.lazy": [[1887, "module-torch.nn.modules.lazy"]], "torch.nn.modules.linear": [[1887, "module-torch.nn.modules.linear"]], "torch.nn.modules.loss": [[1887, "module-torch.nn.modules.loss"]], "torch.nn.modules.module": [[1887, "module-torch.nn.modules.module"]], "torch.nn.modules.normalization": [[1887, "module-torch.nn.modules.normalization"]], "torch.nn.modules.padding": [[1887, "module-torch.nn.modules.padding"]], "torch.nn.modules.pixelshuffle": [[1887, "module-torch.nn.modules.pixelshuffle"]], "torch.nn.modules.pooling": [[1887, "module-torch.nn.modules.pooling"]], "torch.nn.modules.rnn": [[1887, "module-torch.nn.modules.rnn"]], "torch.nn.modules.sparse": [[1887, "module-torch.nn.modules.sparse"]], "torch.nn.modules.transformer": [[1887, "module-torch.nn.modules.transformer"]], "torch.nn.modules.upsampling": [[1887, "module-torch.nn.modules.upsampling"]], "torch.nn.modules.utils": [[1887, "module-torch.nn.modules.utils"]], "torch.nn.parallel": [[1887, "module-torch.nn.parallel"]], "torch.nn.parallel.comm": [[1887, "module-torch.nn.parallel.comm"]], "torch.nn.parallel.data_parallel": [[1887, "module-torch.nn.parallel.data_parallel"]], "torch.nn.parallel.distributed": [[1887, "module-torch.nn.parallel.distributed"]], "torch.nn.parallel.parallel_apply": [[1887, "module-torch.nn.parallel.parallel_apply"]], "torch.nn.parallel.replicate": [[1887, "module-torch.nn.parallel.replicate"]], "torch.nn.parallel.scatter_gather": [[1887, "module-torch.nn.parallel.scatter_gather"]], "torch.nn.parameter": [[1887, "module-torch.nn.parameter"]], "torch.nn.utils": [[1887, "module-torch.nn.utils"]], "torch.nn.utils.clip_grad": [[1887, "module-torch.nn.utils.clip_grad"]], "torch.nn.utils.convert_parameters": [[1887, "module-torch.nn.utils.convert_parameters"]], "torch.nn.utils.fusion": [[1887, "module-torch.nn.utils.fusion"]], "torch.nn.utils.init": [[1887, "module-torch.nn.utils.init"]], "torch.nn.utils.memory_format": [[1887, "module-torch.nn.utils.memory_format"]], "torch.nn.utils.parametrizations": [[1887, "module-torch.nn.utils.parametrizations"]], "torch.nn.utils.parametrize": [[1887, "module-torch.nn.utils.parametrize"]], "torch.nn.utils.prune": [[1887, "module-torch.nn.utils.prune"]], "torch.nn.utils.rnn": [[1887, "module-torch.nn.utils.rnn"]], "torch.nn.utils.spectral_norm": [[1887, "module-torch.nn.utils.spectral_norm"]], "torch.nn.utils.stateless": [[1887, "module-torch.nn.utils.stateless"]], "torch.nn.utils.weight_norm": [[1887, "module-torch.nn.utils.weight_norm"]], "calculate_gain() (in module torch.nn.init)": [[1889, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1889, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1889, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1889, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1889, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1889, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1889, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1889, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1889, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1889, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1889, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1889, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1889, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1889, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1889, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[1907, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[1907, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[1907, "torch.serialization.set_default_load_endianness"]], "torch.onnx.errors": [[1909, "module-torch.onnx.errors"]], "torch.onnx.operators": [[1909, "module-torch.onnx.operators"]], "torch.onnx.symbolic_caffe2": [[1909, "module-torch.onnx.symbolic_caffe2"]], "torch.onnx.symbolic_helper": [[1909, "module-torch.onnx.symbolic_helper"]], "torch.onnx.symbolic_opset10": [[1909, "module-torch.onnx.symbolic_opset10"]], "torch.onnx.symbolic_opset11": [[1909, "module-torch.onnx.symbolic_opset11"]], "torch.onnx.symbolic_opset12": [[1909, "module-torch.onnx.symbolic_opset12"]], "torch.onnx.symbolic_opset13": [[1909, "module-torch.onnx.symbolic_opset13"]], "torch.onnx.symbolic_opset14": [[1909, "module-torch.onnx.symbolic_opset14"]], "torch.onnx.symbolic_opset15": [[1909, "module-torch.onnx.symbolic_opset15"]], "torch.onnx.symbolic_opset16": [[1909, "module-torch.onnx.symbolic_opset16"]], "torch.onnx.symbolic_opset17": [[1909, "module-torch.onnx.symbolic_opset17"]], "torch.onnx.symbolic_opset18": [[1909, "module-torch.onnx.symbolic_opset18"]], "torch.onnx.symbolic_opset7": [[1909, "module-torch.onnx.symbolic_opset7"]], "torch.onnx.symbolic_opset8": [[1909, "module-torch.onnx.symbolic_opset8"]], "torch.onnx.symbolic_opset9": [[1909, "module-torch.onnx.symbolic_opset9"]], "torch.onnx.utils": [[1909, "module-torch.onnx.utils"]], "torch.onnx.verification": [[1909, "module-torch.onnx.verification"]], "diagnosticoptions (class in torch.onnx)": [[1910, "torch.onnx.DiagnosticOptions"]], "exportoptions (class in torch.onnx)": [[1910, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1910, "torch.onnx.ExportOutput"]], "exportoutputserializer (class in torch.onnx)": [[1910, "torch.onnx.ExportOutputSerializer"]], "onnxexportererror (class in torch.onnx)": [[1910, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[1910, "torch.onnx.OnnxRegistry"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1910, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1910, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1910, "torch.onnx.ExportOutput.diagnostic_context"]], "dynamo_export() (in module torch.onnx)": [[1910, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[1910, "torch.onnx.enable_fake_mode"]], "fake_context (torch.onnx.exportoutput property)": [[1910, "torch.onnx.ExportOutput.fake_context"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[1910, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[1910, "torch.onnx.OnnxRegistry.is_registered_op"]], "model_proto (torch.onnx.exportoutput property)": [[1910, "torch.onnx.ExportOutput.model_proto"]], "opset_version (torch.onnx.onnxregistry property)": [[1910, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[1910, "torch.onnx.OnnxRegistry.register_op"]], "save() (torch.onnx.exportoutput method)": [[1910, "torch.onnx.ExportOutput.save"]], "save_diagnostics() (torch.onnx.exportoutput method)": [[1910, "torch.onnx.ExportOutput.save_diagnostics"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1910, "torch.onnx.ExportOutputSerializer.serialize"]], "is_onnxrt_backend_supported() (in module torch.onnx)": [[1911, "torch.onnx.is_onnxrt_backend_supported"]], "disable_log() (in module torch.onnx)": [[1912, "torch.onnx.disable_log"]], "enable_log() (in module torch.onnx)": [[1912, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1912, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1912, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1912, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1912, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1912, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1912, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1912, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1912, "torch.onnx.unregister_custom_op_symbolic"]], "optimizer (class in torch.optim)": [[1914, "torch.optim.Optimizer"]], "torch.optim": [[1914, "module-torch.optim"]], "torch.optim.adadelta": [[1914, "module-torch.optim.adadelta"]], "torch.optim.adagrad": [[1914, "module-torch.optim.adagrad"]], "torch.optim.adam": [[1914, "module-torch.optim.adam"]], "torch.optim.adamax": [[1914, "module-torch.optim.adamax"]], "torch.optim.adamw": [[1914, "module-torch.optim.adamw"]], "torch.optim.asgd": [[1914, "module-torch.optim.asgd"]], "torch.optim.lbfgs": [[1914, "module-torch.optim.lbfgs"]], "torch.optim.lr_scheduler": [[1914, "module-torch.optim.lr_scheduler"]], "torch.optim.nadam": [[1914, "module-torch.optim.nadam"]], "torch.optim.optimizer": [[1914, "module-torch.optim.optimizer"]], "torch.optim.radam": [[1914, "module-torch.optim.radam"]], "torch.optim.rmsprop": [[1914, "module-torch.optim.rmsprop"]], "torch.optim.rprop": [[1914, "module-torch.optim.rprop"]], "torch.optim.sgd": [[1914, "module-torch.optim.sgd"]], "torch.optim.sparse_adam": [[1914, "module-torch.optim.sparse_adam"]], "torch.optim.swa_utils": [[1914, "module-torch.optim.swa_utils"]], "directory (class in torch.package)": [[1915, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1915, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1915, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1915, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1915, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1915, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_text"]], "torch.package": [[1915, "module-torch.package"]], "torch.package.analyze": [[1915, "module-torch.package.analyze"]], "torch.package.analyze.find_first_use_of_broken_modules": [[1915, "module-torch.package.analyze.find_first_use_of_broken_modules"]], "torch.package.analyze.is_from_package": [[1915, "module-torch.package.analyze.is_from_package"]], "torch.package.analyze.trace_dependencies": [[1915, "module-torch.package.analyze.trace_dependencies"]], "torch.package.file_structure_representation": [[1915, "module-torch.package.file_structure_representation"]], "torch.package.find_file_dependencies": [[1915, "module-torch.package.find_file_dependencies"]], "torch.package.glob_group": [[1915, "module-torch.package.glob_group"]], "torch.package.importer": [[1915, "module-torch.package.importer"]], "torch.package.package_exporter": [[1915, "module-torch.package.package_exporter"]], "torch.package.package_importer": [[1915, "module-torch.package.package_importer"]], "pipe (class in torch.distributed.pipeline.sync)": [[1916, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1916, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1916, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1916, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1916, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1916, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1917, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1917, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1917, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1917, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1917, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1917, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1917, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1917, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1917, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1917, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1917, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1917, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1917, "module-torch.profiler"]], "torch.profiler.itt": [[1917, "module-torch.profiler.itt"]], "torch.profiler.profiler": [[1917, "module-torch.profiler.profiler"]], "torch.profiler.python_tracer": [[1917, "module-torch.profiler.python_tracer"]], "torch.ao": [[1918, "module-torch.ao"]], "torch.ao.nn": [[1918, "module-torch.ao.nn"]], "torch.ao.nn.intrinsic.modules.fused": [[1918, "module-torch.ao.nn.intrinsic.modules.fused"]], "torch.ao.nn.intrinsic.qat.modules.conv_fused": [[1918, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_fused": [[1918, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_relu": [[1918, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[1918, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules.bn_relu": [[1918, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"]], "torch.ao.nn.intrinsic.quantized.modules.conv_add": [[1918, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"]], "torch.ao.nn.intrinsic.quantized.modules.conv_relu": [[1918, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"]], "torch.ao.nn.intrinsic.quantized.modules.linear_relu": [[1918, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"]], "torch.ao.nn.qat.dynamic.modules.linear": [[1918, "module-torch.ao.nn.qat.dynamic.modules.linear"]], "torch.ao.nn.qat.modules.conv": [[1918, "module-torch.ao.nn.qat.modules.conv"]], "torch.ao.nn.qat.modules.embedding_ops": [[1918, "module-torch.ao.nn.qat.modules.embedding_ops"]], "torch.ao.nn.qat.modules.linear": [[1918, "module-torch.ao.nn.qat.modules.linear"]], "torch.ao.nn.quantizable": [[1918, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1918, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantizable.modules.activation": [[1918, "module-torch.ao.nn.quantizable.modules.activation"]], "torch.ao.nn.quantizable.modules.rnn": [[1918, "module-torch.ao.nn.quantizable.modules.rnn"]], "torch.ao.nn.quantized": [[1918, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.dynamic.modules.conv": [[1918, "module-torch.ao.nn.quantized.dynamic.modules.conv"]], "torch.ao.nn.quantized.dynamic.modules.linear": [[1918, "module-torch.ao.nn.quantized.dynamic.modules.linear"]], "torch.ao.nn.quantized.dynamic.modules.rnn": [[1918, "module-torch.ao.nn.quantized.dynamic.modules.rnn"]], "torch.ao.nn.quantized.modules.activation": [[1918, "module-torch.ao.nn.quantized.modules.activation"]], "torch.ao.nn.quantized.modules.batchnorm": [[1918, "module-torch.ao.nn.quantized.modules.batchnorm"]], "torch.ao.nn.quantized.modules.conv": [[1918, "module-torch.ao.nn.quantized.modules.conv"]], "torch.ao.nn.quantized.modules.dropout": [[1918, "module-torch.ao.nn.quantized.modules.dropout"]], "torch.ao.nn.quantized.modules.embedding_ops": [[1918, "module-torch.ao.nn.quantized.modules.embedding_ops"]], "torch.ao.nn.quantized.modules.functional_modules": [[1918, "module-torch.ao.nn.quantized.modules.functional_modules"]], "torch.ao.nn.quantized.modules.linear": [[1918, "module-torch.ao.nn.quantized.modules.linear"]], "torch.ao.nn.quantized.modules.normalization": [[1918, "module-torch.ao.nn.quantized.modules.normalization"]], "torch.ao.nn.quantized.modules.rnn": [[1918, "module-torch.ao.nn.quantized.modules.rnn"]], "torch.ao.nn.quantized.modules.utils": [[1918, "module-torch.ao.nn.quantized.modules.utils"]], "torch.ao.nn.quantized.reference": [[1918, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1918, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.quantized.reference.modules.conv": [[1918, "module-torch.ao.nn.quantized.reference.modules.conv"]], "torch.ao.nn.quantized.reference.modules.linear": [[1918, "module-torch.ao.nn.quantized.reference.modules.linear"]], "torch.ao.nn.quantized.reference.modules.rnn": [[1918, "module-torch.ao.nn.quantized.reference.modules.rnn"]], "torch.ao.nn.quantized.reference.modules.sparse": [[1918, "module-torch.ao.nn.quantized.reference.modules.sparse"]], "torch.ao.nn.quantized.reference.modules.utils": [[1918, "module-torch.ao.nn.quantized.reference.modules.utils"]], "torch.ao.nn.sparse": [[1918, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1918, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1918, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.nn.sparse.quantized.dynamic.linear": [[1918, "module-torch.ao.nn.sparse.quantized.dynamic.linear"]], "torch.ao.nn.sparse.quantized.linear": [[1918, "module-torch.ao.nn.sparse.quantized.linear"]], "torch.ao.nn.sparse.quantized.utils": [[1918, "module-torch.ao.nn.sparse.quantized.utils"]], "torch.ao.ns": [[1918, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1918, "module-torch.ao.ns.fx"]], "torch.ao.ns.fx.graph_matcher": [[1918, "module-torch.ao.ns.fx.graph_matcher"]], "torch.ao.ns.fx.graph_passes": [[1918, "module-torch.ao.ns.fx.graph_passes"]], "torch.ao.ns.fx.mappings": [[1918, "module-torch.ao.ns.fx.mappings"]], "torch.ao.ns.fx.n_shadows_utils": [[1918, "module-torch.ao.ns.fx.n_shadows_utils"]], "torch.ao.ns.fx.ns_types": [[1918, "module-torch.ao.ns.fx.ns_types"]], "torch.ao.ns.fx.pattern_utils": [[1918, "module-torch.ao.ns.fx.pattern_utils"]], "torch.ao.ns.fx.qconfig_multi_mapping": [[1918, "module-torch.ao.ns.fx.qconfig_multi_mapping"]], "torch.ao.ns.fx.utils": [[1918, "module-torch.ao.ns.fx.utils"]], "torch.ao.ns.fx.weight_utils": [[1918, "module-torch.ao.ns.fx.weight_utils"]], "torch.ao.pruning": [[1918, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1918, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.scheduler.base_scheduler": [[1918, "module-torch.ao.pruning.scheduler.base_scheduler"]], "torch.ao.pruning.scheduler.cubic_scheduler": [[1918, "module-torch.ao.pruning.scheduler.cubic_scheduler"]], "torch.ao.pruning.scheduler.lambda_scheduler": [[1918, "module-torch.ao.pruning.scheduler.lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[1918, "module-torch.ao.pruning.sparsifier"]], "torch.ao.pruning.sparsifier.base_sparsifier": [[1918, "module-torch.ao.pruning.sparsifier.base_sparsifier"]], "torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier": [[1918, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"]], "torch.ao.pruning.sparsifier.utils": [[1918, "module-torch.ao.pruning.sparsifier.utils"]], "torch.ao.pruning.sparsifier.weight_norm_sparsifier": [[1918, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"]], "torch.ao.quantization": [[1918, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1918, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.backend_config.backend_config": [[1918, "module-torch.ao.quantization.backend_config.backend_config"]], "torch.ao.quantization.backend_config.executorch": [[1918, "module-torch.ao.quantization.backend_config.executorch"]], "torch.ao.quantization.backend_config.fbgemm": [[1918, "module-torch.ao.quantization.backend_config.fbgemm"]], "torch.ao.quantization.backend_config.native": [[1918, "module-torch.ao.quantization.backend_config.native"]], "torch.ao.quantization.backend_config.observation_type": [[1918, "module-torch.ao.quantization.backend_config.observation_type"]], "torch.ao.quantization.backend_config.onednn": [[1918, "module-torch.ao.quantization.backend_config.onednn"]], "torch.ao.quantization.backend_config.qnnpack": [[1918, "module-torch.ao.quantization.backend_config.qnnpack"]], "torch.ao.quantization.backend_config.tensorrt": [[1918, "module-torch.ao.quantization.backend_config.tensorrt"]], "torch.ao.quantization.backend_config.utils": [[1918, "module-torch.ao.quantization.backend_config.utils"]], "torch.ao.quantization.backend_config.x86": [[1918, "module-torch.ao.quantization.backend_config.x86"]], "torch.ao.quantization.fake_quantize": [[1918, "module-torch.ao.quantization.fake_quantize"]], "torch.ao.quantization.fuse_modules": [[1918, "module-torch.ao.quantization.fuse_modules"]], "torch.ao.quantization.fuser_method_mappings": [[1918, "module-torch.ao.quantization.fuser_method_mappings"]], "torch.ao.quantization.fx": [[1918, "module-torch.ao.quantization.fx"]], "torch.ao.quantization.fx.convert": [[1918, "module-torch.ao.quantization.fx.convert"]], "torch.ao.quantization.fx.custom_config": [[1918, "module-torch.ao.quantization.fx.custom_config"]], "torch.ao.quantization.fx.fuse": [[1918, "module-torch.ao.quantization.fx.fuse"]], "torch.ao.quantization.fx.fuse_handler": [[1918, "module-torch.ao.quantization.fx.fuse_handler"]], "torch.ao.quantization.fx.graph_module": [[1918, "module-torch.ao.quantization.fx.graph_module"]], "torch.ao.quantization.fx.lower_to_fbgemm": [[1918, "module-torch.ao.quantization.fx.lower_to_fbgemm"]], "torch.ao.quantization.fx.lower_to_qnnpack": [[1918, "module-torch.ao.quantization.fx.lower_to_qnnpack"]], "torch.ao.quantization.fx.lstm_utils": [[1918, "module-torch.ao.quantization.fx.lstm_utils"]], "torch.ao.quantization.fx.match_utils": [[1918, "module-torch.ao.quantization.fx.match_utils"]], "torch.ao.quantization.fx.pattern_utils": [[1918, "module-torch.ao.quantization.fx.pattern_utils"]], "torch.ao.quantization.fx.prepare": [[1918, "module-torch.ao.quantization.fx.prepare"]], "torch.ao.quantization.fx.qconfig_mapping_utils": [[1918, "module-torch.ao.quantization.fx.qconfig_mapping_utils"]], "torch.ao.quantization.fx.quantize_handler": [[1918, "module-torch.ao.quantization.fx.quantize_handler"]], "torch.ao.quantization.fx.tracer": [[1918, "module-torch.ao.quantization.fx.tracer"]], "torch.ao.quantization.fx.utils": [[1918, "module-torch.ao.quantization.fx.utils"]], "torch.ao.quantization.observer": [[1918, "module-torch.ao.quantization.observer"]], "torch.ao.quantization.pt2e.duplicate_dq_pass": [[1918, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"]], "torch.ao.quantization.pt2e.eval_utils": [[1918, "module-torch.ao.quantization.pt2e.eval_utils"]], "torch.ao.quantization.pt2e.graph_utils": [[1918, "module-torch.ao.quantization.pt2e.graph_utils"]], "torch.ao.quantization.pt2e.port_metadata_pass": [[1918, "module-torch.ao.quantization.pt2e.port_metadata_pass"]], "torch.ao.quantization.pt2e.prepare": [[1918, "module-torch.ao.quantization.pt2e.prepare"]], "torch.ao.quantization.pt2e.qat_utils": [[1918, "module-torch.ao.quantization.pt2e.qat_utils"]], "torch.ao.quantization.pt2e.representation.rewrite": [[1918, "module-torch.ao.quantization.pt2e.representation.rewrite"]], "torch.ao.quantization.pt2e.utils": [[1918, "module-torch.ao.quantization.pt2e.utils"]], "torch.ao.quantization.qconfig": [[1918, "module-torch.ao.quantization.qconfig"]], "torch.ao.quantization.qconfig_mapping": [[1918, "module-torch.ao.quantization.qconfig_mapping"]], "torch.ao.quantization.quant_type": [[1918, "module-torch.ao.quantization.quant_type"]], "torch.ao.quantization.quantization_mappings": [[1918, "module-torch.ao.quantization.quantization_mappings"]], "torch.ao.quantization.quantize": [[1918, "module-torch.ao.quantization.quantize"]], "torch.ao.quantization.quantize_fx": [[1918, "module-torch.ao.quantization.quantize_fx"]], "torch.ao.quantization.quantize_jit": [[1918, "module-torch.ao.quantization.quantize_jit"]], "torch.ao.quantization.quantize_pt2e": [[1918, "module-torch.ao.quantization.quantize_pt2e"]], "torch.ao.quantization.quantizer.composable_quantizer": [[1918, "module-torch.ao.quantization.quantizer.composable_quantizer"]], "torch.ao.quantization.quantizer.embedding_quantizer": [[1918, "module-torch.ao.quantization.quantizer.embedding_quantizer"]], "torch.ao.quantization.quantizer.quantizer": [[1918, "module-torch.ao.quantization.quantizer.quantizer"]], "torch.ao.quantization.quantizer.utils": [[1918, "module-torch.ao.quantization.quantizer.utils"]], "torch.ao.quantization.quantizer.x86_inductor_quantizer": [[1918, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer": [[1918, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer_utils": [[1918, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"]], "torch.ao.quantization.stubs": [[1918, "module-torch.ao.quantization.stubs"]], "torch.ao.quantization.utils": [[1918, "module-torch.ao.quantization.utils"]], "torch.nn.intrinsic.modules.fused": [[1918, "module-torch.nn.intrinsic.modules.fused"]], "torch.nn.intrinsic.qat.modules.conv_fused": [[1918, "module-torch.nn.intrinsic.qat.modules.conv_fused"]], "torch.nn.intrinsic.qat.modules.linear_fused": [[1918, "module-torch.nn.intrinsic.qat.modules.linear_fused"]], "torch.nn.intrinsic.qat.modules.linear_relu": [[1918, "module-torch.nn.intrinsic.qat.modules.linear_relu"]], "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[1918, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.nn.intrinsic.quantized.modules.bn_relu": [[1918, "module-torch.nn.intrinsic.quantized.modules.bn_relu"]], "torch.nn.intrinsic.quantized.modules.conv_relu": [[1918, "module-torch.nn.intrinsic.quantized.modules.conv_relu"]], "torch.nn.intrinsic.quantized.modules.linear_relu": [[1918, "module-torch.nn.intrinsic.quantized.modules.linear_relu"]], "torch.nn.qat.dynamic.modules.linear": [[1918, "module-torch.nn.qat.dynamic.modules.linear"]], "torch.nn.qat.modules.conv": [[1918, "module-torch.nn.qat.modules.conv"]], "torch.nn.qat.modules.embedding_ops": [[1918, "module-torch.nn.qat.modules.embedding_ops"]], "torch.nn.qat.modules.linear": [[1918, "module-torch.nn.qat.modules.linear"]], "torch.nn.quantizable.modules.activation": [[1918, "module-torch.nn.quantizable.modules.activation"]], "torch.nn.quantizable.modules.rnn": [[1918, "module-torch.nn.quantizable.modules.rnn"]], "torch.nn.quantized.dynamic.modules.conv": [[1918, "module-torch.nn.quantized.dynamic.modules.conv"]], "torch.nn.quantized.dynamic.modules.linear": [[1918, "module-torch.nn.quantized.dynamic.modules.linear"]], "torch.nn.quantized.dynamic.modules.rnn": [[1918, "module-torch.nn.quantized.dynamic.modules.rnn"]], "torch.nn.quantized.functional": [[1918, "module-torch.nn.quantized.functional"]], "torch.nn.quantized.modules.activation": [[1918, "module-torch.nn.quantized.modules.activation"]], "torch.nn.quantized.modules.batchnorm": [[1918, "module-torch.nn.quantized.modules.batchnorm"]], "torch.nn.quantized.modules.conv": [[1918, "module-torch.nn.quantized.modules.conv"]], "torch.nn.quantized.modules.dropout": [[1918, "module-torch.nn.quantized.modules.dropout"]], "torch.nn.quantized.modules.embedding_ops": [[1918, "module-torch.nn.quantized.modules.embedding_ops"]], "torch.nn.quantized.modules.functional_modules": [[1918, "module-torch.nn.quantized.modules.functional_modules"]], "torch.nn.quantized.modules.linear": [[1918, "module-torch.nn.quantized.modules.linear"]], "torch.nn.quantized.modules.normalization": [[1918, "module-torch.nn.quantized.modules.normalization"]], "torch.nn.quantized.modules.rnn": [[1918, "module-torch.nn.quantized.modules.rnn"]], "torch.nn.quantized.modules.utils": [[1918, "module-torch.nn.quantized.modules.utils"]], "torch.quantization.fake_quantize": [[1918, "module-torch.quantization.fake_quantize"]], "torch.quantization.fuse_modules": [[1918, "module-torch.quantization.fuse_modules"]], "torch.quantization.fuser_method_mappings": [[1918, "module-torch.quantization.fuser_method_mappings"]], "torch.quantization.fx.convert": [[1918, "module-torch.quantization.fx.convert"]], "torch.quantization.fx.fuse": [[1918, "module-torch.quantization.fx.fuse"]], "torch.quantization.fx.fusion_patterns": [[1918, "module-torch.quantization.fx.fusion_patterns"]], "torch.quantization.fx.graph_module": [[1918, "module-torch.quantization.fx.graph_module"]], "torch.quantization.fx.match_utils": [[1918, "module-torch.quantization.fx.match_utils"]], "torch.quantization.fx.pattern_utils": [[1918, "module-torch.quantization.fx.pattern_utils"]], "torch.quantization.fx.prepare": [[1918, "module-torch.quantization.fx.prepare"]], "torch.quantization.fx.quantization_patterns": [[1918, "module-torch.quantization.fx.quantization_patterns"]], "torch.quantization.fx.quantization_types": [[1918, "module-torch.quantization.fx.quantization_types"]], "torch.quantization.fx.utils": [[1918, "module-torch.quantization.fx.utils"]], "torch.quantization.observer": [[1918, "module-torch.quantization.observer"]], "torch.quantization.qconfig": [[1918, "module-torch.quantization.qconfig"]], "torch.quantization.quant_type": [[1918, "module-torch.quantization.quant_type"]], "torch.quantization.quantization_mappings": [[1918, "module-torch.quantization.quantization_mappings"]], "torch.quantization.quantize": [[1918, "module-torch.quantization.quantize"]], "torch.quantization.quantize_fx": [[1918, "module-torch.quantization.quantize_fx"]], "torch.quantization.quantize_jit": [[1918, "module-torch.quantization.quantize_jit"]], "torch.quantization.stubs": [[1918, "module-torch.quantization.stubs"]], "torch.quantization.utils": [[1918, "module-torch.quantization.utils"]], "torch.ao.nn.intrinsic": [[1921, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1921, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1921, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1921, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1921, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1921, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1921, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1921, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1921, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1921, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1921, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1921, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1921, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1921, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1921, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1921, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[1921, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.representation": [[1921, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[1921, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[1921, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1921, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1921, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1921, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1921, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1921, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1921, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1921, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1921, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1921, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1921, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1921, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1921, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1921, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1921, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1921, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1921, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1921, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1921, "module-torch.quantization"]], "torch.quantization.fx": [[1921, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1922, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1922, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1922, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1922, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1922, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1922, "torch.random.set_rng_state"]], "torch.random": [[1922, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1923, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[1923, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1923, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1923, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1923, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1923, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1923, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[1923, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1923, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1923, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1923, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1923, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[1923, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1923, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1923, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[1923, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1923, "module-torch.distributed.rpc"]], "torch.signal": [[1926, "module-torch.signal"]], "torch.signal.windows": [[1926, "module-torch.signal.windows"]], "torch.sparse": [[1927, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1928, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1928, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1928, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1928, "torch.special.digamma"]], "entr() (in module torch.special)": [[1928, "torch.special.entr"]], "erf() (in module torch.special)": [[1928, "torch.special.erf"]], "erfc() (in module torch.special)": [[1928, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1928, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1928, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1928, "torch.special.exp2"]], "expit() (in module torch.special)": [[1928, "torch.special.expit"]], "expm1() (in module torch.special)": [[1928, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1928, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1928, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1928, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1928, "torch.special.i0"]], "i0e() (in module torch.special)": [[1928, "torch.special.i0e"]], "i1() (in module torch.special)": [[1928, "torch.special.i1"]], "i1e() (in module torch.special)": [[1928, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1928, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1928, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1928, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1928, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1928, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1928, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1928, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1928, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1928, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1928, "torch.special.psi"]], "round() (in module torch.special)": [[1928, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1928, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1928, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1928, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1928, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1928, "torch.special.spherical_bessel_j0"]], "torch.special": [[1928, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1928, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1928, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1928, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1929, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1929, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1929, "torch.ByteStorage"]], "charstorage (class in torch)": [[1929, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1929, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1929, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1929, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1929, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1929, "torch.HalfStorage"]], "intstorage (class in torch)": [[1929, "torch.IntStorage"]], "longstorage (class in torch)": [[1929, "torch.LongStorage"]], "qint32storage (class in torch)": [[1929, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1929, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1929, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1929, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1929, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1929, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1929, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1929, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1929, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1929, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1929, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1929, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1929, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1929, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1929, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1929, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1929, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1929, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1929, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1929, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1929, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1929, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1929, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1929, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1929, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1929, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1929, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1929, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1929, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1929, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1929, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1929, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1929, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1929, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1929, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1929, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1929, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1929, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1929, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1929, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1929, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1929, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1929, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.float"]], "float8_e4m3fn() (torch.typedstorage method)": [[1929, "torch.TypedStorage.float8_e4m3fn"]], "float8_e4m3fn() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.float8_e4m3fn"]], "float8_e5m2() (torch.typedstorage method)": [[1929, "torch.TypedStorage.float8_e5m2"]], "float8_e5m2() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.float8_e5m2"]], "from_buffer() (torch.typedstorage class method)": [[1929, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1929, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1929, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1929, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1929, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1929, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[1929, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[1929, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1929, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1929, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[1929, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[1929, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[1929, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1929, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1929, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1929, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1929, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1929, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1929, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1929, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1929, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1929, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1929, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1929, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1929, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1929, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1929, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1929, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1930, "torch.device"]], "dtype (class in torch)": [[1930, "torch.dtype"]], "layout (class in torch)": [[1930, "torch.layout"]], "memory_format (class in torch)": [[1930, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1932, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1933, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1933, "torch.Tensor.T"]], "tensor (class in torch)": [[1933, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1933, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1933, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1934, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1934, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1934, "torch.testing.make_tensor"]], "torch.testing": [[1934, "module-torch.testing"]], "symbool (class in torch)": [[1935, "torch.SymBool"]], "symfloat (class in torch)": [[1935, "torch.SymFloat"]], "symint (class in torch)": [[1935, "torch.SymInt"]], "tag (class in torch)": [[1935, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1935, "torch.torch.default_generator"]], "name (torch.tag property)": [[1935, "torch.Tag.name"]], "torch": [[1935, "module-torch"]], "torch.contrib": [[1935, "module-torch.contrib"]], "torch.functional": [[1935, "module-torch.functional"]], "torch.quasirandom": [[1935, "module-torch.quasirandom"]], "torch.return_types": [[1935, "module-torch.return_types"]], "torch.serialization": [[1935, "module-torch.serialization"]], "torch.signal.windows.windows": [[1935, "module-torch.signal.windows.windows"]], "torch.sparse.semi_structured": [[1935, "module-torch.sparse.semi_structured"]], "torch.storage": [[1935, "module-torch.storage"]], "torch.torch_version": [[1935, "module-torch.torch_version"]], "torch.types": [[1935, "module-torch.types"]], "torch.utils.backcompat": [[1935, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1935, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1935, "module-torch.utils.model_dump"]], "torch.utils.viz": [[1935, "module-torch.utils.viz"]], "torch.version": [[1935, "module-torch.version"]], "logger (class in torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1936, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1936, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1936, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1936, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1937, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1937, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1937, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1937, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1937, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1937, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1937, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[1939, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[1957, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1957, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1957, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1957, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1957, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1957, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1957, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1957, "torch.overrides.resolve_name"]], "torch.overrides": [[1957, "module-torch.overrides"]], "wrap_torch_function() (in module torch.overrides)": [[1957, "torch.overrides.wrap_torch_function"]], "_dump_snapshot() (in module torch.cuda.memory)": [[1958, "torch.cuda.memory._dump_snapshot"]], "_record_memory_history() (in module torch.cuda.memory)": [[1958, "torch.cuda.memory._record_memory_history"]], "_snapshot() (in module torch.cuda.memory)": [[1958, "torch.cuda.memory._snapshot"]], "torch.finfo (class in torch)": [[1959, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1959, "torch.torch.iinfo"]], "torch.utils": [[1960, "module-torch.utils"]], "torch.utils.backend_registration": [[1960, "module-torch.utils.backend_registration"]], "torch.utils.benchmark.examples.blas_compare_setup": [[1960, "module-torch.utils.benchmark.examples.blas_compare_setup"]], "torch.utils.benchmark.examples.compare": [[1960, "module-torch.utils.benchmark.examples.compare"]], "torch.utils.benchmark.examples.fuzzer": [[1960, "module-torch.utils.benchmark.examples.fuzzer"]], "torch.utils.benchmark.examples.op_benchmark": [[1960, "module-torch.utils.benchmark.examples.op_benchmark"]], "torch.utils.benchmark.examples.simple_timeit": [[1960, "module-torch.utils.benchmark.examples.simple_timeit"]], "torch.utils.benchmark.examples.spectral_ops_fuzz_test": [[1960, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers.binary": [[1960, "module-torch.utils.benchmark.op_fuzzers.binary"]], "torch.utils.benchmark.op_fuzzers.sparse_binary": [[1960, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"]], "torch.utils.benchmark.op_fuzzers.sparse_unary": [[1960, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"]], "torch.utils.benchmark.op_fuzzers.spectral": [[1960, "module-torch.utils.benchmark.op_fuzzers.spectral"]], "torch.utils.benchmark.op_fuzzers.unary": [[1960, "module-torch.utils.benchmark.op_fuzzers.unary"]], "torch.utils.benchmark.utils.common": [[1960, "module-torch.utils.benchmark.utils.common"]], "torch.utils.benchmark.utils.compare": [[1960, "module-torch.utils.benchmark.utils.compare"]], "torch.utils.benchmark.utils.compile": [[1960, "module-torch.utils.benchmark.utils.compile"]], "torch.utils.benchmark.utils.cpp_jit": [[1960, "module-torch.utils.benchmark.utils.cpp_jit"]], "torch.utils.benchmark.utils.fuzzer": [[1960, "module-torch.utils.benchmark.utils.fuzzer"]], "torch.utils.benchmark.utils.sparse_fuzzer": [[1960, "module-torch.utils.benchmark.utils.sparse_fuzzer"]], "torch.utils.benchmark.utils.timer": [[1960, "module-torch.utils.benchmark.utils.timer"]], "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface": [[1960, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"]], "torch.utils.bundled_inputs": [[1960, "module-torch.utils.bundled_inputs"]], "torch.utils.checkpoint": [[1960, "module-torch.utils.checkpoint"]], "torch.utils.collect_env": [[1960, "module-torch.utils.collect_env"]], "torch.utils.cpp_backtrace": [[1960, "module-torch.utils.cpp_backtrace"]], "torch.utils.cpp_extension": [[1960, "module-torch.utils.cpp_extension"]], "torch.utils.data.backward_compatibility": [[1960, "module-torch.utils.data.backward_compatibility"]], "torch.utils.data.dataloader": [[1960, "module-torch.utils.data.dataloader"]], "torch.utils.data.datapipes.dataframe.dataframe_wrapper": [[1960, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"]], "torch.utils.data.datapipes.dataframe.dataframes": [[1960, "module-torch.utils.data.datapipes.dataframe.dataframes"]], "torch.utils.data.datapipes.dataframe.datapipes": [[1960, "module-torch.utils.data.datapipes.dataframe.datapipes"]], "torch.utils.data.datapipes.dataframe.structures": [[1960, "module-torch.utils.data.datapipes.dataframe.structures"]], "torch.utils.data.datapipes.datapipe": [[1960, "module-torch.utils.data.datapipes.datapipe"]], "torch.utils.data.datapipes.gen_pyi": [[1960, "module-torch.utils.data.datapipes.gen_pyi"]], "torch.utils.data.datapipes.iter.callable": [[1960, "module-torch.utils.data.datapipes.iter.callable"]], "torch.utils.data.datapipes.iter.combinatorics": [[1960, "module-torch.utils.data.datapipes.iter.combinatorics"]], "torch.utils.data.datapipes.iter.combining": [[1960, "module-torch.utils.data.datapipes.iter.combining"]], "torch.utils.data.datapipes.iter.filelister": [[1960, "module-torch.utils.data.datapipes.iter.filelister"]], "torch.utils.data.datapipes.iter.fileopener": [[1960, "module-torch.utils.data.datapipes.iter.fileopener"]], "torch.utils.data.datapipes.iter.grouping": [[1960, "module-torch.utils.data.datapipes.iter.grouping"]], "torch.utils.data.datapipes.iter.routeddecoder": [[1960, "module-torch.utils.data.datapipes.iter.routeddecoder"]], "torch.utils.data.datapipes.iter.selecting": [[1960, "module-torch.utils.data.datapipes.iter.selecting"]], "torch.utils.data.datapipes.iter.sharding": [[1960, "module-torch.utils.data.datapipes.iter.sharding"]], "torch.utils.data.datapipes.iter.streamreader": [[1960, "module-torch.utils.data.datapipes.iter.streamreader"]], "torch.utils.data.datapipes.iter.utils": [[1960, "module-torch.utils.data.datapipes.iter.utils"]], "torch.utils.data.datapipes.map.callable": [[1960, "module-torch.utils.data.datapipes.map.callable"]], "torch.utils.data.datapipes.map.combinatorics": [[1960, "module-torch.utils.data.datapipes.map.combinatorics"]], "torch.utils.data.datapipes.map.combining": [[1960, "module-torch.utils.data.datapipes.map.combining"]], "torch.utils.data.datapipes.map.grouping": [[1960, "module-torch.utils.data.datapipes.map.grouping"]], "torch.utils.data.datapipes.map.utils": [[1960, "module-torch.utils.data.datapipes.map.utils"]], "torch.utils.data.datapipes.utils.common": [[1960, "module-torch.utils.data.datapipes.utils.common"]], "torch.utils.data.datapipes.utils.decoder": [[1960, "module-torch.utils.data.datapipes.utils.decoder"]], "torch.utils.data.datapipes.utils.snapshot": [[1960, "module-torch.utils.data.datapipes.utils.snapshot"]], "torch.utils.data.dataset": [[1960, "module-torch.utils.data.dataset"]], "torch.utils.data.distributed": [[1960, "module-torch.utils.data.distributed"]], "torch.utils.data.graph": [[1960, "module-torch.utils.data.graph"]], "torch.utils.data.graph_settings": [[1960, "module-torch.utils.data.graph_settings"]], "torch.utils.data.sampler": [[1960, "module-torch.utils.data.sampler"]], "torch.utils.dlpack": [[1960, "module-torch.utils.dlpack"]], "torch.utils.file_baton": [[1960, "module-torch.utils.file_baton"]], "torch.utils.flop_counter": [[1960, "module-torch.utils.flop_counter"]], "torch.utils.hipify.constants": [[1960, "module-torch.utils.hipify.constants"]], "torch.utils.hipify.cuda_to_hip_mappings": [[1960, "module-torch.utils.hipify.cuda_to_hip_mappings"]], "torch.utils.hipify.hipify_python": [[1960, "module-torch.utils.hipify.hipify_python"]], "torch.utils.hipify.version": [[1960, "module-torch.utils.hipify.version"]], "torch.utils.hooks": [[1960, "module-torch.utils.hooks"]], "torch.utils.jit.log_extract": [[1960, "module-torch.utils.jit.log_extract"]], "torch.utils.mkldnn": [[1960, "module-torch.utils.mkldnn"]], "torch.utils.mobile_optimizer": [[1960, "module-torch.utils.mobile_optimizer"]], "torch.utils.show_pickle": [[1960, "module-torch.utils.show_pickle"]], "torch.utils.tensorboard.summary": [[1960, "module-torch.utils.tensorboard.summary"]], "torch.utils.tensorboard.writer": [[1960, "module-torch.utils.tensorboard.writer"]], "torch.utils.throughput_benchmark": [[1960, "module-torch.utils.throughput_benchmark"]], "torch.utils.weak": [[1960, "module-torch.utils.weak"]]}})