Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "cond", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "deterministic", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "export", "export.ir_spec", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.dynamic-value", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dim_order", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.register_post_accumulate_grad_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck.gradcheck", "generated/torch.autograd.gradcheck.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.cudagraph_mark_step_begin", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.cond", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_device", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.set_device", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_file", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.interface", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.convert_conv2d_weight_memory_format", "generated/torch.nn.utils.fuse_conv_bn_eval", "generated/torch.nn.utils.fuse_conv_bn_weights", "generated/torch.nn.utils.fuse_linear_bn_eval", "generated/torch.nn.utils.fuse_linear_bn_weights", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.as_sparse_gradcheck", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_ite", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unravel_index", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_dynamo", "onnx_dynamo_onnxruntime_backend", "onnx_torchscript", "onnx_torchscript_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_deepdive", "torch.compiler_dynamic_shapes", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_guards_overview", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "torch_cuda_memory", "type_info", "utils"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "cond.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "deterministic.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "export.ir_spec.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.dynamic-value.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dim_order.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.register_post_accumulate_grad_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.gradcheck.rst", "generated/torch.autograd.gradcheck.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.cudagraph_mark_step_begin.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.cond.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_device.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.set_device.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_file.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.interface.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.convert_conv2d_weight_memory_format.rst", "generated/torch.nn.utils.fuse_conv_bn_eval.rst", "generated/torch.nn.utils.fuse_conv_bn_weights.rst", "generated/torch.nn.utils.fuse_linear_bn_eval.rst", "generated/torch.nn.utils.fuse_linear_bn_weights.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.as_sparse_gradcheck.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_ite.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unravel_index.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_dynamo.rst", "onnx_dynamo_onnxruntime_backend.rst", "onnx_torchscript.rst", "onnx_torchscript_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_deepdive.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_guards_overview.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "torch_cuda_memory.rst", "type_info.rst", "utils.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "Control Flow - Cond", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "torch.utils.deterministic", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.export", "torch.export IR Specification", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "torch.cond", "torch.dynamic-shape", "torch.dynamic-value", "torch.escape-hatch", "torch.map", "FXE0007:fx-graph-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dim_order", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.register_post_accumulate_grad_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck.gradcheck", "torch.autograd.gradcheck.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.cudagraph_mark_step_begin", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.cond", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_device", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.set_device", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_file", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.interface", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.convert_conv2d_weight_memory_format", "torch.nn.utils.fuse_conv_bn_eval", "torch.nn.utils.fuse_conv_bn_weights", "torch.nn.utils.fuse_linear_bn_eval", "torch.nn.utils.fuse_linear_bn_weights", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "torch.sparse.as_sparse_gradcheck", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_ite", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unravel_index", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "TorchDynamo-based ONNX Exporter", "ONNX Backend for TorchDynamo", "TorchScript-based ONNX Exporter", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deep Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "Guards Overview", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Understanding CUDA Memory Usage", "Type Info", "torch.utils"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 14, 15, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 40, 42, 43, 44, 45, 46, 47, 49, 53, 56, 57, 58, 67, 68, 141, 593, 670, 679, 725, 728, 729, 730, 735, 736, 738, 746, 747, 750, 754, 778, 779, 789, 790, 804, 814, 831, 848, 883, 892, 894, 895, 896, 921, 926, 929, 948, 962, 983, 1029, 1072, 1092, 1129, 1141, 1153, 1161, 1162, 1197, 1200, 1207, 1208, 1212, 1214, 1216, 1231, 1248, 1273, 1305, 1365, 1366, 1367, 1370, 1386, 1387, 1395, 1400, 1404, 1405, 1430, 1431, 1432, 1434, 1440, 1441, 1444, 1449, 1451, 1462, 1477, 1478, 1479, 1480, 1481, 1505, 1506, 1583, 1614, 1621, 1634, 1654, 1662, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1704, 1707, 1712, 1748, 1758, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1850, 1852, 1862, 1872, 1879, 1881, 1883, 1884, 1888, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1907, 1908, 1909, 1910, 1912, 1915, 1916, 1918, 1923, 1925, 1927, 1928, 1929, 1931, 1932, 1934, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1963, 1967, 1968, 1969, 1971, 1972], "conveni": [0, 3, 7, 14, 39, 42, 43, 49, 55, 1141, 1258, 1605, 1766, 1862, 1864, 1872, 1879, 1883, 1903, 1904, 1907, 1909, 1914, 1915, 1928, 1935, 1954, 1956, 1957, 1962, 1963], "method": [0, 3, 7, 9, 14, 15, 18, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 40, 42, 46, 49, 56, 57, 58, 60, 65, 66, 71, 212, 213, 314, 476, 477, 478, 487, 488, 489, 510, 604, 783, 787, 789, 805, 806, 807, 828, 831, 844, 864, 865, 866, 883, 887, 888, 889, 890, 903, 904, 1009, 1123, 1153, 1198, 1200, 1201, 1203, 1204, 1205, 1211, 1212, 1216, 1217, 1218, 1246, 1264, 1265, 1272, 1273, 1331, 1334, 1342, 1350, 1377, 1434, 1435, 1436, 1444, 1445, 1450, 1462, 1533, 1605, 1614, 1618, 1628, 1629, 1632, 1634, 1636, 1639, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1656, 1661, 1677, 1678, 1679, 1681, 1691, 1723, 1805, 1820, 1824, 1862, 1879, 1880, 1881, 1884, 1885, 1888, 1892, 1894, 1896, 1897, 1898, 1902, 1903, 1904, 1907, 1909, 1910, 1911, 1912, 1915, 1917, 1920, 1923, 1927, 1928, 1931, 1933, 1936, 1938, 1942, 1943, 1945, 1946, 1948, 1951, 1955, 1956, 1959, 1962, 1967, 1969, 1970], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 14, 15, 21, 22, 25, 29, 30, 31, 33, 35, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 57, 77, 144, 214, 245, 391, 393, 476, 670, 683, 685, 686, 689, 725, 748, 750, 771, 810, 811, 823, 867, 886, 891, 893, 906, 911, 920, 926, 933, 934, 935, 942, 958, 962, 976, 978, 987, 989, 1051, 1052, 1055, 1059, 1077, 1088, 1089, 1091, 1094, 1095, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1107, 1109, 1134, 1135, 1136, 1140, 1141, 1144, 1156, 1157, 1158, 1159, 1189, 1190, 1192, 1193, 1196, 1197, 1198, 1201, 1214, 1220, 1221, 1222, 1225, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1278, 1281, 1288, 1289, 1290, 1291, 1295, 1298, 1300, 1301, 1302, 1303, 1306, 1324, 1329, 1330, 1332, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1504, 1506, 1516, 1517, 1524, 1529, 1531, 1532, 1550, 1551, 1568, 1570, 1571, 1574, 1575, 1577, 1583, 1586, 1614, 1616, 1617, 1621, 1627, 1654, 1655, 1656, 1657, 1666, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1696, 1697, 1698, 1710, 1720, 1722, 1723, 1743, 1744, 1780, 1786, 1787, 1792, 1796, 1801, 1802, 1803, 1806, 1807, 1808, 1809, 1810, 1811, 1818, 1819, 1820, 1823, 1824, 1839, 1848, 1849, 1850, 1851, 1852, 1857, 1858, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1882, 1884, 1885, 1890, 1891, 1893, 1896, 1899, 1902, 1903, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1915, 1917, 1918, 1919, 1920, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1934, 1936, 1938, 1940, 1941, 1943, 1945, 1950, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1964, 1967, 1969, 1970, 1971], "some": [0, 1, 3, 7, 8, 9, 14, 20, 21, 22, 25, 27, 30, 31, 33, 35, 43, 44, 46, 47, 49, 52, 54, 55, 56, 57, 76, 78, 467, 486, 557, 679, 738, 942, 973, 1007, 1025, 1029, 1032, 1072, 1093, 1095, 1103, 1104, 1105, 1120, 1130, 1141, 1175, 1197, 1198, 1200, 1201, 1211, 1214, 1216, 1246, 1264, 1270, 1295, 1302, 1305, 1342, 1346, 1350, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1394, 1397, 1398, 1399, 1400, 1401, 1404, 1425, 1426, 1434, 1437, 1438, 1439, 1441, 1448, 1449, 1450, 1465, 1466, 1482, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1545, 1550, 1568, 1571, 1576, 1583, 1605, 1614, 1615, 1616, 1617, 1627, 1660, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1698, 1704, 1722, 1742, 1766, 1773, 1787, 1824, 1864, 1872, 1879, 1881, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1891, 1892, 1896, 1897, 1898, 1903, 1904, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1925, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1938, 1940, 1945, 1951, 1956, 1957, 1958, 1960, 1961, 1962, 1965, 1966, 1967, 1968, 1969], "oper": [0, 2, 4, 5, 7, 8, 11, 12, 15, 18, 21, 24, 27, 31, 32, 39, 40, 42, 43, 47, 50, 55, 56, 57, 70, 71, 73, 74, 75, 76, 77, 245, 304, 312, 326, 343, 393, 435, 436, 437, 438, 439, 478, 483, 486, 489, 503, 505, 507, 579, 670, 676, 679, 731, 732, 733, 737, 738, 747, 748, 758, 759, 769, 775, 782, 783, 785, 786, 789, 813, 816, 849, 851, 852, 855, 879, 881, 887, 889, 910, 911, 913, 915, 918, 920, 922, 924, 929, 932, 939, 942, 950, 954, 956, 976, 978, 1006, 1015, 1046, 1051, 1052, 1053, 1054, 1067, 1072, 1073, 1074, 1075, 1085, 1090, 1108, 1120, 1123, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1141, 1148, 1151, 1157, 1158, 1175, 1200, 1211, 1212, 1216, 1217, 1220, 1230, 1243, 1253, 1256, 1257, 1270, 1271, 1280, 1287, 1295, 1300, 1305, 1315, 1316, 1329, 1332, 1346, 1351, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1391, 1392, 1393, 1394, 1396, 1401, 1420, 1425, 1430, 1431, 1432, 1434, 1447, 1452, 1453, 1454, 1461, 1476, 1477, 1479, 1481, 1485, 1501, 1502, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1518, 1519, 1520, 1521, 1525, 1526, 1528, 1529, 1533, 1537, 1544, 1550, 1552, 1558, 1559, 1569, 1571, 1575, 1583, 1589, 1590, 1601, 1602, 1603, 1604, 1614, 1616, 1617, 1656, 1662, 1667, 1671, 1672, 1690, 1696, 1706, 1710, 1719, 1720, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1742, 1748, 1765, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1798, 1800, 1801, 1802, 1803, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1823, 1839, 1857, 1861, 1862, 1864, 1872, 1875, 1877, 1878, 1880, 1881, 1885, 1888, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1915, 1916, 1917, 1918, 1919, 1922, 1923, 1927, 1930, 1932, 1934, 1935, 1936, 1937, 1941, 1943, 1944, 1947, 1954, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1964, 1968, 1969], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 60, 65, 66, 67, 68, 73, 74, 75, 77, 79, 88, 110, 141, 145, 182, 199, 310, 312, 326, 333, 334, 397, 425, 438, 448, 476, 477, 478, 486, 489, 503, 507, 510, 534, 547, 573, 574, 575, 577, 578, 607, 670, 676, 679, 702, 703, 704, 705, 706, 707, 710, 719, 720, 721, 722, 723, 725, 738, 747, 750, 758, 759, 762, 763, 764, 769, 771, 775, 776, 777, 780, 783, 784, 785, 786, 789, 792, 797, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 821, 822, 823, 824, 827, 844, 848, 849, 851, 852, 855, 868, 869, 870, 879, 880, 881, 883, 884, 885, 886, 888, 889, 891, 892, 893, 894, 897, 898, 899, 903, 904, 907, 910, 911, 912, 920, 922, 923, 930, 932, 942, 945, 950, 954, 955, 958, 960, 973, 974, 975, 976, 978, 980, 981, 983, 986, 996, 997, 1000, 1001, 1007, 1011, 1015, 1017, 1018, 1019, 1021, 1023, 1024, 1029, 1030, 1039, 1041, 1042, 1048, 1053, 1054, 1055, 1064, 1072, 1073, 1074, 1075, 1085, 1086, 1087, 1090, 1092, 1100, 1102, 1106, 1108, 1115, 1117, 1120, 1124, 1127, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1145, 1146, 1150, 1151, 1153, 1157, 1158, 1159, 1160, 1174, 1175, 1187, 1197, 1198, 1200, 1201, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1220, 1222, 1224, 1232, 1236, 1237, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1253, 1254, 1255, 1257, 1258, 1264, 1265, 1266, 1270, 1271, 1272, 1273, 1278, 1281, 1287, 1290, 1291, 1294, 1295, 1300, 1301, 1302, 1305, 1311, 1312, 1324, 1329, 1331, 1332, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1420, 1421, 1422, 1427, 1428, 1429, 1430, 1431, 1434, 1436, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1467, 1470, 1473, 1481, 1482, 1483, 1484, 1486, 1489, 1490, 1491, 1498, 1500, 1501, 1502, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1533, 1535, 1542, 1544, 1545, 1552, 1557, 1558, 1559, 1569, 1571, 1577, 1583, 1587, 1589, 1590, 1598, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1627, 1628, 1629, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1654, 1655, 1656, 1660, 1661, 1662, 1664, 1665, 1667, 1668, 1671, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1702, 1704, 1705, 1707, 1708, 1710, 1720, 1722, 1723, 1724, 1727, 1728, 1729, 1731, 1733, 1735, 1737, 1738, 1744, 1751, 1754, 1759, 1760, 1762, 1763, 1764, 1766, 1768, 1769, 1770, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1796, 1799, 1800, 1802, 1803, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1839, 1843, 1846, 1850, 1852, 1857, 1860, 1861, 1862, 1864, 1869, 1872, 1877, 1879, 1880, 1881, 1882, 1884, 1885, 1886, 1888, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1906, 1908, 1910, 1911, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1930, 1932, 1934, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1962, 1963, 1964, 1965, 1966, 1968, 1970], "float": [0, 1, 3, 11, 21, 22, 24, 25, 27, 29, 31, 33, 36, 44, 46, 47, 49, 57, 144, 145, 210, 304, 306, 308, 312, 324, 391, 465, 471, 489, 503, 675, 677, 682, 684, 688, 722, 725, 728, 729, 730, 734, 735, 736, 738, 745, 746, 751, 752, 753, 754, 755, 760, 761, 762, 763, 764, 765, 767, 769, 770, 771, 775, 782, 783, 784, 789, 807, 809, 820, 828, 829, 842, 847, 848, 851, 852, 855, 870, 898, 899, 911, 912, 920, 927, 930, 934, 935, 951, 957, 958, 962, 972, 1042, 1055, 1066, 1067, 1073, 1074, 1075, 1077, 1090, 1108, 1117, 1118, 1119, 1120, 1122, 1144, 1147, 1156, 1157, 1158, 1161, 1162, 1182, 1189, 1190, 1192, 1193, 1194, 1195, 1198, 1200, 1216, 1217, 1220, 1224, 1226, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1278, 1287, 1289, 1291, 1319, 1323, 1324, 1328, 1330, 1331, 1332, 1335, 1338, 1342, 1346, 1352, 1353, 1354, 1356, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1382, 1383, 1388, 1389, 1390, 1393, 1394, 1395, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1420, 1422, 1426, 1434, 1439, 1440, 1442, 1443, 1448, 1452, 1455, 1456, 1457, 1458, 1459, 1465, 1471, 1473, 1476, 1477, 1479, 1481, 1482, 1483, 1486, 1487, 1488, 1515, 1516, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1535, 1544, 1569, 1576, 1583, 1602, 1614, 1619, 1620, 1623, 1625, 1628, 1637, 1638, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1656, 1657, 1661, 1667, 1668, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1704, 1705, 1706, 1708, 1710, 1716, 1719, 1723, 1724, 1725, 1726, 1738, 1742, 1743, 1763, 1764, 1767, 1771, 1780, 1781, 1783, 1784, 1786, 1821, 1824, 1828, 1846, 1848, 1861, 1881, 1882, 1883, 1884, 1885, 1891, 1894, 1896, 1897, 1899, 1900, 1902, 1903, 1907, 1909, 1911, 1915, 1918, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1936, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1957, 1959, 1961, 1964, 1968, 1972], "datatyp": [0, 57, 870, 1197, 1200, 1434, 1616, 1617, 1766, 1918, 1925, 1940], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 21, 22, 26, 29, 30, 31, 32, 33, 35, 39, 40, 42, 43, 46, 47, 49, 50, 52, 54, 55, 56, 57, 88, 89, 104, 120, 121, 124, 136, 137, 140, 141, 150, 151, 156, 157, 187, 188, 189, 198, 225, 230, 234, 235, 236, 246, 265, 266, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 294, 295, 298, 299, 300, 301, 304, 306, 312, 315, 335, 343, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 369, 370, 385, 386, 399, 403, 428, 429, 440, 441, 445, 446, 477, 478, 488, 510, 551, 552, 553, 554, 570, 573, 606, 607, 608, 611, 612, 670, 675, 684, 728, 729, 730, 731, 732, 733, 750, 804, 816, 851, 855, 861, 868, 869, 874, 880, 883, 884, 897, 898, 899, 903, 904, 914, 915, 917, 918, 919, 921, 926, 942, 957, 972, 973, 976, 978, 980, 987, 997, 1007, 1018, 1060, 1066, 1067, 1068, 1069, 1076, 1077, 1078, 1092, 1099, 1117, 1118, 1119, 1120, 1123, 1130, 1131, 1132, 1133, 1136, 1140, 1142, 1143, 1144, 1154, 1155, 1156, 1165, 1166, 1168, 1169, 1174, 1175, 1177, 1189, 1198, 1200, 1204, 1212, 1221, 1223, 1224, 1225, 1227, 1228, 1233, 1237, 1251, 1253, 1256, 1257, 1270, 1278, 1279, 1280, 1282, 1284, 1285, 1288, 1289, 1295, 1298, 1299, 1303, 1304, 1308, 1311, 1323, 1325, 1335, 1338, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1371, 1381, 1386, 1388, 1400, 1434, 1435, 1444, 1462, 1477, 1481, 1485, 1508, 1509, 1510, 1535, 1544, 1583, 1602, 1605, 1614, 1619, 1620, 1621, 1643, 1665, 1669, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1701, 1702, 1708, 1710, 1738, 1742, 1758, 1763, 1766, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1821, 1822, 1839, 1845, 1849, 1851, 1857, 1869, 1870, 1875, 1876, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1892, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1923, 1925, 1927, 1931, 1932, 1936, 1937, 1938, 1941, 1945, 1946, 1947, 1954, 1956, 1957, 1959, 1960, 1962, 1964, 1967, 1968, 1969, 1970], "lower": [0, 1, 8, 12, 22, 25, 31, 46, 47, 58, 65, 66, 67, 68, 783, 785, 849, 921, 926, 933, 934, 935, 937, 1086, 1087, 1160, 1161, 1230, 1237, 1239, 1247, 1248, 1255, 1258, 1263, 1301, 1324, 1331, 1342, 1452, 1508, 1509, 1510, 1581, 1582, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1698, 1704, 1706, 1721, 1723, 1743, 1758, 1766, 1804, 1848, 1849, 1850, 1881, 1882, 1884, 1900, 1902, 1904, 1915, 1920, 1926, 1931, 1941, 1947, 1964, 1969], "point": [0, 1, 7, 8, 9, 11, 21, 22, 24, 26, 29, 33, 39, 42, 43, 47, 49, 57, 79, 144, 145, 312, 324, 330, 471, 489, 688, 728, 729, 730, 731, 732, 733, 734, 739, 740, 741, 742, 743, 744, 745, 746, 749, 751, 752, 753, 754, 755, 765, 767, 769, 770, 771, 775, 785, 789, 809, 810, 811, 812, 815, 820, 842, 851, 852, 855, 870, 892, 894, 895, 896, 898, 899, 911, 912, 920, 942, 957, 958, 962, 1021, 1023, 1032, 1036, 1037, 1073, 1074, 1075, 1118, 1119, 1120, 1147, 1153, 1157, 1158, 1162, 1182, 1197, 1200, 1216, 1217, 1224, 1226, 1247, 1248, 1271, 1273, 1278, 1287, 1331, 1338, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1381, 1427, 1428, 1429, 1434, 1485, 1486, 1498, 1524, 1533, 1544, 1583, 1602, 1614, 1621, 1667, 1676, 1707, 1723, 1724, 1725, 1729, 1738, 1751, 1763, 1764, 1771, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1861, 1862, 1880, 1881, 1883, 1884, 1885, 1888, 1894, 1900, 1902, 1903, 1904, 1907, 1908, 1912, 1915, 1918, 1929, 1930, 1931, 1932, 1934, 1936, 1937, 1940, 1943, 1945, 1946, 1947, 1949, 1955, 1956, 1959, 1961, 1962, 1965, 1968, 1971, 1972], "lower_precision_fp": 0, "half": [0, 1, 10, 22, 31, 607, 951, 1086, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1200, 1263, 1269, 1362, 1363, 1364, 1365, 1366, 1367, 1382, 1383, 1385, 1434, 1528, 1529, 1532, 1621, 1673, 1698, 1751, 1820, 1897, 1915, 1918, 1923, 1940, 1942, 1943, 1946], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 25, 30, 31, 40, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 327, 579, 607, 750, 783, 831, 850, 868, 889, 898, 899, 911, 920, 944, 950, 954, 1015, 1016, 1025, 1067, 1072, 1073, 1093, 1115, 1118, 1119, 1126, 1130, 1133, 1134, 1135, 1141, 1157, 1158, 1198, 1200, 1201, 1208, 1211, 1216, 1220, 1247, 1248, 1259, 1272, 1342, 1350, 1378, 1381, 1397, 1398, 1399, 1434, 1435, 1436, 1444, 1445, 1462, 1485, 1527, 1545, 1601, 1605, 1614, 1615, 1616, 1617, 1628, 1653, 1671, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1716, 1731, 1735, 1754, 1763, 1766, 1824, 1836, 1862, 1872, 1877, 1879, 1880, 1881, 1883, 1884, 1888, 1891, 1896, 1897, 1898, 1903, 1904, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1929, 1930, 1931, 1934, 1936, 1937, 1940, 1942, 1943, 1947, 1948, 1950, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1966, 1967, 1968, 1969, 1970, 1971], "linear": [0, 2, 9, 22, 25, 26, 29, 30, 31, 46, 47, 49, 51, 53, 55, 57, 58, 421, 462, 463, 464, 465, 466, 469, 701, 710, 718, 719, 755, 782, 783, 784, 786, 804, 844, 848, 849, 851, 852, 893, 935, 978, 1072, 1129, 1131, 1139, 1141, 1153, 1200, 1204, 1212, 1226, 1232, 1237, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1261, 1263, 1291, 1331, 1350, 1356, 1376, 1384, 1385, 1393, 1419, 1434, 1436, 1449, 1451, 1452, 1453, 1461, 1463, 1470, 1473, 1477, 1479, 1481, 1484, 1486, 1522, 1531, 1532, 1544, 1578, 1586, 1591, 1602, 1605, 1614, 1624, 1625, 1627, 1628, 1632, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1660, 1661, 1664, 1701, 1704, 1712, 1723, 1861, 1872, 1880, 1882, 1883, 1889, 1892, 1899, 1902, 1907, 1908, 1909, 1911, 1915, 1920, 1923, 1925, 1926, 1927, 1929, 1931, 1932, 1933, 1934, 1936, 1967, 1969], "layer": [0, 8, 22, 25, 27, 29, 49, 52, 724, 725, 750, 831, 848, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1373, 1374, 1375, 1379, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1419, 1421, 1427, 1428, 1429, 1440, 1441, 1449, 1451, 1462, 1473, 1477, 1478, 1479, 1480, 1481, 1547, 1614, 1621, 1627, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1880, 1902, 1907, 1909, 1911, 1914, 1915, 1920, 1923, 1925, 1927, 1929, 1931, 1932, 1934, 1940, 1950], "convolut": [0, 1, 2, 46, 728, 729, 730, 731, 732, 733, 762, 763, 764, 942, 1210, 1362, 1363, 1364, 1365, 1366, 1367, 1373, 1374, 1375, 1379, 1410, 1411, 1412, 1413, 1414, 1415, 1446, 1447, 1452, 1482, 1483, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1532, 1533, 1621, 1622, 1623, 1766, 1880, 1882, 1892, 1902, 1906, 1907, 1912, 1915, 1926, 1930, 1931, 1934, 1964], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 56, 57, 58, 60, 61, 63, 64, 66, 72, 73, 75, 76, 77, 78, 79, 88, 141, 224, 245, 310, 312, 326, 327, 330, 368, 393, 438, 461, 471, 476, 489, 503, 507, 534, 570, 579, 607, 670, 679, 680, 681, 687, 725, 746, 750, 751, 753, 754, 755, 769, 772, 773, 775, 776, 777, 782, 783, 784, 785, 786, 789, 804, 805, 806, 807, 809, 810, 811, 812, 815, 830, 844, 848, 849, 850, 851, 852, 855, 864, 865, 876, 877, 878, 880, 883, 889, 891, 892, 893, 894, 895, 896, 898, 899, 911, 920, 921, 923, 924, 926, 929, 942, 951, 954, 957, 958, 961, 962, 974, 975, 976, 978, 979, 981, 986, 998, 1009, 1015, 1018, 1019, 1029, 1039, 1046, 1055, 1060, 1064, 1067, 1072, 1073, 1074, 1075, 1088, 1089, 1090, 1091, 1093, 1095, 1100, 1102, 1108, 1111, 1113, 1114, 1118, 1119, 1120, 1124, 1129, 1130, 1135, 1137, 1139, 1140, 1141, 1145, 1153, 1157, 1158, 1160, 1162, 1175, 1177, 1189, 1190, 1192, 1193, 1196, 1197, 1198, 1200, 1201, 1204, 1207, 1208, 1211, 1214, 1216, 1217, 1222, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1267, 1270, 1271, 1272, 1273, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1292, 1293, 1295, 1298, 1301, 1302, 1303, 1306, 1308, 1312, 1324, 1328, 1329, 1330, 1331, 1332, 1342, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1381, 1386, 1387, 1388, 1389, 1394, 1397, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1451, 1462, 1465, 1466, 1467, 1473, 1477, 1479, 1481, 1482, 1483, 1485, 1486, 1498, 1504, 1505, 1506, 1516, 1517, 1524, 1525, 1526, 1527, 1533, 1544, 1545, 1568, 1571, 1573, 1576, 1583, 1601, 1602, 1603, 1604, 1605, 1610, 1611, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1626, 1627, 1628, 1630, 1632, 1639, 1653, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1700, 1703, 1704, 1716, 1722, 1723, 1729, 1738, 1741, 1742, 1749, 1751, 1762, 1763, 1766, 1796, 1797, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1816, 1819, 1820, 1823, 1824, 1834, 1836, 1840, 1842, 1843, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1857, 1861, 1862, 1864, 1866, 1867, 1868, 1872, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972], "much": [0, 4, 7, 9, 15, 21, 22, 46, 141, 883, 892, 897, 1029, 1236, 1237, 1264, 1273, 1378, 1614, 1643, 1704, 1881, 1904, 1907, 1912, 1915, 1920, 1928, 1929, 1936, 1937, 1940, 1957, 1959, 1962], "faster": [0, 2, 8, 11, 21, 22, 25, 892, 898, 899, 1129, 1230, 1231, 1236, 1237, 1241, 1246, 1254, 1256, 1258, 1261, 1264, 1266, 1270, 1273, 1450, 1467, 1573, 1589, 1614, 1619, 1620, 1627, 1679, 1680, 1691, 1766, 1806, 1807, 1808, 1810, 1811, 1892, 1904, 1907, 1912, 1927, 1931, 1940, 1945, 1951, 1956, 1959, 1965], "reduct": [0, 2, 25, 49, 312, 503, 507, 942, 1246, 1278, 1331, 1350, 1351, 1357, 1368, 1370, 1378, 1388, 1394, 1395, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1483, 1505, 1506, 1514, 1516, 1517, 1525, 1530, 1541, 1542, 1545, 1546, 1556, 1564, 1565, 1566, 1567, 1568, 1576, 1587, 1588, 1599, 1600, 1614, 1723, 1801, 1882, 1897, 1908, 1912, 1928, 1931, 1963, 1969], "often": [0, 2, 4, 7, 8, 14, 21, 25, 31, 43, 49, 52, 57, 141, 883, 897, 1216, 1247, 1248, 1257, 1306, 1377, 1397, 1398, 1399, 1498, 1506, 1524, 1533, 1605, 1627, 1706, 1884, 1904, 1907, 1911, 1914, 1915, 1917, 1918, 1919, 1923, 1928, 1936, 1945, 1958, 1959, 1967, 1969], "requir": [0, 1, 5, 8, 9, 14, 15, 21, 22, 25, 26, 27, 29, 31, 33, 41, 42, 46, 47, 49, 52, 54, 56, 57, 110, 141, 212, 326, 448, 478, 486, 503, 505, 507, 550, 783, 785, 813, 816, 870, 879, 883, 888, 891, 892, 893, 894, 895, 896, 897, 942, 973, 1028, 1072, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1113, 1114, 1137, 1141, 1142, 1197, 1214, 1240, 1271, 1273, 1287, 1370, 1377, 1378, 1477, 1478, 1479, 1480, 1481, 1483, 1525, 1583, 1605, 1614, 1615, 1630, 1632, 1634, 1682, 1692, 1710, 1808, 1820, 1861, 1872, 1879, 1881, 1884, 1886, 1888, 1891, 1892, 1896, 1898, 1899, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1917, 1919, 1920, 1923, 1924, 1925, 1928, 1929, 1931, 1932, 1936, 1937, 1938, 1940, 1945, 1947, 1950, 1951, 1954, 1955, 1956, 1958, 1959, 1965, 1967, 1970], "dynam": [0, 12, 14, 15, 21, 47, 58, 59, 60, 63, 64, 65, 68, 69, 670, 719, 723, 750, 751, 752, 753, 754, 755, 784, 805, 816, 819, 834, 840, 841, 842, 843, 848, 849, 942, 974, 1208, 1214, 1216, 1272, 1627, 1883, 1884, 1885, 1902, 1907, 1915, 1918, 1922, 1923, 1925, 1927, 1928, 1932, 1951, 1956, 1959, 1966, 1969], "rang": [0, 1, 3, 21, 25, 26, 29, 31, 42, 43, 45, 46, 47, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 292, 471, 674, 751, 753, 755, 785, 809, 810, 811, 812, 813, 815, 816, 817, 875, 912, 937, 947, 1033, 1034, 1042, 1072, 1122, 1139, 1160, 1161, 1162, 1267, 1278, 1293, 1302, 1319, 1331, 1342, 1370, 1380, 1382, 1383, 1387, 1393, 1405, 1424, 1436, 1441, 1445, 1451, 1467, 1468, 1469, 1473, 1528, 1529, 1533, 1589, 1614, 1620, 1694, 1695, 1697, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1723, 1803, 1859, 1860, 1881, 1882, 1884, 1904, 1906, 1907, 1911, 1915, 1917, 1918, 1925, 1926, 1927, 1930, 1931, 1934, 1935, 1941, 1943, 1945, 1946, 1947, 1948, 1955, 1956, 1957, 1962, 1967, 1969], "tri": [0, 2, 3, 7, 21, 31, 35, 57, 78, 570, 1200, 1434, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1883, 1884, 1896, 1907, 1911, 1925, 1928, 1958, 1959, 1961], "match": [0, 1, 3, 12, 25, 27, 29, 31, 42, 46, 49, 57, 58, 65, 66, 75, 141, 304, 306, 312, 463, 464, 489, 490, 570, 573, 683, 689, 769, 783, 784, 785, 844, 868, 883, 897, 898, 899, 954, 972, 975, 987, 988, 989, 1018, 1064, 1072, 1129, 1141, 1177, 1200, 1214, 1216, 1233, 1272, 1294, 1369, 1378, 1434, 1440, 1486, 1505, 1506, 1544, 1570, 1577, 1583, 1602, 1614, 1632, 1662, 1668, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1724, 1758, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1841, 1857, 1872, 1881, 1884, 1891, 1897, 1899, 1904, 1905, 1907, 1909, 1915, 1920, 1923, 1925, 1927, 1928, 1929, 1931, 1932, 1933, 1936, 1943, 1947, 1949, 1959, 1962, 1968], "each": [0, 1, 2, 5, 9, 14, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 40, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 57, 71, 72, 74, 77, 88, 110, 144, 145, 389, 393, 483, 503, 505, 507, 535, 597, 607, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 676, 683, 685, 686, 689, 725, 750, 782, 830, 831, 849, 851, 852, 855, 867, 876, 877, 878, 879, 881, 882, 883, 888, 897, 910, 913, 922, 926, 930, 931, 933, 936, 940, 942, 944, 947, 962, 984, 985, 989, 1018, 1021, 1023, 1029, 1031, 1035, 1038, 1044, 1049, 1050, 1051, 1052, 1055, 1056, 1067, 1070, 1072, 1089, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1107, 1109, 1113, 1114, 1116, 1121, 1126, 1131, 1132, 1136, 1140, 1141, 1142, 1153, 1159, 1161, 1162, 1163, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1200, 1216, 1217, 1222, 1254, 1272, 1273, 1288, 1290, 1298, 1300, 1301, 1302, 1303, 1306, 1308, 1315, 1316, 1324, 1330, 1332, 1342, 1347, 1350, 1351, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1387, 1389, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1414, 1415, 1419, 1421, 1425, 1426, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1451, 1462, 1465, 1466, 1468, 1473, 1476, 1482, 1483, 1485, 1503, 1505, 1506, 1511, 1512, 1513, 1516, 1517, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1533, 1543, 1545, 1568, 1569, 1571, 1573, 1576, 1583, 1596, 1605, 1610, 1611, 1614, 1621, 1653, 1654, 1656, 1666, 1667, 1668, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1715, 1719, 1720, 1723, 1730, 1738, 1743, 1744, 1749, 1753, 1758, 1766, 1771, 1782, 1788, 1805, 1806, 1807, 1808, 1810, 1811, 1812, 1823, 1824, 1840, 1842, 1843, 1846, 1857, 1858, 1859, 1866, 1872, 1873, 1879, 1883, 1884, 1890, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1923, 1925, 1927, 1929, 1930, 1931, 1936, 1937, 1938, 1940, 1941, 1943, 1945, 1946, 1947, 1949, 1950, 1951, 1953, 1954, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1971], "its": [0, 1, 4, 5, 7, 8, 9, 12, 14, 15, 18, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 42, 43, 44, 46, 47, 49, 56, 57, 58, 60, 72, 73, 74, 141, 448, 477, 478, 494, 503, 505, 507, 573, 574, 575, 607, 670, 813, 816, 864, 865, 866, 868, 869, 870, 883, 886, 898, 903, 904, 934, 935, 950, 951, 958, 962, 979, 1007, 1009, 1018, 1055, 1059, 1062, 1072, 1075, 1120, 1126, 1130, 1131, 1132, 1135, 1140, 1161, 1162, 1166, 1180, 1200, 1211, 1236, 1237, 1241, 1246, 1253, 1255, 1258, 1259, 1264, 1270, 1295, 1322, 1350, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1397, 1398, 1399, 1434, 1435, 1444, 1465, 1473, 1481, 1533, 1544, 1571, 1577, 1605, 1610, 1611, 1615, 1616, 1617, 1621, 1622, 1624, 1628, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1654, 1660, 1664, 1668, 1674, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1713, 1738, 1742, 1746, 1747, 1763, 1764, 1768, 1788, 1798, 1825, 1845, 1846, 1848, 1856, 1870, 1881, 1883, 1884, 1888, 1892, 1894, 1896, 1903, 1904, 1905, 1907, 1908, 1909, 1911, 1912, 1915, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1936, 1937, 1938, 1940, 1943, 1944, 1946, 1949, 1950, 1951, 1954, 1956, 1957, 1958, 1959, 1962, 1963, 1965, 1971], "appropri": [0, 7, 8, 9, 25, 26, 31, 49, 56, 57, 884, 962, 1018, 1216, 1766, 1884, 1885, 1898, 1907, 1912, 1917, 1920, 1923, 1929, 1931, 1934, 1936, 1937, 1938, 1942, 1959, 1962, 1965, 1970], "ordinarili": [0, 1903], "train": [0, 1, 12, 15, 21, 22, 25, 26, 28, 29, 33, 40, 41, 42, 43, 49, 52, 53, 57, 702, 703, 704, 705, 706, 707, 708, 709, 710, 720, 721, 722, 723, 789, 791, 828, 829, 845, 846, 847, 849, 851, 852, 853, 947, 954, 1017, 1018, 1021, 1023, 1030, 1139, 1175, 1200, 1205, 1212, 1215, 1216, 1342, 1346, 1352, 1353, 1354, 1370, 1371, 1372, 1377, 1378, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1440, 1441, 1452, 1473, 1481, 1499, 1503, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1581, 1582, 1583, 1614, 1628, 1630, 1632, 1661, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1879, 1881, 1882, 1892, 1894, 1902, 1904, 1907, 1908, 1911, 1916, 1918, 1920, 1922, 1925, 1927, 1928, 1929, 1930, 1934, 1936, 1938, 1945, 1951, 1953, 1954, 1955, 1956, 1961, 1963, 1964, 1966, 1969], "gradscal": [0, 1903, 1907], "togeth": [0, 3, 9, 21, 25, 30, 31, 50, 55, 57, 750, 1015, 1072, 1129, 1131, 1135, 1139, 1140, 1145, 1240, 1386, 1404, 1449, 1544, 1614, 1619, 1846, 1892, 1903, 1909, 1910, 1911, 1914, 1915, 1931, 1936, 1937, 1938, 1940, 1945, 1955, 1958, 1959, 1965], "shown": [0, 12, 22, 34, 43, 1015, 1025, 1406, 1632, 1674, 1704, 1771, 1881, 1884, 1903, 1907, 1909, 1911, 1915, 1923, 1929, 1931, 1940, 1955, 1956, 1960], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 14, 18, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 56, 58, 60, 65, 66, 79, 182, 199, 224, 233, 245, 251, 280, 302, 304, 306, 308, 312, 326, 343, 392, 393, 435, 436, 437, 438, 439, 461, 471, 473, 477, 478, 483, 486, 489, 503, 505, 507, 513, 527, 534, 548, 550, 570, 571, 573, 574, 575, 576, 577, 578, 579, 597, 607, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 710, 718, 719, 724, 728, 729, 730, 731, 732, 733, 735, 736, 738, 746, 747, 748, 750, 751, 752, 753, 754, 755, 762, 763, 764, 775, 782, 783, 784, 786, 787, 800, 801, 802, 803, 804, 805, 806, 807, 814, 828, 844, 849, 850, 851, 852, 855, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 901, 903, 904, 910, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 940, 941, 942, 947, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 972, 1015, 1016, 1021, 1023, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1137, 1139, 1141, 1142, 1143, 1144, 1147, 1153, 1156, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1170, 1174, 1175, 1177, 1185, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1500, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1524, 1525, 1528, 1529, 1533, 1535, 1568, 1570, 1571, 1574, 1575, 1583, 1602, 1605, 1614, 1621, 1627, 1628, 1630, 1632, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1711, 1713, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1754, 1758, 1760, 1761, 1762, 1763, 1764, 1767, 1768, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1796, 1798, 1799, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1818, 1819, 1821, 1823, 1824, 1826, 1827, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1888, 1890, 1891, 1893, 1894, 1897, 1898, 1899, 1902, 1904, 1905, 1906, 1907, 1911, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1922, 1924, 1927, 1928, 1929, 1930, 1931, 1932, 1936, 1938, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1954, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1966, 1967, 1968, 1969, 1970], "recip": [0, 3, 29, 1434, 1614, 1634, 1903, 1915, 1958], "howev": [0, 2, 3, 4, 5, 7, 9, 14, 15, 21, 22, 25, 29, 31, 33, 39, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 63, 66, 72, 75, 76, 77, 471, 535, 884, 891, 975, 997, 1018, 1060, 1062, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1129, 1130, 1134, 1135, 1137, 1140, 1141, 1200, 1203, 1204, 1211, 1213, 1240, 1255, 1256, 1258, 1272, 1273, 1290, 1350, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1378, 1434, 1508, 1509, 1510, 1533, 1605, 1614, 1653, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1806, 1807, 1808, 1809, 1810, 1811, 1872, 1880, 1884, 1899, 1903, 1904, 1907, 1909, 1913, 1915, 1917, 1919, 1920, 1921, 1922, 1925, 1928, 1929, 1936, 1938, 1940, 1954, 1956, 1957, 1958, 1959, 1960], "modular": [0, 1903, 1923], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 20, 21, 22, 25, 29, 31, 32, 33, 35, 39, 41, 42, 46, 49, 50, 54, 56, 57, 75, 187, 212, 245, 304, 312, 448, 505, 507, 546, 593, 607, 670, 679, 805, 806, 807, 851, 882, 889, 891, 893, 897, 898, 907, 913, 924, 936, 942, 955, 956, 958, 960, 973, 975, 976, 984, 997, 1007, 1008, 1009, 1015, 1016, 1018, 1029, 1031, 1035, 1049, 1050, 1072, 1111, 1115, 1120, 1123, 1126, 1133, 1134, 1136, 1162, 1197, 1200, 1203, 1204, 1210, 1211, 1213, 1214, 1216, 1222, 1231, 1232, 1236, 1237, 1238, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1256, 1258, 1259, 1262, 1263, 1264, 1270, 1272, 1273, 1278, 1295, 1305, 1319, 1342, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1400, 1404, 1430, 1431, 1432, 1434, 1441, 1449, 1479, 1481, 1486, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1533, 1535, 1544, 1550, 1571, 1583, 1601, 1602, 1603, 1604, 1605, 1614, 1627, 1629, 1630, 1632, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1698, 1722, 1742, 1745, 1763, 1766, 1773, 1791, 1804, 1820, 1824, 1848, 1861, 1879, 1880, 1881, 1883, 1884, 1888, 1890, 1891, 1892, 1894, 1898, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1915, 1918, 1919, 1920, 1921, 1923, 1925, 1928, 1930, 1931, 1932, 1934, 1936, 1938, 1940, 1942, 1948, 1954, 1957, 1958, 1959, 1962, 1963, 1967, 1969, 1970, 1971], "separ": [0, 1, 3, 9, 14, 21, 25, 29, 42, 43, 49, 50, 52, 55, 56, 57, 725, 750, 880, 1072, 1089, 1091, 1097, 1098, 1101, 1102, 1107, 1109, 1129, 1211, 1246, 1261, 1389, 1397, 1398, 1399, 1440, 1442, 1552, 1668, 1879, 1882, 1884, 1890, 1903, 1904, 1906, 1907, 1910, 1920, 1923, 1927, 1928, 1937, 1940, 1941, 1945, 1954, 1969], "desir": [0, 1, 3, 21, 25, 31, 49, 57, 79, 146, 161, 163, 166, 169, 170, 171, 186, 197, 200, 231, 245, 258, 288, 316, 384, 435, 436, 437, 438, 439, 487, 489, 490, 510, 515, 534, 535, 536, 550, 570, 573, 593, 594, 607, 783, 855, 869, 911, 920, 939, 1019, 1020, 1043, 1044, 1053, 1054, 1073, 1074, 1075, 1085, 1090, 1108, 1124, 1126, 1127, 1128, 1157, 1158, 1200, 1220, 1271, 1287, 1293, 1300, 1314, 1320, 1329, 1331, 1332, 1350, 1351, 1434, 1484, 1506, 1552, 1589, 1590, 1605, 1653, 1667, 1671, 1672, 1713, 1720, 1723, 1724, 1725, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1772, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1839, 1850, 1852, 1877, 1878, 1897, 1898, 1899, 1903, 1904, 1907, 1910, 1913, 1915, 1920, 1929, 1935, 1936, 1941, 1942, 1943, 1969], "As": [0, 1, 8, 22, 25, 27, 31, 46, 47, 49, 52, 53, 57, 245, 924, 1072, 1204, 1232, 1236, 1237, 1247, 1248, 1259, 1264, 1373, 1374, 1375, 1379, 1400, 1434, 1465, 1601, 1621, 1666, 1672, 1878, 1881, 1883, 1884, 1891, 1899, 1904, 1907, 1909, 1911, 1915, 1918, 1921, 1922, 1923, 1925, 1928, 1929, 1935, 1936, 1937, 1938, 1940, 1951, 1953, 1955, 1959, 1960, 1961, 1962, 1969], "section": [0, 1, 7, 21, 31, 33, 34, 47, 53, 57, 77, 110, 1029, 1072, 1153, 1371, 1386, 1404, 1432, 1449, 1516, 1656, 1840, 1881, 1882, 1883, 1884, 1885, 1896, 1898, 1899, 1903, 1904, 1907, 1908, 1909, 1910, 1912, 1913, 1915, 1917, 1937, 1945, 1955, 1956, 1959, 1960, 1961, 1962, 1963, 1967, 1969], "infer": [0, 1, 2, 3, 5, 11, 12, 15, 31, 42, 49, 570, 607, 851, 852, 855, 869, 870, 947, 954, 989, 1126, 1127, 1162, 1175, 1184, 1198, 1201, 1210, 1215, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1440, 1486, 1544, 1570, 1605, 1665, 1693, 1704, 1738, 1745, 1763, 1764, 1806, 1807, 1808, 1809, 1810, 1811, 1839, 1856, 1880, 1881, 1883, 1884, 1888, 1897, 1899, 1907, 1915, 1925, 1930, 1931, 1932, 1934, 1940, 1951, 1953, 1954, 1957, 1959, 1961, 1966], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 40, 42, 43, 46, 47, 49, 53, 54, 56, 57, 73, 74, 75, 110, 245, 302, 312, 314, 326, 343, 435, 436, 437, 438, 439, 448, 471, 476, 478, 503, 505, 507, 547, 573, 574, 575, 577, 578, 604, 607, 670, 685, 686, 725, 728, 729, 730, 731, 733, 762, 763, 764, 769, 775, 776, 777, 781, 783, 791, 804, 807, 810, 811, 814, 818, 832, 839, 848, 868, 884, 887, 888, 889, 890, 891, 893, 898, 911, 912, 920, 942, 954, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 975, 976, 978, 985, 987, 989, 1007, 1015, 1016, 1018, 1039, 1069, 1073, 1075, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1118, 1119, 1123, 1124, 1125, 1130, 1141, 1153, 1157, 1158, 1162, 1170, 1181, 1189, 1198, 1200, 1203, 1204, 1212, 1216, 1217, 1220, 1231, 1236, 1237, 1239, 1240, 1241, 1242, 1244, 1246, 1247, 1248, 1249, 1259, 1261, 1262, 1264, 1265, 1272, 1273, 1290, 1295, 1342, 1365, 1366, 1367, 1370, 1371, 1377, 1378, 1381, 1404, 1406, 1434, 1437, 1439, 1440, 1442, 1450, 1473, 1481, 1485, 1486, 1516, 1525, 1527, 1533, 1544, 1571, 1601, 1602, 1605, 1608, 1609, 1610, 1611, 1614, 1616, 1617, 1621, 1633, 1653, 1654, 1655, 1667, 1675, 1676, 1679, 1680, 1682, 1693, 1696, 1700, 1703, 1704, 1706, 1710, 1722, 1731, 1735, 1737, 1739, 1762, 1766, 1767, 1769, 1773, 1798, 1801, 1805, 1815, 1820, 1824, 1839, 1850, 1852, 1857, 1858, 1861, 1862, 1864, 1869, 1870, 1871, 1872, 1879, 1882, 1883, 1884, 1888, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1934, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1968, 1969, 1971], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 30, 31, 33, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 70, 71, 72, 187, 212, 245, 280, 304, 306, 312, 326, 343, 461, 471, 483, 489, 503, 505, 507, 573, 579, 593, 607, 676, 677, 678, 679, 680, 683, 689, 724, 728, 729, 730, 731, 732, 733, 750, 782, 783, 784, 804, 848, 849, 882, 898, 910, 914, 916, 917, 919, 922, 931, 942, 947, 1007, 1021, 1023, 1029, 1053, 1054, 1055, 1072, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1116, 1124, 1139, 1141, 1142, 1153, 1162, 1177, 1200, 1211, 1212, 1214, 1216, 1217, 1232, 1236, 1237, 1240, 1243, 1244, 1245, 1246, 1248, 1257, 1258, 1260, 1264, 1273, 1280, 1288, 1295, 1301, 1305, 1342, 1346, 1350, 1351, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1378, 1380, 1381, 1386, 1388, 1395, 1400, 1404, 1406, 1434, 1437, 1438, 1439, 1440, 1448, 1449, 1455, 1456, 1457, 1458, 1459, 1460, 1465, 1470, 1484, 1485, 1489, 1490, 1491, 1506, 1508, 1509, 1510, 1533, 1544, 1569, 1571, 1583, 1591, 1605, 1610, 1611, 1614, 1630, 1653, 1654, 1655, 1657, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1706, 1751, 1760, 1798, 1799, 1809, 1815, 1824, 1840, 1842, 1846, 1854, 1857, 1862, 1864, 1870, 1871, 1872, 1879, 1880, 1881, 1884, 1886, 1888, 1890, 1891, 1892, 1894, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1936, 1937, 1938, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1963, 1965, 1966, 1968, 1969, 1970], "api": [0, 2, 3, 5, 8, 9, 22, 25, 26, 27, 30, 33, 34, 35, 39, 40, 41, 42, 43, 49, 50, 53, 56, 58, 63, 66, 67, 68, 224, 790, 814, 851, 884, 885, 886, 894, 931, 947, 973, 1007, 1008, 1009, 1015, 1016, 1018, 1045, 1076, 1116, 1130, 1133, 1134, 1136, 1141, 1211, 1212, 1214, 1319, 1614, 1662, 1664, 1665, 1673, 1751, 1762, 1768, 1854, 1864, 1872, 1879, 1890, 1891, 1892, 1895, 1896, 1897, 1899, 1904, 1908, 1920, 1922, 1932, 1936, 1937, 1940, 1943, 1945, 1948, 1951, 1956, 1961, 1970], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 25, 27, 29, 30, 31, 32, 39, 42, 46, 47, 49, 53, 54, 55, 56, 57, 58, 65, 66, 78, 145, 209, 212, 213, 245, 314, 503, 505, 507, 513, 533, 604, 731, 732, 733, 750, 790, 804, 851, 870, 879, 880, 889, 911, 920, 934, 935, 942, 948, 972, 1015, 1018, 1029, 1053, 1054, 1072, 1076, 1092, 1123, 1130, 1136, 1140, 1141, 1142, 1145, 1147, 1157, 1158, 1162, 1175, 1200, 1203, 1204, 1207, 1210, 1214, 1216, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1302, 1308, 1322, 1330, 1342, 1350, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1378, 1381, 1386, 1400, 1404, 1434, 1441, 1449, 1463, 1465, 1473, 1482, 1483, 1485, 1511, 1512, 1513, 1533, 1570, 1586, 1605, 1614, 1630, 1632, 1642, 1644, 1646, 1647, 1648, 1649, 1665, 1679, 1680, 1694, 1700, 1704, 1707, 1710, 1735, 1742, 1754, 1764, 1779, 1780, 1797, 1801, 1815, 1824, 1834, 1836, 1839, 1845, 1846, 1857, 1858, 1872, 1875, 1879, 1880, 1881, 1883, 1884, 1890, 1891, 1892, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1925, 1927, 1928, 1929, 1931, 1936, 1937, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971], "arg": [0, 1, 3, 4, 5, 14, 21, 22, 25, 29, 31, 33, 34, 40, 41, 43, 44, 45, 46, 47, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 570, 593, 670, 722, 737, 739, 741, 742, 743, 744, 750, 752, 753, 814, 851, 880, 882, 887, 888, 946, 1018, 1129, 1133, 1134, 1135, 1141, 1200, 1203, 1290, 1350, 1351, 1368, 1370, 1394, 1396, 1401, 1423, 1425, 1426, 1434, 1437, 1438, 1439, 1441, 1448, 1462, 1464, 1465, 1466, 1468, 1472, 1473, 1474, 1475, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1605, 1614, 1634, 1639, 1653, 1660, 1662, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1825, 1858, 1869, 1872, 1879, 1882, 1884, 1885, 1896, 1898, 1904, 1907, 1908, 1909, 1910, 1917, 1923, 1925, 1928, 1929, 1936, 1937, 1938, 1942, 1950, 1955, 1956, 1958, 1959, 1962, 1968, 1969, 1970], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 88, 141, 144, 145, 146, 161, 163, 166, 169, 170, 171, 181, 182, 186, 187, 197, 199, 200, 209, 214, 224, 231, 245, 246, 258, 281, 288, 302, 304, 306, 310, 312, 314, 316, 319, 320, 321, 322, 323, 324, 326, 327, 329, 331, 332, 333, 334, 343, 384, 391, 393, 397, 438, 448, 461, 462, 471, 473, 476, 477, 478, 483, 485, 486, 487, 488, 489, 490, 493, 494, 503, 505, 507, 510, 514, 515, 527, 533, 534, 535, 547, 550, 570, 571, 573, 574, 575, 577, 578, 579, 593, 594, 597, 604, 607, 608, 610, 614, 670, 671, 673, 674, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 758, 759, 762, 763, 764, 765, 766, 767, 768, 769, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 789, 791, 792, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 814, 816, 817, 823, 828, 829, 830, 847, 848, 849, 851, 852, 855, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 903, 904, 907, 910, 911, 912, 913, 915, 918, 920, 922, 923, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 947, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 968, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 987, 989, 992, 993, 994, 996, 1000, 1001, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1059, 1060, 1061, 1062, 1063, 1064, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1082, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1153, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1174, 1175, 1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1220, 1221, 1222, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1283, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1322, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1465, 1466, 1467, 1469, 1470, 1473, 1474, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1544, 1545, 1550, 1552, 1554, 1555, 1557, 1558, 1559, 1568, 1569, 1571, 1573, 1574, 1575, 1576, 1577, 1583, 1586, 1589, 1590, 1598, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1653, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1729, 1731, 1732, 1733, 1735, 1736, 1738, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1753, 1754, 1758, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1791, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1818, 1819, 1820, 1823, 1824, 1825, 1826, 1827, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1856, 1857, 1858, 1859, 1861, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1957, 1960, 1961, 1962, 1963, 1964, 1965, 1967, 1968, 1969, 1970, 1971, 1972], "equival": [0, 1, 3, 5, 12, 21, 22, 29, 31, 35, 42, 43, 46, 49, 53, 54, 57, 73, 146, 161, 163, 166, 169, 170, 171, 231, 246, 258, 288, 310, 316, 384, 438, 448, 488, 490, 515, 594, 600, 607, 608, 610, 682, 734, 738, 745, 747, 749, 775, 776, 777, 866, 880, 923, 925, 928, 930, 933, 940, 941, 954, 1060, 1064, 1067, 1070, 1071, 1072, 1074, 1089, 1091, 1094, 1097, 1098, 1101, 1102, 1104, 1107, 1109, 1128, 1130, 1133, 1135, 1141, 1163, 1165, 1177, 1199, 1200, 1211, 1216, 1217, 1220, 1232, 1253, 1257, 1265, 1270, 1302, 1307, 1322, 1329, 1342, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1377, 1378, 1389, 1395, 1397, 1398, 1399, 1400, 1404, 1406, 1434, 1465, 1473, 1485, 1487, 1552, 1573, 1583, 1602, 1603, 1604, 1614, 1672, 1693, 1729, 1732, 1736, 1760, 1766, 1774, 1796, 1803, 1816, 1826, 1827, 1834, 1839, 1858, 1872, 1873, 1874, 1878, 1881, 1883, 1884, 1904, 1923, 1925, 1928, 1932, 1940, 1941, 1943, 1946, 1947, 1955, 1956, 1962, 1970, 1972], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 21, 22, 25, 27, 29, 30, 31, 32, 34, 35, 42, 43, 46, 47, 49, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 77, 78, 302, 312, 448, 573, 607, 675, 676, 677, 679, 683, 685, 686, 689, 719, 728, 729, 730, 762, 763, 764, 769, 775, 776, 777, 782, 783, 784, 785, 791, 807, 823, 849, 851, 852, 882, 884, 889, 898, 899, 910, 911, 915, 918, 920, 922, 934, 935, 942, 954, 957, 972, 974, 1015, 1016, 1018, 1035, 1067, 1069, 1072, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1117, 1118, 1119, 1120, 1122, 1123, 1125, 1136, 1140, 1157, 1158, 1170, 1197, 1204, 1212, 1216, 1220, 1221, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1291, 1295, 1299, 1304, 1305, 1323, 1362, 1363, 1364, 1365, 1366, 1367, 1374, 1377, 1378, 1381, 1401, 1421, 1439, 1440, 1473, 1481, 1483, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1525, 1527, 1533, 1544, 1550, 1583, 1601, 1602, 1604, 1614, 1621, 1667, 1672, 1676, 1679, 1680, 1682, 1710, 1722, 1741, 1742, 1763, 1766, 1767, 1797, 1798, 1801, 1804, 1821, 1824, 1848, 1850, 1852, 1862, 1864, 1869, 1870, 1871, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1888, 1892, 1894, 1896, 1900, 1904, 1905, 1906, 1907, 1908, 1909, 1913, 1915, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1927, 1928, 1929, 1930, 1934, 1935, 1936, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1968, 1969, 1970], "now": [0, 1, 12, 25, 30, 32, 39, 43, 44, 46, 49, 54, 57, 212, 486, 890, 897, 954, 987, 1015, 1036, 1037, 1123, 1124, 1147, 1197, 1198, 1204, 1216, 1250, 1431, 1450, 1486, 1605, 1618, 1632, 1643, 1664, 1682, 1763, 1815, 1820, 1864, 1881, 1891, 1897, 1898, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1915, 1916, 1925, 1928, 1931, 1937, 1938, 1940, 1954, 1957, 1958, 1959, 1960, 1962, 1963, 1968, 1969, 1970, 1971], "new": [0, 1, 5, 8, 14, 18, 21, 23, 25, 27, 31, 33, 42, 43, 46, 49, 50, 53, 54, 55, 56, 57, 77, 212, 245, 302, 438, 473, 477, 486, 489, 534, 570, 573, 607, 670, 674, 750, 781, 804, 809, 844, 869, 871, 872, 873, 874, 875, 885, 903, 904, 925, 926, 929, 931, 940, 944, 947, 957, 959, 960, 976, 978, 1056, 1060, 1082, 1086, 1087, 1113, 1114, 1116, 1130, 1139, 1141, 1170, 1174, 1175, 1189, 1190, 1193, 1196, 1200, 1207, 1212, 1214, 1274, 1275, 1276, 1277, 1294, 1333, 1336, 1352, 1353, 1354, 1386, 1397, 1398, 1399, 1434, 1435, 1440, 1444, 1473, 1484, 1486, 1544, 1607, 1610, 1611, 1612, 1613, 1614, 1622, 1623, 1624, 1625, 1628, 1632, 1634, 1638, 1639, 1640, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1657, 1661, 1664, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1706, 1730, 1740, 1741, 1745, 1746, 1747, 1753, 1754, 1758, 1763, 1764, 1774, 1776, 1787, 1789, 1791, 1813, 1814, 1817, 1835, 1837, 1838, 1854, 1856, 1860, 1870, 1871, 1872, 1879, 1881, 1883, 1884, 1888, 1891, 1892, 1896, 1897, 1898, 1899, 1900, 1904, 1907, 1909, 1910, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1923, 1925, 1927, 1928, 1930, 1931, 1934, 1938, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1950, 1954, 1956, 1957, 1959, 1962, 1968, 1969], "version": [0, 1, 2, 5, 8, 12, 14, 20, 22, 25, 27, 31, 43, 46, 49, 52, 53, 57, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 112, 114, 116, 118, 121, 122, 124, 132, 134, 137, 138, 140, 143, 149, 151, 153, 155, 157, 159, 168, 177, 185, 189, 192, 194, 204, 206, 222, 227, 229, 235, 238, 240, 242, 244, 248, 253, 260, 262, 264, 268, 270, 274, 276, 283, 285, 287, 295, 297, 299, 301, 303, 305, 307, 309, 347, 349, 351, 353, 355, 357, 359, 362, 364, 366, 367, 374, 376, 378, 380, 382, 386, 390, 392, 410, 413, 416, 418, 429, 431, 433, 441, 446, 456, 459, 475, 480, 482, 498, 501, 502, 504, 506, 512, 517, 519, 522, 524, 526, 539, 541, 543, 546, 552, 554, 561, 565, 567, 583, 586, 588, 590, 592, 602, 612, 725, 726, 727, 739, 740, 741, 742, 743, 744, 765, 766, 767, 768, 770, 774, 775, 794, 795, 796, 829, 837, 845, 846, 848, 954, 1018, 1129, 1157, 1175, 1197, 1200, 1203, 1204, 1208, 1211, 1230, 1237, 1243, 1244, 1248, 1249, 1262, 1295, 1333, 1351, 1404, 1434, 1435, 1449, 1486, 1498, 1523, 1533, 1540, 1549, 1580, 1582, 1597, 1598, 1602, 1606, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1661, 1662, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1755, 1756, 1757, 1815, 1818, 1819, 1820, 1824, 1845, 1859, 1861, 1867, 1868, 1879, 1897, 1898, 1904, 1905, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1923, 1925, 1927, 1928, 1930, 1934, 1940, 1947, 1948, 1957, 1959, 1960, 1967, 1969, 1971], "1": [0, 1, 2, 3, 11, 12, 14, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 45, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 127, 142, 143, 164, 182, 196, 199, 216, 218, 219, 220, 224, 233, 245, 249, 254, 277, 280, 302, 303, 304, 306, 308, 312, 343, 368, 392, 393, 435, 437, 438, 444, 461, 471, 473, 477, 478, 483, 486, 489, 503, 505, 507, 527, 528, 532, 534, 544, 545, 546, 548, 550, 551, 552, 553, 554, 571, 573, 574, 575, 577, 578, 597, 598, 605, 607, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 702, 703, 704, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 720, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 741, 742, 743, 746, 747, 748, 750, 760, 762, 763, 764, 765, 768, 772, 773, 775, 786, 798, 799, 809, 810, 811, 812, 815, 817, 845, 851, 852, 855, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 880, 884, 887, 889, 890, 891, 892, 893, 894, 895, 896, 903, 904, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 940, 941, 943, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 967, 972, 984, 1015, 1016, 1031, 1035, 1042, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1153, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1170, 1171, 1174, 1175, 1177, 1185, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1204, 1206, 1211, 1212, 1216, 1217, 1220, 1221, 1222, 1224, 1225, 1226, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1246, 1247, 1248, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1276, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1319, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1476, 1477, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1500, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1531, 1532, 1533, 1535, 1537, 1539, 1540, 1541, 1542, 1543, 1551, 1553, 1557, 1558, 1559, 1565, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1577, 1581, 1582, 1583, 1584, 1585, 1587, 1589, 1590, 1591, 1593, 1598, 1599, 1600, 1601, 1602, 1605, 1614, 1621, 1627, 1628, 1632, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1754, 1758, 1761, 1762, 1763, 1764, 1765, 1767, 1768, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1791, 1792, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1882, 1883, 1884, 1885, 1888, 1891, 1892, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1933, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1963, 1964, 1967, 1968, 1969, 1970, 1972], "10": [0, 1, 3, 12, 20, 21, 22, 25, 26, 31, 32, 42, 44, 46, 58, 63, 65, 66, 304, 312, 326, 461, 503, 550, 571, 573, 574, 575, 675, 676, 687, 724, 735, 736, 750, 751, 752, 753, 755, 910, 922, 932, 935, 936, 940, 954, 962, 1051, 1052, 1053, 1054, 1055, 1070, 1072, 1089, 1091, 1094, 1095, 1097, 1098, 1101, 1102, 1104, 1105, 1107, 1109, 1115, 1123, 1124, 1143, 1153, 1163, 1189, 1205, 1211, 1212, 1218, 1223, 1226, 1253, 1255, 1256, 1271, 1273, 1275, 1280, 1282, 1283, 1284, 1285, 1287, 1295, 1306, 1324, 1340, 1341, 1342, 1344, 1345, 1351, 1354, 1357, 1358, 1361, 1364, 1367, 1377, 1378, 1386, 1387, 1388, 1389, 1399, 1404, 1405, 1406, 1431, 1435, 1436, 1441, 1444, 1445, 1449, 1451, 1473, 1477, 1478, 1479, 1480, 1481, 1485, 1491, 1510, 1513, 1517, 1524, 1525, 1535, 1605, 1614, 1621, 1643, 1651, 1665, 1668, 1674, 1678, 1698, 1704, 1706, 1724, 1725, 1733, 1758, 1766, 1771, 1777, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1796, 1812, 1824, 1825, 1836, 1840, 1841, 1844, 1846, 1859, 1861, 1873, 1879, 1881, 1882, 1883, 1884, 1885, 1891, 1904, 1907, 1908, 1909, 1915, 1918, 1919, 1920, 1921, 1924, 1925, 1926, 1931, 1940, 1941, 1943, 1945, 1946, 1947, 1954, 1955, 1956, 1959, 1961, 1962, 1967, 1969, 1972], "class": [0, 1, 2, 3, 12, 15, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 36, 39, 40, 42, 44, 46, 47, 49, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 547, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 826, 827, 828, 829, 830, 831, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 884, 887, 888, 889, 890, 963, 964, 973, 974, 975, 976, 978, 979, 994, 996, 1007, 1047, 1076, 1139, 1175, 1198, 1199, 1200, 1203, 1205, 1206, 1207, 1211, 1212, 1215, 1216, 1217, 1218, 1312, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1506, 1516, 1524, 1568, 1570, 1605, 1614, 1615, 1616, 1617, 1629, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1653, 1660, 1665, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1729, 1768, 1799, 1862, 1880, 1882, 1885, 1888, 1891, 1894, 1896, 1898, 1900, 1903, 1904, 1907, 1909, 1910, 1911, 1915, 1917, 1920, 1923, 1929, 1930, 1931, 1933, 1934, 1936, 1937, 1940, 1942, 1943, 1945, 1947, 1948, 1949, 1950, 1955, 1956, 1957, 1962, 1965, 1967, 1968, 1969, 1970, 1971, 1972], "device_typ": [0, 1, 25, 1903, 1935], "dtype": [0, 1, 5, 11, 12, 18, 19, 21, 25, 27, 46, 47, 49, 57, 58, 65, 66, 76, 144, 145, 182, 199, 203, 204, 205, 206, 233, 302, 304, 306, 308, 310, 312, 400, 419, 422, 435, 436, 437, 438, 439, 443, 448, 460, 471, 473, 503, 505, 555, 570, 571, 593, 607, 677, 679, 682, 683, 687, 689, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 739, 740, 741, 742, 743, 744, 745, 746, 748, 750, 751, 754, 755, 762, 763, 764, 784, 785, 789, 809, 810, 811, 812, 813, 814, 815, 816, 817, 831, 848, 849, 851, 852, 855, 869, 870, 887, 889, 891, 893, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 927, 934, 935, 951, 954, 955, 956, 962, 972, 988, 1053, 1054, 1073, 1074, 1075, 1085, 1089, 1090, 1091, 1097, 1098, 1108, 1115, 1120, 1122, 1124, 1125, 1126, 1127, 1128, 1147, 1157, 1158, 1170, 1200, 1204, 1214, 1220, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1282, 1283, 1284, 1285, 1287, 1290, 1291, 1295, 1299, 1300, 1301, 1304, 1305, 1324, 1328, 1329, 1330, 1332, 1342, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1377, 1378, 1381, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1440, 1441, 1442, 1449, 1450, 1451, 1455, 1456, 1457, 1458, 1459, 1473, 1477, 1479, 1481, 1485, 1486, 1487, 1488, 1500, 1516, 1517, 1544, 1550, 1552, 1583, 1589, 1590, 1605, 1616, 1617, 1621, 1629, 1632, 1633, 1653, 1667, 1671, 1672, 1673, 1675, 1710, 1716, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1748, 1751, 1763, 1764, 1766, 1767, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1795, 1798, 1800, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1836, 1839, 1850, 1852, 1857, 1861, 1862, 1864, 1870, 1871, 1875, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1891, 1898, 1899, 1907, 1909, 1915, 1918, 1923, 1925, 1926, 1931, 1932, 1933, 1940, 1941, 1942, 1945, 1946, 1947, 1956, 1958, 1959, 1964, 1969, 1972], "none": [0, 1, 2, 3, 5, 12, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 40, 42, 44, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 105, 106, 107, 109, 125, 126, 129, 141, 144, 145, 147, 164, 176, 177, 178, 179, 195, 196, 198, 200, 203, 204, 205, 206, 220, 224, 226, 227, 228, 229, 249, 277, 281, 292, 326, 342, 345, 368, 398, 400, 401, 402, 405, 411, 417, 418, 419, 420, 421, 422, 435, 436, 437, 438, 439, 443, 444, 460, 469, 471, 477, 478, 484, 493, 503, 510, 527, 528, 542, 543, 545, 546, 555, 570, 571, 573, 578, 580, 593, 598, 599, 600, 605, 616, 618, 620, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 645, 647, 649, 650, 652, 654, 656, 658, 660, 662, 664, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 739, 740, 741, 742, 743, 744, 745, 756, 757, 758, 759, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 783, 784, 785, 787, 789, 804, 807, 809, 810, 811, 812, 815, 816, 828, 829, 830, 847, 848, 849, 850, 851, 852, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 868, 869, 870, 871, 872, 873, 874, 875, 879, 880, 881, 882, 883, 884, 885, 886, 889, 890, 892, 894, 895, 896, 897, 898, 899, 903, 904, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 926, 929, 931, 932, 933, 934, 935, 937, 938, 940, 942, 948, 951, 952, 953, 956, 957, 959, 960, 961, 962, 966, 971, 972, 973, 975, 976, 978, 979, 980, 984, 985, 987, 988, 989, 992, 993, 994, 1000, 1001, 1007, 1017, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1042, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1064, 1065, 1067, 1068, 1069, 1071, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1127, 1128, 1129, 1130, 1131, 1135, 1138, 1139, 1141, 1142, 1143, 1144, 1145, 1146, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1177, 1178, 1194, 1195, 1197, 1199, 1200, 1204, 1208, 1210, 1211, 1212, 1214, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1377, 1378, 1380, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1448, 1449, 1450, 1451, 1465, 1466, 1467, 1468, 1469, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1493, 1494, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1524, 1525, 1528, 1529, 1530, 1531, 1533, 1534, 1541, 1543, 1544, 1545, 1546, 1547, 1550, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1571, 1573, 1576, 1583, 1587, 1588, 1589, 1590, 1598, 1599, 1600, 1602, 1603, 1604, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1627, 1628, 1631, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1653, 1655, 1656, 1657, 1658, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1715, 1716, 1717, 1719, 1720, 1722, 1723, 1726, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1749, 1751, 1752, 1753, 1758, 1771, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1795, 1796, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1836, 1837, 1838, 1839, 1841, 1843, 1846, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1857, 1858, 1862, 1864, 1866, 1867, 1868, 1869, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1888, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1907, 1909, 1910, 1915, 1917, 1920, 1923, 1925, 1928, 1929, 1930, 1931, 1933, 1935, 1936, 1941, 1942, 1943, 1945, 1947, 1949, 1950, 1955, 1956, 1959, 1962, 1964, 1969, 1970, 1971], "enabl": [0, 1, 2, 5, 8, 12, 18, 19, 21, 22, 25, 26, 27, 29, 30, 31, 33, 43, 49, 70, 76, 78, 478, 493, 494, 670, 750, 802, 803, 884, 889, 942, 954, 973, 1018, 1072, 1076, 1175, 1183, 1184, 1202, 1209, 1315, 1316, 1386, 1404, 1449, 1450, 1480, 1583, 1614, 1629, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1665, 1692, 1767, 1768, 1771, 1799, 1861, 1864, 1884, 1890, 1891, 1892, 1895, 1899, 1903, 1904, 1905, 1906, 1907, 1909, 1914, 1916, 1918, 1919, 1923, 1925, 1929, 1930, 1935, 1936, 1937, 1940, 1948, 1950, 1951, 1953, 1955, 1956, 1958, 1959, 1962, 1963, 1967, 1969, 1970, 1971], "true": [0, 1, 2, 3, 5, 12, 14, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 44, 46, 49, 54, 55, 56, 57, 58, 65, 66, 141, 187, 200, 251, 310, 312, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 342, 387, 391, 393, 438, 448, 450, 461, 467, 477, 478, 485, 486, 489, 494, 506, 507, 546, 557, 570, 571, 580, 584, 593, 599, 607, 670, 677, 682, 683, 684, 685, 686, 687, 689, 708, 709, 710, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 736, 739, 744, 746, 750, 751, 754, 755, 758, 759, 769, 775, 776, 787, 804, 816, 849, 863, 865, 866, 870, 879, 882, 883, 884, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 903, 904, 911, 914, 917, 919, 920, 926, 927, 933, 941, 942, 945, 948, 954, 955, 975, 1013, 1067, 1073, 1074, 1075, 1076, 1077, 1078, 1094, 1095, 1101, 1102, 1124, 1126, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1156, 1157, 1158, 1161, 1162, 1173, 1175, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1200, 1204, 1205, 1207, 1210, 1216, 1217, 1218, 1220, 1222, 1225, 1230, 1231, 1242, 1243, 1244, 1247, 1248, 1249, 1250, 1253, 1255, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1270, 1272, 1273, 1282, 1283, 1284, 1285, 1288, 1289, 1290, 1292, 1294, 1298, 1300, 1301, 1302, 1303, 1306, 1312, 1324, 1329, 1332, 1335, 1338, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1382, 1383, 1386, 1387, 1388, 1389, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1443, 1448, 1449, 1450, 1451, 1465, 1466, 1473, 1477, 1479, 1480, 1481, 1482, 1483, 1486, 1487, 1498, 1500, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1533, 1535, 1537, 1543, 1544, 1545, 1557, 1558, 1559, 1568, 1576, 1583, 1602, 1603, 1605, 1608, 1614, 1615, 1617, 1619, 1622, 1623, 1625, 1627, 1628, 1631, 1632, 1633, 1645, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1710, 1712, 1720, 1722, 1723, 1727, 1728, 1729, 1746, 1747, 1754, 1757, 1758, 1766, 1767, 1768, 1771, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1796, 1798, 1799, 1801, 1809, 1818, 1819, 1820, 1823, 1824, 1839, 1843, 1848, 1857, 1858, 1861, 1864, 1866, 1867, 1868, 1872, 1875, 1879, 1882, 1883, 1884, 1888, 1891, 1893, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1923, 1924, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1956, 1957, 1959, 1961, 1962, 1964, 1965, 1967, 1968, 1969, 1970], "cache_en": [0, 1018], "sourc": [0, 1, 2, 3, 4, 5, 9, 13, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 47, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 141, 187, 200, 224, 303, 304, 312, 331, 342, 387, 392, 393, 406, 407, 443, 461, 477, 478, 503, 505, 507, 510, 514, 537, 546, 547, 549, 576, 593, 596, 599, 600, 614, 670, 685, 686, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 826, 827, 828, 829, 830, 831, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 863, 876, 877, 878, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 909, 921, 923, 924, 928, 930, 932, 942, 943, 944, 945, 946, 947, 948, 949, 950, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 974, 975, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1072, 1076, 1123, 1126, 1142, 1148, 1149, 1152, 1171, 1172, 1173, 1175, 1176, 1181, 1186, 1187, 1188, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1272, 1273, 1293, 1302, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1498, 1499, 1503, 1505, 1506, 1507, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1530, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1554, 1555, 1556, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1576, 1578, 1579, 1581, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1593, 1594, 1595, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1712, 1729, 1754, 1759, 1762, 1763, 1764, 1765, 1766, 1768, 1771, 1772, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1798, 1799, 1805, 1812, 1820, 1825, 1828, 1829, 1830, 1831, 1832, 1833, 1841, 1859, 1861, 1862, 1863, 1864, 1865, 1879, 1881, 1882, 1883, 1888, 1890, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1902, 1911, 1913, 1914, 1918, 1920, 1923, 1925, 1927, 1929, 1930, 1931, 1935, 1936, 1937, 1942, 1945, 1947, 1948, 1949, 1950, 1956, 1959, 1960, 1962, 1969, 1970, 1971], "instanc": [0, 3, 21, 25, 26, 27, 29, 31, 32, 33, 39, 42, 43, 44, 49, 54, 57, 130, 607, 670, 724, 738, 747, 783, 786, 814, 816, 831, 848, 973, 1072, 1123, 1198, 1200, 1212, 1216, 1273, 1377, 1378, 1381, 1397, 1398, 1399, 1406, 1434, 1444, 1478, 1480, 1481, 1485, 1543, 1614, 1628, 1639, 1653, 1661, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1809, 1840, 1881, 1883, 1885, 1890, 1892, 1896, 1898, 1903, 1904, 1907, 1908, 1909, 1911, 1915, 1919, 1923, 1928, 1931, 1936, 1937, 1938, 1940, 1942, 1947, 1954, 1962, 1968, 1970], "serv": [0, 7, 8, 15, 25, 78, 1891, 1923, 1927, 1936, 1937, 1955, 1959, 1964], "context": [0, 2, 5, 21, 29, 33, 42, 43, 49, 57, 58, 141, 782, 879, 880, 881, 883, 884, 897, 898, 948, 964, 970, 979, 994, 996, 1007, 1013, 1018, 1025, 1045, 1047, 1076, 1131, 1135, 1140, 1175, 1200, 1315, 1434, 1583, 1605, 1614, 1615, 1630, 1632, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1768, 1799, 1880, 1884, 1885, 1896, 1903, 1904, 1907, 1909, 1913, 1914, 1917, 1923, 1925, 1928, 1930, 1935, 1936, 1938, 1940, 1943, 1948, 1957, 1958, 1959, 1962, 1967, 1971], "manag": [0, 1, 2, 5, 7, 25, 29, 31, 33, 40, 42, 43, 44, 49, 57, 58, 79, 476, 884, 948, 964, 970, 973, 974, 976, 979, 980, 981, 983, 994, 996, 997, 998, 1007, 1008, 1018, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1036, 1037, 1038, 1045, 1047, 1076, 1131, 1135, 1140, 1175, 1315, 1450, 1583, 1614, 1629, 1630, 1632, 1665, 1768, 1799, 1880, 1884, 1885, 1904, 1909, 1911, 1914, 1923, 1925, 1929, 1930, 1935, 1936, 1937, 1940, 1943, 1948, 1957, 1958, 1959, 1962], "decor": [0, 1, 31, 35, 39, 43, 57, 68, 889, 944, 948, 1076, 1175, 1205, 1206, 1212, 1218, 1665, 1798, 1799, 1881, 1883, 1884, 1888, 1903, 1904, 1909, 1929, 1936, 1955, 1956, 1960, 1970], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 25, 26, 31, 33, 34, 42, 43, 46, 49, 50, 52, 53, 54, 55, 57, 58, 60, 141, 503, 670, 725, 783, 787, 789, 814, 883, 885, 897, 898, 927, 941, 945, 954, 1015, 1018, 1042, 1072, 1134, 1200, 1205, 1218, 1256, 1278, 1319, 1333, 1347, 1348, 1349, 1370, 1371, 1388, 1427, 1428, 1429, 1434, 1437, 1440, 1462, 1477, 1614, 1620, 1666, 1675, 1691, 1801, 1861, 1879, 1883, 1884, 1891, 1897, 1898, 1899, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1920, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1933, 1936, 1940, 1943, 1944, 1945, 1947, 1956, 1957, 1958, 1959, 1962, 1965, 1968, 1969], "region": [0, 3, 5, 31, 39, 758, 759, 942, 1347, 1348, 1349, 1382, 1383, 1393, 1395, 1427, 1428, 1429, 1501, 1502, 1528, 1529, 1558, 1559, 1881, 1896, 1903, 1907, 1958, 1959, 1967], "your": [0, 1, 2, 4, 7, 8, 9, 11, 14, 15, 17, 21, 24, 25, 29, 30, 31, 34, 35, 39, 41, 42, 43, 44, 45, 46, 49, 53, 54, 56, 57, 883, 889, 891, 892, 897, 942, 945, 1175, 1200, 1204, 1205, 1210, 1213, 1216, 1217, 1218, 1434, 1441, 1481, 1614, 1629, 1632, 1665, 1693, 1767, 1857, 1862, 1864, 1881, 1883, 1884, 1888, 1890, 1896, 1897, 1898, 1900, 1903, 1904, 1905, 1907, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1921, 1925, 1927, 1929, 1932, 1935, 1937, 1940, 1945, 1946, 1948, 1951, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1963, 1965, 1966, 1967, 1969, 1970, 1971], "script": [0, 2, 4, 18, 21, 25, 28, 33, 35, 41, 43, 44, 46, 1201, 1203, 1204, 1205, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1218, 1879, 1880, 1883, 1884, 1892, 1906, 1914, 1916, 1920, 1922, 1923, 1928, 1931, 1936, 1953, 1955, 1961, 1963, 1966], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 14, 15, 18, 21, 22, 25, 26, 29, 31, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 141, 478, 782, 788, 807, 809, 810, 811, 812, 815, 847, 851, 852, 853, 883, 897, 898, 899, 942, 1017, 1018, 1130, 1135, 1141, 1175, 1200, 1201, 1203, 1204, 1206, 1208, 1210, 1212, 1214, 1216, 1217, 1237, 1246, 1272, 1273, 1301, 1352, 1353, 1354, 1371, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1462, 1473, 1583, 1605, 1608, 1614, 1621, 1622, 1623, 1624, 1625, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1766, 1770, 1803, 1850, 1852, 1861, 1872, 1880, 1881, 1884, 1888, 1892, 1894, 1895, 1896, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1927, 1928, 1929, 1931, 1934, 1935, 1936, 1937, 1938, 1940, 1945, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1967, 1968, 1969, 1971], "In": [0, 2, 3, 4, 7, 9, 15, 18, 21, 25, 27, 29, 31, 35, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 56, 57, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 112, 114, 116, 118, 121, 122, 124, 132, 134, 137, 138, 140, 143, 145, 149, 151, 153, 155, 157, 159, 168, 177, 185, 189, 192, 194, 204, 206, 212, 222, 227, 229, 235, 238, 240, 242, 244, 248, 253, 260, 262, 264, 268, 270, 274, 276, 283, 285, 287, 295, 297, 299, 301, 347, 349, 351, 353, 355, 357, 359, 362, 364, 366, 367, 374, 376, 378, 380, 382, 386, 410, 413, 416, 418, 429, 431, 433, 441, 446, 456, 459, 475, 480, 482, 498, 501, 512, 517, 519, 522, 524, 526, 539, 541, 543, 552, 554, 561, 565, 567, 583, 586, 588, 590, 592, 602, 612, 670, 750, 790, 814, 844, 889, 918, 926, 955, 956, 972, 1018, 1029, 1041, 1042, 1046, 1047, 1072, 1093, 1095, 1103, 1104, 1105, 1120, 1131, 1135, 1138, 1140, 1197, 1198, 1200, 1210, 1213, 1214, 1216, 1232, 1241, 1246, 1247, 1248, 1256, 1259, 1264, 1269, 1273, 1278, 1281, 1290, 1295, 1301, 1302, 1329, 1347, 1348, 1349, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1373, 1374, 1375, 1379, 1381, 1386, 1395, 1404, 1419, 1427, 1428, 1429, 1434, 1440, 1477, 1479, 1481, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1523, 1533, 1540, 1549, 1577, 1580, 1582, 1583, 1597, 1614, 1621, 1627, 1632, 1633, 1665, 1693, 1704, 1706, 1742, 1758, 1760, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1820, 1824, 1825, 1848, 1861, 1862, 1864, 1869, 1870, 1879, 1880, 1881, 1883, 1884, 1888, 1890, 1891, 1896, 1897, 1898, 1899, 1902, 1903, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1923, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1936, 1937, 1938, 1940, 1945, 1947, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1971], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 70, 71, 72, 74, 76, 77, 79, 141, 145, 181, 212, 233, 245, 304, 306, 312, 314, 319, 326, 489, 503, 505, 507, 527, 535, 550, 597, 604, 607, 670, 677, 678, 725, 731, 732, 733, 746, 750, 755, 769, 775, 777, 779, 782, 786, 805, 807, 813, 816, 844, 851, 852, 854, 868, 869, 870, 879, 881, 882, 883, 885, 887, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 905, 906, 907, 913, 929, 939, 942, 955, 956, 958, 973, 975, 976, 978, 985, 986, 987, 988, 989, 1007, 1008, 1015, 1016, 1018, 1030, 1032, 1042, 1046, 1047, 1057, 1070, 1072, 1073, 1074, 1075, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1112, 1115, 1123, 1126, 1129, 1130, 1133, 1134, 1135, 1137, 1139, 1141, 1142, 1145, 1153, 1161, 1162, 1163, 1197, 1198, 1200, 1203, 1204, 1206, 1208, 1211, 1212, 1214, 1216, 1217, 1218, 1219, 1230, 1231, 1236, 1237, 1242, 1244, 1246, 1249, 1250, 1254, 1257, 1259, 1262, 1263, 1270, 1272, 1273, 1290, 1292, 1295, 1301, 1312, 1319, 1324, 1333, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1386, 1394, 1398, 1399, 1402, 1403, 1404, 1406, 1416, 1417, 1418, 1419, 1421, 1422, 1424, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1449, 1451, 1453, 1462, 1465, 1467, 1468, 1469, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1508, 1509, 1510, 1511, 1512, 1513, 1518, 1524, 1525, 1527, 1528, 1529, 1533, 1544, 1551, 1552, 1554, 1555, 1557, 1558, 1559, 1583, 1587, 1602, 1604, 1605, 1608, 1614, 1618, 1619, 1620, 1621, 1626, 1627, 1630, 1631, 1632, 1639, 1656, 1663, 1665, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1722, 1727, 1728, 1729, 1748, 1750, 1754, 1762, 1765, 1774, 1780, 1801, 1804, 1805, 1809, 1812, 1817, 1820, 1824, 1839, 1840, 1856, 1857, 1858, 1859, 1861, 1864, 1870, 1871, 1872, 1873, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1966, 1967, 1968, 1969, 1970, 1971, 1972], "chosen": [0, 54, 1060, 1222, 1583, 1771, 1796, 1843, 1899, 1903, 1907, 1909, 1917, 1925, 1931, 1969], "improv": [0, 1, 3, 9, 14, 19, 22, 25, 46, 49, 57, 750, 794, 795, 796, 891, 893, 897, 958, 1153, 1372, 1386, 1404, 1449, 1480, 1583, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1706, 1880, 1881, 1903, 1908, 1909, 1910, 1918, 1919, 1923, 1931, 1932, 1936, 1959, 1963, 1965, 1967, 1969, 1971], "perform": [0, 1, 2, 3, 4, 5, 11, 14, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 42, 43, 46, 49, 53, 56, 57, 72, 110, 197, 200, 448, 570, 593, 607, 676, 677, 678, 679, 680, 681, 750, 771, 794, 795, 796, 837, 848, 851, 884, 889, 891, 893, 894, 897, 898, 910, 922, 942, 955, 956, 974, 980, 1029, 1053, 1054, 1067, 1092, 1115, 1117, 1129, 1130, 1133, 1164, 1175, 1200, 1210, 1211, 1216, 1244, 1246, 1249, 1253, 1256, 1257, 1261, 1262, 1270, 1271, 1273, 1278, 1287, 1300, 1305, 1315, 1316, 1326, 1329, 1332, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1374, 1377, 1378, 1386, 1404, 1434, 1440, 1442, 1449, 1462, 1477, 1480, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1552, 1569, 1583, 1589, 1590, 1605, 1614, 1616, 1617, 1628, 1632, 1653, 1660, 1662, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1712, 1720, 1748, 1762, 1766, 1794, 1800, 1801, 1802, 1803, 1823, 1825, 1861, 1880, 1881, 1884, 1888, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1916, 1917, 1918, 1919, 1925, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1951, 1953, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1965, 1970, 1971], "while": [0, 2, 3, 5, 7, 8, 11, 14, 21, 22, 25, 26, 27, 31, 44, 46, 47, 49, 54, 56, 57, 76, 685, 686, 725, 844, 874, 882, 976, 1047, 1130, 1162, 1200, 1203, 1216, 1217, 1273, 1330, 1342, 1358, 1395, 1397, 1398, 1399, 1404, 1434, 1440, 1452, 1465, 1473, 1477, 1481, 1552, 1608, 1614, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1667, 1758, 1766, 1885, 1890, 1891, 1898, 1899, 1903, 1904, 1907, 1909, 1910, 1911, 1912, 1915, 1917, 1919, 1920, 1925, 1927, 1929, 1931, 1934, 1936, 1938, 1940, 1941, 1944, 1945, 1946, 1958, 1959, 1960, 1962, 1963, 1969], "maintain": [0, 7, 8, 21, 22, 25, 31, 46, 49, 53, 57, 1346, 1374, 1379, 1526, 1614, 1653, 1667, 1880, 1899, 1903, 1904, 1907, 1909, 1915, 1923, 1931, 1957, 1958, 1962], "accuraci": [0, 22, 942, 1264, 1583, 1766, 1880, 1894, 1903, 1915, 1945, 1949, 1959], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 17, 20, 21, 25, 26, 27, 31, 34, 42, 43, 45, 46, 49, 54, 55, 56, 57, 80, 84, 86, 88, 90, 92, 94, 96, 98, 100, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 117, 119, 120, 123, 125, 126, 127, 128, 129, 131, 133, 135, 136, 139, 141, 142, 144, 145, 146, 147, 148, 150, 152, 154, 156, 158, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 180, 183, 184, 188, 190, 191, 193, 195, 196, 198, 201, 202, 203, 205, 208, 209, 211, 215, 216, 217, 218, 219, 220, 221, 225, 226, 228, 230, 231, 232, 234, 236, 237, 239, 241, 243, 246, 247, 252, 254, 255, 256, 257, 258, 259, 261, 263, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 282, 284, 286, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 304, 312, 313, 314, 315, 316, 318, 319, 325, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 369, 370, 371, 372, 373, 375, 377, 379, 381, 383, 384, 385, 387, 388, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 417, 419, 420, 421, 422, 423, 424, 428, 430, 432, 440, 442, 443, 445, 447, 449, 450, 451, 452, 454, 455, 457, 458, 460, 467, 469, 470, 472, 474, 477, 478, 479, 481, 483, 484, 485, 487, 488, 489, 491, 492, 495, 496, 497, 500, 505, 507, 508, 509, 511, 513, 515, 516, 518, 520, 521, 523, 525, 528, 529, 530, 532, 533, 537, 538, 540, 542, 544, 545, 546, 551, 553, 555, 557, 558, 559, 560, 562, 563, 564, 566, 568, 569, 580, 581, 582, 584, 585, 587, 589, 591, 595, 596, 599, 600, 601, 604, 605, 606, 608, 609, 610, 611, 670, 683, 685, 686, 689, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 735, 736, 738, 746, 747, 750, 751, 752, 753, 754, 755, 756, 757, 758, 761, 762, 763, 764, 769, 770, 771, 772, 773, 774, 775, 783, 830, 849, 850, 851, 852, 855, 864, 865, 866, 869, 880, 882, 883, 884, 885, 886, 888, 889, 893, 897, 898, 903, 904, 907, 911, 913, 920, 922, 925, 939, 942, 946, 947, 960, 973, 974, 975, 976, 978, 980, 981, 983, 997, 998, 1007, 1008, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1037, 1038, 1067, 1070, 1072, 1073, 1075, 1076, 1085, 1090, 1108, 1111, 1124, 1127, 1132, 1133, 1134, 1136, 1145, 1153, 1157, 1158, 1162, 1163, 1171, 1172, 1173, 1175, 1200, 1204, 1212, 1216, 1217, 1219, 1220, 1222, 1232, 1237, 1240, 1243, 1246, 1248, 1255, 1257, 1258, 1266, 1270, 1271, 1273, 1279, 1281, 1287, 1288, 1290, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1315, 1316, 1322, 1329, 1331, 1332, 1342, 1350, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1377, 1378, 1380, 1386, 1388, 1394, 1395, 1400, 1401, 1404, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1446, 1447, 1448, 1449, 1452, 1461, 1463, 1465, 1466, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1599, 1600, 1601, 1602, 1603, 1604, 1614, 1615, 1627, 1628, 1629, 1632, 1638, 1647, 1656, 1661, 1664, 1665, 1666, 1667, 1671, 1710, 1720, 1721, 1731, 1733, 1735, 1737, 1738, 1742, 1745, 1748, 1754, 1763, 1766, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1799, 1800, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1818, 1819, 1820, 1823, 1834, 1836, 1839, 1845, 1846, 1850, 1852, 1857, 1861, 1864, 1867, 1868, 1873, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1891, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1929, 1930, 1931, 1932, 1935, 1936, 1937, 1940, 1941, 1943, 1944, 1946, 1947, 1948, 1951, 1952, 1955, 1956, 1957, 1960, 1961, 1962, 1963, 1967, 1968, 1969, 1970, 1971, 1972], "detail": [0, 1, 2, 3, 7, 8, 11, 13, 14, 15, 17, 18, 21, 25, 26, 27, 31, 33, 43, 47, 49, 55, 57, 70, 71, 72, 141, 314, 485, 604, 670, 725, 728, 729, 730, 731, 732, 733, 750, 756, 757, 758, 761, 762, 763, 764, 769, 770, 772, 773, 774, 775, 783, 849, 850, 851, 852, 863, 880, 882, 883, 884, 885, 886, 889, 898, 925, 946, 947, 960, 974, 978, 980, 981, 983, 997, 998, 1007, 1018, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1036, 1037, 1038, 1055, 1072, 1111, 1134, 1145, 1148, 1149, 1153, 1181, 1188, 1200, 1204, 1216, 1237, 1240, 1258, 1265, 1273, 1279, 1281, 1301, 1342, 1346, 1356, 1365, 1366, 1367, 1371, 1377, 1378, 1379, 1380, 1382, 1383, 1386, 1404, 1434, 1440, 1446, 1447, 1449, 1461, 1482, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1599, 1600, 1601, 1605, 1614, 1615, 1656, 1666, 1674, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1693, 1698, 1710, 1722, 1754, 1765, 1791, 1800, 1846, 1857, 1861, 1864, 1879, 1881, 1882, 1883, 1884, 1888, 1891, 1893, 1895, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1918, 1919, 1920, 1925, 1928, 1929, 1930, 1931, 1933, 1935, 1936, 1937, 1938, 1940, 1944, 1945, 1947, 1948, 1962, 1966, 1969, 1970, 1971], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 57, 73, 75, 76, 88, 141, 182, 199, 251, 304, 312, 438, 477, 478, 487, 488, 503, 505, 507, 534, 550, 570, 607, 670, 676, 679, 725, 758, 759, 769, 775, 781, 783, 814, 830, 848, 855, 867, 870, 883, 891, 892, 893, 894, 895, 896, 897, 898, 899, 903, 904, 910, 913, 922, 930, 933, 934, 935, 941, 942, 955, 956, 960, 975, 977, 987, 989, 1011, 1017, 1018, 1030, 1055, 1072, 1111, 1115, 1120, 1126, 1130, 1131, 1136, 1139, 1140, 1141, 1153, 1175, 1189, 1190, 1192, 1193, 1196, 1200, 1201, 1203, 1212, 1213, 1214, 1216, 1217, 1221, 1222, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1270, 1271, 1272, 1273, 1281, 1287, 1290, 1295, 1301, 1302, 1305, 1324, 1329, 1330, 1331, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1377, 1378, 1381, 1384, 1386, 1387, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1421, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1461, 1462, 1465, 1466, 1467, 1468, 1470, 1473, 1479, 1480, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1498, 1500, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1525, 1531, 1533, 1544, 1545, 1568, 1571, 1573, 1576, 1577, 1583, 1591, 1602, 1603, 1604, 1605, 1610, 1611, 1614, 1615, 1616, 1617, 1621, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1656, 1661, 1665, 1666, 1667, 1668, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1710, 1712, 1719, 1722, 1723, 1745, 1751, 1758, 1763, 1766, 1773, 1791, 1797, 1801, 1803, 1804, 1805, 1809, 1815, 1820, 1824, 1834, 1839, 1841, 1846, 1850, 1852, 1857, 1861, 1862, 1872, 1875, 1879, 1880, 1881, 1883, 1888, 1890, 1892, 1894, 1896, 1897, 1898, 1902, 1905, 1906, 1907, 1908, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1927, 1928, 1929, 1930, 1935, 1936, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1955, 1956, 1957, 1958, 1960, 1962, 1963, 1965, 1967, 1968, 1969, 1971], "enter": [0, 25, 884, 1175, 1909], "tensor": [0, 2, 5, 7, 8, 12, 14, 17, 18, 21, 22, 24, 25, 26, 27, 29, 31, 32, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 79, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 710, 722, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 740, 745, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 774, 775, 776, 777, 778, 779, 780, 784, 788, 789, 790, 791, 792, 809, 810, 811, 812, 814, 815, 817, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 903, 904, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 947, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 972, 985, 986, 987, 988, 989, 996, 1004, 1005, 1011, 1015, 1018, 1021, 1025, 1036, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1185, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1203, 1204, 1206, 1207, 1208, 1211, 1212, 1214, 1216, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1313, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1342, 1346, 1347, 1350, 1351, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1386, 1387, 1388, 1394, 1400, 1401, 1404, 1405, 1421, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1466, 1467, 1468, 1469, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1610, 1611, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1764, 1767, 1768, 1771, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1834, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1883, 1884, 1888, 1891, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1932, 1935, 1936, 1937, 1941, 1942, 1945, 1947, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1964, 1968, 1969, 1970, 1971], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 36, 40, 41, 42, 43, 45, 46, 47, 49, 54, 56, 57, 79, 141, 245, 489, 535, 607, 687, 748, 771, 782, 783, 784, 790, 800, 801, 802, 803, 805, 806, 807, 808, 813, 814, 816, 844, 855, 879, 880, 881, 883, 889, 891, 897, 898, 899, 918, 924, 928, 929, 955, 975, 1011, 1018, 1029, 1073, 1074, 1075, 1088, 1089, 1091, 1092, 1093, 1095, 1099, 1103, 1104, 1105, 1120, 1129, 1130, 1137, 1138, 1139, 1141, 1162, 1199, 1200, 1204, 1207, 1211, 1212, 1214, 1216, 1222, 1230, 1232, 1236, 1237, 1241, 1246, 1247, 1248, 1253, 1254, 1257, 1261, 1264, 1270, 1272, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1350, 1351, 1355, 1356, 1362, 1363, 1364, 1371, 1372, 1376, 1380, 1381, 1384, 1385, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1400, 1401, 1420, 1421, 1423, 1424, 1425, 1433, 1434, 1442, 1444, 1445, 1448, 1452, 1453, 1454, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1483, 1484, 1485, 1504, 1508, 1509, 1510, 1550, 1569, 1570, 1583, 1605, 1614, 1621, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1644, 1654, 1655, 1657, 1660, 1662, 1667, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1698, 1738, 1754, 1769, 1771, 1824, 1872, 1879, 1881, 1882, 1883, 1888, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1903, 1904, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1931, 1936, 1937, 1938, 1940, 1942, 1945, 1947, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1958, 1961, 1962, 1964, 1965, 1967, 1968, 1969, 1970, 1971], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 20, 21, 22, 25, 29, 31, 33, 34, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 66, 67, 68, 73, 74, 141, 245, 326, 438, 478, 489, 670, 679, 724, 725, 738, 747, 771, 879, 880, 881, 882, 883, 888, 889, 891, 892, 893, 897, 924, 942, 973, 996, 1007, 1009, 1018, 1019, 1039, 1072, 1129, 1130, 1133, 1134, 1135, 1136, 1141, 1175, 1200, 1204, 1205, 1213, 1216, 1217, 1218, 1246, 1264, 1272, 1295, 1302, 1305, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1404, 1430, 1431, 1432, 1434, 1439, 1440, 1441, 1449, 1468, 1477, 1479, 1481, 1486, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1544, 1550, 1583, 1601, 1602, 1605, 1614, 1628, 1654, 1662, 1664, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1704, 1722, 1745, 1754, 1762, 1806, 1807, 1808, 1810, 1811, 1815, 1862, 1864, 1872, 1879, 1881, 1883, 1884, 1886, 1888, 1891, 1892, 1894, 1896, 1897, 1899, 1902, 1903, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1940, 1943, 1944, 1945, 1946, 1947, 1948, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971], "should": [0, 1, 3, 4, 5, 9, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 49, 53, 54, 56, 57, 58, 63, 64, 66, 75, 110, 141, 145, 304, 312, 389, 393, 435, 436, 437, 438, 439, 477, 478, 486, 503, 505, 507, 573, 574, 575, 577, 578, 676, 679, 680, 725, 750, 762, 763, 764, 783, 786, 790, 807, 814, 828, 829, 844, 845, 846, 849, 855, 879, 880, 881, 882, 883, 887, 888, 889, 890, 891, 892, 893, 897, 903, 904, 910, 911, 912, 913, 920, 933, 948, 962, 975, 978, 988, 989, 1007, 1009, 1018, 1063, 1073, 1074, 1075, 1085, 1090, 1093, 1094, 1095, 1103, 1104, 1105, 1108, 1123, 1126, 1127, 1128, 1130, 1131, 1135, 1139, 1140, 1141, 1157, 1158, 1161, 1162, 1197, 1198, 1200, 1201, 1205, 1210, 1212, 1213, 1216, 1217, 1218, 1220, 1245, 1270, 1271, 1272, 1278, 1287, 1290, 1291, 1292, 1312, 1342, 1350, 1351, 1355, 1368, 1370, 1371, 1373, 1374, 1375, 1378, 1379, 1400, 1404, 1426, 1434, 1440, 1441, 1442, 1461, 1482, 1486, 1498, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1525, 1533, 1583, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1653, 1654, 1655, 1658, 1660, 1671, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1722, 1724, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1745, 1761, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1806, 1807, 1808, 1809, 1810, 1811, 1824, 1839, 1848, 1864, 1872, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1888, 1890, 1891, 1893, 1894, 1896, 1898, 1899, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1917, 1918, 1919, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1936, 1938, 1940, 1944, 1945, 1947, 1953, 1955, 1956, 1958, 1959, 1961, 1962, 1963, 1965, 1967, 1968, 1969, 1970], "call": [0, 1, 2, 3, 8, 11, 14, 15, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 42, 44, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 66, 71, 77, 141, 281, 314, 326, 448, 476, 477, 478, 546, 570, 604, 607, 670, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 771, 780, 787, 814, 847, 851, 852, 883, 887, 888, 889, 890, 891, 893, 894, 897, 903, 904, 925, 942, 947, 948, 950, 973, 976, 978, 1007, 1009, 1019, 1020, 1029, 1036, 1037, 1039, 1040, 1070, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1124, 1129, 1130, 1141, 1145, 1163, 1175, 1185, 1197, 1200, 1203, 1205, 1211, 1212, 1213, 1220, 1256, 1264, 1268, 1270, 1272, 1273, 1302, 1346, 1352, 1353, 1354, 1371, 1372, 1373, 1374, 1375, 1377, 1379, 1381, 1419, 1430, 1431, 1432, 1434, 1441, 1442, 1462, 1473, 1485, 1511, 1512, 1513, 1519, 1520, 1521, 1526, 1544, 1583, 1602, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1621, 1629, 1632, 1639, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1655, 1661, 1662, 1664, 1665, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1735, 1762, 1769, 1770, 1799, 1818, 1819, 1820, 1841, 1857, 1861, 1862, 1864, 1867, 1868, 1872, 1873, 1879, 1881, 1885, 1888, 1894, 1896, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1951, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1965, 1968, 1969, 1970, 1971, 1972], "model": [0, 1, 2, 3, 4, 5, 8, 9, 12, 22, 25, 26, 27, 29, 30, 31, 41, 43, 45, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 73, 74, 782, 783, 784, 787, 788, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 814, 815, 816, 826, 827, 828, 829, 844, 847, 848, 849, 850, 851, 852, 853, 942, 1019, 1039, 1129, 1130, 1131, 1139, 1141, 1175, 1200, 1204, 1205, 1210, 1212, 1216, 1218, 1272, 1342, 1371, 1388, 1399, 1400, 1434, 1440, 1462, 1473, 1477, 1479, 1480, 1481, 1532, 1614, 1615, 1621, 1626, 1628, 1630, 1643, 1662, 1663, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1690, 1691, 1692, 1693, 1698, 1704, 1706, 1820, 1872, 1880, 1881, 1883, 1884, 1885, 1892, 1893, 1899, 1904, 1906, 1907, 1908, 1909, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1925, 1930, 1932, 1936, 1937, 1939, 1940, 1941, 1945, 1949, 1950, 1953, 1954, 1955, 1958, 1959, 1960, 1962, 1965, 1967, 1969], "": [0, 1, 2, 3, 4, 7, 8, 9, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 38, 39, 40, 42, 43, 46, 47, 49, 51, 53, 54, 56, 57, 71, 72, 77, 78, 453, 471, 483, 486, 503, 534, 548, 571, 614, 670, 679, 683, 684, 685, 686, 689, 725, 750, 783, 784, 785, 805, 806, 807, 810, 813, 816, 844, 851, 852, 865, 867, 868, 869, 870, 886, 887, 888, 892, 893, 895, 899, 926, 928, 941, 954, 955, 956, 957, 962, 971, 973, 975, 979, 994, 998, 1007, 1009, 1014, 1015, 1018, 1019, 1020, 1039, 1040, 1041, 1047, 1064, 1067, 1069, 1070, 1072, 1086, 1087, 1089, 1090, 1091, 1094, 1095, 1097, 1098, 1101, 1102, 1104, 1105, 1106, 1107, 1109, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1139, 1141, 1145, 1153, 1161, 1162, 1163, 1187, 1189, 1197, 1198, 1200, 1204, 1211, 1212, 1216, 1231, 1232, 1242, 1243, 1244, 1246, 1249, 1253, 1255, 1257, 1258, 1262, 1263, 1264, 1265, 1270, 1272, 1273, 1288, 1295, 1300, 1302, 1305, 1307, 1308, 1312, 1315, 1316, 1319, 1328, 1329, 1332, 1334, 1340, 1341, 1342, 1350, 1351, 1352, 1353, 1354, 1357, 1371, 1377, 1388, 1434, 1435, 1440, 1444, 1450, 1462, 1465, 1467, 1473, 1477, 1479, 1481, 1487, 1488, 1505, 1506, 1517, 1530, 1533, 1544, 1545, 1550, 1583, 1589, 1602, 1605, 1610, 1611, 1614, 1615, 1621, 1632, 1643, 1656, 1660, 1667, 1668, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1698, 1710, 1712, 1716, 1723, 1738, 1741, 1742, 1745, 1746, 1747, 1749, 1751, 1758, 1765, 1766, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1818, 1819, 1820, 1823, 1824, 1825, 1826, 1827, 1836, 1840, 1842, 1848, 1864, 1867, 1868, 1869, 1872, 1873, 1879, 1881, 1882, 1883, 1884, 1885, 1888, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1929, 1930, 1931, 1933, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1967, 1968, 1969, 1970], "wrap": [0, 1, 15, 21, 22, 25, 29, 30, 35, 44, 49, 53, 54, 57, 58, 251, 780, 781, 976, 1130, 1200, 1216, 1371, 1434, 1473, 1609, 1614, 1630, 1656, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1881, 1882, 1884, 1891, 1903, 1904, 1907, 1908, 1909, 1910, 1915, 1921, 1925, 1929, 1930, 1931, 1936, 1937, 1948, 1950, 1955, 1956, 1959, 1962, 1969, 1970], "forward": [0, 5, 7, 8, 12, 14, 22, 25, 26, 29, 30, 31, 46, 47, 49, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 141, 212, 213, 670, 725, 738, 747, 750, 790, 805, 806, 807, 810, 814, 851, 852, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 897, 898, 954, 1018, 1064, 1076, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1130, 1132, 1133, 1134, 1136, 1139, 1175, 1200, 1203, 1204, 1205, 1207, 1211, 1212, 1216, 1217, 1218, 1346, 1350, 1352, 1353, 1354, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1386, 1404, 1419, 1430, 1431, 1432, 1434, 1435, 1436, 1440, 1441, 1444, 1445, 1449, 1450, 1462, 1477, 1478, 1479, 1480, 1481, 1519, 1520, 1521, 1526, 1571, 1605, 1608, 1609, 1610, 1611, 1614, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1661, 1664, 1665, 1729, 1768, 1797, 1861, 1880, 1881, 1883, 1884, 1890, 1892, 1896, 1898, 1902, 1903, 1904, 1906, 1907, 1908, 1910, 1911, 1912, 1914, 1915, 1918, 1920, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1936, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1959, 1962, 1963, 1964, 1965, 1967, 1968, 1969], "pass": [0, 1, 3, 5, 6, 7, 14, 21, 22, 25, 26, 27, 29, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 56, 57, 58, 65, 66, 70, 77, 141, 245, 438, 478, 503, 505, 507, 534, 550, 670, 783, 784, 813, 816, 849, 851, 870, 879, 880, 881, 882, 883, 889, 897, 926, 942, 949, 973, 1007, 1018, 1062, 1093, 1094, 1095, 1103, 1104, 1105, 1111, 1124, 1126, 1129, 1130, 1134, 1135, 1136, 1139, 1140, 1162, 1198, 1200, 1201, 1204, 1206, 1210, 1212, 1216, 1217, 1245, 1261, 1263, 1272, 1319, 1342, 1343, 1344, 1345, 1352, 1353, 1354, 1371, 1377, 1378, 1382, 1383, 1434, 1439, 1440, 1462, 1478, 1479, 1480, 1481, 1486, 1498, 1528, 1529, 1533, 1544, 1545, 1571, 1583, 1605, 1608, 1609, 1610, 1611, 1614, 1630, 1632, 1634, 1639, 1653, 1656, 1660, 1662, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1754, 1758, 1762, 1824, 1879, 1881, 1885, 1888, 1892, 1894, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1906, 1908, 1909, 1910, 1912, 1914, 1915, 1918, 1923, 1925, 1927, 1928, 1929, 1936, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1950, 1951, 1955, 1956, 1957, 1958, 1959, 1962, 1966, 1969, 1970], "e": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 21, 22, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 56, 57, 58, 65, 66, 141, 249, 326, 368, 570, 607, 725, 738, 747, 750, 783, 784, 805, 807, 844, 848, 849, 851, 852, 870, 879, 883, 888, 898, 899, 921, 923, 926, 954, 1004, 1018, 1043, 1072, 1082, 1123, 1130, 1135, 1139, 1150, 1175, 1179, 1180, 1182, 1185, 1197, 1200, 1207, 1208, 1216, 1236, 1237, 1252, 1264, 1272, 1273, 1274, 1276, 1278, 1295, 1306, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1370, 1371, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1389, 1394, 1397, 1398, 1399, 1400, 1401, 1404, 1406, 1407, 1408, 1409, 1425, 1434, 1435, 1440, 1441, 1443, 1444, 1448, 1449, 1465, 1473, 1477, 1481, 1482, 1483, 1485, 1508, 1509, 1510, 1517, 1519, 1520, 1521, 1524, 1525, 1526, 1533, 1544, 1576, 1583, 1602, 1604, 1605, 1610, 1614, 1615, 1616, 1617, 1621, 1628, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1653, 1654, 1660, 1664, 1667, 1679, 1680, 1715, 1726, 1744, 1751, 1758, 1762, 1766, 1769, 1774, 1809, 1820, 1824, 1879, 1881, 1883, 1884, 1885, 1888, 1891, 1892, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1913, 1914, 1915, 1918, 1920, 1923, 1925, 1927, 1928, 1930, 1931, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1945, 1947, 1954, 1957, 1958, 1959, 1962, 1967, 1969, 1970, 1972], "network": [0, 1, 7, 8, 15, 29, 31, 42, 831, 1018, 1200, 1216, 1217, 1346, 1352, 1353, 1354, 1357, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1375, 1376, 1379, 1388, 1400, 1404, 1434, 1441, 1446, 1447, 1452, 1461, 1463, 1473, 1477, 1479, 1481, 1498, 1532, 1533, 1586, 1605, 1628, 1630, 1656, 1661, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1698, 1704, 1881, 1883, 1884, 1902, 1903, 1909, 1918, 1919, 1922, 1925, 1927, 1931, 1936, 1937, 1938, 1957], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 14, 15, 21, 22, 25, 27, 39, 42, 43, 46, 47, 49, 57, 72, 74, 312, 478, 507, 573, 758, 759, 849, 851, 944, 1100, 1102, 1161, 1198, 1200, 1201, 1230, 1309, 1310, 1347, 1348, 1349, 1355, 1357, 1371, 1380, 1388, 1421, 1430, 1431, 1432, 1434, 1440, 1477, 1478, 1479, 1480, 1481, 1484, 1500, 1501, 1502, 1517, 1530, 1550, 1614, 1621, 1654, 1655, 1657, 1787, 1849, 1850, 1851, 1852, 1879, 1881, 1883, 1884, 1891, 1892, 1894, 1896, 1904, 1906, 1907, 1911, 1914, 1915, 1920, 1922, 1925, 1930, 1931, 1936, 1938, 1945, 1948, 1951, 1953, 1955, 1956, 1958, 1959, 1960, 1965, 1966, 1967, 1969, 1970, 1971], "loss": [0, 1, 22, 25, 26, 29, 31, 49, 1131, 1197, 1236, 1237, 1246, 1264, 1342, 1350, 1351, 1357, 1368, 1370, 1377, 1388, 1394, 1395, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1483, 1505, 1506, 1516, 1517, 1530, 1545, 1568, 1576, 1614, 1654, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1690, 1691, 1692, 1693, 1697, 1706, 1766, 1879, 1880, 1894, 1898, 1904, 1907, 1908, 1911, 1912, 1915, 1927, 1931, 1932, 1936, 1937, 1945], "comput": [0, 3, 5, 7, 8, 11, 14, 17, 21, 22, 25, 27, 31, 33, 35, 46, 47, 49, 50, 51, 53, 141, 281, 477, 485, 670, 671, 673, 687, 688, 750, 758, 759, 790, 792, 809, 810, 811, 812, 814, 815, 879, 883, 884, 885, 887, 888, 891, 892, 893, 894, 895, 896, 897, 898, 899, 903, 904, 914, 915, 916, 917, 918, 919, 930, 932, 933, 934, 935, 941, 956, 958, 972, 1015, 1018, 1055, 1064, 1066, 1069, 1072, 1076, 1077, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1117, 1118, 1119, 1121, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1143, 1144, 1145, 1153, 1156, 1159, 1160, 1161, 1162, 1175, 1177, 1200, 1203, 1212, 1220, 1221, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1273, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1299, 1300, 1301, 1304, 1329, 1331, 1335, 1342, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1365, 1366, 1367, 1369, 1370, 1372, 1377, 1378, 1386, 1389, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1424, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1440, 1441, 1443, 1448, 1449, 1467, 1469, 1473, 1482, 1483, 1486, 1500, 1501, 1502, 1515, 1516, 1524, 1525, 1532, 1533, 1535, 1544, 1552, 1557, 1558, 1559, 1560, 1561, 1562, 1573, 1576, 1583, 1589, 1590, 1605, 1608, 1610, 1611, 1614, 1615, 1619, 1621, 1622, 1624, 1627, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1646, 1647, 1654, 1660, 1664, 1665, 1667, 1677, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1716, 1722, 1723, 1727, 1728, 1742, 1743, 1766, 1768, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1797, 1800, 1801, 1802, 1803, 1820, 1824, 1825, 1841, 1846, 1869, 1872, 1880, 1881, 1884, 1891, 1894, 1897, 1898, 1900, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1922, 1923, 1925, 1927, 1931, 1934, 1936, 1940, 1941, 1946, 1949, 1953, 1954, 1956, 1957, 1958, 1959, 1961, 1968, 1971], "backward": [0, 1, 5, 9, 25, 26, 27, 29, 31, 46, 49, 53, 54, 57, 58, 281, 326, 477, 478, 486, 493, 494, 503, 505, 507, 571, 670, 676, 679, 750, 805, 806, 807, 880, 885, 886, 887, 888, 889, 890, 892, 894, 897, 898, 903, 904, 910, 922, 947, 1018, 1076, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1129, 1130, 1200, 1273, 1281, 1295, 1305, 1350, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1377, 1386, 1387, 1388, 1401, 1404, 1405, 1421, 1425, 1426, 1434, 1440, 1441, 1448, 1449, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1505, 1506, 1516, 1517, 1533, 1544, 1568, 1571, 1606, 1610, 1611, 1614, 1632, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1697, 1710, 1722, 1797, 1801, 1805, 1824, 1861, 1879, 1880, 1882, 1884, 1890, 1898, 1899, 1902, 1903, 1908, 1909, 1910, 1911, 1914, 1915, 1917, 1918, 1923, 1927, 1928, 1930, 1931, 1936, 1940, 1941, 1946, 1951, 1954, 1955, 1959, 1963, 1965, 1967, 1968, 1969], "under": [0, 1, 3, 4, 5, 9, 21, 25, 42, 46, 49, 50, 52, 54, 56, 72, 898, 906, 927, 1175, 1200, 1357, 1434, 1498, 1524, 1525, 1627, 1629, 1632, 1674, 1743, 1888, 1896, 1903, 1904, 1907, 1908, 1910, 1912, 1917, 1923, 1928, 1929, 1931, 1934, 1935, 1938, 1941, 1945, 1948, 1950, 1956, 1957, 1958, 1962, 1964, 1967, 1969], "recommend": [0, 1, 5, 21, 22, 25, 27, 30, 31, 33, 42, 43, 49, 53, 56, 57, 58, 75, 76, 78, 438, 883, 950, 955, 956, 1093, 1094, 1095, 1103, 1104, 1105, 1187, 1203, 1246, 1273, 1319, 1342, 1371, 1545, 1614, 1729, 1857, 1862, 1879, 1881, 1888, 1893, 1896, 1898, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1915, 1917, 1918, 1920, 1923, 1925, 1928, 1931, 1960], "same": [0, 1, 3, 7, 12, 14, 15, 17, 18, 21, 22, 25, 26, 27, 29, 31, 33, 39, 40, 42, 43, 44, 45, 46, 47, 49, 52, 54, 56, 57, 58, 65, 66, 130, 144, 186, 212, 246, 302, 304, 306, 310, 312, 330, 435, 436, 437, 438, 439, 461, 473, 487, 488, 490, 503, 505, 507, 510, 534, 570, 607, 608, 676, 679, 683, 685, 686, 687, 689, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 735, 736, 746, 748, 751, 752, 753, 754, 755, 769, 775, 778, 779, 783, 784, 786, 790, 792, 804, 809, 812, 814, 815, 849, 851, 868, 869, 870, 882, 885, 888, 891, 892, 893, 894, 895, 896, 898, 899, 910, 912, 913, 922, 924, 926, 929, 934, 935, 936, 942, 945, 951, 954, 972, 973, 975, 986, 988, 1007, 1018, 1055, 1060, 1062, 1063, 1069, 1072, 1074, 1075, 1078, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1135, 1136, 1139, 1140, 1141, 1142, 1145, 1153, 1161, 1162, 1170, 1174, 1191, 1197, 1200, 1206, 1211, 1212, 1216, 1217, 1221, 1222, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1268, 1288, 1292, 1294, 1295, 1298, 1300, 1301, 1302, 1303, 1306, 1329, 1332, 1333, 1334, 1340, 1341, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1378, 1379, 1381, 1384, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1406, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1442, 1443, 1448, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1485, 1486, 1489, 1490, 1491, 1498, 1504, 1505, 1506, 1508, 1509, 1510, 1516, 1525, 1533, 1535, 1544, 1545, 1583, 1602, 1614, 1621, 1627, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1653, 1657, 1662, 1667, 1668, 1672, 1675, 1710, 1715, 1716, 1719, 1720, 1732, 1734, 1736, 1740, 1742, 1744, 1745, 1749, 1751, 1758, 1761, 1766, 1774, 1797, 1806, 1807, 1808, 1810, 1811, 1817, 1818, 1819, 1823, 1824, 1835, 1846, 1857, 1858, 1859, 1860, 1861, 1867, 1868, 1869, 1872, 1878, 1879, 1881, 1883, 1884, 1888, 1894, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1923, 1925, 1927, 1928, 1929, 1931, 1934, 1936, 1937, 1938, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1953, 1954, 1955, 1957, 1958, 1959, 1962, 1965, 1967, 1968, 1969, 1970], "correspond": [0, 1, 7, 18, 21, 22, 25, 27, 29, 30, 31, 42, 46, 49, 57, 73, 463, 464, 503, 505, 507, 534, 535, 670, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 725, 783, 787, 826, 828, 847, 848, 849, 854, 870, 879, 881, 882, 883, 888, 891, 893, 898, 957, 1018, 1038, 1067, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1153, 1162, 1189, 1200, 1217, 1231, 1236, 1237, 1242, 1245, 1264, 1271, 1273, 1287, 1302, 1324, 1371, 1377, 1404, 1434, 1440, 1480, 1524, 1533, 1570, 1610, 1614, 1628, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1661, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1698, 1715, 1716, 1726, 1749, 1758, 1774, 1809, 1818, 1819, 1824, 1856, 1859, 1860, 1867, 1868, 1879, 1881, 1882, 1884, 1888, 1894, 1897, 1898, 1903, 1904, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1919, 1923, 1925, 1928, 1930, 1931, 1936, 1937, 1940, 1941, 1942, 1945, 1947, 1949, 1950, 1960, 1966, 1967, 1969], "devic": [0, 1, 2, 5, 8, 14, 16, 18, 21, 22, 25, 26, 27, 30, 43, 44, 47, 49, 53, 56, 57, 58, 63, 66, 67, 68, 79, 187, 197, 200, 280, 304, 312, 326, 435, 436, 437, 438, 439, 505, 507, 570, 676, 679, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 739, 740, 741, 742, 743, 744, 745, 855, 867, 869, 870, 891, 893, 910, 911, 913, 920, 922, 947, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 975, 976, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 991, 992, 993, 996, 1000, 1001, 1002, 1004, 1005, 1013, 1015, 1016, 1017, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1041, 1042, 1043, 1044, 1048, 1049, 1050, 1073, 1074, 1075, 1085, 1090, 1108, 1124, 1127, 1128, 1157, 1158, 1200, 1204, 1208, 1211, 1214, 1220, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1247, 1248, 1249, 1255, 1258, 1259, 1261, 1262, 1264, 1265, 1271, 1272, 1287, 1290, 1295, 1301, 1305, 1312, 1319, 1321, 1342, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1378, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1440, 1442, 1449, 1450, 1451, 1473, 1477, 1479, 1481, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1544, 1550, 1583, 1598, 1602, 1603, 1604, 1605, 1614, 1616, 1617, 1619, 1620, 1621, 1653, 1660, 1666, 1668, 1671, 1672, 1682, 1722, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1762, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1801, 1802, 1806, 1807, 1808, 1809, 1810, 1811, 1824, 1839, 1841, 1850, 1852, 1861, 1862, 1864, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1892, 1897, 1899, 1903, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1917, 1919, 1920, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1935, 1936, 1940, 1942, 1946, 1947, 1954, 1956, 1958, 1959, 1961, 1964, 1966, 1967, 1969, 1971], "creat": [0, 1, 3, 5, 6, 7, 9, 14, 21, 22, 25, 27, 29, 30, 31, 33, 34, 40, 42, 43, 44, 45, 46, 47, 49, 56, 57, 58, 75, 76, 78, 79, 141, 213, 245, 326, 570, 571, 573, 574, 575, 577, 578, 670, 722, 728, 729, 730, 735, 736, 746, 754, 782, 783, 784, 804, 805, 806, 807, 809, 814, 844, 868, 869, 870, 883, 885, 897, 921, 923, 934, 935, 939, 940, 942, 957, 974, 983, 1015, 1016, 1025, 1060, 1075, 1124, 1125, 1126, 1127, 1197, 1200, 1203, 1213, 1219, 1224, 1230, 1231, 1237, 1239, 1258, 1271, 1287, 1302, 1324, 1350, 1368, 1377, 1378, 1381, 1395, 1401, 1425, 1426, 1434, 1437, 1438, 1439, 1462, 1465, 1466, 1473, 1482, 1483, 1485, 1614, 1632, 1653, 1660, 1665, 1673, 1674, 1693, 1761, 1792, 1804, 1809, 1839, 1846, 1880, 1884, 1885, 1888, 1892, 1896, 1903, 1904, 1907, 1908, 1909, 1910, 1912, 1915, 1916, 1917, 1920, 1923, 1925, 1927, 1928, 1930, 1931, 1936, 1937, 1938, 1940, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1954, 1955, 1956, 1957, 1958, 1959, 1962, 1968, 1969, 1971, 1972], "optim": [0, 1, 2, 7, 8, 11, 14, 15, 22, 25, 26, 27, 31, 47, 49, 57, 809, 898, 907, 942, 945, 1072, 1139, 1200, 1204, 1210, 1212, 1216, 1217, 1256, 1273, 1352, 1353, 1354, 1370, 1377, 1397, 1398, 1399, 1434, 1437, 1438, 1439, 1440, 1466, 1473, 1481, 1583, 1605, 1614, 1621, 1627, 1632, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1712, 1880, 1881, 1883, 1892, 1898, 1902, 1906, 1907, 1908, 1909, 1911, 1912, 1915, 1917, 1925, 1930, 1931, 1940, 1951, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1969], "default": [0, 2, 3, 5, 9, 11, 12, 14, 18, 24, 25, 26, 27, 29, 31, 33, 34, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 53, 54, 55, 57, 58, 62, 63, 65, 66, 67, 68, 72, 75, 76, 78, 141, 146, 161, 163, 166, 169, 170, 171, 186, 197, 200, 231, 258, 281, 288, 316, 322, 384, 435, 436, 437, 438, 439, 448, 486, 489, 490, 510, 515, 570, 571, 573, 670, 684, 687, 702, 703, 704, 705, 706, 707, 710, 720, 721, 722, 723, 725, 745, 748, 750, 758, 759, 760, 762, 763, 764, 769, 775, 783, 788, 793, 798, 799, 804, 807, 809, 810, 811, 812, 815, 818, 819, 820, 821, 822, 823, 824, 825, 831, 832, 833, 834, 835, 836, 838, 839, 844, 845, 846, 848, 855, 869, 870, 883, 884, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 911, 920, 926, 930, 933, 934, 935, 939, 942, 962, 972, 975, 978, 980, 984, 987, 988, 989, 992, 993, 1000, 1001, 1004, 1015, 1017, 1018, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1042, 1043, 1046, 1048, 1049, 1050, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1067, 1072, 1073, 1074, 1075, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1140, 1141, 1145, 1147, 1153, 1157, 1158, 1161, 1162, 1189, 1191, 1197, 1200, 1201, 1204, 1212, 1216, 1217, 1220, 1221, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1287, 1290, 1292, 1298, 1300, 1301, 1302, 1306, 1312, 1328, 1329, 1331, 1332, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1451, 1452, 1453, 1454, 1461, 1465, 1466, 1470, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1532, 1533, 1535, 1537, 1544, 1545, 1552, 1557, 1558, 1559, 1568, 1569, 1571, 1576, 1583, 1589, 1590, 1598, 1602, 1608, 1614, 1615, 1616, 1617, 1619, 1620, 1622, 1623, 1625, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1654, 1655, 1657, 1659, 1660, 1661, 1662, 1664, 1666, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1712, 1720, 1722, 1723, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1744, 1750, 1751, 1754, 1758, 1762, 1763, 1764, 1765, 1766, 1771, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1818, 1819, 1820, 1823, 1824, 1825, 1839, 1840, 1846, 1848, 1850, 1852, 1857, 1858, 1861, 1862, 1864, 1866, 1867, 1868, 1872, 1877, 1878, 1879, 1880, 1881, 1884, 1888, 1890, 1892, 1893, 1896, 1899, 1902, 1903, 1906, 1908, 1909, 1910, 1911, 1913, 1915, 1918, 1919, 1920, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1935, 1936, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1951, 1955, 1957, 1958, 1959, 1963, 1965, 1966, 1968, 1969, 1971, 1972], "net": [0, 6, 15, 33, 52, 57, 1200, 1216, 1217, 1371, 1434, 1614, 1643, 1697, 1883, 1884, 1903, 1904, 1907, 1915, 1945], "sgd": [0, 21, 22, 29, 478, 1377, 1605, 1614, 1698, 1704, 1706, 1903, 1907, 1908, 1915, 1917, 1927, 1936, 1937], "paramet": [0, 1, 2, 3, 5, 11, 12, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 36, 40, 42, 44, 46, 47, 49, 51, 53, 56, 57, 58, 79, 141, 146, 161, 163, 166, 169, 170, 171, 186, 187, 197, 200, 224, 231, 245, 246, 251, 258, 288, 304, 306, 308, 310, 312, 316, 322, 384, 391, 393, 435, 436, 437, 438, 439, 448, 461, 483, 486, 487, 488, 489, 490, 503, 505, 507, 510, 515, 527, 534, 535, 536, 550, 556, 573, 574, 575, 577, 578, 593, 594, 597, 607, 608, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 740, 745, 746, 748, 749, 750, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 781, 783, 785, 787, 789, 790, 791, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 828, 829, 830, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 883, 891, 892, 893, 894, 895, 896, 897, 898, 899, 905, 906, 907, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 948, 949, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 966, 971, 972, 973, 974, 975, 976, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 992, 993, 994, 996, 1000, 1001, 1002, 1004, 1007, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1153, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1174, 1175, 1177, 1179, 1180, 1182, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1207, 1208, 1211, 1212, 1213, 1214, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1312, 1314, 1315, 1316, 1319, 1320, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1530, 1532, 1533, 1535, 1537, 1544, 1545, 1552, 1557, 1558, 1559, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1583, 1589, 1590, 1598, 1602, 1603, 1604, 1605, 1608, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1754, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1771, 1772, 1773, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1794, 1796, 1797, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1828, 1829, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1884, 1886, 1888, 1892, 1893, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1907, 1908, 1909, 1913, 1914, 1915, 1917, 1919, 1920, 1923, 1925, 1928, 1929, 1930, 1931, 1935, 1936, 1937, 1940, 1941, 1942, 1945, 1947, 1949, 1950, 1959, 1968, 1970, 1971], "target": [0, 14, 29, 46, 47, 49, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 489, 725, 756, 757, 782, 787, 849, 851, 852, 927, 1131, 1200, 1210, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1350, 1351, 1357, 1368, 1370, 1382, 1383, 1388, 1394, 1395, 1400, 1401, 1425, 1426, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1465, 1466, 1477, 1486, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1505, 1506, 1514, 1516, 1517, 1528, 1529, 1530, 1541, 1542, 1545, 1546, 1556, 1564, 1565, 1566, 1567, 1568, 1576, 1583, 1587, 1588, 1614, 1692, 1861, 1882, 1884, 1903, 1904, 1907, 1917, 1923, 1925, 1927, 1928, 1931, 1932, 1936, 1945, 1949, 1955, 1956, 1957, 1962, 1968, 1969], "data": [0, 1, 2, 3, 7, 11, 12, 18, 19, 22, 25, 27, 29, 30, 31, 32, 33, 36, 39, 42, 44, 47, 49, 53, 57, 58, 59, 63, 66, 130, 141, 186, 187, 317, 320, 324, 327, 332, 435, 438, 471, 483, 487, 489, 607, 728, 729, 730, 750, 762, 763, 764, 771, 782, 783, 784, 788, 809, 810, 811, 812, 813, 815, 817, 855, 869, 870, 880, 883, 911, 920, 926, 976, 1053, 1054, 1073, 1074, 1075, 1085, 1086, 1087, 1090, 1092, 1093, 1095, 1103, 1104, 1105, 1108, 1111, 1112, 1113, 1114, 1123, 1124, 1126, 1127, 1128, 1130, 1139, 1157, 1158, 1160, 1179, 1182, 1208, 1212, 1216, 1220, 1271, 1272, 1273, 1287, 1292, 1300, 1302, 1315, 1316, 1329, 1331, 1332, 1355, 1357, 1362, 1363, 1364, 1371, 1386, 1389, 1397, 1398, 1399, 1404, 1406, 1421, 1441, 1449, 1450, 1486, 1498, 1503, 1504, 1508, 1509, 1510, 1543, 1550, 1552, 1589, 1590, 1614, 1615, 1616, 1617, 1621, 1653, 1654, 1655, 1656, 1658, 1667, 1671, 1672, 1673, 1674, 1698, 1704, 1712, 1720, 1723, 1724, 1725, 1729, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1745, 1758, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1800, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1839, 1848, 1850, 1852, 1860, 1861, 1862, 1877, 1878, 1880, 1881, 1882, 1885, 1888, 1891, 1892, 1894, 1896, 1899, 1903, 1904, 1905, 1907, 1909, 1910, 1914, 1917, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1931, 1934, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1953, 1957, 1958, 1959, 1961, 1962, 1967, 1971], "zero_grad": [0, 1, 29, 1200, 1434, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1697, 1903, 1907, 1911, 1915, 1917, 1927], "output": [0, 1, 4, 5, 7, 12, 18, 21, 22, 25, 29, 30, 31, 33, 39, 40, 46, 53, 54, 55, 57, 58, 66, 71, 130, 304, 312, 435, 436, 437, 439, 503, 507, 556, 607, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 710, 718, 719, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 762, 763, 764, 765, 767, 769, 770, 771, 772, 773, 775, 776, 777, 782, 783, 784, 786, 789, 792, 804, 807, 848, 851, 852, 853, 855, 864, 865, 868, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 910, 912, 913, 914, 915, 916, 917, 918, 919, 922, 926, 929, 930, 931, 932, 933, 934, 935, 937, 940, 954, 956, 957, 959, 960, 972, 985, 987, 988, 989, 1015, 1016, 1018, 1028, 1029, 1051, 1052, 1053, 1054, 1056, 1059, 1060, 1062, 1064, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1077, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1153, 1156, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1174, 1177, 1194, 1195, 1197, 1200, 1204, 1212, 1216, 1217, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1524, 1525, 1527, 1528, 1529, 1530, 1533, 1535, 1544, 1545, 1550, 1552, 1557, 1558, 1559, 1568, 1569, 1573, 1574, 1575, 1576, 1583, 1598, 1602, 1603, 1604, 1608, 1610, 1611, 1614, 1628, 1629, 1630, 1633, 1654, 1656, 1657, 1661, 1664, 1666, 1667, 1668, 1671, 1672, 1674, 1675, 1693, 1697, 1710, 1711, 1719, 1720, 1723, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1746, 1747, 1751, 1753, 1758, 1766, 1771, 1774, 1776, 1788, 1789, 1791, 1796, 1801, 1802, 1804, 1805, 1813, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1836, 1837, 1838, 1843, 1846, 1848, 1849, 1851, 1854, 1856, 1857, 1858, 1861, 1866, 1867, 1868, 1869, 1872, 1874, 1875, 1877, 1878, 1879, 1881, 1882, 1884, 1888, 1890, 1892, 1897, 1898, 1899, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1918, 1919, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1933, 1937, 1940, 1941, 1943, 1944, 1945, 1947, 1949, 1950, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1968, 1969], "loss_fn": [0, 29, 1692, 1903, 1907, 1908, 1917, 1927], "exit": [0, 1, 2, 4, 18, 25, 33, 42, 49, 56, 57, 884, 1614, 1884, 1896, 1904, 1909, 1917, 1925, 1938, 1962], "befor": [0, 1, 3, 6, 7, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 34, 39, 41, 42, 43, 44, 46, 47, 49, 57, 88, 141, 737, 750, 778, 779, 780, 883, 887, 889, 940, 950, 975, 1053, 1054, 1055, 1064, 1072, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1113, 1114, 1117, 1126, 1129, 1200, 1212, 1214, 1237, 1253, 1257, 1270, 1300, 1312, 1329, 1332, 1371, 1377, 1378, 1381, 1386, 1434, 1435, 1436, 1473, 1477, 1485, 1533, 1552, 1589, 1590, 1605, 1608, 1609, 1610, 1611, 1614, 1621, 1628, 1661, 1664, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1706, 1720, 1723, 1749, 1758, 1769, 1770, 1800, 1803, 1806, 1807, 1808, 1810, 1811, 1820, 1823, 1846, 1857, 1881, 1883, 1884, 1888, 1896, 1903, 1904, 1907, 1908, 1909, 1912, 1914, 1915, 1918, 1920, 1921, 1922, 1923, 1927, 1928, 1929, 1931, 1936, 1937, 1938, 1940, 1941, 1945, 1947, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1965], "step": [0, 1, 2, 4, 9, 14, 21, 22, 25, 26, 27, 29, 31, 43, 46, 49, 53, 57, 70, 528, 597, 676, 758, 759, 847, 855, 884, 885, 886, 913, 937, 1159, 1248, 1271, 1272, 1273, 1287, 1290, 1302, 1382, 1383, 1404, 1501, 1502, 1528, 1529, 1614, 1653, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1729, 1738, 1766, 1792, 1864, 1881, 1882, 1888, 1898, 1903, 1904, 1907, 1908, 1909, 1911, 1915, 1917, 1919, 1921, 1923, 1925, 1928, 1930, 1931, 1936, 1937, 1940, 1945, 1959, 1962, 1963, 1964, 1967, 1969], "usag": [0, 1, 4, 7, 9, 12, 15, 21, 25, 29, 30, 31, 32, 33, 36, 39, 40, 42, 44, 49, 57, 58, 59, 738, 747, 782, 783, 784, 800, 801, 802, 803, 805, 806, 807, 844, 848, 880, 942, 1021, 1041, 1045, 1072, 1123, 1129, 1133, 1134, 1135, 1214, 1273, 1614, 1880, 1881, 1884, 1888, 1894, 1898, 1903, 1904, 1909, 1911, 1923, 1925, 1930, 1938, 1945, 1946, 1948, 1949, 1950, 1957, 1958, 1959, 1960, 1969], "along": [0, 14, 18, 21, 25, 31, 35, 42, 46, 58, 64, 304, 306, 308, 312, 483, 503, 505, 507, 676, 687, 809, 865, 866, 929, 936, 961, 972, 987, 989, 1055, 1063, 1064, 1071, 1072, 1088, 1093, 1096, 1100, 1103, 1106, 1112, 1141, 1142, 1165, 1174, 1177, 1222, 1233, 1269, 1322, 1329, 1333, 1334, 1343, 1344, 1345, 1351, 1369, 1382, 1383, 1424, 1427, 1428, 1429, 1467, 1469, 1498, 1506, 1515, 1528, 1529, 1532, 1535, 1552, 1557, 1558, 1559, 1569, 1589, 1590, 1638, 1640, 1647, 1648, 1657, 1666, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1704, 1723, 1743, 1744, 1749, 1760, 1796, 1800, 1803, 1804, 1812, 1817, 1836, 1840, 1843, 1846, 1855, 1869, 1872, 1874, 1879, 1883, 1888, 1899, 1905, 1909, 1911, 1914, 1915, 1923, 1928, 1931, 1941], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 17, 20, 21, 22, 25, 26, 27, 30, 31, 32, 33, 34, 38, 41, 42, 43, 44, 47, 49, 52, 53, 54, 55, 57, 72, 74, 76, 77, 141, 245, 246, 304, 312, 477, 478, 483, 485, 488, 503, 505, 507, 535, 608, 670, 725, 761, 770, 774, 783, 844, 849, 850, 851, 863, 876, 877, 878, 880, 882, 883, 889, 891, 893, 897, 898, 899, 903, 904, 913, 921, 924, 926, 932, 933, 934, 935, 942, 947, 954, 975, 976, 978, 980, 981, 997, 1016, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1036, 1037, 1038, 1042, 1050, 1055, 1061, 1070, 1072, 1076, 1088, 1089, 1091, 1093, 1112, 1113, 1114, 1115, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1148, 1149, 1153, 1162, 1163, 1175, 1181, 1185, 1187, 1188, 1200, 1214, 1217, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1270, 1273, 1276, 1279, 1281, 1291, 1292, 1315, 1316, 1319, 1330, 1342, 1346, 1351, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1377, 1378, 1379, 1395, 1404, 1430, 1431, 1432, 1434, 1440, 1446, 1447, 1448, 1449, 1461, 1473, 1481, 1498, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1522, 1524, 1525, 1533, 1536, 1537, 1538, 1539, 1544, 1548, 1552, 1553, 1563, 1570, 1577, 1578, 1579, 1581, 1583, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1601, 1602, 1603, 1604, 1605, 1614, 1615, 1621, 1627, 1629, 1630, 1665, 1666, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1710, 1721, 1722, 1748, 1754, 1758, 1766, 1768, 1799, 1800, 1824, 1846, 1848, 1857, 1861, 1864, 1872, 1873, 1879, 1880, 1881, 1883, 1884, 1888, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1915, 1918, 1920, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1937, 1938, 1940, 1943, 1944, 1945, 1946, 1947, 1948, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1967, 1969, 1970, 1971, 1972], "complex": [0, 1, 3, 7, 8, 21, 22, 24, 25, 57, 302, 320, 473, 489, 675, 682, 898, 899, 934, 935, 955, 956, 1067, 1073, 1074, 1075, 1093, 1115, 1120, 1153, 1170, 1179, 1190, 1192, 1193, 1196, 1197, 1200, 1221, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1250, 1253, 1255, 1257, 1258, 1259, 1260, 1264, 1265, 1269, 1270, 1271, 1273, 1281, 1287, 1299, 1304, 1323, 1362, 1363, 1364, 1401, 1434, 1508, 1509, 1510, 1627, 1667, 1716, 1729, 1742, 1763, 1774, 1820, 1821, 1824, 1861, 1869, 1870, 1871, 1879, 1880, 1882, 1884, 1885, 1893, 1917, 1923, 1926, 1942, 1943, 1946, 1947, 1959, 1960, 1961], "scenario": [0, 21, 25, 42, 1673, 1862, 1907, 1912, 1917, 1923, 1925, 1930, 1936, 1959, 1960], "g": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 21, 22, 25, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 45, 46, 49, 52, 54, 56, 57, 58, 65, 66, 570, 607, 738, 747, 750, 783, 784, 805, 807, 844, 849, 851, 852, 879, 888, 898, 899, 923, 954, 1018, 1072, 1123, 1130, 1134, 1135, 1150, 1153, 1175, 1197, 1200, 1207, 1208, 1216, 1272, 1357, 1358, 1371, 1373, 1374, 1375, 1379, 1381, 1386, 1394, 1400, 1404, 1405, 1434, 1435, 1444, 1449, 1465, 1517, 1519, 1520, 1521, 1526, 1533, 1614, 1615, 1616, 1617, 1621, 1664, 1667, 1677, 1678, 1679, 1680, 1683, 1689, 1690, 1691, 1692, 1744, 1751, 1762, 1766, 1769, 1787, 1809, 1820, 1879, 1881, 1883, 1884, 1885, 1888, 1891, 1896, 1903, 1904, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1918, 1919, 1923, 1925, 1927, 1928, 1930, 1931, 1936, 1940, 1943, 1944, 1945, 1955, 1957, 1958, 1959, 1967, 1969, 1970], "penalti": [0, 771, 1029, 1676, 1677, 1678, 1679, 1681, 1683, 1689, 1690, 1692, 1932, 1965], "multipl": [0, 1, 2, 3, 5, 21, 22, 25, 26, 27, 31, 32, 35, 42, 43, 44, 46, 49, 54, 56, 57, 70, 182, 199, 306, 503, 676, 678, 679, 685, 686, 750, 831, 864, 865, 868, 897, 930, 932, 942, 958, 962, 987, 988, 989, 1015, 1070, 1072, 1075, 1126, 1129, 1134, 1135, 1136, 1137, 1140, 1141, 1145, 1149, 1163, 1164, 1214, 1217, 1222, 1223, 1238, 1239, 1240, 1256, 1261, 1266, 1267, 1295, 1298, 1303, 1305, 1350, 1351, 1365, 1366, 1367, 1368, 1370, 1378, 1381, 1386, 1394, 1400, 1401, 1422, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1485, 1505, 1506, 1516, 1525, 1545, 1568, 1576, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1691, 1699, 1700, 1701, 1702, 1703, 1708, 1710, 1766, 1794, 1801, 1802, 1806, 1807, 1808, 1810, 1811, 1840, 1841, 1848, 1856, 1861, 1872, 1873, 1879, 1880, 1883, 1884, 1896, 1897, 1898, 1899, 1904, 1906, 1908, 1910, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1925, 1927, 1928, 1930, 1931, 1932, 1936, 1937, 1938, 1940, 1950, 1951, 1953, 1954, 1958, 1959, 1968], "custom": [0, 1, 3, 5, 14, 15, 21, 25, 26, 27, 28, 29, 35, 38, 39, 41, 46, 47, 49, 58, 60, 71, 73, 74, 75, 76, 78, 489, 783, 787, 804, 805, 806, 807, 828, 830, 849, 850, 851, 852, 889, 942, 944, 974, 983, 1047, 1200, 1434, 1477, 1481, 1482, 1483, 1634, 1643, 1660, 1698, 1862, 1864, 1880, 1885, 1888, 1890, 1896, 1897, 1904, 1914, 1919, 1920, 1921, 1923, 1934, 1935, 1949, 1951, 1958, 1960, 1962], "autograd": [0, 4, 5, 7, 8, 12, 25, 29, 31, 46, 49, 50, 53, 58, 130, 326, 435, 436, 437, 438, 439, 478, 486, 679, 855, 869, 870, 884, 911, 920, 939, 944, 954, 1018, 1073, 1074, 1075, 1085, 1090, 1108, 1126, 1127, 1128, 1129, 1130, 1139, 1141, 1157, 1158, 1175, 1200, 1220, 1240, 1271, 1287, 1295, 1305, 1388, 1434, 1440, 1481, 1535, 1550, 1614, 1671, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1770, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1798, 1806, 1807, 1808, 1809, 1810, 1811, 1839, 1872, 1877, 1878, 1880, 1882, 1886, 1888, 1891, 1899, 1902, 1907, 1908, 1911, 1912, 1914, 1915, 1930, 1946, 1947, 1951, 1959, 1960, 1965, 1969, 1970], "function": [0, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 26, 27, 29, 32, 33, 35, 39, 40, 42, 43, 46, 47, 49, 52, 54, 56, 58, 60, 61, 65, 66, 69, 71, 72, 74, 75, 78, 79, 110, 141, 186, 251, 280, 289, 312, 477, 478, 483, 486, 507, 531, 546, 670, 679, 683, 684, 688, 689, 738, 747, 748, 750, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 780, 781, 782, 783, 787, 788, 790, 804, 805, 806, 807, 814, 816, 828, 831, 844, 847, 849, 851, 852, 853, 867, 868, 883, 884, 885, 886, 897, 898, 899, 903, 904, 907, 911, 920, 922, 930, 932, 936, 939, 942, 944, 945, 946, 948, 950, 954, 955, 956, 965, 966, 967, 968, 969, 970, 971, 973, 974, 976, 978, 980, 983, 1000, 1001, 1004, 1009, 1010, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1028, 1029, 1036, 1037, 1039, 1040, 1041, 1045, 1055, 1060, 1062, 1063, 1070, 1072, 1076, 1088, 1089, 1091, 1111, 1115, 1118, 1119, 1120, 1123, 1126, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1145, 1146, 1153, 1157, 1158, 1159, 1161, 1163, 1171, 1172, 1173, 1175, 1187, 1197, 1198, 1199, 1200, 1201, 1203, 1205, 1206, 1207, 1211, 1212, 1213, 1214, 1216, 1218, 1220, 1221, 1222, 1224, 1229, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1252, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1276, 1278, 1287, 1290, 1291, 1295, 1298, 1301, 1303, 1305, 1306, 1307, 1326, 1329, 1330, 1346, 1350, 1356, 1357, 1359, 1360, 1361, 1368, 1372, 1376, 1379, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1400, 1402, 1403, 1404, 1405, 1420, 1423, 1424, 1426, 1433, 1434, 1439, 1440, 1442, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1477, 1479, 1481, 1482, 1483, 1485, 1487, 1489, 1490, 1491, 1606, 1610, 1611, 1614, 1621, 1627, 1628, 1632, 1643, 1653, 1654, 1655, 1657, 1660, 1661, 1662, 1664, 1665, 1667, 1668, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1690, 1691, 1692, 1694, 1697, 1698, 1700, 1703, 1704, 1705, 1710, 1711, 1712, 1716, 1722, 1729, 1733, 1738, 1751, 1760, 1761, 1762, 1765, 1768, 1774, 1782, 1786, 1787, 1792, 1795, 1797, 1798, 1799, 1800, 1801, 1803, 1809, 1816, 1820, 1826, 1827, 1836, 1840, 1842, 1846, 1856, 1857, 1858, 1861, 1862, 1869, 1870, 1871, 1872, 1873, 1878, 1879, 1880, 1885, 1888, 1890, 1893, 1894, 1896, 1898, 1902, 1905, 1907, 1908, 1909, 1911, 1914, 1915, 1917, 1918, 1923, 1927, 1928, 1929, 1930, 1931, 1933, 1935, 1936, 1937, 1938, 1943, 1945, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1960, 1962, 1964, 1965, 1966, 1968, 1969], "autocastmodel": 0, "nn": [0, 3, 5, 12, 15, 21, 22, 25, 26, 27, 29, 30, 43, 46, 47, 49, 50, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 289, 531, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 782, 783, 804, 844, 849, 850, 851, 852, 854, 1015, 1018, 1072, 1129, 1138, 1139, 1198, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1210, 1211, 1212, 1216, 1217, 1218, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1605, 1614, 1615, 1616, 1617, 1629, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1653, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1795, 1820, 1861, 1862, 1879, 1880, 1881, 1882, 1886, 1898, 1899, 1903, 1908, 1911, 1915, 1917, 1918, 1919, 1922, 1923, 1925, 1927, 1928, 1929, 1931, 1933, 1936, 1945, 1947, 1950, 1955, 1958, 1959, 1962, 1967, 1968, 1969], "modul": [0, 1, 3, 5, 6, 8, 11, 12, 14, 18, 22, 25, 27, 29, 30, 34, 36, 39, 42, 43, 46, 47, 49, 50, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 477, 478, 670, 676, 679, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 728, 729, 730, 735, 736, 737, 746, 751, 752, 753, 754, 755, 778, 779, 780, 781, 782, 783, 787, 789, 790, 792, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 828, 829, 830, 844, 847, 848, 849, 850, 851, 852, 854, 903, 904, 910, 922, 942, 1018, 1129, 1138, 1139, 1141, 1175, 1198, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1216, 1217, 1218, 1272, 1295, 1305, 1342, 1346, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1387, 1389, 1397, 1398, 1399, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1435, 1436, 1444, 1445, 1450, 1462, 1467, 1473, 1477, 1481, 1524, 1525, 1598, 1605, 1614, 1615, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1656, 1660, 1661, 1662, 1664, 1693, 1754, 1799, 1862, 1864, 1865, 1872, 1879, 1880, 1885, 1888, 1890, 1892, 1894, 1896, 1898, 1899, 1902, 1906, 1907, 1908, 1911, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1927, 1929, 1930, 1933, 1934, 1936, 1939, 1940, 1941, 1945, 1948, 1949, 1950, 1955, 1956, 1958, 1959, 1963, 1967, 1968, 1969, 1970], "def": [0, 1, 12, 21, 22, 25, 26, 27, 31, 33, 34, 35, 39, 40, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 389, 782, 783, 851, 852, 880, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 942, 947, 954, 1076, 1129, 1130, 1131, 1133, 1134, 1135, 1137, 1139, 1140, 1141, 1175, 1198, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1211, 1212, 1215, 1216, 1217, 1218, 1434, 1435, 1436, 1444, 1445, 1483, 1583, 1605, 1614, 1632, 1665, 1799, 1872, 1879, 1881, 1883, 1884, 1888, 1898, 1903, 1904, 1906, 1908, 1909, 1910, 1911, 1915, 1917, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1936, 1937, 1938, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1967, 1968, 1969, 1970], "self": [0, 1, 9, 12, 18, 21, 22, 25, 27, 33, 34, 39, 44, 46, 47, 49, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 88, 130, 141, 144, 145, 146, 161, 163, 166, 169, 170, 171, 181, 182, 186, 187, 199, 207, 209, 223, 224, 231, 245, 246, 249, 250, 258, 277, 281, 288, 302, 304, 306, 308, 310, 312, 314, 316, 317, 319, 320, 321, 322, 324, 332, 368, 384, 389, 391, 392, 393, 444, 461, 471, 473, 487, 488, 489, 490, 503, 505, 507, 510, 513, 515, 527, 533, 534, 535, 536, 548, 550, 570, 571, 573, 574, 575, 577, 578, 594, 597, 598, 604, 607, 608, 610, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 851, 852, 908, 1129, 1130, 1139, 1170, 1198, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1211, 1212, 1216, 1217, 1218, 1342, 1346, 1379, 1386, 1404, 1433, 1434, 1435, 1436, 1440, 1444, 1445, 1449, 1461, 1463, 1473, 1479, 1481, 1563, 1586, 1605, 1629, 1630, 1632, 1638, 1640, 1653, 1662, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1719, 1740, 1881, 1882, 1883, 1884, 1888, 1894, 1897, 1898, 1902, 1904, 1905, 1906, 1909, 1911, 1915, 1920, 1923, 1925, 1928, 1929, 1931, 1936, 1942, 1955, 1956, 1962, 1964, 1967, 1968, 1969], "produc": [0, 7, 14, 21, 25, 27, 32, 34, 36, 39, 44, 46, 47, 54, 55, 56, 57, 70, 79, 722, 728, 729, 730, 735, 736, 746, 754, 782, 783, 913, 933, 1011, 1103, 1104, 1105, 1123, 1134, 1135, 1141, 1153, 1212, 1216, 1217, 1220, 1236, 1237, 1240, 1247, 1248, 1259, 1264, 1298, 1301, 1302, 1303, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415, 1440, 1517, 1525, 1533, 1544, 1602, 1603, 1604, 1667, 1693, 1722, 1729, 1738, 1824, 1861, 1872, 1881, 1883, 1884, 1896, 1897, 1903, 1904, 1905, 1907, 1909, 1913, 1914, 1915, 1918, 1919, 1920, 1921, 1925, 1940, 1944, 1955, 1957, 1959, 1962, 1965, 1969], "after": [0, 1, 7, 9, 12, 14, 21, 22, 25, 26, 27, 29, 30, 42, 44, 49, 56, 57, 58, 63, 64, 251, 478, 670, 750, 780, 847, 849, 851, 852, 883, 884, 887, 942, 950, 973, 975, 1011, 1018, 1071, 1130, 1185, 1200, 1204, 1256, 1272, 1295, 1312, 1338, 1371, 1386, 1419, 1434, 1437, 1477, 1479, 1481, 1498, 1533, 1605, 1608, 1614, 1632, 1634, 1638, 1640, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1697, 1698, 1704, 1706, 1762, 1820, 1846, 1862, 1864, 1874, 1879, 1883, 1884, 1894, 1896, 1902, 1903, 1904, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1917, 1918, 1925, 1927, 1928, 1930, 1931, 1936, 1937, 1938, 1939, 1941, 1943, 1945, 1954, 1956, 1959, 1960, 1962, 1963, 1965, 1967, 1968, 1969], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 44, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 110, 144, 146, 161, 163, 166, 169, 170, 171, 181, 182, 186, 187, 197, 199, 200, 207, 209, 210, 212, 223, 224, 231, 233, 245, 251, 258, 280, 288, 302, 310, 314, 316, 317, 319, 320, 321, 322, 324, 328, 330, 332, 343, 368, 384, 425, 435, 436, 437, 438, 439, 448, 462, 463, 464, 465, 466, 468, 473, 477, 478, 486, 487, 488, 503, 505, 513, 515, 527, 533, 534, 546, 547, 548, 549, 550, 570, 571, 572, 573, 579, 593, 594, 597, 599, 603, 604, 607, 674, 682, 683, 685, 686, 687, 688, 689, 725, 756, 757, 760, 761, 765, 766, 767, 768, 771, 774, 781, 782, 783, 784, 804, 805, 806, 807, 826, 830, 831, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 863, 864, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 907, 908, 909, 911, 912, 913, 920, 921, 923, 926, 928, 930, 931, 932, 933, 935, 936, 937, 939, 941, 942, 943, 944, 945, 947, 949, 954, 955, 956, 958, 959, 960, 962, 965, 966, 967, 968, 970, 972, 973, 975, 976, 978, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1066, 1072, 1073, 1074, 1075, 1076, 1077, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1108, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1144, 1145, 1148, 1149, 1150, 1151, 1152, 1156, 1157, 1158, 1160, 1161, 1162, 1166, 1170, 1174, 1175, 1176, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1197, 1198, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1225, 1226, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1280, 1281, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1309, 1310, 1312, 1313, 1319, 1324, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1338, 1342, 1343, 1344, 1345, 1350, 1351, 1368, 1369, 1370, 1371, 1378, 1382, 1383, 1394, 1400, 1401, 1424, 1425, 1426, 1427, 1428, 1429, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1444, 1445, 1448, 1462, 1465, 1466, 1467, 1468, 1469, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1503, 1505, 1506, 1507, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1576, 1578, 1579, 1581, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1596, 1598, 1599, 1600, 1601, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1686, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1751, 1753, 1758, 1759, 1760, 1761, 1767, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1796, 1798, 1799, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1819, 1820, 1823, 1824, 1825, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1863, 1864, 1866, 1868, 1870, 1871, 1872, 1875, 1877, 1878, 1879, 1881, 1885, 1888, 1892, 1893, 1894, 1896, 1898, 1899, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1967, 1968, 1969, 1970, 1971, 1972], "disabl": [0, 2, 5, 26, 31, 49, 57, 800, 801, 942, 1018, 1072, 1076, 1129, 1175, 1200, 1202, 1216, 1217, 1434, 1440, 1473, 1481, 1583, 1614, 1615, 1662, 1665, 1767, 1768, 1771, 1799, 1880, 1883, 1890, 1903, 1906, 1907, 1908, 1909, 1913, 1918, 1919, 1925, 1929, 1935, 1940, 1947, 1958, 1963, 1966, 1969, 1971], "them": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 21, 25, 27, 30, 33, 34, 39, 42, 44, 46, 49, 53, 54, 56, 57, 141, 212, 245, 724, 883, 889, 893, 924, 1018, 1057, 1060, 1072, 1200, 1222, 1231, 1242, 1256, 1268, 1272, 1300, 1332, 1358, 1377, 1434, 1467, 1469, 1589, 1639, 1654, 1657, 1694, 1803, 1805, 1823, 1857, 1862, 1864, 1879, 1883, 1884, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1907, 1909, 1910, 1911, 1913, 1914, 1915, 1919, 1921, 1927, 1929, 1930, 1931, 1932, 1936, 1937, 1938, 1940, 1941, 1945, 1946, 1949, 1956, 1957, 1958, 1959, 1962, 1965, 1966, 1968, 1969], "differ": [0, 1, 3, 5, 8, 14, 18, 21, 25, 27, 29, 30, 31, 33, 34, 35, 39, 40, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 57, 187, 476, 483, 607, 670, 676, 679, 685, 686, 725, 750, 783, 786, 787, 812, 814, 815, 851, 852, 855, 869, 870, 898, 899, 910, 922, 923, 962, 1055, 1060, 1062, 1064, 1072, 1112, 1113, 1114, 1118, 1119, 1126, 1129, 1134, 1135, 1141, 1153, 1174, 1200, 1206, 1211, 1216, 1230, 1236, 1237, 1247, 1248, 1256, 1259, 1264, 1268, 1295, 1305, 1342, 1351, 1352, 1353, 1354, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1386, 1387, 1395, 1397, 1398, 1399, 1400, 1404, 1405, 1421, 1434, 1437, 1440, 1455, 1456, 1458, 1459, 1460, 1462, 1465, 1473, 1479, 1481, 1483, 1486, 1489, 1490, 1491, 1498, 1506, 1524, 1533, 1544, 1546, 1557, 1558, 1559, 1583, 1605, 1614, 1616, 1617, 1627, 1662, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1698, 1706, 1712, 1722, 1744, 1818, 1819, 1824, 1846, 1857, 1858, 1861, 1867, 1868, 1872, 1879, 1881, 1883, 1884, 1886, 1890, 1891, 1896, 1897, 1899, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1915, 1917, 1918, 1919, 1921, 1923, 1927, 1928, 1929, 1930, 1931, 1932, 1936, 1938, 1940, 1943, 1945, 1946, 1947, 1950, 1951, 1953, 1956, 1958, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1969], "caus": [0, 1, 2, 3, 5, 14, 18, 21, 24, 25, 29, 35, 41, 42, 43, 46, 54, 57, 75, 546, 607, 867, 870, 883, 945, 1126, 1212, 1216, 1236, 1237, 1264, 1319, 1544, 1545, 1602, 1605, 1614, 1666, 1675, 1762, 1773, 1820, 1861, 1881, 1884, 1896, 1905, 1907, 1909, 1911, 1917, 1919, 1921, 1925, 1928, 1931, 1932, 1938, 1940, 1943, 1954, 1958, 1960], "mismatch": [0, 25, 57, 76, 78, 870, 1201, 1674, 1675, 1883, 1903, 1908, 1909, 1911, 1925, 1947], "error": [0, 1, 5, 8, 14, 17, 18, 21, 22, 25, 26, 28, 30, 31, 40, 42, 43, 46, 49, 52, 54, 56, 57, 58, 59, 73, 74, 75, 76, 78, 181, 212, 304, 306, 312, 314, 319, 478, 535, 546, 604, 607, 670, 809, 855, 868, 870, 889, 891, 892, 893, 894, 895, 896, 897, 973, 983, 1007, 1018, 1029, 1042, 1046, 1070, 1129, 1133, 1134, 1136, 1141, 1163, 1200, 1205, 1215, 1230, 1231, 1240, 1242, 1244, 1247, 1248, 1249, 1259, 1262, 1272, 1290, 1319, 1324, 1350, 1351, 1384, 1395, 1401, 1425, 1434, 1463, 1465, 1531, 1542, 1564, 1583, 1586, 1587, 1614, 1616, 1617, 1619, 1662, 1667, 1674, 1675, 1718, 1758, 1765, 1809, 1815, 1820, 1861, 1864, 1872, 1873, 1879, 1880, 1881, 1883, 1884, 1890, 1891, 1896, 1897, 1898, 1899, 1903, 1904, 1907, 1909, 1910, 1912, 1913, 1919, 1923, 1925, 1928, 1934, 1936, 1941, 1946, 1947, 1949, 1950, 1954, 1957, 1958, 1959, 1971], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 19, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 65, 66, 67, 68, 73, 74, 75, 76, 78, 88, 141, 145, 186, 197, 200, 245, 306, 310, 312, 435, 436, 437, 438, 439, 448, 461, 471, 486, 489, 507, 510, 527, 535, 570, 571, 573, 574, 575, 577, 578, 593, 597, 607, 670, 676, 679, 680, 681, 683, 685, 686, 687, 689, 725, 746, 750, 754, 769, 771, 775, 784, 785, 807, 810, 811, 812, 815, 844, 848, 851, 855, 864, 865, 866, 867, 868, 869, 870, 879, 881, 882, 883, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 910, 911, 913, 920, 922, 923, 924, 926, 930, 932, 933, 936, 937, 944, 947, 951, 955, 956, 957, 961, 962, 972, 975, 976, 978, 980, 983, 985, 987, 989, 996, 1007, 1013, 1018, 1019, 1039, 1042, 1053, 1054, 1055, 1059, 1060, 1061, 1062, 1063, 1072, 1073, 1074, 1075, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1115, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1140, 1141, 1142, 1153, 1157, 1158, 1160, 1161, 1162, 1163, 1174, 1177, 1191, 1197, 1200, 1203, 1204, 1205, 1208, 1210, 1212, 1213, 1216, 1217, 1220, 1221, 1222, 1226, 1230, 1231, 1236, 1237, 1239, 1240, 1242, 1243, 1244, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1283, 1287, 1288, 1290, 1292, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1319, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1342, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1386, 1387, 1388, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1419, 1421, 1425, 1426, 1427, 1428, 1429, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1465, 1466, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1489, 1490, 1491, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1533, 1535, 1537, 1544, 1545, 1550, 1552, 1554, 1555, 1557, 1558, 1559, 1568, 1569, 1570, 1573, 1576, 1577, 1583, 1589, 1590, 1601, 1602, 1608, 1614, 1615, 1619, 1620, 1622, 1623, 1625, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1653, 1654, 1655, 1656, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1710, 1711, 1716, 1720, 1722, 1723, 1727, 1728, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1743, 1744, 1749, 1751, 1754, 1758, 1760, 1762, 1765, 1766, 1771, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1796, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1815, 1818, 1819, 1820, 1823, 1824, 1836, 1839, 1840, 1842, 1843, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1857, 1858, 1861, 1864, 1866, 1867, 1868, 1872, 1877, 1878, 1879, 1881, 1884, 1886, 1888, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1968, 1969, 1970, 1971], "so": [0, 1, 2, 3, 7, 9, 14, 17, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 42, 43, 45, 46, 47, 49, 52, 53, 54, 56, 57, 58, 67, 68, 326, 448, 486, 670, 849, 884, 889, 891, 892, 897, 939, 942, 947, 974, 997, 1060, 1062, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1123, 1126, 1129, 1133, 1134, 1136, 1137, 1187, 1197, 1200, 1203, 1204, 1210, 1212, 1214, 1256, 1258, 1268, 1273, 1278, 1290, 1311, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1378, 1381, 1388, 1434, 1450, 1467, 1469, 1485, 1498, 1508, 1509, 1510, 1533, 1589, 1590, 1605, 1614, 1666, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1788, 1803, 1815, 1820, 1824, 1845, 1857, 1862, 1866, 1881, 1883, 1884, 1890, 1892, 1894, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1925, 1927, 1928, 1931, 1935, 1936, 1940, 1941, 1943, 1945, 1946, 1948, 1954, 1957, 1958, 1959, 1960, 1962, 1963, 1965, 1968, 1969, 1971], "cast": [0, 6, 22, 40, 49, 77, 326, 593, 594, 927, 1053, 1054, 1200, 1253, 1257, 1270, 1300, 1329, 1332, 1434, 1552, 1589, 1590, 1667, 1720, 1800, 1803, 1809, 1823, 1828, 1829, 1881, 1903, 1918, 1925, 1941, 1942, 1943, 1959], "back": [0, 1, 2, 14, 21, 22, 25, 27, 30, 31, 42, 46, 49, 54, 57, 58, 63, 66, 725, 827, 898, 939, 942, 1092, 1124, 1130, 1201, 1214, 1266, 1272, 1480, 1619, 1620, 1621, 1805, 1879, 1881, 1884, 1904, 1909, 1910, 1917, 1918, 1919, 1925, 1927, 1928, 1931, 1936, 1940, 1942, 1954, 1959, 1961, 1962, 1970], "from": [0, 1, 3, 5, 6, 7, 8, 9, 14, 15, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 39, 40, 42, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 60, 61, 63, 64, 65, 66, 69, 70, 71, 72, 75, 79, 144, 145, 164, 187, 212, 213, 224, 249, 277, 304, 306, 310, 312, 368, 393, 438, 444, 461, 463, 464, 471, 476, 477, 478, 483, 489, 503, 505, 507, 534, 536, 550, 570, 597, 598, 600, 607, 670, 702, 703, 704, 705, 706, 707, 710, 718, 719, 722, 725, 728, 729, 730, 731, 732, 733, 735, 736, 746, 750, 754, 762, 763, 764, 771, 778, 779, 782, 783, 784, 787, 790, 805, 806, 807, 814, 816, 830, 844, 848, 850, 851, 852, 854, 855, 869, 870, 881, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 903, 904, 911, 912, 920, 921, 926, 927, 939, 974, 975, 978, 987, 988, 989, 1007, 1011, 1029, 1056, 1072, 1073, 1074, 1075, 1092, 1094, 1095, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1112, 1113, 1114, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1157, 1158, 1162, 1177, 1197, 1198, 1200, 1201, 1203, 1205, 1206, 1207, 1208, 1211, 1212, 1224, 1240, 1244, 1253, 1256, 1257, 1270, 1271, 1272, 1273, 1287, 1291, 1292, 1305, 1310, 1312, 1315, 1316, 1317, 1319, 1324, 1333, 1334, 1342, 1346, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1387, 1388, 1389, 1395, 1397, 1398, 1399, 1400, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1435, 1436, 1440, 1444, 1445, 1449, 1451, 1452, 1473, 1478, 1479, 1481, 1483, 1485, 1486, 1498, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1533, 1535, 1544, 1557, 1558, 1559, 1571, 1601, 1605, 1614, 1619, 1621, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1647, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1664, 1668, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1712, 1715, 1723, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1744, 1745, 1748, 1750, 1751, 1758, 1771, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1821, 1825, 1836, 1839, 1848, 1850, 1852, 1857, 1858, 1861, 1863, 1864, 1866, 1875, 1880, 1881, 1882, 1883, 1884, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1902, 1904, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1922, 1923, 1927, 1929, 1930, 1931, 1932, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1966, 1967, 1968, 1969, 1970, 1971], "alreadi": [0, 1, 11, 21, 22, 25, 26, 42, 43, 49, 56, 57, 186, 197, 200, 453, 476, 514, 570, 593, 594, 782, 830, 844, 848, 869, 983, 1009, 1200, 1210, 1272, 1434, 1609, 1614, 1653, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1855, 1857, 1864, 1879, 1881, 1891, 1893, 1897, 1898, 1903, 1904, 1907, 1909, 1912, 1917, 1925, 1927, 1928, 1931, 1937, 1938, 1940, 1942, 1944, 1954, 1956, 1958], "incur": [0, 5, 22, 25, 49, 932, 1917, 1936], "addit": [0, 1, 3, 5, 7, 9, 14, 15, 21, 25, 26, 27, 31, 36, 42, 43, 47, 49, 56, 57, 58, 66, 326, 503, 597, 739, 741, 742, 743, 744, 748, 750, 771, 785, 804, 849, 1029, 1197, 1200, 1204, 1210, 1215, 1342, 1353, 1354, 1355, 1365, 1366, 1367, 1378, 1385, 1386, 1388, 1395, 1398, 1399, 1406, 1413, 1414, 1415, 1419, 1420, 1421, 1422, 1424, 1430, 1431, 1432, 1434, 1440, 1442, 1467, 1469, 1473, 1477, 1479, 1481, 1483, 1504, 1511, 1512, 1513, 1550, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1766, 1857, 1858, 1861, 1870, 1881, 1883, 1884, 1890, 1894, 1897, 1898, 1899, 1904, 1906, 1907, 1909, 1910, 1914, 1917, 1918, 1921, 1925, 1930, 1931, 1932, 1934, 1936, 1937, 1938, 1940, 1944, 1947, 1954, 1957, 1959, 1965, 1966, 1969, 1971], "overhead": [0, 1, 3, 4, 8, 22, 25, 49, 771, 942, 947, 1029, 1212, 1614, 1621, 1904, 1906, 1907, 1908, 1913, 1914, 1917, 1929, 1930, 1937, 1940, 1946, 1954, 1958, 1959, 1961, 1962, 1963], "here": [0, 1, 7, 8, 9, 12, 15, 18, 21, 22, 25, 26, 31, 41, 43, 46, 47, 51, 52, 53, 54, 56, 57, 76, 78, 570, 783, 784, 960, 981, 1072, 1089, 1091, 1092, 1097, 1098, 1099, 1101, 1102, 1107, 1109, 1129, 1139, 1198, 1212, 1352, 1353, 1354, 1365, 1366, 1367, 1397, 1398, 1399, 1442, 1473, 1533, 1535, 1621, 1629, 1690, 1693, 1704, 1766, 1791, 1879, 1881, 1883, 1884, 1886, 1897, 1898, 1899, 1903, 1904, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1921, 1925, 1927, 1928, 1929, 1931, 1934, 1940, 1944, 1945, 1947, 1954, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1966, 1967, 1969], "assum": [0, 11, 12, 21, 25, 30, 31, 33, 35, 42, 43, 46, 47, 49, 52, 55, 57, 807, 954, 1055, 1090, 1093, 1095, 1103, 1104, 1105, 1108, 1191, 1197, 1198, 1201, 1216, 1236, 1237, 1239, 1246, 1255, 1258, 1261, 1263, 1273, 1357, 1426, 1486, 1517, 1583, 1614, 1629, 1632, 1657, 1694, 1695, 1700, 1701, 1702, 1705, 1707, 1708, 1712, 1825, 1846, 1848, 1864, 1879, 1881, 1883, 1884, 1888, 1897, 1904, 1907, 1909, 1910, 1912, 1914, 1917, 1918, 1925, 1927, 1928, 1929, 1936, 1937, 1938, 1940, 1956, 1957, 1965], "a_float32": 0, "rand": [0, 1, 18, 31, 46, 57, 326, 683, 689, 891, 892, 893, 894, 895, 896, 947, 962, 1015, 1016, 1089, 1091, 1094, 1095, 1097, 1098, 1101, 1102, 1104, 1105, 1107, 1109, 1131, 1206, 1207, 1212, 1216, 1217, 1218, 1274, 1275, 1277, 1350, 1400, 1477, 1478, 1479, 1480, 1481, 1505, 1524, 1525, 1583, 1614, 1632, 1665, 1715, 1726, 1727, 1728, 1732, 1881, 1882, 1883, 1884, 1886, 1897, 1898, 1909, 1923, 1925, 1926, 1929, 1931, 1936, 1937, 1940, 1941, 1944, 1945, 1948, 1964, 1967], "8": [0, 1, 14, 20, 21, 22, 25, 31, 33, 46, 58, 63, 304, 306, 308, 312, 392, 393, 461, 503, 507, 550, 597, 607, 675, 676, 687, 688, 735, 736, 751, 753, 755, 763, 764, 810, 811, 812, 815, 894, 913, 921, 932, 935, 936, 940, 1015, 1016, 1051, 1055, 1070, 1075, 1088, 1104, 1105, 1111, 1112, 1115, 1122, 1153, 1162, 1163, 1224, 1253, 1256, 1257, 1258, 1266, 1268, 1271, 1272, 1333, 1334, 1339, 1340, 1341, 1343, 1344, 1345, 1358, 1369, 1404, 1430, 1431, 1437, 1439, 1441, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1473, 1477, 1478, 1479, 1480, 1481, 1485, 1509, 1512, 1515, 1571, 1576, 1581, 1582, 1583, 1621, 1667, 1668, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1698, 1706, 1711, 1715, 1719, 1739, 1749, 1750, 1751, 1758, 1766, 1771, 1778, 1781, 1786, 1792, 1796, 1804, 1806, 1807, 1812, 1820, 1824, 1835, 1840, 1841, 1842, 1844, 1846, 1855, 1859, 1861, 1866, 1873, 1881, 1885, 1891, 1907, 1909, 1920, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1934, 1936, 1940, 1941, 1943, 1944, 1946, 1956, 1962, 1969], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 1204, 1256, 1295, 1444, 1445, 1722, 1824, 1861, 1882, 1883, 1897, 1903, 1906, 1909, 1918, 1926, 1940, 1963, 1964], "list": [0, 1, 3, 5, 6, 7, 9, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 33, 42, 44, 46, 47, 49, 54, 56, 57, 58, 59, 63, 64, 65, 66, 74, 175, 232, 293, 435, 437, 439, 568, 573, 574, 575, 579, 609, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 782, 783, 788, 804, 805, 806, 807, 828, 844, 851, 869, 876, 877, 878, 924, 925, 928, 932, 936, 941, 942, 944, 949, 999, 1005, 1057, 1070, 1072, 1073, 1112, 1127, 1139, 1153, 1163, 1200, 1204, 1206, 1207, 1212, 1214, 1216, 1217, 1300, 1302, 1332, 1371, 1377, 1406, 1434, 1436, 1445, 1462, 1473, 1484, 1524, 1598, 1614, 1615, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1667, 1671, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1698, 1700, 1702, 1703, 1704, 1706, 1707, 1725, 1727, 1728, 1731, 1735, 1750, 1787, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1818, 1819, 1823, 1839, 1840, 1841, 1857, 1858, 1861, 1862, 1864, 1867, 1868, 1873, 1877, 1879, 1881, 1882, 1885, 1886, 1890, 1892, 1894, 1897, 1898, 1899, 1909, 1913, 1915, 1918, 1919, 1920, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1936, 1937, 1940, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1963, 1967, 1968, 1969, 1970, 1971], "No": [0, 9, 12, 45, 47, 56, 58, 66, 890, 1614, 1621, 1665, 1883, 1907, 1925, 1934, 1944, 1947, 1954], "manual": [0, 21, 25, 40, 42, 43, 45, 49, 57, 787, 828, 868, 897, 947, 1162, 1204, 1350, 1351, 1370, 1438, 1439, 1441, 1462, 1481, 1505, 1506, 1516, 1568, 1632, 1653, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1881, 1884, 1896, 1903, 1907, 1909, 1910, 1911, 1912, 1915, 1921, 1925, 1931, 1932, 1945, 1957, 1966], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 14, 21, 22, 25, 26, 27, 29, 30, 33, 34, 35, 42, 43, 49, 56, 57, 477, 478, 830, 880, 890, 903, 904, 944, 957, 975, 990, 1017, 1030, 1072, 1118, 1119, 1141, 1200, 1231, 1371, 1434, 1481, 1483, 1533, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1742, 1788, 1825, 1872, 1879, 1894, 1896, 1898, 1907, 1909, 1910, 1911, 1912, 1917, 1922, 1923, 1925, 1928, 1931, 1936, 1938, 1947, 1948, 1954, 1958, 1960, 1962, 1965], "f_float16": 0, "g_float32": 0, "epoch": [0, 21, 35, 45, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1894, 1903, 1917, 1927, 1945], "eval": [0, 57, 804, 850, 851, 1139, 1200, 1204, 1210, 1216, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1440, 1473, 1481, 1622, 1624, 1628, 1884, 1892, 1915, 1922, 1925, 1931, 1950, 1957, 1970], "jit": [0, 11, 14, 46, 1015, 1016, 1047, 1150, 1198, 1199, 1200, 1215, 1673, 1674, 1769, 1770, 1880, 1883, 1886, 1892, 1898, 1906, 1914, 1920, 1922, 1925, 1931, 1936, 1945, 1955, 1956, 1957, 1959, 1961], "trace": [0, 1, 5, 12, 15, 18, 21, 22, 25, 35, 46, 47, 58, 61, 62, 63, 64, 67, 68, 70, 670, 905, 906, 907, 942, 954, 1072, 1203, 1212, 1213, 1217, 1273, 1315, 1316, 1317, 1675, 1863, 1880, 1882, 1883, 1884, 1886, 1890, 1904, 1907, 1908, 1920, 1922, 1923, 1926, 1928, 1945, 1951, 1955, 1957, 1958, 1961, 1962, 1963, 1965, 1969, 1971], "testmodel": 0, "__init__": [0, 1, 12, 21, 22, 25, 31, 46, 57, 58, 63, 65, 66, 68, 851, 852, 1139, 1198, 1201, 1203, 1206, 1207, 1212, 1216, 1217, 1218, 1434, 1435, 1436, 1444, 1445, 1605, 1881, 1883, 1884, 1894, 1904, 1909, 1911, 1915, 1920, 1923, 1925, 1928, 1931, 1945, 1955, 1957, 1967, 1968, 1969], "input_s": [0, 724, 750, 751, 755, 1386, 1387, 1404, 1405, 1449, 1450, 1451, 1882], "num_class": [0, 1570, 1882, 1961], "super": [0, 9, 12, 21, 22, 25, 27, 46, 57, 58, 63, 65, 66, 68, 851, 852, 1139, 1198, 1203, 1206, 1207, 1212, 1216, 1217, 1218, 1434, 1435, 1436, 1444, 1445, 1446, 1447, 1605, 1704, 1881, 1883, 1884, 1885, 1904, 1909, 1915, 1920, 1923, 1925, 1928, 1931, 1955, 1967, 1968, 1969], "fc1": [0, 22, 1605, 1923, 1929], "x": [0, 1, 3, 11, 12, 14, 21, 22, 25, 31, 33, 39, 46, 47, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 164, 245, 249, 277, 280, 302, 304, 306, 308, 312, 343, 368, 438, 473, 483, 489, 548, 550, 573, 597, 598, 607, 682, 748, 750, 760, 769, 770, 774, 775, 786, 789, 792, 810, 811, 851, 852, 868, 874, 876, 877, 878, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 924, 925, 926, 929, 930, 935, 942, 954, 955, 958, 961, 962, 1015, 1016, 1055, 1062, 1066, 1067, 1072, 1076, 1086, 1087, 1088, 1089, 1091, 1092, 1097, 1098, 1100, 1102, 1106, 1107, 1109, 1112, 1113, 1114, 1122, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1153, 1170, 1174, 1175, 1187, 1205, 1206, 1207, 1211, 1212, 1215, 1216, 1217, 1218, 1222, 1232, 1245, 1246, 1250, 1253, 1257, 1261, 1263, 1266, 1267, 1268, 1269, 1270, 1273, 1278, 1279, 1280, 1288, 1291, 1294, 1295, 1302, 1328, 1329, 1333, 1334, 1340, 1341, 1350, 1351, 1352, 1353, 1354, 1356, 1368, 1370, 1376, 1382, 1383, 1384, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1406, 1420, 1423, 1424, 1425, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1449, 1451, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1482, 1483, 1486, 1507, 1531, 1533, 1537, 1538, 1544, 1548, 1552, 1563, 1568, 1573, 1577, 1579, 1584, 1585, 1586, 1590, 1591, 1593, 1594, 1595, 1602, 1605, 1628, 1630, 1632, 1653, 1654, 1655, 1656, 1657, 1662, 1665, 1666, 1667, 1674, 1677, 1698, 1712, 1713, 1724, 1726, 1740, 1743, 1744, 1746, 1747, 1749, 1750, 1754, 1758, 1768, 1796, 1798, 1801, 1815, 1818, 1819, 1820, 1826, 1827, 1834, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1858, 1860, 1866, 1867, 1868, 1870, 1871, 1872, 1875, 1879, 1881, 1882, 1883, 1884, 1885, 1888, 1896, 1897, 1898, 1902, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1921, 1923, 1924, 1925, 1928, 1931, 1936, 1940, 1941, 1943, 1945, 1946, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1967, 1969], "2": [0, 1, 3, 11, 12, 14, 18, 19, 20, 21, 22, 25, 26, 27, 29, 31, 32, 33, 35, 40, 42, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 164, 182, 199, 216, 224, 225, 245, 251, 304, 306, 308, 312, 326, 368, 392, 393, 435, 436, 437, 438, 439, 471, 477, 478, 483, 486, 489, 503, 505, 507, 534, 548, 550, 570, 571, 573, 574, 575, 577, 578, 579, 597, 607, 670, 671, 673, 674, 675, 676, 679, 680, 681, 682, 683, 685, 687, 688, 689, 724, 728, 729, 730, 731, 732, 733, 735, 736, 745, 748, 750, 752, 783, 786, 810, 855, 864, 865, 866, 867, 868, 869, 870, 874, 876, 877, 878, 880, 889, 891, 892, 893, 894, 895, 896, 903, 904, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 928, 929, 930, 932, 933, 934, 935, 936, 940, 941, 951, 955, 956, 957, 958, 961, 962, 972, 1046, 1051, 1054, 1055, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1082, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1134, 1135, 1136, 1140, 1141, 1142, 1143, 1144, 1153, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1174, 1175, 1177, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1203, 1204, 1210, 1212, 1214, 1216, 1220, 1221, 1222, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1277, 1278, 1279, 1280, 1287, 1289, 1290, 1291, 1292, 1294, 1295, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1319, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1338, 1341, 1346, 1347, 1348, 1349, 1350, 1351, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1384, 1385, 1386, 1388, 1390, 1391, 1392, 1393, 1395, 1402, 1403, 1404, 1405, 1406, 1420, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1439, 1440, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1498, 1500, 1505, 1506, 1517, 1524, 1525, 1531, 1533, 1535, 1537, 1544, 1550, 1557, 1558, 1559, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1583, 1599, 1605, 1614, 1618, 1619, 1621, 1627, 1628, 1632, 1644, 1645, 1646, 1647, 1649, 1650, 1653, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1701, 1705, 1706, 1707, 1711, 1712, 1713, 1715, 1716, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1733, 1735, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1771, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1792, 1796, 1797, 1798, 1799, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1834, 1835, 1837, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1878, 1882, 1883, 1884, 1885, 1888, 1891, 1892, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1912, 1913, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1933, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1964, 1967, 1968], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 25, 27, 29, 30, 31, 32, 33, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 67, 68, 77, 486, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 735, 736, 746, 751, 752, 753, 754, 755, 769, 775, 778, 779, 781, 783, 784, 828, 847, 849, 851, 852, 855, 883, 884, 887, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 911, 920, 942, 969, 1029, 1072, 1090, 1092, 1093, 1094, 1095, 1102, 1107, 1108, 1109, 1123, 1133, 1134, 1136, 1141, 1153, 1157, 1158, 1174, 1198, 1200, 1203, 1204, 1212, 1214, 1216, 1256, 1259, 1264, 1272, 1273, 1292, 1324, 1342, 1350, 1351, 1400, 1434, 1486, 1533, 1535, 1544, 1602, 1609, 1614, 1621, 1627, 1629, 1638, 1640, 1643, 1647, 1648, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1695, 1701, 1706, 1723, 1766, 1857, 1862, 1872, 1879, 1880, 1881, 1883, 1884, 1886, 1888, 1891, 1892, 1896, 1897, 1898, 1899, 1904, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1917, 1918, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1931, 1932, 1934, 1936, 1937, 1938, 1940, 1943, 1945, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969], "suggest": [0, 9, 22, 46, 50, 73, 74, 76, 78, 1368, 1879, 1886, 1903, 1904, 1911, 1940, 1963, 1969], "issu": [0, 2, 3, 5, 9, 10, 11, 14, 20, 21, 25, 32, 46, 49, 50, 52, 54, 57, 58, 75, 76, 891, 897, 942, 944, 945, 1123, 1135, 1137, 1141, 1246, 1290, 1302, 1400, 1404, 1430, 1431, 1432, 1449, 1486, 1544, 1545, 1664, 1762, 1872, 1879, 1880, 1884, 1886, 1891, 1896, 1897, 1898, 1899, 1903, 1904, 1907, 1909, 1917, 1918, 1919, 1921, 1925, 1928, 1931, 1932, 1936, 1940, 1941, 1943, 1954, 1956, 1959, 1960, 1969, 1971], "http": [0, 2, 3, 4, 7, 9, 12, 14, 15, 22, 23, 25, 30, 31, 42, 43, 49, 141, 670, 720, 721, 722, 723, 735, 736, 746, 751, 752, 753, 754, 755, 782, 783, 883, 942, 954, 1072, 1130, 1273, 1302, 1357, 1404, 1430, 1431, 1432, 1452, 1453, 1477, 1480, 1483, 1664, 1712, 1729, 1762, 1766, 1787, 1861, 1864, 1879, 1885, 1888, 1893, 1895, 1904, 1905, 1909, 1912, 1913, 1915, 1919, 1921, 1925, 1928, 1930, 1943, 1945, 1956, 1961, 1963, 1968, 1972], "github": [0, 7, 9, 14, 23, 25, 38, 49, 50, 54, 141, 782, 783, 883, 897, 1130, 1302, 1430, 1431, 1432, 1477, 1664, 1698, 1762, 1864, 1879, 1886, 1891, 1909, 1912, 1919, 1925, 1930, 1931, 1940, 1941, 1943, 1956, 1959, 1963, 1968], "com": [0, 7, 14, 23, 25, 41, 43, 49, 141, 782, 783, 883, 1130, 1302, 1430, 1431, 1432, 1477, 1664, 1762, 1861, 1864, 1879, 1888, 1893, 1895, 1909, 1912, 1913, 1919, 1921, 1925, 1930, 1943, 1956, 1963, 1968], "pytorch": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 17, 18, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 47, 49, 50, 53, 55, 57, 58, 73, 74, 75, 76, 77, 78, 141, 503, 573, 670, 688, 720, 721, 722, 723, 735, 736, 746, 750, 751, 752, 753, 754, 755, 782, 783, 800, 801, 802, 803, 870, 883, 927, 932, 933, 942, 943, 954, 997, 998, 1009, 1014, 1072, 1117, 1123, 1130, 1131, 1135, 1140, 1141, 1146, 1186, 1187, 1211, 1231, 1237, 1242, 1244, 1245, 1246, 1249, 1262, 1271, 1287, 1290, 1291, 1302, 1350, 1351, 1357, 1386, 1400, 1430, 1431, 1432, 1477, 1506, 1583, 1614, 1621, 1653, 1661, 1662, 1664, 1667, 1675, 1722, 1754, 1762, 1763, 1773, 1820, 1824, 1848, 1861, 1864, 1872, 1879, 1883, 1884, 1888, 1890, 1891, 1893, 1894, 1898, 1899, 1900, 1905, 1906, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1927, 1928, 1930, 1932, 1933, 1936, 1937, 1940, 1941, 1943, 1944, 1945, 1953, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1967, 1968, 1970, 1971, 1972], "75956": 0, "_c": [0, 21, 22, 25, 56, 891, 897, 1199, 1212, 1673, 1882, 1884, 1894, 1907, 1914, 1918, 1921, 1925, 1936], "_jit_set_autocast_mod": 0, "fals": [0, 1, 3, 5, 12, 14, 21, 22, 25, 26, 27, 29, 30, 31, 33, 46, 49, 52, 57, 58, 63, 65, 66, 67, 68, 103, 104, 105, 106, 107, 109, 125, 126, 127, 141, 172, 173, 174, 187, 200, 251, 292, 309, 310, 312, 319, 323, 326, 327, 329, 333, 334, 335, 342, 345, 383, 387, 398, 400, 401, 402, 405, 411, 419, 420, 421, 422, 435, 436, 437, 438, 439, 443, 448, 450, 460, 461, 469, 485, 486, 494, 507, 532, 545, 546, 555, 570, 584, 593, 599, 600, 605, 607, 670, 683, 684, 685, 686, 687, 689, 702, 703, 704, 705, 706, 707, 724, 725, 735, 736, 741, 742, 743, 745, 748, 750, 758, 759, 766, 768, 769, 770, 772, 773, 775, 787, 804, 809, 810, 811, 812, 814, 815, 816, 828, 829, 847, 848, 853, 855, 864, 865, 866, 870, 883, 884, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 907, 911, 914, 917, 919, 920, 926, 927, 933, 934, 935, 941, 942, 954, 955, 975, 1013, 1018, 1030, 1072, 1073, 1074, 1075, 1077, 1078, 1085, 1089, 1090, 1091, 1092, 1097, 1098, 1103, 1104, 1105, 1107, 1108, 1109, 1124, 1126, 1127, 1128, 1129, 1131, 1132, 1134, 1135, 1136, 1138, 1140, 1142, 1144, 1156, 1157, 1158, 1161, 1162, 1175, 1185, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1200, 1205, 1207, 1208, 1216, 1217, 1218, 1220, 1222, 1225, 1230, 1231, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1253, 1255, 1257, 1258, 1261, 1262, 1263, 1264, 1265, 1270, 1271, 1272, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1292, 1294, 1298, 1300, 1301, 1303, 1306, 1312, 1315, 1316, 1324, 1329, 1330, 1331, 1332, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1368, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1382, 1383, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1420, 1421, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1443, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1461, 1463, 1465, 1466, 1473, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1486, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1533, 1535, 1537, 1538, 1539, 1544, 1545, 1548, 1554, 1555, 1557, 1558, 1559, 1563, 1568, 1572, 1576, 1578, 1579, 1581, 1582, 1583, 1584, 1586, 1596, 1599, 1600, 1602, 1608, 1614, 1616, 1618, 1619, 1622, 1623, 1625, 1627, 1629, 1632, 1633, 1645, 1654, 1655, 1656, 1657, 1659, 1662, 1665, 1666, 1667, 1671, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1720, 1722, 1723, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1746, 1747, 1754, 1758, 1766, 1767, 1768, 1771, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1796, 1806, 1807, 1808, 1809, 1810, 1811, 1818, 1819, 1820, 1823, 1824, 1839, 1843, 1848, 1857, 1861, 1864, 1866, 1867, 1868, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1890, 1891, 1892, 1893, 1896, 1898, 1899, 1903, 1904, 1907, 1908, 1909, 1911, 1915, 1918, 1919, 1923, 1924, 1925, 1928, 1929, 1930, 1932, 1935, 1936, 1940, 1941, 1942, 1944, 1945, 1947, 1948, 1950, 1954, 1956, 1957, 1959, 1962, 1964, 1965, 1968, 1969, 1970], "randn": [0, 1, 11, 12, 25, 31, 46, 51, 53, 54, 55, 57, 58, 60, 65, 66, 280, 302, 473, 534, 570, 574, 575, 576, 577, 578, 579, 607, 673, 674, 675, 676, 677, 678, 679, 680, 685, 686, 689, 710, 718, 719, 724, 728, 729, 730, 731, 732, 733, 746, 748, 750, 751, 752, 753, 754, 755, 762, 763, 764, 851, 852, 864, 865, 866, 868, 871, 872, 873, 874, 875, 910, 922, 929, 931, 932, 933, 934, 935, 937, 957, 958, 959, 960, 961, 972, 1051, 1052, 1053, 1054, 1059, 1060, 1061, 1062, 1066, 1072, 1086, 1087, 1116, 1124, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1139, 1140, 1141, 1170, 1174, 1177, 1212, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1254, 1255, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1276, 1280, 1281, 1288, 1290, 1291, 1292, 1294, 1295, 1298, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1322, 1323, 1326, 1336, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1432, 1433, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1460, 1461, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1482, 1484, 1485, 1489, 1490, 1491, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1528, 1529, 1535, 1568, 1574, 1575, 1670, 1713, 1718, 1719, 1720, 1722, 1723, 1736, 1740, 1741, 1753, 1789, 1791, 1796, 1802, 1805, 1813, 1814, 1823, 1824, 1834, 1837, 1838, 1841, 1845, 1848, 1849, 1851, 1854, 1856, 1861, 1870, 1871, 1872, 1875, 1882, 1883, 1884, 1886, 1888, 1897, 1898, 1899, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1913, 1915, 1919, 1920, 1923, 1924, 1925, 1926, 1928, 1931, 1936, 1940, 1941, 1943, 1945, 1948, 1950, 1954, 1955, 1956, 1959, 1961, 1962, 1964, 1967, 1969], "freez": [0, 49, 1200, 1210, 1377, 1378, 1434, 1904], "_": [0, 1, 3, 21, 22, 25, 26, 29, 35, 55, 57, 671, 673, 674, 688, 855, 871, 872, 873, 874, 875, 884, 890, 912, 931, 947, 956, 957, 959, 960, 962, 1116, 1121, 1136, 1140, 1166, 1221, 1229, 1280, 1288, 1352, 1353, 1354, 1397, 1398, 1399, 1473, 1614, 1628, 1661, 1690, 1692, 1712, 1735, 1738, 1741, 1753, 1768, 1774, 1776, 1782, 1789, 1791, 1813, 1824, 1837, 1838, 1888, 1904, 1907, 1910, 1911, 1915, 1921, 1927, 1928, 1930, 1941, 1955, 1956, 1962, 1963, 1967, 1969], "3": [0, 1, 3, 4, 6, 9, 11, 12, 18, 19, 21, 22, 25, 27, 29, 31, 32, 33, 35, 40, 42, 46, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 182, 199, 224, 245, 251, 280, 304, 306, 308, 312, 392, 393, 435, 436, 437, 438, 439, 461, 477, 478, 483, 486, 489, 503, 505, 507, 513, 527, 534, 548, 550, 571, 573, 574, 575, 577, 578, 597, 607, 670, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 687, 688, 689, 724, 728, 729, 730, 731, 732, 733, 736, 738, 747, 750, 751, 752, 753, 755, 762, 763, 764, 775, 783, 814, 851, 852, 855, 865, 866, 868, 869, 870, 877, 878, 891, 892, 893, 894, 895, 896, 910, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 923, 924, 925, 926, 928, 929, 930, 932, 933, 934, 935, 936, 940, 941, 951, 955, 956, 961, 962, 972, 1015, 1016, 1018, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1085, 1088, 1093, 1096, 1100, 1106, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1129, 1131, 1136, 1137, 1139, 1141, 1142, 1143, 1144, 1153, 1156, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1174, 1175, 1177, 1185, 1187, 1189, 1191, 1200, 1204, 1207, 1210, 1212, 1216, 1217, 1221, 1222, 1223, 1224, 1225, 1226, 1230, 1232, 1233, 1234, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1278, 1281, 1283, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1347, 1348, 1349, 1350, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1370, 1377, 1378, 1381, 1382, 1383, 1384, 1386, 1387, 1389, 1391, 1392, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1437, 1439, 1441, 1446, 1447, 1449, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1467, 1468, 1469, 1473, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1500, 1505, 1506, 1509, 1510, 1512, 1513, 1516, 1524, 1525, 1528, 1529, 1531, 1533, 1537, 1538, 1544, 1552, 1568, 1570, 1571, 1574, 1575, 1581, 1582, 1589, 1590, 1602, 1614, 1621, 1628, 1642, 1644, 1646, 1647, 1648, 1649, 1653, 1655, 1656, 1657, 1658, 1661, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1701, 1704, 1705, 1707, 1711, 1713, 1715, 1719, 1720, 1722, 1723, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1735, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1754, 1758, 1762, 1763, 1764, 1771, 1774, 1776, 1778, 1780, 1781, 1782, 1786, 1787, 1788, 1796, 1798, 1799, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1815, 1823, 1824, 1826, 1827, 1834, 1835, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1866, 1869, 1872, 1873, 1874, 1875, 1877, 1878, 1881, 1882, 1883, 1884, 1885, 1888, 1891, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1915, 1916, 1920, 1921, 1923, 1925, 1927, 1928, 1930, 1931, 1933, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1954, 1956, 1959, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969], "bug": [0, 14, 18, 25, 46, 57, 1133, 1134, 1136, 1290, 1903, 1917, 1940, 1959, 1969], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 56, 57, 58, 60, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 110, 141, 145, 186, 187, 197, 200, 212, 213, 214, 246, 251, 280, 281, 304, 312, 314, 326, 328, 331, 343, 435, 436, 437, 438, 439, 448, 476, 477, 478, 483, 485, 486, 487, 488, 489, 490, 493, 494, 503, 505, 507, 514, 546, 556, 573, 574, 575, 577, 578, 579, 593, 594, 604, 607, 608, 670, 674, 676, 679, 683, 684, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 725, 726, 727, 734, 738, 739, 740, 741, 742, 743, 744, 745, 747, 749, 750, 765, 766, 767, 768, 769, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 789, 790, 792, 800, 801, 802, 803, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 844, 849, 851, 852, 864, 865, 866, 867, 868, 875, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 903, 904, 907, 910, 913, 915, 918, 922, 923, 926, 930, 932, 933, 936, 937, 939, 942, 944, 945, 946, 947, 948, 950, 955, 956, 958, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 980, 983, 994, 996, 999, 1000, 1001, 1003, 1004, 1007, 1008, 1009, 1010, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1028, 1029, 1030, 1036, 1037, 1039, 1040, 1041, 1045, 1046, 1047, 1053, 1054, 1055, 1060, 1062, 1063, 1067, 1070, 1071, 1072, 1076, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1123, 1126, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1143, 1145, 1146, 1147, 1153, 1157, 1163, 1165, 1175, 1187, 1197, 1198, 1200, 1201, 1203, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1276, 1278, 1281, 1290, 1291, 1295, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1312, 1315, 1316, 1326, 1329, 1330, 1331, 1332, 1334, 1342, 1346, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1386, 1387, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1421, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1440, 1441, 1444, 1446, 1449, 1450, 1462, 1465, 1467, 1470, 1473, 1479, 1480, 1481, 1482, 1485, 1486, 1487, 1488, 1498, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1533, 1535, 1537, 1544, 1550, 1552, 1557, 1558, 1559, 1569, 1571, 1573, 1583, 1589, 1590, 1598, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1618, 1621, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1653, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1664, 1665, 1667, 1668, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1701, 1702, 1704, 1706, 1708, 1710, 1711, 1712, 1716, 1720, 1722, 1729, 1733, 1738, 1742, 1744, 1751, 1758, 1760, 1761, 1762, 1764, 1765, 1766, 1768, 1771, 1773, 1774, 1792, 1797, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1816, 1818, 1819, 1820, 1823, 1824, 1826, 1827, 1834, 1836, 1840, 1842, 1846, 1848, 1856, 1857, 1858, 1860, 1861, 1862, 1864, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972], "what": [0, 1, 3, 5, 7, 8, 9, 25, 27, 30, 31, 35, 39, 40, 46, 49, 51, 53, 54, 57, 58, 882, 1134, 1216, 1217, 1290, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1428, 1429, 1462, 1485, 1557, 1558, 1559, 1583, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1723, 1879, 1880, 1881, 1883, 1884, 1888, 1897, 1907, 1909, 1910, 1912, 1915, 1917, 1925, 1927, 1930, 1931, 1936, 1937, 1940, 1954, 1955, 1957, 1958, 1960, 1961, 1962, 1969, 1971], "observ": [0, 22, 33, 42, 746, 779, 780, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 798, 799, 801, 803, 805, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 831, 849, 851, 852, 854, 958, 962, 1214, 1302, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1394, 1397, 1398, 1399, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1473, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1903, 1904, 1907, 1908, 1914, 1917, 1932, 1950, 1953, 1954, 1959, 1967, 1969, 1971], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 25, 30, 31, 34, 37, 38, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 67, 68, 72, 77, 245, 246, 488, 503, 608, 679, 720, 721, 722, 723, 724, 725, 731, 732, 733, 735, 736, 746, 751, 752, 753, 754, 755, 851, 852, 882, 884, 885, 886, 891, 893, 894, 897, 924, 954, 1055, 1129, 1133, 1134, 1135, 1136, 1137, 1141, 1197, 1200, 1264, 1295, 1305, 1357, 1365, 1400, 1434, 1533, 1544, 1545, 1550, 1571, 1583, 1601, 1614, 1661, 1662, 1664, 1679, 1680, 1700, 1762, 1809, 1872, 1886, 1888, 1891, 1897, 1898, 1899, 1900, 1903, 1904, 1909, 1910, 1913, 1918, 1919, 1921, 1925, 1927, 1928, 1931, 1934, 1936, 1937, 1940, 1941, 1943, 1944, 1945, 1947, 1955, 1956, 1958, 1959, 1966, 1969], "file": [0, 1, 3, 6, 7, 9, 11, 14, 18, 21, 27, 33, 35, 40, 42, 44, 46, 47, 52, 54, 57, 891, 897, 905, 906, 974, 1011, 1124, 1133, 1134, 1136, 1137, 1175, 1200, 1208, 1211, 1272, 1674, 1754, 1799, 1879, 1881, 1884, 1885, 1886, 1893, 1897, 1898, 1899, 1904, 1907, 1909, 1914, 1917, 1919, 1920, 1921, 1923, 1925, 1930, 1934, 1937, 1940, 1942, 1945, 1955, 1957, 1959, 1961, 1963, 1966, 1967, 1969, 1971], "subregion": 0, "nest": [0, 1, 5, 12, 14, 27, 46, 49, 57, 58, 61, 65, 66, 579, 783, 805, 807, 884, 893, 1033, 1034, 1131, 1141, 1200, 1203, 1216, 1434, 1440, 1480, 1481, 1621, 1675, 1872, 1880, 1910, 1923, 1925, 1930, 1936], "local": [0, 5, 25, 27, 29, 30, 33, 40, 42, 43, 44, 45, 49, 57, 1015, 1076, 1130, 1175, 1200, 1273, 1373, 1374, 1375, 1379, 1381, 1422, 1434, 1485, 1527, 1551, 1601, 1614, 1615, 1665, 1768, 1799, 1879, 1880, 1883, 1896, 1903, 1907, 1908, 1911, 1925, 1928, 1929, 1933, 1936, 1937, 1938, 1945, 1956, 1959, 1962, 1969, 1971], "want": [0, 1, 7, 8, 9, 14, 21, 25, 30, 31, 39, 49, 51, 52, 53, 54, 56, 57, 58, 438, 486, 489, 771, 781, 828, 1011, 1129, 1130, 1213, 1216, 1217, 1302, 1382, 1383, 1486, 1528, 1529, 1544, 1602, 1614, 1615, 1662, 1665, 1679, 1680, 1693, 1754, 1864, 1879, 1888, 1891, 1903, 1904, 1906, 1907, 1909, 1910, 1912, 1915, 1925, 1927, 1928, 1931, 1940, 1945, 1946, 1949, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1963, 1965, 1968], "forc": [0, 1, 14, 18, 49, 448, 870, 942, 1011, 1203, 1215, 1219, 1773, 1809, 1879, 1881, 1884, 1903, 1907, 1945, 1948, 1954, 1956, 1959], "particular": [0, 1, 3, 7, 21, 27, 33, 39, 42, 43, 46, 47, 49, 57, 58, 63, 66, 550, 670, 851, 852, 1046, 1141, 1200, 1295, 1371, 1434, 1872, 1881, 1883, 1891, 1899, 1907, 1909, 1911, 1914, 1915, 1918, 1923, 1925, 1927, 1940, 1942, 1948, 1954, 1958, 1959, 1960, 1969, 1970, 1971], "give": [0, 3, 4, 7, 9, 12, 18, 21, 22, 27, 29, 41, 46, 49, 57, 898, 899, 962, 1090, 1092, 1093, 1095, 1099, 1108, 1133, 1134, 1135, 1214, 1230, 1237, 1362, 1363, 1364, 1439, 1485, 1486, 1627, 1666, 1679, 1680, 1820, 1861, 1879, 1881, 1896, 1898, 1902, 1904, 1907, 1909, 1910, 1912, 1913, 1915, 1919, 1925, 1927, 1929, 1940, 1954, 1957, 1958, 1966, 1969, 1970], "explicit": [0, 8, 12, 25, 46, 49, 53, 57, 1007, 1153, 1187, 1545, 1762, 1841, 1879, 1880, 1884, 1885, 1897, 1903, 1907, 1909, 1928, 1943, 1944, 1964], "control": [0, 1, 2, 14, 21, 22, 25, 26, 27, 31, 33, 38, 41, 42, 47, 58, 64, 66, 745, 789, 848, 851, 866, 870, 884, 911, 920, 954, 1059, 1060, 1061, 1062, 1063, 1157, 1158, 1212, 1213, 1214, 1216, 1231, 1237, 1239, 1242, 1244, 1247, 1249, 1253, 1259, 1262, 1264, 1270, 1290, 1342, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1420, 1428, 1429, 1485, 1583, 1614, 1710, 1766, 1767, 1781, 1796, 1799, 1804, 1820, 1824, 1843, 1849, 1850, 1851, 1852, 1880, 1881, 1890, 1904, 1906, 1907, 1908, 1915, 1917, 1918, 1920, 1922, 1923, 1925, 1927, 1930, 1931, 1938, 1940, 1954, 1955, 1957, 1959, 1962], "execut": [0, 1, 2, 3, 4, 5, 7, 14, 15, 21, 25, 27, 29, 33, 34, 36, 43, 46, 47, 49, 54, 56, 57, 72, 477, 478, 903, 904, 942, 978, 989, 1050, 1130, 1200, 1201, 1203, 1216, 1217, 1272, 1315, 1316, 1371, 1434, 1440, 1477, 1478, 1479, 1480, 1481, 1608, 1610, 1614, 1769, 1880, 1881, 1883, 1885, 1892, 1903, 1905, 1906, 1911, 1914, 1915, 1917, 1919, 1921, 1923, 1925, 1930, 1931, 1936, 1937, 1940, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1965, 1968, 1969], "surround": [0, 57, 780, 1883, 1903, 1907], "ensur": [0, 1, 4, 6, 7, 9, 21, 25, 26, 27, 29, 33, 42, 43, 45, 46, 49, 56, 57, 471, 476, 725, 809, 887, 889, 950, 1130, 1200, 1346, 1427, 1434, 1437, 1477, 1533, 1557, 1558, 1559, 1583, 1614, 1621, 1770, 1879, 1881, 1883, 1891, 1893, 1896, 1903, 1904, 1907, 1909, 1910, 1912, 1917, 1919, 1928, 1931, 1932, 1936, 1937, 1954, 1958, 1959, 1969], "necessari": [0, 1, 3, 9, 14, 21, 27, 33, 42, 43, 46, 49, 56, 79, 182, 199, 550, 579, 890, 1130, 1174, 1212, 1440, 1654, 1655, 1881, 1884, 1898, 1902, 1904, 1905, 1907, 1908, 1913, 1915, 1918, 1921, 1928, 1931, 1936, 1937, 1938, 1943, 1959, 1969], "becaus": [0, 1, 3, 4, 5, 7, 8, 14, 21, 22, 25, 27, 29, 31, 35, 46, 47, 49, 53, 54, 56, 57, 58, 65, 66, 486, 893, 898, 899, 1093, 1094, 1095, 1103, 1104, 1105, 1131, 1135, 1140, 1141, 1197, 1201, 1204, 1208, 1247, 1248, 1272, 1290, 1352, 1353, 1354, 1371, 1473, 1605, 1614, 1615, 1696, 1738, 1766, 1820, 1872, 1880, 1881, 1884, 1886, 1896, 1897, 1898, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1923, 1925, 1928, 1931, 1932, 1936, 1938, 1940, 1945, 1947, 1950, 1954, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1967, 1969, 1970, 1971], "wa": [0, 1, 3, 7, 18, 22, 25, 30, 40, 41, 42, 43, 46, 47, 49, 56, 57, 326, 476, 486, 670, 775, 782, 844, 932, 943, 975, 976, 999, 1003, 1018, 1031, 1050, 1092, 1141, 1197, 1207, 1216, 1231, 1242, 1244, 1248, 1272, 1290, 1312, 1324, 1404, 1430, 1431, 1432, 1463, 1486, 1498, 1533, 1586, 1602, 1614, 1615, 1656, 1698, 1704, 1818, 1819, 1857, 1858, 1867, 1868, 1872, 1879, 1881, 1883, 1884, 1885, 1888, 1890, 1891, 1894, 1896, 1903, 1904, 1905, 1907, 1909, 1910, 1911, 1914, 1916, 1925, 1927, 1929, 1931, 1935, 1936, 1940, 1942, 1947, 1957, 1958, 1959, 1962, 1968, 1971], "f_float32": 0, "re": [0, 1, 4, 5, 7, 14, 21, 25, 29, 32, 39, 42, 46, 49, 50, 51, 52, 53, 54, 56, 57, 478, 922, 973, 1007, 1123, 1200, 1204, 1434, 1589, 1615, 1656, 1749, 1803, 1881, 1884, 1888, 1891, 1896, 1903, 1904, 1907, 1909, 1910, 1912, 1917, 1931, 1937, 1938, 1941, 1954, 1956, 1957, 1958, 1959, 1968, 1969, 1970], "again": [0, 18, 21, 25, 29, 33, 46, 52, 1324, 1904, 1909, 1910, 1915, 1954, 1958, 1962, 1963], "regardless": [0, 3, 21, 41, 49, 956, 1200, 1204, 1210, 1434, 1608, 1857, 1903, 1907, 1920, 1936, 1947, 1959], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 53, 54, 55, 56, 58, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 141, 182, 187, 199, 200, 212, 224, 246, 281, 302, 304, 306, 310, 312, 389, 391, 392, 393, 438, 448, 473, 476, 477, 478, 483, 485, 488, 489, 503, 505, 507, 527, 534, 573, 593, 607, 608, 670, 674, 677, 678, 679, 680, 684, 685, 686, 687, 725, 738, 747, 750, 756, 757, 758, 759, 762, 763, 764, 769, 770, 772, 773, 775, 776, 777, 782, 783, 784, 785, 789, 792, 805, 807, 809, 810, 811, 812, 815, 817, 827, 828, 844, 849, 854, 867, 868, 870, 874, 875, 879, 880, 882, 883, 884, 885, 886, 891, 892, 894, 895, 896, 897, 898, 899, 903, 904, 906, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 927, 928, 941, 945, 948, 951, 954, 958, 962, 974, 975, 981, 988, 1004, 1015, 1016, 1018, 1019, 1020, 1029, 1042, 1043, 1044, 1055, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1072, 1073, 1077, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1120, 1122, 1123, 1125, 1126, 1127, 1130, 1133, 1136, 1139, 1140, 1141, 1144, 1145, 1153, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1166, 1170, 1174, 1177, 1197, 1200, 1203, 1205, 1208, 1211, 1212, 1214, 1216, 1217, 1220, 1221, 1225, 1226, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1250, 1253, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1267, 1270, 1272, 1273, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1301, 1309, 1310, 1314, 1315, 1316, 1319, 1320, 1324, 1330, 1333, 1335, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1377, 1378, 1379, 1381, 1382, 1383, 1386, 1387, 1388, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1434, 1437, 1439, 1441, 1448, 1449, 1450, 1451, 1452, 1462, 1463, 1465, 1473, 1476, 1477, 1482, 1483, 1485, 1486, 1498, 1501, 1502, 1516, 1517, 1524, 1525, 1526, 1528, 1529, 1532, 1533, 1535, 1544, 1545, 1557, 1558, 1559, 1568, 1571, 1583, 1586, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1619, 1620, 1621, 1622, 1624, 1626, 1627, 1628, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1646, 1647, 1650, 1656, 1660, 1661, 1664, 1666, 1667, 1668, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1712, 1713, 1716, 1719, 1722, 1727, 1728, 1729, 1731, 1733, 1735, 1740, 1742, 1744, 1746, 1747, 1749, 1751, 1754, 1761, 1762, 1763, 1764, 1766, 1771, 1772, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1792, 1798, 1799, 1801, 1802, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1818, 1819, 1820, 1824, 1825, 1835, 1841, 1842, 1843, 1845, 1846, 1849, 1850, 1851, 1852, 1859, 1860, 1861, 1864, 1866, 1867, 1868, 1870, 1872, 1875, 1879, 1881, 1882, 1883, 1885, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1951, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1962, 1963, 1966, 1967, 1968, 1969, 1971, 1972], "state": [0, 1, 2, 5, 9, 21, 25, 27, 29, 31, 33, 35, 42, 45, 46, 47, 49, 57, 79, 738, 750, 826, 950, 1004, 1005, 1009, 1014, 1018, 1028, 1043, 1044, 1130, 1139, 1152, 1200, 1203, 1216, 1273, 1313, 1320, 1386, 1387, 1404, 1405, 1434, 1449, 1451, 1481, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1729, 1772, 1799, 1864, 1880, 1892, 1903, 1904, 1907, 1908, 1909, 1913, 1917, 1920, 1923, 1925, 1927, 1935, 1949, 1954, 1956, 1957, 1958, 1959, 1965], "thread": [0, 1, 3, 21, 25, 27, 33, 44, 49, 56, 973, 975, 1007, 1076, 1150, 1151, 1175, 1312, 1371, 1665, 1768, 1769, 1770, 1863, 1880, 1881, 1894, 1903, 1907, 1914, 1917, 1936, 1938, 1948, 1956], "must": [0, 3, 5, 6, 9, 12, 14, 21, 25, 27, 29, 31, 32, 33, 40, 43, 44, 46, 47, 49, 52, 54, 56, 57, 58, 65, 66, 79, 88, 130, 144, 145, 187, 251, 304, 306, 312, 389, 391, 393, 503, 534, 535, 556, 573, 574, 575, 577, 578, 607, 676, 677, 678, 679, 680, 681, 687, 738, 747, 762, 763, 764, 783, 805, 807, 849, 850, 868, 874, 879, 880, 881, 882, 884, 890, 892, 894, 895, 896, 898, 899, 910, 912, 914, 915, 916, 917, 918, 919, 922, 926, 929, 951, 954, 962, 974, 975, 985, 986, 987, 989, 1015, 1016, 1018, 1060, 1062, 1063, 1064, 1066, 1069, 1070, 1072, 1093, 1094, 1095, 1100, 1102, 1103, 1104, 1105, 1106, 1113, 1114, 1123, 1124, 1126, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1153, 1162, 1163, 1166, 1177, 1197, 1200, 1211, 1216, 1223, 1226, 1255, 1256, 1257, 1258, 1264, 1266, 1267, 1270, 1271, 1273, 1287, 1291, 1293, 1294, 1295, 1301, 1308, 1324, 1330, 1333, 1334, 1338, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1378, 1381, 1382, 1383, 1388, 1389, 1395, 1427, 1434, 1437, 1438, 1440, 1465, 1471, 1486, 1506, 1515, 1517, 1525, 1544, 1557, 1558, 1559, 1577, 1614, 1622, 1624, 1643, 1653, 1654, 1660, 1662, 1667, 1702, 1704, 1711, 1712, 1715, 1716, 1719, 1727, 1728, 1749, 1758, 1761, 1770, 1786, 1797, 1801, 1802, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1825, 1836, 1840, 1841, 1845, 1850, 1852, 1856, 1859, 1861, 1864, 1869, 1870, 1872, 1873, 1875, 1881, 1882, 1883, 1884, 1888, 1891, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1913, 1917, 1920, 1921, 1923, 1925, 1927, 1928, 1929, 1931, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1947, 1954, 1955, 1957, 1959, 1960, 1962, 1968, 1969, 1970], "invok": [0, 2, 8, 15, 18, 21, 25, 40, 42, 43, 56, 57, 891, 893, 1015, 1016, 1200, 1203, 1210, 1371, 1434, 1607, 1609, 1612, 1613, 1664, 1698, 1704, 1881, 1884, 1885, 1892, 1903, 1906, 1907, 1908, 1909, 1910, 1914, 1915, 1928, 1936, 1937, 1954, 1958, 1959, 1960, 1962], "affect": [0, 1, 2, 7, 9, 18, 20, 32, 49, 212, 213, 775, 976, 978, 1076, 1123, 1124, 1147, 1175, 1200, 1315, 1316, 1404, 1434, 1449, 1486, 1602, 1615, 1621, 1665, 1762, 1765, 1766, 1768, 1903, 1904, 1907, 1912, 1915, 1918, 1919, 1942, 1965, 1967], "dataparallel": [0, 25, 1598, 1614, 1656, 1880, 1904, 1911, 1917, 1936], "parallel": [0, 13, 14, 21, 22, 25, 26, 27, 29, 42, 43, 49, 1150, 1151, 1203, 1371, 1440, 1473, 1533, 1614, 1769, 1770, 1880, 1884, 1903, 1904, 1906, 1917, 1921, 1936, 1938, 1953, 1959], "distributeddataparallel": [0, 21, 22, 25, 26, 27, 29, 30, 43, 49, 1371, 1473, 1917, 1929, 1936, 1959], "than": [0, 3, 4, 5, 6, 8, 9, 11, 14, 21, 22, 25, 26, 27, 31, 32, 33, 35, 39, 42, 43, 44, 46, 49, 54, 57, 58, 59, 66, 141, 245, 489, 535, 607, 670, 769, 775, 883, 892, 893, 907, 913, 924, 931, 932, 936, 937, 987, 1025, 1029, 1042, 1060, 1061, 1112, 1113, 1114, 1116, 1120, 1126, 1137, 1144, 1156, 1160, 1174, 1185, 1197, 1198, 1201, 1212, 1221, 1222, 1225, 1230, 1231, 1237, 1241, 1246, 1254, 1255, 1257, 1258, 1261, 1266, 1272, 1276, 1289, 1292, 1298, 1301, 1303, 1306, 1319, 1324, 1334, 1350, 1351, 1362, 1363, 1364, 1371, 1377, 1378, 1395, 1404, 1426, 1440, 1448, 1465, 1471, 1481, 1482, 1483, 1498, 1508, 1509, 1510, 1524, 1525, 1533, 1544, 1570, 1583, 1601, 1602, 1605, 1614, 1621, 1627, 1628, 1629, 1630, 1656, 1661, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1704, 1706, 1720, 1721, 1742, 1743, 1766, 1771, 1805, 1806, 1807, 1808, 1810, 1811, 1842, 1850, 1852, 1861, 1879, 1881, 1883, 1884, 1886, 1898, 1899, 1900, 1902, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1915, 1917, 1918, 1919, 1920, 1925, 1927, 1928, 1929, 1931, 1932, 1936, 1940, 1941, 1943, 1945, 1946, 1947, 1954, 1955, 1958, 1959, 1960, 1961, 1963, 1964, 1965, 1967, 1969, 1971], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 42, 44, 45, 46, 47, 49, 53, 54, 55, 56, 57, 58, 63, 65, 66, 73, 74, 75, 76, 78, 141, 212, 245, 343, 393, 476, 503, 510, 535, 550, 687, 738, 747, 783, 844, 845, 846, 870, 876, 882, 883, 884, 885, 887, 893, 913, 924, 926, 936, 940, 944, 954, 971, 976, 978, 983, 985, 989, 1016, 1039, 1050, 1061, 1072, 1076, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1102, 1103, 1104, 1105, 1106, 1108, 1111, 1115, 1118, 1119, 1120, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1153, 1162, 1163, 1175, 1179, 1182, 1185, 1204, 1210, 1214, 1220, 1221, 1231, 1232, 1242, 1245, 1246, 1248, 1253, 1257, 1259, 1261, 1264, 1270, 1271, 1287, 1295, 1299, 1304, 1324, 1330, 1342, 1347, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1365, 1366, 1367, 1378, 1382, 1383, 1388, 1397, 1398, 1399, 1401, 1402, 1403, 1413, 1414, 1415, 1425, 1434, 1438, 1440, 1473, 1481, 1486, 1498, 1508, 1511, 1512, 1513, 1528, 1529, 1530, 1535, 1570, 1583, 1601, 1605, 1614, 1615, 1628, 1629, 1633, 1643, 1654, 1664, 1665, 1666, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1700, 1702, 1703, 1704, 1724, 1725, 1742, 1758, 1766, 1768, 1771, 1774, 1815, 1824, 1840, 1845, 1846, 1848, 1856, 1857, 1859, 1860, 1861, 1864, 1872, 1880, 1881, 1884, 1888, 1890, 1892, 1894, 1896, 1897, 1898, 1899, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1917, 1919, 1920, 1921, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1936, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1966, 1968, 1969, 1971], "gpu": [0, 1, 2, 3, 4, 7, 14, 17, 19, 21, 22, 27, 33, 43, 44, 49, 56, 187, 200, 280, 323, 593, 750, 942, 980, 981, 984, 985, 986, 987, 988, 989, 995, 996, 997, 1004, 1010, 1011, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1049, 1050, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1120, 1200, 1210, 1247, 1272, 1301, 1309, 1310, 1311, 1315, 1316, 1342, 1371, 1386, 1404, 1434, 1449, 1450, 1473, 1598, 1614, 1653, 1824, 1880, 1881, 1892, 1895, 1907, 1909, 1913, 1915, 1916, 1918, 1919, 1921, 1931, 1936, 1940, 1942, 1946, 1948, 1951, 1954, 1956, 1958, 1961, 1966, 1967, 1969, 1971], "per": [0, 14, 21, 22, 25, 26, 27, 29, 30, 32, 33, 35, 41, 43, 44, 49, 50, 55, 462, 463, 464, 724, 725, 791, 798, 809, 812, 815, 823, 835, 843, 882, 891, 893, 942, 979, 1055, 1086, 1131, 1141, 1273, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1371, 1378, 1389, 1394, 1397, 1398, 1399, 1400, 1401, 1406, 1425, 1426, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1465, 1466, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1614, 1664, 1668, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1698, 1704, 1712, 1724, 1771, 1773, 1825, 1842, 1846, 1864, 1872, 1894, 1898, 1900, 1906, 1907, 1908, 1910, 1914, 1929, 1931, 1932, 1934, 1937, 1940, 1945, 1957, 1971], "process": [0, 1, 3, 11, 14, 22, 25, 26, 27, 31, 33, 34, 35, 36, 42, 43, 44, 45, 46, 49, 57, 70, 71, 72, 75, 77, 975, 1011, 1017, 1042, 1124, 1200, 1211, 1273, 1310, 1319, 1350, 1351, 1368, 1370, 1377, 1378, 1394, 1401, 1425, 1426, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1473, 1477, 1479, 1481, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1701, 1707, 1773, 1787, 1864, 1879, 1880, 1881, 1888, 1894, 1896, 1897, 1898, 1904, 1906, 1907, 1908, 1909, 1914, 1915, 1917, 1919, 1921, 1923, 1925, 1928, 1929, 1930, 1931, 1934, 1936, 1938, 1940, 1942, 1949, 1953, 1957, 1959, 1962, 1967, 1969], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 14, 15, 17, 25, 26, 27, 29, 30, 31, 32, 33, 42, 43, 44, 45, 46, 49, 50, 54, 57, 58, 65, 66, 72, 110, 141, 343, 435, 436, 437, 438, 439, 476, 577, 578, 811, 851, 852, 883, 897, 942, 973, 975, 976, 978, 1007, 1018, 1019, 1039, 1073, 1075, 1092, 1112, 1113, 1114, 1124, 1130, 1200, 1204, 1212, 1213, 1236, 1237, 1264, 1265, 1273, 1312, 1371, 1431, 1434, 1450, 1467, 1571, 1589, 1614, 1674, 1704, 1731, 1735, 1737, 1763, 1769, 1836, 1839, 1864, 1879, 1881, 1884, 1885, 1895, 1896, 1897, 1898, 1899, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1915, 1917, 1920, 1921, 1925, 1928, 1929, 1931, 1934, 1936, 1937, 1946, 1948, 1955, 1956, 1957, 1960, 1961, 1962, 1965, 1966, 1969, 1970, 1971], "str": [0, 1, 2, 3, 5, 14, 21, 22, 25, 27, 29, 30, 31, 33, 36, 40, 42, 44, 46, 47, 49, 57, 312, 503, 507, 593, 769, 775, 782, 783, 784, 805, 806, 807, 844, 891, 893, 901, 905, 906, 930, 942, 949, 965, 973, 974, 985, 986, 987, 989, 998, 999, 1001, 1002, 1003, 1007, 1015, 1016, 1017, 1029, 1030, 1032, 1034, 1046, 1067, 1072, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1124, 1129, 1130, 1134, 1139, 1141, 1149, 1198, 1199, 1200, 1201, 1203, 1204, 1207, 1210, 1246, 1259, 1264, 1265, 1272, 1273, 1302, 1315, 1316, 1331, 1350, 1351, 1357, 1362, 1363, 1364, 1368, 1370, 1378, 1384, 1388, 1394, 1395, 1400, 1401, 1410, 1411, 1412, 1425, 1426, 1434, 1435, 1437, 1438, 1439, 1441, 1444, 1448, 1451, 1462, 1465, 1466, 1477, 1479, 1481, 1482, 1483, 1484, 1486, 1505, 1506, 1516, 1517, 1525, 1530, 1533, 1544, 1545, 1568, 1576, 1602, 1614, 1627, 1628, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1661, 1662, 1664, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1698, 1704, 1706, 1723, 1754, 1758, 1765, 1766, 1801, 1820, 1863, 1864, 1872, 1879, 1881, 1882, 1883, 1884, 1885, 1888, 1892, 1893, 1894, 1896, 1898, 1902, 1904, 1920, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1935, 1936, 1942, 1945, 1947, 1949, 1950, 1959, 1962, 1964, 1968, 1969, 1970, 1971], "possibl": [0, 2, 9, 14, 15, 18, 25, 27, 31, 46, 53, 54, 57, 487, 488, 570, 607, 848, 869, 870, 936, 942, 982, 1073, 1074, 1075, 1120, 1133, 1200, 1214, 1241, 1254, 1257, 1258, 1261, 1266, 1272, 1351, 1357, 1434, 1440, 1524, 1525, 1544, 1577, 1602, 1632, 1633, 1742, 1745, 1760, 1812, 1820, 1839, 1881, 1883, 1884, 1888, 1896, 1897, 1902, 1904, 1906, 1907, 1908, 1909, 1912, 1917, 1918, 1919, 1921, 1928, 1931, 1936, 1938, 1943, 1947, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1965, 1969], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 18, 21, 22, 24, 26, 27, 29, 31, 33, 34, 36, 39, 40, 42, 43, 46, 47, 49, 51, 54, 56, 57, 58, 60, 63, 66, 68, 79, 92, 93, 94, 95, 110, 141, 145, 212, 226, 227, 228, 229, 245, 250, 251, 263, 264, 290, 302, 304, 306, 307, 308, 309, 310, 312, 314, 317, 343, 390, 391, 409, 410, 412, 413, 461, 471, 473, 489, 503, 505, 507, 527, 534, 550, 573, 574, 575, 577, 578, 589, 590, 670, 671, 674, 677, 678, 681, 685, 686, 687, 725, 746, 754, 760, 761, 769, 774, 775, 777, 783, 785, 786, 789, 792, 809, 810, 811, 812, 815, 816, 817, 844, 849, 855, 864, 865, 866, 870, 875, 879, 881, 883, 885, 886, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 911, 912, 913, 918, 920, 926, 930, 934, 935, 937, 948, 957, 958, 961, 976, 1006, 1015, 1016, 1029, 1042, 1051, 1052, 1055, 1063, 1064, 1073, 1074, 1075, 1077, 1086, 1087, 1089, 1091, 1093, 1094, 1095, 1100, 1102, 1103, 1104, 1105, 1106, 1115, 1120, 1127, 1129, 1130, 1131, 1132, 1136, 1137, 1139, 1140, 1142, 1144, 1148, 1149, 1153, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1170, 1185, 1190, 1191, 1192, 1193, 1196, 1197, 1198, 1200, 1201, 1203, 1207, 1208, 1216, 1219, 1221, 1222, 1225, 1229, 1230, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1243, 1244, 1245, 1246, 1250, 1253, 1255, 1257, 1258, 1260, 1264, 1265, 1270, 1271, 1272, 1273, 1276, 1281, 1287, 1289, 1290, 1293, 1298, 1300, 1301, 1303, 1306, 1319, 1322, 1324, 1328, 1329, 1330, 1331, 1334, 1335, 1338, 1342, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1376, 1377, 1378, 1379, 1381, 1388, 1389, 1390, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1462, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1476, 1477, 1479, 1481, 1482, 1483, 1485, 1486, 1505, 1506, 1508, 1509, 1510, 1515, 1516, 1525, 1526, 1530, 1533, 1535, 1544, 1545, 1546, 1557, 1558, 1559, 1568, 1569, 1570, 1571, 1573, 1576, 1583, 1596, 1597, 1602, 1604, 1605, 1607, 1609, 1612, 1613, 1614, 1620, 1627, 1628, 1629, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1646, 1647, 1653, 1656, 1657, 1660, 1662, 1666, 1667, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1698, 1704, 1712, 1716, 1719, 1723, 1725, 1726, 1738, 1740, 1742, 1743, 1744, 1749, 1750, 1751, 1758, 1761, 1771, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1792, 1796, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1824, 1825, 1836, 1840, 1843, 1846, 1849, 1850, 1851, 1852, 1854, 1857, 1858, 1860, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1891, 1893, 1894, 1896, 1899, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1917, 1919, 1920, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1934, 1935, 1936, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1954, 1956, 1957, 1959, 1962, 1963, 1964, 1968, 1969], "xpu": [0, 1200, 1434, 1888, 1930], "hpu": [0, 1942], "attribut": [0, 1, 11, 12, 21, 22, 25, 26, 32, 47, 57, 58, 71, 76, 141, 281, 485, 486, 717, 728, 729, 730, 731, 732, 733, 735, 736, 746, 754, 781, 792, 805, 806, 807, 828, 829, 830, 848, 849, 879, 883, 885, 889, 1123, 1197, 1199, 1200, 1201, 1203, 1204, 1206, 1211, 1212, 1273, 1371, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1434, 1477, 1614, 1615, 1631, 1632, 1633, 1654, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1820, 1861, 1862, 1865, 1880, 1882, 1885, 1899, 1903, 1904, 1907, 1909, 1910, 1915, 1920, 1925, 1928, 1931, 1936, 1946, 1947, 1959, 1962, 1968, 1970, 1972], "thu": [0, 1, 11, 21, 25, 31, 43, 47, 49, 57, 775, 812, 815, 844, 1072, 1093, 1264, 1295, 1374, 1486, 1602, 1614, 1679, 1680, 1690, 1809, 1881, 1884, 1891, 1892, 1904, 1906, 1909, 1911, 1912, 1914, 1915, 1925, 1931, 1936, 1940, 1944, 1946, 1947], "obtain": [0, 3, 21, 25, 31, 35, 56, 57, 486, 908, 1145, 1319, 1357, 1441, 1517, 1614, 1683, 1689, 1712, 1729, 1825, 1884, 1896, 1897, 1906, 1919, 1925, 1927, 1930, 1931, 1967], "bool": [0, 1, 2, 3, 5, 12, 14, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 36, 42, 44, 46, 47, 49, 56, 57, 141, 187, 200, 236, 251, 310, 312, 319, 320, 321, 322, 324, 325, 330, 332, 435, 436, 437, 438, 439, 448, 461, 486, 507, 571, 593, 670, 683, 684, 685, 686, 687, 689, 725, 748, 769, 770, 775, 784, 804, 855, 863, 864, 865, 866, 870, 883, 891, 892, 893, 894, 895, 896, 897, 898, 899, 911, 914, 916, 917, 919, 920, 926, 927, 933, 934, 935, 941, 942, 943, 954, 968, 975, 982, 1012, 1018, 1030, 1073, 1074, 1075, 1078, 1085, 1090, 1108, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1134, 1135, 1136, 1140, 1142, 1157, 1158, 1161, 1162, 1175, 1181, 1185, 1188, 1189, 1191, 1197, 1200, 1204, 1207, 1208, 1216, 1217, 1220, 1222, 1230, 1231, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1253, 1255, 1257, 1258, 1261, 1262, 1263, 1264, 1270, 1271, 1272, 1273, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1292, 1298, 1300, 1301, 1303, 1306, 1312, 1315, 1316, 1324, 1329, 1330, 1331, 1332, 1333, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1382, 1383, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 1421, 1425, 1426, 1427, 1428, 1429, 1434, 1437, 1438, 1439, 1440, 1441, 1443, 1448, 1451, 1452, 1453, 1454, 1461, 1465, 1466, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1498, 1505, 1506, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1533, 1535, 1537, 1544, 1545, 1568, 1576, 1583, 1602, 1608, 1614, 1615, 1619, 1620, 1622, 1623, 1625, 1627, 1629, 1631, 1632, 1633, 1654, 1655, 1656, 1657, 1659, 1662, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1712, 1718, 1720, 1722, 1723, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1758, 1763, 1767, 1768, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1796, 1806, 1807, 1808, 1809, 1810, 1811, 1818, 1819, 1820, 1823, 1824, 1833, 1839, 1843, 1848, 1857, 1858, 1861, 1862, 1864, 1866, 1867, 1868, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1893, 1894, 1896, 1897, 1898, 1899, 1913, 1920, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1935, 1936, 1940, 1942, 1943, 1945, 1946, 1947, 1948, 1950, 1957, 1959, 1964, 1968, 1970], "option": [0, 1, 3, 5, 14, 21, 25, 27, 29, 31, 33, 36, 40, 41, 42, 44, 45, 46, 49, 57, 72, 74, 79, 141, 146, 161, 163, 166, 169, 170, 171, 186, 197, 200, 231, 258, 288, 316, 322, 384, 435, 436, 437, 438, 439, 477, 489, 490, 503, 510, 515, 527, 550, 570, 571, 573, 574, 575, 577, 578, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 725, 748, 769, 770, 775, 782, 784, 789, 808, 844, 849, 852, 855, 866, 868, 869, 870, 871, 872, 873, 874, 875, 882, 883, 891, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 926, 929, 931, 932, 933, 934, 935, 937, 939, 940, 941, 942, 948, 949, 956, 957, 959, 960, 961, 962, 966, 971, 972, 973, 975, 976, 978, 980, 984, 985, 987, 988, 989, 992, 993, 1000, 1001, 1004, 1007, 1015, 1016, 1017, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1042, 1043, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1077, 1082, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1142, 1143, 1144, 1145, 1153, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1174, 1177, 1189, 1191, 1194, 1195, 1197, 1198, 1200, 1201, 1204, 1207, 1214, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1312, 1315, 1316, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1340, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1388, 1391, 1392, 1393, 1394, 1395, 1400, 1401, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1420, 1425, 1426, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1448, 1452, 1453, 1454, 1461, 1465, 1466, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1498, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1524, 1525, 1528, 1529, 1530, 1533, 1535, 1544, 1545, 1552, 1557, 1558, 1559, 1568, 1569, 1576, 1583, 1589, 1590, 1602, 1610, 1611, 1614, 1615, 1622, 1623, 1625, 1627, 1628, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1661, 1662, 1664, 1666, 1667, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1697, 1710, 1711, 1712, 1715, 1719, 1720, 1722, 1723, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1751, 1753, 1758, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1796, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1836, 1837, 1838, 1839, 1840, 1843, 1845, 1848, 1849, 1850, 1851, 1852, 1854, 1857, 1858, 1861, 1866, 1867, 1868, 1869, 1874, 1875, 1877, 1878, 1879, 1881, 1882, 1884, 1886, 1888, 1890, 1892, 1893, 1894, 1899, 1902, 1907, 1909, 1910, 1911, 1914, 1915, 1919, 1920, 1923, 1925, 1928, 1930, 1931, 1936, 1940, 1941, 1942, 1943, 1945, 1947, 1950, 1951, 1959, 1962, 1966, 1968, 1969, 1971], "whether": [0, 1, 2, 5, 7, 14, 21, 22, 25, 26, 27, 30, 31, 33, 41, 42, 49, 57, 78, 310, 312, 461, 507, 607, 670, 683, 685, 686, 689, 864, 865, 870, 879, 887, 890, 891, 893, 898, 899, 911, 920, 933, 934, 935, 941, 942, 943, 945, 948, 1014, 1030, 1124, 1129, 1141, 1157, 1158, 1175, 1197, 1200, 1208, 1209, 1217, 1222, 1230, 1231, 1237, 1239, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1255, 1257, 1258, 1261, 1262, 1263, 1264, 1272, 1288, 1290, 1298, 1300, 1301, 1303, 1306, 1324, 1329, 1330, 1331, 1332, 1357, 1394, 1400, 1434, 1443, 1448, 1483, 1495, 1496, 1497, 1517, 1545, 1576, 1608, 1614, 1627, 1629, 1632, 1645, 1659, 1662, 1667, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1698, 1710, 1720, 1723, 1767, 1768, 1818, 1819, 1820, 1823, 1824, 1843, 1848, 1857, 1858, 1861, 1862, 1867, 1868, 1872, 1879, 1884, 1890, 1891, 1893, 1899, 1903, 1907, 1909, 1913, 1923, 1925, 1929, 1931, 1936, 1940, 1942, 1944, 1945, 1950, 1956, 1959, 1962, 1969], "torch_dtyp": 0, "weight": [0, 21, 25, 31, 46, 47, 49, 55, 57, 58, 147, 292, 352, 353, 486, 702, 703, 704, 705, 706, 707, 708, 709, 710, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 735, 736, 739, 741, 742, 743, 744, 746, 750, 751, 753, 754, 755, 762, 763, 764, 771, 782, 783, 784, 798, 799, 823, 825, 831, 835, 839, 840, 841, 842, 843, 848, 849, 851, 852, 913, 962, 1129, 1131, 1139, 1141, 1161, 1162, 1200, 1204, 1210, 1212, 1217, 1226, 1324, 1350, 1351, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1377, 1378, 1386, 1387, 1389, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1438, 1439, 1440, 1441, 1442, 1449, 1451, 1463, 1477, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1524, 1525, 1534, 1543, 1547, 1550, 1565, 1567, 1568, 1577, 1586, 1605, 1614, 1621, 1622, 1623, 1625, 1627, 1628, 1630, 1632, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1660, 1661, 1662, 1664, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1726, 1861, 1872, 1879, 1880, 1882, 1883, 1884, 1888, 1892, 1893, 1898, 1899, 1902, 1909, 1911, 1915, 1920, 1923, 1931, 1932, 1933, 1934, 1940, 1945, 1949, 1950, 1959, 1964], "cach": [0, 2, 3, 31, 57, 476, 942, 950, 997, 998, 1015, 1018, 1023, 1025, 1027, 1029, 1037, 1042, 1309, 1310, 1311, 1615, 1632, 1664, 1896, 1911, 1954, 1956, 1959, 1963, 1967, 1969, 1971], "insid": [0, 1, 7, 21, 42, 47, 49, 54, 56, 57, 887, 888, 889, 890, 981, 1018, 1131, 1135, 1140, 1212, 1614, 1881, 1883, 1884, 1888, 1892, 1903, 1907, 1909, 1910, 1914, 1925, 1940, 1949, 1958, 1962, 1969], "custom_fwd": [0, 1903], "fwd": [0, 1963], "cast_input": [0, 1903], "helper": [0, 3, 5, 25, 53, 57, 1473, 1879, 1880, 1883, 1907, 1908, 1925, 1928, 1936, 1968, 1970], "subclass": [0, 1, 14, 21, 27, 31, 35, 54, 57, 130, 527, 879, 880, 881, 1198, 1201, 1211, 1434, 1615, 1634, 1639, 1660, 1881, 1884, 1885, 1891, 1903, 1915, 1925, 1936, 1940, 1956, 1959, 1962, 1970], "page": [0, 6, 7, 9, 21, 26, 43, 45, 1273, 1477, 1479, 1481, 1907, 1908, 1915, 1926, 1936, 1966], "incom": [0, 25, 44, 771, 809, 810, 811, 812, 815, 1355, 1421, 1504, 1550, 1896, 1904], "non": [0, 1, 3, 5, 14, 20, 22, 25, 26, 27, 31, 33, 35, 42, 44, 45, 47, 49, 56, 58, 68, 75, 79, 141, 326, 478, 494, 503, 507, 535, 688, 724, 729, 730, 731, 732, 733, 735, 736, 746, 750, 754, 755, 762, 763, 764, 828, 855, 867, 879, 881, 883, 888, 890, 898, 899, 913, 926, 929, 942, 955, 956, 961, 1029, 1118, 1119, 1126, 1130, 1135, 1141, 1177, 1200, 1203, 1213, 1216, 1217, 1236, 1237, 1244, 1248, 1249, 1262, 1264, 1273, 1283, 1290, 1295, 1300, 1324, 1329, 1330, 1334, 1347, 1348, 1349, 1363, 1364, 1366, 1367, 1370, 1380, 1386, 1403, 1404, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1439, 1441, 1449, 1451, 1465, 1516, 1535, 1563, 1568, 1610, 1611, 1614, 1666, 1693, 1715, 1758, 1759, 1774, 1786, 1801, 1802, 1806, 1807, 1808, 1809, 1810, 1811, 1841, 1857, 1859, 1872, 1879, 1880, 1881, 1883, 1884, 1886, 1896, 1899, 1902, 1905, 1909, 1910, 1911, 1915, 1919, 1925, 1929, 1930, 1935, 1936, 1938, 1940, 1941, 1943, 1944, 1945, 1947, 1954, 1957, 1958, 1959, 1960, 1967, 1968, 1970], "intern": [0, 3, 8, 9, 14, 21, 22, 25, 27, 30, 31, 33, 39, 46, 49, 54, 57, 973, 1007, 1028, 1130, 1200, 1237, 1239, 1255, 1258, 1281, 1352, 1353, 1354, 1388, 1473, 1508, 1509, 1510, 1533, 1629, 1673, 1766, 1809, 1861, 1885, 1903, 1904, 1906, 1907, 1912, 1918, 1919, 1923, 1937, 1938, 1942, 1944, 1951, 1959, 1962, 1969], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 21, 25, 27, 29, 30, 31, 33, 35, 42, 43, 46, 47, 49, 50, 56, 57, 71, 79, 141, 200, 212, 476, 487, 488, 489, 731, 733, 771, 783, 785, 807, 849, 851, 852, 855, 869, 870, 880, 883, 884, 891, 892, 893, 898, 911, 920, 954, 965, 966, 968, 969, 973, 974, 975, 976, 978, 983, 984, 987, 988, 990, 991, 992, 993, 996, 997, 998, 1000, 1001, 1004, 1006, 1007, 1010, 1012, 1013, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1041, 1043, 1045, 1048, 1049, 1050, 1073, 1075, 1085, 1090, 1108, 1124, 1125, 1127, 1147, 1148, 1149, 1157, 1158, 1183, 1184, 1200, 1204, 1216, 1220, 1271, 1273, 1287, 1302, 1309, 1311, 1312, 1374, 1377, 1381, 1434, 1473, 1481, 1485, 1527, 1533, 1544, 1583, 1601, 1602, 1604, 1614, 1633, 1637, 1638, 1639, 1640, 1641, 1646, 1647, 1648, 1649, 1671, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1722, 1731, 1733, 1735, 1737, 1738, 1762, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1839, 1850, 1852, 1857, 1863, 1864, 1877, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1891, 1894, 1896, 1899, 1903, 1904, 1907, 1908, 1913, 1914, 1915, 1916, 1917, 1920, 1921, 1925, 1927, 1928, 1929, 1931, 1934, 1936, 1937, 1940, 1942, 1943, 1945, 1946, 1949, 1958, 1959, 1962, 1965, 1966, 1969, 1970, 1971], "outsid": [0, 5, 9, 21, 35, 46, 47, 49, 54, 58, 67, 68, 674, 785, 875, 1129, 1131, 1135, 1140, 1201, 1533, 1614, 1695, 1696, 1701, 1702, 1708, 1883, 1884, 1902, 1904, 1907, 1910, 1911, 1947, 1954, 1959, 1965], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 141, 187, 200, 246, 251, 326, 435, 436, 437, 438, 439, 463, 464, 478, 486, 488, 534, 570, 571, 593, 594, 608, 670, 679, 683, 685, 686, 687, 689, 725, 750, 769, 771, 775, 777, 781, 787, 828, 830, 837, 848, 854, 864, 865, 867, 879, 882, 883, 885, 887, 893, 898, 899, 912, 930, 933, 934, 935, 942, 944, 947, 954, 955, 956, 957, 972, 975, 976, 978, 983, 1011, 1014, 1015, 1060, 1062, 1076, 1108, 1120, 1129, 1130, 1133, 1134, 1137, 1141, 1153, 1162, 1163, 1174, 1197, 1200, 1204, 1208, 1211, 1212, 1213, 1216, 1221, 1222, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1267, 1268, 1272, 1281, 1288, 1290, 1295, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1312, 1329, 1330, 1331, 1332, 1350, 1351, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1371, 1372, 1378, 1381, 1382, 1383, 1386, 1389, 1394, 1397, 1398, 1399, 1404, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1438, 1439, 1440, 1441, 1442, 1449, 1465, 1467, 1473, 1481, 1485, 1486, 1498, 1508, 1509, 1510, 1516, 1525, 1528, 1529, 1533, 1544, 1568, 1570, 1571, 1573, 1577, 1583, 1589, 1602, 1604, 1605, 1608, 1609, 1614, 1627, 1629, 1631, 1634, 1638, 1640, 1643, 1653, 1654, 1661, 1662, 1666, 1668, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1696, 1697, 1698, 1700, 1704, 1706, 1710, 1720, 1722, 1723, 1724, 1725, 1742, 1744, 1754, 1766, 1788, 1802, 1803, 1804, 1809, 1815, 1817, 1818, 1819, 1820, 1823, 1824, 1836, 1842, 1848, 1859, 1867, 1868, 1872, 1881, 1883, 1884, 1888, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1913, 1914, 1915, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1935, 1936, 1937, 1938, 1940, 1942, 1943, 1945, 1946, 1947, 1948, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1963, 1965, 1969], "effect": [0, 3, 7, 14, 21, 22, 25, 31, 44, 46, 47, 49, 54, 57, 58, 61, 187, 200, 593, 725, 769, 775, 1007, 1055, 1141, 1200, 1243, 1244, 1245, 1246, 1302, 1342, 1357, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1379, 1434, 1440, 1486, 1544, 1571, 1602, 1608, 1614, 1615, 1639, 1690, 1698, 1799, 1804, 1824, 1846, 1862, 1872, 1879, 1881, 1888, 1892, 1902, 1903, 1904, 1907, 1909, 1931, 1934, 1942, 1943, 1945, 1954, 1959], "custom_bwd": [0, 1903], "bwd": 0, "small": [0, 3, 7, 9, 21, 22, 25, 31, 42, 46, 855, 898, 899, 942, 986, 1029, 1263, 1264, 1276, 1278, 1342, 1369, 1443, 1448, 1462, 1482, 1486, 1515, 1569, 1576, 1614, 1695, 1701, 1710, 1824, 1881, 1883, 1884, 1907, 1909, 1911, 1915, 1918, 1920, 1925, 1928, 1931, 1932, 1940, 1941, 1947, 1954, 1957, 1958, 1959, 1960, 1963, 1967, 1969, 1971], "magnitud": [0, 957, 1664, 1774, 1902, 1903, 1907], "represent": [0, 3, 14, 21, 25, 27, 40, 46, 47, 57, 72, 471, 748, 816, 976, 1088, 1089, 1091, 1115, 1145, 1200, 1240, 1243, 1245, 1248, 1328, 1434, 1440, 1710, 1880, 1881, 1884, 1899, 1909, 1918, 1923, 1925, 1928, 1931, 1940, 1947, 1957, 1959, 1969, 1972], "These": [0, 1, 2, 3, 8, 14, 15, 21, 25, 26, 31, 50, 52, 55, 57, 784, 870, 962, 1072, 1137, 1197, 1200, 1243, 1308, 1342, 1434, 1605, 1628, 1880, 1881, 1882, 1883, 1884, 1894, 1897, 1898, 1900, 1903, 1904, 1907, 1908, 1909, 1915, 1918, 1920, 1925, 1928, 1934, 1936, 1937, 1943, 1948, 1954, 1956, 1957, 1959, 1962, 1965, 1969, 1970], "flush": [0, 1, 27, 46, 1029, 1211, 1754, 1767, 1918, 1945], "zero": [0, 1, 2, 22, 25, 26, 29, 31, 44, 47, 49, 54, 57, 141, 251, 306, 503, 505, 534, 535, 574, 575, 577, 578, 613, 669, 681, 688, 702, 703, 704, 705, 706, 707, 708, 709, 715, 716, 717, 720, 721, 728, 729, 730, 731, 732, 733, 734, 739, 740, 741, 742, 743, 744, 745, 746, 749, 750, 754, 758, 759, 762, 763, 764, 765, 767, 770, 771, 785, 789, 809, 810, 811, 812, 815, 820, 867, 876, 877, 878, 883, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 912, 913, 933, 934, 935, 940, 957, 961, 1018, 1029, 1033, 1034, 1063, 1067, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1120, 1126, 1129, 1137, 1159, 1160, 1163, 1185, 1197, 1200, 1212, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1273, 1281, 1282, 1283, 1284, 1285, 1290, 1291, 1324, 1328, 1332, 1346, 1347, 1348, 1349, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1387, 1389, 1402, 1403, 1404, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1440, 1443, 1446, 1447, 1448, 1449, 1451, 1471, 1485, 1486, 1489, 1490, 1491, 1500, 1501, 1502, 1511, 1512, 1513, 1515, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1533, 1554, 1555, 1569, 1570, 1571, 1583, 1637, 1638, 1639, 1640, 1655, 1662, 1666, 1670, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1710, 1722, 1724, 1725, 1726, 1742, 1751, 1761, 1788, 1792, 1802, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1824, 1839, 1840, 1842, 1848, 1878, 1881, 1882, 1884, 1886, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1907, 1909, 1915, 1918, 1921, 1925, 1926, 1928, 1930, 1931, 1934, 1936, 1940, 1941, 1943, 1945, 1946, 1947, 1948, 1958, 1961], "underflow": [0, 1400, 1903], "updat": [0, 9, 11, 21, 22, 27, 29, 33, 42, 46, 49, 52, 53, 57, 77, 212, 478, 503, 505, 750, 789, 790, 814, 1129, 1138, 1200, 1237, 1352, 1353, 1354, 1371, 1377, 1378, 1386, 1397, 1398, 1399, 1434, 1435, 1444, 1473, 1524, 1525, 1621, 1628, 1632, 1662, 1676, 1682, 1687, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1879, 1881, 1892, 1903, 1904, 1907, 1908, 1909, 1915, 1917, 1920, 1921, 1925, 1926, 1927, 1929, 1931, 1936, 1937, 1938, 1945, 1954, 1968], "lost": [0, 33, 43, 45, 1371, 1430, 1431, 1432], "To": [0, 1, 2, 3, 4, 5, 6, 9, 14, 15, 21, 22, 25, 26, 29, 30, 31, 33, 34, 40, 41, 43, 44, 46, 47, 49, 54, 57, 70, 73, 74, 77, 326, 489, 547, 724, 884, 897, 939, 942, 974, 1019, 1039, 1060, 1062, 1072, 1100, 1102, 1106, 1117, 1200, 1201, 1203, 1204, 1211, 1212, 1246, 1268, 1273, 1301, 1342, 1351, 1374, 1400, 1430, 1431, 1432, 1434, 1487, 1488, 1506, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1664, 1704, 1712, 1723, 1762, 1766, 1770, 1809, 1825, 1879, 1881, 1883, 1884, 1888, 1896, 1897, 1898, 1900, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1920, 1925, 1927, 1928, 1929, 1930, 1931, 1936, 1937, 1938, 1940, 1943, 1944, 1945, 1946, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1967, 1968, 1969, 1971], "prevent": [0, 7, 8, 21, 22, 25, 26, 33, 49, 57, 489, 725, 889, 975, 1053, 1054, 1073, 1074, 1075, 1197, 1300, 1312, 1329, 1332, 1372, 1440, 1465, 1552, 1589, 1590, 1605, 1614, 1720, 1800, 1803, 1823, 1850, 1852, 1861, 1896, 1903, 1904, 1907, 1908, 1911, 1915, 1919, 1928, 1930, 1938, 1940, 1941, 1954, 1958, 1959, 1962], "multipli": [0, 25, 304, 312, 413, 503, 675, 676, 677, 678, 679, 680, 681, 750, 769, 775, 776, 777, 910, 922, 1042, 1055, 1072, 1153, 1164, 1224, 1236, 1237, 1241, 1254, 1256, 1258, 1264, 1266, 1295, 1305, 1319, 1323, 1326, 1350, 1362, 1363, 1364, 1367, 1386, 1404, 1486, 1487, 1488, 1544, 1602, 1603, 1604, 1632, 1695, 1701, 1703, 1710, 1766, 1794, 1797, 1801, 1802, 1816, 1820, 1821, 1824, 1846, 1882, 1897, 1907, 1912, 1915, 1918, 1926, 1940, 1941, 1959], "factor": [0, 3, 22, 31, 57, 679, 680, 681, 789, 809, 910, 933, 1243, 1244, 1245, 1248, 1250, 1290, 1291, 1292, 1372, 1395, 1422, 1446, 1447, 1574, 1575, 1583, 1690, 1691, 1692, 1694, 1695, 1697, 1699, 1700, 1701, 1702, 1703, 1706, 1707, 1708, 1722, 1780, 1802, 1824, 1902, 1903, 1931, 1940, 1959], "flow": [0, 47, 58, 64, 66, 939, 954, 1213, 1216, 1498, 1533, 1614, 1880, 1881, 1902, 1904, 1907, 1909, 1920, 1922, 1925, 1938, 1954, 1955, 1957, 1959, 1962, 1967], "through": [0, 5, 7, 9, 15, 21, 25, 27, 31, 35, 46, 47, 49, 54, 56, 57, 58, 61, 63, 70, 486, 782, 830, 844, 851, 852, 889, 898, 899, 980, 1018, 1099, 1133, 1141, 1198, 1201, 1203, 1216, 1217, 1219, 1236, 1237, 1258, 1264, 1281, 1441, 1478, 1479, 1480, 1481, 1535, 1605, 1614, 1621, 1632, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1722, 1872, 1879, 1880, 1883, 1884, 1888, 1890, 1894, 1896, 1897, 1898, 1904, 1907, 1909, 1911, 1912, 1914, 1915, 1921, 1922, 1923, 1925, 1928, 1929, 1931, 1934, 1936, 1937, 1938, 1940, 1944, 1948, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1968, 1969, 1972], "word": [0, 1, 8, 25, 42, 43, 47, 52, 56, 57, 926, 1342, 1362, 1363, 1364, 1377, 1378, 1477, 1524, 1525, 1544, 1602, 1614, 1627, 1758, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1883, 1904, 1911, 1928, 1937], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 21, 25, 26, 27, 29, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 57, 58, 65, 66, 75, 144, 145, 212, 213, 304, 306, 312, 326, 389, 393, 438, 448, 461, 476, 477, 478, 493, 503, 505, 507, 510, 534, 607, 670, 679, 683, 685, 686, 687, 689, 805, 807, 831, 870, 879, 883, 891, 893, 903, 904, 911, 912, 920, 929, 930, 942, 945, 954, 962, 978, 987, 988, 1018, 1029, 1063, 1071, 1078, 1092, 1102, 1107, 1109, 1123, 1129, 1130, 1141, 1142, 1143, 1157, 1158, 1161, 1162, 1174, 1175, 1197, 1199, 1200, 1203, 1204, 1206, 1208, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1222, 1223, 1232, 1236, 1237, 1253, 1260, 1261, 1264, 1266, 1272, 1281, 1283, 1288, 1295, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1324, 1329, 1330, 1332, 1334, 1342, 1346, 1350, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1371, 1377, 1378, 1382, 1383, 1388, 1393, 1397, 1398, 1399, 1426, 1434, 1437, 1438, 1439, 1440, 1441, 1481, 1483, 1515, 1524, 1525, 1528, 1529, 1533, 1550, 1568, 1570, 1573, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1619, 1620, 1621, 1622, 1624, 1627, 1629, 1632, 1656, 1660, 1665, 1667, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1720, 1746, 1747, 1761, 1766, 1774, 1797, 1801, 1805, 1806, 1807, 1808, 1810, 1811, 1818, 1819, 1820, 1823, 1824, 1836, 1840, 1846, 1848, 1861, 1864, 1867, 1868, 1870, 1872, 1874, 1879, 1881, 1882, 1883, 1884, 1886, 1888, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1927, 1928, 1929, 1931, 1932, 1935, 1936, 1937, 1938, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1966, 1968, 1969, 1970, 1971], "larger": [0, 9, 25, 31, 57, 245, 489, 899, 913, 1029, 1130, 1255, 1258, 1342, 1371, 1377, 1378, 1426, 1483, 1486, 1524, 1525, 1904, 1907, 1911, 1912, 1914, 1918, 1920, 1940, 1945, 1962, 1963, 1966, 1967, 1968], "thei": [0, 1, 3, 5, 7, 9, 11, 12, 17, 18, 21, 25, 27, 31, 32, 42, 46, 47, 49, 52, 53, 56, 57, 75, 312, 326, 327, 676, 679, 680, 687, 790, 805, 806, 807, 814, 831, 844, 849, 880, 889, 899, 910, 942, 1018, 1076, 1123, 1129, 1139, 1175, 1189, 1190, 1197, 1200, 1208, 1213, 1222, 1236, 1237, 1243, 1264, 1272, 1294, 1298, 1301, 1303, 1306, 1324, 1347, 1348, 1349, 1365, 1366, 1367, 1381, 1419, 1427, 1428, 1429, 1434, 1440, 1450, 1462, 1485, 1533, 1535, 1605, 1614, 1615, 1619, 1627, 1629, 1630, 1653, 1656, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1700, 1703, 1762, 1768, 1820, 1824, 1861, 1862, 1866, 1879, 1881, 1883, 1884, 1886, 1888, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1907, 1908, 1909, 1910, 1913, 1915, 1917, 1918, 1920, 1921, 1923, 1925, 1927, 1928, 1929, 1931, 1936, 1940, 1945, 1947, 1948, 1949, 1954, 1957, 1958, 1959, 1960, 1961, 1965, 1969, 1970], "don": [0, 1, 4, 7, 9, 11, 25, 41, 50, 52, 54, 57, 58, 67, 68, 141, 775, 785, 883, 884, 897, 1046, 1129, 1216, 1294, 1397, 1398, 1399, 1486, 1602, 1605, 1614, 1668, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1765, 1879, 1881, 1885, 1896, 1897, 1898, 1904, 1907, 1909, 1911, 1915, 1917, 1921, 1925, 1927, 1928, 1929, 1931, 1936, 1937, 1940, 1954, 1956, 1957, 1958, 1959, 1960, 1962, 1970], "t": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 21, 22, 25, 27, 31, 32, 35, 39, 41, 42, 46, 47, 50, 52, 54, 55, 56, 57, 58, 60, 67, 68, 72, 75, 141, 304, 306, 312, 448, 513, 527, 561, 677, 678, 687, 750, 771, 775, 785, 813, 816, 867, 868, 869, 870, 879, 881, 883, 884, 887, 889, 892, 897, 933, 934, 935, 940, 954, 962, 973, 976, 997, 1015, 1016, 1046, 1070, 1088, 1093, 1094, 1095, 1096, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1123, 1124, 1125, 1126, 1129, 1130, 1131, 1141, 1142, 1153, 1163, 1197, 1198, 1200, 1201, 1203, 1207, 1208, 1212, 1214, 1216, 1219, 1221, 1230, 1231, 1237, 1239, 1240, 1243, 1250, 1258, 1259, 1264, 1272, 1273, 1281, 1294, 1307, 1308, 1322, 1331, 1351, 1355, 1357, 1362, 1363, 1364, 1371, 1377, 1378, 1386, 1395, 1397, 1398, 1399, 1400, 1404, 1421, 1434, 1449, 1465, 1467, 1477, 1485, 1486, 1504, 1508, 1509, 1510, 1517, 1524, 1525, 1545, 1550, 1569, 1589, 1602, 1605, 1608, 1609, 1614, 1615, 1627, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1654, 1656, 1657, 1668, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1696, 1706, 1712, 1718, 1722, 1739, 1764, 1765, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1797, 1801, 1820, 1824, 1825, 1830, 1836, 1839, 1845, 1848, 1872, 1873, 1879, 1881, 1882, 1883, 1885, 1888, 1894, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1912, 1914, 1915, 1917, 1920, 1921, 1925, 1926, 1927, 1928, 1929, 1931, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1954, 1956, 1957, 1958, 1960, 1962, 1964, 1967, 1969, 1970], "grad": [0, 1, 5, 25, 31, 50, 53, 54, 57, 141, 326, 448, 477, 478, 485, 486, 493, 494, 571, 670, 870, 879, 883, 884, 890, 891, 893, 898, 899, 903, 904, 1018, 1076, 1129, 1130, 1132, 1136, 1140, 1141, 1175, 1183, 1200, 1273, 1434, 1614, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1768, 1801, 1861, 1872, 1880, 1881, 1882, 1897, 1898, 1899, 1903, 1908, 1909, 1910, 1912, 1915, 1917, 1926, 1936, 1937, 1940, 1946, 1965], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 14, 24, 25, 29, 31, 33, 35, 39, 41, 42, 44, 46, 47, 49, 52, 53, 54, 56, 57, 58, 141, 245, 326, 425, 448, 573, 607, 670, 685, 686, 738, 747, 750, 780, 784, 851, 870, 922, 1009, 1013, 1063, 1072, 1076, 1126, 1129, 1141, 1174, 1199, 1201, 1204, 1211, 1216, 1226, 1231, 1243, 1244, 1248, 1249, 1256, 1262, 1264, 1270, 1273, 1290, 1294, 1295, 1301, 1305, 1309, 1326, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1374, 1377, 1378, 1381, 1386, 1387, 1397, 1398, 1399, 1404, 1405, 1407, 1408, 1409, 1416, 1417, 1418, 1428, 1429, 1435, 1441, 1444, 1449, 1451, 1473, 1485, 1516, 1568, 1614, 1615, 1621, 1629, 1632, 1636, 1662, 1665, 1667, 1672, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1707, 1711, 1716, 1758, 1761, 1762, 1766, 1768, 1792, 1797, 1824, 1845, 1848, 1861, 1862, 1872, 1878, 1879, 1880, 1881, 1883, 1884, 1886, 1888, 1892, 1896, 1897, 1898, 1899, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1915, 1917, 1918, 1919, 1922, 1923, 1925, 1928, 1929, 1931, 1936, 1938, 1940, 1943, 1947, 1954, 1957, 1962, 1969, 1971], "interfer": [0, 1894, 1907, 1925, 1959], "learn": [0, 7, 8, 15, 31, 41, 46, 49, 57, 77, 1355, 1368, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1394, 1406, 1419, 1421, 1442, 1463, 1477, 1479, 1481, 1482, 1483, 1586, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1880, 1888, 1900, 1902, 1907, 1913, 1915, 1916, 1922, 1928, 1931, 1936, 1938, 1951, 1953, 1955, 1957, 1962], "rate": [0, 8, 22, 31, 49, 1373, 1374, 1375, 1379, 1480, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1880, 1914, 1945, 1959, 1966], "fp16": [0, 2, 719, 1614, 1621, 1931, 1932], "everi": [0, 1, 2, 8, 9, 21, 22, 25, 27, 29, 31, 33, 47, 49, 54, 57, 471, 477, 600, 670, 771, 809, 887, 903, 904, 942, 1055, 1072, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1130, 1153, 1162, 1200, 1232, 1246, 1256, 1259, 1290, 1346, 1372, 1373, 1374, 1375, 1379, 1427, 1434, 1467, 1469, 1473, 1519, 1520, 1521, 1526, 1557, 1558, 1559, 1573, 1590, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1628, 1661, 1664, 1665, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1762, 1824, 1858, 1884, 1890, 1894, 1903, 1904, 1907, 1908, 1909, 1910, 1912, 1916, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1936, 1937, 1938, 1940, 1942, 1943, 1945, 1947, 1957, 1958, 1962, 1966, 1967, 1968, 1969], "most": [0, 1, 3, 4, 7, 8, 15, 21, 25, 27, 29, 31, 32, 33, 34, 41, 42, 44, 45, 49, 54, 55, 56, 57, 58, 489, 783, 887, 888, 889, 894, 898, 907, 942, 1041, 1055, 1072, 1130, 1175, 1185, 1198, 1201, 1306, 1342, 1481, 1533, 1583, 1614, 1621, 1632, 1687, 1766, 1799, 1846, 1879, 1881, 1883, 1884, 1886, 1891, 1896, 1898, 1899, 1904, 1907, 1909, 1917, 1918, 1919, 1923, 1927, 1930, 1931, 1937, 1938, 1940, 1943, 1945, 1947, 1951, 1953, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1968, 1969], "bf16": [0, 2], "pretrain": [0, 852, 1377, 1378, 1879, 1904, 1925], "cannot": [0, 3, 8, 9, 12, 21, 22, 25, 31, 32, 35, 42, 46, 49, 50, 54, 55, 56, 57, 58, 213, 245, 514, 535, 870, 954, 1093, 1095, 1103, 1104, 1105, 1111, 1124, 1129, 1197, 1205, 1324, 1357, 1377, 1486, 1517, 1583, 1614, 1673, 1825, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1894, 1898, 1899, 1904, 1908, 1909, 1920, 1921, 1925, 1931, 1936, 1938, 1940, 1942, 1943, 1954, 1956, 1959, 1960, 1970], "numer": [0, 21, 31, 47, 50, 55, 677, 783, 898, 899, 926, 1204, 1216, 1217, 1232, 1236, 1237, 1241, 1246, 1254, 1255, 1258, 1261, 1264, 1266, 1288, 1290, 1351, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1467, 1470, 1473, 1482, 1524, 1545, 1552, 1583, 1589, 1591, 1628, 1661, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1726, 1758, 1824, 1880, 1884, 1885, 1889, 1892, 1907, 1909, 1910, 1925, 1931, 1941, 1946, 1959, 1969, 1972], "max": [0, 21, 25, 33, 35, 41, 42, 44, 46, 49, 57, 58, 67, 68, 107, 176, 177, 178, 179, 291, 685, 686, 687, 748, 760, 761, 770, 772, 773, 792, 809, 810, 811, 812, 815, 864, 913, 930, 937, 938, 942, 962, 1051, 1086, 1087, 1160, 1212, 1232, 1246, 1253, 1255, 1257, 1258, 1270, 1343, 1344, 1345, 1356, 1357, 1368, 1369, 1378, 1382, 1383, 1388, 1393, 1394, 1402, 1403, 1420, 1422, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1437, 1438, 1439, 1442, 1453, 1454, 1461, 1482, 1483, 1485, 1495, 1496, 1497, 1507, 1515, 1525, 1528, 1529, 1544, 1548, 1557, 1558, 1559, 1569, 1573, 1577, 1579, 1584, 1602, 1619, 1656, 1679, 1680, 1681, 1691, 1696, 1697, 1706, 1727, 1728, 1801, 1818, 1819, 1831, 1832, 1861, 1867, 1868, 1881, 1882, 1891, 1894, 1899, 1905, 1907, 1911, 1926, 1931, 1934, 1958, 1963, 1964, 1972], "65504": 0, "overflow": [0, 1053, 1054, 1300, 1329, 1332, 1552, 1589, 1590, 1720, 1751, 1800, 1803, 1823, 1850, 1852, 1907, 1918, 1941], "instead": [0, 1, 3, 5, 8, 9, 14, 21, 22, 25, 27, 30, 31, 33, 39, 42, 43, 46, 47, 49, 52, 53, 54, 57, 58, 60, 66, 212, 397, 448, 489, 503, 738, 747, 758, 759, 783, 807, 816, 870, 880, 891, 892, 893, 894, 897, 898, 926, 932, 1107, 1109, 1134, 1135, 1136, 1137, 1140, 1141, 1146, 1187, 1198, 1200, 1201, 1205, 1230, 1231, 1237, 1239, 1255, 1258, 1264, 1270, 1272, 1301, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1371, 1373, 1374, 1375, 1379, 1386, 1394, 1400, 1401, 1402, 1403, 1404, 1425, 1426, 1427, 1428, 1429, 1434, 1437, 1438, 1439, 1441, 1448, 1449, 1461, 1465, 1466, 1467, 1473, 1482, 1500, 1501, 1502, 1505, 1506, 1516, 1526, 1533, 1545, 1557, 1558, 1559, 1568, 1576, 1589, 1614, 1662, 1664, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1697, 1698, 1704, 1727, 1728, 1738, 1758, 1762, 1805, 1820, 1824, 1861, 1872, 1881, 1883, 1884, 1891, 1898, 1902, 1903, 1904, 1908, 1909, 1910, 1911, 1912, 1913, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1930, 1931, 1934, 1937, 1940, 1947, 1948, 1950, 1954, 1955, 1957, 1958, 1959, 1962, 1965, 1968, 1969, 1970], "case": [0, 1, 3, 4, 8, 9, 11, 14, 15, 21, 22, 25, 27, 29, 31, 33, 34, 35, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 75, 141, 145, 187, 343, 486, 489, 670, 750, 774, 781, 784, 810, 811, 813, 816, 848, 855, 883, 891, 893, 897, 911, 913, 918, 957, 972, 997, 1019, 1020, 1039, 1040, 1041, 1072, 1093, 1095, 1103, 1104, 1105, 1120, 1131, 1135, 1140, 1159, 1185, 1198, 1201, 1210, 1213, 1214, 1216, 1230, 1232, 1236, 1237, 1241, 1246, 1247, 1248, 1250, 1256, 1259, 1264, 1266, 1270, 1272, 1273, 1278, 1281, 1290, 1301, 1324, 1342, 1347, 1348, 1349, 1350, 1351, 1362, 1363, 1364, 1366, 1367, 1368, 1370, 1373, 1374, 1375, 1376, 1378, 1379, 1381, 1390, 1391, 1392, 1393, 1394, 1395, 1401, 1402, 1403, 1420, 1425, 1427, 1428, 1429, 1440, 1441, 1442, 1452, 1465, 1471, 1476, 1481, 1483, 1485, 1498, 1516, 1525, 1533, 1537, 1538, 1568, 1570, 1577, 1614, 1616, 1617, 1621, 1627, 1629, 1632, 1633, 1666, 1667, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1704, 1742, 1745, 1758, 1760, 1774, 1777, 1809, 1824, 1825, 1856, 1857, 1861, 1875, 1879, 1884, 1889, 1896, 1897, 1898, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1915, 1917, 1918, 1920, 1923, 1925, 1927, 1928, 1929, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1951, 1957, 1958, 1959, 1960, 1962, 1965, 1967, 1968, 1969, 1970, 1972], "decreas": [0, 31, 1029, 1246, 1373, 1374, 1375, 1379, 1447, 1654, 1655, 1691, 1698, 1706, 1890, 1892, 1917, 1919, 1940, 1943], "attempt": [0, 1, 8, 14, 25, 42, 43, 49, 54, 76, 936, 942, 945, 958, 1204, 1211, 1290, 1583, 1616, 1617, 1679, 1680, 1861, 1864, 1881, 1884, 1897, 1898, 1903, 1907, 1909, 1921, 1922, 1927, 1928, 1936, 1957, 1958, 1959, 1969], "bring": [0, 50, 57, 1093, 1498, 1533, 1929, 1963, 1966], "number": [0, 1, 2, 3, 4, 5, 7, 14, 21, 22, 25, 29, 31, 33, 40, 41, 42, 45, 46, 50, 52, 55, 57, 58, 63, 76, 79, 145, 164, 209, 223, 245, 304, 343, 368, 389, 393, 425, 436, 461, 463, 464, 471, 483, 487, 489, 503, 505, 507, 533, 535, 536, 548, 573, 574, 575, 577, 578, 579, 598, 607, 675, 676, 677, 678, 679, 680, 681, 688, 748, 750, 758, 759, 762, 763, 764, 771, 809, 855, 867, 880, 898, 910, 912, 913, 918, 922, 924, 928, 936, 937, 941, 957, 961, 962, 967, 978, 980, 986, 995, 1004, 1005, 1016, 1018, 1019, 1020, 1029, 1039, 1040, 1043, 1044, 1064, 1067, 1069, 1072, 1073, 1077, 1085, 1115, 1117, 1120, 1124, 1126, 1128, 1142, 1144, 1150, 1151, 1152, 1156, 1160, 1161, 1162, 1174, 1176, 1197, 1198, 1200, 1214, 1221, 1224, 1225, 1232, 1246, 1255, 1264, 1268, 1273, 1278, 1289, 1293, 1301, 1313, 1314, 1318, 1320, 1323, 1324, 1328, 1332, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1376, 1377, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1400, 1401, 1404, 1405, 1410, 1411, 1412, 1413, 1414, 1415, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1451, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1500, 1501, 1502, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1524, 1525, 1528, 1529, 1534, 1544, 1545, 1547, 1550, 1557, 1558, 1559, 1568, 1570, 1576, 1577, 1583, 1605, 1614, 1628, 1632, 1637, 1638, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1653, 1654, 1655, 1657, 1661, 1666, 1667, 1668, 1670, 1671, 1674, 1682, 1695, 1696, 1697, 1698, 1701, 1702, 1704, 1705, 1706, 1712, 1715, 1719, 1729, 1731, 1732, 1733, 1735, 1736, 1737, 1742, 1744, 1745, 1748, 1749, 1750, 1751, 1759, 1763, 1766, 1767, 1769, 1770, 1771, 1772, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1797, 1802, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1816, 1817, 1818, 1819, 1820, 1821, 1825, 1840, 1841, 1842, 1850, 1852, 1857, 1858, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1877, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1891, 1894, 1896, 1899, 1902, 1905, 1907, 1909, 1912, 1915, 1917, 1918, 1920, 1925, 1927, 1928, 1929, 1930, 1932, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1954, 1957, 1958, 1959, 1966, 1969, 1971, 1972], "expect": [0, 1, 3, 5, 7, 9, 12, 21, 22, 25, 27, 29, 33, 40, 42, 44, 46, 47, 49, 54, 55, 57, 71, 670, 687, 750, 844, 891, 892, 893, 894, 895, 896, 1018, 1093, 1095, 1112, 1113, 1114, 1134, 1135, 1174, 1197, 1200, 1216, 1217, 1245, 1266, 1267, 1301, 1353, 1354, 1370, 1386, 1387, 1388, 1389, 1398, 1399, 1400, 1404, 1405, 1406, 1416, 1417, 1418, 1434, 1440, 1441, 1449, 1451, 1467, 1473, 1477, 1479, 1481, 1486, 1524, 1530, 1544, 1568, 1576, 1577, 1589, 1602, 1603, 1604, 1605, 1614, 1654, 1707, 1763, 1834, 1870, 1879, 1880, 1886, 1904, 1908, 1911, 1912, 1915, 1925, 1927, 1928, 1931, 1932, 1933, 1936, 1940, 1945, 1947, 1955, 1958, 1959, 1963, 1965], "alwai": [0, 5, 7, 14, 17, 21, 22, 25, 40, 44, 46, 47, 49, 53, 57, 331, 438, 448, 784, 870, 888, 891, 897, 911, 920, 930, 936, 942, 965, 967, 1018, 1029, 1059, 1067, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1103, 1104, 1105, 1106, 1108, 1111, 1115, 1157, 1158, 1200, 1211, 1216, 1231, 1236, 1237, 1238, 1239, 1241, 1242, 1254, 1257, 1258, 1259, 1260, 1264, 1266, 1330, 1350, 1352, 1353, 1354, 1371, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1470, 1473, 1605, 1614, 1653, 1746, 1747, 1773, 1820, 1824, 1857, 1861, 1884, 1885, 1896, 1899, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1914, 1915, 1928, 1929, 1935, 1936, 1938, 1940, 1943, 1946, 1947, 1954, 1957, 1958], "abov": [0, 1, 3, 12, 15, 25, 31, 35, 42, 44, 46, 47, 49, 50, 55, 57, 58, 60, 73, 607, 670, 782, 783, 870, 911, 920, 1029, 1055, 1059, 1060, 1061, 1062, 1063, 1072, 1145, 1157, 1158, 1200, 1201, 1221, 1232, 1236, 1237, 1255, 1257, 1258, 1261, 1264, 1267, 1270, 1273, 1350, 1381, 1434, 1462, 1470, 1485, 1583, 1605, 1668, 1698, 1722, 1733, 1734, 1766, 1771, 1784, 1804, 1846, 1849, 1850, 1851, 1852, 1879, 1881, 1883, 1884, 1888, 1891, 1904, 1905, 1906, 1907, 1909, 1910, 1912, 1915, 1917, 1919, 1920, 1923, 1925, 1928, 1931, 1936, 1937, 1938, 1940, 1941, 1947, 1951, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1969], "our": [0, 3, 7, 8, 25, 38, 41, 42, 43, 45, 53, 54, 55, 57, 887, 1092, 1130, 1350, 1621, 1679, 1680, 1766, 1904, 1909, 1912, 1917, 1922, 1925, 1927, 1931, 1937, 1940, 1951, 1954, 1957, 1958, 1959, 1961, 1962, 1963, 1968, 1969], "NOT": [0, 21, 25, 33, 42, 43, 44, 46, 57, 916, 973, 1007, 1200, 1283, 1374, 1614, 1615, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1665, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1904, 1923, 1938, 1940], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 21, 22, 25, 27, 28, 30, 31, 33, 34, 39, 42, 43, 44, 45, 46, 53, 54, 57, 58, 68, 130, 213, 486, 769, 775, 851, 852, 883, 933, 975, 976, 978, 1060, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1112, 1113, 1114, 1200, 1204, 1210, 1211, 1230, 1231, 1243, 1244, 1245, 1273, 1312, 1350, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1395, 1434, 1444, 1481, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1533, 1535, 1544, 1583, 1602, 1614, 1627, 1643, 1660, 1700, 1763, 1796, 1806, 1807, 1808, 1810, 1811, 1843, 1861, 1864, 1879, 1881, 1883, 1884, 1894, 1896, 1897, 1899, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1917, 1919, 1921, 1925, 1927, 1928, 1930, 1931, 1932, 1936, 1937, 1938, 1940, 1943, 1945, 1949, 1951, 1956, 1957, 1958, 1959, 1961, 1963, 1965, 1968, 1969, 1970], "guarante": [0, 1, 5, 9, 21, 25, 27, 29, 31, 42, 44, 46, 47, 54, 56, 57, 58, 866, 942, 1200, 1210, 1371, 1434, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1796, 1798, 1861, 1904, 1906, 1907, 1918, 1919, 1928, 1930, 1932, 1936, 1938, 1957], "encount": [0, 5, 25, 46, 54, 56, 57, 670, 1614, 1621, 1881, 1884, 1886, 1890, 1906, 1918, 1928, 1931, 1955, 1959, 1962, 1965, 1967, 1969], "nan": [0, 1, 24, 31, 417, 418, 489, 674, 676, 679, 680, 681, 684, 687, 688, 871, 875, 910, 926, 1073, 1074, 1075, 1118, 1119, 1120, 1160, 1189, 1190, 1192, 1193, 1240, 1247, 1260, 1263, 1276, 1281, 1299, 1300, 1304, 1328, 1329, 1330, 1331, 1332, 1533, 1619, 1716, 1753, 1758, 1813, 1848, 1882, 1891, 1903, 1904, 1910, 1918, 1941, 1947], "verifi": [0, 25, 57, 78, 898, 1055, 1674, 1675, 1693, 1846, 1879, 1881, 1893, 1909, 1912, 1925, 1929, 1961], "compat": [0, 1, 14, 21, 27, 31, 33, 46, 49, 53, 54, 57, 58, 487, 488, 593, 607, 670, 805, 806, 807, 880, 923, 955, 956, 1200, 1205, 1218, 1231, 1242, 1255, 1258, 1434, 1440, 1477, 1478, 1479, 1480, 1481, 1544, 1621, 1664, 1673, 1745, 1879, 1880, 1883, 1884, 1890, 1896, 1897, 1903, 1909, 1920, 1923, 1928, 1930, 1931, 1934, 1936, 1940, 1942, 1948], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 12, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 44, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 145, 147, 164, 175, 182, 199, 215, 216, 217, 218, 219, 224, 245, 251, 254, 280, 289, 291, 302, 304, 306, 308, 312, 343, 392, 393, 417, 418, 435, 438, 439, 444, 471, 473, 477, 478, 486, 497, 498, 503, 505, 507, 510, 528, 533, 534, 537, 546, 548, 550, 568, 570, 571, 573, 574, 575, 577, 578, 579, 585, 586, 587, 588, 595, 597, 598, 607, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 702, 703, 704, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 741, 742, 743, 745, 746, 747, 748, 750, 758, 759, 760, 762, 763, 764, 765, 768, 770, 772, 773, 775, 784, 786, 789, 792, 807, 810, 811, 812, 815, 844, 846, 855, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 888, 891, 892, 893, 895, 898, 899, 901, 903, 904, 907, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 926, 929, 930, 931, 932, 933, 934, 936, 937, 940, 952, 953, 954, 957, 958, 959, 960, 961, 962, 972, 978, 987, 989, 1015, 1016, 1042, 1046, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1070, 1072, 1074, 1075, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1131, 1132, 1133, 1134, 1135, 1139, 1140, 1141, 1142, 1143, 1153, 1157, 1159, 1160, 1161, 1162, 1163, 1166, 1170, 1174, 1177, 1185, 1196, 1197, 1198, 1200, 1204, 1206, 1207, 1208, 1212, 1220, 1221, 1222, 1223, 1224, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1262, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1290, 1294, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1319, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1338, 1340, 1341, 1342, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 1422, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1465, 1467, 1468, 1469, 1471, 1473, 1476, 1477, 1479, 1481, 1482, 1483, 1485, 1486, 1489, 1490, 1491, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1531, 1533, 1536, 1537, 1538, 1541, 1542, 1543, 1544, 1548, 1549, 1551, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1579, 1583, 1584, 1587, 1589, 1592, 1598, 1599, 1600, 1601, 1602, 1605, 1614, 1618, 1619, 1621, 1627, 1628, 1632, 1637, 1638, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1653, 1654, 1656, 1657, 1659, 1660, 1661, 1662, 1664, 1666, 1667, 1668, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1713, 1715, 1716, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1749, 1750, 1751, 1753, 1754, 1758, 1760, 1761, 1762, 1765, 1767, 1771, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1796, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1826, 1827, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1857, 1858, 1859, 1860, 1863, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1888, 1891, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1933, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1963, 1964, 1967, 1968, 1970, 1972], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 12, 14, 18, 19, 21, 22, 25, 31, 40, 46, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 145, 182, 199, 224, 251, 280, 289, 304, 306, 308, 312, 392, 393, 435, 461, 489, 503, 505, 507, 513, 527, 534, 548, 550, 574, 575, 576, 577, 578, 597, 675, 676, 680, 687, 724, 729, 730, 731, 732, 733, 735, 736, 750, 752, 763, 764, 851, 852, 855, 870, 876, 877, 878, 891, 894, 896, 910, 913, 920, 921, 922, 926, 928, 932, 934, 935, 936, 937, 940, 957, 961, 1051, 1053, 1055, 1062, 1064, 1066, 1067, 1070, 1071, 1072, 1075, 1088, 1090, 1092, 1093, 1099, 1100, 1103, 1108, 1111, 1112, 1115, 1118, 1120, 1121, 1122, 1124, 1131, 1133, 1134, 1135, 1136, 1139, 1140, 1141, 1143, 1153, 1159, 1161, 1163, 1165, 1166, 1177, 1185, 1189, 1207, 1211, 1212, 1221, 1222, 1223, 1226, 1229, 1230, 1247, 1250, 1253, 1256, 1257, 1258, 1259, 1264, 1265, 1268, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1283, 1287, 1294, 1295, 1301, 1302, 1306, 1331, 1333, 1334, 1336, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1351, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1388, 1389, 1390, 1395, 1397, 1398, 1399, 1400, 1401, 1404, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1422, 1425, 1430, 1431, 1434, 1441, 1444, 1448, 1449, 1455, 1456, 1457, 1458, 1459, 1462, 1465, 1471, 1473, 1477, 1479, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1499, 1500, 1508, 1509, 1511, 1512, 1516, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1531, 1533, 1536, 1544, 1568, 1570, 1576, 1592, 1602, 1603, 1604, 1614, 1632, 1642, 1645, 1647, 1648, 1650, 1655, 1656, 1658, 1660, 1666, 1667, 1668, 1670, 1671, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1695, 1701, 1705, 1711, 1713, 1715, 1716, 1718, 1719, 1722, 1723, 1726, 1727, 1728, 1729, 1733, 1738, 1739, 1742, 1743, 1749, 1750, 1751, 1758, 1771, 1778, 1780, 1781, 1782, 1783, 1786, 1787, 1796, 1802, 1804, 1805, 1806, 1807, 1809, 1812, 1820, 1823, 1824, 1825, 1826, 1827, 1835, 1837, 1839, 1840, 1841, 1843, 1844, 1846, 1855, 1856, 1859, 1861, 1866, 1872, 1873, 1874, 1877, 1881, 1882, 1883, 1884, 1885, 1891, 1898, 1899, 1902, 1903, 1904, 1905, 1907, 1909, 1911, 1912, 1915, 1916, 1920, 1921, 1923, 1925, 1927, 1929, 1931, 1936, 1940, 1941, 1943, 1945, 1946, 1947, 1956, 1967, 1968, 1969], "growth_interv": 0, "2000": [0, 25, 29, 1090, 1092, 1099, 1108, 1121, 1278, 1486, 1698, 1726, 1776, 1777, 1839], "scaler": [0, 1903, 1907], "help": [0, 1, 4, 7, 8, 11, 14, 21, 22, 25, 27, 39, 42, 49, 54, 57, 898, 899, 907, 997, 1029, 1130, 1131, 1141, 1200, 1201, 1220, 1302, 1315, 1316, 1373, 1374, 1375, 1379, 1434, 1627, 1773, 1872, 1879, 1884, 1891, 1897, 1898, 1903, 1904, 1905, 1907, 1908, 1910, 1913, 1915, 1918, 1923, 1925, 1928, 1936, 1937, 1940, 1948, 1958, 1961, 1962, 1963, 1967, 1969], "given": [0, 1, 2, 3, 7, 9, 14, 21, 22, 25, 26, 27, 29, 31, 33, 40, 42, 44, 46, 49, 55, 56, 57, 141, 210, 304, 306, 308, 312, 317, 368, 389, 393, 462, 463, 464, 465, 466, 468, 503, 505, 507, 574, 575, 594, 597, 670, 683, 685, 686, 688, 689, 725, 750, 769, 775, 782, 783, 784, 785, 789, 790, 792, 810, 814, 827, 830, 844, 848, 855, 866, 879, 881, 883, 885, 887, 889, 891, 892, 893, 894, 895, 896, 899, 912, 913, 916, 924, 928, 929, 934, 935, 936, 941, 942, 956, 958, 961, 962, 964, 966, 970, 972, 975, 976, 978, 979, 980, 984, 992, 993, 996, 1000, 1001, 1017, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1047, 1048, 1049, 1050, 1057, 1059, 1064, 1072, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1112, 1129, 1139, 1140, 1166, 1197, 1200, 1208, 1216, 1217, 1222, 1226, 1236, 1238, 1239, 1248, 1250, 1256, 1264, 1273, 1280, 1282, 1283, 1284, 1285, 1288, 1298, 1300, 1302, 1303, 1306, 1332, 1342, 1350, 1351, 1357, 1362, 1363, 1364, 1366, 1367, 1368, 1370, 1371, 1377, 1378, 1382, 1383, 1386, 1394, 1404, 1426, 1430, 1431, 1432, 1434, 1436, 1438, 1439, 1441, 1443, 1445, 1449, 1462, 1468, 1482, 1483, 1486, 1487, 1488, 1498, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1524, 1525, 1528, 1529, 1533, 1544, 1568, 1583, 1598, 1602, 1603, 1604, 1608, 1609, 1610, 1628, 1653, 1660, 1661, 1664, 1667, 1668, 1674, 1700, 1703, 1705, 1707, 1710, 1715, 1720, 1723, 1724, 1725, 1738, 1744, 1749, 1760, 1761, 1766, 1792, 1796, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1815, 1817, 1820, 1823, 1825, 1835, 1836, 1841, 1843, 1845, 1855, 1857, 1859, 1861, 1865, 1879, 1880, 1881, 1884, 1888, 1890, 1891, 1893, 1896, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1919, 1920, 1923, 1925, 1927, 1930, 1931, 1936, 1937, 1940, 1941, 1942, 1945, 1947, 1950, 1953, 1958, 1959, 1962, 1968, 1969, 1970], "safe": [0, 25, 42, 46, 56, 57, 76, 78, 1019, 1020, 1039, 1040, 1614, 1676, 1679, 1680, 1683, 1881, 1884, 1903, 1904, 1907, 1910, 1914, 1936, 1951, 1954, 1959, 1960, 1962, 1969], "onc": [0, 1, 7, 9, 15, 21, 22, 25, 26, 27, 29, 31, 32, 34, 35, 42, 49, 52, 54, 56, 57, 73, 887, 888, 889, 891, 893, 1072, 1200, 1204, 1272, 1371, 1434, 1614, 1630, 1632, 1664, 1702, 1706, 1722, 1769, 1773, 1864, 1881, 1884, 1888, 1892, 1894, 1896, 1903, 1904, 1906, 1907, 1909, 1912, 1914, 1915, 1927, 1928, 1940, 1945, 1954, 1956, 1959, 1962, 1966], "begin": [0, 18, 21, 22, 25, 26, 34, 42, 49, 57, 486, 670, 750, 774, 810, 811, 855, 911, 947, 957, 973, 1021, 1023, 1092, 1153, 1159, 1221, 1256, 1268, 1349, 1350, 1351, 1368, 1370, 1376, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1401, 1404, 1405, 1420, 1425, 1428, 1429, 1441, 1442, 1449, 1452, 1465, 1471, 1476, 1483, 1516, 1537, 1538, 1614, 1627, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1696, 1698, 1704, 1771, 1774, 1777, 1820, 1846, 1857, 1875, 1884, 1903, 1904, 1907, 1909, 1912, 1914, 1919, 1925, 1927, 1934, 1941, 1954, 1959, 1969], "first": [0, 1, 4, 5, 7, 9, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 42, 43, 46, 47, 49, 55, 57, 58, 66, 69, 207, 245, 281, 579, 600, 676, 679, 681, 684, 750, 783, 784, 804, 844, 847, 849, 864, 865, 874, 879, 880, 881, 882, 897, 898, 910, 914, 915, 917, 918, 919, 922, 924, 926, 940, 972, 975, 986, 1060, 1062, 1063, 1064, 1069, 1072, 1077, 1090, 1092, 1111, 1126, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1144, 1153, 1156, 1164, 1165, 1166, 1177, 1189, 1198, 1208, 1213, 1214, 1220, 1225, 1230, 1233, 1240, 1256, 1259, 1266, 1267, 1269, 1272, 1273, 1289, 1295, 1298, 1301, 1302, 1303, 1305, 1322, 1324, 1330, 1335, 1338, 1342, 1348, 1349, 1355, 1363, 1364, 1366, 1367, 1377, 1378, 1380, 1385, 1386, 1400, 1403, 1404, 1419, 1426, 1428, 1429, 1449, 1462, 1515, 1601, 1605, 1614, 1621, 1629, 1630, 1632, 1643, 1653, 1659, 1679, 1680, 1681, 1682, 1683, 1689, 1692, 1693, 1697, 1701, 1704, 1706, 1712, 1722, 1723, 1749, 1750, 1758, 1766, 1786, 1801, 1804, 1809, 1840, 1841, 1845, 1850, 1852, 1858, 1866, 1869, 1872, 1874, 1879, 1881, 1883, 1884, 1888, 1891, 1893, 1896, 1897, 1899, 1903, 1904, 1907, 1909, 1911, 1912, 1915, 1917, 1918, 1919, 1920, 1921, 1925, 1927, 1929, 1930, 1931, 1936, 1937, 1938, 1940, 1941, 1945, 1949, 1954, 1955, 1956, 1957, 1958, 1959, 1962, 1967, 1968, 1969, 1970], "param": [0, 1, 29, 31, 34, 42, 49, 51, 53, 57, 478, 754, 785, 1129, 1139, 1200, 1219, 1434, 1440, 1444, 1445, 1613, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1706, 1863, 1882, 1892, 1902, 1903, 1907, 1908, 1927, 1970], "contain": [0, 1, 2, 3, 5, 11, 14, 15, 21, 25, 26, 27, 29, 30, 31, 33, 35, 36, 40, 43, 46, 47, 49, 56, 57, 58, 59, 64, 66, 74, 79, 141, 145, 182, 186, 199, 281, 302, 304, 306, 310, 312, 461, 473, 534, 593, 597, 676, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 750, 804, 827, 831, 867, 882, 883, 891, 892, 893, 894, 895, 896, 897, 907, 910, 911, 912, 920, 922, 926, 944, 957, 958, 962, 974, 985, 986, 987, 988, 989, 1018, 1072, 1106, 1107, 1109, 1115, 1124, 1136, 1137, 1140, 1141, 1157, 1158, 1161, 1162, 1170, 1174, 1191, 1198, 1200, 1201, 1207, 1208, 1211, 1216, 1217, 1220, 1231, 1237, 1238, 1239, 1240, 1242, 1244, 1246, 1247, 1263, 1272, 1290, 1294, 1301, 1324, 1330, 1342, 1351, 1370, 1371, 1377, 1378, 1381, 1386, 1387, 1389, 1394, 1404, 1405, 1426, 1434, 1435, 1436, 1441, 1444, 1449, 1451, 1462, 1466, 1473, 1485, 1516, 1524, 1525, 1527, 1598, 1605, 1608, 1609, 1614, 1621, 1628, 1629, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1660, 1661, 1664, 1666, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1712, 1715, 1740, 1754, 1758, 1819, 1820, 1824, 1841, 1848, 1850, 1852, 1857, 1858, 1859, 1863, 1864, 1868, 1872, 1880, 1881, 1883, 1884, 1885, 1888, 1891, 1894, 1898, 1899, 1903, 1904, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1918, 1919, 1920, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1936, 1938, 1940, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1953, 1955, 1956, 1958, 1959, 1961, 1962, 1963, 1966, 1968, 1969, 1970, 1971], "inf": [0, 31, 46, 49, 674, 676, 679, 680, 681, 875, 910, 926, 1189, 1190, 1192, 1194, 1195, 1232, 1247, 1253, 1257, 1260, 1270, 1281, 1328, 1424, 1467, 1477, 1583, 1619, 1638, 1647, 1667, 1751, 1758, 1903, 1904, 1910, 1918, 1941, 1947, 1969], "otherwis": [0, 1, 3, 5, 7, 9, 11, 14, 21, 25, 26, 30, 32, 35, 49, 50, 54, 57, 79, 200, 312, 319, 323, 327, 329, 333, 334, 485, 494, 550, 570, 571, 573, 593, 607, 670, 676, 677, 678, 679, 680, 683, 685, 686, 687, 689, 725, 750, 758, 759, 774, 784, 807, 810, 811, 851, 852, 855, 882, 885, 893, 898, 910, 926, 1013, 1072, 1078, 1111, 1123, 1191, 1197, 1200, 1203, 1207, 1213, 1222, 1246, 1261, 1270, 1272, 1273, 1288, 1293, 1298, 1300, 1301, 1303, 1305, 1306, 1329, 1332, 1348, 1349, 1368, 1370, 1373, 1374, 1375, 1379, 1386, 1390, 1391, 1392, 1393, 1395, 1404, 1420, 1434, 1438, 1439, 1440, 1441, 1442, 1444, 1449, 1450, 1452, 1465, 1471, 1473, 1476, 1477, 1479, 1481, 1482, 1483, 1501, 1502, 1535, 1537, 1538, 1542, 1577, 1587, 1614, 1627, 1632, 1653, 1657, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1690, 1691, 1692, 1693, 1710, 1712, 1720, 1722, 1729, 1738, 1745, 1758, 1766, 1774, 1818, 1819, 1820, 1823, 1856, 1857, 1858, 1867, 1868, 1875, 1879, 1881, 1883, 1884, 1891, 1892, 1897, 1903, 1909, 1910, 1917, 1923, 1924, 1925, 1931, 1932, 1934, 1935, 1936, 1938, 1941, 1942, 1943, 1944, 1945, 1947, 1970], "skip": [0, 42, 47, 849, 944, 1072, 1126, 1230, 1231, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1792, 1863, 1881, 1903, 1904, 1907, 1908, 1909, 1915, 1927, 1930, 1936, 1957, 1959, 1960, 1962], "next": [0, 3, 21, 25, 31, 42, 47, 49, 57, 550, 750, 1204, 1338, 1387, 1405, 1451, 1614, 1655, 1896, 1903, 1904, 1906, 1907, 1909, 1910, 1915, 1917, 1929, 1930, 1936, 1937, 1940, 1943, 1945, 1954, 1956, 1959, 1962], "iter": [0, 1, 2, 3, 7, 22, 25, 26, 27, 29, 31, 43, 45, 46, 49, 57, 58, 63, 947, 985, 986, 987, 988, 989, 1018, 1021, 1023, 1044, 1200, 1273, 1434, 1435, 1436, 1444, 1445, 1614, 1615, 1618, 1619, 1620, 1626, 1628, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1661, 1663, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1696, 1697, 1698, 1701, 1712, 1782, 1825, 1882, 1884, 1885, 1896, 1898, 1903, 1904, 1905, 1907, 1908, 1909, 1912, 1915, 1927, 1930, 1935, 1945, 1954, 1959, 1962, 1968, 1969, 1970], "clip": [0, 49, 958, 1618, 1619, 1620, 1882, 1900, 1910, 1925, 1926], "accumul": [0, 1, 2, 49, 141, 281, 304, 309, 310, 312, 461, 478, 676, 883, 897, 1270, 1614, 1677, 1678, 1861, 1881, 1882, 1894, 1904, 1907, 1908, 1911, 1918, 1927, 1932, 1936, 1937, 1940, 1957, 1959, 1964, 1969], "estim": [0, 1, 3, 21, 31, 958, 962, 1153, 1197, 1352, 1353, 1354, 1384, 1388, 1389, 1397, 1398, 1399, 1406, 1473, 1531, 1628, 1690, 1787, 1930], "minim": [0, 1, 7, 8, 809, 865, 1303, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1690, 1691, 1692, 1693, 1706, 1879, 1894, 1903, 1907, 1915, 1917, 1920, 1925, 1929, 1931, 1959, 1969], "larg": [0, 2, 3, 7, 8, 21, 25, 57, 670, 848, 960, 962, 1029, 1237, 1246, 1264, 1342, 1381, 1485, 1527, 1614, 1704, 1791, 1804, 1880, 1896, 1898, 1899, 1906, 1907, 1911, 1915, 1918, 1920, 1923, 1925, 1928, 1929, 1932, 1936, 1940, 1943, 1946, 1954, 1959, 1967, 1969, 1971], "becom": [0, 7, 8, 9, 12, 21, 25, 31, 57, 281, 750, 866, 1153, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1386, 1404, 1419, 1439, 1449, 1462, 1516, 1533, 1605, 1696, 1796, 1846, 1891, 1892, 1904, 1908, 1909, 1925, 1928, 1930, 1936, 1962, 1969, 1971], "too": [0, 7, 9, 14, 22, 27, 42, 54, 57, 1029, 1129, 1246, 1264, 1330, 1357, 1370, 1434, 1517, 1615, 1662, 1884, 1906, 1911, 1912, 1917, 1918, 1919, 1921, 1923, 1928, 1929, 1938, 1940, 1957, 1958, 1969, 1971], "therefor": [0, 3, 5, 21, 22, 25, 31, 32, 40, 49, 52, 58, 63, 64, 77, 438, 534, 897, 911, 920, 944, 1018, 1106, 1123, 1126, 1129, 1157, 1158, 1213, 1216, 1246, 1259, 1377, 1378, 1485, 1524, 1525, 1533, 1662, 1698, 1884, 1903, 1904, 1907, 1909, 1911, 1914, 1925, 1938, 1940, 1956, 1960, 1962], "largest": [0, 49, 580, 913, 1116, 1232, 1253, 1255, 1257, 1258, 1273, 1570, 1628, 1843, 1882, 1883, 1884, 1964, 1968, 1972], "without": [0, 1, 3, 5, 7, 8, 9, 14, 18, 21, 22, 25, 26, 27, 29, 31, 35, 42, 46, 49, 50, 55, 56, 57, 58, 59, 245, 478, 607, 939, 942, 976, 978, 1013, 1093, 1094, 1095, 1103, 1104, 1105, 1197, 1198, 1200, 1201, 1247, 1248, 1263, 1270, 1324, 1352, 1353, 1354, 1374, 1378, 1397, 1398, 1399, 1431, 1434, 1442, 1473, 1481, 1525, 1605, 1614, 1644, 1660, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1698, 1729, 1745, 1762, 1763, 1855, 1879, 1883, 1884, 1888, 1891, 1892, 1894, 1896, 1898, 1903, 1904, 1905, 1907, 1908, 1909, 1912, 1913, 1915, 1917, 1919, 1920, 1923, 1925, 1928, 1929, 1931, 1935, 1936, 1940, 1945, 1950, 1954, 1956, 1957, 1958, 1959, 1969, 1972], "approxim": [0, 1, 3, 22, 29, 42, 57, 1137, 1153, 1264, 1273, 1342, 1384, 1448, 1463, 1470, 1531, 1576, 1586, 1628, 1676, 1693, 1712, 1766, 1825, 1846, 1882, 1884, 1907, 1908, 1909, 1912, 1925, 1964, 1972], "time": [0, 1, 3, 4, 7, 8, 9, 14, 21, 22, 25, 26, 27, 29, 31, 32, 33, 39, 42, 43, 44, 46, 47, 49, 54, 56, 57, 58, 67, 68, 79, 281, 304, 477, 483, 607, 670, 675, 676, 677, 678, 679, 680, 681, 684, 735, 736, 746, 750, 754, 758, 759, 789, 791, 814, 831, 867, 897, 903, 904, 908, 910, 922, 930, 932, 942, 955, 962, 975, 976, 978, 1018, 1031, 1050, 1053, 1064, 1086, 1087, 1093, 1094, 1095, 1101, 1112, 1113, 1114, 1122, 1126, 1135, 1136, 1137, 1140, 1141, 1189, 1197, 1200, 1208, 1213, 1216, 1217, 1221, 1226, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1245, 1246, 1247, 1250, 1252, 1256, 1259, 1261, 1263, 1264, 1272, 1273, 1295, 1305, 1312, 1323, 1324, 1326, 1336, 1344, 1345, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1378, 1381, 1382, 1383, 1386, 1397, 1398, 1399, 1404, 1406, 1420, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1446, 1447, 1449, 1470, 1473, 1485, 1486, 1487, 1488, 1498, 1501, 1502, 1528, 1529, 1573, 1574, 1575, 1591, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1627, 1628, 1630, 1632, 1666, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1700, 1710, 1711, 1722, 1744, 1750, 1801, 1815, 1820, 1821, 1841, 1872, 1880, 1883, 1884, 1885, 1890, 1892, 1896, 1902, 1904, 1906, 1908, 1909, 1911, 1912, 1914, 1915, 1917, 1919, 1920, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1936, 1937, 1938, 1940, 1945, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1962, 1965, 1966, 1968, 1969, 1971], "check": [0, 3, 4, 5, 11, 14, 21, 25, 26, 27, 31, 33, 42, 49, 58, 59, 64, 66, 212, 331, 489, 684, 851, 887, 889, 890, 898, 899, 944, 975, 976, 978, 982, 1011, 1029, 1187, 1197, 1200, 1216, 1217, 1230, 1231, 1236, 1237, 1239, 1242, 1244, 1249, 1255, 1258, 1262, 1264, 1265, 1290, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1434, 1605, 1614, 1629, 1632, 1645, 1655, 1674, 1675, 1799, 1806, 1807, 1808, 1809, 1810, 1811, 1862, 1864, 1879, 1880, 1883, 1884, 1885, 1897, 1898, 1903, 1907, 1909, 1910, 1911, 1914, 1915, 1916, 1919, 1923, 1925, 1927, 1928, 1929, 1930, 1936, 1940, 1945, 1947, 1953, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1968, 1969, 1970], "dure": [0, 1, 5, 14, 18, 22, 25, 27, 33, 34, 36, 42, 46, 49, 56, 57, 58, 72, 74, 75, 326, 478, 493, 494, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 783, 817, 879, 880, 889, 973, 1007, 1017, 1018, 1030, 1031, 1050, 1211, 1213, 1214, 1216, 1272, 1346, 1352, 1353, 1354, 1371, 1372, 1377, 1378, 1397, 1398, 1399, 1452, 1473, 1479, 1481, 1518, 1524, 1525, 1605, 1614, 1616, 1617, 1660, 1674, 1707, 1805, 1850, 1852, 1883, 1890, 1891, 1892, 1894, 1897, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1918, 1919, 1923, 1925, 1928, 1930, 1931, 1934, 1936, 1938, 1947, 1954, 1955, 1959, 1962, 1966, 1967, 1968, 1969, 1971], "unscale_": [0, 1903], "found": [0, 7, 15, 16, 18, 42, 46, 57, 58, 66, 74, 76, 77, 78, 926, 972, 1051, 1052, 1200, 1204, 1222, 1298, 1301, 1303, 1306, 1330, 1346, 1356, 1379, 1434, 1461, 1689, 1758, 1879, 1881, 1884, 1899, 1903, 1909, 1912, 1915, 1917, 1925, 1928, 1930, 1931, 1936, 1945, 1955, 1958, 1963, 1966, 1968, 1970], "underli": [0, 25, 27, 29, 31, 33, 46, 49, 54, 57, 88, 302, 317, 368, 391, 393, 463, 464, 465, 466, 473, 489, 510, 514, 547, 548, 549, 603, 738, 747, 868, 975, 1124, 1170, 1174, 1200, 1272, 1333, 1576, 1740, 1845, 1860, 1881, 1884, 1899, 1907, 1911, 1913, 1929, 1936, 1942, 1944, 1951, 1958, 1962], "themselv": [0, 1, 9, 31, 42, 49, 783, 831, 1843, 1907, 1928, 1970], "remain": [0, 5, 8, 31, 42, 57, 1308, 1377, 1378, 1524, 1525, 1605, 1614, 1621, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1723, 1745, 1894, 1896, 1903, 1911, 1915, 1956], "uncorrupt": 0, "usual": [0, 7, 14, 21, 22, 27, 42, 43, 47, 49, 57, 76, 471, 821, 822, 823, 824, 831, 883, 891, 893, 897, 1141, 1373, 1374, 1375, 1379, 1394, 1397, 1398, 1399, 1400, 1605, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1872, 1881, 1884, 1899, 1903, 1904, 1906, 1907, 1909, 1911, 1914, 1927, 1932, 1934, 1936, 1945, 1953, 1958, 1963, 1970], "unskip": 0, "occur": [0, 11, 21, 25, 35, 36, 42, 49, 54, 73, 75, 187, 306, 942, 1032, 1072, 1197, 1203, 1214, 1244, 1357, 1473, 1517, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1883, 1894, 1898, 1903, 1904, 1907, 1911, 1918, 1923, 1925, 1930, 1936, 1938, 1944, 1947, 1957, 1959, 1961, 1965, 1967, 1969, 1970, 1971], "consecut": [0, 25, 49, 600, 1655, 1694, 1846, 1857, 1858, 1898, 1925], "appear": [0, 4, 22, 25, 31, 46, 47, 57, 844, 1018, 1072, 1113, 1114, 1141, 1272, 1306, 1308, 1610, 1615, 1744, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1872, 1881, 1884, 1897, 1898, 1909, 1910, 1915, 1925, 1928, 1959], "few": [0, 1, 7, 8, 22, 27, 33, 1072, 1130, 1378, 1614, 1879, 1884, 1904, 1907, 1909, 1911, 1913, 1918, 1921, 1925, 1927, 1929, 1931, 1934, 1940, 1944, 1946, 1948, 1957, 1959, 1961, 1962, 1963, 1967, 1969], "calibr": [0, 778, 779, 787, 828, 829, 847, 849, 851, 1903, 1931, 1932, 1934, 1950], "rare": [0, 7, 1903, 1925, 1957, 1960, 1970], "hundr": [0, 1903, 1914, 1969], "thousand": [0, 1969], "16": [0, 20, 25, 46, 312, 607, 728, 729, 730, 731, 732, 733, 762, 1070, 1088, 1115, 1153, 1163, 1200, 1212, 1224, 1230, 1236, 1237, 1241, 1257, 1334, 1346, 1348, 1349, 1357, 1358, 1361, 1362, 1363, 1364, 1366, 1367, 1372, 1373, 1374, 1375, 1379, 1382, 1383, 1402, 1403, 1404, 1422, 1427, 1428, 1429, 1431, 1432, 1434, 1441, 1449, 1460, 1477, 1491, 1508, 1510, 1511, 1513, 1517, 1528, 1529, 1670, 1719, 1766, 1796, 1861, 1869, 1873, 1881, 1885, 1902, 1907, 1915, 1918, 1920, 1925, 1926, 1929, 1936, 1940, 1941, 1943, 1945, 1946, 1956, 1959, 1969], "initi": [0, 1, 2, 3, 4, 8, 17, 18, 21, 22, 27, 29, 33, 35, 42, 43, 45, 49, 71, 79, 486, 489, 570, 702, 703, 704, 705, 706, 707, 710, 720, 721, 722, 723, 735, 736, 746, 750, 754, 851, 852, 869, 950, 975, 983, 1004, 1009, 1010, 1013, 1014, 1039, 1073, 1074, 1075, 1147, 1176, 1198, 1200, 1213, 1214, 1272, 1273, 1290, 1352, 1353, 1354, 1355, 1357, 1365, 1366, 1367, 1371, 1377, 1378, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1442, 1449, 1450, 1451, 1473, 1483, 1524, 1605, 1614, 1616, 1617, 1627, 1629, 1632, 1660, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1708, 1762, 1763, 1764, 1806, 1807, 1808, 1809, 1810, 1811, 1839, 1880, 1882, 1883, 1884, 1894, 1899, 1902, 1904, 1907, 1908, 1909, 1914, 1921, 1923, 1925, 1927, 1928, 1929, 1931, 1935, 1936, 1937, 1954, 1962, 1967, 1968], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 26, 27, 29, 30, 31, 32, 33, 35, 40, 41, 42, 43, 44, 46, 47, 49, 53, 54, 56, 57, 58, 65, 66, 79, 141, 280, 304, 306, 308, 310, 312, 326, 462, 476, 477, 489, 503, 505, 507, 527, 550, 594, 597, 607, 614, 674, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 750, 754, 771, 780, 781, 787, 789, 809, 813, 816, 828, 844, 847, 848, 849, 851, 866, 870, 875, 882, 883, 884, 885, 891, 892, 893, 894, 895, 896, 897, 903, 904, 907, 913, 926, 929, 932, 936, 942, 944, 954, 960, 961, 962, 972, 973, 978, 985, 986, 987, 988, 989, 1000, 1001, 1002, 1029, 1031, 1036, 1037, 1048, 1050, 1055, 1059, 1060, 1061, 1062, 1063, 1072, 1088, 1093, 1096, 1100, 1103, 1106, 1111, 1112, 1113, 1114, 1115, 1120, 1123, 1129, 1130, 1133, 1134, 1135, 1136, 1137, 1141, 1142, 1145, 1162, 1174, 1185, 1191, 1197, 1198, 1200, 1201, 1203, 1206, 1210, 1211, 1212, 1216, 1233, 1236, 1237, 1246, 1250, 1252, 1253, 1256, 1257, 1261, 1263, 1264, 1266, 1269, 1270, 1272, 1278, 1294, 1301, 1306, 1324, 1330, 1333, 1334, 1340, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1352, 1353, 1354, 1357, 1363, 1364, 1366, 1367, 1370, 1371, 1378, 1385, 1386, 1395, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1406, 1420, 1424, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1439, 1440, 1462, 1465, 1467, 1469, 1473, 1482, 1483, 1515, 1532, 1533, 1535, 1545, 1552, 1570, 1571, 1589, 1590, 1598, 1605, 1614, 1621, 1627, 1629, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1662, 1664, 1667, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1712, 1724, 1738, 1742, 1744, 1745, 1749, 1751, 1758, 1762, 1766, 1771, 1773, 1791, 1796, 1800, 1801, 1803, 1804, 1812, 1815, 1820, 1840, 1845, 1846, 1849, 1850, 1851, 1852, 1856, 1857, 1860, 1861, 1864, 1872, 1879, 1881, 1883, 1884, 1886, 1890, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1919, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972], "int": [0, 2, 3, 12, 18, 21, 22, 25, 27, 29, 30, 31, 33, 36, 39, 40, 42, 43, 45, 46, 47, 49, 57, 58, 65, 66, 68, 79, 207, 209, 223, 224, 233, 245, 304, 306, 308, 312, 427, 434, 435, 437, 439, 447, 462, 466, 483, 487, 489, 503, 505, 507, 510, 527, 533, 535, 536, 548, 550, 556, 573, 574, 575, 577, 578, 597, 607, 670, 683, 685, 686, 687, 689, 745, 746, 765, 767, 769, 770, 775, 776, 777, 809, 864, 865, 866, 868, 882, 889, 902, 911, 913, 920, 927, 929, 936, 941, 961, 962, 966, 967, 971, 972, 974, 976, 978, 980, 981, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 995, 1000, 1001, 1002, 1004, 1006, 1010, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1041, 1042, 1043, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1059, 1060, 1061, 1062, 1063, 1064, 1070, 1073, 1075, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1124, 1126, 1127, 1131, 1132, 1133, 1134, 1135, 1141, 1142, 1148, 1150, 1151, 1153, 1157, 1158, 1160, 1161, 1162, 1163, 1174, 1176, 1197, 1198, 1200, 1201, 1203, 1206, 1207, 1212, 1220, 1222, 1232, 1233, 1253, 1254, 1257, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1280, 1287, 1288, 1293, 1298, 1300, 1301, 1303, 1306, 1308, 1309, 1310, 1314, 1324, 1329, 1330, 1331, 1332, 1333, 1334, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1377, 1378, 1380, 1381, 1382, 1383, 1385, 1387, 1389, 1397, 1398, 1399, 1402, 1403, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1419, 1421, 1422, 1424, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1436, 1439, 1441, 1442, 1445, 1446, 1447, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1467, 1469, 1470, 1473, 1477, 1479, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1515, 1516, 1517, 1524, 1525, 1532, 1535, 1544, 1552, 1568, 1569, 1570, 1574, 1575, 1589, 1590, 1598, 1602, 1603, 1604, 1614, 1628, 1637, 1638, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1654, 1656, 1661, 1664, 1667, 1668, 1670, 1671, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1720, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1733, 1734, 1735, 1737, 1743, 1744, 1745, 1748, 1749, 1750, 1751, 1754, 1759, 1760, 1761, 1765, 1769, 1770, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1792, 1796, 1800, 1803, 1804, 1805, 1812, 1815, 1817, 1818, 1819, 1820, 1823, 1825, 1829, 1836, 1840, 1841, 1843, 1845, 1846, 1849, 1850, 1851, 1852, 1855, 1856, 1857, 1858, 1859, 1860, 1863, 1864, 1866, 1867, 1868, 1872, 1873, 1877, 1881, 1882, 1883, 1884, 1885, 1894, 1896, 1897, 1899, 1902, 1907, 1910, 1917, 1920, 1923, 1925, 1926, 1929, 1930, 1931, 1935, 1936, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1957, 1959, 1962, 1964, 1968, 1971, 1972], "simpli": [0, 1, 3, 14, 21, 27, 31, 35, 43, 46, 56, 57, 853, 1130, 1187, 1198, 1346, 1372, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1766, 1881, 1883, 1904, 1910, 1912, 1915, 1916, 1930, 1940, 1957, 1959, 1965], "get_backoff_factor": 0, "python": [0, 1, 3, 4, 9, 12, 14, 15, 18, 21, 25, 29, 31, 32, 33, 35, 36, 39, 40, 42, 43, 46, 47, 49, 57, 58, 65, 66, 343, 579, 614, 670, 771, 870, 891, 892, 893, 894, 895, 896, 898, 899, 928, 929, 941, 942, 944, 954, 1009, 1015, 1016, 1018, 1067, 1072, 1090, 1092, 1120, 1126, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1175, 1176, 1198, 1200, 1201, 1203, 1204, 1205, 1211, 1212, 1216, 1272, 1435, 1436, 1444, 1445, 1583, 1614, 1716, 1738, 1742, 1762, 1763, 1799, 1864, 1865, 1872, 1879, 1888, 1890, 1895, 1896, 1898, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1914, 1917, 1920, 1921, 1922, 1923, 1928, 1931, 1935, 1936, 1937, 1938, 1943, 1946, 1947, 1951, 1953, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1963, 1965, 1966, 1969, 1970, 1971], "backoff": [0, 1936], "get_growth_factor": 0, "growth": [0, 8], "get_growth_interv": 0, "interv": [0, 31, 44, 855, 958, 1122, 1315, 1316, 1707, 1731, 1732, 1780, 1894, 1907, 1930], "get_scal": [0, 1903], "sync": [0, 25, 29, 49, 56, 57, 1614, 1907, 1908, 1929, 1954, 1958], "is_en": [0, 1799, 1806, 1807, 1808, 1809, 1810, 1811], "indic": [0, 1, 2, 3, 12, 21, 22, 25, 26, 30, 31, 42, 46, 47, 71, 74, 75, 182, 199, 212, 304, 306, 308, 309, 310, 312, 461, 503, 505, 507, 534, 562, 563, 573, 604, 685, 686, 725, 735, 736, 864, 865, 866, 867, 868, 888, 898, 899, 926, 933, 934, 935, 947, 948, 954, 968, 973, 975, 976, 978, 1012, 1051, 1052, 1075, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1153, 1174, 1198, 1200, 1205, 1214, 1217, 1218, 1222, 1231, 1242, 1244, 1255, 1258, 1272, 1280, 1288, 1290, 1292, 1298, 1301, 1303, 1306, 1312, 1324, 1330, 1334, 1342, 1343, 1344, 1345, 1370, 1377, 1378, 1382, 1383, 1428, 1429, 1430, 1431, 1432, 1437, 1439, 1440, 1495, 1496, 1497, 1516, 1524, 1525, 1528, 1529, 1545, 1560, 1561, 1562, 1570, 1583, 1598, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1646, 1647, 1666, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1702, 1704, 1723, 1758, 1796, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1835, 1836, 1840, 1843, 1849, 1850, 1851, 1852, 1857, 1858, 1859, 1861, 1862, 1864, 1872, 1875, 1881, 1882, 1884, 1888, 1897, 1898, 1909, 1917, 1920, 1925, 1926, 1936, 1940, 1944, 1945, 1947, 1960, 1962, 1964, 1969], "load_state_dict": [0, 22, 27, 29, 49, 1200, 1272, 1434, 1605, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1879, 1880, 1915, 1920, 1931], "state_dict": [0, 22, 27, 29, 46, 47, 49, 826, 827, 1200, 1434, 1605, 1646, 1664, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1879, 1893, 1908, 1915, 1917, 1920, 1923, 1925, 1931, 1949], "load": [0, 1, 11, 14, 15, 22, 27, 29, 46, 49, 827, 852, 906, 942, 974, 1204, 1211, 1216, 1378, 1605, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1754, 1880, 1881, 1892, 1893, 1898, 1904, 1907, 1914, 1915, 1919, 1921, 1925, 1936, 1945, 1961, 1963, 1967, 1969], "dict": [0, 3, 5, 21, 22, 25, 26, 27, 29, 30, 31, 33, 36, 40, 44, 46, 47, 49, 51, 53, 57, 670, 782, 783, 784, 805, 806, 807, 826, 844, 900, 942, 1015, 1016, 1029, 1038, 1129, 1139, 1141, 1198, 1199, 1200, 1201, 1207, 1212, 1216, 1217, 1272, 1273, 1371, 1381, 1434, 1435, 1444, 1485, 1605, 1614, 1643, 1662, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1872, 1879, 1881, 1882, 1884, 1885, 1893, 1894, 1909, 1915, 1920, 1923, 1925, 1926, 1927, 1936, 1937, 1945, 1949, 1950, 1956, 1965, 1968, 1970], "object": [0, 1, 3, 5, 6, 8, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 42, 44, 46, 47, 49, 56, 57, 58, 60, 79, 197, 200, 593, 783, 784, 844, 851, 870, 880, 881, 882, 907, 909, 942, 996, 1007, 1047, 1072, 1111, 1123, 1126, 1131, 1132, 1134, 1135, 1136, 1140, 1186, 1187, 1200, 1207, 1208, 1211, 1212, 1216, 1217, 1232, 1253, 1257, 1270, 1272, 1273, 1293, 1371, 1373, 1374, 1375, 1379, 1397, 1398, 1399, 1434, 1444, 1473, 1614, 1630, 1645, 1654, 1655, 1658, 1659, 1660, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1754, 1828, 1829, 1833, 1862, 1865, 1879, 1883, 1884, 1885, 1888, 1892, 1893, 1896, 1900, 1904, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1917, 1919, 1920, 1921, 1923, 1925, 1927, 1931, 1933, 1934, 1935, 1936, 1938, 1942, 1943, 1945, 1947, 1955, 1956, 1958, 1962, 1965, 1968, 1970, 1971, 1972], "tupl": [0, 3, 5, 12, 14, 21, 27, 30, 33, 39, 40, 42, 46, 47, 49, 57, 224, 310, 435, 437, 439, 487, 510, 527, 550, 573, 574, 575, 683, 685, 686, 687, 689, 725, 756, 757, 758, 759, 762, 763, 764, 769, 775, 776, 777, 783, 807, 808, 844, 851, 852, 868, 869, 876, 877, 878, 879, 880, 882, 891, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 925, 944, 949, 954, 961, 985, 986, 989, 1000, 1018, 1024, 1051, 1052, 1070, 1073, 1075, 1089, 1091, 1092, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1104, 1105, 1107, 1109, 1112, 1122, 1127, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1145, 1161, 1163, 1200, 1207, 1212, 1216, 1217, 1222, 1231, 1236, 1237, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1253, 1257, 1259, 1260, 1262, 1264, 1267, 1270, 1288, 1290, 1292, 1298, 1300, 1302, 1303, 1306, 1308, 1329, 1332, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1381, 1382, 1383, 1402, 1403, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1440, 1444, 1455, 1456, 1457, 1458, 1459, 1460, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1496, 1497, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1544, 1557, 1558, 1559, 1569, 1571, 1602, 1603, 1604, 1609, 1610, 1611, 1614, 1623, 1625, 1632, 1643, 1656, 1662, 1666, 1667, 1671, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1712, 1713, 1722, 1731, 1733, 1735, 1745, 1749, 1750, 1796, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1815, 1818, 1819, 1823, 1824, 1825, 1839, 1840, 1841, 1842, 1843, 1848, 1855, 1856, 1857, 1858, 1859, 1867, 1868, 1872, 1873, 1875, 1877, 1881, 1882, 1885, 1896, 1899, 1904, 1907, 1909, 1910, 1915, 1920, 1923, 1925, 1927, 1928, 1931, 1936, 1940, 1945, 1947, 1950, 1959, 1962, 1968, 1970], "unmodifi": [0, 25, 1956], "set_backoff_factor": 0, "new_factor": 0, "new_scal": 0, "set_growth_factor": 0, "set_growth_interv": 0, "new_interv": 0, "It": [0, 1, 3, 4, 5, 7, 8, 12, 17, 18, 21, 22, 25, 26, 27, 30, 31, 33, 35, 39, 40, 41, 42, 43, 44, 46, 47, 49, 51, 53, 54, 55, 56, 57, 58, 75, 141, 187, 463, 464, 503, 505, 507, 534, 547, 879, 880, 881, 882, 883, 887, 942, 944, 948, 950, 954, 955, 956, 989, 994, 1000, 1001, 1019, 1020, 1039, 1040, 1048, 1095, 1125, 1130, 1133, 1141, 1142, 1161, 1197, 1200, 1201, 1206, 1207, 1211, 1233, 1237, 1241, 1244, 1246, 1248, 1249, 1254, 1258, 1259, 1261, 1262, 1264, 1266, 1269, 1270, 1272, 1273, 1281, 1342, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1371, 1381, 1428, 1429, 1430, 1431, 1432, 1434, 1441, 1462, 1465, 1485, 1487, 1535, 1545, 1589, 1607, 1608, 1609, 1612, 1613, 1614, 1628, 1629, 1632, 1653, 1656, 1657, 1665, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1710, 1729, 1742, 1758, 1768, 1774, 1781, 1803, 1856, 1872, 1879, 1883, 1884, 1888, 1894, 1896, 1898, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1931, 1936, 1937, 1938, 1940, 1941, 1942, 1944, 1948, 1954, 1955, 1956, 1957, 1958, 1959, 1962, 1963, 1968, 1969, 1971], "five": [0, 1884, 1920], "entri": [0, 3, 25, 26, 29, 31, 40, 42, 43, 306, 725, 848, 849, 907, 1015, 1016, 1062, 1113, 1114, 1174, 1200, 1221, 1377, 1378, 1434, 1440, 1524, 1525, 1610, 1611, 1638, 1639, 1647, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1803, 1881, 1884, 1885, 1891, 1899, 1904, 1908, 1909, 1912, 1915, 1934, 1940, 1945, 1949, 1955, 1956, 1957, 1962], "_growth_track": 0, "recent": [0, 1, 7, 8, 45, 56, 1175, 1185, 1799, 1883, 1884, 1899, 1909, 1918, 1919, 1940, 1947, 1966, 1969], "empti": [0, 3, 24, 25, 27, 33, 40, 47, 49, 54, 57, 224, 312, 503, 505, 513, 527, 535, 807, 912, 913, 923, 929, 1072, 1074, 1198, 1201, 1226, 1246, 1247, 1252, 1259, 1282, 1283, 1284, 1285, 1292, 1351, 1370, 1378, 1441, 1506, 1525, 1571, 1660, 1672, 1673, 1809, 1824, 1839, 1878, 1881, 1882, 1883, 1884, 1886, 1892, 1897, 1898, 1899, 1902, 1905, 1907, 1909, 1919, 1925, 1926, 1928, 1940, 1941, 1948, 1957, 1958, 1964, 1967], "wish": [0, 1136, 1815, 1903, 1907, 1909, 1910], "checkpoint": [0, 29, 43, 45, 49, 906, 1272, 1614, 1879, 1880, 1893, 1911, 1920, 1923, 1929, 1938, 1954], "kwarg": [0, 1, 5, 14, 21, 25, 26, 29, 42, 46, 47, 49, 57, 58, 570, 593, 737, 750, 752, 753, 811, 812, 814, 817, 880, 946, 976, 978, 1015, 1016, 1129, 1140, 1141, 1200, 1203, 1205, 1264, 1290, 1396, 1423, 1434, 1464, 1468, 1472, 1474, 1475, 1605, 1610, 1614, 1634, 1639, 1643, 1653, 1660, 1662, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1754, 1858, 1872, 1879, 1884, 1885, 1909, 1910, 1915, 1923, 1927, 1936, 1942, 1950, 1955, 1956, 1968, 1969, 1970], "carri": [0, 53, 327, 787, 828, 829, 847, 848, 1888, 1905, 1931], "out": [0, 1, 2, 3, 7, 8, 9, 11, 15, 18, 21, 25, 27, 30, 31, 39, 40, 43, 46, 50, 53, 57, 58, 62, 64, 224, 303, 305, 307, 309, 390, 392, 438, 486, 502, 504, 506, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 746, 750, 754, 762, 763, 764, 769, 771, 775, 787, 826, 828, 829, 847, 848, 855, 856, 857, 858, 859, 860, 861, 862, 867, 871, 872, 873, 874, 875, 884, 885, 886, 889, 898, 910, 912, 913, 914, 915, 916, 917, 918, 919, 922, 926, 929, 931, 932, 933, 934, 935, 937, 938, 940, 942, 951, 952, 953, 956, 957, 959, 960, 972, 977, 985, 987, 989, 1016, 1017, 1029, 1030, 1042, 1046, 1051, 1052, 1053, 1054, 1056, 1059, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1130, 1131, 1133, 1134, 1136, 1141, 1142, 1143, 1144, 1145, 1146, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1194, 1195, 1200, 1206, 1212, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1319, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1334, 1335, 1336, 1337, 1338, 1339, 1343, 1344, 1345, 1347, 1348, 1349, 1355, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1377, 1379, 1382, 1383, 1386, 1387, 1402, 1403, 1404, 1419, 1421, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1446, 1447, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1477, 1478, 1479, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1519, 1520, 1521, 1526, 1529, 1533, 1544, 1550, 1569, 1571, 1602, 1614, 1621, 1637, 1638, 1639, 1640, 1666, 1667, 1668, 1669, 1671, 1672, 1693, 1710, 1711, 1715, 1716, 1717, 1719, 1722, 1723, 1729, 1730, 1731, 1733, 1735, 1737, 1738, 1741, 1742, 1743, 1747, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1774, 1775, 1776, 1788, 1789, 1790, 1791, 1796, 1801, 1802, 1813, 1814, 1816, 1817, 1818, 1819, 1821, 1822, 1824, 1836, 1837, 1838, 1841, 1843, 1845, 1848, 1849, 1851, 1853, 1854, 1861, 1867, 1868, 1869, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1891, 1894, 1896, 1898, 1899, 1904, 1905, 1907, 1908, 1909, 1910, 1915, 1917, 1923, 1925, 1927, 1928, 1931, 1932, 1934, 1936, 1937, 1938, 1940, 1941, 1943, 1945, 1946, 1950, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1964, 1967, 1968, 1970, 1971], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 33, 39, 40, 41, 42, 43, 46, 47, 49, 51, 53, 54, 57, 58, 60, 65, 66, 73, 74, 75, 477, 478, 607, 670, 750, 769, 775, 782, 783, 784, 790, 804, 805, 806, 807, 809, 810, 811, 812, 814, 815, 844, 851, 852, 879, 880, 881, 885, 903, 904, 926, 931, 935, 947, 954, 1015, 1029, 1072, 1090, 1092, 1116, 1126, 1139, 1153, 1200, 1201, 1210, 1214, 1221, 1232, 1243, 1253, 1256, 1257, 1270, 1273, 1292, 1295, 1342, 1351, 1357, 1370, 1378, 1381, 1386, 1404, 1434, 1449, 1465, 1481, 1485, 1552, 1583, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1621, 1627, 1667, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1701, 1704, 1712, 1723, 1751, 1758, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1799, 1800, 1801, 1802, 1809, 1820, 1846, 1854, 1861, 1864, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1931, 1932, 1934, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1946, 1947, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1967, 1969, 1970, 1971, 1972], "two": [0, 1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 39, 40, 42, 43, 46, 47, 49, 53, 54, 57, 75, 76, 573, 574, 575, 577, 578, 597, 607, 670, 682, 684, 750, 783, 877, 880, 893, 898, 930, 932, 982, 1021, 1023, 1051, 1052, 1060, 1069, 1072, 1078, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1118, 1119, 1129, 1139, 1161, 1163, 1189, 1198, 1200, 1211, 1214, 1221, 1224, 1226, 1231, 1233, 1236, 1237, 1242, 1243, 1248, 1253, 1256, 1257, 1259, 1260, 1262, 1264, 1269, 1272, 1295, 1298, 1301, 1303, 1306, 1331, 1348, 1350, 1351, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1381, 1386, 1394, 1395, 1401, 1403, 1404, 1425, 1426, 1428, 1434, 1437, 1438, 1439, 1441, 1442, 1448, 1449, 1465, 1466, 1481, 1482, 1483, 1485, 1505, 1506, 1516, 1535, 1545, 1552, 1568, 1576, 1583, 1627, 1632, 1654, 1664, 1666, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1697, 1698, 1700, 1704, 1723, 1738, 1751, 1766, 1804, 1809, 1824, 1841, 1845, 1846, 1848, 1857, 1869, 1873, 1879, 1881, 1883, 1884, 1888, 1890, 1891, 1897, 1898, 1899, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1915, 1920, 1921, 1922, 1925, 1927, 1928, 1929, 1931, 1932, 1936, 1937, 1938, 1940, 1941, 1945, 1946, 1947, 1949, 1950, 1954, 1955, 1957, 1958, 1964, 1967, 1969], "unless": [0, 1, 4, 7, 22, 25, 44, 46, 49, 50, 57, 141, 478, 489, 830, 848, 887, 913, 973, 1007, 1129, 1200, 1244, 1249, 1262, 1272, 1301, 1388, 1434, 1481, 1609, 1643, 1662, 1687, 1693, 1758, 1861, 1884, 1890, 1904, 1907, 1919, 1925, 1928, 1932, 1957], "explicitli": [0, 8, 14, 25, 30, 35, 49, 77, 1009, 1060, 1062, 1072, 1162, 1241, 1254, 1258, 1266, 1308, 1544, 1602, 1704, 1820, 1881, 1883, 1884, 1885, 1890, 1907, 1909, 1912, 1914, 1920, 1925, 1928, 1929, 1935, 1936, 1940, 1959], "earlier": [0, 1, 6, 49, 1621, 1824, 1904, 1907, 1911, 1914, 1920, 1925, 1930], "part": [0, 1, 3, 4, 5, 6, 7, 9, 14, 15, 18, 21, 22, 25, 27, 31, 42, 43, 46, 47, 49, 53, 54, 57, 73, 74, 831, 897, 951, 1072, 1190, 1192, 1193, 1196, 1200, 1211, 1213, 1216, 1217, 1231, 1237, 1239, 1248, 1255, 1258, 1434, 1473, 1583, 1614, 1630, 1696, 1723, 1805, 1846, 1849, 1850, 1851, 1852, 1879, 1880, 1881, 1883, 1884, 1892, 1893, 1903, 1904, 1907, 1909, 1911, 1912, 1915, 1920, 1925, 1928, 1929, 1931, 1936, 1937, 1938, 1940, 1945, 1947, 1955, 1958, 1959, 1960, 1967, 1968, 1969], "avoid": [0, 5, 8, 9, 21, 25, 30, 31, 40, 43, 49, 57, 58, 65, 66, 182, 199, 438, 771, 855, 883, 923, 942, 1029, 1200, 1246, 1272, 1369, 1400, 1401, 1425, 1434, 1443, 1448, 1485, 1515, 1545, 1569, 1576, 1614, 1628, 1693, 1744, 1773, 1820, 1839, 1857, 1888, 1894, 1898, 1904, 1906, 1907, 1911, 1912, 1915, 1929, 1936, 1937, 1944, 1945, 1946, 1957, 1958, 1959, 1960, 1962], "corrupt": [0, 25, 42, 1371, 1907, 1917], "appli": [0, 1, 3, 5, 8, 12, 22, 27, 29, 30, 31, 33, 35, 42, 49, 53, 54, 55, 57, 58, 68, 72, 73, 74, 110, 312, 389, 462, 503, 507, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 725, 728, 729, 730, 731, 732, 733, 748, 750, 756, 757, 758, 759, 760, 761, 762, 763, 764, 770, 771, 772, 773, 774, 800, 801, 802, 803, 830, 848, 887, 889, 890, 898, 915, 918, 944, 954, 957, 1060, 1062, 1067, 1076, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1120, 1129, 1130, 1137, 1140, 1141, 1200, 1204, 1250, 1273, 1290, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1376, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1452, 1453, 1454, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1526, 1528, 1529, 1530, 1531, 1534, 1536, 1537, 1538, 1539, 1543, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 1563, 1568, 1576, 1577, 1578, 1579, 1583, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1605, 1610, 1611, 1614, 1621, 1627, 1628, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1653, 1654, 1661, 1662, 1664, 1665, 1667, 1677, 1689, 1693, 1706, 1719, 1724, 1725, 1726, 1727, 1728, 1768, 1800, 1801, 1803, 1820, 1857, 1858, 1860, 1872, 1881, 1884, 1888, 1891, 1896, 1898, 1900, 1903, 1904, 1907, 1908, 1909, 1910, 1912, 1915, 1918, 1925, 1927, 1928, 1929, 1931, 1934, 1937, 1940, 1941, 1953, 1954, 1956, 1959, 1960, 1968], "argument": [0, 1, 3, 4, 5, 8, 9, 12, 14, 18, 21, 25, 26, 27, 29, 31, 33, 40, 43, 45, 46, 47, 49, 53, 54, 56, 57, 58, 64, 65, 66, 75, 79, 141, 187, 200, 304, 312, 435, 436, 437, 438, 439, 477, 478, 503, 507, 550, 570, 571, 573, 574, 575, 577, 578, 593, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 724, 728, 729, 730, 731, 732, 733, 783, 784, 789, 809, 810, 811, 814, 815, 816, 831, 847, 848, 851, 853, 855, 870, 871, 872, 873, 874, 875, 879, 880, 881, 882, 883, 887, 888, 889, 892, 894, 895, 896, 897, 898, 903, 904, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 922, 926, 929, 931, 932, 933, 934, 935, 937, 939, 940, 946, 951, 954, 956, 957, 959, 960, 962, 972, 994, 996, 1000, 1001, 1007, 1015, 1016, 1018, 1041, 1045, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1077, 1082, 1085, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1153, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1174, 1177, 1194, 1195, 1197, 1200, 1203, 1212, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1378, 1381, 1384, 1386, 1393, 1396, 1397, 1398, 1399, 1400, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1430, 1431, 1432, 1434, 1435, 1440, 1441, 1442, 1449, 1473, 1481, 1485, 1487, 1488, 1531, 1533, 1569, 1605, 1608, 1609, 1610, 1611, 1614, 1631, 1632, 1634, 1638, 1639, 1643, 1647, 1653, 1662, 1666, 1668, 1671, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1698, 1710, 1711, 1715, 1716, 1719, 1720, 1722, 1723, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1751, 1753, 1758, 1762, 1768, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1796, 1799, 1801, 1802, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1836, 1837, 1838, 1839, 1841, 1842, 1843, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1854, 1857, 1861, 1867, 1868, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1882, 1883, 1884, 1886, 1888, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1919, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1940, 1941, 1942, 1943, 1945, 1947, 1954, 1956, 1958, 1959, 1963, 1968, 1970, 1972], "keyword": [0, 1, 5, 21, 25, 26, 29, 46, 47, 54, 57, 58, 64, 75, 79, 304, 312, 435, 436, 437, 438, 439, 571, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 851, 855, 870, 871, 872, 873, 874, 875, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 922, 926, 929, 931, 933, 934, 935, 937, 939, 940, 951, 956, 957, 959, 960, 962, 972, 985, 987, 989, 1015, 1016, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1064, 1067, 1069, 1071, 1073, 1074, 1075, 1077, 1082, 1085, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1126, 1127, 1128, 1129, 1142, 1143, 1144, 1145, 1153, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1174, 1177, 1194, 1195, 1200, 1203, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1371, 1393, 1396, 1434, 1608, 1609, 1614, 1632, 1634, 1639, 1643, 1662, 1666, 1668, 1671, 1672, 1710, 1711, 1715, 1716, 1719, 1720, 1722, 1723, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1751, 1753, 1758, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1796, 1799, 1802, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1816, 1817, 1818, 1819, 1821, 1823, 1824, 1836, 1837, 1838, 1839, 1843, 1846, 1848, 1849, 1850, 1851, 1852, 1854, 1861, 1867, 1868, 1869, 1874, 1875, 1877, 1878, 1879, 1884, 1885, 1898, 1899, 1909, 1918, 1923, 1925, 1927, 1936, 1940, 1941, 1945, 1959, 1970], "closur": [0, 12, 29, 58, 65, 66, 944, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1690, 1691, 1692, 1693, 1956, 1960], "divid": [0, 5, 22, 25, 29, 229, 573, 574, 575, 989, 1067, 1070, 1090, 1108, 1117, 1162, 1163, 1211, 1350, 1351, 1357, 1358, 1368, 1394, 1395, 1401, 1425, 1426, 1437, 1438, 1439, 1448, 1465, 1466, 1482, 1483, 1505, 1506, 1516, 1517, 1545, 1568, 1576, 1614, 1824, 1873, 1882, 1926], "need": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 21, 22, 25, 26, 27, 29, 30, 31, 34, 35, 40, 42, 43, 45, 46, 47, 49, 51, 52, 54, 57, 58, 67, 68, 76, 77, 141, 245, 461, 478, 485, 489, 573, 670, 724, 725, 809, 810, 811, 814, 815, 816, 831, 848, 879, 883, 887, 888, 897, 923, 924, 932, 1009, 1018, 1025, 1060, 1062, 1072, 1093, 1095, 1115, 1124, 1129, 1200, 1294, 1324, 1370, 1377, 1430, 1431, 1432, 1434, 1440, 1477, 1479, 1481, 1508, 1509, 1510, 1601, 1614, 1621, 1632, 1634, 1638, 1640, 1668, 1693, 1739, 1744, 1758, 1817, 1846, 1862, 1864, 1880, 1881, 1883, 1884, 1888, 1891, 1892, 1896, 1898, 1899, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1927, 1928, 1929, 1931, 1934, 1936, 1937, 1938, 1940, 1942, 1943, 1947, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1965, 1967, 1969, 1970], "modifi": [0, 1, 18, 21, 22, 25, 26, 27, 29, 49, 57, 58, 251, 477, 478, 781, 828, 829, 830, 887, 889, 890, 903, 904, 944, 955, 956, 1153, 1197, 1200, 1203, 1204, 1220, 1377, 1434, 1477, 1479, 1481, 1524, 1525, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1619, 1620, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1690, 1691, 1692, 1693, 1696, 1704, 1786, 1881, 1884, 1897, 1903, 1907, 1909, 1910, 1915, 1920, 1928, 1929, 1931, 1936, 1941, 1944, 1946, 1950, 1956, 1957, 1958, 1959, 1965, 1969], "inspect": [0, 1, 25, 46, 49, 57, 906, 1200, 1212, 1903, 1909, 1914, 1928, 1932, 1943, 1959, 1961, 1963, 1970], "between": [0, 1, 2, 3, 7, 17, 18, 22, 25, 30, 31, 32, 42, 43, 44, 47, 49, 56, 57, 187, 503, 573, 574, 575, 577, 578, 597, 607, 679, 680, 681, 685, 686, 750, 762, 763, 764, 792, 847, 855, 874, 883, 885, 892, 894, 895, 896, 898, 899, 930, 942, 962, 975, 982, 984, 1031, 1035, 1049, 1050, 1055, 1072, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1123, 1124, 1153, 1160, 1197, 1200, 1212, 1236, 1237, 1259, 1264, 1331, 1350, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1373, 1374, 1375, 1379, 1381, 1386, 1395, 1401, 1410, 1411, 1412, 1413, 1414, 1415, 1425, 1427, 1428, 1429, 1434, 1437, 1438, 1439, 1443, 1462, 1465, 1466, 1467, 1482, 1483, 1485, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1532, 1557, 1558, 1559, 1573, 1589, 1614, 1621, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1697, 1698, 1704, 1706, 1715, 1723, 1727, 1728, 1733, 1734, 1738, 1763, 1817, 1818, 1819, 1820, 1824, 1845, 1846, 1867, 1868, 1881, 1883, 1884, 1885, 1891, 1896, 1899, 1903, 1904, 1906, 1907, 1908, 1912, 1913, 1915, 1917, 1919, 1920, 1922, 1923, 1925, 1927, 1929, 1931, 1932, 1936, 1938, 1940, 1942, 1945, 1949, 1954, 1962, 1967, 1969], "simpl": [0, 15, 18, 22, 35, 42, 46, 53, 55, 57, 478, 962, 1029, 1131, 1139, 1140, 1141, 1200, 1204, 1212, 1352, 1353, 1354, 1377, 1407, 1408, 1409, 1434, 1473, 1524, 1779, 1872, 1879, 1881, 1885, 1899, 1906, 1907, 1908, 1909, 1911, 1912, 1914, 1925, 1928, 1936, 1940, 1956, 1958, 1961, 1962], "util": [0, 7, 17, 43, 46, 47, 49, 50, 56, 57, 58, 489, 722, 725, 728, 729, 730, 735, 736, 746, 750, 754, 780, 788, 989, 1073, 1074, 1075, 1123, 1200, 1386, 1404, 1434, 1449, 1450, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1629, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1653, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1698, 1704, 1828, 1829, 1831, 1832, 1833, 1861, 1880, 1884, 1888, 1894, 1903, 1905, 1906, 1907, 1909, 1911, 1912, 1914, 1915, 1917, 1919, 1925, 1927, 1928, 1929, 1957, 1959, 1967, 1969], "clip_grad_norm_": [0, 49, 1618, 1903], "max_norm": [0, 49, 735, 736, 1377, 1378, 1524, 1525, 1618, 1619, 1882, 1903], "own": [0, 7, 9, 25, 26, 29, 31, 34, 42, 44, 49, 57, 670, 1007, 1106, 1126, 1162, 1200, 1272, 1362, 1363, 1364, 1365, 1366, 1367, 1434, 1629, 1632, 1884, 1900, 1903, 1907, 1928, 1931, 1932, 1936, 1938, 1940, 1958, 1961], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 57, 79, 141, 251, 304, 306, 312, 326, 476, 478, 503, 505, 507, 536, 550, 597, 600, 607, 670, 676, 677, 682, 684, 688, 689, 725, 750, 781, 783, 784, 804, 830, 844, 848, 851, 864, 867, 879, 880, 881, 883, 884, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 907, 908, 909, 912, 921, 923, 928, 929, 933, 936, 937, 941, 942, 944, 950, 954, 961, 971, 975, 976, 978, 979, 987, 988, 997, 1005, 1009, 1015, 1019, 1020, 1028, 1029, 1036, 1037, 1039, 1040, 1044, 1046, 1048, 1089, 1090, 1091, 1092, 1095, 1098, 1099, 1102, 1105, 1107, 1109, 1124, 1126, 1129, 1130, 1136, 1137, 1139, 1140, 1142, 1162, 1165, 1196, 1197, 1200, 1208, 1211, 1212, 1215, 1216, 1236, 1263, 1272, 1288, 1290, 1298, 1300, 1303, 1311, 1312, 1321, 1329, 1330, 1331, 1332, 1342, 1349, 1351, 1355, 1357, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1378, 1381, 1386, 1387, 1388, 1389, 1394, 1400, 1401, 1404, 1405, 1421, 1425, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1473, 1477, 1479, 1481, 1482, 1485, 1490, 1491, 1498, 1504, 1506, 1524, 1525, 1530, 1535, 1554, 1555, 1583, 1589, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1619, 1627, 1632, 1639, 1643, 1653, 1657, 1665, 1666, 1667, 1668, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1698, 1701, 1702, 1705, 1706, 1707, 1708, 1720, 1766, 1799, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1817, 1818, 1819, 1820, 1823, 1840, 1842, 1849, 1850, 1851, 1852, 1855, 1857, 1858, 1859, 1864, 1867, 1868, 1870, 1874, 1879, 1881, 1882, 1883, 1884, 1888, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1928, 1929, 1930, 1931, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1945, 1947, 1948, 1949, 1950, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1965, 1966, 1967, 1968, 1969, 1970, 1971], "assign": [0, 1, 7, 9, 10, 21, 25, 33, 42, 43, 54, 57, 670, 828, 829, 830, 1198, 1200, 1201, 1342, 1370, 1434, 1441, 1444, 1445, 1615, 1632, 1881, 1885, 1903, 1909, 1910, 1911, 1925, 1931, 1937, 1938, 1944, 1945], "been": [0, 1, 5, 7, 9, 11, 21, 22, 25, 26, 29, 30, 31, 33, 35, 42, 45, 49, 52, 53, 57, 75, 478, 670, 750, 887, 947, 976, 978, 983, 1011, 1014, 1071, 1076, 1130, 1203, 1204, 1210, 1215, 1272, 1386, 1393, 1404, 1449, 1498, 1533, 1614, 1621, 1629, 1634, 1638, 1640, 1660, 1661, 1676, 1696, 1697, 1698, 1704, 1706, 1722, 1820, 1836, 1864, 1874, 1888, 1890, 1894, 1896, 1897, 1898, 1903, 1904, 1906, 1907, 1912, 1913, 1915, 1917, 1919, 1921, 1923, 1925, 1927, 1928, 1936, 1938, 1940, 1945, 1954, 1955, 1959, 1965, 1969], "twice": [0, 56, 607, 892, 1137, 1903, 1904, 1911, 1912, 1958], "trigger": [0, 7, 9, 25, 42, 56, 75, 76, 78, 212, 1046, 1771, 1903, 1904, 1907, 1908, 1909, 1914, 1920, 1936, 1954, 1956, 1959, 1965, 1966, 1969], "runtimeerror": [0, 1, 14, 25, 29, 54, 57, 75, 79, 573, 687, 887, 923, 1120, 1175, 1185, 1200, 1230, 1231, 1232, 1240, 1241, 1242, 1244, 1248, 1254, 1261, 1266, 1267, 1293, 1324, 1434, 1673, 1760, 1799, 1861, 1881, 1883, 1884, 1897, 1899, 1903, 1905, 1911, 1919, 1921, 1925, 1931, 1935, 1940, 1943, 1954], "spars": [0, 1, 11, 181, 182, 199, 209, 212, 314, 319, 333, 334, 425, 533, 534, 535, 536, 571, 573, 574, 575, 576, 577, 578, 604, 679, 735, 736, 898, 899, 1046, 1142, 1164, 1185, 1273, 1295, 1305, 1334, 1377, 1378, 1467, 1524, 1525, 1550, 1693, 1712, 1760, 1794, 1799, 1806, 1807, 1808, 1809, 1810, 1811, 1816, 1825, 1845, 1861, 1862, 1880, 1882, 1886, 1891, 1902, 1918, 1919, 1926, 1933, 1943, 1944, 1947, 1957, 1964], "place": [0, 3, 7, 11, 12, 21, 22, 25, 27, 32, 33, 46, 49, 52, 53, 57, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 112, 114, 116, 118, 121, 122, 124, 132, 134, 137, 138, 140, 143, 149, 151, 153, 155, 157, 159, 168, 177, 185, 189, 192, 194, 204, 206, 212, 213, 222, 227, 229, 235, 238, 240, 242, 244, 245, 248, 251, 253, 260, 262, 264, 268, 270, 274, 276, 283, 285, 287, 295, 297, 299, 301, 303, 305, 307, 309, 347, 349, 351, 353, 355, 357, 359, 362, 364, 366, 367, 374, 376, 378, 380, 382, 386, 390, 392, 410, 413, 416, 418, 429, 431, 433, 441, 446, 456, 459, 475, 477, 478, 480, 482, 486, 489, 498, 501, 502, 504, 506, 512, 517, 519, 522, 524, 526, 539, 541, 543, 552, 554, 561, 565, 567, 583, 586, 588, 590, 592, 593, 602, 612, 748, 783, 787, 804, 828, 829, 847, 848, 887, 889, 903, 904, 924, 954, 985, 986, 988, 989, 1009, 1072, 1123, 1129, 1130, 1138, 1200, 1245, 1263, 1324, 1346, 1356, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1391, 1392, 1393, 1420, 1434, 1451, 1452, 1453, 1454, 1461, 1476, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1537, 1540, 1549, 1580, 1582, 1597, 1601, 1605, 1610, 1611, 1614, 1619, 1620, 1621, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1662, 1693, 1749, 1751, 1755, 1756, 1757, 1804, 1841, 1880, 1881, 1883, 1884, 1891, 1898, 1903, 1907, 1909, 1914, 1922, 1927, 1928, 1929, 1936, 1937, 1942, 1944, 1946, 1957, 1958, 1959, 1962, 1966, 1968], "replac": [0, 1, 14, 21, 22, 25, 27, 41, 43, 46, 49, 51, 52, 53, 54, 55, 57, 73, 75, 76, 78, 110, 411, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 737, 804, 829, 848, 933, 1018, 1072, 1129, 1130, 1205, 1208, 1218, 1290, 1291, 1324, 1328, 1465, 1476, 1605, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1662, 1664, 1722, 1820, 1824, 1848, 1881, 1882, 1884, 1892, 1907, 1909, 1910, 1912, 1914, 1917, 1921, 1925, 1926, 1928, 1931, 1947, 1955, 1957, 1959, 1961, 1968], "were": [0, 1, 2, 3, 18, 25, 33, 42, 45, 49, 54, 56, 57, 141, 312, 326, 461, 844, 879, 881, 883, 897, 1018, 1130, 1141, 1208, 1272, 1498, 1614, 1619, 1629, 1639, 1656, 1758, 1762, 1835, 1842, 1872, 1883, 1891, 1903, 1907, 1909, 1920, 1925, 1928, 1954, 1958, 1959, 1965, 1968, 1969], "reduc": [0, 2, 3, 14, 22, 25, 26, 27, 29, 49, 312, 503, 506, 507, 676, 683, 685, 686, 687, 689, 809, 810, 811, 812, 815, 817, 864, 865, 942, 947, 986, 997, 1029, 1173, 1253, 1257, 1259, 1264, 1270, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1330, 1331, 1332, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1378, 1394, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1473, 1482, 1505, 1506, 1514, 1516, 1525, 1541, 1544, 1545, 1546, 1556, 1564, 1565, 1566, 1567, 1568, 1569, 1576, 1587, 1588, 1599, 1602, 1614, 1628, 1665, 1682, 1706, 1720, 1722, 1723, 1757, 1801, 1805, 1818, 1819, 1823, 1824, 1846, 1861, 1867, 1868, 1882, 1896, 1897, 1904, 1906, 1908, 1909, 1915, 1917, 1919, 1920, 1921, 1926, 1927, 1928, 1929, 1931, 1940, 1954, 1957, 1959, 1964, 1965, 1969, 1970], "increas": [0, 1, 3, 7, 22, 25, 31, 39, 49, 670, 844, 888, 926, 997, 1029, 1072, 1161, 1162, 1342, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1446, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1574, 1575, 1583, 1691, 1697, 1698, 1702, 1704, 1706, 1758, 1766, 1846, 1866, 1882, 1890, 1895, 1906, 1907, 1913, 1917, 1932, 1940, 1954, 1959, 1963], "set": [0, 1, 2, 3, 5, 8, 9, 13, 14, 20, 21, 22, 24, 25, 26, 27, 29, 31, 33, 35, 40, 42, 43, 44, 45, 46, 47, 49, 52, 53, 56, 57, 58, 70, 72, 79, 141, 145, 245, 321, 435, 436, 437, 438, 439, 448, 486, 489, 510, 570, 571, 670, 725, 731, 733, 750, 769, 775, 782, 783, 784, 787, 805, 806, 807, 810, 811, 812, 815, 816, 831, 844, 848, 849, 851, 852, 855, 868, 880, 882, 883, 890, 891, 892, 893, 894, 895, 896, 897, 921, 926, 937, 941, 942, 956, 969, 973, 983, 998, 1007, 1019, 1020, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1073, 1074, 1075, 1124, 1129, 1138, 1147, 1162, 1180, 1181, 1200, 1204, 1208, 1210, 1212, 1214, 1216, 1217, 1236, 1237, 1240, 1246, 1253, 1255, 1257, 1258, 1270, 1271, 1272, 1273, 1287, 1290, 1293, 1314, 1318, 1319, 1320, 1342, 1346, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1379, 1386, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1421, 1425, 1426, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1444, 1448, 1449, 1465, 1466, 1473, 1477, 1479, 1481, 1482, 1483, 1498, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1526, 1533, 1537, 1544, 1545, 1554, 1555, 1568, 1570, 1576, 1583, 1602, 1614, 1616, 1617, 1628, 1633, 1662, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1708, 1722, 1729, 1731, 1735, 1737, 1738, 1746, 1747, 1758, 1759, 1762, 1763, 1764, 1765, 1766, 1768, 1769, 1770, 1771, 1772, 1773, 1788, 1804, 1809, 1818, 1819, 1839, 1849, 1850, 1851, 1852, 1861, 1864, 1865, 1867, 1868, 1879, 1881, 1883, 1884, 1885, 1888, 1890, 1892, 1893, 1894, 1896, 1899, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1945, 1947, 1949, 1950, 1953, 1958, 1959, 1960, 1962, 1964, 1965, 1966, 1968, 1969, 1970], "directli": [0, 1, 3, 7, 9, 14, 15, 21, 22, 25, 27, 30, 31, 32, 33, 41, 46, 47, 49, 53, 57, 547, 722, 737, 880, 889, 944, 1055, 1123, 1130, 1137, 1139, 1145, 1231, 1440, 1467, 1486, 1544, 1589, 1654, 1846, 1881, 1883, 1884, 1888, 1894, 1904, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1920, 1928, 1930, 1931, 1936, 1940, 1945, 1947, 1956, 1957, 1958, 1959, 1961, 1963, 1968, 1969], "fill": [0, 24, 25, 145, 164, 249, 250, 251, 277, 308, 312, 368, 391, 435, 436, 437, 439, 444, 471, 598, 613, 913, 1060, 1073, 1074, 1075, 1127, 1128, 1231, 1242, 1244, 1378, 1477, 1525, 1571, 1671, 1672, 1731, 1732, 1733, 1734, 1735, 1736, 1824, 1861, 1877, 1878, 1882, 1898, 1899, 1902, 1907, 1909, 1920, 1926, 1940, 1947, 1958, 1962, 1964], "later": [0, 1, 2, 3, 7, 20, 22, 25, 30, 49, 56, 57, 735, 736, 746, 754, 906, 1007, 1272, 1404, 1427, 1428, 1429, 1449, 1463, 1557, 1558, 1559, 1586, 1614, 1824, 1881, 1904, 1906, 1908, 1915, 1920, 1937, 1938, 1962, 1965], "chang": [0, 1, 2, 3, 7, 11, 12, 18, 22, 25, 27, 29, 30, 31, 33, 41, 46, 47, 49, 50, 53, 54, 56, 57, 130, 212, 224, 245, 312, 448, 486, 489, 507, 510, 546, 607, 670, 809, 867, 898, 899, 942, 954, 955, 956, 972, 973, 974, 983, 994, 996, 1007, 1008, 1015, 1016, 1018, 1060, 1108, 1124, 1129, 1147, 1153, 1174, 1197, 1200, 1211, 1212, 1231, 1242, 1244, 1245, 1246, 1249, 1262, 1302, 1374, 1377, 1395, 1404, 1434, 1465, 1486, 1498, 1533, 1557, 1558, 1559, 1583, 1605, 1606, 1614, 1616, 1617, 1621, 1629, 1632, 1633, 1662, 1666, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1698, 1701, 1702, 1704, 1706, 1708, 1722, 1762, 1766, 1804, 1815, 1818, 1819, 1820, 1845, 1864, 1867, 1868, 1879, 1880, 1881, 1888, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1915, 1917, 1918, 1920, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1936, 1938, 1940, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1954, 1957, 1958, 1960, 1961, 1962, 1965, 1966, 1969], "further": [0, 1, 4, 9, 12, 14, 22, 25, 49, 56, 58, 67, 68, 1145, 1204, 1240, 1342, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1614, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1710, 1884, 1891, 1915, 1917, 1928, 1930, 1938, 1945, 1950, 1953, 1957, 1964, 1967, 1969], "floattensor": [0, 25, 312, 477, 676, 677, 678, 679, 680, 725, 898, 899, 910, 1147, 1377, 1378, 1437, 1477, 1764, 1943, 1946], "end": [0, 7, 8, 9, 21, 22, 25, 31, 35, 39, 52, 57, 352, 353, 528, 750, 774, 787, 810, 811, 855, 911, 957, 973, 1033, 1062, 1072, 1111, 1126, 1153, 1159, 1160, 1197, 1200, 1221, 1226, 1256, 1266, 1268, 1271, 1273, 1287, 1333, 1334, 1349, 1350, 1351, 1368, 1370, 1376, 1380, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1401, 1404, 1405, 1420, 1425, 1428, 1429, 1434, 1436, 1441, 1442, 1445, 1449, 1452, 1462, 1465, 1471, 1476, 1483, 1516, 1525, 1537, 1538, 1614, 1627, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1696, 1701, 1738, 1771, 1774, 1777, 1792, 1846, 1857, 1858, 1875, 1881, 1882, 1883, 1884, 1896, 1903, 1904, 1907, 1908, 1909, 1911, 1912, 1918, 1921, 1923, 1925, 1927, 1930, 1931, 1934, 1936, 1941, 1954, 1958, 1961, 1964, 1969], "reason": [0, 3, 8, 9, 21, 25, 27, 46, 49, 54, 72, 670, 831, 1093, 1095, 1200, 1216, 1217, 1236, 1237, 1264, 1301, 1350, 1374, 1434, 1535, 1583, 1610, 1611, 1632, 1754, 1881, 1883, 1884, 1890, 1904, 1908, 1910, 1918, 1920, 1925, 1936, 1943, 1955, 1957, 1958, 1959, 1962, 1963, 1969, 1970], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 21, 22, 25, 27, 29, 30, 32, 33, 35, 42, 43, 44, 46, 49, 50, 51, 54, 55, 56, 57, 75, 485, 503, 505, 507, 748, 813, 816, 853, 882, 884, 889, 898, 928, 941, 942, 969, 973, 1007, 1018, 1051, 1052, 1053, 1054, 1123, 1124, 1126, 1135, 1142, 1162, 1175, 1187, 1197, 1200, 1203, 1212, 1216, 1246, 1264, 1273, 1280, 1290, 1292, 1301, 1324, 1334, 1346, 1356, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1391, 1392, 1393, 1420, 1452, 1453, 1454, 1461, 1476, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1535, 1537, 1552, 1605, 1614, 1621, 1668, 1673, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1710, 1716, 1766, 1861, 1879, 1880, 1881, 1882, 1884, 1886, 1888, 1896, 1897, 1898, 1903, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1927, 1930, 1931, 1932, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1954, 1957, 1958, 1961, 1962, 1965, 1966, 1968, 1969, 1971], "synchron": [0, 3, 4, 17, 18, 22, 27, 29, 33, 42, 49, 56, 867, 975, 976, 978, 986, 1006, 1046, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1248, 1249, 1255, 1258, 1261, 1262, 1264, 1265, 1273, 1312, 1473, 1614, 1666, 1668, 1744, 1880, 1906, 1907, 1908, 1913, 1917, 1929, 1936, 1959], "fall": [0, 2, 7, 14, 21, 46, 785, 898, 942, 1162, 1214, 1272, 1395, 1465, 1542, 1587, 1619, 1620, 1879, 1925, 1931, 1959], "below": [0, 1, 5, 9, 12, 14, 21, 22, 25, 30, 31, 33, 34, 39, 42, 43, 44, 45, 46, 47, 57, 58, 65, 66, 670, 724, 738, 747, 785, 804, 1015, 1059, 1060, 1061, 1062, 1063, 1072, 1100, 1102, 1106, 1145, 1153, 1200, 1217, 1257, 1258, 1263, 1270, 1302, 1365, 1366, 1367, 1386, 1388, 1395, 1404, 1406, 1430, 1431, 1432, 1434, 1449, 1465, 1486, 1516, 1542, 1587, 1614, 1632, 1666, 1693, 1763, 1766, 1804, 1836, 1846, 1849, 1850, 1851, 1852, 1881, 1883, 1884, 1886, 1890, 1891, 1896, 1897, 1903, 1904, 1907, 1908, 1909, 1912, 1913, 1915, 1917, 1919, 1920, 1922, 1923, 1925, 1927, 1928, 1929, 1931, 1933, 1936, 1937, 1938, 1941, 1944, 1947, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1965, 1967, 1969], "someth": [0, 3, 7, 46, 47, 51, 57, 58, 60, 891, 893, 1072, 1200, 1216, 1434, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1886, 1894, 1896, 1897, 1904, 1913, 1921, 1925, 1936, 1955, 1957, 1959, 1961, 1962, 1968, 1969, 1970], "wrong": [0, 25, 57, 75, 887, 947, 1198, 1201, 1908, 1917, 1921, 1925, 1927, 1954, 1956], "incompat": [0, 9, 14, 54, 923, 1197, 1621, 1905, 1928], "due": [0, 3, 4, 5, 7, 22, 25, 31, 41, 49, 54, 57, 58, 60, 75, 476, 870, 891, 892, 897, 958, 1213, 1236, 1237, 1264, 1290, 1374, 1388, 1477, 1486, 1544, 1583, 1660, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1825, 1881, 1899, 1907, 1908, 1912, 1913, 1919, 1923, 1925, 1931, 1932, 1936, 1938, 1959, 1962, 1965, 1969, 1971], "float64": [0, 11, 231, 436, 439, 570, 870, 951, 1115, 1124, 1125, 1147, 1182, 1200, 1230, 1236, 1237, 1239, 1241, 1257, 1434, 1583, 1679, 1680, 1716, 1724, 1763, 1764, 1767, 1798, 1806, 1807, 1808, 1809, 1810, 1811, 1839, 1870, 1875, 1915, 1918, 1940, 1942, 1943, 1946, 1947, 1972], "variant": [0, 5, 22, 848, 1231, 1242, 1255, 1258, 1331, 1334, 1679, 1680, 1681, 1693, 1798, 1848, 1880, 1914, 1934, 1946, 1964, 1965, 1968], "suppli": [0, 5, 7, 14, 15, 25, 1007, 1440, 1675, 1884, 1907, 1925, 1940, 1959, 1969], "won": [0, 8, 22, 27, 42, 52, 448, 1200, 1212, 1434, 1569, 1608, 1609, 1879, 1904, 1909, 1936, 1948, 1958, 1959, 1962, 1967, 1969], "go": [0, 1, 7, 15, 21, 25, 39, 44, 53, 57, 489, 490, 550, 888, 903, 1273, 1347, 1348, 1349, 1427, 1428, 1429, 1621, 1883, 1884, 1891, 1896, 1897, 1898, 1904, 1906, 1907, 1909, 1910, 1914, 1915, 1917, 1921, 1925, 1928, 1943, 1945, 1955, 1956, 1957, 1958, 1959, 1962], "addmm": [0, 46, 47, 58, 97, 1816, 1882, 1897, 1918, 1926, 1940, 1964, 1968], "b": [0, 1, 3, 11, 12, 21, 25, 27, 31, 40, 46, 57, 58, 61, 76, 78, 251, 326, 389, 607, 675, 676, 738, 747, 771, 814, 870, 887, 889, 890, 901, 903, 904, 910, 921, 922, 924, 928, 930, 932, 935, 940, 954, 957, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 1015, 1016, 1064, 1067, 1071, 1072, 1117, 1118, 1119, 1120, 1126, 1130, 1143, 1165, 1177, 1197, 1203, 1211, 1212, 1220, 1221, 1223, 1232, 1233, 1241, 1245, 1246, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1263, 1266, 1267, 1270, 1273, 1282, 1284, 1285, 1291, 1299, 1304, 1306, 1323, 1351, 1355, 1377, 1378, 1385, 1421, 1504, 1506, 1525, 1532, 1550, 1627, 1654, 1655, 1656, 1657, 1658, 1659, 1667, 1690, 1692, 1723, 1729, 1742, 1745, 1761, 1773, 1792, 1801, 1806, 1807, 1808, 1810, 1811, 1815, 1820, 1821, 1823, 1830, 1831, 1832, 1841, 1848, 1849, 1851, 1869, 1874, 1881, 1882, 1883, 1884, 1897, 1898, 1899, 1902, 1903, 1905, 1907, 1909, 1911, 1912, 1913, 1918, 1920, 1923, 1930, 1931, 1937, 1938, 1940, 1941, 1944, 1945, 1950, 1955, 1956, 1959, 1961, 1962, 1964, 1968, 1969, 1971], "c": [0, 1, 3, 8, 9, 14, 21, 25, 31, 40, 46, 47, 52, 57, 76, 78, 251, 326, 489, 510, 607, 675, 811, 867, 870, 889, 921, 932, 958, 1009, 1015, 1049, 1064, 1067, 1072, 1118, 1119, 1120, 1130, 1131, 1135, 1140, 1143, 1153, 1200, 1211, 1223, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1250, 1252, 1256, 1257, 1259, 1261, 1263, 1264, 1323, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1370, 1373, 1374, 1375, 1379, 1381, 1382, 1383, 1389, 1397, 1398, 1399, 1402, 1403, 1405, 1406, 1416, 1417, 1418, 1422, 1427, 1428, 1429, 1430, 1431, 1432, 1437, 1438, 1439, 1441, 1446, 1447, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1473, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1506, 1516, 1517, 1529, 1533, 1568, 1574, 1575, 1583, 1627, 1655, 1657, 1658, 1659, 1666, 1667, 1710, 1726, 1742, 1780, 1801, 1815, 1820, 1841, 1858, 1863, 1864, 1880, 1881, 1882, 1883, 1884, 1888, 1897, 1898, 1906, 1907, 1908, 1910, 1912, 1914, 1921, 1928, 1937, 1938, 1940, 1941, 1944, 1945, 1951, 1956, 1957, 1958, 1959, 1961, 1962, 1964, 1968, 1969, 1970, 1971], "addmm_": [0, 1882, 1897, 1940], "d": [0, 1, 11, 21, 22, 25, 31, 50, 57, 304, 312, 326, 461, 503, 505, 507, 534, 573, 607, 676, 680, 855, 870, 889, 910, 911, 913, 920, 921, 922, 926, 932, 1059, 1061, 1071, 1072, 1085, 1089, 1090, 1091, 1092, 1097, 1098, 1101, 1102, 1107, 1108, 1109, 1112, 1113, 1114, 1141, 1142, 1157, 1158, 1165, 1174, 1197, 1201, 1205, 1243, 1244, 1294, 1305, 1326, 1341, 1349, 1350, 1354, 1364, 1368, 1369, 1373, 1374, 1375, 1377, 1379, 1381, 1386, 1388, 1399, 1404, 1406, 1418, 1429, 1443, 1449, 1473, 1482, 1483, 1485, 1498, 1533, 1544, 1550, 1577, 1601, 1602, 1628, 1661, 1666, 1667, 1691, 1711, 1729, 1738, 1750, 1758, 1763, 1815, 1820, 1834, 1835, 1841, 1844, 1849, 1850, 1851, 1852, 1866, 1872, 1874, 1879, 1882, 1888, 1891, 1897, 1898, 1899, 1902, 1904, 1907, 1909, 1910, 1912, 1913, 1920, 1925, 1936, 1937, 1940, 1941, 1945, 1946, 1958, 1959, 1961, 1967, 1969, 1971], "best": [0, 1, 7, 15, 18, 21, 25, 31, 43, 49, 52, 851, 852, 907, 929, 942, 1216, 1217, 1246, 1440, 1693, 1706, 1880, 1881, 1883, 1896, 1902, 1903, 1904, 1909, 1911, 1928, 1936, 1940, 1951, 1956, 1959, 1963], "stabil": [0, 1232, 1237, 1288, 1351, 1352, 1353, 1354, 1388, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1470, 1473, 1482, 1530, 1591, 1628, 1661, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1726, 1910, 1959, 1969], "respect": [0, 1, 5, 8, 25, 26, 29, 31, 40, 42, 49, 55, 56, 57, 187, 200, 477, 570, 593, 679, 680, 681, 750, 785, 809, 831, 875, 881, 883, 897, 899, 903, 904, 937, 962, 1060, 1062, 1063, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1140, 1153, 1200, 1232, 1236, 1237, 1246, 1256, 1259, 1261, 1264, 1273, 1305, 1328, 1350, 1357, 1365, 1366, 1367, 1371, 1386, 1388, 1404, 1434, 1435, 1449, 1479, 1481, 1482, 1483, 1484, 1486, 1524, 1533, 1610, 1611, 1634, 1638, 1640, 1662, 1664, 1692, 1706, 1797, 1801, 1824, 1841, 1898, 1903, 1904, 1907, 1909, 1912, 1915, 1916, 1929, 1934, 1940, 1941, 1942, 1947, 1958, 1963], "describ": [0, 5, 7, 8, 9, 21, 22, 27, 29, 30, 33, 34, 40, 42, 46, 47, 57, 224, 503, 782, 783, 784, 805, 806, 807, 831, 849, 927, 998, 1015, 1032, 1072, 1153, 1221, 1261, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1372, 1373, 1374, 1375, 1376, 1379, 1381, 1382, 1383, 1389, 1392, 1395, 1397, 1398, 1399, 1401, 1406, 1425, 1427, 1428, 1429, 1440, 1441, 1448, 1452, 1465, 1473, 1481, 1482, 1483, 1485, 1516, 1528, 1529, 1538, 1571, 1704, 1846, 1880, 1881, 1883, 1884, 1902, 1903, 1904, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1920, 1925, 1928, 1930, 1931, 1934, 1937, 1938, 1947, 1959, 1960, 1965], "expos": [0, 1, 8, 25, 29, 49, 56, 57, 785, 1126, 1904, 1907, 1914, 1928, 1931, 1970], "namespac": [0, 57, 1046, 1881, 1885, 1888, 1909, 1915, 1923, 1925, 1929, 1934, 1951, 1956, 1970], "defin": [0, 1, 2, 3, 5, 9, 14, 15, 21, 22, 25, 26, 27, 30, 31, 33, 34, 40, 42, 43, 46, 47, 49, 54, 57, 425, 435, 437, 439, 507, 556, 782, 787, 789, 828, 849, 850, 851, 852, 879, 880, 881, 882, 1029, 1055, 1072, 1073, 1092, 1120, 1127, 1143, 1145, 1159, 1161, 1162, 1189, 1200, 1206, 1223, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1250, 1252, 1253, 1257, 1258, 1259, 1261, 1263, 1264, 1270, 1306, 1371, 1376, 1382, 1383, 1390, 1391, 1392, 1393, 1400, 1402, 1403, 1434, 1440, 1452, 1467, 1469, 1474, 1476, 1498, 1533, 1583, 1589, 1605, 1608, 1614, 1638, 1640, 1647, 1648, 1668, 1671, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1698, 1701, 1704, 1722, 1731, 1733, 1735, 1742, 1771, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1801, 1803, 1846, 1849, 1850, 1851, 1852, 1875, 1877, 1879, 1880, 1881, 1884, 1886, 1888, 1896, 1897, 1899, 1904, 1907, 1908, 1912, 1913, 1915, 1917, 1921, 1925, 1927, 1928, 1929, 1930, 1931, 1934, 1936, 1940, 1941, 1946, 1947, 1948, 1954, 1955, 1958, 1960, 1962, 1966, 1970], "still": [0, 1, 2, 7, 8, 21, 24, 25, 31, 33, 42, 46, 49, 56, 57, 784, 789, 888, 893, 1204, 1210, 1218, 1401, 1425, 1614, 1615, 1616, 1617, 1706, 1754, 1881, 1884, 1896, 1897, 1898, 1899, 1903, 1904, 1907, 1908, 1909, 1911, 1913, 1920, 1921, 1925, 1927, 1928, 1929, 1931, 1936, 1937, 1938, 1940, 1958, 1962, 1964, 1965, 1969, 1971], "unlist": 0, "downstream": [0, 3, 1894, 1959, 1960, 1962, 1969], "stabl": [0, 1, 2, 12, 25, 31, 42, 43, 720, 721, 722, 723, 735, 736, 746, 751, 752, 753, 754, 755, 866, 954, 1072, 1236, 1237, 1241, 1246, 1254, 1258, 1261, 1264, 1266, 1273, 1351, 1796, 1880, 1882, 1902, 1905, 1919, 1936], "believ": [0, 8, 1959], "unstabl": [0, 31, 1236, 1237, 1264, 1281, 1290, 1552, 1824, 1941], "__matmul__": 0, "addbmm": [0, 91, 910, 1882, 1918, 1926], "addmv": [0, 99, 1882, 1897, 1926], "addr": [0, 25, 101, 1882, 1926, 1971], "baddbmm": [0, 143, 1882, 1918, 1926], "bmm": [0, 1861, 1882, 1897, 1899, 1918, 1919, 1926, 1940, 1964], "chain_matmul": [0, 1882, 1926], "multi_dot": [0, 932], "conv1d": [0, 698, 702, 705, 715, 731, 1365, 1373, 1410, 1861, 1882, 1926, 1931, 1933], "conv2d": [0, 46, 699, 703, 706, 708, 716, 732, 782, 804, 1200, 1210, 1212, 1216, 1217, 1366, 1374, 1411, 1434, 1435, 1441, 1462, 1485, 1621, 1647, 1861, 1881, 1882, 1892, 1925, 1926, 1931, 1933, 1934, 1945, 1950], "conv3d": [0, 700, 704, 707, 709, 717, 733, 1367, 1375, 1412, 1861, 1882, 1926, 1931, 1933], "conv_transpose1d": [0, 1882, 1926, 1933], "conv_transpose2d": [0, 1882, 1926, 1933], "conv_transpose3d": [0, 1882, 1926, 1933], "grucel": [0, 1918, 1931, 1933, 1934], "lstmcell": [0, 1918, 1931, 1933, 1934], "matmul": [0, 2, 11, 922, 942, 1140, 1305, 1485, 1712, 1722, 1766, 1824, 1882, 1897, 1899, 1907, 1918, 1926, 1933, 1940, 1954], "mv": [0, 11, 1212, 1861, 1882, 1897, 1926, 1940], "prelu": [0, 1435, 1882, 1926, 1933], "rnncell": [0, 1931, 1933, 1934], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 85, 617, 618, 856, 1882, 1897, 1926, 1947, 1964], "asin": [0, 132, 619, 620, 858, 1882, 1897, 1926, 1940, 1964], "cosh": [0, 194, 627, 628, 674, 1882, 1897, 1926, 1964], "cosine_embedding_loss": [0, 1882, 1926], "cdist": [0, 1907, 1926], "cosine_similar": [0, 1483, 1882, 1926], "cross_entropi": [0, 1882], "cumprod": [0, 204, 1882, 1897, 1926], "cumsum": [0, 206, 1055, 1861, 1882, 1897, 1926, 1964], "dist": [0, 22, 25, 26, 29, 31, 43, 49, 933, 934, 935, 1230, 1236, 1237, 1238, 1240, 1241, 1242, 1246, 1247, 1258, 1259, 1262, 1264, 1265, 1288, 1291, 1443, 1473, 1614, 1627, 1824, 1882, 1908, 1926, 1936, 1938], "erfinv": [0, 242, 1882, 1897, 1926, 1940, 1941], "exp": [0, 1, 31, 244, 633, 634, 760, 893, 894, 896, 1115, 1260, 1280, 1288, 1351, 1356, 1370, 1376, 1400, 1423, 1424, 1438, 1448, 1461, 1464, 1466, 1467, 1469, 1470, 1474, 1507, 1553, 1576, 1584, 1585, 1589, 1591, 1594, 1627, 1719, 1780, 1781, 1803, 1820, 1882, 1897, 1904, 1925, 1926, 1941, 1964], "expm1": [0, 248, 635, 636, 1882, 1897, 1926, 1940, 1941, 1964], "group_norm": [0, 1882, 1926, 1933], "hinge_embedding_loss": [0, 1882, 1926], "kl_div": [0, 1882, 1926], "l1_loss": [0, 1882, 1926], "layer_norm": [0, 1406, 1882, 1926, 1933], "log": [0, 14, 21, 22, 31, 33, 35, 36, 39, 40, 44, 70, 72, 367, 368, 643, 650, 670, 1082, 1276, 1278, 1280, 1281, 1288, 1316, 1342, 1350, 1351, 1370, 1388, 1400, 1423, 1424, 1438, 1441, 1448, 1466, 1467, 1470, 1530, 1535, 1545, 1552, 1553, 1568, 1576, 1589, 1591, 1614, 1880, 1882, 1890, 1894, 1897, 1904, 1907, 1909, 1923, 1925, 1926, 1930, 1941, 1945, 1948, 1949, 1950, 1961, 1962, 1963, 1964, 1966, 1967, 1969], "log_softmax": [0, 1357, 1400, 1517, 1568, 1589, 1882, 1898, 1926, 1941], "log10": [0, 362, 644, 645, 1882, 1897, 1926, 1964], "log1p": [0, 364, 646, 647, 1882, 1897, 1926, 1940, 1941, 1964], "log2": [0, 366, 648, 649, 1882, 1897, 1926, 1941, 1964], "margin_ranking_loss": [0, 1882, 1926], "mse_loss": [0, 53, 1129, 1882, 1926], "multilabel_margin_loss": [0, 1882, 1926], "multi_margin_loss": [0, 1882, 1926], "nll_loss": [0, 1882, 1926], "norm": [0, 31, 49, 51, 57, 692, 693, 694, 695, 696, 697, 930, 1066, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1232, 1236, 1245, 1246, 1253, 1258, 1270, 1377, 1378, 1425, 1443, 1478, 1479, 1480, 1481, 1482, 1524, 1525, 1569, 1573, 1618, 1619, 1628, 1637, 1638, 1643, 1646, 1647, 1661, 1664, 1681, 1743, 1882, 1886, 1903, 1904, 1912, 1915, 1918, 1926], "normal": [0, 1, 22, 29, 42, 46, 49, 57, 73, 327, 342, 368, 444, 546, 962, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1161, 1197, 1200, 1205, 1236, 1278, 1346, 1352, 1353, 1354, 1373, 1374, 1375, 1379, 1389, 1397, 1398, 1399, 1406, 1416, 1417, 1418, 1422, 1461, 1473, 1477, 1478, 1479, 1480, 1481, 1503, 1533, 1534, 1543, 1547, 1551, 1577, 1619, 1620, 1628, 1643, 1651, 1652, 1661, 1664, 1690, 1706, 1726, 1735, 1736, 1743, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1820, 1861, 1879, 1880, 1881, 1882, 1886, 1897, 1899, 1902, 1904, 1907, 1910, 1925, 1926, 1928, 1933, 1936, 1941, 1945, 1947, 1948, 1953, 1964, 1972], "pdist": [0, 1443, 1882, 1926], "poisson_nll_loss": [0, 1882, 1926], "pow": [0, 1, 459, 486, 891, 892, 895, 1115, 1882, 1884, 1897, 1903, 1904, 1926, 1940, 1946, 1964], "prod": [0, 39, 312, 507, 1089, 1091, 1094, 1095, 1097, 1098, 1101, 1102, 1104, 1105, 1107, 1109, 1266, 1267, 1377, 1381, 1485, 1859, 1861, 1882, 1897, 1926, 1940, 1964], "reciproc": [0, 475, 653, 654, 1753, 1882, 1897, 1926, 1964], "rsqrt": [0, 501, 1882, 1897, 1926, 1964], "sinh": [0, 526, 661, 662, 872, 1882, 1897, 1926, 1940, 1964], "smooth_l1_loss": [0, 1882, 1926], "soft_margin_loss": [0, 1882, 1926], "softmax": [0, 31, 786, 1342, 1370, 1400, 1424, 1468, 1516, 1535, 1545, 1552, 1583, 1590, 1800, 1882, 1897, 1898, 1899, 1907, 1926, 1933, 1940, 1941], "softmin": [0, 1882], "softplu": [0, 31, 1433, 1563, 1882, 1926], "sum": [0, 1, 3, 12, 21, 25, 26, 29, 31, 33, 49, 54, 55, 57, 486, 507, 556, 736, 883, 891, 892, 893, 894, 895, 896, 897, 903, 904, 908, 962, 987, 988, 989, 1054, 1055, 1072, 1133, 1134, 1135, 1140, 1177, 1232, 1253, 1257, 1270, 1278, 1279, 1280, 1288, 1324, 1332, 1350, 1351, 1357, 1367, 1368, 1370, 1371, 1378, 1381, 1388, 1394, 1395, 1400, 1401, 1402, 1403, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1467, 1469, 1482, 1483, 1485, 1505, 1506, 1516, 1517, 1525, 1530, 1535, 1545, 1554, 1555, 1568, 1576, 1589, 1590, 1614, 1643, 1648, 1649, 1667, 1698, 1744, 1766, 1782, 1801, 1803, 1844, 1846, 1861, 1880, 1882, 1884, 1888, 1894, 1897, 1903, 1904, 1907, 1908, 1909, 1910, 1915, 1918, 1925, 1926, 1936, 1937, 1940, 1941, 1946, 1954, 1955, 1956, 1959, 1962, 1964, 1967, 1969, 1971], "renorm": [0, 482, 1377, 1378, 1524, 1525, 1882, 1926], "tan": [0, 565, 665, 666, 873, 1882, 1897, 1926, 1940, 1945, 1964], "triplet_margin_loss": [0, 1882, 1926], "take": [0, 1, 2, 3, 4, 7, 9, 14, 21, 22, 25, 27, 29, 31, 33, 41, 42, 43, 44, 46, 49, 51, 52, 54, 55, 56, 57, 58, 65, 66, 78, 750, 783, 788, 804, 810, 816, 852, 891, 892, 893, 894, 895, 896, 898, 899, 972, 1009, 1060, 1062, 1063, 1088, 1090, 1093, 1096, 1100, 1101, 1103, 1106, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1233, 1255, 1258, 1342, 1351, 1378, 1382, 1383, 1386, 1404, 1428, 1429, 1430, 1431, 1432, 1434, 1442, 1449, 1477, 1487, 1488, 1528, 1529, 1546, 1570, 1583, 1614, 1665, 1690, 1694, 1719, 1848, 1862, 1872, 1879, 1881, 1882, 1884, 1891, 1892, 1896, 1897, 1898, 1899, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1919, 1920, 1921, 1925, 1926, 1928, 1930, 1931, 1936, 1937, 1938, 1940, 1943, 1944, 1945, 1949, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1963, 1967, 1968], "addcdiv": [0, 93, 1882, 1926], "addcmul": [0, 95, 1882, 1926], "atan2": [0, 137, 861, 1882, 1897, 1926, 1964], "bilinear": [0, 769, 775, 776, 1072, 1486, 1487, 1533, 1544, 1602, 1603, 1861, 1882, 1926], "cross": [0, 7, 8, 27, 31, 33, 1350, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1505, 1506, 1516, 1882, 1907, 1921, 1926, 1962], "dot": [0, 2, 14, 54, 55, 607, 892, 894, 895, 896, 1051, 1052, 1053, 1054, 1131, 1141, 1177, 1221, 1268, 1269, 1295, 1350, 1351, 1370, 1381, 1394, 1401, 1425, 1440, 1441, 1483, 1583, 1820, 1869, 1870, 1871, 1872, 1882, 1897, 1912, 1926, 1928], "grid_sampl": [0, 1498, 1861, 1882, 1926], "index_put": [0, 1861, 1882, 1926, 1964], "scatter_add": [0, 1882, 1926, 1964], "tensordot": [0, 1177, 1266, 1267, 1886, 1907, 1926], "binari": [0, 2, 14, 15, 22, 31, 33, 35, 40, 42, 57, 145, 725, 912, 1294, 1350, 1351, 1440, 1505, 1506, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1674, 1880, 1885, 1897, 1898, 1914, 1923, 1925, 1928, 1945], "add": [0, 1, 3, 7, 12, 15, 17, 21, 25, 27, 29, 39, 42, 46, 47, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 73, 77, 89, 281, 304, 503, 505, 676, 677, 678, 681, 737, 738, 747, 780, 783, 828, 849, 851, 852, 988, 1018, 1029, 1072, 1130, 1200, 1212, 1342, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415, 1434, 1436, 1440, 1441, 1445, 1448, 1535, 1576, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1766, 1816, 1879, 1881, 1882, 1883, 1884, 1888, 1892, 1894, 1897, 1899, 1903, 1905, 1906, 1909, 1910, 1913, 1914, 1915, 1917, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1940, 1943, 1944, 1945, 1949, 1950, 1954, 1955, 1956, 1957, 1959, 1960, 1963, 1964, 1967, 1968, 1969, 1970, 1971], "nativ": [0, 2, 11, 22, 30, 49, 57, 998, 1130, 1211, 1619, 1620, 1766, 1881, 1884, 1896, 1907, 1920, 1922, 1927, 1928, 1936, 1959], "intervent": [0, 8, 1936], "mixtur": [0, 31, 1370, 1516], "bceloss": [0, 1351, 1505], "aren": [0, 8, 54, 57, 72, 1130, 1897, 1904, 1937, 1970], "mean": [0, 2, 3, 5, 7, 8, 12, 15, 18, 21, 22, 25, 27, 29, 31, 42, 44, 46, 47, 49, 50, 52, 55, 56, 57, 245, 312, 326, 368, 444, 478, 485, 507, 748, 750, 771, 784, 786, 851, 852, 910, 923, 954, 962, 1129, 1131, 1211, 1301, 1319, 1324, 1329, 1333, 1334, 1340, 1341, 1342, 1344, 1345, 1346, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1368, 1370, 1372, 1376, 1378, 1379, 1380, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1404, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1420, 1421, 1423, 1424, 1425, 1426, 1433, 1437, 1438, 1439, 1441, 1442, 1448, 1449, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1482, 1483, 1484, 1504, 1505, 1506, 1514, 1516, 1517, 1525, 1526, 1530, 1541, 1542, 1545, 1546, 1550, 1556, 1564, 1565, 1566, 1567, 1568, 1576, 1587, 1588, 1599, 1600, 1614, 1623, 1625, 1668, 1693, 1726, 1735, 1736, 1766, 1780, 1801, 1818, 1819, 1825, 1861, 1867, 1868, 1879, 1881, 1882, 1883, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1907, 1908, 1909, 1911, 1912, 1915, 1921, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1936, 1937, 1938, 1940, 1957, 1958, 1959, 1962, 1963, 1964, 1965, 1966], "doesn": [0, 1, 2, 7, 8, 11, 12, 21, 25, 27, 47, 52, 54, 56, 57, 75, 813, 816, 870, 887, 897, 954, 976, 997, 1130, 1141, 1208, 1214, 1240, 1264, 1272, 1281, 1362, 1363, 1364, 1371, 1400, 1467, 1508, 1509, 1510, 1545, 1589, 1614, 1615, 1643, 1682, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1797, 1801, 1872, 1881, 1884, 1885, 1897, 1899, 1904, 1905, 1907, 1909, 1910, 1914, 1917, 1921, 1927, 1929, 1937, 1940, 1958, 1964, 1969], "revers": [0, 31, 55, 57, 503, 724, 783, 891, 893, 1090, 1092, 1112, 1133, 1135, 1140, 1268, 1404, 1447, 1575, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1848, 1866, 1882, 1883, 1884, 1904, 1908, 1910, 1926, 1946], "rais": [0, 1, 5, 7, 14, 25, 29, 31, 33, 35, 42, 46, 49, 54, 56, 57, 58, 79, 304, 306, 312, 687, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 923, 932, 977, 1042, 1115, 1120, 1198, 1200, 1205, 1208, 1216, 1218, 1230, 1232, 1240, 1241, 1244, 1248, 1249, 1254, 1261, 1262, 1266, 1267, 1272, 1293, 1319, 1434, 1583, 1608, 1632, 1633, 1638, 1640, 1643, 1653, 1673, 1674, 1760, 1809, 1861, 1879, 1885, 1891, 1896, 1904, 1907, 1909, 1911, 1918, 1923, 1925, 1928, 1929, 1935, 1936, 1947, 1957, 1958, 1959, 1962, 1968, 1969, 1970], "mani": [0, 3, 7, 11, 14, 21, 22, 25, 31, 42, 49, 53, 54, 57, 79, 393, 670, 879, 881, 891, 893, 1072, 1213, 1357, 1693, 1792, 1842, 1849, 1850, 1851, 1852, 1881, 1883, 1897, 1902, 1904, 1905, 1906, 1907, 1909, 1910, 1914, 1915, 1918, 1922, 1925, 1927, 1931, 1938, 1940, 1943, 1945, 1946, 1948, 1955, 1957, 1958, 1959, 1961, 1962, 1963, 1965, 1968, 1969, 1971], "sigmoid": [0, 31, 57, 517, 657, 658, 750, 785, 1350, 1351, 1377, 1386, 1387, 1404, 1405, 1463, 1505, 1532, 1586, 1882, 1897, 1898, 1902, 1923, 1926, 1933, 1941, 1964], "right": [0, 2, 7, 9, 12, 25, 27, 31, 49, 57, 810, 855, 911, 918, 920, 921, 926, 931, 935, 954, 1066, 1072, 1113, 1116, 1117, 1121, 1153, 1157, 1158, 1162, 1166, 1197, 1220, 1245, 1250, 1261, 1263, 1264, 1272, 1278, 1279, 1324, 1342, 1347, 1348, 1349, 1350, 1351, 1362, 1363, 1364, 1381, 1388, 1401, 1402, 1403, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1437, 1438, 1439, 1443, 1444, 1450, 1482, 1485, 1486, 1487, 1488, 1533, 1553, 1571, 1620, 1632, 1682, 1696, 1697, 1738, 1758, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1820, 1841, 1846, 1848, 1864, 1866, 1879, 1882, 1884, 1896, 1897, 1898, 1904, 1909, 1912, 1923, 1925, 1927, 1934, 1938, 1941, 1956, 1958, 1967], "entropi": [0, 31, 1350, 1370, 1438, 1505, 1506, 1516, 1941], "combin": [0, 3, 21, 22, 25, 27, 42, 55, 56, 607, 679, 702, 703, 704, 705, 706, 707, 708, 709, 783, 844, 880, 1029, 1101, 1102, 1107, 1109, 1162, 1295, 1305, 1351, 1381, 1395, 1440, 1481, 1485, 1527, 1550, 1639, 1881, 1882, 1883, 1903, 1907, 1910, 1925, 1926, 1927, 1929, 1931, 1934, 1936, 1955, 1962], "bcewithlogitsloss": [0, 1506], "bcewithlogit": 0, "_convolut": [0, 1926], "avg_pool3d": [0, 1882, 1926, 1933, 1964], "grid_sampler_2d": [0, 1882, 1926, 1964], "_grid_sampler_2d_cpu_fallback": [0, 1926], "grid_sampler_3d": [0, 1882, 1926], "polar": [0, 31, 1260, 1882, 1926], "quantil": [0, 1301, 1331, 1882, 1926, 1941], "nanquantil": [0, 1882, 1926], "stft": [0, 911, 920, 1157, 1158, 1197, 1220, 1882, 1926], "view_as_complex": [0, 11, 1882, 1926], "choleski": [0, 2, 31, 934, 935, 1231, 1237, 1273, 1882, 1926], "cholesky_invers": [0, 2, 1882, 1926], "cholesky_solv": [0, 2, 1882, 1926], "invers": [0, 31, 673, 674, 872, 875, 929, 934, 935, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1197, 1241, 1242, 1254, 1258, 1261, 1266, 1267, 1365, 1366, 1367, 1377, 1378, 1381, 1430, 1431, 1432, 1485, 1524, 1525, 1560, 1561, 1562, 1629, 1632, 1656, 1698, 1704, 1856, 1880, 1882, 1884, 1918, 1926, 1941], "lu_solv": [0, 2, 1248, 1882, 1926], "orgqr": [0, 1882, 1926], "ormqr": [0, 1145, 1240, 1882, 1926], "pinvers": [0, 1246, 1882, 1926], "max_pool3d": [0, 1882, 1926, 1933], "max_unpool2d": [0, 1528, 1558, 1882, 1926], "max_unpool3d": [0, 1529, 1559, 1882, 1926], "adaptive_avg_pool3d": [0, 1882, 1909, 1926, 1933], "reflection_pad1d": [0, 1882, 1926, 1964], "reflection_pad2d": [0, 1882, 1926, 1964], "replication_pad1d": [0, 1882, 1926], "replication_pad2d": [0, 1882, 1926, 1964], "replication_pad3d": [0, 1882, 1926, 1964], "ctc_loss": [0, 1357, 1882, 1926], "fft_fft": [0, 1882, 1926], "fft_ifft": [0, 1882, 1926], "fft_fft2": [0, 1882, 1926], "fft_ifft2": [0, 1882, 1926], "fft_fftn": [0, 1882, 1926], "fft_ifftn": [0, 1882, 1926], "fft_rfft": [0, 1882, 1926], "fft_irfft": [0, 1882, 1926], "fft_rfft2": [0, 1882, 1926], "fft_irfft2": [0, 1882, 1926], "fft_rfftn": [0, 1882, 1926], "fft_irfftn": [0, 1882, 1926], "fft_hfft": [0, 1882, 1926], "fft_ihfft": [0, 1882, 1926], "linalg_matrix_norm": [0, 1882, 1926], "linalg_cond": [0, 1882, 1926], "linalg_matrix_rank": [0, 1882, 1926], "linalg_solv": [0, 1882, 1926], "linalg_choleski": [0, 1882, 1926], "linalg_svdv": [0, 1882, 1926], "linalg_eigv": [0, 1882, 1926], "linalg_eigvalsh": [0, 1882, 1926], "linalg_inv": [0, 1882, 1926], "linalg_householder_product": [0, 1882, 1926], "linalg_tensorinv": [0, 1882, 1926], "linalg_tensorsolv": [0, 1882, 1926], "fake_quantize_per_tensor_affin": [0, 1882, 1926], "eig": [0, 1237, 1238, 1264, 1918], "geqrf": [0, 1240, 1710, 1882, 1926], "lstsq": [0, 1145, 1232, 1258], "_lu_with_info": [0, 1926], "qr": [0, 2, 1145, 1236, 1237, 1240, 1246, 1264, 1627, 1710, 1882, 1926], "solv": [0, 7, 11, 1145, 1153, 1232, 1241, 1243, 1244, 1247, 1248, 1250, 1254, 1262, 1263, 1267, 1273, 1291, 1848, 1904, 1912, 1918, 1921, 1951, 1959], "svd": [0, 2, 11, 1236, 1237, 1246, 1258, 1265, 1281, 1632, 1712, 1825, 1882, 1918, 1926, 1940, 1964], "symeig": 0, "triangular_solv": [0, 1882, 1926], "fractional_max_pool2d": [0, 1882, 1926], "fractional_max_pool3d": [0, 1882, 1926], "adaptive_max_pool3d": [0, 1882, 1926], "multilabel_margin_loss_forward": [0, 1926], "linalg_qr": [0, 1882, 1926], "linalg_cholesky_ex": [0, 1882, 1926], "linalg_svd": [0, 1882, 1926], "linalg_eig": [0, 1882, 1926], "linalg_eigh": [0, 1882, 1926], "linalg_lstsq": [0, 1882, 1926], "linalg_inv_ex": [0, 1882, 1926], "cat": [0, 25, 31, 57, 534, 737, 738, 747, 783, 786, 952, 953, 1302, 1453, 1805, 1817, 1881, 1882, 1897, 1925, 1926, 1928, 1931, 1933, 1940, 1949, 1957, 1964], "stack": [0, 8, 18, 21, 22, 25, 31, 35, 46, 47, 53, 54, 57, 750, 907, 929, 940, 1033, 1034, 1071, 1139, 1141, 1165, 1302, 1357, 1386, 1404, 1405, 1449, 1478, 1480, 1657, 1863, 1872, 1874, 1880, 1882, 1888, 1899, 1907, 1908, 1911, 1926, 1928, 1930, 1933, 1940, 1956, 1958, 1959, 1962, 1969, 1971], "index_copi": [0, 1861, 1882, 1926], "implement": [1, 2, 5, 8, 12, 16, 17, 21, 22, 25, 26, 27, 29, 31, 34, 39, 40, 43, 46, 49, 54, 57, 58, 60, 66, 71, 75, 141, 503, 505, 507, 677, 728, 729, 730, 731, 732, 733, 750, 769, 771, 775, 783, 790, 809, 810, 811, 814, 815, 816, 868, 870, 883, 892, 898, 899, 954, 960, 1072, 1115, 1120, 1126, 1133, 1134, 1136, 1137, 1200, 1206, 1208, 1210, 1211, 1214, 1256, 1259, 1272, 1273, 1301, 1342, 1357, 1371, 1386, 1402, 1403, 1434, 1440, 1446, 1450, 1453, 1470, 1479, 1481, 1533, 1571, 1583, 1591, 1614, 1619, 1620, 1627, 1628, 1632, 1643, 1656, 1660, 1661, 1664, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1696, 1698, 1704, 1722, 1729, 1742, 1751, 1754, 1791, 1801, 1824, 1825, 1841, 1857, 1861, 1862, 1864, 1883, 1884, 1885, 1888, 1891, 1896, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1911, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1927, 1928, 1929, 1931, 1936, 1937, 1940, 1941, 1944, 1946, 1954, 1957, 1959, 1962, 1965, 1970], "arbitrari": [1, 3, 25, 29, 46, 58, 61, 65, 245, 880, 1055, 1264, 1272, 1371, 1377, 1401, 1425, 1485, 1505, 1506, 1524, 1545, 1571, 1653, 1824, 1846, 1859, 1884, 1890, 1904, 1910, 1914, 1915, 1927, 1929, 1931, 1940, 1948, 1959, 1965, 1969, 1970], "scalar": [1, 12, 25, 27, 31, 47, 58, 66, 88, 141, 145, 251, 304, 436, 579, 677, 678, 728, 729, 730, 731, 732, 733, 869, 870, 883, 891, 892, 895, 897, 915, 918, 926, 958, 962, 1067, 1072, 1087, 1120, 1127, 1153, 1160, 1177, 1191, 1225, 1226, 1295, 1302, 1331, 1342, 1350, 1351, 1357, 1368, 1370, 1371, 1388, 1394, 1395, 1400, 1401, 1406, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1483, 1535, 1577, 1666, 1671, 1672, 1673, 1706, 1719, 1721, 1723, 1741, 1742, 1758, 1807, 1808, 1809, 1810, 1811, 1839, 1857, 1858, 1875, 1877, 1878, 1882, 1883, 1884, 1894, 1899, 1902, 1904, 1909, 1912, 1925, 1936, 1940, 1943, 1945, 1947, 1958, 1959, 1964, 1968], "exist": [1, 7, 8, 9, 11, 14, 21, 25, 26, 27, 31, 33, 35, 40, 42, 43, 47, 49, 53, 57, 58, 73, 74, 245, 489, 782, 844, 868, 891, 892, 893, 894, 895, 896, 897, 898, 963, 964, 965, 966, 967, 968, 969, 970, 971, 1013, 1200, 1204, 1216, 1236, 1241, 1247, 1248, 1273, 1331, 1434, 1435, 1444, 1799, 1817, 1864, 1879, 1881, 1888, 1891, 1896, 1897, 1899, 1900, 1904, 1905, 1907, 1909, 1910, 1913, 1914, 1915, 1916, 1918, 1920, 1925, 1928, 1929, 1930, 1931, 1936, 1938, 1940, 1944, 1946, 1954, 1955, 1958, 1960, 1964, 1967, 1971], "code": [1, 3, 4, 8, 9, 11, 14, 15, 16, 21, 22, 25, 30, 31, 33, 43, 44, 46, 47, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 110, 670, 942, 944, 963, 964, 965, 966, 967, 968, 969, 970, 971, 1015, 1016, 1029, 1130, 1175, 1200, 1204, 1205, 1211, 1212, 1213, 1216, 1217, 1218, 1231, 1242, 1244, 1272, 1450, 1462, 1614, 1770, 1879, 1880, 1883, 1884, 1890, 1898, 1904, 1905, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1919, 1920, 1921, 1923, 1925, 1927, 1935, 1936, 1937, 1938, 1940, 1943, 1944, 1951, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1965, 1967, 1968, 1969, 1970, 1971], "declar": [1, 9, 14, 21, 43, 1883, 1884, 1885, 1909, 1925, 1928, 1929], "requires_grad": [1, 5, 27, 31, 49, 55, 326, 435, 436, 437, 438, 439, 477, 478, 486, 855, 870, 887, 889, 890, 898, 899, 901, 903, 904, 911, 920, 1018, 1073, 1074, 1075, 1076, 1085, 1090, 1108, 1126, 1127, 1128, 1131, 1141, 1157, 1158, 1175, 1200, 1220, 1271, 1287, 1350, 1351, 1368, 1370, 1377, 1378, 1388, 1400, 1401, 1425, 1426, 1434, 1440, 1441, 1448, 1481, 1482, 1505, 1506, 1516, 1568, 1614, 1615, 1616, 1617, 1660, 1665, 1671, 1672, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1801, 1806, 1807, 1808, 1809, 1810, 1811, 1839, 1861, 1872, 1877, 1878, 1882, 1886, 1897, 1898, 1899, 1907, 1909, 1910, 1915, 1920, 1925, 1926, 1936, 1937, 1946, 1947, 1948, 1956, 1958, 1959, 1964, 1967], "type": [1, 2, 3, 5, 12, 14, 15, 17, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 40, 42, 43, 44, 46, 49, 54, 56, 57, 58, 60, 63, 64, 66, 67, 68, 71, 72, 76, 78, 79, 141, 182, 187, 199, 317, 320, 324, 332, 435, 436, 437, 438, 439, 471, 549, 594, 670, 675, 676, 677, 678, 679, 680, 724, 725, 728, 729, 730, 739, 741, 742, 743, 744, 746, 754, 756, 757, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 774, 782, 783, 784, 787, 805, 806, 807, 809, 810, 811, 812, 813, 815, 817, 830, 844, 845, 846, 847, 848, 849, 850, 851, 852, 855, 863, 869, 879, 880, 881, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 926, 927, 928, 929, 930, 932, 941, 942, 943, 949, 954, 965, 966, 967, 968, 970, 982, 984, 991, 992, 993, 995, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1010, 1012, 1015, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1035, 1047, 1049, 1050, 1053, 1054, 1067, 1072, 1073, 1074, 1075, 1085, 1086, 1087, 1090, 1108, 1115, 1117, 1118, 1119, 1120, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1137, 1138, 1139, 1141, 1143, 1147, 1148, 1149, 1152, 1157, 1158, 1160, 1161, 1162, 1176, 1179, 1181, 1182, 1185, 1188, 1196, 1197, 1198, 1200, 1201, 1203, 1206, 1207, 1210, 1212, 1214, 1216, 1217, 1219, 1220, 1223, 1232, 1236, 1253, 1257, 1264, 1270, 1271, 1272, 1273, 1287, 1290, 1293, 1300, 1302, 1309, 1310, 1313, 1323, 1329, 1332, 1342, 1346, 1362, 1363, 1364, 1371, 1378, 1424, 1434, 1435, 1436, 1440, 1444, 1445, 1462, 1467, 1468, 1469, 1477, 1478, 1479, 1480, 1481, 1493, 1494, 1498, 1499, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1530, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1554, 1555, 1556, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1576, 1578, 1579, 1581, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1596, 1598, 1599, 1600, 1601, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1661, 1662, 1664, 1666, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1712, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1742, 1744, 1748, 1751, 1758, 1759, 1762, 1763, 1764, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1800, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1820, 1821, 1823, 1824, 1825, 1839, 1848, 1850, 1852, 1857, 1858, 1859, 1861, 1862, 1863, 1866, 1872, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1888, 1892, 1893, 1894, 1897, 1899, 1902, 1903, 1904, 1906, 1907, 1912, 1913, 1914, 1915, 1918, 1920, 1921, 1923, 1924, 1926, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1940, 1941, 1942, 1943, 1945, 1947, 1948, 1949, 1950, 1955, 1956, 1957, 1959, 1962, 1964, 1968, 1970], "doubl": [1, 3, 33, 47, 471, 477, 607, 739, 741, 742, 743, 744, 746, 756, 757, 771, 887, 889, 894, 898, 899, 927, 934, 935, 951, 972, 1018, 1087, 1115, 1153, 1200, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1281, 1282, 1283, 1284, 1285, 1291, 1378, 1434, 1493, 1496, 1525, 1605, 1673, 1710, 1716, 1806, 1807, 1808, 1810, 1811, 1824, 1839, 1848, 1875, 1884, 1897, 1907, 1909, 1910, 1918, 1925, 1928, 1942, 1943, 1946], "bfloat16": [1, 22, 49, 1182, 1200, 1252, 1269, 1434, 1673, 1679, 1680, 1766, 1897, 1907, 1940, 1942, 1943, 1946, 1947, 1972], "cfloat": [1, 11, 25, 302, 473, 607, 934, 935, 972, 1170, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1291, 1710, 1740, 1824, 1848, 1871, 1943, 1946], "cdoubl": [1, 11, 934, 935, 972, 1200, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1291, 1434, 1710, 1824, 1848, 1943, 1946], "beta": [1, 2, 11, 50, 56, 90, 91, 96, 97, 98, 99, 100, 101, 142, 143, 312, 507, 544, 676, 679, 680, 681, 910, 973, 1007, 1008, 1015, 1016, 1018, 1157, 1220, 1295, 1305, 1352, 1353, 1354, 1389, 1395, 1397, 1398, 1399, 1406, 1422, 1465, 1470, 1473, 1550, 1551, 1583, 1587, 1591, 1679, 1680, 1681, 1683, 1689, 1693, 1726, 1784, 1786, 1797, 1802, 1816, 1880, 1882, 1892, 1907, 1922, 1923, 1924, 1925, 1931, 1936, 1940, 1943, 1948, 1964], "even": [1, 8, 21, 22, 25, 33, 49, 56, 57, 78, 534, 570, 805, 806, 807, 883, 962, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1103, 1104, 1105, 1108, 1140, 1185, 1213, 1230, 1232, 1236, 1237, 1238, 1239, 1253, 1257, 1259, 1260, 1264, 1265, 1270, 1295, 1301, 1371, 1473, 1508, 1509, 1510, 1571, 1614, 1621, 1627, 1665, 1667, 1704, 1751, 1762, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1824, 1870, 1881, 1884, 1885, 1894, 1899, 1903, 1904, 1907, 1909, 1911, 1913, 1915, 1917, 1918, 1919, 1920, 1927, 1928, 1929, 1938, 1943, 1954, 1957, 1958, 1959, 1961, 1962, 1971], "though": [1, 25, 57, 58, 61, 141, 784, 880, 883, 893, 1088, 1089, 1091, 1198, 1201, 1295, 1667, 1881, 1885, 1898, 1899, 1904, 1907, 1909, 1910, 1917, 1918, 1927, 1931, 1958, 1971], "signatur": [1, 12, 21, 35, 46, 47, 49, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 389, 477, 478, 546, 903, 904, 954, 974, 1200, 1434, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1632, 1653, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1820, 1888, 1907, 1909, 1910, 1925, 1928, 1929, 1936, 1940, 1956, 1961, 1962, 1970], "veri": [1, 4, 7, 8, 18, 21, 22, 25, 53, 55, 57, 944, 960, 1131, 1139, 1141, 1263, 1397, 1398, 1399, 1614, 1615, 1627, 1682, 1704, 1710, 1787, 1791, 1848, 1872, 1883, 1896, 1904, 1909, 1911, 1912, 1913, 1915, 1917, 1918, 1921, 1927, 1928, 1935, 1936, 1937, 1940, 1958, 1959, 1961, 1962, 1968, 1969], "unlik": [1, 3, 7, 31, 47, 49, 55, 478, 483, 1069, 1108, 1111, 1115, 1175, 1236, 1237, 1256, 1259, 1264, 1268, 1298, 1301, 1303, 1406, 1616, 1617, 1741, 1763, 1869, 1883, 1884, 1896, 1899, 1907, 1917, 1919, 1943, 1948, 1957, 1959], "coverag": [1, 7, 46, 50, 57, 1133, 1134, 1880, 1881, 1886, 1898, 1931, 1940, 1970], "plan": [1, 2, 7, 9, 25, 27, 30, 884, 1614, 1722, 1899, 1904, 1909, 1928, 1940, 1968, 1969], "consid": [1, 5, 8, 22, 25, 33, 42, 46, 47, 49, 54, 56, 57, 684, 769, 775, 784, 891, 893, 894, 898, 962, 1059, 1060, 1061, 1062, 1063, 1093, 1129, 1189, 1193, 1196, 1200, 1241, 1243, 1244, 1245, 1246, 1254, 1255, 1258, 1263, 1266, 1370, 1381, 1434, 1437, 1485, 1498, 1533, 1544, 1602, 1615, 1627, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1662, 1692, 1760, 1780, 1815, 1820, 1849, 1850, 1851, 1852, 1879, 1881, 1884, 1891, 1903, 1904, 1905, 1909, 1911, 1912, 1915, 1918, 1923, 1928, 1930, 1932, 1937, 1938, 1940, 1943, 1946, 1947, 1957, 1959, 1968, 1970, 1971], "ad": [1, 3, 9, 14, 21, 22, 25, 29, 31, 39, 49, 52, 54, 55, 56, 57, 212, 213, 304, 310, 461, 505, 670, 676, 677, 678, 679, 680, 681, 725, 884, 885, 886, 891, 892, 893, 894, 898, 910, 1072, 1076, 1133, 1134, 1136, 1175, 1200, 1214, 1278, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1440, 1441, 1443, 1448, 1462, 1473, 1477, 1482, 1485, 1511, 1512, 1513, 1530, 1557, 1558, 1559, 1583, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1632, 1639, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1726, 1727, 1728, 1768, 1797, 1802, 1816, 1879, 1881, 1883, 1894, 1898, 1903, 1910, 1912, 1914, 1915, 1928, 1931, 1934, 1940, 1945, 1948, 1955, 1957, 1958, 1959, 1964, 1965, 1968, 1971], "tutori": [1, 3, 9, 15, 25, 26, 29, 57, 884, 885, 886, 889, 1864, 1880, 1881, 1888, 1891, 1900, 1909, 1914, 1915, 1917, 1920, 1925, 1931, 1958, 1959, 1961], "how": [1, 3, 5, 7, 8, 9, 12, 15, 17, 21, 25, 27, 30, 34, 42, 43, 44, 46, 49, 50, 51, 53, 54, 57, 58, 65, 66, 71, 224, 477, 478, 775, 782, 783, 786, 831, 849, 851, 852, 884, 885, 886, 889, 903, 904, 1055, 1076, 1130, 1139, 1153, 1175, 1200, 1211, 1272, 1381, 1434, 1485, 1486, 1571, 1602, 1614, 1653, 1665, 1742, 1766, 1768, 1781, 1792, 1880, 1881, 1883, 1884, 1888, 1891, 1893, 1896, 1897, 1898, 1900, 1903, 1906, 1907, 1908, 1910, 1911, 1912, 1915, 1917, 1919, 1920, 1925, 1929, 1931, 1934, 1936, 1937, 1938, 1940, 1945, 1957, 1961, 1962, 1963, 1971], "major": [1, 6, 7, 8, 9, 1000, 1824, 1880, 1884, 1927, 1957, 1959, 1961, 1963], "build": [1, 8, 9, 14, 15, 25, 31, 57, 1200, 1210, 1434, 1480, 1498, 1533, 1880, 1881, 1891, 1900, 1904, 1925, 1929, 1931, 1937, 1945, 1946, 1951, 1954, 1969], "basic": [1, 3, 7, 9, 12, 27, 42, 57, 58, 59, 1133, 1134, 1135, 1207, 1273, 1614, 1698, 1880, 1885, 1900, 1905, 1907, 1908, 1912, 1928, 1937, 1944, 1945, 1956, 1959, 1961, 1962], "jacobian": [1, 31, 50, 51, 53, 54, 883, 885, 891, 894, 896, 897, 898, 899, 1134, 1135, 1136, 1140, 1141, 1872, 1904, 1909, 1912], "hessian": [1, 50, 53, 54, 892, 895, 1134, 1135, 1902, 1910], "etc": [1, 3, 5, 11, 12, 21, 22, 25, 31, 33, 42, 43, 47, 49, 849, 850, 851, 944, 954, 1197, 1200, 1370, 1434, 1614, 1744, 1879, 1883, 1884, 1888, 1891, 1909, 1910, 1911, 1915, 1917, 1923, 1925, 1927, 1928, 1931, 1936, 1940, 1942, 1945, 1948, 1954, 1956, 1962], "user": [1, 2, 5, 7, 8, 9, 10, 11, 12, 15, 21, 22, 25, 26, 27, 30, 31, 32, 33, 35, 39, 42, 43, 45, 47, 49, 50, 53, 54, 56, 57, 58, 75, 141, 326, 722, 728, 729, 730, 735, 736, 746, 754, 784, 787, 789, 828, 844, 851, 852, 883, 889, 897, 976, 1009, 1123, 1129, 1130, 1200, 1237, 1272, 1434, 1477, 1479, 1480, 1481, 1583, 1608, 1609, 1614, 1621, 1629, 1643, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1879, 1880, 1881, 1883, 1884, 1888, 1891, 1896, 1898, 1899, 1903, 1904, 1905, 1907, 1909, 1912, 1913, 1914, 1915, 1917, 1923, 1925, 1927, 1929, 1930, 1931, 1933, 1936, 1937, 1940, 1944, 1945, 1947, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1965, 1967, 1969, 1970], "input": [1, 2, 3, 5, 9, 11, 12, 15, 19, 21, 22, 24, 25, 26, 29, 30, 31, 32, 35, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 65, 66, 71, 73, 75, 76, 77, 79, 141, 251, 271, 292, 392, 473, 489, 507, 599, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 710, 718, 719, 724, 725, 728, 729, 730, 731, 732, 733, 735, 736, 746, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 792, 804, 807, 809, 827, 828, 829, 830, 847, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 887, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 907, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 930, 931, 933, 934, 935, 936, 937, 938, 939, 941, 942, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 972, 988, 1015, 1016, 1018, 1051, 1052, 1053, 1054, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1141, 1142, 1143, 1144, 1145, 1146, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1182, 1185, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1200, 1203, 1204, 1207, 1208, 1212, 1214, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1291, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1621, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1648, 1649, 1653, 1654, 1655, 1657, 1662, 1665, 1666, 1667, 1669, 1670, 1672, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1697, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1732, 1734, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1755, 1756, 1757, 1760, 1761, 1763, 1766, 1774, 1775, 1776, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1815, 1816, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1834, 1835, 1836, 1837, 1838, 1840, 1842, 1843, 1844, 1845, 1848, 1849, 1851, 1854, 1855, 1856, 1857, 1858, 1860, 1861, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1891, 1892, 1898, 1899, 1900, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1918, 1919, 1920, 1922, 1923, 1925, 1927, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1940, 1941, 1943, 1944, 1947, 1949, 1950, 1954, 1956, 1957, 1958, 1959, 1964, 1967, 1968, 1969, 1970], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 141, 145, 245, 314, 326, 448, 477, 478, 503, 505, 535, 604, 607, 670, 677, 719, 731, 732, 733, 738, 747, 748, 750, 758, 759, 762, 763, 764, 775, 781, 782, 783, 784, 787, 789, 804, 810, 813, 814, 816, 827, 831, 844, 848, 849, 851, 852, 853, 869, 870, 879, 880, 881, 883, 884, 885, 886, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 903, 904, 906, 912, 929, 942, 945, 949, 955, 962, 973, 975, 985, 987, 989, 996, 997, 1007, 1015, 1017, 1021, 1023, 1025, 1029, 1030, 1055, 1072, 1073, 1076, 1077, 1090, 1092, 1093, 1094, 1095, 1108, 1111, 1124, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1139, 1140, 1141, 1144, 1145, 1153, 1156, 1161, 1162, 1175, 1191, 1197, 1198, 1200, 1201, 1203, 1204, 1206, 1207, 1211, 1212, 1214, 1216, 1217, 1222, 1225, 1232, 1240, 1243, 1247, 1248, 1253, 1256, 1259, 1260, 1264, 1270, 1272, 1289, 1290, 1292, 1302, 1311, 1312, 1331, 1333, 1334, 1335, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1382, 1383, 1386, 1391, 1392, 1393, 1395, 1401, 1403, 1404, 1407, 1408, 1409, 1420, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1440, 1441, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1461, 1462, 1465, 1470, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1486, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1528, 1529, 1544, 1557, 1558, 1559, 1577, 1583, 1602, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1619, 1632, 1653, 1654, 1660, 1665, 1667, 1671, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1701, 1702, 1704, 1708, 1710, 1719, 1723, 1731, 1735, 1745, 1751, 1754, 1766, 1768, 1769, 1771, 1796, 1799, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1818, 1819, 1820, 1824, 1839, 1843, 1846, 1848, 1856, 1857, 1860, 1862, 1864, 1867, 1868, 1872, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1888, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1936, 1937, 1938, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1967, 1968, 1969, 1970, 1971, 1972], "lambda": [1, 12, 21, 27, 31, 52, 55, 56, 57, 58, 61, 65, 66, 69, 249, 477, 478, 903, 904, 930, 1131, 1136, 1140, 1141, 1236, 1237, 1238, 1239, 1272, 1390, 1471, 1483, 1573, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1692, 1698, 1700, 1703, 1798, 1872, 1885, 1904, 1909, 1910, 1927, 1928, 1936, 1947, 1959, 1970], "captur": [1, 12, 15, 46, 47, 57, 58, 61, 65, 66, 670, 954, 973, 975, 1007, 1013, 1018, 1203, 1312, 1676, 1679, 1680, 1683, 1881, 1885, 1890, 1909, 1910, 1913, 1922, 1923, 1925, 1928, 1931, 1950, 1951, 1954, 1956, 1957, 1959, 1962, 1967, 1969], "f": [1, 10, 22, 25, 31, 33, 34, 39, 40, 46, 47, 50, 51, 54, 55, 56, 57, 58, 59, 164, 249, 277, 326, 368, 885, 886, 962, 1090, 1092, 1099, 1108, 1130, 1131, 1133, 1134, 1135, 1136, 1140, 1141, 1153, 1200, 1208, 1211, 1212, 1272, 1400, 1402, 1403, 1405, 1434, 1483, 1500, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1524, 1525, 1528, 1529, 1535, 1568, 1570, 1571, 1583, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1754, 1830, 1872, 1881, 1883, 1884, 1888, 1897, 1898, 1904, 1907, 1909, 1911, 1912, 1913, 1915, 1921, 1923, 1924, 1925, 1928, 1929, 1936, 1940, 1945, 1947, 1955, 1957, 1959, 1962, 1968, 1970], "three": [1, 2, 6, 9, 25, 29, 49, 51, 54, 57, 78, 878, 1070, 1072, 1153, 1162, 1244, 1247, 1248, 1249, 1264, 1292, 1349, 1364, 1367, 1406, 1429, 1583, 1627, 1667, 1698, 1766, 1884, 1904, 1907, 1908, 1909, 1925, 1928, 1929, 1931, 1936, 1938, 1940, 1945, 1966], "anoth": [1, 5, 7, 12, 21, 22, 25, 27, 30, 31, 32, 33, 44, 46, 49, 57, 476, 950, 973, 975, 976, 978, 1123, 1210, 1236, 1237, 1240, 1264, 1377, 1378, 1435, 1444, 1605, 1621, 1628, 1762, 1881, 1883, 1884, 1890, 1903, 1904, 1906, 1907, 1909, 1915, 1917, 1919, 1921, 1928, 1929, 1937, 1938, 1940, 1946, 1948, 1954, 1955, 1959, 1961, 1962, 1965, 1968, 1971], "constant": [1, 12, 21, 46, 47, 57, 58, 59, 63, 64, 66, 68, 734, 765, 811, 812, 945, 1055, 1112, 1113, 1114, 1197, 1200, 1204, 1216, 1248, 1273, 1359, 1360, 1361, 1378, 1381, 1388, 1443, 1465, 1482, 1485, 1530, 1533, 1571, 1628, 1674, 1690, 1695, 1698, 1846, 1882, 1884, 1903, 1909, 1915, 1919, 1925, 1927, 1940, 1958, 1961, 1962], "boolean": [1, 12, 14, 31, 42, 57, 58, 65, 66, 391, 393, 879, 914, 916, 917, 919, 948, 954, 975, 976, 978, 1077, 1144, 1156, 1175, 1189, 1190, 1191, 1192, 1193, 1196, 1225, 1273, 1289, 1294, 1335, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1473, 1583, 1629, 1632, 1722, 1818, 1819, 1843, 1867, 1868, 1883, 1885, 1907, 1909, 1942, 1943, 1945, 1946, 1947, 1948, 1959], "flag": [1, 2, 5, 14, 25, 26, 30, 32, 43, 45, 49, 52, 54, 57, 725, 863, 891, 893, 911, 920, 933, 934, 935, 942, 1003, 1123, 1129, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1157, 1158, 1175, 1181, 1188, 1272, 1292, 1440, 1544, 1545, 1614, 1629, 1632, 1662, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1766, 1768, 1773, 1799, 1809, 1848, 1861, 1872, 1880, 1881, 1884, 1896, 1904, 1907, 1909, 1918, 1919, 1925, 1928, 1931, 1945, 1946, 1959, 1960, 1968, 1969], "inform": [1, 2, 3, 4, 5, 7, 8, 9, 17, 18, 20, 21, 22, 25, 26, 29, 33, 34, 35, 38, 42, 43, 46, 47, 49, 51, 57, 70, 182, 199, 246, 304, 312, 477, 478, 488, 505, 507, 608, 670, 725, 893, 898, 899, 903, 904, 913, 1076, 1107, 1109, 1130, 1175, 1197, 1200, 1217, 1230, 1237, 1246, 1362, 1363, 1364, 1365, 1366, 1367, 1395, 1404, 1430, 1431, 1432, 1434, 1440, 1449, 1461, 1477, 1479, 1481, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1544, 1583, 1602, 1603, 1604, 1614, 1653, 1665, 1674, 1689, 1721, 1748, 1766, 1768, 1773, 1799, 1861, 1881, 1884, 1890, 1891, 1899, 1900, 1904, 1906, 1907, 1908, 1909, 1914, 1915, 1918, 1923, 1925, 1928, 1930, 1931, 1943, 1945, 1946, 1947, 1950, 1953, 1957, 1958, 1959, 1962, 1963, 1967, 1969, 1971, 1972], "well": [1, 3, 5, 7, 9, 14, 22, 25, 42, 46, 49, 54, 55, 57, 607, 781, 812, 815, 851, 1015, 1134, 1135, 1200, 1204, 1211, 1216, 1236, 1237, 1238, 1240, 1246, 1259, 1264, 1310, 1352, 1353, 1354, 1370, 1404, 1434, 1473, 1554, 1555, 1614, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1722, 1857, 1881, 1884, 1888, 1891, 1897, 1899, 1903, 1904, 1907, 1909, 1910, 1912, 1915, 1917, 1919, 1925, 1928, 1931, 1934, 1936, 1938, 1940, 1944, 1945, 1948, 1955, 1958, 1959, 1960, 1965], "relat": [1, 6, 7, 9, 21, 25, 33, 46, 47, 48, 49, 54, 58, 59, 64, 66, 70, 670, 1153, 1240, 1381, 1465, 1485, 1614, 1712, 1862, 1899, 1904, 1920, 1928, 1936, 1940, 1941, 1947, 1959, 1970], "mechan": [1, 8, 25, 36, 40, 42, 46, 47, 57, 869, 1076, 1175, 1200, 1434, 1583, 1665, 1768, 1839, 1880, 1896, 1899, 1908, 1909, 1914, 1915, 1934, 1936, 1937, 1954], "confus": [1, 8, 58, 1200, 1434, 1904, 1907, 1928, 1940, 1960, 1962], "receiv": [1, 7, 9, 21, 25, 29, 31, 47, 54, 56, 1029, 1200, 1434, 1610, 1611, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1707, 1884, 1894, 1896, 1903, 1904, 1917, 1929, 1936, 1937, 1938, 1940, 1957, 1962, 1969, 1971], "memori": [1, 2, 3, 5, 11, 22, 24, 27, 29, 31, 32, 47, 49, 53, 57, 141, 146, 161, 163, 166, 169, 170, 171, 186, 197, 200, 224, 231, 245, 258, 288, 316, 322, 328, 330, 331, 384, 435, 436, 437, 438, 439, 448, 453, 476, 489, 490, 514, 515, 570, 593, 607, 724, 753, 868, 870, 883, 889, 898, 899, 924, 939, 942, 973, 974, 977, 980, 981, 983, 997, 998, 1007, 1008, 1011, 1015, 1017, 1018, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1036, 1037, 1038, 1042, 1072, 1073, 1074, 1075, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1135, 1137, 1141, 1200, 1218, 1246, 1272, 1309, 1310, 1311, 1319, 1378, 1404, 1405, 1434, 1477, 1478, 1479, 1481, 1583, 1601, 1614, 1621, 1627, 1653, 1665, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1731, 1732, 1734, 1735, 1736, 1737, 1839, 1861, 1872, 1878, 1880, 1881, 1892, 1896, 1898, 1899, 1900, 1904, 1909, 1917, 1923, 1925, 1929, 1930, 1931, 1936, 1940, 1942, 1943, 1944, 1946, 1947, 1954, 1958, 1959, 1961, 1966, 1968], "overlap": [1, 21, 22, 25, 29, 49, 57, 670, 868, 898, 899, 1075, 1130, 1197, 1381, 1485, 1614, 1820, 1861, 1907, 1908, 1943, 1957, 1959, 1968], "dens": [1, 29, 209, 535, 536, 573, 574, 575, 576, 577, 578, 911, 920, 1157, 1158, 1220, 1273, 1693, 1794, 1797, 1801, 1802, 1805, 1806, 1807, 1808, 1810, 1811, 1816, 1825, 1861, 1899, 1919, 1940, 1943, 1957], "stride": [1, 11, 47, 129, 212, 245, 330, 435, 436, 437, 438, 439, 489, 510, 534, 571, 573, 574, 575, 577, 578, 607, 702, 703, 704, 705, 706, 707, 708, 709, 715, 716, 717, 720, 721, 728, 729, 730, 731, 732, 733, 758, 759, 762, 763, 764, 772, 773, 855, 868, 911, 920, 1073, 1075, 1085, 1090, 1108, 1124, 1127, 1128, 1157, 1158, 1164, 1200, 1210, 1214, 1220, 1271, 1287, 1305, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1402, 1403, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1446, 1485, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1527, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1601, 1614, 1671, 1727, 1728, 1731, 1733, 1734, 1735, 1737, 1738, 1745, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1798, 1801, 1845, 1850, 1852, 1870, 1877, 1882, 1885, 1888, 1897, 1899, 1925, 1926, 1936, 1940, 1942, 1943, 1945, 1946, 1947, 1956, 1957, 1958, 1959, 1964, 1969], "rowmajor": [1, 1614], "contigu": [1, 11, 22, 27, 322, 489, 510, 607, 1380, 1437, 1573, 1614, 1621, 1739, 1745, 1824, 1882, 1898, 1899, 1926, 1933, 1940, 1942, 1944], "create_graph": [1, 141, 478, 883, 891, 892, 893, 894, 895, 896, 897, 1882, 1903, 1909], "preserv": [1, 12, 21, 31, 46, 49, 57, 489, 769, 775, 844, 866, 869, 1113, 1114, 1130, 1200, 1204, 1211, 1434, 1435, 1444, 1486, 1544, 1602, 1675, 1754, 1758, 1796, 1839, 1881, 1892, 1897, 1899, 1902, 1907, 1910, 1919, 1922, 1923, 1925, 1936, 1940, 1943, 1954, 1958], "preexist": [1, 1930, 1957, 1958], "behavior": [1, 2, 7, 14, 20, 22, 25, 26, 27, 29, 31, 32, 35, 40, 43, 46, 47, 49, 53, 54, 56, 57, 77, 245, 310, 461, 489, 503, 534, 607, 677, 775, 783, 816, 868, 882, 918, 924, 926, 928, 941, 972, 1067, 1072, 1073, 1074, 1075, 1117, 1125, 1126, 1130, 1200, 1211, 1214, 1216, 1246, 1253, 1257, 1270, 1271, 1272, 1287, 1295, 1302, 1371, 1374, 1395, 1404, 1434, 1449, 1473, 1486, 1498, 1533, 1601, 1602, 1605, 1606, 1614, 1615, 1664, 1666, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1716, 1722, 1738, 1745, 1787, 1824, 1846, 1861, 1879, 1881, 1885, 1886, 1888, 1890, 1897, 1899, 1905, 1907, 1909, 1910, 1918, 1919, 1920, 1925, 1927, 1928, 1929, 1932, 1933, 1936, 1941, 1944, 1957, 1958, 1960, 1962], "let": [1, 7, 8, 21, 22, 30, 31, 43, 54, 57, 476, 486, 934, 935, 937, 1153, 1200, 1220, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1250, 1252, 1259, 1261, 1263, 1264, 1434, 1614, 1627, 1839, 1888, 1897, 1898, 1904, 1907, 1908, 1909, 1910, 1915, 1917, 1918, 1919, 1920, 1921, 1928, 1937, 1938, 1940, 1945, 1954, 1955, 1958, 1959, 1960, 1961, 1962, 1963, 1968, 1969], "accord": [1, 9, 33, 46, 787, 851, 852, 870, 912, 924, 1070, 1163, 1261, 1294, 1324, 1342, 1378, 1605, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1698, 1704, 1723, 1787, 1812, 1840, 1873, 1884, 1894, 1898, 1899, 1902, 1915, 1919, 1921, 1928, 1938, 1947], "retain": [1, 9, 25, 683, 685, 686, 689, 864, 865, 870, 1204, 1222, 1253, 1257, 1270, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1330, 1331, 1332, 1667, 1720, 1723, 1754, 1818, 1819, 1823, 1849, 1850, 1851, 1852, 1867, 1868, 1896, 1917, 1940], "over": [1, 9, 12, 21, 22, 25, 26, 31, 33, 40, 43, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 65, 66, 69, 471, 670, 687, 728, 729, 730, 731, 732, 733, 756, 757, 762, 763, 764, 772, 773, 882, 907, 929, 984, 1029, 1031, 1035, 1049, 1050, 1051, 1052, 1053, 1054, 1072, 1129, 1133, 1135, 1139, 1141, 1153, 1161, 1200, 1216, 1233, 1253, 1257, 1269, 1270, 1272, 1280, 1300, 1302, 1332, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1378, 1381, 1382, 1383, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1422, 1425, 1426, 1427, 1428, 1429, 1434, 1437, 1438, 1439, 1441, 1448, 1462, 1465, 1466, 1468, 1473, 1482, 1485, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1528, 1529, 1545, 1551, 1554, 1555, 1557, 1558, 1559, 1568, 1569, 1576, 1583, 1609, 1619, 1664, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1727, 1728, 1743, 1803, 1805, 1818, 1819, 1820, 1823, 1841, 1856, 1867, 1868, 1872, 1884, 1894, 1896, 1897, 1898, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1915, 1917, 1918, 1923, 1927, 1931, 1936, 1937, 1940, 1948, 1954, 1956, 1957, 1958, 1959, 1962, 1969, 1971], "4": [1, 3, 11, 12, 18, 19, 21, 22, 25, 27, 29, 31, 32, 33, 40, 42, 46, 47, 54, 57, 58, 59, 60, 63, 64, 65, 66, 68, 182, 199, 233, 245, 280, 302, 304, 306, 308, 312, 392, 393, 435, 436, 461, 473, 477, 483, 486, 489, 503, 507, 513, 527, 534, 546, 548, 550, 574, 575, 597, 607, 673, 674, 675, 676, 679, 681, 682, 683, 685, 686, 687, 689, 729, 731, 732, 733, 736, 738, 747, 750, 763, 764, 814, 855, 864, 865, 866, 870, 871, 872, 873, 874, 875, 877, 878, 889, 891, 894, 895, 896, 910, 913, 916, 920, 921, 922, 926, 928, 931, 932, 935, 936, 937, 940, 947, 951, 954, 957, 958, 959, 960, 972, 1052, 1055, 1062, 1064, 1066, 1067, 1070, 1071, 1072, 1075, 1077, 1087, 1088, 1090, 1092, 1100, 1106, 1108, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1122, 1123, 1126, 1129, 1131, 1139, 1140, 1141, 1142, 1143, 1144, 1153, 1156, 1160, 1161, 1162, 1163, 1165, 1166, 1170, 1174, 1177, 1189, 1191, 1197, 1206, 1207, 1212, 1214, 1221, 1222, 1223, 1224, 1225, 1226, 1230, 1232, 1233, 1239, 1241, 1243, 1244, 1245, 1248, 1250, 1253, 1255, 1257, 1259, 1261, 1263, 1266, 1267, 1268, 1270, 1271, 1274, 1276, 1277, 1282, 1284, 1285, 1287, 1289, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1322, 1323, 1324, 1332, 1333, 1334, 1335, 1342, 1347, 1358, 1359, 1360, 1363, 1364, 1366, 1367, 1375, 1377, 1378, 1379, 1381, 1385, 1386, 1404, 1405, 1430, 1431, 1437, 1439, 1441, 1446, 1447, 1449, 1455, 1456, 1457, 1458, 1459, 1473, 1485, 1486, 1487, 1488, 1489, 1490, 1498, 1500, 1509, 1512, 1524, 1525, 1533, 1544, 1568, 1571, 1574, 1575, 1601, 1602, 1603, 1604, 1605, 1614, 1621, 1627, 1632, 1643, 1655, 1656, 1658, 1660, 1666, 1667, 1668, 1670, 1672, 1676, 1689, 1694, 1695, 1701, 1705, 1706, 1707, 1711, 1715, 1716, 1719, 1720, 1722, 1723, 1725, 1729, 1731, 1733, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1749, 1750, 1751, 1753, 1754, 1758, 1771, 1778, 1780, 1781, 1786, 1787, 1789, 1791, 1796, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1820, 1823, 1826, 1827, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1846, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1866, 1869, 1870, 1871, 1872, 1873, 1874, 1878, 1881, 1882, 1883, 1884, 1885, 1891, 1896, 1898, 1899, 1902, 1904, 1905, 1907, 1908, 1909, 1915, 1917, 1920, 1921, 1923, 1925, 1928, 1929, 1931, 1933, 1936, 1940, 1941, 1943, 1944, 1945, 1946, 1947, 1954, 1956, 1957, 1959, 1962, 1964, 1967, 1969], "fact": [1, 3, 8, 49, 485, 911, 920, 956, 1153, 1157, 1158, 1236, 1237, 1264, 1881, 1909, 1912, 1925, 1937, 1940, 1954, 1958, 1963], "reset": [1, 25, 750, 810, 815, 883, 973, 1021, 1023, 1036, 1037, 1038, 1200, 1386, 1434, 1450, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1712, 1729, 1825, 1894, 1925, 1935], "phase": [1, 22, 783, 1236, 1237, 1704, 1824, 1882, 1921, 1959, 1969], "recreat": [1, 1904, 1968], "valid": [1, 24, 25, 31, 40, 42, 46, 47, 57, 75, 79, 737, 738, 747, 781, 933, 945, 949, 1015, 1072, 1198, 1200, 1201, 1222, 1236, 1237, 1246, 1247, 1248, 1259, 1264, 1295, 1362, 1363, 1364, 1508, 1509, 1510, 1533, 1605, 1638, 1643, 1647, 1673, 1674, 1694, 1695, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1722, 1881, 1882, 1883, 1884, 1888, 1898, 1899, 1904, 1907, 1909, 1913, 1919, 1925, 1927, 1930, 1936, 1937, 1956, 1957, 1962, 1965, 1969], "altern": [1, 9, 21, 25, 57, 670, 804, 1133, 1134, 1162, 1208, 1272, 1462, 1479, 1481, 1552, 1614, 1672, 1693, 1765, 1861, 1878, 1879, 1885, 1904, 1913, 1915, 1918, 1919, 1921, 1959, 1967], "never": [1, 5, 7, 22, 25, 42, 43, 46, 47, 212, 213, 786, 869, 930, 942, 1197, 1247, 1248, 1259, 1272, 1614, 1653, 1904, 1907, 1909, 1928, 1929, 1936, 1947, 1957], "long": [1, 7, 9, 21, 42, 46, 56, 724, 739, 741, 742, 743, 744, 746, 753, 771, 947, 1130, 1176, 1301, 1306, 1330, 1357, 1370, 1378, 1404, 1405, 1441, 1517, 1673, 1721, 1836, 1840, 1850, 1852, 1857, 1880, 1884, 1891, 1896, 1897, 1898, 1904, 1905, 1907, 1909, 1911, 1917, 1919, 1925, 1928, 1930, 1935, 1942, 1943, 1945, 1946, 1954, 1959, 1964, 1967, 1969], "hard": [1, 7, 8, 25, 30, 43, 944, 1072, 1273, 1390, 1535, 1536, 1881, 1882, 1883, 1904, 1925, 1928, 1959, 1960], "matter": [1, 4, 25, 49, 887, 1060, 1072, 1208, 1211, 1216, 1614, 1899, 1904, 1928], "discourag": [1, 1041, 1045, 1904, 1936], "aggress": [1, 49, 1197, 1621, 1904, 1936, 1959], "buffer": [1, 4, 21, 22, 25, 46, 47, 49, 53, 58, 65, 66, 870, 986, 1018, 1126, 1129, 1139, 1200, 1208, 1211, 1222, 1272, 1352, 1353, 1354, 1371, 1407, 1408, 1409, 1434, 1473, 1607, 1614, 1616, 1622, 1624, 1629, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1660, 1662, 1690, 1692, 1754, 1796, 1843, 1883, 1900, 1904, 1908, 1909, 1915, 1920, 1923, 1925, 1929, 1959], "free": [1, 7, 25, 27, 31, 33, 42, 43, 49, 57, 58, 65, 66, 947, 1024, 1042, 1203, 1216, 1273, 1892, 1902, 1904, 1907, 1909, 1911, 1917, 1921, 1925, 1940, 1954, 1957, 1959, 1971], "reus": [1, 25, 57, 476, 1904, 1907, 1936, 1954, 1957, 1959, 1964, 1969, 1971], "effici": [1, 2, 3, 8, 11, 21, 31, 49, 50, 55, 141, 750, 883, 888, 897, 932, 1137, 1145, 1218, 1256, 1273, 1292, 1342, 1373, 1374, 1375, 1378, 1379, 1386, 1440, 1446, 1447, 1481, 1583, 1892, 1899, 1904, 1908, 1909, 1912, 1916, 1917, 1918, 1927, 1929, 1931, 1936, 1937, 1940, 1943, 1944, 1948], "occas": [1, 7, 1904], "actual": [1, 8, 27, 33, 35, 47, 49, 54, 57, 780, 955, 1090, 1108, 1212, 1216, 1365, 1366, 1367, 1533, 1614, 1644, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1698, 1879, 1883, 1884, 1897, 1904, 1907, 1908, 1909, 1912, 1917, 1919, 1921, 1923, 1931, 1936, 1942, 1947, 1957, 1958, 1959, 1961, 1962], "signific": [1, 3, 27, 1706, 1766, 1904, 1907, 1940, 1961, 1965], "amount": [1, 2, 3, 4, 7, 21, 25, 27, 33, 42, 57, 899, 997, 1023, 1025, 1029, 1197, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1381, 1422, 1437, 1485, 1516, 1637, 1638, 1640, 1641, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1898, 1904, 1906, 1907, 1910, 1911, 1913, 1923, 1936, 1940, 1957, 1963, 1967, 1969, 1971], "heavi": [1, 25, 1904, 1921, 1958], "pressur": [1, 49, 1904], "might": [1, 3, 4, 9, 14, 15, 18, 25, 27, 29, 30, 31, 42, 46, 54, 56, 57, 76, 78, 141, 476, 534, 883, 972, 1216, 1217, 1533, 1614, 1615, 1621, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1879, 1881, 1894, 1899, 1904, 1906, 1907, 1908, 1909, 1912, 1914, 1919, 1922, 1925, 1928, 1929, 1931, 1936, 1937, 1938, 1940, 1944, 1946, 1947, 1951, 1954, 1957, 1958, 1959, 1960, 1961, 1962, 1968, 1969], "keep": [1, 3, 5, 7, 21, 22, 27, 29, 33, 42, 46, 47, 49, 58, 976, 1272, 1352, 1353, 1354, 1358, 1377, 1397, 1398, 1399, 1443, 1473, 1533, 1544, 1614, 1639, 1675, 1743, 1766, 1879, 1880, 1881, 1896, 1898, 1899, 1904, 1907, 1908, 1910, 1911, 1912, 1917, 1923, 1927, 1931, 1936, 1937, 1938, 1956, 1957, 1958, 1959, 1962, 1967, 1971], "track": [1, 33, 46, 47, 58, 70, 71, 72, 77, 326, 981, 1021, 1023, 1036, 1037, 1038, 1129, 1130, 1175, 1302, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1614, 1639, 1894, 1896, 1898, 1899, 1904, 1907, 1909, 1910, 1911, 1914, 1915, 1923, 1927, 1929, 1930, 1937, 1938, 1940, 1957, 1958, 1959, 1962, 1966], "save": [1, 5, 7, 11, 15, 22, 25, 27, 29, 46, 49, 486, 827, 879, 880, 889, 1137, 1199, 1200, 1205, 1208, 1216, 1218, 1272, 1434, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1700, 1703, 1707, 1881, 1882, 1893, 1898, 1909, 1910, 1915, 1917, 1919, 1923, 1926, 1927, 1928, 1930, 1936, 1940, 1945, 1949, 1954, 1959, 1961, 1971], "afterward": [1, 30, 46, 1434, 1605, 1614, 1940], "start": [1, 3, 4, 8, 9, 21, 22, 25, 27, 33, 39, 41, 42, 43, 44, 49, 53, 56, 57, 224, 393, 423, 424, 486, 528, 688, 855, 947, 1021, 1023, 1034, 1036, 1037, 1094, 1095, 1111, 1126, 1198, 1213, 1226, 1271, 1287, 1333, 1334, 1342, 1347, 1348, 1349, 1378, 1380, 1427, 1428, 1429, 1435, 1437, 1525, 1571, 1614, 1634, 1638, 1640, 1653, 1676, 1698, 1704, 1738, 1769, 1792, 1806, 1807, 1808, 1810, 1811, 1879, 1880, 1882, 1883, 1888, 1891, 1896, 1898, 1904, 1905, 1907, 1908, 1909, 1911, 1915, 1916, 1917, 1921, 1925, 1927, 1930, 1931, 1936, 1937, 1938, 1940, 1953, 1954, 1957, 1959, 1964, 1966], "sure": [1, 7, 9, 21, 25, 27, 32, 34, 43, 45, 52, 57, 851, 852, 883, 1123, 1204, 1216, 1217, 1273, 1614, 1665, 1700, 1843, 1884, 1897, 1904, 1908, 1911, 1912, 1921, 1925, 1930, 1931, 1936, 1937, 1938, 1940, 1945, 1959, 1961, 1969], "longer": [1, 25, 44, 53, 54, 677, 880, 898, 899, 1197, 1204, 1614, 1664, 1667, 1894, 1904, 1907, 1923, 1936, 1938, 1954, 1969], "find": [1, 7, 14, 25, 42, 54, 57, 73, 1072, 1153, 1222, 1273, 1365, 1366, 1367, 1404, 1674, 1712, 1723, 1758, 1825, 1879, 1892, 1896, 1898, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1917, 1919, 1923, 1925, 1926, 1931, 1936, 1940, 1943, 1945, 1947, 1949, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1968, 1969, 1970], "quick": [1, 7, 52, 1891, 1915, 1924, 1952, 1967], "guid": [1, 8, 21, 71, 73, 74, 1212, 1664, 1880, 1888, 1907, 1910, 1928, 1931, 1962, 1967], "var": [1, 35, 40, 42, 45, 1352, 1353, 1354, 1388, 1389, 1397, 1398, 1399, 1406, 1473, 1530, 1726, 1868, 1882, 1884, 1897, 1926, 1957, 1962, 1964, 1969], "thing": [1, 3, 7, 8, 25, 46, 54, 57, 1130, 1210, 1302, 1350, 1535, 1797, 1883, 1904, 1907, 1909, 1910, 1911, 1912, 1917, 1925, 1928, 1931, 1932, 1938, 1954, 1958, 1959, 1962, 1967, 1969], "detach": [1, 5, 213, 438, 448, 939, 1129, 1200, 1357, 1434, 1517, 1535, 1801, 1839, 1881, 1882, 1897, 1899, 1909, 1911, 1925, 1926, 1933, 1940, 1944, 1946, 1968], "register_hook": [1, 1897, 1904], "name": [1, 2, 3, 14, 22, 25, 27, 30, 31, 33, 35, 36, 39, 40, 42, 44, 46, 47, 49, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 670, 687, 737, 738, 747, 782, 804, 805, 806, 807, 814, 830, 844, 848, 907, 949, 974, 1001, 1124, 1129, 1139, 1198, 1200, 1201, 1208, 1211, 1216, 1217, 1231, 1236, 1237, 1243, 1244, 1246, 1247, 1248, 1249, 1259, 1260, 1262, 1264, 1265, 1272, 1434, 1484, 1607, 1612, 1613, 1614, 1627, 1628, 1629, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1661, 1662, 1664, 1673, 1674, 1754, 1764, 1862, 1864, 1866, 1879, 1880, 1881, 1882, 1884, 1885, 1888, 1890, 1893, 1894, 1896, 1902, 1904, 1907, 1908, 1909, 1912, 1914, 1915, 1923, 1925, 1926, 1928, 1929, 1930, 1936, 1937, 1942, 1945, 1947, 1948, 1949, 1950, 1955, 1956, 1959, 1962, 1963, 1966, 1968, 1969, 1970, 1971, 1972], "factori": [1, 2, 11, 31, 33, 36, 40, 54, 814, 1072, 1665, 1674, 1762, 1880, 1882, 1898, 1907, 1909, 1926, 1943, 1957, 1958], "ones": [1, 21, 25, 29, 31, 46, 49, 54, 55, 56, 57, 58, 60, 63, 65, 66, 67, 68, 141, 245, 304, 393, 435, 436, 438, 505, 784, 849, 883, 892, 894, 895, 896, 897, 898, 912, 924, 942, 1055, 1063, 1085, 1129, 1136, 1137, 1140, 1175, 1197, 1200, 1212, 1221, 1247, 1263, 1272, 1351, 1368, 1377, 1381, 1388, 1389, 1406, 1434, 1438, 1439, 1441, 1443, 1485, 1524, 1583, 1601, 1605, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1657, 1659, 1662, 1672, 1673, 1726, 1743, 1761, 1766, 1792, 1842, 1846, 1864, 1875, 1882, 1884, 1886, 1897, 1898, 1904, 1905, 1907, 1909, 1916, 1918, 1919, 1925, 1926, 1927, 1928, 1931, 1936, 1938, 1941, 1943, 1946, 1963, 1968, 1969], "autograd_tensor": 1, "base": [1, 3, 7, 9, 12, 14, 15, 21, 25, 26, 27, 29, 30, 31, 33, 35, 40, 42, 43, 44, 46, 47, 49, 54, 57, 76, 77, 78, 781, 786, 790, 792, 810, 811, 812, 814, 815, 851, 852, 889, 942, 962, 1033, 1034, 1070, 1072, 1115, 1153, 1163, 1202, 1214, 1226, 1264, 1275, 1277, 1279, 1287, 1371, 1434, 1437, 1438, 1439, 1443, 1450, 1477, 1479, 1481, 1550, 1583, 1614, 1619, 1620, 1627, 1634, 1638, 1640, 1676, 1677, 1678, 1679, 1680, 1681, 1690, 1691, 1692, 1693, 1719, 1729, 1754, 1766, 1768, 1824, 1825, 1840, 1850, 1852, 1873, 1880, 1882, 1884, 1906, 1907, 1908, 1909, 1915, 1929, 1930, 1931, 1936, 1937, 1940, 1941, 1944, 1945, 1947, 1949, 1950, 1956, 1957, 1959, 1961, 1962], "static": [1, 3, 8, 14, 26, 31, 33, 46, 47, 49, 58, 63, 64, 66, 784, 805, 807, 816, 822, 847, 849, 879, 880, 881, 882, 1214, 1477, 1614, 1799, 1881, 1882, 1883, 1884, 1907, 1914, 1922, 1923, 1929, 1932, 1936, 1942, 1954, 1956, 1957, 1962], "Then": [1, 25, 43, 57, 1381, 1485, 1629, 1674, 1862, 1904, 1905, 1907, 1908, 1909, 1910, 1918, 1919, 1925, 1927, 1928, 1936, 1937, 1949, 1954, 1956, 1960], "op": [1, 4, 25, 30, 46, 47, 49, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 77, 78, 141, 493, 514, 594, 747, 782, 783, 784, 813, 816, 844, 851, 852, 883, 889, 897, 932, 942, 979, 994, 996, 1000, 1001, 1015, 1016, 1041, 1045, 1047, 1130, 1150, 1201, 1214, 1216, 1217, 1272, 1278, 1450, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1710, 1769, 1848, 1880, 1884, 1888, 1890, 1891, 1892, 1894, 1897, 1898, 1906, 1907, 1908, 1909, 1917, 1923, 1928, 1930, 1931, 1932, 1933, 1934, 1940, 1942, 1944, 1946, 1950, 1954, 1955, 1958, 1959, 1960, 1961, 1962, 1964, 1968, 1969], "ctx": [1, 40, 58, 62, 879, 880, 881, 887, 888, 889, 890, 1888, 1903, 1909, 1910, 1925], "gradcheck": [1, 1798, 1880, 1909, 1940], "extend": [1, 21, 25, 27, 31, 34, 44, 57, 851, 880, 882, 889, 1436, 1445, 1798, 1862, 1880, 1888, 1899, 1904, 1914, 1916, 1917, 1925, 1926, 1928, 1934, 1940, 1957, 1970], "staticmethod": [1, 58, 880, 882, 887, 888, 889, 890, 1884, 1903, 1909, 1925, 1936], "result": [1, 3, 4, 5, 7, 8, 9, 12, 14, 18, 21, 22, 25, 27, 31, 33, 35, 40, 43, 46, 47, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 78, 144, 212, 213, 245, 246, 306, 326, 389, 486, 488, 489, 546, 573, 574, 575, 577, 578, 608, 676, 677, 678, 679, 680, 683, 685, 686, 687, 689, 750, 783, 867, 869, 885, 886, 891, 892, 893, 894, 895, 896, 898, 899, 910, 913, 924, 928, 933, 939, 941, 942, 945, 954, 958, 960, 985, 987, 989, 1015, 1016, 1029, 1051, 1052, 1053, 1054, 1055, 1067, 1072, 1090, 1093, 1099, 1108, 1115, 1117, 1120, 1125, 1126, 1129, 1130, 1131, 1134, 1135, 1140, 1141, 1145, 1161, 1162, 1164, 1177, 1191, 1200, 1203, 1204, 1212, 1216, 1217, 1219, 1221, 1222, 1226, 1240, 1242, 1244, 1245, 1253, 1257, 1259, 1261, 1262, 1263, 1270, 1280, 1281, 1288, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1329, 1332, 1371, 1373, 1374, 1375, 1379, 1381, 1386, 1400, 1404, 1434, 1440, 1449, 1477, 1478, 1479, 1480, 1481, 1485, 1515, 1533, 1544, 1598, 1601, 1602, 1614, 1627, 1629, 1662, 1665, 1666, 1667, 1668, 1674, 1704, 1710, 1712, 1719, 1720, 1723, 1729, 1742, 1748, 1763, 1791, 1802, 1804, 1805, 1809, 1816, 1818, 1819, 1820, 1823, 1824, 1825, 1835, 1839, 1840, 1845, 1846, 1848, 1849, 1851, 1864, 1867, 1868, 1872, 1881, 1882, 1883, 1884, 1888, 1891, 1892, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1917, 1918, 1919, 1922, 1923, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1936, 1937, 1940, 1943, 1945, 1946, 1947, 1950, 1951, 1955, 1957, 1958, 1962, 1963, 1966, 1967, 1968, 1969, 1970], "save_for_backward": [1, 880, 888, 890, 1903, 1904, 1909, 1910, 1925], "grad_output": [1, 58, 879, 887, 897, 899, 903, 904, 1200, 1434, 1610, 1611, 1882, 1904, 1907, 1909, 1910, 1915, 1964], "saved_tensor": [1, 888, 889, 890, 1903, 1904, 1909, 1910], "avail": [1, 2, 5, 8, 9, 14, 15, 21, 25, 33, 42, 43, 47, 73, 74, 968, 995, 997, 998, 1009, 1012, 1019, 1020, 1039, 1040, 1042, 1072, 1207, 1264, 1265, 1290, 1477, 1486, 1544, 1583, 1602, 1712, 1766, 1820, 1825, 1861, 1864, 1879, 1880, 1881, 1883, 1884, 1888, 1891, 1896, 1904, 1907, 1909, 1913, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1927, 1928, 1930, 1931, 1932, 1936, 1950, 1951, 1956, 1961, 1969, 1970], "cost": [1, 3, 4, 8, 9, 22, 49, 932, 942, 1256, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1762, 1907, 1919, 1932, 1937, 1943, 1965, 1969], "both": [1, 2, 3, 14, 21, 22, 25, 26, 27, 30, 31, 35, 40, 41, 42, 43, 46, 47, 49, 56, 57, 58, 65, 66, 88, 330, 489, 719, 758, 759, 762, 763, 764, 783, 841, 882, 886, 892, 893, 894, 895, 896, 910, 948, 962, 996, 1067, 1073, 1074, 1075, 1088, 1118, 1119, 1120, 1129, 1143, 1145, 1153, 1160, 1177, 1190, 1191, 1197, 1200, 1214, 1222, 1223, 1271, 1287, 1295, 1301, 1315, 1316, 1347, 1348, 1352, 1353, 1354, 1359, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1389, 1395, 1397, 1398, 1399, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1427, 1428, 1429, 1434, 1440, 1473, 1481, 1485, 1486, 1489, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1557, 1558, 1559, 1583, 1614, 1622, 1624, 1632, 1662, 1679, 1680, 1704, 1727, 1728, 1766, 1797, 1799, 1801, 1820, 1824, 1845, 1846, 1881, 1883, 1884, 1888, 1891, 1897, 1898, 1900, 1903, 1904, 1905, 1909, 1910, 1912, 1915, 1918, 1919, 1920, 1925, 1928, 1929, 1931, 1934, 1936, 1938, 1940, 1941, 1947, 1949, 1950, 1951, 1954, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1966, 1969], "cpu": [1, 4, 5, 14, 17, 21, 25, 27, 47, 49, 58, 63, 66, 67, 68, 79, 110, 187, 280, 317, 326, 435, 436, 437, 438, 439, 448, 570, 579, 855, 870, 908, 911, 920, 960, 963, 964, 975, 985, 986, 987, 989, 1073, 1075, 1085, 1090, 1108, 1120, 1124, 1126, 1127, 1150, 1151, 1157, 1158, 1200, 1208, 1210, 1211, 1220, 1230, 1232, 1236, 1237, 1238, 1239, 1241, 1243, 1246, 1248, 1249, 1255, 1258, 1261, 1264, 1265, 1271, 1272, 1287, 1290, 1301, 1312, 1371, 1377, 1434, 1477, 1598, 1614, 1619, 1620, 1653, 1654, 1668, 1671, 1722, 1731, 1733, 1735, 1737, 1738, 1762, 1767, 1769, 1770, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1801, 1806, 1807, 1808, 1809, 1810, 1811, 1824, 1839, 1840, 1841, 1850, 1852, 1857, 1861, 1877, 1880, 1881, 1882, 1884, 1888, 1892, 1896, 1897, 1899, 1907, 1909, 1910, 1913, 1915, 1918, 1919, 1921, 1925, 1926, 1929, 1930, 1932, 1935, 1936, 1940, 1942, 1943, 1946, 1947, 1948, 1951, 1954, 1956, 1958, 1959, 1961, 1963, 1966, 1967, 1969], "There": [1, 5, 6, 7, 9, 12, 14, 20, 25, 27, 30, 42, 46, 47, 50, 54, 55, 57, 75, 76, 78, 670, 724, 783, 880, 942, 1130, 1371, 1404, 1449, 1583, 1614, 1621, 1660, 1665, 1879, 1881, 1883, 1884, 1890, 1891, 1898, 1904, 1907, 1909, 1910, 1911, 1914, 1917, 1921, 1922, 1925, 1928, 1930, 1931, 1932, 1936, 1938, 1946, 1948, 1954, 1957, 1958, 1959, 1962, 1968, 1969], "moment": [1, 58, 64, 762, 763, 764, 958, 1679, 1680, 1681, 1683, 1689, 1693, 1892, 1896, 1899, 1930, 1936, 1962, 1966], "nvprof": [1, 4, 905, 1907], "regist": [1, 15, 22, 25, 29, 30, 31, 42, 44, 46, 47, 49, 57, 71, 73, 74, 75, 76, 78, 477, 478, 670, 782, 783, 844, 903, 904, 942, 1018, 1200, 1272, 1434, 1435, 1436, 1444, 1445, 1462, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1627, 1628, 1629, 1630, 1632, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1862, 1864, 1888, 1894, 1896, 1908, 1909, 1914, 1915, 1920, 1923, 1925, 1928, 1936, 1958, 1961, 1965], "activ": [1, 5, 7, 9, 44, 46, 49, 55, 70, 72, 782, 784, 786, 793, 797, 831, 832, 841, 851, 852, 974, 983, 998, 1011, 1029, 1129, 1131, 1141, 1273, 1346, 1373, 1374, 1375, 1379, 1389, 1406, 1433, 1435, 1452, 1463, 1477, 1479, 1481, 1526, 1563, 1586, 1614, 1630, 1631, 1632, 1662, 1667, 1872, 1880, 1892, 1896, 1907, 1909, 1910, 1915, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1936, 1940, 1949, 1950, 1954, 1958, 1964, 1969], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 1930], "use_devic": 1, "record_shap": [1, 1930], "with_flop": [1, 1930], "profile_memori": [1, 1930], "with_stack": [1, 1930], "with_modul": [1, 1930], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 1930], "hold": [1, 25, 40, 42, 44, 45, 46, 49, 53, 56, 57, 527, 1273, 1381, 1435, 1436, 1444, 1445, 1485, 1605, 1614, 1616, 1617, 1629, 1639, 1653, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1806, 1807, 1808, 1809, 1810, 1811, 1905, 1907, 1909, 1911, 1914, 1917, 1927, 1930, 1936, 1937, 1938, 1940, 1942, 1943, 1945, 1946, 1957, 1962], "summari": [1, 3, 43, 1030, 1771, 1880, 1894, 1945, 1950, 1963, 1969, 1971], "hood": [1, 46, 56, 1896, 1904, 1907, 1908, 1917, 1928, 1938, 1956, 1958, 1962], "just": [1, 2, 7, 14, 22, 25, 30, 31, 33, 40, 57, 579, 677, 687, 780, 813, 816, 879, 881, 907, 955, 956, 1216, 1217, 1255, 1258, 1263, 1264, 1290, 1373, 1374, 1375, 1379, 1614, 1632, 1633, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1762, 1849, 1850, 1851, 1852, 1862, 1879, 1881, 1896, 1903, 1904, 1909, 1910, 1912, 1914, 1915, 1916, 1920, 1928, 1929, 1936, 1937, 1940, 1943, 1944, 1946, 1950, 1954, 1955, 1956, 1957, 1958, 1959, 1962, 1968], "record": [1, 5, 29, 34, 35, 36, 40, 43, 46, 56, 57, 435, 436, 437, 438, 439, 486, 809, 810, 811, 812, 815, 817, 855, 911, 920, 975, 976, 978, 1073, 1074, 1075, 1085, 1090, 1108, 1126, 1127, 1128, 1157, 1158, 1200, 1216, 1220, 1271, 1287, 1312, 1315, 1316, 1371, 1434, 1671, 1672, 1674, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1806, 1807, 1808, 1809, 1810, 1811, 1839, 1877, 1878, 1881, 1883, 1899, 1903, 1904, 1907, 1909, 1922, 1923, 1925, 1930, 1936, 1945, 1946, 1947, 1948, 1949, 1950, 1954, 1957, 1959, 1969, 1971], "event": [1, 28, 31, 33, 41, 44, 56, 907, 908, 909, 976, 978, 1029, 1032, 1216, 1217, 1278, 1315, 1316, 1583, 1880, 1894, 1896, 1907, 1930, 1945, 1967, 1971], "being": [1, 3, 5, 9, 12, 21, 25, 27, 29, 31, 33, 35, 42, 43, 44, 46, 47, 49, 53, 54, 56, 57, 58, 66, 72, 88, 393, 750, 783, 789, 882, 891, 897, 940, 954, 976, 984, 1031, 1035, 1049, 1050, 1085, 1118, 1119, 1130, 1139, 1140, 1189, 1200, 1204, 1290, 1299, 1304, 1350, 1351, 1368, 1370, 1377, 1378, 1382, 1383, 1388, 1394, 1401, 1425, 1426, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1465, 1466, 1482, 1498, 1505, 1506, 1516, 1528, 1529, 1533, 1545, 1568, 1576, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1646, 1647, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1722, 1723, 1818, 1819, 1820, 1867, 1868, 1881, 1884, 1891, 1894, 1897, 1898, 1899, 1903, 1904, 1907, 1909, 1910, 1911, 1912, 1915, 1917, 1918, 1919, 1923, 1925, 1928, 1931, 1934, 1936, 1937, 1940, 1947, 1949, 1954, 1957, 1958, 1959, 1962, 1967, 1969, 1970], "those": [1, 2, 4, 5, 14, 21, 22, 25, 27, 29, 31, 46, 49, 54, 56, 57, 72, 814, 898, 987, 997, 1060, 1062, 1141, 1216, 1258, 1264, 1272, 1311, 1342, 1350, 1351, 1368, 1370, 1378, 1394, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1486, 1505, 1506, 1516, 1525, 1545, 1568, 1576, 1674, 1693, 1824, 1846, 1872, 1883, 1897, 1898, 1903, 1904, 1907, 1909, 1910, 1913, 1915, 1919, 1920, 1925, 1927, 1934, 1936, 1938, 1954, 1956, 1958, 1959, 1961, 1962, 1963, 1966, 1969], "report": [1, 3, 4, 18, 25, 35, 43, 56, 57, 75, 76, 78, 1029, 1133, 1134, 1136, 1903, 1907, 1929, 1940, 1959, 1963, 1966, 1969, 1971], "runtim": [1, 3, 5, 14, 25, 46, 47, 57, 817, 868, 907, 1070, 1072, 1163, 1200, 1206, 1216, 1434, 1616, 1617, 1675, 1718, 1861, 1873, 1884, 1897, 1898, 1904, 1907, 1909, 1917, 1922, 1924, 1925, 1951, 1957, 1959, 1965], "note": [1, 2, 3, 5, 8, 11, 12, 14, 15, 18, 20, 21, 22, 25, 27, 29, 31, 32, 33, 40, 42, 44, 46, 47, 49, 53, 55, 56, 57, 58, 65, 66, 75, 76, 77, 78, 141, 212, 368, 478, 489, 490, 503, 505, 507, 725, 731, 732, 733, 781, 783, 784, 785, 789, 831, 851, 855, 874, 883, 889, 891, 892, 893, 894, 895, 896, 897, 899, 926, 932, 942, 954, 972, 1047, 1055, 1060, 1072, 1093, 1123, 1126, 1141, 1142, 1153, 1175, 1187, 1197, 1198, 1200, 1201, 1207, 1273, 1295, 1315, 1316, 1350, 1351, 1357, 1365, 1366, 1367, 1368, 1370, 1377, 1378, 1386, 1388, 1394, 1400, 1401, 1404, 1425, 1426, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1444, 1445, 1448, 1449, 1465, 1466, 1473, 1477, 1482, 1486, 1505, 1506, 1516, 1524, 1525, 1533, 1544, 1545, 1568, 1571, 1576, 1577, 1590, 1605, 1614, 1615, 1621, 1667, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1696, 1698, 1704, 1706, 1722, 1729, 1805, 1806, 1807, 1808, 1810, 1811, 1816, 1820, 1824, 1846, 1861, 1862, 1864, 1872, 1879, 1881, 1882, 1885, 1891, 1896, 1899, 1900, 1904, 1905, 1906, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1923, 1925, 1927, 1928, 1930, 1932, 1934, 1935, 1937, 1938, 1940, 1944, 1945, 1956, 1957, 1959, 1960, 1967, 1968, 1969, 1972], "propag": [1, 27, 28, 30, 31, 33, 42, 57, 58, 66, 503, 676, 679, 680, 681, 685, 686, 687, 688, 756, 757, 758, 759, 769, 772, 773, 775, 776, 777, 828, 830, 910, 1118, 1119, 1329, 1621, 1805, 1880, 1896, 1897, 1903, 1907, 1909, 1912, 1914, 1936, 1949, 1950, 1957, 1958, 1962, 1968], "async": [1, 25, 26, 56, 593, 1614, 1885, 1907, 1914, 1942], "task": [1, 3, 7, 22, 50, 55, 1203, 1219, 1397, 1398, 1399, 1884, 1906, 1914, 1915, 1917, 1921, 1959], "cuda": [1, 3, 4, 5, 14, 16, 20, 21, 22, 25, 27, 29, 49, 79, 141, 280, 304, 312, 326, 331, 505, 507, 514, 570, 855, 867, 869, 883, 897, 911, 913, 920, 942, 947, 973, 974, 975, 976, 978, 979, 994, 996, 1007, 1073, 1074, 1075, 1085, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1124, 1127, 1157, 1158, 1200, 1220, 1222, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1255, 1258, 1261, 1262, 1264, 1265, 1271, 1272, 1287, 1290, 1306, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1404, 1434, 1449, 1473, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1533, 1544, 1571, 1583, 1602, 1603, 1604, 1605, 1614, 1616, 1617, 1619, 1620, 1621, 1666, 1668, 1671, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1722, 1731, 1733, 1735, 1737, 1738, 1762, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1802, 1806, 1807, 1808, 1809, 1810, 1811, 1824, 1839, 1841, 1850, 1852, 1857, 1861, 1877, 1880, 1882, 1888, 1897, 1899, 1909, 1910, 1915, 1918, 1925, 1926, 1927, 1929, 1930, 1935, 1936, 1940, 1942, 1943, 1946, 1947, 1948, 1951, 1956, 1958, 1961, 1966, 1969], "cudaev": 1, "4u": 1, "shape": [1, 5, 8, 11, 12, 22, 25, 31, 47, 49, 51, 53, 55, 57, 58, 59, 60, 63, 64, 65, 69, 88, 162, 182, 199, 209, 391, 393, 435, 437, 439, 461, 487, 488, 503, 505, 507, 534, 556, 607, 670, 675, 677, 678, 687, 725, 735, 736, 746, 748, 750, 754, 756, 757, 758, 759, 762, 763, 764, 771, 786, 868, 874, 888, 892, 894, 895, 896, 907, 912, 913, 915, 918, 923, 925, 929, 930, 934, 935, 942, 954, 957, 988, 1062, 1063, 1064, 1066, 1067, 1072, 1073, 1075, 1077, 1092, 1093, 1094, 1095, 1103, 1104, 1105, 1111, 1117, 1118, 1119, 1120, 1127, 1134, 1135, 1139, 1140, 1141, 1142, 1144, 1156, 1161, 1162, 1166, 1174, 1177, 1191, 1197, 1214, 1216, 1217, 1220, 1225, 1226, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1289, 1290, 1294, 1302, 1307, 1308, 1323, 1324, 1335, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1524, 1525, 1529, 1533, 1535, 1544, 1545, 1550, 1557, 1558, 1559, 1569, 1570, 1573, 1574, 1575, 1577, 1583, 1602, 1605, 1614, 1616, 1617, 1627, 1629, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1668, 1671, 1673, 1675, 1710, 1719, 1723, 1727, 1728, 1731, 1733, 1734, 1735, 1742, 1744, 1745, 1749, 1758, 1761, 1786, 1801, 1802, 1804, 1807, 1809, 1815, 1820, 1821, 1824, 1835, 1842, 1846, 1856, 1857, 1858, 1859, 1872, 1875, 1877, 1881, 1882, 1884, 1888, 1897, 1898, 1899, 1904, 1905, 1907, 1909, 1910, 1911, 1923, 1926, 1930, 1933, 1936, 1940, 1941, 1945, 1946, 1947, 1948, 1951, 1956, 1959, 1964, 1968, 1969], "about": [1, 8, 9, 12, 17, 21, 25, 26, 29, 33, 35, 39, 41, 43, 46, 50, 54, 57, 77, 246, 488, 608, 898, 899, 947, 954, 980, 981, 997, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1036, 1037, 1038, 1130, 1230, 1237, 1378, 1653, 1689, 1693, 1704, 1765, 1879, 1881, 1883, 1884, 1888, 1891, 1906, 1907, 1908, 1909, 1911, 1914, 1917, 1918, 1920, 1922, 1928, 1930, 1931, 1934, 1937, 1938, 1940, 1944, 1946, 1955, 1957, 1959, 1962, 1965, 1969], "dimens": [1, 11, 21, 25, 30, 31, 46, 47, 49, 54, 55, 57, 58, 63, 66, 69, 75, 209, 223, 224, 245, 251, 304, 306, 308, 312, 423, 424, 462, 463, 464, 483, 503, 505, 507, 527, 533, 535, 536, 550, 573, 574, 575, 577, 578, 597, 607, 676, 682, 683, 685, 686, 687, 689, 725, 748, 769, 771, 775, 864, 865, 866, 867, 876, 877, 878, 882, 897, 921, 929, 932, 933, 934, 935, 936, 972, 987, 989, 1051, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1070, 1072, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1141, 1142, 1153, 1162, 1163, 1174, 1177, 1197, 1221, 1222, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1280, 1281, 1288, 1291, 1295, 1298, 1300, 1301, 1302, 1303, 1306, 1308, 1322, 1329, 1330, 1331, 1332, 1333, 1334, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1384, 1385, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1404, 1406, 1414, 1415, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1433, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1481, 1482, 1483, 1484, 1485, 1498, 1504, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1532, 1533, 1534, 1535, 1544, 1547, 1550, 1551, 1552, 1569, 1570, 1571, 1583, 1589, 1590, 1602, 1621, 1627, 1628, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1654, 1655, 1657, 1659, 1661, 1664, 1666, 1667, 1710, 1713, 1720, 1722, 1723, 1724, 1729, 1743, 1744, 1745, 1749, 1758, 1760, 1761, 1771, 1792, 1796, 1800, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1815, 1817, 1818, 1819, 1820, 1823, 1824, 1834, 1836, 1840, 1841, 1842, 1843, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1855, 1856, 1857, 1858, 1859, 1860, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1880, 1882, 1883, 1884, 1899, 1902, 1905, 1907, 1910, 1911, 1912, 1918, 1923, 1929, 1931, 1940, 1941, 1943, 1945, 1946, 1957, 1964], "collect": [1, 3, 7, 21, 26, 27, 29, 33, 42, 49, 56, 57, 789, 790, 814, 851, 852, 930, 1011, 1073, 1162, 1302, 1614, 1643, 1671, 1731, 1735, 1877, 1880, 1882, 1883, 1884, 1888, 1894, 1907, 1908, 1910, 1927, 1930, 1931, 1934, 1938, 1940, 1945, 1947, 1959, 1962, 1966, 1968, 1969, 1971], "group": [1, 3, 9, 21, 22, 26, 27, 29, 33, 39, 42, 43, 44, 45, 49, 52, 57, 600, 670, 702, 703, 704, 705, 706, 707, 708, 709, 715, 716, 717, 720, 721, 728, 729, 730, 731, 732, 733, 762, 763, 764, 870, 907, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1389, 1410, 1411, 1412, 1413, 1414, 1415, 1473, 1508, 1509, 1510, 1511, 1512, 1513, 1534, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1858, 1879, 1880, 1882, 1884, 1896, 1902, 1907, 1908, 1925, 1927, 1928, 1930, 1936, 1945, 1955, 1959, 1964, 1969], "prof": [1, 39, 1930, 1959, 1967, 1969], "key_averag": [1, 1930], "group_by_input_shap": [1, 907, 1930], "skew": [1, 3, 4, 1252, 1627], "neglig": [1, 1213, 1766], "bottom": [1, 49, 1533, 1891, 1967], "But": [1, 7, 49, 56, 476, 1216, 1246, 1614, 1904, 1909, 1911, 1912, 1919, 1928, 1929, 1940, 1944, 1958, 1959, 1962, 1963, 1970], "total": [1, 3, 4, 7, 21, 22, 25, 39, 41, 42, 43, 49, 867, 908, 989, 1024, 1029, 1042, 1126, 1161, 1162, 1310, 1357, 1381, 1394, 1401, 1425, 1440, 1485, 1570, 1614, 1619, 1666, 1668, 1670, 1698, 1704, 1744, 1771, 1820, 1879, 1883, 1894, 1907, 1913, 1917, 1927, 1940], "artifici": [1, 1940], "flop": [1, 1930], "hardwar": [1, 8, 849, 851, 852, 1236, 1237, 1264, 1861, 1907, 1917, 1919, 1932, 1940, 1959, 1961, 1969], "matrix": [1, 2, 22, 25, 31, 182, 199, 676, 679, 680, 681, 750, 910, 912, 921, 922, 930, 932, 933, 934, 935, 942, 958, 962, 1055, 1059, 1060, 1062, 1072, 1141, 1145, 1149, 1164, 1221, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1270, 1273, 1281, 1290, 1292, 1295, 1305, 1324, 1326, 1377, 1378, 1386, 1404, 1485, 1524, 1525, 1627, 1632, 1661, 1667, 1710, 1711, 1712, 1722, 1766, 1794, 1797, 1801, 1802, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1816, 1824, 1825, 1841, 1844, 1846, 1848, 1849, 1850, 1851, 1852, 1866, 1872, 1880, 1884, 1897, 1898, 1899, 1902, 1906, 1907, 1909, 1912, 1915, 1918, 1930, 1940, 1945, 1946, 1959], "2d": [1, 27, 30, 31, 577, 578, 690, 693, 696, 725, 729, 732, 756, 758, 763, 769, 773, 775, 776, 777, 958, 962, 1060, 1072, 1256, 1257, 1340, 1344, 1348, 1351, 1352, 1353, 1363, 1366, 1370, 1374, 1378, 1382, 1397, 1398, 1403, 1428, 1437, 1439, 1440, 1441, 1486, 1487, 1488, 1493, 1496, 1498, 1501, 1506, 1509, 1512, 1520, 1525, 1528, 1555, 1558, 1568, 1571, 1628, 1661, 1728, 1804, 1809, 1848, 1892, 1902, 1909, 1930, 1931, 1940], "alloc": [1, 4, 11, 18, 22, 27, 31, 33, 42, 49, 245, 322, 435, 436, 437, 438, 439, 476, 974, 976, 978, 980, 981, 983, 996, 997, 998, 1021, 1023, 1025, 1027, 1028, 1029, 1030, 1037, 1038, 1042, 1073, 1075, 1124, 1309, 1310, 1311, 1319, 1731, 1735, 1737, 1762, 1839, 1880, 1896, 1899, 1904, 1908, 1913, 1917, 1923, 1930, 1943, 1953, 1954, 1957, 1958, 1967], "dealloc": [1, 57, 1126, 1896, 1907, 1911, 1913, 1930], "line": [1, 4, 18, 25, 46, 47, 57, 670, 907, 1072, 1130, 1175, 1200, 1211, 1434, 1498, 1533, 1771, 1799, 1881, 1884, 1885, 1899, 1905, 1909, 1912, 1913, 1919, 1921, 1925, 1930, 1940, 1953, 1956, 1959, 1961, 1962, 1963, 1966, 1969, 1971], "hierarchi": [1, 27, 57, 830, 1204, 1679, 1680, 1885, 1909, 1930, 1931, 1957], "callstack": [1, 25, 1930], "A": [1, 2, 3, 5, 7, 8, 9, 12, 14, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 39, 42, 43, 44, 46, 47, 49, 50, 55, 56, 58, 59, 60, 63, 76, 79, 550, 570, 573, 574, 575, 584, 614, 670, 682, 687, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 735, 736, 746, 751, 752, 753, 754, 755, 780, 782, 804, 848, 849, 851, 852, 909, 911, 920, 921, 923, 928, 933, 934, 935, 941, 942, 944, 947, 948, 949, 954, 958, 962, 975, 976, 978, 986, 988, 989, 1057, 1072, 1077, 1085, 1086, 1087, 1099, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1144, 1153, 1156, 1157, 1158, 1162, 1190, 1191, 1192, 1193, 1196, 1198, 1200, 1203, 1208, 1211, 1213, 1216, 1217, 1221, 1225, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1273, 1281, 1289, 1290, 1291, 1292, 1296, 1335, 1351, 1355, 1357, 1370, 1377, 1378, 1387, 1388, 1396, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1433, 1434, 1440, 1462, 1467, 1469, 1477, 1482, 1483, 1498, 1504, 1516, 1524, 1535, 1545, 1552, 1563, 1583, 1589, 1590, 1605, 1614, 1615, 1616, 1617, 1622, 1624, 1627, 1629, 1632, 1654, 1655, 1658, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1687, 1689, 1690, 1691, 1692, 1693, 1697, 1698, 1700, 1703, 1704, 1706, 1712, 1722, 1724, 1725, 1726, 1727, 1728, 1739, 1745, 1751, 1754, 1787, 1796, 1799, 1800, 1803, 1815, 1819, 1820, 1824, 1825, 1843, 1848, 1849, 1850, 1851, 1852, 1856, 1857, 1858, 1860, 1861, 1868, 1872, 1875, 1879, 1881, 1882, 1883, 1884, 1888, 1891, 1892, 1897, 1898, 1902, 1903, 1906, 1907, 1909, 1910, 1911, 1917, 1918, 1920, 1925, 1927, 1928, 1929, 1930, 1931, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1950, 1954, 1955, 1956, 1958, 1959, 1961, 1962, 1964, 1967, 1968, 1969, 1970, 1971, 1972], "aten": [1, 2, 3, 12, 14, 18, 46, 47, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 76, 1015, 1130, 1324, 1673, 1674, 1799, 1881, 1882, 1888, 1906, 1909, 1921, 1923, 1926, 1930, 1931, 1940, 1951, 1955, 1960, 1963, 1969], "torchscript": [1, 3, 8, 29, 46, 47, 57, 607, 1198, 1201, 1203, 1204, 1205, 1207, 1212, 1216, 1218, 1674, 1880, 1885, 1920, 1930, 1936, 1971], "eager": [1, 8, 46, 942, 1047, 1198, 1201, 1212, 1770, 1884, 1907, 1930, 1932, 1934, 1954, 1959, 1960, 1961, 1966, 1969], "experiment": [1, 2, 22, 25, 27, 29, 30, 46, 47, 49, 57, 58, 61, 65, 66, 69, 224, 891, 893, 897, 942, 949, 1046, 1130, 1231, 1242, 1244, 1245, 1249, 1262, 1614, 1693, 1880, 1881, 1883, 1897, 1898, 1907, 1908, 1919, 1921, 1923, 1925, 1928, 1929, 1930, 1957, 1958, 1959, 1969], "kineto": [1, 1930], "_experimentalconfig": [1, 1930], "librari": [1, 2, 3, 4, 8, 9, 11, 14, 15, 21, 25, 32, 40, 44, 50, 53, 54, 55, 57, 670, 960, 976, 999, 1003, 1015, 1123, 1213, 1244, 1290, 1791, 1894, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1917, 1918, 1921, 1925, 1928, 1930, 1931, 1936, 1959, 1970], "100": [1, 21, 25, 29, 31, 57, 58, 65, 66, 291, 728, 729, 732, 733, 1160, 1200, 1212, 1218, 1256, 1271, 1278, 1287, 1302, 1323, 1342, 1350, 1351, 1352, 1353, 1354, 1363, 1364, 1366, 1367, 1369, 1370, 1397, 1398, 1399, 1434, 1441, 1443, 1473, 1482, 1515, 1516, 1568, 1682, 1694, 1695, 1700, 1701, 1702, 1703, 1705, 1707, 1708, 1724, 1780, 1859, 1882, 1884, 1896, 1906, 1907, 1925, 1927, 1932, 1938, 1940, 1945, 1955, 1956, 1962, 1963], "realli": [1, 7, 57, 944, 1884, 1904, 1928, 1958], "y": [1, 11, 14, 21, 31, 39, 46, 47, 49, 54, 55, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 607, 610, 771, 874, 876, 877, 878, 885, 886, 889, 891, 892, 893, 894, 895, 896, 924, 930, 955, 962, 1015, 1016, 1055, 1066, 1072, 1076, 1129, 1131, 1134, 1135, 1136, 1140, 1141, 1175, 1207, 1212, 1216, 1269, 1278, 1279, 1302, 1350, 1351, 1352, 1353, 1354, 1355, 1368, 1370, 1389, 1394, 1395, 1397, 1398, 1399, 1401, 1406, 1421, 1425, 1426, 1437, 1438, 1439, 1441, 1443, 1465, 1466, 1473, 1476, 1482, 1483, 1504, 1533, 1550, 1573, 1605, 1632, 1665, 1726, 1744, 1746, 1747, 1768, 1801, 1815, 1842, 1846, 1847, 1872, 1875, 1881, 1882, 1883, 1884, 1888, 1897, 1898, 1902, 1904, 1905, 1906, 1907, 1910, 1912, 1913, 1916, 1923, 1925, 1928, 1931, 1936, 1938, 1941, 1945, 1948, 1949, 1950, 1954, 1955, 1957, 1959, 1962, 1968, 1969], "column": [1, 3, 22, 30, 182, 251, 574, 577, 940, 958, 962, 1055, 1085, 1113, 1114, 1165, 1236, 1237, 1240, 1256, 1259, 1264, 1268, 1273, 1324, 1443, 1485, 1524, 1525, 1627, 1712, 1722, 1804, 1806, 1807, 1808, 1810, 1811, 1824, 1846, 1850, 1852, 1866, 1902, 1912, 1940], "remov": [1, 3, 21, 22, 25, 27, 30, 31, 43, 45, 49, 57, 477, 478, 503, 536, 547, 687, 787, 805, 806, 807, 849, 903, 904, 932, 933, 1018, 1130, 1146, 1197, 1200, 1204, 1290, 1291, 1295, 1434, 1435, 1444, 1535, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1628, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1646, 1647, 1648, 1649, 1651, 1652, 1662, 1664, 1667, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1722, 1738, 1760, 1815, 1824, 1848, 1855, 1857, 1879, 1880, 1892, 1900, 1904, 1909, 1915, 1920, 1925, 1926, 1928, 1938, 1942, 1947, 1959, 1961, 1965, 1968], "breviti": [1, 57, 962, 1925], "print": [1, 3, 5, 12, 18, 21, 25, 33, 34, 39, 40, 43, 46, 47, 49, 54, 56, 710, 718, 719, 724, 735, 736, 746, 754, 901, 903, 904, 1129, 1130, 1139, 1200, 1204, 1207, 1208, 1212, 1290, 1355, 1358, 1396, 1421, 1434, 1446, 1447, 1515, 1571, 1574, 1575, 1632, 1642, 1643, 1644, 1645, 1648, 1658, 1662, 1674, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1771, 1865, 1879, 1881, 1882, 1904, 1906, 1907, 1909, 1915, 1916, 1923, 1924, 1925, 1926, 1928, 1930, 1936, 1945, 1946, 1949, 1950, 1954, 1955, 1956, 1959, 1961, 1962, 1969], "tabl": [1, 3, 25, 57, 1377, 1524, 1882, 1884, 1909, 1927, 1928, 1930, 1931, 1936, 1940, 1947, 1958, 1960, 1963, 1966, 1969], "sort_bi": [1, 1930], "self_cpu_time_tot": [1, 1930], "avg": [1, 25, 1677], "mul": [1, 18, 46, 57, 58, 61, 64, 65, 410, 737, 738, 747, 1177, 1325, 1881, 1882, 1884, 1897, 1899, 1909, 1925, 1926, 1933, 1937, 1940, 1943, 1949, 1955, 1957, 1964, 1968], "32": [1, 2, 22, 25, 46, 79, 736, 1126, 1197, 1210, 1290, 1348, 1373, 1374, 1375, 1379, 1380, 1382, 1383, 1403, 1422, 1428, 1439, 1477, 1478, 1479, 1480, 1481, 1498, 1528, 1529, 1535, 1583, 1898, 1899, 1915, 1919, 1925, 1934, 1940, 1943, 1945, 1946, 1956, 1962, 1963], "048m": 1, "200": [1, 29, 1200, 1278, 1434, 1724, 1884, 1940, 1969], "27": [1, 607, 1268, 1697, 1719, 1866, 1925], "041m": 1, "powbackward0": 1, "9": [1, 7, 21, 22, 25, 32, 57, 58, 63, 304, 306, 308, 312, 392, 393, 461, 503, 550, 571, 573, 687, 735, 736, 844, 926, 932, 936, 940, 962, 1055, 1070, 1073, 1094, 1095, 1104, 1105, 1115, 1118, 1119, 1122, 1123, 1153, 1163, 1230, 1232, 1253, 1255, 1257, 1268, 1270, 1333, 1334, 1340, 1341, 1344, 1345, 1358, 1377, 1378, 1430, 1431, 1446, 1447, 1456, 1459, 1524, 1525, 1571, 1574, 1575, 1667, 1668, 1677, 1679, 1680, 1681, 1682, 1683, 1689, 1692, 1693, 1694, 1698, 1704, 1706, 1707, 1711, 1715, 1751, 1758, 1767, 1771, 1781, 1786, 1796, 1804, 1812, 1839, 1840, 1844, 1846, 1855, 1866, 1873, 1881, 1885, 1891, 1911, 1915, 1920, 1921, 1925, 1926, 1927, 1928, 1936, 1940, 1941, 1943, 1947], "727m": 1, "55": [1, 1388, 1925], "483m": 1, "accumulategrad": [1, 1904], "148m": 1, "graphroot": 1, "691": 1, "816u": 1, "emit": [1, 14, 34, 39, 57, 670, 1216, 1773, 1884, 1890, 1923, 1935, 1940], "nvtx": [1, 4, 1880], "program": [1, 3, 4, 8, 12, 18, 21, 24, 25, 34, 43, 45, 46, 47, 49, 57, 607, 955, 956, 1021, 1023, 1130, 1766, 1881, 1883, 1885, 1895, 1904, 1907, 1911, 1914, 1916, 1917, 1919, 1920, 1921, 1931, 1945, 1951, 1954, 1956, 1957, 1958, 1959, 1961, 1965, 1967, 1969, 1971], "off": [1, 5, 7, 8, 14, 24, 25, 33, 49, 57, 72, 911, 920, 1033, 1130, 1157, 1158, 1197, 1216, 1264, 1347, 1348, 1349, 1351, 1427, 1428, 1429, 1533, 1571, 1768, 1906, 1907, 1908, 1911, 1914, 1918, 1919, 1930, 1931, 1932, 1936, 1937, 1957, 1958, 1962, 1966], "o": [1, 22, 25, 26, 31, 43, 44, 45, 46, 57, 1200, 1272, 1315, 1316, 1317, 1405, 1434, 1440, 1614, 1754, 1879, 1885, 1896, 1904, 1907, 1908, 1911, 1921, 1928, 1929, 1936], "trace_nam": 1, "regular": [1, 3, 4, 25, 33, 43, 49, 52, 57, 1015, 1016, 1129, 1248, 1249, 1357, 1372, 1373, 1374, 1375, 1379, 1419, 1433, 1434, 1435, 1436, 1444, 1445, 1526, 1563, 1605, 1616, 1617, 1662, 1680, 1689, 1884, 1888, 1898, 1899, 1907, 1909, 1910, 1914, 1915, 1923, 1925, 1928, 1931, 1934, 1936, 1940, 1941, 1948, 1950, 1962], "command": [1, 4, 25, 33, 40, 43, 57, 1907, 1913, 1917, 1921, 1929, 1930, 1937, 1963, 1966], "unfortun": [1, 9, 21, 46, 1614, 1904, 1909, 1956, 1958], "wai": [1, 3, 5, 7, 8, 9, 14, 21, 22, 25, 27, 29, 30, 31, 35, 39, 46, 49, 51, 52, 56, 57, 141, 570, 670, 786, 809, 812, 815, 851, 852, 880, 883, 892, 894, 895, 896, 897, 898, 1093, 1095, 1130, 1153, 1200, 1230, 1231, 1246, 1261, 1350, 1378, 1397, 1398, 1399, 1404, 1416, 1417, 1418, 1434, 1462, 1479, 1481, 1525, 1577, 1614, 1630, 1660, 1693, 1697, 1704, 1881, 1883, 1884, 1890, 1891, 1894, 1896, 1897, 1898, 1904, 1906, 1907, 1909, 1910, 1911, 1912, 1915, 1917, 1918, 1921, 1923, 1925, 1927, 1928, 1931, 1936, 1937, 1940, 1944, 1946, 1950, 1954, 1955, 1957, 1958, 1959, 1962, 1967, 1968, 1969, 1971], "disk": [1, 21, 1272, 1754, 1904, 1915, 1928, 1945], "annot": [1, 30, 35, 40, 57, 905, 1198, 1206, 1212, 1881, 1883, 1885, 1925, 1936, 1959, 1960, 1962], "wait": [1, 18, 25, 33, 40, 42, 56, 814, 971, 975, 976, 978, 1048, 1203, 1312, 1315, 1316, 1321, 1706, 1882, 1884, 1896, 1906, 1907, 1908, 1926, 1930, 1936, 1959, 1967, 1971], "either": [1, 8, 9, 14, 18, 21, 22, 25, 27, 29, 30, 31, 33, 35, 40, 42, 43, 44, 46, 47, 49, 54, 56, 57, 145, 212, 304, 312, 503, 505, 607, 670, 722, 728, 729, 730, 735, 736, 746, 754, 769, 775, 781, 848, 880, 882, 889, 898, 899, 929, 942, 986, 1072, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1126, 1130, 1153, 1175, 1177, 1193, 1200, 1216, 1256, 1271, 1272, 1287, 1302, 1340, 1341, 1344, 1345, 1348, 1349, 1350, 1351, 1362, 1363, 1364, 1366, 1367, 1368, 1370, 1378, 1388, 1394, 1401, 1403, 1425, 1426, 1428, 1429, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1449, 1451, 1465, 1466, 1481, 1482, 1484, 1486, 1487, 1488, 1505, 1506, 1516, 1544, 1545, 1568, 1576, 1602, 1609, 1614, 1645, 1667, 1679, 1680, 1682, 1689, 1704, 1719, 1721, 1763, 1766, 1820, 1824, 1875, 1879, 1881, 1883, 1884, 1886, 1890, 1898, 1902, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1917, 1919, 1923, 1925, 1927, 1928, 1929, 1931, 1937, 1938, 1940, 1941, 1944, 1947, 1957, 1960, 1972], "nvidia": [1, 14, 25, 984, 997, 1025, 1031, 1035, 1049, 1050, 1861, 1880, 1907, 1911, 1913, 1919, 1921, 1931, 1940, 1948, 1951, 1966, 1967, 1969], "visual": [1, 57, 1302, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1427, 1428, 1429, 1485, 1880, 1907, 1915, 1921, 1923, 1930, 1945, 1959, 1967, 1969], "nvvp": 1, "timelin": [1, 4, 1315, 1316, 1880, 1930], "load_nvprof": 1, "repl": [1, 1961], "append": [1, 3, 25, 27, 56, 57, 58, 63, 220, 245, 597, 751, 753, 755, 1018, 1062, 1064, 1295, 1387, 1405, 1436, 1445, 1451, 1462, 1614, 1882, 1883, 1884, 1904, 1906, 1907, 1917, 1921, 1925, 1926, 1940, 1945, 1959, 1962, 1968], "size": [1, 2, 3, 7, 18, 21, 22, 25, 27, 31, 33, 42, 46, 47, 49, 52, 57, 58, 59, 64, 65, 66, 129, 199, 212, 233, 245, 246, 304, 306, 312, 330, 435, 436, 437, 439, 477, 483, 488, 489, 490, 503, 505, 507, 510, 513, 534, 535, 536, 556, 571, 573, 574, 575, 577, 578, 596, 597, 607, 608, 670, 680, 681, 683, 685, 686, 687, 689, 710, 718, 719, 725, 731, 732, 733, 735, 736, 746, 754, 756, 757, 758, 759, 769, 775, 776, 777, 786, 848, 855, 867, 868, 870, 882, 891, 892, 893, 894, 895, 896, 907, 910, 911, 913, 920, 922, 923, 924, 925, 926, 933, 936, 942, 962, 972, 974, 980, 986, 987, 989, 1029, 1053, 1054, 1060, 1063, 1070, 1072, 1073, 1074, 1075, 1078, 1089, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1124, 1126, 1127, 1128, 1135, 1136, 1141, 1142, 1157, 1158, 1162, 1163, 1174, 1177, 1197, 1200, 1222, 1231, 1240, 1245, 1253, 1257, 1261, 1264, 1266, 1267, 1268, 1270, 1271, 1273, 1281, 1287, 1288, 1290, 1291, 1295, 1298, 1300, 1301, 1302, 1303, 1306, 1307, 1308, 1309, 1310, 1324, 1326, 1329, 1332, 1334, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1377, 1378, 1380, 1381, 1382, 1383, 1386, 1388, 1389, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1446, 1447, 1449, 1455, 1456, 1457, 1458, 1459, 1460, 1465, 1473, 1477, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1506, 1511, 1512, 1513, 1516, 1517, 1524, 1525, 1528, 1529, 1533, 1544, 1551, 1557, 1558, 1559, 1568, 1569, 1571, 1574, 1575, 1577, 1583, 1602, 1603, 1604, 1605, 1614, 1643, 1653, 1654, 1655, 1656, 1657, 1659, 1661, 1664, 1666, 1668, 1671, 1672, 1682, 1691, 1710, 1711, 1712, 1713, 1715, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1744, 1749, 1758, 1761, 1780, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1815, 1817, 1818, 1819, 1820, 1823, 1824, 1825, 1839, 1840, 1841, 1846, 1848, 1856, 1857, 1858, 1859, 1860, 1867, 1868, 1870, 1871, 1872, 1873, 1877, 1878, 1880, 1881, 1882, 1884, 1888, 1892, 1894, 1897, 1898, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1919, 1920, 1925, 1926, 1929, 1930, 1931, 1933, 1936, 1940, 1942, 1943, 1945, 1946, 1954, 1956, 1957, 1958, 1959, 1963, 1964, 1967, 1969, 1971], "format": [1, 19, 22, 25, 27, 35, 44, 47, 57, 72, 146, 161, 163, 166, 169, 170, 171, 186, 197, 200, 231, 258, 288, 316, 322, 384, 489, 490, 515, 570, 573, 574, 575, 576, 577, 578, 670, 725, 750, 782, 783, 939, 1018, 1072, 1073, 1074, 1128, 1197, 1200, 1214, 1243, 1357, 1378, 1386, 1404, 1434, 1449, 1481, 1614, 1621, 1654, 1656, 1672, 1674, 1732, 1734, 1736, 1754, 1797, 1801, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1878, 1879, 1881, 1884, 1885, 1890, 1900, 1907, 1909, 1915, 1920, 1922, 1923, 1925, 1926, 1930, 1931, 1936, 1937, 1940, 1943, 1945, 1947, 1967, 1969], "arg0": [1, 25, 1923], "arg1": [1, 25, 40, 41, 43, 47, 1923], "repres": [1, 8, 11, 21, 22, 27, 31, 32, 33, 35, 36, 42, 44, 46, 47, 49, 57, 71, 73, 224, 750, 782, 783, 786, 879, 944, 949, 958, 962, 973, 1005, 1008, 1072, 1093, 1095, 1100, 1102, 1103, 1104, 1105, 1130, 1153, 1160, 1189, 1190, 1193, 1196, 1199, 1216, 1217, 1248, 1290, 1342, 1357, 1434, 1440, 1481, 1483, 1485, 1614, 1626, 1629, 1634, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1653, 1663, 1674, 1698, 1704, 1710, 1712, 1723, 1766, 1806, 1807, 1808, 1810, 1811, 1820, 1824, 1857, 1858, 1864, 1870, 1871, 1881, 1883, 1884, 1888, 1891, 1894, 1899, 1904, 1909, 1910, 1912, 1914, 1915, 1918, 1922, 1923, 1925, 1929, 1931, 1932, 1934, 1936, 1940, 1943, 1957, 1958, 1962, 1971, 1972], "order": [1, 3, 5, 25, 26, 27, 29, 31, 43, 46, 49, 50, 55, 56, 57, 141, 182, 199, 224, 304, 306, 308, 312, 322, 393, 477, 478, 670, 782, 783, 792, 844, 866, 883, 884, 897, 903, 904, 921, 932, 976, 1018, 1029, 1060, 1063, 1064, 1072, 1090, 1092, 1093, 1099, 1111, 1112, 1113, 1114, 1131, 1141, 1153, 1200, 1220, 1231, 1237, 1239, 1246, 1253, 1256, 1257, 1264, 1265, 1268, 1270, 1273, 1302, 1308, 1322, 1324, 1342, 1351, 1357, 1371, 1434, 1435, 1444, 1461, 1462, 1498, 1506, 1533, 1557, 1558, 1559, 1583, 1605, 1614, 1629, 1639, 1653, 1654, 1655, 1656, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1704, 1710, 1713, 1723, 1758, 1761, 1786, 1796, 1824, 1843, 1850, 1852, 1857, 1861, 1866, 1872, 1879, 1880, 1881, 1882, 1884, 1885, 1888, 1896, 1897, 1898, 1899, 1902, 1905, 1907, 1908, 1909, 1910, 1912, 1915, 1918, 1920, 1923, 1925, 1927, 1928, 1929, 1931, 1933, 1936, 1937, 1938, 1940, 1941, 1943, 1947, 1950, 1954, 1955, 1957, 1959, 1963, 1967, 1969], "backend": [1, 14, 41, 45, 47, 49, 731, 732, 733, 782, 783, 823, 845, 846, 849, 851, 852, 891, 897, 942, 949, 998, 1029, 1072, 1130, 1214, 1237, 1244, 1246, 1264, 1315, 1316, 1317, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1533, 1571, 1583, 1614, 1674, 1675, 1766, 1862, 1864, 1880, 1882, 1883, 1892, 1895, 1906, 1907, 1909, 1918, 1919, 1925, 1932, 1934, 1940, 1956, 1959, 1960, 1961, 1962, 1963, 1964, 1966], "side": [1, 14, 25, 42, 44, 46, 47, 54, 57, 58, 61, 758, 759, 762, 763, 764, 935, 1007, 1066, 1088, 1089, 1091, 1094, 1095, 1100, 1102, 1103, 1104, 1105, 1108, 1197, 1198, 1245, 1250, 1261, 1263, 1347, 1348, 1349, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1455, 1456, 1458, 1459, 1460, 1485, 1489, 1490, 1491, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1557, 1558, 1559, 1571, 1698, 1727, 1728, 1758, 1820, 1848, 1879, 1881, 1882, 1884, 1903, 1904, 1907, 1909, 1912, 1936, 1954, 1959, 1962], "creation": [1, 2, 21, 25, 27, 57, 735, 736, 746, 754, 814, 975, 1130, 1614, 1615, 1634, 1881, 1885, 1894, 1896, 1904, 1907, 1936, 1938, 1940, 1946, 1957, 1962], "warmup": [1, 3, 1018, 1907, 1930, 1954, 1959, 1967], "correl": [1, 31, 43, 958, 1362, 1363, 1364, 1365, 1366, 1367, 1373, 1374, 1375, 1379], "view": [1, 7, 8, 11, 18, 21, 22, 27, 29, 33, 47, 49, 57, 58, 66, 70, 213, 245, 425, 487, 488, 489, 597, 608, 682, 687, 750, 868, 876, 877, 878, 886, 924, 936, 955, 956, 1062, 1063, 1070, 1111, 1112, 1113, 1114, 1130, 1163, 1175, 1200, 1256, 1267, 1316, 1378, 1386, 1404, 1434, 1449, 1485, 1486, 1487, 1488, 1525, 1570, 1610, 1611, 1614, 1619, 1713, 1745, 1749, 1750, 1754, 1760, 1761, 1792, 1812, 1823, 1835, 1840, 1844, 1856, 1870, 1871, 1873, 1880, 1881, 1882, 1896, 1898, 1899, 1905, 1909, 1923, 1926, 1933, 1936, 1938, 1940, 1942, 1943, 1946, 1958, 1964, 1966, 1968, 1969], "difficult": [1, 7, 9, 46, 54, 1141, 1872, 1958, 1959, 1965, 1967, 1969], "eas": [1, 57, 1906, 1909, 1913, 1957, 1968], "sequenc": [1, 21, 27, 29, 30, 31, 46, 49, 141, 556, 725, 750, 804, 870, 883, 897, 926, 928, 929, 932, 940, 978, 985, 986, 989, 1057, 1071, 1073, 1141, 1161, 1162, 1165, 1216, 1256, 1302, 1342, 1352, 1357, 1362, 1371, 1378, 1386, 1404, 1440, 1449, 1462, 1477, 1478, 1479, 1480, 1481, 1525, 1583, 1629, 1632, 1639, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1668, 1671, 1675, 1690, 1729, 1731, 1735, 1758, 1817, 1820, 1859, 1872, 1874, 1877, 1881, 1882, 1883, 1888, 1899, 1907, 1911, 1923, 1925, 1928, 1929, 1936, 1946, 1947, 1954, 1956, 1957, 1959, 1968, 1969], "gener": [1, 2, 3, 7, 8, 14, 21, 22, 25, 27, 31, 35, 36, 43, 46, 49, 50, 51, 58, 60, 63, 66, 75, 144, 145, 164, 249, 277, 368, 411, 444, 471, 598, 670, 899, 912, 942, 944, 1004, 1007, 1015, 1016, 1019, 1020, 1039, 1040, 1042, 1043, 1044, 1072, 1094, 1095, 1130, 1141, 1152, 1157, 1176, 1204, 1210, 1221, 1232, 1237, 1246, 1263, 1264, 1268, 1273, 1293, 1301, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1324, 1370, 1381, 1395, 1477, 1485, 1486, 1498, 1605, 1628, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1661, 1664, 1668, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1710, 1712, 1715, 1729, 1731, 1733, 1734, 1735, 1737, 1759, 1772, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1825, 1841, 1845, 1862, 1864, 1866, 1872, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1892, 1897, 1902, 1904, 1907, 1909, 1911, 1912, 1914, 1915, 1917, 1921, 1923, 1925, 1927, 1928, 1930, 1935, 1936, 1937, 1940, 1943, 1945, 1947, 1949, 1951, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1967, 1968, 1969, 1970], "seq": [1, 595, 750, 929, 941, 1302, 1386, 1404, 1440, 1449, 1477, 1479, 1481, 1656, 1855], "n": [1, 3, 25, 27, 30, 31, 33, 35, 40, 43, 47, 57, 220, 251, 397, 455, 456, 676, 679, 680, 681, 725, 748, 750, 771, 867, 907, 910, 911, 913, 920, 922, 926, 932, 933, 934, 935, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 1053, 1054, 1064, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1133, 1136, 1141, 1153, 1157, 1158, 1162, 1197, 1200, 1212, 1216, 1217, 1220, 1221, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1273, 1281, 1290, 1295, 1297, 1302, 1305, 1326, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1385, 1386, 1387, 1388, 1389, 1394, 1395, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1416, 1417, 1418, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1443, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1465, 1467, 1468, 1469, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1504, 1516, 1517, 1525, 1529, 1533, 1568, 1571, 1573, 1583, 1614, 1627, 1638, 1647, 1666, 1710, 1711, 1712, 1717, 1722, 1723, 1729, 1735, 1737, 1750, 1758, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1801, 1802, 1818, 1819, 1820, 1824, 1825, 1840, 1841, 1846, 1850, 1852, 1866, 1867, 1868, 1869, 1872, 1882, 1884, 1888, 1897, 1898, 1902, 1904, 1907, 1909, 1911, 1912, 1917, 1928, 1930, 1931, 1932, 1940, 1941, 1945, 1946, 1947, 1959, 1962, 1964], "counter": [1, 25, 1011, 1029, 1175, 1371, 1894, 1896, 1904], "increment": [1, 25, 42, 46, 1126, 1162, 1204, 1371, 1881, 1883, 1904, 1923, 1936], "stash": [1, 5, 1907, 1909, 1929], "associ": [1, 8, 9, 25, 27, 36, 46, 47, 885, 942, 981, 1032, 1034, 1161, 1162, 1200, 1250, 1261, 1263, 1272, 1357, 1434, 1444, 1517, 1614, 1628, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1780, 1782, 1881, 1884, 1890, 1897, 1898, 1904, 1912, 1915, 1918, 1920, 1923, 1928, 1929, 1930, 1936, 1937, 1942, 1943, 1946, 1958, 1959, 1962, 1969, 1971], "tell": [1, 7, 57, 486, 1201, 1208, 1272, 1675, 1881, 1891, 1904, 1909, 1910, 1928, 1956, 1971], "top": [1, 3, 7, 8, 12, 21, 27, 30, 31, 35, 47, 49, 53, 57, 737, 907, 1350, 1351, 1370, 1394, 1401, 1425, 1441, 1483, 1486, 1533, 1634, 1638, 1640, 1787, 1843, 1863, 1885, 1888, 1891, 1896, 1909, 1923, 1927, 1956, 1966, 1967], "m": [1, 4, 8, 22, 25, 30, 31, 39, 43, 46, 57, 676, 679, 680, 681, 710, 718, 719, 728, 729, 730, 731, 732, 733, 735, 736, 746, 748, 754, 804, 850, 851, 852, 910, 922, 926, 930, 1085, 1139, 1162, 1198, 1200, 1205, 1207, 1211, 1212, 1218, 1221, 1232, 1240, 1246, 1247, 1248, 1249, 1253, 1254, 1255, 1257, 1258, 1259, 1264, 1265, 1266, 1267, 1273, 1290, 1291, 1295, 1305, 1324, 1326, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1382, 1383, 1384, 1385, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1402, 1403, 1420, 1421, 1423, 1424, 1427, 1428, 1429, 1433, 1434, 1441, 1442, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1571, 1573, 1614, 1627, 1632, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1660, 1661, 1664, 1710, 1711, 1712, 1722, 1729, 1758, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1801, 1802, 1820, 1824, 1825, 1841, 1848, 1881, 1882, 1883, 1884, 1907, 1909, 1911, 1912, 1915, 1917, 1920, 1931, 1940, 1950, 1951, 1953, 1959], "By": [1, 2, 3, 5, 14, 21, 25, 30, 34, 39, 46, 49, 57, 435, 436, 437, 438, 439, 870, 942, 962, 978, 1021, 1023, 1055, 1067, 1090, 1092, 1093, 1094, 1095, 1103, 1104, 1105, 1131, 1132, 1134, 1135, 1141, 1153, 1161, 1162, 1204, 1253, 1264, 1272, 1301, 1306, 1328, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1388, 1394, 1397, 1398, 1399, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1473, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1664, 1712, 1723, 1744, 1799, 1846, 1872, 1879, 1883, 1888, 1891, 1904, 1907, 1909, 1911, 1915, 1917, 1918, 1920, 1923, 1925, 1927, 1935, 1936, 1940, 1947, 1956, 1959, 1963, 1965, 1969], "compar": [1, 3, 5, 14, 21, 46, 49, 57, 76, 684, 855, 866, 897, 1029, 1076, 1077, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1118, 1119, 1144, 1156, 1175, 1189, 1225, 1289, 1299, 1304, 1335, 1440, 1614, 1665, 1768, 1857, 1884, 1894, 1907, 1909, 1912, 1918, 1921, 1931, 1932, 1936, 1940, 1945, 1947, 1949, 1950, 1954, 1960, 1966], "down": [1, 7, 14, 21, 31, 33, 40, 41, 43, 57, 769, 1029, 1067, 1114, 1120, 1210, 1246, 1544, 1723, 1751, 1909, 1914, 1917, 1925, 1936, 1938, 1940, 1945, 1963, 1969], "irrelev": [1, 3, 1885], "hand": [1, 4, 25, 49, 54, 57, 935, 1066, 1072, 1198, 1245, 1250, 1261, 1263, 1346, 1444, 1462, 1848, 1861, 1881, 1883, 1884, 1904, 1912, 1915, 1917, 1920, 1928, 1940, 1958, 1962], "underwai": [1, 1013, 1907], "up": [1, 6, 7, 8, 9, 14, 21, 22, 25, 29, 31, 33, 35, 39, 41, 42, 44, 45, 49, 52, 57, 769, 775, 880, 942, 1015, 1016, 1018, 1055, 1072, 1101, 1102, 1107, 1109, 1114, 1130, 1191, 1204, 1210, 1213, 1214, 1259, 1342, 1357, 1381, 1440, 1479, 1481, 1485, 1486, 1498, 1524, 1533, 1544, 1602, 1614, 1621, 1693, 1729, 1751, 1857, 1858, 1879, 1881, 1883, 1891, 1894, 1896, 1897, 1898, 1904, 1905, 1906, 1907, 1911, 1912, 1913, 1915, 1918, 1925, 1928, 1930, 1931, 1936, 1937, 1947, 1954, 1956, 1958, 1962, 1965, 1967, 1969, 1971], "nonzero": [1, 49, 1197, 1282, 1284, 1285, 1290, 1875, 1882, 1888, 1926, 1957, 1958, 1964], "origin": [1, 5, 11, 12, 18, 21, 22, 25, 27, 35, 46, 47, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 197, 200, 212, 476, 535, 593, 597, 607, 670, 750, 787, 828, 829, 844, 847, 848, 927, 932, 976, 1092, 1093, 1095, 1099, 1103, 1104, 1105, 1111, 1129, 1139, 1174, 1197, 1208, 1212, 1213, 1216, 1217, 1294, 1308, 1342, 1346, 1358, 1370, 1371, 1386, 1463, 1473, 1516, 1586, 1621, 1627, 1628, 1629, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1653, 1656, 1659, 1661, 1662, 1664, 1674, 1689, 1704, 1713, 1749, 1760, 1796, 1812, 1846, 1857, 1858, 1881, 1884, 1890, 1896, 1898, 1904, 1907, 1909, 1911, 1914, 1917, 1918, 1920, 1925, 1928, 1929, 1931, 1932, 1940, 1942, 1949, 1950, 1955, 1956, 1958, 1959, 1960, 1962, 1963, 1968, 1969, 1970], "did": [1, 7, 8, 25, 42, 1331, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1883, 1884, 1912, 1920, 1928, 1961, 1962, 1971], "relationship": [1, 9, 39, 57, 939, 1153, 1483, 1904, 1907, 1920, 1928, 1958, 1962], "conceptu": [1, 3, 1904, 1910, 1938, 1956], "tag": [1, 3, 7, 25, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 949, 1272, 1879, 1880, 1888, 1914, 1920, 1928, 1945], "eventu": [1, 7, 42, 49, 1879, 1929, 1958], "itt": [1, 1930], "intel": [1, 4, 1880, 1921, 1966], "r": [1, 31, 55, 141, 879, 881, 883, 897, 898, 930, 941, 958, 1072, 1131, 1133, 1136, 1141, 1142, 1145, 1153, 1212, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1250, 1252, 1259, 1261, 1263, 1264, 1273, 1377, 1378, 1387, 1446, 1447, 1465, 1524, 1525, 1574, 1575, 1627, 1691, 1722, 1872, 1881, 1882, 1883, 1904, 1906, 1909, 1912, 1921, 1940, 1943, 1945, 1962, 1969], "instrument": [1, 3, 22, 1316, 1880, 1914, 1950], "technologi": [1, 46, 1880, 1923, 1924, 1951], "applic": [1, 2, 9, 31, 42, 478, 789, 800, 801, 802, 803, 889, 942, 997, 1135, 1311, 1370, 1371, 1479, 1481, 1516, 1614, 1861, 1880, 1891, 1899, 1904, 1906, 1907, 1908, 1909, 1913, 1914, 1915, 1919, 1925, 1927, 1931, 1936, 1937, 1938, 1940, 1946, 1959, 1971], "across": [1, 8, 14, 21, 22, 25, 27, 29, 33, 43, 49, 54, 57, 607, 725, 809, 864, 908, 989, 1028, 1029, 1072, 1086, 1141, 1211, 1216, 1302, 1351, 1371, 1381, 1422, 1440, 1442, 1473, 1485, 1503, 1506, 1535, 1551, 1598, 1614, 1639, 1643, 1667, 1754, 1872, 1880, 1881, 1894, 1897, 1899, 1904, 1908, 1911, 1914, 1915, 1917, 1918, 1919, 1927, 1929, 1932, 1936, 1937, 1942, 1945, 1950, 1954, 1957, 1959, 1962, 1969], "tool": [1, 4, 8, 9, 18, 25, 43, 47, 57, 851, 906, 1316, 1799, 1879, 1880, 1881, 1883, 1906, 1907, 1921, 1925, 1928, 1930, 1950, 1956, 1959, 1963, 1967, 1969, 1971], "With": [1, 18, 21, 25, 31, 49, 56, 729, 730, 731, 732, 733, 775, 1029, 1093, 1094, 1095, 1103, 1104, 1105, 1217, 1352, 1353, 1354, 1363, 1364, 1366, 1367, 1380, 1397, 1398, 1399, 1473, 1484, 1486, 1509, 1512, 1544, 1569, 1602, 1690, 1733, 1885, 1904, 1907, 1909, 1931, 1936, 1940, 1945, 1953, 1960, 1962, 1966, 1969], "abl": [1, 2, 7, 8, 18, 25, 27, 42, 46, 54, 1130, 1198, 1211, 1477, 1614, 1881, 1897, 1904, 1909, 1910, 1920, 1925, 1928, 1931, 1936, 1940, 1947, 1955, 1957, 1958, 1959, 1960, 1965, 1969, 1971], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 15, 326, 731, 732, 733, 887, 897, 1141, 1729, 1872, 1904, 1907, 1908, 1909, 1922, 1923, 1936, 1937, 1951, 1959], "traceback": [1, 18, 35, 43, 56, 57, 1175, 1185, 1799, 1883, 1884, 1885, 1896, 1899, 1909, 1919, 1940, 1947, 1969, 1971], "fail": [1, 7, 25, 27, 31, 33, 34, 35, 40, 41, 42, 43, 45, 46, 56, 57, 58, 63, 66, 75, 898, 899, 976, 1029, 1201, 1208, 1211, 1230, 1259, 1264, 1272, 1273, 1290, 1673, 1884, 1886, 1896, 1904, 1907, 1909, 1917, 1918, 1921, 1925, 1928, 1936, 1955, 1956, 1957, 1959, 1960, 1962, 1969, 1971], "debug": [1, 2, 4, 5, 8, 21, 39, 46, 70, 72, 670, 817, 818, 822, 833, 898, 899, 942, 944, 949, 973, 1006, 1046, 1148, 1230, 1608, 1609, 1610, 1611, 1765, 1773, 1880, 1883, 1890, 1904, 1906, 1907, 1908, 1913, 1914, 1915, 1919, 1921, 1923, 1925, 1928, 1949, 1956, 1957, 1960, 1961, 1965, 1971], "test": [1, 3, 14, 18, 25, 40, 42, 43, 57, 58, 65, 66, 683, 689, 942, 1089, 1091, 1092, 1097, 1098, 1103, 1104, 1105, 1107, 1109, 1186, 1187, 1191, 1192, 1194, 1195, 1674, 1788, 1880, 1881, 1885, 1894, 1896, 1904, 1912, 1919, 1925, 1927, 1945, 1950, 1958, 1969, 1970], "slow": [1, 898, 1210, 1214, 1230, 1231, 1619, 1620, 1660, 1857, 1912, 1917, 1945, 1957, 1958], "import": [1, 2, 3, 5, 7, 9, 12, 14, 17, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 34, 36, 39, 40, 44, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 212, 670, 724, 731, 732, 733, 762, 763, 764, 782, 850, 851, 852, 901, 903, 921, 928, 962, 1123, 1126, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1139, 1175, 1197, 1198, 1201, 1203, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1216, 1217, 1218, 1252, 1253, 1256, 1257, 1270, 1302, 1400, 1434, 1614, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1655, 1656, 1657, 1658, 1659, 1660, 1667, 1692, 1693, 1716, 1859, 1881, 1883, 1884, 1885, 1888, 1894, 1896, 1899, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1917, 1918, 1919, 1920, 1923, 1924, 1925, 1931, 1934, 1936, 1937, 1938, 1940, 1943, 1945, 1946, 1947, 1950, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1967, 1968, 1969, 1970], "myfunc": [1, 1910], "inp": [1, 12, 21, 25, 57, 884, 885, 886, 1485, 1614, 1964, 1967, 1970], "clone": [1, 15, 21, 49, 58, 245, 438, 887, 890, 901, 903, 904, 924, 1204, 1377, 1601, 1839, 1848, 1882, 1896, 1899, 1920, 1926, 1930, 1940, 1942, 1943, 1947, 1954, 1964], "run_fn": [1, 5, 847, 853], "last": [1, 5, 6, 11, 21, 22, 26, 29, 31, 42, 47, 56, 57, 306, 607, 682, 750, 867, 911, 920, 926, 936, 1015, 1055, 1060, 1064, 1089, 1091, 1094, 1095, 1097, 1098, 1101, 1102, 1104, 1105, 1107, 1109, 1111, 1157, 1158, 1162, 1175, 1177, 1185, 1197, 1222, 1256, 1259, 1264, 1301, 1306, 1342, 1355, 1370, 1378, 1380, 1386, 1404, 1406, 1421, 1441, 1444, 1448, 1449, 1462, 1478, 1479, 1485, 1504, 1525, 1534, 1547, 1570, 1571, 1614, 1615, 1621, 1666, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1749, 1758, 1766, 1796, 1799, 1806, 1807, 1808, 1810, 1811, 1812, 1820, 1824, 1841, 1843, 1846, 1870, 1871, 1883, 1884, 1894, 1897, 1899, 1904, 1907, 1909, 1912, 1919, 1925, 1928, 1929, 1940, 1946, 1947, 1955, 1963, 1969], "stdin": [1, 1175, 1799, 1899, 1909, 1919, 1940], "instal": [1, 3, 14, 15, 25, 57, 1879, 1915, 1916, 1923, 1924, 1925, 1928, 1936, 1945, 1955, 1956, 1957, 1962, 1965], "_tensor": [1, 145], "py": [1, 4, 14, 18, 25, 29, 31, 34, 41, 43, 47, 49, 57, 77, 850, 1614, 1879, 1881, 1884, 1890, 1908, 1912, 1914, 1917, 1925, 1928, 1931, 1937, 1953, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1966, 1968, 1969, 1971], "93": [1, 607], "retain_graph": [1, 141, 883, 897, 903, 904, 1141, 1872, 1882, 1903, 1904, 1909, 1936], "90": [1, 1056, 1708, 1750], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 14, 25, 40, 42, 1879, 1907, 1930, 1963], "53": [1, 471], "44": [1, 312, 435, 1075, 1349, 1429, 1660, 1956], "set_detect_anomali": 1, "behaviour": [1, 683, 684, 689, 1533, 1571, 1704, 1773, 1879, 1918], "interpos": [1, 1909], "grad_fn": [1, 141, 326, 478, 870, 883, 891, 892, 893, 894, 895, 896, 901, 903, 904, 1129, 1628, 1801, 1904, 1909, 1915, 1920], "node": [1, 25, 29, 33, 35, 41, 42, 46, 49, 57, 58, 66, 70, 73, 670, 809, 810, 811, 814, 815, 816, 1018, 1139, 1215, 1357, 1371, 1614, 1674, 1892, 1907, 1923, 1925, 1928, 1929, 1936, 1937, 1938, 1948, 1950, 1957, 1958, 1959, 1966, 1968, 1969], "grad_mod": [1, 1882], "least": [1, 5, 6, 8, 22, 27, 31, 41, 42, 49, 251, 393, 687, 913, 1060, 1062, 1063, 1072, 1113, 1114, 1124, 1153, 1161, 1162, 1197, 1223, 1246, 1273, 1295, 1328, 1342, 1614, 1654, 1879, 1884, 1898, 1902, 1904, 1905, 1907, 1911, 1929, 1932, 1938, 1940, 1941, 1942, 1947, 1959, 1961, 1969], "intermediari": [1, 14, 31, 889, 1904, 1912], "access": [1, 9, 18, 21, 25, 27, 46, 47, 49, 56, 58, 60, 71, 478, 547, 724, 889, 982, 1200, 1203, 1216, 1263, 1342, 1434, 1605, 1616, 1617, 1628, 1632, 1654, 1664, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1880, 1881, 1882, 1884, 1885, 1888, 1892, 1895, 1896, 1898, 1899, 1904, 1907, 1911, 1912, 1914, 1915, 1923, 1936, 1940, 1943, 1944, 1946, 1954, 1956, 1957, 1958, 1959, 1961, 1965, 1972], "isinst": [1, 21, 31, 57, 901, 903, 904, 1187, 1198, 1882, 1884, 1904, 1909, 1915, 1928, 1940, 1968, 1969], "dir": [1, 1015, 1674, 1879, 1884, 1928], "__call__": [1, 1200, 1434], "__class__": [1, 58, 60], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1885], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1885], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1884], "__ne__": 1, "__new__": [1, 1883, 1885], "__reduce__": [1, 1928], "__reduce_ex__": 1, "__repr__": [1, 3, 1909], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 57, 1882, 1884], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1904], "metadata": [1, 3, 12, 27, 35, 36, 46, 58, 65, 66, 954, 1272, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1754, 1899, 1904, 1909, 1910, 1920, 1923, 1928, 1930, 1936, 1937, 1940, 1945, 1958, 1968], "next_funct": 1, "register_prehook": [1, 1904], "allclos": [1, 54, 55, 57, 898, 899, 1015, 1094, 1095, 1101, 1102, 1130, 1131, 1133, 1134, 1135, 1136, 1140, 1141, 1248, 1250, 1261, 1263, 1266, 1267, 1292, 1632, 1659, 1722, 1872, 1882, 1888, 1910, 1926, 1940], "pack": [1, 29, 728, 729, 730, 731, 732, 733, 735, 736, 750, 771, 1216, 1217, 1292, 1371, 1386, 1404, 1449, 1653, 1654, 1655, 1656, 1882, 1892, 1899, 1904, 1911, 1921, 1931], "unpack": [1, 58, 63, 64, 750, 886, 1216, 1248, 1292, 1371, 1656, 1658, 1665, 1675, 1884, 1885, 1904, 1909, 1911], "hook": [1, 26, 29, 30, 49, 477, 478, 738, 747, 889, 903, 904, 1018, 1200, 1371, 1434, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1661, 1664, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1880, 1900, 1908, 1909, 1914, 1922, 1923, 1928, 1931, 1956, 1958, 1959, 1960, 1962], "common": [1, 3, 8, 21, 33, 42, 54, 58, 72, 77, 675, 783, 855, 915, 918, 923, 957, 1067, 1072, 1117, 1118, 1119, 1120, 1143, 1223, 1272, 1323, 1352, 1353, 1354, 1357, 1473, 1515, 1606, 1607, 1609, 1610, 1611, 1612, 1613, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1742, 1754, 1821, 1864, 1880, 1884, 1889, 1898, 1904, 1907, 1909, 1910, 1911, 1915, 1917, 1920, 1925, 1928, 1940, 1941, 1944, 1947, 1957, 1959, 1962, 1965, 1967, 1968, 1969, 1971], "trade": [1, 5, 8, 49, 1264, 1351, 1766, 1906, 1911, 1932], "leav": [1, 8, 33, 43, 141, 883, 1205, 1218, 1630, 1633, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1815, 1881, 1883, 1884, 1904, 1907, 1923, 1928, 1932, 1962], "especi": [1, 9, 11, 21, 25, 47, 57, 245, 924, 942, 950, 1601, 1883, 1904, 1909, 1910, 1918, 1920, 1931, 1936, 1940, 1954, 1958, 1959, 1961, 1962], "notic": [1, 12, 25, 47, 679, 1092, 1106, 1295, 1305, 1350, 1486, 1550, 1695, 1696, 1701, 1702, 1708, 1857, 1880, 1881, 1904, 1940, 1959, 1963, 1965, 1967], "fit": [1, 9, 34, 53, 54, 489, 907, 1197, 1682, 1744, 1907, 1923, 1929, 1947, 1969], "evalu": [1, 4, 8, 9, 29, 31, 46, 52, 57, 683, 689, 788, 853, 898, 1029, 1136, 1137, 1200, 1342, 1346, 1352, 1353, 1354, 1372, 1389, 1397, 1398, 1399, 1406, 1434, 1448, 1452, 1473, 1576, 1598, 1630, 1682, 1698, 1729, 1884, 1885, 1909, 1915, 1922, 1923, 1940, 1948, 1951, 1956, 1957, 1958], "saved_tensors_hook": [1, 889, 1904], "pack_hook": [1, 1904], "unpack_hook": [1, 1904], "pair": [1, 25, 27, 30, 31, 42, 44, 607, 725, 855, 930, 962, 1106, 1214, 1264, 1302, 1426, 1435, 1440, 1444, 1573, 1691, 1738, 1883, 1884, 1890, 1897, 1904, 1907, 1929, 1936, 1937, 1938, 1945, 1947, 1950, 1959], "retriev": [1, 21, 22, 25, 29, 33, 42, 57, 527, 879, 880, 1377, 1381, 1485, 1524, 1614, 1654, 1674, 1799, 1899, 1904, 1914, 1925, 1928, 1929, 1936, 1937, 1938, 1956, 1962, 1971], "everytim": 1, "store": [1, 3, 5, 14, 18, 22, 27, 33, 43, 46, 47, 49, 57, 317, 323, 389, 676, 812, 815, 880, 922, 985, 987, 989, 1145, 1200, 1206, 1208, 1211, 1231, 1242, 1243, 1244, 1273, 1278, 1290, 1352, 1353, 1354, 1377, 1434, 1462, 1614, 1627, 1629, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1653, 1804, 1879, 1880, 1881, 1898, 1899, 1900, 1908, 1909, 1910, 1911, 1914, 1923, 1928, 1931, 1936, 1937, 1938, 1940, 1942, 1945, 1946, 1950, 1956, 1958, 1961, 1962], "content": [1, 3, 7, 27, 35, 46, 47, 57, 889, 1208, 1211, 1231, 1242, 1244, 1249, 1262, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1815, 1845, 1879, 1884, 1893, 1896, 1904, 1917, 1936, 1944, 1945, 1946, 1965, 1969], "equal": [1, 12, 22, 25, 31, 42, 43, 44, 46, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 251, 489, 535, 607, 670, 684, 685, 686, 729, 730, 731, 732, 733, 750, 758, 759, 810, 811, 812, 815, 851, 866, 911, 918, 920, 931, 932, 951, 962, 987, 989, 1042, 1061, 1077, 1116, 1131, 1132, 1144, 1157, 1158, 1160, 1161, 1162, 1185, 1189, 1225, 1246, 1259, 1263, 1266, 1267, 1290, 1291, 1302, 1319, 1335, 1339, 1340, 1341, 1343, 1344, 1345, 1350, 1351, 1357, 1363, 1364, 1366, 1367, 1371, 1378, 1381, 1382, 1383, 1386, 1388, 1404, 1439, 1440, 1448, 1449, 1485, 1501, 1502, 1506, 1509, 1512, 1524, 1525, 1528, 1529, 1535, 1614, 1654, 1657, 1710, 1723, 1780, 1781, 1786, 1812, 1820, 1840, 1856, 1862, 1875, 1882, 1885, 1891, 1897, 1898, 1899, 1904, 1905, 1912, 1918, 1926, 1927, 1929, 1941, 1945, 1947, 1968], "term": [1, 8, 9, 31, 42, 47, 57, 548, 724, 753, 782, 932, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1103, 1104, 1105, 1108, 1120, 1232, 1342, 1350, 1388, 1395, 1404, 1405, 1439, 1448, 1465, 1530, 1542, 1576, 1587, 1614, 1627, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1742, 1787, 1880, 1884, 1903, 1904, 1909, 1910, 1911, 1912, 1917, 1925, 1928, 1931, 1937, 1940, 1951, 1957, 1959], "mulbackward0": [1, 892, 895, 896, 1909], "inplac": [1, 46, 52, 54, 57, 58, 65, 66, 745, 748, 766, 768, 770, 781, 787, 804, 828, 829, 830, 847, 848, 853, 887, 1130, 1200, 1346, 1356, 1372, 1373, 1374, 1375, 1376, 1379, 1391, 1392, 1393, 1420, 1433, 1434, 1452, 1453, 1454, 1461, 1463, 1476, 1499, 1507, 1518, 1519, 1520, 1521, 1522, 1526, 1537, 1538, 1539, 1548, 1563, 1578, 1579, 1581, 1584, 1586, 1596, 1608, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1861, 1882, 1891, 1904, 1909, 1925, 1950, 1964, 1968], "lead": [1, 5, 7, 20, 25, 32, 47, 49, 55, 57, 887, 891, 893, 897, 899, 944, 1123, 1141, 1231, 1404, 1449, 1465, 1809, 1815, 1872, 1884, 1898, 1899, 1904, 1906, 1908, 1909, 1910, 1917, 1918, 1921, 1927, 1928, 1931, 1936, 1940, 1945, 1946, 1954, 1959, 1960], "undefin": [1, 25, 32, 35, 49, 310, 461, 607, 868, 890, 898, 899, 918, 926, 1075, 1125, 1126, 1350, 1673, 1716, 1904, 1907, 1909, 1910, 1919, 1936], "recurs": [1, 31, 46, 49, 57, 944, 948, 1064, 1200, 1212, 1214, 1434, 1621, 1696, 1883, 1909, 1915, 1928, 1936, 1956, 1959, 1960, 1962], "inner": [1, 3, 49, 50, 55, 805, 807, 891, 1055, 1131, 1135, 1140, 1846, 1882, 1909, 1926, 1936, 1950], "save_on_cpu": 1, "pin_memori": [1, 21, 58, 63, 66, 67, 68, 435, 436, 437, 438, 439, 1073, 1075, 1124, 1731, 1735, 1737, 1839, 1881, 1882, 1899, 1907, 1909, 1926, 1942, 1964], "within": [1, 5, 9, 12, 21, 22, 25, 29, 30, 31, 42, 43, 44, 46, 47, 49, 56, 57, 70, 71, 79, 478, 868, 898, 899, 942, 954, 979, 1055, 1200, 1204, 1293, 1347, 1348, 1349, 1357, 1373, 1374, 1375, 1379, 1381, 1427, 1428, 1429, 1434, 1440, 1473, 1485, 1533, 1557, 1558, 1559, 1614, 1630, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1648, 1649, 1650, 1727, 1728, 1758, 1780, 1860, 1864, 1881, 1883, 1884, 1894, 1899, 1902, 1906, 1907, 1909, 1913, 1914, 1915, 1918, 1925, 1927, 1928, 1931, 1934, 1935, 1936, 1937, 1945, 1957, 1959, 1961, 1968, 1969], "move": [1, 5, 7, 8, 9, 14, 25, 27, 49, 57, 514, 579, 811, 1092, 1200, 1208, 1267, 1272, 1308, 1352, 1353, 1354, 1407, 1408, 1409, 1434, 1473, 1571, 1616, 1617, 1690, 1883, 1892, 1893, 1896, 1898, 1907, 1910, 1911, 1915, 1916, 1917, 1920, 1927, 1928, 1929, 1931, 1936, 1942, 1947, 1959, 1962, 1969], "copi": [1, 7, 11, 21, 22, 25, 27, 33, 40, 46, 49, 53, 54, 57, 181, 187, 197, 200, 306, 393, 438, 448, 453, 461, 483, 489, 570, 571, 572, 573, 593, 607, 782, 804, 828, 829, 869, 870, 885, 931, 939, 942, 985, 986, 1111, 1112, 1113, 1114, 1116, 1130, 1200, 1212, 1272, 1273, 1334, 1371, 1381, 1434, 1444, 1485, 1614, 1653, 1663, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1739, 1745, 1751, 1839, 1848, 1854, 1881, 1882, 1896, 1899, 1904, 1905, 1907, 1909, 1917, 1926, 1928, 1929, 1930, 1931, 1936, 1940, 1942, 1943, 1944, 1946, 1950, 1958, 1959, 1961, 1964, 1968], "pin": [1, 200, 328, 435, 436, 437, 438, 439, 453, 570, 593, 1073, 1075, 1124, 1200, 1434, 1653, 1731, 1735, 1737, 1839, 1880, 1899, 1942], "asynchron": [1, 3, 4, 56, 187, 200, 570, 593, 998, 1200, 1203, 1219, 1434, 1880, 1885, 1906, 1908, 1936, 1942, 1945, 1967], "prod_1": 1, "prod_2": 1, "del": [1, 1885, 1896, 1909, 1911], "illustr": [1, 1884, 1903, 1909, 1940, 1954, 1962, 1963], "aliv": [1, 5, 21, 33, 42, 976, 1904, 1907, 1911, 1917, 1936, 1937, 1938], "live": [1, 29, 1015, 1018, 1200, 1434, 1881, 1907, 1911, 1936, 1938, 1954, 1958, 1971], "releas": [1, 7, 20, 25, 42, 44, 53, 57, 503, 677, 932, 933, 972, 973, 974, 980, 997, 1007, 1008, 1011, 1015, 1016, 1018, 1029, 1146, 1197, 1200, 1231, 1242, 1244, 1245, 1246, 1249, 1262, 1290, 1291, 1311, 1374, 1404, 1434, 1449, 1557, 1558, 1559, 1667, 1722, 1738, 1754, 1820, 1824, 1848, 1879, 1880, 1883, 1894, 1896, 1904, 1906, 1907, 1913, 1918, 1919, 1920, 1921, 1925, 1931, 1936, 1946, 1947, 1959, 1969], "delet": [1, 25, 57, 884, 973, 981, 1879, 1892, 1896, 1904, 1926, 1935, 1936, 1938, 1968], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 12, 15, 18, 25, 27, 29, 43, 46, 49, 50, 56, 58, 72, 670, 679, 750, 758, 759, 891, 893, 897, 954, 1046, 1212, 1295, 1305, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1352, 1367, 1372, 1373, 1374, 1375, 1379, 1382, 1383, 1386, 1387, 1397, 1404, 1405, 1440, 1449, 1451, 1468, 1477, 1479, 1481, 1482, 1483, 1484, 1501, 1502, 1519, 1520, 1521, 1526, 1528, 1529, 1550, 1614, 1712, 1861, 1880, 1881, 1883, 1884, 1885, 1890, 1898, 1899, 1904, 1909, 1911, 1912, 1919, 1922, 1925, 1930, 1931, 1936, 1940, 1945, 1948, 1951, 1960, 1961], "messag": [1, 2, 5, 18, 25, 35, 44, 46, 54, 57, 58, 59, 74, 75, 614, 670, 1032, 1034, 1230, 1231, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1879, 1881, 1882, 1884, 1885, 1890, 1911, 1923, 1925, 1929, 1930, 1936, 1938, 1947, 1961, 1969], "get": [1, 8, 12, 14, 21, 25, 26, 27, 30, 42, 43, 44, 45, 46, 49, 54, 56, 57, 79, 141, 326, 676, 724, 778, 779, 851, 852, 883, 886, 926, 1000, 1001, 1002, 1019, 1059, 1130, 1133, 1134, 1135, 1147, 1175, 1216, 1268, 1377, 1378, 1402, 1403, 1430, 1431, 1432, 1444, 1461, 1614, 1615, 1628, 1654, 1661, 1743, 1758, 1864, 1879, 1880, 1881, 1884, 1894, 1896, 1897, 1904, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1920, 1923, 1926, 1928, 1931, 1936, 1938, 1940, 1944, 1945, 1946, 1954, 1956, 1957, 1958, 1962, 1963, 1969, 1970], "register_multi_grad_hook": [1, 1904], "fn": [1, 33, 34, 35, 39, 44, 46, 49, 57, 903, 904, 944, 945, 948, 1131, 1137, 1141, 1200, 1201, 1213, 1218, 1434, 1872, 1881, 1883, 1884, 1888, 1896, 1904, 1914, 1936, 1955, 1959, 1960, 1961, 1962, 1967, 1968, 1969], "multi": [1, 4, 33, 42, 750, 976, 1019, 1039, 1072, 1092, 1162, 1200, 1351, 1371, 1386, 1404, 1434, 1437, 1438, 1439, 1440, 1449, 1477, 1479, 1486, 1506, 1614, 1880, 1881, 1884, 1904, 1906, 1907, 1915, 1919, 1927, 1936, 1940, 1943, 1946, 1948], "specifi": [1, 2, 3, 5, 8, 12, 14, 21, 22, 25, 27, 29, 30, 31, 33, 35, 40, 41, 42, 43, 46, 47, 49, 57, 88, 141, 186, 250, 310, 322, 461, 471, 483, 487, 489, 490, 503, 505, 507, 527, 535, 536, 550, 570, 573, 574, 575, 577, 578, 593, 670, 725, 731, 732, 733, 758, 759, 783, 784, 785, 789, 804, 813, 816, 830, 844, 848, 849, 851, 868, 870, 882, 883, 897, 913, 936, 942, 961, 962, 973, 975, 976, 985, 986, 987, 989, 1004, 1007, 1018, 1043, 1053, 1054, 1055, 1059, 1060, 1062, 1072, 1075, 1086, 1089, 1091, 1092, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1107, 1109, 1131, 1132, 1135, 1141, 1142, 1153, 1161, 1162, 1197, 1200, 1204, 1216, 1217, 1243, 1253, 1255, 1257, 1258, 1267, 1270, 1272, 1273, 1283, 1300, 1302, 1308, 1328, 1329, 1332, 1348, 1349, 1350, 1351, 1357, 1366, 1368, 1370, 1371, 1377, 1378, 1381, 1388, 1394, 1395, 1400, 1401, 1404, 1425, 1426, 1431, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1465, 1466, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1501, 1502, 1505, 1506, 1516, 1517, 1524, 1525, 1530, 1533, 1545, 1552, 1568, 1569, 1576, 1583, 1589, 1590, 1614, 1620, 1621, 1627, 1628, 1631, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1664, 1667, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1689, 1690, 1691, 1692, 1693, 1698, 1703, 1704, 1712, 1720, 1729, 1745, 1750, 1751, 1754, 1771, 1798, 1800, 1802, 1803, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1818, 1819, 1820, 1823, 1840, 1842, 1846, 1856, 1857, 1858, 1859, 1860, 1864, 1866, 1867, 1868, 1872, 1879, 1881, 1883, 1884, 1888, 1890, 1891, 1893, 1894, 1897, 1898, 1904, 1907, 1909, 1913, 1915, 1917, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1935, 1936, 1940, 1941, 1942, 1943, 1945, 1947, 1955, 1957, 1968], "ignor": [1, 5, 7, 25, 29, 34, 40, 46, 49, 57, 141, 489, 534, 676, 679, 680, 681, 725, 784, 785, 848, 851, 852, 883, 897, 898, 899, 910, 932, 934, 935, 962, 966, 971, 1019, 1020, 1039, 1040, 1093, 1095, 1103, 1104, 1105, 1145, 1160, 1200, 1212, 1218, 1221, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1292, 1329, 1330, 1331, 1347, 1348, 1349, 1350, 1351, 1368, 1370, 1378, 1386, 1388, 1394, 1400, 1401, 1404, 1425, 1426, 1427, 1428, 1429, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1449, 1465, 1466, 1477, 1482, 1505, 1506, 1516, 1525, 1545, 1568, 1576, 1614, 1667, 1675, 1698, 1706, 1710, 1771, 1802, 1803, 1820, 1824, 1848, 1881, 1884, 1885, 1891, 1898, 1904, 1907, 1909, 1925, 1940, 1947, 1956, 1965, 1968], "rel": [1, 8, 9, 14, 22, 25, 31, 49, 57, 477, 478, 684, 866, 898, 899, 903, 904, 962, 1189, 1255, 1258, 1482, 1483, 1498, 1533, 1675, 1679, 1680, 1706, 1891, 1894, 1906, 1907, 1914, 1925, 1928, 1947, 1962], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 12, 46, 47, 57, 58, 65, 66, 787, 828, 829, 847, 848, 942, 954, 1130, 1204, 1928, 1946, 1958, 1959], "_allowmutationonsavedcontext": 1, "purpos": [1, 22, 25, 57, 78, 461, 489, 750, 898, 1210, 1295, 1357, 1386, 1440, 1608, 1609, 1610, 1611, 1771, 1894, 1899, 1904, 1909, 1928, 1937, 1955, 1959, 1962, 1963, 1969], "clear": [1, 2, 8, 9, 44, 57, 950, 1200, 1434, 1435, 1444, 1674, 1879, 1904, 1907, 1915, 1920, 1926, 1927], "upon": [1, 2, 21, 26, 30, 33, 35, 57, 942, 1614, 1629, 1632, 1857, 1896, 1904, 1907, 1925, 1931, 1938], "sin_": [1, 1882, 1897], "8415": [1, 1909, 1940], "sinbackward0": 1, "gradientedg": [1, 883, 897], "output_nr": [1, 1882, 1926], "edg": [1, 47, 769, 775, 1153, 1161, 1162, 1544, 1602, 1889, 1910, 1937, 1965], "get_gradient_edg": 1, "variou": [2, 5, 14, 21, 25, 46, 57, 1273, 1862, 1864, 1888, 1891, 1896, 1899, 1909, 1915, 1917, 1927, 1931, 1933, 1940, 1951, 1958, 1970], "get_cpu_cap": 2, "capabl": [2, 8, 14, 15, 25, 1000, 1621, 1729, 1907, 1913, 1914, 1916, 1948], "string": [2, 3, 5, 13, 14, 21, 25, 33, 39, 40, 42, 46, 47, 57, 593, 804, 844, 949, 998, 1015, 1016, 1072, 1130, 1200, 1208, 1211, 1272, 1362, 1363, 1364, 1434, 1435, 1444, 1477, 1479, 1481, 1508, 1509, 1510, 1643, 1722, 1754, 1762, 1764, 1863, 1864, 1879, 1882, 1883, 1884, 1885, 1888, 1898, 1904, 1909, 1914, 1915, 1920, 1923, 1925, 1928, 1930, 1936, 1942, 1943, 1945, 1950, 1955, 1959, 1962, 1969, 1970, 1971], "vsx": 2, "z": [2, 3, 10, 31, 49, 54, 58, 61, 65, 66, 607, 810, 867, 889, 933, 951, 1072, 1076, 1302, 1387, 1533, 1632, 1665, 1666, 1716, 1746, 1747, 1881, 1882, 1883, 1898, 1904, 1906, 1907, 1912, 1913, 1923, 1925, 1928, 1934, 1936, 1938, 1954, 1957, 1959, 1968, 1969], "vector": [2, 11, 22, 31, 49, 50, 54, 245, 304, 306, 312, 679, 680, 681, 874, 883, 885, 891, 892, 893, 894, 895, 896, 897, 923, 924, 930, 941, 958, 962, 972, 1053, 1054, 1059, 1061, 1136, 1140, 1141, 1145, 1233, 1240, 1248, 1256, 1257, 1261, 1264, 1268, 1269, 1270, 1290, 1295, 1302, 1324, 1326, 1352, 1353, 1354, 1357, 1371, 1377, 1378, 1381, 1389, 1397, 1398, 1399, 1443, 1473, 1482, 1485, 1524, 1525, 1533, 1535, 1569, 1573, 1601, 1619, 1626, 1628, 1632, 1663, 1667, 1711, 1712, 1804, 1824, 1866, 1869, 1872, 1900, 1904, 1912, 1931, 1940, 1945, 1961], "NO": [2, 76, 78], "avx": [2, 1953], "avx2": [2, 1931, 1953], "avx512": [2, 1953], "is_built": [2, 1916], "built": [2, 3, 7, 8, 14, 22, 25, 30, 35, 52, 57, 943, 998, 1210, 1483, 1698, 1880, 1888, 1899, 1904, 1906, 1907, 1909, 1913, 1915, 1916, 1917, 1931, 1933, 1955, 1956, 1962, 1969, 1970], "necessarili": [2, 22, 25, 31, 33, 42, 46, 75, 461, 898, 1237, 1259, 1270, 1301, 1370, 1441, 1621, 1907, 1909], "machin": [2, 25, 33, 42, 49, 50, 55, 1204, 1210, 1246, 1470, 1913, 1914, 1915, 1916, 1917, 1919, 1922, 1923, 1928, 1935, 1936, 1937, 1951, 1953, 1961], "driver": [2, 1145, 1246, 1264, 1265, 1310, 1882, 1907, 1918, 1936, 1967, 1969], "would": [2, 3, 5, 8, 9, 11, 14, 21, 25, 31, 33, 35, 42, 43, 46, 47, 49, 51, 54, 57, 141, 435, 436, 437, 438, 439, 688, 750, 784, 844, 883, 887, 897, 932, 1073, 1075, 1093, 1124, 1134, 1135, 1198, 1200, 1201, 1205, 1208, 1216, 1217, 1315, 1316, 1347, 1348, 1349, 1350, 1351, 1386, 1400, 1404, 1427, 1428, 1429, 1434, 1444, 1449, 1533, 1544, 1605, 1614, 1615, 1621, 1653, 1665, 1693, 1731, 1735, 1737, 1748, 1758, 1839, 1840, 1845, 1881, 1883, 1884, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1917, 1920, 1925, 1927, 1928, 1929, 1931, 1936, 1937, 1938, 1940, 1954, 1955, 1957, 1958, 1959, 1961, 1963, 1965, 1968, 1969], "allow_tf32": [2, 1766, 1882, 1907, 1918], "tensorfloat": 2, "core": [2, 3, 7, 8, 46, 53, 71, 942, 967, 1029, 1673, 1884, 1888, 1906, 1907, 1908, 1917, 1918, 1928, 1948, 1957, 1962, 1966], "amper": [2, 1940], "newer": [2, 14, 46, 1035, 1661, 1906, 1907, 1920, 1922, 1927, 1928, 1932, 1961], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1907, 1918], "precis": [2, 3, 8, 11, 14, 22, 31, 49, 676, 679, 898, 899, 910, 922, 1018, 1115, 1149, 1246, 1264, 1270, 1295, 1305, 1347, 1348, 1349, 1351, 1362, 1363, 1364, 1365, 1366, 1367, 1387, 1405, 1421, 1427, 1428, 1429, 1486, 1544, 1583, 1614, 1751, 1766, 1771, 1880, 1884, 1894, 1900, 1904, 1915, 1928, 1931, 1932, 1934, 1941, 1943, 1945, 1946, 1966, 1972], "gemm": [2, 1906, 1925, 1959], "allow_bf16_reduced_precision_reduct": [2, 1907, 1918], "cufft_plan_cach": [2, 1907], "cufft": 2, "queri": [2, 25, 42, 57, 725, 975, 976, 978, 984, 1031, 1035, 1049, 1050, 1200, 1312, 1434, 1440, 1583, 1631, 1882, 1907, 1928, 1957, 1958, 1962], "specif": [2, 3, 7, 8, 9, 14, 25, 27, 29, 30, 31, 33, 40, 42, 44, 46, 49, 54, 57, 58, 70, 72, 77, 79, 503, 844, 851, 907, 978, 1063, 1092, 1162, 1197, 1204, 1210, 1214, 1216, 1217, 1301, 1381, 1406, 1583, 1608, 1609, 1634, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1689, 1690, 1691, 1692, 1693, 1761, 1766, 1801, 1862, 1879, 1881, 1883, 1884, 1886, 1888, 1890, 1894, 1898, 1900, 1904, 1907, 1909, 1913, 1917, 1919, 1923, 1925, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1938, 1945, 1946, 1953, 1957, 1958, 1959, 1961, 1962, 1966, 1968, 1969], "via": [2, 7, 14, 15, 21, 25, 27, 31, 40, 46, 47, 49, 53, 57, 507, 607, 898, 899, 929, 973, 1009, 1029, 1076, 1133, 1273, 1352, 1353, 1354, 1371, 1389, 1397, 1398, 1399, 1406, 1473, 1627, 1661, 1664, 1704, 1881, 1883, 1884, 1888, 1894, 1896, 1899, 1902, 1904, 1907, 1909, 1910, 1911, 1913, 1915, 1917, 1918, 1925, 1928, 1931, 1936, 1937, 1940, 1943, 1944, 1955, 1957, 1958, 1962, 1965, 1970], "readonli": 2, "show": [2, 4, 7, 13, 18, 21, 22, 25, 27, 32, 46, 49, 57, 71, 891, 897, 942, 1123, 1200, 1302, 1434, 1605, 1674, 1879, 1880, 1884, 1897, 1906, 1907, 1908, 1909, 1912, 1913, 1915, 1923, 1925, 1927, 1928, 1936, 1938, 1961, 1963, 1966, 1967, 1969, 1971], "max_siz": [2, 41, 43, 1907], "capac": [2, 1042, 1907, 1917], "preferred_linalg_librari": [2, 1237], "subject": [2, 3, 11, 18, 25, 27, 29, 30, 49, 56, 57, 224, 855, 1583, 1614, 1884, 1897, 1898, 1904, 1909, 1925, 1929, 1930, 1931, 1932, 1936, 1940, 1943, 1948, 1949, 1950, 1957, 1966], "algebra": [2, 9, 1072, 1237, 1258, 1880, 1889], "cusolv": [2, 1264, 1265, 1824], "magma": [2, 1246, 1290, 1722, 1824, 1921, 1940], "decid": [2, 4, 7, 25, 30, 42, 53, 1643, 1891, 1925, 1940, 1958, 1959, 1963], "heurist": [2, 14, 21, 42, 43, 57, 947, 1072, 1954, 1963], "overrid": [2, 5, 14, 22, 25, 26, 31, 35, 43, 49, 54, 57, 782, 783, 844, 880, 882, 1015, 1350, 1351, 1368, 1370, 1394, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1450, 1465, 1466, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1634, 1693, 1754, 1771, 1880, 1884, 1888, 1920, 1927, 1928, 1931, 1936, 1940, 1945, 1950, 1968], "wherev": [2, 9, 1897, 1962], "pick": [2, 25, 41, 43, 503, 942, 1904, 1936, 1956, 1957, 1963], "prefer": [2, 9, 21, 27, 33, 49, 852, 868, 893, 1198, 1241, 1254, 1258, 1266, 1273, 1441, 1583, 1758, 1820, 1839, 1881, 1904, 1907, 1928, 1940, 1959], "environ": [2, 3, 7, 14, 15, 18, 20, 22, 31, 33, 35, 40, 45, 46, 57, 70, 72, 670, 1210, 1216, 1404, 1449, 1861, 1879, 1881, 1890, 1904, 1906, 1908, 1913, 1918, 1919, 1921, 1929, 1936, 1953, 1955, 1959, 1969], "variabl": [2, 3, 5, 12, 14, 18, 20, 22, 31, 33, 35, 40, 45, 47, 49, 54, 57, 58, 61, 65, 66, 70, 72, 438, 670, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 718, 719, 720, 721, 722, 724, 728, 729, 730, 731, 732, 733, 735, 736, 746, 750, 754, 789, 887, 954, 958, 962, 1041, 1073, 1141, 1214, 1216, 1273, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1378, 1386, 1387, 1404, 1405, 1406, 1419, 1421, 1434, 1437, 1442, 1449, 1451, 1614, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1671, 1675, 1677, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1731, 1733, 1735, 1861, 1872, 1877, 1879, 1880, 1890, 1891, 1898, 1899, 1904, 1906, 1908, 1911, 1912, 1918, 1919, 1921, 1923, 1925, 1927, 1931, 1936, 1942, 1945, 1956, 1957, 1959, 1961, 1969], "torch_linalg_prefer_cusolv": 2, "global": [2, 3, 5, 8, 12, 21, 25, 27, 29, 31, 33, 43, 49, 54, 56, 57, 58, 61, 65, 66, 844, 851, 855, 863, 911, 920, 954, 973, 1007, 1024, 1031, 1073, 1075, 1085, 1090, 1108, 1124, 1127, 1130, 1157, 1158, 1181, 1188, 1200, 1203, 1216, 1220, 1271, 1287, 1434, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1639, 1643, 1671, 1731, 1733, 1735, 1738, 1762, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1877, 1881, 1884, 1885, 1900, 1903, 1909, 1914, 1915, 1917, 1919, 1920, 1931, 1936, 1937, 1938, 1940, 1943, 1945, 1956, 1958, 1959, 1960, 1968, 1969], "overridden": [2, 14, 57, 879, 880, 881, 1015, 1434, 1799, 1884, 1904, 1909, 1918, 1929, 1969, 1970], "achiev": [2, 21, 22, 25, 30, 31, 43, 49, 1072, 1137, 1200, 1351, 1357, 1434, 1440, 1441, 1506, 1535, 1614, 1895, 1907, 1914, 1917, 1928, 1936, 1938, 1969], "better": [2, 3, 7, 8, 9, 14, 21, 24, 25, 33, 53, 942, 1041, 1129, 1133, 1134, 1175, 1187, 1216, 1370, 1467, 1589, 1614, 1621, 1704, 1729, 1884, 1903, 1904, 1906, 1907, 1912, 1919, 1921, 1925, 1927, 1930, 1931, 1932, 1940, 1945, 1950, 1955, 1956, 1962, 1966], "select": [2, 5, 15, 19, 21, 25, 31, 33, 47, 304, 306, 308, 312, 750, 932, 964, 966, 970, 979, 980, 984, 991, 992, 993, 994, 996, 1017, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1041, 1042, 1045, 1047, 1049, 1050, 1092, 1273, 1302, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1404, 1449, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1648, 1649, 1761, 1836, 1864, 1875, 1881, 1882, 1884, 1896, 1897, 1898, 1899, 1904, 1906, 1907, 1912, 1919, 1926, 1931, 1940, 1944, 1947, 1956, 1962, 1964, 1966, 1971], "incorrect": [2, 4, 5, 49, 57, 75, 76, 78, 245, 503, 546, 889, 898, 924, 1216, 1259, 1272, 1440, 1477, 1478, 1479, 1480, 1481, 1601, 1667, 1809, 1820, 1881, 1884, 1907, 1918, 1925], "linalg": [2, 397, 932, 933, 934, 935, 972, 1058, 1145, 1178, 1281, 1290, 1291, 1292, 1296, 1297, 1627, 1628, 1632, 1667, 1709, 1714, 1716, 1722, 1793, 1824, 1825, 1848, 1869, 1880], "inv": [2, 31, 1178, 1232, 1236, 1242, 1258, 1262, 1266], "inv_ex": 2, "cholesky_ex": [2, 1230], "lu_factor": [2, 1249, 1250, 1290, 1291, 1292], "lu": [2, 10, 1242, 1248, 1249, 1250, 1291, 1292, 1882], "eigh": [2, 1230, 1236, 1239, 1258, 1264, 1918], "eighval": 2, "svdval": [2, 1232, 1246, 1255, 1264, 1824, 1918], "_linalgbackend": 2, "sdpbackend": 2, "enum": [2, 25, 58, 786, 1909, 1925, 1930, 1931, 1936, 1962], "scale": [2, 7, 21, 31, 33, 41, 43, 88, 463, 465, 607, 675, 679, 680, 681, 728, 729, 730, 731, 732, 733, 734, 739, 740, 741, 742, 743, 744, 745, 746, 749, 760, 762, 763, 764, 765, 767, 770, 771, 785, 789, 792, 809, 810, 811, 812, 815, 910, 1086, 1087, 1090, 1108, 1140, 1141, 1287, 1346, 1372, 1377, 1378, 1379, 1395, 1406, 1461, 1486, 1487, 1488, 1524, 1525, 1526, 1542, 1544, 1583, 1584, 1589, 1677, 1698, 1724, 1725, 1726, 1727, 1728, 1802, 1803, 1821, 1872, 1880, 1882, 1898, 1902, 1907, 1911, 1915, 1923, 1931, 1932, 1934, 1941, 1959], "product": [2, 15, 25, 31, 42, 141, 676, 679, 680, 681, 750, 883, 885, 892, 894, 895, 896, 897, 910, 922, 928, 932, 958, 972, 984, 1031, 1035, 1049, 1050, 1053, 1069, 1072, 1136, 1140, 1141, 1177, 1221, 1233, 1240, 1266, 1267, 1269, 1295, 1302, 1305, 1326, 1386, 1387, 1404, 1405, 1532, 1583, 1627, 1710, 1711, 1720, 1766, 1841, 1856, 1869, 1872, 1880, 1881, 1897, 1904, 1912, 1914, 1918, 1928, 1931, 1940, 1971], "attent": [2, 7, 725, 1351, 1440, 1477, 1479, 1481, 1506, 1583, 1880, 1921, 1944], "stai": [2, 7, 29, 130, 1371, 1621, 1907, 1917, 1931, 1936, 1940], "align": [2, 9, 22, 72, 750, 769, 775, 810, 816, 942, 1072, 1153, 1256, 1349, 1357, 1370, 1386, 1400, 1404, 1428, 1429, 1449, 1486, 1516, 1517, 1544, 1545, 1602, 1627, 1667, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1696, 1846, 1880, 1897, 1904, 1912, 1925, 1934, 1941], "src": [2, 3, 25, 57, 187, 219, 304, 312, 461, 502, 503, 504, 505, 506, 507, 509, 528, 1063, 1130, 1324, 1477, 1480, 1481, 1673, 1755, 1756, 1757, 1761, 1792, 1835, 1861, 1882, 1928, 1964], "transform": [2, 3, 12, 21, 27, 46, 49, 54, 70, 71, 72, 771, 787, 828, 829, 847, 848, 933, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1129, 1130, 1131, 1135, 1140, 1197, 1210, 1355, 1389, 1397, 1398, 1399, 1406, 1421, 1462, 1478, 1479, 1480, 1481, 1498, 1504, 1533, 1550, 1569, 1605, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1787, 1820, 1880, 1910, 1929, 1931, 1940, 1945, 1950, 1951, 1956, 1961, 1962], "sdp_utils_cpp": 2, "h": [2, 4, 10, 14, 31, 477, 478, 731, 732, 733, 750, 934, 935, 1230, 1237, 1240, 1250, 1264, 1340, 1341, 1348, 1349, 1351, 1353, 1354, 1358, 1363, 1364, 1366, 1374, 1375, 1377, 1379, 1386, 1387, 1398, 1399, 1404, 1405, 1406, 1417, 1418, 1428, 1429, 1446, 1447, 1449, 1451, 1468, 1484, 1487, 1488, 1498, 1506, 1533, 1568, 1574, 1575, 1627, 1628, 1661, 1673, 1824, 1882, 1897, 1898, 1904, 1907, 1908, 1909, 1911, 1912, 1925, 1944, 1945, 1946, 1957, 1966], "flash_sdp_en": 2, "flash": 2, "enable_mem_efficient_sdp": [2, 1583], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1583], "math_sdp_en": 2, "math": [2, 21, 57, 1082, 1250, 1252, 1545, 1583, 1712, 1729, 1825, 1880, 1881, 1883, 1884, 1918, 1940, 1941, 1947, 1969], "enable_math_sdp": [2, 1583], "sdp_kernel": [2, 1583], "enable_flash": 2, "enable_math": [2, 1583], "enable_mem_effici": 2, "temporarili": [2, 33, 1762, 1904, 1925, 1930, 1963], "previou": [2, 18, 25, 42, 46, 49, 57, 546, 750, 942, 1007, 1117, 1153, 1211, 1271, 1287, 1386, 1404, 1449, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1674, 1729, 1820, 1892, 1904, 1907, 1909, 1915, 1921, 1923, 1931, 1938, 1959], "restor": [2, 5, 29, 57, 79, 950, 1117, 1271, 1287, 1664, 1749, 1771, 1915, 1920, 1956], "is_avail": [2, 17, 25, 1864, 1880, 1907, 1913, 1916, 1920, 1930], "determinist": [2, 3, 5, 20, 25, 31, 57, 75, 79, 489, 503, 863, 1073, 1074, 1075, 1148, 1181, 1203, 1216, 1217, 1298, 1301, 1303, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1404, 1449, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1759, 1765, 1861, 1880, 1882, 1904, 1919, 1927, 1935], "algorithm": [2, 3, 7, 11, 19, 22, 26, 29, 31, 33, 49, 79, 750, 769, 775, 932, 1197, 1241, 1248, 1254, 1258, 1264, 1273, 1290, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1384, 1386, 1404, 1449, 1485, 1486, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1533, 1544, 1583, 1602, 1614, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1693, 1712, 1751, 1766, 1824, 1825, 1861, 1880, 1904, 1907, 1918, 1936, 1940], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 24, 489, 863, 1073, 1074, 1075, 1181, 1765, 1919], "benchmark": [2, 1880, 1882, 1907, 1913, 1954, 1959, 1966], "fastest": [2, 867, 1614, 1666, 1679, 1680, 1912, 1919, 1927], "benchmark_limit": 2, "maximum": [2, 24, 31, 42, 43, 46, 489, 685, 687, 761, 785, 810, 811, 812, 815, 816, 864, 986, 1021, 1023, 1029, 1036, 1037, 1051, 1052, 1073, 1074, 1075, 1118, 1135, 1160, 1161, 1162, 1273, 1298, 1319, 1393, 1524, 1525, 1620, 1696, 1704, 1729, 1743, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1863, 1882, 1890, 1902, 1903, 1907, 1917, 1926, 1934, 1947, 1957, 1964, 1971], "try": [2, 3, 4, 7, 8, 25, 27, 30, 34, 35, 39, 42, 49, 53, 54, 73, 74, 942, 1042, 1126, 1135, 1141, 1205, 1207, 1216, 1237, 1319, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1477, 1478, 1480, 1486, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1872, 1879, 1881, 1884, 1885, 1888, 1904, 1907, 1909, 1911, 1912, 1917, 1925, 1927, 1928, 1931, 1932, 1936, 1940, 1955, 1957, 1958, 1959, 1961, 1969, 1971], "dispatch": [2, 25, 49, 57, 75, 76, 78, 1205, 1315, 1316, 1862, 1864, 1884, 1888, 1907, 1909, 1923, 1925, 1959, 1960, 1970], "v8": 2, "verbos": [2, 14, 25, 57, 670, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1879, 1890, 1898, 1925, 1945, 1969], "On": [2, 14, 20, 21, 25, 26, 31, 43, 49, 54, 57, 676, 679, 910, 922, 1248, 1295, 1305, 1362, 1363, 1364, 1365, 1366, 1367, 1387, 1402, 1403, 1404, 1405, 1421, 1444, 1449, 1462, 1614, 1679, 1680, 1689, 1692, 1880, 1881, 1891, 1904, 1906, 1907, 1909, 1918, 1928, 1936, 1937, 1938, 1940, 1954, 1957, 1958], "demand": [2, 21, 1009, 1883, 1914, 1917, 1936], "onemkl": 2, "easier": [2, 7, 21, 46, 57, 1881, 1883, 1899, 1904, 1905, 1909, 1910, 1940, 1959, 1969], "dump": [2, 57, 973, 1908, 1921, 1959, 1962, 1969], "durat": [2, 25, 39, 42, 1315, 1316, 1894, 1923, 1930, 1959, 1969], "kernel": [2, 3, 4, 11, 14, 18, 25, 49, 56, 729, 730, 731, 732, 733, 762, 763, 764, 942, 971, 976, 978, 979, 1015, 1016, 1048, 1050, 1321, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1382, 1383, 1402, 1403, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1583, 1621, 1630, 1862, 1864, 1881, 1888, 1892, 1899, 1907, 1909, 1910, 1916, 1918, 1925, 1927, 1930, 1932, 1940, 1954, 1956, 1958, 1959, 1960, 1961, 1967, 1969], "mkl_verbos": 2, "methodologi": 2, "moreov": [2, 49, 72, 503, 1614, 1692], "investig": [2, 7, 25, 54, 1967], "singl": [2, 3, 5, 12, 14, 22, 25, 27, 29, 31, 33, 35, 41, 42, 49, 50, 52, 53, 54, 55, 56, 57, 58, 65, 66, 245, 670, 685, 686, 756, 757, 758, 759, 762, 763, 764, 804, 884, 891, 892, 893, 894, 895, 896, 897, 911, 920, 924, 942, 954, 958, 962, 1015, 1018, 1129, 1131, 1132, 1135, 1137, 1141, 1157, 1158, 1162, 1185, 1199, 1200, 1216, 1217, 1220, 1278, 1302, 1315, 1316, 1340, 1341, 1344, 1345, 1348, 1349, 1351, 1362, 1363, 1364, 1366, 1367, 1370, 1371, 1382, 1383, 1389, 1402, 1403, 1406, 1428, 1429, 1434, 1442, 1446, 1447, 1462, 1473, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1530, 1557, 1558, 1559, 1601, 1607, 1609, 1612, 1613, 1614, 1619, 1620, 1622, 1624, 1626, 1662, 1663, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1690, 1691, 1692, 1693, 1698, 1719, 1745, 1766, 1812, 1818, 1819, 1857, 1858, 1861, 1867, 1868, 1872, 1880, 1881, 1883, 1884, 1891, 1892, 1896, 1898, 1899, 1900, 1904, 1906, 1907, 1909, 1910, 1912, 1915, 1917, 1918, 1919, 1920, 1925, 1927, 1928, 1929, 1930, 1931, 1937, 1938, 1940, 1943, 1946, 1947, 1950, 1953, 1954, 1956, 1957, 1958, 1959, 1961, 1962, 1968, 1969], "enough": [2, 8, 22, 57, 1212, 1324, 1483, 1806, 1807, 1808, 1809, 1810, 1811, 1861, 1883, 1896, 1899, 1907, 1909, 1912, 1927, 1928, 1943, 1959, 1970], "scope": [2, 7, 12, 44, 57, 72, 954, 1126, 1473, 1643, 1881, 1883, 1884, 1907, 1911, 1925, 1928, 1938, 1958, 1968], "second": [2, 5, 14, 18, 25, 29, 33, 35, 42, 44, 46, 55, 57, 676, 679, 681, 684, 750, 784, 864, 865, 866, 874, 882, 898, 899, 910, 914, 915, 917, 918, 919, 922, 972, 984, 1031, 1035, 1049, 1050, 1060, 1062, 1063, 1069, 1077, 1118, 1119, 1131, 1134, 1135, 1136, 1140, 1141, 1143, 1144, 1153, 1156, 1164, 1165, 1166, 1177, 1189, 1223, 1225, 1233, 1269, 1272, 1278, 1279, 1289, 1295, 1299, 1301, 1302, 1304, 1305, 1330, 1335, 1338, 1342, 1348, 1349, 1355, 1363, 1364, 1366, 1367, 1377, 1378, 1385, 1386, 1400, 1403, 1404, 1422, 1426, 1428, 1429, 1449, 1462, 1515, 1517, 1551, 1605, 1643, 1679, 1680, 1683, 1689, 1693, 1704, 1750, 1801, 1809, 1845, 1850, 1852, 1866, 1869, 1872, 1883, 1884, 1888, 1904, 1907, 1909, 1910, 1911, 1912, 1915, 1919, 1923, 1925, 1930, 1936, 1941, 1945, 1954, 1962], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 12, 15, 18, 21, 25, 33, 34, 35, 39, 46, 47, 49, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 489, 670, 737, 884, 885, 886, 894, 1130, 1145, 1371, 1614, 1880, 1881, 1884, 1885, 1890, 1894, 1896, 1899, 1902, 1904, 1906, 1909, 1912, 1923, 1928, 1930, 1931, 1932, 1936, 1940, 1945, 1949, 1950, 1951, 1956, 1957, 1959, 1960, 1962, 1964, 1967, 1968, 1969, 1970], "verbose_off": 2, "dnn": [2, 1906], "onednn": [2, 845, 846, 849, 1202, 1209, 1926, 1931], "former": [2, 49, 1404, 1434, 1904], "dnnl_verbos": 2, "verbose_on_cr": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 16, 17, 22, 31, 46, 53, 56, 1533, 1614, 1879, 1880, 1895, 1909, 1915, 1923, 1927, 1934, 1936, 1945, 1948, 1955], "els": [2, 7, 12, 21, 25, 27, 31, 33, 34, 42, 46, 57, 58, 593, 750, 913, 954, 1212, 1218, 1400, 1473, 1570, 1583, 1614, 1679, 1680, 1683, 1689, 1690, 1691, 1692, 1746, 1747, 1780, 1786, 1864, 1881, 1883, 1885, 1886, 1891, 1896, 1899, 1907, 1909, 1910, 1915, 1916, 1923, 1924, 1925, 1927, 1928, 1942, 1954, 1955, 1957, 1968], "einsum": [2, 1882, 1926], "readthedoc": [2, 1072], "io": [2, 7, 21, 27, 46, 1072, 1208, 1211, 1272, 1404, 1405, 1481, 1583, 1754, 1921, 1923, 1931], "en": [2, 22, 1072, 1913, 1945, 1972], "path_find": [2, 1072], "html": [2, 3, 4, 7, 15, 43, 670, 720, 721, 722, 723, 735, 736, 746, 751, 752, 753, 754, 755, 942, 1072, 1483, 1861, 1864, 1905, 1913, 1915, 1919, 1928, 1930, 1945], "calcul": [2, 21, 25, 39, 750, 758, 759, 789, 792, 809, 810, 814, 930, 962, 1060, 1064, 1072, 1076, 1191, 1197, 1256, 1278, 1279, 1281, 1347, 1348, 1349, 1352, 1353, 1354, 1357, 1365, 1366, 1367, 1381, 1386, 1388, 1389, 1397, 1398, 1399, 1406, 1473, 1482, 1485, 1486, 1500, 1501, 1502, 1530, 1533, 1544, 1573, 1628, 1639, 1661, 1665, 1667, 1698, 1744, 1768, 1818, 1819, 1850, 1852, 1867, 1868, 1904, 1905, 1908, 1912, 1918, 1921, 1931, 1940, 1950], "path": [2, 3, 4, 8, 14, 25, 27, 40, 42, 44, 45, 46, 49, 57, 724, 905, 906, 973, 974, 1072, 1200, 1434, 1450, 1481, 1674, 1879, 1880, 1882, 1883, 1904, 1907, 1909, 1913, 1920, 1923, 1928, 1930, 1940, 1949, 1954, 1961, 1962, 1963], "contract": [2, 47, 1072, 1841, 1880, 1898, 1928, 1955, 1962], "left": [2, 21, 57, 450, 489, 804, 810, 855, 911, 915, 918, 920, 921, 926, 931, 1072, 1092, 1099, 1113, 1116, 1117, 1121, 1153, 1157, 1158, 1162, 1197, 1198, 1205, 1220, 1241, 1250, 1254, 1258, 1261, 1262, 1263, 1264, 1266, 1278, 1279, 1324, 1342, 1347, 1348, 1349, 1350, 1351, 1362, 1363, 1364, 1381, 1388, 1401, 1402, 1403, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1437, 1438, 1439, 1443, 1444, 1482, 1485, 1486, 1487, 1488, 1533, 1553, 1571, 1620, 1696, 1697, 1710, 1738, 1751, 1758, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1820, 1841, 1846, 1866, 1881, 1882, 1884, 1904, 1909, 1915, 1934, 1941, 1967, 1971], "strategi": [2, 3, 7, 21, 22, 25, 29, 35, 49, 891, 893, 1072, 1133, 1214, 1342, 1614, 1621, 1704, 1883, 1910, 1912, 1932, 1959], "auto": [2, 25, 50, 73, 74, 1072, 1350, 1351, 1884, 1925, 1945, 1958], "greedi": [2, 29, 1072], "doc": [2, 3, 4, 9, 15, 42, 43, 47, 73, 77, 670, 720, 721, 722, 723, 735, 736, 746, 751, 752, 753, 754, 755, 830, 942, 1141, 1219, 1478, 1479, 1480, 1481, 1861, 1872, 1885, 1888, 1896, 1905, 1908, 1909, 1915, 1919, 1928, 1936, 1940, 1945, 1960, 1965], "timer": [3, 28, 1880], "stmt": [3, 1906], "setup": [3, 14, 22, 42, 43, 49, 810, 811, 812, 815, 1141, 1614, 1872, 1906, 1907, 1916, 1936, 1937, 1955], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 21, 29, 1072, 1342, 1351, 1357, 1368, 1370, 1394, 1426, 1437, 1438, 1517, 1654, 1697, 1908, 1917, 1919, 1945], "sub_label": 3, "descript": [3, 7, 13, 14, 21, 35, 42, 57, 724, 1171, 1172, 1173, 1246, 1273, 1498, 1722, 1766, 1883, 1884, 1907, 1909, 1912, 1914, 1915, 1925, 1951, 1960, 1972], "env": [3, 25, 31, 35, 40, 42, 43, 45, 57, 1029, 1908, 1918, 1923, 1924, 1936, 1959, 1969], "num_thread": [3, 1917], "languag": [3, 14, 35, 46, 1212, 1342, 1477, 1532, 1911, 1922], "measur": [3, 31, 39, 975, 1021, 1023, 1232, 1312, 1350, 1351, 1368, 1394, 1401, 1425, 1426, 1482, 1483, 1505, 1506, 1564, 1706, 1880, 1907, 1914, 1915, 1927, 1940], "statement": [3, 12, 31, 47, 54, 57, 58, 63, 65, 66, 954, 1201, 1216, 1885, 1904, 1909, 1917, 1920, 1922, 1925, 1928, 1934, 1936, 1955, 1962], "full": [3, 7, 8, 15, 21, 22, 25, 29, 31, 42, 45, 46, 49, 50, 54, 57, 503, 890, 911, 920, 942, 1100, 1101, 1102, 1106, 1107, 1109, 1128, 1140, 1141, 1157, 1158, 1204, 1238, 1239, 1246, 1247, 1248, 1259, 1264, 1265, 1273, 1290, 1351, 1357, 1388, 1448, 1477, 1508, 1509, 1510, 1517, 1530, 1576, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1771, 1824, 1825, 1872, 1879, 1881, 1882, 1883, 1884, 1886, 1898, 1903, 1907, 1908, 1909, 1912, 1915, 1918, 1919, 1923, 1926, 1928, 1931, 1934, 1937, 1944, 1947, 1956, 1959, 1962, 1963, 1964, 1969], "org": [3, 4, 7, 9, 10, 12, 15, 22, 30, 31, 43, 670, 720, 721, 722, 723, 735, 736, 746, 751, 752, 753, 754, 755, 942, 954, 1273, 1404, 1452, 1453, 1480, 1483, 1664, 1712, 1766, 1787, 1864, 1879, 1885, 1904, 1905, 1915, 1919, 1921, 1925, 1928, 1945, 1971, 1972], "timeit": [3, 1906], "sever": [3, 12, 15, 21, 25, 30, 31, 49, 57, 728, 729, 730, 731, 732, 733, 756, 757, 762, 763, 764, 772, 773, 942, 1018, 1076, 1175, 1200, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1362, 1363, 1364, 1365, 1366, 1367, 1382, 1383, 1402, 1403, 1422, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1551, 1554, 1555, 1557, 1558, 1559, 1614, 1629, 1630, 1632, 1633, 1665, 1673, 1727, 1728, 1768, 1856, 1861, 1881, 1903, 1904, 1906, 1907, 1914, 1915, 1917, 1925, 1927, 1931, 1936, 1956, 1959], "kei": [3, 21, 27, 33, 40, 42, 43, 47, 49, 57, 593, 670, 725, 844, 849, 907, 1038, 1129, 1139, 1200, 1216, 1217, 1272, 1434, 1435, 1440, 1444, 1477, 1478, 1479, 1480, 1481, 1583, 1646, 1662, 1862, 1864, 1880, 1882, 1883, 1884, 1888, 1907, 1909, 1914, 1915, 1920, 1925, 1926, 1927, 1930, 1931, 1934, 1936, 1937, 1942, 1945, 1947, 1949, 1951, 1960, 1962, 1966, 1967, 1968], "awar": [3, 7, 75, 476, 702, 703, 704, 705, 706, 707, 708, 709, 710, 720, 721, 722, 723, 828, 829, 845, 852, 853, 1481, 1583, 1614, 1828, 1829, 1831, 1832, 1833, 1898, 1904, 1907, 1928, 1934, 1937, 1940, 1966], "element": [3, 12, 21, 25, 31, 47, 54, 55, 57, 58, 64, 65, 66, 88, 110, 141, 145, 187, 207, 233, 245, 249, 277, 304, 306, 308, 310, 312, 343, 389, 391, 393, 425, 444, 461, 463, 464, 487, 489, 503, 505, 507, 510, 535, 536, 548, 550, 599, 600, 607, 671, 673, 674, 677, 678, 683, 684, 688, 689, 725, 748, 750, 760, 761, 762, 763, 764, 770, 774, 783, 864, 866, 867, 868, 871, 872, 873, 874, 875, 883, 891, 892, 894, 895, 896, 898, 899, 912, 921, 924, 931, 937, 941, 954, 956, 958, 959, 960, 1015, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1061, 1062, 1063, 1067, 1069, 1072, 1075, 1077, 1078, 1082, 1102, 1106, 1107, 1109, 1111, 1116, 1118, 1119, 1121, 1124, 1126, 1131, 1132, 1134, 1135, 1136, 1140, 1141, 1142, 1143, 1144, 1145, 1153, 1156, 1159, 1160, 1161, 1162, 1177, 1185, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1220, 1222, 1223, 1225, 1242, 1244, 1248, 1259, 1263, 1274, 1275, 1277, 1280, 1282, 1283, 1284, 1285, 1289, 1290, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1322, 1324, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1346, 1347, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1376, 1378, 1379, 1381, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1400, 1401, 1404, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1420, 1423, 1425, 1426, 1427, 1428, 1429, 1433, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1482, 1483, 1485, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1518, 1522, 1525, 1526, 1531, 1532, 1536, 1537, 1538, 1539, 1542, 1545, 1546, 1548, 1553, 1557, 1558, 1559, 1563, 1564, 1568, 1569, 1571, 1574, 1575, 1576, 1577, 1578, 1579, 1583, 1584, 1585, 1586, 1587, 1589, 1591, 1593, 1594, 1595, 1596, 1601, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1646, 1647, 1653, 1654, 1656, 1657, 1666, 1667, 1668, 1670, 1675, 1715, 1716, 1719, 1720, 1727, 1728, 1730, 1741, 1744, 1745, 1749, 1751, 1753, 1771, 1774, 1776, 1788, 1789, 1791, 1792, 1796, 1803, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1818, 1819, 1823, 1835, 1837, 1838, 1842, 1843, 1844, 1846, 1848, 1849, 1850, 1851, 1852, 1854, 1856, 1857, 1858, 1859, 1867, 1868, 1869, 1872, 1875, 1882, 1884, 1888, 1891, 1899, 1902, 1905, 1906, 1909, 1912, 1918, 1920, 1925, 1927, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1958, 1961, 1970], "lazili": [3, 17, 27, 975, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1605, 1881, 1909, 1967], "threadpool": 3, "comparison": [3, 22, 25, 46, 57, 1200, 1216, 1217, 1434, 1675, 1885, 1909, 1947, 1950, 1956], "appl": [3, 1895], "focu": [3, 47, 1706, 1962], "replic": [3, 21, 27, 30, 49, 77, 1153, 1211, 1362, 1363, 1364, 1371, 1381, 1410, 1411, 1412, 1458, 1459, 1460, 1485, 1571, 1598, 1929], "particularli": [3, 21, 22, 44, 1370, 1371, 1441, 1881, 1907, 1957, 1967], "variat": [3, 31, 1884, 1909, 1927, 1932, 1969], "confound": 3, "quantifi": [3, 1483], "nois": [3, 1882, 1919, 1969], "median": [3, 31, 164, 1330, 1861, 1882, 1897, 1926], "robust": [3, 1273, 1896, 1915], "deviat": [3, 31, 49, 368, 1346, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1473, 1668, 1781, 1786, 1818, 1819, 1902, 1959], "merg": [3, 6, 7, 9, 21, 25, 27, 43, 1435, 1440, 1444], "repeat": [3, 31, 46, 54, 484, 962, 1072, 1264, 1290, 1430, 1431, 1432, 1505, 1506, 1712, 1744, 1804, 1824, 1825, 1842, 1882, 1884, 1907, 1926, 1930, 1933, 1940, 1964], "autorang": 3, "exact": [3, 14, 21, 33, 44, 47, 76, 330, 731, 732, 733, 785, 864, 865, 866, 898, 899, 942, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1301, 1366, 1404, 1481, 1544, 1583, 1614, 1707, 1797, 1902, 1907, 1908, 1917, 1940, 1958, 1959, 1966, 1969, 1970], "discuss": [3, 5, 8, 9, 10, 31, 46, 57, 1395, 1544, 1891, 1904, 1909, 1915, 1919, 1936, 1938, 1940, 1956], "docstr": [3, 14, 46, 57, 851, 852, 1200, 1434, 1879, 1907], "adapt": [3, 756, 757, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1372, 1492, 1493, 1494, 1495, 1496, 1497, 1677, 1678, 1689, 1691, 1698, 1907, 1923, 1957], "field": [3, 7, 25, 29, 33, 35, 39, 40, 47, 49, 57, 478, 816, 883, 1198, 1200, 1342, 1350, 1351, 1368, 1370, 1394, 1400, 1401, 1425, 1426, 1434, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1498, 1505, 1506, 1516, 1533, 1545, 1568, 1576, 1653, 1687, 1693, 1894, 1904, 1908, 1917, 1925, 1936, 1937, 1945, 1962, 1968, 1969], "displai": [3, 18, 1017, 1030, 1544, 1602, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1879, 1885, 1890, 1893, 1925, 1945, 1947, 1959, 1969], "instruct": [3, 4, 11, 14, 44, 56, 1766, 1881, 1884, 1907, 1918, 1925, 1931, 1947, 1953, 1958, 1962, 1969], "count": [3, 21, 31, 39, 57, 913, 961, 1011, 1126, 1161, 1162, 1198, 1238, 1239, 1653, 1857, 1858, 1882, 1894, 1907, 1926, 1930, 1936, 1938, 1940, 1962], "wall": [3, 1963], "callgrind": 3, "analog": [3, 46, 57, 684, 1055, 1093, 1095, 1175, 1250, 1404, 1692, 1824, 1842, 1899, 1915, 1957, 1962], "constructor": [3, 14, 21, 22, 29, 49, 57, 58, 66, 814, 851, 852, 1342, 1439, 1444, 1445, 1462, 1487, 1488, 1614, 1660, 1799, 1880, 1881, 1884, 1885, 1907, 1908, 1915, 1936, 1940, 1942, 1943, 1946, 1972], "snippet": [3, 43, 1879, 1915, 1920, 1961, 1962], "loop": [3, 22, 44, 46, 47, 50, 54, 55, 57, 58, 63, 852, 853, 897, 1018, 1021, 1023, 1135, 1141, 1216, 1614, 1630, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1872, 1881, 1882, 1884, 1894, 1906, 1907, 1911, 1912, 1915, 1918, 1922, 1925, 1927, 1930, 1931, 1945, 1954, 1958, 1962, 1968], "callabl": [3, 5, 12, 21, 22, 25, 29, 31, 33, 35, 40, 42, 44, 46, 47, 49, 56, 57, 110, 389, 831, 942, 944, 954, 1015, 1016, 1018, 1130, 1131, 1132, 1137, 1140, 1141, 1200, 1203, 1206, 1212, 1216, 1272, 1273, 1434, 1477, 1479, 1481, 1483, 1608, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1690, 1691, 1692, 1693, 1700, 1703, 1872, 1879, 1881, 1883, 1884, 1885, 1894, 1907, 1909, 1915, 1920, 1923, 1925, 1928, 1929, 1930, 1936, 1947, 1949, 1950, 1955, 1956, 1960, 1962, 1968, 1970], "present": [3, 9, 21, 25, 42, 47, 49, 1198, 1290, 1342, 1404, 1444, 1653, 1673, 1820, 1879, 1893, 1896, 1897, 1898, 1903, 1904, 1907, 1909, 1912, 1915, 1920, 1925, 1928, 1937, 1940, 1943, 1960, 1965, 1971], "default_tim": 3, "summar": [3, 4, 43, 1771, 1884, 1899, 1940, 1956, 1962, 1969], "relu": [3, 22, 46, 54, 55, 57, 690, 691, 695, 696, 697, 698, 699, 700, 701, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 755, 782, 783, 804, 844, 850, 1015, 1131, 1141, 1206, 1212, 1434, 1449, 1451, 1462, 1470, 1477, 1479, 1481, 1580, 1581, 1605, 1674, 1872, 1881, 1882, 1892, 1898, 1899, 1902, 1904, 1915, 1920, 1925, 1926, 1931, 1933, 1934, 1955, 1961, 1964, 1967, 1968, 1969], "readabl": [3, 13, 21, 40, 46, 57, 1017, 1030, 1839, 1925, 1927, 1956, 1969, 1970], "supplement": 3, "disambigu": [3, 40, 57, 1278, 1969], "ident": [3, 14, 21, 25, 31, 57, 778, 804, 898, 899, 1060, 1238, 1239, 1240, 1241, 1254, 1266, 1269, 1273, 1290, 1329, 1330, 1346, 1372, 1573, 1621, 1627, 1629, 1869, 1875, 1885, 1902, 1918, 1919, 1928, 1933, 1940, 1958, 1969], "easi": [3, 21, 27, 42, 46, 1881, 1904, 1911, 1914, 1915, 1917, 1928, 1931, 1936, 1937, 1940, 1955, 1956, 1959, 1961, 1962, 1967], "differenti": [3, 31, 50, 55, 141, 343, 579, 792, 879, 881, 883, 885, 886, 888, 891, 892, 893, 894, 895, 896, 897, 898, 899, 939, 1018, 1134, 1135, 1136, 1140, 1215, 1247, 1248, 1259, 1290, 1356, 1357, 1377, 1535, 1569, 1614, 1632, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1861, 1880, 1891, 1909, 1911, 1912, 1925, 1927, 1936, 1946], "distinguish": [3, 1931, 1940], "princip": [3, 1247, 1712], "signal": [3, 11, 27, 33, 42, 44, 728, 729, 730, 756, 757, 772, 773, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1197, 1263, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1362, 1363, 1364, 1382, 1383, 1402, 1403, 1422, 1427, 1428, 1429, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1508, 1511, 1528, 1529, 1551, 1554, 1555, 1557, 1558, 1559, 1820, 1880, 1896, 1917, 1930, 1936], "form": [3, 7, 9, 11, 21, 25, 31, 41, 42, 43, 46, 47, 49, 54, 57, 750, 769, 775, 933, 1060, 1100, 1102, 1200, 1240, 1243, 1248, 1259, 1264, 1340, 1341, 1344, 1345, 1357, 1382, 1383, 1386, 1404, 1434, 1449, 1485, 1486, 1517, 1528, 1529, 1532, 1544, 1571, 1602, 1632, 1692, 1710, 1841, 1879, 1881, 1885, 1899, 1904, 1909, 1915, 1923, 1925, 1928, 1931, 1940, 1945, 1956, 1961, 1968], "treat": [3, 31, 41, 52, 57, 58, 63, 64, 312, 461, 783, 898, 899, 1015, 1129, 1200, 1253, 1256, 1258, 1270, 1272, 1282, 1283, 1284, 1285, 1302, 1332, 1378, 1388, 1406, 1438, 1439, 1440, 1441, 1444, 1462, 1467, 1525, 1614, 1662, 1666, 1698, 1751, 1766, 1820, 1835, 1836, 1842, 1857, 1883, 1884, 1897, 1904, 1923, 1925, 1936, 1940, 1943, 1950, 1960, 1965, 1968], "distinct": [3, 71, 1129, 1236, 1237, 1281, 1884, 1909, 1920, 1925, 1936, 1937, 1957], "workload": [3, 8, 21, 25, 49, 1018, 1907, 1914, 1918, 1936, 1953, 1967], "good": [3, 7, 8, 14, 57, 942, 1133, 1442, 1787, 1879, 1888, 1896, 1907, 1909, 1914, 1915, 1917, 1925, 1928, 1929, 1931, 1956, 1957, 1958, 1962, 1966], "intrins": [3, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 782, 783, 1932, 1933], "contrast": [3, 31, 33, 46, 750, 1386, 1692, 1902, 1904, 1910, 1940, 1964], "adaptive_autorang": 3, "threshold": [3, 22, 57, 1255, 1258, 1395, 1465, 1470, 1591, 1597, 1706, 1771, 1882, 1903, 1907, 1926, 1945], "min_run_tim": 3, "01": [3, 26, 29, 44, 478, 745, 770, 811, 812, 1073, 1115, 1420, 1548, 1549, 1605, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1698, 1704, 1724, 1778, 1780, 1781, 1786, 1787, 1882, 1902, 1914, 1925, 1927, 1964], "max_run_tim": 3, "callback": [3, 22, 42, 44, 56, 57, 1614, 1894, 1909, 1914, 1930, 1936], "similar": [3, 7, 9, 21, 25, 31, 39, 47, 49, 54, 56, 57, 483, 505, 702, 703, 704, 705, 706, 707, 710, 720, 721, 722, 723, 735, 736, 746, 754, 792, 867, 882, 923, 928, 941, 942, 1118, 1119, 1200, 1368, 1369, 1381, 1394, 1397, 1398, 1399, 1434, 1482, 1515, 1653, 1667, 1668, 1693, 1716, 1744, 1751, 1801, 1836, 1842, 1858, 1883, 1884, 1896, 1897, 1899, 1904, 1906, 1907, 1909, 1910, 1912, 1918, 1925, 1928, 1929, 1931, 1936, 1937, 1940, 1941, 1946, 1957, 1958, 1959, 1961, 1962, 1965, 1969, 1972], "blocked_autorang": 3, "variablil": 3, "until": [3, 5, 7, 21, 22, 25, 29, 33, 42, 49, 56, 57, 476, 975, 976, 978, 1009, 1126, 1221, 1273, 1312, 1315, 1316, 1533, 1605, 1614, 1695, 1701, 1842, 1896, 1902, 1907, 1911, 1920, 1923, 1925, 1930, 1936, 1938, 1959], "iqr": 3, "smaller": [3, 21, 57, 489, 535, 962, 1404, 1614, 1706, 1721, 1766, 1812, 1907, 1920, 1928, 1955, 1971, 1972], "reach": [3, 7, 8, 9, 21, 22, 25, 26, 33, 42, 46, 50, 1273, 1614, 1695, 1698, 1701, 1702, 1904, 1909, 1917, 1929, 1931, 1932, 1936, 1956], "At": [3, 5, 6, 7, 15, 21, 1106, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1402, 1403, 1862, 1892, 1899, 1906, 1912, 1931, 1936, 1941, 1956, 1959, 1962, 1969], "high": [3, 4, 7, 8, 9, 10, 15, 22, 25, 31, 33, 39, 41, 43, 57, 110, 1357, 1480, 1733, 1734, 1766, 1882, 1894, 1896, 1909, 1912, 1913, 1915, 1916, 1917, 1927, 1931, 1932, 1936, 1940, 1945, 1946, 1947, 1950, 1953, 1954, 1962, 1964, 1969], "pseudo": [3, 79], "block_siz": 3, "enough_data": 3, "len": [3, 21, 25, 27, 57, 58, 63, 209, 535, 683, 685, 686, 689, 1091, 1095, 1098, 1102, 1105, 1109, 1140, 1204, 1267, 1288, 1300, 1329, 1332, 1371, 1571, 1638, 1640, 1656, 1697, 1704, 1809, 1812, 1818, 1819, 1823, 1866, 1867, 1868, 1881, 1882, 1884, 1909, 1926, 1940, 1945, 1968], "small_iqr": 3, "break": [3, 7, 31, 52, 57, 670, 883, 942, 944, 1200, 1246, 1434, 1751, 1771, 1880, 1885, 1890, 1908, 1927, 1940, 1948, 1954, 1956, 1957, 1960, 1962, 1963, 1965], "stop": [3, 5, 31, 33, 42, 43, 44, 47, 855, 1011, 1198, 1273, 1357, 1653, 1706, 1738, 1881, 1884, 1936, 1960], "repetit": [3, 1744, 1842], "statist": [3, 22, 25, 31, 789, 790, 810, 811, 812, 814, 815, 984, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1049, 1050, 1278, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1894, 1904, 1911, 1927, 1929, 1931, 1934, 1959, 1969], "minimum": [3, 14, 22, 33, 42, 43, 46, 686, 687, 761, 785, 810, 811, 812, 815, 816, 865, 913, 1052, 1119, 1160, 1161, 1162, 1303, 1357, 1393, 1483, 1696, 1697, 1704, 1787, 1806, 1807, 1808, 1809, 1810, 1811, 1882, 1902, 1904, 1912, 1926, 1934, 1943, 1964], "total_tim": 3, "choic": [3, 8, 9, 25, 1216, 1264, 1435, 1444, 1729, 1906, 1925, 1934, 1940, 1957, 1969], "block": [3, 7, 8, 21, 25, 29, 30, 42, 44, 49, 56, 57, 573, 574, 575, 921, 975, 1029, 1221, 1273, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1410, 1411, 1412, 1413, 1414, 1415, 1437, 1485, 1527, 1601, 1614, 1806, 1807, 1808, 1881, 1883, 1884, 1894, 1896, 1900, 1904, 1907, 1908, 1912, 1925, 1931, 1936, 1940, 1951, 1967, 1971], "qualiti": [3, 7, 22], "balanc": [3, 942], "compet": [3, 1917], "amort": 3, "invoc": [3, 5, 57, 831, 942, 947, 1203, 1216, 1881, 1884, 1907, 1909, 1914, 1925, 1936, 1938, 1954, 1962, 1967], "less": [3, 6, 7, 14, 21, 22, 25, 31, 33, 44, 46, 49, 355, 670, 891, 893, 898, 899, 962, 1025, 1042, 1072, 1116, 1120, 1126, 1129, 1225, 1237, 1273, 1289, 1290, 1342, 1395, 1448, 1465, 1471, 1656, 1742, 1850, 1852, 1879, 1882, 1884, 1899, 1907, 1909, 1917, 1918, 1926, 1929, 1931, 1959], "bias": [3, 22, 724, 750, 784, 1352, 1353, 1354, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1449, 1451, 1473], "trivial": [3, 33, 35, 725, 932, 1627, 1809, 1925, 1938, 1958], "low": [3, 7, 18, 22, 31, 49, 489, 894, 1145, 1357, 1712, 1729, 1733, 1734, 1751, 1825, 1880, 1882, 1894, 1896, 1907, 1917, 1930, 1947, 1963, 1964, 1970], "digit": [3, 926, 1771, 1879, 1893, 1914, 1918], "microsecond": [3, 1907], "bia": [3, 9, 25, 46, 58, 702, 703, 704, 705, 706, 707, 708, 709, 710, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 739, 741, 742, 743, 744, 746, 750, 751, 754, 755, 762, 763, 764, 771, 782, 1139, 1200, 1210, 1342, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1387, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1440, 1449, 1450, 1451, 1477, 1479, 1481, 1503, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1534, 1543, 1547, 1550, 1605, 1614, 1623, 1625, 1627, 1628, 1642, 1644, 1646, 1661, 1664, 1726, 1882, 1888, 1892, 1909, 1915, 1920, 1923, 1931, 1933, 1940, 1945, 1964], "period": [3, 9, 29, 42, 911, 920, 984, 1017, 1030, 1031, 1035, 1049, 1050, 1092, 1157, 1158, 1220, 1708, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1882, 1894, 1917], "overal": [3, 9, 21, 25, 42, 898, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1480, 1904, 1906, 1907, 1917, 1931, 1932, 1963], "main": [3, 7, 21, 22, 25, 26, 27, 31, 33, 34, 35, 40, 42, 43, 44, 45, 46, 57, 251, 486, 942, 1059, 1060, 1061, 1062, 1063, 1263, 1535, 1804, 1849, 1850, 1851, 1852, 1879, 1881, 1894, 1896, 1898, 1899, 1903, 1904, 1907, 1908, 1909, 1910, 1915, 1917, 1921, 1922, 1923, 1931, 1936, 1937, 1945, 1946, 1951, 1955, 1959, 1962, 1968], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1880], "modulo": [3, 31, 1120, 1742], "determin": [3, 5, 8, 11, 14, 17, 18, 20, 21, 22, 25, 31, 33, 40, 42, 49, 54, 57, 76, 77, 78, 813, 816, 891, 893, 898, 899, 911, 920, 927, 932, 1019, 1074, 1093, 1103, 1128, 1129, 1157, 1158, 1161, 1162, 1214, 1234, 1246, 1257, 1260, 1281, 1295, 1378, 1382, 1383, 1404, 1440, 1443, 1449, 1525, 1528, 1529, 1544, 1577, 1602, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1662, 1672, 1704, 1732, 1734, 1736, 1763, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1878, 1884, 1885, 1898, 1907, 1908, 1909, 1915, 1923, 1925, 1928, 1931, 1936, 1938, 1940, 1942, 1943, 1945, 1947, 1957, 1958, 1959, 1968, 1969], "itself": [3, 5, 7, 8, 25, 26, 46, 49, 55, 57, 478, 683, 689, 869, 962, 1134, 1135, 1200, 1212, 1216, 1434, 1467, 1589, 1614, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1798, 1881, 1896, 1909, 1915, 1917, 1919, 1922, 1925, 1928, 1936, 1940, 1944, 1955, 1958, 1962, 1969], "jitter": 3, "interpret": [3, 21, 25, 29, 31, 33, 42, 44, 47, 769, 775, 870, 897, 1028, 1093, 1094, 1095, 1100, 1102, 1103, 1104, 1105, 1126, 1150, 1162, 1200, 1205, 1212, 1216, 1253, 1273, 1374, 1533, 1544, 1545, 1602, 1763, 1769, 1879, 1883, 1884, 1896, 1906, 1907, 1925, 1940, 1942, 1944, 1956, 1962], "ideal": [3, 41, 43, 49, 1216, 1693, 1898, 1959], "analysi": [3, 22, 31, 57, 1220, 1712, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1885, 1915, 1922, 1923, 1950, 1955, 1956, 1958, 1963], "valgrind": 3, "degrad": [3, 14, 49, 1906, 1908, 1909, 1940], "amelior": 3, "suffici": [3, 14, 22, 31, 34, 42, 47, 49, 1679, 1680, 1879, 1940, 1943, 1959], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 57, 769, 775, 926, 1153, 1359, 1360, 1361, 1455, 1456, 1457, 1458, 1459, 1460, 1486, 1489, 1490, 1491, 1544, 1602, 1698, 1704, 1882, 1908, 1928, 1929, 1936, 1959], "caller": [3, 33, 42, 57, 844, 1200, 1434, 1481, 1610, 1611, 1809, 1904, 1907, 1936, 1938], "structur": [3, 5, 9, 12, 21, 22, 25, 32, 33, 35, 43, 46, 47, 49, 57, 58, 59, 63, 66, 882, 954, 1123, 1136, 1141, 1216, 1434, 1639, 1643, 1675, 1712, 1825, 1872, 1880, 1883, 1885, 1891, 1894, 1899, 1907, 1908, 1909, 1910, 1917, 1920, 1921, 1923, 1925, 1927, 1928, 1936, 1945, 1946, 1947, 1948, 1950, 1956, 1957, 1959, 1960, 1965, 1971], "restrict": [3, 8, 12, 21, 31, 47, 49, 54, 55, 954, 1272, 1295, 1370, 1883, 1884, 1885, 1898, 1899, 1904, 1907, 1912, 1929, 1931, 1957], "builtin": [3, 25, 57, 58, 66, 1213, 1272, 1738, 1881, 1883, 1885, 1936, 1938, 1959, 1969], "surpris": [3, 8, 49, 1879, 1912, 1918, 1958], "serial": [3, 15, 21, 25, 27, 29, 42, 1200, 1210, 1211, 1272, 1434, 1605, 1754, 1879, 1880, 1882, 1893, 1898, 1904, 1907, 1914, 1915, 1917, 1923, 1928, 1931, 1936, 1937], "subsequ": [3, 7, 14, 15, 25, 46, 49, 57, 942, 976, 1200, 1212, 1216, 1362, 1363, 1364, 1365, 1366, 1367, 1434, 1462, 1610, 1611, 1907, 1919, 1925, 1936, 1940, 1954, 1959, 1962], "deseri": [3, 27, 1272, 1605, 1879, 1893, 1920, 1936], "globalsbridg": 3, "care": [3, 7, 14, 25, 31, 56, 57, 944, 1093, 1095, 1434, 1896, 1906, 1907, 1908, 1909, 1911, 1915, 1917, 1920, 1925, 1936, 1940, 1954, 1958, 1959, 1960], "reli": [3, 9, 14, 21, 22, 33, 35, 49, 57, 141, 883, 898, 944, 1072, 1371, 1693, 1904, 1906, 1908, 1909, 1919, 1920, 1940, 1944, 1958, 1959, 1960, 1963], "pickl": [3, 21, 22, 25, 1200, 1272, 1434, 1754, 1879, 1893, 1896, 1920, 1928, 1936, 1971], "transfer": [3, 21, 25, 49, 1892, 1896, 1907, 1913, 1915, 1928, 1936], "properli": [3, 7, 21, 22, 27, 29, 33, 42, 56, 1093, 1094, 1095, 1103, 1104, 1105, 1302, 1435, 1436, 1444, 1445, 1614, 1862, 1879, 1891, 1909, 1912, 1915, 1917, 1920, 1936, 1937, 1943], "profil": [3, 4, 39, 57, 942, 1214, 1608, 1609, 1610, 1611, 1771, 1880, 1926, 1936, 1951, 1959], "drive": [3, 9, 25, 1904, 1962], "facil": [3, 1272, 1896], "analyz": [3, 4, 18, 57, 1908, 1909, 1918, 1969], "manipul": [3, 49, 56, 1204, 1880, 1903, 1911, 1915, 1929, 1934, 1968], "1000000": [3, 1676], "mirror": [3, 130], "semant": [3, 9, 17, 25, 42, 43, 46, 47, 49, 57, 141, 784, 864, 865, 866, 883, 897, 924, 978, 1029, 1130, 1141, 1204, 1211, 1270, 1351, 1506, 1577, 1621, 1693, 1858, 1872, 1880, 1883, 1884, 1888, 1891, 1899, 1910, 1915, 1925, 1936, 1940, 1959], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 22, 1881], "consum": [3, 21, 27, 32, 44, 47, 56, 425, 1072, 1896, 1907, 1917, 1922, 1923, 1925, 1945, 1962], "extrapol": 3, "sinc": [3, 7, 21, 22, 25, 27, 30, 31, 35, 44, 46, 49, 57, 306, 478, 524, 737, 775, 783, 798, 799, 932, 944, 1021, 1023, 1025, 1072, 1112, 1113, 1114, 1129, 1197, 1200, 1205, 1211, 1214, 1290, 1350, 1377, 1430, 1431, 1432, 1434, 1486, 1498, 1533, 1535, 1602, 1605, 1608, 1643, 1662, 1667, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1696, 1697, 1698, 1704, 1820, 1881, 1882, 1883, 1884, 1888, 1890, 1892, 1894, 1899, 1903, 1904, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1920, 1921, 1922, 1925, 1926, 1928, 1929, 1930, 1931, 1935, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1946, 1947, 1954, 1959, 1962, 1965, 1968, 1969], "properti": [3, 21, 25, 26, 27, 31, 34, 39, 42, 46, 47, 49, 57, 782, 870, 902, 908, 1002, 1088, 1089, 1091, 1093, 1094, 1095, 1103, 1104, 1105, 1200, 1346, 1434, 1467, 1589, 1605, 1615, 1616, 1617, 1653, 1880, 1884, 1888, 1894, 1904, 1907, 1909, 1912, 1923, 1927, 1930, 1936, 1940, 1942, 1943, 1946, 1948, 1956, 1957, 1958, 1970, 1972], "significant_figur": 3, "figur": [3, 7, 8, 27, 57, 1906, 1908, 1909, 1925, 1929, 1938, 1945, 1950, 1959], "intend": [3, 42, 46, 57, 880, 889, 980, 1220, 1498, 1608, 1609, 1610, 1611, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1693, 1884, 1899, 1902, 1904, 1915, 1928], "interquartil": 3, "mitig": [3, 58], "tail": [3, 21, 40], "645": 3, "conjunct": [3, 21, 25, 29, 49, 814, 1498, 1533, 1614, 1934, 1936], "trim_sigfig": 3, "human": [3, 13, 40, 46, 1017, 1030, 1902, 1925, 1956, 1970], "raw": [3, 57, 1126, 1259, 1907, 1928, 1930], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 15, 21, 25, 27, 31, 33, 40, 47, 49, 56, 57, 486, 670, 750, 898, 1089, 1091, 1094, 1095, 1097, 1098, 1101, 1102, 1104, 1105, 1107, 1109, 1216, 1290, 1352, 1353, 1354, 1371, 1374, 1386, 1397, 1398, 1399, 1416, 1417, 1418, 1419, 1444, 1473, 1479, 1481, 1614, 1815, 1884, 1892, 1896, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1918, 1925, 1927, 1929, 1931, 1932, 1936, 1938, 1955, 1957, 1958, 1962, 1966, 1968], "functioncount": [3, 1880], "stat": [3, 52, 816, 826, 827, 1029, 1036, 1037, 1038, 1473, 1614, 1894, 1907, 1949, 1959, 1969], "as_standard": 3, "strip": [3, 1535, 1614, 1881, 1926, 1940], "prefix": [3, 25, 27, 42, 49, 738, 747, 1200, 1434, 1614, 1879, 1890, 1904, 1925, 1928, 1949], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 15, 18, 25, 31, 57, 670, 898, 1092, 1093, 1095, 1103, 1104, 1105, 1240, 1477, 1478, 1479, 1480, 1481, 1605, 1712, 1820, 1870, 1871, 1885, 1890, 1904, 1908, 1909, 1914, 1915, 1923, 1929, 1940, 1955, 1960, 1962, 1969], "locat": [3, 9, 14, 25, 31, 39, 78, 141, 145, 245, 503, 670, 924, 926, 987, 1051, 1052, 1222, 1272, 1298, 1303, 1306, 1324, 1371, 1381, 1468, 1485, 1498, 1533, 1598, 1601, 1614, 1632, 1723, 1758, 1780, 1802, 1805, 1861, 1879, 1881, 1893, 1907, 1920, 1925, 1928, 1930, 1936, 1938, 1940, 1945, 1949, 1954, 1958], "resembl": [3, 15], "23234231": 3, "first_build_dir": 3, "foo": [3, 14, 25, 39, 40, 46, 56, 57, 58, 65, 66, 814, 844, 849, 942, 1129, 1130, 1139, 1198, 1203, 1208, 1211, 1212, 1215, 1216, 1662, 1862, 1864, 1879, 1881, 1883, 1884, 1888, 1909, 1915, 1925, 1928, 1947, 1954], "9823794": 3, "bar": [3, 7, 39, 46, 57, 58, 65, 66, 844, 849, 962, 1129, 1203, 1211, 1818, 1819, 1867, 1868, 1879, 1881, 1883, 1893, 1915, 1925, 1928, 1947, 1962], "53453": 3, "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1197], "site": [3, 7], "denois": 3, "explan": [3, 9, 35, 852, 1200, 1434, 1880, 1908, 1909, 1915, 1959, 1966, 1969], "delta": [3, 31, 750, 962, 1386, 1395, 1404, 1465, 1542, 1677, 1818, 1819, 1846, 1867, 1868, 1882, 1902], "inclus": [3, 31, 46, 79, 503, 1160, 1162, 1271, 1287, 1293, 1733, 1734, 1817, 1935, 1947], "diff": [3, 7, 1881, 1882, 1926], "One": [3, 8, 14, 25, 27, 47, 49, 52, 54, 57, 573, 921, 1130, 1141, 1191, 1486, 1570, 1621, 1627, 1630, 1693, 1698, 1706, 1733, 1734, 1856, 1872, 1881, 1883, 1884, 1898, 1899, 1905, 1906, 1907, 1909, 1914, 1929, 1938, 1945, 1955, 1956, 1957, 1958, 1967], "unit": [3, 11, 14, 31, 33, 43, 49, 57, 750, 751, 1090, 1108, 1346, 1356, 1376, 1379, 1384, 1385, 1386, 1387, 1452, 1453, 1463, 1498, 1522, 1526, 1531, 1532, 1578, 1586, 1636, 1637, 1641, 1644, 1646, 1649, 1848, 1895, 1904, 1906, 1912, 1928, 1953, 1954], "logic": [3, 5, 12, 14, 21, 45, 49, 57, 914, 916, 917, 919, 1089, 1091, 1094, 1095, 1097, 1098, 1101, 1102, 1104, 1105, 1107, 1109, 1130, 1204, 1282, 1283, 1284, 1285, 1295, 1440, 1614, 1721, 1748, 1833, 1884, 1885, 1907, 1908, 1909, 1910, 1912, 1931, 1962], "question": [3, 10, 21, 57, 1664, 1880, 1904, 1951, 1957, 1958], "why": [3, 7, 21, 54, 57, 1072, 1204, 1583, 1880, 1891, 1910, 1957, 1958, 1967, 1971], "involv": [3, 5, 7, 9, 11, 21, 25, 46, 49, 52, 54, 57, 71, 1614, 1766, 1884, 1897, 1899, 1904, 1907, 1908, 1911, 1915, 1925, 1931, 1936, 1937, 1938, 1940, 1957, 1958], "look": [3, 4, 7, 8, 9, 12, 15, 25, 31, 41, 42, 46, 47, 51, 54, 57, 58, 67, 68, 852, 891, 893, 954, 1200, 1295, 1342, 1434, 1524, 1645, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1806, 1807, 1808, 1810, 1811, 1881, 1883, 1888, 1897, 1903, 1904, 1907, 1910, 1914, 1915, 1917, 1921, 1925, 1928, 1931, 1936, 1937, 1950, 1954, 1955, 1957, 1959, 1960, 1961, 1962, 1963, 1966, 1968, 1969, 1971], "autom": [3, 8, 57, 1881, 1931, 1959, 1969], "easili": [3, 7, 8, 11, 22, 25, 27, 1130, 1441, 1533, 1571, 1693, 1751, 1862, 1909, 1910, 1912, 1915, 1920, 1927, 1935, 1936, 1938, 1945, 1968, 1969], "exclus": [3, 21, 25, 31, 33, 42, 46, 57, 725, 1162, 1614, 1733, 1734, 1737, 1904, 1947], "basi": [3, 9, 10, 31, 1273, 1698, 1907, 1914, 1931, 1936], "thought": [3, 39, 57, 1090, 1092, 1108], "path_and_function_nam": 3, "children": [3, 35, 49, 57, 781, 1200, 1434, 1896, 1915, 1928, 1938], "identifi": [3, 7, 9, 25, 33, 36, 39, 42, 43, 44, 57, 807, 1162, 1272, 1473, 1885, 1896, 1905, 1914, 1915, 1928, 1936, 1937, 1938, 1945, 1957, 1962, 1967], "hot": [3, 31, 1535, 1570, 1912, 1954, 1962], "spot": [3, 1621], "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 304, 554, 855, 1126, 1535, 1806, 1807, 1808, 1810, 1811, 1821, 1882, 1899, 1926, 1940], "index": [3, 15, 21, 22, 27, 31, 40, 46, 57, 182, 199, 272, 303, 304, 305, 306, 307, 308, 310, 312, 313, 461, 462, 502, 503, 504, 505, 506, 507, 508, 509, 685, 686, 807, 844, 867, 882, 926, 991, 994, 1051, 1052, 1092, 1133, 1134, 1135, 1139, 1141, 1142, 1171, 1172, 1173, 1174, 1198, 1217, 1222, 1230, 1248, 1266, 1280, 1288, 1290, 1294, 1298, 1301, 1302, 1303, 1306, 1324, 1330, 1333, 1334, 1342, 1357, 1370, 1377, 1378, 1435, 1436, 1441, 1444, 1445, 1483, 1485, 1524, 1525, 1570, 1638, 1640, 1647, 1648, 1653, 1666, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1707, 1708, 1723, 1755, 1756, 1757, 1758, 1760, 1761, 1762, 1792, 1803, 1804, 1806, 1807, 1808, 1810, 1811, 1820, 1835, 1856, 1857, 1859, 1860, 1861, 1864, 1872, 1880, 1881, 1882, 1884, 1891, 1896, 1897, 1898, 1899, 1904, 1907, 1908, 1910, 1913, 1919, 1926, 1938, 1940, 1943, 1944, 1945, 1946, 1947, 1958, 1959, 1964, 1969], "cpython": [3, 46, 57, 1951, 1956], "known": [3, 7, 9, 20, 24, 25, 29, 36, 47, 50, 53, 55, 58, 67, 68, 1136, 1137, 1216, 1217, 1272, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1404, 1449, 1463, 1465, 1485, 1544, 1586, 1605, 1779, 1780, 1839, 1880, 1882, 1886, 1894, 1896, 1899, 1902, 1904, 1906, 1919, 1925, 1927, 1936, 1938, 1941, 1951, 1957, 1960, 1969], "quit": [3, 7, 57, 1621, 1884, 1909, 1911, 1928, 1936, 1967], "noisi": 3, "higher": [3, 7, 8, 22, 25, 49, 50, 55, 58, 63, 66, 141, 883, 884, 897, 978, 1018, 1029, 1064, 1131, 1137, 1141, 1160, 1177, 1331, 1370, 1426, 1441, 1583, 1723, 1825, 1872, 1880, 1888, 1907, 1909, 1910, 1912, 1914, 1920, 1931, 1932, 1936, 1943, 1957], "filter": [3, 534, 762, 763, 764, 1197, 1220, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1820, 1884, 1928, 1969], "rather": [3, 8, 9, 14, 25, 33, 35, 44, 46, 49, 57, 58, 66, 769, 775, 907, 932, 1198, 1201, 1272, 1334, 1498, 1533, 1544, 1602, 1628, 1766, 1771, 1881, 1884, 1898, 1899, 1905, 1907, 1909, 1910, 1925, 1928, 1931, 1936, 1940, 1945, 1954, 1955, 1958, 1959, 1960, 1961, 1962], "unicod": [3, 1885], "dictionari": [3, 14, 21, 22, 31, 53, 57, 670, 782, 783, 784, 787, 805, 806, 807, 828, 829, 830, 844, 848, 854, 942, 1029, 1129, 1139, 1200, 1201, 1208, 1212, 1216, 1217, 1272, 1273, 1377, 1378, 1434, 1435, 1444, 1524, 1643, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1883, 1885, 1909, 1915, 1923, 1925, 1927, 1936, 1945, 1949, 1965, 1970, 1971], "lookup": [3, 27, 31, 1377, 1524, 1881, 1885, 1906, 1937, 1962, 1963], "map": [3, 14, 25, 27, 31, 33, 39, 40, 42, 43, 46, 47, 49, 54, 55, 57, 58, 66, 71, 674, 725, 782, 783, 787, 789, 804, 805, 807, 829, 830, 844, 845, 846, 847, 848, 854, 875, 923, 1124, 1130, 1141, 1153, 1162, 1208, 1211, 1272, 1273, 1365, 1366, 1367, 1373, 1374, 1375, 1379, 1381, 1430, 1431, 1432, 1435, 1444, 1519, 1520, 1521, 1526, 1627, 1643, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1723, 1725, 1857, 1858, 1872, 1885, 1898, 1900, 1904, 1907, 1908, 1909, 1910, 1916, 1921, 1923, 1928, 1931, 1934, 1936, 1937, 1938, 1942, 1947, 1956, 1958, 1962, 1968, 1970], "agnost": [3, 16, 42, 963, 964, 965, 966, 967, 968, 969, 970, 971, 1533, 1621, 1898], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 14, 25, 26, 31, 33, 34, 35, 39, 43, 46, 47, 49, 56, 57, 573, 577, 578, 607, 674, 683, 685, 686, 689, 750, 875, 898, 899, 929, 936, 940, 977, 987, 989, 1017, 1030, 1064, 1070, 1072, 1118, 1119, 1139, 1141, 1163, 1200, 1208, 1216, 1218, 1222, 1256, 1272, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1332, 1334, 1386, 1404, 1434, 1449, 1486, 1570, 1608, 1614, 1628, 1653, 1660, 1661, 1665, 1667, 1720, 1744, 1760, 1797, 1809, 1816, 1818, 1819, 1823, 1846, 1867, 1868, 1872, 1873, 1880, 1881, 1883, 1884, 1885, 1886, 1891, 1896, 1899, 1907, 1909, 1915, 1918, 1921, 1923, 1928, 1929, 1936, 1938, 1940, 1942, 1943, 1947, 1955, 1958, 1967, 1968, 1971], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 314, 319, 534, 604, 986, 1805, 1809, 1856, 1882, 1908, 1926, 1940, 1959, 1962], "finit": [4, 31, 898, 899, 1189, 1190, 1236, 1237, 1247, 1248, 1264, 1290, 1324, 1328, 1350, 1824, 1909, 1912, 1947], "natur": [4, 7, 8, 11, 25, 31, 49, 58, 60, 75, 898, 899, 1229, 1234, 1260, 1274, 1276, 1281, 1342, 1481, 1583, 1912, 1922, 1923, 1940, 1941], "against": [4, 5, 14, 25, 33, 42, 784, 855, 898, 899, 1100, 1101, 1102, 1106, 1107, 1109, 1142, 1191, 1200, 1216, 1217, 1434, 1440, 1674, 1879, 1884, 1928, 1950, 1966], "cprofil": 4, "mode": [4, 8, 21, 22, 25, 27, 31, 42, 44, 54, 55, 57, 70, 212, 213, 478, 736, 737, 762, 763, 764, 769, 775, 776, 777, 805, 807, 813, 816, 849, 850, 879, 881, 884, 885, 886, 891, 892, 893, 894, 898, 942, 947, 973, 1006, 1046, 1047, 1076, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1130, 1133, 1134, 1135, 1136, 1139, 1140, 1148, 1175, 1183, 1184, 1198, 1200, 1201, 1204, 1216, 1218, 1259, 1272, 1302, 1315, 1316, 1352, 1353, 1354, 1362, 1363, 1364, 1378, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1450, 1473, 1486, 1487, 1508, 1509, 1510, 1525, 1533, 1544, 1571, 1602, 1603, 1604, 1615, 1622, 1624, 1628, 1632, 1665, 1698, 1706, 1722, 1765, 1767, 1768, 1861, 1880, 1882, 1892, 1897, 1902, 1907, 1908, 1910, 1911, 1915, 1922, 1923, 1926, 1930, 1932, 1933, 1934, 1936, 1948, 1954, 1956, 1958, 1959, 1960, 1961, 1964, 1969, 1970], "correct": [4, 6, 7, 22, 25, 26, 27, 31, 42, 46, 196, 197, 200, 212, 545, 570, 593, 594, 605, 887, 899, 962, 1093, 1095, 1103, 1104, 1105, 1174, 1198, 1201, 1216, 1217, 1236, 1371, 1388, 1400, 1605, 1614, 1653, 1770, 1818, 1819, 1867, 1868, 1881, 1882, 1883, 1897, 1898, 1907, 1909, 1912, 1942, 1964, 1968], "launch": [4, 14, 21, 28, 33, 34, 35, 40, 41, 42, 45, 56, 976, 1614, 1880, 1904, 1906, 1907, 1908, 1909, 1936, 1954, 1961], "spent": [4, 25, 908, 1704, 1906, 1915, 1959, 1967, 1969], "extrem": [4, 1614, 1904, 1925, 1958, 1962], "expens": [4, 21, 31, 49, 1627, 1907, 1912, 1914, 1930, 1936, 1946, 1957, 1959, 1963, 1966, 1969], "bound": [4, 15, 22, 25, 46, 49, 471, 785, 926, 937, 1086, 1087, 1200, 1347, 1348, 1349, 1427, 1428, 1429, 1434, 1452, 1533, 1706, 1737, 1758, 1884, 1885, 1902, 1904, 1928, 1931, 1941, 1957, 1958, 1969], "greater": [4, 25, 42, 58, 59, 283, 607, 670, 918, 931, 932, 937, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1144, 1156, 1255, 1319, 1350, 1482, 1533, 1544, 1570, 1583, 1602, 1628, 1661, 1861, 1882, 1904, 1907, 1919, 1926, 1940, 1941], "spend": [4, 7, 1273, 1963], "sens": [4, 31, 42, 57, 1643, 1857, 1858, 1884, 1904], "respons": [4, 7, 9, 25, 27, 29, 31, 33, 39, 44, 49, 56, 976, 1422, 1551, 1614, 1809, 1904, 1907, 1909, 1910, 1915, 1936, 1958], "Of": [4, 1666, 1879, 1908, 1909, 1959], "cours": [4, 57, 1879, 1908, 1909, 1936, 1959, 1962], "realiti": 4, "complic": [4, 22, 30, 57, 783, 1766, 1888, 1898, 1905, 1928, 1936, 1938, 1958], "depend": [4, 5, 12, 14, 21, 25, 29, 31, 33, 42, 43, 44, 47, 49, 57, 306, 775, 868, 984, 1031, 1035, 1049, 1050, 1093, 1095, 1103, 1104, 1105, 1131, 1135, 1140, 1212, 1216, 1236, 1237, 1264, 1290, 1295, 1350, 1351, 1368, 1370, 1378, 1381, 1394, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1485, 1486, 1498, 1505, 1506, 1516, 1525, 1533, 1545, 1568, 1576, 1583, 1602, 1605, 1614, 1632, 1633, 1639, 1698, 1710, 1712, 1729, 1745, 1806, 1807, 1808, 1810, 1811, 1824, 1848, 1875, 1879, 1881, 1883, 1884, 1888, 1891, 1896, 1904, 1906, 1907, 1909, 1910, 1912, 1915, 1917, 1922, 1924, 1925, 1930, 1931, 1936, 1940, 1946, 1947, 1951, 1954, 1955, 1957, 1958, 1959, 1961, 1962, 1965, 1968, 1971], "could": [4, 5, 7, 8, 21, 25, 31, 33, 42, 49, 54, 56, 57, 573, 574, 575, 577, 578, 944, 1011, 1093, 1095, 1103, 1104, 1105, 1197, 1206, 1231, 1272, 1290, 1315, 1316, 1621, 1697, 1801, 1857, 1883, 1884, 1891, 1896, 1904, 1907, 1908, 1921, 1925, 1928, 1931, 1932, 1936, 1937, 1938, 1940, 1944, 1945, 1955, 1959, 1960, 1965, 1969], "account": [4, 40, 57, 1614, 1902, 1906, 1940, 1954], "heavili": [4, 1682, 1906, 1909, 1928], "similarli": [4, 7, 46, 56, 57, 750, 780, 784, 848, 933, 1092, 1200, 1256, 1434, 1481, 1610, 1611, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1849, 1850, 1851, 1852, 1883, 1904, 1909, 1911, 1912, 1918, 1940, 1958, 1961], "platform": [4, 8, 9, 14, 25, 34, 35, 39, 1247, 1248, 1259, 1722, 1824, 1892, 1913, 1918, 1919, 1931], "startup": 4, "slower": [4, 14, 25, 866, 892, 1112, 1113, 1114, 1230, 1237, 1552, 1627, 1909, 1919, 1927, 1941, 1958], "rerun": [5, 25, 1907], "segment": [5, 1029, 1126, 1465, 1907, 1928, 1959, 1965, 1971], "persist": [5, 19, 27, 49, 750, 805, 806, 807, 1200, 1386, 1404, 1434, 1449, 1915, 1920, 1921, 1954, 1958, 1963], "rng": [5, 21, 1004, 1043, 1759, 1907, 1919, 1935], "advanc": [5, 15, 21, 22, 33, 1477, 1479, 1481, 1666, 1864, 1891, 1898, 1907, 1909, 1913, 1917, 1923, 1944, 1945, 1959], "juggl": 5, "dropout": [5, 57, 724, 725, 750, 1200, 1346, 1373, 1374, 1375, 1379, 1386, 1404, 1434, 1440, 1449, 1450, 1477, 1479, 1481, 1499, 1519, 1520, 1521, 1526, 1583, 1880, 1882, 1892, 1898, 1899, 1904, 1907, 1926, 1933], "moder": 5, "hit": [5, 8, 14, 1614, 1879, 1907, 1954, 1959, 1963, 1969], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1880], "omit": [5, 14, 25, 43, 1106, 1107, 1109, 1388, 1448, 1921, 1925, 1936, 1947, 1960], "exclud": [5, 9, 22, 42, 57, 949, 1162, 1378, 1525, 1573, 1674, 1766, 1849, 1850, 1851, 1852, 1904, 1913, 1928, 1937, 1956, 1959], "_infer_device_typ": 5, "consequ": [5, 54, 1264, 1404, 1824, 1884, 1904, 1907, 1917, 1919, 1922], "random": [5, 31, 33, 42, 43, 50, 57, 75, 79, 145, 750, 882, 912, 1004, 1005, 1010, 1019, 1020, 1039, 1040, 1043, 1044, 1134, 1141, 1152, 1176, 1273, 1293, 1313, 1314, 1318, 1320, 1346, 1357, 1379, 1386, 1404, 1452, 1526, 1576, 1581, 1605, 1628, 1634, 1640, 1641, 1648, 1649, 1668, 1712, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1759, 1772, 1825, 1864, 1872, 1879, 1880, 1882, 1890, 1902, 1910, 1912, 1918, 1925, 1926, 1945, 1959, 1969], "gradient": [5, 11, 21, 22, 25, 29, 30, 31, 49, 50, 53, 141, 212, 213, 281, 326, 477, 478, 485, 503, 685, 686, 870, 879, 881, 883, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 903, 904, 913, 939, 1076, 1129, 1130, 1131, 1132, 1136, 1141, 1142, 1175, 1200, 1236, 1237, 1240, 1247, 1248, 1264, 1273, 1290, 1292, 1298, 1301, 1303, 1350, 1357, 1365, 1366, 1367, 1370, 1371, 1377, 1378, 1388, 1402, 1403, 1434, 1441, 1465, 1516, 1517, 1524, 1525, 1535, 1544, 1552, 1554, 1555, 1568, 1602, 1603, 1604, 1610, 1611, 1614, 1615, 1618, 1619, 1620, 1627, 1632, 1665, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1696, 1697, 1710, 1768, 1805, 1824, 1872, 1880, 1881, 1882, 1891, 1898, 1899, 1900, 1902, 1907, 1908, 1909, 1911, 1912, 1915, 1918, 1926, 1927, 1936, 1937, 1940, 1959, 1967], "among": [5, 21, 22, 25, 29, 31, 42, 985, 986, 989, 1162, 1371, 1668, 1884, 1917, 1958], "detect": [5, 14, 17, 18, 21, 25, 26, 33, 35, 49, 891, 892, 893, 894, 895, 896, 942, 1130, 1204, 1477, 1478, 1480, 1614, 1861, 1880, 1896, 1899, 1907, 1912, 1918, 1925, 1928, 1936, 1957, 1959, 1969], "priorit": [5, 1133, 1134, 1136, 1679, 1680, 1940], "defaultdevicetyp": 5, "anticip": [5, 1971], "belong": [5, 25, 27, 29, 31, 39, 57, 926, 978, 1694, 1879, 1907, 1927, 1962, 1968, 1970], "use_reentr": [5, 1614], "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 57, 1372, 1634, 1846, 1900, 1915, 1922, 1923, 1927, 1929, 1931, 1953, 1962, 1969], "recomput": [5, 889, 1486, 1544, 1664, 1927, 1957], "refer": [5, 7, 14, 21, 22, 25, 26, 27, 29, 31, 34, 37, 38, 42, 43, 49, 50, 56, 70, 71, 72, 75, 77, 245, 724, 725, 746, 754, 782, 783, 784, 809, 810, 811, 814, 815, 816, 849, 863, 868, 883, 924, 1011, 1016, 1075, 1126, 1148, 1149, 1181, 1188, 1200, 1203, 1212, 1219, 1232, 1237, 1253, 1257, 1270, 1273, 1357, 1388, 1434, 1483, 1498, 1506, 1515, 1533, 1544, 1601, 1614, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1712, 1729, 1765, 1766, 1787, 1825, 1861, 1879, 1880, 1882, 1896, 1897, 1899, 1900, 1903, 1904, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1917, 1919, 1925, 1927, 1932, 1933, 1936, 1937, 1940, 1943, 1944, 1945, 1948, 1951, 1955, 1956, 1961, 1962, 1965, 1969], "potenti": [5, 8, 25, 42, 44, 49, 75, 182, 199, 1210, 1246, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1614, 1861, 1883, 1891, 1896, 1904, 1907, 1909, 1928, 1940, 1944, 1957, 1959, 1962], "silent": [5, 1019, 1020, 1039, 1040, 1174, 1216, 1434, 1619, 1620, 1809, 1907, 1918, 1925], "consider": [5, 7, 72, 874, 1197, 1378, 1614, 1621, 1884, 1906], "limit": [5, 8, 9, 12, 21, 47, 49, 50, 55, 72, 954, 1042, 1130, 1214, 1319, 1357, 1377, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1583, 1614, 1643, 1771, 1880, 1884, 1888, 1896, 1898, 1899, 1904, 1907, 1908, 1915, 1918, 1919, 1920, 1922, 1928, 1931, 1934, 1936, 1937, 1940, 1947, 1957, 1958, 1962, 1966, 1969], "reentrant": [5, 1614], "soon": [5, 30, 42, 46, 49, 783, 1904, 1931, 1936, 1938, 1959, 1962], "intermedi": [5, 12, 14, 32, 46, 47, 54, 57, 72, 923, 954, 1123, 1130, 1137, 1290, 1378, 1477, 1479, 1481, 1525, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1881, 1884, 1888, 1907, 1909, 1910, 1911, 1918, 1950, 1957, 1958], "set_checkpoint_early_stop": 5, "entireti": 5, "graph": [5, 8, 12, 25, 27, 31, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 130, 141, 212, 213, 670, 737, 782, 783, 805, 806, 807, 813, 816, 883, 889, 897, 942, 944, 947, 973, 1008, 1013, 1018, 1130, 1200, 1203, 1204, 1210, 1212, 1216, 1614, 1674, 1676, 1679, 1680, 1683, 1880, 1884, 1890, 1892, 1900, 1903, 1908, 1909, 1912, 1915, 1916, 1922, 1923, 1925, 1928, 1932, 1933, 1934, 1936, 1937, 1938, 1940, 1945, 1950, 1951, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1965, 1966], "no_grad": [5, 478, 851, 1076, 1131, 1135, 1140, 1175, 1200, 1377, 1434, 1440, 1481, 1615, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1902, 1904, 1915, 1931, 1948], "condit": [5, 12, 19, 21, 27, 46, 47, 54, 57, 58, 61, 65, 66, 607, 610, 614, 684, 750, 892, 898, 899, 954, 1197, 1216, 1230, 1232, 1237, 1240, 1246, 1247, 1248, 1259, 1264, 1386, 1404, 1449, 1481, 1655, 1660, 1848, 1875, 1881, 1882, 1883, 1885, 1899, 1904, 1909, 1918, 1929, 1945, 1956, 1957, 1958, 1964], "unmet": 5, "particip": [5, 9, 21, 25, 26, 29, 42, 43, 1614, 1937, 1957], "wherea": [5, 46, 1256, 1315, 1316, 1329, 1693, 1824, 1884, 1904, 1947, 1958], "know": [5, 7, 8, 14, 26, 32, 57, 476, 887, 892, 1123, 1130, 1211, 1614, 1881, 1884, 1891, 1903, 1904, 1907, 1909, 1912, 1925, 1928, 1936, 1937, 1938, 1940, 1954, 1956, 1957, 1958, 1959, 1962], "lstm": [5, 753, 1405, 1450, 1882, 1907, 1925, 1926, 1931, 1933, 1934, 1945], "hidden": [5, 750, 1139, 1386, 1387, 1404, 1405, 1449, 1451, 1615, 1907, 1945], "correctli": [5, 21, 25, 42, 49, 476, 1130, 1200, 1216, 1434, 1552, 1881, 1883, 1884, 1894, 1898, 1903, 1904, 1908, 1909, 1910, 1917, 1919, 1931, 1936], "entrant": 5, "futur": [5, 8, 9, 12, 22, 25, 27, 33, 42, 43, 46, 54, 57, 281, 312, 503, 507, 547, 670, 677, 783, 805, 806, 807, 816, 851, 889, 932, 933, 942, 954, 955, 956, 972, 973, 975, 976, 978, 1007, 1008, 1015, 1016, 1018, 1146, 1197, 1200, 1203, 1210, 1211, 1214, 1219, 1231, 1242, 1244, 1245, 1246, 1249, 1262, 1290, 1291, 1302, 1312, 1374, 1434, 1535, 1557, 1558, 1559, 1606, 1614, 1619, 1661, 1662, 1667, 1682, 1722, 1738, 1820, 1824, 1848, 1880, 1881, 1882, 1883, 1884, 1885, 1890, 1891, 1892, 1894, 1898, 1899, 1906, 1907, 1909, 1920, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1933, 1936, 1940, 1942, 1946, 1947, 1948, 1950, 1957, 1959, 1964, 1971], "turn": [5, 14, 21, 24, 54, 57, 72, 670, 863, 942, 1188, 1216, 1478, 1480, 1806, 1807, 1808, 1809, 1810, 1811, 1861, 1891, 1904, 1907, 1918, 1919, 1925, 1930, 1931, 1937, 1940, 1957, 1958, 1961, 1962, 1967], "open": [5, 8, 9, 14, 21, 31, 42, 46, 50, 679, 905, 926, 1122, 1208, 1272, 1295, 1305, 1550, 1881, 1891, 1896, 1899, 1913, 1921, 1922, 1925, 1928, 1931, 1936, 1940, 1941, 1959, 1967, 1971], "ran": [5, 18, 49, 1959, 1965, 1969], "sequenti": [5, 21, 29, 46, 47, 49, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 783, 1141, 1200, 1210, 1380, 1434, 1473, 1484, 1621, 1629, 1643, 1707, 1872, 1881, 1896, 1899, 1907, 1915, 1925, 1927, 1929, 1931, 1950, 1959, 1967, 1969], "func": [5, 25, 52, 54, 57, 58, 60, 852, 882, 884, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 1175, 1203, 1216, 1217, 1662, 1864, 1872, 1880, 1884, 1888, 1903, 1936, 1938, 1970], "compris": [5, 43, 46], "chunk": [5, 21, 25, 27, 49, 929, 989, 1135, 1371, 1614, 1812, 1881, 1882, 1897, 1926, 1927, 1929, 1936, 1940, 1944], "input_var": [5, 1371], "set_checkpoint_debug_en": [5, 1880], "defer": [5, 22, 49, 1907, 1929], "person": [6, 7, 9], "land": [6, 9, 10, 1966], "six": [6, 71, 1364], "commit": [6, 7, 9, 14, 50, 1879, 1880, 1918, 1919, 1966], "repositori": [6, 9, 53, 57, 1879, 1917], "submit": [6, 9, 975, 976, 978, 1312, 1907, 1919, 1956, 1959, 1966], "month": [6, 9], "qualifi": [6, 25, 27, 30, 39, 57, 670, 1200, 1434, 1888, 1890, 1923, 1928], "pr": [6, 7, 1712, 1825, 1950, 1959], "interest": [6, 7, 9, 72, 1904, 1910, 1912, 1915, 1922, 1956, 1958, 1963, 1967], "merge_rul": 6, "vote": [6, 9], "decis": [6, 27, 33, 42, 44, 57, 670, 1216, 1891, 1903, 1957], "criteria": [6, 9, 1273], "approv": [6, 9], "Not": [6, 43, 71, 1332, 1481, 1820, 1881, 1883, 1884, 1885, 1907, 1909, 1926, 1931, 1936, 1962], "busi": [6, 9, 1963], "dai": [6, 7, 1958, 1966], "contributor": [6, 7, 8, 9], "seen": [6, 12, 18, 31, 57, 212, 929, 942, 962, 1302, 1365, 1366, 1367, 1465, 1557, 1558, 1559, 1706, 1881, 1891, 1904, 1907, 1925, 1940, 1962], "thumb": [6, 25], "deprec": [7, 25, 30, 33, 42, 43, 46, 49, 53, 397, 503, 547, 593, 775, 776, 777, 783, 816, 897, 898, 932, 933, 972, 1022, 1026, 1146, 1200, 1255, 1258, 1290, 1291, 1350, 1351, 1368, 1370, 1393, 1394, 1400, 1401, 1425, 1426, 1434, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1487, 1488, 1505, 1506, 1516, 1545, 1568, 1576, 1602, 1603, 1604, 1606, 1614, 1618, 1661, 1662, 1664, 1667, 1722, 1738, 1820, 1824, 1848, 1880, 1881, 1886, 1896, 1905, 1930, 1934, 1942, 1946, 1947, 1959], "wiki": [7, 9, 22, 1922, 1972], "acceler": [7, 22, 1352, 1353, 1354, 1473, 1676, 1913, 1951, 1954, 1959], "deep": [7, 9, 57, 1352, 1353, 1354, 1376, 1473, 1692, 1880, 1902, 1907, 1915, 1931, 1953, 1957, 1969], "neural": [7, 8, 15, 57, 1346, 1357, 1372, 1379, 1388, 1400, 1433, 1434, 1441, 1446, 1447, 1461, 1463, 1477, 1479, 1481, 1563, 1586, 1630, 1690, 1698, 1704, 1881, 1883, 1884, 1902, 1907, 1909, 1918, 1922, 1931, 1957], "tape": [7, 1954], "system": [7, 8, 14, 15, 17, 21, 43, 54, 57, 935, 950, 1153, 1208, 1232, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1261, 1262, 1263, 1267, 1272, 1291, 1319, 1477, 1479, 1481, 1614, 1630, 1632, 1767, 1848, 1885, 1890, 1894, 1904, 1906, 1907, 1914, 1915, 1917, 1921, 1928, 1936, 1957, 1967], "organ": [7, 1908, 1914, 1928, 1959, 1962], "govern": [7, 8, 1880, 1931], "technic": [7, 9, 42, 46, 49, 57, 1200, 1434, 1610, 1611, 1904, 1911, 1917, 1928, 1957], "md": [7, 57, 782, 1928], "healthi": [7, 33, 42], "team": [7, 25, 50, 75, 76, 78, 1920, 1929], "commun": [7, 8, 9, 26, 27, 29, 33, 42, 44, 49, 670, 1614, 1904, 1908, 1922, 1936, 1937, 1959], "project": [7, 27, 1302, 1404, 1440, 1632, 1712, 1879, 1913, 1922, 1968], "ve": [7, 52, 53, 54, 57, 1204, 1864, 1891, 1896, 1904, 1910, 1937, 1945, 1958, 1959, 1962], "come": [7, 8, 9, 21, 31, 32, 39, 42, 46, 50, 54, 942, 1072, 1123, 1130, 1200, 1272, 1373, 1374, 1375, 1379, 1400, 1673, 1892, 1908, 1910, 1914, 1928, 1936, 1938, 1940, 1956, 1962, 1965], "peopl": [7, 1904, 1931, 1961], "scratch": [7, 1904, 1969], "itch": 7, "acquaint": 7, "tip": [7, 1907, 1959], "tracker": [7, 1273], "confirm": [7, 1879, 1881, 1909, 1925, 1936, 1938, 1965], "tend": [7, 893, 1861], "bootcamp": 7, "1hr": 7, "although": [7, 8, 31, 54, 57, 1365, 1366, 1367, 1434, 1442, 1614, 1880, 1884, 1903, 1909, 1918, 1929, 1931, 1967, 1968], "join": [7, 22, 25, 29, 42, 43, 56, 57, 1614, 1879, 1880, 1885, 1896, 1904, 1908, 1917, 1926, 1946], "u": [7, 8, 12, 50, 55, 57, 58, 750, 891, 933, 1237, 1239, 1243, 1247, 1248, 1264, 1290, 1292, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1387, 1404, 1405, 1419, 1421, 1449, 1451, 1452, 1473, 1484, 1632, 1712, 1824, 1825, 1881, 1882, 1891, 1898, 1902, 1904, 1907, 1908, 1909, 1910, 1915, 1928, 1930, 1940, 1944, 1945, 1954, 1957, 1959, 1962, 1963, 1964, 1969], "dev": [7, 10, 34, 39, 1956, 1969], "happi": 7, "research": [7, 8, 9, 1614, 1879, 1904, 1912, 1920], "partner": [7, 1951], "speed": [7, 8, 14, 29, 49, 984, 1072, 1129, 1191, 1204, 1210, 1264, 1342, 1440, 1621, 1766, 1824, 1904, 1906, 1907, 1908, 1909, 1911, 1913, 1918, 1931, 1936, 1956, 1962], "design": [7, 9, 21, 31, 39, 42, 47, 50, 53, 54, 55, 898, 899, 1200, 1220, 1434, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1836, 1879, 1880, 1894, 1907, 1909, 1913, 1915, 1923, 1928, 1956, 1957, 1959, 1961, 1964, 1969], "comment": [7, 57, 1664, 1762, 1884, 1885, 1909, 1943, 1945, 1963], "crack": 7, "idea": [7, 50, 1072, 1342, 1614, 1907, 1914, 1925, 1937, 1959], "rfc": [7, 1904, 1931, 1937], "big": [7, 1679, 1680, 1683, 1689, 1690, 1806, 1807, 1808, 1809, 1810, 1811, 1907, 1927, 1931, 1957, 1958, 1963], "post": [7, 8, 26, 27, 29, 49, 478, 670, 846, 847, 851, 1200, 1434, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1880, 1888, 1904, 1908, 1909, 1911, 1921, 1940, 1956, 1958, 1969], "standard": [7, 14, 18, 22, 31, 35, 36, 40, 47, 54, 57, 343, 368, 579, 1092, 1346, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1400, 1406, 1473, 1479, 1481, 1668, 1712, 1735, 1781, 1786, 1818, 1819, 1883, 1885, 1899, 1902, 1906, 1907, 1917, 1918, 1922, 1925, 1928, 1941], "lot": [7, 14, 21, 46, 1896, 1904, 1907, 1912, 1917, 1928, 1929, 1935, 1937, 1945, 1957, 1958, 1962, 1963, 1971], "boil": 7, "mostli": [7, 31, 1198, 1614, 1907, 1931, 1940, 1957, 1970], "evid": 7, "peer": [7, 25, 29, 42, 49, 982, 1614, 1907, 1936], "paper": [7, 9, 22, 31, 47, 750, 1342, 1346, 1352, 1353, 1354, 1356, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1379, 1382, 1383, 1386, 1389, 1392, 1397, 1398, 1399, 1406, 1440, 1446, 1447, 1452, 1461, 1465, 1473, 1477, 1479, 1481, 1482, 1483, 1528, 1529, 1538, 1679, 1680, 1689, 1691, 1698, 1704, 1912, 1929], "framework": [7, 8, 9, 31, 39, 50, 56, 750, 980, 1310, 1386, 1614, 1627, 1692, 1771, 1880, 1916, 1929, 1931, 1937, 1938], "bit": [7, 57, 79, 321, 448, 751, 753, 755, 809, 810, 811, 812, 815, 817, 848, 915, 918, 955, 956, 1126, 1180, 1746, 1747, 1759, 1766, 1788, 1907, 1915, 1918, 1921, 1931, 1934, 1935, 1940, 1943, 1946, 1962, 1963, 1972], "accept": [7, 9, 21, 25, 27, 30, 46, 49, 50, 51, 53, 55, 141, 503, 792, 879, 880, 881, 882, 883, 888, 897, 932, 1015, 1018, 1125, 1141, 1162, 1200, 1204, 1370, 1434, 1441, 1462, 1481, 1639, 1653, 1654, 1660, 1675, 1763, 1801, 1815, 1872, 1884, 1888, 1898, 1907, 1909, 1910, 1925, 1927, 1936, 1943, 1945, 1959, 1969], "overwhelm": [7, 1936, 1969], "newli": [7, 49, 57, 1086, 1087, 1377, 1378, 1724, 1725, 1962], "publish": [7, 9, 34, 39, 42, 1273, 1880], "ground": [7, 9, 1370, 1516, 1945], "refactor": [7, 57, 1921, 1931], "coordin": [7, 25, 27, 31, 33, 573, 576, 874, 1153, 1162, 1302, 1716, 1809, 1850, 1852, 1859, 1904, 1940, 1945, 1959, 1969], "pace": 7, "branch": [7, 12, 46, 57, 58, 61, 63, 65, 66, 954, 1879, 1883, 1884, 1907, 1957, 1966], "fast": [7, 8, 21, 25, 898, 1376, 1397, 1398, 1399, 1465, 1481, 1583, 1621, 1704, 1710, 1729, 1751, 1766, 1880, 1906, 1907, 1909, 1913, 1927, 1936, 1940, 1943, 1944, 1951, 1958, 1961, 1963, 1971], "definit": [7, 8, 21, 25, 26, 31, 38, 46, 47, 57, 76, 933, 934, 935, 962, 1015, 1120, 1221, 1230, 1231, 1273, 1400, 1545, 1590, 1667, 1742, 1846, 1879, 1881, 1883, 1885, 1903, 1904, 1909, 1912, 1928, 1931, 1945, 1947, 1962], "fundament": [7, 54, 1883, 1915, 1936, 1940, 1958], "cut": [7, 1959], "guidanc": [7, 9, 15, 51, 1929, 1957], "stage": [7, 18, 22, 29, 39, 49, 56, 1880, 1891, 1899, 1929, 1938, 1969], "piec": [7, 1890, 1899, 1937, 1959, 1962, 1971], "advic": [7, 1959], "readi": [7, 14, 56, 851, 852, 911, 920, 1157, 1158, 1614, 1881, 1908, 1936, 1937, 1954], "draft": 7, "convert": [7, 21, 25, 27, 30, 31, 32, 47, 49, 53, 57, 71, 72, 73, 141, 570, 574, 575, 576, 577, 578, 725, 778, 779, 780, 782, 783, 784, 805, 806, 807, 828, 829, 844, 847, 848, 849, 869, 870, 928, 941, 1056, 1092, 1123, 1200, 1270, 1434, 1444, 1445, 1473, 1480, 1605, 1616, 1617, 1621, 1673, 1674, 1693, 1724, 1725, 1730, 1806, 1807, 1808, 1809, 1810, 1811, 1859, 1881, 1882, 1883, 1884, 1899, 1900, 1909, 1913, 1922, 1923, 1925, 1931, 1934, 1940, 1945, 1947, 1950, 1951, 1959, 1962, 1968, 1969], "press": [7, 57], "button": [7, 1966], "prepend": [7, 14, 21, 25, 29, 57, 220, 1064, 1200, 1295, 1434, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1842, 1882, 1905], "titl": [7, 1926, 1930], "wip": 7, "progress": [7, 25, 29, 33, 43, 45, 46, 70, 975, 1312, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1866, 1879, 1893], "ci": [7, 1880, 1966], "folk": 7, "who": [7, 8, 9, 11, 42, 58, 72, 1928, 1962], "regularli": 7, "queue": [7, 33, 44, 1896, 1945], "everyth": [7, 21, 31, 47, 53, 58, 1881, 1896, 1928, 1957, 1959, 1962, 1963, 1969], "happen": [7, 9, 25, 27, 29, 31, 33, 35, 42, 46, 49, 54, 57, 597, 781, 804, 1130, 1473, 1614, 1627, 1695, 1701, 1702, 1708, 1824, 1880, 1894, 1896, 1904, 1907, 1908, 1909, 1910, 1911, 1916, 1917, 1921, 1925, 1931, 1936, 1944, 1954, 1959, 1962], "subsystem": [7, 11, 50, 55, 944, 1880, 1888, 1909], "patch": [7, 51, 1381, 1485, 1862, 1960], "feel": [7, 1899, 1925, 1940, 1959], "ll": [7, 54, 57, 750, 810, 811, 851, 852, 933, 934, 935, 1018, 1230, 1386, 1387, 1404, 1405, 1891, 1904, 1907, 1909, 1910, 1917, 1925, 1931, 1937, 1955, 1958, 1963, 1967], "round": [7, 21, 25, 58, 60, 66, 498, 655, 656, 789, 792, 810, 855, 958, 960, 1029, 1067, 1093, 1094, 1095, 1099, 1103, 1104, 1105, 1120, 1246, 1259, 1486, 1544, 1722, 1723, 1742, 1791, 1882, 1884, 1897, 1907, 1926, 1931, 1934, 1940, 1941, 1964, 1971], "trip": [7, 57, 1093, 1094, 1095, 1099, 1103, 1104, 1105], "noth": [7, 14, 33, 57, 670, 969, 1009, 1632, 1679, 1680, 1707, 1881, 1883, 1919, 1938], "accompani": [7, 74], "solut": [7, 8, 54, 935, 1245, 1246, 1250, 1258, 1261, 1263, 1267, 1350, 1614, 1848, 1881, 1882, 1902, 1903, 1911, 1917, 1931], "think": [7, 9, 57, 58, 1693, 1881, 1883, 1904, 1927, 1928, 1938, 1958, 1960], "confid": [7, 1621, 1945, 1960], "ahead": [7, 46, 1880, 1931, 1951, 1957, 1959], "search": [7, 11, 22, 809, 926, 1392, 1538, 1614, 1674, 1729, 1758, 1881, 1897, 1898, 1925, 1928, 1940, 1955, 1958, 1966, 1971], "repo": [7, 58, 1698, 1879, 1909, 1921], "unabl": [7, 54, 73, 1925, 1927], "reproduc": [7, 21, 54, 304, 312, 505, 507, 913, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1430, 1431, 1432, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1533, 1544, 1571, 1583, 1602, 1603, 1604, 1605, 1861, 1879, 1880, 1927, 1928, 1959, 1969], "problemat": [7, 21, 57, 1881, 1918, 1932], "insight": [7, 18, 70, 1971], "individu": [7, 9, 14, 21, 22, 25, 27, 29, 49, 57, 74, 233, 670, 782, 828, 829, 933, 1038, 1090, 1108, 1200, 1357, 1434, 1473, 1614, 1884, 1897, 1903, 1904, 1907, 1909, 1914, 1918, 1919, 1923, 1925, 1934, 1936, 1947, 1954, 1961, 1966, 1971], "intent": [7, 40, 42, 49, 54, 1763, 1891, 1928, 1931, 1965], "lock": [7, 21, 25, 29, 31, 1904, 1907, 1917, 1928, 1937, 1971], "strike": 7, "convers": [7, 27, 448, 570, 573, 783, 927, 1185, 1621, 1653, 1880, 1885, 1909, 1913, 1925, 1931, 1932, 1940, 1957, 1958, 1968], "medium": [7, 49, 1766], "prioriti": [7, 9, 10, 25, 670, 844, 978, 1883, 1920], "entranc": [7, 1907], "great": [7, 12, 46, 1904, 1912, 1954, 1957], "deal": [7, 8, 21, 33, 44, 46, 71, 1841, 1896, 1911, 1936, 1957, 1958, 1962, 1963], "welcom": [7, 1899, 1922, 1927, 1940], "aim": [7, 46, 72, 1910, 1940, 1951], "typo": 7, "send": [7, 21, 25, 33, 44, 1011, 1605, 1614, 1896, 1908, 1917, 1921, 1926, 1930, 1936, 1937, 1938, 1948, 1950, 1958, 1961], "forum": [7, 9, 1911, 1917], "share": [7, 10, 14, 21, 26, 29, 31, 32, 42, 43, 47, 49, 54, 212, 302, 331, 448, 473, 510, 514, 607, 849, 869, 870, 887, 898, 899, 942, 973, 975, 1007, 1011, 1123, 1124, 1125, 1126, 1170, 1248, 1333, 1334, 1371, 1450, 1614, 1630, 1668, 1740, 1754, 1815, 1839, 1845, 1860, 1882, 1903, 1904, 1906, 1917, 1920, 1921, 1925, 1936, 1940, 1942, 1944, 1949, 1954], "resolv": [7, 8, 9, 27, 31, 49, 57, 73, 74, 1200, 1365, 1366, 1367, 1381, 1431, 1434, 1883, 1884, 1885, 1921, 1928, 1942, 1957, 1970], "challeng": [7, 25, 1937, 1959], "feedback": [7, 18, 22, 49, 50, 1614, 1880, 1940], "direct": [7, 9, 11, 25, 47, 750, 782, 1113, 1114, 1200, 1386, 1404, 1434, 1449, 1664, 1691, 1712, 1729, 1750, 1888, 1904, 1907, 1909, 1915, 1936, 1962, 1968], "yourself": [7, 52, 973, 1862, 1909, 1915, 1917, 1959, 1970], "problem": [7, 21, 25, 42, 46, 54, 58, 1072, 1216, 1246, 1258, 1273, 1370, 1441, 1498, 1762, 1896, 1904, 1907, 1911, 1912, 1917, 1921, 1929, 1931, 1932, 1938, 1943, 1951, 1957, 1959, 1969], "area": [7, 9, 47, 1544, 1915, 1931, 1941], "appreci": 7, "strive": 7, "respond": [7, 25], "quickli": [7, 8, 22, 42, 1961], "ey": [7, 31, 182, 199, 934, 935, 1141, 1221, 1230, 1241, 1252, 1255, 1258, 1259, 1266, 1267, 1627, 1722, 1802, 1872, 1882, 1886, 1909, 1926], "everyon": [7, 33, 42], "touch": [7, 40, 57], "versu": [7, 1438], "write": [7, 8, 9, 12, 16, 18, 21, 25, 27, 33, 35, 39, 40, 41, 42, 46, 49, 54, 55, 71, 73, 74, 245, 503, 687, 924, 944, 1125, 1130, 1141, 1177, 1211, 1231, 1242, 1243, 1244, 1248, 1249, 1262, 1601, 1754, 1848, 1861, 1872, 1880, 1883, 1888, 1894, 1898, 1907, 1910, 1911, 1912, 1923, 1927, 1928, 1931, 1940, 1945, 1951, 1957, 1959, 1961, 1963, 1969], "blog": [7, 8, 12, 954, 1888, 1908, 1909, 1931, 1940], "around": [7, 9, 11, 25, 31, 53, 54, 56, 57, 141, 614, 883, 897, 970, 973, 975, 976, 978, 1047, 1118, 1119, 1130, 1200, 1312, 1614, 1751, 1881, 1896, 1904, 1907, 1925, 1931, 1936, 1954, 1962], "internet": 7, "grow": [7, 8, 57, 1907, 1940], "market": [7, 9], "benefit": [7, 8, 25, 57, 837, 1621, 1706, 1896, 1907, 1931, 1940, 1969], "opinion": [7, 8, 1940], "isn": [7, 21, 57, 448, 1197, 1904, 1907, 1909, 1936, 1947, 1958], "categor": [7, 35, 1535, 1880, 1885, 1932, 1936, 1968], "aspect": [7, 25, 57, 1450, 1909, 1915], "seem": [7, 1925], "unusu": [7, 1958], "claim": [7, 1621, 1704, 1912], "wast": [7, 1907], "someon": [7, 9, 1198, 1898], "advisori": 7, "fashion": [7, 21, 25, 44, 46, 505, 1278, 1643, 1881], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 1969], "wrote": [7, 8], "implicitli": [7, 25, 35, 57, 1055, 1145, 1153, 1216, 1217, 1272, 1347, 1348, 1349, 1427, 1428, 1429, 1763, 1846, 1881, 1883, 1884, 1904, 1909, 1913], "lifetim": [7, 1888, 1936, 1958], "immedi": [7, 8, 9, 42, 43, 49, 56, 1200, 1203, 1434, 1621, 1884, 1915, 1920, 1927, 1936, 1938, 1957, 1958], "sai": [7, 46, 47, 57, 486, 1133, 1134, 1135, 1200, 1434, 1881, 1903, 1904, 1911, 1928, 1937, 1938, 1940, 1954, 1957, 1962, 1963, 1968], "bugfix": 7, "Or": [7, 33, 57, 870, 937, 1913, 1916, 1925, 1940, 1962], "motiv": [7, 8, 57, 725, 1915, 1937, 1969], "ye": [7, 1925, 1927, 1940, 1959], "knuth": 7, "bewar": 7, "mere": [7, 47], "proven": [7, 1372, 1614], "ok": [7, 35, 40, 53, 942, 1205, 1938, 1959], "sometim": [7, 57, 894, 1029, 1206, 1216, 1381, 1485, 1511, 1512, 1513, 1632, 1880, 1884, 1896, 1904, 1907, 1910, 1911, 1915, 1917, 1928, 1943, 1946, 1957, 1958, 1963, 1970], "obvious": [7, 1958], "broken": [7, 21, 1029, 1925, 1928], "contrari": [7, 1906], "accident": 7, "put": [7, 9, 21, 25, 33, 53, 56, 57, 310, 1092, 1272, 1389, 1698, 1879, 1882, 1896, 1907, 1917, 1926, 1928, 1937, 1938, 1958, 1960], "difficulti": [7, 1902], "nonlinearli": 7, "sign": [7, 31, 332, 519, 874, 957, 1060, 1108, 1120, 1126, 1234, 1259, 1260, 1281, 1426, 1691, 1742, 1774, 1788, 1882, 1897, 1926, 1934, 1940, 1943, 1946, 1947, 1964], "split": [7, 21, 25, 57, 607, 762, 763, 764, 849, 851, 852, 929, 936, 1029, 1070, 1163, 1371, 1385, 1386, 1404, 1440, 1449, 1508, 1509, 1510, 1511, 1512, 1513, 1532, 1840, 1873, 1881, 1882, 1897, 1907, 1926, 1928, 1929, 1931, 1936, 1940, 1944, 1967, 1971], "shippabl": 7, "complet": [7, 14, 21, 25, 27, 33, 34, 40, 42, 44, 54, 56, 476, 670, 851, 944, 971, 975, 976, 978, 1048, 1129, 1130, 1203, 1212, 1214, 1219, 1231, 1259, 1312, 1315, 1316, 1321, 1498, 1614, 1629, 1662, 1722, 1766, 1880, 1883, 1884, 1885, 1890, 1896, 1903, 1904, 1907, 1910, 1913, 1919, 1928, 1929, 1936, 1937, 1953, 1960, 1962, 1966, 1967], "subtl": [7, 1397, 1398, 1399, 1909, 1958, 1959, 1969], "nuanc": [7, 1922, 1962], "extra": [7, 14, 21, 22, 25, 29, 31, 46, 49, 57, 1072, 1130, 1141, 1200, 1208, 1211, 1246, 1272, 1434, 1441, 1627, 1820, 1872, 1883, 1898, 1904, 1906, 1908, 1909, 1911, 1914, 1923, 1928, 1930, 1940, 1947, 1948, 1958, 1962, 1963], "understand": [7, 8, 9, 25, 27, 33, 34, 58, 71, 72, 1130, 1258, 1880, 1902, 1904, 1907, 1913, 1920, 1930, 1945, 1951, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1969], "hack": 7, "answer": [7, 10, 57, 814, 1351, 1645, 1958, 1959], "regress": [7, 1350, 1919, 1954, 1965], "scrutini": 7, "undertak": 7, "rest": [7, 21, 22, 43, 49, 57, 783, 804, 1126, 1266, 1267, 1840, 1898, 1915, 1919, 1928, 1929, 1931, 1936, 1940, 1960, 1962, 1963, 1967], "chanc": [7, 27, 31, 1909, 1958, 1959, 1963], "unrel": [7, 950, 1139, 1903, 1909, 1928], "aid": [7, 57, 1904, 1969], "troubleshoot": [7, 25, 1951, 1959], "mayb": [7, 1137, 1864, 1958], "bracnh": 7, "rebas": 7, "latest": [7, 25, 29, 31, 46, 1639, 1879, 1909, 1913, 1923, 1925], "statu": [7, 9, 33, 1290, 1880, 1885, 1896, 1931], "hud": 7, "risk": [7, 8, 49, 1629, 1632], "anyth": [7, 32, 35, 49, 56, 813, 816, 1212, 1693, 1881, 1899, 1915, 1928, 1957], "configur": [7, 13, 21, 22, 25, 33, 34, 39, 42, 43, 44, 49, 778, 779, 782, 783, 787, 804, 805, 806, 807, 813, 816, 828, 829, 830, 833, 835, 838, 848, 849, 850, 851, 852, 942, 1029, 1614, 1653, 1767, 1861, 1880, 1890, 1894, 1907, 1908, 1909, 1919, 1921, 1928, 1934, 1936, 1945, 1947, 1957, 1959, 1966, 1967, 1969], "riski": 7, "had": [7, 57, 1216, 1605, 1842, 1904, 1910, 1957, 1965], "beforehand": [7, 56, 1959], "hei": 7, "my": [7, 21, 1371, 1914, 1925, 1931], "member": [7, 9, 21, 25, 33, 42, 43, 57, 58, 60, 1200, 1388, 1434, 1530, 1881, 1883, 1884, 1894, 1911, 1930, 1936, 1947, 1948], "sphinx": 7, "folder": [7, 9, 14, 21, 57, 1674, 1879, 1923, 1945, 1961, 1969], "tree": [7, 35, 53, 942, 1434, 1477, 1674, 1925, 1928, 1930, 1938, 1951], "master": [7, 25, 45, 782, 1130, 1477, 1879, 1936], "doxygen": 7, "special": [7, 11, 30, 35, 44, 47, 54, 57, 58, 63, 65, 66, 731, 732, 733, 813, 816, 898, 942, 1065, 1079, 1080, 1081, 1083, 1084, 1093, 1095, 1167, 1168, 1169, 1214, 1272, 1286, 1327, 1371, 1481, 1615, 1616, 1617, 1666, 1693, 1717, 1775, 1786, 1790, 1876, 1880, 1885, 1890, 1898, 1907, 1909, 1912, 1914, 1925, 1928, 1931, 1944, 1945, 1956, 1957, 1958, 1962, 1965], "server": [7, 21, 25, 43, 1204, 1907, 1928, 1931, 1936, 1953], "cppdoc": [7, 15], "cpp": [7, 14, 25, 1324, 1908, 1957], "accomplish": [7, 27, 1915, 1959], "holist": 7, "concept": [7, 47, 54, 57, 1888, 1909, 1910, 1915, 1943, 1960], "galleri": 7, "restructur": [7, 1928], "text": [7, 21, 31, 47, 144, 145, 164, 598, 607, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 684, 688, 735, 736, 746, 748, 750, 754, 758, 759, 760, 762, 763, 764, 770, 774, 810, 811, 855, 871, 872, 873, 874, 875, 910, 911, 912, 915, 918, 920, 922, 931, 934, 935, 937, 956, 957, 959, 960, 962, 1067, 1086, 1087, 1116, 1117, 1121, 1122, 1144, 1156, 1157, 1158, 1159, 1166, 1189, 1197, 1221, 1224, 1225, 1226, 1229, 1230, 1237, 1240, 1246, 1250, 1255, 1258, 1264, 1271, 1280, 1287, 1288, 1289, 1290, 1323, 1324, 1335, 1336, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1500, 1501, 1502, 1504, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1519, 1520, 1521, 1526, 1529, 1531, 1532, 1533, 1537, 1538, 1548, 1553, 1557, 1558, 1559, 1563, 1568, 1571, 1576, 1577, 1579, 1583, 1584, 1585, 1586, 1589, 1590, 1591, 1593, 1594, 1595, 1620, 1627, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1698, 1715, 1716, 1719, 1722, 1735, 1738, 1741, 1753, 1774, 1776, 1777, 1789, 1791, 1802, 1803, 1813, 1820, 1821, 1824, 1837, 1838, 1875, 1899, 1902, 1912, 1925, 1928, 1934, 1941, 1945, 1947, 1961], "rst": 7, "rebuild": [7, 22], "entir": [7, 14, 21, 25, 33, 43, 57, 687, 898, 899, 1130, 1153, 1373, 1374, 1375, 1379, 1397, 1398, 1399, 1406, 1519, 1520, 1521, 1526, 1614, 1638, 1640, 1664, 1884, 1899, 1904, 1907, 1909, 1910, 1911, 1914, 1915, 1925, 1928, 1931, 1936, 1938, 1940, 1955, 1956, 1957, 1958, 1959, 1962, 1969, 1971], "circleci": 7, "shard": [7, 21, 27, 29, 30, 49, 1614, 1959], "worker": [7, 14, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 42, 44, 45, 49, 1614, 1884, 1919, 1929, 1930, 1936, 1937, 1938], "40": [7, 1153, 1273, 1355, 1397, 1627, 1628, 1651, 1652, 1661, 1664, 1836, 1956], "minut": [7, 10, 25, 1945], "netlifi": 7, "noplot": 7, "render": [7, 25, 1945, 1971], "notebook": 7, "rebuilt": [7, 22, 29], "deploi": [7, 12, 33, 42, 1880, 1914, 1920, 1928, 1953], "action": [7, 25, 31, 33, 36, 57, 973, 1007, 1907, 1923, 1928, 1930, 1938, 1971], "document": [8, 9, 10, 17, 21, 25, 46, 47, 49, 50, 57, 670, 720, 721, 722, 723, 735, 736, 746, 751, 752, 753, 754, 755, 863, 864, 865, 866, 927, 975, 976, 978, 1029, 1072, 1145, 1148, 1149, 1181, 1188, 1200, 1315, 1316, 1331, 1342, 1377, 1378, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1434, 1629, 1638, 1647, 1667, 1721, 1748, 1765, 1861, 1879, 1881, 1883, 1884, 1888, 1895, 1896, 1897, 1898, 1900, 1903, 1909, 1911, 1915, 1919, 1920, 1925, 1927, 1928, 1931, 1932, 1933, 1936, 1940, 1944, 1948, 1951, 1955, 1960, 1962, 1965, 1968], "develop": [8, 9, 10, 14, 22, 25, 57, 1883, 1884, 1891, 1895, 1904, 1909, 1914, 1915, 1919, 1925, 1928, 1931, 1932, 1936, 1940, 1961, 1964, 1969], "meant": [8, 26, 42, 44, 49, 1653, 1903, 1936], "rule": [8, 9, 14, 25, 31, 57, 58, 65, 66, 76, 77, 78, 141, 850, 882, 883, 926, 927, 1055, 1250, 1261, 1352, 1353, 1354, 1397, 1398, 1399, 1473, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1758, 1846, 1881, 1883, 1897, 1899, 1904, 1905, 1909, 1912, 1943, 1947, 1958, 1959], "concern": [8, 21, 49, 1896, 1907, 1925, 1967], "disagr": 8, "contribut": [8, 9, 27, 907, 1161, 1162, 1370, 1377, 1378, 1441, 1516, 1524, 1525, 1568, 1614, 1880, 1899, 1909, 1910, 1925, 1929], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": 8, "obsess": 8, "soumith": [8, 10], "goe": [8, 57, 1126, 1346, 1679, 1680, 1911, 1923, 1959, 1960, 1962], "depth": [8, 9, 46, 72, 769, 775, 1033, 1034, 1214, 1349, 1364, 1367, 1429, 1486, 1544, 1602, 1891, 1908, 1915, 1930, 1956, 1971], "primari": [8, 9, 25, 57, 72, 1210, 1885, 1891, 1940, 1958], "goal": [8, 39, 53, 57, 1302, 1891, 1904, 1908, 1912, 1938, 1961], "secondari": 8, "abil": [8, 46, 1754, 1891, 1914, 1923, 1928], "flexibl": [8, 22, 46, 49, 53, 1257, 1614, 1891, 1907, 1909, 1915, 1931, 1962], "abstract": [8, 16, 21, 22, 26, 27, 31, 33, 42, 44, 900, 901, 902, 903, 904, 1634, 1884, 1888, 1908, 1931, 1936, 1954, 1962], "critic": [8, 42, 670, 1628, 1661, 1894, 1906, 1907, 1959, 1960, 1962], "concret": [8, 31, 45, 47, 53, 57, 775, 790, 814, 831, 942, 1486, 1571, 1602, 1881, 1884, 1907, 1909, 1917, 1957, 1958, 1962], "manner": [8, 33, 503, 891, 893, 1898, 1900, 1905], "jump": [8, 550, 1943], "regim": 8, "ei": 8, "tradeoff": [8, 22, 46, 1931, 1937, 1959, 1965], "temptat": 8, "impos": [8, 44, 55, 1762, 1896, 1903, 1943], "strict": [8, 27, 47, 891, 892, 893, 894, 895, 896, 1129, 1136, 1200, 1216, 1217, 1434, 1662, 1928, 1945, 1947], "upfront": [8, 1957], "simplifi": [8, 22, 56, 1208, 1424, 1628, 1693, 1891, 1904, 1909, 1912, 1915, 1927, 1931, 1937, 1957], "worth": [8, 9, 21, 22, 45, 47, 1130, 1879, 1944, 1962, 1963], "friction": 8, "compel": 8, "narrow": [8, 1270, 1334, 1693, 1781, 1882, 1884, 1897, 1926, 1933, 1944, 1969], "subproblem": 8, "fragment": [8, 997, 1029, 1888, 1907, 1969], "ecosystem": [8, 1914, 1916], "incomprehens": 8, "seamlessli": [8, 1899], "softwar": [8, 1236, 1237, 1264, 1861, 1907, 1913, 1951], "experi": [8, 9, 11, 22, 46, 55, 1141, 1463, 1586, 1614, 1872, 1891, 1909, 1945, 1956], "rich": [8, 1884], "denomin": [8, 677, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1726], "subset": [8, 21, 25, 29, 43, 47, 1212, 1693, 1881, 1883, 1884, 1909, 1922, 1925, 1934, 1964], "borrow": 8, "zen": 8, "implicit": [8, 47, 77, 758, 759, 762, 763, 764, 1145, 1153, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1427, 1428, 1429, 1485, 1500, 1501, 1502, 1508, 1509, 1510, 1557, 1558, 1559, 1710, 1882, 1884, 1885, 1925, 1928, 1944, 1964], "concis": [8, 35, 1936], "interchang": [8, 31, 1690, 1845, 1883, 1913, 1923, 1951, 1960], "everydai": 8, "english": 8, "movement": [8, 1944, 1959], "worri": [8, 1936], "placement": [8, 30, 33, 849, 1605, 1931, 1936, 1959], "favor": [8, 25, 775, 776, 777, 933, 944, 1041, 1045, 1200, 1255, 1258, 1290, 1291, 1393, 1434, 1487, 1488, 1602, 1603, 1604, 1606, 1618, 1722, 1824, 1848, 1962], "practition": 8, "debugg": [8, 1205, 1912, 1959, 1969], "plug": 8, "ir": [8, 46, 57, 70, 72, 750, 1203, 1204, 1386, 1387, 1674, 1881, 1884, 1923, 1925, 1951, 1957, 1958, 1959, 1969], "classic": [8, 1904], "sort": [8, 29, 33, 57, 580, 599, 866, 867, 888, 1072, 1160, 1322, 1342, 1654, 1655, 1666, 1723, 1758, 1843, 1857, 1882, 1884, 1909, 1911, 1926, 1940, 1957, 1959, 1962, 1964], "distribut": [8, 11, 21, 22, 26, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 49, 56, 164, 249, 277, 368, 444, 471, 598, 670, 685, 686, 809, 912, 1046, 1324, 1342, 1346, 1370, 1371, 1372, 1373, 1374, 1375, 1379, 1384, 1388, 1400, 1448, 1452, 1473, 1516, 1518, 1519, 1520, 1521, 1526, 1530, 1531, 1535, 1545, 1576, 1614, 1668, 1715, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1880, 1884, 1898, 1899, 1902, 1903, 1907, 1929, 1930, 1932, 1938, 1941, 1945, 1948], "tldr": 8, "resourc": [8, 14, 21, 33, 38, 42, 46, 57, 1884, 1896, 1917, 1940, 1959, 1966], "characterist": [8, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1825, 1910, 1915], "uniformli": [8, 31, 1733, 1734, 1947], "leak": [8, 883, 889, 1884, 1896, 1904], "smart": [8, 1909, 1928, 1936], "anywai": [8, 1904], "obviou": [8, 1911, 1938, 1958], "extens": [8, 14, 18, 25, 27, 30, 31, 46, 1272, 1273, 1754, 1774, 1880, 1891, 1899, 1903, 1920, 1923, 1928, 1940, 1958, 1959, 1969], "unavoid": 8, "latenc": [8, 39, 1906, 1907, 1959, 1966], "caveat": [8, 49, 1605, 1660, 1891, 1896, 1907, 1915, 1920, 1955, 1965, 1969], "valuabl": 8, "certainli": [8, 1891], "heterogen": [8, 1883], "cluster": [8, 25, 27, 41, 42, 43, 49, 1342, 1945], "focus": [8, 1883, 1884, 1909, 1969], "beaten": 8, "space": [8, 9, 21, 31, 762, 763, 764, 1055, 1090, 1092, 1094, 1095, 1101, 1108, 1153, 1162, 1216, 1217, 1271, 1287, 1342, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1400, 1410, 1411, 1412, 1413, 1414, 1415, 1428, 1429, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1545, 1846, 1882, 1900, 1904, 1912, 1915, 1920, 1971], "innov": 8, "ultim": [8, 9, 14, 35, 44, 46, 1908, 1951], "evidenc": 8, "began": 8, "bind": [8, 14, 25, 47, 57, 1009, 1884, 1885, 1888, 1909, 1928], "monolith": 8, "deepli": 8, "integr": [8, 21, 30, 36, 47, 53, 145, 912, 914, 915, 916, 917, 918, 919, 962, 1055, 1161, 1200, 1224, 1268, 1269, 1333, 1434, 1729, 1741, 1846, 1899, 1909, 1914, 1915, 1924, 1927, 1929, 1931, 1941, 1943, 1947, 1955], "numpi": [8, 21, 54, 438, 483, 683, 684, 689, 867, 869, 870, 887, 926, 1067, 1069, 1070, 1072, 1090, 1111, 1112, 1113, 1114, 1118, 1119, 1124, 1125, 1141, 1163, 1231, 1232, 1242, 1253, 1255, 1256, 1257, 1258, 1259, 1264, 1265, 1268, 1270, 1302, 1307, 1716, 1741, 1744, 1751, 1763, 1771, 1806, 1807, 1808, 1809, 1810, 1811, 1824, 1826, 1827, 1836, 1839, 1840, 1842, 1869, 1872, 1873, 1888, 1891, 1905, 1909, 1910, 1918, 1919, 1921, 1928, 1943, 1944, 1945, 1946, 1947, 1972], "scipi": [8, 930, 1247, 1248, 1573, 1716, 1928, 1939, 1941, 1945], "scikit": [8, 1544], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1921], "year": [8, 1940], "rewrot": 8, "frontend": [8, 15, 47, 53, 57, 1959], "familiar": [8, 15, 47, 57, 973, 1007, 1028, 1881, 1904, 1910, 1928, 1931, 1937, 1938, 1956, 1959, 1968], "perhap": [8, 1910, 1962], "importantli": [8, 1962], "huge": [8, 1825, 1894], "scientif": [8, 1771], "pareto": [8, 1880], "close": [8, 15, 25, 42, 57, 58, 61, 65, 1011, 1189, 1236, 1237, 1263, 1264, 1290, 1351, 1465, 1483, 1506, 1689, 1824, 1848, 1894, 1904, 1909, 1918, 1925, 1928, 1931, 1936, 1945, 1947], "curv": [8, 1945], "torchdynamo": [8, 46, 58, 68, 670, 942, 944, 1880, 1890, 1925, 1951, 1955, 1957, 1959, 1961, 1962], "frame": [8, 46, 57, 942, 1197, 1820, 1863, 1911, 1922, 1923, 1945, 1951, 1956, 1957, 1959, 1960, 1969, 1971], "torch_funct": [8, 1909], "torch_dispatch": 8, "torch": [8, 9, 11, 15, 18, 19, 22, 26, 29, 33, 34, 35, 36, 39, 40, 42, 44, 45, 49, 52, 58, 59, 60, 61, 62, 63, 64, 72, 73, 75, 77, 79, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 884, 963, 964, 973, 974, 975, 976, 978, 979, 994, 996, 1007, 1076, 1175, 1198, 1199, 1200, 1215, 1312, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1605, 1614, 1615, 1616, 1617, 1629, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1653, 1665, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1729, 1768, 1799, 1880, 1881, 1882, 1883, 1897, 1898, 1903, 1904, 1905, 1906, 1908, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1921, 1923, 1924, 1929, 1931, 1932, 1933, 1936, 1937, 1938, 1944, 1954, 1955, 1956, 1957, 1958, 1961, 1962, 1965, 1968, 1969, 1971], "fx": [8, 12, 46, 47, 73, 670, 737, 805, 806, 807, 808, 850, 1130, 1880, 1922, 1923, 1932, 1933, 1955, 1956, 1957, 1958, 1959, 1962, 1968, 1969], "tracer": [8, 1216, 1925, 1945, 1950, 1962], "functorch": [8, 47, 50, 55, 58, 61, 65, 66, 69, 1955], "anchor": [8, 57, 1482, 1483, 1599, 1600, 1882, 1968], "hackabl": 8, "todai": [8, 47, 50, 55, 942, 1931, 1957], "evolv": [8, 1908, 1923, 1924], "ai": [8, 1925, 1941], "adopt": [9, 25, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 735, 736, 746, 751, 752, 753, 754, 755, 1621, 1923], "hierarch": [9, 1945], "pull": [9, 10, 15, 57, 141, 883, 1925, 1928, 1958], "request": [9, 10, 11, 25, 27, 44, 679, 851, 869, 870, 1029, 1273, 1295, 1305, 1550, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1879, 1899, 1903, 1904, 1906, 1907, 1925, 1928, 1936, 1937, 1938, 1940, 1941, 1957, 1971], "overseen": 9, "catch": [9, 35, 1881, 1904, 1910, 1912, 1960], "maker": 9, "strong": 9, "toward": [9, 58, 1067, 1161, 1162, 1273, 1338, 1614, 1701, 1742, 1750, 1751, 1929], "philosophi": [9, 53, 1880], "beyond": [9, 22, 1319, 1370, 1679, 1680, 1689, 1749, 1911, 1915, 1923, 1957], "encourag": [9, 33, 1899, 1931, 1940, 1947], "propos": [9, 1676, 1696, 1697, 1891, 1912, 1927, 1937], "review": [9, 10, 22, 1928, 1961, 1962], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 57], "codebas": [9, 1909], "strictli": [9, 21, 141, 182, 199, 883, 926, 1162, 1200, 1204, 1434, 1904, 1941], "compani": 9, "bui": 9, "addition": [9, 21, 22, 25, 31, 46, 49, 141, 503, 607, 883, 1130, 1134, 1135, 1204, 1264, 1342, 1397, 1398, 1399, 1801, 1911, 1948, 1971], "membership": [9, 33, 41, 42, 1885], "That": [9, 12, 33, 40, 43, 46, 51, 57, 954, 1197, 1271, 1287, 1861, 1892, 1909, 1910, 1911, 1920, 1928, 1936, 1959], "seat": 9, "reserv": [9, 39, 1029, 1885, 1907, 1915, 1971], "emploi": [9, 1692, 1915, 1928, 1929], "directori": [9, 14, 25, 27, 40, 72, 1674, 1879, 1893, 1914, 1928, 1930, 1945, 1959, 1969], "procedur": [9, 31, 849, 1216, 1217, 1273, 1799, 1936, 1969], "disput": 9, "made": [9, 27, 29, 43, 46, 57, 72, 889, 899, 1200, 1434, 1479, 1481, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1739, 1883, 1891, 1904, 1921, 1928, 1945, 1947, 1954, 1957, 1962, 1969, 1970], "public": [9, 10, 1130, 1909, 1970], "relev": [9, 26, 33, 42, 56, 670, 1264, 1406, 1885, 1903, 1904, 1928, 1931, 1959, 1960, 1961, 1962], "resolut": [9, 1446, 1447, 1498, 1533, 1574, 1575, 1846, 1885, 1928, 1972], "conclus": 9, "publicli": [9, 1970], "vision": [9, 1210, 1370, 1516, 1879, 1880, 1961], "roadmap": [9, 10], "parti": [9, 42, 1879, 1880, 1881, 1907, 1910, 1915, 1928], "triag": [9, 10], "meet": [9, 10, 12, 27, 41, 954, 1230, 1907, 1959], "Their": [9, 1064, 1909, 1958], "articul": 9, "cohes": 9, "negoti": [9, 1936], "contenti": 9, "broad": [9, 1915], "stakehold": 9, "power": [9, 12, 41, 1035, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1115, 1224, 1254, 1268, 1402, 1403, 1554, 1555, 1628, 1661, 1676, 1705, 1719, 1743, 1866, 1885, 1907, 1940], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 31, 49, 1302, 1884, 1886, 1903, 1904, 1927, 1931, 1943, 1951, 1953, 1957], "merit": 9, "demonstr": [9, 43, 46, 57, 58, 65, 66, 1357, 1881, 1915, 1920, 1923, 1929, 1936, 1956, 1959, 1961, 1967], "expertis": 9, "continu": [9, 21, 25, 31, 45, 49, 57, 393, 598, 809, 892, 1153, 1236, 1237, 1264, 1356, 1357, 1614, 1885, 1891, 1904, 1920, 1923, 1930, 1948, 1955, 1956, 1959, 1962], "light": [9, 1945], "mainten": [9, 42, 43], "emeritu": [9, 10], "inact": [9, 1029, 1907, 1971], "contact": 9, "item": [9, 21, 27, 58, 67, 68, 573, 574, 575, 579, 782, 783, 784, 804, 805, 806, 807, 1200, 1370, 1434, 1435, 1444, 1632, 1771, 1879, 1881, 1882, 1883, 1884, 1897, 1907, 1925, 1926, 1928, 1936, 1945, 1946, 1954, 1957, 1958, 1962, 1964], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 21, 27, 31, 46, 57, 79, 393, 461, 535, 725, 847, 851, 853, 898, 911, 913, 920, 933, 934, 935, 1088, 1089, 1090, 1091, 1092, 1100, 1102, 1106, 1108, 1126, 1136, 1137, 1140, 1157, 1158, 1192, 1195, 1200, 1203, 1230, 1231, 1242, 1244, 1255, 1258, 1259, 1273, 1293, 1308, 1328, 1333, 1334, 1351, 1362, 1363, 1364, 1369, 1370, 1371, 1378, 1388, 1395, 1434, 1440, 1470, 1477, 1482, 1483, 1498, 1506, 1525, 1530, 1533, 1599, 1600, 1608, 1609, 1610, 1749, 1751, 1802, 1804, 1849, 1850, 1851, 1852, 1860, 1879, 1882, 1897, 1898, 1909, 1910, 1912, 1923, 1925, 1926, 1929, 1935, 1940, 1941, 1947, 1959, 1970, 1972], "neg": [9, 11, 14, 21, 25, 31, 44, 57, 79, 431, 433, 448, 651, 652, 688, 745, 770, 913, 918, 957, 960, 978, 994, 1000, 1001, 1029, 1041, 1088, 1089, 1090, 1091, 1092, 1093, 1107, 1108, 1109, 1115, 1126, 1190, 1192, 1194, 1254, 1281, 1293, 1315, 1316, 1324, 1328, 1333, 1334, 1342, 1351, 1379, 1388, 1420, 1427, 1428, 1429, 1437, 1441, 1443, 1448, 1465, 1482, 1483, 1526, 1530, 1533, 1535, 1544, 1548, 1557, 1558, 1559, 1568, 1576, 1599, 1600, 1602, 1715, 1716, 1747, 1751, 1786, 1788, 1791, 1803, 1841, 1849, 1850, 1851, 1852, 1859, 1860, 1881, 1882, 1897, 1899, 1902, 1904, 1909, 1910, 1925, 1926, 1935, 1940, 1941, 1957, 1959, 1964], "interact": [9, 15, 21, 30, 57, 852, 976, 1009, 1175, 1885, 1888, 1908, 1909, 1928, 1931, 1945, 1954, 1959, 1963, 1971], "final": [9, 25, 27, 29, 31, 33, 42, 46, 47, 49, 53, 54, 676, 679, 680, 750, 910, 928, 941, 1072, 1111, 1130, 1153, 1272, 1290, 1295, 1386, 1388, 1404, 1449, 1462, 1605, 1802, 1846, 1881, 1883, 1884, 1885, 1897, 1909, 1912, 1915, 1918, 1920, 1922, 1923, 1925, 1928, 1937, 1938, 1954, 1956, 1957, 1969], "declin": 9, "conflict": [9, 22, 43, 46, 1928], "lack": [9, 11, 1236, 1237, 1264], "unfit": 9, "conduct": [9, 1614, 1712, 1825, 1936], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 907, 1882, 1928], "letter": [9, 1072], "befit": 9, "candidaci": 9, "behind": [9, 1880, 1920, 1937, 1958], "75": [9, 1161, 1422, 1533, 1551, 1676, 1723, 1882, 1941], "choos": [9, 15, 57, 882, 907, 998, 1246, 1259, 1264, 1350, 1902, 1903, 1906, 1928, 1932, 1945], "unforeseen": 9, "circumst": [9, 42, 942, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1907], "perman": [9, 57, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1904, 1938], "unavail": [9, 1883], "rank": [9, 21, 22, 25, 26, 27, 29, 31, 33, 40, 42, 43, 45, 47, 49, 58, 66, 1246, 1247, 1248, 1255, 1290, 1426, 1473, 1614, 1632, 1712, 1825, 1882, 1908, 1917, 1925, 1929, 1936, 1937, 1957, 1969], "elect": 9, "invit": [9, 1879], "convinc": 9, "approach": [9, 22, 25, 57, 78, 930, 1141, 1766, 1799, 1872, 1881, 1896, 1899, 1907, 1909, 1912, 1922, 1923, 1931, 1936, 1959], "interview": 9, "talk": [9, 44, 1888, 1909, 1914], "gather": [9, 25, 42, 49, 503, 1836, 1861, 1882, 1909, 1911, 1914, 1926, 1928, 1964], "read": [9, 12, 18, 21, 25, 27, 32, 33, 35, 42, 43, 47, 49, 53, 57, 438, 954, 1031, 1055, 1123, 1125, 1126, 1208, 1272, 1706, 1880, 1888, 1897, 1898, 1904, 1905, 1907, 1908, 1910, 1914, 1918, 1922, 1928, 1931, 1936, 1954, 1956, 1959, 1961, 1962], "attend": [9, 725, 1440, 1477], "confer": [9, 1388], "pipelin": [9, 57, 1880, 1936, 1959], "world": [9, 25, 29, 33, 40, 42, 43, 49, 1473, 1614, 1904, 1928, 1931, 1956, 1957], "cover": [9, 47, 50, 57, 58, 1046, 1072, 1427, 1557, 1558, 1559, 1884, 1886, 1898, 1904, 1909, 1912, 1914, 1915, 1936, 1956, 1962, 1963], "push": [9, 34, 1034, 1141, 1266, 1872, 1930, 1962], "codeown": 9, "notifi": [9, 26, 43, 1938], "expert": 9, "strongli": [9, 25, 33, 43, 1373, 1374, 1375, 1379, 1820, 1879], "failur": [9, 25, 31, 33, 34, 35, 39, 40, 41, 42, 45, 670, 898, 899, 942, 1130, 1216, 1217, 1319, 1884, 1890, 1896, 1923, 1929, 1936, 1938, 1947, 1959, 1962, 1969], "revert": [9, 31, 49, 1470, 1591, 1938], "substanti": [9, 22, 1907, 1954], "syntact": [9, 35, 57], "establish": [9, 25, 42, 1904], "seri": [9, 57, 1357, 1397, 1919, 1925, 1954, 1965, 1970], "lf": 9, "llc": 9, "guidelin": [9, 1643, 1917, 1922, 1928, 1931, 1932], "trademark": 9, "www": [9, 1357, 1483, 1945], "lfproject": 9, "acknowledg": [9, 25, 1880, 1938, 1940], "copyright": [9, 1969], "holder": 9, "independ": [9, 21, 25, 42, 49, 56, 144, 145, 769, 775, 891, 892, 893, 894, 895, 896, 978, 1153, 1162, 1259, 1372, 1373, 1374, 1375, 1379, 1519, 1520, 1521, 1526, 1544, 1602, 1664, 1722, 1880, 1881, 1903, 1904, 1907, 1920, 1928], "authorship": 9, "claus": [9, 1911], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 22, 31, 421, 469, 748, 1145, 1221, 1237, 1240, 1259, 1301, 1331, 1400, 1440, 1627, 1710, 1712, 1722, 1723, 1825, 1881, 1882, 1912, 1919, 1925, 1940, 1941, 1958], "partli": [9, 1884], "domain": [9, 31, 35, 674, 816, 875, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1100, 1102, 1103, 1104, 1105, 1153, 1899, 1925, 1931], "absolut": [9, 11, 14, 57, 83, 671, 684, 898, 899, 1120, 1189, 1229, 1234, 1255, 1258, 1260, 1281, 1395, 1401, 1465, 1542, 1546, 1587, 1637, 1638, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1667, 1675, 1716, 1742, 1774, 1882, 1915, 1925, 1926, 1941, 1946, 1947], "health": 9, "success": [9, 27, 31, 33, 39, 57, 1231, 1242, 1244, 1290, 1639, 1806, 1807, 1808, 1810, 1811, 1907, 1915, 1925, 1940, 1969], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 1925], "clearli": [9, 1891, 1928], "sponsorship": 9, "foundat": [9, 1923], "ptf": 9, "minor": [9, 1000, 1231, 1247, 1940], "committ": 9, "prior": [9, 22, 25, 27, 33, 70, 72, 890, 947, 1273, 1479, 1481, 1583, 1643, 1905, 1907, 1909, 1927, 1931, 1954, 1959], "walkthrough": [9, 1903], "facebook": 9, "infrastructur": [9, 34, 1928, 1957], "employe": 9, "expand": [9, 31, 246, 483, 868, 890, 898, 899, 925, 1253, 1254, 1302, 1440, 1484, 1577, 1856, 1879, 1882, 1890, 1897, 1898, 1905, 1907, 1909, 1910, 1923, 1925, 1926, 1928, 1929, 1944, 1964], "deliv": [9, 1930], "offici": [9, 25, 46, 78, 1342, 1931], "showcas": [9, 12, 1430, 1907, 1917], "whenev": [9, 46, 870, 1627, 1628, 1894, 1896, 1909, 1934, 1937, 1938, 1958, 1962, 1970], "fix": [10, 18, 21, 25, 30, 31, 33, 42, 46, 51, 54, 57, 73, 74, 253, 785, 791, 1130, 1214, 1246, 1377, 1378, 1452, 1524, 1525, 1544, 1614, 1881, 1882, 1894, 1902, 1903, 1907, 1908, 1911, 1917, 1921, 1923, 1925, 1926, 1927, 1954, 1959, 1967, 1969], "plu": [10, 14, 27, 891, 1126, 1247, 1940], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1273], "ezyang": [10, 1888, 1909, 1944], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1712, 1825], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": [10, 1909], "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 26, 27, 29, 31, 49, 1680, 1681, 1683, 1689, 1693, 1927], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 1969], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 1956], "ansel": [10, 1956], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 12, 1331, 1723, 1907, 1959], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 31], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1273], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1153], "robi": 10, "robieta": 10, "xu": [10, 49], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 25, 49, 57, 1809, 1883, 1898, 1925, 1954, 1965], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1864], "sebastian": 10, "messmer": 10, "smessmer": 10, "bowen": 10, "bao": [10, 1966], "bowenbao": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1342], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 783], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 1930, 1959, 1969], "johnson": 10, "peterjc123": [10, 1921], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "sunita": 10, "nadamp": 10, "snadamp": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 31], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "hirsch": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 12, 27, 47, 50, 54, 55, 57, 58, 65, 66, 310, 954, 1198, 1201, 1664, 1820, 1885, 1892, 1899, 1904, 1909, 1931, 1957, 1959, 1969, 1970], "bj": 11, "j": [11, 25, 31, 304, 306, 312, 503, 505, 507, 682, 885, 891, 893, 951, 1072, 1088, 1089, 1096, 1102, 1106, 1107, 1142, 1197, 1200, 1236, 1237, 1248, 1264, 1273, 1280, 1288, 1290, 1295, 1373, 1374, 1375, 1379, 1434, 1437, 1519, 1520, 1521, 1526, 1716, 1723, 1803, 1820, 1824, 1869, 1883, 1902, 1904, 1909, 1912, 1920, 1945], "imaginari": [11, 302, 898, 951, 958, 1093, 1095, 1103, 1104, 1105, 1170, 1190, 1192, 1193, 1196, 1820, 1870, 1871, 1885, 1904, 1912, 1947], "satisfi": [11, 19, 22, 31, 47, 607, 684, 750, 784, 892, 898, 899, 926, 1088, 1089, 1091, 1093, 1095, 1103, 1104, 1105, 1120, 1214, 1240, 1266, 1267, 1342, 1357, 1381, 1386, 1404, 1449, 1643, 1660, 1742, 1758, 1799, 1820, 1884, 1904, 1907, 1912, 1927, 1929, 1940, 1943, 1956], "equat": [11, 935, 1072, 1145, 1157, 1244, 1245, 1246, 1247, 1248, 1250, 1261, 1263, 1350, 1784, 1848, 1882, 1904, 1912, 1927, 1941], "frequent": [11, 27, 1342, 1880, 1907, 1917, 1918, 1920, 1940, 1951, 1961], "mathemat": [11, 57, 891, 892, 893, 894, 895, 896, 1120, 1153, 1350, 1352, 1353, 1354, 1397, 1398, 1399, 1400, 1473, 1552, 1590, 1614, 1667, 1742, 1801, 1802, 1884, 1904, 1918, 1941, 1948], "topic": [11, 46, 1914, 1915, 1956], "tradition": 11, "torchaudio": [11, 1880], "mimick": 11, "assembli": 11, "lapack": [11, 1145, 1231, 1242, 1243, 1244, 1246, 1249, 1262, 1722, 1824], "cubla": [11, 990, 1861, 1919, 1954], "spectral": [11, 1220, 1236, 1264, 1628, 1651, 1661, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1918], "fft": [11, 1880, 1907], "4621": 11, "0303j": 11, "2438": [11, 1246, 1524], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 166, 951, 1115, 1125, 1179, 1200, 1230, 1231, 1236, 1237, 1238, 1239, 1240, 1241, 1362, 1363, 1364, 1434, 1508, 1509, 1510, 1673, 1716, 1763, 1942, 1943, 1946, 1947, 1959], "complex64": [11, 169, 934, 935, 951, 1089, 1091, 1092, 1097, 1098, 1125, 1179, 1232, 1255, 1258, 1362, 1363, 1364, 1508, 1509, 1510, 1673, 1716, 1763, 1942, 1943, 1946, 1947, 1959], "apart": [11, 1884, 1904], "linspac": [11, 913, 937, 1093, 1103, 1302, 1882, 1886, 1926], "logspac": [11, 1882, 1886, 1926], "arang": [11, 21, 25, 32, 503, 597, 681, 682, 683, 687, 689, 876, 877, 878, 924, 936, 940, 1055, 1070, 1088, 1092, 1100, 1106, 1108, 1112, 1113, 1114, 1115, 1122, 1123, 1163, 1221, 1222, 1226, 1229, 1253, 1256, 1257, 1270, 1334, 1455, 1456, 1457, 1458, 1459, 1486, 1487, 1488, 1570, 1667, 1668, 1711, 1719, 1723, 1738, 1745, 1750, 1771, 1804, 1812, 1823, 1840, 1841, 1843, 1844, 1846, 1873, 1882, 1891, 1899, 1920, 1926, 1941, 1945, 1946, 1954, 1961, 1964], "switch": [11, 21, 52, 56, 57, 70, 1243, 1244, 1245, 1374, 1533, 1571, 1619, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1754, 1861, 1896, 1904, 1907, 1915, 1917, 1927, 1960], "view_as_r": [11, 1820, 1882, 1926, 1944], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 1882, 1897, 1899, 1940], "2250": [11, 1257, 1667], "7546": 11, "1722": 11, "x1": [11, 46, 930, 1248, 1369, 1426, 1482, 1483, 1515, 1572, 1882, 1959, 1964], "3j": [11, 25, 688, 955, 956, 1746, 1747, 1763], "4j": [11, 25, 1774], "0000": [11, 31, 503, 855, 891, 893, 913, 933, 937, 958, 1053, 1059, 1060, 1061, 1086, 1087, 1090, 1092, 1093, 1099, 1100, 1103, 1108, 1120, 1121, 1122, 1153, 1159, 1162, 1166, 1226, 1229, 1230, 1231, 1243, 1244, 1247, 1252, 1253, 1257, 1259, 1271, 1287, 1329, 1377, 1378, 1486, 1487, 1489, 1490, 1524, 1525, 1667, 1716, 1722, 1727, 1728, 1729, 1738, 1742, 1743, 1767, 1774, 1776, 1777, 1779, 1782, 1783, 1784, 1785, 1802, 1848, 1849, 1851, 1875, 1891, 1899, 1907, 1940, 1941, 1946], "6569": [11, 1166], "5708": [11, 1056], "7854": 11, "complex_tensor": 11, "pt": [11, 22, 49, 1124, 1205, 1208, 1211, 1218, 1272, 1754, 1881, 1915, 1920, 1928, 1961], "conjug": [11, 321, 448, 682, 898, 934, 935, 955, 956, 1180, 1230, 1231, 1237, 1240, 1243, 1250, 1264, 1269, 1273, 1627, 1710, 1746, 1820, 1824, 1869, 1912, 1927, 1946], "wirting": [11, 898, 1912], "deriv": [11, 25, 49, 141, 728, 729, 730, 731, 732, 733, 771, 790, 814, 883, 897, 898, 899, 1136, 1140, 1153, 1197, 1258, 1290, 1481, 1605, 1880, 1883, 1909, 1910, 1912, 1936, 1940, 1941], "steepest": [11, 1904], "descent": [11, 31, 1676, 1692, 1696, 1697, 1904, 1915], "box": [11, 25, 30, 43, 57, 1141, 1872, 1898, 1904, 1908, 1923, 1955, 1957, 1960, 1961], "fulli": [11, 14, 21, 25, 27, 29, 30, 46, 53, 57, 670, 1035, 1200, 1430, 1431, 1432, 1434, 1884, 1890, 1909, 1928, 1931, 1957, 1962, 1964], "quantiz": [11, 24, 57, 210, 317, 329, 462, 463, 464, 465, 466, 468, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 907, 1057, 1086, 1087, 1724, 1725, 1726, 1727, 1728, 1861, 1880, 1926, 1943, 1946, 1947, 1949, 1950], "pred": [12, 58, 61, 65, 66, 954, 1400, 1614, 1916, 1927, 1936, 1964], "union": [12, 14, 21, 27, 30, 33, 36, 40, 43, 46, 47, 49, 57, 954, 1212, 1272, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1382, 1383, 1402, 1403, 1427, 1428, 1429, 1434, 1477, 1479, 1481, 1484, 1632, 1673, 1754, 1864, 1882, 1883, 1884, 1920, 1923, 1925, 1928, 1942, 1947, 1950], "true_fn": [12, 47, 58, 61, 65, 66, 954], "false_fn": [12, 47, 58, 61, 65, 66, 954], "operand": [12, 58, 65, 66, 918, 954, 1072, 1884, 1885, 1909, 1940, 1943], "Its": [12, 25, 47, 57, 962, 987, 1200, 1248, 1266, 1267, 1292, 1434, 1667, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1869, 1884, 1908], "uniqu": [12, 25, 33, 39, 42, 43, 44, 503, 507, 1191, 1236, 1237, 1241, 1247, 1248, 1250, 1259, 1261, 1263, 1264, 1301, 1308, 1801, 1824, 1858, 1879, 1881, 1890, 1893, 1909, 1928, 1930, 1936, 1937, 1938, 1940, 1945, 1954, 1971], "aibilti": 12, "predic": [12, 58, 63, 65, 66], "unlock": [12, 1891], "flexibilti": 12, "architectur": [12, 57, 999, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1370, 1477, 1516, 1767, 1907, 1918, 1931, 1940, 1953], "prototyp": [12, 18, 25, 46, 670, 891, 893, 897, 898, 899, 954, 1210, 1481, 1880, 1890, 1891, 1894, 1898, 1899, 1915, 1920, 1934, 1936, 1940, 1943, 1948, 1949, 1950], "classif": [12, 954, 1351, 1357, 1370, 1437, 1439, 1441, 1466, 1517, 1880, 1902, 1932], "co": [12, 46, 47, 55, 58, 62, 63, 65, 66, 67, 68, 192, 625, 626, 673, 920, 942, 954, 1015, 1131, 1134, 1135, 1140, 1157, 1158, 1252, 1368, 1369, 1372, 1696, 1697, 1704, 1716, 1778, 1779, 1782, 1783, 1784, 1785, 1787, 1806, 1807, 1808, 1810, 1811, 1882, 1897, 1926, 1927, 1940, 1945, 1947, 1955, 1961, 1964], "sin": [12, 14, 46, 47, 54, 55, 58, 62, 63, 65, 66, 67, 68, 522, 659, 660, 871, 942, 954, 1015, 1131, 1133, 1134, 1135, 1137, 1140, 1158, 1252, 1302, 1716, 1779, 1785, 1882, 1888, 1897, 1904, 1926, 1940, 1941, 1945, 1955, 1959, 1961, 1964, 1967], "dynamicshapecondpred": 12, "dyn_shape_mod": 12, "eagerli": [12, 1004, 1010, 1907, 1957, 1959], "vari": [12, 46, 809, 1206, 1465, 1653, 1780, 1894, 1907, 1917, 1918, 1927, 1931, 1932, 1940, 1957, 1958, 1959, 1969, 1971], "inp2": 12, "assert": [12, 21, 22, 27, 31, 51, 53, 54, 55, 57, 58, 64, 66, 614, 901, 903, 904, 1131, 1133, 1134, 1135, 1136, 1139, 1140, 1141, 1198, 1203, 1204, 1210, 1583, 1673, 1872, 1883, 1885, 1888, 1909, 1910, 1915, 1920, 1928, 1931, 1947, 1957, 1968, 1969], "export": [12, 15, 18, 25, 32, 45, 58, 60, 63, 65, 66, 72, 670, 906, 954, 975, 1203, 1205, 1206, 1212, 1218, 1654, 1655, 1674, 1675, 1880, 1881, 1883, 1884, 1909, 1926, 1930, 1936, 1957, 1967, 1968], "deploy": [12, 33, 42, 46, 1880, 1960], "dim_batch": 12, "dim": [12, 25, 30, 31, 46, 54, 55, 57, 58, 60, 65, 66, 103, 105, 106, 107, 109, 125, 126, 127, 175, 195, 198, 201, 202, 203, 204, 205, 206, 220, 224, 251, 255, 272, 303, 304, 305, 306, 307, 308, 312, 313, 345, 371, 383, 398, 400, 401, 402, 405, 419, 420, 421, 422, 426, 427, 443, 452, 460, 469, 481, 482, 484, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 527, 528, 531, 532, 534, 537, 542, 543, 545, 550, 555, 563, 568, 569, 573, 574, 575, 577, 578, 580, 595, 596, 599, 600, 601, 602, 605, 607, 683, 685, 686, 687, 689, 864, 865, 866, 893, 894, 896, 929, 936, 952, 954, 961, 972, 987, 989, 1051, 1052, 1053, 1054, 1055, 1064, 1070, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1112, 1131, 1141, 1142, 1153, 1163, 1171, 1172, 1173, 1174, 1177, 1222, 1232, 1233, 1253, 1257, 1267, 1269, 1270, 1280, 1288, 1298, 1300, 1301, 1303, 1306, 1308, 1322, 1329, 1330, 1331, 1332, 1333, 1334, 1342, 1369, 1370, 1371, 1374, 1378, 1380, 1385, 1400, 1405, 1424, 1440, 1441, 1442, 1467, 1469, 1481, 1483, 1484, 1515, 1516, 1532, 1535, 1544, 1552, 1557, 1558, 1559, 1568, 1569, 1571, 1573, 1577, 1583, 1589, 1590, 1598, 1614, 1628, 1634, 1638, 1640, 1647, 1648, 1661, 1664, 1667, 1713, 1720, 1723, 1743, 1744, 1749, 1750, 1755, 1756, 1757, 1760, 1761, 1792, 1795, 1796, 1800, 1803, 1805, 1812, 1815, 1817, 1818, 1819, 1820, 1823, 1836, 1840, 1841, 1842, 1843, 1846, 1847, 1855, 1856, 1857, 1858, 1860, 1867, 1868, 1872, 1873, 1880, 1881, 1882, 1888, 1898, 1899, 1910, 1911, 1920, 1923, 1925, 1926, 1940, 1941, 1943, 1949, 1957, 1964], "batch": [12, 22, 25, 31, 43, 45, 46, 49, 50, 51, 54, 55, 57, 58, 65, 66, 573, 574, 575, 577, 578, 676, 692, 693, 694, 695, 696, 697, 725, 750, 769, 775, 897, 898, 899, 910, 922, 923, 930, 933, 934, 935, 942, 972, 1060, 1062, 1072, 1134, 1135, 1141, 1197, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1270, 1273, 1281, 1290, 1291, 1295, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1368, 1370, 1371, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1387, 1388, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1425, 1426, 1437, 1438, 1439, 1440, 1441, 1443, 1446, 1447, 1448, 1449, 1451, 1465, 1466, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1498, 1503, 1505, 1506, 1516, 1517, 1519, 1520, 1521, 1524, 1525, 1526, 1527, 1530, 1543, 1544, 1545, 1568, 1576, 1583, 1601, 1602, 1605, 1614, 1627, 1653, 1654, 1656, 1657, 1659, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1697, 1698, 1704, 1710, 1712, 1722, 1726, 1806, 1807, 1808, 1810, 1811, 1815, 1820, 1824, 1825, 1845, 1848, 1849, 1851, 1869, 1872, 1880, 1897, 1898, 1899, 1903, 1907, 1910, 1911, 1915, 1917, 1929, 1931, 1936, 1940, 1945, 1946, 1957, 1958, 1959, 1963, 1967, 1969], "min": [12, 21, 25, 35, 42, 46, 57, 58, 67, 68, 107, 176, 177, 178, 179, 291, 685, 686, 687, 748, 760, 761, 770, 792, 809, 810, 811, 812, 815, 865, 937, 938, 1015, 1052, 1086, 1087, 1160, 1232, 1246, 1247, 1253, 1257, 1259, 1264, 1270, 1290, 1324, 1356, 1393, 1420, 1422, 1442, 1454, 1461, 1507, 1544, 1548, 1577, 1579, 1584, 1602, 1691, 1696, 1697, 1706, 1710, 1712, 1722, 1824, 1849, 1850, 1851, 1852, 1882, 1894, 1897, 1925, 1926, 1931, 1934, 1936, 1959, 1964, 1972], "ep": [12, 46, 702, 703, 704, 705, 706, 707, 713, 714, 726, 727, 739, 741, 742, 743, 744, 785, 809, 810, 811, 812, 815, 816, 898, 899, 1210, 1286, 1338, 1352, 1353, 1354, 1369, 1388, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1443, 1448, 1473, 1477, 1479, 1481, 1482, 1503, 1515, 1530, 1534, 1535, 1543, 1547, 1569, 1572, 1576, 1599, 1628, 1661, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1706, 1726, 1882, 1909, 1912, 1941, 1964, 1972], "dynamic_shap": [12, 46, 1923, 1966], "graphmodul": [12, 46, 47, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 849, 850, 851, 852, 1931, 1950, 1955, 1956, 1958, 1962, 1968, 1969], "arg0_1": [12, 46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "f32": [12, 46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "s0": [12, 46, 47, 58, 65, 66, 1957, 1969], "sym_siz": [12, 47, 58, 65, 66, 1926, 1964], "sym": [12, 58, 65, 66, 67, 68, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787], "gt": [12, 58, 65, 66, 287, 1154, 1882, 1897, 1912, 1926, 1964], "true_graph_0": [12, 47, 58, 61, 65, 66], "false_graph_0": [12, 47, 58, 61, 65, 66], "symbol": [12, 14, 20, 46, 47, 58, 60, 66, 70, 71, 74, 75, 78, 614, 807, 944, 1215, 1269, 1404, 1449, 1848, 1869, 1880, 1884, 1923, 1957, 1958, 1959], "sub": [12, 35, 49, 56, 58, 61, 65, 66, 552, 804, 851, 852, 1212, 1216, 1217, 1298, 1301, 1303, 1446, 1447, 1477, 1478, 1480, 1743, 1822, 1840, 1857, 1879, 1881, 1882, 1897, 1899, 1904, 1917, 1925, 1926, 1940, 1943, 1964, 1968], "exmapl": 12, "dependet": 12, "datadependentcondpredicact": 12, "sum_1": [12, 57, 1955, 1956], "b8": [12, 58, 61, 65], "flatten": [12, 22, 46, 47, 49, 57, 58, 64, 864, 865, 1061, 1162, 1257, 1270, 1485, 1626, 1667, 1675, 1723, 1739, 1744, 1749, 1836, 1856, 1857, 1858, 1859, 1882, 1897, 1898, 1900, 1902, 1923, 1925, 1926, 1933, 1944, 1957], "flat": [12, 1744, 1787, 1859, 1882, 1899, 1925, 1940], "_higher_order_op": 12, "condition": [12, 42, 954, 1768], "compil": [12, 14, 15, 46, 47, 49, 50, 57, 670, 954, 974, 999, 1003, 1015, 1016, 1130, 1198, 1200, 1201, 1204, 1205, 1212, 1213, 1214, 1216, 1217, 1218, 1434, 1880, 1881, 1883, 1884, 1885, 1886, 1890, 1903, 1906, 1908, 1914, 1921, 1924, 1925, 1936, 1948, 1953, 1954, 1955, 1956, 1957, 1958, 1961, 1963, 1964, 1965, 1966], "constraint": [12, 25, 30, 46, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 784, 785, 892, 954, 1007, 1018, 1135, 1614, 1628, 1653, 1693, 1880, 1884, 1899, 1910, 1912, 1915, 1940, 1954, 1957], "met": [12, 607, 954, 1240, 1247, 1248, 1259, 1273, 1481, 1809], "true_branch": [12, 954], "false_branch": [12, 954], "consist": [12, 21, 25, 27, 31, 42, 43, 47, 57, 898, 933, 934, 935, 954, 1200, 1230, 1236, 1237, 1239, 1241, 1242, 1243, 1244, 1268, 1270, 1434, 1481, 1629, 1632, 1675, 1722, 1824, 1881, 1884, 1888, 1891, 1898, 1899, 1910, 1915, 1917, 1919, 1925, 1927, 1930, 1940, 1955, 1956, 1963, 1969], "aka": [12, 25, 47, 58, 65, 66, 907, 954, 1395, 1904, 1923, 1943, 1957], "add_": [12, 25, 46, 52, 54, 212, 478, 954, 1130, 1882, 1897, 1905, 1940], "tempor": [12, 954, 1352, 1354, 1357, 1473, 1486, 1517, 1544, 1602], "pytre": [12, 57, 58, 954, 1910], "parallel_info": [13, 1880, 1906], "cppextens": [14, 1880], "setuptool": 14, "bare": 14, "buildextens": [14, 1880], "ext_modul": 14, "extra_compile_arg": [14, 1921], "cmdclass": 14, "build_ext": 14, "cudaextens": [14, 1880], "cuda_extens": 14, "extension_kernel": 14, "cu": 14, "cxx": 14, "nvcc": [14, 1003, 1969], "o2": 14, "arch": 14, "card": [14, 1921], "visibl": [14, 25, 27, 39, 47, 997, 1042, 1435, 1436, 1444, 1445, 1957, 1960], "ptx": 14, "road": 14, "recompil": [14, 57, 670, 942, 1214, 1890, 1913, 1956, 1957, 1962, 1965], "cc": [14, 25, 1907], "newest": [14, 53, 1922], "torch_cuda_arch_list": 14, "6": [14, 18, 21, 22, 25, 31, 40, 57, 58, 59, 63, 64, 65, 66, 67, 68, 304, 306, 308, 312, 392, 393, 461, 477, 489, 503, 507, 550, 597, 675, 676, 681, 687, 731, 732, 733, 735, 736, 748, 751, 753, 755, 891, 892, 894, 895, 896, 913, 921, 926, 932, 936, 940, 962, 984, 1031, 1035, 1049, 1050, 1051, 1055, 1056, 1067, 1070, 1071, 1088, 1096, 1101, 1102, 1106, 1107, 1109, 1111, 1112, 1115, 1122, 1153, 1163, 1165, 1166, 1189, 1211, 1222, 1226, 1237, 1253, 1257, 1258, 1259, 1266, 1267, 1271, 1273, 1302, 1306, 1332, 1333, 1334, 1347, 1358, 1361, 1366, 1369, 1377, 1378, 1387, 1388, 1389, 1391, 1392, 1430, 1431, 1435, 1443, 1451, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1477, 1478, 1480, 1482, 1485, 1491, 1500, 1530, 1537, 1538, 1570, 1572, 1579, 1605, 1655, 1656, 1658, 1660, 1666, 1667, 1668, 1677, 1691, 1711, 1712, 1715, 1722, 1723, 1729, 1730, 1733, 1739, 1749, 1750, 1754, 1758, 1771, 1792, 1796, 1801, 1804, 1806, 1807, 1812, 1823, 1825, 1826, 1827, 1835, 1840, 1841, 1842, 1843, 1844, 1846, 1849, 1851, 1855, 1859, 1861, 1873, 1874, 1881, 1884, 1885, 1891, 1899, 1902, 1904, 1909, 1910, 1915, 1920, 1925, 1936, 1937, 1940, 1941, 1943, 1946, 1947, 1956, 1959, 1964, 1966, 1969, 1970], "build_my_extens": 14, "7": [14, 21, 22, 25, 31, 57, 58, 63, 224, 251, 304, 306, 308, 312, 392, 393, 461, 503, 550, 597, 607, 675, 687, 735, 736, 894, 896, 918, 921, 926, 932, 934, 936, 940, 1055, 1067, 1069, 1070, 1073, 1088, 1111, 1112, 1115, 1118, 1122, 1153, 1163, 1177, 1222, 1226, 1236, 1241, 1243, 1244, 1247, 1248, 1252, 1253, 1257, 1264, 1332, 1333, 1334, 1340, 1341, 1344, 1345, 1347, 1358, 1377, 1422, 1430, 1431, 1455, 1456, 1457, 1458, 1459, 1482, 1485, 1500, 1571, 1621, 1645, 1650, 1660, 1667, 1682, 1729, 1733, 1739, 1749, 1750, 1751, 1758, 1771, 1774, 1776, 1787, 1788, 1796, 1804, 1806, 1807, 1812, 1824, 1826, 1827, 1835, 1840, 1841, 1844, 1846, 1855, 1859, 1869, 1873, 1881, 1885, 1891, 1898, 1899, 1905, 1907, 1909, 1918, 1920, 1925, 1926, 1931, 1940, 1943, 1944, 1945, 1946, 1947, 1961, 1966], "older": [14, 1907, 1920, 1928], "modestli": [14, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693], "imag": [14, 21, 731, 732, 733, 851, 852, 951, 1340, 1344, 1345, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1381, 1382, 1383, 1398, 1406, 1441, 1446, 1447, 1468, 1485, 1487, 1488, 1498, 1509, 1510, 1512, 1513, 1527, 1528, 1533, 1544, 1601, 1602, 1747, 1880, 1882, 1899, 1912, 1926, 1929, 1931, 1944, 1945, 1957, 1959, 1960, 1964], "11": [14, 25, 312, 503, 670, 932, 936, 1018, 1070, 1163, 1221, 1257, 1271, 1287, 1342, 1358, 1383, 1431, 1529, 1667, 1668, 1674, 1796, 1840, 1873, 1881, 1885, 1891, 1898, 1907, 1909, 1920, 1921, 1925, 1926, 1940, 1941, 1969], "pars": [14, 25, 45, 905, 1884, 1928, 1936], "window": [14, 21, 25, 57, 342, 546, 911, 920, 1157, 1158, 1197, 1220, 1347, 1348, 1349, 1382, 1383, 1402, 1403, 1427, 1428, 1429, 1430, 1431, 1432, 1500, 1528, 1529, 1557, 1558, 1559, 1727, 1728, 1820, 1880, 1882, 1894, 1907, 1957], "workaround": [14, 21, 57, 1204, 1879, 1919, 1925, 1931, 1959], "pure": [14, 15, 46, 54, 1203, 1881, 1909], "sigmoidalphablendforwardcuda": 14, "69460": 14, "facebookresearch": 14, "pytorch3d": 14, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 14, "relocat": 14, "link": [14, 15, 31, 57, 73, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1427, 1428, 1429, 1485, 1535, 1898, 1914, 1915, 1940], "rdc": 14, "dc": 14, "anymor": [14, 25, 49, 212], "dlto": 14, "dlink": 14, "protent": 14, "perf": [14, 670, 1931, 1962, 1963], "lib": [14, 1888, 1921], "nvshmem": 14, "ninja": [14, 1921], "dlink_librari": 14, "dlink_lib": 14, "std": [14, 33, 40, 79, 368, 444, 1086, 1087, 1118, 1119, 1120, 1668, 1716, 1742, 1781, 1786, 1819, 1858, 1882, 1897, 1902, 1907, 1914, 1921, 1926, 1964], "17": [14, 25, 675, 1197, 1253, 1431, 1796, 1881, 1925, 1926, 1940, 1956, 1959, 1969], "mix": [14, 22, 31, 46, 49, 1018, 1614, 1880, 1904, 1906, 1931, 1940, 1956, 1957, 1959], "use_ninja": 14, "greatli": [14, 57, 1907, 1957], "fallback": [14, 25, 42, 46, 52, 78, 1214, 1264, 1903, 1907, 1920, 1954, 1959, 1969], "distutil": 14, "max_job": 14, "extra_cflag": 14, "extra_cuda_cflag": 14, "extra_ldflag": 14, "extra_include_path": 14, "build_directori": 14, "with_cuda": [14, 1921], "is_python_modul": 14, "is_standalon": 14, "keep_intermedi": 14, "torch_extens": 14, "temporari": [14, 57, 813, 816, 1615, 1904, 1911, 1961], "torch_extensions_dir": 14, "subfold": [14, 1969], "o3": 14, "cuh": 14, "Such": [14, 21, 22, 46, 56, 1866, 1940], "lib64": 14, "cudart": [14, 1921], "fine": [14, 25, 27, 29, 32, 46, 848, 851, 1123, 1216, 1583, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1879, 1896, 1904, 1907, 1909, 1925, 1928, 1929, 1931, 1940, 1951, 1961, 1969], "cuda_hom": 14, "safest": 14, "pybind11": [14, 15, 1883], "linker": 14, "workspac": [14, 942], "header": [14, 40, 1921, 1947], "automat": [14, 22, 25, 42, 43, 46, 57, 77, 141, 579, 879, 881, 942, 1009, 1018, 1162, 1210, 1216, 1302, 1480, 1583, 1615, 1741, 1771, 1862, 1879, 1880, 1883, 1884, 1892, 1893, 1897, 1898, 1904, 1905, 1907, 1909, 1915, 1917, 1925, 1928, 1929, 1931, 1932, 1936, 1945, 1946, 1957, 1958, 1959, 1961, 1969], "construct": [14, 15, 21, 25, 27, 29, 31, 42, 46, 47, 49, 51, 53, 54, 57, 58, 63, 64, 67, 68, 141, 438, 782, 783, 814, 868, 869, 883, 897, 951, 1059, 1075, 1141, 1162, 1200, 1212, 1216, 1217, 1224, 1231, 1271, 1272, 1287, 1302, 1377, 1378, 1434, 1524, 1605, 1614, 1616, 1617, 1653, 1660, 1712, 1716, 1763, 1799, 1806, 1807, 1808, 1809, 1810, 1811, 1825, 1839, 1842, 1872, 1880, 1881, 1888, 1894, 1907, 1908, 1915, 1917, 1920, 1923, 1928, 1931, 1936, 1938, 1943, 1945, 1946, 1947, 1959, 1962], "plain": [14, 1351, 1435, 1444, 1627, 1808, 1909, 1940, 1958], "standalon": [14, 41, 42, 43, 807, 1212, 1216, 1881, 1963], "torch_lib_path": 14, "load_inlin": [14, 1880], "cpp_sourc": 14, "cuda_sourc": 14, "with_pytorch_error_handl": 14, "use_pch": 14, "behav": [14, 15, 25, 56, 57, 304, 312, 483, 505, 507, 831, 1140, 1216, 1430, 1431, 1432, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1883, 1884, 1891, 1904, 1909, 1910, 1915, 1919, 1928, 1936, 1940], "exactli": [14, 22, 25, 31, 44, 47, 898, 899, 936, 985, 989, 1072, 1118, 1119, 1197, 1200, 1242, 1378, 1381, 1382, 1383, 1434, 1462, 1465, 1525, 1535, 1614, 1667, 1675, 1766, 1891, 1897, 1904, 1907, 1908, 1909, 1912, 1913, 1925, 1928, 1929, 1954, 1962], "filenam": [14, 21, 46, 57, 1124, 1199, 1208, 1211, 1879, 1882, 1893, 1904, 1928, 1942, 1945, 1961, 1971], "typic": [14, 21, 22, 25, 31, 32, 33, 35, 42, 43, 44, 47, 49, 57, 74, 962, 973, 1115, 1123, 1200, 1221, 1224, 1272, 1368, 1394, 1434, 1605, 1614, 1679, 1680, 1766, 1806, 1807, 1808, 1810, 1811, 1879, 1880, 1881, 1884, 1890, 1904, 1906, 1907, 1918, 1919, 1920, 1925, 1927, 1929, 1931, 1936, 1944, 1953, 1955, 1957, 1958, 1967, 1969, 1971, 1972], "inlin": [14, 46, 56, 58, 60, 64, 67, 68, 1015, 1200, 1204, 1216, 1906, 1959], "concaten": [14, 21, 25, 30, 893, 929, 940, 987, 1071, 1165, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1378, 1404, 1517, 1525, 1619, 1632, 1817, 1874, 1882, 1885, 1925, 1926, 1940], "furthermor": [14, 40, 53, 1236, 1237, 1264, 1290, 1372, 1897, 1898, 1904, 1919, 1934, 1936], "cuda_runtim": 14, "se": 14, "warn": [14, 18, 22, 25, 29, 75, 76, 78, 670, 891, 897, 932, 984, 1031, 1035, 1046, 1049, 1050, 1141, 1181, 1197, 1216, 1258, 1302, 1440, 1477, 1478, 1479, 1480, 1481, 1629, 1632, 1765, 1773, 1820, 1861, 1872, 1879, 1890, 1894, 1905, 1909, 1923, 1926, 1928, 1935, 1962, 1969], "macro": [14, 1913], "pybind": 14, "_safe_foo": 14, "redirect": [14, 33, 40, 1948], "obscur": 14, "sin_add": 14, "inline_extens": 14, "include_path": [14, 1880], "get_compiler_abi_compatibility_and_vers": [14, 1880], "abi": [14, 15], "alongsid": [14, 1200, 1434, 1909, 1962], "shell": 14, "torchvers": 14, "verify_ninja_avail": [14, 1880], "is_ninja_avail": [14, 1880], "embed": [15, 30, 47, 57, 725, 736, 885, 1063, 1342, 1368, 1378, 1394, 1406, 1440, 1483, 1525, 1583, 1693, 1761, 1882, 1906, 1926, 1930, 1931, 1933, 1936, 1940, 1945, 1964], "modif": [15, 49, 57, 72, 212, 770, 887, 1125, 1126, 1200, 1434, 1614, 1904, 1909, 1915, 1928, 1931, 1959], "submodul": [15, 27, 30, 46, 47, 49, 57, 71, 781, 787, 804, 828, 829, 830, 848, 851, 852, 1139, 1200, 1204, 1206, 1211, 1212, 1371, 1434, 1435, 1436, 1462, 1612, 1881, 1883, 1884, 1892, 1915, 1920, 1928, 1931, 1936, 1950, 1955, 1968], "preprocess": [15, 46, 70, 486, 1200], "augment": [15, 1885, 1947], "walk": [15, 57, 1888, 1909, 1928, 1937, 1938, 1944, 1969], "interfac": [15, 22, 27, 32, 34, 39, 42, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 735, 736, 746, 751, 752, 753, 754, 755, 784, 1126, 1605, 1765, 1820, 1861, 1884, 1894, 1895, 1909, 1914, 1927, 1934, 1940, 1945, 1964], "opencv": [15, 1533, 1544], "struct": [15, 1140, 1141, 1872, 1892, 1914], "explain": [15, 25, 46, 1693, 1766, 1879, 1884, 1903, 1907, 1910, 1917, 1940, 1959, 1969], "reshap": [15, 25, 31, 488, 489, 503, 534, 607, 682, 940, 1055, 1070, 1071, 1111, 1163, 1221, 1253, 1257, 1266, 1267, 1270, 1334, 1381, 1455, 1456, 1457, 1458, 1459, 1485, 1628, 1661, 1667, 1804, 1805, 1812, 1840, 1841, 1846, 1873, 1874, 1882, 1891, 1898, 1899, 1925, 1926, 1933, 1944, 1945, 1964], "classat_1_1_tensor": 15, "tensor_index": 15, "crucial": [15, 1961, 1962, 1963], "cpp_autograd": 15, "workflow": [15, 1879, 1909, 1931, 1932, 1948, 1951, 1957, 1958, 1963, 1965, 1966], "undesir": [15, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1820, 1909], "overview": [15, 25, 39, 1614, 1880, 1891, 1896, 1904, 1912, 1915, 1924, 1929, 1931, 1936, 1951, 1952, 1956], "cpp_frontend": 15, "library_root": 15, "libtorch": 15, "linux": [15, 25, 1879], "gcc": 15, "pre": [15, 25, 29, 49, 57, 897, 904, 1200, 1434, 1609, 1611, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1695, 1701, 1879, 1881, 1884, 1892, 1904, 1906, 1907, 1915, 1923, 1925, 1929, 1946, 1958, 1959, 1965, 1969], "cxx11": 15, "facilit": [16, 26, 31, 54, 963, 964, 965, 966, 967, 968, 969, 970, 971, 976, 1060, 1621, 1763, 1879, 1881, 1884, 1919], "earli": [18, 22, 33, 56, 1373, 1374, 1375, 1379, 1880, 1931, 1932, 1949, 1950, 1958, 1962], "introduc": [18, 31, 54, 750, 1273, 1386, 1404, 1449, 1544, 1749, 1879, 1884, 1905, 1908, 1909, 1916, 1925, 1928, 1929, 1930, 1936, 1940, 1946, 1951, 1959, 1965, 1969], "race": [18, 25, 1904], "enable_cuda_sanit": 18, "torch_cuda_sanit": 18, "concurr": [18, 25, 29, 1906, 1907, 1917, 1936, 1937], "uniniti": [18, 24, 435, 489, 1073, 1074, 1605, 1616, 1617, 1660, 1861, 1899, 1926], "overwrit": [18, 21, 25, 57, 1435, 1444, 1884, 1904, 1954], "commandlin": 18, "example_error": 18, "csan": 18, "pointer": [18, 130, 990, 1450, 1907, 1908, 1914, 1936, 1938, 1958], "139719969079296": 18, "94646435460352": 18, "_sanit": 18, "364": 18, "_handle_kernel_launch": 18, "stack_trac": [18, 47, 57], "stacksummari": 18, "extract": [18, 57, 826, 934, 935, 1377, 1381, 1485, 1524, 1601, 1923, 1936, 1950, 1953, 1955, 1956, 1959, 1960], "10000": [18, 22, 684, 1704, 1751, 1911, 1915, 1940, 1945, 1961], "420": 18, "_handle_memory_alloc": 18, "incorrectli": [18, 49, 976, 1117, 1960], "id": [18, 21, 25, 27, 29, 33, 41, 42, 43, 49, 57, 764, 814, 973, 1008, 1473, 1559, 1598, 1614, 1674, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1884, 1914, 1925, 1926, 1928, 1935, 1936, 1937, 1942, 1962, 1966, 1969], "faulti": [18, 25], "schema": [18, 25, 27, 47, 76, 1881, 1882, 1884, 1888, 1925, 1964, 1968], "current_stream": [18, 975, 1880, 1907], "wait_stream": [18, 25, 976, 978, 1907], "default_stream": [18, 25, 1880], "suspect": [18, 1693, 1907, 1969], "cudnn": [19, 20, 750, 1210, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1404, 1449, 1450, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1621, 1766, 1880, 1882, 1907, 1918, 1919, 1963], "float16": [19, 22, 27, 49, 288, 676, 679, 750, 813, 816, 824, 840, 841, 848, 910, 922, 1125, 1182, 1200, 1295, 1305, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1387, 1404, 1405, 1421, 1434, 1449, 1544, 1583, 1621, 1679, 1680, 1751, 1864, 1903, 1915, 1931, 1933, 1940, 1942, 1943, 1946, 1947, 1972], "v100": [19, 750, 1386, 1404, 1449, 1907], "packedsequ": [19, 750, 1386, 1404, 1449, 1654, 1655, 1656, 1658], "rnn": [20, 724, 750, 751, 752, 753, 755, 848, 1386, 1387, 1404, 1405, 1450, 1451, 1615, 1630, 1653, 1886, 1911, 1915, 1933, 1945], "enforc": [20, 22, 56, 785, 880, 1200, 1404, 1434, 1449, 1884, 1915, 1944], "cuda_launch_block": [20, 1404, 1449, 1907], "colon": [20, 1404, 1449, 1936], "cublas_workspace_config": [20, 1404, 1449, 1861, 1907, 1919], "4096": [20, 1404, 1449, 1861, 1907, 1925], "heart": [21, 1962], "dataload": [21, 486, 1614, 1697, 1698, 1704, 1907, 1911, 1917, 1921, 1927, 1945], "batch_siz": [21, 31, 53, 55, 882, 1131, 1139, 1141, 1440, 1653, 1655, 1656, 1658, 1872, 1882, 1910, 1911, 1919, 1925, 1945], "shuffl": [21, 1880, 1945], "batch_sampl": 21, "num_work": [21, 33, 1919, 1921], "drop_last": 21, "timeout": [21, 25, 42, 1896, 1936], "worker_init_fn": [21, 1911, 1919], "prefetch_factor": 21, "persistent_work": 21, "__getitem__": [21, 1861], "__len__": [21, 57, 1882], "protocol": [21, 27, 32, 42, 44, 870, 1123, 1126, 1754, 1909, 1921, 1923, 1925, 1936, 1970], "possibli": [21, 42, 46, 49, 1200, 1216, 1243, 1248, 1434, 1614, 1881, 1888, 1919, 1928, 1958, 1971], "sampl": [21, 27, 31, 46, 50, 55, 57, 79, 144, 145, 368, 444, 471, 598, 769, 912, 962, 984, 1018, 1031, 1035, 1049, 1050, 1090, 1108, 1131, 1141, 1153, 1197, 1217, 1290, 1324, 1346, 1350, 1351, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1388, 1394, 1397, 1398, 1399, 1400, 1401, 1419, 1421, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1452, 1465, 1466, 1473, 1482, 1498, 1505, 1506, 1516, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1533, 1535, 1543, 1544, 1545, 1568, 1576, 1614, 1628, 1668, 1697, 1712, 1715, 1729, 1731, 1733, 1735, 1737, 1802, 1818, 1819, 1820, 1867, 1868, 1872, 1880, 1894, 1902, 1903, 1907, 1914, 1915, 1928, 1931, 1932, 1945, 1969], "idx": [21, 57, 888, 1200, 1206, 1342, 1377, 1434, 1628, 1857, 1882, 1898], "th": [21, 145, 304, 306, 312, 750, 891, 893, 912, 932, 1059, 1064, 1174, 1197, 1222, 1240, 1248, 1254, 1290, 1324, 1373, 1374, 1375, 1379, 1386, 1394, 1404, 1449, 1519, 1520, 1521, 1526, 1723, 1820, 1859, 1909, 1921, 1941, 1943, 1971], "iterabledataset": [21, 1914], "__iter__": [21, 1885], "suitabl": [21, 31, 926, 1220, 1693, 1758, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1918, 1930, 1932, 1945, 1960], "improb": 21, "fetch": [21, 56, 57, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1673, 1936], "stream": [21, 25, 33, 40, 49, 56, 141, 476, 883, 897, 964, 966, 971, 973, 974, 975, 976, 979, 980, 981, 989, 992, 993, 1007, 1013, 1045, 1048, 1312, 1315, 1316, 1321, 1744, 1880, 1882, 1884, 1923, 1936, 1959, 1971], "databas": 21, "remot": [21, 25, 29, 33, 1614, 1929, 1936, 1937], "real": [21, 31, 57, 75, 676, 677, 678, 679, 680, 682, 688, 898, 910, 934, 935, 951, 958, 1018, 1088, 1089, 1091, 1093, 1094, 1095, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1190, 1192, 1193, 1196, 1197, 1221, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1243, 1244, 1245, 1250, 1253, 1255, 1257, 1258, 1259, 1260, 1264, 1265, 1269, 1270, 1271, 1281, 1287, 1401, 1443, 1446, 1447, 1483, 1627, 1820, 1824, 1869, 1870, 1871, 1879, 1880, 1882, 1884, 1904, 1907, 1923, 1926, 1928, 1931, 1936, 1938, 1944, 1946, 1947, 1955, 1957, 1958, 1959, 1961, 1962, 1964, 1970], "replica": [21, 22, 25, 29, 40, 1371, 1614, 1908], "duplic": [21, 27, 306, 310, 461, 534, 911, 920, 941, 1157, 1158, 1200, 1434, 1857, 1858, 1925, 1940], "yield": [21, 22, 46, 49, 57, 1060, 1062, 1200, 1247, 1248, 1434, 1875, 1884, 1885, 1891, 1929, 1931, 1941, 1959], "stochast": [21, 31, 1382, 1383, 1528, 1529, 1676, 1678, 1679, 1681, 1692, 1696, 1697, 1915, 1927], "decent": 21, "randomli": [21, 735, 736, 746, 754, 899, 1346, 1372, 1373, 1374, 1375, 1379, 1452, 1518, 1519, 1520, 1521, 1526, 1640, 1899, 1914, 1915], "permut": [21, 46, 58, 66, 1072, 1247, 1248, 1267, 1290, 1292, 1621, 1737, 1880, 1882, 1898, 1926, 1933, 1944, 1946, 1964], "mini": [21, 769, 775, 1352, 1353, 1354, 1377, 1378, 1389, 1394, 1397, 1398, 1399, 1406, 1426, 1437, 1439, 1473, 1482, 1524, 1525, 1544, 1602, 1929], "neither": [21, 25, 785, 886, 889, 1055, 1115, 1440, 1481, 1667, 1846, 1909, 1918, 1936], "nor": [21, 25, 33, 49, 785, 889, 1236, 1237, 1264, 1440, 1481, 1614, 1667, 1721, 1824, 1909, 1925, 1954, 1958], "notion": [21, 898, 1352, 1353, 1354, 1397, 1398, 1399, 1473, 1962], "collat": 21, "minibatch": [21, 758, 759, 762, 763, 764, 1290, 1342, 1350, 1351, 1368, 1370, 1394, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1486, 1500, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1545, 1557, 1558, 1559, 1568, 1576, 1929], "loader": [21, 1927], "essenti": [21, 25, 30, 33, 57, 1290, 1898, 1907, 1921, 1940, 1954], "dummi": [21, 29, 1888, 1904, 1909, 1923, 1969, 1970], "infinit": [21, 1192, 1273, 1350, 1357, 1517, 1716, 1909, 1918, 1936, 1958], "drop": [21, 53, 55, 57, 1018, 1205, 1259, 1264, 1346, 1662, 1766, 1820, 1881, 1898, 1917, 1962, 1971], "roughli": [21, 1400, 1908, 1967, 1968], "dataset_it": 21, "pad": [21, 22, 46, 702, 703, 704, 705, 706, 707, 708, 709, 715, 716, 717, 720, 721, 725, 728, 729, 730, 731, 732, 733, 758, 759, 762, 763, 764, 769, 772, 773, 775, 942, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1197, 1347, 1348, 1349, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1377, 1378, 1381, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1437, 1440, 1455, 1456, 1457, 1458, 1459, 1460, 1480, 1481, 1485, 1489, 1490, 1491, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1524, 1525, 1527, 1533, 1544, 1557, 1558, 1559, 1560, 1561, 1562, 1601, 1602, 1654, 1656, 1657, 1659, 1727, 1728, 1820, 1880, 1882, 1899, 1911, 1925, 1926, 1931, 1945, 1957, 1964], "length": [21, 22, 25, 27, 31, 251, 304, 306, 312, 342, 423, 424, 573, 574, 575, 725, 750, 804, 883, 897, 941, 989, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1126, 1141, 1174, 1197, 1216, 1220, 1333, 1334, 1352, 1357, 1362, 1371, 1378, 1381, 1386, 1402, 1404, 1440, 1449, 1477, 1485, 1508, 1509, 1510, 1517, 1525, 1544, 1583, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1729, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1804, 1806, 1807, 1808, 1810, 1811, 1820, 1846, 1872, 1882, 1884, 1891, 1898, 1899, 1905, 1911, 1940, 1947, 1957, 1959, 1964, 1969], "certain": [21, 22, 25, 39, 40, 46, 54, 56, 57, 75, 676, 679, 725, 910, 922, 997, 1060, 1175, 1197, 1200, 1208, 1272, 1295, 1305, 1362, 1363, 1364, 1365, 1366, 1367, 1387, 1405, 1421, 1434, 1440, 1485, 1534, 1545, 1547, 1666, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1884, 1888, 1891, 1898, 1904, 1905, 1907, 1909, 1914, 1915, 1918, 1925, 1929, 1930, 1936, 1937, 1940, 1958, 1959, 1962, 1963, 1969], "cheaper": [21, 56], "bulk": [21, 1958], "arrai": [21, 33, 438, 750, 810, 811, 869, 870, 913, 931, 958, 962, 1072, 1116, 1125, 1126, 1134, 1135, 1272, 1302, 1381, 1386, 1387, 1404, 1405, 1527, 1744, 1751, 1771, 1806, 1807, 1808, 1810, 1811, 1836, 1839, 1846, 1854, 1866, 1881, 1885, 1907, 1915, 1940, 1942, 1946, 1947, 1959], "untouch": 21, "slightli": [21, 25, 31, 46, 49, 1667, 1712, 1825, 1879, 1907, 1909, 1912, 1918, 1928, 1959], "default_col": 21, "channel": [21, 52, 462, 463, 464, 769, 775, 798, 812, 815, 823, 835, 843, 1086, 1352, 1353, 1354, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1379, 1381, 1389, 1397, 1398, 1399, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1422, 1442, 1468, 1473, 1485, 1486, 1487, 1488, 1503, 1519, 1520, 1521, 1526, 1543, 1544, 1551, 1577, 1602, 1621, 1638, 1639, 1640, 1647, 1648, 1664, 1724, 1898, 1900, 1902, 1904, 1931, 1932, 1934, 1945], "class_index": 21, "namedtupl": [21, 46, 47, 57, 886, 1051, 1052, 1145, 1200, 1212, 1222, 1242, 1292, 1298, 1301, 1303, 1306, 1330, 1342, 1434, 1712, 1722, 1796, 1824, 1843, 1848, 1881, 1883, 1884, 1931], "situat": [21, 31, 44, 57, 76, 78, 942, 958, 1632, 1896, 1909, 1910, 1917, 1918, 1928, 1931, 1938, 1957, 1958, 1959, 1970], "gil": [21, 25, 29, 1904, 1907, 1936], "integ": [21, 24, 25, 31, 42, 46, 47, 79, 280, 435, 437, 439, 489, 535, 550, 556, 675, 676, 677, 678, 679, 680, 756, 757, 775, 777, 855, 882, 910, 911, 920, 931, 957, 976, 978, 994, 1000, 1001, 1029, 1067, 1070, 1072, 1073, 1074, 1075, 1115, 1116, 1117, 1118, 1119, 1120, 1126, 1127, 1131, 1132, 1133, 1134, 1135, 1143, 1157, 1158, 1161, 1162, 1163, 1211, 1214, 1223, 1224, 1231, 1242, 1244, 1254, 1273, 1323, 1342, 1357, 1362, 1363, 1364, 1406, 1492, 1493, 1494, 1495, 1496, 1497, 1604, 1653, 1668, 1671, 1700, 1703, 1707, 1712, 1724, 1725, 1731, 1733, 1734, 1735, 1737, 1742, 1751, 1763, 1812, 1821, 1825, 1840, 1841, 1854, 1859, 1873, 1877, 1883, 1884, 1885, 1897, 1910, 1912, 1929, 1931, 1932, 1934, 1940, 1941, 1943, 1946, 1947, 1957, 1972], "descriptor": [21, 25, 1482, 1483, 1885, 1925], "parent": [21, 35, 40, 44, 49, 670, 778, 779, 807, 1434, 1896, 1921, 1928, 1938, 1945], "simplest": [21, 27, 33, 57, 848, 1347, 1348, 1349, 1362, 1363, 1364, 1427, 1428, 1429, 1630, 1908, 1909, 1915, 1923, 1931, 1938, 1940, 1959, 1962], "refcount": [21, 1896, 1917], "panda": 21, "pyarrow": 21, "13246": 21, "enumer": [21, 31, 46, 57, 1200, 1434, 1436, 1445, 1697, 1882, 1883, 1903, 1907, 1921, 1945, 1968], "get_worker_info": [21, 1936], "seed": [21, 79, 1010, 1019, 1020, 1040, 1176, 1293, 1314, 1712, 1729, 1825, 1864, 1880, 1882, 1911, 1917, 1919, 1935], "naiv": [21, 1929, 1957, 1959], "shut": [21, 1936], "garbag": [21, 1938], "subtleti": [21, 58, 1371, 1909, 1911], "multiprocess": [21, 22, 25, 26, 28, 33, 35, 43, 44, 1371, 1614, 1880, 1898, 1908, 1937], "unix": [21, 40, 974, 1896], "fork": [21, 40, 1219, 1614, 1884, 1906, 1907, 1911, 1914, 1917, 1921, 1935, 1936, 1938], "child": [21, 33, 35, 49, 781, 1200, 1434, 1639, 1896, 1915, 1921, 1938], "address": [21, 25, 42, 45, 54, 207, 898, 899, 981, 1891, 1896, 1907, 1909, 1936, 1937, 1954, 1971], "maco": [21, 25, 1896, 1916], "spawn": [21, 22, 26, 33, 34, 40, 44, 1203, 1614, 1880, 1903, 1908, 1917, 1921, 1937], "__name__": [21, 22, 25, 34, 35, 43, 1908, 1909, 1917, 1921, 1928, 1937], "__main__": [21, 22, 25, 34, 35, 43, 1905, 1908, 1917, 1921, 1937], "bytecod": [21, 46, 670, 1890, 1922, 1923, 1928, 1955, 1956, 1959, 1962, 1969], "base_se": 21, "worker_id": [21, 44, 1919], "therebi": [21, 31, 1927, 1931], "mandatorili": 21, "faq": [21, 1371, 1656, 1880], "initial_se": [21, 79, 1880, 1919, 1935], "host": [21, 25, 33, 35, 41, 42, 43, 44, 187, 200, 570, 593, 867, 1200, 1434, 1614, 1632, 1666, 1907, 1929, 1936, 1937, 1942, 1954, 1958, 1971], "recogn": [21, 72, 1884, 1936, 1940, 1958], "simplecustombatch": 21, "transposed_data": 21, "zip": [21, 27, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1879, 1882, 1883, 1893, 1907, 1914, 1940], "tgt": [21, 1477, 1478, 1479], "collate_wrapp": 21, "float32": [21, 22, 25, 46, 49, 258, 570, 607, 809, 810, 811, 812, 815, 816, 870, 951, 1086, 1087, 1125, 1147, 1149, 1182, 1338, 1351, 1477, 1486, 1487, 1488, 1500, 1679, 1680, 1716, 1721, 1729, 1733, 1748, 1763, 1764, 1766, 1809, 1870, 1899, 1903, 1907, 1918, 1923, 1925, 1933, 1940, 1941, 1942, 1943, 1946, 1947, 1956, 1959, 1969, 1972], "tensordataset": 21, "batch_ndx": 21, "is_pin": [21, 1653, 1882, 1897, 1926, 1942, 1959], "multiprocessing_context": 21, "pin_memory_devic": 21, "reshuffl": 21, "draw": [21, 145, 912, 1035, 1324, 1729, 1945, 1967], "mutual": [21, 25, 33, 725, 1947], "subprocess": [21, 25, 40, 42, 44, 1911, 1917], "incomplet": [21, 891, 1886, 1941], "divis": [21, 573, 607, 677, 762, 763, 764, 936, 1067, 1117, 1120, 1211, 1244, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1389, 1401, 1425, 1443, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1569, 1742, 1812, 1840, 1884, 1903, 1907], "basecontext": 21, "randomsampl": 21, "prefetch": [21, 49], "unpickl": [21, 25, 1272, 1928], "practic": [21, 25, 31, 47, 49, 1880, 1881, 1891, 1896, 1898, 1904, 1909, 1912, 1915, 1920, 1928, 1936, 1951, 1958, 1959], "proper": [21, 33, 56, 57, 1063, 1761, 1883, 1904, 1907, 1909, 1917, 1921], "guess": 21, "trust": [21, 25, 1272, 1879, 1928], "inaccur": [21, 22, 1544], "kwd": 21, "__getitems__": 21, "speedup": [21, 22, 1440, 1481, 1951, 1954, 1962, 1966], "myiterabledataset": 21, "worker_info": 21, "iter_start": 21, "iter_end": 21, "per_work": 21, "ceil": [21, 168, 623, 624, 758, 759, 1347, 1348, 1349, 1402, 1403, 1427, 1428, 1429, 1500, 1501, 1502, 1557, 1558, 1559, 1727, 1728, 1751, 1882, 1897, 1907, 1926, 1940, 1964], "mult": 21, "12": [21, 22, 25, 49, 312, 507, 607, 676, 731, 732, 733, 735, 736, 932, 936, 1070, 1088, 1163, 1204, 1220, 1237, 1259, 1342, 1358, 1366, 1381, 1382, 1383, 1431, 1446, 1447, 1468, 1477, 1485, 1528, 1529, 1569, 1574, 1575, 1628, 1661, 1711, 1722, 1771, 1786, 1796, 1840, 1856, 1859, 1873, 1879, 1881, 1882, 1885, 1891, 1907, 1909, 1916, 1920, 1925, 1926, 1940, 1947, 1956, 1966, 1967], "overall_start": 21, "overall_end": 21, "stackdataset": 21, "assembl": [21, 1956], "imagedataset": 21, "textdataset": 21, "tuple_stack": 21, "dict_stack": 21, "concatdataset": 21, "chaindataset": 21, "chain": [21, 22, 31, 56, 57, 141, 883, 932, 1256, 1378, 1462, 1694, 1707, 1884, 1904, 1907, 1909, 1912, 1915, 1927, 1968], "fly": [21, 1015, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1904], "whole": [21, 25, 27, 1141, 1200, 1434, 1462, 1473, 1614, 1872, 1904, 1908, 1917, 1918, 1928, 1958, 1960, 1962, 1965, 1966], "_util": [21, 1967], "collate_fn_map": 21, "registri": [21, 1880, 1920, 1923, 1925], "default_collate_fn_map": 21, "insert": [21, 25, 31, 49, 56, 57, 737, 782, 783, 851, 852, 1435, 1436, 1444, 1614, 1758, 1761, 1771, 1792, 1817, 1860, 1881, 1892, 1907, 1923, 1926, 1931, 1968], "collate_tensor_fn": 21, "custom_col": 21, "collate_map": 21, "outer": [21, 681, 891, 1072, 1131, 1135, 1140, 1146, 1882, 1884, 1926], "unchang": [21, 489, 503, 505, 725, 804, 1111, 1200, 1434, 1477, 1743, 1815, 1903, 1918, 1931], "byte": [21, 25, 31, 42, 233, 425, 548, 870, 980, 1021, 1023, 1025, 1027, 1124, 1126, 1199, 1272, 1309, 1310, 1673, 1682, 1754, 1883, 1884, 1885, 1897, 1920, 1928, 1940, 1942, 1971], "k": [21, 25, 27, 31, 43, 57, 277, 345, 496, 503, 505, 507, 580, 607, 750, 935, 1059, 1072, 1129, 1142, 1162, 1222, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1245, 1246, 1247, 1250, 1252, 1259, 1261, 1263, 1264, 1273, 1291, 1295, 1347, 1349, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1382, 1383, 1386, 1387, 1404, 1405, 1419, 1421, 1422, 1427, 1429, 1440, 1441, 1449, 1451, 1516, 1528, 1529, 1551, 1568, 1627, 1710, 1712, 1722, 1750, 1801, 1802, 1803, 1804, 1806, 1807, 1808, 1810, 1811, 1820, 1843, 1848, 1882, 1883, 1902, 1907, 1909, 1921, 1940, 1941, 1943, 1959, 1962, 1963, 1964, 1969], "v_i": [21, 1240], "v_1": 21, "v_2": 21, "v1_i": 21, "v2_i": 21, "v1_1": 21, "v1_2": 21, "v2_1": 21, "v2_2": 21, "elem": [21, 1882], "customtyp": 21, "collate_customtype_fn": 21, "custotyp": 21, "default_convert": 21, "np": [21, 930, 1067, 1072, 1112, 1113, 1114, 1573, 1716, 1888, 1910, 1919, 1925, 1945, 1946, 1947, 1959], "fraction": [21, 31, 1042, 1115, 1121, 1319, 1365, 1366, 1367, 1382, 1383, 1440, 1481, 1528, 1529, 1637, 1638, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1723, 1902, 1959], "workerinfo": [21, 1936], "random_split": 21, "floor": [21, 58, 60, 66, 262, 637, 638, 758, 759, 1067, 1117, 1211, 1347, 1348, 1349, 1402, 1403, 1427, 1428, 1429, 1500, 1501, 1502, 1557, 1558, 1559, 1727, 1728, 1742, 1751, 1820, 1882, 1884, 1897, 1917, 1920, 1926, 1940, 1964], "frac": [21, 31, 270, 368, 639, 640, 677, 750, 762, 763, 764, 855, 911, 920, 958, 962, 1067, 1117, 1153, 1157, 1158, 1220, 1232, 1236, 1237, 1240, 1252, 1264, 1271, 1287, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1372, 1381, 1386, 1387, 1388, 1389, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1419, 1421, 1422, 1423, 1424, 1427, 1428, 1429, 1437, 1438, 1439, 1441, 1449, 1451, 1452, 1464, 1466, 1467, 1469, 1470, 1472, 1473, 1474, 1485, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1553, 1569, 1571, 1573, 1583, 1585, 1589, 1591, 1593, 1594, 1677, 1678, 1681, 1683, 1689, 1696, 1697, 1726, 1738, 1741, 1753, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1803, 1818, 1819, 1820, 1824, 1846, 1867, 1868, 1882, 1897, 1902, 1904, 1912, 1926, 1940, 1941], "remaind": [21, 480, 1120, 1153, 1882, 1926, 1956, 1964], "robin": [21, 25], "generator1": 21, "manual_se": [21, 54, 79, 1880, 1882, 1897, 1915, 1917, 1919, 1925, 1926, 1935], "42": [21, 814, 920, 1323, 1778, 1907, 1915, 1956], "generator2": 21, "30": [21, 25, 31, 33, 42, 435, 607, 710, 718, 719, 746, 754, 1153, 1223, 1355, 1357, 1361, 1421, 1485, 1491, 1508, 1517, 1605, 1700, 1702, 1708, 1725, 1836, 1909, 1925, 1927, 1936, 1956], "data_sourc": 21, "accedingsequencelengthsampl": 21, "argsort": [21, 1836, 1882, 1910, 1926], "tolist": [21, 343, 1884, 1926, 1942], "accedingsequencelengthbatchsampl": 21, "sequentialsampl": 21, "num_sampl": [21, 411, 1324, 1882], "drawn": [21, 164, 249, 277, 1324, 1668, 1729, 1733, 1734, 1902, 1947, 1948], "subsetrandomsampl": 21, "weightedrandomsampl": 21, "probabl": [21, 49, 145, 750, 912, 1161, 1278, 1324, 1342, 1346, 1350, 1357, 1370, 1372, 1373, 1374, 1375, 1379, 1386, 1388, 1404, 1440, 1441, 1449, 1505, 1516, 1517, 1518, 1519, 1520, 1521, 1526, 1535, 1545, 1568, 1583, 1722, 1896, 1909, 1921, 1925, 1941, 1945, 1957, 1958, 1959, 1960, 1965], "row": [21, 22, 30, 31, 199, 304, 306, 312, 575, 578, 683, 689, 867, 891, 893, 930, 958, 962, 1055, 1085, 1113, 1114, 1135, 1141, 1162, 1222, 1248, 1256, 1259, 1264, 1288, 1290, 1298, 1300, 1301, 1303, 1306, 1324, 1330, 1331, 1332, 1524, 1525, 1573, 1627, 1666, 1720, 1723, 1743, 1804, 1805, 1806, 1807, 1808, 1810, 1811, 1823, 1843, 1846, 1850, 1852, 1866, 1872, 1874, 1882, 1912, 1940, 1945], "05": [21, 29, 57, 104, 335, 684, 702, 703, 704, 705, 706, 707, 713, 714, 726, 727, 739, 741, 742, 743, 744, 898, 899, 1086, 1189, 1216, 1217, 1287, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1477, 1479, 1481, 1503, 1534, 1543, 1547, 1614, 1695, 1701, 1702, 1708, 1780, 1781, 1786, 1881, 1882, 1927, 1937, 1947], "batchsampl": 21, "distributedsampl": [21, 1614], "num_replica": 21, "world_siz": [21, 22, 25, 26, 29, 33, 42, 43, 45, 49, 1614, 1908, 1929, 1936, 1937], "evenli": [21, 573, 574, 575, 685, 686, 1070, 1163, 1271, 1287, 1873], "set_epoch": 21, "is_distribut": [21, 1882, 1926, 1959], "start_epoch": 21, "n_epoch": 21, "vanilla": [22, 47, 1891], "allreduc": [22, 25, 1614, 1907, 1908, 1926], "besid": [22, 25, 1907, 1908, 1923, 1945, 1955], "register_comm_hook": [22, 29, 49, 1614], "mainli": [22, 31, 817, 1357, 1517, 1949], "bucket": [22, 29, 30, 1342, 1614, 1882, 1908, 1926, 1959, 1969], "gradbucket": [22, 1614], "decompos": [22, 30, 46, 57, 1122, 1130, 1245, 1904, 1909, 1925, 1964], "get_per_parameter_tensor": 22, "wise": [22, 25, 31, 677, 678, 688, 748, 760, 761, 770, 774, 874, 956, 1072, 1077, 1118, 1119, 1143, 1144, 1156, 1165, 1223, 1225, 1282, 1283, 1284, 1285, 1289, 1299, 1302, 1304, 1335, 1356, 1367, 1374, 1376, 1390, 1391, 1392, 1393, 1395, 1420, 1423, 1433, 1442, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1470, 1472, 1474, 1475, 1507, 1522, 1531, 1532, 1536, 1537, 1538, 1539, 1542, 1546, 1548, 1553, 1563, 1564, 1577, 1578, 1579, 1584, 1585, 1586, 1587, 1591, 1593, 1594, 1595, 1804, 1874, 1906, 1909, 1940, 1941, 1944, 1966], "_distributed_c10d": [22, 25], "1d": [22, 31, 49, 692, 695, 728, 731, 762, 772, 941, 958, 962, 1055, 1069, 1161, 1162, 1177, 1197, 1256, 1257, 1302, 1331, 1339, 1343, 1347, 1357, 1362, 1365, 1370, 1373, 1374, 1378, 1402, 1426, 1427, 1439, 1441, 1486, 1492, 1495, 1498, 1500, 1508, 1511, 1519, 1525, 1554, 1557, 1723, 1724, 1727, 1820, 1836, 1846, 1869], "is_last": 22, "set_buff": 22, "stateless": [22, 54, 1900, 1915], "ddp_comm_hook": [22, 29], "default_hook": 22, "allreduce_hook": 22, "process_group": [22, 26, 27, 29, 49, 1473, 1614], "aggreg": [22, 25, 27, 35, 49, 1378, 1525, 1614, 1643, 1894, 1929, 1959, 1969], "henc": [22, 29, 33, 41, 42, 45, 49, 56, 912, 1126, 1430, 1431, 1432, 1486, 1621, 1809, 1899, 1904, 1907, 1908, 1936, 1938, 1954], "unaffect": [22, 489, 490, 1388], "ddp_model": [22, 25, 27, 1614, 1908], "fp16_compress_hook": 22, "compress": [22, 49, 199, 577, 578, 1094, 1095, 1104, 1105, 1614, 1806, 1807, 1808, 1810, 1811, 1845, 1880, 1966], "decompress": [22, 1879, 1893], "bf16_compress_hook": 22, "nccl": [22, 26, 27, 43, 49, 1614, 1913], "brain": [22, 1943, 1946], "wrapper": [22, 25, 31, 49, 56, 57, 58, 614, 747, 780, 814, 970, 973, 975, 976, 978, 1045, 1047, 1118, 1119, 1139, 1200, 1312, 1371, 1881, 1883, 1884, 1894, 1896, 1907, 1908, 1925, 1929, 1954], "fp16_compress_wrapp": 22, "powersgdst": 22, "matrix_approximation_rank": 22, "start_powersgd_it": 22, "powersgd_hook": 22, "bf16_compress_wrapp": 22, "wikipedia": [22, 1570, 1904, 1912, 1972], "bfloat16_float": 22, "point_format": 22, "vogel": 22, "et": [22, 31, 49, 1357, 1446, 1447, 1482, 1483, 1692, 1787, 1825, 1902], "al": [22, 31, 49, 1357, 1446, 1447, 1482, 1483, 1692, 1787, 1825, 1902], "neurip": [22, 31], "2019": [22, 31, 1029], "bandwidth": [22, 25, 41, 43, 1907, 1931, 1936, 1961, 1963], "hyperparamet": [22, 49, 57, 1945], "1000": [22, 1087, 1092, 1118, 1119, 1342, 1377, 1483, 1724, 1751, 1771, 1839, 1904, 1920, 1925, 1945], "min_compression_r": 22, "use_error_feedback": 22, "warm_start": 22, "orthogonalization_epsilon": 22, "random_se": 22, "compression_stats_logging_frequ": 22, "batch_tensors_with_same_shap": 22, "tune": [22, 25, 29, 1029, 1237, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1904, 1907, 1916, 1931, 1969], "stronger": [22, 46, 47, 58], "exponenti": [22, 249, 1082, 1252, 1278, 1279, 1280, 1288, 1356, 1376, 1522, 1880, 1884, 1926, 1927, 1941, 1948], "grid": [22, 1092, 1302, 1498, 1533, 1882, 1907, 1945, 1964], "satisfactori": 22, "nlp": [22, 1397, 1398, 1399, 1406, 1959], "appendix": [22, 1880], "hybrid": [22, 49, 209, 533, 573, 574, 575, 577, 578, 1164], "scheme": [22, 42, 468, 792, 809, 810, 811, 812, 815, 817, 1915], "sensit": [22, 1395, 1465, 1925, 1928, 1937, 1958], "suboptim": [22, 1961], "trajectori": 22, "irrecover": 22, "impact": [22, 25, 72, 1029, 1766, 1892, 1894, 1904, 1931, 1944, 1959, 1965, 1969], "warm": [22, 29, 1018, 1696, 1697, 1907, 1930, 1954, 1959, 1967], "num_row": 22, "num_col": 22, "1e": [22, 27, 57, 104, 335, 684, 702, 703, 704, 705, 706, 707, 713, 714, 726, 727, 739, 741, 742, 743, 744, 745, 898, 899, 933, 934, 935, 1189, 1216, 1217, 1267, 1352, 1353, 1354, 1369, 1388, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1420, 1443, 1448, 1473, 1477, 1479, 1481, 1482, 1503, 1515, 1530, 1534, 1535, 1543, 1547, 1569, 1572, 1576, 1599, 1628, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1693, 1706, 1714, 1767, 1881, 1882, 1909, 1915, 1925, 1927, 1941, 1947], "orthogon": [22, 1237, 1240, 1259, 1264, 1273, 1710, 1722, 1902, 1904, 1915, 1940], "div": [22, 227, 1068, 1117, 1120, 1342, 1446, 1447, 1742, 1853, 1882, 1888, 1897, 1926, 1940, 1943, 1964, 1968], "epsilon": [22, 57, 809, 810, 811, 812, 815, 855, 1255, 1258, 1352, 1353, 1354, 1369, 1389, 1397, 1398, 1399, 1406, 1443, 1473, 1515, 1569, 1623, 1625, 1628, 1661, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1726, 1882, 1941], "bucket_cap_mb": [22, 1614, 1908], "footprint": [22, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1923, 1940, 1966], "bottleneck": [22, 1880, 1915, 1961], "memor": 22, "compens": 22, "apex": 22, "uncompress": [22, 1940], "p": [22, 27, 31, 49, 57, 145, 225, 277, 415, 416, 443, 478, 481, 482, 598, 676, 679, 910, 912, 922, 930, 1066, 1221, 1232, 1238, 1239, 1247, 1248, 1290, 1292, 1295, 1305, 1327, 1346, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1400, 1402, 1403, 1439, 1443, 1445, 1482, 1483, 1499, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1554, 1555, 1565, 1569, 1572, 1573, 1599, 1619, 1630, 1632, 1638, 1647, 1667, 1692, 1743, 1801, 1882, 1883, 1903, 1904, 1907, 1911, 1912, 1917, 1930, 1940, 1941, 1963, 1964], "pq": 22, "mq": [22, 1931, 1950], "tp": [22, 30], "awai": [22, 57, 945, 1533, 1880, 1898, 1904, 1910, 1957], "config": [22, 49, 57, 782, 783, 784, 785, 849, 851, 942, 1908, 1921, 1934, 1959, 1961, 1962, 1963, 1965, 1969], "comm": [22, 25, 670, 1908], "handler": [22, 25, 35, 36, 1639, 1894, 1909, 1914, 1928, 1970], "batched_powersgd_hook": 22, "destroi": [22, 42, 1371, 1904, 1930, 1936], "squar": [22, 31, 541, 729, 730, 731, 732, 769, 775, 784, 962, 1059, 1061, 1197, 1232, 1234, 1236, 1237, 1238, 1241, 1242, 1246, 1248, 1250, 1252, 1254, 1258, 1260, 1261, 1263, 1264, 1268, 1281, 1290, 1340, 1344, 1348, 1349, 1363, 1364, 1366, 1367, 1382, 1383, 1395, 1403, 1425, 1428, 1429, 1432, 1465, 1477, 1500, 1509, 1512, 1528, 1529, 1533, 1542, 1544, 1564, 1587, 1602, 1627, 1677, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1753, 1813, 1848, 1866, 1882, 1926, 1940], "truncat": [22, 1117, 1766, 1854, 1899, 1902, 1911, 1918], "impli": [22, 42, 49, 1896, 1904, 1925, 1929, 1934, 1936, 1958], "debugging_hook": 22, "noop_hook": 22, "noop": [22, 1614], "headroom": 22, "desynchron": [22, 25], "trainer": [22, 33, 35, 40, 43, 44, 1614, 1936], "restart": [22, 33, 41, 43, 45, 1696, 1697, 1896, 1945, 1956], "__setstate__": 22, "__getstate__": 22, "reload": [22, 29, 49, 1879], "sy": [22, 34, 43, 45, 1879, 1907, 1928], "tempfil": 22, "mp": [22, 25, 26, 44, 1312, 1614, 1880, 1888, 1908, 1909, 1917, 1931, 1937, 1942, 1943, 1950], "simplemodel": 22, "24": [22, 25, 31, 915, 1259, 1422, 1498, 1660, 1722, 1766, 1841, 1881, 1902, 1906, 1941, 1956], "fc2": [22, 1605, 1923, 1929], "master_addr": [22, 25, 33, 43, 45, 1908, 1929, 1936, 1937], "localhost": [22, 25, 42, 43, 1908, 1929, 1936, 1937], "master_port": [22, 25, 33, 43, 45, 1908, 1929, 1936, 1937], "12355": 22, "init_process_group": [22, 25, 26, 29, 33, 43, 45, 1614, 1907, 1908, 1936], "cleanup": 22, "destroy_process_group": 22, "run_demo": 22, "demo_fn": 22, "nproc": [22, 25, 40, 41, 43, 1896, 1908, 1937], "demo_seri": 22, "gettempdir": 22, "device_id": [22, 25, 26, 29, 43, 49, 1272, 1371, 1473, 1598, 1614, 1908], "powersgd_st": 22, "lr": [22, 26, 27, 29, 49, 478, 1605, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1907, 1908, 1915, 1917, 1927, 1937, 1945], "001": [22, 898, 899, 1210, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1705, 1908, 1925], "comm_hook": 22, "comm_hook_st": 22, "barrier": [22, 33, 42, 1926], "map_loc": [22, 1204, 1208, 1272, 1614, 1879, 1893, 1928], "new_ddp_model": 22, "n_gpu": 22, "device_count": [22, 25, 1864, 1880], "got": [22, 25, 881, 1864, 1909, 1947], "thank": [22, 31, 1909, 1929], "author": [22, 42, 43, 49, 1141, 1689, 1729, 1872, 1903, 1956, 1959, 1961, 1965, 1966, 1969], "thij": 22, "par": 22, "home": [23, 1907], "fill_uninitialized_memori": [24, 489, 1073, 1074, 1075, 1861, 1880, 1919], "detriment": [24, 1919], "resize_": [24, 212, 490, 1130, 1222, 1861, 1881, 1882, 1883, 1897, 1919, 1933, 1942, 1964], "empty_strid": [24, 1882, 1886, 1926, 1957, 1964], "empty_permut": [24, 1882, 1926, 1964], "empty_lik": [24, 27, 1882, 1886, 1897, 1899, 1926, 1940], "brief": [25, 1614, 1896, 1936], "introduct": [25, 31, 1007, 1614, 1880, 1881, 1885, 1897, 1905, 1915, 1925, 1936, 1940, 1945], "mpi": [25, 1614], "gloo": [25, 43, 1614, 1908, 1913, 1936], "recv": [25, 1614, 1926, 1937], "broadcast": [25, 29, 31, 49, 54, 88, 187, 389, 391, 392, 393, 503, 505, 507, 556, 675, 676, 677, 678, 679, 680, 681, 687, 725, 874, 910, 915, 918, 922, 923, 924, 925, 957, 986, 1015, 1066, 1067, 1072, 1077, 1117, 1118, 1119, 1120, 1142, 1144, 1156, 1166, 1225, 1226, 1233, 1246, 1250, 1255, 1256, 1258, 1261, 1269, 1289, 1294, 1295, 1305, 1323, 1326, 1335, 1338, 1351, 1369, 1388, 1440, 1506, 1515, 1577, 1614, 1675, 1711, 1719, 1742, 1744, 1821, 1841, 1846, 1875, 1880, 1884, 1897, 1898, 1899, 1908, 1925, 1926, 1941, 1959, 1964], "all_reduc": [25, 44, 1614, 1926], "all_gath": 25, "scatter": [25, 29, 49, 503, 505, 507, 1371, 1861, 1882, 1911, 1926, 1936, 1964], "reduce_scatt": [25, 1926], "all_to_al": 25, "v1": [25, 49, 1269, 1711, 1879, 1908, 1936], "init_method": [25, 1614, 1936], "adher": [25, 1884, 1940], "some_fil": 25, "machine_nam": 25, "share_folder_nam": 25, "tcpstore": [25, 42], "past": [25, 57, 984, 1031, 1035, 1049, 1050, 1614, 1911, 1961, 1963, 1966], "ask": [25, 53, 54, 1879, 1880, 1910, 1912, 1951, 1971], "infiniband": [25, 1614, 1936], "interconnect": 25, "gpudirect": 25, "ethernet": 25, "ip": [25, 42], "ib": 25, "upcom": [25, 1903], "nccl_socket_ifnam": 25, "eth0": 25, "gloo_socket_ifnam": 25, "comma": [25, 1072, 1884, 1890], "eth1": 25, "eth2": 25, "eth3": 25, "imper": 25, "nccl_debug": 25, "info": [25, 33, 36, 40, 670, 882, 975, 976, 978, 1231, 1242, 1244, 1245, 1249, 1262, 1290, 1315, 1316, 1673, 1880, 1882, 1890, 1908, 1909, 1910, 1925, 1928, 1956, 1957, 1958, 1969], "nccl_debug_subsi": 25, "coll": 25, "hang": [25, 26, 29, 1614, 1908], "topologi": [25, 27, 30, 33], "effort": [25, 46, 1936, 1963], "socket": [25, 1896, 1936], "nccl_socket_nthread": 25, "nccl_nsocks_perthread": 25, "cloud": [25, 1940, 1945], "aw": [25, 34, 962], "gcp": [25, 1966], "primit": [25, 29, 42, 46, 1272, 1881, 1883, 1885, 1906, 1916, 1925, 1936, 1964], "kind": [25, 36, 46, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 670, 1220, 1615, 1674, 1721, 1786, 1879, 1888, 1909, 1917, 1919, 1925, 1928, 1931, 1941, 1943, 1962], "connect": [25, 33, 42, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415, 1462, 1896, 1936, 1967], "advantag": [25, 42, 43, 1351, 1395, 1908, 1911, 1922, 1923, 1936, 1940, 1954], "redund": [25, 49, 1088, 1089, 1091, 1093, 1107, 1109, 1820], "averag": [25, 29, 725, 756, 757, 758, 759, 811, 812, 907, 909, 962, 1035, 1049, 1200, 1339, 1340, 1341, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1378, 1388, 1394, 1400, 1401, 1402, 1403, 1407, 1408, 1409, 1425, 1426, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1465, 1466, 1473, 1482, 1492, 1493, 1494, 1500, 1501, 1502, 1505, 1506, 1516, 1530, 1545, 1554, 1555, 1568, 1576, 1614, 1676, 1677, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1846, 1880, 1908, 1930], "elimin": [25, 27, 46, 57, 600, 1857, 1858, 1919, 1961, 1968], "thrash": 25, "recurr": [25, 750, 751, 1216, 1357, 1371, 1386, 1387, 1404, 1449, 1630, 1656, 1690, 1880, 1907], "use_distribut": 25, "datetim": [25, 1894, 1959], "timedelta": [25, 42, 1894], "1800": 25, "group_nam": [25, 39], "pg_option": 25, "url": [25, 42, 906, 1879, 1893, 1936], "discov": [25, 1936], "encod": [25, 33, 39, 42, 49, 57, 1248, 1272, 1315, 1316, 1350, 1351, 1477, 1478, 1479, 1480, 1481, 1614, 1766, 1806, 1807, 1808, 1810, 1811, 1881, 1884, 1885, 1909, 1920, 1928, 1937, 1940], "ucc": 25, "lowercas": 25, "deadlock": [25, 1614], "job": [25, 33, 35, 36, 38, 39, 41, 42, 43, 44, 1614, 1698, 1704, 1907, 1914, 1930, 1945, 1971], "exchang": [25, 42, 976, 1060, 1907, 1922], "nccl_blocking_wait": 25, "nccl_async_error_handl": [25, 1907], "throw": [25, 26, 30, 56, 57, 181, 314, 319, 535, 604, 1185, 1200, 1241, 1290, 1434, 1614, 1616, 1617, 1656, 1667, 1718, 1861, 1899, 1904, 1919, 1936, 1946, 1959, 1969], "abort": [25, 1907], "crash": [25, 35, 42, 1237, 1896, 1904, 1936, 1938, 1945, 1957], "caught": [25, 1614, 1896], "littl": [25, 1909, 1938, 1962], "watch": [25, 1956], "dog": 25, "processgroupopt": 25, "processgroupnccl": [25, 1908], "is_high_priority_stream": 25, "backend_nam": [25, 1864], "custom_backend": 25, "is_initi": [25, 1880], "is_mpi_avail": 25, "is_nccl_avail": 25, "is_gloo_avail": 25, "is_torchelastic_launch": 25, "elast": [25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 1880], "torchelast": [25, 28, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45], "torchelastic_run_id": [25, 43], "proxi": [25, 27, 1931, 1936, 1962], "rendezv": [25, 28, 33, 39, 41, 45, 1908, 1936], "null": [25, 34, 36, 39, 58, 62], "discoveri": [25, 42, 1907, 1928], "reachabl": 25, "multicast": 25, "20": [25, 29, 31, 312, 675, 710, 718, 719, 724, 728, 729, 730, 731, 732, 733, 736, 746, 750, 751, 752, 753, 754, 755, 762, 1153, 1198, 1201, 1212, 1223, 1257, 1323, 1346, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1357, 1361, 1362, 1363, 1364, 1366, 1367, 1372, 1373, 1374, 1375, 1379, 1382, 1383, 1386, 1387, 1389, 1396, 1397, 1398, 1399, 1402, 1403, 1404, 1405, 1406, 1421, 1427, 1428, 1429, 1431, 1432, 1434, 1449, 1451, 1462, 1470, 1473, 1476, 1477, 1478, 1479, 1491, 1508, 1510, 1511, 1513, 1517, 1528, 1529, 1535, 1591, 1627, 1628, 1652, 1661, 1664, 1682, 1697, 1725, 1836, 1881, 1882, 1899, 1908, 1909, 1918, 1923, 1927, 1936, 1940, 1956, 1958, 1962], "23456": 25, "clean": [25, 33, 46, 57, 950, 1011, 1879, 1896, 1928], "fcntl": 25, "nf": 25, "init": [25, 33, 35, 49, 1200, 1434, 1442, 1461, 1660, 1880, 1886, 1904, 1909, 1914, 1915, 1957], "brand": [25, 1909], "succe": [25, 30, 42, 46, 54, 1907, 1909, 1921, 1969, 1971], "unexpect": [25, 32, 57, 972, 1123, 1126, 1129, 1200, 1434, 1662, 1675, 1815, 1881, 1904, 1909, 1918, 1958, 1959, 1962], "unsuccess": 25, "mnt": 25, "sharedfil": 25, "port": [25, 33, 41, 42, 43, 1913], "backend_str": 25, "uppercas": 25, "classmethod": [25, 42, 58, 60, 722, 728, 729, 730, 735, 736, 746, 754, 782, 783, 784, 805, 806, 807, 814, 844, 975, 1377, 1378, 1473, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1673, 1884, 1885, 1909, 1931, 1936, 1942, 1970], "register_backend": [25, 1936, 1955], "extended_api": 25, "instanti": [25, 29, 41, 42, 43, 49, 57, 831, 1378, 1525, 1629, 1653, 1660, 1879, 1881, 1883, 1884, 1907, 1909, 1915, 1923, 1942], "3rd": [25, 31, 42, 607, 1706, 1905], "processgroup": [25, 27, 29, 49, 1614], "four": [25, 1246, 1363, 1909, 1912, 1936, 1938], "c10d": [25, 33, 41, 43, 45, 1614, 1908, 1926], "distributedbackendopt": 25, "get_backend": [25, 42], "get_rank": [25, 49, 1473], "get_world_s": 25, "filestor": [25, 42], "hashstor": 25, "client": [25, 29, 42, 1029, 1928, 1959], "host_nam": 25, "hostnam": [25, 33, 42, 1930], "listen": 25, "is_mast": 25, "300": [25, 33, 1278, 1351, 1657, 1659, 1927], "wait_for_work": 25, "multi_ten": 25, "tcpserver": 25, "master_listen_fd": 25, "server_stor": 25, "127": [25, 784, 1898, 1931, 1945], "1234": [25, 42, 1177, 1859], "client_stor": 25, "first_kei": 25, "first_valu": 25, "hashmap": 25, "file_nam": [25, 1879, 1893, 1928], "store1": 25, "store2": 25, "prefixstor": 25, "old": [25, 32, 57, 844, 1123, 1374, 1664, 1672, 1706, 1754, 1878, 1880, 1881, 1904, 1907, 1909, 1921, 1931, 1945, 1958, 1962], "whose": [25, 31, 49, 57, 534, 849, 885, 932, 957, 1060, 1072, 1077, 1126, 1144, 1153, 1156, 1162, 1200, 1206, 1217, 1225, 1271, 1287, 1289, 1335, 1434, 1614, 1668, 1716, 1774, 1842, 1884, 1904, 1909, 1912, 1928, 1940, 1945, 1947, 1957, 1969], "quantiti": [25, 50, 55, 1236, 1237, 1264, 1400, 1637, 1638, 1640, 1641, 1643, 1646, 1647, 1648, 1649, 1706, 1910, 1912], "compare_set": 25, "arg2": [25, 47], "expected_valu": 25, "desired_valu": 25, "second_valu": 25, "overload": [25, 46, 57, 607, 1883, 1884, 1888, 1923], "bad_kei": 25, "num_kei": 25, "written": [25, 35, 54, 906, 1031, 1124, 1371, 1692, 1881, 1883, 1891, 1892, 1904, 1908, 1909, 1910, 1915, 1920, 1923, 1925, 1928, 1930, 1942, 1945, 1951, 1956, 1957, 1961, 1963, 1968, 1969], "destruct": [25, 1894, 1936, 1938], "delete_kei": 25, "successfulli": [25, 33, 39, 1207, 1767, 1896, 1915, 1920, 1936, 1969], "set_timeout": 25, "grain": [25, 46, 848, 851, 1583, 1904, 1925, 1940, 1951, 1961, 1969], "plai": [25, 1956, 1959], "new_group": [25, 49, 1473], "opaqu": [25, 32, 973, 1007, 1008, 1123, 1965], "pattern": [25, 27, 782, 783, 784, 786, 844, 851, 1015, 1371, 1656, 1802, 1881, 1884, 1904, 1907, 1909, 1911, 1913, 1920, 1932, 1933, 1940, 1954, 1957, 1958, 1968, 1971], "use_local_synchron": 25, "enqueu": [25, 56, 976, 978, 979, 1907, 1937], "significantli": [25, 46, 49, 892, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1766, 1940, 1955], "taken": [25, 31, 46, 56, 57, 58, 63, 855, 1093, 1095, 1118, 1119, 1357, 1370, 1378, 1441, 1517, 1525, 1771, 1804, 1902, 1904, 1906, 1907, 1909, 1911, 1914, 1920, 1925, 1928, 1930, 1969, 1971], "get_group_rank": 25, "global_rank": [25, 33], "translat": [25, 1153, 1904, 1922, 1923, 1938, 1962], "get_global_rank": 25, "group_rank": [25, 33, 43], "get_process_group_rank": 25, "dst": [25, 1879, 1928], "destin": [25, 27, 36, 39, 49, 200, 406, 407, 593, 987, 988, 1142, 1200, 1307, 1308, 1434, 1882, 1923, 1936, 1937, 1942], "unspecifi": [25, 471, 810, 811, 812, 815, 898, 899, 1467, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1803, 1809, 1891, 1940, 1945], "sender": [25, 1938], "isend": 25, "irecv": 25, "is_complet": 25, "finish": [25, 27, 33, 39, 40, 42, 44, 56, 1130, 1907, 1908, 1921, 1930, 1936, 1938, 1971], "batch_isend_irecv": 25, "p2p_op_list": 25, "p2pop": 25, "op_list": 25, "send_tensor": 25, "recv_tensor": 25, "send_op": 25, "recv_op": 25, "req": 25, "pg": [25, 1614], "set_devic": [25, 27, 49, 1614, 1762, 1880, 1936, 1943], "p2p": [25, 42], "async_op": 25, "onto": [25, 49, 57, 58, 60, 1034, 1208, 1211, 1272, 1632, 1862, 1879, 1896, 1907, 1910, 1911, 1915, 1930, 1962, 1968, 1971], "get_futur": [25, 1614], "regard": [25, 1365, 1366, 1367, 1377, 1378, 1524, 1525, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1881, 1938, 1940, 1963], "101": [25, 1342], "overwrot": 25, "sent": [25, 27, 1011, 1884, 1896, 1917, 1936, 1937, 1938], "broadcast_object_list": 25, "object_list": 25, "picklabl": [25, 1200, 1434, 1928], "current_devic": [25, 27, 49, 984, 992, 993, 1000, 1001, 1017, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1048, 1049, 1050, 1864, 1880, 1943, 1956], "insecur": [25, 1272], "malici": [25, 1272, 1928], "ineffici": [25, 49, 1907, 1931], "redoptyp": 25, "bitwis": [25, 914, 916, 917, 919, 1885, 1918, 1932, 1948], "reduceop": 25, "int64": [25, 75, 182, 199, 304, 312, 384, 855, 913, 926, 1073, 1086, 1087, 1125, 1516, 1653, 1733, 1737, 1738, 1758, 1806, 1807, 1808, 1810, 1811, 1888, 1907, 1940, 1942, 1943, 1946, 1972], "1j": [25, 688, 955, 956, 1196, 1746, 1747, 1869, 1904, 1912, 1920], "2j": [25, 688, 955, 956, 1746, 1747, 1774, 1869, 1904], "tensor_list": [25, 1899], "all_gather_into_tensor": [25, 1926], "output_tensor": 25, "input_tensor": [25, 1961], "accommod": [25, 1430, 1431, 1432], "ii": [25, 958, 1072, 1404, 1405], "tensor_in": 25, "tensor_out": 25, "tensor_out2": 25, "all_gather_object": 25, "obj": [25, 57, 58, 60, 870, 996, 1186, 1187, 1206, 1207, 1212, 1754, 1865, 1882, 1920, 1921, 1928], "pickabl": 25, "popul": [25, 31, 40, 49, 56, 57, 326, 485, 493, 494, 1301, 1330, 1907, 1909, 1958, 1968], "responsibl": 25, "gather_object": 25, "gather_list": 25, "object_gather_list": 25, "scatter_list": 25, "tensor_s": 25, "t_one": 25, "t_five": 25, "scatter_object_list": 25, "scatter_object_output_list": 25, "scatter_object_input_list": 25, "output_list": 25, "input_list": 25, "reduce_scatter_tensor": [25, 1926], "all_to_all_singl": 25, "output_split_s": 25, "input_split_s": 25, "13": [25, 865, 936, 1070, 1073, 1117, 1153, 1163, 1204, 1290, 1358, 1382, 1383, 1431, 1468, 1528, 1529, 1796, 1840, 1873, 1881, 1885, 1926, 1940, 1963, 1969], "14": [25, 58, 65, 66, 312, 507, 935, 1015, 1016, 1055, 1070, 1163, 1253, 1259, 1328, 1358, 1431, 1722, 1729, 1796, 1840, 1841, 1846, 1873, 1881, 1885, 1926, 1940, 1944, 1945, 1956], "15": [25, 57, 607, 1070, 1143, 1153, 1163, 1223, 1237, 1358, 1431, 1432, 1657, 1659, 1714, 1787, 1796, 1844, 1873, 1881, 1882, 1885, 1925, 1940, 1956], "uneven": [25, 26, 29, 1614], "18": [25, 312, 435, 675, 1073, 1153, 1197, 1273, 1431, 1881, 1923, 1925, 1926, 1940, 1956], "21": [25, 31, 675, 932, 1055, 1259, 1722, 1846, 1881, 1940], "22": [25, 31, 312, 607, 1273, 1605, 1657, 1659, 1881, 1919, 1940, 1956], "23": [25, 503, 1273, 1782, 1881, 1940, 1969], "31": [25, 918, 1349, 1429, 1605, 1782, 1925], "33": [25, 728, 729, 730, 731, 732, 733, 762, 1200, 1362, 1363, 1364, 1366, 1367, 1432, 1434, 1508, 1510, 1511, 1513, 1881, 1925], "34": [25, 1859, 1956, 1962, 1969], "35": [25, 1259, 1353, 1354, 1398, 1399, 1473, 1722], "36": [25, 312, 1115, 1153, 1956, 1962], "input_split": 25, "output_split": 25, "5j": 25, "6j": 25, "7j": 25, "8j": 25, "9j": 25, "10j": 25, "11j": 25, "12j": 25, "13j": 25, "14j": 25, "15j": 25, "16j": 25, "output_tensor_list": 25, "input_tensor_list": 25, "monitored_barri": [25, 1926], "wait_all_rank": 25, "band": 25, "bor": 25, "bxor": 25, "premul_sum": 25, "suppos": [25, 57, 1197, 1707, 1891, 1940, 1958, 1959, 1960], "_make_nccl_premul_sum": 25, "all_reduce_multigpu": 25, "__members__": 25, "reduce_op": 25, "mention": [25, 46, 1879, 1883, 1884, 1898, 1904, 1907, 1915, 1925, 1940, 1944, 1951, 1962, 1963, 1969], "revisit": 25, "broadcast_multigpu": 25, "reduce_multigpu": 25, "all_gather_multigpu": 25, "reduce_scatter_multigpu": 25, "distributed_test": 25, "dev_idx": 25, "src_tensor": 25, "resid": [25, 49, 56, 187, 280, 328, 1272, 1614, 1907, 1929, 1936], "dst_tensor": 25, "cpp_extens": [25, 1880, 1909], "cpp_c10d_extens": 25, "torchrun": [25, 28, 34, 41, 45], "benefici": [25, 1621, 1915], "nproc_per_nod": [25, 34], "num_gpus_you_hav": 25, "your_training_script": [25, 41, 43], "arg3": [25, 47], "192": [25, 607, 1925], "168": 25, "nnode": [25, 41, 43], "offer": [25, 49, 52, 1614, 1861, 1907, 1913, 1928, 1936, 1940, 1955, 1959, 1964], "local_process_rank": 25, "local_rank": [25, 33, 35, 40, 43, 45, 1473], "argpars": [25, 43, 1907], "parser": [25, 43, 1907], "argumentpars": [25, 43, 1907], "add_argu": [25, 43, 1907], "parse_arg": [25, 34, 43, 45, 1907, 1925], "output_devic": [25, 29, 43, 1371, 1473, 1598, 1614], "adjust": [25, 27, 29, 31, 49, 1880, 1906, 1932, 1971], "launcher": [25, 43], "filesystem": [25, 27, 974, 1879, 1928], "12042": 25, "imagenet": [25, 1902], "inconsist": [25, 49, 855, 1738, 1909], "suit": [25, 1881, 1883, 1884, 1925, 1932, 1936, 1966], "group_gloo": 25, "29501": 25, "monitoredbarri": 25, "transport": [25, 1936], "598": 25, "2401": 25, "db00": 25, "eef0": 25, "1100": 25, "3560": 25, "1c05": 25, "25d": 25, "8594": 25, "torch_cpp_log_level": 25, "twolinlayernet": 25, "ddp": [25, 26, 27, 29, 30, 49, 1473, 1614, 1880, 1907, 1908, 1936, 1959], "i0607": 25, "739390": 25, "515217": 25, "logger": [25, 1949, 1950], "173": 25, "broadcast_buff": [25, 1614], "bucket_cap_byt": 25, "26214400": 25, "find_unused_paramet": [25, 1614, 1908], "gradient_as_bucket_view": [25, 1614], "is_multi_device_modul": 25, "num_parameter_tensor": 25, "total_parameter_size_byt": 25, "440": 25, "bucket_s": 25, "cuda_visible_devic": [25, 1041, 1614, 1907], "module_nam": [25, 57, 807, 844, 1928], "nccl_ib_timeout": 25, "nccl_nthread": 25, "58": [25, 1963], "085681": 25, "544067": 25, "344": 25, "unused_parameter_s": 25, "40838608": 25, "5983335": 25, "4326421": 25, "comp": [25, 31], "4207652": 25, "085693": 25, "544066": 25, "42850427": 25, "3885553": 25, "2357981": 25, "2234674": 25, "enhanc": [25, 49, 1614, 1957], "unus": [25, 29, 57, 897, 1011, 1025, 1205, 1212, 1396, 1614, 1675, 1881, 1883, 1884, 1907, 1908, 1913, 1928], "went": [25, 57], "wasn": [25, 1272, 1881], "va": 25, "lue": 25, "indirectli": 25, "outstand": [25, 1936], "stuck": [25, 33, 44], "uninform": 25, "root": [25, 27, 35, 42, 43, 46, 49, 57, 783, 1138, 1238, 1239, 1690, 1753, 1813, 1892, 1904, 1928, 1936, 1937, 1940, 1959], "nontrivi": [25, 1907, 1957], "reveal": [25, 1908], "default_pg": 25, "opt": [25, 29, 1212, 1694, 1695, 1701, 1705, 1707, 1881, 1912], "longtensor": [25, 125, 126, 127, 306, 308, 310, 442, 461, 503, 505, 507, 864, 865, 1142, 1174, 1222, 1324, 1377, 1378, 1437, 1524, 1525, 1570, 1666, 1758, 1796, 1809, 1835, 1843, 1875, 1943, 1946], "set_debug_level": 25, "set_debug_level_from_env": 25, "get_debug_level": 25, "torch_show_cpp_stacktrac": 25, "disterror": 25, "distbackenderror": 25, "thrown": [25, 56, 607, 868, 870, 1029, 1070, 1163, 1200, 1231, 1240, 1242, 1244, 1247, 1248, 1259, 1434, 1619, 1873, 1923, 1928, 1962], "distnetworkerror": 25, "ex": [25, 34, 1614, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1894, 1968], "diststoreerror": 25, "outlin": [26, 1929, 1937, 1959], "joinabl": [26, 29, 1614, 1880], "joinhook": [26, 1880], "throw_on_early_termin": [26, 1614], "shadow": [26, 29, 1614, 1949, 1950], "notify_join_context": 26, "zeroredundancyoptim": [26, 29, 1614, 1880], "yet": [26, 33, 46, 47, 49, 54, 56, 57, 71, 73, 74, 975, 1046, 1203, 1205, 1218, 1306, 1614, 1634, 1638, 1640, 1679, 1680, 1880, 1883, 1884, 1890, 1898, 1899, 1907, 1925, 1926, 1931, 1936, 1938, 1940, 1941, 1943, 1954, 1958, 1959, 1962, 1965, 1969], "vacuou": 26, "inherit": [26, 1645, 1881, 1883, 1899, 1909, 1915, 1917], "join_hook": [26, 29, 1614], "join_devic": 26, "join_process_group": 26, "repeatedli": [26, 1907, 1940], "main_hook": 26, "post_hook": 26, "is_last_join": 26, "dcp": 27, "reshard": [27, 30, 49], "storag": [27, 49, 212, 302, 330, 333, 334, 425, 448, 473, 489, 510, 514, 548, 549, 574, 575, 577, 578, 868, 885, 887, 996, 1063, 1124, 1170, 1174, 1186, 1200, 1208, 1272, 1294, 1333, 1334, 1371, 1434, 1450, 1740, 1754, 1761, 1792, 1797, 1801, 1815, 1839, 1845, 1862, 1879, 1880, 1882, 1888, 1893, 1896, 1904, 1907, 1917, 1920, 1928, 1936, 1940, 1943, 1944, 1946, 1958], "entrypoint": [27, 30, 33, 35, 40, 43, 46, 1888, 1896], "storage_read": 27, "coordinator_rank": 27, "no_dist": 27, "planner": 27, "spmd": 27, "style": [27, 30, 32, 57, 867, 1067, 1123, 1666, 1689, 1881, 1883, 1884, 1925, 1928, 1945, 1960], "fullfil": 27, "shardedtensor": [27, 49], "po": [27, 1925], "storageread": [27, 1880], "rank0": [27, 49], "my_model": [27, 1614, 1881, 1954, 1959, 1969], "mymodul": [27, 46, 47, 49, 57, 1204, 1205, 1207, 1211, 1212, 1218, 1435, 1436, 1444, 1445, 1881, 1883, 1884, 1911, 1920, 1936], "adagrad": [27, 1377, 1891, 1927, 1936], "model_state_dict": [27, 1923], "fs_storage_read": 27, "filesystemread": [27, 1880], "save_state_dict": [27, 1880], "storage_writ": 27, "fsdp": [27, 30, 49, 1880, 1959], "shardingstrategi": [27, 49, 1880], "hybrid_shard": [27, 49], "shard_group": 27, "storagewrit": [27, 1880], "fs_storage_writ": 27, "filesystemwrit": [27, 1880], "act": [27, 31, 33, 40, 54, 848, 1351, 1435, 1436, 1445, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1648, 1649, 1650, 1861, 1907, 1915, 1919, 1927, 1962], "told": [27, 1883], "role": [27, 33, 34, 42, 43, 1962], "read_metadata": 27, "set_up_storage_read": 27, "prepare_local_plan": 27, "prepare_global_plan": 27, "read_data": 27, "central": [27, 58, 1153, 1912, 1914], "loadplan": [27, 1880], "storage_data": 27, "loadplann": [27, 1880], "load_byt": 27, "bytesio": [27, 46, 1208, 1211, 1272, 1754, 1925, 1931], "resolve_tensor": 27, "storagelay": 27, "schedul": [27, 33, 35, 41, 56, 670, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1890, 1908, 1914, 1930, 1959], "is_coordin": 27, "set_up_storage_writ": 27, "write_data": 27, "mark": [27, 42, 46, 56, 57, 58, 63, 66, 816, 887, 888, 945, 947, 1315, 1316, 1614, 1674, 1881, 1883, 1904, 1908, 1909, 1915, 1920, 1928, 1930, 1937, 1946, 1951, 1954, 1959, 1960], "recover": 27, "writeresult": 27, "saveplan": [27, 1880], "saveplann": [27, 1880], "resolve_data": 27, "assumpt": [27, 39, 43, 46, 898, 945, 1357, 1388, 1904, 1908, 1912, 1936, 1937, 1940, 1957, 1959, 1965, 1969], "writeitem": [27, 1880], "tensor_data": 27, "set_up_plann": 27, "create_local_plan": 27, "create_global_plan": 27, "commit_tensor": 27, "defaultloadplann": [27, 1880], "rewrit": [27, 46, 54, 58, 60, 65, 66, 73, 74, 1892, 1904, 1912, 1922, 1923, 1925, 1956], "requit": 27, "intrincaci": 27, "renameplann": 27, "original_state_dict": 27, "foo_": [27, 1130], "v": [27, 39, 46, 53, 57, 477, 478, 534, 885, 892, 894, 895, 896, 926, 1129, 1139, 1141, 1197, 1214, 1236, 1240, 1264, 1268, 1273, 1440, 1482, 1483, 1524, 1569, 1659, 1664, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1712, 1745, 1805, 1809, 1824, 1825, 1872, 1881, 1882, 1883, 1884, 1894, 1904, 1912, 1921, 1928, 1940, 1945, 1953], "flatten_sharded_tensor": 27, "_flatten_sharded_tensor": 27, "flatten_state_dict": 27, "read_item": 27, "dest_index": 27, "fqn": [27, 30, 46, 1950], "metamodelmateri": 27, "defaultsaveplann": [27, 1880], "global_plan": 27, "finish_plan": 27, "central_plan": 27, "alia": [27, 31, 36, 82, 83, 102, 178, 179, 344, 397, 426, 427, 434, 513, 531, 672, 856, 857, 858, 859, 860, 861, 862, 879, 938, 952, 953, 1058, 1065, 1068, 1079, 1080, 1081, 1083, 1084, 1110, 1146, 1154, 1155, 1167, 1168, 1169, 1178, 1198, 1200, 1227, 1228, 1235, 1251, 1255, 1258, 1286, 1296, 1297, 1307, 1325, 1327, 1337, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1434, 1544, 1617, 1653, 1669, 1709, 1714, 1717, 1752, 1775, 1790, 1793, 1795, 1822, 1826, 1827, 1847, 1853, 1876, 1884, 1909, 1926, 1941, 1942, 1946, 1958, 1964], "readitem": [27, 1880], "planner_data": 27, "loaditemtyp": 27, "metadataindex": 27, "dest_offset": 27, "storage_index": 27, "storage_offset": [27, 129, 510, 607, 868, 1882, 1888, 1926, 1959, 1964], "tandem": 27, "fp16planner": 27, "write_item": 27, "writeitemtyp": 27, "byte_io": 27, "itertool": [27, 31, 928, 941], "islic": 27, "dataclass": [27, 46, 47, 1962, 1968], "ddploadbalancingplann": 27, "all_plan": 27, "saveextradataplann": 27, "merged_data": 27, "new_plan": 27, "idempot": [27, 1936, 1938], "hi": [27, 1404, 1405, 1881, 1883, 1912], "peak": [27, 29, 49, 1021, 1023, 1029, 1036, 1037, 1038, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1698, 1704, 1929, 1966], "late": [27, 42], "tensorwritedata": 27, "nonetyp": [27, 46, 1882, 1884], "single_file_per_rank": 27, "sync_fil": 27, "thread_count": 27, "per_thread_copy_ahead": 27, "10000000": 27, "simplif": [27, 1957], "atom": [27, 42, 57, 1885], "distributedtensor": [27, 30], "dedup_replicated_tensor": 27, "lookup_object": 27, "transform_object": 27, "lookup_tensor": 27, "transform_tensor": 27, "get_state_dict": [27, 1880], "optim_onli": 27, "fully_shard": 27, "tensor_parallel": 27, "parallelize_modul": [27, 30, 1880], "saniti": [27, 1910], "canon": [27, 33, 35, 1881, 1955, 1958], "named_paramet": [27, 46, 49, 51, 53, 1129, 1200, 1204, 1434, 1915, 1920], "named_buff": [27, 46, 49, 1200, 1434, 1915, 1920], "dtensor": [27, 30, 49], "fullyshardeddataparallel": [27, 30, 1880], "fsdp_model": [27, 49], "deepcopi": [27, 53, 1931, 1950], "fsdp_optim": 27, "ddp_optim": 27, "ddp_state_dict": 27, "ddp_optim_state_dict": 27, "fsdp_state_dict": 27, "fsdp_optim_state_dict": 27, "ddp_optim_st": 27, "statedictopt": [27, 1880], "set_state_dict": [27, 1880], "optim_state_dict": [27, 49], "counterpart": [27, 847, 854, 1270, 1614, 1884, 1892, 1948, 1949, 1957, 1959], "valuetyp": 27, "optimizerstatetyp": 27, "fsdp_state_dict_typ": 27, "statedicttyp": [27, 49], "sharded_state_dict": [27, 49], "ignore_frozen_param": 27, "keep_submodule_prefix": 27, "defalut": 27, "frozen": [27, 29, 49, 1204, 1210, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1885, 1921], "fault": [28, 33, 41, 42, 1126], "toler": [28, 33, 41, 42, 57, 684, 898, 899, 1189, 1216, 1217, 1255, 1258, 1273, 1675, 1682, 1881, 1947], "quickstart": 28, "agent": [28, 34, 35, 36, 39, 41, 43, 44, 1936], "expir": 28, "metric": [28, 1021, 1023, 1029, 1706, 1894, 1915, 1930, 1945, 1959, 1966], "kubernet": 28, "distributedoptim": [29, 1614, 1880, 1936, 1937], "rref": [29, 1614, 1880, 1884, 1929, 1937], "optimizer_class": 29, "params_rref": 29, "get_gradi": [29, 1926, 1936, 1937], "multithread": [29, 1907], "dist_autograd": [29, 1614, 1936, 1937], "rpc": [29, 56, 1614, 1880, 1884, 1929, 1937, 1938], "context_id": [29, 1614, 1936, 1937], "rref1": [29, 1936, 1937], "worker1": [29, 56, 1614, 1936, 1937], "rref2": [29, 1936, 1937], "to_her": [29, 1614, 1926, 1936, 1937, 1938], "dist_optim": [29, 1614, 1937], "postlocalsgdoptim": [29, 1880], "afer": 29, "modelaverag": 29, "localsgd": 29, "model_averag": 29, "post_localsgd_hook": 29, "postlocalsgdst": 29, "subgroup": 29, "start_localsgd_it": 29, "warmup_step": 29, "local_optim": 29, "periodicmodelaverag": 29, "intra": [29, 49, 1906, 1908, 1929], "unnecessari": [29, 1621, 1660, 1884, 1904, 1907, 1909, 1920, 1928, 1944], "parameters_as_bucket_view": 29, "overlap_with_ddp": 29, "consumpt": [29, 53, 1665, 1940, 1945, 1951], "partit": [29, 30, 1342, 1846, 1925, 1926, 1929, 1937, 1938, 1959, 1968], "registr": [29, 30, 56, 73, 1015, 1607, 1612, 1613, 1614, 1629, 1632, 1888, 1923, 1928, 1955], "offset": [29, 33, 216, 217, 218, 219, 330, 510, 548, 736, 868, 1060, 1061, 1062, 1063, 1126, 1235, 1378, 1525, 1614, 1724, 1725, 1804, 1850, 1852, 1882, 1884, 1956, 1962, 1964], "intact": [29, 1936], "ddp_zero_hook": 29, "disjointli": 29, "trail": [29, 1655, 1657, 1899, 1902, 1905, 1909], "wari": 29, "static_graph": [29, 1614, 1908], "third": [29, 31, 1071, 1072, 1290, 1342, 1349, 1364, 1367, 1429, 1704, 1880, 1881, 1907, 1910, 1915, 1928, 1930], "add_param_group": [29, 1632, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "param_group": [29, 49, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1689, 1690, 1691, 1692, 1693, 1700, 1703], "trainabl": [29, 1018, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1690, 1691, 1692, 1693, 1909], "consolidate_state_dict": 29, "consolid": [29, 49, 1929], "pertain": 29, "preced": [29, 33, 49, 670, 1609, 1704, 1845, 1885, 1906, 1927, 1931], "rowwis": 30, "colwis": 30, "device_mesh": [30, 49], "parallelize_plan": 30, "tp_mesh_dim": 30, "sub_modul": 30, "parallelstyl": 30, "devicemesh": 30, "mesh": [30, 1945], "prepar": [30, 49, 57, 787, 829, 831, 847, 849, 851, 852, 853, 1139, 1210, 1885, 1925, 1949, 1950], "colwiseparallel": [30, 1880], "multiheadattent": [30, 1477, 1479, 1481, 1931], "rowwiseparallel": [30, 1880], "_prepare_input": 30, "_prepare_output": 30, "input_layout": 30, "output_layout": 30, "use_local_output": 30, "layout": [30, 47, 57, 141, 182, 199, 224, 333, 334, 425, 435, 436, 437, 438, 439, 448, 534, 571, 572, 573, 574, 575, 577, 578, 607, 679, 855, 883, 885, 911, 920, 988, 1073, 1074, 1075, 1085, 1090, 1108, 1124, 1127, 1128, 1157, 1158, 1220, 1271, 1287, 1295, 1305, 1334, 1550, 1671, 1672, 1693, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1845, 1850, 1852, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1899, 1907, 1926, 1928, 1940, 1945, 1946, 1947, 1959, 1964], "redistribut": [30, 1921], "compos": [30, 31, 53, 57, 728, 729, 730, 731, 732, 733, 756, 757, 762, 763, 764, 772, 773, 933, 1131, 1133, 1134, 1135, 1141, 1200, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1382, 1383, 1402, 1403, 1422, 1427, 1428, 1429, 1434, 1482, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1551, 1554, 1555, 1557, 1558, 1559, 1727, 1728, 1872, 1880, 1881, 1884, 1897, 1909, 1910, 1915, 1923, 1925, 1928, 1945, 1962, 1964, 1965], "ctor": [30, 1962], "preparemoduleinput": [30, 1880], "wo": 30, "w1": [30, 57], "pairwiseparallel": [30, 1880], "megatron": 30, "lm": 30, "arxiv": [30, 31, 1404, 1452, 1453, 1480, 1664, 1712, 1766, 1825, 1904], "ab": [30, 31, 81, 82, 615, 616, 672, 930, 1072, 1232, 1253, 1254, 1256, 1257, 1270, 1273, 1404, 1453, 1480, 1483, 1485, 1573, 1664, 1667, 1706, 1712, 1716, 1766, 1880, 1882, 1884, 1897, 1898, 1899, 1907, 1915, 1926, 1940, 1946, 1954, 1955, 1956, 1959, 1962, 1964, 1969], "1909": [30, 868], "08053": 30, "latter": [30, 49, 677, 781, 1200, 1404, 1434, 1441, 1910, 1915, 1917, 1919], "sequenceparallel": [30, 1880], "pdf": [30, 1357, 1452, 1787, 1904], "2205": 30, "05198": 30, "attn": [30, 1479, 1481], "preparemoduleoutput": [30, 1880], "make_input_replicate_1d": [30, 1880], "make_input_reshard_repl": [30, 1880], "make_input_shard_1d": [30, 1880], "make_input_shard_1d_last_dim": [30, 1880], "make_output_replicate_1d": [30, 1880], "make_output_reshard_tensor": [30, 1880], "make_output_shard_1d": [30, 1880], "make_output_tensor": [30, 1880], "head": [30, 725, 1342, 1440, 1477, 1479, 1481], "enable_2d_with_fsdp": [30, 1880], "pre_dp_module_transform": [30, 1880], "dp": 30, "preforward": 30, "parameteriz": 31, "tensorflow": [31, 1690, 1904, 1945], "backpropag": [31, 899, 1691, 1722, 1911, 1951], "surrog": 31, "likelihood": [31, 1342, 1388, 1441, 1448, 1530, 1568, 1576], "ratio": [31, 33, 607, 1382, 1383, 1528, 1529, 1882, 1907, 1940, 1966], "reinforc": [31, 1463, 1586], "polici": [31, 33, 35, 49, 1698, 1704], "reparameter": [31, 1129, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650, 1651, 1652, 1664], "trick": [31, 894, 1351, 1535, 1904, 1912, 1914, 1959], "autoencod": 31, "whilst": [31, 1907], "densiti": [31, 292, 1161, 1162, 1787, 1882, 1941], "log_prob": [31, 1342, 1357, 1517, 1882], "theta": [31, 1498, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1882], "alpha": [31, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 142, 143, 303, 304, 478, 544, 551, 552, 553, 554, 675, 676, 679, 680, 681, 734, 760, 765, 910, 1015, 1016, 1157, 1171, 1346, 1356, 1376, 1422, 1461, 1499, 1507, 1522, 1523, 1533, 1551, 1584, 1676, 1690, 1783, 1784, 1797, 1802, 1816, 1821, 1822, 1882, 1904, 1909, 1925, 1927, 1959, 1964], "partial": [31, 33, 42, 46, 49, 52, 57, 831, 1018, 1062, 1140, 1153, 1247, 1248, 1249, 1291, 1430, 1431, 1432, 1560, 1561, 1562, 1614, 1639, 1798, 1804, 1884, 1885, 1898, 1904, 1909, 1912, 1923, 1925, 1938, 1947, 1965], "pi": [31, 164, 368, 688, 920, 1157, 1158, 1252, 1384, 1448, 1531, 1576, 1696, 1697, 1716, 1778, 1779, 1782, 1783, 1784, 1785, 1820, 1883, 1884, 1928, 1941], "reward": 31, "ascent": 31, "prob": [31, 1882], "policy_network": 31, "next_stat": 31, "rsampl": 31, "parameter": [31, 368, 444, 1207, 1900, 1940], "has_rsampl": 31, "batch_shap": 31, "event_shap": 31, "validate_arg": 31, "arg_constraint": 31, "cdf": 31, "cumul": [31, 1051, 1052, 1053, 1054, 1055, 1280, 1352, 1353, 1354, 1384, 1407, 1408, 1409, 1473, 1531], "mass": 31, "enumerate_support": 31, "discret": [31, 48, 471, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1107, 1109, 1535, 1787, 1945, 1948], "cardin": [31, 1302], "univari": 31, "singleton": [31, 245, 1406, 1860, 1905], "cartesian": [31, 928, 1302, 1716], "_instanc": 31, "icdf": 31, "perplex": 31, "sample_shap": 31, "sample_n": 31, "set_default_validate_arg": 31, "mimic": [31, 1704], "stddev": 31, "varianc": [31, 962, 1352, 1353, 1354, 1379, 1388, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1526, 1530, 1623, 1625, 1689, 1690, 1726, 1735, 1736, 1867, 1868, 1902, 1915], "exp_famili": 31, "famili": 31, "p_": [31, 932, 1292, 1692], "langl": 31, "rangl": 31, "denot": [31, 46, 57, 962, 1221, 1240, 1246, 1259, 1269, 1362, 1363, 1400, 1629, 1632, 1692, 1806, 1807, 1808, 1810, 1811, 1869, 1912, 1934, 1937, 1940], "carrier": 31, "analyt": [31, 898, 899, 1524, 1940], "bregman": 31, "courtesi": 31, "frank": 31, "nielsen": 31, "richard": 31, "nock": 31, "logit": [31, 382, 1351, 1370, 1506, 1516, 1535, 1882, 1926, 1941], "70": [31, 1259, 1722, 1899], "odd": [31, 1093, 1094, 1095, 1103, 1104, 1105, 1508, 1509, 1510], "lower_bound": 31, "upper_bound": 31, "has_enumerate_support": 31, "param_shap": 31, "concentration1": 31, "concentration0": 31, "concentr": 31, "1046": 31, "1st": [31, 1905], "2nd": [31, 607, 1442, 1468, 1571, 1905], "greaterthan": 31, "total_count": 31, "71": 31, "trial": 31, "integergreaterthan": 31, "ldot": [31, 1232, 1240, 1271, 1287, 1302, 1406, 1427, 1428, 1429, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "dimension": [31, 47, 503, 505, 870, 876, 877, 878, 921, 928, 940, 1060, 1062, 1063, 1072, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1106, 1107, 1109, 1111, 1113, 1114, 1126, 1153, 1162, 1163, 1164, 1233, 1238, 1239, 1240, 1241, 1266, 1271, 1287, 1295, 1302, 1342, 1359, 1360, 1361, 1370, 1371, 1377, 1378, 1406, 1424, 1441, 1455, 1456, 1457, 1458, 1459, 1460, 1467, 1469, 1473, 1489, 1490, 1491, 1516, 1568, 1571, 1603, 1604, 1627, 1666, 1729, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1836, 1839, 1840, 1846, 1884, 1899, 1902, 1905, 1912, 1918, 1940, 1942, 1943, 1946, 1948, 1957], "unnorm": [31, 1370, 1506, 1516, 1535], "likewis": [31, 1845], "25": [31, 486, 576, 577, 578, 930, 1161, 1268, 1273, 1380, 1437, 1439, 1442, 1605, 1614, 1657, 1659, 1682, 1704, 1723, 1866, 1881, 1940, 1941], "independentconstraint": 31, "simplex": 31, "loc": [31, 1272], "lorentz": 31, "3214": 31, "width": [31, 769, 775, 848, 1160, 1161, 1162, 1348, 1349, 1363, 1364, 1366, 1367, 1403, 1428, 1429, 1441, 1468, 1486, 1544, 1602, 1898, 1940], "df": 31, "chi": 31, "continuous_bernoulli": 31, "lim": [31, 1197], "499": 31, "501": 31, "2538": [31, 1232], "pervas": 31, "loaiza": 31, "ganem": 31, "cunningham": 31, "jp": 31, "1907": 31, "06845": 31, "8954": 31, "greaterthaneq": 31, "df1": 31, "df2": 31, "fisher": 31, "snedecor": 31, "2453": 31, "degre": [31, 962, 1049, 1056, 1200, 1238, 1239, 1434, 1443, 1482, 1614, 1730, 1750, 1818, 1819, 1867, 1868, 1882, 1912, 1926, 1940], "freedom": [31, 962, 1818, 1819, 1867, 1868, 1912], "0124": 31, "half_cauchi": 31, "half_norm": 31, "base_distribut": 31, "reinterpreted_batch_ndim": 31, "reinterpret": [31, 489, 1958], "diagon": [31, 54, 215, 251, 585, 586, 587, 588, 921, 958, 962, 1059, 1060, 1061, 1063, 1072, 1085, 1134, 1135, 1145, 1230, 1242, 1244, 1247, 1259, 1263, 1573, 1583, 1804, 1844, 1848, 1849, 1850, 1851, 1852, 1882, 1909, 1926, 1944, 1964], "multivari": [31, 1941], "multivariate_norm": 31, "mvn": 31, "scale_tril": 31, "diag": [31, 55, 1133, 1134, 1135, 1236, 1237, 1264, 1712, 1804, 1824, 1825, 1882, 1926], "diagn": 31, "1729": [31, 1915], "lkj_choleski": 31, "lkj": 31, "matric": [31, 251, 676, 679, 910, 922, 923, 932, 933, 934, 935, 1060, 1145, 1221, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1273, 1281, 1290, 1292, 1305, 1385, 1443, 1498, 1532, 1627, 1632, 1710, 1712, 1722, 1771, 1797, 1801, 1802, 1824, 1825, 1848, 1849, 1851, 1882, 1897, 1912, 1918, 1940, 1946], "eta": [31, 1676, 1678, 1691], "proport": [31, 1402, 1403, 1440, 1481], "det": [31, 1238, 1239, 1260, 1281, 1882, 1926], "l": [31, 725, 750, 911, 920, 926, 933, 934, 935, 1072, 1157, 1158, 1200, 1220, 1230, 1231, 1236, 1237, 1238, 1239, 1243, 1247, 1248, 1290, 1292, 1347, 1350, 1351, 1352, 1362, 1370, 1373, 1374, 1381, 1386, 1394, 1395, 1397, 1400, 1401, 1404, 1416, 1425, 1427, 1434, 1436, 1440, 1441, 1449, 1465, 1482, 1483, 1485, 1583, 1638, 1647, 1655, 1657, 1682, 1758, 1820, 1882, 1884, 1904, 1945, 1956, 1969], "lkjcorr": 31, "onion": 31, "3x3": [31, 1055, 1846], "3516": 31, "9361": 31, "1899": [31, 1303], "4748": 31, "8593": 31, "vine": 31, "2009": [31, 1712, 1825], "lewandowski": 31, "dorota": 31, "kurowicka": 31, "harri": [31, 1787], "joe": 31, "journal": [31, 1729], "1016": 31, "jmva": 31, "04": [31, 1115, 1278, 1780, 1787], "008": 31, "corrcholeski": 31, "log_norm": [31, 1926], "lowrank_multivariate_norm": 31, "cov_factor": 31, "cov_diag": 31, "covari": [31, 923, 958, 962, 1352, 1353, 1354, 1473, 1712], "covariance_matrix": 31, "2102": 31, "5429": [31, 1848], "woodburi": 31, "lemma": 31, "formula": [31, 79, 758, 759, 879, 881, 911, 920, 1157, 1158, 1226, 1292, 1293, 1448, 1501, 1502, 1590, 1692, 1725, 1909, 1912, 1930, 1935, 1940, 1957], "capacit": 31, "precision_matrix": 31, "mixture_same_famili": 31, "mixture_distribut": 31, "component_distribut": 31, "rightmost": [31, 923, 1161, 1162, 1884], "gaussian": [31, 1384, 1388, 1463, 1530, 1531, 1586, 1786, 1941], "gmm": 31, "bivari": 31, "categori": [31, 35, 75, 1324, 1884, 1886, 1925, 1927, 1930, 1932, 1943, 1963, 1965], "innermost": [31, 57, 224, 1153, 1162, 1758], "1338": 31, "mathbf": [31, 1221, 1628, 1661, 1664, 1691], "sigma": [31, 164, 368, 750, 1351, 1385, 1386, 1387, 1404, 1405, 1463, 1464, 1532, 1586, 1628, 1661, 1781, 1818, 1819, 1867, 1868, 1882], "triangular": [31, 933, 934, 935, 1230, 1231, 1237, 1239, 1247, 1248, 1255, 1258, 1259, 1261, 1263, 1573, 1698, 1722, 1848, 1849, 1850, 1851, 1852], "decomposit": [31, 47, 57, 72, 933, 934, 935, 1145, 1230, 1231, 1236, 1237, 1238, 1239, 1240, 1242, 1247, 1248, 1249, 1250, 1255, 1259, 1260, 1264, 1265, 1290, 1292, 1627, 1710, 1712, 1716, 1722, 1824, 1825, 1880, 1918, 1957, 1958, 1968], "positivedefinit": 31, "lowercholeski": 31, "negative_binomi": 31, "halfopeninterv": 31, "mu": [31, 368, 1690, 1692], "one_hot_categor": 31, "onehot": 31, "5623": 31, "nonneg": [31, 1483, 1712, 1825, 1941], "pmf": 31, "mathrm": [31, 912, 1238, 1239, 1240, 1241, 1252, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1443, 1448, 1473, 1627, 1679, 1680, 1681, 1691, 1726, 1904, 1941], "relaxed_bernoulli": 31, "temperatur": [31, 1535, 1880], "parametr": [31, 1129, 1629, 1636, 1661, 1662, 1664, 1900, 1909], "relax": [31, 973, 1007, 1216, 1217, 1632, 1931, 1959], "reparametriz": 31, "99": [31, 1212, 1690, 1881], "2951": [31, 1300], "3442": 31, "8918": 31, "9021": 31, "maddison": 31, "2017": [31, 1477, 1479, 1481, 1805, 1921], "reparametr": [31, 1535, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1644, 1664], "jang": 31, "relaxed_categor": 31, "1294": [31, 933], "2324": [31, 1200, 1434], "3859": 31, "2523": 31, "student": 31, "transformed_distribut": 31, "composit": [31, 54, 1133, 1248, 1627, 1881, 1884, 1888, 1910, 1915, 1925], "basedistribut": 31, "dx": [31, 1055, 1350, 1846, 1882, 1909, 1910, 1941], "dy": 31, "logist": [31, 1463, 1466, 1586, 1941], "sigmoidtransform": 31, "affinetransform": 31, "invert": [31, 57, 1191, 1232, 1241, 1242, 1248, 1254, 1261, 1263, 1266, 1267, 1281, 1430, 1431, 1432, 1848, 1882, 1918, 1936], "3418": 31, "upper": [31, 46, 47, 58, 65, 66, 67, 68, 172, 173, 174, 584, 785, 921, 926, 933, 934, 935, 937, 1086, 1087, 1160, 1161, 1230, 1231, 1237, 1239, 1247, 1248, 1259, 1263, 1452, 1573, 1581, 1582, 1698, 1704, 1722, 1737, 1758, 1848, 1851, 1852, 1882, 1902, 1926, 1941, 1947], "von_mis": 31, "circular": [31, 1362, 1363, 1364, 1410, 1411, 1412, 1571], "von": 31, "mise": 31, "unconstrain": [31, 1632], "angl": [31, 745, 874, 1056, 1281, 1420, 1716, 1730, 1774, 1880, 1882, 1926, 1940], "9777": 31, "radian": [31, 688, 874, 1056, 1730, 1882, 1926], "nichola": 31, "simul": [31, 478, 789, 791, 1931, 1934, 1957], "1979": 31, "152": [31, 607], "157": 31, "4784": [31, 1305], "symmetr": [31, 792, 810, 911, 920, 933, 934, 935, 1093, 1094, 1095, 1100, 1102, 1106, 1107, 1109, 1157, 1158, 1220, 1230, 1231, 1236, 1237, 1239, 1243, 1244, 1245, 1252, 1255, 1258, 1264, 1273, 1627, 1632, 1704, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1931, 1934], "x_ij": 31, "wu": [31, 1273], "chu": 31, "2018": [31, 1273, 1720], "sawyer": 31, "2007": 31, "anderson": 31, "w": [31, 55, 141, 750, 879, 881, 883, 889, 897, 911, 920, 962, 1131, 1142, 1157, 1158, 1197, 1240, 1340, 1341, 1348, 1349, 1351, 1353, 1354, 1358, 1363, 1364, 1370, 1374, 1375, 1377, 1378, 1379, 1386, 1398, 1399, 1406, 1417, 1418, 1428, 1429, 1439, 1440, 1441, 1446, 1447, 1468, 1484, 1485, 1487, 1488, 1498, 1506, 1524, 1525, 1533, 1568, 1574, 1575, 1628, 1661, 1664, 1882, 1897, 1898, 1902, 1904, 1909, 1912, 1927, 1928, 1945, 1967], "2003": 31, "ed": [31, 54, 1373, 1374, 1904, 1928, 1967, 1970], "odel": 31, "feiveson": 31, "1966": 31, "samplecovari": 31, "jasa": 31, "61": 31, "313": 31, "199": 31, "203": [31, 607], "ku": 31, "bloomfield": 31, "2010": [31, 1902], "ox": 31, "max_try_correct": 31, "bartlett": [31, 911], "singular": [31, 1232, 1246, 1247, 1253, 1255, 1257, 1258, 1264, 1265, 1273, 1281, 1290, 1628, 1632, 1712, 1824, 1825, 1918], "accordingli": [31, 57, 1210, 1404, 1632, 1899, 1936, 1965], "kl_diverg": 31, "kullback": [31, 1400, 1545], "leibler": [31, 1400, 1545], "notimplementederror": [31, 1928, 1962], "register_kl": 31, "type_p": 31, "type_q": 31, "pairwis": [31, 1394, 1443, 1482], "kl_normal_norm": 31, "ambigu": [31, 57, 1185, 1365, 1366, 1367, 1381, 1430, 1431, 1432, 1486, 1884], "runtimewarn": 31, "basep": 31, "derivedq": 31, "kl_version1": 31, "derivedp": 31, "baseq": 31, "kl_version2": 31, "tie": 31, "abstransform": 31, "cache_s": [31, 1962], "event_dim": 31, "pointwis": [31, 942, 1134, 1135, 1278, 1279, 1400, 1897, 1905, 1958, 1961, 1963], "affin": [31, 49, 462, 463, 464, 465, 466, 739, 741, 742, 743, 792, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1498, 1907, 1915], "cattransform": 31, "tseq": 31, "functor": [31, 1015, 1016], "submatrix": 31, "x0": [31, 1961], "t0": [31, 46, 1153, 1676, 1883], "exptransform": 31, "identity_transform": 31, "composetransform": 31, "corrcholeskytransform": 31, "uncontrain": 31, "euclidean": [31, 930, 1569], "x_i": [31, 54, 937, 1051, 1052, 1053, 1054, 1269, 1276, 1424, 1443, 1467, 1469, 1482, 1553, 1589, 1719, 1803, 1818, 1819, 1846, 1867, 1868, 1869, 1941], "stickbreakingtransform": 31, "r_i": 31, "tanh": [31, 567, 750, 755, 785, 875, 1384, 1386, 1387, 1404, 1405, 1433, 1449, 1451, 1475, 1531, 1563, 1595, 1882, 1897, 1898, 1902, 1926, 1933, 1940, 1964], "unsign": [31, 1934, 1943, 1946, 1947, 1959], "z_i": 31, "s_i": 31, "y_i": [31, 937, 1051, 1052, 1053, 1054, 1269, 1276, 1482, 1846, 1869, 1912], "sqrt": [31, 57, 368, 539, 663, 664, 750, 958, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1166, 1220, 1302, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1384, 1386, 1387, 1389, 1397, 1398, 1399, 1402, 1403, 1404, 1405, 1406, 1419, 1421, 1449, 1451, 1473, 1531, 1583, 1632, 1677, 1678, 1679, 1680, 1683, 1689, 1690, 1726, 1753, 1786, 1818, 1819, 1882, 1897, 1902, 1903, 1904, 1926, 1940, 1941, 1947, 1964], "cumulativedistributiontransform": 31, "copula": 31, "base_dist": 31, "independenttransform": 31, "base_transform": 31, "log_abs_det_jacobian": 31, "lowercholeskytransform": 31, "positivedefinitetransform": 31, "powertransform": 31, "expon": [31, 259, 260, 271, 458, 459, 1115, 1122, 1224, 1254, 1342, 1422, 1569, 1719, 1729, 1766, 1882, 1943, 1946, 1964], "reshapetransform": 31, "in_shap": 31, "out_shap": 31, "softplustransform": 31, "tanhtransform": 31, "softmaxtransform": 31, "biject": 31, "hmc": 31, "stacktransform": 31, "stick": 31, "aris": [31, 57, 1904, 1957], "primarili": [31, 47, 56, 805, 806, 807, 813, 1334, 1894, 1931], "memoiz": [31, 1958], "_call": 31, "_invers": 31, "codomain": [31, 1904], "iff": [31, 1440], "weaker": [31, 1907], "pseudoinvers": [31, 1241, 1258, 1266], "monoton": [31, 1433, 1563, 1758], "forward_shap": 31, "inverse_shap": 31, "corr_choleski": 31, "greater_than": 31, "greater_than_eq": 31, "integer_interv": 31, "less_than": 31, "lower_choleski": 31, "lower_triangular": 31, "nonnegative_integ": 31, "one_hot": [31, 1882, 1926], "positive_integ": 31, "positive_semidefinit": 31, "positive_definit": 31, "real_vector": 31, "unit_interv": 31, "is_discret": 31, "constrain": [31, 46, 1470, 1884, 1915], "_cat": 31, "dependent_properti": 31, "_dependentproperti": 31, "_greaterthan": 31, "_greaterthaneq": 31, "_independentconstraint": 31, "_integerinterv": 31, "_interv": 31, "half_open_interv": 31, "_halfopeninterv": 31, "_lessthan": 31, "_multinomi": 31, "_stack": [31, 1926], "constraintregistri": 31, "biject_to": 31, "transform_to": 31, "overparameter": 31, "rotat": [31, 1750, 1824], "hamiltonian": 31, "mont": 31, "carlo": 31, "invari": [31, 46, 1653, 1799, 1806, 1807, 1808, 1809, 1810, 1811, 1938, 1940, 1954, 1968], "potential_energi": 31, "cheap": [31, 1342], "svi": 31, "fewer": [31, 46, 54, 683, 685, 686, 689, 936, 1221, 1222, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1332, 1388, 1515, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1720, 1805, 1818, 1819, 1823, 1842, 1867, 1868, 1890, 1905, 1920, 1947, 1971], "my_constraint": 31, "my_transform": 31, "myconstraintclass": 31, "my_factori": 31, "mytransform": 31, "param1": [31, 1915], "param2": [31, 1915], "constraint_registri": 31, "my_registri": 31, "construct_transform": 31, "myconstraint": 31, "from_dlpack": [32, 870, 1880], "ext_tensor": [32, 1123], "extern": [32, 976, 1123, 1216, 1864, 1894, 1906, 1907, 1918, 1925, 1951], "immut": [32, 1123, 1884], "__dlpack__": [32, 1123], "capsul": [32, 870, 1123], "ndarrai": [32, 448, 869, 1123, 1125, 1806, 1807, 1808, 1809, 1810, 1811, 1839, 1925, 1945, 1947, 1959], "pycapsul": [32, 1123], "to_dlpack": [32, 1123, 1880], "t2": [32, 677, 678, 870, 1123, 1153, 1614, 1936, 1937, 1959, 1969], "dltensor": [32, 1123], "t3": [32, 1123, 1937], "legaci": [32, 43, 46, 1535, 1930, 1943], "idiomat": 32, "inde": [32, 1881, 1891, 1928, 1938, 1962, 1965], "plane": [33, 42, 728, 729, 730, 731, 732, 733, 756, 757, 758, 759, 762, 763, 764, 772, 773, 1060, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1382, 1383, 1402, 1403, 1406, 1422, 1427, 1428, 1429, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1551, 1554, 1555, 1557, 1558, 1559, 1664, 1727, 1728, 1750], "monitor": [33, 43, 44, 77, 975, 1312, 1706, 1880, 1907, 1913], "unhealthi": 33, "tear": 33, "react": [33, 1965], "decentr": 33, "diagram": [33, 42, 1200, 1434, 1931, 1938, 1956, 1959, 1969], "elasticag": 33, "quad": [33, 1350, 1351, 1370, 1401, 1425, 1441, 1483], "group_result": 33, "is_fail": [33, 34], "exit_cod": 33, "return_valu": [33, 34, 40, 1956], "get_worker_group": 33, "workergroup": [33, 43], "mutabl": [33, 1216, 1881, 1928, 1945], "implementor": 33, "defens": 33, "retri": [33, 35, 44, 1029, 1936, 1938], "max_restart": [33, 34, 43], "runresult": 33, "workerspec": [33, 34, 43, 44], "local_world_s": [33, 34, 43], "rdzv_handler": [33, 34, 42], "monitor_interv": [33, 34], "local_addr": [33, 42], "tee": [33, 40], "blueprint": 33, "spec": [33, 34, 44, 47, 58, 783, 784, 809, 810, 811, 814, 815, 816, 1923, 1933], "homogen": [33, 43], "rendezvoushandl": [33, 34, 42, 43], "rdzv": [33, 41, 43], "chose": [33, 1903, 1957], "consol": [33, 36, 39, 40, 43, 1945], "get_entrypoint_nam": 33, "__qualname__": 33, "workerst": 33, "unknown": [33, 47, 1616, 1617, 1938], "unrecover": 33, "interrupt": [33, 1896, 1967], "succeed": [33, 42, 1290, 1959], "termin": [33, 42, 44, 47, 57, 1682, 1896, 1936, 1961], "uncaught": [33, 35], "unhandl": 33, "recov": [33, 885, 1093, 1260, 1292, 1614, 1653, 1820, 1903, 1907, 1911, 1912, 1932], "is_run": 33, "role_rank": [33, 43], "role_world_s": [33, 43], "pid": [33, 35, 43, 44, 1473, 1911, 1930], "local_elastic_ag": 33, "localelasticag": [33, 34, 44], "start_method": [33, 34, 40, 44, 1896], "exit_barrier_timeout": 33, "log_dir": [33, 40, 1894, 1945], "inter": [33, 35, 49, 1150, 1769, 1906, 1908, 1929, 1936], "safeti": [33, 57, 944, 945, 1881, 1884, 1898, 1919, 1960], "advis": [33, 534, 607, 855, 1917], "pipe": [33, 44, 1880, 1936], "torchelastic_enable_file_tim": 33, "torchelastic_timer_fil": 33, "shared_queu": 33, "get_context": [33, 44, 1917], "nproc_per_process": 33, "foobar": [33, 35, 39, 40], "other_param": [33, 44], "usr": [33, 40, 42, 1907], "bin": [33, 40, 42, 291, 292, 809, 913, 1160, 1161, 1162, 1882, 1884, 1926, 1945, 1966], "simpleelasticag": 33, "scaffold": 33, "_assign_worker_rank": 33, "group_world_s": 33, "_exit_barri": 33, "guard": [33, 58, 63, 66, 670, 942, 1890, 1917, 1926, 1928, 1948, 1951, 1959, 1965, 1969, 1970], "_initialize_work": 33, "worker_group": 33, "fresh": [33, 1063, 1761, 1792, 1879], "start_work": 33, "_stop_work": 33, "optimist": 33, "deleg": 33, "_monitor_work": 33, "_rendezv": 33, "_restart_work": 33, "_shutdown": 33, "death_sig": 33, "sigterm": 33, "_start_work": 33, "gracefulli": [33, 43, 54, 1231, 1910, 1959], "meaning": [33, 35, 36, 1029, 1907, 1963], "meaningless": 33, "intention": [33, 1069, 1869, 1913, 1936], "ship": [34, 1130, 1906, 1936], "programmat": [34, 57, 1915], "my_launch": 34, "argv": [34, 45], "trainer_entrypoint_fn": 34, "fn_arg": 34, "run_result": 34, "tricki": [34, 50, 55, 1904, 1915, 1938, 1954], "myrendezvoushandl": 34, "elastic_ag": 34, "servic": [34, 1908, 1957], "metrichandl": [34, 39], "mymetrichandl": 34, "metric_data": [34, 39], "metricdata": 34, "sink": [34, 39, 1894], "eventhandl": 34, "cloudwatch": 34, "nulleventhandl": 34, "myeventhandl": 34, "invalid": [35, 40, 945, 1200, 1324, 1434, 1903, 1904, 1919, 1923, 1925, 1928, 1929, 1958, 1962], "infra": [35, 1968], "start_process": [35, 40, 1896], "torchelastic_error_fil": 35, "smallest": [35, 47, 931, 1222, 1232, 1253, 1257, 1273, 1721, 1843, 1947, 1969, 1972], "timestamp": [35, 36, 39, 43, 1894, 1930, 1945, 1969], "error_handl": 35, "sugar": [35, 1883], "get_error_handl": 35, "childfailederror": 35, "get_first_failur": 35, "dump_error_fil": 35, "error_fil": [35, 40], "exitcod": [35, 43], "nanni": 35, "accur": [35, 975, 1153, 1276, 1312, 1376, 1729, 1846, 1907, 1937, 1951, 1958], "diagnost": [35, 70, 71, 72, 73, 74, 77, 670, 1881], "torchelastic_ag": 35, "trainer_0": 35, "trainer_1": 35, "json": [35, 40, 44, 1914, 1930, 1963, 1967], "trainer_n": 35, "errorhandl": 35, "record_except": 35, "processfailur": 35, "test_ev": 36, "eventsourc": 36, "get_logging_handl": 36, "millisecond": [36, 39, 975, 1312, 1894], "eventmetadatavalu": 36, "readm": [37, 38, 782, 1899], "telemetri": 39, "timeseri": 39, "metric_group": 39, "metric_nam": 39, "sensibl": 39, "my_modul": [39, 47, 49, 57, 1881, 1928], "nullmetricshandl": 39, "consolemetricshandl": 39, "my_method": 39, "put_metr": 39, "calculate_lat": 39, "succinctli": 39, "baz": [39, 57, 844, 1928, 1947], "leaf_modul": 39, "classnam": [39, 1884], "threw": [39, 1971], "my_app": 39, "consolemetrichandl": 39, "toi": [39, 1969], "stdout": [39, 40, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1925], "stdoutmetrichandl": 39, "1574213883": 39, "4182858": 39, "my_metr": 39, "1574213940": 39, "5237644": 39, "nullmetrichandl": 39, "class_nam": [39, 57], "def_nam": 39, "leaf": [39, 47, 141, 213, 326, 438, 478, 493, 494, 781, 828, 830, 869, 883, 1139, 1674, 1839, 1899, 1903, 1904, 1925, 1950, 1958], "metric_valu": 39, "metric_group_nam": 39, "popen": 40, "stderr": [40, 1879, 1893], "err": 40, "echo": 40, "hello": [40, 54, 1883, 1928], "pcontext": 40, "multiprocesscontext": 40, "subprocesscontext": 40, "keyset": 40, "bitmask": 40, "mask": [40, 390, 391, 392, 393, 394, 534, 725, 898, 899, 1294, 1346, 1357, 1379, 1440, 1477, 1478, 1479, 1480, 1481, 1526, 1583, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1693, 1880, 1882, 1897, 1898, 1940, 1959], "miss": [40, 679, 1129, 1200, 1295, 1305, 1368, 1397, 1398, 1399, 1434, 1550, 1662, 1909, 1921, 1925, 1940, 1957, 1960, 1962], "bar0": 40, "bar1": 40, "file1": 40, "file2": 40, "caution": [40, 1960], "short": [40, 57, 724, 753, 1072, 1197, 1357, 1404, 1405, 1517, 1673, 1771, 1820, 1883, 1888, 1897, 1904, 1905, 1915, 1936, 1942, 1943, 1946, 1956], "ing": 40, "cmd": [40, 43], "forkserv": [40, 1614, 1896, 1917], "tee_stdout": 40, "tee_stderr": 40, "processcontext": [40, 1896], "superset": [40, 43], "runprocsresult": 40, "num_nod": [41, 43], "trainers_per_nod": 41, "num_allowed_failur": 41, "job_id": [41, 42, 43], "endpoint": [41, 42, 43], "host_node_addr": [41, 43], "min_siz": [41, 43], "num_allowed_failures_or_membership_chang": 41, "node1": [41, 43], "29400": [41, 43], "sidecar": [41, 42], "agre": [42, 1259, 1938], "resum": [42, 1698, 1704, 1706, 1936, 1938, 1945, 1956], "retryabl": 42, "announc": 42, "previous": [42, 46, 49, 50, 53, 54, 55, 57, 212, 688, 782, 783, 1141, 1208, 1818, 1819, 1867, 1868, 1872, 1881, 1905, 1907, 1915, 1928, 1929, 1935, 1936, 1941, 1962, 1965, 1971], "lose": [42, 45, 49, 182, 199, 1898], "train_loop": [42, 852], "arriv": [42, 43, 1936, 1938], "dynamicrendezvoushandl": 42, "rendezvousbackend": 42, "c10drendezvousbackend": 42, "etcdrendezvousbackend": 42, "supersed": 42, "etcdrendezvoushandl": 42, "my_run_id": 42, "from_backend": 42, "run_id": [42, 43], "min_nod": 42, "max_nod": 42, "rendezvousparamet": 42, "admit": [42, 43, 1907], "get_as_bool": 42, "get_as_int": 42, "rendezvoushandlerregistri": 42, "create_handl": 42, "creator": [42, 1904, 1936, 1938], "get_run_id": 42, "is_clos": 42, "set_clos": 42, "next_rendezv": 42, "rendezvousclosederror": 42, "rendezvousconnectionerror": 42, "rendezvousstateerror": 42, "rendezvoustimeouterror": 42, "num_nodes_wait": 42, "shutdown": [42, 1936, 1937], "rendezvouserror": 42, "dynamic_rendezv": 42, "join_timeout": 42, "600": 42, "last_call_timeout": 42, "close_timeout": 42, "rendezvoustimeout": 42, "get_stat": [42, 79], "fenc": 42, "token": [42, 973, 1007, 1008, 1879, 1885, 1961], "set_stat": [42, 79], "last_cal": 42, "heartbeat": 42, "keep_al": 42, "c10d_rendezvous_backend": 42, "create_backend": 42, "store_typ": 42, "tcp": [42, 43, 1936], "read_timeout": 42, "60": [42, 44, 1388, 1708, 1836, 1841, 1894, 1936, 1956], "is_host": 42, "cname": 42, "fqdn": [42, 43], "etcd_rendezvous_backend": 42, "ssl_cert": 42, "ssl": 42, "certif": 42, "ssl_cert_kei": 42, "privat": [42, 49, 1907, 1909, 1928, 1954, 1959], "ca_cert": 42, "rool": 42, "key_prefix": 42, "ttl": 42, "hour": 42, "etcd_rendezv": 42, "rdzv_impl": 42, "etcdrendezv": 42, "etcd_address": 42, "min_work": 42, "max_work": 42, "noqa": 42, "w605": 42, "2379": [42, 1298], "etcd_prefix": 42, "etcdstor": 42, "etcd_stor": 42, "etcd_client": 42, "etcd_store_prefix": 42, "c10": [42, 1914, 1957], "piggyback": 42, "num": [42, 735, 736, 750, 1324, 1386, 1389, 1404, 1440, 1449, 1477, 1917], "lookuperror": 42, "override_timeout": 42, "etcdserv": 42, "cumbersom": [42, 1884], "highli": [42, 1342, 1614, 1879, 1916, 1923, 1925, 1940, 1947], "etcd_serv": 42, "data_dir": 42, "v3": [42, 43], "substitut": [42, 57, 72, 1213, 1904, 1943], "torchelastic_etcd_binary_path": 42, "get_client": 42, "etcd_binary_path": 42, "entry_point": [43, 1955], "migrat": [43, 50, 1302, 1664, 1934], "train_script": 43, "aforment": 43, "suffic": [43, 57], "compliant": [43, 45], "num_train": 43, "wors": [43, 1861, 1959], "port_k": 43, "etcd": 43, "v2": [43, 1269, 1711, 1879], "revis": 43, "physic": [43, 224, 1090, 1108, 1885, 1906, 1917, 1940, 1959], "localworkergroup": 43, "rdzv_id": 43, "rdzv_backend": [43, 45], "rdzv_endpoint": [43, 45], "max_nnod": 43, "torchelastic_restart_count": 43, "far": [43, 1210, 1533, 1957], "torchelastic_max_restart": 43, "python_exec": 43, "gang": 43, "departur": 43, "surviv": 43, "kill": [43, 44, 1896, 1911], "frequenc": [43, 913, 962, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1197, 1342, 1377, 1378, 1524, 1525, 1698, 1820, 1968], "ness": [43, 1958], "load_checkpoint": [43, 45], "checkpoint_path": [43, 45], "dataset": [43, 45, 58, 788, 1342, 1351, 1400, 1880, 1911, 1914, 1917, 1921, 1927, 1931, 1932, 1945], "train_step": 43, "should_checkpoint": 43, "save_checkpoint": [43, 45], "acquir": [44, 57, 1915, 1938, 1940], "deadlin": 44, "message_queu": 44, "localtimerserv": 44, "max_interv": 44, "trainer_func": 44, "localtimercli": 44, "expiri": 44, "timer_cli": 44, "countdown": 44, "timefram": [44, 1936], "elig": [44, 1938], "reap": 44, "timerserv": 44, "mp_queue": 44, "daemon": [44, 1896], "filetimerserv": 44, "file_path": 44, "log_ev": [44, 1894], "filetimercli": 44, "fifo": 44, "watchdog": 44, "filetimerrequest": 44, "sigkil": 44, "named_pip": 44, "mkfifo": 44, "timercli": 44, "timerrequest": 44, "scope_id": 44, "expiration_tim": 44, "acquisit": 44, "whatev": [44, 57, 438, 1614, 1762, 1848, 1884, 1910, 1958, 1959], "request_queu": 44, "entiti": [44, 57], "clear_tim": 44, "get_expired_tim": 44, "register_tim": 44, "timer_request": 44, "use_env": 45, "expositori": 45, "worst": [45, 1909], "total_num_epoch": 45, "visit": [45, 1925, 1962, 1963], "WILL": 46, "BE": 46, "aot": [46, 670, 944, 1890, 1951, 1959, 1960, 1969], "example_arg": 46, "exported_program": 46, "exportedprogram": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 1923], "arg1_1": [46, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69], "exportgraphsignatur": [46, 47, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "user_input": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "user_output": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "inputs_to_paramet": 46, "inputs_to_buff": 46, "buffers_to_mut": 46, "backward_signatur": 46, "assertion_dep_token": 46, "sound": [46, 57, 944, 945, 1462, 1945, 1960], "convent": [46, 49, 57, 326, 931, 1072, 1090, 1092, 1116, 1139, 1352, 1353, 1354, 1397, 1398, 1399, 1473, 1751, 1754, 1854, 1879, 1893, 1899, 1904, 1912, 1915, 1920], "opset": [46, 1923, 1925, 1926, 1955, 1964], "alias": [46, 49, 885, 1130, 1141, 1544, 1872, 1883, 1884, 1888, 1909, 1958], "stacktrac": [46, 47, 58, 66], "leverag": [46, 942, 1922, 1923, 1936, 1951, 1953, 1961], "_dynamo": [46, 58, 68, 942, 1908, 1951, 1954, 1955, 1956, 1957, 1962, 1965, 1967, 1969], "massiv": [46, 1962], "pt2": [46, 1957, 1958], "artifact": [46, 670, 1820, 1890, 1914, 1928, 1967, 1969], "untrac": [46, 57], "disjoint": [46, 1881], "usabl": [46, 56, 1884, 1924, 1925, 1956], "traceabl": [46, 57, 614, 807, 1881, 1931, 1957], "symbolic_trac": [46, 47, 57, 1931], "comprehens": [46, 72, 1787, 1884, 1885, 1898, 1907, 1913, 1931], "simpler": [46, 55, 1141, 1872, 1881, 1904, 1909, 1912, 1915], "straight": [46, 1350, 1535], "conv": [46, 57, 692, 693, 694, 695, 696, 697, 698, 699, 700, 782, 783, 786, 804, 844, 850, 1200, 1210, 1216, 1217, 1362, 1363, 1364, 1365, 1366, 1367, 1434, 1435, 1441, 1622, 1623, 1625, 1892, 1902, 1907, 1918, 1925, 1931, 1932, 1933, 1934, 1963, 1965], "in_channel": [46, 702, 703, 704, 705, 706, 707, 708, 709, 715, 716, 717, 720, 721, 728, 729, 730, 731, 732, 733, 1210, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415], "out_channel": [46, 702, 703, 704, 705, 706, 707, 708, 709, 715, 716, 717, 720, 721, 728, 729, 730, 731, 732, 733, 1210, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415], "kernel_s": [46, 702, 703, 704, 705, 706, 707, 708, 709, 715, 716, 717, 720, 721, 728, 729, 730, 731, 732, 733, 758, 759, 772, 773, 1200, 1210, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1382, 1383, 1402, 1403, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1485, 1500, 1501, 1502, 1511, 1512, 1513, 1527, 1528, 1529, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1601, 1727, 1728, 1882, 1945, 1964], "maxpool": [46, 786, 1382, 1383, 1528, 1529, 1925], "maxpool2d": [46, 773, 1431, 1435, 1558, 1561, 1925, 1933], "256": [46, 1357, 1719, 1907, 1925], "example_kwarg": 46, "arg2_1": [46, 58, 63, 64, 65, 66], "arg3_1": [46, 58, 64], "max_pool2d_with_indic": [46, 1882, 1926, 1964], "getitem": [46, 58, 66, 69, 1968], "85": [46, 57, 1437, 1704, 1963, 1967], "l__self___conv": 46, "lift": [46, 47, 55, 1141, 1872, 1898, 1926, 1958], "get_attr": [46, 57, 71], "branch1": 46, "64": [46, 52, 53, 55, 942, 1134, 1135, 1139, 1339, 1340, 1341, 1343, 1344, 1345, 1351, 1462, 1583, 1759, 1863, 1899, 1921, 1925, 1931, 1935, 1940, 1943, 1945, 1946, 1959, 1961], "branch2": 46, "128": [46, 607, 710, 718, 719, 746, 754, 784, 809, 810, 1355, 1369, 1396, 1421, 1443, 1482, 1483, 1515, 1583, 1898, 1899, 1931, 1933, 1934, 1936, 1940, 1943, 1946, 1967], "x2": [46, 58, 64, 930, 1248, 1426, 1482, 1483, 1515, 1572, 1882, 1959, 1964], "out1": [46, 1130, 1882, 1959], "out2": [46, 1130, 1882, 1959], "arg4_1": [46, 58, 64], "arg5_1": [46, 58, 64], "arg6_1": [46, 58, 64], "permute_1": 46, "addmm_1": 46, "relu_1": [46, 57], "l__self___buff": 46, "rangeconstraint": [46, 47], "min_val": [46, 768, 1393, 1539, 1540, 1882, 1964], "max_val": [46, 768, 1393, 1539, 1540, 1882, 1964], "9223372036854775806": [46, 58, 65, 66], "inputdim": [46, 47], "input_nam": [46, 1925], "range_constraint": [46, 47], "equality_constraint": [46, 47], "dynamic_dim": 46, "saved_exported_program": 46, "example_input": [46, 807, 808, 851, 852, 1212, 1216, 1931, 1950, 1955, 1956, 1958, 1962], "rewritten": [46, 1912], "const": [46, 1388, 1914], "add_1": [46, 57, 58, 61, 63, 65, 66, 1130], "add_2": [46, 57, 58, 61, 63], "shot": 46, "nearli": [46, 141, 883, 897, 1712, 1917, 1936, 1969], "imposs": [46, 1141, 1872, 1903], "unsupport": [46, 54, 58, 60, 66, 72, 73, 75, 78, 1881, 1885, 1898, 1923, 1936, 1940, 1959, 1962, 1965], "exportdb": [46, 1948], "combinatori": 46, "explod": [46, 1465], "cond": [46, 47, 54, 58, 61, 66, 1918], "undergo": [46, 70], "refin": [46, 1207, 1898], "fake": [46, 57, 75, 702, 703, 704, 705, 706, 707, 708, 709, 710, 720, 721, 722, 783, 789, 790, 800, 802, 828, 851, 852, 1086, 1087, 1923, 1928, 1931, 1934, 1951], "fatal": [46, 1896, 1917], "dim0_x": [46, 58, 60, 65, 66], "verbatim": 46, "register_dataclass": [46, 47], "ordereddict": [46, 1200, 1434, 1435, 1444, 1462, 1605, 1643, 1882, 1915, 1920, 1947, 1962], "unbound": 46, "t1": [46, 677, 678, 870, 1153, 1614, 1883, 1936, 1937], "extra_fil": [46, 1208, 1211], "opset_vers": [46, 1923, 1925, 1926], "pathlib": 46, "txt": [46, 1208, 1211, 1928, 1969], "decod": [46, 49, 1272, 1477, 1478, 1479, 1614, 1928], "utf": [46, 1272, 1925, 1928], "expected_opset_vers": 46, "rb": [46, 1208, 1272], "seek": [46, 1208, 1272, 1928, 1931], "typ": 46, "inputdataclass": 46, "outputdataclass": 46, "polymorph": [46, 1883], "graph_signatur": [46, 47], "module_call_graph": 46, "dialect": [46, 1913], "exportbackwardsignatur": 46, "gradients_to_paramet": 46, "gradients_to_user_input": 46, "loss_output": 46, "input_spec": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "output_spec": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "gurante": 46, "getattr": [46, 57, 1882, 1909, 1920, 1936, 1962], "parameters_buff": 46, "flattened_user_input": 46, "mutated_input": 46, "flattened_user_output": 46, "custommodul": [46, 828, 1931], "my_paramet": [46, 1883], "register_buff": [46, 1200, 1434, 1607, 1881, 1883, 1909, 1915], "my_buffer1": 46, "my_buffer2": 46, "placehold": [46, 57, 71, 824, 1396, 1907, 1955, 1956, 1968], "add_tensor": [46, 47], "call_funct": [46, 57, 71, 73, 74, 1955, 1956, 1959, 1962, 1968, 1969], "mul_tensor": 46, "mul_tensor_1": 46, "add_tensor_1": 46, "add_tensor_2": 46, "l__self___my_paramet": 46, "l__self___my_buffer1": 46, "l__self___my_buffer2": 46, "ie": 46, "mangl": 46, "l__self___my_my_buffer1": 46, "modulecallsignatur": 46, "tensorargu": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "symintargu": [46, 58, 66], "constantargu": [46, 58, 60], "in_spec": 46, "_pytre": [46, 58], "treespec": 46, "out_spec": 46, "modulecallentri": 46, "inputkind": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "inputspec": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "outputkind": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "outputspec": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "bear": 47, "mlir": 47, "streamlin": [47, 72], "soundli": 47, "audienc": 47, "realiz": [47, 1766], "implic": [47, 1198, 1216, 1909, 1936, 1940], "codegen": [47, 57, 1909, 1959, 1963, 1969], "highlight": [47, 720, 721, 1884], "bundl": [47, 1914], "notabl": [47, 942, 1884], "graph_modul": [47, 849, 1956, 1968], "sympi": [47, 1957], "i0": [47, 58, 67, 68, 297, 1220, 1786, 1882, 1926, 1941], "dag": [47, 1907], "acycl": [47, 782, 1904], "collorari": 47, "mod": [47, 57, 711, 712, 722, 728, 729, 730, 735, 736, 746, 754, 800, 801, 802, 803, 826, 827, 854, 1129, 1203, 1204, 1210, 1217, 1662, 1865, 1883, 1884, 1928, 1949, 1955, 1969], "_export": [47, 1931], "textual": 47, "machineri": [47, 57, 1909, 1959], "op_nam": [47, 1888, 1923], "meta": [47, 49, 53, 57, 327, 1888, 1923, 1936, 1945, 1947, 1957, 1958, 1960, 1961, 1968], "arg4": 47, "arg5": 47, "compact": [47, 1088, 1089, 1091, 1243, 1245, 1248, 1909, 1925, 1931], "args1": 47, "add1": 47, "predefin": [47, 1925], "readign": 47, "attach": [47, 52, 56, 57, 130, 702, 703, 704, 705, 706, 707, 708, 709, 710, 720, 721, 722, 723, 783, 828, 830, 854, 1605, 1879, 1881, 1883, 1897, 1904, 1909, 1931, 1937, 1949, 1957], "referenc": [47, 57, 976, 1200, 1434, 1848, 1883, 1904, 1925, 1936, 1956, 1962], "19": [47, 675, 736, 935, 1431, 1881, 1925, 1940, 1956, 1963], "dummy_help": 47, "helper_util": 47, "89": [47, 607, 1730, 1963], "val": [47, 58, 61, 65, 1015, 1206, 1207, 1882, 1884, 1902, 1958, 1962], "nn_module_stack": 47, "came": [47, 1962], "self_linear": 47, "self_sequenti": 47, "source_fn_stack": 47, "source_fn": 47, "encapsul": [47, 56, 57, 1923, 1936, 1954], "control_flow": [47, 58, 61, 65, 66, 69], "x_1": [47, 1051, 1052, 1053, 1054, 1268, 1355, 1368, 1369, 1504, 1515, 1846], "num_us": [47, 57], "y_1": [47, 1846], "higher_ord": [47, 58, 61, 65, 66, 69], "liter": [47, 1673, 1882, 1885, 1898, 1928, 1968, 1971], "dim_ord": 47, "tensormeta": 47, "promot": [47, 49, 72, 675, 915, 918, 927, 1015, 1067, 1115, 1117, 1118, 1119, 1120, 1323, 1373, 1374, 1375, 1379, 1515, 1721, 1741, 1742, 1748, 1763, 1821, 1884, 1923, 1943, 1947, 1958, 1959, 1964], "max_pool2d_with_index": 47, "add_on": 47, "ph_0": 47, "jax": [47, 50, 53, 54, 55, 1904, 1910, 1959], "int64_t": [47, 1673], "scalartyp": [47, 1964], "memoryformat": [47, 1964], "memory_format": [47, 57, 146, 161, 163, 166, 169, 170, 171, 180, 186, 197, 200, 224, 231, 258, 288, 316, 322, 384, 489, 490, 515, 570, 939, 1073, 1074, 1128, 1200, 1434, 1614, 1621, 1672, 1732, 1734, 1736, 1878, 1880, 1882, 1909, 1947, 1964], "_register_pytree_nod": 47, "sharding_strategi": 49, "cpu_offload": 49, "auto_wrap_polici": 49, "backward_prefetch": 49, "backwardprefetch": [49, 1880], "backward_pr": [49, 1200, 1434], "mixed_precis": [49, 1614], "ignored_modul": 49, "param_init_fn": 49, "sync_module_st": 49, "forward_prefetch": 49, "limit_all_gath": 49, "use_orig_param": 49, "ignored_st": 49, "inspir": [49, 1682, 1909, 1961], "deepspe": 49, "shorten": 49, "sharded_modul": 49, "0001": [49, 57, 1053, 1245, 1422, 1551, 1676, 1706, 1882, 1927], "stale": 49, "dev_id": 49, "no_sync": [49, 1614], "offload": 49, "ping": 49, "77724": 49, "isol": [49, 57, 1605, 1896, 1929, 1969], "summon_full_param": 49, "illeg": [49, 1907, 1957], "shard_grad_op": 49, "unshard": 49, "full_shard": 49, "with_grad": 49, "reacquir": 49, "gap": [49, 855, 1738, 1880, 1931, 1967], "delai": [49, 1614, 1938, 1959], "nccl_cross_nic": 49, "cpuoffload": [49, 1880], "modulewrappolici": 49, "custompolici": 49, "proceed": [49, 975, 1312, 1388, 1937, 1938], "nonwrapped_numel": 49, "travers": [49, 826, 1614, 1908, 1909, 1937, 1949, 1950, 1962], "subtre": 49, "size_based_auto_wrap_polici": 49, "exce": [49, 1278, 1907, 1917], "100m": 49, "numel": [49, 425, 434, 940, 962, 1103, 1185, 1882, 1897, 1904, 1926, 1940], "custom_auto_wrap_polici": 49, "min_num_param": 49, "1e8": 49, "my_auto_wrap_polici": 49, "functool": [49, 52, 58, 831, 1798, 1909, 1947], "1e5": 49, "mixedprecis": [49, 1880], "granular": [49, 71, 1214, 1903, 1967], "is_meta": [49, 1926, 1959], "reset_paramet": 49, "torchdistx": 49, "deferred_init": 49, "materialize_modul": 49, "my_init_fn": 49, "fullstatedictconfig": [49, 1880], "flatparamet": 49, "unifi": [49, 1880, 1898], "norm_typ": [49, 735, 736, 1377, 1378, 1402, 1403, 1524, 1525, 1554, 1555, 1618, 1619, 1882], "infin": [49, 960, 1190, 1192, 1194, 1195, 1328, 1350, 1427, 1428, 1429, 1557, 1558, 1559, 1619, 1681, 1791, 1803, 1940, 1941], "no_shard": 49, "fp32": [49, 771, 784, 807, 1057, 1614, 1907, 1918, 1931, 1932, 1934, 1961], "flatten_sharded_optim_state_dict": 49, "sharded_optim_state_dict": 49, "shard_full_optim_state_dict": 49, "unflatten": [49, 1882, 1897, 1898, 1900, 1926, 1944], "fsdp_modul": 49, "root_onli": 49, "full_optim_state_dict": 49, "optim_input": 49, "rank0_onli": 49, "get_state_dict_typ": 49, "state_dict_typ": 49, "statedictset": [49, 1880], "assertionerror": [49, 57, 75, 724, 1674, 1947, 1969], "differen": 49, "intercept": [49, 57, 1909, 1960], "occurr": [49, 393, 1198, 1301, 1653, 1857, 1858, 1957], "oom": [49, 1911, 1971], "fulloptimstatedictconfig": [49, 1880], "set_state_dict_typ": 49, "full_state_dict": 49, "save_a_checkpoint": 49, "load_a_checkpoint": 49, "optim_state_dict_to_load": 49, "is_named_optim": 49, "load_directli": 49, "original_osd": 49, "namedoptim": 49, "keyedoptim": 49, "torchrec": [49, 1880], "gossipgrad": [49, 1614], "rekey_optim_state_dict": 49, "optim_state_key_typ": 49, "loadabl": [49, 1879], "wrapped_model": 49, "wrapped_optim": 49, "full_osd": 49, "nonwrapped_model": 49, "nonwrapped_optim": 49, "rekeyed_osd": 49, "optimstatekeytyp": 49, "param_id": 49, "osd": 49, "param_nam": 49, "sharded_osd": 49, "scatter_full_optim_state_dict": 49, "new_model": 49, "new_optim": 49, "remap": [49, 79, 1204, 1208, 1272, 1293, 1879, 1893, 1935], "state_dict_config": 49, "optim_state_dict_config": 49, "descend": [49, 57, 127, 532, 866, 1200, 1264, 1265, 1434, 1796, 1824, 1882, 1964], "transpar": [49, 1908, 1929, 1936, 1938], "shardedstatedictconfig": [49, 1880], "offload_to_cpu": 49, "optimstatedictconfig": [49, 1880], "param_state_dict": 49, "statedictconfig": [49, 1880], "writeback": 49, "summon": 49, "portion": [49, 1121, 1371, 1465, 1573, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1932, 1960, 1969], "discard": [49, 1197, 1258, 1630, 1879, 1883, 1894], "redundantli": [49, 1903], "materi": [49, 890, 955, 1616, 1617, 1693, 1746, 1747, 1909], "throughput": [49, 1881, 1906, 1907], "backward_post": 49, "altogeth": [49, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693], "contend": 49, "volum": [49, 1162], "_hybrid_shard_zero2": 49, "freed": [49, 141, 883, 897, 981, 1029, 1896, 1907, 1913, 1936, 1954, 1971], "param_dtyp": 49, "reduce_dtyp": 49, "buffer_dtyp": 49, "keep_low_precision_grad": 49, "cast_forward_input": 49, "cast_root_forward_input": 49, "_module_classes_to_ignor": 49, "batchnorm": [49, 690, 691, 1138, 1200, 1210, 1434, 1473, 1614, 1622, 1623, 1624, 1625, 1892, 1900, 1904, 1915, 1927, 1929, 1931, 1933, 1934], "_batchnorm": [49, 1622, 1624], "kept": [49, 53, 57, 687, 769, 775, 1352, 1353, 1354, 1397, 1398, 1399, 1473, 1544, 1602, 1884, 1896, 1934, 1940], "permit": [49, 1940], "thereaft": 49, "local_state_dict": 49, "upcast": 49, "recast": 49, "offload_param": 49, "cfg": 49, "finetun": [49, 1200, 1434], "model_fn": 49, "my_checkpoint": 49, "_use_dtensor": 49, "localstatedictconfig": [49, 1880], "shardedoptimstatedictconfig": [49, 1880], "localoptimstatedictconfig": [49, 1880], "love": 50, "hear": 50, "vmap": [50, 52, 53, 57, 891, 893, 897, 898, 899, 1131, 1134, 1135, 1137, 1139], "arbitrarili": [50, 55, 503, 1203, 1498, 1884, 1904, 1909, 1910], "stock": [50, 55], "ensembl": [50, 53, 55, 1139], "maml": [50, 55], "vjp": [50, 53, 54, 879, 880, 1135, 1141, 1872, 1909, 1910], "whirlwind": 50, "tour": 50, "ux": [50, 55, 1931, 1962], "jacrev": [51, 53, 54, 893, 1133, 1134, 1910], "functional_cal": [51, 53, 1139, 1959], "running_mean": [52, 1138, 1200, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1473, 1503, 1543, 1882, 1915, 1920, 1964], "running_var": [52, 1138, 1200, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1473, 1503, 1543, 1882, 1920, 1964], "groupnorm": [52, 1534], "anywher": [52, 1903], "batchnorm2d": [52, 703, 706, 708, 713, 804, 1210, 1371, 1408, 1503, 1892, 1904, 1915, 1931, 1933], "track_running_stat": [52, 741, 742, 743, 1138, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1920], "resnet": [52, 1879, 1881, 1883, 1915, 1928, 1945, 1949], "regnet": 52, "norm_lay": 52, "resnet18": [52, 57, 1879, 1881, 1883, 1893, 1928, 1967], "num_group": [52, 739, 1389, 1534, 1882], "fragil": 52, "replace_all_batch_norm_modules_": 52, "upstream": [53, 1921], "reflect": [53, 448, 510, 546, 1125, 1126, 1129, 1197, 1362, 1363, 1364, 1410, 1411, 1412, 1455, 1456, 1457, 1533, 1571, 1662, 1707, 1820, 1881, 1882, 1911, 1944, 1954], "coupl": [53, 72, 1881, 1914, 1922, 1937, 1954, 1968], "jvp": [53, 54, 880, 884, 885, 886, 890, 1137, 1909], "jacfwd": [53, 54, 893, 1133, 1910], "carefulli": [53, 56, 1888, 1910, 1928, 1958, 1960], "make_functional_with_buff": 53, "hurri": 53, "gist": [53, 783, 1912, 1962, 1963], "emul": [53, 789, 1885, 1909], "fmodel": 53, "compute_loss": [53, 55, 1129, 1131], "predict": [53, 1342, 1351, 1388, 1516, 1927, 1945], "And": [53, 787, 814, 1051, 1052, 1129, 1200, 1222, 1298, 1303, 1357, 1434, 1862, 1864, 1904, 1909, 1910, 1921, 1925, 1931, 1950, 1955, 1960, 1961, 1962], "argnum": [53, 1131, 1132, 1133, 1134, 1135], "stack_module_st": 53, "num_model": [53, 1139], "in_featur": [53, 710, 718, 719, 722, 723, 746, 754, 1139, 1200, 1342, 1419, 1421, 1434, 1605, 1627, 1628, 1660, 1661, 1664, 1915], "out_featur": [53, 710, 718, 719, 722, 723, 746, 754, 1139, 1200, 1355, 1419, 1421, 1434, 1605, 1627, 1628, 1660, 1661, 1664, 1915], "base_model": 53, "clearer": [53, 1257, 1693, 1909, 1923], "call_single_model": 53, "aotautograd": [53, 670, 1890, 1908, 1958, 1959, 1960, 1969], "stori": [53, 1912], "grad_x": [54, 1910, 1959], "has_aux": [54, 1131, 1132, 1134, 1135, 1136, 1140], "mental": [54, 1130], "absenc": 54, "unbind": [54, 1141, 1872, 1880, 1882, 1897, 1926, 1944], "presenc": [54, 57, 1210, 1329, 1917, 1928, 1940, 1965], "pop": [54, 1033, 1435, 1444, 1926, 1929, 1930, 1962], "lst": 54, "in_dim": [54, 55, 882, 1131, 1141, 1872, 1910], "batchedtensor": 54, "batched_tensor_input": 54, "new_": [54, 1907, 1946], "new_zero": [54, 1882, 1926], "new_empti": [54, 1882, 1888, 1926], "diag_emb": [54, 1062, 1236, 1237, 1264, 1824, 1882, 1926], "vec": [54, 98, 99, 414, 680, 1326, 1663, 1882, 1940, 1964], "copy_": [54, 212, 1130, 1486, 1881, 1882, 1897, 1907, 1942], "arithmet": [54, 915, 918, 932, 1256, 1748, 1885, 1894, 1897, 1898, 1918, 1931, 1943], "extra_arg": 54, "theoret": 54, "custom_dot": 54, "lax": 54, "while_loop": 54, "is_nonzero": [54, 1882, 1926, 1940, 1959], "rag": 54, "unclear": [54, 607], "add_nois": 54, "prng": 54, "cos_x": [55, 1131], "neg_sin_x": [55, 1131], "hide": [55, 1141, 1872, 1910], "feature_s": [55, 1131, 1141, 1872], "feature_vec": [55, 1131, 1141, 1872], "mseloss": [55, 1131, 1395, 1465, 1564, 1907, 1908], "grad_weight_per_exampl": [55, 1131], "cotang": [55, 1140], "vjp_fn": [55, 1140], "out_tang": 55, "hessian0": 55, "hessian1": 55, "hess": [55, 1133], "rpc_async": [56, 1884, 1926, 1936, 1938], "add_done_callback": 56, "fut": [56, 1203, 1614, 1906, 1936], "set_result": [56, 1614, 1936], "haven": [56, 1915], "set_except": 56, "baseexcept": 56, "valueerror": [56, 58, 75, 1198, 1632, 1633, 1653, 1656, 1909, 1923, 1929, 1947, 1968], "slow_set_futur": 56, "sleep": 56, "cb1": 56, "cb2": 56, "dedic": [56, 1907], "pool": [56, 756, 757, 758, 759, 772, 773, 973, 1007, 1008, 1018, 1029, 1309, 1310, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1382, 1383, 1402, 1403, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1528, 1529, 1554, 1555, 1557, 1558, 1559, 1727, 1728, 1880, 1906, 1907, 1909, 1915, 1917, 1933, 1936, 1954], "didn": [56, 1909, 1921, 1927], "cb_fut": 56, "chain_cb_fut": 56, "cb": [56, 1936], "held": [56, 973, 997, 1025, 1311, 1903, 1961], "collect_al": [56, 1880], "fut0": 56, "fut1": [56, 1936], "fut_list": 56, "wait_al": [56, 1880], "toolkit": 57, "clamp": [57, 177, 178, 789, 792, 938, 1207, 1350, 1388, 1533, 1544, 1602, 1882, 1892, 1897, 1925, 1926, 1931, 1933, 1934, 1941, 1947, 1964], "call_modul": [57, 71, 1968], "call_method": [57, 71, 1955, 1956, 1962], "feed": [57, 1881, 1911, 1915, 1949, 1958], "theses": 57, "callsit": 57, "constitut": 57, "tracer_class": 57, "gm": [57, 1955, 1956, 1958, 1962, 1968, 1969], "treatment": 57, "topk": [57, 1882, 1897, 1926, 1964], "print_tabular": [57, 1955, 1956, 1962], "opcod": [57, 1928, 1955, 1956, 1962], "linear_weight": 57, "linear_1": 57, "topk_1": 57, "pose": [57, 1937], "explor": [57, 70, 1879, 1904, 1915, 1928, 1971], "edit": [57, 1888, 1928, 1944], "lint": 57, "inserting_aft": [57, 1968], "new_nod": 57, "replace_all_uses_with": [57, 1968], "tediou": 57, "unwieldi": 57, "fusion": [57, 670, 782, 804, 850, 851, 942, 1202, 1209, 1214, 1215, 1216, 1217, 1621, 1892, 1915, 1931, 1959, 1961, 1968, 1969], "imagin": [57, 1936, 1960], "requisit": 57, "relu_decomposit": 57, "decomposition_rul": 57, "constitu": [57, 1899, 1909], "new_graph": 57, "graphappendingtrac": 57, "proxy_arg": 57, "output_proxi": 57, "node_copi": 57, "ari": [57, 1925], "unari": [57, 1134, 1135, 1477, 1479, 1481, 1885, 1897], "organiz": 57, "shapeprop": 57, "named_modul": [57, 1200, 1434, 1915], "args_it": 57, "load_arg": 57, "map_arg": 57, "fetch_attr": 57, "target_atom": 57, "attr_itr": 57, "hasattr": [57, 1862, 1882, 1909, 1931, 1956, 1962], "nonexist": [57, 1883, 1884], "elif": [57, 1207, 1400, 1883, 1884, 1913, 1923, 1962, 1968], "self_obj": 57, "encompass": 57, "prove": [57, 1896], "disprov": 57, "led": [57, 1971], "auxiliari": [57, 1131, 1132, 1134, 1135, 1136, 1140, 1879, 1914], "nondeterminist": [57, 304, 306, 312, 489, 505, 507, 913, 1073, 1074, 1075, 1222, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1430, 1431, 1432, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1533, 1544, 1571, 1583, 1602, 1603, 1604, 1765, 1861, 1955], "unord": [57, 1435, 1444], "nondetermin": [57, 899, 1919], "dedupl": [57, 1925], "straightforward": [57, 1891, 1899, 1915, 1927, 1940, 1955, 1962], "torchvis": [57, 1879, 1880, 1881, 1883, 1925, 1928, 1931, 1945, 1949, 1967], "transformed_resnet18": 57, "input_imag": 57, "224": [57, 851, 852, 1881, 1883, 1925, 1967], "margin": [57, 1368, 1394, 1426, 1437, 1439, 1482, 1483, 1514, 1541, 1556, 1565, 1599, 1600, 1882, 1945], "commut": 57, "toolbox": 57, "tradit": [57, 1481, 1922, 1923], "luckili": 57, "my_pass": 57, "my_module_transform": 57, "input_valu": 57, "prompt": [57, 1879, 1921], "set_trac": [57, 1205, 1212, 1218, 1881], "examin": [57, 1915, 1925, 1930, 1971], "undergon": 57, "subclassm": 57, "pre_trac": 57, "post_trac": 57, "sake": 57, "tabular": [57, 670, 1890], "transform_graph": 57, "session": 57, "luck": 57, "input_nod": 57, "stepwis": 57, "breakpoint": [57, 1884, 1968], "excel": [57, 1960], "onlin": [57, 1678], "realpython": 57, "pycharm": 57, "vscode": 57, "graphic": [57, 1895, 1921, 1967], "parlanc": 57, "func_to_trac": 57, "dyn": 57, "155": 57, "__bool__": [57, 1882, 1884], "to_bool": 57, "traceerror": [57, 1931], "hyper": [57, 1465, 1883, 1945], "do_activ": 57, "512": [57, 1477, 1478, 1479, 1480, 1481, 1907, 1953], "without_activ": 57, "with_activ": 57, "traced_without_activ": 57, "traced_with_activ": 57, "concrete_arg": 57, "truli": [57, 1888, 1922, 1925], "__torch_function__": [57, 1970], "161": 57, "len_1": 57, "sqrt_1": 57, "truediv": [57, 1955, 1956], "mycustomtrac": 57, "traced_graph": 57, "runnabl": [57, 1903, 1925, 1945, 1969], "myspecialsubmodul": 57, "submod": 57, "neg_1": 57, "is_leaf_modul": [57, 1950], "sparse_coo_tensor": [57, 534, 571, 1805, 1882, 1886, 1926, 1940], "ones_lik": [57, 1134, 1135, 1140, 1882, 1899, 1907, 1909, 1910, 1915, 1926], "zeros_lik": [57, 888, 890, 1882, 1886, 1899, 1907, 1926, 1940], "viabl": [57, 1907], "torch_randn": 57, "gotcha": 57, "bake": [57, 58, 66, 1204, 1210, 1679, 1680, 1927], "dropoutrepro": 57, "assert_clos": [57, 1089, 1091, 1092, 1097, 1098, 1103, 1104, 1105, 1107, 1109, 1880, 1881, 1947], "greatest": [57, 1143, 1328, 1925, 1947], "6207983493804932": 57, "dropoutrepro2": 57, "overspeci": [57, 942, 1957], "ph": 57, "shouldn": [57, 973, 1928, 1940, 1944], "fn_or_nam": 57, "callfunct": 57, "my_custom_funct": 57, "fn_to_be_trac": 57, "reassign": [57, 1907], "regener": 57, "unset": [57, 1918], "add_submodul": 57, "subpath": 57, "get_submodul": [57, 1200, 1434], "delete_all_unused_submodul": 57, "delete_submodul": 57, "print_read": [57, 1956], "print_output": 57, "date": [57, 1928], "pythoncod": 57, "fxmodul": 57, "pathlik": [57, 1272, 1754, 1928], "owning_modul": 57, "tracer_cl": 57, "tracer_extra": 57, "the_funct": 57, "type_expr": 57, "create_nod": 57, "method_nam": 57, "0th": [57, 1141, 1872], "inserting_befor": 57, "influenc": [57, 1923, 1940], "eliminate_dead_cod": 57, "dead": [57, 1968], "topolog": [57, 1925], "attr_1": 57, "is_impur": 57, "bad": [57, 58, 1896, 1925, 1928, 1931, 1958, 1967], "erase_nod": 57, "to_eras": 57, "eras": [57, 58, 63, 64, 1957], "qualified_nam": 57, "graph_copi": 57, "val_map": 57, "return_output_nod": 57, "slice": [57, 58, 66, 68, 597, 685, 686, 1352, 1353, 1354, 1467, 1469, 1473, 1589, 1590, 1663, 1743, 1760, 1761, 1792, 1803, 1855, 1881, 1885, 1899, 1907, 1925, 1926, 1940, 1941, 1944, 1946, 1959, 1964], "opoverload": [57, 1888], "companion": 57, "__exit__": [57, 1884, 1885, 1928], "arg_transform": 57, "value_remap": 57, "_node_list": 57, "doubli": 57, "on_generate_cod": 57, "make_transform": 57, "transformcodefunc": 57, "insert_pdb": 57, "bodi": [57, 58, 66, 69, 1212, 1881, 1883, 1884, 1885, 1923, 1956, 1969], "current_tran": 57, "stuff": [57, 1958], "default_valu": 57, "_not_": 57, "tabul": 57, "process_input": 57, "process_output": 57, "python_cod": 57, "root_modul": [57, 783, 1933], "set_codegen": 57, "return_typ": [57, 687, 1051, 1052, 1162, 1222, 1260, 1298, 1301, 1303, 1306, 1330, 1796, 1843, 1848], "printout": [57, 1017, 1030, 1956], "all_input_nod": 57, "format_nod": 57, "placeholder_nam": 57, "maybe_return_typenam": 57, "autogener": [57, 1910], "insert_arg": 57, "impur": 57, "normalized_argu": 57, "arg_typ": 57, "kwarg_typ": 57, "normalize_to_only_use_kwarg": 57, "vararg": 57, "argskwargspair": 57, "bx": 57, "ax": [57, 935, 1232, 1246, 1250, 1261, 1262, 1263, 1291, 1302, 1442, 1452, 1848, 1925, 1959], "prev": [57, 1691], "replace_with": 57, "delete_user_cb": 57, "propagate_meta": 57, "replace_input_with": 57, "old_input": 57, "new_input": 57, "create_proxi": 57, "record_stack_trac": 57, "dynamo": [57, 70, 670, 1890, 1955, 1957, 1958, 1959, 1960, 1962, 1963, 1965, 1966, 1967, 1969], "outputgraph": [57, 1962], "update_arg": 57, "update_kwarg": 57, "autowrap_modul": 57, "autowrap_funct": 57, "create_arg": 57, "create_args_for_root": 57, "root_fn": 57, "is_modul": 57, "introspect": [57, 944, 1959], "disallow": [57, 1928, 1936, 1943, 1959, 1960], "proxy_factory_fn": 57, "attr": [57, 58, 60, 141, 883, 1302, 1751], "attr_val": 57, "parameter_proxy_cach": 57, "module_qualified_nam": [57, 1950], "path_of_modul": 57, "some_hyperparamet": 57, "indexed_item": 57, "proxied_valu": 57, "garbage_collect_valu": 57, "run_nod": 57, "swap": [57, 607, 778, 779, 780, 783, 787, 854, 1206, 1290, 1482, 1483, 1599, 1600, 1845, 1882, 1885, 1907, 1931, 1940, 1942, 1949], "vice": [57, 448, 593, 1125, 1126, 1426, 1904, 1934, 1942, 1957], "versa": [57, 448, 593, 1125, 1126, 1426, 1904, 1934, 1942, 1957], "negsigmswapinterpret": 57, "call_self": 57, "args_tail": 57, "boxed_run": 57, "args_list": 57, "promptli": [57, 1273], "fetch_args_kwargs_from_env": 57, "map_nodes_to_valu": 57, "initial_env": 57, "enable_io_process": 57, "negsigmswapxform": 57, "nodes_map": [57, 1968], "subgraph_rewrit": [57, 1968], "w2": 57, "m1": [57, 1870, 1871], "m2": [57, 1660, 1870, 1871, 1931], "traced_modul": [57, 1920, 1968], "despit": [57, 1216, 1217, 1912], "stack_1": 57, "stack_2": 57, "sum_2": 57, "max_1": 57, "max_2": 57, "exhaust": [58, 1614], "wih": 58, "escap": [58, 67], "hatch": [58, 67], "assumeconstantresult": [58, 68], "burn": [58, 68, 1954], "tracabl": [58, 68], "get_item": [58, 68], "i64": [58, 63, 64, 67, 68], "slice_1": [58, 66, 68], "myautogradfunct": 58, "autogradfunct": 58, "allow_in_graph": [58, 1959], "cl": [58, 60, 130, 1909, 1931, 1936, 1970], "mul_1": [58, 64, 1955], "mysubmodul": [58, 65, 66], "condbranchclassmethod": [58, 65, 66], "subm": [58, 65, 66], "inner_true_fn": [58, 65, 66], "inner_false_fn": [58, 65, 66], "my_tensor_var": [58, 65, 66], "my_primitive_var": [58, 65, 66], "nonloc": [58, 61, 65, 66, 1885], "_lifted_tensor_constant0": [58, 65, 66], "lift_fresh_copi": [58, 65, 66, 1926], "sub_1": [58, 65, 66], "condclosedovervari": [58, 61, 65], "valuerang": [58, 65, 66, 67, 68], "is_bool": [58, 65, 66, 67, 68], "hint": [58, 67, 68, 670, 973, 1007, 1201, 1440, 1477, 1478, 1479, 1480, 1481, 1881, 1883, 1884, 1907, 1909, 1923, 1936, 1957, 1959, 1962], "constrain_as_valu": [58, 67, 68], "constrain_as_s": [58, 67, 68], "_constrain_as_s": [58, 67, 68], "_local_scalar_dens": [58, 67, 68, 1926, 1964], "i4": [58, 67, 68], "ge": [58, 67, 68, 276, 1155, 1294, 1386, 1391, 1392, 1404, 1537, 1538, 1882, 1897, 1926, 1964], "scalar_tensor": [58, 67, 68, 1882, 1926, 1964], "_assert_async": [58, 67, 68, 1926], "msg": [58, 67, 68, 1032, 1034, 1930, 1947], "le": [58, 67, 68, 351, 1228, 1391, 1392, 1537, 1538, 1882, 1897, 1926, 1947, 1964], "scalar_tensor_1": [58, 67, 68], "_assert_async_1": [58, 67, 68], "sym_constrain_range_for_s": [58, 67, 68, 1882, 1926], "i1": [58, 67, 68, 1941], "i2": [58, 67, 68], "i3": [58, 67, 68], "_constrain_as_valu": [58, 67, 68], "sym_constrain_rang": [58, 67, 68, 1882, 1926], "test_decor": 58, "dynamicshapeifguard": [58, 63, 66], "body_graph_0": [58, 66, 69], "map_impl": [58, 66, 69], "slice_2": [58, 66], "9223372036854775807": [58, 66, 1198, 1653, 1894, 1971], "new_x_shap": [58, 66], "pos0": [58, 64], "tuple0": [58, 64], "myarg": [58, 64], "mykw0": [58, 64], "mykwarg": [58, 64], "input0": [58, 64], "input1": [58, 64, 750, 1355, 1368, 1369, 1426, 1443, 1504, 1514, 1515, 1556, 1882, 1903, 1925], "arg7_1": [58, 64], "mul_2": [58, 64], "mul_3": [58, 64], "mul_4": [58, 64], "mul_5": [58, 64], "mul_6": [58, 64], "monkei": [58, 59, 64, 66, 1862], "cow": [58, 59, 64, 66], "pig": [58, 59, 64, 66], "contextlib": [58, 62], "nullcontext": [58, 62], "tree_flatten": 58, "dim1_x": [58, 66], "anim": 58, "moo": 58, "specializedattribut": 58, "staticforloop": [58, 63], "unrol": [58, 63, 1883, 1884, 1925, 1959], "ret": [58, 63, 1909, 1936], "add_3": [58, 63], "add_4": [58, 63], "add_5": [58, 63], "add_6": [58, 63], "add_7": [58, 63], "add_8": [58, 63], "add_9": [58, 63], "staticif": [58, 63], "setattr": [58, 60, 1884], "not_supported_yet": [58, 60, 66], "overli": [58, 60, 1909], "type_reflection_method_rewrit": [58, 60], "gain": [70, 1693, 1902, 1951, 1961, 1963], "fxe0010": [70, 1923], "diagnosticopt": [70, 72, 1923], "verbosity_level": [70, 72, 1923], "torch_log": [70, 72, 670, 942, 1890, 1956, 1957, 1969], "onnx_diagnost": [70, 72, 670], "fxe0008": [70, 1923], "onnxscript": [71, 1923, 1924, 1925], "torchlib": [71, 75], "fxonnxinterpret": 71, "onnx": [72, 73, 75, 76, 77, 670, 1654, 1655, 1673, 1674, 1675, 1880, 1898, 1931, 1951], "endors": 72, "noteworthi": 72, "_intern": [72, 77, 1942], "todo": [73, 74, 816, 849, 851, 852, 1950, 1958, 1965], "dynamo_export": [73, 1923, 1925], "disregard": [75, 76, 78], "indexerror": [75, 1638, 1640], "typeerror": [75, 1643, 1909, 1929, 1947, 1970], "opschema": [75, 1923], "onnxfunct": [76, 78, 1923], "perfect": 76, "nearest": [76, 769, 775, 777, 1331, 1486, 1488, 1533, 1544, 1602, 1604, 1723, 1751, 1907], "highest": [76, 670, 1342, 1733, 1734, 1766, 1932, 1947], "stringent": 76, "op_level_debug": [76, 78, 1923], "elementwise_dtyp": 77, "_ref": 77, "type_promot": 77, "absent": [78, 1908], "signifi": 78, "g_cpu": 79, "g_cuda": 79, "bytetensor": [79, 1004, 1005, 1043, 1044, 1152, 1313, 1320, 1772, 1864, 1935, 1943, 1946], "2147483647": 79, "0x8000_0000_0000_0000": [79, 1293, 1935], "0xffff_ffff_ffff_ffff": [79, 1293, 1935], "random_devic": 79, "1516516984916": 79, "new_stat": [79, 1043, 1044, 1320, 1772, 1864, 1935], "void": [79, 974, 1016, 1907, 1914, 1959], "g_cpu_oth": 79, "abs_": [83, 1882, 1897, 1946], "acosh": [87, 113, 857, 1882, 1897, 1926, 1964], "batch1": [90, 91, 142, 143, 676, 910, 1882], "batch2": [90, 91, 142, 143, 160, 676, 910, 1882], "tensor1": [92, 93, 94, 95, 677, 678, 1295, 1748, 1882], "tensor2": [92, 93, 94, 95, 305, 395, 677, 678, 1295, 1748, 1882], "mat1": [96, 97, 544, 679, 1164, 1221, 1305, 1797, 1801, 1802, 1816, 1882, 1964], "mat2": [96, 97, 404, 544, 679, 922, 1164, 1221, 1305, 1797, 1801, 1802, 1816, 1882, 1964], "mat": [98, 99, 530, 680, 1326, 1729, 1794, 1797, 1816, 1882, 1945], "vec1": [100, 101, 681, 1882], "vec2": [100, 101, 279, 451, 681, 1146, 1711, 1882], "keepdim": [103, 105, 106, 107, 109, 125, 126, 345, 383, 398, 400, 401, 402, 405, 419, 420, 421, 422, 443, 460, 469, 545, 555, 605, 683, 685, 686, 687, 689, 864, 865, 1222, 1253, 1257, 1270, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1330, 1331, 1332, 1443, 1572, 1667, 1720, 1723, 1818, 1819, 1823, 1867, 1868, 1882, 1897, 1941, 1964], "rtol": [104, 335, 684, 898, 899, 1189, 1255, 1258, 1675, 1881, 1882, 1947], "atol": [104, 335, 684, 898, 899, 1189, 1255, 1258, 1267, 1675, 1881, 1882, 1909, 1947], "08": [104, 335, 684, 920, 1189, 1247, 1369, 1448, 1576, 1679, 1680, 1681, 1683, 1689, 1690, 1693, 1706, 1778, 1882], "equal_nan": [104, 335, 684, 1189, 1882, 1947], "arcco": [112, 1882, 1926, 1947], "acosh_": [114, 1882, 1897], "arccosh": [114, 1882, 1926], "arcsin": [116, 871, 1882, 1926, 1940], "arcsinh": [118, 1882, 1926], "atan2_": [121, 1882, 1897], "arctan2": [121, 1882, 1926], "arctan": [122, 1882, 1926], "arctanh": [124, 1882, 1926], "asinh": [134, 859, 1882, 1897, 1926, 1940, 1964], "atan": [138, 621, 622, 860, 1882, 1897, 1926, 1940, 1964], "atanh": [140, 862, 1882, 1897, 1926, 1940, 1964], "wrt": [141, 898, 899], "60521": [141, 883], "issuecom": [141, 883], "867061780": [141, 883], "texttt": [144, 145, 684, 1189, 1342, 1947], "bernoulli": [145, 750, 1346, 1372, 1373, 1374, 1375, 1379, 1386, 1404, 1518, 1519, 1520, 1521, 1526, 1880, 1882, 1897, 1926, 1948], "preserve_format": [146, 161, 163, 166, 169, 170, 171, 180, 197, 200, 231, 258, 288, 316, 384, 515, 570, 939, 1074, 1128, 1672, 1732, 1734, 1736, 1878, 1909, 1943], "minlength": [147, 913, 1882], "bitwise_and": [149, 1882, 1926, 1964], "bitwise_left_shift": [151, 1882, 1926], "bitwise_not": [153, 1882, 1897, 1926, 1964], "bitwise_or": [155, 1882, 1926, 1964], "bitwise_right_shift": [157, 1882, 1926], "bitwise_xor": [159, 1882, 1926, 1964], "uint8": [163, 233, 607, 683, 689, 1125, 1721, 1724, 1725, 1748, 1931, 1942, 1943, 1945, 1946, 1972], "cauchi": [164, 1880, 1904, 1912, 1926, 1948], "dfrac": [164, 368, 598, 1369, 1515, 1628, 1661, 1664], "complex32": [170, 1362, 1363, 1364, 1508, 1509, 1510, 1673, 1946, 1947], "int8": [171, 438, 719, 914, 915, 916, 917, 918, 919, 1125, 1282, 1283, 1284, 1285, 1931, 1934, 1940, 1942, 1943, 1946, 1972], "input2": [174, 449, 450, 507, 750, 1355, 1368, 1369, 1426, 1443, 1504, 1514, 1515, 1556, 1882, 1903, 1925], "clamp_": [179, 1882, 1897], "uncoalesc": [181, 319, 1809], "coo": [181, 314, 319, 333, 604, 1164, 1797, 1801, 1806, 1807, 1808, 1809, 1810, 1811, 1880, 1891, 1943, 1947], "inttensor": [182, 199, 1174, 1290, 1291, 1377, 1943, 1946], "csr": [182, 199, 334, 573, 578, 1378, 1797, 1801, 1802, 1808, 1811, 1891, 1947], "sparse_csr": [182, 199, 573, 578, 1801, 1802, 1804, 1808, 1811, 1940], "nnz": [182, 534, 573, 574, 575, 577, 578, 898, 1334, 1799, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1888, 1940], "int32": [182, 199, 304, 312, 316, 437, 607, 926, 1074, 1086, 1087, 1122, 1125, 1126, 1231, 1242, 1243, 1244, 1262, 1290, 1357, 1721, 1758, 1931, 1940, 1942, 1943, 1946, 1961, 1972], "mkl": [182, 199, 1880, 1906, 1921, 1926, 1940], "routin": [182, 199, 866, 1273, 1796, 1824, 1940], "downcast": [182, 199], "to_sparse_csr": [182, 199, 574, 575, 1798, 1801, 1802, 1882, 1926, 1940], "conj_phys": [185, 955, 1882, 1926, 1940, 1964], "contiguous_format": [186, 322, 489, 490, 1073, 1614, 1621, 1943], "non_block": [187, 200, 570, 593, 1200, 1434, 1653, 1882, 1907, 1942, 1964], "copysign": [189, 1882, 1926], "fweight": [196, 962, 1882], "aweight": [196, 962, 1882], "sparse_dim": [209, 535, 536, 1797, 1801, 1805, 1809, 1882, 1926, 1940], "resize_as_": [212, 1882, 1897, 1940], "set_": [212, 489, 1882], "transpose_": [212, 1882, 1940], "zero_": [212, 1246, 1524, 1882, 1897, 1898, 1915, 1940], "dim1": [216, 218, 219, 559, 582, 583, 1060, 1062, 1063, 1235, 1827, 1845, 1882, 1964], "dim2": [216, 218, 219, 1060, 1062, 1063, 1235, 1882, 1964], "digamma": [222, 1882, 1897, 1926, 1941, 1964], "laid": 224, "outermost": [224, 1153], "channels_last": [224, 1200, 1434, 1614, 1621, 1943], "rounding_mod": [226, 227, 228, 229, 1067, 1068, 1117, 1120, 1742, 1853, 1882, 1964], "split_size_or_sect": [232, 293, 609, 1812], "eq": [235, 1882, 1897, 1926, 1964], "erf": [238, 629, 630, 1882, 1897, 1926, 1940, 1941, 1964], "erfc": [240, 631, 632, 1882, 1897, 1926, 1941, 1964], "front": [245, 942, 1273, 1437, 1898, 1910], "lambd": [249, 289, 1390, 1471, 1536, 1592, 1676, 1882], "fill_valu": [251, 436, 1127, 1128, 1357, 1882, 1907, 1964], "tall": [251, 1259, 1264, 1909], "start_dim": [254, 1111, 1380, 1882], "end_dim": [254, 1111, 1380, 1882], "float_pow": [260, 1882, 1926], "floor_divid": [264, 1067, 1882, 1926, 1940], "divisor": [267, 268, 479, 480, 758, 759, 1067, 1117, 1120, 1143, 1348, 1349, 1381, 1485, 1501, 1502, 1742, 1853], "fmod": [268, 1742, 1882, 1926, 1964], "mantissa": [271, 471, 1122, 1224, 1766, 1882, 1907, 1918], "gcd": [274, 1882, 1926, 1964], "geometr": [277, 769, 775, 1533, 1544, 1602, 1866, 1880, 1926, 1948, 1966], "ordin": [280, 1806, 1807, 1808, 1810, 1811, 1943], "greater_equ": [285, 1882, 1926], "hypot": [295, 1882, 1926, 1964], "igamma": [299, 1882, 1926, 1964], "igammac": [301, 1882, 1926, 1964], "3100": [302, 473, 1170, 1740], "3553j": [302, 473, 1170, 1740], "5445": [302, 473, 1170, 1740], "7896j": [302, 473, 1170, 1740], "6492": [302, 473, 1170, 1740], "0633j": [302, 473, 1170, 1740], "0638": [302, 473, 1170, 1740], "8119j": [302, 473, 1170, 1740], "3553": [302, 1170], "7896": [302, 1170], "0633": [302, 1170, 1247, 1899], "8119": [302, 1170], "index_add_": [303, 888, 1171, 1172, 1882, 1919], "index_copy_": [305, 1882], "index_fill_": [307, 1882, 1897], "index_put_": [309, 1882], "include_self": [312, 506, 507, 1173, 1757, 1882, 1964], "identit": 312, "amax": [312, 507, 686, 687, 1801, 1882, 1926, 1964], "amin": [312, 507, 685, 687, 1801, 1882, 1926, 1964], "fill_": [312, 1200, 1226, 1434, 1743, 1882, 1897, 1915, 1942], "72": [312, 607, 1153, 1931], "uint8_t": [317, 1673], "retain_grad": [326, 1882, 1904, 1926], "requires_grad_": [326, 438, 1200, 1357, 1434, 1517, 1798, 1801, 1839, 1882, 1897, 1904, 1946, 1969], "n_fft": [342, 546, 1197, 1820, 1882], "hop_length": [342, 546, 1197, 1820, 1882], "win_length": [342, 546, 1197, 1820, 1882], "center": [342, 546, 769, 775, 1092, 1197, 1498, 1533, 1544, 1602, 1690, 1712, 1780, 1820, 1882, 1904, 1926, 1945], "onesid": [342, 546, 1197, 1820, 1882, 1964], "return_complex": [342, 546, 1197, 1820, 1882], "element_s": [344, 425, 1882, 1897, 1926, 1942], "lcm": [347, 1882, 1926], "ldexp": [349, 1122, 1882, 1926], "lerp": [353, 1882, 1926], "lt": [354, 386, 1227, 1881, 1882, 1897, 1926, 1955, 1956, 1964], "less_equ": [357, 1882, 1926], "lgamma": [359, 641, 642, 1882, 1926, 1964], "ln": [368, 1229, 1941], "logical_and": [374, 1882, 1926, 1964], "logical_not": [376, 1583, 1882, 1897, 1899, 1926, 1964], "logical_or": [378, 1882, 1926, 1964], "logical_xor": [380, 1882, 1926, 1964], "pivot": [387, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1290, 1291, 1292, 1722, 1882], "get_info": [387, 1290], "lu_data": [388, 1291, 1292, 1882], "lu_pivot": [388, 1291, 1292, 1882], "masked_fill_": [390, 1583, 1882, 1897, 1898], "booltensor": [391, 393, 725, 1294, 1477, 1875, 1943, 1946], "masked_scatter_": [392, 1882], "mvlgamma": [416, 1882, 1926], "posinf": [417, 418, 1328, 1882], "neginf": [417, 418, 1328, 1882], "nan_to_num": [418, 1882, 1926], "interpol": [421, 469, 775, 776, 777, 809, 1226, 1331, 1486, 1487, 1488, 1498, 1533, 1602, 1603, 1604, 1723, 1861, 1882, 1933], "ne": [429, 1628, 1661, 1669, 1882, 1897, 1926, 1964], "8182e": 435, "5765e": 435, "41": [435, 1075, 1259, 1605, 1660, 1722], "0545e": 435, "0949e": 435, "4842e": [435, 1075], "0000e": [435, 1075, 1115, 1278, 1287, 1328, 1660, 1778, 1780, 1781, 1786, 1787], "00": [435, 1075, 1115, 1278, 1287, 1328, 1660, 1674, 1778, 1780, 1781, 1786, 1787, 1881, 1925], "141592": [436, 1127], "1416": [436, 1056, 1127, 1839], "from_numpi": [438, 869, 870, 1839, 1888, 1959], "array_lik": [438, 869, 1806, 1807, 1808, 1809, 1810, 1811, 1839, 1899], "nextaft": [441, 1882, 1926, 1964], "fro": [443, 1232, 1253, 1257, 1270, 1638, 1647, 1667, 1882], "not_equ": [446, 1882, 1926], "resolve_conj": [448, 955, 1882, 1926], "resolve_neg": [448, 1882, 1926], "shorthand": [448, 1220], "input3": [450, 1882], "transpos": [450, 583, 584, 607, 682, 731, 732, 733, 934, 935, 1072, 1140, 1230, 1231, 1237, 1240, 1243, 1250, 1261, 1264, 1365, 1366, 1367, 1485, 1511, 1512, 1513, 1583, 1622, 1623, 1625, 1627, 1656, 1710, 1824, 1826, 1827, 1834, 1848, 1882, 1897, 1899, 1904, 1918, 1925, 1926, 1933, 1940, 1944, 1946, 1964], "polygamma": [456, 1882, 1926, 1941], "q_per_channel_axi": [463, 464, 1882, 1926], "zero_point": [464, 466, 728, 729, 730, 731, 732, 733, 734, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 760, 762, 763, 764, 765, 767, 770, 771, 789, 792, 809, 810, 811, 812, 815, 842, 1086, 1087, 1724, 1725, 1726, 1727, 1728, 1882, 1931, 1932], "qtensor": [468, 1882], "uniform": [471, 598, 912, 1370, 1452, 1516, 1731, 1732, 1780, 1880, 1902, 1926, 1948, 1964], "queu": [476, 979, 1907], "life": [476, 976], "cycl": [476, 883, 976, 1698, 1704, 1904, 1930], "unexpectedli": [476, 1946], "enable_grad": [478, 1886, 1948], "0100": [478, 865, 1254, 1724], "0200": 478, "0300": [478, 1920], "maxnorm": [481, 482, 1743, 1882], "tile": [483, 1882, 1907, 1926, 1940, 1959], "repeat_interleav": [483, 1861, 1882, 1926, 1933], "output_s": [484, 731, 732, 733, 756, 757, 1339, 1340, 1341, 1343, 1344, 1345, 1366, 1381, 1382, 1383, 1430, 1431, 1432, 1485, 1492, 1493, 1494, 1495, 1496, 1497, 1527, 1528, 1529, 1560, 1561, 1562, 1744, 1882, 1899, 1964], "is_leaf": [485, 1882, 1897, 1899, 1926, 1959], "saved_weight": 486, "loaded_weight": 486, "5503": 486, "4926": [486, 1915], "1158": 486, "8303": 486, "1007": 486, "9853": 486, "2316": 486, "6606": 486, "resiz": [489, 490, 514, 535, 536, 1125, 1126, 1130, 1486, 1533, 1544, 1882, 1897, 1926, 1942, 1964], "shift": [495, 915, 918, 1092, 1099, 1346, 1352, 1353, 1354, 1379, 1473, 1526, 1749, 1882, 1885, 1964], "decim": [497, 498, 1751, 1882, 1918, 1972], "scatter_": [502, 505, 1755, 1882], "scatter_add_": [503, 504, 1756, 1861, 1882], "scatter_reduce_": [503, 506, 1757, 1882], "axi": [503, 505, 507, 812, 815, 953, 1071, 1086, 1112, 1142, 1165, 1724, 1744, 1749, 1750, 1874, 1882, 1888, 1910, 1925, 1929, 1931, 1959, 1964, 1968], "4600": 503, "2300": 503, "scatter_reduc": [507, 1861, 1882, 1926, 1964], "sgn": [512, 1121, 1776, 1882, 1897, 1899, 1926, 1940], "int16": [515, 1125, 1283, 1940, 1942, 1943, 1946, 1972], "dense_dim": [533, 535, 536, 573, 574, 575, 577, 578, 1809, 1882, 1926, 1940], "nse": [534, 1940], "randint": [534, 913, 962, 1115, 1306, 1357, 1483, 1516, 1517, 1621, 1805, 1882, 1886, 1898, 1926, 1945, 1948], "6550": 534, "2397": 534, "1611": 534, "0779": [534, 1237, 1719, 1875], "2326": 534, "0558": 534, "4711": 534, "9678": 534, "5138": 534, "0411": 534, "9417": 534, "5158": 534, "0793": 534, "0036": [534, 1298], "2569": 534, "1055": 534, "sparse_coo": [534, 573, 1334, 1801, 1804, 1805, 1809, 1940, 1943], "split_siz": [537, 1812, 1882, 1964], "squeez": [543, 683, 685, 686, 687, 689, 1222, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1332, 1515, 1720, 1805, 1818, 1819, 1823, 1867, 1868, 1882, 1897, 1925, 1926, 1933, 1944, 1964], "pad_mod": [546, 1820, 1882], "typedstorag": [547, 1880, 1920, 1942], "untypedstorag": [547, 603, 1880, 1920, 1942], "untyped_storag": 547, "compute_uv": [557, 1264, 1265, 1824, 1882], "axis0": [558, 1826, 1882], "axis1": [558, 1826, 1882], "dim0": [559, 582, 583, 1827, 1845, 1882], "indices_or_sect": [568, 1070, 1163, 1840, 1873], "5044": 570, "0005": [570, 1702, 1708], "3310": 570, "0584": [570, 1824], "cuda0": [570, 1907, 1913, 1946], "masked_grad": [571, 1882], "sparse_mask": [571, 1882, 1926], "mkldnn": [572, 1210, 1880, 1926], "sparsedim": 573, "blocksiz": [573, 574, 575, 1806, 1807, 1808, 1882, 1940], "sparse_csc": [573, 577, 1804, 1808, 1810, 1940], "sparse_bsr": [573, 575, 1807, 1808, 1940], "sparse_bsc": [573, 574, 1806, 1808, 1940], "bsr": [573, 575, 1807, 1808, 1947], "bsc": [573, 574, 1806, 1808, 1947], "csc": [573, 577, 1808, 1810, 1947], "minu": [573, 574, 575, 577, 578, 1941], "crow_indic": [573, 575, 578, 1799, 1801, 1802, 1804, 1807, 1808, 1811, 1882, 1926, 1940, 1947], "col_indic": [573, 575, 578, 1801, 1802, 1804, 1807, 1808, 1811, 1882, 1926, 1940, 1947], "sparsecsr": [573, 1845, 1940], "row_indic": [574, 577, 1806, 1810, 1882, 1926, 1940, 1947], "ccol_indic": [574, 577, 1806, 1810, 1882, 1926, 1940, 1947], "_nnz": [576, 577, 578, 1926], "012766935862600803": 579, "5415473580360413": 579, "08909505605697632": 579, "7729271650314331": 579, "unitriangular": [584, 1263, 1848, 1882], "tril": [586, 1583, 1882, 1926, 1959], "triu": [588, 1632, 1848, 1882, 1925, 1926, 1959], "trunc": [592, 667, 668, 677, 1067, 1110, 1117, 1120, 1751, 1882, 1897, 1926, 1940, 1964], "sizedim": 597, "return_invers": [599, 600, 1857, 1858, 1882], "return_count": [599, 600, 1857, 1858, 1882], "unsqueez": [602, 1092, 1221, 1261, 1377, 1453, 1632, 1842, 1882, 1909, 1926, 1933, 1940, 1944, 1945, 1964], "subspac": [607, 1264, 1440, 1712, 1824, 1825], "span": [607, 1033, 1034, 1370, 1824, 1930, 1936], "foral": 607, "proportion": [607, 775, 1486, 1602], "9482": [607, 1177], "0310": 607, "4999": 607, "5316": 607, "1520": 607, "7472": 607, "5617": 607, "8649": 607, "4724": [607, 1915], "0334": 607, "2976": 607, "8499": 607, "2109": 607, "9913": 607, "9607": 607, "6123": 607, "1064483442": 607, "1124191867": 607, "1069546515": 607, "1089989247": 607, "1105482831": 607, "1061112040": 607, "1057999968": 607, "1084397505": 607, "1071760287": 607, "1123489973": 607, "1097310419": 607, "1084649136": 607, "1101533110": 607, "1073668768": 607, "1082790149": 607, "1088634448": 607, "1000000000": 607, "0047": 607, "0310j": 607, "5316j": 607, "7472j": 607, "8649j": 607, "0334j": 607, "8499j": 607, "9913j": 607, "6123j": 607, "202": 607, "154": [607, 1921], "59": [607, 1850, 1852], "182": 607, "243": [607, 1197, 1824], "253": 607, "188": 607, "185": [607, 1969], "252": [607, 1921], "191": 607, "63": [607, 1921, 1931], "240": 607, "227": 607, "165": 607, "190": 607, "146": 607, "106": 607, "205": 607, "112": [607, 1969], "206": 607, "189": 607, "95": [607, 1700, 1703, 1704], "147": 607, "43": 607, "246": [607, 1969], "87": 607, "235": 607, "226": 607, "254": [607, 1921], "111": [607, 1674, 1925], "117": 607, "177": 607, "28": [607, 736, 1055, 1846, 1925, 1956, 1963], "xlogi": [612, 1882, 1926, 1941], "inductor": [670, 942, 1890, 1926, 1951, 1954, 1955, 1956, 1957, 1959, 1961, 1963, 1966, 1967, 1969, 1971], "aot_graph": [670, 1890], "aot_joint_graph": [670, 1890], "ddp_graph": [670, 1890], "graph_cod": [670, 1890], "graph_break": [670, 1890, 1954, 1959, 1960, 1967], "graph_siz": 670, "trace_sourc": 670, "trace_cal": 670, "output_cod": [670, 1890, 1961, 1969], "perf_hint": [670, 942], "post_grad_graph": 670, "toggl": [670, 1907], "supress": 670, "silenc": 670, "lowest": [670, 932, 1328, 1637, 1638, 1646, 1647, 1733, 1734, 1909, 1947], "notset": 670, "torchinductor": [670, 1890, 1951, 1956, 1957, 1959, 1961], "joint": [670, 1890], "ddpoptim": [670, 1890], "unregist": [670, 1890, 1894, 1925], "cosin": [673, 674, 959, 960, 1368, 1369, 1515, 1696, 1697, 1704, 1782, 1927, 1959], "3348": 673, "5889": 673, "2005": [673, 1868, 1969], "1584": 673, "2294": [673, 1300], "2004": 673, "3690": 673, "7298": [673, 1741], "hyperbol": [674, 872, 875, 960, 1474, 1791, 1838], "uniform_": [674, 875, 912, 1880, 1882, 1897, 1902, 1909, 1941, 1948], "3192": 674, "9915": 674, "9674": 674, "7151": 674, "7791": 674, "3120": [674, 957], "2979": 674, "1341": 674, "_i": [675, 676, 677, 678, 679, 910, 912, 915, 918, 922, 937, 1067, 1117, 1224, 1226, 1323, 1482, 1715, 1719, 1738, 1774, 1821, 1875, 1941], "0202": 675, "0985": 675, "3506": [675, 1290], "6056": 675, "3944": 675, "9732": 675, "3497": 675, "6245": [675, 1232], "4022": [675, 1054, 1824], "3743": 675, "7724": 675, "5811": 675, "8017": 675, "7695": 675, "3930": 675, "3672": [675, 972, 1233], "1450": [675, 1805], "6971": 675, "0736": [675, 1915], "0994": 675, "3216": 675, "7845": 675, "1610": 675, "1868": 675, "4090": 675, "9902": [675, 972, 1233], "3667": [675, 957], "3925": 675, "6147": 675, "sum_": [676, 1197, 1252, 1269, 1347, 1348, 1349, 1362, 1363, 1364, 1370, 1402, 1403, 1422, 1437, 1441, 1443, 1818, 1819, 1820, 1841, 1846, 1867, 1868, 1869, 1941], "mathbin": [676, 679, 680, 910, 922, 1802], "doubletensor": [676, 677, 678, 679, 680, 910, 1764, 1943, 1946], "tensorfloat32": [676, 679, 910, 922, 1295, 1305, 1362, 1363, 1364, 1365, 1366, 1367, 1421, 1508, 1509, 1510, 1511, 1512, 1513, 1550, 1766, 1907, 1918], "rocm": [676, 679, 910, 922, 1295, 1305, 1362, 1363, 1364, 1365, 1366, 1367, 1387, 1405, 1421, 1880], "6311": 676, "0503": 676, "9768": [676, 1915], "0362": 676, "1653": 676, "8185": 676, "4255": [676, 1323], "6760": 676, "9453": 676, "5743": 676, "8202": 676, "3691": 676, "0943": 676, "1109": [676, 1388, 1787], "4730": [676, 1841], "histor": [677, 1029, 1374, 1906, 1915, 1920], "2312": [677, 1805], "6496": 677, "1312": 677, "0428": 677, "4292": 677, "1030": 677, "5369": 677, "9829": 677, "0430": 677, "8635": 678, "6391": 678, "6174": 678, "7617": 678, "5879": 678, "7388": 678, "8353": 678, "6249": 678, "6511": 678, "8716": 679, "4671": 679, "3746": 679, "7573": 679, "9555": 679, "8681": 679, "3768": 680, "5565": 680, "otim": [681, 1221, 1385, 1532], "conj": [682, 956, 1088, 1089, 1091, 1093, 1100, 1102, 1106, 1107, 1109, 1230, 1231, 1237, 1239, 1258, 1746, 1747, 1882, 1909, 1912, 1926, 1946, 1964], "mh": [682, 933, 934, 935, 1237, 1824, 1882, 1926, 1944, 1946], "lvert": [684, 1189, 1482, 1569, 1947], "rvert": [684, 1189, 1947], "leq": [684, 911, 912, 957, 1090, 1092, 1189, 1221, 1225, 1240, 1246, 1357, 1376, 1437, 1439, 1441, 1517, 1568, 1571, 1777, 1820, 1902, 1941], "elementwis": [684, 957, 988, 1015, 1016, 1115, 1117, 1338, 1397, 1398, 1399, 1471, 1592, 1866, 1884, 1899, 1912, 1941], "07": [684, 809, 810, 811, 812, 815, 933, 1075, 1238, 1241, 1246, 1258, 1259, 1265, 1288, 1291, 1627, 1675, 1682, 1781, 1786, 1824, 1925], "09": [684, 1682, 1694, 1888, 1909, 1947], "8177": 685, "4878": 685, "2491": 685, "9130": 685, "7158": 685, "1775": 685, "0992": 685, "4817": 685, "0053": 685, "0164": 685, "3738": 685, "0507": [685, 1925], "9700": 685, "1106": 685, "0318": 685, "0816": [685, 1290], "6451": 686, "4866": 686, "2987": 686, "3312": 686, "5744": 686, "2980": [686, 1899], "8397": 686, "2713": 686, "9128": 686, "9214": 686, "7268": 686, "2995": 686, "9023": [686, 1231], "4853": 686, "9075": 686, "6165": 686, "180": [688, 1056, 1730], "14159": [688, 1839], "135": 688, "45": [688, 1353, 1354, 1398, 1399, 1473, 1660, 1925], "ao": [690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 1931, 1932, 1933], "batch_norm": [690, 691, 1210, 1882, 1926], "fuse": [690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 782, 783, 792, 794, 795, 796, 804, 837, 849, 850, 942, 1214, 1215, 1583, 1621, 1622, 1623, 1624, 1625, 1679, 1680, 1766, 1892, 1897, 1900, 1925, 1927, 1931, 1932, 1933, 1934, 1959, 1961, 1968], "3d": [691, 694, 697, 725, 730, 733, 757, 759, 764, 769, 1302, 1341, 1345, 1349, 1352, 1354, 1364, 1367, 1374, 1375, 1381, 1383, 1397, 1399, 1429, 1440, 1486, 1494, 1497, 1498, 1502, 1510, 1513, 1521, 1527, 1529, 1544, 1559, 1571, 1602, 1899, 1918, 1931, 1940, 1945], "bn": [692, 693, 694, 695, 696, 697, 804, 850, 1072, 1210, 1622, 1624, 1920, 1927, 1931, 1932], "qat": [702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 720, 721, 722, 723, 782, 783, 836, 1931, 1932, 1933], "dilat": [702, 703, 704, 705, 706, 707, 708, 709, 715, 716, 717, 720, 721, 728, 729, 730, 731, 732, 733, 762, 763, 764, 772, 773, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1527, 1557, 1558, 1559, 1601, 1727, 1728, 1882, 1925, 1964], "padding_mod": [702, 703, 704, 705, 706, 707, 708, 709, 715, 716, 717, 720, 721, 728, 729, 730, 731, 732, 733, 762, 763, 764, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415, 1533, 1882, 1964], "momentum": [702, 703, 704, 705, 706, 707, 713, 714, 726, 727, 741, 742, 743, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1503, 1543, 1683, 1690, 1692, 1698, 1704, 1706, 1882, 1915, 1917, 1927, 1964], "freeze_bn": [702, 703, 704, 705, 706, 707], "qconfig": [702, 703, 704, 705, 706, 707, 708, 709, 710, 720, 721, 722, 723, 778, 779, 781, 784, 785, 786, 787, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 851, 852, 1950], "batchnorm1d": [702, 705, 1407, 1473, 1503, 1920, 1933], "fakequant": [702, 703, 704, 705, 706, 707, 708, 709, 710, 720, 721, 722, 723, 792, 852], "weight_fake_qu": [702, 703, 704, 705, 706, 707, 708, 709, 720, 721], "quant": [702, 703, 704, 705, 706, 707, 708, 709, 710, 720, 721, 722, 780, 782, 783, 828, 851, 852, 1086, 1087, 1931, 1932], "batchnorm3d": [704, 707, 709, 714, 1409, 1473, 1503, 1933], "num_featur": [713, 714, 726, 727, 741, 742, 743, 1200, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1473, 1535, 1915], "qint8": [718, 719, 746, 751, 754, 755, 762, 763, 764, 771, 782, 784, 789, 810, 831, 848, 849, 851, 852, 1673, 1724, 1725, 1931, 1933, 1934, 1942, 1946, 1947], "from_float": [722, 728, 729, 730, 735, 736, 746, 754, 787, 807, 813, 816, 828, 1931], "qparams_dict": [722, 728, 729, 730, 754], "hidden_s": [724, 750, 751, 755, 1386, 1387, 1404, 1405, 1449, 1450, 1451, 1882], "num_lay": [724, 750, 1386, 1404, 1449, 1450, 1478, 1480, 1882, 1915], "batch_first": [724, 725, 750, 1386, 1404, 1440, 1449, 1450, 1477, 1479, 1481, 1654, 1656, 1657, 1659, 1882, 1911], "bidirect": [724, 750, 1386, 1404, 1449, 1450, 1882], "_lstmlayer": 724, "nnqa": 724, "h0": [724, 750, 752, 1386, 1404, 1449], "c0": [724, 752, 1404, 1969], "hn": [724, 750, 752, 1386, 1387, 1404, 1449], "cn": [724, 752, 1200, 1404], "weight_ih": [724, 1387, 1405, 1451], "weight_hh": [724, 1387, 1405, 1451], "embed_dim": [725, 1440], "num_head": [725, 1440, 1882], "add_bias_kv": [725, 1440], "add_zero_attn": [725, 1440, 1882], "kdim": [725, 1440], "vdim": [725, 1440], "dequant": [725, 778, 780, 782, 783, 789, 791, 851, 1882, 1926, 1932, 1934, 1947, 1949], "mha": [725, 1440], "conver": 725, "key_padding_mask": [725, 1440, 1882], "need_weight": [725, 1440, 1882], "attn_mask": [725, 1440, 1583, 1882], "average_attn_weight": [725, 1440, 1882], "is_caus": [725, 1440, 1480, 1481, 1583, 1882], "attn_output_weight": [725, 1440], "unmask": [725, 1477], "causal": [725, 1440, 1477, 1478, 1479, 1480, 1481, 1583], "attn_weight": [725, 1440, 1583], "attn_output": [725, 1440], "quint8": [728, 729, 730, 731, 732, 733, 735, 736, 746, 762, 763, 764, 771, 782, 784, 789, 809, 810, 811, 812, 815, 817, 849, 851, 1673, 1724, 1725, 1726, 1727, 1728, 1931, 1933, 1934, 1942, 1946, 1947], "learnabl": [728, 729, 730, 731, 732, 733, 735, 736, 746, 750, 754, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1377, 1378, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1442, 1449, 1451, 1473, 1525, 1577, 1915], "q_input": [728, 729, 730, 731, 732, 733, 762, 763, 764], "quantize_per_tensor": [728, 729, 730, 731, 732, 733, 746, 747, 748, 762, 763, 764, 1726, 1727, 1728, 1882, 1926, 1931], "unequ": [729, 730, 731, 732, 733, 1363, 1364, 1366, 1367], "50": [729, 731, 732, 733, 762, 814, 1256, 1306, 1348, 1349, 1357, 1362, 1363, 1364, 1366, 1367, 1382, 1383, 1402, 1403, 1427, 1428, 1429, 1484, 1510, 1511, 1513, 1517, 1528, 1529, 1691, 1836, 1899, 1907, 1959], "56": [730, 1859, 1940, 1963], "output_pad": [731, 732, 733, 1365, 1366, 1367, 1413, 1414, 1415, 1511, 1512, 1513, 1882, 1964], "qnnpack": [731, 732, 746, 754, 845, 846, 849, 851, 852, 1931, 1933], "convtranspose2d": [731, 1414, 1512, 1621, 1861, 1933], "nnq": [731, 732, 733, 778, 779, 780, 854, 1931], "downsampl": [731, 732, 733, 1366, 1486, 1498, 1533, 1544], "upsampl": [731, 732, 733, 769, 776, 777, 809, 1366, 1487, 1488, 1498, 1533, 1544, 1603, 1604], "fbgemm": [732, 733, 746, 754, 823, 845, 846, 849, 851, 852, 1931, 1932, 1959, 1960], "cubic": [733, 1383, 1529, 1533], "num_embed": [735, 736, 1377, 1378, 1525], "embedding_dim": [735, 736, 1377, 1378, 1406, 1524, 1525], "padding_idx": [735, 1377, 1378, 1524, 1525, 1882, 1964], "scale_grad_by_freq": [735, 736, 1377, 1378, 1524, 1525, 1882, 1964], "_weight": [735, 736, 1377, 1378, 1683, 1689, 1968], "overwritten": [735, 736, 746, 754, 787, 831, 851, 1904, 1909, 1947, 1954], "_embed": [735, 736], "_dim": [735, 736, 1377], "include_last_offset": [736, 1378, 1525, 1882, 1964], "embedding_bag": [736, 1882, 1926], "floatfunct": [737, 1931], "activation_post_process": [737, 789, 1931], "add_relu": [737, 738, 747, 1892, 1926, 1949], "add_scalar": [737, 738, 747, 1926, 1945, 1949], "mul_scalar": [737, 738, 747, 1926, 1949], "collector": 738, "f_add": 738, "num_channel": [739, 1389, 1898], "normalized_shap": [744, 1406, 1547, 1882, 1899, 1964], "elementwise_affin": [744, 1406], "negative_slop": [745, 770, 1420, 1548, 1549, 1882, 1902, 1964], "slope": [745, 770, 1420, 1465, 1902], "bias_": [746, 754], "_featur": [746, 754, 771, 1342, 1355, 1419, 1421, 1504, 1550], "from_refer": [746, 754], "ref_qlinear": [746, 754], "output_scal": [746, 749, 1726, 1882], "output_zero_point": [746, 749, 1726, 1882], "q_add": 747, "qint32": [747, 748, 1673, 1724, 1725, 1931, 1934, 1942, 1946, 1947], "x_0": [748, 1846], "gate": [750, 751, 1385, 1386, 1387, 1404, 1463, 1532, 1586], "r_t": [750, 1386, 1689], "w_": [750, 1340, 1341, 1344, 1345, 1348, 1349, 1351, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1370, 1382, 1383, 1386, 1387, 1403, 1404, 1405, 1428, 1429, 1431, 1432, 1441, 1446, 1447, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1486, 1487, 1488, 1489, 1490, 1491, 1529, 1533], "x_t": [750, 884, 886, 1352, 1353, 1354, 1386, 1397, 1398, 1399, 1404, 1449, 1473, 1677], "b_": [750, 1386, 1387, 1404, 1405, 1422, 1449, 1451, 1841, 1940], "hr": [750, 1386, 1387, 1404, 1912], "h_": [750, 1340, 1341, 1344, 1345, 1348, 1349, 1355, 1360, 1361, 1363, 1364, 1366, 1367, 1382, 1383, 1386, 1387, 1403, 1404, 1421, 1428, 1429, 1430, 1431, 1432, 1446, 1447, 1449, 1451, 1456, 1457, 1459, 1460, 1486, 1487, 1488, 1490, 1491, 1504, 1529, 1533], "z_t": [750, 1386], "iz": [750, 1386, 1387], "hz": [750, 984, 1386, 1387, 1945], "n_t": [750, 1386], "odot": [750, 1386, 1387, 1404, 1405], "h_t": [750, 1386, 1404, 1449], "hadamard": [750, 1386, 1387, 1404, 1405], "multilay": [750, 1386, 1404, 1923], "_t": [750, 1386, 1404, 1690, 1692, 1909, 1927], "b_ih": [750, 1386, 1387, 1404, 1405, 1449, 1451, 1882], "b_hh": [750, 1386, 1387, 1404, 1405, 1449, 1451, 1882], "h_0": [750, 1386, 1404, 1405, 1449], "seq_len": [750, 1386, 1404, 1440, 1449], "pack_padded_sequ": [750, 1386, 1404, 1449, 1653, 1655, 1656, 1911], "num_direct": [750, 1386, 1404, 1449], "h_n": [750, 1386, 1404, 1449], "_size": [750, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1382, 1383, 1386, 1387, 1402, 1403, 1404, 1405, 1427, 1428, 1429, 1430, 1431, 1432, 1449, 1451, 1485, 1529], "_layer": [750, 1386, 1404, 1449], "_direct": 750, "output1": [750, 1342, 1903, 1925], "output2": [750, 1342], "weight_ih_l": [750, 1386, 1404, 1449], "w_ir": [750, 1386], "w_iz": [750, 1386], "w_in": [750, 1386], "weight_hh_l": [750, 1386, 1404, 1449], "w_hr": [750, 1386], "w_hz": [750, 1386], "w_hn": [750, 1386], "bias_ih_l": [750, 1386, 1404, 1449], "b_ir": [750, 1386], "b_iz": [750, 1386], "b_in": [750, 1386], "bias_hh_l": [750, 1386, 1404, 1449], "b_hr": [750, 1386], "b_hz": [750, 1386], "b_hn": [750, 1386], "mathcal": [750, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1377, 1378, 1386, 1387, 1404, 1405, 1419, 1421, 1449, 1451, 1452, 1473, 1735, 1902, 1912], "subtli": [750, 1386, 1692], "gru": [751, 1387, 1450, 1882, 1907, 1926, 1931, 1933], "cell": [751, 753, 755, 1386, 1387, 1404, 1405, 1449, 1451], "hx": [751, 753, 755, 1387, 1405, 1451, 1882], "cx": [753, 1405, 1882], "nonlinear": [755, 1350, 1368, 1394, 1449, 1451, 1461, 1880, 1902, 1940], "elman": [755, 1449, 1451], "adaptiveavgpool2d": [756, 1493, 1861, 1933], "adaptiveavgpool3d": [757, 1494, 1861, 1933], "ceil_mod": [758, 759, 772, 773, 1347, 1348, 1349, 1402, 1403, 1427, 1428, 1429, 1500, 1501, 1502, 1554, 1555, 1557, 1558, 1559, 1727, 1728, 1882, 1964], "count_include_pad": [758, 759, 1347, 1348, 1349, 1500, 1501, 1502, 1882, 1964], "divisor_overrid": [758, 759, 1348, 1349, 1501, 1502, 1882, 1964], "kh": [758, 759, 763, 764, 1348, 1349, 1382, 1383, 1428, 1429, 1501, 1502, 1509, 1510, 1512, 1513, 1528, 1529, 1558, 1559], "kw": [758, 759, 763, 764, 1348, 1349, 1382, 1383, 1428, 1429, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1557, 1558, 1559], "sh": [758, 759, 763, 764, 1501, 1502, 1509, 1510, 1512, 1513, 1558, 1559, 1969], "sw": [758, 759, 762, 763, 764, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1557, 1558, 1559], "avgpool2d": [758, 1501, 1933], "_channel": [758, 759, 762, 763, 764, 1362, 1363, 1364, 1365, 1366, 1367, 1389, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1557, 1558, 1559, 1936], "ih": [758, 759, 763, 764, 1449, 1451, 1501, 1502, 1509, 1510, 1512, 1513, 1558, 1559], "iw": [758, 759, 762, 763, 764, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1557, 1558, 1559], "padh": [758, 759, 763, 764, 1501, 1502, 1509, 1510, 1512, 1513], "padw": [758, 759, 762, 763, 764, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513], "kd": [759, 764, 1349, 1429], "sd": [759, 764], "padd": [759, 764], "formul": [760, 1356, 1376, 1390, 1424, 1470, 1471, 1552, 1569, 1583, 1912, 1940], "min_": [761, 1236, 1237, 1246, 1264, 1824], "max_": [761, 1427, 1428, 1429, 1628, 1661], "convolv": [762, 763, 764, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415, 1508, 1509, 1510, 1511, 1512, 1513], "dw": [762, 763, 764, 1508, 1509, 1510, 1511, 1512, 1513], "qf": [762, 763, 764], "dtype_input": [762, 763, 764], "dtype_filt": [762, 763, 764], "q_filter": [762, 763, 764], "dh": [763, 764, 1509, 1510, 1512, 1513], "dd": 764, "scale_factor": [769, 775, 776, 777, 1486, 1487, 1488, 1544, 1583, 1602, 1603, 1604, 1882, 1964], "align_corn": [769, 775, 776, 1486, 1487, 1498, 1533, 1544, 1602, 1603, 1882, 1964], "height": [769, 775, 1348, 1349, 1363, 1364, 1366, 1367, 1403, 1428, 1429, 1441, 1468, 1486, 1544, 1602, 1898], "spatial": [769, 775, 776, 777, 930, 1092, 1353, 1381, 1406, 1446, 1447, 1468, 1485, 1486, 1487, 1488, 1498, 1533, 1544, 1573, 1574, 1575, 1602, 1603, 1604], "pixel": [769, 775, 777, 1363, 1370, 1373, 1374, 1375, 1379, 1441, 1446, 1447, 1486, 1498, 1533, 1544, 1602, 1604], "corner": [769, 775, 921, 1486, 1498, 1533, 1544, 1602, 1923], "leakyrelu": [770, 1435, 1548, 1915, 1933], "_slope": [770, 1420, 1548, 1902], "xa": [771, 1250, 1261, 1262, 1263, 1421, 1550], "return_indic": [772, 773, 1343, 1344, 1345, 1382, 1383, 1427, 1428, 1429, 1430, 1431, 1432, 1495, 1496, 1497, 1528, 1529, 1557, 1558, 1559, 1882], "maxpool1d": [772, 1430, 1557, 1560, 1933], "linearli": [775, 1137, 1259, 1486, 1602, 1701, 1722, 1911, 1927, 1934], "neighbour": [777, 1422, 1544, 1604], "stub": [778, 779, 1928], "quantstub": [780, 1931], "dequantstub": [780, 1931], "quantwrapp": 781, "backend_config": [782, 783, 784, 785, 786, 807, 808, 849, 850, 851, 852, 1950], "backendpatternconfig": [782, 851], "blob": [782, 1130, 1912, 1914, 1945, 1968], "dtypeconfig": [782, 783, 785, 851], "observationtyp": [782, 783, 851, 1933], "weighted_int8_dtype_config": [782, 851], "input_dtyp": [782, 784, 851, 1933], "output_dtyp": [782, 784, 851, 1933, 1964], "weight_dtyp": [782, 784, 851, 1933], "bias_dtyp": [782, 784, 1933], "fuse_conv2d_relu": 782, "is_qat": [782, 783], "convrelu2d": [782, 1933], "linear_config": 782, "set_observation_typ": [782, 783, 851], "output_use_different_observer_as_input": [782, 783, 786, 851, 1933], "add_dtype_config": [782, 783, 851], "set_root_modul": [782, 783], "set_qat_modul": [782, 783], "set_reference_quantized_modul": [782, 783], "conv_relu_config": 782, "set_fused_modul": [782, 783], "set_fuser_method": [782, 783], "fused_conv_relu_config": 782, "my_backend": [782, 1955], "set_backend_pattern_config": [782, 851], "from_dict": [782, 783, 784, 805, 806, 807, 844], "backend_config_dict": [782, 1931], "set_nam": 782, "to_dict": [782, 783, 784, 805, 806, 807, 844], "backendconfig": [783, 808, 849, 851, 1934], "dtype_config": [783, 1933], "backend_pattern_config_dict": 783, "observation_typ": [783, 1933], "qat_modul": [783, 1933], "reference_quantized_modul": 783, "fused_modul": [783, 1933], "fuser_method": [783, 804, 1933], "pattern_complex_format": 783, "set_dtype_config": 783, "fuser": [783, 1214, 1881], "fuse_linear_relu": 783, "linearrelu": [783, 1933], "8bea7180a8ba3c279f2c9b050f2a69a6": 783, "understood": [783, 929], "output_share_observer_with_input": [783, 786, 1933], "renam": [783, 1862, 1864, 1882, 1897, 1898, 1926, 1963], "quantdequantstub": 783, "set_pattern": 783, "is_dynam": [784, 816, 1933], "quant1": 784, "dequant1": 784, "fp32_linear": 784, "quant2": 784, "dequant2": 784, "bracket": [784, 1937], "dtype_config1": 784, "dtype_config2": 784, "dtypewithconstraint": [784, 1933], "quant_min_lower_bound": [784, 785, 1933], "quant_max_upper_bound": [784, 785, 1933], "255": [784, 792, 1086, 1087, 1126, 1533, 1544, 1602, 1931, 1933, 1945], "input_dtype_with_constraint": 784, "scale_min_lower_bound": [784, 785, 1933], "scale_max_upper_bound": [784, 785, 1933], "dtype_config_dict": 784, "bias_typ": [784, 851], "scale_exact_match": [785, 1933], "zero_point_exact_match": [785, 1933], "quant_min": [785, 789, 792, 809, 810, 811, 812, 815, 816, 1086, 1087, 1882, 1931], "quant_max": [785, 789, 792, 809, 810, 811, 812, 815, 816, 1086, 1087, 1882, 1931], "fixedqparamsobserv": 785, "fixedqparamsfakequant": 785, "input_output_not_observ": [786, 1933], "remove_qconfig": 787, "is_refer": 787, "convert_custom_config_dict": [787, 805, 1931], "from_observ": [787, 805, 1931], "observed_to_quantized_custom_module_class": [787, 805, 1931], "observedcustommodul": [787, 805, 807, 828, 1931], "quantizedcustommodul": [787, 805], "calib_data": 788, "fake_quant": [789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 852, 1086, 1087, 1950], "movingaverageminmaxobserv": [789, 792, 812], "observer_kwarg": [789, 792], "x_out": [789, 792], "fake_quant_en": 789, "observer_en": 789, "calculate_qparam": [790, 809, 810, 814], "qscheme": [792, 809, 810, 811, 812, 815, 816, 817, 1882, 1926, 1931, 1934, 1947], "fake_qu": [793, 797, 798, 799, 1931], "default_fake_qu": 794, "default_per_channel_weight_fake_qu": 795, "default_weight_fake_qu": 796, "histogram": [797, 809, 821, 1160, 1162, 1882, 1926, 1945], "memoryless": [798, 799], "averaging_const": [798, 799, 811, 812, 1882], "modules_to_fus": 804, "fuser_func": 804, "fuse_known_modul": 804, "fuse_custom_config_dict": [804, 806], "convmodul": 804, "bnmodul": 804, "convbnmodul": 804, "additional_fuser_method_map": 804, "fuse_conv_bn": [804, 1933], "conv1": [804, 1212, 1434, 1462, 1881, 1931, 1945], "bn1": 804, "relu1": [804, 1462, 1605], "fused_m": 804, "custom_config": [805, 806, 807, 808], "convert_fx": [805, 1931, 1950], "convert_custom_config": [805, 849, 1931], "set_observed_to_quantized_map": 805, "set_preserved_attribut": [805, 806, 807], "attr1": [805, 806, 807, 1925], "attr2": [805, 806, 807, 1925], "floatcustommodul": [805, 807], "weight_onli": [805, 849, 1931], "preserved_attribut": [805, 806, 807], "observed_class": [805, 807], "quantized_class": 805, "quant_typ": [805, 807], "quanttyp": [805, 807], "fuse_fx": [806, 1931], "fuse_custom_config": [806, 850], "convertcustomconfig": [806, 849], "prepare_fx": [807, 830, 849, 852, 1931, 1950], "prepare_qat_fx": [807, 849, 1931], "prepare_custom_config": [807, 808, 851, 852, 1931], "set_standalone_module_nam": 807, "module1": [807, 844, 1907], "qconfig_map": [807, 808, 844, 845, 846, 849, 851, 852, 1931], "child_prepare_custom_config": 807, "set_standalone_module_class": 807, "mystandalonemodul": 807, "set_float_to_observed_map": 807, "set_non_traceable_module_nam": 807, "module2": [807, 844, 1907], "module3": [807, 1907], "set_non_traceable_module_class": 807, "nontraceablemodule1": 807, "nontraceablemodule2": 807, "set_input_quantized_index": 807, "set_output_quantized_index": 807, "prepare_custom_config_dict": [807, 828, 830, 1931], "standalone_module_nam": 807, "standalone_module_class": 807, "module_class": 807, "float_to_observed_custom_module_class": [807, 828, 1931], "non_traceable_module_nam": 807, "non_traceable_module_class": 807, "input_quantized_idx": 807, "output_quantized_idx": 807, "float_class": 807, "qconfigmap": [808, 845, 846, 849, 851, 1931, 1934], "preparecustomconfig": [808, 851], "2048": [809, 1477, 1479, 1481, 1907], "upsample_r": 809, "per_tensor_affin": [809, 810, 811, 1725, 1726, 1727, 1728, 1931, 1934], "reduce_rang": [809, 810, 811, 812, 815, 817, 1882, 1931, 1932], "factory_kwarg": [809, 810, 815], "1920928955078125e": [809, 810, 811, 812, 815], "finfo": [809, 810, 811, 812, 815, 1255, 1258, 1338, 1880, 1947], "minmaxobserv": [809, 811, 815, 831, 851, 852, 1934], "x_": [810, 811, 962, 1082, 1274, 1275, 1277, 1280, 1288, 1351, 1370, 1424, 1441, 1467, 1469, 1589, 1801, 1803, 1846, 1904, 1934, 1941], "q_": [810, 1934], "x_orig": 810, "reset_min_max_v": [810, 815], "ch_axi": [812, 815, 1882], "per_channel_affin": [812, 815, 1724, 1931, 1934], "custom_op_nam": [813, 816], "with_arg": [814, 831, 851, 852], "_callable_arg": 814, "_with_arg": 814, "foo_build": 814, "foo_instance1": 814, "foo_instance2": 814, "with_callable_arg": 814, "_with_callable_arg": 814, "cur_tim": 814, "get_time_func": 814, "dan": 814, "creation_tim": 814, "compute_dtyp": 816, "ptq": [821, 1931, 1932, 1934], "obs_dict": 827, "get_observer_state_dict": 827, "allow_list": [828, 1949], "observer_non_leaf_module_list": 828, "preemptiv": [828, 829, 1614], "propagate_qconfig_": 830, "qconfig_dict": [830, 844], "my_qconfig": 831, "default_observ": 831, "default_qat_config": 837, "set_glob": [844, 849, 851, 1931], "set_object_typ": [844, 849, 851], "set_module_name_regex": 844, "regex": 844, "set_module_nam": [844, 849, 851], "set_module_name_object_type_ord": 844, "global_qconfig": 844, "qconfig1": 844, "qconfig2": 844, "qconfig3": 844, "object_typ": 844, "module_name_regex": 844, "module_name_object_type_ord": 844, "conv0": 844, "x86": [845, 846, 1767, 1931, 1933], "run_arg": [847, 853], "qconfig_spec": 848, "quantize_fx": [849, 850, 851, 852, 1931, 1950], "_remove_qconfig": 849, "qconfig_from_prepar": 849, "prepared_model": [849, 851, 852], "xnnpack": [849, 1892, 1931], "get_default_backend_config": [849, 851, 852], "quantized_model": 849, "fusion_pattern": 850, "fusecustomconfig": 850, "_equalization_config": 851, "get_default_qconfig_map": [851, 1931], "float_model": [851, 852, 1931, 1949], "data_load": [851, 852, 1698, 1704, 1917, 1931], "get_default_qconfig": [851, 852, 1931], "linear_pattern_config": 851, "suer": 851, "sample_inference_data": [851, 1931], "get_default_qat_qconfig_map": [852, 1931], "load_weight": 852, "train_data": 852, "get_default_qat_qconfig": [852, 1931], "custom_module_class_map": 854, "lceil": [855, 931], "rceil": [855, 931], "adjac": [855, 921, 1373, 1374, 1375, 1379, 1738, 1940], "set_default_tensor_typ": [855, 911, 920, 1073, 1075, 1085, 1090, 1108, 1124, 1127, 1147, 1157, 1158, 1220, 1271, 1287, 1671, 1731, 1733, 1735, 1737, 1738, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1806, 1807, 1808, 1809, 1810, 1811, 1850, 1852, 1877], "get_default_dtyp": [855, 1271, 1287, 1673, 1738, 1942, 1943, 1972], "5000": [855, 870, 876, 877, 878, 913, 937, 1090, 1092, 1093, 1100, 1103, 1108, 1118, 1120, 1121, 1122, 1153, 1159, 1162, 1226, 1252, 1271, 1329, 1331, 1359, 1360, 1378, 1486, 1723, 1727, 1728, 1729, 1738, 1742, 1941, 1946], "maxim": [864, 1298, 1368, 1430, 1431, 1432, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1690, 1691, 1692, 1693, 1940, 1959, 1969], "3398": 864, "2663": [864, 1907], "2686": 864, "2450": 864, "7401": 864, "8805": 864, "3402": 864, "1936": 864, "4907": [864, 1288], "3948": [864, 957], "0691": 864, "3132": 864, "6092": 864, "5419": 864, "2993": [864, 1823], "3195": 864, "1139": 865, "2254": 865, "1381": [865, 1823], "3687": 865, "1975": [865, 1899], "0102": 865, "4732": 865, "9240": 865, "1207": [865, 1323], "7506": 865, "0213": 865, "7809": 865, "2960": 865, "9384": 865, "1438": 865, "ascend": [866, 1092, 1237, 1239, 1268, 1322, 1758, 1796, 1857], "0785": 866, "5267": 866, "8521": 866, "4065": 866, "1598": 866, "0788": 866, "0745": 866, "2700": 866, "2208": 866, "0722": 866, "7064": 866, "2564": 866, "0669": 866, "2318": 866, "8229": 866, "9280": 866, "lexicograph": [867, 1666, 1884, 1940], "9039": 868, "6291": 868, "0795": [868, 1723, 1915], "1586": 868, "1939": [868, 1909], "4900": 868, "7503": 868, "9355": 868, "histori": [869, 870, 1139, 1682, 1839, 1880, 1891, 1899, 1909, 1911, 1937], "dlpack": [870, 1123, 1880], "frombuff": 870, "data_ptr": [870, 1897, 1942, 1944], "addbackward0": [870, 1915, 1920], "__array_interface__": [870, 1959], "5962": 871, "4985": 871, "4396": 871, "4525": [871, 1899], "6387": 871, "4552": 871, "sine": [872, 1779, 1789, 1791], "1606": 872, "4267": 872, "0899": 872, "0250": 872, "1599": 872, "1534": 872, "9435": 872, "8990": [872, 1067], "arctang": [873, 874], "2341": 873, "2539": 873, "6256": 873, "6448": 873, "2299": 873, "2487": 873, "5591": [873, 895], "5727": 873, "quadrant": 874, "9041": [874, 930], "0196": [874, 930], "3108": [874, 930], "4423": [874, 930], "9833": 874, "0811": 874, "9743": 874, "4151": 874, "tangent": [875, 885, 886, 1136, 1137, 1474, 1837, 1838], "9385": 875, "2968": 875, "8591": 875, "1871": 875, "7253": 875, "3060": 875, "2899": 875, "1893": 875, "needs_input_grad": [879, 1909], "setup_context": [880, 1910], "save_for_forward": [880, 1910], "grad_input": [881, 888, 890, 903, 1200, 1434, 1610, 1909, 1915], "underneath": 882, "generate_vmap_rul": [882, 1910], "out_dim": [882, 1141, 1872, 1882, 1898, 1910], "grad_tensor": [883, 897, 1882, 1907], "grad_vari": 883, "forward_ad": 884, "dual": [884, 885, 886, 1665, 1910], "make_du": [884, 886], "your_fn": 884, "unpack_du": [884, 885], "grad_aft": 884, "dual_level": [885, 886], "primal": [886, 1132, 1136, 1137, 1140], "x_npy": 887, "once_differenti": [887, 888, 889, 890, 1909], "g1": [888, 890, 1907, 1938], "g2": [888, 890, 1907, 1938], "oppos": [889, 1910], "weren": 889, "grad_out": [889, 1882, 1912, 1964], "gx": 889, "gy": 889, "gz": [889, 1930], "simplefunc": 890, "induc": [890, 1533, 1571, 1902, 1957], "outer_jacobian_strategi": 891, "disconnect": [891, 892, 893, 894, 895, 896], "said": [891, 892, 893, 894, 895, 896, 1891, 1918], "cliff": [891, 893, 897], "_debug_only_display_vmap_fallback_warn": [891, 897], "pow_reduc": [891, 892, 895], "2265": 891, "8221": 891, "9456": [891, 912], "2550": 891, "viewbackward": [891, 893], "pow_adder_reduc": [891, 892, 895], "func_output": [892, 894, 895, 896], "1448": 892, "0239": 892, "6456": 892, "4988": 892, "4310": 892, "sumbackward0": [892, 895, 1909], "3030": 892, "vhp": 892, "batched_grad": 893, "exp_reduc": [893, 894, 896], "4917": 893, "4352": 893, "4369": 893, "3799": 893, "exp_add": 893, "8052": 893, "3963": 893, "3090": 894, "6742": 894, "9114": 894, "2106": 894, "sumbackward1": [894, 896], "squeezebackward1": 894, "adder": [894, 896], "2399": 894, "5005": 894, "0689": 895, "2431": 895, "0989": 895, "4456": 895, "8053": [895, 1753], "7817": 896, "2458": 896, "7830": 896, "7782": 896, "4458": 896, "3962": 896, "3042": [896, 1258], "6354": 896, "1288": [896, 1782], "0652": 896, "5483": 896, "5035": 896, "2046": [896, 957, 1909], "1292": 896, "1432": 896, "3059": 896, "3225": 896, "6652": 896, "7753": 896, "0152": 896, "4225": 896, "3340": 896, "only_input": 897, "allow_unus": [897, 1882], "is_grads_batch": 897, "materialize_grad": 897, "require_grad": [897, 1884, 1904], "06": [898, 899, 1241, 1246, 1247, 1258, 1259, 1264, 1388, 1443, 1482, 1485, 1530, 1599, 1677, 1691, 1824, 1882, 1947], "raise_except": [898, 899], "check_sparse_nnz": 898, "nondet_tol": [898, 899], "check_undefined_grad": [898, 899], "check_grad_dtyp": [898, 899], "check_batched_grad": [898, 899], "check_batched_forward_grad": 898, "check_forward_ad": 898, "check_backward_ad": 898, "fast_mod": [898, 899, 1912], "differenc": [898, 1909], "perturb": [898, 899, 1912], "sparsetensor": [898, 1809], "gradgradcheck": [898, 1909], "gen_non_contig_grad_output": 899, "check_fwd_over_rev": 899, "check_rev_over_rev": 899, "noncontigu": [899, 1015, 1947], "inaccuraci": 899, "clonebackward0": 901, "gi": [903, 904, 1915], "removablehandl": [903, 904, 1200, 1434, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1928], "eventlist": [906, 907], "chrome": [906, 1930, 1963, 1967], "group_by_stack_n": [907, 1930], "roof": 907, "functioneventavg": [907, 909], "window_length": [911, 920, 1157, 1158, 1220, 1882], "2n": [911, 1777, 1940], "trim": [911, 920, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1157, 1158, 1197], "_length": [911, 920, 1157, 1158, 1197, 1357, 1820], "sim": [912, 1448, 1576, 1715, 1735], "pseudorandom": [912, 1324, 1668, 1712, 1715, 1731, 1733, 1735, 1737, 1825], "1737": 912, "0950": [912, 1802], "3609": 912, "7148": 912, "0289": [912, 1849], "2676": 912, "8937": 912, "7202": 912, "2500": [913, 1090, 1092, 1093, 1103, 1108, 1271, 1486, 1729], "7500": [913, 1093, 1103, 1122, 1153, 1256, 1271, 1486, 1729, 1785], "AND": [914, 1282, 1884, 1904], "OR": [917, 1284, 1884], "xor": [919, 1285, 1884], "blackman": [920, 1787], "arrang": 921, "broadcast_tensor": [923, 1882, 1926], "out_int32": [926, 1758, 1882], "opposit": [926, 1093, 1095, 1824, 1845], "formal": [926, 1758, 1891, 1898], "eg": [926, 1751, 1758, 1968], "tensor_a": [928, 941], "tensor_b": 928, "6580": 929, "0969": 929, "4614": 929, "1034": [929, 1072], "5790": 929, "1497": 929, "compute_mod": [930, 1964], "use_mm_for_euclid_dist_if_necessari": 930, "distanc": [930, 1197, 1236, 1237, 1264, 1394, 1443, 1482, 1483, 1573, 1698, 1820, 1824, 1880], "infti": [930, 1197, 1252, 1350, 1402, 1403, 1465, 1573, 1689, 1941], "use_mm_for_euclid_dist": 930, "donot_use_mm_for_euclid_dist": 930, "minkowski": [930, 1573], "ham": [930, 1157, 1573, 1783], "closest": [930, 1573], "xn": [930, 1573], "4821": [930, 933], "059": 930, "0590": 930, "1763": [930, 1741], "4713": [930, 1741], "6986": [930, 1741], "3702": [930, 1741], "1193": [930, 1290], "0959": 930, "7138": 930, "8322": 930, "2830": [930, 1851], "3791": 930, "6341": 931, "4208": 931, "0900": 931, "5826": 931, "clr": [932, 1698], "3375": 932, "9790": 932, "1119": 932, "6577": 932, "5609": [932, 1524], "5095": 932, "2614": 932, "4038": 932, "3378": [932, 1851], "4982": 932, "2457": [932, 1303], "2561": 932, "4684": 932, "7163": 932, "9647": 932, "8917": [932, 1281], "3213": [932, 1277], "2284": [932, 1052], "8615": 932, "2816": 932, "tu": 933, "mt": [933, 1230, 1237, 1239, 1243, 1244, 1245, 1250, 1259, 1722, 1824, 1882, 1891, 1926, 1944, 1946], "4112": 933, "7486": 933, "4551": 933, "3544": 933, "6724": 933, "5528": 933, "0592": [933, 1915], "9371": 933, "5487": 933, "7023": 933, "03": [933, 1278, 1780, 1781, 1786], "3842e": [933, 1246], "hermitian": [934, 935, 958, 1088, 1089, 1091, 1093, 1094, 1095, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1230, 1231, 1236, 1237, 1239, 1243, 1244, 1245, 1255, 1258, 1264, 1882], "9314": 934, "2251": [934, 972, 1233, 1275], "0889": 934, "4439": 934, "2122": 934, "1412": 934, "6358e": 934, "lh": [935, 1246], "1625": 935, "6097": 935, "8398": 935, "2387": [935, 958], "3771": [935, 1247], "4173": 935, "1626": [935, 972, 1233], "6881e": 935, "tensor_split": [936, 1070, 1163, 1873, 1882, 1926, 1944], "min_valu": [937, 1393], "max_valu": [937, 1393, 1882], "_valu": [937, 1342, 1620, 1809, 1909, 1926, 1940], "7120": 937, "1734": [937, 1174], "0478": [937, 1875], "0922": 937, "3333": [937, 1153, 1162, 1486, 1487, 1839], "horizont": [940, 1163, 1165, 1927, 1929, 1959], "hstack": [940, 1882, 1926, 1940], "with_replac": [941, 1882], "combinations_with_replac": 941, "fullgraph": [942, 1959, 1969], "cache_size_limit": [942, 1959, 1962, 1969], "subgraph": [942, 1674, 1904, 1908, 1925, 1928, 1950, 1956, 1958, 1969], "list_backend": [942, 1951, 1955, 1961], "autotun": [942, 1963], "cudagraph": [942, 1007, 1907, 1951, 1959, 1961, 1963, 1966], "realloc": [942, 1174], "triton": [942, 1910, 1951, 1954, 1956, 1959, 1961, 1969], "_inductor": [942, 1959, 1969], "list_mode_opt": 942, "epilogue_fus": 942, "templat": [942, 1015, 1016, 1927], "max_autotun": 942, "fallback_random": [942, 1959, 1969], "shape_pad": 942, "graph_diagram": 942, "pictur": 942, "list_opt": 942, "_glibcxx_use_cxx11_abi": 943, "bypass": [944, 1072, 1888, 1899, 1907, 1909, 1960], "pend": [947, 1936, 1945, 1954], "rand_foo": 947, "compiler_cudagraph_tre": 947, "exclude_tag": 949, "flip": [955, 1113, 1114, 1268, 1882, 1926, 1927, 1959, 1964], "lazi": [955, 1213, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1605, 1880, 1957], "writeabl": [955, 956], "is_conj": [955, 1746, 1882, 1926, 1959], "geq": [957, 1144, 1232, 1240, 1370, 1420, 1441, 1442, 1452, 1516, 1568, 1627, 1902, 1941], "signbit": [957, 1882, 1926, 1940, 1964], "2557": 957, "0026": 957, "5387": 957, "4740": 957, "9244": 957, "7079": 957, "2778": 957, "0249": [957, 1276], "5719": 957, "0059": 957, "2600": 957, "4475": 957, "9567": [957, 1236, 1823], "5757": 957, "1751": 957, "0742": 957, "2998": 957, "1054": 957, "2373": 957, "3190": [957, 1907], "1128": [957, 1258, 1404], "pearson": 958, "coeffici": [958, 1157, 1677, 1679, 1680, 1681, 1683, 1689, 1693, 1782, 1783, 1784, 1848], "r_": [958, 1841], "ij": [958, 1072, 1280, 1288, 1302, 1437, 1801], "c_": [958, 1362, 1363, 1364, 1365, 1366, 1367, 1404, 1446, 1447], "jj": 958, "cov": [958, 1882, 1926], "2678": [958, 1377], "0908": 958, "3766": 958, "2780": 958, "5812": 958, "1535": [958, 1377], "2350": 958, "3582": 958, "4309": 959, "2706": 959, "8562": 959, "9796": [959, 1246], "1395": 959, "2957": 959, "6553": 959, "5574": 959, "1632": 960, "1835": 960, "6979": 960, "7325": [960, 1062], "0133": 960, "7860": 960, "2536": 960, "2805": 960, "sleef": [960, 1791], "y_": [962, 1082, 1274, 1275, 1277, 1351, 1370, 1400, 1801, 1846, 1904, 1941], "_w": 962, "w_i": [962, 1240], "mu_x": 962, "mu_i": [962, 1683], "w_ia_i": 962, "whichev": [962, 1141, 1533, 1723, 1872, 1907], "w_ix_": 962, "mathbb": [962, 1153, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1250, 1252, 1259, 1261, 1263, 1264, 1370, 1441, 1627], "bessel": [962, 1220, 1786, 1818, 1819, 1867, 1868, 1941], "unbias": [962, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1473, 1818, 1819, 1867, 1868, 1882, 1964], "corrcoef": [962, 1882, 1926], "6667": [962, 1162, 1486, 1487, 1743, 1777, 1920], "fw": 962, "4282": 962, "0255": [962, 1059], "4144": [962, 1907], "4169": 962, "streamcontext": [970, 1047, 1880], "abstractcontextmanag": 970, "3956": [972, 1233], "1455": [972, 1233, 1921], "6895": [972, 1233], "5849": [972, 1233], "3599": [972, 1233], "7180": [972, 1233], "0521": [972, 1233], "1339": [972, 1233], "0225": [972, 1233, 1246], "0257": [972, 1233], "4725": [972, 1233], "1479": [972, 1233], "7005": [972, 1233], "9757": [972, 1233], "3904": [972, 1233], "3726": [972, 1233], "1836": [972, 1233], "9688": [972, 1233], "7153": [972, 1233, 1941], "2159": [972, 1233], "0844": [972, 1233], "5281": [972, 1233], "6120": [972, 1233], "4490": [972, 1233], "5687": [972, 1233], "9792": [972, 1053, 1233], "8304": [972, 1233], "3037": [972, 1233, 1915], "5650": [972, 1233], "2329": [972, 1233], "9883": [972, 1233], "0551": [972, 1233], "capture_begin": [973, 1907], "capture_error_mod": [973, 1007], "make_graphed_cal": [973, 1907], "graph_pool_handl": [973, 1007], "other_graph_inst": [973, 1007], "cudastreamcapturemod": [973, 1007], "thread_loc": [973, 1007], "cudamalloc": [973, 1007, 1029, 1907, 1971], "unsaf": [973, 1007, 1272, 1629, 1632, 1882, 1907, 1928], "capture_end": [973, 1907], "replai": [973, 1007, 1907, 1923, 1954, 1969], "debug_dump": 973, "debug_path": 973, "enable_debug_mod": 973, "path_to_so_fil": 974, "alloc_fn_nam": 974, "free_fn_nam": 974, "ctype": [974, 1959], "change_current_alloc": [974, 1907], "ssize_t": [974, 1907], "cudastream_t": [974, 976, 1907], "ptr": [974, 1907], "size_t": 974, "oss": 974, "enable_tim": [975, 1312, 1907], "interprocess": 975, "marker": [975, 1312], "elapsed_tim": [975, 1312, 1907], "end_ev": [975, 1312, 1907], "elaps": [975, 1312, 1894], "from_ipc_handl": 975, "reconstruct": [975, 1290, 1350, 1351, 1912, 1920, 1928], "ipc": [975, 1011], "ipc_handl": 975, "cudaeventsynchron": 975, "cudastreamwaitev": [975, 976, 978], "stream_ptr": 976, "record_ev": [976, 978], "cudastreamsynchron": [976, 978], "wait_ev": [976, 978], "interoper": 980, "caching_allocator_delet": 980, "mem_ptr": 981, "caching_allocator_alloc": 981, "peer_devic": 982, "_cudaalloc": 983, "clock": 984, "sm": 984, "hertz": 984, "smi": [984, 997, 1025, 1031, 1035, 1049, 1050, 1907, 1911, 1913], "buffer_s": 986, "10485760": 986, "chunk_siz": [989, 1135, 1141, 1872], "cublashandle_t": 990, "unoccupi": [997, 1311], "pytorch_cuda_alloc_conf": [998, 1907], "cudamallocasync": [998, 1029, 1907], "_cudadeviceproperti": 1002, "gencod": 1003, "cuda_graph": 1007, "ordinari": [1009, 1614, 1864, 1903], "code_str": [1015, 1016], "temp": 1015, "typenam": [1015, 1016], "my_kernel": [1015, 1016], "jitted_fn": [1015, 1016], "create_jit_fn": [1015, 1016], "util_fn": 1015, "gelu": [1015, 1463, 1477, 1479, 1481, 1586, 1882, 1899, 1926, 1964], "my_gelu": 1015, "my_lib": [1015, 1888, 1921], "impl": [1015, 1206, 1880, 1888], "num_output": 1016, "sample_arg": 1018, "num_warmup_it": 1018, "allow_unused_input": 1018, "datadistributedparallel": 1018, "amp": [1018, 1864, 1880, 1903, 1963, 1966, 1969], "autocast": [1018, 1440, 1880, 1907, 1909, 1969], "insuffici": [1019, 1957, 1969], "manual_seed_al": [1019, 1864], "occupi": [1021, 1025, 1036, 1309, 1422, 1551, 1907, 1913, 1972], "reset_peak_memory_stat": [1021, 1023, 1036, 1037], "max_memory_reserv": [1022, 1907, 1913], "cudamemgetinfo": 1024, "memory_reserv": [1026, 1907, 1913], "snapshot": [1028, 1880, 1884, 1907, 1913], "large_pool": 1029, "small_pool": 1029, "allocated_byt": 1029, "reserved_byt": 1029, "active_byt": 1029, "inactive_split": 1029, "inactive_split_byt": 1029, "octob": 1029, "1mb": [1029, 1971], "num_alloc_retri": 1029, "num_oom": 1029, "assist": [1029, 1908], "max_split_s": 1029, "oversize_alloc": 1029, "oversize_seg": 1029, "requested_byt": 1029, "abbrevi": 1030, "percent": [1031, 1050, 1963], "instantan": [1032, 1930], "ascii": [1032, 1034, 1272, 1884, 1930], "sensor": [1035, 1049], "mw": 1035, "milliwatt": 1035, "fermi": 1035, "max_memory_alloc": [1036, 1907, 1913], "max_memory_cach": 1037, "memory_stat": [1038, 1907, 1913], "seed_al": 1039, "environment": [1041, 1963], "total_memori": [1042, 1319], "debug_mod": [1046, 1765], "centigrad": 1049, "x_2": [1051, 1052, 1053, 1054, 1268, 1355, 1368, 1369, 1504, 1515], "x_3": [1051, 1052, 1053, 1054, 1268], "3449": 1051, "5447": 1051, "0685": 1051, "5104": [1051, 1907], "1706": 1051, "2259": 1051, "4696": 1051, "3284": 1051, "9946": 1051, "8209": [1051, 1054], "6628": 1052, "0975": 1052, "2680": [1052, 1906], "3298": [1052, 1059], "4220": 1052, "3885": 1052, "1762": 1052, "9165": 1052, "6684": [1052, 1177], "6001": 1053, "2069": 1053, "1919": 1053, "6727": [1053, 1066], "0062": 1053, "4126": 1053, "2129": 1053, "4206": 1053, "1968": [1053, 1941], "1241": 1053, "0238": 1053, "0233": [1053, 1730], "0157": 1053, "0158": [1053, 1824], "0065": 1053, "0014": [1053, 1941], "0006": 1053, "8286": 1054, "4890": 1054, "5155": 1054, "8443": 1054, "1865": 1054, "1752": [1054, 1062], "0595": 1054, "1850": 1054, "1571": [1054, 1915, 1920], "4243": 1054, "3175": 1054, "8020": [1054, 1720], "0423": 1054, "2289": 1054, "0537": 1054, "0058": 1054, "9780": 1054, "trapezoid": [1055, 1847, 1882, 1926], "360": 1056, "2832": 1056, "diagflat": [1059, 1882, 1926], "5950": 1059, "0872": 1059, "4264": 1059, "1064": [1059, 1915], "8795": 1059, "2429": 1059, "1374": 1059, "1029": 1059, "6482": 1059, "6300": 1059, "5410": 1060, "2934": 1060, "1788": [1060, 1941], "5684": 1060, "0845": [1060, 1791, 1915], "3986": 1060, "2956": [1061, 1233], "9068": 1061, "1695": 1061, "2094": [1061, 1907], "3018": 1061, "1516": 1061, "9342": 1061, "0854": 1062, "1431": 1062, "8536": 1062, "0905": 1062, "0360": [1062, 1323], "6927": 1062, "3735": 1062, "4945": 1062, "2631": [1062, 1322, 1907], "3755": 1062, "5977": [1062, 1909], "8172": 1062, "1065": [1062, 1915], "0401": 1062, "2235": [1062, 1823], "7938": 1062, "3081": 1062, "6166": 1062, "2335": 1062, "0500": 1062, "7336": 1062, "3836": 1062, "1015": 1062, "emb": [1063, 1761, 1792], "5393": 1066, "8675": 1066, "5916": 1066, "6321": 1066, "0967": 1066, "0511": 1066, "6295": 1066, "8360": 1066, "6973": 1066, "6537": 1066, "dividend": [1067, 1117, 1120, 1742, 1853], "true_divid": [1067, 1882, 1926], "3810": [1067, 1161], "2774": 1067, "2972": 1067, "3719": 1067, "4637": [1067, 1909], "7620": 1067, "5548": 1067, "5944": 1067, "7438": 1067, "9274": 1067, "3711": 1067, "9353": 1067, "4605": 1067, "2917": 1067, "1815": [1067, 1281], "0111": [1067, 1780], "9805": 1067, "5923": 1067, "1062": 1067, "4581": [1067, 1240], "7759": 1067, "2344": 1067, "1830": 1067, "0313": 1067, "1908": 1067, "4757": 1067, "8032": 1067, "2930": 1067, "8113": 1067, "2308": 1067, "4620": [1067, 1875], "6051": 1067, "5676": 1067, "2639": 1067, "2260": 1067, "4509": [1067, 1254], "2086": 1067, "1322": 1067, "9764": 1067, "9564": 1067, "3484": 1067, "2278": 1067, "1068": [1067, 1174], "4678": 1067, "3938": [1067, 1834], "depthwis": [1070, 1071, 1362, 1363, 1364], "atleast_3d": [1071, 1882, 1926], "notat": [1072, 1400, 1771, 1885, 1915, 1946], "einstein": 1072, "summat": [1072, 1197, 1280, 1288, 1940], "subscript": [1072, 1885, 1917], "jk": [1072, 1963], "ik": [1072, 1273, 1801], "za": 1072, "alphabet": [1072, 1517, 1936], "arrow": [1072, 1938], "ki": 1072, "ellipsi": [1072, 1884, 1885, 1898], "fourth": 1072, "whitespac": [1072, 1885], "opt_einsum": [1072, 1880], "_the_": 1072, "disclaim": 1072, "sublist": [1072, 1969], "52": 1072, "op1": [1072, 1884], "sublist1": 1072, "op2": [1072, 1884], "sublist2": 1072, "subslist_out": 1072, "2104": 1072, "7952": 1072, "2433": 1072, "4545": 1072, "1156": 1072, "2897": [1072, 1915], "3918": 1072, "4963": 1072, "3744": 1072, "9381": 1072, "2685": 1072, "6070": 1072, "7208": 1072, "8058": 1072, "4419": 1072, "0936": 1072, "1713": 1072, "4291": 1072, "5802": 1072, "7350": [1072, 1941], "5704": 1072, "4290": 1072, "9323": 1072, "4480": 1072, "bij": 1072, "bjk": 1072, "bik": 1072, "0564": 1072, "5904": 1072, "2023": 1072, "1271": 1072, "6706": [1072, 1723], "8097": 1072, "8025": 1072, "1183": 1072, "2239": [1072, 1260], "3107": 1072, "5756": 1072, "2354": 1072, "4558": 1072, "3460": 1072, "5087": 1072, "8530": [1072, 1359, 1489], "8153": 1072, "8787": 1072, "3839": [1072, 1871], "2112": [1072, 1849], "3728": 1072, "1131": [1072, 1720], "0921": 1072, "8305": 1072, "ji": 1072, "anm": 1072, "bm": 1072, "ba": 1072, "3430": [1072, 1281], "2405": 1072, "4494": 1072, "3311": 1072, "5201": 1072, "0356": 1072, "4064e": 1073, "8000e": 1073, "3493e": 1073, "5751e": 1073, "1428e": 1073, "5955e": 1073, "9683e": 1075, "1239e": 1075, "0705e": 1075, "orig_func": [1076, 1665], "set_grad_en": [1076, 1882, 1926, 1948], "doubler": [1076, 1175, 1665], "tripler": [1076, 1665], "elsewher": [1077, 1085, 1144, 1156, 1190, 1192, 1193, 1196, 1225, 1289, 1335, 1802, 1879], "_max": [1086, 1087, 1931], "_min": [1086, 1087, 1931], "nearbi": [1086, 1087], "_int": [1086, 1087], "_point": [1086, 1087], "2525": 1086, "0466": 1086, "3491": [1086, 1254], "2168": [1086, 1841], "5906": [1086, 1941], "6258": 1086, "6444": 1086, "0542": 1086, "0475": [1086, 1941], "0486": 1086, "3405": 1086, "6134": [1086, 1303], "6323": 1086, "0552": 1087, "9730": 1087, "3973": 1087, "0780": 1087, "4000": [1087, 1090, 1099, 1108, 1486, 1726, 1777], "fourier": [1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1197, 1787, 1820, 1880], "rfft": [1088, 1093, 1103, 1107, 1108, 1109], "chalf": [1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1103, 1104, 1105, 1882, 1926, 1946], "sm53": [1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109], "ortho": [1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1273], "orthonorm": [1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1264, 1627, 1824], "ifft": [1088, 1092, 1093, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105], "fftn": [1089, 1092, 1098, 1101, 1109], "rfft2": [1089, 1104], "ifft2": [1089, 1101], "two_fft": [1089, 1091, 1101, 1107, 1109], "check_strid": [1089, 1091, 1092, 1097, 1098, 1103, 1104, 1105, 1107, 1109, 1947], "nyquist": [1090, 1092, 1100, 1102, 1106, 1107, 1108, 1109], "i_1": [1091, 1109, 1221], "i_n": [1091, 1109, 1141, 1221, 1841, 1872], "rfftn": [1091, 1095, 1101, 1105, 1107], "ifftn": [1091, 1097, 1102], "reorder": [1092, 1256], "rearrang": [1092, 1099, 1358, 1446, 1447, 1574, 1575, 1898], "fftfreq": [1092, 1099, 1108], "9000": [1092, 1839], "8000": [1092, 1329, 1486, 1723, 1777], "uncent": 1092, "ifftshift": 1092, "x_center": 1092, "x_uncent": 1092, "fft_uncent": 1092, "fft_center": 1092, "x_centered_2": 1092, "ihfft": [1093, 1101, 1102], "irfft": [1093, 1105, 1106], "symmetri": [1093, 1095, 1820], "transformed_dim_s": [1093, 1103], "0000j": [1093, 1100, 1103, 1230, 1231, 1236, 1237, 1239, 1716, 1774], "1250": [1093, 1322], "1720j": 1093, "0406j": 1093, "2809": 1093, "6250": [1093, 1103, 1122, 1486], "9691": 1093, "hfftn": [1094, 1102], "last_dim_s": [1094, 1095, 1104, 1105, 1964], "ihfft2": 1094, "roundtrip": [1094, 1095, 1103, 1104, 1105], "ihfftn": [1095, 1101], "irfftn": [1095, 1104, 1109], "fft2": [1097, 1107], "two_ifft": [1097, 1098, 1102], "fftshift": 1099, "hfft": 1100, "6882j": 1100, "1625j": 1100, "hfft2": 1101, "8602j": 1103, "2031j": 1103, "1562": 1103, "3511": 1103, "7812": 1103, "2114": 1103, "irfft2": 1107, "wider": [1115, 1881, 1884, 1927, 1940], "49": [1115, 1256, 1906], "2500e": 1115, "1000e": 1115, "7656e": 1115, "lfloor": [1116, 1121, 1342, 1347, 1348, 1349, 1362, 1363, 1364, 1381, 1402, 1403, 1427, 1428, 1429, 1485, 1486, 1487, 1488, 1502, 1571, 1738, 1820], "rfloor": [1116, 1121, 1342, 1347, 1348, 1349, 1362, 1363, 1364, 1381, 1402, 1403, 1427, 1428, 1429, 1485, 1486, 1487, 1488, 1502, 1571, 1738, 1820], "8166": 1116, "5308": 1116, "2530": 1116, "2091": 1116, "7000": [1118, 1378, 1776], "3000": [1119, 1377, 1776, 1907], "entrywis": [1120, 1742], "modulu": [1120, 1260, 1742], "operatornam": [1121, 1236, 1237, 1238, 1239, 1256, 1264, 1350, 1351, 1357, 1394, 1395, 1401, 1425, 1465, 1483, 1776], "8750": [1122, 1486], "sizeof": [1124, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1942, 1962], "map_shar": [1124, 1942], "map_priv": [1124, 1942], "mmap": [1124, 1272, 1896, 1942], "tofil": 1124, "t_map": 1124, "char": [1126, 1673, 1897, 1942, 1959], "parameter_and_buffer_dict": 1129, "tie_weight": [1129, 1662], "submodule_nam": [1129, 1662], "parameter_nam": [1129, 1662], "ti": [1129, 1662, 1751, 1888, 1958], "ty": [1129, 1662], "foo_ti": [1129, 1662], "new_a": [1129, 1662], "grad_weight": [1129, 1909], "detached_param": 1129, "parameters_and_buffer_dict": 1129, "intermediate_upd": 1130, "mutations_and_view": 1130, "proxy_tensor": [1130, 1958, 1969], "make_fx": [1130, 1957, 1969], "inpt": 1130, "f_trace": 1130, "f_no_mutations_trac": 1130, "f_no_mutations_and_views_trac": 1130, "a_1": [1130, 1221], "view_1": 1130, "view_copi": [1130, 1882, 1926, 1948], "view_copy_1": 1130, "as_strid": [1130, 1882, 1926, 1944, 1964], "native_funct": [1130, 1909, 1964], "yaml": [1130, 1909, 1964], "aux": [1131, 1132, 1134, 1135, 1136, 1140], "my_loss_func": 1131, "y_pred": [1131, 1907], "loss_per_sampl": 1131, "y_true": 1131, "autodiff": [1134, 1135, 1136, 1259], "jacobian_f": [1134, 1135], "f_x": [1134, 1135], "jacboian": [1134, 1135], "expectedx": [1134, 1135], "expectedi": [1134, 1135], "_preallocate_and_copi": 1135, "stand": [1136, 1140, 1883, 1928, 1938], "jvp_out": 1136, "jvp_fn": 1137, "optimiz": [1139, 1881], "l1": [1139, 1394, 1395, 1465, 1542, 1587, 1637, 1646, 1915, 1920], "l2": [1139, 1395, 1425, 1465, 1676, 1677, 1678, 1679, 1681, 1683, 1689, 1690, 1692, 1903], "vjpfunc": 1140, "unsuccessfulli": [1141, 1872], "rummag": [1141, 1872], "batched_dot": [1141, 1872], "jacobian_row": [1141, 1872], "get_vjp": [1141, 1872], "n1": [1141, 1744, 1872], "n0": [1141, 1872], "batched_pow": [1141, 1872], "autobatch": [1141, 1872], "sparse_grad": [1142, 1882, 1964], "tau": [1145, 1240, 1535, 1678, 1692, 1709, 1710, 1780, 1882], "elementari": [1145, 1904, 1912], "reflector": [1145, 1627, 1710], "household": [1145, 1240, 1627, 1710], "householder_product": [1145, 1627, 1709], "gel": [1145, 1246], "set_default_dtyp": 1147, "set_deterministic_debug_mod": [1148, 1861], "set_float32_matmul_precis": 1149, "edge_ord": [1153, 1882], "rightarrow": 1153, "closer": [1153, 1483, 1723, 1909, 1915, 1931, 1961, 1962, 1963], "interior": 1153, "theorem": 1153, "h_l": 1153, "h_r": 1153, "neighbor": [1153, 1197, 1486, 1488, 1820], "xi_1": 1153, "xi_2": 1153, "approx": [1153, 1825, 1912], "80": [1153, 1256, 1702, 1771, 1907, 1927], "halv": 1153, "coord": 1153, "54": [1157, 1396, 1783], "46": [1157, 1782], "hann_window": [1157, 1820, 1882, 1886, 1926], "hann": [1158, 1783], "hist": [1161, 1162, 1882], "bin_edg": [1161, 1162, 1882], "9524": 1161, "leftmost": [1162, 1899], "leg": 1166, "triangl": [1166, 1945], "hypotenus": 1166, "4031": 1166, "gammainc": [1168, 1941], "gammaincc": [1169, 1941], "index_reduce_": [1173, 1882], "1427": 1174, "0231": 1174, "5414": 1174, "0009": 1174, "4664": [1174, 1841], "2647": 1174, "1228": 1174, "6571": 1174, "7230": 1174, "6004": 1174, "inferencemod": [1175, 1904], "bump": 1175, "_version": [1175, 1926], "multidimension": [1177, 1270, 1397], "8173": 1177, "0874": 1177, "1784": 1177, "3279": 1177, "7894": 1177, "4682": 1177, "7159": 1177, "1506": 1177, "4034": 1177, "3657": 1177, "0387": 1177, "9892": 1177, "1774": 1177, "3261": 1177, "3917": 1177, "4537": [1177, 1605], "7493": 1177, "1724": 1177, "2291": 1177, "5749": 1177, "2267": 1177, "7920": 1177, "3607": 1177, "3701": 1177, "3666": 1177, "5850": [1177, 1231], "7242": 1177, "9837": 1177, "1560": 1177, "2907": 1177, "6785": 1177, "5671": [1177, 1232], "5452": 1177, "6912": 1177, "5509": 1177, "1782": 1177, "9843": 1177, "7366": 1177, "5672": [1177, 1668], "5115": 1177, "4864": 1177, "2476": 1177, "4337": 1177, "6347": 1177, "1748": 1177, "3567": [1177, 1231], "6558": 1177, "2469": [1177, 1915], "5787": [1177, 1281], "typecheck": [1187, 1926], "mypi": [1187, 1883, 1884], "warn_alwai": 1188, "set_warn_alwai": 1188, "nonfinit": 1189, "test_el": [1191, 1882], "assume_uniqu": [1191, 1882], "0j": [1196, 1869], "nola": 1197, "envelop": 1197, "hop": [1197, 1820], "shorter": [1197, 1925, 1936], "griffin": 1197, "ieee": [1197, 1388, 1787, 1918], "tran": 1197, "assp": 1197, "vol": [1197, 1388, 1787], "pp": [1197, 1388, 1787], "236": 1197, "apr": 1197, "1984": 1197, "slide": [1197, 1347, 1348, 1349, 1381, 1427, 1428, 1429, 1485, 1527, 1557, 1558, 1559, 1601, 1727, 1728, 1820], "fft_size": 1197, "scriptmodul": [1198, 1199, 1204, 1208, 1210, 1211, 1212, 1216, 1217, 1675, 1881, 1883, 1892, 1925], "attributemodul": 1198, "names_ag": 1198, "get_debug_st": 1199, "graphexecutorst": 1199, "_extra_fil": [1199, 1200, 1208, 1211, 1914], "save_to_buff": 1199, "add_modul": [1200, 1434], "init_weight": [1200, 1434, 1915], "buf": [1200, 1434], "20l": [1200, 1434], "1l": [1200, 1434], "5l": [1200, 1434], "pretti": [1200, 1674, 1771, 1881, 1955, 1958, 1962], "syntax": [1200, 1881, 1884, 1928, 1960], "code_with_const": 1200, "constmap": 1200, "extra_repr": [1200, 1434, 1909], "get_buff": [1200, 1434], "attributeerror": [1200, 1434, 1909, 1931], "get_extra_st": [1200, 1434], "set_extra_st": [1200, 1434], "get_paramet": [1200, 1434], "net_b": [1200, 1434], "net_c": [1200, 1434], "transit": [1200, 1302, 1434, 1820, 1880, 1881, 1951, 1962], "inlined_graph": 1200, "ipu": [1200, 1434, 1888, 1920], "missing_kei": [1200, 1434], "unexpected_kei": [1200, 1434], "remove_dupl": [1200, 1434], "named_children": [1200, 1434, 1915], "conv4": [1200, 1434], "conv5": [1200, 1434], "memo": [1200, 1434, 1958], "register_backward_hook": [1200, 1434, 1610], "register_full_backward_hook": [1200, 1434, 1915], "register_forward_hook": [1200, 1434, 1608, 1915], "with_kwarg": [1200, 1434], "always_cal": [1200, 1434, 1608], "fire": [1200, 1434, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1908, 1914, 1965], "register_module_forward_hook": [1200, 1434, 1915], "register_forward_pre_hook": [1200, 1371, 1434, 1609, 1915], "forward_pr": [1200, 1434], "register_module_forward_pre_hook": [1200, 1434, 1915], "register_module_full_backward_hook": [1200, 1434, 1606, 1904, 1915], "register_full_backward_pre_hook": [1200, 1434, 1915], "register_module_full_backward_pre_hook": [1200, 1434, 1915], "register_load_state_dict_post_hook": [1200, 1434, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "incompatible_kei": [1200, 1434], "register_modul": [1200, 1434, 1612], "register_paramet": [1200, 1434, 1613, 1909, 1915], "register_state_dict_pre_hook": [1200, 1434, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "keep_var": [1200, 1434], "gan": [1200, 1434, 1628, 1661], "witch": 1200, "share_memori": [1200, 1434, 1917], "share_memory_": [1200, 1434, 1896, 1942], "shallow": [1200, 1371, 1434, 1482, 1483, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "4d": [1200, 1353, 1381, 1398, 1434, 1486, 1527, 1544, 1571, 1602, 1621, 1726], "1913": [1200, 1434], "3420": [1200, 1434], "5113": [1200, 1434, 1841], "2325": [1200, 1233, 1434], "gpu1": [1200, 1434], "1914": [1200, 1434], "5112": [1200, 1434, 1907], "3741": [1200, 1434], "2382": [1200, 1323, 1434], "5593": [1200, 1434], "4443": [1200, 1434], "6122": [1200, 1434], "1150": [1200, 1434], "to_empti": [1200, 1434], "dst_type": [1200, 1434], "set_to_non": [1200, 1434, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1907], "the_typ": 1201, "the_valu": 1201, "script_bar": 1203, "addmod": 1203, "preserved_attr": 1204, "optimize_numer": 1204, "optimize_for_infer": [1204, 1955], "run_frozen_optim": 1204, "scripted_modul": [1204, 1212, 1920], "frozen_modul": 1204, "modified_tensor": 1204, "mymodule2": 1204, "dump_alias_db": 1204, "pdb": [1205, 1212, 1218, 1881, 1883], "training_method": 1205, "interfacetyp": 1206, "impl1": 1206, "impl2": 1206, "user_fn": 1206, "user_fn_jit": 1206, "target_typ": 1207, "testcod": [1207, 1883], "key1": 1207, "val1": 1207, "key2": 1207, "val2": 1207, "_restore_shap": 1208, "scriptfunct": [1208, 1212, 1213, 1216, 1925], "readlin": [1208, 1272, 1928], "retrac": 1208, "other_method": 1210, "lesser": [1210, 1904, 1906], "extent": [1210, 1906, 1940], "frozen_mod": 1210, "offlin": 1211, "_frames_up": 1212, "_rcb": 1212, "scriptdict": 1212, "scriptlist": 1212, "test_sum": 1212, "scripted_fn": [1212, 1881], "conv2": [1212, 1434, 1462, 1881, 1931], "some_entry_point": 1212, "python_only_fn": 1212, "testnnmodul": 1212, "pdt_model": 1212, "scripted_model": [1212, 1928], "un": [1214, 1357, 1931], "unfus": 1214, "nb": 1214, "check_trac": [1216, 1217], "check_input": [1216, 1217, 1881], "check_toler": [1216, 1217], "_force_outplac": [1216, 1217], "_module_class": [1216, 1217], "_compilation_unit": [1216, 1217], "compilationunit": [1216, 1217], "example_kwarg_input": 1216, "_store_input": [1216, 1217], "trace_modul": [1216, 1881, 1884], "untrack": 1216, "checker": [1216, 1217, 1884, 1925], "diverg": [1216, 1217, 1400, 1545, 1880, 1884], "traced_foo": [1216, 1881], "example_weight": [1216, 1217], "example_forward_input": [1216, 1217], "example_inputs_is_kwarg": 1217, "method2": 1217, "example_method2_input": 1217, "weighted_kernel_sum": 1217, "use_memory_effici": 1218, "memory_effici": 1218, "scriptabl": 1218, "kaiser": [1220, 1477, 1479, 1481], "i_0": [1220, 1221, 1786, 1841, 1941], "zeroth": [1220, 1786, 1941], "out_i": 1220, "kroneck": 1221, "a_0": 1221, "a_n": 1221, "b_0": 1221, "b_1": 1221, "b_n": 1221, "k_0": [1221, 1841], "k_1": 1221, "k_n": 1221, "j_0": 1221, "j_1": 1221, "j_n": 1221, "k_t": 1221, "i_t": [1221, 1404, 1691], "b_t": 1221, "j_t": 1221, "bmatrix": 1221, "a_": [1221, 1292, 1422, 1841], "cdot": [1221, 1246, 1258, 1350, 1351, 1369, 1370, 1392, 1400, 1437, 1438, 1439, 1440, 1441, 1477, 1515, 1538, 1716, 1820, 1941, 1947], "vdot": [1221, 1268, 1269, 1882, 1926], "ddot": [1221, 1268], "kth": 1222, "full_lik": [1226, 1882, 1886, 1926], "logarithm": [1229, 1234, 1260, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1287, 1357, 1517, 1552, 1800, 1941], "gamma": [1229, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1473, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1692, 1694, 1698, 1699, 1702, 1707, 1708, 1726, 1880, 1882, 1925, 1926, 1927, 1941], "5724": [1229, 1941], "1208": [1229, 1941], "mathrlap": [1230, 1236, 1237, 1238, 1239, 1247, 1250, 1259, 1261, 1263, 1264, 1627], "qquad": [1230, 1232, 1236, 1237, 1238, 1239, 1240, 1247, 1250, 1259, 1261, 1263, 1264, 1627], "eigenvalu": [1230, 1236, 1237, 1238, 1239, 1252, 1255, 1258, 1263, 1264, 1273, 1712, 1882], "resp": [1230, 1237, 1239, 1263, 1264, 1281], "5266": 1230, "9586": 1230, "0626j": 1230, "4160": 1230, "5895": 1230, "2322": 1230, "2976j": 1230, "4928": [1230, 1841], "4692e": 1230, "8747e": 1230, "check_error": [1231, 1242, 1244, 1249, 1262, 1882], "opportun": [1231, 1881, 1937, 1958, 1959], "performantli": 1231, "3792": 1231, "9831j": 1231, "8757": 1231, "5425": 1231, "6374j": 1231, "kappa": 1232, "_p": [1232, 1443], "frobeniu": [1232, 1246, 1253, 1257, 1667], "nuc": [1232, 1253, 1257, 1270, 1638, 1647, 1667], "nuclear": [1232, 1253, 1257, 1667], "sigma_1": [1232, 1246, 1255, 1258], "sigma_n": 1232, "kappa_2": 1232, "kappa_": 1232, "4142": [1232, 1257, 1667, 1716], "1623": [1232, 1253], "2426": [1232, 1257, 1667], "7071": [1232, 1779], "5917": 1232, "9941": 1233, "5132": 1233, "5681": 1233, "4653": 1233, "4507": 1233, "4119": 1233, "6163": 1233, "1073": 1233, "3957": 1233, "9666": [1233, 1524], "0840": 1233, "3357": 1233, "2139": 1233, "slogdet": [1234, 1281, 1882, 1926], "0934": 1234, "1990": [1234, 1281], "4099": [1234, 1281], "7386": [1234, 1281], "diagonaliz": [1236, 1238], "eigenvector": [1236, 1237, 1273, 1882], "neq": [1236, 1237, 1240, 1264, 1335, 1437, 1439, 1677, 1678, 1679, 1681, 1683, 1689, 1690, 1692, 1696, 1824], "phi": [1236, 1237, 1264, 1384, 1531, 1824], "shall": [1236, 1237, 1264, 1629, 1633], "lambda_i": [1236, 1237, 1252], "lambda_j": [1236, 1237], "eigval": [1236, 1882], "9828": [1236, 1849, 1915], "3889j": 1236, "4617": 1236, "3010j": 1236, "1662": 1236, "7435j": 1236, "6139": 1236, "0562j": 1236, "1226": [1236, 1238], "5738j": [1236, 1238], "7537": [1236, 1238], "1286j": [1236, 1238], "9218": 1236, "1882": 1236, "2220j": 1236, "0270": 1236, "3867j": 1236, "7119e": 1236, "2841e": 1236, "uplo": [1237, 1239, 1882], "unitari": [1237, 1240, 1259, 1264, 1627, 1710], "ill": [1237, 1498, 1918], "eigvalsh": [1237, 1255], "9228": [1237, 1239], "2029": [1237, 1239], "0862j": [1237, 1239], "3464": [1237, 1239], "3277": [1237, 1239], "9415": [1237, 1239], "0846": 1237, "9964": 1237, "9170": 1237, "3898j": 1237, "0331j": 1237, "1062e": 1237, "5423e": 1237, "polynomi": [1238, 1239, 1705, 1959], "_n": [1238, 1239, 1241, 1627, 1909], "4576e": [1238, 1265], "5797": 1239, "4629": 1239, "1605": 1239, "3780": 1239, "1113": [1239, 1915], "7381": 1239, "h_1h_2": 1240, "h_k": 1240, "h_i": [1240, 1468], "_m": [1240, 1627], "tau_i": 1240, "8034": 1240, "4184j": 1240, "2588": 1240, "0174j": 1240, "6853": 1240, "7953j": 1240, "0790": 1240, "5620j": 1240, "6989j": 1240, "5360": 1240, "1193j": 1240, "3877": 1240, "6691j": 1240, "3512": 1240, "3024j": 1240, "4766": 1240, "5783j": 1240, "0361": [1240, 1915], "6587j": 1240, "6396": [1240, 1915], "1612j": 1240, "3693": 1240, "4481j": 1240, "aa": 1241, "pinv": [1241, 1246, 1714], "moor": [1241, 1258], "penros": [1241, 1258], "ainv": [1241, 1242, 1262, 1266], "1921e": 1241, "9073e": [1241, 1485], "5107e": 1241, "ldl": [1243, 1245], "indefinit": 1243, "ld": [1243, 1244, 1245, 1882], "sytrf": [1243, 1244], "ldl_solv": 1243, "ldl_factor_ex": [1243, 1245], "2079": [1243, 1244, 1941], "2414": [1243, 1244], "9428": [1243, 1244], "4554": [1243, 1244], "3264": [1243, 1244], "3823": [1243, 1244], "5884": [1243, 1244], "9595": [1243, 1244, 1779], "2695": [1243, 1244], "8513": [1243, 1244], "1633": [1243, 1244], "ldl_factor": 1244, "rcond": [1246, 1258, 1714, 1882], "_f": 1246, "gelsi": 1246, "gelsd": 1246, "gelss": 1246, "mind": [1246, 1264, 1377, 1904, 1910, 1912, 1931, 1959, 1962, 1967], "tridiagon": 1246, "sigma_i": [1246, 1264, 1824], "residu": [1246, 1273, 1882, 1915], "singular_valu": [1246, 1882], "rh": [1246, 1291], "0838": [1246, 1915], "2275": [1246, 1322], "3844": 1246, "5499": 1246, "1175": 1246, "9102": 1246, "0870": 1246, "6772": 1246, "7758": 1246, "5109": 1246, "4382": 1246, "3769": 1246, "1818": 1246, "3450": 1246, "0806": [1246, 1915], "3967": 1246, "3994": 1246, "1521": 1246, "1473": 1246, "9194": 1246, "0458": 1246, "6705": [1246, 1305], "1802": 1246, "4086": 1246, "5152e": 1246, "almost": [1247, 1248, 1921, 1958], "5007": 1247, "9755": 1247, "0489": 1247, "9644": [1247, 1300], "9605e": 1247, "0376e": 1247, "lu_factor_ex": [1248, 1290], "lu_unpack": [1248, 1290, 1882, 1926], "b1": 1248, "b2": [1248, 1907, 1913], "a_factor": 1248, "getrf": [1249, 1262], "adjoint": [1250, 1882, 1926, 1944, 1946], "_exp": 1252, "7183": [1252, 1915], "3891": 1252, "8660": 1252, "ord": [1253, 1257, 1270, 1667, 1882, 1884, 1926], "la": [1253, 1257, 1270, 1915], "2829": 1253, "2627": 1253, "0756": 1254, "4980": 1254, "6617": 1254, "4994": 1254, "9980": 1254, "2731": 1254, "8001": 1254, "2640": 1254, "4571": 1254, "5511": 1254, "0163": [1254, 1300], "5292": 1254, "4899": 1254, "0822": 1254, "2773": [1254, 1899], "varepsilon": [1255, 1258, 1482], "tol": [1255, 1273, 1882], "fewest": 1256, "nd": [1256, 1918], "bc": [1256, 1927], "75000": 1256, "26": [1256, 1697, 1956, 1969], "148": 1256, "vector_norm": [1257, 1667], "matrix_norm": [1257, 1270, 1628, 1667], "7460": [1257, 1667], "3485": 1257, "8570e": 1257, "8480": 1257, "2361": [1257, 1667, 1668], "7417": [1257, 1667], "computation": [1258, 1912], "5495": [1258, 1322], "0979": 1258, "4092": 1258, "4132": [1258, 1785], "1143": 1258, "3662": 1258, "6374": 1258, "9294": 1258, "3269": [1258, 1915], "5745": [1258, 1818, 1819, 1867, 1868], "0382": [1258, 1323], "5922": 1258, "6759": 1258, "0600": 1258, "1933": 1258, "2090": 1258, "0903": 1258, "0817": 1258, "4752": [1258, 1823], "7124": 1258, "1631": 1258, "2272": 1258, "1356": 1258, "3933": 1258, "5023": 1258, "0308": 1258, "1725": 1258, "5216": 1258, "apinv": 1258, "5633e": 1258, "0830e": 1258, "wide": [1259, 1264, 1627, 1781, 1906, 1909, 1915, 1927, 1959], "51": [1259, 1432, 1722], "167": [1259, 1722], "68": [1259, 1722, 1881, 1883], "8571": [1259, 1722], "3943": [1259, 1722], "3314": [1259, 1722], "4286": [1259, 1722], "9029": [1259, 1722], "0343": [1259, 1722], "2857": [1259, 1722], "1714": [1259, 1722, 1915], "9429": [1259, 1722], "175": [1259, 1722], "q2": 1259, "r2": [1259, 1473], "6099e": 1259, "2158e": 1259, "logabsdet": [1260, 1882], "0032": 1260, "1219": [1260, 1741], "6690": 1260, "1161": 1260, "4053": 1260, "6218": [1260, 1838], "9273": 1260, "0082": 1260, "7576": 1260, "logdet": [1260, 1882, 1926], "linalg_slogdet": [1260, 1882, 1926], "2776": 1260, "solve_triangular": [1261, 1848], "expand_a": [1261, 1882, 1909, 1926, 1944], "rectangular": [1263, 1264, 1292, 1820, 1902, 1923], "triu_": [1263, 1882], "tril_": [1263, 1882], "full_matric": [1264, 1265, 1632, 1824, 1882, 1964], "vh": [1264, 1632, 1824, 1882, 1964], "gesvdj": [1264, 1265, 1824], "jacobi": 1264, "gesvda": [1264, 1265], "gesvd": [1264, 1265, 1824], "u_k": 1264, "v_k": 1264, "sigma_j": [1264, 1824], "eigendecomposit": 1264, "0486e": 1264, "0957e": 1264, "5139": 1265, "1087": 1265, "1066": 1265, "ind": [1266, 1267, 1882, 1910], "tensorsolv": 1266, "ndim": [1266, 1267, 1897, 1899, 1940, 1946, 1956], "atensorinv": 1266, "movedim": [1267, 1307, 1882, 1910, 1926, 1944], "tensorinv": 1267, "vandermond": [1268, 1866], "pmatrix": 1268, "x_n": [1268, 1350, 1351, 1394, 1395, 1401, 1425, 1465, 1846, 1904], "125": [1268, 1452, 1866, 1882], "overlin": [1269, 1869], "3223": 1269, "2815": 1269, "1944": [1269, 1915], "4345": 1270, "pickle_modul": [1272, 1754], "weights_onli": [1272, 1879, 1893], "pickle_load_arg": 1272, "register_packag": [1272, 1920], "binaryio": [1272, 1754, 1928], "mmape": 1272, "untrust": [1272, 1879, 1893, 1928], "tamper": [1272, 1928], "ram": [1272, 1907], "surg": 1272, "unicodedecodeerror": 1272, "codec": 1272, "0x": 1272, "latin1": 1272, "byte_arrai": 1272, "niter": [1273, 1712, 1825], "ortho_iparam": 1273, "ortho_fparam": 1273, "ortho_bparam": 1273, "knyazev": 1273, "knyazev2001": 1273, "stathopoulosetal2002": 1273, "converg": [1273, 1465, 1627, 1679, 1680, 1704, 1903, 1915, 1918], "precondition": 1273, "eigenpair": 1273, "criterion": [1273, 1350, 1351, 1368, 1370, 1395, 1401, 1425, 1426, 1437, 1438, 1439, 1465, 1466, 1482, 1483, 1516, 1697, 1729, 1911], "fep": 1273, "eigenproblem": 1273, "iparam": 1273, "fparam": 1273, "bparam": 1273, "ivar": 1273, "fvar": 1273, "bvar": 1273, "tvar": 1273, "istep": 1273, "converged_count": 1273, "rerr": 1273, "force_stop": 1273, "2001": 1273, "precondit": 1273, "eigensolv": 1273, "siam": 1273, "sci": 1273, "517": 1273, "541": 1273, "epub": 1273, "doi": [1273, 1388, 1787], "1137": 1273, "s1064827500366124": 1273, "andrea": 1273, "stathopoulo": 1273, "kesheng": 1273, "2002": [1273, 1787], "2165": 1273, "2182": 1273, "s1064827500370883": 1273, "duerschetal2018": 1273, "jed": 1273, "duersch": 1273, "meiyu": 1273, "shao": 1273, "chao": 1273, "ming": 1273, "gu": 1273, "c655": 1273, "c676": 1273, "17m1129830": 1273, "log_": [1274, 1275, 1276, 1277, 1882, 1897], "7767": 1274, "3234": 1274, "2156": 1274, "2411": 1274, "5739": 1274, "5637": 1274, "4640": 1274, "1952": 1274, "4226": 1274, "5204": [1274, 1731], "5224": 1275, "9354": 1275, "7257": 1275, "1301": 1275, "2820": 1275, "0290": 1275, "1392": 1275, "8857": 1275, "6476": 1275, "0090": [1276, 1336, 1718, 1941], "9923": 1276, "5372": 1276, "2492": 1276, "8653": 1276, "7055": 1276, "7705": 1276, "2225": 1276, "8419": 1277, "8003": [1277, 1919], "9971": 1277, "5287": 1277, "0490": 1277, "2483": 1277, "0042": 1277, "9196": 1277, "3504": [1277, 1841], "logsumexp": [1278, 1882, 1897, 1926, 1941], "3069": 1278, "6867": 1278, "8731": 1278, "30000": 1278, "1269e": 1278, "log_2": 1279, "logaddexp": [1279, 1882, 1926], "limits_": 1280, "42296738": 1280, "04462666": 1280, "86278635": 1280, "94622083": 1280, "05277811": 1280, "39202815": 1280, "83525007": 1280, "84492621": 1280, "06084887": 1280, "06844475": 1280, "2611": [1281, 1838], "9254": 1281, "6213": [1281, 1915], "6843": 1281, "3242": 1281, "9665": 1281, "4539": 1281, "0887": [1281, 1941], "1336": 1281, "4025": 1281, "7089": [1281, 1377], "9032": 1281, "3031": 1281, "2589": 1287, "1135": 1287, "5481": [1287, 1300, 1915], "9566": 1287, "sum_j": [1288, 1424, 1467, 1469, 1589, 1803, 1941], "0593": [1288, 1915], "5696": 1288, "6859e": 1288, "compute_pivot": 1290, "transposit": [1290, 1845, 1940], "perm": 1290, "a_lu": 1290, "5558": 1290, "1684": 1290, "1551": 1290, "1940": 1290, "6189": 1290, "5497": 1290, "4526": 1290, "2526": 1290, "3285": 1290, "7988": 1290, "7175": 1290, "9701": 1290, "2634": 1290, "9255": 1290, "3459": 1290, "00000e": 1291, "8312": 1291, "unpack_data": [1292, 1882], "unpack_pivot": [1292, 1882], "l_": [1292, 1339, 1343, 1347, 1351, 1362, 1363, 1364, 1365, 1402, 1427], "u_": [1292, 1677, 1681], "3552": [1294, 1525], "3825": 1294, "8297": 1294, "3477": 1294, "2035": [1294, 1818, 1819, 1867, 1868], "2252": [1294, 1941], "5002": 1294, "6248": [1294, 1303], "1307": 1294, "0608": [1294, 1796], "1244": 1294, "0139": 1294, "6763": 1298, "7445": 1298, "2369": 1298, "argmax": [1298, 1342, 1427, 1557, 1558, 1559, 1836, 1882, 1926, 1964], "max_indic": 1298, "2360": 1298, "2942": 1298, "1222": [1298, 1915], "8475": 1298, "1949": 1298, "1127": 1298, "6702": 1298, "5717": 1298, "9207": 1298, "1297": 1298, "8768": 1298, "6172": 1298, "6060": 1298, "2432": 1298, "3288": 1300, "3367": 1300, "nanmean": [1300, 1882, 1926], "3841": 1300, "6320": 1300, "4254": 1300, "7384": 1300, "0131": 1300, "6549": [1300, 1779], "4279": 1300, "3350": 1300, "7694": 1300, "5600": [1300, 1486], "0842": 1300, "9580": 1300, "3623": 1300, "2343": [1300, 1899], "5085": 1300, "4599": 1300, "1807": 1300, "5219": 1301, "5212": 1301, "2202": 1301, "2505": 1301, "3982": 1301, "9948": 1301, "3518": 1301, "3131": 1301, "3180": [1301, 1940], "6993": 1301, "0436": 1301, "0438": 1301, "2270": 1301, "2751": 1301, "7303": 1301, "2192": 1301, "3321": 1301, "2488": 1301, "0778": 1301, "9510": 1301, "7048": 1301, "4742": [1301, 1854, 1941], "7125": [1301, 1805], "plot": [1302, 1906, 1930, 1945, 1971], "t_0": [1302, 1697], "t_": [1302, 1383, 1529, 1696, 1697, 1882, 1940, 1958], "s_0": 1302, "s_": [1302, 1340, 1341, 1380, 1484], "g_0": 1302, "g_": [1302, 1681, 1691, 1692], "g_i": 1302, "t_i": 1302, "0d": [1302, 1426], "xy": 1302, "50276": 1302, "cartesian_prod": [1302, 1882, 1926], "grid_x": 1302, "grid_i": 1302, "dstack": [1302, 1882, 1926, 1940], "matplotlib": [1302, 1945], "pyplot": [1302, 1945], "plt": 1302, "plot_surfac": 1302, "6750": 1303, "0857": [1303, 1851], "7197": [1303, 1875], "argmin": [1303, 1882, 1926, 1964], "min_indic": [1303, 1882], "1334": 1303, "2803": 1303, "4644": [1303, 1818, 1819, 1867, 1868], "2635": [1303, 1915], "3651": 1303, "0384": 1303, "0128": 1303, "7015": 1303, "1153": 1303, "9849": 1303, "1458": [1303, 1941], "5788": 1303, "deduc": [1305, 1940], "4851": 1305, "5037": 1305, "3633": 1305, "0760": 1305, "3362": [1307, 1308], "8437": [1307, 1308], "9627": [1307, 1308], "1727": [1307, 1308], "5173": [1307, 1308], "1398": [1307, 1308], "mpsalloc": [1309, 1310], "metal": [1310, 1319, 1892, 1895, 1916], "mpsgraph": 1310, "wait_until_complet": [1315, 1316], "signpost": [1315, 1316, 1317], "xcode": 1316, "recommendedmaxworkingsets": 1319, "unlimit": [1319, 1907], "1321": 1322, "4370": [1322, 1940], "1289": 1322, "0527": 1322, "3077": [1322, 1814], "0881": 1322, "1259": 1322, "0284": 1322, "2015": [1323, 1902, 1915], "6087": 1323, "1494": 1323, "5491": 1323, "260": 1323, "8663": 1323, "3137": 1323, "0700": 1323, "8378": 1323, "5146": 1323, "1216": 1323, "5244": 1323, "5767": 1323, "1363": 1323, "5877": 1323, "5083": 1323, "1614": 1323, "1645": 1323, "7021": 1323, "0085": 1323, "0367": 1323, "1567": 1323, "4312": 1323, "1019": 1323, "4394": 1323, "8753": 1323, "_sampl": 1324, "thtensorrandom": 1324, "320": [1324, 1460], "0404": 1326, "6361": 1326, "multigammaln": [1327, 1941], "4028e": 1328, "38": [1328, 1956], "1400e": 1328, "isnan": [1329, 1882, 1926, 1940, 1964], "midpoint": [1331, 1723], "weakli": [1333, 1334, 1941], "to_spars": [1334, 1801, 1882, 1919, 1926, 1940], "2262": [1336, 1718], "0682": [1336, 1718], "2866": [1336, 1718], "3940": [1336, 1718], "5x7": [1340, 1344], "7x7": [1340, 1344], "10x7": [1340, 1344], "cube": [1341, 1345, 1729], "d_": [1341, 1345, 1349, 1361, 1364, 1367, 1429, 1432, 1457, 1460, 1486, 1491, 1533, 1849, 1850, 1851, 1852], "5x7x9": [1341, 1345], "7x7x7": [1341, 1345], "7x9x8": [1341, 1345], "n_class": 1342, "cutoff": [1342, 1902], "div_valu": 1342, "head_bia": 1342, "edouard": 1342, "grave": [1342, 1357], "armand": 1342, "joulin": 1342, "moustapha": 1342, "ciss\u00e9": 1342, "grangier": 1342, "herv\u00e9": 1342, "j\u00e9gou": 1342, "imbalanc": 1342, "zipf": 1342, "law": 1342, "102": [1342, 1963], "1001": 1342, "1002": 1342, "_class": 1342, "maxunpool1d": [1343, 1427, 1560, 1861], "maxunpool2d": [1344, 1382, 1428, 1561, 1861], "maxunpool3d": [1345, 1383, 1429, 1562, 1861], "selu": [1346, 1379, 1526, 1882, 1902, 1925, 1926], "n_i": [1347, 1348, 1349, 1362, 1363, 1364, 1427, 1428, 1429, 1482, 1483], "c_j": [1347, 1348, 1349, 1427, 1428, 1429], "size_averag": [1350, 1351, 1368, 1370, 1394, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1505, 1506, 1514, 1516, 1541, 1545, 1546, 1556, 1564, 1565, 1566, 1567, 1568, 1576, 1587, 1588, 1599, 1882], "unreduc": [1350, 1351, 1370, 1395, 1401, 1425, 1441, 1465, 1483], "ell": [1350, 1351, 1370, 1394, 1395, 1401, 1425, 1441, 1465, 1483], "l_1": [1350, 1351, 1370, 1394, 1395, 1401, 1425, 1441, 1465, 1483], "l_n": [1350, 1351, 1370, 1394, 1395, 1401, 1425, 1441, 1465, 1483], "w_n": [1350, 1351, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787], "y_n": [1350, 1351, 1370, 1394, 1395, 1401, 1425, 1441, 1465, 1846, 1904], "lim_": [1350, 1904], "secondli": 1350, "rescal": [1350, 1351, 1370, 1438, 1439, 1441, 1467, 1469, 1505, 1506, 1516, 1568, 1632, 1661], "nbatch": [1350, 1351], "meantim": [1350, 1351, 1368, 1370, 1394, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1969], "pos_weight": [1351, 1506, 1882], "recal": [1351, 1909, 1945, 1962], "ell_c": 1351, "l_c": 1351, "p_c": 1351, "pai": [1351, 1506, 1921, 1944], "spacial": [1351, 1506], "random_": [1351, 1370, 1441, 1506, 1882, 1897, 1948], "hat": [1352, 1353, 1354, 1397, 1398, 1399, 1473], "terminologi": [1352, 1353, 1354, 1473], "5d": [1354, 1399, 1486, 1533, 1544, 1571, 1602], "volumetr": [1354, 1473, 1486, 1533, 1544, 1602, 1603, 1604], "spatio": [1354, 1473], "in1_featur": 1355, "in2_featur": 1355, "in1": [1355, 1504], "in2": [1355, 1504], "blank": [1357, 1517, 1882, 1885], "zero_infin": [1357, 1517, 1882], "connectionist": [1357, 1517], "unseg": 1357, "longest": [1357, 1654, 1656, 1657, 1911], "input_length": [1357, 1517, 1882, 1911], "target_length": [1357, 1517, 1882], "s_n": 1357, "target_n": 1357, "unbatch": [1357, 1370, 1381, 1386, 1397, 1404, 1440, 1449, 1477, 1527], "s_min": 1357, "toronto": 1357, "edu": [1357, 1729], "icml_2006": 1357, "background": [1357, 1365, 1533, 1571, 1917, 1936], "channel_shuffl": [1358, 1882, 1926], "_left": [1359, 1360, 1361, 1455, 1456, 1457, 1458, 1459, 1460, 1489, 1490, 1491, 1571], "_right": [1359, 1360, 1361, 1455, 1456, 1457, 1458, 1459, 1460, 1489, 1490, 1491, 1571], "0491": [1359, 1489], "7152": [1359, 1489], "0749": [1359, 1489], "3287": [1359, 1489], "8966": [1359, 1489], "1466": [1359, 1489], "2771": [1359, 1489], "6616": [1359, 1489], "4523": [1359, 1489], "1255": [1359, 1489], "6372": [1359, 1489, 1824], "1182": [1359, 1489], "8652": [1359, 1489], "_top": [1360, 1361, 1456, 1457, 1459, 1460, 1490, 1491, 1571], "_bottom": [1360, 1361, 1456, 1457, 1459, 1460, 1490, 1491, 1571], "6585": 1360, "4320": [1360, 1834], "8701": 1360, "4649": 1360, "_front": [1361, 1457, 1460, 1491, 1571], "_back": [1361, 1457, 1460, 1491, 1571], "_j": [1362, 1363], "star": [1362, 1363, 1364, 1884], "\u00e0": [1362, 1363, 1364, 1365, 1366, 1367, 1381, 1485], "trou": [1362, 1363, 1364, 1365, 1366, 1367, 1381, 1485], "harder": [1362, 1363, 1364, 1365, 1366, 1367, 1381, 1428, 1429, 1485], "nice": [1362, 1363, 1364, 1365, 1366, 1367, 1381, 1427, 1428, 1429, 1485, 1898, 1904, 1907, 1928], "prod_": [1363, 1364, 1366, 1367, 1380, 1484, 1683], "out_j": 1364, "deconvolut": [1365, 1366, 1367, 1511, 1512, 1513], "_pad": [1365, 1366, 1367], "semi": [1368, 1394, 1880, 1902], "supervis": [1368, 1394], "vert": [1369, 1443, 1515], "_2": [1369, 1515, 1628, 1661], "ast_1": [1369, 1385], "ast_2": [1369, 1385], "ignore_index": [1370, 1441, 1516, 1568, 1882], "label_smooth": [1370, 1516, 1882], "unbalanc": [1370, 1441], "d_1": [1370, 1441, 1516, 1568], "d_2": [1370, 1441, 1516, 1568], "d_k": [1370, 1441, 1516, 1568], "_index": [1370, 1441], "logsoftmax": [1370, 1441, 1467, 1552], "nllloss": [1370, 1467, 1568, 1589, 1861], "blend": 1370, "smooth": [1370, 1395, 1465, 1470, 1516, 1690], "w_c": 1370, "truth": [1370, 1516, 1891, 1945], "rethink": [1370, 1516], "incept": [1370, 1516], "spectral_norm": [1371, 1651], "neuron": 1372, "detector": 1372, "dropout1d": [1374, 1882], "_freez": 1377, "sparseadam": [1377, 1927], "0251": 1377, "6902": [1377, 1720], "7172": 1377, "6431": 1377, "0748": 1377, "6969": 1377, "4970": 1377, "3448": 1377, "9685": 1377, "3677": 1377, "7265": 1377, "1685": 1377, "4362": 1377, "4004": [1377, 1805], "9400": 1377, "9124": 1377, "3616": 1377, "1151": 1377, "0309": 1377, "9315": 1377, "1655": [1377, 1907], "9897": [1377, 1909], "0635": 1377, "7895": 1377, "0364": 1377, "6778": 1377, "5803": 1377, "from_pretrain": [1377, 1378, 1961], "bag": [1378, 1525], "per_sample_weight": [1378, 1525, 1882, 1964], "embedding_sum": 1378, "8861": 1378, "4350": 1378, "0523": 1378, "1306": 1378, "5798": 1378, "0044": 1378, "7082": [1378, 1525], "2145": [1378, 1525], "6251": [1378, 1525], "6500": 1378, "satur": [1379, 1526], "alphadropout": [1379, 1499], "160": [1380, 1927], "unfold": [1381, 1882, 1926, 1944], "prod_d": [1381, 1485], "neighborhood": [1381, 1485], "col2im": [1381, 1882, 1926, 1964], "fold_param": [1381, 1485], "input_on": [1381, 1485], "output_ratio": [1382, 1383, 1528, 1529, 1882], "_random_sampl": [1382, 1383, 1528, 1529, 1882], "ben": [1382, 1383, 1528, 1529], "graham": [1382, 1383, 1528, 1529], "oh": [1382, 1383, 1528, 1529], "ow": [1382, 1383, 1528, 1529], "_ratio": [1382, 1383, 1529], "13x12": [1382, 1528], "kt": [1383, 1502, 1510, 1513, 1529, 1559], "ot": [1383, 1529], "13x12x11": [1383, 1529], "044715": [1384, 1531], "pack_sequ": [1386, 1404, 1449, 1656, 1658], "bias_ih": [1387, 1405, 1451], "bias_hh": [1387, 1405, 1451], "homoscedast": [1388, 1530], "heteroscedast": [1388, 1530], "nix": 1388, "weigend": 1388, "1994": 1388, "icnn": 1388, "94": 1388, "orlando": 1388, "fl": 1388, "usa": [1388, 1945], "374138": 1388, "instancenorm": [1389, 1933], "layernorm": [1389, 1397, 1398, 1399, 1477, 1479, 1481, 1547, 1899, 1933, 1969], "shrinkag": [1390, 1471, 1536, 1592], "mobilenetv3": [1392, 1538], "_val": 1393, "dissimilar": 1394, "l1loss": [1395, 1465, 1546], "outlier": [1395, 1465, 1931, 1932], "huber": [1395, 1465], "smoothl1loss": [1395, 1587], "insensit": 1396, "unused_argument1": 1396, "unused_argument2": 1396, "ingredi": [1397, 1398, 1399], "styliz": [1397, 1398, 1399], "rgb": [1398, 1399, 1945], "color": [1399, 1883, 1884, 1945, 1960], "log_target": [1400, 1545, 1882], "kl": [1400, 1545, 1880], "summaris": 1400, "loss_pointwis": 1400, "batchmean": [1400, 1545], "kl_loss": 1400, "mae": 1401, "proj_siz": [1404, 1450], "f_t": [1404, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "hf": [1404, 1405], "g_t": [1404, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "ig": [1404, 1405], "hg": [1404, 1405], "o_t": 1404, "ho": [1404, 1405], "c_t": 1404, "forget": [1404, 1883, 1884], "1402": 1404, "c_0": [1404, 1405], "proj": 1404, "c_n": 1404, "w_ii": 1404, "w_if": 1404, "w_ig": 1404, "w_io": 1404, "w_hi": 1404, "w_hf": 1404, "w_hg": 1404, "w_ho": 1404, "b_ii": 1404, "b_if": 1404, "b_ig": 1404, "b_io": 1404, "b_hi": 1404, "b_hf": 1404, "b_hg": 1404, "b_ho": 1404, "weight_hr_l": 1404, "_revers": 1404, "h_1": 1405, "c_1": 1405, "time_step": 1405, "_shape": 1406, "sentence_length": 1406, "lazymodulemixin": [1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419], "cls_to_becom": [1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1617], "convtranspose1d": [1413, 1511, 1861, 1933], "convtranspose3d": [1415, 1513, 1861, 1933], "instancenorm1d": [1416, 1543, 1933], "instancenorm2d": [1417, 1543, 1933], "instancenorm3d": [1418, 1543, 1933], "uninitializedparamet": [1419, 1605, 1880], "lrn": 1422, "signal_2d": 1422, "signal_4d": 1422, "output_2d": 1422, "output_4d": 1422, "x_j": [1424, 1467, 1469, 1589, 1803, 1912, 1941], "80827": [1430, 1431, 1432], "unpool": [1430, 1431, 1432], "maxpool3d": [1432, 1559, 1562, 1861, 1933], "unpooled_output": 1432, "t_destin": 1434, "lrelu": [1435, 1915], "hing": [1437, 1439], "sum_i": [1438, 1439, 1466], "nelement": [1438, 1466], "jointli": 1440, "multihead": [1440, 1479], "concat": [1440, 1882, 1926], "head_1": 1440, "head_h": 1440, "head_i": 1440, "qw_i": 1440, "kw_i": 1440, "vw_i": 1440, "scaled_dot_product_attent": [1440, 1882, 1926], "fastpath": [1440, 1958], "inference_mod": [1440, 1481], "nestedtensor": [1440, 1481, 1899], "multihead_attn": 1440, "e_q": 1440, "e_k": 1440, "e_v": 1440, "_head": [1440, 1477], "merge_mask": 1440, "mask_typ": 1440, "merged_mask": 1440, "nll": 1441, "crossentropyloss": [1441, 1516], "num_paramet": 1442, "nchannel": 1442, "decai": [1442, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1695, 1699, 1701, 1702, 1705, 1706, 1708, 1780, 1927], "legitim": [1442, 1533, 1910], "vert_p": 1443, "fromkei": 1444, "popitem": [1444, 1926], "setdefault": [1444, 1926], "upscale_factor": [1446, 1574, 1882, 1964], "upscal": 1446, "video": [1446, 1447, 1898, 1945, 1956], "shi": [1446, 1447], "2016": [1446, 1447, 1483], "_factor": [1446, 1447, 1486, 1487, 1488], "pixel_shuffl": [1446, 1882, 1926, 1933, 1964], "downscale_factor": [1447, 1575, 1882], "pixelshuffl": [1447, 1574, 1575, 1933], "downscal": 1447, "pixel_unshuffl": [1447, 1882, 1926, 1933], "log_input": [1448, 1576, 1882], "poisson": [1448, 1576, 1780, 1880, 1882, 1926], "stirl": [1448, 1576], "hh": [1449, 1451], "flatten_paramet": 1450, "3333333333333333": [1452, 1695, 1701, 1882], "leaki": [1452, 1581, 1902], "rectifi": [1452, 1453, 1578, 1902], "empir": 1452, "1505": 1452, "00853": 1452, "crelu": 1453, "1603": 1453, "05201": 1453, "480": 1460, "6732632423543772848170429916717": [1461, 1584], "0507009873554804934193349852946": [1461, 1584], "kaiming_norm": 1461, "kaiming_normal_": [1461, 1880, 1886, 1902], "initialis": 1461, "calculate_gain": [1461, 1880, 1886, 1902], "modulelist": [1462, 1915], "cascad": 1462, "relu2": [1462, 1605], "swish": [1463, 1586], "coin": [1463, 1586], "cnn": [1465, 1931], "ross": 1465, "girshick": 1465, "quadrat": [1465, 1911], "huberloss": [1465, 1542], "lie": [1467, 1469, 1589, 1803, 1941, 1945, 1958], "w_j": 1468, "soft": [1471, 1535, 1592], "softshrinkag": 1471, "convert_sync_batchnorm": 1473, "r1": 1473, "sync_bn_network": 1473, "ddp_sync_bn_network": 1473, "sync_bn_modul": 1473, "d_model": [1477, 1478, 1479, 1480, 1481], "nhead": [1477, 1478, 1479, 1480, 1481], "num_encoder_lay": 1477, "num_decoder_lay": 1477, "dim_feedforward": [1477, 1479, 1481], "custom_encod": 1477, "custom_decod": 1477, "layer_norm_ep": [1477, 1479, 1481], "norm_first": [1477, 1479, 1481], "ashish": [1477, 1479, 1481], "vaswani": [1477, 1479, 1481], "noam": [1477, 1479, 1481], "shazeer": [1477, 1479, 1481], "niki": [1477, 1479, 1481], "parmar": [1477, 1479, 1481], "jakob": [1477, 1479, 1481], "uszkoreit": [1477, 1479, 1481], "llion": [1477, 1479, 1481], "jone": [1477, 1479, 1481], "aidan": [1477, 1479, 1481], "gomez": [1477, 1479, 1481], "lukasz": [1477, 1479, 1481], "illia": [1477, 1479, 1481], "polosukhin": [1477, 1479, 1481], "6000": [1477, 1479, 1481, 1486, 1726, 1774, 1777], "6010": [1477, 1479, 1481], "feedforward": [1477, 1479, 1481, 1902], "transformer_model": 1477, "word_language_model": 1477, "src_mask": [1477, 1481], "tgt_mask": [1477, 1478, 1479], "memory_mask": [1477, 1478, 1479], "src_key_padding_mask": [1477, 1480, 1481], "tgt_key_padding_mask": [1477, 1478, 1479], "memory_key_padding_mask": [1477, 1478, 1479], "src_is_caus": 1477, "tgt_is_caus": [1477, 1478, 1479], "memory_is_caus": [1477, 1478, 1479], "_mask": [1477, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650], "_key_padding_mask": 1477, "generate_square_subsequent_mask": 1477, "sz": 1477, "decoder_lay": [1478, 1479], "transformerdecoderlay": 1478, "transformer_decod": 1478, "encoder_lay": [1480, 1481], "enable_nested_tensor": 1480, "mask_check": 1480, "bert": [1480, 1961], "1810": 1480, "04805": 1480, "transformerencoderlay": 1480, "transformer_encod": 1480, "flashattent": [1481, 1583], "triplet": [1482, 1483], "x3": 1482, "balnta": [1482, 1483], "riba": [1482, 1483], "a_i": [1482, 1483, 1782], "p_i": [1482, 1483], "rm": [1482, 1483], "bf": [1482, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "rvert_p": [1482, 1569], "tripletmarginwithdistanceloss": [1482, 1600], "triplet_loss": [1482, 1483], "distance_funct": [1483, 1600], "l_i": 1483, "tripletmarginloss": [1483, 1599], "l_p": [1483, 1569], "pairwisedist": [1483, 1572], "penal": [1483, 1915], "distant": 1483, "anchor_id": 1483, "positive_id": 1483, "negative_id": 1483, "l_infin": 1483, "bmva": 1483, "bmvc": 1483, "paper119": 1483, "unflattened_s": 1484, "namedtensor": 1484, "namedshap": 1484, "u_1": 1484, "u_n": 1484, "u_i": 1484, "im2col": [1485, 1882, 1926], "fold": [1485, 1825, 1882, 1892, 1925, 1934, 1940], "2x3": 1485, "3x4": 1485, "inp_unf": 1485, "out_unf": 1485, "recompute_scale_factor": [1486, 1544], "bicub": [1486, 1533, 1544, 1602, 1861], "trilinear": [1486, 1533, 1544, 1602, 1861], "input_3x3": 1486, "4375": 1486, "8125": 1486, "9375": 1486, "2400": [1486, 1841], "1200": [1486, 1751, 1907], "8800": 1486, "4400": [1486, 1841], "7200": 1486, "0400": 1486, "2800": [1486, 1774], "3600": 1486, "5200": 1486, "6400": 1486, "1678": 1490, "4418": 1490, "9466": [1490, 1941], "9604": 1490, "4219": 1490, "5241": 1490, "9162": 1490, "5436": [1490, 1841], "6446": 1490, "adaptiveavgpool1d": [1492, 1933], "tripl": [1494, 1497], "adaptivemaxpool1d": 1495, "adaptivemaxpool2d": [1496, 1861], "adaptivemaxpool3d": 1497, "avgpool1d": [1500, 1933], "st": [1502, 1510, 1513, 1559, 1969], "avgpool3d": [1502, 1861, 1933], "iT": [1502, 1510, 1513], "padt": [1502, 1510, 1513], "score": [1506, 1583, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647, 1880], "dt": [1510, 1513, 1941, 1969], "out_padw": [1511, 1512, 1513], "out_padh": [1512, 1513], "out_padt": 1513, "cosineembeddingloss": 1514, "ctcloss": [1517, 1861], "charact": [1517, 1771, 1881, 1884, 1898, 1936], "elu": [1523, 1882, 1925, 1926, 1933], "embedding_matrix": [1524, 1525], "8490": 1524, "9625": 1524, "6753": 1524, "7761": 1524, "6108": 1524, "6246": 1524, "9751": 1524, "3618": 1524, "4161": [1524, 1940], "2419": 1524, "7383": 1524, "0237": 1524, "7794": 1524, "0528": 1524, "3385": 1524, "8612": 1524, "1867": 1524, "5384": 1524, "8720": 1524, "6262": 1524, "7471": 1524, "embeddingbag": [1525, 1861, 1931, 1933, 1946], "3397": 1525, "5545": 1525, "5893": 1525, "4386": 1525, "5882": 1525, "featurealphadropout": 1526, "gaussiannllloss": 1530, "border": 1533, "affine_grid": [1533, 1882], "extrema": 1533, "pil": [1533, 1544], "overshoot": [1533, 1544, 1602], "gumbel": [1535, 1880], "y_hard": 1535, "y_soft": 1535, "hardtanh": [1540, 1882, 1892, 1926, 1933, 1964], "hingeembeddingloss": 1541, "use_input_stat": [1543, 1882], "antialia": 1544, "anti": 1544, "pillow": [1544, 1945], "buggi": 1544, "inter_nearest": 1544, "104157": 1544, "kldivloss": 1545, "batchsiz": [1545, 1806, 1807, 1808, 1810, 1811, 1940], "leaky_relu": [1549, 1882, 1902, 1926, 1933, 1964], "localresponsenorm": 1551, "_stacklevel": [1552, 1589, 1590, 1882, 1888], "lppool1d": 1554, "lppool2d": 1555, "marginrankingloss": 1556, "max_unpool1d": [1557, 1882], "multimarginloss": 1565, "multilabelmarginloss": 1566, "multilabelsoftmarginloss": 1567, "n_0": 1569, "n_": 1569, "n_k": 1569, "everywher": [1570, 1820, 1927], "circularpad2d": 1571, "constantpad2d": 1571, "reflectionpad2d": [1571, 1861], "replicationpad2d": [1571, 1861], "t4d": 1571, "p1d": 1571, "p2d": 1571, "p3d": 1571, "pixelunshuffl": [1575, 1933], "poissonnllloss": 1576, "rrelu": [1582, 1882, 1926], "dropout_p": [1583, 1882], "attn_bia": 1583, "temp_mask": 1583, "ev": 1583, "legend": 1583, "softmarginloss": 1588, "module_kwarg": 1598, "upsample_trilinear": 1603, "fo": 1603, "spatia": 1604, "mixin": [1605, 1880], "dry": 1605, "lazymlp": 1605, "lazylinear": 1605, "lazy_mlp": 1605, "mlp": [1605, 1923, 1931], "8832e": 1605, "5636e": 1605, "1598e": 1605, "5637e": 1605, "8788e": 1605, "0042e": 1605, "0019": 1605, "lazymodul": 1605, "full_mlp": 1605, "3837": [1605, 1720], "0907": 1605, "6708": 1605, "5223": 1605, "9028": 1605, "2851": 1605, "6813": 1605, "5766": 1605, "8678": 1605, "1320": 1605, "2938": 1605, "0679": [1605, 1851], "2793": [1605, 1668], "1088": 1605, "1795": 1605, "2301": 1605, "2807": 1605, "2479": 1605, "1091": 1605, "has_uninitialized_param": 1605, "initialize_paramet": 1605, "register_backward_pre_hook": 1611, "check_reduct": 1614, "delay_all_reduce_named_param": 1614, "param_to_hook_all_reduc": 1614, "optimizer_param": 1614, "loss_func": [1614, 1936], "consume_prefix_in_state_dict_if_pres": 1614, "nccl2": 1614, "dictat": [1614, 1884], "megabyt": 1614, "mb": [1614, 1907], "detach_": [1614, 1882, 1897, 1933, 1940], "ddp_logging_data": 1614, "can_set_static_graph": 1614, "model_ddp": 1614, "_get_ddp_logging_data": 1614, "divide_by_initial_world_s": 1614, "syncbatchnorm": 1614, "deplet": 1614, "pariti": 1614, "discrep": [1614, 1729, 1912], "another_input": 1614, "predivid": 1614, "encode_and_decod": 1614, "encoded_tensor": 1614, "decoded_tensor": 1614, "error_if_nonfinit": [1618, 1619], "foreach": [1618, 1619, 1620, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1927], "clip_valu": 1620, "nhwc": [1621, 1943, 1945], "outweigh": [1621, 1693, 1969], "_convnd": 1622, "conv_w": 1623, "conv_b": 1623, "bn_rm": [1623, 1625], "bn_rv": [1623, 1625], "bn_ep": [1623, 1625], "bn_w": [1623, 1625], "bn_b": [1623, 1625], "linear_w": 1625, "linear_b": 1625, "orthogonal_map": 1627, "use_trivi": 1627, "qq": 1627, "matrix_exp": [1627, 1882, 1926], "caylei": 1627, "thin": [1627, 1722], "manifold": 1627, "register_parametr": [1627, 1628, 1629, 1630, 1661, 1900], "orth_linear": 1627, "parametrizedlinear": [1627, 1628], "moduledict": [1627, 1628, 1883, 1915], "parametrizationlist": [1627, 1628, 1632], "_orthogon": 1627, "9332e": 1627, "n_power_iter": [1628, 1661], "sn": [1628, 1661], "discrimin": [1628, 1661], "adversari": [1628, 1661], "lipschitz": 1628, "reimplement": [1628, 1661], "_spectralnorm": 1628, "convtranspos": [1628, 1661], "snm": 1628, "0081": 1628, "amaxbackward0": 1628, "original0": [1629, 1632, 1664], "original1": [1629, 1632, 1664], "tensor_nam": [1629, 1631, 1632, 1633], "right_invers": [1629, 1632], "out_rnn": 1630, "rnn_cell": 1630, "simplic": [1632, 1936, 1937], "inbuilt": 1632, "unparametr": 1632, "rankon": 1632, "surject": 1632, "s0_sqrt": 1632, "linear_rank_on": 1632, "matrix_rank": 1632, "leave_parametr": 1633, "unparametris": 1633, "prune": [1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1900, 1940], "skeleton": 1634, "compute_mask": [1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641], "importance_scor": [1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1646, 1647], "apply_mask": [1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641], "pruned_tensor": [1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641], "default_mask": [1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641], "_orig": [1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650], "undon": [1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1650], "unprun": [1637, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649], "basepruningmethod": [1639, 1645], "add_pruning_method": 1639, "pruning_typ": [1639, 1643], "unstructur": [1639, 1643], "ravel": [1639, 1882, 1926], "nonmask": 1639, "bias_mask": [1642, 1644], "pruning_method": 1643, "parameters_to_prun": 1643, "l1unstructur": 1643, "parameters_to_vector": 1643, "forward_pre_hook": [1645, 1915], "random_unstructur": [1645, 1650], "odict_kei": 1646, "weight_orig": 1646, "weight_mask": [1646, 1649], "columns_prun": 1648, "t_modul": [1651, 1652, 1661, 1664], "weight_norm": 1652, "sorted_indic": [1653, 1655, 1656, 1658], "unsorted_indic": [1653, 1655, 1656, 1658], "abc": [1653, 1884], "axbc": 1653, "throughout": [1653, 1912, 1915, 1931], "conform": [1653, 1915], "is_cuda": [1653, 1897, 1926, 1942, 1959], "enforce_sort": [1654, 1655, 1656], "unsort": [1654, 1655, 1758], "shortest": 1654, "uncondition": [1654, 1879, 1909, 1970], "pad_sequ": [1655, 1659, 1882, 1926], "padding_valu": [1656, 1657, 1882], "total_length": [1656, 1911], "seq_unpack": 1656, "lens_unpack": 1656, "packed_sequ": 1658, "unpacked_sequ": 1658, "padded_sequ": 1659, "unpad": 1659, "unstack": 1659, "as_tensor": [1659, 1839, 1882, 1899, 1909, 1926, 1945, 1946, 1947], "unpadded_sequ": 1659, "module_cl": [1660, 1936], "5846e": 1660, "29": [1660, 1787, 1925], "8307e": 1660, "5250e": 1660, "1210e": 1660, "4677e": 1660, "5915e": 1660, "4013e": 1660, "weight_u": 1661, "parameters_and_buff": 1662, "reparamater": 1662, "decoupl": [1664, 1680, 1683, 1689], "weight_g": [1664, 1882], "weight_v": 1664, "1602": 1664, "07868": 1664, "modern": [1664, 1918, 1953, 1959], "bother": 1664, "102999": 1664, "remove_parametr": 1664, "as_tupl": [1666, 1875], "complexfloat": [1667, 1673], "0425": 1668, "7969": 1668, "2925": 1668, "7229": 1668, "2134": 1668, "0505": 1668, "1408": 1668, "0563": 1668, "0566": 1668, "0732": [1668, 1841], "0687": 1668, "1177": 1668, "2303": 1668, "1552": 1668, "6148": 1668, "6535": 1668, "8318": 1668, "3987": 1668, "9544": [1668, 1730], "6048": 1668, "7909": 1668, "120": [1670, 1945], "from_valu": 1673, "onnx_typ": 1673, "tensorprotodatatyp": 1673, "torch_c_value_with_type_float": 1673, "from_dtyp": 1673, "jit_type_bas": 1673, "safer": [1673, 1891], "onnxexportererror": [1673, 1923, 1925], "symbolicvalueerror": 1673, "onnx_compat": 1673, "scalar_nam": 1673, "complexhalf": 1673, "complexdoubl": 1673, "float8e5m2": 1673, "float8e4m3fn": 1673, "torch_nam": 1673, "int8_t": 1673, "int16_t": 1673, "float8_e5m2": [1673, 1942], "float8_e4m3fn": [1673, 1942], "verif": [1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1925], "input_arg": [1674, 1925], "params_dict": 1674, "export_opt": [1674, 1923], "_excluded_node_kind": 1674, "frozenset": [1674, 1884], "scalarimplicit": [1674, 1926], "prim": [1674, 1881, 1925, 1926], "listconstruct": [1674, 1881], "all_mismatch_leaf_graph_info": 1674, "essential_node_count": 1674, "essential_node_kind": 1674, "export_repro": 1674, "repro_dir": 1674, "repro": [1674, 1959, 1969], "test_": 1674, "test_data_set_0": 1674, "input_0": [1674, 1925], "pb": [1674, 1925], "input_1": [1674, 1925], "output_0": 1674, "output_1": 1674, "find_mismatch": [1674, 1925], "exhibit": [1674, 1925, 1957, 1969], "verificationopt": [1674, 1925], "find_partit": 1674, "has_mismatch": 1674, "pretty_print_mismatch": 1674, "pretty_print_tre": 1674, "graph_info": [1674, 1925], "__2": [1674, 1925], "__1": [1674, 1925], "__3": [1674, 1925], "110": [1674, 1925], "verify_export": 1674, "onnx_graph": 1674, "onnx_out": 1674, "pt_out": 1674, "ignore_non": 1675, "check_shap": 1675, "check_dtyp": [1675, 1947], "onnxbackend": 1675, "onnx_runtime_cpu": 1675, "remained_onnx_input_idx": 1675, "acceptable_error_percentag": 1675, "percentag": [1675, 1704, 1780, 1931], "weight_decai": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693, 1915], "1e6": 1676, "tensorlist": [1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "prohibit": [1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692, 1907, 1920], "impair": [1676, 1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "ungraph": [1676, 1679, 1680, 1683], "removeablehandl": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "register_load_state_dict_pre_hook": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "register_state_dict_post_hook": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "register_step_post_hook": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "register_step_pre_hook": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "new_arg": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "new_kwarg": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693], "momentum_buff": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1689, 1690, 1691, 1692, 1693], "reevalu": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1690, 1691, 1692, 1693, 1927], "rho": 1677, "110mm": [1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "4pt": [1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "textbf": [1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "theta_0": [1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "v_0": [1677, 1679, 1680, 1683, 1689, 1690], "leftarrow": [1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "u_0": [1677, 1681], "hspace": [1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "5mm": [1677, 1678, 1679, 1680, 1681, 1683, 1690, 1691, 1692], "nabla_": [1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "theta_": [1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "10mm": [1677, 1678, 1679, 1680, 1681, 1683, 1690, 1691, 1692], "v_t": [1677, 1679, 1680, 1683, 1689, 1690], "v_": [1677, 1679, 1680, 1683, 1689, 1690, 1692], "2_t": [1677, 1678, 1679, 1680, 1683, 1689, 1690], "21mm": 1677, "u_t": [1677, 1681], "theta_t": [1677, 1678, 1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "lr_decai": 1678, "initial_accumulator_valu": 1678, "12mm": [1678, 1689], "_sum_0": 1678, "tild": [1678, 1690], "_sum_t": 1678, "_sum_": 1678, "subgradi": 1678, "999": [1679, 1680, 1681, 1683, 1689, 1693, 1920, 1927], "amsgrad": [1679, 1680], "beta_1": [1679, 1680, 1681, 1683, 1689], "beta_2": [1679, 1680, 1681, 1683, 1689], "13mm": [1679, 1680, 1681, 1683, 1689, 1690, 1691, 1692], "textit": [1679, 1680, 1683, 1689, 1692], "m_0": [1679, 1680, 1681, 1683, 1689], "widehat": [1679, 1680, 1683, 1689], "m_t": [1679, 1680, 1681, 1683, 1689], "m_": [1679, 1680, 1681, 1683, 1689, 1940], "002": [1681, 1683], "t_1": 1681, "2e": [1681, 1683], "max_it": 1682, "max_ev": 1682, "tolerance_grad": 1682, "tolerance_chang": 1682, "history_s": 1682, "line_search_fn": 1682, "bfg": 1682, "minfunc": 1682, "intens": [1682, 1918], "param_byt": 1682, "strong_wolf": 1682, "momentum_decai": 1683, "004": 1683, "decoupled_weight_decai": [1683, 1689], "gamma_t": 1683, "psi": [1683, 1941], "_decai": [1683, 1689], "15mm": [1683, 1691, 1692], "mu_t": 1683, "96": 1683, "mu_": 1683, "11mm": 1683, "incorpor": [1683, 1931], "nesterov": [1683, 1692], "4e": 1683, "adamw": [1683, 1689, 1927], "nadamw": 1683, "weightdecai": 1689, "18mm": 1689, "rho_": 1689, "6mm": 1689, "rho_t": 1689, "t_2": 1689, "l_t": 1689, "radamw": 1689, "_0": [1690, 1910, 1928, 1971], "av": 1690, "8mm": 1690, "3mm": 1690, "lectur": 1690, "hinton": 1690, "step_siz": [1691, 1708], "resili": [1691, 1918], "eta_": [1691, 1696, 1697], "etaplu": 1691, "etaminu": 1691, "gamma_": [1691, 1941], "0_": 1691, "eta_0": 1691, "i_": [1691, 1841], "eta_t": [1691, 1696, 1697], "dampen": 1692, "sutskev": 1692, "veloc": 1692, "conflat": 1693, "is_spars": [1693, 1897, 1926, 1940, 1942, 1959], "maskedtensor": [1693, 1940], "rig": 1693, "insist": 1693, "lr_schedul": [1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1927], "chainabl": [1694, 1704], "081": 1694, "729": [1694, 1707], "6561": [1694, 1870], "59049": 1694, "scheduler1": [1694, 1707, 1927], "constantlr": [1694, 1707], "total_it": [1694, 1695, 1701, 1705, 1707], "scheduler2": [1694, 1707, 1927], "exponentiallr": [1694, 1707, 1927], "get_last_lr": [1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708], "print_lr": [1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708], "is_verbos": [1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708], "__dict__": [1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708], "last_epoch": [1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708], "mileston": [1695, 1701, 1702, 1707, 1927], "simultan": [1695, 1696, 1701, 1702, 1708, 1904, 1936], "025": [1695, 1701], "t_max": [1696, 1927], "eta_min": [1696, 1697], "anneal": [1696, 1697, 1704, 1927], "cur": [1696, 1697], "sgdr": [1696, 1697], "2k": 1696, "sole": 1696, "t_mult": 1697, "interleav": 1697, "base_lr": [1698, 1704], "max_lr": [1698, 1704], "step_size_up": 1698, "step_size_down": 1698, "scale_fn": 1698, "scale_mod": 1698, "cycle_momentum": [1698, 1704], "base_momentum": [1698, 1704], "max_momentum": [1698, 1704], "cyclic": 1698, "forth": [1698, 1866, 1879, 1930, 1954], "amplitud": [1698, 1704], "triangular2": 1698, "exp_rang": 1698, "bckenstler": 1698, "train_batch": [1698, 1704], "get_lr": 1698, "lr_lambda": [1700, 1703], "lambda1": 1700, "lambda2": 1700, "start_factor": 1701, "end_factor": 1701, "03125": 1701, "0375": 1701, "04375": 1701, "005": [1702, 1708], "lmbda": 1703, "total_step": 1704, "steps_per_epoch": 1704, "pct_start": 1704, "anneal_strategi": [1704, 1927], "div_factor": 1704, "final_div_factor": 1704, "three_phas": 1704, "1cycl": 1704, "fastai": 1704, "unpublish": 1704, "initial_lr": 1704, "min_lr": [1704, 1706], "1e4": 1704, "annihil": 1704, "00075": 1705, "00050": 1705, "00025": 1705, "patienc": 1706, "threshold_mod": 1706, "cooldown": 1706, "stagnat": 1706, "new_lr": 1706, "hasn": [1706, 1894, 1928], "optimum": 1706, "dynamic_threshold": 1706, "val_loss": 1706, "81": 1707, "mn": 1710, "pca": [1712, 1940], "overestim": [1712, 1825], "nathan": [1712, 1825], "halko": [1712, 1825], "gunnar": [1712, 1825], "martinsson": [1712, 1825], "tropp": [1712, 1825], "probabilist": [1712, 1825], "0909": [1712, 1825], "4061": [1712, 1825], "na": [1712, 1825], "cmath": [1716, 1882], "4142j": 1716, "4331": 1719, "2475": [1719, 1823], "6834": 1719, "2791": 1719, "1875": 1719, "5561": 1719, "4670": 1719, "5428": 1720, "5854": 1720, "5261": [1720, 1824], "1857": 1720, "2498": 1720, "1646": [1720, 1907], "0705": [1720, 1909], "0629": 1720, "2962": 1720, "0821": [1720, 1780], "1831": 1720, "type1": [1721, 1882], "type2": [1721, 1882], "2117": 1723, "9765": 1723, "1707": 1723, "4884": 1723, "5661": 1723, "5795": 1723, "5280": 1723, "9206": 1723, "quantization_schem": [1724, 1725, 1726, 1727, 1728], "int_repr": [1724, 1725, 1882, 1926], "nchw": [1726, 1945], "qx": [1726, 1727, 1728], "00001": 1726, "max_pool1d": [1727, 1882, 1926, 1933], "max_pool2d": [1728, 1882, 1926, 1933], "quasirandom": 1729, "scrambl": 1729, "sobol": 1729, "quasi": 1729, "21201": 1729, "web": 1729, "unsw": 1729, "au": [1729, 1928], "fkuo": 1729, "art": 1729, "owen": 1729, "niederreit": 1729, "xing": 1729, "466": 1729, "489": 1729, "decemb": 1729, "1998": 1729, "zh": 1729, "vychisl": 1729, "phy": 1729, "784": 1729, "802": 1729, "1967": 1729, "soboleng": 1729, "draw_base2": 1729, "base2": 1729, "fast_forward": 1729, "142": 1730, "283": 1730, "570": 1730, "359": 1730, "9894": 1730, "2503": 1731, "3525": 1731, "5673": 1731, "8237": 1731, "5781": 1731, "6879": 1731, "3816": 1731, "7249": 1731, "0998": 1731, "1436": 1735, "9966": 1735, "3426": 1735, "6366": 1735, "5954": 1735, "8929": 1735, "0923": 1735, "1719": 1735, "4709": 1735, "1996": 1735, "4595": 1741, "4314": 1741, "n2": 1744, "n3": 1744, "negat": [1747, 1833, 1884], "is_neg": [1747, 1882, 1926, 1959], "equidist": 1751, "inexact": 1751, "1234567": 1751, "1230": 1751, "vstack": [1752, 1882, 1926, 1940], "0370": 1753, "2970": 1753, "5420": 1753, "9105": 1753, "8351": 1753, "pickle_protocol": [1754, 1928], "default_protocol": 1754, "_use_new_zipfile_seri": 1754, "zipfil": [1754, 1928], "sorted_sequ": [1758, 1882], "sorter": [1758, 1882], "sorted_sequence_1d": 1758, "select_copi": [1760, 1882, 1926], "slight": [1762, 1940, 1943], "92701": [1762, 1943], "complaint": 1763, "henry2019": 1766, "briefli": 1766, "perfectli": [1766, 1907, 1929], "nine": 1766, "fma": 1766, "10x": 1766, "1904": 1766, "06376": 1766, "denorm": [1767, 1918], "sse3": 1767, "323": 1767, "88131e": 1767, "324": 1767, "is_train": [1768, 1948], "interop": 1769, "intraop": 1770, "edgeitem": 1771, "linewidth": 1771, "sci_mod": 1771, "shamelessli": 1771, "repr": [1771, 1884], "sane": 1771, "_tensor_str": 1771, "_formatt": 1771, "12345": 1771, "1235": 1771, "excess": [1773, 1959], "24j": 1774, "8000j": 1774, "9600j": 1774, "4472": [1774, 1915], "8944j": 1774, "expit": [1775, 1941], "2222": [1777, 1839], "4444": 1777, "8889": 1777, "4901e": 1778, "4000e": 1778, "0077e": 1778, "4923e": 1778, "waveform": [1779, 1780, 1781], "1564": 1779, "4540": 1779, "8910": 1779, "9877": 1779, "1423": [1779, 1802], "4154": 1779, "8413": [1779, 1941], "0302": 1780, "2231": 1780, "6065": 1780, "5400e": 1780, "3546e": 1780, "4788e": 1780, "8316e": 1780, "02": [1780, 1781, 1786], "3534e": 1780, "0065e": [1781, 1786], "1875e": [1781, 1786], "3937e": [1781, 1786], "2465e": [1781, 1786], "8250e": [1781, 1786], "9858e": [1781, 1786], "1365e": [1781, 1786], "8659e": [1781, 1786], "4658e": [1781, 1786], "3941e": [1781, 1786], "5400": 1782, "3376": 1782, "4200": 1782, "9136": 1782, "wit": [1782, 1881], "0955": [1782, 1783, 1785], "3455": [1782, 1783, 1785], "6545": [1782, 1783, 1785], "9045": [1782, 1783, 1785], "0800": [1783, 1784], "1876": [1783, 1784], "4601": [1783, 1784], "7700": [1783, 1784], "9723": [1783, 1784], "1679": 1784, "3979": 1784, "6821": 1784, "9121": 1784, "1170": 1785, "9698": 1785, "36358": 1787, "z_n": [1787, 1904], "48917": 1787, "2z_n": 1787, "13659": 1787, "3z_n": 1787, "01064": 1787, "4z_n": 1787, "\u03c0": 1787, "sidelob": 1787, "transact": 1787, "acoust": 1787, "speech": 1787, "84": 1787, "91": 1787, "feb": 1787, "1981": 1787, "tassp": 1787, "1163506": 1787, "heinzel": 1787, "spectrum": [1787, 1918], "dft": 1787, "februari": 1787, "holomet": 1787, "fnal": 1787, "gov": 1787, "gh_fft": 1787, "nutal": 1787, "general_ham": 1787, "6280e": 1787, "2698e": 1787, "1052e": 1787, "9826e": 1787, "5461": [1789, 1915], "1347": 1789, "7266": 1789, "2746": 1789, "5194": 1789, "1343": 1789, "4032": 1789, "2711": 1789, "5380": 1791, "8632": 1791, "1265": 1791, "9399": 1791, "5644": 1791, "9744": 1791, "1268": 1791, "2162": 1796, "6719": 1796, "3332": 1796, "5793": [1796, 1915], "0061": 1796, "6058": 1796, "9497": 1796, "5071": 1796, "3343": 1796, "9553": 1796, "0960": 1796, "derivati": [1797, 1801], "to_sparse_coo": 1798, "sparsr": 1799, "run_my_model": 1799, "prev_checks_en": 1799, "check_invari": [1799, 1806, 1807, 1808, 1809, 1810, 1811, 1940], "sparse_csr_tensor": [1799, 1882, 1926, 1940], "z_": [1801, 1904, 1941], "bigoplus_": 1801, "kj": 1801, "bigoplu": 1801, "sparseaddmmbackward0": 1801, "y1": [1801, 1923, 1954], "sparsemmreduceimplbackward0": 1801, "y2": [1801, 1923, 1954], "sparsiti": [1802, 1880, 1891, 1902], "spy": 1802, "2847": 1802, "7805": 1802, "1900": [1802, 1919], "to_dens": [1802, 1804, 1882, 1926, 1940], "3903": 1802, "x_k": 1803, "6438": 1805, "6467": 1805, "3411": 1805, "0918": 1805, "5348": 1805, "0634": 1805, "0494": 1805, "0646": 1805, "1844": 1805, "1276": 1805, "1874": 1805, "6334": 1805, "9682": 1805, "5340": 1805, "7483": 1805, "4512": 1805, "4073": 1805, "8901": 1805, "3183": 1805, "7539": 1805, "6596": 1805, "ncolblock": [1806, 1940], "array_list": [1806, 1807, 1808, 1810, 1811], "nrow": [1806, 1807, 1808, 1810, 1811, 1940], "ncol": [1806, 1807, 1808, 1810, 1811, 1940], "denses": [1806, 1807, 1808, 1810, 1811, 1940], "check_sparse_tensor_invari": [1806, 1807, 1808, 1809, 1810, 1811, 1940], "nrowblock": [1807, 1940], "compressed_indic": [1808, 1882, 1940], "plain_indic": [1808, 1882, 1940], "compressed_dim_s": [1808, 1940], "is_coalesc": [1809, 1882, 1926, 1940, 1959], "rdinat": 1809, "prerequisit": [1809, 1908], "coalescion": 1809, "_indic": [1809, 1926, 1940, 1959], "0755": [1813, 1814], "0226": [1813, 1814], "0831": [1813, 1814], "4806": [1813, 1814], "0112": 1813, "2883": 1813, "6933": 1813, "0457": 1814, "0069": 1814, "2310": 1814, "2959": [1818, 1819, 1867, 1868], "8101": [1818, 1819, 1867, 1868], "5027": [1818, 1819, 1867, 1868], "3270": [1818, 1819, 1867, 1868], "5905": [1818, 1819, 1867, 1868], "6538": [1818, 1819, 1867, 1868, 1915], "3330": [1818, 1819, 1867, 1868], "5596": [1818, 1819, 1867, 1868], "6548": [1818, 1819, 1867, 1868], "1264": [1818, 1819, 1867, 1868], "5080": [1818, 1819, 1824, 1867, 1868, 1915], "6420": [1818, 1819, 1867, 1868], "1992": [1818, 1819, 1867, 1868], "0311": [1818, 1941], "7477": 1818, "2204": 1818, "9087": 1818, "2620": 1819, "0028": [1819, 1845], "0957": 1819, "6038": 1819, "0645": [1819, 1868], "4485": [1819, 1868], "8707": [1819, 1868], "0665": [1819, 1868], "taper": 1820, "librosa": 1820, "omega": 1820, "win": [1820, 1904], "_fft": [1820, 1882], "dimnsion": 1820, "1133": 1823, "2958": 1823, "5475": 1823, "0569": 1823, "0737": 1823, "3429": 1823, "9138": 1823, "9337": 1823, "6864": [1823, 1849], "1132": 1823, "7892": 1823, "1003": 1823, "5688": 1823, "3637": 1823, "9906": 1823, "5197": 1823, "4598": 1823, "3708": 1823, "6217": 1823, "435": 1823, "1335": 1823, "3135": 1823, "gesdd": 1824, "conquer": 1824, "gesvdjbatch": 1824, "fortran": 1824, "\u00b9": 1824, "2364": 1824, "7752": 1824, "7201": 1824, "7394": 1824, "0504": 1824, "3371": 1824, "5296": 1824, "3550": 1824, "5569": 1824, "2445": 1824, "1414": 1824, "4027": 1824, "0287": 1824, "5434": 1824, "1946": 1824, "8833": 1824, "3679": 1824, "4296": 1824, "2890": 1824, "6604": 1824, "2717": 1824, "2618": 1824, "4234": 1824, "2481": 1824, "4733": 1824, "3289": [1824, 1920], "0315": 1824, "7806": 1824, "0199": 1824, "8766": 1824, "4809": 1824, "4054": 1824, "7600": 1824, "8611": 1824, "2594": 1824, "4373": 1824, "6531e": 1824, "a_big": 1824, "6503e": 1824, "swapax": [1827, 1882, 1926, 1944], "symint": [1828, 1829, 1831, 1832, 1833, 1888, 1948, 1958, 1964], "symfloat": [1828, 1829, 1948, 1957], "symbool": [1833, 1948, 1957], "1995": 1834, "4608": 1834, "7702": 1834, "4875": 1834, "9158": 1834, "5872": 1834, "6929": 1834, "6932": 1834, "take_along_axi": [1836, 1910], "max_idx": 1836, "sorted_idx": 1836, "2027": 1837, "7687": 1837, "4412": 1837, "3856": 1837, "5930": 1837, "9859": 1837, "4722": 1837, "3366": 1837, "8986": 1838, "7279": 1838, "1745": [1838, 1909], "7156": 1838, "8257": 1838, "2553": 1838, "11111": 1839, "222222": 1839, "3333333": 1839, "1111": 1839, "array_split": 1840, "i_d": 1841, "k_": 1841, "4532": 1841, "4874": 1841, "5018": 1841, "4796": [1841, 1919], "5162": 1841, "5306": 1841, "2922": 1841, "7556": 1841, "2741": 1841, "3161": 1841, "0704": 1841, "0187": 1841, "4079": 1841, "3126": 1841, "8744": 1841, "8223": 1841, "9445": 1841, "4117": 1841, "7780": 1841, "7193": 1841, "4867": 1841, "3204": 1841, "5513": 1841, "4737": [1841, 1871], "2850": 1841, "2573": 1841, "5997": 1841, "sparsebsr": 1845, "sparsecsc": 1845, "sparsebsc": 1845, "9893": 1845, "5809": 1845, "1669": 1845, "7299": 1845, "4942": [1845, 1915], "y_0": 1846, "x_diff": 1846, "y_diff": 1846, "riemann": [1846, 1904, 1912, 1941], "badli": 1848, "cloned_coeffici": 1848, "1527": 1848, "0753": 1848, "7986": 1848, "0210": 1848, "3513": 1848, "5492": 1848, "7403": 1848, "0243": 1848, "7841": 1848, "9046": 1848, "5405": 1848, "9320": 1848, "9270": 1848, "2826": 1848, "lbrace": [1849, 1850, 1851, 1852], "rbrace": [1849, 1850, 1851, 1852], "0813": 1849, "8619": 1849, "7105": 1849, "0935": 1849, "1380": 1849, "3409": [1849, 1919], "2219": 1849, "5653": 1849, "2521": 1849, "2345": 1849, "2544": 1849, "3461": 1849, "4785": 1849, "4477": 1849, "6049": 1849, "6368": 1849, "8775": 1849, "7145": 1849, "1502": 1849, "2716": 1849, "1243": 1849, "5413": 1849, "3615": 1849, "0614": 1849, "7344": 1849, "3164": 1849, "7648": 1849, "4024": 1849, "0978": 1849, "col": [1850, 1852, 1882], "2309": 1851, "5207": 1851, "0049": 1851, "2072": 1851, "0680": 1851, "6602": 1851, "3480": 1851, "5211": 1851, "4573": 1851, "5876": 1851, "0794": [1851, 1941], "8373": 1851, "6654": 1851, "2604": 1851, "5235": 1851, "2447": 1851, "9556": 1851, "2919": 1851, "1768": 1851, "4333": 1851, "3146": [1851, 1915], "6576": 1851, "0432": 1851, "9348": [1851, 1941], "4410": 1851, "9888": 1851, "3337": 1851, "6556": 1851, "4798": 1851, "5466": 1854, "8008": 1854, "9079": 1854, "unique_consecut": [1857, 1882, 1926], "inverse_indic": [1857, 1858], "a_unique_dim0": 1857, "ouput": 1859, "5678": [1859, 1936], "78": 1859, "warn_onli": 1861, "alon": [1861, 1883, 1928], "put_": [1861, 1882], "index_add": [1861, 1882, 1926], "index_select": [1861, 1882, 1926, 1940, 1964], "fractionalmaxpool2d": 1861, "fractionalmaxpool3d": 1861, "reflectionpad1d": 1861, "reflectionpad3d": 1861, "replicationpad1d": 1861, "replicationpad3d": 1861, "histc": [1861, 1882, 1926], "bincount": [1861, 1882, 1926], "kthvalu": [1861, 1882, 1897, 1926], "cublasapi_reproduc": [1861, 1919], "avg_pool3d_backward_cuda": 1861, "for_tensor": 1862, "for_modul": 1862, "for_storag": 1862, "unsupported_dtyp": 1862, "privateuse1": [1862, 1864, 1935], "rename_privateuse1_backend": [1862, 1880], "is_foo": 1862, "frames_to_skip": 1863, "maximum_number_of_fram": 1863, "_register_device_modul": 1864, "backendmodul": 1864, "get_amp_supported_dtyp": 1864, "is_autocast_en": [1864, 1882, 1926], "get_autocast_dtyp": 1864, "set_autocast_dtyp": 1864, "set_autocast_en": 1864, "_is_in_bad_fork": 1864, "bad_fork": 1864, "get_rng_stat": [1864, 1880, 1935], "set_rng_stat": [1864, 1880, 1935], "extend_dispatch": 1864, "pytorch_open_registration_exampl": 1864, "nicer": 1865, "alexandr": 1866, "theophil": 1866, "0631": 1867, "5590": 1867, "4893": 1867, "8258": 1867, "5926": 1868, "0056": 1868, "3646": 1868, "vecdot": 1869, "mi": [1870, 1871], "6116": 1870, "5772": [1870, 1941], "4606": 1870, "9120": 1870, "0786": 1870, "7497": 1870, "6623": 1870, "5772j": 1870, "9120j": 1870, "7497j": 1870, "6623j": 1870, "3839j": 1871, "2098": 1871, "6699j": 1871, "3470": 1871, "9451j": 1871, "5174": 1871, "3136j": 1871, "6699": 1871, "9451": 1871, "3136": 1871, "vertic": [1873, 1874, 1927, 1929, 1945, 1959], "atleast_2d": [1874, 1882, 1926], "3139": 1875, "3898": 1875, "1657": 1875, "0383": 1875, "8785": 1875, "1089": 1875, "hubconf": 1879, "entrypoint_nam": 1879, "_resnet18": 1879, "smoother": [1879, 1891], "underscor": [1879, 1898, 1936, 1946], "load_state_dict_from_url": [1879, 1893], "2gb": 1879, "relative_path_to_checkpoint": 1879, "pth": [1879, 1893, 1920], "dirnam": 1879, "__file__": [1879, 1921, 1928, 1961], "5c106cde": [1879, 1893], "force_reload": 1879, "skip_valid": 1879, "trust_repo": 1879, "repo_own": 1879, "repo_nam": 1879, "ref": [1879, 1940, 1957, 1962, 1969], "torchhub": 1879, "owner": [1879, 1909, 1926, 1936, 1937], "github_token": 1879, "repo_or_dir": 1879, "mute": 1879, "resnet50": [1879, 1945, 1961], "resnet50_weight": 1879, "imagenet1k_v1": 1879, "download_url_to_fil": 1879, "hash_prefix": 1879, "temporary_fil": 1879, "sha256": [1879, 1893], "s3": [1879, 1893, 1921], "amazonaw": [1879, 1893, 1921], "model_dir": [1879, 1893], "check_hash": [1879, 1893], "hub_dir": [1879, 1893], "get_dir": [1879, 1893], "ext": [1879, 1893], "eight": [1879, 1893], "hash": [1879, 1882, 1884, 1893, 1926], "succinct": 1879, "set_dir": 1879, "path_to_hub_dir": 1879, "torch_hom": 1879, "xdg_cache_hom": [1879, 1907], "reiniti": 1879, "path_importer_cach": 1879, "subpackag": [1879, 1928], "offend": [1879, 1960], "classifi": [1880, 1884, 1925, 1927, 1931, 1945], "pypi": 1880, "conda": [1880, 1921], "hip": 1880, "javadoc": 1880, "uninitializedbuff": 1880, "anomali": 1880, "impl_abstract": [1880, 1888, 1958], "get_ctx": [1880, 1888], "can_device_access_p": 1880, "current_blas_handl": 1880, "device_of": 1880, "get_arch_list": 1880, "get_device_cap": 1880, "get_device_nam": 1880, "get_device_properti": 1880, "get_gencode_flag": 1880, "get_sync_debug_mod": 1880, "ipc_collect": 1880, "memory_usag": 1880, "set_stream": 1880, "set_sync_debug_mod": 1880, "power_draw": 1880, "clock_rat": 1880, "outofmemoryerror": 1880, "jiter": 1880, "sanit": 1880, "_record_memory_histori": [1880, 1971], "_snapshot": [1880, 1971], "_dump_snapshot": [1880, 1971], "empty_cach": [1880, 1907, 1913, 1971], "set_per_process_memory_fract": 1880, "current_allocated_memori": 1880, "driver_allocated_memori": 1880, "openmp": [1880, 1906, 1921, 1956], "xeon": [1880, 1906, 1966], "pathwis": 1880, "exponentialfamili": 1880, "binomi": [1880, 1882, 1926], "chi2": 1880, "continuousbernoulli": 1880, "dirichlet": 1880, "fishersnedecor": 1880, "halfcauchi": 1880, "halfnorm": 1880, "kumaraswami": 1880, "lkjcholeski": 1880, "laplac": 1880, "lognorm": 1880, "lowrankmultivariatenorm": 1880, "mixturesamefamili": 1880, "multinomi": [1880, 1882, 1926], "multivariatenorm": 1880, "negativebinomi": 1880, "onehotcategor": 1880, "relaxedbernoulli": 1880, "logitrelaxedbernoulli": 1880, "relaxedonehotcategor": 1880, "studentt": 1880, "transformeddistribut": 1880, "vonmis": 1880, "weibul": 1880, "wishart": 1880, "hub": [1880, 1893, 1961], "solver": [1880, 1918], "misc": 1880, "normal_": [1880, 1882, 1897, 1902, 1907, 1948], "constant_": [1880, 1902], "ones_": [1880, 1902], "zeros_": [1880, 1902], "eye_": [1880, 1886, 1902], "dirac_": [1880, 1886, 1902], "xavier_uniform_": [1880, 1902], "xavier_normal_": [1880, 1902, 1915], "kaiming_uniform_": [1880, 1902], "trunc_normal_": [1880, 1902], "orthogonal_": [1880, 1886, 1902, 1915], "sparse_": [1880, 1902], "swa": 1880, "ema": 1880, "powersgd": 1880, "remotemodul": 1880, "fork_rng": [1880, 1935], "doublestorag": [1880, 1942], "floatstorag": [1880, 1942], "halfstorag": [1880, 1942], "longstorag": [1880, 1942], "intstorag": [1880, 1942], "shortstorag": [1880, 1942], "charstorag": [1880, 1942], "bytestorag": [1880, 1942], "boolstorag": [1880, 1942], "bfloat16storag": [1880, 1942], "complexdoublestorag": [1880, 1942], "complexfloatstorag": [1880, 1942], "quint8storag": [1880, 1942], "qint8storag": [1880, 1942], "qint32storag": [1880, 1942], "quint4x2storag": [1880, 1942], "quint2x4storag": [1880, 1942], "make_tensor": [1880, 1947], "assert_allclos": [1880, 1947], "generate_methods_for_privateuse1_backend": 1880, "get_cpp_backtrac": 1880, "set_modul": 1880, "sampler": 1880, "mobile_optim": 1880, "optimize_for_mobil": [1880, 1892], "model_zoo": 1880, "load_url": [1880, 1893], "tensorboard": [1880, 1894, 1930], "summarywrit": [1880, 1894, 1945], "iinfo": 1880, "__config__": [1880, 1906], "_log": [1880, 1884, 1969], "set_log": [1880, 1890, 1969], "torchdata": 1880, "torchserv": 1880, "torchtext": 1880, "xla": [1880, 1888, 1957], "disadvantag": 1881, "gentl": 1881, "beam": 1881, "traced_bar": 1881, "myscriptmodul": 1881, "103": [1881, 1883], "939": [1881, 1883], "116": [1881, 1883], "779": [1881, 1883], "123": [1881, 1883], "my_script_modul": [1881, 1883], "ins": 1881, "pytorch_jit": 1881, "traced_fn": 1881, "disable_jit_exampl": 1881, "printer": 1881, "rv": 1881, "rv0": 1881, "rv1": 1881, "ssa": 1881, "block0": 1881, "block1": 1881, "loop_in_traced_fn": 1881, "input_tupl": 1881, "fill_row_zero": 1881, "tracerwarn": 1881, "nr": 1881, "09115803241729736": 1881, "6782537698745728": 1881, "cpu_model": 1881, "gpu_model": 1881, "sample_input_cpu": 1881, "sample_input_gpu": 1881, "traced_cpu": 1881, "traced_gpu": 1881, "use_gpu": 1881, "__constants__": [1881, 1883], "my_module_inst": 1881, "redeclar": 1881, "nn_module_inst": 1881, "my_scripted_model": 1881, "pep": [1881, 1883, 1925, 1956], "526": [1881, 1883, 1925], "script_method": 1881, "implicitly_compiled_method": 1881, "another_forward": 1881, "unused_method": 1881, "some_fn": 1881, "ever": [1881, 1942, 1971], "some_fn2": 1881, "some_fn3": 1881, "some_fn4": 1881, "my_dict": [1881, 1883], "my_int": [1881, 1883], "my_const": 1881, "make_dict": 1881, "nnc": 1881, "nvfuser": 1881, "__and__": 1882, "__iand__": 1882, "__ilshift__": 1882, "__ior__": 1882, "__irshift__": 1882, "__ixor__": 1882, "__lshift__": 1882, "__or__": 1882, "__rshift__": 1882, "__xor__": 1882, "absolute_": 1882, "acos_": [1882, 1897], "addbmm_": 1882, "addcdiv_": 1882, "addcmul_": 1882, "addmv_": [1882, 1897], "addr_": 1882, "align_a": [1882, 1897, 1898, 1926], "align_to": [1882, 1897, 1898, 1926], "ellipsis_idx": 1882, "aminmax": [1882, 1926], "arccos_": 1882, "arccosh_": 1882, "arcsin_": [1882, 1940], "arcsinh_": 1882, "arctan2_": 1882, "arctan_": 1882, "arctanh_": 1882, "argwher": [1882, 1926], "as_strided_": 1882, "as_strided_scatt": [1882, 1926, 1964], "asin_": [1882, 1897, 1940], "asinh_": [1882, 1897], "atan_": [1882, 1897], "atanh_": [1882, 1897], "baddbmm_": 1882, "bernoulli_": [1882, 1897, 1948], "bitwise_and_": 1882, "bitwise_left_shift_": 1882, "bitwise_not_": [1882, 1897], "bitwise_or_": 1882, "bitwise_right_shift_": 1882, "bitwise_xor_": 1882, "broadcast_to": [1882, 1926], "cauchy_": [1882, 1897, 1948], "ceil_": [1882, 1897], "clamp_max": [1882, 1926], "clamp_max_": 1882, "clamp_min": [1882, 1926], "clamp_min_": 1882, "clip_": 1882, "conj_physical_": 1882, "copysign_": 1882, "cos_": [1882, 1897, 1904], "cosh_": [1882, 1897], "count_nonzero": [1882, 1926], "cummax": [1882, 1926], "cummin": [1882, 1926], "cumprod_": 1882, "cumsum_": 1882, "deg2rad": [1882, 1897, 1926, 1940], "deg2rad_": [1882, 1897, 1940], "outdim": 1882, "diagonal_scatt": [1882, 1926], "digamma_": [1882, 1897], "div_": [1882, 1897, 1940], "divide_": 1882, "dsplit": [1882, 1926], "eq_": 1882, "erf_": [1882, 1897], "erfc_": [1882, 1897], "erfinv_": [1882, 1897], "exp2": [1882, 1926, 1941, 1945, 1964], "exp2_": 1882, "exp_": [1882, 1897], "expm1_": [1882, 1897], "exponential_": [1882, 1897, 1948], "fill_diagonal_": 1882, "fix_": 1882, "fliplr": [1882, 1926], "flipud": [1882, 1926], "float_power_": 1882, "floor_": [1882, 1897], "floor_divide_": [1882, 1940], "fmax": [1882, 1926, 1964], "fmin": [1882, 1926, 1964], "fmod_": 1882, "frac_": [1882, 1897], "frexp": [1882, 1926], "gcd_": 1882, "ge_": 1882, "geometric_": [1882, 1948], "ger": [1882, 1926], "get_devic": [1882, 1897, 1926, 1940, 1942, 1943], "greater_": 1882, "greater_equal_": 1882, "gt_": 1882, "hardshrink": [1882, 1926], "heavisid": [1882, 1926], "heaviside_": 1882, "hsplit": [1882, 1926, 1944], "hypot_": 1882, "i0_": 1882, "igamma_": 1882, "igammac_": 1882, "index_fil": [1882, 1897, 1926], "index_reduc": [1882, 1926], "is_complex": [1882, 1923, 1926, 1940, 1943, 1959], "is_contigu": [1882, 1897, 1926, 1944, 1959], "is_floating_point": [1882, 1897, 1926, 1940, 1943, 1959], "is_infer": [1882, 1926, 1959], "is_same_s": [1882, 1926, 1940, 1959], "is_set_to": [1882, 1926, 1959], "is_sign": [1882, 1897, 1926, 1940, 1959], "isclos": [1882, 1926], "isfinit": [1882, 1918, 1926, 1964], "isinf": [1882, 1926, 1940, 1964], "isneginf": [1882, 1926, 1940], "isposinf": [1882, 1926, 1940], "isreal": [1882, 1926], "istft": [1882, 1926], "kron": [1882, 1926], "lcm_": 1882, "ldexp_": 1882, "le_": 1882, "lerp_": 1882, "less_": 1882, "less_equal_": 1882, "lgamma_": 1882, "log10_": [1882, 1897], "log1p_": [1882, 1897, 1940], "log2_": [1882, 1897], "log_normal_": [1882, 1897, 1948], "logaddexp2": [1882, 1926], "logcumsumexp": [1882, 1926], "logical_and_": 1882, "logical_not_": [1882, 1897], "logical_or_": 1882, "logical_xor_": 1882, "logit_": 1882, "lt_": 1882, "masked_fil": [1882, 1897, 1899, 1926, 1940], "masked_scatt": [1882, 1926], "masked_select": [1882, 1897, 1926], "matrix_pow": [1882, 1926], "moveaxi": [1882, 1926], "msort": [1882, 1926], "multiply_": 1882, "mvlgamma_": 1882, "nan_to_num_": 1882, "nanmedian": [1882, 1897, 1926], "nansum": [1882, 1926], "narrow_copi": [1882, 1926, 1940], "ne_": 1882, "neg_": [1882, 1897, 1940], "negative_": [1882, 1940], "new_empty_strid": [1882, 1926], "new_ful": [1882, 1907, 1926], "new_on": [1882, 1926], "nextafter_": 1882, "nonzero_stat": [1882, 1926], "not_equal_": 1882, "polygamma_": 1882, "pow_": [1882, 1897], "q_per_channel_scal": [1882, 1926], "q_per_channel_zero_point": [1882, 1926], "q_scale": [1882, 1926], "q_zero_point": [1882, 1926], "rad2deg": [1882, 1897, 1926, 1940], "rad2deg_": [1882, 1897, 1940], "reciprocal_": [1882, 1897], "record_stream": [1882, 1907, 1926], "refine_nam": [1882, 1897, 1898, 1926], "relu_": [1882, 1933], "remainder_": 1882, "rename_": [1882, 1897, 1898], "renorm_": 1882, "reshape_a": [1882, 1899, 1926, 1944], "resize_a": [1882, 1926], "the_templ": 1882, "resize_as_sparse_": 1882, "retains_grad": [1882, 1926], "roll": [1882, 1926, 1964], "rot90": [1882, 1926], "round_": [1882, 1897], "rsqrt_": [1882, 1897], "select_scatt": [1882, 1926, 1964], "sgn_": [1882, 1897], "sigmoid_": [1882, 1897, 1933], "sign_": [1882, 1897], "sinc_": 1882, "sinh_": [1882, 1897], "slice_scatt": [1882, 1926, 1964], "smm": [1882, 1926, 1940], "sparse_resize_": 1882, "sparse_resize_and_clear_": 1882, "split_with_s": [1882, 1926, 1944, 1964], "sqrt_": [1882, 1897], "square_": 1882, "squeeze_": [1882, 1933], "sspaddmm": [1882, 1926, 1940], "sub_": [1882, 1897, 1940], "subtract_": 1882, "sum_to_s": [1882, 1926], "swapaxes_": 1882, "swapdim": [1882, 1926, 1944], "swapdims_": 1882, "take_along_dim": [1882, 1926], "tan_": [1882, 1897], "tanh_": [1882, 1897, 1933], "tensor_indices_or_sect": 1882, "to_mkldnn": [1882, 1926], "to_padded_tensor": [1882, 1899, 1926], "to_sparse_bsc": [1882, 1926], "to_sparse_bsr": [1882, 1926, 1940], "to_sparse_csc": [1882, 1926, 1940], "true_divide_": 1882, "trunc_": [1882, 1897], "type_a": [1882, 1897, 1926], "out0": [1882, 1920], "unsafe_chunk": [1882, 1926], "unsafe_split": [1882, 1926], "unsafe_split_with_s": [1882, 1926], "unsqueeze_": [1882, 1933], "view_a": [1882, 1926, 1944], "vsplit": [1882, 1926, 1944], "xlogy_": 1882, "adaptive_avg_pool2d": [1882, 1909, 1926, 1933], "adaptive_max_pool1d_with_indic": [1882, 1909], "adaptive_max_pool2d_with_indic": 1882, "adaptive_max_pool3d_with_indic": 1882, "alpha_dropout": [1882, 1926], "assert_int_or_pair": 1882, "arg_nam": 1882, "binary_cross_entropi": [1882, 1926], "binary_cross_entropy_with_logit": [1882, 1926], "celu": [1882, 1926], "dropout2d": 1882, "dropout3d": 1882, "feature_alpha_dropout": [1882, 1926], "fractional_max_pool2d_with_indic": 1882, "fractional_max_pool3d_with_indic": 1882, "gaussian_nll_loss": 1882, "glu": [1882, 1926], "gumbel_softmax": 1882, "hardsigmoid": [1882, 1926, 1933], "hardswish": [1882, 1926, 1933], "huber_loss": [1882, 1926], "instance_norm": [1882, 1926, 1933], "local_response_norm": 1882, "lp_pool1d": 1882, "lp_pool2d": 1882, "max_pool1d_with_indic": [1882, 1926], "max_pool3d_with_indic": [1882, 1926, 1964], "mish": [1882, 1926], "multi_head_attention_forward": 1882, "embed_dim_to_check": 1882, "in_proj_weight": 1882, "in_proj_bia": 1882, "bias_k": 1882, "bias_v": 1882, "out_proj_weight": 1882, "out_proj_bia": 1882, "use_separate_proj_weight": 1882, "q_proj_weight": 1882, "k_proj_weight": 1882, "v_proj_weight": 1882, "static_k": 1882, "static_v": 1882, "multilabel_soft_margin_loss": 1882, "relu6": [1882, 1926, 1933], "silu": [1882, 1899, 1926], "softsign": 1882, "tanhshrink": 1882, "adaptive_avg_pool1d": [1882, 1909, 1926, 1933, 1964], "adaptive_max_pool1d": [1882, 1909, 1926], "affine_grid_gener": [1882, 1926], "alias_copi": [1882, 1926], "align_tensor": [1882, 1926], "alpha_dropout_": 1882, "as_strided_copi": [1882, 1926], "atleast_1d": [1882, 1926], "avg_pool1d": [1882, 1926, 1933, 1964], "bartlett_window": [1882, 1886, 1926], "cudnn_en": 1882, "batch_norm_backward_elemt": 1882, "invstd": 1882, "sum_di": 1882, "sum_dy_xmu": 1882, "batch_norm_backward_reduc": 1882, "input_g": 1882, "bias_g": 1882, "out3": 1882, "batch_norm_elemt": [1882, 1926], "batch_norm_gather_stat": [1882, 1926], "batch_norm_gather_stats_with_count": [1882, 1926], "batch_norm_stat": [1882, 1926], "batch_norm_update_stat": [1882, 1926], "blackman_window": [1882, 1886, 1926], "block_diag": [1882, 1926], "can_cast": [1882, 1926], "ccol_indices_copi": [1882, 1926], "celu_": 1882, "choose_qparams_optim": [1882, 1926], "n_bin": 1882, "bit_width": 1882, "col_indices_copi": [1882, 1926], "column_stack": [1882, 1926], "constant_pad_nd": [1882, 1926, 1964], "conv_tbc": [1882, 1926], "crow_indices_copi": [1882, 1926], "cudnn_affine_grid_gener": [1882, 1926], "cudnn_batch_norm": [1882, 1926], "exponential_average_factor": 1882, "cudnn_convolut": [1882, 1926], "cudnn_convolution_add_relu": [1882, 1926], "cudnn_convolution_relu": [1882, 1926], "cudnn_convolution_transpos": [1882, 1926], "cudnn_grid_sampl": [1882, 1926], "cudnn_is_accept": [1882, 1926], "cumulative_trapezoid": [1882, 1926], "detach_copi": [1882, 1926, 1968], "diagonal_copi": [1882, 1926], "dropout_": [1882, 1892], "embedding_renorm_": 1882, "physical_layout": [1882, 1964], "empty_quant": [1882, 1926], "anyenumtyp": 1882, "expand_copi": [1882, 1926], "fake_quantize_per_channel_affin": [1882, 1926], "fbgemm_linear_fp16_weight": [1882, 1926], "packed_weight": 1882, "fbgemm_linear_fp16_weight_fp32_activ": [1882, 1926], "fbgemm_linear_int8_weight": [1882, 1926], "col_offset": 1882, "weight_scal": 1882, "weight_zero_point": 1882, "fbgemm_linear_int8_weight_fp32_activ": [1882, 1926], "fbgemm_linear_quantize_weight": [1882, 1926], "fbgemm_pack_gemm_matrix_fp16": [1882, 1926], "fbgemm_pack_quantized_matrix": [1882, 1926], "feature_alpha_dropout_": 1882, "feature_dropout": [1882, 1926], "feature_dropout_": 1882, "frobenius_norm": [1882, 1926], "from_fil": [1882, 1926, 1942], "fused_moving_avg_obs_fake_qu": [1882, 1926], "observer_on": 1882, "fake_quant_on": 1882, "running_min": 1882, "running_max": 1882, "per_row_fake_qu": 1882, "symmetric_qu": 1882, "interpolation_mod": [1882, 1964], "has_bias": 1882, "gru_cel": [1882, 1926], "w_ih": 1882, "w_hh": 1882, "hamming_window": [1882, 1886, 1926], "histogramdd": [1882, 1926], "hspmm": [1882, 1926, 1940], "indices_copi": [1882, 1926], "is_autocast_cpu_en": [1882, 1926], "is_grad_en": [1882, 1926], "is_vulkan_avail": [1882, 1926], "isin": [1882, 1926], "kaiser_window": [1882, 1926], "lstm_cell": [1882, 1926], "meshgrid": [1882, 1926], "miopen_batch_norm": [1882, 1926], "miopen_convolut": [1882, 1926], "miopen_convolution_add_relu": [1882, 1926], "miopen_convolution_relu": [1882, 1926], "miopen_convolution_transpos": [1882, 1926], "miopen_depthwise_convolut": [1882, 1926], "miopen_rnn": [1882, 1926], "weight_stride0": 1882, "dropout_st": 1882, "out4": 1882, "mkldnn_adaptive_avg_pool2d": [1882, 1926], "mkldnn_convolut": [1882, 1926], "mkldnn_linear_backward_weight": 1882, "bias_defin": 1882, "mkldnn_max_pool2d": [1882, 1926], "mkldnn_max_pool3d": [1882, 1926], "mkldnn_rnn_layer": [1882, 1926], "weight0": 1882, "weight1": 1882, "weight2": 1882, "weight3": 1882, "hx_": 1882, "cx_": 1882, "native_batch_norm": [1882, 1926], "save_mean": 1882, "save_invstd": 1882, "native_channel_shuffl": [1882, 1926], "native_dropout": [1882, 1926, 1964], "native_group_norm": [1882, 1926, 1964], "hxw": [1882, 1964], "native_layer_norm": [1882, 1926, 1964], "native_norm": [1882, 1926, 1940], "norm_except_dim": [1882, 1926], "nuclear_norm": [1882, 1926], "pairwise_dist": [1882, 1926], "permute_copi": [1882, 1926], "promote_typ": [1882, 1926, 1947], "quantize_per_channel": [1882, 1926, 1931], "quantize_per_tensor_dynam": [1882, 1926, 1931], "quantized_batch_norm": [1882, 1926], "quantized_gru_cel": [1882, 1926], "packed_ih": 1882, "packed_hh": 1882, "col_offsets_ih": 1882, "col_offsets_hh": 1882, "scale_ih": 1882, "scale_hh": 1882, "zero_point_ih": 1882, "zero_point_hh": 1882, "quantized_lstm_cel": [1882, 1926], "quantized_max_pool1d": [1882, 1926], "quantized_max_pool2d": [1882, 1926], "quantized_max_pool3d": [1882, 1926], "quantized_rnn_relu_cel": [1882, 1926], "quantized_rnn_tanh_cel": [1882, 1926], "rand_lik": [1882, 1886, 1907, 1926, 1948, 1954], "randint_lik": [1882, 1886, 1926, 1948], "randn_lik": [1882, 1886, 1899, 1926, 1948], "randperm": [1882, 1886, 1926, 1948, 1964], "result_typ": [1882, 1926], "scalar1": 1882, "scalar2": 1882, "rnn_relu": [1882, 1926], "rnn_relu_cel": [1882, 1926], "rnn_tanh": [1882, 1926], "rnn_tanh_cel": [1882, 1926], "row_indices_copi": [1882, 1926], "row_stack": [1882, 1926], "rrelu_": 1882, "rsub": [1882, 1926], "searchsort": [1882, 1926], "segment_reduc": [1882, 1926], "selu_": 1882, "slice_copi": [1882, 1926], "sparse_bsc_tensor": [1882, 1926, 1940], "sparse_bsr_tensor": [1882, 1926, 1940], "sparse_compressed_tensor": [1882, 1926, 1940], "sparse_csc_tensor": [1882, 1926, 1940], "split_copi": [1882, 1926], "split_with_sizes_copi": [1882, 1926], "squeeze_copi": [1882, 1926], "std_mean": [1882, 1897, 1926], "t_copi": [1882, 1926], "threshold_": 1882, "transpose_copi": [1882, 1926], "trapz": [1882, 1926], "tril_indic": [1882, 1886, 1926], "triu_indic": [1882, 1886, 1926], "unbind_copi": [1882, 1926], "unfold_copi": [1882, 1926], "unsqueeze_copi": [1882, 1926], "values_copi": [1882, 1926], "vander": [1882, 1886, 1926], "var_mean": [1882, 1897, 1926], "view_as_complex_copi": [1882, 1926], "view_as_real_copi": [1882, 1926], "_nn": 1882, "adaptive_max_pool2d": [1882, 1926], "avg_pool2d": [1882, 1926, 1933, 1964], "conv_depthwise3d": [1882, 1926], "cross_entropy_loss": [1882, 1926], "input_scal": 1882, "elu_": 1882, "flatten_dense_tensor": [1882, 1926], "random_sampl": 1882, "gelu_": 1882, "hardsigmoid_": [1882, 1933], "hardswish_": 1882, "hardtanh_": [1882, 1933], "leaky_relu_": 1882, "log_sigmoid": [1882, 1926], "mish_": 1882, "mkldnn_linear": [1882, 1926], "mkldnn_reorder_conv2d_weight": [1882, 1926], "mkldnn_reorder_conv3d_weight": [1882, 1926], "nll_loss2d": [1882, 1926], "nll_loss_nd": [1882, 1926], "reflection_pad3d": [1882, 1926, 1964], "relu6_": 1882, "rrelu_with_nois": [1882, 1926], "rrelu_with_noise_": 1882, "silu_": 1882, "slow_conv3d": [1882, 1926], "slow_conv_dilated2d": [1882, 1926], "slow_conv_dilated3d": [1882, 1926], "slow_conv_transpose2d": [1882, 1926], "slow_conv_transpose3d": [1882, 1926], "softshrink": [1882, 1926], "thnn_conv2d": [1882, 1926], "unflatten_dense_tensor": [1882, 1926], "upsample_bicubic2d": [1882, 1926], "scales_h": 1882, "scales_w": 1882, "upsample_bilinear2d": [1882, 1926, 1964], "upsample_linear1d": [1882, 1926], "upsample_nearest1d": [1882, 1926], "upsample_nearest2d": [1882, 1926, 1964], "upsample_nearest3d": [1882, 1926], "scales_d": 1882, "upsample_trilinear3d": [1882, 1926], "fft_fftfreq": [1882, 1926], "fft_fftshift": [1882, 1926], "fft_hfft2": [1882, 1926], "fft_hfftn": [1882, 1926], "fft_ifftshift": [1882, 1926], "fft_ihfft2": [1882, 1926], "fft_ihfftn": [1882, 1926], "fft_rfftfreq": [1882, 1926], "_linalg": 1882, "linalg_cross": [1882, 1926], "linalg_det": [1882, 1926], "linalg_diagon": [1882, 1926], "eigvec": 1882, "linalg_ldl_factor": [1882, 1926], "linalg_ldl_factor_ex": [1882, 1926], "linalg_ldl_solv": [1882, 1926], "linalg_lu": [1882, 1926], "linalg_lu_factor": [1882, 1926], "linalg_lu_factor_ex": [1882, 1926], "linalg_lu_solv": [1882, 1926], "linalg_matmul": [1882, 1926], "linalg_matrix_exp": [1882, 1926], "linalg_matrix_pow": [1882, 1926], "linalg_multi_dot": [1882, 1926], "linalg_norm": [1882, 1926], "linalg_pinv": [1882, 1926], "linalg_solve_ex": [1882, 1926], "linalg_solve_triangular": [1882, 1926], "linalg_vand": [1882, 1926], "linalg_vecdot": [1882, 1926], "linalg_vector_norm": [1882, 1926], "_nest": 1882, "nested_to_padded_tensor": [1882, 1926], "_spars": 1882, "sparse_sampled_addmm": [1882, 1926], "_special": 1882, "special_airy_ai": [1882, 1926], "special_bessel_j0": [1882, 1926], "special_bessel_j1": [1882, 1926], "special_bessel_y0": [1882, 1926], "special_bessel_y1": [1882, 1926], "special_chebyshev_polynomial_t": [1882, 1926], "special_chebyshev_polynomial_u": [1882, 1926], "special_chebyshev_polynomial_v": [1882, 1926], "special_chebyshev_polynomial_w": [1882, 1926], "special_digamma": [1882, 1926], "special_entr": [1882, 1926], "special_erf": [1882, 1926], "special_erfc": [1882, 1926], "special_erfcx": [1882, 1926], "special_erfinv": [1882, 1926], "special_exp2": [1882, 1926], "special_expit": [1882, 1926], "special_expm1": [1882, 1926], "special_gammainc": [1882, 1926], "special_gammaincc": [1882, 1926], "special_gammaln": [1882, 1926], "special_hermite_polynomial_h": [1882, 1926], "special_i0": [1882, 1926], "special_i1": [1882, 1926], "special_laguerre_polynomial_l": [1882, 1926], "special_legendre_polynomial_p": [1882, 1926], "special_log1p": [1882, 1926], "special_log_ndtr": [1882, 1926], "special_log_softmax": [1882, 1926], "special_logit": [1882, 1926], "special_logsumexp": [1882, 1926], "special_modified_bessel_i0": [1882, 1926], "special_modified_bessel_i1": [1882, 1926], "special_modified_bessel_k0": [1882, 1926], "special_modified_bessel_k1": [1882, 1926], "special_multigammaln": [1882, 1926], "special_ndtr": [1882, 1926], "special_ndtri": [1882, 1926], "special_polygamma": [1882, 1926], "special_psi": [1882, 1926], "special_round": [1882, 1926], "special_scaled_modified_bessel_k0": [1882, 1926], "special_scaled_modified_bessel_k1": [1882, 1926], "special_shifted_chebyshev_polynomial_t": [1882, 1926], "special_shifted_chebyshev_polynomial_u": [1882, 1926], "special_shifted_chebyshev_polynomial_v": [1882, 1926], "special_shifted_chebyshev_polynomial_w": [1882, 1926], "special_sinc": [1882, 1926], "special_softmax": [1882, 1926], "special_spherical_bessel_j0": [1882, 1926], "special_xlog1pi": [1882, 1926], "special_xlogi": [1882, 1926], "special_zeta": [1882, 1926], "tval": 1882, "is_accept": 1882, "rect": 1882, "magic": [1882, 1885, 1948, 1958], "__complex__": 1882, "__float__": 1882, "__int__": 1882, "hex": [1882, 1884, 1926], "__hex__": 1882, "oct": [1882, 1926], "__oct__": 1882, "divmod": [1882, 1884, 1926], "chr": [1882, 1884, 1926], "int_float": 1882, "float_int": 1882, "fab": [1882, 1926], "int_int": 1882, "float_float": 1882, "complex_complex": 1882, "int_complex": 1882, "complex_int": 1882, "float_complex": 1882, "complex_float": [1882, 1942], "scalar_scalar": 1882, "int_to_int": 1882, "modf": [1882, 1926], "mathremaind": [1882, 1926], "programm": [1883, 1884, 1931], "tn": 1883, "subtyp": 1883, "an_error": 1883, "noreturn": [1883, 1884], "classvar": [1883, 1884], "anystr": [1883, 1884], "nomin": 1883, "newtyp": [1883, 1884], "tup": [1883, 1884], "emptydatastructur": 1883, "my_list": 1883, "aug_add_x": 1883, "inc": [1883, 1884], "assign_x": [1883, 1884], "sum_pair": 1883, "red": [1883, 1884], "green": [1883, 1884, 1960], "enum_fn": [1883, 1884], "my_variable_nam": 1883, "top_level_method": 1883, "other_help": 1883, "ten": [1883, 1945], "my_submodul": 1883, "tuple_or_list": 1883, "a_tupl": 1883, "de": [1883, 1928, 1931], "is_script": [1883, 1884, 1926], "unsupported_linear_op": 1883, "is_trac": [1883, 1884], "univers": 1883, "typing_extens": 1883, "a_dict": 1883, "some_dict": 1883, "delimit": [1884, 1885], "tstype": 1884, "tsmoduletyp": 1884, "tsalltyp": 1884, "tsmetatyp": 1884, "tsprimitivetyp": 1884, "tsstructuraltyp": 1884, "tsnominaltyp": 1884, "myclass": [1884, 1928], "printabl": [1884, 1928], "sortabl": 1884, "nevertheless": [1884, 1938], "inc_first_el": 1884, "cpufloattyp": 1884, "tstupl": 1884, "tsnamedtupl": 1884, "tslist": 1884, "tsdict": 1884, "tsoption": 1884, "tsunion": 1884, "tsfutur": 1884, "tsrref": 1884, "tsawait": 1884, "await": [1884, 1885, 1936], "keytyp": 1884, "tensortyp": [1884, 1968], "_await": 1884, "mytupl": 1884, "scripted_inc": 1884, "_annotatednamedtupl": 1884, "_namedtupleannot": 1884, "_unannotatednamedtupl": 1884, "mistak": [1884, 1911, 1958], "nameerror": 1884, "remedi": 1884, "tsbuiltinclass": 1884, "tscustomclass": 1884, "tsenum": 1884, "tstensor": 1884, "subtensor": [1884, 1909, 1970], "subwithtorchfunct": 1884, "script_g": 1884, "tsclassdef": 1884, "methoddefinit": 1884, "__torch__": [1884, 1925], "class2": 1884, "tsenumdef": 1884, "tsenumtyp": 1884, "memberidentifi": 1884, "intenum": 1884, "intflag": 1884, "basecolor": 1884, "compli": [1884, 1928], "classbodydefinit": 1884, "moduleobj": 1884, "testmodul": 1884, "mymodel": [1884, 1903, 1917, 1923], "dosometh": 1884, "strateg": 1884, "congruent": 1884, "python3": 1884, "unannot": 1884, "python3annot": 1884, "paramannot": 1884, "returnannot": 1884, "funcormethodbodi": 1884, "mypyannot": 1884, "localvarannot": 1884, "setval": 1884, "moduletyp": [1884, 1928], "classidentifi": 1884, "instanceattridentifi": 1884, "offset_": 1884, "tsstructualtyp": 1884, "grammar": 1884, "chapter": [1884, 1912], "floattyp": 1884, "inttyp": 1884, "stringtyp": 1884, "devicetyp": 1884, "bullet": 1884, "tupletyp": 1884, "listtyp": 1884, "enclosur": 1884, "parenth_form": 1884, "list_displai": 1884, "dict_displai": 1884, "legal": 1884, "stringliter": 1884, "floatnumb": 1884, "expression_list": 1884, "list_comprehens": 1884, "comp_for": 1884, "target_list": 1884, "or_expr": 1884, "key_datum_list": 1884, "dict_comprehens": 1884, "key_datum": 1884, "ongo": [1884, 1925, 1934, 1936], "enclos": 1884, "datum": [1884, 1950], "attributeref": 1884, "slice_list": 1884, "slice_item": 1884, "proper_slic": 1884, "argument_list": 1884, "desugar": [1884, 1958], "u_expr": 1884, "tightli": [1884, 1915], "m_expr": 1884, "a_expr": 1884, "shift_expr": 1884, "and_expr": 1884, "xor_expr": 1884, "comp_oper": 1884, "__contains__": 1884, "or_test": 1884, "and_test": 1884, "not_test": 1884, "conditional_express": 1884, "starred_item": 1884, "expression_stmt": 1884, "starred_express": 1884, "assignment_express": 1884, "assignment_stmt": 1884, "augmented_assignment_stmt": 1884, "augtarget": 1884, "augop": 1884, "annotated_assignment_stmt": 1884, "raise_stmt": 1884, "assert_stmt": 1884, "return_stmt": 1884, "del_stmt": 1884, "pass_stmt": 1884, "print_stmt": 1884, "break_stmt": 1884, "continue_stmt": 1884, "if_stmt": 1884, "while_stmt": 1884, "for_stmt": 1884, "with_stmt": 1884, "with_item": 1884, "__enter__": 1884, "suppress": [1884, 1935], "tuple_stmt": 1884, "getattr_stmt": 1884, "hasattr_stmt": 1884, "zip_stmt": 1884, "iterable1": 1884, "iterable2": 1884, "enumerate_stmt": 1884, "add_stat_valu": 1884, "sugaredvalu": 1884, "unrecogn": 1884, "honor": 1884, "__abs__": 1884, "bytearrai": 1884, "delattr": 1884, "exec": 1884, "__index__": 1884, "isint": 1884, "issubclass": [1884, 1909], "ndigit": 1884, "__import__": [1884, 1928], "notimpl": [1884, 1885, 1909, 1958], "rpc_sync": [1884, 1926, 1936, 1937, 1938], "synonym": 1884, "_fork": [1884, 1906], "_wait": [1884, 1906], "lexic": 1885, "indent": 1885, "coroutin": 1885, "__del__": [1885, 1904], "__bytes__": 1885, "__slots__": 1885, "metaclass": 1885, "mro": 1885, "__r": 1885, "__": [1885, 1968], "bytesliter": 1885, "imagnumb": 1885, "parenthes": 1885, "ifs": 1885, "customiz": [1885, 1949, 1956], "compound": 1885, "exc_typ": 1885, "exc_valu": 1885, "adaptivelogsoftmaxwithloss": 1886, "gdoc": 1888, "qualnam": 1888, "alias_analysi": 1888, "impl_": 1888, "collis": 1888, "mylib": 1888, "mylibrari": 1888, "dispatch_kei": [1888, 1956], "operator_nam": 1888, "faketensor": [1888, 1923, 1958], "googl": 1888, "1w": 1888, "t6wz8iy8foi0vm8bf44pdbgs283qvpeljzwieqwq": 1888, "custom_linear": 1888, "custom_linear_abstract": 1888, "custom_nonzero": 1888, "custom_nonzero_abstract": 1888, "peek": 1888, "new_dynamic_s": 1888, "custom_nonzero_cpu": 1888, "x_np": 1888, "abstractimplctx": 1888, "2020": [1888, 1909], "colab": [1888, 1928, 1958], "keynam": 1888, "conserv": [1888, 1891, 1907, 1958], "fallthrough_kernel": 1888, "fallthrough": 1888, "div_cpu": 1888, "off_by_default": 1890, "_registr": 1890, "spammi": [1890, 1956], "compiled_autograd": 1890, "born": 1891, "citizen": 1891, "afterthought": 1891, "intuit": [1891, 1961], "alik": 1891, "grai": 1891, "systemat": 1891, "onboard": 1891, "maskedarrai": 1891, "masked_tensor": 1891, "mobil": [1892, 1931, 1959], "blocklist": [1892, 1928], "mobileoptimizertyp": 1892, "conv_bn_fus": 1892, "correspondingli": 1892, "prepack": [1892, 1926], "insert_fold_prepack_op": 1892, "arm": [1892, 1931], "remove_dropout": 1892, "hoist": 1892, "hoist_conv_packed_param": 1892, "fuse_add_relu": 1892, "vulkan": 1892, "vulkan_automatic_gpu_transf": 1892, "freeze_modul": 1892, "script_modul": 1892, "optimization_blocklist": 1892, "preserved_method": 1892, "_mobileoptimizertyp": 1892, "recursivescriptmodul": [1892, 1920], "download": [1893, 1921, 1945, 1961], "infrequ": 1894, "window_s": 1894, "max_sampl": 1894, "cap": 1894, "_monitor": 1894, "data_value_t": 1894, "eventhandlerhandl": 1894, "register_event_handl": 1894, "unregister_event_handl": 1894, "tensorboardeventhandl": 1894, "writer": [1894, 1915, 1945], "shader": [1895, 1916], "processor": 1895, "metalperformanceshad": 1895, "shared_memori": 1896, "abruptli": 1896, "get_all_sharing_strategi": 1896, "get_sharing_strategi": 1896, "set_sharing_strategi": 1896, "new_strategi": 1896, "di": [1896, 1954, 1956, 1962], "abnorm": [1896, 1917], "forev": [1896, 1908], "asap": 1896, "queue_2": 1896, "x_clone": 1896, "segfault": [1896, 1918, 1958], "shm_open": 1896, "prone": [1896, 1917, 1958], "destructor": [1896, 1938], "seriou": [1896, 1907, 1958], "torch_shm_manag": 1896, "unnot": 1896, "spawncontext": 1896, "has_nam": 1897, "is_shar": [1897, 1942, 1959], "is_sparse_csr": [1897, 1926, 1942, 1959], "is_tensor": [1897, 1940], "items": [1897, 1926], "unifies_names_from_input_tensor": 1897, "nbyte": [1897, 1926, 1942], "ndimens": 1897, "register_post_accumulate_grad_hook": [1897, 1904], "position": [1897, 1898], "unnam": [1897, 1898], "misalign": 1897, "inher": 1897, "collaps": [1897, 1926, 1964], "disappear": 1897, "img": [1898, 1945], "renamed_img": 1898, "coexist": 1898, "wildcard": [1898, 1928, 1968], "somewher": [1898, 1914, 1962], "scale_channel": 1898, "more_img": 1898, "named_tensor": 1898, "named_img": 1898, "flat_img": 1898, "named_flat_img": 1898, "unflattened_named_img": 1898, "grad_loss": 1898, "8107": 1898, "6357": 1898, "0783": 1898, "untest": 1898, "rename_map": 1898, "greedili": 1898, "unment": 1898, "49152": 1898, "datastructur": 1899, "seamless": 1899, "nested_tensor": 1899, "nt": 1899, "vein": 1899, "as_nested_tensor": 1899, "irregular": 1899, "indistinguish": 1899, "2286": 1899, "4842": 1899, "7827": 1899, "6745": [1899, 1941], "0658": 1899, "1247": 1899, "4078": 1899, "8083": 1899, "2871": 1899, "5559": 1899, "9885": 1899, "4074": 1899, "4855": 1899, "0733": 1899, "8285": 1899, "6858": 1899, "7030": 1899, "3481": 1899, "0236": 1899, "jag": [1899, 1957], "fake_grad": 1899, "6862": 1899, "1282": 1899, "1031": 1899, "0464": 1899, "3276": 1899, "9967": 1899, "0054": 1899, "8972": 1899, "9174": 1899, "4995": 1899, "8546": 1899, "7194": 1899, "2918": 1899, "1846": 1899, "8793": 1899, "5183": 1899, "6447": 1899, "8009": 1899, "8468": 1899, "9832": 1899, "5272": 1899, "pt_infer": 1899, "pt_larg": 1899, "pt_small": 1899, "bitwidth": [1900, 1915, 1931, 1940], "asymmetr": [1900, 1931, 1934], "sacrific": [1902, 1907], "dirac": 1902, "glorot": 1902, "bengio": 1902, "fan": 1902, "_in": 1902, "_out": [1902, 1912, 1964], "fan_in": 1902, "delv": 1902, "surpass": 1902, "he": 1902, "_mode": 1902, "fan_out": 1902, "redrawn": 1902, "sax": 1902, "2013": 1902, "marten": 1902, "clip_grad_value_": 1903, "optimizer2": 1903, "batch_per_it": 1903, "iters_to_accumul": 1903, "num_proc": 1903, "grad_param": 1903, "grad_norm": 1903, "scaled_grad_param": 1903, "inv_scal": 1903, "proce": [1903, 1907, 1936, 1969], "optimizer0": 1903, "optimizer1": 1903, "output0": 1903, "model0": 1903, "model1": 1903, "loss0": 1903, "loss1": 1903, "imped": 1903, "poor": [1903, 1904], "dp_model": 1903, "alter": [1903, 1909, 1965], "imported_funct": 1903, "mymm": 1903, "myfloat32func": 1903, "fwd_output": 1903, "cleaner": 1904, "mapsto": 1904, "educ": 1904, "_save": 1904, "_saved_self": 1904, "convex": 1904, "concav": 1904, "togglabl": 1904, "drawback": 1904, "0011": 1904, "dirti": 1904, "hogwild": 1904, "train_fn": 1904, "graphtask": 1904, "copyslic": 1904, "mutex": 1904, "gotten": 1904, "curiou": 1904, "\u2102": 1904, "yj": 1904, "holomorph": 1904, "fulfil": [1904, 1910, 1928, 1957, 1962], "theori": 1904, "homomorph": 1904, "mathematician": 1904, "im": 1904, "studi": [1904, 1930], "beauti": 1904, "somewhat": [1904, 1907, 1940], "counterintuit": 1904, "0906": 1904, "4835": 1904, "audio": [1904, 1945], "\u211d": 1904, "_output": 1904, "vj": 1904, "handi": [1904, 1907], "selfdeletingtempfil": 1904, "tmp_dir": 1904, "uuid": 1904, "uuid4": 1904, "temp_fil": 1904, "forbidden": 1904, "savedtensor": 1904, "_raw_saved_": 1904, "_raw_saved_self": 1904, "save_on_disk_threshold": 1904, "tensor_or_sctf": 1904, "_saved_oth": 1904, "4th": 1905, "backcompat": 1905, "broadcast_warn": 1905, "userwarn": 1905, "compute_z": 1906, "w_z": 1906, "w_y": 1906, "tbb": 1906, "aten_thread": 1906, "omp": 1906, "mkl_thread": 1906, "bla": 1906, "mkldnn_cpu_runtim": 1906, "use_mkldnn": 1906, "use_tbb": 1906, "use_openmp": 1906, "ON": [1906, 1913, 1914], "set_num_interop_thread": 1906, "get_num_interop_thread": 1906, "set_num_thread": [1906, 1917], "get_num_thread": 1906, "omp_num_thread": 1906, "mkl_num_thread": 1906, "1024": [1906, 1907, 1959], "e5": 1906, "oversubscript": 1906, "irrespect": 1907, "spread": 1907, "cuda2": [1907, 1913], "broadli": [1907, 1931], "set_float_32_matmul_precis": 1907, "a100": [1907, 1966, 1969], "a_ful": 1907, "10240": 1907, "b_full": 1907, "ab_ful": 1907, "7277": 1907, "ab_tf32": 1907, "016": 1907, "ga100": 1907, "1747": 1907, "relative_error": 1907, "0022": 1907, "ab_fp32": 1907, "0031": 1907, "000039": 1907, "7x": 1907, "globalcontext": 1907, "setallowtf32cubla": 1907, "setallowtf32cudnn": 1907, "bench_gemm_transform": 1907, "allow_fp16_reduc": 1907, "4048": 1907, "1634": 1907, "1639": 1907, "4056": 1907, "1670": 1907, "1661": 1907, "4080": 1907, "1664": 1907, "1658": 1907, "1651": 1907, "4104": 1907, "1677": 1907, "1674": 1907, "4128": 1907, "1796": [1907, 1915], "2519": 1907, "5096": 1907, "2144": 1907, "2149": 1907, "2766": 1907, "5120": 1907, "2142": 1907, "9728": 1907, "3875": 1907, "5779": 1907, "16384": [1907, 1961], "6182": 1907, "9656": 1907, "setallowfp16reductioncubla": 1907, "instabl": 1907, "setallowbf16reductioncubla": 1907, "invis": [1907, 1959, 1969], "start_ev": 1907, "elapsed_time_m": 1907, "exploit": 1907, "paragraph": [1907, 1912], "initial_grad": 1907, "memory_alloc": [1907, 1913], "memory_snapshot": [1907, 1913], "memcheck": 1907, "pytorch_no_cuda_memory_cach": [1907, 1913], "option2": 1907, "value2": 1907, "max_split_size_mb": 1907, "borderlin": 1907, "memory_summari": 1907, "resort": [1907, 1912, 1928], "roundup_power2_divis": 1907, "cudacachingalloc": 1907, "1280": 1907, "1536": 1907, "1792": 1907, "256mb": 1907, "512mb": 1907, "1gb": [1907, 1967], "knob": [1907, 1957], "garbage_collection_threshold": 1907, "reclaim": [1907, 1954], "release_cached_block": 1907, "unfavor": 1907, "expandable_seg": 1907, "2mb": 1907, "sliver": 1907, "pinned_use_cuda_host_regist": 1907, "cudahostregist": 1907, "cudahostalloc": 1907, "malloc": [1907, 1962, 1971], "pinned_num_register_thread": 1907, "cuda_runtime_api": 1907, "iostream": 1907, "fpic": 1907, "my_malloc": 1907, "cout": 1907, "endl": [1907, 1914], "my_fre": 1907, "cudafre": [1907, 1971], "cudapluggablealloc": 1907, "new_alloc": 1907, "_cuda_clearcublasworkspac": 1907, "kib": 1907, "lru": 1907, "geometri": 1907, "1023": 1907, "zeta": [1907, 1926, 1941, 1964], "varieti": [1907, 1937], "use_pytorch_kernel_cach": 1907, "pytorch_kernel_cache_path": 1907, "store_tru": 1907, "disable_cuda": 1907, "assess": 1907, "cudagetdevicecount": 1907, "cuinit": 1907, "pytorch_nvml_based_cuda_check": 1907, "nvml": 1907, "nvmldevicegetcount_v2": 1907, "poison": 1907, "aforement": [1907, 1917], "train_load": [1907, 1917], "x_cpu": 1907, "x_gpu": 1907, "x_cpu_long": 1907, "y_cpu": 1907, "y_gpu": 1907, "y_cpu_long": 1907, "new_tensor": 1907, "overus": 1907, "principl": [1907, 1959], "cudagraphlaunch": 1907, "elid": 1907, "versatil": 1907, "static_input": 1907, "static_output": 1907, "realist": 1907, "sophist": [1907, 1927], "violat": [1907, 1910], "virtual": 1907, "d_in": 1907, "d_out": 1907, "640": 1907, "static_target": 1907, "static_y_pr": 1907, "static_loss": 1907, "real_input": [1907, 1958], "real_target": 1907, "refil": 1907, "rejoin": 1907, "cuda_work": 1907, "nsight": 1907, "reorgan": 1907, "graphabl": 1907, "needlessli": [1907, 1957], "econom": 1907, "static_out_1": 1907, "g1_workload": 1907, "static_in_1": 1907, "static_out_2": 1907, "g2_workload": 1907, "static_in_2": 1907, "real_data_1": 1907, "real_data_2": 1907, "occasion": [1907, 1940, 1958], "29500": [1908, 1929, 1936, 1937], "dive": [1908, 1912, 1928, 1962, 1963], "grad0": 1908, "grad1": 1908, "bucket1": 1908, "bucket0": 1908, "hurt": 1908, "kick": [1908, 1936, 1937, 1966], "earliest": 1908, "unreadi": 1908, "perspect": [1908, 1918, 1937, 1962], "hpp": 1908, "processgroupgloo": 1908, "processgroupmpi": 1908, "_sync_param": 1908, "autograd_hook": 1908, "prepare_for_backward": 1908, "_after_": 1908, "log_level": [1908, 1969], "optimize_ddp": 1908, "mark_dirti": 1909, "mark_non_differenti": [1909, 1910], "set_materialize_grad": 1909, "linearfunct": 1909, "grad_bia": 1909, "mulconst": 1909, "mycub": [1909, 1910], "grad_dx": [1909, 1910], "my_cub": [1909, 1910], "input_featur": 1909, "output_featur": 1909, "duck": [1909, 1928], "__array_function__": [1909, 1959], "nep": [1909, 1959], "0018": 1909, "scalartensor": 1909, "handled_funct": 1909, "mandat": 1909, "update_wrapp": 1909, "ensure_tensor": 1909, "metadatatensor": 1909, "__add__": 1909, "subtensor2": 1909, "othersubtensor": 1909, "loggingtensor": 1909, "permiss": 1909, "_metadata": 1909, "ndata": 1909, "ministri": 1909, "silli": 1909, "superclass": 1909, "troublesom": 1909, "face": [1909, 1928, 1945, 1958], "_get_overridable_funct": 1909, "get_overridable_funct": [1909, 1970], "func_dict": 1909, "nn_func": 1909, "labori": 1909, "_get_testing_overrid": 1909, "get_testing_overrid": [1909, 1970], "override_dict": 1909, "dummy_add": 1909, "get_ignored_funct": [1909, 1970], "__torch_dispatch__": [1909, 1940, 1958], "outdat": 1909, "redispatch": [1909, 1958], "dispatchkei": 1909, "zerotensor": 1909, "compositeimplicitautograd": 1909, "func_nam": [1909, 1936], "overload_nam": 1909, "exot": 1909, "zoo": 1909, "subclass_zoo": [1909, 1958], "intrus": 1909, "torchfunctionmod": 1909, "_python_dispatch": 1909, "torchdispatchmod": 1909, "resolve_nam": [1909, 1970], "functionlog": 1909, "dispatchlog": 1909, "7164": 1909, "9336": 1909, "4287": 1909, "7989": 1909, "2169": 1909, "7474": 1909, "5624": 1909, "5970": 1909, "4328": 1909, "9794": 1909, "3490": 1909, "8671": 1909, "8573": 1909, "4338": 1909, "4948": 1909, "1249": 1909, "3307": 1909, "2151": 1909, "6018": 1909, "9060": 1909, "2974": 1909, "7708": 1909, "6668": 1909, "0352": 1909, "7948": 1909, "6023": 1909, "4303": 1909, "2036": 1909, "6831": 1909, "8120": 1909, "5949": 1909, "5416": 1909, "3335": 1909, "5897": 1909, "custom_vjp": 1910, "custom_jvp": 1910, "to_numpi": 1910, "numpysort": 1910, "ind_inv": 1910, "_1": [1910, 1928], "numpytak": 1910, "numpy_sort": 1910, "ggx": 1910, "vmappabl": 1910, "x_bdim": 1910, "ind_bdim": 1910, "ind_inv_bdim": 1910, "expanded_x": 1910, "expanded_ind": 1910, "expanded_ind_inv": 1910, "new_dim": 1910, "logical_dim": 1910, "maybe_expand_bdim_at_front": 1910, "pseudocod": 1910, "rapidli": [1911, 1917, 1923, 1924], "fortun": [1911, 1969], "abridg": 1911, "total_loss": 1911, "extrud": 1911, "phenomenon": 1911, "plenti": 1911, "bptt": 1911, "repackag": 1911, "nm": 1911, "blow": 1911, "rememb": [1911, 1917, 1962], "elf": 1911, "grep": [1911, 1953], "run_model": 1911, "recoveri": 1911, "data_parallel": 1911, "pad_packed_sequ": 1911, "padded_input": 1911, "packed_input": 1911, "packed_output": 1911, "my_lstm": 1911, "dp_m": 1911, "padding_input": 1911, "ur": 1912, "ui": [1912, 1945, 1963, 1966], "j_f": 1912, "calculu": 1912, "cw": 1912, "bigger": 1912, "articl": 1912, "58eb23378f2a376565a66ac32c93a316c45b6131": 1912, "l99": 1912, "l105": 1912, "ds_dx": 1912, "compute_gradi": 1912, "ds_dy": 1912, "conj_w_d": 1912, "w_d": 1912, "d_idx": 1912, "albeit": 1912, "wonder": 1912, "amd": [1913, 1951], "portabl": 1913, "rocmdoc": 1913, "programming_guid": 1913, "hip_api_guid": 1913, "cuda_vers": 1913, "cudaruntimegetvers": 1913, "cudadrivergetvers": 1913, "hip_vers": 1913, "hipruntimegetvers": 1913, "hipdrivergetvers": 1913, "11000": 1913, "use_rocm": 1913, "rocm_vers": 1913, "40300": 1913, "cmake": [1913, 1921], "drocm_force_enable_gpu_assert": 1913, "addglobalcallback": 1914, "recordfunct": 1914, "ivalu": 1914, "threadlocaldebuginfo": 1914, "debuginfoguard": 1914, "recordfunctioncallback": 1914, "onfunctionent": 1914, "onfunctionexit": 1914, "needsinput": 1914, "samplingprob": 1914, "enablerecordfunct": 1914, "cerr": 1914, "broader": [1914, 1948], "inject": 1914, "setapiusagehandl": 1914, "setapiusagelogg": 1914, "event_nam": 1914, "c10_log_api_usage_onc": 1914, "my_api": 1914, "_log_api_usage_onc": 1914, "archiv": 1914, "akin": 1914, "jpeg": 1914, "camera": [1914, 1945], "setexportmoduleextrafileshook": 1914, "extrafilesmap": 1914, "producer_info": 1914, "getenv": 1914, "getsourc": 1914, "precompil": 1914, "pyc": 1914, "loos": 1914, "elabor": 1915, "tpu": 1915, "mylinear": 1915, "sample_input": 1915, "0413": 1915, "2057": 1915, "0597": 1915, "8247": 1915, "1045": 1915, "4299": 1915, "5457": 1915, "4793": 1915, "3634": 1915, "8525": 1915, "6749": 1915, "l0": [1915, 1920], "deeper": [1915, 1928, 1962], "bignet": 1915, "big_net": 1915, "dynamicnet": 1915, "dynamic_net": 1915, "2051": 1915, "7601": 1915, "1963": 1915, "4354": 1915, "6598": 1915, "4446": 1915, "4628": 1915, "8774": 1915, "6848": 1915, "5458": 1915, "4647": 1915, "5310": 1915, "0609": 1915, "0940": 1915, "1266": 1915, "0623": 1915, "3508": 1915, "0550": 1915, "5317": 1915, "5562": 1915, "4028": 1915, "6942": 1915, "0140": 1915, "0329": 1915, "1160": 1915, "0434": 1915, "3889": 1915, "1613": 1915, "6340": 1915, "3887": 1915, "9979": 1915, "0767": 1915, "3526": 1915, "8756": 1915, "5847": 1915, "6016": 1915, "1608": 1915, "0829": 1915, "6338": 1915, "9239": 1915, "6943": 1915, "5034": 1915, "0268": 1915, "4489": 1915, "9403": 1915, "2509": 1915, "5052": 1915, "3088": 1915, "4951": 1915, "3381": 1915, "5166": 1915, "boilerpl": [1915, 1928], "beginn": 1915, "examples_nn": 1915, "polynomial_modul": 1915, "teach": 1915, "0013": [1915, 1941], "0030": 1915, "0008": 1915, "modalmodul": 1915, "6614": 1915, "2669": 1915, "0617": 1915, "4519": 1915, "two_layer_net_optim": 1915, "blitz": 1915, "neural_networks_tutori": 1915, "autograd_tutori": 1915, "new_net": 1915, "runningmean": 1915, "1041": 1915, "0647": 1915, "1515": 1915, "m_load": 1915, "unserialized_th": 1915, "statefulmodul": 1915, "param3": 1915, "param_list": 1915, "parameterlist": 1915, "param_dict": 1915, "parameterdict": 1915, "buffer1": 1915, "buffer2": 1915, "buffer3": 1915, "0322": 1915, "9066": 1915, "1409": 1915, "4852": 1915, "6949": 1915, "2911": 1915, "1044": 1915, "4202": 1915, "1953": 1915, "5299": 1915, "8747": 1915, "6289": 1915, "4898": 1915, "6434": 1915, "5187": 1915, "0346": 1915, "4077": 1915, "4324": 1915, "7022": 1915, "3915": 1915, "6176": 1915, "6062": 1915, "5992": 1915, "4452": 1915, "2843": 1915, "3710": 1915, "3947": 1915, "saving_loading_model": 1915, "what_is_state_dict": 1915, "skip_init": 1915, "skip_param_init": 1915, "forward_hook": [1915, 1965], "backward_hook": [1915, 1965], "new_grad_input": 1915, "5059": 1915, "8158": 1915, "2390": 1915, "0043": 1915, "addmmbackward": 1915, "forward_pre_hook_handl": 1915, "5752": 1915, "7421": 1915, "forward_hook_handl": 1915, "0980": 1915, "4666": 1915, "0256": 1915, "4497": 1915, "5046": 1915, "combat": 1915, "mps_devic": 1916, "yourfavoritenet": 1916, "a3c": 1917, "set_start_method": 1917, "simplequeu": 1917, "cope": 1917, "eleg": 1917, "num_process": 1917, "inappropri": 1917, "vcpu": 1917, "htop": 1917, "exceed": 1917, "competit": 1917, "oversubscrib": 1917, "fairli": [1917, 1929, 1957, 1961], "mnist_hogwild": 1917, "dataloader_kwarg": 1917, "train_epoch": 1917, "30x": 1917, "boost": [1917, 1953], "754": 1918, "1e20": 1918, "4142e": 1918, "struggl": 1918, "benign": 1918, "v_dot2": 1918, "mfma": 1918, "fp64": 1918, "rocbla": 1918, "miopen": 1918, "rocblas_internal_fp16_alt_impl": 1918, "miopen_debug_convolution_attrib_fp16_alt_impl": 1918, "_convbackend": 1918, "slownd": 1918, "slownd_transpos": 1918, "slownd_dil": 1918, "slownd_dilated_transpos": 1918, "convbackend": 1918, "miopendepthwis": 1918, "miopentranspos": 1918, "svd_lowrank": [1919, 1940], "22modul": 1919, "20determin": 1919, "index_add_cuda_": 1919, "1509": 1919, "8027": 1919, "0333": 1919, "1444": 1919, "rese": 1919, "seed_work": 1919, "worker_se": 1919, "train_dataset": 1919, "tensor_dict": 1920, "loaded_numb": 1920, "loaded_even": 1920, "scene": [1920, 1945], "loaded_smal": 1920, "num_batches_track": 1920, "bn_state_dict": 1920, "new_bn": 1920, "out0_relu": 1920, "1400": 1920, "4563": 1920, "0271": 1920, "4406": 1920, "2827": 1920, "4588": 1920, "2031": 1920, "1316": 1920, "6533": 1920, "3413": 1920, "1112": 1920, "m_state_dict": 1920, "new_m": 1920, "original_nam": 1920, "controlflowmodul": 1920, "controlflowmodule_trac": 1920, "3793": 1920, "controlflowmodule_script": 1920, "tagger": 1920, "ipu_tag": 1920, "ipu_deseri": 1920, "startswith": [1920, 1926], "get_default_load_endian": 1920, "byteord": 1920, "loadendian": 1920, "default_load_endian": 1920, "set_default_load_endian": 1920, "endian": 1920, "rem": 1921, "7z": 1921, "curl": 1921, "ossci": 1921, "mkl_2020": 1921, "aoa": 1921, "omkl": 1921, "cuda_prefix": 1921, "cuda102": 1921, "magma_2": 1921, "4_": 1921, "omagma": 1921, "cmake_include_path": 1921, "cd": [1921, 1928, 1930, 1969], "magma_hom": 1921, "studio": [1921, 1923], "pip": [1921, 1923, 1924, 1925, 1945, 1956], "cmake_gener": 1921, "ffi": 1921, "create_extens": 1921, "_ext": 1921, "define_macro": 1921, "relative_to": 1921, "c99": 1921, "x86_x64": 1921, "packagesnotfounderror": 1921, "anaconda": 1921, "noarch": 1921, "continuum": 1921, "pkg": 1921, "pro": [1921, 1945], "msys2": 1921, "importerror": [1921, 1928], "dll": 1921, "vc2017": 1921, "vc": 1921, "vs2017_runtim": 1921, "mkl_fft": 1921, "intel_openmp": 1921, "vs2017": 1921, "openbla": 1921, "forg": 1921, "emerg": [1921, 1957], "bootstrap": 1921, "forgotten": 1921, "idiom": 1921, "freeze_support": 1921, "forkingpickl": 1921, "brokenpipeerror": 1921, "errno": 1921, "couldn": [1921, 1925], "torch_14808_1591070686": 1921, "thalloc": 1921, "tdr": 1921, "thcudacheck": 1921, "csrc": [1921, 1957], "storageshar": 1921, "microsoft": 1922, "flavor": 1922, "polish": [1922, 1923], "orchestr": [1923, 1965], "exportopt": 1923, "onnxregistri": 1923, "extractor": 1923, "fxgraphextractor": 1923, "onnxfakecontext": 1923, "exportoutput": 1923, "exportoutputseri": 1923, "upgrad": [1923, 1927, 1947], "perceptron": 1923, "mlpmodel": 1923, "fc0": 1923, "fc3": 1923, "tensor_x": 1923, "97": [1923, 1941], "export_output": 1923, "model_proto": 1923, "modelproto": 1923, "complianc": 1923, "protobuf": [1923, 1925], "netron": 1923, "icon": 1923, "viewer": [1923, 1971], "parseabl": 1923, "fxe0007": 1923, "fxe0011": 1923, "fxe0012": 1923, "fxe0013": 1923, "fxe0014": 1923, "fxe0015": 1923, "fxe0016": 1923, "model_arg": 1923, "model_kwarg": 1923, "my_simple_model": 1923, "my_dynamic_model": 1923, "tensor_typ": 1923, "elem_typ": 1923, "dim_param": [1923, 1925], "arg0_dim_0": 1923, "arg0_dim_1": 1923, "arg0_dim_2": 1923, "fake_context": 1923, "onnx_registri": 1923, "diagnostic_opt": 1923, "enable_fake_mod": 1923, "_subclass": [1923, 1957, 1958], "fake_tensor": [1923, 1957, 1958], "faketensormod": [1923, 1957, 1958], "xdoctest": [1923, 1924], "torch_doctest_onnx": [1923, 1924], "my_nn_modul": 1923, "my_model_without_initi": 1923, "WITH": [1923, 1925], "my_model_with_initi": 1923, "input_adapt": 1923, "output_adapt": 1923, "diagnostic_context": 1923, "export_except": 1923, "adapt_torch_inputs_to_onnx": 1923, "func_with_nested_input_structur": 1923, "x_dict": 1923, "y_tupl": 1923, "y3": 1923, "adapt_torch_outputs_to_onnx": 1923, "model_output": 1923, "func_returning_tupl": 1923, "pt_output": 1923, "diagnosticcontext": 1923, "bufferediobas": 1923, "_initi": 1923, "suffix": [1923, 1930, 1945, 1946], "model_initi": 1923, "save_diagnost": 1923, "protobufexportoutputseri": 1923, "serializetostr": 1923, "exported_model": 1923, "invalidexportoptionserror": 1923, "get_op_funct": 1923, "is_registered_op": 1923, "register_op": 1923, "tracedonnxfunct": 1923, "sctip": 1923, "warnings_as_error": 1923, "is_onnxrt_backend_support": 1924, "onnxrt": [1924, 1951], "onnxruntim": [1924, 1925], "dummy_input": 1925, "actual_input_1": 1925, "learned_": 1925, "output_nam": 1925, "learned_0": 1925, "learned_1": 1925, "learned_2": 1925, "learned_3": 1925, "learned_14": 1925, "learned_15": 1925, "kernel_shap": 1925, "9216": 1925, "transb": 1925, "check_model": 1925, "printable_graph": 1925, "ort": 1925, "ort_sess": 1925, "inferencesess": 1925, "astyp": 1925, "seq_length": 1925, "real_seq_length": 1925, "experienc": 1925, "new_data": 1925, "hope": [1925, 1963], "symbolic_opset": 1925, "symbolic_opset9": 1925, "_variablefunct": 1925, "pyi": 1925, "checkout": 1925, "___torch_mangle_0": 1925, "alpha_f": 1925, "myrelu": 1925, "value_t": 1925, "pythonop": [1925, 1926], "mylogexp": 1925, "operator_export_typ": 1925, "onnx_fallthrough": 1925, "onnx_aten_fallback": 1925, "onnx_opset": 1925, "opset15": 1925, "custom_opset": 1925, "67326": 1925, "alphax": 1925, "castlik": 1925, "gammax": 1925, "settyp": 1925, "custom_selu": 1925, "jit_util": 1925, "graphcontext": 1925, "onnxscript_op": 1925, "register_custom_op_symbol": 1925, "symbolic_nam": 1925, "symbolic_fn": 1925, "Be": [1925, 1966], "symbolic_help": 1925, "symbolic_foo_forward": 1925, "custom_domain": 1925, "attr1_f": 1925, "attr2_i": 1925, "custom_op": [1925, 1958], "foo_forward": 1925, "foomodel": 1925, "example_input1": 1925, "caffe2": [1925, 1945], "torch_script_graph": 1925, "unconvertible_op": 1925, "dynamic_ax": 1925, "export_param": 1925, "trainingmod": 1925, "operatorexporttyp": 1925, "do_constant_fold": 1925, "keep_initializers_as_input": 1925, "export_modules_as_funct": 1925, "autograd_inlin": 1925, "OF": 1925, "input_i": 1925, "input_z": 1925, "fileno": 1925, "untrain": 1925, "doc_str": 1925, "onnx_aten": 1925, "build_caffe2": 1925, "summodul": 1925, "dim_valu": 1925, "my_custom_axis_nam": 1925, "sum_dynamic_axes_1": 1925, "deduplicate_initi": 1925, "74765": 1925, "checkererror": 1925, "unsupportedoperatorerror": 1925, "export_to_pretty_str": 1925, "export_typ": 1925, "google_print": 1925, "add_node_nam": 1925, "nodeproto": 1925, "debugstr": 1925, "contrib": 1925, "test_aten_embedding_2": 1925, "test_oper": 1925, "unregister_custom_op_symbol": 1925, "select_model_mode_for_export": 1925, "is_in_onnx_export": 1925, "middl": 1925, "enable_log": 1925, "disable_log": 1925, "graphinfo": 1925, "incorrect_relu_symbolic_funct": 1925, "2328854203224182": 1925, "699536174352349": 1925, "constantchunk": 1926, "__and_": 1926, "__contains_": 1926, "__derive_index": 1926, "__getitem_": 1926, "__interpol": 1926, "__is_": 1926, "__isnot_": 1926, "__lshift_": 1926, "__not_": 1926, "__or_": 1926, "__range_length": 1926, "__rshift_": 1926, "__xor_": 1926, "_cast_byt": 1926, "_cast_char": 1926, "_cast_doubl": 1926, "_cast_float": 1926, "_cast_half": 1926, "_cast_int": 1926, "_cast_long": 1926, "_cast_short": 1926, "_conj": 1926, "_convolution_mod": 1926, "_dim_arang": 1926, "_log_softmax": [1926, 1964], "_pack_padded_sequ": 1926, "_pad_packed_sequ": 1926, "_reshape_from_tensor": 1926, "_sample_dirichlet": 1926, "_set_item": 1926, "_shape_as_tensor": 1926, "_standard_gamma": 1926, "_uniqu": 1926, "_unique2": 1926, "_weight_norm": 1926, "conv1d_relu": 1926, "conv2d_relu": 1926, "conv3d_relu": 1926, "embedding_renorm": 1926, "floordiv": [1926, 1933], "linear_relu": [1926, 1933], "nonzero_numpi": 1926, "numpy_t": 1926, "unchecked_cast": 1926, "unique_dim": 1926, "_c10d_function": 1926, "all_gather_into_tensor_coalesc": 1926, "all_reduce_coalesc": 1926, "reduce_scatter_tensor_coalesc": 1926, "wait_tensor": 1926, "_quantiz": 1926, "conv2d_prepack": 1926, "conv3d_prepack": 1926, "conv_transpose1d_prepack": 1926, "conv_transpose2d_prepack": 1926, "conv_transpose3d_prepack": 1926, "linear_dynam": 1926, "linear_prepack": 1926, "linear_prepack_fp16": 1926, "linear_prepack_fp16_legaci": 1926, "linear_prepack_legaci": 1926, "_test": 1926, "get_first": 1926, "compleximplicit": 1926, "floatimplicit": 1926, "intimplicit": 1926, "__iand_": 1926, "__ilshift_": 1926, "__ior_": 1926, "__irshift_": 1926, "__ixor_": 1926, "__round_to_zero_floordiv": 1926, "__upsampl": 1926, "__upsample_bilinear": 1926, "__upsample_nearest": 1926, "_adaptive_avg_pool2d": [1926, 1964], "_adaptive_avg_pool3d": [1926, 1964], "_add_batch_dim": 1926, "_add_relu": 1926, "_addmm_activ": 1926, "_aminmax": 1926, "_amp_foreach_non_finite_check_and_unscal": 1926, "_amp_update_scal": 1926, "_assert_tensor_metadata": 1926, "_autocast_to_full_precis": 1926, "_autocast_to_reduced_precis": 1926, "_batch_norm_impl_index": 1926, "_cdist_forward": [1926, 1964], "_cholesky_solve_help": 1926, "_choose_qparams_per_tensor": 1926, "_coalesc": 1926, "_compute_linear_combin": 1926, "_conj_copi": 1926, "_conj_phys": 1926, "_conv_depthwise2d": 1926, "_convert_indices_from_coo_to_csr": 1926, "_convert_indices_from_csr_to_coo": 1926, "_convert_weight_to_int4pack": 1926, "_copy_from": 1926, "_copy_from_and_res": 1926, "_cslt_compress": 1926, "_cslt_sparse_mm": 1926, "_ctc_loss": 1926, "_cudnn_ctc_loss": 1926, "_cudnn_init_dropout_st": 1926, "_cudnn_rnn": 1926, "_cudnn_rnn_flatten_weight": 1926, "_cufft_clear_plan_cach": 1926, "_cufft_get_plan_cache_max_s": 1926, "_cufft_get_plan_cache_s": 1926, "_cufft_set_plan_cache_max_s": 1926, "_cummax_help": 1926, "_cummin_help": 1926, "_debug_has_internal_overlap": 1926, "_dimi": 1926, "_dimv": 1926, "_dirichlet_grad": 1926, "_efficient_attention_forward": 1926, "_efficientzerotensor": 1926, "_embedding_bag": [1926, 1964], "_embedding_bag_forward_onli": 1926, "_empty_affine_quant": 1926, "_empty_per_channel_affine_quant": 1926, "_euclidean_dist": 1926, "_fake_quantize_learnable_per_channel_affin": 1926, "_fake_quantize_learnable_per_tensor_affin": 1926, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1926, "_fft_c2c": 1926, "_fft_c2r": 1926, "_fft_r2c": 1926, "_fill_mem_eff_dropout_mask": 1926, "_flash_attention_forward": 1926, "_foobar": [1926, 1969], "_foreach_ab": 1926, "_foreach_aco": 1926, "_foreach_add": 1926, "_foreach_addcdiv": 1926, "_foreach_addcmul": 1926, "_foreach_asin": 1926, "_foreach_atan": 1926, "_foreach_ceil": 1926, "_foreach_clamp_max": 1926, "_foreach_clamp_min": 1926, "_foreach_copi": 1926, "_foreach_co": 1926, "_foreach_cosh": 1926, "_foreach_div": 1926, "_foreach_erf": 1926, "_foreach_erfc": 1926, "_foreach_exp": 1926, "_foreach_expm1": 1926, "_foreach_floor": 1926, "_foreach_frac": 1926, "_foreach_lerp": 1926, "_foreach_lgamma": 1926, "_foreach_log": 1926, "_foreach_log10": 1926, "_foreach_log1p": 1926, "_foreach_log2": 1926, "_foreach_maximum": 1926, "_foreach_minimum": 1926, "_foreach_mul": 1926, "_foreach_neg": 1926, "_foreach_norm": 1926, "_foreach_pow": 1926, "_foreach_reciproc": 1926, "_foreach_round": 1926, "_foreach_sigmoid": 1926, "_foreach_sign": 1926, "_foreach_sin": 1926, "_foreach_sinh": 1926, "_foreach_sqrt": 1926, "_foreach_sub": 1926, "_foreach_tan": 1926, "_foreach_tanh": 1926, "_foreach_trunc": 1926, "_foreach_zero": 1926, "_functional_assert_async": 1926, "_functional_sym_constrain_rang": 1926, "_functional_sym_constrain_range_for_s": 1926, "_fused_adam": 1926, "_fused_adamw": 1926, "_fused_dropout": 1926, "_fused_moving_avg_obs_fq_help": 1926, "_fused_moving_avg_obs_fq_helper_funct": 1926, "_fused_sdp_choic": 1926, "_fw_primal": 1926, "_fw_primal_copi": 1926, "_get_cpu_cap": 1926, "_get_tracing_st": 1926, "_grad_sum_to_s": 1926, "_has_compatible_shallow_copy_typ": 1926, "_has_same_storage_numel": 1926, "_histogramdd_bin_edg": 1926, "_histogramdd_from_bin_ct": 1926, "_histogramdd_from_bin_tensor": 1926, "_index_put_impl": 1926, "_indices_copi": 1926, "_infer_s": 1926, "_int_mm": 1926, "_is_all_tru": 1926, "_is_any_tru": 1926, "_is_zerotensor": 1926, "_linalg_check_error": 1926, "_linalg_det": 1926, "_linalg_eigh": 1926, "_linalg_slogdet": 1926, "_linalg_solve_ex": 1926, "_linalg_svd": 1926, "_list_to_tensor": 1926, "_logcumsumexp": 1926, "_lstm_mp": 1926, "_make_dep_token": 1926, "_make_du": 1926, "_make_dual_copi": 1926, "_make_per_channel_quantized_tensor": 1926, "_make_per_tensor_quantized_tensor": 1926, "_masked_scal": 1926, "_masked_softmax": 1926, "_mixed_dtypes_linear": 1926, "_mkldnn_reshap": 1926, "_mkldnn_transpos": 1926, "_mps_convolut": 1926, "_mps_convolution_transpos": 1926, "_native_batch_norm_legit": [1926, 1964], "_native_batch_norm_legit_funct": 1926, "_native_batch_norm_legit_no_train": [1926, 1964], "_native_multi_head_attent": 1926, "_ncf_unsqueez": 1926, "_ncf_view": 1926, "_neg_view": 1926, "_neg_view_copi": 1926, "_nested_from_pad": 1926, "_nested_from_padded_and_nested_exampl": 1926, "_nested_tensor_from_mask": 1926, "_nested_tensor_from_mask_left_align": 1926, "_nested_tensor_from_tensor_list": 1926, "_nested_tensor_s": 1926, "_nested_tensor_softmax_with_shap": 1926, "_nested_tensor_storage_offset": 1926, "_nested_tensor_strid": 1926, "_nested_view_from_buff": 1926, "_nested_view_from_buffer_copi": 1926, "_new_zeros_with_same_feature_meta": 1926, "_nnpack_avail": 1926, "_nnpack_spatial_convolut": 1926, "_no_grad_embedding_renorm": 1926, "_no_grad_fil": 1926, "_no_grad_norm": 1926, "_no_grad_uniform": 1926, "_no_grad_zero": 1926, "_pack_sequ": 1926, "_pad_circular": 1926, "_pad_enum": 1926, "_pdist_forward": [1926, 1964], "_pin_memori": 1926, "_prelu_kernel": 1926, "_propagate_xla_data": 1926, "_remove_batch_dim": 1926, "_reshape_alia": 1926, "_reshape_alias_copi": 1926, "_reshape_copi": 1926, "_resize_output": 1926, "_rowwise_prun": 1926, "_saturate_weight_to_fp16": 1926, "_scaled_dot_product_attention_math": 1926, "_scaled_dot_product_efficient_attent": 1926, "_scaled_dot_product_flash_attent": 1926, "_scaled_mm": 1926, "_size_if_not_equ": 1926, "_slow_conv2d_forward": 1926, "_sobol_engine_draw": 1926, "_sobol_engine_ff": 1926, "_sobol_engine_initialize_st": 1926, "_sobol_engine_scrambl": 1926, "_softmax": [1926, 1941, 1964], "_sparse_addmm": 1926, "_sparse_broadcast_to": 1926, "_sparse_broadcast_to_copi": 1926, "_sparse_bsc_tensor_unsaf": 1926, "_sparse_bsr_tensor_unsaf": 1926, "_sparse_compressed_tensor_unsaf": 1926, "_sparse_coo_tensor_unsaf": 1926, "_sparse_coo_tensor_with_dim": 1926, "_sparse_coo_tensor_with_dims_and_tensor": 1926, "_sparse_csc_tensor_unsaf": 1926, "_sparse_csr_prod": 1926, "_sparse_csr_sum": 1926, "_sparse_csr_tensor_unsaf": 1926, "_sparse_log_softmax": 1926, "_sparse_mask_project": 1926, "_sparse_mm": 1926, "_sparse_mm_reduce_impl": 1926, "_sparse_semi_structured_linear": 1926, "_sparse_softmax": 1926, "_sparse_sparse_matmul": 1926, "_sparse_sum": 1926, "_spdiag": 1926, "_standard_gamma_grad": 1926, "_tensor_to_list": 1926, "_test_ambiguous_default": 1926, "_test_autograd_multiple_dispatch": 1926, "_test_autograd_multiple_dispatch_view": 1926, "_test_autograd_multiple_dispatch_view_copi": 1926, "_test_check_tensor": 1926, "_test_functorch_fallback": 1926, "_test_optional_filled_intlist": 1926, "_test_optional_floatlist": 1926, "_test_optional_intlist": 1926, "_test_serialization_subcmul": 1926, "_test_string_default": 1926, "_test_warn_in_autograd": 1926, "_thnn_fused_gru_cel": 1926, "_thnn_fused_lstm_cel": 1926, "_to_copi": [1926, 1964], "_to_cpu": 1926, "_to_dens": 1926, "_to_spars": 1926, "_to_sparse_bsc": 1926, "_to_sparse_bsr": 1926, "_to_sparse_csc": 1926, "_to_sparse_csr": 1926, "_to_sparse_semi_structur": 1926, "_transform_bias_rescale_qkv": 1926, "_transformer_encoder_layer_fwd": 1926, "_trilinear": 1926, "_triton_multi_head_attent": 1926, "_triton_scaled_dot_attent": 1926, "_unpack_du": 1926, "_unsafe_index": 1926, "_unsafe_index_put": 1926, "_unsafe_view": 1926, "_unwrap_opt": 1926, "_upsample_bicubic2d_aa": 1926, "_upsample_bilinear2d_aa": 1926, "_upsample_nearest_exact1d": 1926, "_upsample_nearest_exact2d": 1926, "_upsample_nearest_exact3d": 1926, "_use_cudnn_ctc_loss": 1926, "_use_cudnn_rnn_flatten_weight": 1926, "_validate_compressed_sparse_indic": 1926, "_validate_sparse_bsc_tensor_arg": 1926, "_validate_sparse_bsr_tensor_arg": 1926, "_validate_sparse_compressed_tensor_arg": 1926, "_validate_sparse_coo_tensor_arg": 1926, "_validate_sparse_csc_tensor_arg": 1926, "_validate_sparse_csr_tensor_arg": 1926, "_values_copi": 1926, "_weight_int4pack_mm": 1926, "_weight_norm_interfac": 1926, "capit": 1926, "confirmed_by_own": [1926, 1936], "convolution_overrid": 1926, "copy_sparse_to_spars": 1926, "endswith": 1926, "expandtab": 1926, "fake_quantize_per_channel_affine_cachemask": 1926, "fake_quantize_per_tensor_affine_cachemask": 1926, "fill_diagon": 1926, "glu_jvp": 1926, "has_torch_funct": [1926, 1970], "is_non_overlapping_and_dens": 1926, "is_own": [1926, 1936], "is_strides_like_format": 1926, "isalnum": 1926, "isalpha": 1926, "isdecim": 1926, "isdigit": 1926, "isidentifi": 1926, "islow": 1926, "isnumer": 1926, "isprint": 1926, "isspac": 1926, "istitl": 1926, "isupp": 1926, "lift_fresh": 1926, "ljust": 1926, "local_valu": [1926, 1929, 1936], "log_sigmoid_forward": 1926, "lstrip": 1926, "matrix_h": 1926, "nll_loss2d_forward": 1926, "nll_loss_forward": 1926, "normal_funct": 1926, "owner_nam": [1926, 1936], "percentformat": 1926, "quantized_gru": 1926, "quantized_lstm": 1926, "resize_as_spars": 1926, "rfind": 1926, "rindex": 1926, "rjust": 1926, "rpartit": 1926, "rsplit": 1926, "rstrip": 1926, "set_data": 1926, "slow_conv3d_forward": 1926, "sparse_res": 1926, "sparse_resize_and_clear": 1926, "splitlin": 1926, "swapcas": 1926, "sym_numel": [1926, 1964], "sym_storage_offset": [1926, 1964], "sym_strid": [1926, 1964], "unique_dim_consecut": 1926, "zfill": 1926, "_allgather_bas": 1926, "_reduce_scatter_bas": 1926, "allgath": 1926, "allgather_coalesc": 1926, "allgather_into_tensor_coalesc": 1926, "allreduce_coalesc": 1926, "alltoal": 1926, "alltoall_bas": 1926, "recv_any_sourc": 1926, "debugprim": 1926, "load_tensor": 1926, "_mm_plus_mm": 1926, "_reinterpret_tensor": 1926, "accumulate_grad": 1926, "_mkl_linear": 1926, "_mkl_reorder_linear_weight": 1926, "_convolution_pointwis": 1926, "_convolution_transpose_pointwis": 1926, "_is_mkldnn_bf16_support": 1926, "_is_mkldnn_fp16_support": 1926, "_linear_pointwis": 1926, "_reorder_convolution_transpose_weight": 1926, "_reorder_convolution_weight": 1926, "_reorder_linear_weight": 1926, "_reorder_mkldnn_rnn_layer_weight": 1926, "mkldnn_prepack": 1926, "conv2d_run": 1926, "qconv1d_pointwis": 1926, "qconv2d_pointwis": 1926, "qconv3d_pointwis": 1926, "qconv_prepack": 1926, "qlinear_pointwis": 1926, "qlinear_prepack": 1926, "conv2d_clamp_prepack": 1926, "conv2d_clamp_run": 1926, "conv2d_transpose_clamp_prepack": 1926, "conv2d_transpose_clamp_run": 1926, "linear_clamp_prepack": 1926, "linear_clamp_run": 1926, "unpack_prepacked_sizes_conv2d": 1926, "unpack_prepacked_sizes_linear": 1926, "addstatvalu": 1926, "autogradadd": 1926, "autogradallnonzero": 1926, "autogradallzero": 1926, "autogradanynonzero": 1926, "autogradzero": 1926, "bailout": [1926, 1957], "bailouttempl": 1926, "broadcastmkldnntensor": 1926, "broadcasts": 1926, "chunksiz": 1926, "constantmkldnntensor": 1926, "differentiablegraph": 1926, "enumnam": 1926, "enumvalu": 1926, "fallbackgraph": 1926, "fusedconcat": 1926, "fusiongroup": 1926, "ifthenels": 1926, "ignoredpythonop": 1926, "mkldnnclamp": 1926, "mkldnnhardsigmoid": 1926, "mkldnnhardswish": 1926, "mkldnnhardtanh": 1926, "mkldnnlayernorm": 1926, "mkldnnscalarmul": 1926, "mmbatchsid": 1926, "mmtreereduc": 1926, "modulecontainerindex": 1926, "numtotensor": 1926, "raiseexcept": 1926, "reductions": 1926, "requiresgradcheck": 1926, "staticruntimecopyout": 1926, "staticsubgraph": 1926, "stringindex": 1926, "tensorexprdynamicgroup": 1926, "tensorexprdynamicguard": 1926, "tensorexprgroup": 1926, "timepoint": 1926, "tupleindex": 1926, "tupleunpack": 1926, "varconcat": 1926, "varstack": 1926, "awaitable_nowait": 1926, "awaitable_wait": 1926, "is_cpu": [1926, 1959], "is_ipu": [1926, 1959], "is_mkldnn": [1926, 1959], "is_mp": [1926, 1959], "is_mtia": 1926, "is_nest": [1926, 1959], "is_ort": [1926, 1959], "is_quant": [1926, 1959], "is_vulkan": [1926, 1959], "is_xla": [1926, 1959], "is_xpu": [1926, 1959], "onednnfusiongroup": 1926, "onednnfusionguard": 1926, "profile_ivalu": 1926, "rangelist": 1926, "rpc_remot": 1926, "unchecked_unwrap_opt": 1926, "bessel_i0": [1926, 1964], "bessel_i1": [1926, 1964], "bessel_j0": [1926, 1941, 1964], "bessel_j1": [1926, 1941, 1964], "broadcast_in_dim": [1926, 1964], "cbrt": [1926, 1964], "collapse_view": [1926, 1964], "convert_element_typ": [1926, 1964], "copy_strid": [1926, 1964], "copy_to": [1926, 1964], "device_put": [1926, 1964], "erf_inv": [1926, 1964], "erfcx": [1926, 1941, 1964], "fft_c2c": [1926, 1964], "fft_c2r": [1926, 1964], "fft_r2c": [1926, 1964], "iota": [1926, 1964], "maximum_valu": [1926, 1964], "minimum_valu": [1926, 1964], "ndtri": [1926, 1941, 1964], "rev": [1926, 1964], "shift_left": [1926, 1964], "shift_right_arithmet": [1926, 1964], "slice_in_dim": [1926, 1964], "spherical_bessel_j0": [1926, 1941, 1964], "split_dim": [1926, 1964], "view_of": [1926, 1964], "view_of_dtyp": [1926, 1964], "xor_sum": [1926, 1964], "_call_end_callbacks_on_jit_fut": 1926, "_record_function_ent": 1926, "_record_function_enter_new": 1926, "_record_function_exit": 1926, "_bfloat16quantizedtofloat": 1926, "_floattobfloat16quant": 1926, "add_out": 1926, "add_relu_out": 1926, "add_scalar_out": 1926, "add_scalar_relu": 1926, "add_scalar_relu_out": 1926, "batch_norm1d": 1926, "batch_norm1d_relu": 1926, "batch_norm2d": 1926, "batch_norm2d_relu": 1926, "batch_norm3d": 1926, "batch_norm3d_relu": 1926, "batch_norm_relu": 1926, "cat_out": 1926, "cat_relu": 1926, "cat_relu_out": 1926, "conv1d_dynam": 1926, "conv1d_prepack": 1926, "conv1d_unpack": 1926, "conv2d_add": 1926, "conv2d_add_relu": 1926, "conv2d_dil": 1926, "conv2d_dynam": 1926, "conv2d_group": 1926, "conv2d_output_pad": 1926, "conv2d_pad": 1926, "conv2d_strid": 1926, "conv2d_transpos": 1926, "conv2d_unpack": 1926, "conv2d_unpack_s": 1926, "conv3d_dil": 1926, "conv3d_dynam": 1926, "conv3d_group": 1926, "conv3d_output_pad": 1926, "conv3d_pad": 1926, "conv3d_strid": 1926, "conv3d_transpos": 1926, "conv3d_unpack": 1926, "conv_prepack": 1926, "conv_transpose1d_dynam": 1926, "conv_transpose1d_unpack": 1926, "conv_transpose2d_dil": 1926, "conv_transpose2d_dynam": 1926, "conv_transpose2d_group": 1926, "conv_transpose2d_output_pad": 1926, "conv_transpose2d_pad": 1926, "conv_transpose2d_strid": 1926, "conv_transpose2d_transpos": 1926, "conv_transpose2d_unpack": 1926, "conv_transpose3d_dil": 1926, "conv_transpose3d_dynam": 1926, "conv_transpose3d_group": 1926, "conv_transpose3d_output_pad": 1926, "conv_transpose3d_pad": 1926, "conv_transpose3d_strid": 1926, "conv_transpose3d_transpos": 1926, "conv_transpose3d_unpack": 1926, "conv_unpack": 1926, "embedding_4bit": 1926, "embedding_bag_2bit_prepack": 1926, "embedding_bag_2bit_rowwise_offset": 1926, "embedding_bag_2bit_unpack": 1926, "embedding_bag_4bit": 1926, "embedding_bag_4bit_prepack": 1926, "embedding_bag_4bit_rowwise_offset": 1926, "embedding_bag_4bit_unpack": 1926, "embedding_bag_byt": 1926, "embedding_bag_byte_prepack": 1926, "embedding_bag_byte_rowwise_offset": 1926, "embedding_bag_byte_unpack": 1926, "embedding_bag_prepack": 1926, "embedding_bag_unpack": 1926, "embedding_byt": 1926, "linear_dynamic_fp16": 1926, "linear_leaky_relu": 1926, "linear_relu_dynam": 1926, "linear_relu_dynamic_fp16": 1926, "linear_tanh": 1926, "linear_unpack": 1926, "linear_unpack_fp16": 1926, "linear_with_input_q_dq_qweight_dq_output_fp32": 1926, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1926, "make_quantized_cell_param": 1926, "make_quantized_cell_params_dynam": 1926, "make_quantized_cell_params_fp16": 1926, "mul_out": 1926, "mul_relu": 1926, "mul_relu_out": 1926, "mul_scalar_out": 1926, "mul_scalar_relu": 1926, "mul_scalar_relu_out": 1926, "quantized_gru_cell_dynam": 1926, "quantized_lstm_cell_dynam": 1926, "quantized_rnn_relu_cell_dynam": 1926, "quantized_rnn_tanh_cell_dynam": 1926, "rngprim": 1926, "philox_rand": 1926, "qlinear": 1926, "qlinear_dynam": 1926, "qlinear_relu": 1926, "qlinear_relu_dynam": 1926, "qlinear_unpack": 1926, "static_runtim": 1926, "vartupleunpack": 1926, "clamp_nan_to_num": 1926, "create_owned_ref": 1926, "dequantize_copi": 1926, "dict_unpack": 1926, "expand_dims_copi": 1926, "flatten_copi": 1926, "fused_equally_split": 1926, "reshape_copi": 1926, "select_tensor": 1926, "signed_log1p": 1926, "to_copi": 1926, "to_maybe_copy_out": 1926, "var1": 1927, "var2": 1927, "lbfg": 1927, "adadelta": 1927, "adamax": 1927, "asgd": 1927, "nadam": 1927, "radam": 1927, "rmsprop": 1927, "rprop": 1927, "reducelronplateau": 1927, "multisteplr": 1927, "swa_util": 1927, "averagedmodel": 1927, "swalr": 1927, "update_bn": 1927, "optima": 1927, "polyak": 1927, "averaged_model": 1927, "multi_avg_fn": 1927, "get_ema_multi_avg_fn": 1927, "textrm": 1927, "update_paramet": 1927, "avg_fn": 1927, "_foreach": 1927, "ema_model": 1927, "ema_avg": 1927, "averaged_model_paramet": 1927, "model_paramet": 1927, "num_averag": 1927, "swa_schedul": 1927, "anneal_epoch": 1927, "swa_lr": 1927, "swa_model": 1927, "cosineannealinglr": 1927, "swa_start": 1927, "test_input": 1927, "secur": 1928, "unpackag": 1928, "exercis": 1928, "unzip": 1928, "my_packag": 1928, "freeli": 1928, "94304870911616": 1928, "94304900784016": 1928, "extern_modul": 1928, "model_1": 1928, "pkl": 1928, "myzip": 1928, "file_byt": 1928, "writestr": 1928, "new_file_byt": 1928, "vim": 1928, "vimrc": 1928, "bufreadcmd": 1928, "brows": 1928, "amatch": 1928, "vi": 1928, "packageimport": 1928, "queryabl": 1928, "glob": 1928, "packageexport": 1928, "pe": 1928, "save_pickl": 1928, "has_fil": 1928, "importer_file_structur": 1928, "package_a": 1928, "get_rdep": 1928, "all_path": 1928, "dependency_graph_str": 1928, "save_text": 1928, "save_binari": 1928, "my_resourc": 1928, "config_stuff": 1928, "raw_data": 1928, "my_byt": 1928, "complementari": [1928, 1941], "load_pickl": 1928, "load_text": 1928, "load_binari": 1928, "my_tensor": 1928, "__reduce_package__": 1928, "my_str": 1928, "time_import": 1928, "time_export": 1928, "pickler": 1928, "persistent_id": 1928, "persistent_load": 1928, "generated_module_nam": 1928, "get_unique_id": 1928, "clock_gettim": 1928, "unpackage_foo": 1928, "depickl": 1928, "foo_1": 1928, "foo_2": 1928, "foo_packag": 1928, "foo_collect": 1928, "foo1": 1928, "foo2": 1928, "imported_foo": 1928, "9857706": 1928, "650140837": 1928, "652698385": 1928, "__torch_package__": 1928, "is_in_packag": 1928, "userexcept": 1928, "unpackageableexcept": 1928, "loaded_modul": 1928, "import_modul": 1928, "save_source_str": 1928, "save_modul": 1928, "textwrap": 1928, "dedent": 1928, "my_funct": 1928, "is_packag": 1928, "importlib": 1928, "my_pickl": 1928, "get_my_resourc": 1928, "read_text": 1928, "torch_package_import": 1928, "get_my_pickl": 1928, "is_from_packag": 1928, "stdlib": 1928, "my_test": 1928, "f2": [1928, 1929], "sys_import": 1928, "script_model": 1928, "mixed_model": 1928, "python_model_with_scripted_submodul": 1928, "loaded_script": 1928, "loaded_mix": 1928, "convention": 1928, "94286146172688": 1928, "94286146172784": 1928, "consult": [1928, 1957], "essai": 1928, "another_packag": 1928, "pickletool": 1928, "ast": 1928, "deni": 1928, "my_export": 1928, "my_interned_modul": 1928, "package_export": 1928, "my_externed_modul": 1928, "my_mocked_modul": 1928, "unwant": [1928, 1945], "hodg": 1928, "podg": 1928, "bazel": 1928, "buck": 1928, "my_class_inst": 1928, "imported_myclass": 1928, "okai": 1928, "torch_package_0": 1928, "handle_me_this_wai": 1928, "inadvert": 1928, "pun": 1928, "packagingerror": 1928, "dependency_graph": 1928, "emptymatcherror": 1928, "allow_empti": 1928, "_sysimport": 1928, "hermet": 1928, "scan": 1928, "orderedimport": 1928, "add_depend": 1928, "graphviz": 1928, "lang": 1928, "denied_modul": 1928, "my_subpackag": 1928, "digraph": 1928, "externed_modul": 1928, "interned_modul": 1928, "mocked_modul": 1928, "register_extern_hook": 1928, "register_intern_hook": 1928, "register_mock_hook": 1928, "myobject": 1928, "save_source_fil": 1928, "file_or_directori": 1928, "my_subsubpackag": 1928, "file_or_buff": 1928, "module_allow": 1928, "pytorchfileread": 1928, "python_vers": 1928, "is_dir": 1928, "gpipe": 1929, "suffer": 1929, "allevi": [1929, 1959], "microbatch": 1929, "bubbl": 1929, "except_last": 1929, "deferred_batch_norm": 1929, "torchgpip": 1929, "withdevic": 1929, "micro": 1929, "fc": [1929, 1931], "init_rpc": [1929, 1936, 1937], "output_rref": 1929, "fed": [1929, 1945], "nochunk": 1929, "resnext": 1929, "till": 1929, "skippabl": 1929, "1to3": 1929, "layer1": 1929, "f1": 1929, "layer2": 1929, "layer3": 1929, "skip_1to3": 1929, "f3": 1929, "alic": 1929, "bob": 1929, "carol": 1929, "stashstashpop": 1929, "f_alic": 1929, "f_bob": 1929, "verify_skipp": 1929, "unmatch": [1929, 1950], "fairscal": 1929, "_kinetoprofil": 1930, "profileract": 1930, "export_memory_timelin": 1930, "add_metadata": 1930, "add_metadata_json": 1930, "unaggreg": 1930, "export_chrome_trac": [1930, 1967], "png": 1930, "gzip": 1930, "numbyt": 1930, "increment_vers": 1930, "_memory_profil": 1930, "export_stack": 1930, "self_cuda_time_tot": 1930, "flamegraph": 1930, "brendangregg": 1930, "pl": 1930, "countnam": 1930, "perf_viz": 1930, "svg": 1930, "on_trace_readi": 1930, "record_and_sav": 1930, "tensorboard_trace_handl": 1930, "dir_nam": 1930, "logdir": [1930, 1945], "plugin": [1930, 1945, 1955], "code_to_profil": 1930, "row_limit": 1930, "trace_handl": 1930, "test_trace_": 1930, "step_num": 1930, "code_iteration_to_profil": 1930, "mtia": 1930, "skip_first": 1930, "worker_nam": [1930, 1936], "use_gzip": 1930, "range_push": 1930, "range_pop": 1930, "4x": 1931, "88": [1931, 1963], "14k": 1931, "domin": 1931, "previous_layer_fp32": 1931, "linear_fp32": 1931, "activation_fp32": 1931, "next_layer_fp32": 1931, "linear_weight_fp32": 1931, "linear_int8_w_fp32_inp": 1931, "linear_weight_int8": 1931, "ptdq": 1931, "model_fp32": 1931, "model_int8": 1931, "quantize_dynam": 1931, "input_fp32": 1931, "previous_layer_int8": 1931, "linear_with_activation_int8": 1931, "next_layer_int8": 1931, "ptsq": 1931, "minmax": 1931, "l2norm": 1931, "model_fp32_fus": 1931, "fuse_modul": [1931, 1932], "model_fp32_prepar": 1931, "fq": 1931, "prepare_qat": 1931, "training_loop": 1931, "requant": 1931, "linear1": 1931, "custom_qconfig": 1931, "fxptq": 1931, "model_fp": 1931, "usermodel": 1931, "model_to_quant": 1931, "default_dynamic_qconfig": 1931, "model_prepar": 1931, "model_quant": 1931, "model_fus": 1931, "quantize_pt2": 1931, "prepare_pt2": 1931, "capture_pre_autograd_graph": 1931, "xnnpackquant": 1931, "get_symmetric_quantization_config": 1931, "shoud": 1931, "prepare_qat_pt2": 1931, "convert_pt2": 1931, "per_tensor_symmetr": [1931, 1934], "per_channel_symmetr": [1931, 1934], "per_channel_scal": 1931, "per_channel_zero_point": 1931, "quantized_tensor": 1931, "qengin": 1931, "in4": 1931, "tensorrt": [1931, 1951, 1955, 1959], "fx2trt": 1931, "float_modul": [1931, 1949], "staticquantcustommodul": 1931, "observed_modul": 1931, "default_qconfig": [1931, 1950], "vnni": 1931, "test_quantized_op": 1931, "testquantizedop": 1931, "test_custom_module_lstm": 1931, "test_quantize_fx": 1931, "testquantizefx": 1931, "test_static_lstm": 1931, "some_oper": 1931, "e2": 1931, "thnn_conv2d_forward": 1931, "quantizedcpu": 1931, "some_qconfig": 1931, "linearpackedparam": 1931, "_modul": 1931, "prepare_orig": 1931, "quantized_orig": 1931, "scripted_quant": 1931, "fp32_op": 1932, "int8_op": 1932, "cooperlak": 1932, "audit": 1932, "op_fp32": 1932, "op_int8": 1932, "_numeric_suit": 1932, "_numeric_suite_fx": 1932, "0x7fe36d45f860": 1933, "0x7fe35db378b0": 1933, "0x7fe35db37940": 1933, "num_tensor_args_to_observation_typ": 1933, "convbn1d": 1933, "0x7fe357363f70": 1933, "reference_quantized_module_for_root": 1933, "fuse_convtranspose_bn": 1933, "0x7fe35736b160": 1933, "linearbn1d": 1933, "fuse_linear_bn": 1933, "0x7fe35736b0d0": 1933, "convbn2d": 1933, "convbn3d": 1933, "bnrelu2d": 1933, "bnrelu3d": 1933, "input_type_to_index": 1933, "conv_fus": 1933, "convbnrelu1d": 1933, "convbnrelu2d": 1933, "convbnrelu3d": 1933, "convrelu1d": 1933, "convrelu3d": 1933, "0x7fe35db379d0": 1933, "0x7fe35db3b040": 1933, "quint4x2": [1933, 1942, 1946, 1947], "embedding_op": 1933, "0x7fe35db3bee0": 1933, "00390625": 1933, "0x7fe35db3b820": 1933, "0x7fe35db3b9d0": 1933, "0x7fe35db37ee0": 1933, "0x7fe35db3bdc0": 1933, "0x7fe357e6f5e0": 1933, "0x7fe35db3be50": 1933, "0x7fe35db3b1f0": 1933, "linear_fus": 1933, "_sequential_wrapper2": 1933, "0x7fe3745b2430": 1933, "0x7fe35db37dc0": 1933, "0x7fe35675e1f0": 1933, "fuse_conv_bn_relu": 1933, "0x7fe35736b040": 1933, "0x7fe35675e280": 1933, "0x7fe35675e310": 1933, "0x7fe35675e3a0": 1933, "0x7fe35675e430": 1933, "0x7fe35675e4c0": 1933, "0x7fe35675e550": 1933, "0x7fe35675e5e0": 1933, "0x7fe35675e670": 1933, "0x7fe35675e700": 1933, "0x7fe35675e790": 1933, "0x7fe35db37f70": 1933, "0078125": 1933, "customconfig": 1934, "custom_module_config": 1934, "_caller": 1935, "_devices_kw": 1935, "slowli": 1935, "unind": 1935, "deivce_typ": 1935, "shortcom": 1936, "stitch": 1936, "rpc_backend_opt": 1936, "trainer3": 1936, "parameterserver2": 1936, "dash": [1936, 1938], "backendtyp": 1936, "rpcbackendopt": 1936, "rpcagent": 1936, "transmit": 1936, "calle": [1936, 1938], "_set_rpc_timeout": 1936, "worker0": 1936, "my_script_add": 1936, "wire": 1936, "fut2": 1936, "meth": 1936, "grace": 1936, "userrref": [1936, 1938], "async_execut": 1936, "paus": 1936, "outmost": 1936, "async_add_chain": 1936, "worker2": 1936, "script_add": 1936, "async_add": 1936, "asyncexecutionclass": 1936, "static_async_add": 1936, "class_async_add": 1936, "ret_fut": 1936, "bound_async_add": 1936, "rpc_timeout": 1936, "incid": [1936, 1938], "nvlink": 1936, "multiplex": 1936, "tensorpiperpcbackendopt": 1936, "num_worker_thread": 1936, "device_map": 1936, "_transport": 1936, "tensorpipeag": 1936, "set_device_map": 1936, "intermitt": 1936, "pyrref": 1936, "type_hint": 1936, "_distributed_rpc": 1936, "dist_autograd_ctx_id": 1936, "ctx_id": 1936, "ownerrref": [1936, 1938], "remote_modul": 1936, "forward_async": 1936, "remote_devic": 1936, "workernam": 1936, "trainer0": 1936, "ps0": 1936, "remote_linear_modul": 1936, "get_module_rref": 1936, "remote_paramet": 1936, "my_add": [1937, 1970], "t4": 1937, "t5": 1937, "autograd_message_id": 1937, "autograd_context_id": 1937, "send1": 1937, "kickoff": 1937, "recv2": 1937, "heard": 1937, "send2": 1937, "recv1": 1937, "dist_autograd_simpl": 1937, "random_tensor": 1937, "_run_process": 1937, "dst_rank": 1937, "dst_name": 1937, "run_process": 1937, "rrefid": 1938, "transient": 1938, "udf": 1938, "deliveri": 1938, "knowledg": 1938, "danger": 1938, "ancestor": 1938, "trickier": 1938, "wouldn": [1938, 1958], "forkid": 1938, "ack": 1938, "solid": 1938, "gc": 1938, "followup": 1938, "lil": 1940, "stark": 1940, "9093": 1940, "1411": 1940, "7568": 1940, "9589": 1940, "2794": 1940, "catastroph": 1940, "9900": 1940, "metadata_mask": 1940, "rce": 1940, "rc": 1940, "62": 1940, "to_sparse_semi_structur": 1940, "1x4": 1940, "16x16": 1940, "a_spars": 1940, "sparsesemistructuredtensor": 1940, "000": 1940, "400": 1940, "s2": 1940, "plain_dim_s": 1940, "lp64": 1940, "280": 1940, "310": 1940, "sp": 1940, "9078": 1940, "conception": 1940, "sparsesemistructur": 1940, "lobpcg": 1940, "geneig": 1940, "pca_lowrank": 1940, "kindli": 1940, "airy_ai": 1941, "airi": 1941, "onward": 1941, "9635": 1941, "entr": 1941, "3466": 1941, "int_": 1941, "8427": 1941, "0561": 1941, "4769": 1941, "9213": 1941, "8858": 1941, "7683": 1941, "7481": 1941, "2920": 1941, "int_0": 1941, "gammaln": 1941, "a1": 1941, "a2": 1941, "3528": 1941, "5665": 1941, "6472": 1941, "4335": 1941, "2650": 1941, "2661": 1941, "2796": 1941, "8808": 1941, "3019": 1941, "4658": 1941, "3085": 1941, "2430": 1941, "2070": 1941, "5652": 1941, "9534": 1941, "7595": 1941, "2153": 1941, "log_ndtr": 1941, "_ndtr": 1941, "6077": 1941, "7832": 1941, "841": 1941, "6931": 1941, "1728": 1941, "023": 1941, "9331": 1941, "6486": 1941, "1523": 1941, "6516": 1941, "6352": 1941, "6131": 1941, "7169": 1941, "6261": 1941, "displaystyl": 1941, "undefiend": 1941, "6835": 1941, "8474": 1941, "1929": 1941, "7162": 1941, "4180": 1941, "3928": 1941, "4007": 1941, "7586": 1941, "3901": 1941, "5049": 1941, "ndtr": 1941, "0228": 1941, "1587": 1941, "9772": 1941, "9987": 1941, "2p": 1941, "64493": 1941, "4041": 1941, "8288": 1941, "4939": 1941, "4091": 1941, "8863": 1941, "771": 1941, "scaled_modified_bessel_k0": 1941, "scaled_modified_bessel_k1": 1941, "2948": 1941, "0267": 1941, "1566": 1941, "9186": 1941, "8631": 1941, "0259": 1941, "1300": 1941, "spheric": 1941, "xlog1pi": 1941, "3863": 1941, "1972": 1941, "6094": 1941, "2189": 1941, "8283": 1941, "7726": 1941, "0986": 1941, "1589": 1941, "hurwitz": 1941, "6449": 1941, "0823": 1941, "untyp": 1942, "wrap_storag": 1942, "complex_doubl": 1942, "from_buff": 1942, "is_hpu": 1942, "pickle_storage_typ": 1942, "byteswap": 1942, "quint2x4": [1942, 1947], "twelv": 1943, "halftensor": [1943, 1946], "bfloat16tensor": [1943, 1946], "chartensor": [1943, 1946], "shorttensor": [1943, 1946], "binary16": [1943, 1946], "significand": [1943, 1946], "float_tensor": 1943, "double_tensor": 1943, "complex_float_tensor": 1943, "complex_double_tensor": 1943, "int_tensor": 1943, "long_tensor": 1943, "uint_tensor": 1943, "bool_tensor": 1943, "long_zerodim": 1943, "int_zerodim": 1943, "set_default_devic": 1943, "cuda1": 1943, "channels_last_3d": 1943, "ndhwc": 1943, "blogpost": 1944, "totensor": 1945, "trainset": 1945, "mnist": 1945, "mnist_train": 1945, "trainload": 1945, "grayscal": 1945, "make_grid": 1945, "add_imag": 1945, "add_graph": 1945, "clutter": 1945, "n_iter": 1945, "purge_step": 1945, "max_queu": 1945, "flush_sec": 1945, "filename_suffix": 1945, "current_datetime_hostnam": 1945, "exp1": 1945, "global_step": 1945, "purg": 1945, "event_file_writ": 1945, "eventfilewrit": 1945, "may04_22": 1945, "54_": 1945, "macbook": 1945, "my_experi": 1945, "lr_0": 1945, "1_batch_16": 1945, "locallr_0": 1945, "scalar_valu": 1945, "walltim": 1945, "new_styl": 1945, "double_precis": 1945, "blobnam": 1945, "simple_valu": 1945, "2x": [1945, 1963], "main_tag": 1945, "tag_scalar_dict": 1945, "run_14h": 1945, "xsinx": 1945, "xcosx": 1945, "tanx": 1945, "add_histogram": 1945, "max_bin": 1945, "fd": 1945, "img_tensor": 1945, "dataformat": 1945, "chw": 1945, "hwc": 1945, "hw": 1945, "wh": 1945, "3xhxw": 1945, "img_hwc": 1945, "my_imag": 1945, "my_image_hwc": 1945, "img_batch": 1945, "my_image_batch": 1945, "add_figur": 1945, "add_video": 1945, "vid_tensor": 1945, "fp": 1945, "moviepi": 1945, "add_audio": 1945, "snd_tensor": 1945, "sample_r": 1945, "44100": 1945, "add_text": 1945, "text_str": 1945, "input_to_model": 1945, "use_strict_trac": 1945, "add_embed": 1945, "label_img": 1945, "metadata_head": 1945, "projector": 1945, "kwlist": 1945, "add_pr_curv": 1945, "num_threshold": 1945, "pr_curv": 1945, "add_custom_scalar": 1945, "chart": 1945, "categorynam": 1945, "chartnam": 1945, "listofproperti": 1945, "multilin": 1945, "taiwan": 1945, "twse": 1945, "0050": 1945, "2330": 1945, "dow": 1945, "aaa": 1945, "bbb": 1945, "ccc": 1945, "nasdaq": 1945, "add_mesh": 1945, "config_dict": 1945, "threej": 1945, "vertex": 1945, "number_of_vertic": 1945, "vertices_tensor": 1945, "colors_tensor": 1945, "faces_tensor": 1945, "my_mesh": 1945, "add_hparam": 1945, "hparam_dict": 1945, "metric_dict": 1945, "hparam_domain_discret": 1945, "run_nam": 1945, "hparam": 1945, "bsize": 1945, "tini": [1946, 1947, 1963, 1972], "_like": 1946, "allow_subclass": 1947, "check_devic": 1947, "check_layout": 1947, "6e": 1947, "3e": 1947, "assert_equ": 1947, "000000000000001e": 1947, "1e0": 1947, "argh": 1947, "nfooter": 1947, "66": 1947, "footer": 1947, "exclude_zero": 1947, "1205": 1947, "2282": 1947, "6380": 1947, "default_gener": 1948, "click": [1948, 1966, 1967], "data_dependent_output": 1948, "dynamic_output_shap": 1948, "inplace_view": 1948, "nondeterministic_bitwis": 1948, "nondeterministic_seed": 1948, "pt2_compliant_tag": 1948, "compare_weight": 1949, "float_dict": 1949, "quantized_dict": 1949, "wt_compare_dict": 1949, "qmodel": 1949, "compute_error": 1949, "weight_dict": 1949, "get_logger_dict": 1949, "shadowlogg": 1949, "outputlogg": [1949, 1950], "target_dict": 1949, "q_modul": 1949, "logger_cl": [1949, 1950], "prepare_model_with_stub": 1949, "module_swap_list": 1949, "q_model": 1949, "ob_dict": 1949, "compare_model_stub": 1949, "quantizablebasicblock": 1949, "get_matching_activ": 1949, "act_dict": 1949, "prepare_model_output": 1949, "compare_model_output": 1949, "act_compare_dict": 1949, "weight_comparison": 1950, "extract_weight": 1950, "sqnr": 1950, "extend_logger_results_with_comparison": 1950, "compute_sqnr": 1950, "mp_n": 1950, "mq_n": 1950, "add_logg": 1950, "act_comparison": 1950, "extract_logger_info": 1950, "mp_shadows_mq": 1950, "add_shadow_logg": 1950, "shadow_act_comparison": 1950, "extract_shadow_logger_info": 1950, "ref_node_nam": 1950, "prev_node_nam": 1950, "model_nam": 1950, "ref_nam": 1950, "prev_node_target_typ": 1950, "ref_node_target_typ": 1950, "results_typ": 1950, "index_within_arg": 1950, "index_of_arg": 1950, "qconfig_str": 1950, "outputcomparisonlogg": 1950, "x_ref": 1950, "nstracer": 1950, "skipped_module_nam": 1950, "skipped_module_class": 1950, "model_name_a": 1950, "model_a": 1950, "model_name_b": 1950, "model_b": 1950, "base_name_to_sets_of_related_op": 1950, "unmatchable_types_map": 1950, "op_to_type_to_weight_extraction_fn": 1950, "nsresultstyp": 1950, "name_a": 1950, "name_b": 1950, "should_log_input": 1950, "model_a_with_logg": 1950, "model_b_with_logg": 1950, "model_name_to_use_for_layer_nam": 1950, "node_type_to_io_type_map": 1950, "model_a_shadows_b": 1950, "model_name_1": 1950, "model_name_2": 1950, "comparison_fn": 1950, "comparison_nam": 1950, "prepare_n_shadows_model": 1950, "qconfig_multi_map": 1950, "custom_prepare_fn": 1950, "custom_prepare_kwarg": 1950, "custom_trac": 1950, "args_kwargs_m": 1950, "op_m": 1950, "output_m": 1950, "op_m_n": 1950, "log_m_n": 1950, "log_m_0": 1950, "qconfig_n": 1950, "args_m": 1950, "op_m_prepared_with_qconfig_n": 1950, "out_m_n": 1950, "kwargs_m": 1950, "docblock": 1950, "loggers_set_en": 1950, "loggers_set_save_activ": 1950, "save_activ": 1950, "convert_n_shadows_model": 1950, "custom_convert_fn": 1950, "custom_convert_kwarg": 1950, "extract_results_n_shadows_model": 1950, "print_comparisons_n_shadows_model": 1950, "compute_normalized_l2_error": 1950, "compute_cosine_similar": 1950, "surfac": 1951, "openai": 1951, "ipex": 1951, "tvm": 1951, "apach": 1951, "dashboard": [1951, 1956, 1963], "nnmodul": 1951, "simd": 1953, "slot": [1953, 1970], "isa": 1953, "amx": 1953, "collect_env": 1953, "avx512f": 1953, "avx512bw": 1953, "avx512_vnni": 1953, "amx_til": 1953, "amx_bf16": 1953, "amx_int8": 1953, "debut": 1954, "cachingalloc": 1954, "cudagraph_tre": 1954, "unintend": 1954, "prematur": 1954, "mark_step_begin": 1954, "footgun": [1954, 1958], "my_custom_backend": 1955, "f_opt": 1955, "my_compil": [1955, 1956, 1962], "torch_dynamo_backend": 1955, "your_modul": 1955, "minifi": [1955, 1959], "aot_autograd": 1955, "fw_compil": 1955, "bw_compil": 1955, "make_boxed_func": 1955, "model_opt": 1955, "0x7f1a894649a8": 1955, "mockmodul": 1955, "optimized_mod": 1955, "toy_exampl": [1955, 1956, 1959, 1962, 1969], "abs_1": [1955, 1956], "0x7f8d259298a0": 1955, "superior": 1955, "optimize_for_inference_compil": 1955, "code_to_acceler": 1955, "trt_compil": 1955, "inductor_compil": 1955, "523": 1956, "kaichao": 1956, "_dynamo_dynamic_indic": 1956, "utils_devic": 1956, "___skip_backend_check": 1956, "___current_backend": 1956, "___lookup_backend": 1956, "140355900538256": 1956, "check_tensor": 1956, "dispatchkeyset": 1956, "backendselect": 1956, "adinplaceorview": 1956, "autogradcpu": 1956, "recaptur": 1956, "decompil": 1956, "depyf": 1956, "__compiled_fn_0": 1956, "eval_with_kei": 1956, "0x7f9ca082f8a0": 1956, "load_fast": [1956, 1962], "load_glob": 1956, "load_method": 1956, "load_const": [1956, 1962], "binary_add": 1956, "binary_true_divid": 1956, "store_fast": 1956, "compare_op": 1956, "pop_jump_if_fals": 1956, "binary_multipli": [1956, 1962], "unpack_sequ": 1956, "__resume_at_30_1": 1956, "__resume_at_38_2": 1956, "__temp_1": 1956, "youkaichao": 1956, "__resume_at_": 1956, "jump_absolut": 1956, "resume_at": 1956, "eval_fram": 1956, "_debug_get_cache_entry_list": 1956, "__code__": 1956, "codetyp": 1956, "innermost_fn": 1956, "cache_entri": 1956, "check_fn": [1956, 1962], "code_part": 1956, "___guarded_cod": [1956, 1962], "___check_global_st": 1956, "140215810860528": 1956, "___check_tensor": [1956, 1962], "tensor_check_nam": 1956, "co_freevar": 1956, "__closure__": 1956, "___is_grad_en": 1956, "___are_deterministic_algorithms_en": 1956, "___is_torch_function_en": 1956, "value_a": 1956, "value_b": 1956, "__self__": 1956, "l_a_": 1956, "l_b_": 1956, "compiled_exampl": 1956, "get_cache_entri": 1956, "recompile_and_add_another_cache_entri": 1956, "symbolic_shap": 1957, "recognit": 1957, "induct": 1957, "mark_dynam": 1957, "shapeenv": [1957, 1958], "faithfulli": 1957, "reusabl": 1957, "plumb": 1957, "symnodeimpl": 1957, "python_symnod": 1957, "_meta_registr": 1957, "decomp": [1957, 1958], "primtorch": [1957, 1958], "symnod": 1957, "apparatu": 1957, "precomput": 1957, "constrain_rang": 1957, "wherebi": 1957, "trash": 1958, "bunch": 1958, "from_real_tensor": 1958, "fakeifi": 1958, "dispatch_devic": 1958, "ly": 1958, "derefer": 1958, "backtrac": 1958, "in_kernel_invocation_manag": 1958, "unwrap": 1958, "test_fake_tensor": 1958, "fake_mod": 1958, "fake_x": 1958, "fake_i": 1958, "fake_z": 1958, "_guard": 1958, "detect_fake_mod": 1958, "fake_arg": 1958, "lifecycl": [1958, 1962], "maybe_disable_fake_tensor_mod": 1958, "nich": 1958, "faketensorprop": 1958, "fake_tensor_prop": 1958, "propagate_dont_convert_input": 1958, "fake_input": 1958, "real_tensor": 1958, "annoi": 1958, "somehow": 1958, "fakecopymod": 1958, "gave": 1958, "fakeif": 1958, "tension": 1958, "analys": 1958, "hopefulli": 1958, "hardcod": 1958, "metaconvert": 1958, "die": 1958, "unback": 1958, "saroufim": 1959, "evalfram": 1959, "usercod": 1959, "rob": 1959, "diminish": 1959, "vast": 1959, "nopython": [1959, 1962, 1969], "250k": 1959, "aitempl": 1959, "aot_eag": [1959, 1969], "compile_tim": [1959, 1967, 1969], "torch_compile_debug": [1959, 1961], "troubl": [1959, 1960, 1969], "compileprofil": [1959, 1969], "profiler_model": [1959, 1969], "traffic": 1959, "frozen_toy_exampl": 1959, "multiprocessor": 1959, "some_fun": [1959, 1969], "insurmount": [1959, 1969], "woo": [1959, 1969], "out_guard": [1959, 1969], "ops_per_graph": [1959, 1969], "builtinvari": [1959, 1969], "constantvari": [1959, 1962, 1969], "generic_jump": [1959, 1969], "torchdynamo_dynamic_shap": 1959, "cv": 1959, "app": 1959, "unnecessarili": 1959, "cold": [1959, 1966], "visibli": 1959, "torchdynamo_repro_level": [1959, 1969], "bisect": [1959, 1969], "torchdynamo_repro_aft": [1959, 1969], "dramat": [1959, 1969], "capture_func_transform": 1959, "wrapper_fn": 1959, "my_fn": 1959, "some_list": 1959, "bad_fn": 1959, "pitfal": 1959, "_indices_from": 1959, "recarrai": 1959, "float128": 1959, "complex256": 1959, "uint16": 1959, "uint32": 1959, "uint64": 1959, "esoter": 1959, "ufunc": 1959, "poly1d": 1959, "__array_wrap__": 1959, "numpy_fn": 1959, "tweak": 1959, "daunt": 1959, "diagnos": 1959, "tackl": 1959, "pinpoint": 1959, "discern": 1959, "trace_numpi": 1959, "_numpi": 1959, "uncommon": 1959, "finer": 1959, "a_fn": [1959, 1960], "aa_fn": [1959, 1960], "ab_fn": [1959, 1960], "handel": 1960, "unblock": 1960, "nnthi": 1960, "black": 1960, "nnnote": 1960, "screen": [1960, 1967], "b_fn": 1960, "white": 1960, "new_fn": 1961, "famou": 1961, "crunch": 1961, "torchinductor_": 1961, "your_usernam": 1961, "size_hint": 1961, "i32": 1961, "mutated_arg_nam": 1961, "instance_descriptor": 1961, "divisible_by_16": 1961, "equal_to_1": 1961, "triton_": 1961, "in_ptr0": 1961, "out_ptr0": 1961, "xnumel": 1961, "xblock": 1961, "tl": 1961, "constexpr": 1961, "xoffset": 1961, "program_id": 1961, "xindex": 1961, "xmask": 1961, "tmp0": 1961, "tmp1": 1961, "tmp2": 1961, "v0": 1961, "opt_model": 1961, "timm": [1961, 1966], "huggingfac": [1961, 1966], "berttoken": 1961, "bertmodel": 1961, "uncas": 1961, "me": 1961, "encoded_input": 1961, "return_tensor": 1961, "trigonometri": 1961, "skim": 1961, "create_model": 1961, "resnext101_32x8d": 1961, "fn_foo": 1962, "grab": 1962, "dig": 1962, "hole": 1962, "neutral": 1962, "_pyinterpreterstate_setevalframefunc": 1962, "convert_fram": [1962, 1969], "convert_frame_assert": 1962, "gloss": 1962, "compiler_fn": 1962, "one_graph": 1962, "_convert_frame_assert": 1962, "frametyp": 1962, "f_code": 1962, "needless": 1962, "evict": 1962, "transform_code_object": 1962, "output_instruct": 1962, "guardedcod": 1962, "symbolic_loc": 1962, "f_local": 1962, "variablebuild": 1962, "localsourc": 1962, "_wrap": 1962, "variabletrack": 1962, "make_guard": 1962, "pump": 1962, "cool": 1962, "get_instruct": 1962, "124": 1962, "opnam": 1962, "argval": 1962, "starts_lin": 1962, "is_jump_target": 1962, "inst": 1962, "unimpl": 1962, "dozen": 1962, "symbolic_convert": [1962, 1969], "spoken": 1962, "quiet": 1962, "replace_guard": 1962, "add_guard": 1962, "behalf": 1962, "python_typ": 1962, "as_proxi": 1962, "as_python_proxi": 1962, "bookkeep": 1962, "flesh": 1962, "relianc": 1962, "build_tupl": 1962, "popn": 1962, "tuplevari": 1962, "pydoc": 1962, "tensorvari": 1962, "instructiontranslatorbas": 1962, "guardsourc": 1962, "create_fn": 1962, "guard_sourc": 1962, "istyp": 1962, "guardbuild": 1962, "equals_match": 1962, "rangevari": 1962, "appar": 1962, "checkfunctionmanag": 1962, "compile_check_fn": 1962, "cacheentri": 1962, "create_cache_entri": 1962, "pyobject": 1962, "guarded_cod": 1962, "debug_null_check": 1962, "pyobject_getattrstr": 1962, "null_check": 1962, "pycodeobject": 1962, "sort_kei": 1962, "guard_nn_modul": 1962, "is_nn_modul": 1962, "local_build": 1962, "global_build": 1962, "___check_type_id": 1962, "94367738391392": 1962, "_eval_fram": 1962, "anew": 1962, "weak": 1962, "moduleinvalid": 1962, "torchinductor_unique_kernel_nam": 1963, "triton_poi_fused_cat_155": 1963, "poi": 1963, "torchinductor_benchmark_kernel": 1963, "har": 1963, "torchinductor_max_autotun": 1963, "mixnet_l": 1963, "timm_model": 1963, "torchinductor_shunt": 1963, "qz": 1963, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 1963, "shunting314": 1963, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 1963, "48efc83b12ec3ead950052e4a0220b10": 1963, "compiled_module_profil": 1963, "browser": [1963, 1967], "zoom": [1963, 1967, 1971], "distort": [1963, 1967], "densenet121": 1963, "69": 1963, "cutlass": 1963, "57": 1963, "ff": 1963, "justifi": 1963, "triton_red_fus": 1963, "__native_batch_norm_legit_functional_16": 1963, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 1963, "_adaptive_avg_pool2d_backward": 1964, "half_to_float": 1964, "no_stat": 1964, "start_step": 1964, "avg_pool2d_backward": 1964, "convolution_backward": 1964, "bias_siz": 1964, "output_mask": 1964, "scalar_mod": 1964, "tensor_mod": 1964, "embedding_dense_backward": 1964, "num_weight": 1964, "max_pool2d_with_indices_backward": 1964, "native_group_norm_backward": 1964, "rstd": 1964, "native_layer_norm_backward": 1964, "tensor_scalar": 1964, "tensor_tensor": 1964, "dim_int": 1964, "dim_intlist": 1964, "broadcast_dimens": 1964, "start_indic": 1964, "limit_indic": 1964, "start_index": 1964, "limit_index": 1964, "outer_length": 1964, "constabl": 1965, "_forward_pre_hook": 1965, "_backward_pre_hook": 1965, "_backward_hook": 1965, "_state_dict_hook": 1965, "load_": 1965, "avoiabl": 1965, "skip_nnmodule_hook_guard": 1965, "pre_backward": 1965, "warn_onc": 1965, "hui": 1966, "nightli": 1966, "night": 1966, "40gb": [1966, 1969], "2ghz": 1966, "torchbench": 1966, "trend": 1966, "droplist": 1966, "with_cudagraph": 1966, "toosl": 1967, "ncu": 1967, "model_c": 1967, "fwd_bwd": 1967, "scroll": 1967, "shortcut": 1967, "compiledfunct": 1967, "compiledfunctionbackward": 1967, "ac2g": 1967, "dropdown": 1967, "525": 1967, "_init_for_cuda_graph": 1967, "warmup_compil": 1967, "fn_c": 1967, "record_funct": 1967, "trace_compil": 1967, "synthet": 1967, "modelwithbreak": 1967, "create_sequenti": 1967, "mod1": 1967, "mod2": 1967, "mod3": 1967, "mod4": 1967, "trace_break": 1967, "sit": 1968, "replace_add_with_mul": 1968, "insert_relu_after_add": 1968, "new_relu_nod": 1968, "replaceaddwithmul": 1968, "transformed_graph_modul": 1968, "replaceaddwithmulsub": 1968, "mul_r": 1968, "removedetachpass": 1968, "args_map": 1968, "_schema": 1968, "kwarg_onli": 1968, "scalartotensorpass": 1968, "try_coerc": 1968, "replace_pattern": 1968, "replaced_pattern": 1968, "replace_pattern_with_filt": 1968, "replacedpattern": 1968, "passmanag": 1968, "pass_manag": 1968, "pm": 1968, "replace_add_with_div": 1968, "replace_div_with_mul": 1968, "run_checks_after_each_pass": 1968, "suppress_check_failur": 1968, "graph_module_out": 1968, "set_check": 1968, "check_div_target": 1968, "add_check": 1968, "subgraphmatch": 1968, "matcher_util": 1968, "match_output": 1968, "match_placehold": 1968, "remove_overlapping_match": 1968, "ignore_liter": 1968, "largemodel": 1968, "_bia": 1968, "large_model_graph": 1968, "patternmodel": 1968, "_weight_1": 1968, "_bias_1": 1968, "pattern_graph": 1968, "subgraph_match": 1968, "match_result": 1968, "internalmatch": 1968, "default_factori": 1968, "placeholder_nod": 1968, "returning_nod": 1968, "capabilitybasedpartition": 1968, "l34": 1968, "operator_support": 1968, "operatorsupportbas": 1968, "allows_single_node_partit": 1968, "non_compute_op": 1968, "_oper": 1968, "allowed_single_node_partition_op": 1968, "ll28c1": 1968, "l28c1": 1968, "is_node_support": 1968, "l150": 1968, "any_chain": 1968, "l164": 1968, "addmuloperatorsupport": 1968, "capability_partition": 1968, "op_support": 1968, "partition_list": 1968, "propose_partit": 1968, "fused_graph_modul": 1968, "fuse_partit": 1968, "lazo": 1969, "torchdynamo_verbos": 1969, "replay_record_en": 1969, "torchdynamo_debug_funct": 1969, "test_assertion_error": 1969, "compiled_test_assertion_error": 1969, "mlazo": 1969, "837": 1969, "build_map": 1969, "test_backend_error": 1969, "compiled_test_backend_error": 1969, "decomp_fn": 1969, "810": 1969, "repro_aft": 1969, "minifier_launch": 1969, "base_dir": 1969, "rand_strid": 1969, "0a0": 1969, "gitfddfc44": 1969, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 1969, "2022": 1969, "thu_feb_10_18": 1969, "41_pst_2022": 1969, "v11": 1969, "cuda_11": 1969, "r11": 1969, "30978841_0": 1969, "sxm4": 1969, "compile_fx": 1969, "compile_fx_inn": 1969, "toy_compil": 1969, "debug_util": 1969, "run_fwd_maybe_bwd": 1969, "opt_mod": 1969, "rg": 1969, "test_model": 1969, "debug_dir_root": 1969, "torch_compile_debug_dir": 1969, "run_2023_03_01_08_20_52_143510": 1969, "pid_180167": 1969, "model__0_forward_1": 1969, "aot_model___0_debug": 1969, "fx_graph_read": 1969, "fx_graph_runn": 1969, "fx_graph_transform": 1969, "ir_post_fus": 1969, "ir_pre_fus": 1969, "fx_graph": 1969, "buf1": 1969, "schedulernod": 1969, "computedbuff": 1969, "memorydep": 1969, "unmet_depend": 1969, "buf0": 1969, "met_depend": 1969, "primals_2": 1969, "buf1_loop_bodi": 1969, "var_rang": 1969, "z0": 1969, "index0": 1969, "index1": 1969, "get_index": 1969, "get_index_1": 1969, "load_1": 1969, "get_index_2": 1969, "compiled_fun": 1969, "hinder": 1969, "break_reason": 1969, "explanation_verbos": 1969, "compiled_toi": 1969, "as_subclass": 1970, "handle_torch_funct": 1970, "public_api": 1970, "relevant_arg": 1970, "has_torch_function_unari": 1970, "is_tensor_lik": 1970, "notatensor": 1970, "tensorlik": 1970, "is_tensor_method_or_properti": 1970, "__get__": 1970, "__module__": 1970, "wrap_torch_funct": 1970, "drag": 1971, "interactiv": 1971, "memory_viz": 1971, "run_your_cod": 1971, "my_snapshot": 1971, "javascript": 1971, "upload": 1971, "pan": 1971, "mous": 1971, "slider": 1971, "b7f064c000000_0": 1971, "7f064c000000": 1971, "max_entri": 1971, "_memory_viz": 1971, "2u": 1971, "50n": 1971, "currenli": 1971, "typeddict": 1971, "device_trac": 1971, "traceentri": 1971, "total_s": 1971, "segment_typ": 1971, "allocated_s": 1971, "active_s": 1971, "active_awaiting_fre": 1971, "requested_s": 1971, "active_alloc": 1971, "took": 1971, "free_request": 1971, "free_complet": 1971, "segment_alloc": 1971, "segment_fre": 1971, "coorel": 1971, "device_fre": 1971, "dump_snapshot": 1971, "smallest_norm": 1972, "subnorm": 1972, "denormal_numb": 1972}, "objects": {"": [[1948, 0, 0, "-", "torch"], [1881, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1942, 1, 1, "", "BFloat16Storage"], [1942, 1, 1, "", "BoolStorage"], [1942, 1, 1, "", "ByteStorage"], [1942, 1, 1, "", "CharStorage"], [1942, 1, 1, "", "ComplexDoubleStorage"], [1942, 1, 1, "", "ComplexFloatStorage"], [1942, 1, 1, "", "DoubleStorage"], [1942, 1, 1, "", "FloatStorage"], [79, 1, 1, "", "Generator"], [1942, 1, 1, "", "HalfStorage"], [1942, 1, 1, "", "IntStorage"], [1942, 1, 1, "", "LongStorage"], [1942, 1, 1, "", "QInt32Storage"], [1942, 1, 1, "", "QInt8Storage"], [1942, 1, 1, "", "QUInt2x4Storage"], [1942, 1, 1, "", "QUInt4x2Storage"], [1942, 1, 1, "", "QUInt8Storage"], [1942, 1, 1, "", "ShortStorage"], [1948, 1, 1, "", "SymBool"], [1948, 1, 1, "", "SymFloat"], [1948, 1, 1, "", "SymInt"], [1948, 1, 1, "", "Tag"], [1946, 1, 1, "", "Tensor"], [1942, 1, 1, "", "TypedStorage"], [1942, 1, 1, "", "UntypedStorage"], [13, 0, 0, "-", "__config__"], [614, 5, 1, "", "_assert"], [615, 5, 1, "", "_foreach_abs"], [616, 5, 1, "", "_foreach_abs_"], [617, 5, 1, "", "_foreach_acos"], [618, 5, 1, "", "_foreach_acos_"], [619, 5, 1, "", "_foreach_asin"], [620, 5, 1, "", "_foreach_asin_"], [621, 5, 1, "", "_foreach_atan"], [622, 5, 1, "", "_foreach_atan_"], [623, 5, 1, "", "_foreach_ceil"], [624, 5, 1, "", "_foreach_ceil_"], [625, 5, 1, "", "_foreach_cos"], [626, 5, 1, "", "_foreach_cos_"], [627, 5, 1, "", "_foreach_cosh"], [628, 5, 1, "", "_foreach_cosh_"], [629, 5, 1, "", "_foreach_erf"], [630, 5, 1, "", "_foreach_erf_"], [631, 5, 1, "", "_foreach_erfc"], [632, 5, 1, "", "_foreach_erfc_"], [633, 5, 1, "", "_foreach_exp"], [634, 5, 1, "", "_foreach_exp_"], [635, 5, 1, "", "_foreach_expm1"], [636, 5, 1, "", "_foreach_expm1_"], [637, 5, 1, "", "_foreach_floor"], [638, 5, 1, "", "_foreach_floor_"], [639, 5, 1, "", "_foreach_frac"], [640, 5, 1, "", "_foreach_frac_"], [641, 5, 1, "", "_foreach_lgamma"], [642, 5, 1, "", "_foreach_lgamma_"], [643, 5, 1, "", "_foreach_log"], [644, 5, 1, "", "_foreach_log10"], [645, 5, 1, "", "_foreach_log10_"], [646, 5, 1, "", "_foreach_log1p"], [647, 5, 1, "", "_foreach_log1p_"], [648, 5, 1, "", "_foreach_log2"], [649, 5, 1, "", "_foreach_log2_"], [650, 5, 1, "", "_foreach_log_"], [651, 5, 1, "", "_foreach_neg"], [652, 5, 1, "", "_foreach_neg_"], [653, 5, 1, "", "_foreach_reciprocal"], [654, 5, 1, "", "_foreach_reciprocal_"], [655, 5, 1, "", "_foreach_round"], [656, 5, 1, "", "_foreach_round_"], [657, 5, 1, "", "_foreach_sigmoid"], [658, 5, 1, "", "_foreach_sigmoid_"], [659, 5, 1, "", "_foreach_sin"], [660, 5, 1, "", "_foreach_sin_"], [661, 5, 1, "", "_foreach_sinh"], [662, 5, 1, "", "_foreach_sinh_"], [663, 5, 1, "", "_foreach_sqrt"], [664, 5, 1, "", "_foreach_sqrt_"], [665, 5, 1, "", "_foreach_tan"], [666, 5, 1, "", "_foreach_tan_"], [667, 5, 1, "", "_foreach_trunc"], [668, 5, 1, "", "_foreach_trunc_"], [669, 5, 1, "", "_foreach_zero_"], [1890, 0, 0, "-", "_logging"], [671, 5, 1, "", "abs"], [672, 5, 1, "", "absolute"], [673, 5, 1, "", "acos"], [674, 5, 1, "", "acosh"], [675, 5, 1, "", "add"], [676, 5, 1, "", "addbmm"], [677, 5, 1, "", "addcdiv"], [678, 5, 1, "", "addcmul"], [679, 5, 1, "", "addmm"], [680, 5, 1, "", "addmv"], [681, 5, 1, "", "addr"], [682, 5, 1, "", "adjoint"], [683, 5, 1, "", "all"], [684, 5, 1, "", "allclose"], [685, 5, 1, "", "amax"], [686, 5, 1, "", "amin"], [687, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [688, 5, 1, "", "angle"], [689, 5, 1, "", "any"], [1931, 0, 0, "-", "ao"], [855, 5, 1, "", "arange"], [856, 5, 1, "", "arccos"], [857, 5, 1, "", "arccosh"], [858, 5, 1, "", "arcsin"], [859, 5, 1, "", "arcsinh"], [860, 5, 1, "", "arctan"], [861, 5, 1, "", "arctan2"], [862, 5, 1, "", "arctanh"], [863, 5, 1, "", "are_deterministic_algorithms_enabled"], [864, 5, 1, "", "argmax"], [865, 5, 1, "", "argmin"], [866, 5, 1, "", "argsort"], [867, 5, 1, "", "argwhere"], [868, 5, 1, "", "as_strided"], [869, 5, 1, "", "as_tensor"], [870, 5, 1, "", "asarray"], [871, 5, 1, "", "asin"], [872, 5, 1, "", "asinh"], [873, 5, 1, "", "atan"], [874, 5, 1, "", "atan2"], [875, 5, 1, "", "atanh"], [876, 5, 1, "", "atleast_1d"], [877, 5, 1, "", "atleast_2d"], [878, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [910, 5, 1, "", "baddbmm"], [911, 5, 1, "", "bartlett_window"], [912, 5, 1, "", "bernoulli"], [913, 5, 1, "", "bincount"], [914, 5, 1, "", "bitwise_and"], [915, 5, 1, "", "bitwise_left_shift"], [916, 5, 1, "", "bitwise_not"], [917, 5, 1, "", "bitwise_or"], [918, 5, 1, "", "bitwise_right_shift"], [919, 5, 1, "", "bitwise_xor"], [920, 5, 1, "", "blackman_window"], [921, 5, 1, "", "block_diag"], [922, 5, 1, "", "bmm"], [923, 5, 1, "", "broadcast_shapes"], [924, 5, 1, "", "broadcast_tensors"], [925, 5, 1, "", "broadcast_to"], [926, 5, 1, "", "bucketize"], [927, 5, 1, "", "can_cast"], [928, 5, 1, "", "cartesian_prod"], [929, 5, 1, "", "cat"], [930, 5, 1, "", "cdist"], [931, 5, 1, "", "ceil"], [932, 5, 1, "", "chain_matmul"], [933, 5, 1, "", "cholesky"], [934, 5, 1, "", "cholesky_inverse"], [935, 5, 1, "", "cholesky_solve"], [936, 5, 1, "", "chunk"], [937, 5, 1, "", "clamp"], [938, 5, 1, "", "clip"], [939, 5, 1, "", "clone"], [940, 5, 1, "", "column_stack"], [941, 5, 1, "", "combinations"], [942, 5, 1, "", "compile"], [943, 5, 1, "", "compiled_with_cxx11_abi"], [1952, 0, 0, "-", "compiler"], [951, 5, 1, "", "complex"], [952, 5, 1, "", "concat"], [953, 5, 1, "", "concatenate"], [954, 5, 1, "", "cond"], [955, 5, 1, "", "conj"], [956, 5, 1, "", "conj_physical"], [1948, 0, 0, "-", "contrib"], [957, 5, 1, "", "copysign"], [958, 5, 1, "", "corrcoef"], [959, 5, 1, "", "cos"], [960, 5, 1, "", "cosh"], [961, 5, 1, "", "count_nonzero"], [962, 5, 1, "", "cov"], [16, 0, 0, "-", "cpu"], [972, 5, 1, "", "cross"], [17, 0, 0, "-", "cuda"], [1051, 5, 1, "", "cummax"], [1052, 5, 1, "", "cummin"], [1053, 5, 1, "", "cumprod"], [1054, 5, 1, "", "cumsum"], [1055, 5, 1, "", "cumulative_trapezoid"], [1056, 5, 1, "", "deg2rad"], [1057, 5, 1, "", "dequantize"], [1058, 5, 1, "", "det"], [1943, 1, 1, "", "device"], [1059, 5, 1, "", "diag"], [1060, 5, 1, "", "diag_embed"], [1061, 5, 1, "", "diagflat"], [1062, 5, 1, "", "diagonal"], [1063, 5, 1, "", "diagonal_scatter"], [1064, 5, 1, "", "diff"], [1065, 5, 1, "", "digamma"], [1066, 5, 1, "", "dist"], [25, 0, 0, "-", "distributed"], [31, 0, 0, "-", "distributions"], [1067, 5, 1, "", "div"], [1068, 5, 1, "", "divide"], [1069, 5, 1, "", "dot"], [1070, 5, 1, "", "dsplit"], [1071, 5, 1, "", "dstack"], [1943, 1, 1, "", "dtype"], [1072, 5, 1, "", "einsum"], [1073, 5, 1, "", "empty"], [1074, 5, 1, "", "empty_like"], [1075, 5, 1, "", "empty_strided"], [1076, 1, 1, "", "enable_grad"], [1077, 5, 1, "", "eq"], [1078, 5, 1, "", "equal"], [1079, 5, 1, "", "erf"], [1080, 5, 1, "", "erfc"], [1081, 5, 1, "", "erfinv"], [1082, 5, 1, "", "exp"], [1083, 5, 1, "", "exp2"], [1084, 5, 1, "", "expm1"], [46, 0, 0, "-", "export"], [1085, 5, 1, "", "eye"], [1086, 5, 1, "", "fake_quantize_per_channel_affine"], [1087, 5, 1, "", "fake_quantize_per_tensor_affine"], [48, 0, 0, "-", "fft"], [1110, 5, 1, "", "fix"], [1111, 5, 1, "", "flatten"], [1112, 5, 1, "", "flip"], [1113, 5, 1, "", "fliplr"], [1114, 5, 1, "", "flipud"], [1115, 5, 1, "", "float_power"], [1116, 5, 1, "", "floor"], [1117, 5, 1, "", "floor_divide"], [1118, 5, 1, "", "fmax"], [1119, 5, 1, "", "fmin"], [1120, 5, 1, "", "fmod"], [1121, 5, 1, "", "frac"], [1122, 5, 1, "", "frexp"], [1123, 5, 1, "", "from_dlpack"], [1124, 5, 1, "", "from_file"], [1125, 5, 1, "", "from_numpy"], [1126, 5, 1, "", "frombuffer"], [1127, 5, 1, "", "full"], [1128, 5, 1, "", "full_like"], [51, 0, 0, "-", "func"], [1948, 0, 0, "-", "functional"], [56, 0, 0, "-", "futures"], [57, 0, 0, "-", "fx"], [1142, 5, 1, "", "gather"], [1143, 5, 1, "", "gcd"], [1144, 5, 1, "", "ge"], [1145, 5, 1, "", "geqrf"], [1146, 5, 1, "", "ger"], [1147, 5, 1, "", "get_default_dtype"], [1148, 5, 1, "", "get_deterministic_debug_mode"], [1149, 5, 1, "", "get_float32_matmul_precision"], [1150, 5, 1, "", "get_num_interop_threads"], [1151, 5, 1, "", "get_num_threads"], [1152, 5, 1, "", "get_rng_state"], [1153, 5, 1, "", "gradient"], [1154, 5, 1, "", "greater"], [1155, 5, 1, "", "greater_equal"], [1156, 5, 1, "", "gt"], [1157, 5, 1, "", "hamming_window"], [1158, 5, 1, "", "hann_window"], [1159, 5, 1, "", "heaviside"], [1160, 5, 1, "", "histc"], [1161, 5, 1, "", "histogram"], [1162, 5, 1, "", "histogramdd"], [1163, 5, 1, "", "hsplit"], [1164, 5, 1, "", "hspmm"], [1165, 5, 1, "", "hstack"], [1879, 0, 0, "-", "hub"], [1166, 5, 1, "", "hypot"], [1167, 5, 1, "", "i0"], [1168, 5, 1, "", "igamma"], [1169, 5, 1, "", "igammac"], [1170, 5, 1, "", "imag"], [1171, 5, 1, "", "index_add"], [1172, 5, 1, "", "index_copy"], [1173, 5, 1, "", "index_reduce"], [1174, 5, 1, "", "index_select"], [1175, 1, 1, "", "inference_mode"], [1176, 5, 1, "", "initial_seed"], [1177, 5, 1, "", "inner"], [1178, 5, 1, "", "inverse"], [1179, 5, 1, "", "is_complex"], [1180, 5, 1, "", "is_conj"], [1181, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1182, 5, 1, "", "is_floating_point"], [1183, 5, 1, "", "is_grad_enabled"], [1184, 5, 1, "", "is_inference_mode_enabled"], [1185, 5, 1, "", "is_nonzero"], [1186, 5, 1, "", "is_storage"], [1187, 5, 1, "", "is_tensor"], [1188, 5, 1, "", "is_warn_always_enabled"], [1189, 5, 1, "", "isclose"], [1190, 5, 1, "", "isfinite"], [1191, 5, 1, "", "isin"], [1192, 5, 1, "", "isinf"], [1193, 5, 1, "", "isnan"], [1194, 5, 1, "", "isneginf"], [1195, 5, 1, "", "isposinf"], [1196, 5, 1, "", "isreal"], [1197, 5, 1, "", "istft"], [1881, 0, 0, "-", "jit"], [1220, 5, 1, "", "kaiser_window"], [1221, 5, 1, "", "kron"], [1222, 5, 1, "", "kthvalue"], [1943, 1, 1, "", "layout"], [1223, 5, 1, "", "lcm"], [1224, 5, 1, "", "ldexp"], [1225, 5, 1, "", "le"], [1226, 5, 1, "", "lerp"], [1227, 5, 1, "", "less"], [1228, 5, 1, "", "less_equal"], [1229, 5, 1, "", "lgamma"], [1888, 0, 0, "-", "library"], [1889, 0, 0, "-", "linalg"], [1271, 5, 1, "", "linspace"], [1272, 5, 1, "", "load"], [1273, 5, 1, "", "lobpcg"], [1274, 5, 1, "", "log"], [1275, 5, 1, "", "log10"], [1276, 5, 1, "", "log1p"], [1277, 5, 1, "", "log2"], [1278, 5, 1, "", "logaddexp"], [1279, 5, 1, "", "logaddexp2"], [1280, 5, 1, "", "logcumsumexp"], [1281, 5, 1, "", "logdet"], [1282, 5, 1, "", "logical_and"], [1283, 5, 1, "", "logical_not"], [1284, 5, 1, "", "logical_or"], [1285, 5, 1, "", "logical_xor"], [1286, 5, 1, "", "logit"], [1287, 5, 1, "", "logspace"], [1288, 5, 1, "", "logsumexp"], [1289, 5, 1, "", "lt"], [1290, 5, 1, "", "lu"], [1291, 5, 1, "", "lu_solve"], [1292, 5, 1, "", "lu_unpack"], [1293, 5, 1, "", "manual_seed"], [1891, 0, 0, "-", "masked"], [1294, 5, 1, "", "masked_select"], [1295, 5, 1, "", "matmul"], [1296, 5, 1, "", "matrix_exp"], [1297, 5, 1, "", "matrix_power"], [1298, 5, 1, "", "max"], [1299, 5, 1, "", "maximum"], [1300, 5, 1, "", "mean"], [1301, 5, 1, "", "median"], [1943, 1, 1, "", "memory_format"], [1302, 5, 1, "", "meshgrid"], [1303, 5, 1, "", "min"], [1304, 5, 1, "", "minimum"], [1305, 5, 1, "", "mm"], [1306, 5, 1, "", "mode"], [1894, 0, 0, "-", "monitor"], [1307, 5, 1, "", "moveaxis"], [1308, 5, 1, "", "movedim"], [1895, 0, 0, "-", "mps"], [1322, 5, 1, "", "msort"], [1323, 5, 1, "", "mul"], [1324, 5, 1, "", "multinomial"], [1325, 5, 1, "", "multiply"], [1896, 0, 0, "-", "multiprocessing"], [1326, 5, 1, "", "mv"], [1327, 5, 1, "", "mvlgamma"], [1328, 5, 1, "", "nan_to_num"], [1329, 5, 1, "", "nanmean"], [1330, 5, 1, "", "nanmedian"], [1331, 5, 1, "", "nanquantile"], [1332, 5, 1, "", "nansum"], [1333, 5, 1, "", "narrow"], [1334, 5, 1, "", "narrow_copy"], [1335, 5, 1, "", "ne"], [1336, 5, 1, "", "neg"], [1337, 5, 1, "", "negative"], [1899, 0, 0, "-", "nested"], [1338, 5, 1, "", "nextafter"], [1900, 0, 0, "-", "nn"], [1665, 1, 1, "", "no_grad"], [1666, 5, 1, "", "nonzero"], [1667, 5, 1, "", "norm"], [1668, 5, 1, "", "normal"], [1669, 5, 1, "", "not_equal"], [1670, 5, 1, "", "numel"], [1671, 5, 1, "", "ones"], [1672, 5, 1, "", "ones_like"], [1925, 0, 0, "-", "onnx"], [1927, 0, 0, "-", "optim"], [1709, 5, 1, "", "orgqr"], [1710, 5, 1, "", "ormqr"], [1711, 5, 1, "", "outer"], [1970, 0, 0, "-", "overrides"], [1928, 0, 0, "-", "package"], [1712, 5, 1, "", "pca_lowrank"], [1713, 5, 1, "", "permute"], [1714, 5, 1, "", "pinverse"], [1715, 5, 1, "", "poisson"], [1716, 5, 1, "", "polar"], [1717, 5, 1, "", "polygamma"], [1718, 5, 1, "", "positive"], [1719, 5, 1, "", "pow"], [1720, 5, 1, "", "prod"], [1930, 0, 0, "-", "profiler"], [1721, 5, 1, "", "promote_types"], [1722, 5, 1, "", "qr"], [1723, 5, 1, "", "quantile"], [1934, 0, 0, "-", "quantization"], [1724, 5, 1, "", "quantize_per_channel"], [1725, 5, 1, "", "quantize_per_tensor"], [1726, 5, 1, "", "quantized_batch_norm"], [1727, 5, 1, "", "quantized_max_pool1d"], [1728, 5, 1, "", "quantized_max_pool2d"], [1948, 0, 0, "-", "quasirandom"], [1730, 5, 1, "", "rad2deg"], [1731, 5, 1, "", "rand"], [1732, 5, 1, "", "rand_like"], [1733, 5, 1, "", "randint"], [1734, 5, 1, "", "randint_like"], [1735, 5, 1, "", "randn"], [1736, 5, 1, "", "randn_like"], [1935, 0, 0, "-", "random"], [1737, 5, 1, "", "randperm"], [1738, 5, 1, "", "range"], [1739, 5, 1, "", "ravel"], [1740, 5, 1, "", "real"], [1741, 5, 1, "", "reciprocal"], [1742, 5, 1, "", "remainder"], [1743, 5, 1, "", "renorm"], [1744, 5, 1, "", "repeat_interleave"], [1745, 5, 1, "", "reshape"], [1746, 5, 1, "", "resolve_conj"], [1747, 5, 1, "", "resolve_neg"], [1748, 5, 1, "", "result_type"], [1948, 0, 0, "-", "return_types"], [1749, 5, 1, "", "roll"], [1750, 5, 1, "", "rot90"], [1751, 5, 1, "", "round"], [1752, 5, 1, "", "row_stack"], [1753, 5, 1, "", "rsqrt"], [1754, 5, 1, "", "save"], [1755, 5, 1, "", "scatter"], [1756, 5, 1, "", "scatter_add"], [1757, 5, 1, "", "scatter_reduce"], [1758, 5, 1, "", "searchsorted"], [1759, 5, 1, "", "seed"], [1760, 5, 1, "", "select"], [1761, 5, 1, "", "select_scatter"], [1948, 0, 0, "-", "serialization"], [1762, 5, 1, "", "set_default_device"], [1763, 5, 1, "", "set_default_dtype"], [1764, 5, 1, "", "set_default_tensor_type"], [1765, 5, 1, "", "set_deterministic_debug_mode"], [1766, 5, 1, "", "set_float32_matmul_precision"], [1767, 5, 1, "", "set_flush_denormal"], [1768, 1, 1, "", "set_grad_enabled"], [1769, 5, 1, "", "set_num_interop_threads"], [1770, 5, 1, "", "set_num_threads"], [1771, 5, 1, "", "set_printoptions"], [1772, 5, 1, "", "set_rng_state"], [1773, 5, 1, "", "set_warn_always"], [1774, 5, 1, "", "sgn"], [1775, 5, 1, "", "sigmoid"], [1776, 5, 1, "", "sign"], [1939, 0, 0, "-", "signal"], [1788, 5, 1, "", "signbit"], [1789, 5, 1, "", "sin"], [1790, 5, 1, "", "sinc"], [1791, 5, 1, "", "sinh"], [1792, 5, 1, "", "slice_scatter"], [1793, 5, 1, "", "slogdet"], [1794, 5, 1, "", "smm"], [1795, 5, 1, "", "softmax"], [1796, 5, 1, "", "sort"], [1940, 0, 0, "-", "sparse"], [1806, 5, 1, "", "sparse_bsc_tensor"], [1807, 5, 1, "", "sparse_bsr_tensor"], [1808, 5, 1, "", "sparse_compressed_tensor"], [1809, 5, 1, "", "sparse_coo_tensor"], [1810, 5, 1, "", "sparse_csc_tensor"], [1811, 5, 1, "", "sparse_csr_tensor"], [1941, 0, 0, "-", "special"], [1812, 5, 1, "", "split"], [1813, 5, 1, "", "sqrt"], [1814, 5, 1, "", "square"], [1815, 5, 1, "", "squeeze"], [1816, 5, 1, "", "sspaddmm"], [1817, 5, 1, "", "stack"], [1818, 5, 1, "", "std"], [1819, 5, 1, "", "std_mean"], [1820, 5, 1, "", "stft"], [1948, 0, 0, "-", "storage"], [1821, 5, 1, "", "sub"], [1822, 5, 1, "", "subtract"], [1823, 5, 1, "", "sum"], [1824, 5, 1, "", "svd"], [1825, 5, 1, "", "svd_lowrank"], [1826, 5, 1, "", "swapaxes"], [1827, 5, 1, "", "swapdims"], [1828, 5, 1, "", "sym_float"], [1829, 5, 1, "", "sym_int"], [1830, 5, 1, "", "sym_ite"], [1831, 5, 1, "", "sym_max"], [1832, 5, 1, "", "sym_min"], [1833, 5, 1, "", "sym_not"], [1834, 5, 1, "", "t"], [1835, 5, 1, "", "take"], [1836, 5, 1, "", "take_along_dim"], [1837, 5, 1, "", "tan"], [1838, 5, 1, "", "tanh"], [1839, 5, 1, "", "tensor"], [1840, 5, 1, "", "tensor_split"], [1841, 5, 1, "", "tensordot"], [1947, 0, 0, "-", "testing"], [1842, 5, 1, "", "tile"], [1843, 5, 1, "", "topk"], [1948, 0, 0, "-", "torch_version"], [1844, 5, 1, "", "trace"], [1845, 5, 1, "", "transpose"], [1846, 5, 1, "", "trapezoid"], [1847, 5, 1, "", "trapz"], [1848, 5, 1, "", "triangular_solve"], [1849, 5, 1, "", "tril"], [1850, 5, 1, "", "tril_indices"], [1851, 5, 1, "", "triu"], [1852, 5, 1, "", "triu_indices"], [1853, 5, 1, "", "true_divide"], [1854, 5, 1, "", "trunc"], [1948, 0, 0, "-", "types"], [1855, 5, 1, "", "unbind"], [1856, 5, 1, "", "unflatten"], [1857, 5, 1, "", "unique"], [1858, 5, 1, "", "unique_consecutive"], [1859, 5, 1, "", "unravel_index"], [1860, 5, 1, "", "unsqueeze"], [1861, 5, 1, "", "use_deterministic_algorithms"], [1973, 0, 0, "-", "utils"], [1866, 5, 1, "", "vander"], [1867, 5, 1, "", "var"], [1868, 5, 1, "", "var_mean"], [1869, 5, 1, "", "vdot"], [1948, 0, 0, "-", "version"], [1870, 5, 1, "", "view_as_complex"], [1871, 5, 1, "", "view_as_real"], [1872, 5, 1, "", "vmap"], [1873, 5, 1, "", "vsplit"], [1874, 5, 1, "", "vstack"], [1875, 5, 1, "", "where"], [1876, 5, 1, "", "xlogy"], [1877, 5, 1, "", "zeros"], [1878, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1942, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1942, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1942, 2, 1, "", "dtype"]], "torch.CharStorage": [[1942, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1942, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1942, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1942, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1942, 2, 1, "", "dtype"]], "torch.Generator": [[79, 2, 1, "", "device"], [79, 3, 1, "", "get_state"], [79, 3, 1, "", "initial_seed"], [79, 3, 1, "", "manual_seed"], [79, 3, 1, "", "seed"], [79, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1942, 2, 1, "", "dtype"]], "torch.IntStorage": [[1942, 2, 1, "", "dtype"]], "torch.LongStorage": [[1942, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1942, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1942, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1942, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1942, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1942, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1942, 2, 1, "", "dtype"]], "torch.Tag": [[1948, 4, 1, "", "name"]], "torch.Tensor": [[1946, 2, 1, "", "H"], [1946, 2, 1, "", "T"], [80, 3, 1, "", "abs"], [81, 3, 1, "", "abs_"], [82, 3, 1, "", "absolute"], [83, 3, 1, "", "absolute_"], [84, 3, 1, "", "acos"], [85, 3, 1, "", "acos_"], [86, 3, 1, "", "acosh"], [87, 3, 1, "", "acosh_"], [88, 3, 1, "", "add"], [89, 3, 1, "", "add_"], [90, 3, 1, "", "addbmm"], [91, 3, 1, "", "addbmm_"], [92, 3, 1, "", "addcdiv"], [93, 3, 1, "", "addcdiv_"], [94, 3, 1, "", "addcmul"], [95, 3, 1, "", "addcmul_"], [96, 3, 1, "", "addmm"], [97, 3, 1, "", "addmm_"], [98, 3, 1, "", "addmv"], [99, 3, 1, "", "addmv_"], [100, 3, 1, "", "addr"], [101, 3, 1, "", "addr_"], [102, 3, 1, "", "adjoint"], [1898, 3, 1, "", "align_as"], [1898, 3, 1, "", "align_to"], [103, 3, 1, "", "all"], [104, 3, 1, "", "allclose"], [105, 3, 1, "", "amax"], [106, 3, 1, "", "amin"], [107, 3, 1, "", "aminmax"], [108, 3, 1, "", "angle"], [109, 3, 1, "", "any"], [110, 3, 1, "", "apply_"], [111, 3, 1, "", "arccos"], [112, 3, 1, "", "arccos_"], [113, 3, 1, "", "arccosh"], [114, 3, 1, "", "arccosh_"], [115, 3, 1, "", "arcsin"], [116, 3, 1, "", "arcsin_"], [117, 3, 1, "", "arcsinh"], [118, 3, 1, "", "arcsinh_"], [119, 3, 1, "", "arctan"], [120, 3, 1, "", "arctan2"], [121, 3, 1, "", "arctan2_"], [122, 3, 1, "", "arctan_"], [123, 3, 1, "", "arctanh"], [124, 3, 1, "", "arctanh_"], [125, 3, 1, "", "argmax"], [126, 3, 1, "", "argmin"], [127, 3, 1, "", "argsort"], [128, 3, 1, "", "argwhere"], [129, 3, 1, "", "as_strided"], [130, 3, 1, "", "as_subclass"], [131, 3, 1, "", "asin"], [132, 3, 1, "", "asin_"], [133, 3, 1, "", "asinh"], [134, 3, 1, "", "asinh_"], [135, 3, 1, "", "atan"], [136, 3, 1, "", "atan2"], [137, 3, 1, "", "atan2_"], [138, 3, 1, "", "atan_"], [139, 3, 1, "", "atanh"], [140, 3, 1, "", "atanh_"], [141, 3, 1, "", "backward"], [142, 3, 1, "", "baddbmm"], [143, 3, 1, "", "baddbmm_"], [144, 3, 1, "", "bernoulli"], [145, 3, 1, "", "bernoulli_"], [146, 3, 1, "", "bfloat16"], [147, 3, 1, "", "bincount"], [148, 3, 1, "", "bitwise_and"], [149, 3, 1, "", "bitwise_and_"], [150, 3, 1, "", "bitwise_left_shift"], [151, 3, 1, "", "bitwise_left_shift_"], [152, 3, 1, "", "bitwise_not"], [153, 3, 1, "", "bitwise_not_"], [154, 3, 1, "", "bitwise_or"], [155, 3, 1, "", "bitwise_or_"], [156, 3, 1, "", "bitwise_right_shift"], [157, 3, 1, "", "bitwise_right_shift_"], [158, 3, 1, "", "bitwise_xor"], [159, 3, 1, "", "bitwise_xor_"], [160, 3, 1, "", "bmm"], [161, 3, 1, "", "bool"], [162, 3, 1, "", "broadcast_to"], [163, 3, 1, "", "byte"], [164, 3, 1, "", "cauchy_"], [165, 3, 1, "", "ccol_indices"], [166, 3, 1, "", "cdouble"], [167, 3, 1, "", "ceil"], [168, 3, 1, "", "ceil_"], [169, 3, 1, "", "cfloat"], [170, 3, 1, "", "chalf"], [171, 3, 1, "", "char"], [172, 3, 1, "", "cholesky"], [173, 3, 1, "", "cholesky_inverse"], [174, 3, 1, "", "cholesky_solve"], [175, 3, 1, "", "chunk"], [176, 3, 1, "", "clamp"], [177, 3, 1, "", "clamp_"], [178, 3, 1, "", "clip"], [179, 3, 1, "", "clip_"], [180, 3, 1, "", "clone"], [181, 3, 1, "", "coalesce"], [182, 3, 1, "", "col_indices"], [183, 3, 1, "", "conj"], [184, 3, 1, "", "conj_physical"], [185, 3, 1, "", "conj_physical_"], [186, 3, 1, "", "contiguous"], [187, 3, 1, "", "copy_"], [188, 3, 1, "", "copysign"], [189, 3, 1, "", "copysign_"], [190, 3, 1, "", "corrcoef"], [191, 3, 1, "", "cos"], [192, 3, 1, "", "cos_"], [193, 3, 1, "", "cosh"], [194, 3, 1, "", "cosh_"], [195, 3, 1, "", "count_nonzero"], [196, 3, 1, "", "cov"], [197, 3, 1, "", "cpu"], [198, 3, 1, "", "cross"], [199, 3, 1, "", "crow_indices"], [200, 3, 1, "", "cuda"], [201, 3, 1, "", "cummax"], [202, 3, 1, "", "cummin"], [203, 3, 1, "", "cumprod"], [204, 3, 1, "", "cumprod_"], [205, 3, 1, "", "cumsum"], [206, 3, 1, "", "cumsum_"], [207, 3, 1, "", "data_ptr"], [208, 3, 1, "", "deg2rad"], [209, 3, 1, "", "dense_dim"], [210, 3, 1, "", "dequantize"], [211, 3, 1, "", "det"], [212, 3, 1, "", "detach"], [213, 3, 1, "", "detach_"], [214, 2, 1, "", "device"], [215, 3, 1, "", "diag"], [216, 3, 1, "", "diag_embed"], [217, 3, 1, "", "diagflat"], [218, 3, 1, "", "diagonal"], [219, 3, 1, "", "diagonal_scatter"], [220, 3, 1, "", "diff"], [221, 3, 1, "", "digamma"], [222, 3, 1, "", "digamma_"], [223, 3, 1, "", "dim"], [224, 3, 1, "", "dim_order"], [225, 3, 1, "", "dist"], [226, 3, 1, "", "div"], [227, 3, 1, "", "div_"], [228, 3, 1, "", "divide"], [229, 3, 1, "", "divide_"], [230, 3, 1, "", "dot"], [231, 3, 1, "", "double"], [232, 3, 1, "", "dsplit"], [233, 3, 1, "", "element_size"], [234, 3, 1, "", "eq"], [235, 3, 1, "", "eq_"], [236, 3, 1, "", "equal"], [237, 3, 1, "", "erf"], [238, 3, 1, "", "erf_"], [239, 3, 1, "", "erfc"], [240, 3, 1, "", "erfc_"], [241, 3, 1, "", "erfinv"], [242, 3, 1, "", "erfinv_"], [243, 3, 1, "", "exp"], [244, 3, 1, "", "exp_"], [245, 3, 1, "", "expand"], [246, 3, 1, "", "expand_as"], [247, 3, 1, "", "expm1"], [248, 3, 1, "", "expm1_"], [249, 3, 1, "", "exponential_"], [250, 3, 1, "", "fill_"], [251, 3, 1, "", "fill_diagonal_"], [252, 3, 1, "", "fix"], [253, 3, 1, "", "fix_"], [254, 3, 1, "", "flatten"], [255, 3, 1, "", "flip"], [256, 3, 1, "", "fliplr"], [257, 3, 1, "", "flipud"], [258, 3, 1, "", "float"], [259, 3, 1, "", "float_power"], [260, 3, 1, "", "float_power_"], [261, 3, 1, "", "floor"], [262, 3, 1, "", "floor_"], [263, 3, 1, "", "floor_divide"], [264, 3, 1, "", "floor_divide_"], [265, 3, 1, "", "fmax"], [266, 3, 1, "", "fmin"], [267, 3, 1, "", "fmod"], [268, 3, 1, "", "fmod_"], [269, 3, 1, "", "frac"], [270, 3, 1, "", "frac_"], [271, 3, 1, "", "frexp"], [272, 3, 1, "", "gather"], [273, 3, 1, "", "gcd"], [274, 3, 1, "", "gcd_"], [275, 3, 1, "", "ge"], [276, 3, 1, "", "ge_"], [277, 3, 1, "", "geometric_"], [278, 3, 1, "", "geqrf"], [279, 3, 1, "", "ger"], [280, 3, 1, "", "get_device"], [281, 2, 1, "", "grad"], [282, 3, 1, "", "greater"], [283, 3, 1, "", "greater_"], [284, 3, 1, "", "greater_equal"], [285, 3, 1, "", "greater_equal_"], [286, 3, 1, "", "gt"], [287, 3, 1, "", "gt_"], [288, 3, 1, "", "half"], [289, 3, 1, "", "hardshrink"], [290, 3, 1, "", "heaviside"], [291, 3, 1, "", "histc"], [292, 3, 1, "", "histogram"], [293, 3, 1, "", "hsplit"], [294, 3, 1, "", "hypot"], [295, 3, 1, "", "hypot_"], [296, 3, 1, "", "i0"], [297, 3, 1, "", "i0_"], [298, 3, 1, "", "igamma"], [299, 3, 1, "", "igamma_"], [300, 3, 1, "", "igammac"], [301, 3, 1, "", "igammac_"], [302, 2, 1, "", "imag"], [303, 3, 1, "", "index_add"], [304, 3, 1, "", "index_add_"], [305, 3, 1, "", "index_copy"], [306, 3, 1, "", "index_copy_"], [307, 3, 1, "", "index_fill"], [308, 3, 1, "", "index_fill_"], [309, 3, 1, "", "index_put"], [310, 3, 1, "", "index_put_"], [311, 3, 1, "", "index_reduce"], [312, 3, 1, "", "index_reduce_"], [313, 3, 1, "", "index_select"], [314, 3, 1, "", "indices"], [315, 3, 1, "", "inner"], [316, 3, 1, "", "int"], [317, 3, 1, "", "int_repr"], [318, 3, 1, "", "inverse"], [319, 3, 1, "", "is_coalesced"], [320, 3, 1, "", "is_complex"], [321, 3, 1, "", "is_conj"], [322, 3, 1, "", "is_contiguous"], [323, 2, 1, "", "is_cuda"], [324, 3, 1, "", "is_floating_point"], [325, 3, 1, "", "is_inference"], [326, 2, 1, "", "is_leaf"], [327, 2, 1, "", "is_meta"], [328, 3, 1, "", "is_pinned"], [329, 2, 1, "", "is_quantized"], [330, 3, 1, "", "is_set_to"], [331, 3, 1, "", "is_shared"], [332, 3, 1, "", "is_signed"], [333, 2, 1, "", "is_sparse"], [334, 2, 1, "", "is_sparse_csr"], [335, 3, 1, "", "isclose"], [336, 3, 1, "", "isfinite"], [337, 3, 1, "", "isinf"], [338, 3, 1, "", "isnan"], [339, 3, 1, "", "isneginf"], [340, 3, 1, "", "isposinf"], [341, 3, 1, "", "isreal"], [342, 3, 1, "", "istft"], [343, 3, 1, "", "item"], [344, 2, 1, "", "itemsize"], [345, 3, 1, "", "kthvalue"], [346, 3, 1, "", "lcm"], [347, 3, 1, "", "lcm_"], [348, 3, 1, "", "ldexp"], [349, 3, 1, "", "ldexp_"], [350, 3, 1, "", "le"], [351, 3, 1, "", "le_"], [352, 3, 1, "", "lerp"], [353, 3, 1, "", "lerp_"], [354, 3, 1, "", "less"], [355, 3, 1, "", "less_"], [356, 3, 1, "", "less_equal"], [357, 3, 1, "", "less_equal_"], [358, 3, 1, "", "lgamma"], [359, 3, 1, "", "lgamma_"], [360, 3, 1, "", "log"], [361, 3, 1, "", "log10"], [362, 3, 1, "", "log10_"], [363, 3, 1, "", "log1p"], [364, 3, 1, "", "log1p_"], [365, 3, 1, "", "log2"], [366, 3, 1, "", "log2_"], [367, 3, 1, "", "log_"], [368, 3, 1, "", "log_normal_"], [369, 3, 1, "", "logaddexp"], [370, 3, 1, "", "logaddexp2"], [371, 3, 1, "", "logcumsumexp"], [372, 3, 1, "", "logdet"], [373, 3, 1, "", "logical_and"], [374, 3, 1, "", "logical_and_"], [375, 3, 1, "", "logical_not"], [376, 3, 1, "", "logical_not_"], [377, 3, 1, "", "logical_or"], [378, 3, 1, "", "logical_or_"], [379, 3, 1, "", "logical_xor"], [380, 3, 1, "", "logical_xor_"], [381, 3, 1, "", "logit"], [382, 3, 1, "", "logit_"], [383, 3, 1, "", "logsumexp"], [384, 3, 1, "", "long"], [385, 3, 1, "", "lt"], [386, 3, 1, "", "lt_"], [387, 3, 1, "", "lu"], [388, 3, 1, "", "lu_solve"], [1946, 2, 1, "", "mH"], [1946, 2, 1, "", "mT"], [389, 3, 1, "", "map_"], [390, 3, 1, "", "masked_fill"], [391, 3, 1, "", "masked_fill_"], [392, 3, 1, "", "masked_scatter"], [393, 3, 1, "", "masked_scatter_"], [394, 3, 1, "", "masked_select"], [395, 3, 1, "", "matmul"], [396, 3, 1, "", "matrix_exp"], [397, 3, 1, "", "matrix_power"], [398, 3, 1, "", "max"], [399, 3, 1, "", "maximum"], [400, 3, 1, "", "mean"], [401, 3, 1, "", "median"], [402, 3, 1, "", "min"], [403, 3, 1, "", "minimum"], [404, 3, 1, "", "mm"], [405, 3, 1, "", "mode"], [406, 3, 1, "", "moveaxis"], [407, 3, 1, "", "movedim"], [408, 3, 1, "", "msort"], [409, 3, 1, "", "mul"], [410, 3, 1, "", "mul_"], [411, 3, 1, "", "multinomial"], [412, 3, 1, "", "multiply"], [413, 3, 1, "", "multiply_"], [414, 3, 1, "", "mv"], [415, 3, 1, "", "mvlgamma"], [416, 3, 1, "", "mvlgamma_"], [1898, 2, 1, "", "names"], [417, 3, 1, "", "nan_to_num"], [418, 3, 1, "", "nan_to_num_"], [419, 3, 1, "", "nanmean"], [420, 3, 1, "", "nanmedian"], [421, 3, 1, "", "nanquantile"], [422, 3, 1, "", "nansum"], [423, 3, 1, "", "narrow"], [424, 3, 1, "", "narrow_copy"], [425, 2, 1, "", "nbytes"], [426, 2, 1, "", "ndim"], [427, 3, 1, "", "ndimension"], [428, 3, 1, "", "ne"], [429, 3, 1, "", "ne_"], [430, 3, 1, "", "neg"], [431, 3, 1, "", "neg_"], [432, 3, 1, "", "negative"], [433, 3, 1, "", "negative_"], [434, 3, 1, "", "nelement"], [435, 3, 1, "", "new_empty"], [436, 3, 1, "", "new_full"], [437, 3, 1, "", "new_ones"], [438, 3, 1, "", "new_tensor"], [439, 3, 1, "", "new_zeros"], [440, 3, 1, "", "nextafter"], [441, 3, 1, "", "nextafter_"], [442, 3, 1, "", "nonzero"], [443, 3, 1, "", "norm"], [444, 3, 1, "", "normal_"], [445, 3, 1, "", "not_equal"], [446, 3, 1, "", "not_equal_"], [447, 3, 1, "", "numel"], [448, 3, 1, "", "numpy"], [449, 3, 1, "", "orgqr"], [450, 3, 1, "", "ormqr"], [451, 3, 1, "", "outer"], [452, 3, 1, "", "permute"], [453, 3, 1, "", "pin_memory"], [454, 3, 1, "", "pinverse"], [455, 3, 1, "", "polygamma"], [456, 3, 1, "", "polygamma_"], [457, 3, 1, "", "positive"], [458, 3, 1, "", "pow"], [459, 3, 1, "", "pow_"], [460, 3, 1, "", "prod"], [461, 3, 1, "", "put_"], [462, 3, 1, "", "q_per_channel_axis"], [463, 3, 1, "", "q_per_channel_scales"], [464, 3, 1, "", "q_per_channel_zero_points"], [465, 3, 1, "", "q_scale"], [466, 3, 1, "", "q_zero_point"], [467, 3, 1, "", "qr"], [468, 3, 1, "", "qscheme"], [469, 3, 1, "", "quantile"], [470, 3, 1, "", "rad2deg"], [471, 3, 1, "", "random_"], [472, 3, 1, "", "ravel"], [473, 2, 1, "", "real"], [474, 3, 1, "", "reciprocal"], [475, 3, 1, "", "reciprocal_"], [476, 3, 1, "", "record_stream"], [1898, 3, 1, "", "refine_names"], [477, 3, 1, "", "register_hook"], [478, 3, 1, "", "register_post_accumulate_grad_hook"], [479, 3, 1, "", "remainder"], [480, 3, 1, "", "remainder_"], [1898, 3, 1, "", "rename"], [1898, 3, 1, "", "rename_"], [481, 3, 1, "", "renorm"], [482, 3, 1, "", "renorm_"], [483, 3, 1, "", "repeat"], [484, 3, 1, "", "repeat_interleave"], [485, 2, 1, "", "requires_grad"], [486, 3, 1, "", "requires_grad_"], [487, 3, 1, "", "reshape"], [488, 3, 1, "", "reshape_as"], [489, 3, 1, "", "resize_"], [490, 3, 1, "", "resize_as_"], [491, 3, 1, "", "resolve_conj"], [492, 3, 1, "", "resolve_neg"], [493, 3, 1, "", "retain_grad"], [494, 2, 1, "", "retains_grad"], [495, 3, 1, "", "roll"], [496, 3, 1, "", "rot90"], [497, 3, 1, "", "round"], [498, 3, 1, "", "round_"], [499, 3, 1, "", "row_indices"], [500, 3, 1, "", "rsqrt"], [501, 3, 1, "", "rsqrt_"], [502, 3, 1, "", "scatter"], [503, 3, 1, "", "scatter_"], [504, 3, 1, "", "scatter_add"], [505, 3, 1, "", "scatter_add_"], [506, 3, 1, "", "scatter_reduce"], [507, 3, 1, "", "scatter_reduce_"], [508, 3, 1, "", "select"], [509, 3, 1, "", "select_scatter"], [510, 3, 1, "", "set_"], [511, 3, 1, "", "sgn"], [512, 3, 1, "", "sgn_"], [513, 2, 1, "", "shape"], [514, 3, 1, "", "share_memory_"], [515, 3, 1, "", "short"], [516, 3, 1, "", "sigmoid"], [517, 3, 1, "", "sigmoid_"], [518, 3, 1, "", "sign"], [519, 3, 1, "", "sign_"], [520, 3, 1, "", "signbit"], [521, 3, 1, "", "sin"], [522, 3, 1, "", "sin_"], [523, 3, 1, "", "sinc"], [524, 3, 1, "", "sinc_"], [525, 3, 1, "", "sinh"], [526, 3, 1, "", "sinh_"], [527, 3, 1, "", "size"], [528, 3, 1, "", "slice_scatter"], [529, 3, 1, "", "slogdet"], [530, 3, 1, "", "smm"], [531, 3, 1, "", "softmax"], [532, 3, 1, "", "sort"], [533, 3, 1, "", "sparse_dim"], [534, 3, 1, "", "sparse_mask"], [535, 3, 1, "", "sparse_resize_"], [536, 3, 1, "", "sparse_resize_and_clear_"], [537, 3, 1, "", "split"], [538, 3, 1, "", "sqrt"], [539, 3, 1, "", "sqrt_"], [540, 3, 1, "", "square"], [541, 3, 1, "", "square_"], [542, 3, 1, "", "squeeze"], [543, 3, 1, "", "squeeze_"], [544, 3, 1, "", "sspaddmm"], [545, 3, 1, "", "std"], [546, 3, 1, "", "stft"], [547, 3, 1, "", "storage"], [548, 3, 1, "", "storage_offset"], [549, 3, 1, "", "storage_type"], [550, 3, 1, "", "stride"], [551, 3, 1, "", "sub"], [552, 3, 1, "", "sub_"], [553, 3, 1, "", "subtract"], [554, 3, 1, "", "subtract_"], [555, 3, 1, "", "sum"], [556, 3, 1, "", "sum_to_size"], [557, 3, 1, "", "svd"], [558, 3, 1, "", "swapaxes"], [559, 3, 1, "", "swapdims"], [560, 3, 1, "", "t"], [561, 3, 1, "", "t_"], [562, 3, 1, "", "take"], [563, 3, 1, "", "take_along_dim"], [564, 3, 1, "", "tan"], [565, 3, 1, "", "tan_"], [566, 3, 1, "", "tanh"], [567, 3, 1, "", "tanh_"], [568, 3, 1, "", "tensor_split"], [569, 3, 1, "", "tile"], [570, 3, 1, "", "to"], [571, 3, 1, "", "to_dense"], [572, 3, 1, "", "to_mkldnn"], [573, 3, 1, "", "to_sparse"], [574, 3, 1, "", "to_sparse_bsc"], [575, 3, 1, "", "to_sparse_bsr"], [576, 3, 1, "", "to_sparse_coo"], [577, 3, 1, "", "to_sparse_csc"], [578, 3, 1, "", "to_sparse_csr"], [579, 3, 1, "", "tolist"], [580, 3, 1, "", "topk"], [581, 3, 1, "", "trace"], [582, 3, 1, "", "transpose"], [583, 3, 1, "", "transpose_"], [584, 3, 1, "", "triangular_solve"], [585, 3, 1, "", "tril"], [586, 3, 1, "", "tril_"], [587, 3, 1, "", "triu"], [588, 3, 1, "", "triu_"], [589, 3, 1, "", "true_divide"], [590, 3, 1, "", "true_divide_"], [591, 3, 1, "", "trunc"], [592, 3, 1, "", "trunc_"], [593, 3, 1, "", "type"], [594, 3, 1, "", "type_as"], [595, 3, 1, "", "unbind"], [596, 3, 1, "", "unflatten"], [597, 3, 1, "", "unfold"], [598, 3, 1, "", "uniform_"], [599, 3, 1, "", "unique"], [600, 3, 1, "", "unique_consecutive"], [601, 3, 1, "", "unsqueeze"], [602, 3, 1, "", "unsqueeze_"], [603, 3, 1, "", "untyped_storage"], [604, 3, 1, "", "values"], [605, 3, 1, "", "var"], [606, 3, 1, "", "vdot"], [607, 3, 1, "", "view"], [608, 3, 1, "", "view_as"], [609, 3, 1, "", "vsplit"], [610, 3, 1, "", "where"], [611, 3, 1, "", "xlogy"], [612, 3, 1, "", "xlogy_"], [613, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1942, 3, 1, "", "bfloat16"], [1942, 3, 1, "", "bool"], [1942, 3, 1, "", "byte"], [1942, 3, 1, "", "char"], [1942, 3, 1, "", "clone"], [1942, 3, 1, "", "complex_double"], [1942, 3, 1, "", "complex_float"], [1942, 3, 1, "", "copy_"], [1942, 3, 1, "", "cpu"], [1942, 3, 1, "", "cuda"], [1942, 3, 1, "", "data_ptr"], [1942, 4, 1, "", "device"], [1942, 3, 1, "", "double"], [1942, 2, 1, "", "dtype"], [1942, 3, 1, "", "element_size"], [1942, 4, 1, "", "filename"], [1942, 3, 1, "", "fill_"], [1942, 3, 1, "", "float"], [1942, 3, 1, "", "float8_e4m3fn"], [1942, 3, 1, "", "float8_e5m2"], [1942, 3, 1, "", "from_buffer"], [1942, 3, 1, "", "from_file"], [1942, 3, 1, "", "get_device"], [1942, 3, 1, "", "half"], [1942, 3, 1, "", "hpu"], [1942, 3, 1, "", "int"], [1942, 4, 1, "", "is_cuda"], [1942, 4, 1, "", "is_hpu"], [1942, 3, 1, "", "is_pinned"], [1942, 3, 1, "", "is_shared"], [1942, 2, 1, "", "is_sparse"], [1942, 3, 1, "", "long"], [1942, 3, 1, "", "nbytes"], [1942, 3, 1, "", "pickle_storage_type"], [1942, 3, 1, "", "pin_memory"], [1942, 3, 1, "", "resize_"], [1942, 3, 1, "", "share_memory_"], [1942, 3, 1, "", "short"], [1942, 3, 1, "", "size"], [1942, 3, 1, "", "tolist"], [1942, 3, 1, "", "type"], [1942, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1942, 3, 1, "", "bfloat16"], [1942, 3, 1, "", "bool"], [1942, 3, 1, "", "byte"], [1942, 3, 1, "", "byteswap"], [1942, 3, 1, "", "char"], [1942, 3, 1, "", "clone"], [1942, 3, 1, "", "complex_double"], [1942, 3, 1, "", "complex_float"], [1942, 3, 1, "", "copy_"], [1942, 3, 1, "", "cpu"], [1942, 3, 1, "", "cuda"], [1942, 3, 1, "", "data_ptr"], [1942, 2, 1, "", "device"], [1942, 3, 1, "", "double"], [1942, 3, 1, "", "element_size"], [1942, 4, 1, "", "filename"], [1942, 3, 1, "", "fill_"], [1942, 3, 1, "", "float"], [1942, 3, 1, "", "float8_e4m3fn"], [1942, 3, 1, "", "float8_e5m2"], [1942, 3, 1, "", "from_buffer"], [1942, 3, 1, "", "from_file"], [1942, 3, 1, "", "get_device"], [1942, 3, 1, "", "half"], [1942, 3, 1, "", "hpu"], [1942, 3, 1, "", "int"], [1942, 4, 1, "", "is_cuda"], [1942, 4, 1, "", "is_hpu"], [1942, 3, 1, "", "is_pinned"], [1942, 3, 1, "", "is_shared"], [1942, 2, 1, "", "is_sparse"], [1942, 2, 1, "", "is_sparse_csr"], [1942, 3, 1, "", "long"], [1942, 3, 1, "", "mps"], [1942, 3, 1, "", "nbytes"], [1942, 3, 1, "", "new"], [1942, 3, 1, "", "pin_memory"], [1942, 3, 1, "", "resize_"], [1942, 3, 1, "", "share_memory_"], [1942, 3, 1, "", "short"], [1942, 3, 1, "", "size"], [1942, 3, 1, "", "tolist"], [1942, 3, 1, "", "type"], [1942, 3, 1, "", "untyped"]], "torch.__config__": [[13, 5, 1, "", "parallel_info"], [13, 5, 1, "", "show"]], "torch._higher_order_ops.cond": [[12, 5, 1, "", "cond"]], "torch._logging": [[670, 5, 1, "", "set_logs"]], "torch.amp": [[0, 0, 0, "-", "autocast_mode"]], "torch.ao": [[1931, 0, 0, "-", "nn"], [1931, 0, 0, "-", "ns"], [1931, 0, 0, "-", "pruning"], [1931, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1934, 0, 0, "-", "intrinsic"], [1934, 0, 0, "-", "qat"], [1931, 0, 0, "-", "quantizable"], [1931, 0, 0, "-", "quantized"], [1931, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[690, 1, 1, "", "BNReLU2d"], [691, 1, 1, "", "BNReLU3d"], [692, 1, 1, "", "ConvBn1d"], [693, 1, 1, "", "ConvBn2d"], [694, 1, 1, "", "ConvBn3d"], [695, 1, 1, "", "ConvBnReLU1d"], [696, 1, 1, "", "ConvBnReLU2d"], [697, 1, 1, "", "ConvBnReLU3d"], [698, 1, 1, "", "ConvReLU1d"], [699, 1, 1, "", "ConvReLU2d"], [700, 1, 1, "", "ConvReLU3d"], [701, 1, 1, "", "LinearReLU"], [1934, 0, 0, "-", "modules"], [1934, 0, 0, "-", "qat"], [1934, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.modules": [[1931, 0, 0, "-", "fused"]], "torch.ao.nn.intrinsic.qat": [[702, 1, 1, "", "ConvBn1d"], [703, 1, 1, "", "ConvBn2d"], [704, 1, 1, "", "ConvBn3d"], [705, 1, 1, "", "ConvBnReLU1d"], [706, 1, 1, "", "ConvBnReLU2d"], [707, 1, 1, "", "ConvBnReLU3d"], [708, 1, 1, "", "ConvReLU2d"], [709, 1, 1, "", "ConvReLU3d"], [710, 1, 1, "", "LinearReLU"], [711, 1, 1, "", "freeze_bn_stats"], [1934, 0, 0, "-", "modules"], [712, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.qat.modules": [[1931, 0, 0, "-", "conv_fused"], [1931, 0, 0, "-", "linear_fused"], [1931, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized": [[713, 1, 1, "", "BNReLU2d"], [714, 1, 1, "", "BNReLU3d"], [715, 1, 1, "", "ConvReLU1d"], [716, 1, 1, "", "ConvReLU2d"], [717, 1, 1, "", "ConvReLU3d"], [718, 1, 1, "", "LinearReLU"], [1934, 0, 0, "-", "dynamic"], [1934, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[719, 1, 1, "", "LinearReLU"], [1934, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1931, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules": [[1931, 0, 0, "-", "bn_relu"], [1931, 0, 0, "-", "conv_add"], [1931, 0, 0, "-", "conv_relu"], [1931, 0, 0, "-", "linear_relu"]], "torch.ao.nn.qat": [[720, 1, 1, "", "Conv2d"], [721, 1, 1, "", "Conv3d"], [722, 1, 1, "", "Linear"], [1934, 0, 0, "-", "dynamic"], [1934, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[722, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[723, 1, 1, "", "Linear"], [1934, 0, 0, "-", "modules"]], "torch.ao.nn.qat.dynamic.modules": [[1931, 0, 0, "-", "linear"]], "torch.ao.nn.qat.modules": [[1931, 0, 0, "-", "conv"], [1931, 0, 0, "-", "embedding_ops"], [1931, 0, 0, "-", "linear"]], "torch.ao.nn.quantizable": [[724, 1, 1, "", "LSTM"], [725, 1, 1, "", "MultiheadAttention"], [1931, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[725, 3, 1, "", "dequantize"], [725, 3, 1, "", "forward"]], "torch.ao.nn.quantizable.modules": [[1931, 0, 0, "-", "activation"], [1931, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized": [[726, 1, 1, "", "BatchNorm2d"], [727, 1, 1, "", "BatchNorm3d"], [728, 1, 1, "", "Conv1d"], [729, 1, 1, "", "Conv2d"], [730, 1, 1, "", "Conv3d"], [731, 1, 1, "", "ConvTranspose1d"], [732, 1, 1, "", "ConvTranspose2d"], [733, 1, 1, "", "ConvTranspose3d"], [734, 1, 1, "", "ELU"], [735, 1, 1, "", "Embedding"], [736, 1, 1, "", "EmbeddingBag"], [737, 1, 1, "", "FXFloatFunctional"], [738, 1, 1, "", "FloatFunctional"], [739, 1, 1, "", "GroupNorm"], [740, 1, 1, "", "Hardswish"], [741, 1, 1, "", "InstanceNorm1d"], [742, 1, 1, "", "InstanceNorm2d"], [743, 1, 1, "", "InstanceNorm3d"], [744, 1, 1, "", "LayerNorm"], [745, 1, 1, "", "LeakyReLU"], [746, 1, 1, "", "Linear"], [747, 1, 1, "", "QFunctional"], [748, 1, 1, "", "ReLU6"], [749, 1, 1, "", "Sigmoid"], [1934, 0, 0, "-", "dynamic"], [1934, 0, 0, "-", "functional"], [1934, 0, 0, "-", "modules"], [1931, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[728, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[729, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[730, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[735, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[736, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[746, 3, 1, "", "from_float"], [746, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[750, 1, 1, "", "GRU"], [751, 1, 1, "", "GRUCell"], [752, 1, 1, "", "LSTM"], [753, 1, 1, "", "LSTMCell"], [754, 1, 1, "", "Linear"], [755, 1, 1, "", "RNNCell"], [1934, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[754, 3, 1, "", "from_float"], [754, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic.modules": [[1931, 0, 0, "-", "conv"], [1931, 0, 0, "-", "linear"], [1931, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized.functional": [[756, 1, 1, "", "adaptive_avg_pool2d"], [757, 1, 1, "", "adaptive_avg_pool3d"], [758, 1, 1, "", "avg_pool2d"], [759, 1, 1, "", "avg_pool3d"], [760, 1, 1, "", "celu"], [761, 1, 1, "", "clamp"], [762, 1, 1, "", "conv1d"], [763, 1, 1, "", "conv2d"], [764, 1, 1, "", "conv3d"], [765, 1, 1, "", "elu"], [766, 1, 1, "", "hardsigmoid"], [767, 1, 1, "", "hardswish"], [768, 1, 1, "", "hardtanh"], [769, 1, 1, "", "interpolate"], [770, 1, 1, "", "leaky_relu"], [771, 1, 1, "", "linear"], [772, 1, 1, "", "max_pool1d"], [773, 1, 1, "", "max_pool2d"], [774, 1, 1, "", "threshold"], [775, 1, 1, "", "upsample"], [776, 1, 1, "", "upsample_bilinear"], [777, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.modules": [[1931, 0, 0, "-", "activation"], [1931, 0, 0, "-", "batchnorm"], [1931, 0, 0, "-", "conv"], [1931, 0, 0, "-", "dropout"], [1931, 0, 0, "-", "embedding_ops"], [1931, 0, 0, "-", "functional_modules"], [1931, 0, 0, "-", "linear"], [1931, 0, 0, "-", "normalization"], [1931, 0, 0, "-", "rnn"], [1931, 0, 0, "-", "utils"]], "torch.ao.nn.quantized.reference": [[1931, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.reference.modules": [[1931, 0, 0, "-", "conv"], [1931, 0, 0, "-", "linear"], [1931, 0, 0, "-", "rnn"], [1931, 0, 0, "-", "sparse"], [1931, 0, 0, "-", "utils"]], "torch.ao.nn.sparse": [[1931, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1931, 0, 0, "-", "dynamic"], [1931, 0, 0, "-", "linear"], [1931, 0, 0, "-", "utils"]], "torch.ao.nn.sparse.quantized.dynamic": [[1931, 0, 0, "-", "linear"]], "torch.ao.ns": [[1949, 0, 0, "-", "_numeric_suite"], [1950, 0, 0, "-", "_numeric_suite_fx"], [1931, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1949, 1, 1, "", "Logger"], [1949, 1, 1, "", "OutputLogger"], [1949, 1, 1, "", "Shadow"], [1949, 1, 1, "", "ShadowLogger"], [1949, 5, 1, "", "compare_model_outputs"], [1949, 5, 1, "", "compare_model_stub"], [1949, 5, 1, "", "compare_weights"], [1949, 5, 1, "", "get_logger_dict"], [1949, 5, 1, "", "get_matching_activations"], [1949, 5, 1, "", "prepare_model_outputs"], [1949, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1949, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1949, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1949, 3, 1, "", "add"], [1949, 3, 1, "", "add_relu"], [1949, 3, 1, "", "add_scalar"], [1949, 3, 1, "", "cat"], [1949, 3, 1, "", "forward"], [1949, 3, 1, "", "mul"], [1949, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1949, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1950, 1, 1, "", "NSTracer"], [1950, 1, 1, "", "OutputComparisonLogger"], [1950, 1, 1, "", "OutputLogger"], [1950, 5, 1, "", "add_loggers"], [1950, 5, 1, "", "add_shadow_loggers"], [1950, 5, 1, "", "convert_n_shadows_model"], [1950, 5, 1, "", "extend_logger_results_with_comparison"], [1950, 5, 1, "", "extract_logger_info"], [1950, 5, 1, "", "extract_results_n_shadows_model"], [1950, 5, 1, "", "extract_shadow_logger_info"], [1950, 5, 1, "", "extract_weights"], [1950, 5, 1, "", "loggers_set_enabled"], [1950, 5, 1, "", "loggers_set_save_activations"], [1950, 5, 1, "", "prepare_n_shadows_model"], [1950, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1950, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1950, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1950, 3, 1, "", "forward"]], "torch.ao.ns.fx": [[1931, 0, 0, "-", "graph_matcher"], [1931, 0, 0, "-", "graph_passes"], [1931, 0, 0, "-", "mappings"], [1931, 0, 0, "-", "n_shadows_utils"], [1931, 0, 0, "-", "ns_types"], [1931, 0, 0, "-", "pattern_utils"], [1931, 0, 0, "-", "qconfig_multi_mapping"], [1931, 0, 0, "-", "utils"], [1931, 0, 0, "-", "weight_utils"]], "torch.ao.ns.fx.utils": [[1950, 5, 1, "", "compute_cosine_similarity"], [1950, 5, 1, "", "compute_normalized_l2_error"], [1950, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1931, 0, 0, "-", "scheduler"], [1931, 0, 0, "-", "sparsifier"]], "torch.ao.pruning.scheduler": [[1931, 0, 0, "-", "base_scheduler"], [1931, 0, 0, "-", "cubic_scheduler"], [1931, 0, 0, "-", "lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[1931, 0, 0, "-", "base_sparsifier"], [1931, 0, 0, "-", "nearly_diagonal_sparsifier"], [1931, 0, 0, "-", "utils"], [1931, 0, 0, "-", "weight_norm_sparsifier"]], "torch.ao.quantization": [[778, 1, 1, "", "DeQuantStub"], [779, 1, 1, "", "QuantStub"], [780, 1, 1, "", "QuantWrapper"], [781, 1, 1, "", "add_quant_dequant"], [1931, 0, 0, "-", "backend_config"], [787, 1, 1, "", "convert"], [788, 1, 1, "", "default_eval_fn"], [1931, 0, 0, "-", "fake_quantize"], [1931, 0, 0, "-", "fuse_modules"], [1931, 0, 0, "-", "fuser_method_mappings"], [1931, 0, 0, "-", "fx"], [1931, 0, 0, "-", "observer"], [828, 1, 1, "", "prepare"], [829, 1, 1, "", "prepare_qat"], [830, 1, 1, "", "propagate_qconfig_"], [1934, 0, 0, "-", "pt2e"], [1931, 0, 0, "-", "qconfig"], [1931, 0, 0, "-", "qconfig_mapping"], [1931, 0, 0, "-", "quant_type"], [1931, 0, 0, "-", "quantization_mappings"], [1931, 0, 0, "-", "quantize"], [848, 1, 1, "", "quantize_dynamic"], [1931, 0, 0, "-", "quantize_fx"], [1931, 0, 0, "-", "quantize_jit"], [1931, 0, 0, "-", "quantize_pt2e"], [853, 1, 1, "", "quantize_qat"], [1934, 0, 0, "-", "quantizer"], [1931, 0, 0, "-", "stubs"], [854, 1, 1, "", "swap_module"], [1931, 0, 0, "-", "utils"]], "torch.ao.quantization.backend_config": [[782, 1, 1, "", "BackendConfig"], [783, 1, 1, "", "BackendPatternConfig"], [784, 1, 1, "", "DTypeConfig"], [785, 1, 1, "", "DTypeWithConstraints"], [786, 1, 1, "", "ObservationType"], [1931, 0, 0, "-", "backend_config"], [1931, 0, 0, "-", "executorch"], [1931, 0, 0, "-", "fbgemm"], [1931, 0, 0, "-", "native"], [1931, 0, 0, "-", "observation_type"], [1931, 0, 0, "-", "onednn"], [1931, 0, 0, "-", "qnnpack"], [1931, 0, 0, "-", "tensorrt"], [1931, 0, 0, "-", "utils"], [1931, 0, 0, "-", "x86"]], "torch.ao.quantization.backend_config.BackendConfig": [[782, 4, 1, "", "configs"], [782, 3, 1, "", "from_dict"], [782, 3, 1, "", "set_backend_pattern_config"], [782, 3, 1, "", "set_backend_pattern_configs"], [782, 3, 1, "", "set_name"], [782, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[783, 3, 1, "", "add_dtype_config"], [783, 3, 1, "", "from_dict"], [783, 3, 1, "", "set_dtype_configs"], [783, 3, 1, "", "set_fused_module"], [783, 3, 1, "", "set_fuser_method"], [783, 3, 1, "", "set_observation_type"], [783, 3, 1, "", "set_pattern"], [783, 3, 1, "", "set_qat_module"], [783, 3, 1, "", "set_reference_quantized_module"], [783, 3, 1, "", "set_root_module"], [783, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[784, 3, 1, "", "from_dict"], [784, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[786, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [786, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [786, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[789, 1, 1, "", "FakeQuantize"], [790, 1, 1, "", "FakeQuantizeBase"], [791, 1, 1, "", "FixedQParamsFakeQuantize"], [792, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [793, 2, 1, "", "default_fake_quant"], [794, 2, 1, "", "default_fused_act_fake_quant"], [795, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [796, 2, 1, "", "default_fused_wt_fake_quant"], [797, 2, 1, "", "default_histogram_fake_quant"], [798, 2, 1, "", "default_per_channel_weight_fake_quant"], [799, 2, 1, "", "default_weight_fake_quant"], [800, 1, 1, "", "disable_fake_quant"], [801, 1, 1, "", "disable_observer"], [802, 1, 1, "", "enable_fake_quant"], [803, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fuse_modules": [[804, 1, 1, "", "fuse_modules"]], "torch.ao.quantization.fx": [[1931, 0, 0, "-", "convert"], [1931, 0, 0, "-", "custom_config"], [1931, 0, 0, "-", "fuse"], [1931, 0, 0, "-", "fuse_handler"], [1931, 0, 0, "-", "graph_module"], [1931, 0, 0, "-", "lower_to_fbgemm"], [1931, 0, 0, "-", "lower_to_qnnpack"], [1931, 0, 0, "-", "lstm_utils"], [1931, 0, 0, "-", "match_utils"], [1931, 0, 0, "-", "pattern_utils"], [1931, 0, 0, "-", "prepare"], [1931, 0, 0, "-", "qconfig_mapping_utils"], [1931, 0, 0, "-", "quantize_handler"], [1931, 0, 0, "-", "tracer"], [1931, 0, 0, "-", "utils"]], "torch.ao.quantization.fx.custom_config": [[805, 1, 1, "", "ConvertCustomConfig"], [806, 1, 1, "", "FuseCustomConfig"], [807, 1, 1, "", "PrepareCustomConfig"], [808, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[805, 3, 1, "", "from_dict"], [805, 3, 1, "", "set_observed_to_quantized_mapping"], [805, 3, 1, "", "set_preserved_attributes"], [805, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[806, 3, 1, "", "from_dict"], [806, 3, 1, "", "set_preserved_attributes"], [806, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[807, 3, 1, "", "from_dict"], [807, 3, 1, "", "set_float_to_observed_mapping"], [807, 3, 1, "", "set_input_quantized_indexes"], [807, 3, 1, "", "set_non_traceable_module_classes"], [807, 3, 1, "", "set_non_traceable_module_names"], [807, 3, 1, "", "set_output_quantized_indexes"], [807, 3, 1, "", "set_preserved_attributes"], [807, 3, 1, "", "set_standalone_module_class"], [807, 3, 1, "", "set_standalone_module_name"], [807, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[809, 1, 1, "", "HistogramObserver"], [810, 1, 1, "", "MinMaxObserver"], [811, 1, 1, "", "MovingAverageMinMaxObserver"], [812, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [813, 1, 1, "", "NoopObserver"], [814, 1, 1, "", "ObserverBase"], [815, 1, 1, "", "PerChannelMinMaxObserver"], [816, 1, 1, "", "PlaceholderObserver"], [817, 1, 1, "", "RecordingObserver"], [818, 2, 1, "", "default_debug_observer"], [819, 2, 1, "", "default_dynamic_quant_observer"], [820, 2, 1, "", "default_float_qparams_observer"], [821, 2, 1, "", "default_histogram_observer"], [822, 2, 1, "", "default_observer"], [823, 2, 1, "", "default_per_channel_weight_observer"], [824, 2, 1, "", "default_placeholder_observer"], [825, 2, 1, "", "default_weight_observer"], [826, 1, 1, "", "get_observer_state_dict"], [827, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[810, 3, 1, "", "calculate_qparams"], [810, 3, 1, "", "forward"], [810, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[814, 3, 1, "", "with_args"], [814, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[815, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[1931, 0, 0, "-", "duplicate_dq_pass"], [1931, 0, 0, "-", "eval_utils"], [1931, 0, 0, "-", "graph_utils"], [1931, 0, 0, "-", "port_metadata_pass"], [1931, 0, 0, "-", "prepare"], [1931, 0, 0, "-", "qat_utils"], [1934, 0, 0, "-", "representation"], [1931, 0, 0, "-", "utils"]], "torch.ao.quantization.pt2e.representation": [[1931, 0, 0, "-", "rewrite"]], "torch.ao.quantization.qconfig": [[831, 1, 1, "", "QConfig"], [832, 2, 1, "", "default_activation_only_qconfig"], [833, 2, 1, "", "default_debug_qconfig"], [834, 2, 1, "", "default_dynamic_qconfig"], [835, 2, 1, "", "default_per_channel_qconfig"], [836, 2, 1, "", "default_qat_qconfig"], [837, 2, 1, "", "default_qat_qconfig_v2"], [838, 2, 1, "", "default_qconfig"], [839, 2, 1, "", "default_weight_only_qconfig"], [840, 2, 1, "", "float16_dynamic_qconfig"], [841, 2, 1, "", "float16_static_qconfig"], [842, 2, 1, "", "float_qparams_weight_only_qconfig"], [843, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[844, 1, 1, "", "QConfigMapping"], [845, 1, 1, "", "get_default_qat_qconfig_mapping"], [846, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[844, 3, 1, "", "from_dict"], [844, 3, 1, "", "set_global"], [844, 3, 1, "", "set_module_name"], [844, 3, 1, "", "set_module_name_object_type_order"], [844, 3, 1, "", "set_module_name_regex"], [844, 3, 1, "", "set_object_type"], [844, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[849, 1, 1, "", "convert_fx"], [850, 1, 1, "", "fuse_fx"], [851, 1, 1, "", "prepare_fx"], [852, 1, 1, "", "prepare_qat_fx"]], "torch.ao.quantization.quantizer": [[1931, 0, 0, "-", "composable_quantizer"], [1931, 0, 0, "-", "embedding_quantizer"], [1931, 0, 0, "-", "quantizer"], [1931, 0, 0, "-", "utils"], [1931, 0, 0, "-", "x86_inductor_quantizer"], [1931, 0, 0, "-", "xnnpack_quantizer"], [1931, 0, 0, "-", "xnnpack_quantizer_utils"]], "torch.autograd": [[1, 1, 1, "", "Function"], [1, 0, 0, "-", "anomaly_mode"], [883, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [1, 0, 0, "-", "forward_ad"], [1, 0, 0, "-", "function"], [1, 0, 0, "-", "functional"], [897, 5, 1, "", "grad"], [1, 0, 0, "-", "grad_mode"], [1, 0, 0, "-", "gradcheck"], [1, 0, 0, "-", "graph"], [1, 0, 0, "-", "profiler"], [1, 0, 0, "-", "profiler_legacy"], [1, 0, 0, "-", "profiler_util"], [1, 1, 1, "", "set_detect_anomaly"], [1, 0, 0, "-", "variable"]], "torch.autograd.Function": [[879, 3, 1, "", "backward"], [880, 3, 1, "", "forward"], [881, 3, 1, "", "jvp"], [882, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[884, 1, 1, "", "dual_level"], [885, 5, 1, "", "make_dual"], [886, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[887, 3, 1, "", "mark_dirty"], [888, 3, 1, "", "mark_non_differentiable"], [889, 3, 1, "", "save_for_backward"], [890, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[891, 5, 1, "", "hessian"], [892, 5, 1, "", "hvp"], [893, 5, 1, "", "jacobian"], [894, 5, 1, "", "jvp"], [895, 5, 1, "", "vhp"], [896, 5, 1, "", "vjp"]], "torch.autograd.gradcheck": [[898, 5, 1, "", "gradcheck"], [899, 5, 1, "", "gradgradcheck"]], "torch.autograd.graph": [[1, 1, 1, "", "GradientEdge"], [1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 5, 1, "", "get_gradient_edge"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.graph.Node": [[900, 3, 1, "", "metadata"], [901, 3, 1, "", "name"], [902, 4, 1, "", "next_functions"], [903, 3, 1, "", "register_hook"], [904, 3, 1, "", "register_prehook"]], "torch.autograd.profiler": [[1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [905, 5, 1, "", "load_nvprof"], [1, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[906, 3, 1, "", "export_chrome_trace"], [907, 3, 1, "", "key_averages"], [908, 4, 1, "", "self_cpu_time_total"], [909, 3, 1, "", "total_average"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPBackend"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 0, 0, "-", "rnn"], [2, 5, 1, "", "version"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.backends.xeon": [[2, 0, 0, "-", "run_cpu"]], "torch.compiler": [[944, 5, 1, "", "allow_in_graph"], [945, 5, 1, "", "assume_constant_result"], [946, 5, 1, "", "compile"], [947, 5, 1, "", "cudagraph_mark_step_begin"], [948, 5, 1, "", "disable"], [949, 5, 1, "", "list_backends"], [950, 5, 1, "", "reset"]], "torch.cpu": [[963, 1, 1, "", "Stream"], [964, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [965, 5, 1, "", "current_device"], [966, 5, 1, "", "current_stream"], [967, 5, 1, "", "device_count"], [968, 5, 1, "", "is_available"], [969, 5, 1, "", "set_device"], [970, 5, 1, "", "stream"], [971, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"]], "torch.cuda": [[973, 1, 1, "", "CUDAGraph"], [974, 1, 1, "", "CUDAPluggableAllocator"], [975, 1, 1, "", "Event"], [976, 1, 1, "", "ExternalStream"], [977, 6, 1, "", "OutOfMemoryError"], [978, 1, 1, "", "Stream"], [979, 1, 1, "", "StreamContext"], [18, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [980, 5, 1, "", "caching_allocator_alloc"], [981, 5, 1, "", "caching_allocator_delete"], [982, 5, 1, "", "can_device_access_peer"], [983, 5, 1, "", "change_current_allocator"], [984, 5, 1, "", "clock_rate"], [17, 0, 0, "-", "comm"], [990, 5, 1, "", "current_blas_handle"], [991, 5, 1, "", "current_device"], [992, 5, 1, "", "current_stream"], [993, 5, 1, "", "default_stream"], [994, 1, 1, "", "device"], [995, 5, 1, "", "device_count"], [996, 1, 1, "", "device_of"], [997, 5, 1, "", "empty_cache"], [17, 0, 0, "-", "error"], [998, 5, 1, "", "get_allocator_backend"], [999, 5, 1, "", "get_arch_list"], [1000, 5, 1, "", "get_device_capability"], [1001, 5, 1, "", "get_device_name"], [1002, 5, 1, "", "get_device_properties"], [1003, 5, 1, "", "get_gencode_flags"], [1004, 5, 1, "", "get_rng_state"], [1005, 5, 1, "", "get_rng_state_all"], [1006, 5, 1, "", "get_sync_debug_mode"], [1007, 1, 1, "", "graph"], [1008, 5, 1, "", "graph_pool_handle"], [17, 0, 0, "-", "graphs"], [1009, 5, 1, "", "init"], [1010, 5, 1, "", "initial_seed"], [1011, 5, 1, "", "ipc_collect"], [1012, 5, 1, "", "is_available"], [1013, 5, 1, "", "is_current_stream_capturing"], [1014, 5, 1, "", "is_initialized"], [17, 0, 0, "-", "jiterator"], [1017, 5, 1, "", "list_gpu_processes"], [1018, 5, 1, "", "make_graphed_callables"], [1019, 5, 1, "", "manual_seed"], [1020, 5, 1, "", "manual_seed_all"], [1021, 5, 1, "", "max_memory_allocated"], [1022, 5, 1, "", "max_memory_cached"], [1023, 5, 1, "", "max_memory_reserved"], [1024, 5, 1, "", "mem_get_info"], [17, 0, 0, "-", "memory"], [1025, 5, 1, "", "memory_allocated"], [1026, 5, 1, "", "memory_cached"], [1027, 5, 1, "", "memory_reserved"], [1028, 5, 1, "", "memory_snapshot"], [1029, 5, 1, "", "memory_stats"], [1030, 5, 1, "", "memory_summary"], [1031, 5, 1, "", "memory_usage"], [17, 0, 0, "-", "nccl"], [17, 0, 0, "-", "nvtx"], [1035, 5, 1, "", "power_draw"], [17, 0, 0, "-", "profiler"], [17, 0, 0, "-", "random"], [1036, 5, 1, "", "reset_max_memory_allocated"], [1037, 5, 1, "", "reset_max_memory_cached"], [1038, 5, 1, "", "reset_peak_memory_stats"], [1039, 5, 1, "", "seed"], [1040, 5, 1, "", "seed_all"], [1041, 5, 1, "", "set_device"], [1042, 5, 1, "", "set_per_process_memory_fraction"], [1043, 5, 1, "", "set_rng_state"], [1044, 5, 1, "", "set_rng_state_all"], [1045, 5, 1, "", "set_stream"], [1046, 5, 1, "", "set_sync_debug_mode"], [17, 0, 0, "-", "sparse"], [1047, 5, 1, "", "stream"], [17, 0, 0, "-", "streams"], [1048, 5, 1, "", "synchronize"], [1049, 5, 1, "", "temperature"], [1050, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[973, 3, 1, "", "capture_begin"], [973, 3, 1, "", "capture_end"], [973, 3, 1, "", "debug_dump"], [973, 3, 1, "", "enable_debug_mode"], [973, 3, 1, "", "pool"], [973, 3, 1, "", "replay"], [973, 3, 1, "", "reset"]], "torch.cuda.Event": [[975, 3, 1, "", "elapsed_time"], [975, 3, 1, "", "from_ipc_handle"], [975, 3, 1, "", "ipc_handle"], [975, 3, 1, "", "query"], [975, 3, 1, "", "record"], [975, 3, 1, "", "synchronize"], [975, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[976, 3, 1, "", "query"], [976, 3, 1, "", "record_event"], [976, 3, 1, "", "synchronize"], [976, 3, 1, "", "wait_event"], [976, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[978, 3, 1, "", "query"], [978, 3, 1, "", "record_event"], [978, 3, 1, "", "synchronize"], [978, 3, 1, "", "wait_event"], [978, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[18, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "common"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda.amp.GradScaler": [[0, 3, 1, "", "get_backoff_factor"], [0, 3, 1, "", "get_growth_factor"], [0, 3, 1, "", "get_growth_interval"], [0, 3, 1, "", "get_scale"], [0, 3, 1, "", "is_enabled"], [0, 3, 1, "", "load_state_dict"], [0, 3, 1, "", "scale"], [0, 3, 1, "", "set_backoff_factor"], [0, 3, 1, "", "set_growth_factor"], [0, 3, 1, "", "set_growth_interval"], [0, 3, 1, "", "state_dict"], [0, 3, 1, "", "step"], [0, 3, 1, "", "unscale_"], [0, 3, 1, "", "update"]], "torch.cuda.comm": [[985, 5, 1, "", "broadcast"], [986, 5, 1, "", "broadcast_coalesced"], [987, 5, 1, "", "gather"], [988, 5, 1, "", "reduce_add"], [989, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1015, 5, 1, "", "_create_jit_fn"], [1016, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.memory": [[1971, 5, 1, "", "_dump_snapshot"], [1971, 5, 1, "", "_record_memory_history"], [1971, 5, 1, "", "_snapshot"]], "torch.cuda.nvtx": [[1032, 5, 1, "", "mark"], [1033, 5, 1, "", "range_pop"], [1034, 5, 1, "", "range_push"]], "torch.distributed": [[25, 1, 1, "", "Backend"], [25, 1, 1, "", "DistBackendError"], [25, 1, 1, "", "DistError"], [25, 1, 1, "", "DistNetworkError"], [25, 1, 1, "", "DistStoreError"], [25, 1, 1, "", "FileStore"], [22, 1, 1, "", "GradBucket"], [25, 1, 1, "", "HashStore"], [25, 1, 1, "", "P2POp"], [25, 1, 1, "", "PrefixStore"], [25, 1, 1, "", "ReduceOp"], [25, 1, 1, "", "Store"], [25, 1, 1, "", "TCPStore"], [25, 0, 0, "-", "algorithms"], [25, 5, 1, "", "all_gather"], [25, 5, 1, "", "all_gather_into_tensor"], [25, 5, 1, "", "all_gather_multigpu"], [25, 5, 1, "", "all_gather_object"], [25, 5, 1, "", "all_reduce"], [25, 5, 1, "", "all_reduce_multigpu"], [25, 5, 1, "", "all_to_all"], [25, 5, 1, "", "all_to_all_single"], [25, 0, 0, "-", "argparse_util"], [1936, 0, 0, "-", "autograd"], [25, 5, 1, "", "barrier"], [25, 5, 1, "", "batch_isend_irecv"], [25, 5, 1, "", "broadcast"], [25, 5, 1, "", "broadcast_multigpu"], [25, 5, 1, "", "broadcast_object_list"], [25, 0, 0, "-", "c10d_logger"], [27, 0, 0, "-", "checkpoint"], [25, 0, 0, "-", "collective_utils"], [25, 0, 0, "-", "constants"], [25, 0, 0, "-", "distributed_c10d"], [25, 0, 0, "-", "elastic"], [49, 0, 0, "-", "fsdp"], [25, 5, 1, "", "gather"], [25, 5, 1, "", "gather_object"], [25, 5, 1, "", "get_backend"], [25, 5, 1, "", "get_global_rank"], [25, 5, 1, "", "get_group_rank"], [25, 5, 1, "", "get_process_group_ranks"], [25, 5, 1, "", "get_rank"], [25, 5, 1, "", "get_world_size"], [25, 5, 1, "", "init_process_group"], [25, 5, 1, "", "irecv"], [25, 5, 1, "", "is_available"], [25, 5, 1, "", "is_gloo_available"], [25, 5, 1, "", "is_initialized"], [25, 5, 1, "", "is_mpi_available"], [25, 5, 1, "", "is_nccl_available"], [25, 5, 1, "", "is_torchelastic_launched"], [25, 5, 1, "", "isend"], [25, 0, 0, "-", "launch"], [25, 0, 0, "-", "launcher"], [25, 0, 0, "-", "logging_handlers"], [25, 5, 1, "", "monitored_barrier"], [25, 5, 1, "", "new_group"], [25, 0, 0, "-", "nn"], [29, 0, 0, "-", "optim"], [25, 0, 0, "-", "pipeline"], [25, 5, 1, "", "recv"], [25, 5, 1, "", "reduce"], [25, 5, 1, "", "reduce_multigpu"], [25, 1, 1, "", "reduce_op"], [25, 5, 1, "", "reduce_scatter"], [25, 5, 1, "", "reduce_scatter_multigpu"], [25, 5, 1, "", "reduce_scatter_tensor"], [25, 0, 0, "-", "remote_device"], [25, 0, 0, "-", "rendezvous"], [1936, 0, 0, "-", "rpc"], [43, 0, 0, "-", "run"], [25, 5, 1, "", "scatter"], [25, 5, 1, "", "scatter_object_list"], [25, 5, 1, "", "send"], [25, 0, 0, "-", "tensor"], [25, 0, 0, "-", "utils"]], "torch.distributed.Backend": [[25, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[22, 5, 1, "", "buffer"], [22, 5, 1, "", "gradients"], [22, 5, 1, "", "index"], [22, 5, 1, "", "is_last"], [22, 5, 1, "", "parameters"], [22, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[25, 5, 1, "", "add"], [25, 5, 1, "", "compare_set"], [25, 5, 1, "", "delete_key"], [25, 5, 1, "", "get"], [25, 5, 1, "", "num_keys"], [25, 5, 1, "", "set"], [25, 5, 1, "", "set_timeout"], [25, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[26, 1, 1, "", "Join"], [26, 1, 1, "", "JoinHook"], [26, 1, 1, "", "Joinable"], [25, 0, 0, "-", "ddp_comm_hooks"], [25, 0, 0, "-", "join"], [25, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[26, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[26, 3, 1, "", "main_hook"], [26, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[26, 4, 1, "", "join_device"], [26, 3, 1, "", "join_hook"], [26, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks": [[25, 0, 0, "-", "ddp_zero_hook"], [25, 0, 0, "-", "debugging_hooks"], [25, 0, 0, "-", "default_hooks"], [25, 0, 0, "-", "mixed_precision_hooks"], [25, 0, 0, "-", "optimizer_overlap_hooks"], [25, 0, 0, "-", "post_localSGD_hook"], [25, 0, 0, "-", "powerSGD_hook"], [25, 0, 0, "-", "quantization_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[22, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[22, 5, 1, "", "allreduce_hook"], [22, 5, 1, "", "bf16_compress_hook"], [22, 5, 1, "", "bf16_compress_wrapper"], [22, 5, 1, "", "fp16_compress_hook"], [22, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[22, 1, 1, "", "PowerSGDState"], [22, 5, 1, "", "batched_powerSGD_hook"], [22, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[22, 3, 1, "", "__getstate__"], [22, 3, 1, "", "__setstate__"]], "torch.distributed.algorithms.model_averaging": [[25, 0, 0, "-", "averagers"], [25, 0, 0, "-", "hierarchical_model_averager"], [25, 0, 0, "-", "utils"]], "torch.distributed.autograd": [[1936, 5, 1, "", "backward"], [1936, 1, 1, "", "context"], [1936, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[27, 1, 1, "", "DefaultLoadPlanner"], [27, 1, 1, "", "DefaultSavePlanner"], [27, 1, 1, "", "FileSystemReader"], [27, 1, 1, "", "FileSystemWriter"], [27, 1, 1, "", "LoadPlan"], [27, 1, 1, "", "LoadPlanner"], [27, 1, 1, "", "ReadItem"], [27, 1, 1, "", "SavePlan"], [27, 1, 1, "", "SavePlanner"], [27, 1, 1, "", "StorageReader"], [27, 1, 1, "", "StorageWriter"], [27, 1, 1, "", "WriteItem"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "default_planner"], [25, 0, 0, "-", "filesystem"], [27, 5, 1, "", "load_state_dict"], [25, 0, 0, "-", "metadata"], [25, 0, 0, "-", "optimizer"], [25, 0, 0, "-", "planner"], [25, 0, 0, "-", "planner_helpers"], [25, 0, 0, "-", "resharding"], [27, 5, 1, "", "save_state_dict"], [25, 0, 0, "-", "state_dict"], [25, 0, 0, "-", "state_dict_loader"], [25, 0, 0, "-", "state_dict_saver"], [25, 0, 0, "-", "storage"], [25, 0, 0, "-", "utils"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[27, 3, 1, "", "lookup_tensor"], [27, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[27, 3, 1, "", "lookup_object"], [27, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[27, 3, 1, "", "commit_tensor"], [27, 3, 1, "", "create_global_plan"], [27, 3, 1, "", "create_local_plan"], [27, 3, 1, "", "finish_plan"], [27, 3, 1, "", "load_bytes"], [27, 3, 1, "", "resolve_tensor"], [27, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[27, 3, 1, "", "create_global_plan"], [27, 3, 1, "", "create_local_plan"], [27, 3, 1, "", "finish_plan"], [27, 3, 1, "", "resolve_data"], [27, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[27, 3, 1, "", "prepare_global_plan"], [27, 3, 1, "", "prepare_local_plan"], [27, 3, 1, "", "read_data"], [27, 3, 1, "", "read_metadata"], [27, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[27, 3, 1, "", "finish"], [27, 3, 1, "", "prepare_global_plan"], [27, 3, 1, "", "prepare_local_plan"], [27, 3, 1, "", "set_up_storage_writer"], [27, 3, 1, "", "write_data"]], "torch.distributed.checkpoint.state_dict": [[27, 1, 1, "", "StateDictOptions"], [27, 5, 1, "", "get_state_dict"], [27, 5, 1, "", "set_state_dict"]], "torch.distributed.elastic": [[33, 0, 0, "-", "agent"], [36, 0, 0, "-", "events"], [39, 0, 0, "-", "metrics"], [40, 0, 0, "-", "multiprocessing"], [42, 0, 0, "-", "rendezvous"], [44, 0, 0, "-", "timer"], [25, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[33, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[33, 1, 1, "", "ElasticAgent"], [33, 1, 1, "", "SimpleElasticAgent"], [33, 1, 1, "", "Worker"], [33, 1, 1, "", "WorkerGroup"], [33, 1, 1, "", "WorkerSpec"], [33, 1, 1, "", "WorkerState"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "local_elastic_agent"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[33, 3, 1, "", "get_worker_group"], [33, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[33, 3, 1, "", "_assign_worker_ranks"], [33, 3, 1, "", "_exit_barrier"], [33, 3, 1, "", "_initialize_workers"], [33, 3, 1, "", "_monitor_workers"], [33, 3, 1, "", "_rendezvous"], [33, 3, 1, "", "_restart_workers"], [33, 3, 1, "", "_shutdown"], [33, 3, 1, "", "_start_workers"], [33, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[33, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[33, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[33, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[33, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events": [[25, 0, 0, "-", "api"], [36, 5, 1, "", "get_logging_handler"], [25, 0, 0, "-", "handlers"], [36, 5, 1, "", "record"]], "torch.distributed.elastic.events.api": [[36, 1, 1, "", "Event"], [36, 2, 1, "", "EventMetadataValue"], [36, 1, 1, "", "EventSource"]], "torch.distributed.elastic.metrics": [[25, 0, 0, "-", "api"], [39, 5, 1, "", "configure"], [39, 5, 1, "", "prof"], [39, 5, 1, "", "put_metric"]], "torch.distributed.elastic.metrics.api": [[39, 1, 1, "", "ConsoleMetricHandler"], [39, 1, 1, "", "MetricHandler"], [39, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.multiprocessing": [[25, 0, 0, "-", "api"], [35, 0, 0, "-", "errors"], [25, 0, 0, "-", "redirects"], [40, 5, 1, "", "start_processes"], [25, 0, 0, "-", "tail_log"]], "torch.distributed.elastic.multiprocessing.api": [[40, 1, 1, "", "MultiprocessContext"], [40, 1, 1, "", "PContext"], [40, 1, 1, "", "RunProcsResult"], [40, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing.errors": [[35, 1, 1, "", "ChildFailedError"], [35, 1, 1, "", "ErrorHandler"], [35, 1, 1, "", "ProcessFailure"], [25, 0, 0, "-", "error_handler"], [25, 0, 0, "-", "handlers"], [35, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[42, 1, 1, "", "RendezvousClosedError"], [42, 1, 1, "", "RendezvousConnectionError"], [42, 1, 1, "", "RendezvousError"], [42, 1, 1, "", "RendezvousHandler"], [42, 1, 1, "", "RendezvousHandlerRegistry"], [42, 1, 1, "", "RendezvousParameters"], [42, 1, 1, "", "RendezvousStateError"], [42, 1, 1, "", "RendezvousTimeoutError"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "c10d_rendezvous_backend"], [25, 0, 0, "-", "dynamic_rendezvous"], [25, 0, 0, "-", "etcd_rendezvous"], [25, 0, 0, "-", "etcd_rendezvous_backend"], [25, 0, 0, "-", "etcd_server"], [25, 0, 0, "-", "etcd_store"], [42, 0, 0, "-", "registry"], [25, 0, 0, "-", "static_tcp_rendezvous"], [25, 0, 0, "-", "utils"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[42, 3, 1, "", "get_backend"], [42, 3, 1, "", "get_run_id"], [42, 3, 1, "", "is_closed"], [42, 3, 1, "", "next_rendezvous"], [42, 3, 1, "", "num_nodes_waiting"], [42, 3, 1, "", "set_closed"], [42, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[42, 3, 1, "", "create_handler"], [42, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[42, 3, 1, "", "get"], [42, 3, 1, "", "get_as_bool"], [42, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[42, 1, 1, "", "C10dRendezvousBackend"], [42, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[42, 3, 1, "", "get_state"], [42, 4, 1, "", "name"], [42, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[42, 1, 1, "", "DynamicRendezvousHandler"], [42, 1, 1, "", "RendezvousBackend"], [42, 1, 1, "", "RendezvousTimeout"], [42, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[42, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[42, 3, 1, "", "get_state"], [42, 4, 1, "", "name"], [42, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[42, 4, 1, "", "close"], [42, 4, 1, "", "heartbeat"], [42, 4, 1, "", "join"], [42, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[42, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[42, 1, 1, "", "EtcdRendezvousBackend"], [42, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[42, 3, 1, "", "get_state"], [42, 4, 1, "", "name"], [42, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[42, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[42, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[42, 3, 1, "", "add"], [42, 3, 1, "", "check"], [42, 3, 1, "", "get"], [42, 3, 1, "", "set"], [42, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[44, 1, 1, "", "FileTimerClient"], [44, 1, 1, "", "FileTimerServer"], [44, 1, 1, "", "LocalTimerClient"], [44, 1, 1, "", "LocalTimerServer"], [44, 1, 1, "", "TimerClient"], [44, 1, 1, "", "TimerRequest"], [44, 1, 1, "", "TimerServer"], [25, 0, 0, "-", "api"], [44, 5, 1, "", "configure"], [44, 5, 1, "", "expires"], [25, 0, 0, "-", "file_based_local_timer"], [25, 0, 0, "-", "local_timer"]], "torch.distributed.elastic.timer.TimerClient": [[44, 3, 1, "", "acquire"], [44, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[44, 3, 1, "", "clear_timers"], [44, 3, 1, "", "get_expired_timers"], [44, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[25, 0, 0, "-", "api"], [25, 0, 0, "-", "data"], [25, 0, 0, "-", "distributed"], [25, 0, 0, "-", "log_level"], [25, 0, 0, "-", "logging"], [25, 0, 0, "-", "store"]], "torch.distributed.elastic.utils.data": [[25, 0, 0, "-", "cycling_iterator"], [25, 0, 0, "-", "elastic_distributed_sampler"]], "torch.distributed.fsdp": [[49, 1, 1, "", "BackwardPrefetch"], [49, 1, 1, "", "CPUOffload"], [49, 1, 1, "", "FullOptimStateDictConfig"], [49, 1, 1, "", "FullStateDictConfig"], [49, 1, 1, "", "FullyShardedDataParallel"], [49, 1, 1, "", "LocalOptimStateDictConfig"], [49, 1, 1, "", "LocalStateDictConfig"], [49, 1, 1, "", "MixedPrecision"], [49, 1, 1, "", "OptimStateDictConfig"], [49, 1, 1, "", "ShardedOptimStateDictConfig"], [49, 1, 1, "", "ShardedStateDictConfig"], [49, 1, 1, "", "ShardingStrategy"], [49, 1, 1, "", "StateDictConfig"], [49, 1, 1, "", "StateDictSettings"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "fully_sharded_data_parallel"], [25, 0, 0, "-", "sharded_grad_scaler"], [25, 0, 0, "-", "wrap"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[49, 3, 1, "", "apply"], [49, 3, 1, "", "clip_grad_norm_"], [49, 3, 1, "", "flatten_sharded_optim_state_dict"], [49, 3, 1, "", "forward"], [49, 3, 1, "", "fsdp_modules"], [49, 3, 1, "", "full_optim_state_dict"], [49, 3, 1, "", "get_state_dict_type"], [49, 4, 1, "", "module"], [49, 3, 1, "", "named_buffers"], [49, 3, 1, "", "named_parameters"], [49, 3, 1, "", "no_sync"], [49, 3, 1, "", "optim_state_dict"], [49, 3, 1, "", "optim_state_dict_to_load"], [49, 3, 1, "", "register_comm_hook"], [49, 3, 1, "", "rekey_optim_state_dict"], [49, 3, 1, "", "scatter_full_optim_state_dict"], [49, 3, 1, "", "set_state_dict_type"], [49, 3, 1, "", "shard_full_optim_state_dict"], [49, 3, 1, "", "sharded_optim_state_dict"], [49, 3, 1, "", "state_dict_type"], [49, 3, 1, "", "summon_full_params"]], "torch.distributed.launcher": [[25, 0, 0, "-", "api"]], "torch.distributed.nn": [[25, 0, 0, "-", "api"], [25, 0, 0, "-", "functional"], [25, 0, 0, "-", "jit"]], "torch.distributed.nn.api": [[25, 0, 0, "-", "remote_module"]], "torch.distributed.nn.api.remote_module": [[1936, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1936, 3, 1, "", "get_module_rref"], [1936, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[25, 0, 0, "-", "instantiator"], [25, 0, 0, "-", "templates"]], "torch.distributed.nn.jit.templates": [[25, 0, 0, "-", "remote_module_template"]], "torch.distributed.optim": [[29, 1, 1, "", "DistributedOptimizer"], [29, 1, 1, "", "PostLocalSGDOptimizer"], [29, 1, 1, "", "ZeroRedundancyOptimizer"], [25, 0, 0, "-", "apply_optimizer_in_backward"], [25, 0, 0, "-", "functional_adadelta"], [25, 0, 0, "-", "functional_adagrad"], [25, 0, 0, "-", "functional_adam"], [25, 0, 0, "-", "functional_adamax"], [25, 0, 0, "-", "functional_adamw"], [25, 0, 0, "-", "functional_rmsprop"], [25, 0, 0, "-", "functional_rprop"], [25, 0, 0, "-", "functional_sgd"], [25, 0, 0, "-", "named_optimizer"], [25, 0, 0, "-", "optimizer"], [25, 0, 0, "-", "post_localSGD_optimizer"], [25, 0, 0, "-", "utils"], [25, 0, 0, "-", "zero_redundancy_optimizer"]], "torch.distributed.optim.DistributedOptimizer": [[29, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[29, 3, 1, "", "load_state_dict"], [29, 3, 1, "", "state_dict"], [29, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[29, 3, 1, "", "add_param_group"], [29, 3, 1, "", "consolidate_state_dict"], [29, 3, 1, "", "join_hook"], [29, 3, 1, "", "load_state_dict"], [29, 3, 1, "", "state_dict"], [29, 3, 1, "", "step"]], "torch.distributed.pipeline": [[25, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1929, 1, 1, "", "Pipe"], [25, 0, 0, "-", "batchnorm"], [25, 0, 0, "-", "checkpoint"], [25, 0, 0, "-", "copy"], [25, 0, 0, "-", "dependency"], [25, 0, 0, "-", "microbatch"], [25, 0, 0, "-", "phony"], [25, 0, 0, "-", "pipe"], [25, 0, 0, "-", "pipeline"], [25, 0, 0, "-", "skip"], [25, 0, 0, "-", "stream"], [25, 0, 0, "-", "utils"], [25, 0, 0, "-", "worker"]], "torch.distributed.pipeline.sync.Pipe": [[1929, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip": [[25, 0, 0, "-", "layout"], [25, 0, 0, "-", "namespace"], [25, 0, 0, "-", "portal"], [25, 0, 0, "-", "skippable"], [25, 0, 0, "-", "tracker"]], "torch.distributed.pipeline.sync.skip.skippable": [[1929, 1, 1, "", "pop"], [1929, 5, 1, "", "skippable"], [1929, 1, 1, "", "stash"], [1929, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1936, 1, 1, "", "BackendType"], [1936, 1, 1, "", "PyRRef"], [1936, 1, 1, "", "RpcBackendOptions"], [1936, 1, 1, "", "TensorPipeRpcBackendOptions"], [1936, 1, 1, "", "WorkerInfo"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "backend_registry"], [25, 0, 0, "-", "constants"], [25, 0, 0, "-", "functions"], [1936, 5, 1, "", "get_worker_info"], [1936, 5, 1, "", "init_rpc"], [25, 0, 0, "-", "internal"], [25, 0, 0, "-", "options"], [1936, 5, 1, "", "remote"], [1936, 5, 1, "", "rpc_async"], [1936, 5, 1, "", "rpc_sync"], [25, 0, 0, "-", "rref_proxy"], [25, 0, 0, "-", "server_process_global_profiler"], [1936, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[1936, 3, 1, "", "backward"], [1936, 3, 1, "", "confirmed_by_owner"], [1936, 3, 1, "", "is_owner"], [1936, 3, 1, "", "local_value"], [1936, 3, 1, "", "owner"], [1936, 3, 1, "", "owner_name"], [1936, 3, 1, "", "remote"], [1936, 3, 1, "", "rpc_async"], [1936, 3, 1, "", "rpc_sync"], [1936, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[1936, 4, 1, "", "init_method"], [1936, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1936, 4, 1, "", "device_maps"], [1936, 4, 1, "", "devices"], [1936, 4, 1, "", "init_method"], [1936, 4, 1, "", "num_worker_threads"], [1936, 4, 1, "", "rpc_timeout"], [1936, 3, 1, "", "set_device_map"], [1936, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1936, 4, 1, "", "id"], [1936, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1936, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[30, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel": [[25, 0, 0, "-", "api"], [25, 0, 0, "-", "ddp"], [25, 0, 0, "-", "fsdp"], [25, 0, 0, "-", "input_reshard"], [30, 5, 1, "", "parallelize_module"], [25, 0, 0, "-", "style"]], "torch.distributed.tensor.parallel.ddp": [[30, 5, 1, "", "pre_dp_module_transform"]], "torch.distributed.tensor.parallel.fsdp": [[30, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel.style": [[30, 1, 1, "", "ColwiseParallel"], [30, 1, 1, "", "PairwiseParallel"], [30, 5, 1, "", "PrepareModuleInput"], [30, 5, 1, "", "PrepareModuleOutput"], [30, 1, 1, "", "RowwiseParallel"], [30, 1, 1, "", "SequenceParallel"], [30, 5, 1, "", "make_input_replicate_1d"], [30, 5, 1, "", "make_input_reshard_replicate"], [30, 5, 1, "", "make_input_shard_1d"], [30, 5, 1, "", "make_input_shard_1d_last_dim"], [30, 5, 1, "", "make_output_replicate_1d"], [30, 5, 1, "", "make_output_reshard_tensor"], [30, 5, 1, "", "make_output_shard_1d"], [30, 5, 1, "", "make_output_tensor"]], "torch.distributions": [[31, 0, 0, "-", "bernoulli"], [31, 0, 0, "-", "beta"], [31, 0, 0, "-", "binomial"], [31, 0, 0, "-", "categorical"], [31, 0, 0, "-", "cauchy"], [31, 0, 0, "-", "chi2"], [31, 0, 0, "-", "constraint_registry"], [31, 0, 0, "-", "constraints"], [31, 0, 0, "-", "continuous_bernoulli"], [31, 0, 0, "-", "dirichlet"], [31, 0, 0, "-", "distribution"], [31, 0, 0, "-", "exp_family"], [31, 0, 0, "-", "exponential"], [31, 0, 0, "-", "fishersnedecor"], [31, 0, 0, "-", "gamma"], [31, 0, 0, "-", "geometric"], [31, 0, 0, "-", "gumbel"], [31, 0, 0, "-", "half_cauchy"], [31, 0, 0, "-", "half_normal"], [31, 0, 0, "-", "independent"], [31, 0, 0, "-", "kl"], [31, 0, 0, "-", "kumaraswamy"], [31, 0, 0, "-", "laplace"], [31, 0, 0, "-", "lkj_cholesky"], [31, 0, 0, "-", "log_normal"], [31, 0, 0, "-", "logistic_normal"], [31, 0, 0, "-", "lowrank_multivariate_normal"], [31, 0, 0, "-", "mixture_same_family"], [31, 0, 0, "-", "multinomial"], [31, 0, 0, "-", "multivariate_normal"], [31, 0, 0, "-", "negative_binomial"], [31, 0, 0, "-", "normal"], [31, 0, 0, "-", "one_hot_categorical"], [31, 0, 0, "-", "pareto"], [31, 0, 0, "-", "poisson"], [31, 0, 0, "-", "relaxed_bernoulli"], [31, 0, 0, "-", "relaxed_categorical"], [31, 0, 0, "-", "studentT"], [31, 0, 0, "-", "transformed_distribution"], [31, 0, 0, "-", "transforms"], [31, 0, 0, "-", "uniform"], [31, 0, 0, "-", "utils"], [31, 0, 0, "-", "von_mises"], [31, 0, 0, "-", "weibull"], [31, 0, 0, "-", "wishart"]], "torch.distributions.bernoulli": [[31, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.beta": [[31, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "concentration0"], [31, 4, 1, "", "concentration1"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.binomial": [[31, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.categorical": [[31, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[31, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.chi2": [[31, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "df"], [31, 3, 1, "", "expand"]], "torch.distributions.constraint_registry": [[31, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[31, 3, 1, "", "register"]], "torch.distributions.constraints": [[31, 1, 1, "", "Constraint"], [31, 2, 1, "", "cat"], [31, 2, 1, "", "dependent_property"], [31, 2, 1, "", "greater_than"], [31, 2, 1, "", "greater_than_eq"], [31, 2, 1, "", "half_open_interval"], [31, 2, 1, "", "independent"], [31, 2, 1, "", "integer_interval"], [31, 2, 1, "", "interval"], [31, 2, 1, "", "less_than"], [31, 2, 1, "", "multinomial"], [31, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[31, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[31, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[31, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.distribution": [[31, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[31, 4, 1, "", "arg_constraints"], [31, 4, 1, "", "batch_shape"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 4, 1, "", "event_shape"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "perplexity"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 3, 1, "", "sample_n"], [31, 3, 1, "", "set_default_validate_args"], [31, 4, 1, "", "stddev"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[31, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[31, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[31, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[31, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.gamma": [[31, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.geometric": [[31, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[31, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[31, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "scale"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[31, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "scale"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.independent": [[31, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "has_enumerate_support"], [31, 4, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.kl": [[31, 5, 1, "", "kl_divergence"], [31, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[31, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.laplace": [[31, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[31, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"]], "torch.distributions.log_normal": [[31, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "loc"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "scale"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[31, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "covariance_matrix"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "precision_matrix"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "scale_tril"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[31, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 4, 1, "", "component_distribution"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mixture_distribution"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[31, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 2, 1, "", "total_count"], [31, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[31, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "covariance_matrix"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "precision_matrix"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "scale_tril"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[31, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.normal": [[31, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[31, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.pareto": [[31, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.poisson": [[31, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[31, 1, 1, "", "LogitRelaxedBernoulli"], [31, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "probs"], [31, 2, 1, "", "support"], [31, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[31, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "probs"], [31, 2, 1, "", "support"], [31, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[31, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[31, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"]], "torch.distributions.transforms": [[31, 1, 1, "", "AbsTransform"], [31, 1, 1, "", "AffineTransform"], [31, 1, 1, "", "CatTransform"], [31, 1, 1, "", "ComposeTransform"], [31, 1, 1, "", "CorrCholeskyTransform"], [31, 1, 1, "", "CumulativeDistributionTransform"], [31, 1, 1, "", "ExpTransform"], [31, 1, 1, "", "IndependentTransform"], [31, 1, 1, "", "LowerCholeskyTransform"], [31, 1, 1, "", "PositiveDefiniteTransform"], [31, 1, 1, "", "PowerTransform"], [31, 1, 1, "", "ReshapeTransform"], [31, 1, 1, "", "SigmoidTransform"], [31, 1, 1, "", "SoftmaxTransform"], [31, 1, 1, "", "SoftplusTransform"], [31, 1, 1, "", "StackTransform"], [31, 1, 1, "", "StickBreakingTransform"], [31, 1, 1, "", "TanhTransform"], [31, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[31, 3, 1, "", "forward_shape"], [31, 4, 1, "", "inv"], [31, 3, 1, "", "inverse_shape"], [31, 3, 1, "", "log_abs_det_jacobian"], [31, 4, 1, "", "sign"]], "torch.distributions.uniform": [[31, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "stddev"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[31, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.weibull": [[31, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.wishart": [[31, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "covariance_matrix"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "precision_matrix"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "scale_tril"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.export": [[46, 1, 1, "", "Constraint"], [46, 5, 1, "", "Dim"], [46, 1, 1, "", "ExportBackwardSignature"], [46, 1, 1, "", "ExportGraphSignature"], [46, 1, 1, "", "ExportedProgram"], [46, 1, 1, "", "ModuleCallEntry"], [46, 1, 1, "", "ModuleCallSignature"], [46, 5, 1, "", "dims"], [46, 5, 1, "", "dynamic_dim"], [46, 5, 1, "", "export"], [46, 0, 0, "-", "exported_program"], [46, 5, 1, "", "load"], [46, 5, 1, "", "register_dataclass"], [46, 5, 1, "", "save"]], "torch.export.ExportedProgram": [[46, 3, 1, "", "buffers"], [46, 3, 1, "", "module"], [46, 3, 1, "", "named_buffers"], [46, 3, 1, "", "named_parameters"], [46, 3, 1, "", "parameters"]], "torch.export.exported_program": [[46, 1, 1, "", "InputKind"], [46, 1, 1, "", "InputSpec"], [46, 1, 1, "", "OutputKind"], [46, 1, 1, "", "OutputSpec"]], "torch.fft": [[1088, 5, 1, "", "fft"], [1089, 5, 1, "", "fft2"], [1090, 5, 1, "", "fftfreq"], [1091, 5, 1, "", "fftn"], [1092, 5, 1, "", "fftshift"], [1093, 5, 1, "", "hfft"], [1094, 5, 1, "", "hfft2"], [1095, 5, 1, "", "hfftn"], [1096, 5, 1, "", "ifft"], [1097, 5, 1, "", "ifft2"], [1098, 5, 1, "", "ifftn"], [1099, 5, 1, "", "ifftshift"], [1100, 5, 1, "", "ihfft"], [1101, 5, 1, "", "ihfft2"], [1102, 5, 1, "", "ihfftn"], [1103, 5, 1, "", "irfft"], [1104, 5, 1, "", "irfft2"], [1105, 5, 1, "", "irfftn"], [1106, 5, 1, "", "rfft"], [1107, 5, 1, "", "rfft2"], [1108, 5, 1, "", "rfftfreq"], [1109, 5, 1, "", "rfftn"]], "torch.func": [[1129, 5, 1, "", "functional_call"], [1130, 5, 1, "", "functionalize"], [1131, 5, 1, "", "grad"], [1132, 5, 1, "", "grad_and_value"], [1133, 5, 1, "", "hessian"], [1134, 5, 1, "", "jacfwd"], [1135, 5, 1, "", "jacrev"], [1136, 5, 1, "", "jvp"], [1137, 5, 1, "", "linearize"], [1138, 5, 1, "", "replace_all_batch_norm_modules_"], [1139, 5, 1, "", "stack_module_state"], [1140, 5, 1, "", "vjp"], [1141, 5, 1, "", "vmap"]], "torch.futures": [[56, 1, 1, "", "Future"], [56, 5, 1, "", "collect_all"], [56, 5, 1, "", "wait_all"]], "torch.futures.Future": [[56, 3, 1, "", "add_done_callback"], [56, 3, 1, "", "done"], [56, 3, 1, "", "set_exception"], [56, 3, 1, "", "set_result"], [56, 3, 1, "", "then"], [56, 3, 1, "", "value"], [56, 3, 1, "", "wait"]], "torch.fx": [[57, 1, 1, "", "Graph"], [57, 1, 1, "", "GraphModule"], [57, 1, 1, "", "Interpreter"], [57, 1, 1, "", "Node"], [57, 1, 1, "", "Proxy"], [57, 1, 1, "", "Tracer"], [57, 1, 1, "", "Transformer"], [57, 0, 0, "-", "annotate"], [57, 0, 0, "-", "config"], [57, 0, 0, "-", "experimental"], [57, 0, 0, "-", "graph"], [57, 0, 0, "-", "graph_module"], [57, 0, 0, "-", "immutable_collections"], [57, 0, 0, "-", "interpreter"], [57, 0, 0, "-", "node"], [57, 0, 0, "-", "operator_schemas"], [57, 0, 0, "-", "passes"], [57, 0, 0, "-", "proxy"], [57, 5, 1, "", "replace_pattern"], [57, 0, 0, "-", "subgraph_rewriter"], [57, 5, 1, "", "symbolic_trace"], [57, 0, 0, "-", "tensor_type"], [57, 0, 0, "-", "traceback"], [57, 5, 1, "", "wrap"]], "torch.fx.Graph": [[57, 3, 1, "", "__init__"], [57, 3, 1, "", "call_function"], [57, 3, 1, "", "call_method"], [57, 3, 1, "", "call_module"], [57, 3, 1, "", "create_node"], [57, 3, 1, "", "eliminate_dead_code"], [57, 3, 1, "", "erase_node"], [57, 3, 1, "", "get_attr"], [57, 3, 1, "", "graph_copy"], [57, 3, 1, "", "inserting_after"], [57, 3, 1, "", "inserting_before"], [57, 3, 1, "", "lint"], [57, 3, 1, "", "node_copy"], [57, 4, 1, "", "nodes"], [57, 3, 1, "", "on_generate_code"], [57, 3, 1, "", "output"], [57, 3, 1, "", "placeholder"], [57, 3, 1, "", "print_tabular"], [57, 3, 1, "", "process_inputs"], [57, 3, 1, "", "process_outputs"], [57, 3, 1, "", "python_code"], [57, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[57, 3, 1, "", "__init__"], [57, 3, 1, "", "add_submodule"], [57, 4, 1, "", "code"], [57, 3, 1, "", "delete_all_unused_submodules"], [57, 3, 1, "", "delete_submodule"], [57, 4, 1, "", "graph"], [57, 3, 1, "", "print_readable"], [57, 3, 1, "", "recompile"], [57, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[57, 3, 1, "", "boxed_run"], [57, 3, 1, "", "call_function"], [57, 3, 1, "", "call_method"], [57, 3, 1, "", "call_module"], [57, 3, 1, "", "fetch_args_kwargs_from_env"], [57, 3, 1, "", "fetch_attr"], [57, 3, 1, "", "get_attr"], [57, 3, 1, "", "map_nodes_to_values"], [57, 3, 1, "", "output"], [57, 3, 1, "", "placeholder"], [57, 3, 1, "", "run"], [57, 3, 1, "", "run_node"]], "torch.fx.Node": [[57, 4, 1, "", "all_input_nodes"], [57, 3, 1, "", "append"], [57, 4, 1, "", "args"], [57, 3, 1, "", "format_node"], [57, 3, 1, "", "insert_arg"], [57, 3, 1, "", "is_impure"], [57, 4, 1, "", "kwargs"], [57, 4, 1, "", "next"], [57, 3, 1, "", "normalized_arguments"], [57, 3, 1, "", "prepend"], [57, 4, 1, "", "prev"], [57, 3, 1, "", "replace_all_uses_with"], [57, 3, 1, "", "replace_input_with"], [57, 4, 1, "", "stack_trace"], [57, 3, 1, "", "update_arg"], [57, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[57, 3, 1, "", "call_module"], [57, 3, 1, "", "create_arg"], [57, 3, 1, "", "create_args_for_root"], [57, 3, 1, "", "create_node"], [57, 3, 1, "", "create_proxy"], [57, 3, 1, "", "getattr"], [57, 3, 1, "", "is_leaf_module"], [57, 3, 1, "", "iter"], [57, 3, 1, "", "keys"], [57, 3, 1, "", "path_of_module"], [57, 3, 1, "", "proxy"], [57, 3, 1, "", "to_bool"], [57, 3, 1, "", "trace"]], "torch.fx.Transformer": [[57, 3, 1, "", "call_function"], [57, 3, 1, "", "call_module"], [57, 3, 1, "", "get_attr"], [57, 3, 1, "", "placeholder"], [57, 3, 1, "", "transform"]], "torch.fx.experimental": [[57, 0, 0, "-", "accelerator_partitioner"], [57, 0, 0, "-", "const_fold"], [57, 0, 0, "-", "debug"], [57, 0, 0, "-", "graph_gradual_typechecker"], [57, 0, 0, "-", "merge_matmul"], [57, 0, 0, "-", "meta_tracer"], [57, 0, 0, "-", "migrate_gradual_types"], [57, 0, 0, "-", "normalize"], [57, 0, 0, "-", "optimization"], [57, 0, 0, "-", "partitioner_utils"], [57, 0, 0, "-", "proxy_tensor"], [57, 0, 0, "-", "recording"], [57, 0, 0, "-", "refinement_types"], [57, 0, 0, "-", "rewriter"], [57, 0, 0, "-", "schema_type_annotation"], [57, 0, 0, "-", "sym_node"], [57, 0, 0, "-", "symbolic_shapes"], [57, 0, 0, "-", "unification"], [57, 0, 0, "-", "unify_refinements"], [57, 0, 0, "-", "validator"]], "torch.fx.experimental.migrate_gradual_types": [[57, 0, 0, "-", "constraint"], [57, 0, 0, "-", "constraint_generator"], [57, 0, 0, "-", "constraint_transformation"], [57, 0, 0, "-", "operation"], [57, 0, 0, "-", "transform_to_z3"], [57, 0, 0, "-", "util"], [57, 0, 0, "-", "z3_types"]], "torch.fx.experimental.unification": [[57, 0, 0, "-", "core"], [57, 0, 0, "-", "dispatch"], [57, 0, 0, "-", "match"], [57, 0, 0, "-", "more"], [57, 0, 0, "-", "multipledispatch"], [57, 0, 0, "-", "unification_tools"], [57, 0, 0, "-", "utils"], [57, 0, 0, "-", "variable"]], "torch.fx.experimental.unification.multipledispatch": [[57, 0, 0, "-", "conflict"], [57, 0, 0, "-", "core"], [57, 0, 0, "-", "dispatcher"], [57, 0, 0, "-", "utils"], [57, 0, 0, "-", "variadic"]], "torch.fx.passes": [[57, 0, 0, "-", "annotate_getitem_nodes"], [57, 0, 0, "-", "backends"], [57, 0, 0, "-", "dialect"], [57, 0, 0, "-", "fake_tensor_prop"], [57, 0, 0, "-", "graph_drawer"], [57, 0, 0, "-", "graph_manipulation"], [57, 0, 0, "-", "infra"], [57, 0, 0, "-", "net_min_base"], [57, 0, 0, "-", "operator_support"], [57, 0, 0, "-", "param_fetch"], [57, 0, 0, "-", "pass_manager"], [57, 0, 0, "-", "reinplace"], [57, 0, 0, "-", "shape_prop"], [57, 0, 0, "-", "split_module"], [57, 0, 0, "-", "split_utils"], [57, 0, 0, "-", "splitter_base"], [57, 0, 0, "-", "tests"], [57, 0, 0, "-", "tools_common"], [57, 0, 0, "-", "utils"]], "torch.fx.passes.backends": [[57, 0, 0, "-", "cudagraphs"]], "torch.fx.passes.dialect": [[57, 0, 0, "-", "common"]], "torch.fx.passes.dialect.common": [[57, 0, 0, "-", "cse_pass"]], "torch.fx.passes.infra": [[57, 0, 0, "-", "partitioner"], [57, 0, 0, "-", "pass_base"], [57, 0, 0, "-", "pass_manager"]], "torch.fx.passes.tests": [[57, 0, 0, "-", "test_pass_manager"]], "torch.fx.passes.utils": [[57, 0, 0, "-", "common"], [57, 0, 0, "-", "fuser_utils"], [57, 0, 0, "-", "matcher_utils"], [57, 0, 0, "-", "matcher_with_name_node_map_utils"], [57, 0, 0, "-", "source_matcher_utils"]], "torch.hub": [[1879, 5, 1, "", "download_url_to_file"], [1879, 5, 1, "", "get_dir"], [1879, 5, 1, "", "help"], [1879, 5, 1, "", "list"], [1879, 5, 1, "", "load"], [1879, 5, 1, "", "load_state_dict_from_url"], [1879, 5, 1, "", "set_dir"]], "torch.jit": [[1198, 1, 1, "", "Attribute"], [1199, 1, 1, "", "ScriptFunction"], [1200, 1, 1, "", "ScriptModule"], [1201, 5, 1, "", "annotate"], [1881, 0, 0, "-", "annotations"], [1202, 5, 1, "", "enable_onednn_fusion"], [1881, 5, 1, "", "export"], [1203, 5, 1, "", "fork"], [1204, 5, 1, "", "freeze"], [1881, 0, 0, "-", "frontend"], [1881, 0, 0, "-", "generate_bytecode"], [1205, 5, 1, "", "ignore"], [1206, 5, 1, "", "interface"], [1883, 5, 1, "", "is_scripting"], [1883, 5, 1, "", "is_tracing"], [1207, 5, 1, "", "isinstance"], [1208, 5, 1, "", "load"], [1881, 0, 0, "-", "mobile"], [1209, 5, 1, "", "onednn_fusion_enabled"], [1210, 5, 1, "", "optimize_for_inference"], [1881, 0, 0, "-", "quantized"], [1211, 5, 1, "", "save"], [1212, 5, 1, "", "script"], [1213, 5, 1, "", "script_if_tracing"], [1214, 5, 1, "", "set_fusion_strategy"], [1215, 1, 1, "", "strict_fusion"], [1882, 0, 0, "-", "supported_ops"], [1216, 5, 1, "", "trace"], [1217, 5, 1, "", "trace_module"], [1886, 0, 0, "-", "unsupported_tensor_ops"], [1218, 5, 1, "", "unused"], [1219, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1198, 3, 1, "", "count"], [1198, 3, 1, "", "index"], [1198, 2, 1, "", "type"], [1198, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1199, 3, 1, "", "get_debug_state"], [1199, 3, 1, "", "save"], [1199, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1200, 3, 1, "", "add_module"], [1200, 3, 1, "", "apply"], [1200, 3, 1, "", "bfloat16"], [1200, 3, 1, "", "buffers"], [1200, 3, 1, "", "children"], [1200, 4, 1, "", "code"], [1200, 4, 1, "", "code_with_constants"], [1200, 3, 1, "", "compile"], [1200, 3, 1, "", "cpu"], [1200, 3, 1, "", "cuda"], [1200, 3, 1, "", "double"], [1200, 3, 1, "", "eval"], [1200, 3, 1, "", "extra_repr"], [1200, 3, 1, "", "float"], [1200, 3, 1, "", "get_buffer"], [1200, 3, 1, "", "get_extra_state"], [1200, 3, 1, "", "get_parameter"], [1200, 3, 1, "", "get_submodule"], [1200, 4, 1, "", "graph"], [1200, 3, 1, "", "half"], [1200, 4, 1, "", "inlined_graph"], [1200, 3, 1, "", "ipu"], [1200, 3, 1, "", "load_state_dict"], [1200, 3, 1, "", "modules"], [1200, 3, 1, "", "named_buffers"], [1200, 3, 1, "", "named_children"], [1200, 3, 1, "", "named_modules"], [1200, 3, 1, "", "named_parameters"], [1200, 3, 1, "", "parameters"], [1200, 3, 1, "", "register_backward_hook"], [1200, 3, 1, "", "register_buffer"], [1200, 3, 1, "", "register_forward_hook"], [1200, 3, 1, "", "register_forward_pre_hook"], [1200, 3, 1, "", "register_full_backward_hook"], [1200, 3, 1, "", "register_full_backward_pre_hook"], [1200, 3, 1, "", "register_load_state_dict_post_hook"], [1200, 3, 1, "", "register_module"], [1200, 3, 1, "", "register_parameter"], [1200, 3, 1, "", "register_state_dict_pre_hook"], [1200, 3, 1, "", "requires_grad_"], [1200, 3, 1, "", "save"], [1200, 3, 1, "", "set_extra_state"], [1200, 3, 1, "", "share_memory"], [1200, 3, 1, "", "state_dict"], [1200, 3, 1, "", "to"], [1200, 3, 1, "", "to_empty"], [1200, 3, 1, "", "train"], [1200, 3, 1, "", "type"], [1200, 3, 1, "", "xpu"], [1200, 3, 1, "", "zero_grad"]], "torch.library": [[1888, 1, 1, "", "Library"], [1888, 5, 1, "", "define"], [1888, 5, 1, "", "fallthrough_kernel"], [1888, 5, 1, "", "get_ctx"], [1888, 5, 1, "", "impl"], [1888, 5, 1, "", "impl_abstract"]], "torch.library.Library": [[1888, 3, 1, "", "define"], [1888, 3, 1, "", "impl"]], "torch.linalg": [[1230, 5, 1, "", "cholesky"], [1231, 5, 1, "", "cholesky_ex"], [1232, 5, 1, "", "cond"], [1233, 5, 1, "", "cross"], [1234, 5, 1, "", "det"], [1235, 5, 1, "", "diagonal"], [1236, 5, 1, "", "eig"], [1237, 5, 1, "", "eigh"], [1238, 5, 1, "", "eigvals"], [1239, 5, 1, "", "eigvalsh"], [1240, 5, 1, "", "householder_product"], [1241, 5, 1, "", "inv"], [1242, 5, 1, "", "inv_ex"], [1243, 5, 1, "", "ldl_factor"], [1244, 5, 1, "", "ldl_factor_ex"], [1245, 5, 1, "", "ldl_solve"], [1246, 5, 1, "", "lstsq"], [1247, 5, 1, "", "lu"], [1248, 5, 1, "", "lu_factor"], [1249, 5, 1, "", "lu_factor_ex"], [1250, 5, 1, "", "lu_solve"], [1251, 5, 1, "", "matmul"], [1252, 5, 1, "", "matrix_exp"], [1253, 5, 1, "", "matrix_norm"], [1254, 5, 1, "", "matrix_power"], [1255, 5, 1, "", "matrix_rank"], [1256, 5, 1, "", "multi_dot"], [1257, 5, 1, "", "norm"], [1258, 5, 1, "", "pinv"], [1259, 5, 1, "", "qr"], [1260, 5, 1, "", "slogdet"], [1261, 5, 1, "", "solve"], [1262, 5, 1, "", "solve_ex"], [1263, 5, 1, "", "solve_triangular"], [1264, 5, 1, "", "svd"], [1265, 5, 1, "", "svdvals"], [1266, 5, 1, "", "tensorinv"], [1267, 5, 1, "", "tensorsolve"], [1268, 5, 1, "", "vander"], [1269, 5, 1, "", "vecdot"], [1270, 5, 1, "", "vector_norm"]], "torch.masked": [[1891, 0, 0, "-", "maskedtensor"]], "torch.masked.maskedtensor": [[1891, 0, 0, "-", "binary"], [1891, 0, 0, "-", "core"], [1891, 0, 0, "-", "creation"], [1891, 0, 0, "-", "passthrough"], [1891, 0, 0, "-", "reductions"], [1891, 0, 0, "-", "unary"]], "torch.monitor": [[1894, 1, 1, "", "Aggregation"], [1894, 1, 1, "", "Event"], [1894, 1, 1, "", "EventHandlerHandle"], [1894, 1, 1, "", "Stat"], [1894, 1, 1, "", "TensorboardEventHandler"], [1894, 1, 1, "", "data_value_t"], [1894, 5, 1, "", "log_event"], [1894, 5, 1, "", "register_event_handler"], [1894, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1894, 4, 1, "", "name"]], "torch.monitor.Event": [[1894, 3, 1, "", "__init__"], [1894, 4, 1, "", "data"], [1894, 4, 1, "", "name"], [1894, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1894, 3, 1, "", "__init__"], [1894, 3, 1, "", "add"], [1894, 4, 1, "", "count"], [1894, 3, 1, "", "get"], [1894, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1894, 3, 1, "", "__init__"]], "torch.mps": [[1309, 5, 1, "", "current_allocated_memory"], [1310, 5, 1, "", "driver_allocated_memory"], [1311, 5, 1, "", "empty_cache"], [1895, 0, 0, "-", "event"], [1313, 5, 1, "", "get_rng_state"], [1314, 5, 1, "", "manual_seed"], [1895, 0, 0, "-", "profiler"], [1318, 5, 1, "", "seed"], [1319, 5, 1, "", "set_per_process_memory_fraction"], [1320, 5, 1, "", "set_rng_state"], [1321, 5, 1, "", "synchronize"]], "torch.mps.event": [[1312, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1312, 3, 1, "", "elapsed_time"], [1312, 3, 1, "", "query"], [1312, 3, 1, "", "record"], [1312, 3, 1, "", "synchronize"], [1312, 3, 1, "", "wait"]], "torch.mps.profiler": [[1315, 5, 1, "", "profile"], [1316, 5, 1, "", "start"], [1317, 5, 1, "", "stop"]], "torch.multiprocessing": [[1896, 1, 1, "", "SpawnContext"], [1896, 5, 1, "", "get_all_sharing_strategies"], [1896, 5, 1, "", "get_sharing_strategy"], [1896, 0, 0, "-", "pool"], [1896, 0, 0, "-", "queue"], [1896, 0, 0, "-", "reductions"], [1896, 5, 1, "", "set_sharing_strategy"], [1896, 0, 0, "-", "spawn"]], "torch.multiprocessing.SpawnContext": [[1896, 3, 1, "", "join"]], "torch.multiprocessing.spawn": [[1896, 5, 1, "", "spawn"]], "torch.nested": [[1899, 5, 1, "", "as_nested_tensor"], [1899, 5, 1, "", "nested_tensor"], [1899, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1339, 1, 1, "", "AdaptiveAvgPool1d"], [1340, 1, 1, "", "AdaptiveAvgPool2d"], [1341, 1, 1, "", "AdaptiveAvgPool3d"], [1342, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1343, 1, 1, "", "AdaptiveMaxPool1d"], [1344, 1, 1, "", "AdaptiveMaxPool2d"], [1345, 1, 1, "", "AdaptiveMaxPool3d"], [1346, 1, 1, "", "AlphaDropout"], [1347, 1, 1, "", "AvgPool1d"], [1348, 1, 1, "", "AvgPool2d"], [1349, 1, 1, "", "AvgPool3d"], [1350, 1, 1, "", "BCELoss"], [1351, 1, 1, "", "BCEWithLogitsLoss"], [1352, 1, 1, "", "BatchNorm1d"], [1353, 1, 1, "", "BatchNorm2d"], [1354, 1, 1, "", "BatchNorm3d"], [1355, 1, 1, "", "Bilinear"], [1356, 1, 1, "", "CELU"], [1357, 1, 1, "", "CTCLoss"], [1358, 1, 1, "", "ChannelShuffle"], [1359, 1, 1, "", "ConstantPad1d"], [1360, 1, 1, "", "ConstantPad2d"], [1361, 1, 1, "", "ConstantPad3d"], [1362, 1, 1, "", "Conv1d"], [1363, 1, 1, "", "Conv2d"], [1364, 1, 1, "", "Conv3d"], [1365, 1, 1, "", "ConvTranspose1d"], [1366, 1, 1, "", "ConvTranspose2d"], [1367, 1, 1, "", "ConvTranspose3d"], [1368, 1, 1, "", "CosineEmbeddingLoss"], [1369, 1, 1, "", "CosineSimilarity"], [1370, 1, 1, "", "CrossEntropyLoss"], [1371, 1, 1, "", "DataParallel"], [1372, 1, 1, "", "Dropout"], [1373, 1, 1, "", "Dropout1d"], [1374, 1, 1, "", "Dropout2d"], [1375, 1, 1, "", "Dropout3d"], [1376, 1, 1, "", "ELU"], [1377, 1, 1, "", "Embedding"], [1378, 1, 1, "", "EmbeddingBag"], [1379, 1, 1, "", "FeatureAlphaDropout"], [1380, 1, 1, "", "Flatten"], [1381, 1, 1, "", "Fold"], [1382, 1, 1, "", "FractionalMaxPool2d"], [1383, 1, 1, "", "FractionalMaxPool3d"], [1384, 1, 1, "", "GELU"], [1385, 1, 1, "", "GLU"], [1386, 1, 1, "", "GRU"], [1387, 1, 1, "", "GRUCell"], [1388, 1, 1, "", "GaussianNLLLoss"], [1389, 1, 1, "", "GroupNorm"], [1390, 1, 1, "", "Hardshrink"], [1391, 1, 1, "", "Hardsigmoid"], [1392, 1, 1, "", "Hardswish"], [1393, 1, 1, "", "Hardtanh"], [1394, 1, 1, "", "HingeEmbeddingLoss"], [1395, 1, 1, "", "HuberLoss"], [1396, 1, 1, "", "Identity"], [1397, 1, 1, "", "InstanceNorm1d"], [1398, 1, 1, "", "InstanceNorm2d"], [1399, 1, 1, "", "InstanceNorm3d"], [1400, 1, 1, "", "KLDivLoss"], [1401, 1, 1, "", "L1Loss"], [1402, 1, 1, "", "LPPool1d"], [1403, 1, 1, "", "LPPool2d"], [1404, 1, 1, "", "LSTM"], [1405, 1, 1, "", "LSTMCell"], [1406, 1, 1, "", "LayerNorm"], [1407, 1, 1, "", "LazyBatchNorm1d"], [1408, 1, 1, "", "LazyBatchNorm2d"], [1409, 1, 1, "", "LazyBatchNorm3d"], [1410, 1, 1, "", "LazyConv1d"], [1411, 1, 1, "", "LazyConv2d"], [1412, 1, 1, "", "LazyConv3d"], [1413, 1, 1, "", "LazyConvTranspose1d"], [1414, 1, 1, "", "LazyConvTranspose2d"], [1415, 1, 1, "", "LazyConvTranspose3d"], [1416, 1, 1, "", "LazyInstanceNorm1d"], [1417, 1, 1, "", "LazyInstanceNorm2d"], [1418, 1, 1, "", "LazyInstanceNorm3d"], [1419, 1, 1, "", "LazyLinear"], [1420, 1, 1, "", "LeakyReLU"], [1421, 1, 1, "", "Linear"], [1422, 1, 1, "", "LocalResponseNorm"], [1423, 1, 1, "", "LogSigmoid"], [1424, 1, 1, "", "LogSoftmax"], [1425, 1, 1, "", "MSELoss"], [1426, 1, 1, "", "MarginRankingLoss"], [1427, 1, 1, "", "MaxPool1d"], [1428, 1, 1, "", "MaxPool2d"], [1429, 1, 1, "", "MaxPool3d"], [1430, 1, 1, "", "MaxUnpool1d"], [1431, 1, 1, "", "MaxUnpool2d"], [1432, 1, 1, "", "MaxUnpool3d"], [1433, 1, 1, "", "Mish"], [1434, 1, 1, "", "Module"], [1435, 1, 1, "", "ModuleDict"], [1436, 1, 1, "", "ModuleList"], [1437, 1, 1, "", "MultiLabelMarginLoss"], [1438, 1, 1, "", "MultiLabelSoftMarginLoss"], [1439, 1, 1, "", "MultiMarginLoss"], [1440, 1, 1, "", "MultiheadAttention"], [1441, 1, 1, "", "NLLLoss"], [1442, 1, 1, "", "PReLU"], [1443, 1, 1, "", "PairwiseDistance"], [1444, 1, 1, "", "ParameterDict"], [1445, 1, 1, "", "ParameterList"], [1446, 1, 1, "", "PixelShuffle"], [1447, 1, 1, "", "PixelUnshuffle"], [1448, 1, 1, "", "PoissonNLLLoss"], [1449, 1, 1, "", "RNN"], [1450, 1, 1, "", "RNNBase"], [1451, 1, 1, "", "RNNCell"], [1452, 1, 1, "", "RReLU"], [1453, 1, 1, "", "ReLU"], [1454, 1, 1, "", "ReLU6"], [1455, 1, 1, "", "ReflectionPad1d"], [1456, 1, 1, "", "ReflectionPad2d"], [1457, 1, 1, "", "ReflectionPad3d"], [1458, 1, 1, "", "ReplicationPad1d"], [1459, 1, 1, "", "ReplicationPad2d"], [1460, 1, 1, "", "ReplicationPad3d"], [1461, 1, 1, "", "SELU"], [1462, 1, 1, "", "Sequential"], [1463, 1, 1, "", "SiLU"], [1464, 1, 1, "", "Sigmoid"], [1465, 1, 1, "", "SmoothL1Loss"], [1466, 1, 1, "", "SoftMarginLoss"], [1467, 1, 1, "", "Softmax"], [1468, 1, 1, "", "Softmax2d"], [1469, 1, 1, "", "Softmin"], [1470, 1, 1, "", "Softplus"], [1471, 1, 1, "", "Softshrink"], [1472, 1, 1, "", "Softsign"], [1473, 1, 1, "", "SyncBatchNorm"], [1474, 1, 1, "", "Tanh"], [1475, 1, 1, "", "Tanhshrink"], [1476, 1, 1, "", "Threshold"], [1477, 1, 1, "", "Transformer"], [1478, 1, 1, "", "TransformerDecoder"], [1479, 1, 1, "", "TransformerDecoderLayer"], [1480, 1, 1, "", "TransformerEncoder"], [1481, 1, 1, "", "TransformerEncoderLayer"], [1482, 1, 1, "", "TripletMarginLoss"], [1483, 1, 1, "", "TripletMarginWithDistanceLoss"], [1484, 1, 1, "", "Unflatten"], [1485, 1, 1, "", "Unfold"], [1486, 1, 1, "", "Upsample"], [1487, 1, 1, "", "UpsamplingBilinear2d"], [1488, 1, 1, "", "UpsamplingNearest2d"], [1489, 1, 1, "", "ZeroPad1d"], [1490, 1, 1, "", "ZeroPad2d"], [1491, 1, 1, "", "ZeroPad3d"], [1900, 0, 0, "-", "backends"], [1900, 0, 0, "-", "common_types"], [1900, 0, 0, "-", "cpp"], [1900, 0, 0, "-", "functional"], [1900, 0, 0, "-", "grad"], [1900, 0, 0, "-", "init"], [1934, 0, 0, "-", "intrinsic"], [1900, 0, 0, "-", "modules"], [1900, 0, 0, "-", "parallel"], [1900, 0, 0, "-", "parameter"], [1934, 0, 0, "-", "qat"], [1934, 0, 0, "-", "quantizable"], [1934, 0, 0, "-", "quantized"], [1900, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1342, 3, 1, "", "log_prob"], [1342, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1377, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1378, 3, 1, "", "forward"], [1378, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1407, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1408, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1409, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1410, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1411, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1412, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1413, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1414, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1415, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1416, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1417, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1418, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1419, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1434, 3, 1, "", "add_module"], [1434, 3, 1, "", "apply"], [1434, 3, 1, "", "bfloat16"], [1434, 3, 1, "", "buffers"], [1434, 3, 1, "", "children"], [1434, 3, 1, "", "compile"], [1434, 3, 1, "", "cpu"], [1434, 3, 1, "", "cuda"], [1434, 3, 1, "", "double"], [1434, 3, 1, "", "eval"], [1434, 3, 1, "", "extra_repr"], [1434, 3, 1, "", "float"], [1434, 3, 1, "", "forward"], [1434, 3, 1, "", "get_buffer"], [1434, 3, 1, "", "get_extra_state"], [1434, 3, 1, "", "get_parameter"], [1434, 3, 1, "", "get_submodule"], [1434, 3, 1, "", "half"], [1434, 3, 1, "", "ipu"], [1434, 3, 1, "", "load_state_dict"], [1434, 3, 1, "", "modules"], [1434, 3, 1, "", "named_buffers"], [1434, 3, 1, "", "named_children"], [1434, 3, 1, "", "named_modules"], [1434, 3, 1, "", "named_parameters"], [1434, 3, 1, "", "parameters"], [1434, 3, 1, "", "register_backward_hook"], [1434, 3, 1, "", "register_buffer"], [1434, 3, 1, "", "register_forward_hook"], [1434, 3, 1, "", "register_forward_pre_hook"], [1434, 3, 1, "", "register_full_backward_hook"], [1434, 3, 1, "", "register_full_backward_pre_hook"], [1434, 3, 1, "", "register_load_state_dict_post_hook"], [1434, 3, 1, "", "register_module"], [1434, 3, 1, "", "register_parameter"], [1434, 3, 1, "", "register_state_dict_pre_hook"], [1434, 3, 1, "", "requires_grad_"], [1434, 3, 1, "", "set_extra_state"], [1434, 3, 1, "", "share_memory"], [1434, 3, 1, "", "state_dict"], [1434, 3, 1, "", "to"], [1434, 3, 1, "", "to_empty"], [1434, 3, 1, "", "train"], [1434, 3, 1, "", "type"], [1434, 3, 1, "", "xpu"], [1434, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1435, 3, 1, "", "clear"], [1435, 3, 1, "", "items"], [1435, 3, 1, "", "keys"], [1435, 3, 1, "", "pop"], [1435, 3, 1, "", "update"], [1435, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1436, 3, 1, "", "append"], [1436, 3, 1, "", "extend"], [1436, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1440, 3, 1, "", "forward"], [1440, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1444, 3, 1, "", "clear"], [1444, 3, 1, "", "copy"], [1444, 3, 1, "", "fromkeys"], [1444, 3, 1, "", "get"], [1444, 3, 1, "", "items"], [1444, 3, 1, "", "keys"], [1444, 3, 1, "", "pop"], [1444, 3, 1, "", "popitem"], [1444, 3, 1, "", "setdefault"], [1444, 3, 1, "", "update"], [1444, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1445, 3, 1, "", "append"], [1445, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1450, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1462, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1473, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1477, 3, 1, "", "forward"], [1477, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1478, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1479, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1480, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1481, 3, 1, "", "forward"]], "torch.nn.backends": [[1900, 0, 0, "-", "thnn"]], "torch.nn.functional": [[1492, 5, 1, "", "adaptive_avg_pool1d"], [1493, 5, 1, "", "adaptive_avg_pool2d"], [1494, 5, 1, "", "adaptive_avg_pool3d"], [1495, 5, 1, "", "adaptive_max_pool1d"], [1496, 5, 1, "", "adaptive_max_pool2d"], [1497, 5, 1, "", "adaptive_max_pool3d"], [1498, 5, 1, "", "affine_grid"], [1499, 5, 1, "", "alpha_dropout"], [1500, 5, 1, "", "avg_pool1d"], [1501, 5, 1, "", "avg_pool2d"], [1502, 5, 1, "", "avg_pool3d"], [1503, 5, 1, "", "batch_norm"], [1504, 5, 1, "", "bilinear"], [1505, 5, 1, "", "binary_cross_entropy"], [1506, 5, 1, "", "binary_cross_entropy_with_logits"], [1507, 5, 1, "", "celu"], [1508, 5, 1, "", "conv1d"], [1509, 5, 1, "", "conv2d"], [1510, 5, 1, "", "conv3d"], [1511, 5, 1, "", "conv_transpose1d"], [1512, 5, 1, "", "conv_transpose2d"], [1513, 5, 1, "", "conv_transpose3d"], [1514, 5, 1, "", "cosine_embedding_loss"], [1515, 5, 1, "", "cosine_similarity"], [1516, 5, 1, "", "cross_entropy"], [1517, 5, 1, "", "ctc_loss"], [1518, 5, 1, "", "dropout"], [1519, 5, 1, "", "dropout1d"], [1520, 5, 1, "", "dropout2d"], [1521, 5, 1, "", "dropout3d"], [1522, 5, 1, "", "elu"], [1523, 5, 1, "", "elu_"], [1524, 5, 1, "", "embedding"], [1525, 5, 1, "", "embedding_bag"], [1526, 5, 1, "", "feature_alpha_dropout"], [1527, 5, 1, "", "fold"], [1528, 5, 1, "", "fractional_max_pool2d"], [1529, 5, 1, "", "fractional_max_pool3d"], [1530, 5, 1, "", "gaussian_nll_loss"], [1531, 5, 1, "", "gelu"], [1532, 5, 1, "", "glu"], [1533, 5, 1, "", "grid_sample"], [1534, 5, 1, "", "group_norm"], [1535, 5, 1, "", "gumbel_softmax"], [1536, 5, 1, "", "hardshrink"], [1537, 5, 1, "", "hardsigmoid"], [1538, 5, 1, "", "hardswish"], [1539, 5, 1, "", "hardtanh"], [1540, 5, 1, "", "hardtanh_"], [1541, 5, 1, "", "hinge_embedding_loss"], [1542, 5, 1, "", "huber_loss"], [1543, 5, 1, "", "instance_norm"], [1544, 5, 1, "", "interpolate"], [1545, 5, 1, "", "kl_div"], [1546, 5, 1, "", "l1_loss"], [1547, 5, 1, "", "layer_norm"], [1548, 5, 1, "", "leaky_relu"], [1549, 5, 1, "", "leaky_relu_"], [1550, 5, 1, "", "linear"], [1551, 5, 1, "", "local_response_norm"], [1552, 5, 1, "", "log_softmax"], [1553, 5, 1, "", "logsigmoid"], [1554, 5, 1, "", "lp_pool1d"], [1555, 5, 1, "", "lp_pool2d"], [1556, 5, 1, "", "margin_ranking_loss"], [1557, 5, 1, "", "max_pool1d"], [1558, 5, 1, "", "max_pool2d"], [1559, 5, 1, "", "max_pool3d"], [1560, 5, 1, "", "max_unpool1d"], [1561, 5, 1, "", "max_unpool2d"], [1562, 5, 1, "", "max_unpool3d"], [1563, 5, 1, "", "mish"], [1564, 5, 1, "", "mse_loss"], [1565, 5, 1, "", "multi_margin_loss"], [1566, 5, 1, "", "multilabel_margin_loss"], [1567, 5, 1, "", "multilabel_soft_margin_loss"], [1568, 5, 1, "", "nll_loss"], [1569, 5, 1, "", "normalize"], [1570, 5, 1, "", "one_hot"], [1571, 5, 1, "", "pad"], [1572, 5, 1, "", "pairwise_distance"], [1573, 5, 1, "", "pdist"], [1574, 5, 1, "", "pixel_shuffle"], [1575, 5, 1, "", "pixel_unshuffle"], [1576, 5, 1, "", "poisson_nll_loss"], [1577, 5, 1, "", "prelu"], [1578, 5, 1, "", "relu"], [1579, 5, 1, "", "relu6"], [1580, 5, 1, "", "relu_"], [1581, 5, 1, "", "rrelu"], [1582, 5, 1, "", "rrelu_"], [1583, 5, 1, "", "scaled_dot_product_attention"], [1584, 5, 1, "", "selu"], [1585, 5, 1, "", "sigmoid"], [1586, 5, 1, "", "silu"], [1587, 5, 1, "", "smooth_l1_loss"], [1588, 5, 1, "", "soft_margin_loss"], [1589, 5, 1, "", "softmax"], [1590, 5, 1, "", "softmin"], [1591, 5, 1, "", "softplus"], [1592, 5, 1, "", "softshrink"], [1593, 5, 1, "", "softsign"], [1594, 5, 1, "", "tanh"], [1595, 5, 1, "", "tanhshrink"], [1596, 5, 1, "", "threshold"], [1597, 5, 1, "", "threshold_"], [1599, 5, 1, "", "triplet_margin_loss"], [1600, 5, 1, "", "triplet_margin_with_distance_loss"], [1601, 5, 1, "", "unfold"], [1602, 5, 1, "", "upsample"], [1603, 5, 1, "", "upsample_bilinear"], [1604, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1902, 5, 1, "", "calculate_gain"], [1902, 5, 1, "", "constant_"], [1902, 5, 1, "", "dirac_"], [1902, 5, 1, "", "eye_"], [1902, 5, 1, "", "kaiming_normal_"], [1902, 5, 1, "", "kaiming_uniform_"], [1902, 5, 1, "", "normal_"], [1902, 5, 1, "", "ones_"], [1902, 5, 1, "", "orthogonal_"], [1902, 5, 1, "", "sparse_"], [1902, 5, 1, "", "trunc_normal_"], [1902, 5, 1, "", "uniform_"], [1902, 5, 1, "", "xavier_normal_"], [1902, 5, 1, "", "xavier_uniform_"], [1902, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1934, 0, 0, "-", "modules"], [1934, 0, 0, "-", "qat"], [1934, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.modules": [[1931, 0, 0, "-", "fused"]], "torch.nn.intrinsic.qat": [[1934, 0, 0, "-", "modules"]], "torch.nn.intrinsic.qat.modules": [[1931, 0, 0, "-", "conv_fused"], [1931, 0, 0, "-", "linear_fused"], [1931, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized": [[1934, 0, 0, "-", "dynamic"], [1934, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1934, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1931, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized.modules": [[1931, 0, 0, "-", "bn_relu"], [1931, 0, 0, "-", "conv_relu"], [1931, 0, 0, "-", "linear_relu"]], "torch.nn.modules": [[1900, 0, 0, "-", "activation"], [1900, 0, 0, "-", "adaptive"], [1900, 0, 0, "-", "batchnorm"], [1900, 0, 0, "-", "channelshuffle"], [1900, 0, 0, "-", "container"], [1900, 0, 0, "-", "conv"], [1900, 0, 0, "-", "distance"], [1900, 0, 0, "-", "dropout"], [1900, 0, 0, "-", "flatten"], [1900, 0, 0, "-", "fold"], [1900, 0, 0, "-", "instancenorm"], [1900, 0, 0, "-", "lazy"], [1900, 0, 0, "-", "linear"], [1900, 0, 0, "-", "loss"], [1900, 0, 0, "-", "module"], [1900, 0, 0, "-", "normalization"], [1900, 0, 0, "-", "padding"], [1900, 0, 0, "-", "pixelshuffle"], [1900, 0, 0, "-", "pooling"], [1900, 0, 0, "-", "rnn"], [1900, 0, 0, "-", "sparse"], [1900, 0, 0, "-", "transformer"], [1900, 0, 0, "-", "upsampling"], [1900, 0, 0, "-", "utils"]], "torch.nn.modules.lazy": [[1605, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1605, 3, 1, "", "has_uninitialized_params"], [1605, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1606, 5, 1, "", "register_module_backward_hook"], [1607, 5, 1, "", "register_module_buffer_registration_hook"], [1608, 5, 1, "", "register_module_forward_hook"], [1609, 5, 1, "", "register_module_forward_pre_hook"], [1610, 5, 1, "", "register_module_full_backward_hook"], [1611, 5, 1, "", "register_module_full_backward_pre_hook"], [1612, 5, 1, "", "register_module_module_registration_hook"], [1613, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1614, 1, 1, "", "DistributedDataParallel"], [1900, 0, 0, "-", "comm"], [1900, 0, 0, "-", "data_parallel"], [1900, 0, 0, "-", "distributed"], [1900, 0, 0, "-", "parallel_apply"], [1900, 0, 0, "-", "replicate"], [1900, 0, 0, "-", "scatter_gather"]], "torch.nn.parallel.DistributedDataParallel": [[1614, 3, 1, "", "join"], [1614, 3, 1, "", "join_hook"], [1614, 3, 1, "", "no_sync"], [1614, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1615, 1, 1, "", "Parameter"], [1616, 1, 1, "", "UninitializedBuffer"], [1617, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1617, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1934, 0, 0, "-", "dynamic"], [1934, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1934, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic.modules": [[1931, 0, 0, "-", "linear"]], "torch.nn.qat.modules": [[1931, 0, 0, "-", "conv"], [1931, 0, 0, "-", "embedding_ops"], [1931, 0, 0, "-", "linear"]], "torch.nn.quantizable": [[1934, 0, 0, "-", "modules"]], "torch.nn.quantizable.modules": [[1931, 0, 0, "-", "activation"], [1931, 0, 0, "-", "rnn"]], "torch.nn.quantized": [[1934, 0, 0, "-", "dynamic"], [1931, 0, 0, "-", "functional"], [1934, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1934, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic.modules": [[1931, 0, 0, "-", "conv"], [1931, 0, 0, "-", "linear"], [1931, 0, 0, "-", "rnn"]], "torch.nn.quantized.modules": [[1931, 0, 0, "-", "activation"], [1931, 0, 0, "-", "batchnorm"], [1931, 0, 0, "-", "conv"], [1931, 0, 0, "-", "dropout"], [1931, 0, 0, "-", "embedding_ops"], [1931, 0, 0, "-", "functional_modules"], [1931, 0, 0, "-", "linear"], [1931, 0, 0, "-", "normalization"], [1931, 0, 0, "-", "rnn"], [1931, 0, 0, "-", "utils"]], "torch.nn.utils": [[1900, 0, 0, "-", "clip_grad"], [1618, 5, 1, "", "clip_grad_norm"], [1619, 5, 1, "", "clip_grad_norm_"], [1620, 5, 1, "", "clip_grad_value_"], [1621, 5, 1, "", "convert_conv2d_weight_memory_format"], [1900, 0, 0, "-", "convert_parameters"], [1622, 5, 1, "", "fuse_conv_bn_eval"], [1623, 5, 1, "", "fuse_conv_bn_weights"], [1624, 5, 1, "", "fuse_linear_bn_eval"], [1625, 5, 1, "", "fuse_linear_bn_weights"], [1900, 0, 0, "-", "fusion"], [1900, 0, 0, "-", "init"], [1900, 0, 0, "-", "memory_format"], [1626, 5, 1, "", "parameters_to_vector"], [1900, 0, 0, "-", "parametrizations"], [1900, 0, 0, "-", "parametrize"], [1900, 0, 0, "-", "prune"], [1651, 5, 1, "", "remove_spectral_norm"], [1652, 5, 1, "", "remove_weight_norm"], [1900, 0, 0, "-", "rnn"], [1660, 5, 1, "", "skip_init"], [1900, 0, 0, "-", "spectral_norm"], [1900, 0, 0, "-", "stateless"], [1663, 5, 1, "", "vector_to_parameters"], [1900, 0, 0, "-", "weight_norm"]], "torch.nn.utils.parametrizations": [[1627, 5, 1, "", "orthogonal"], [1628, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1629, 1, 1, "", "ParametrizationList"], [1630, 5, 1, "", "cached"], [1631, 5, 1, "", "is_parametrized"], [1632, 5, 1, "", "register_parametrization"], [1633, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1629, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1634, 1, 1, "", "BasePruningMethod"], [1635, 1, 1, "", "CustomFromMask"], [1636, 1, 1, "", "Identity"], [1637, 1, 1, "", "L1Unstructured"], [1638, 1, 1, "", "LnStructured"], [1639, 1, 1, "", "PruningContainer"], [1640, 1, 1, "", "RandomStructured"], [1641, 1, 1, "", "RandomUnstructured"], [1642, 5, 1, "", "custom_from_mask"], [1643, 5, 1, "", "global_unstructured"], [1644, 5, 1, "", "identity"], [1645, 5, 1, "", "is_pruned"], [1646, 5, 1, "", "l1_unstructured"], [1647, 5, 1, "", "ln_structured"], [1648, 5, 1, "", "random_structured"], [1649, 5, 1, "", "random_unstructured"], [1650, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1634, 3, 1, "", "apply"], [1634, 3, 1, "", "apply_mask"], [1634, 3, 1, "", "compute_mask"], [1634, 3, 1, "", "prune"], [1634, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1635, 3, 1, "", "apply"], [1635, 3, 1, "", "apply_mask"], [1635, 3, 1, "", "prune"], [1635, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1636, 3, 1, "", "apply"], [1636, 3, 1, "", "apply_mask"], [1636, 3, 1, "", "prune"], [1636, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1637, 3, 1, "", "apply"], [1637, 3, 1, "", "apply_mask"], [1637, 3, 1, "", "prune"], [1637, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1638, 3, 1, "", "apply"], [1638, 3, 1, "", "apply_mask"], [1638, 3, 1, "", "compute_mask"], [1638, 3, 1, "", "prune"], [1638, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1639, 3, 1, "", "add_pruning_method"], [1639, 3, 1, "", "apply"], [1639, 3, 1, "", "apply_mask"], [1639, 3, 1, "", "compute_mask"], [1639, 3, 1, "", "prune"], [1639, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1640, 3, 1, "", "apply"], [1640, 3, 1, "", "apply_mask"], [1640, 3, 1, "", "compute_mask"], [1640, 3, 1, "", "prune"], [1640, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1641, 3, 1, "", "apply"], [1641, 3, 1, "", "apply_mask"], [1641, 3, 1, "", "prune"], [1641, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1653, 1, 1, "", "PackedSequence"], [1654, 5, 1, "", "pack_padded_sequence"], [1655, 5, 1, "", "pack_sequence"], [1656, 5, 1, "", "pad_packed_sequence"], [1657, 5, 1, "", "pad_sequence"], [1658, 5, 1, "", "unpack_sequence"], [1659, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1653, 2, 1, "", "batch_sizes"], [1653, 3, 1, "", "count"], [1653, 2, 1, "", "data"], [1653, 3, 1, "", "index"], [1653, 4, 1, "", "is_cuda"], [1653, 3, 1, "", "is_pinned"], [1653, 2, 1, "", "sorted_indices"], [1653, 3, 1, "", "to"], [1653, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1662, 5, 1, "", "functional_call"]], "torch.onnx": [[1923, 1, 1, "", "DiagnosticOptions"], [1923, 1, 1, "", "ExportOptions"], [1923, 1, 1, "", "ExportOutput"], [1923, 1, 1, "", "ExportOutputSerializer"], [1923, 1, 1, "", "InvalidExportOptionsError"], [1673, 1, 1, "", "JitScalarType"], [1923, 1, 1, "", "OnnxExporterError"], [1923, 1, 1, "", "OnnxRegistry"], [1925, 5, 1, "", "disable_log"], [1923, 5, 1, "", "dynamo_export"], [1923, 5, 1, "", "enable_fake_mode"], [1925, 5, 1, "", "enable_log"], [1922, 0, 0, "-", "errors"], [1925, 5, 1, "", "export"], [1925, 5, 1, "", "export_to_pretty_string"], [1925, 5, 1, "", "is_in_onnx_export"], [1924, 5, 1, "", "is_onnxrt_backend_supported"], [1922, 0, 0, "-", "operators"], [1925, 5, 1, "", "register_custom_op_symbolic"], [1925, 5, 1, "", "select_model_mode_for_export"], [1922, 0, 0, "-", "symbolic_caffe2"], [1922, 0, 0, "-", "symbolic_helper"], [1922, 0, 0, "-", "symbolic_opset10"], [1922, 0, 0, "-", "symbolic_opset11"], [1922, 0, 0, "-", "symbolic_opset12"], [1922, 0, 0, "-", "symbolic_opset13"], [1922, 0, 0, "-", "symbolic_opset14"], [1922, 0, 0, "-", "symbolic_opset15"], [1922, 0, 0, "-", "symbolic_opset16"], [1922, 0, 0, "-", "symbolic_opset17"], [1922, 0, 0, "-", "symbolic_opset18"], [1922, 0, 0, "-", "symbolic_opset7"], [1922, 0, 0, "-", "symbolic_opset8"], [1922, 0, 0, "-", "symbolic_opset9"], [1925, 5, 1, "", "unregister_custom_op_symbolic"], [1922, 0, 0, "-", "utils"], [1922, 0, 0, "-", "verification"]], "torch.onnx.ExportOutput": [[1923, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1923, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1923, 4, 1, "", "diagnostic_context"], [1923, 4, 1, "", "fake_context"], [1923, 4, 1, "", "model_proto"], [1923, 3, 1, "", "save"], [1923, 3, 1, "", "save_diagnostics"]], "torch.onnx.ExportOutputSerializer": [[1923, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1673, 3, 1, "", "dtype"], [1673, 3, 1, "", "from_dtype"], [1673, 3, 1, "", "from_value"], [1673, 3, 1, "", "onnx_compatible"], [1673, 3, 1, "", "onnx_type"], [1673, 3, 1, "", "scalar_name"], [1673, 3, 1, "", "torch_name"]], "torch.onnx.OnnxRegistry": [[1923, 3, 1, "", "get_op_functions"], [1923, 3, 1, "", "is_registered_op"], [1923, 4, 1, "", "opset_version"], [1923, 3, 1, "", "register_op"]], "torch.onnx.verification": [[1674, 1, 1, "", "GraphInfo"], [1675, 1, 1, "", "VerificationOptions"], [1925, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1674, 3, 1, "", "all_mismatch_leaf_graph_info"], [1674, 3, 1, "", "clear"], [1674, 3, 1, "", "essential_node_count"], [1674, 3, 1, "", "essential_node_kinds"], [1674, 3, 1, "", "export_repro"], [1674, 3, 1, "", "find_mismatch"], [1674, 3, 1, "", "find_partition"], [1674, 3, 1, "", "has_mismatch"], [1674, 3, 1, "", "pretty_print_mismatch"], [1674, 3, 1, "", "pretty_print_tree"], [1674, 3, 1, "", "verify_export"]], "torch.optim": [[1676, 1, 1, "", "ASGD"], [1677, 1, 1, "", "Adadelta"], [1678, 1, 1, "", "Adagrad"], [1679, 1, 1, "", "Adam"], [1680, 1, 1, "", "AdamW"], [1681, 1, 1, "", "Adamax"], [1682, 1, 1, "", "LBFGS"], [1683, 1, 1, "", "NAdam"], [1927, 1, 1, "", "Optimizer"], [1689, 1, 1, "", "RAdam"], [1690, 1, 1, "", "RMSprop"], [1691, 1, 1, "", "Rprop"], [1692, 1, 1, "", "SGD"], [1693, 1, 1, "", "SparseAdam"], [1927, 0, 0, "-", "adadelta"], [1927, 0, 0, "-", "adagrad"], [1927, 0, 0, "-", "adam"], [1927, 0, 0, "-", "adamax"], [1927, 0, 0, "-", "adamw"], [1927, 0, 0, "-", "asgd"], [1927, 0, 0, "-", "lbfgs"], [1927, 0, 0, "-", "lr_scheduler"], [1927, 0, 0, "-", "nadam"], [1927, 0, 0, "-", "optimizer"], [1927, 0, 0, "-", "radam"], [1927, 0, 0, "-", "rmsprop"], [1927, 0, 0, "-", "rprop"], [1927, 0, 0, "-", "sgd"], [1927, 0, 0, "-", "sparse_adam"], [1927, 0, 0, "-", "swa_utils"]], "torch.optim.ASGD": [[1676, 3, 1, "", "add_param_group"], [1676, 3, 1, "", "load_state_dict"], [1676, 3, 1, "", "register_load_state_dict_post_hook"], [1676, 3, 1, "", "register_load_state_dict_pre_hook"], [1676, 3, 1, "", "register_state_dict_post_hook"], [1676, 3, 1, "", "register_state_dict_pre_hook"], [1676, 3, 1, "", "register_step_post_hook"], [1676, 3, 1, "", "register_step_pre_hook"], [1676, 3, 1, "", "state_dict"], [1676, 3, 1, "", "step"], [1676, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1677, 3, 1, "", "add_param_group"], [1677, 3, 1, "", "load_state_dict"], [1677, 3, 1, "", "register_load_state_dict_post_hook"], [1677, 3, 1, "", "register_load_state_dict_pre_hook"], [1677, 3, 1, "", "register_state_dict_post_hook"], [1677, 3, 1, "", "register_state_dict_pre_hook"], [1677, 3, 1, "", "register_step_post_hook"], [1677, 3, 1, "", "register_step_pre_hook"], [1677, 3, 1, "", "state_dict"], [1677, 3, 1, "", "step"], [1677, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1678, 3, 1, "", "add_param_group"], [1678, 3, 1, "", "load_state_dict"], [1678, 3, 1, "", "register_load_state_dict_post_hook"], [1678, 3, 1, "", "register_load_state_dict_pre_hook"], [1678, 3, 1, "", "register_state_dict_post_hook"], [1678, 3, 1, "", "register_state_dict_pre_hook"], [1678, 3, 1, "", "register_step_post_hook"], [1678, 3, 1, "", "register_step_pre_hook"], [1678, 3, 1, "", "state_dict"], [1678, 3, 1, "", "step"], [1678, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1679, 3, 1, "", "add_param_group"], [1679, 3, 1, "", "load_state_dict"], [1679, 3, 1, "", "register_load_state_dict_post_hook"], [1679, 3, 1, "", "register_load_state_dict_pre_hook"], [1679, 3, 1, "", "register_state_dict_post_hook"], [1679, 3, 1, "", "register_state_dict_pre_hook"], [1679, 3, 1, "", "register_step_post_hook"], [1679, 3, 1, "", "register_step_pre_hook"], [1679, 3, 1, "", "state_dict"], [1679, 3, 1, "", "step"], [1679, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1680, 3, 1, "", "add_param_group"], [1680, 3, 1, "", "load_state_dict"], [1680, 3, 1, "", "register_load_state_dict_post_hook"], [1680, 3, 1, "", "register_load_state_dict_pre_hook"], [1680, 3, 1, "", "register_state_dict_post_hook"], [1680, 3, 1, "", "register_state_dict_pre_hook"], [1680, 3, 1, "", "register_step_post_hook"], [1680, 3, 1, "", "register_step_pre_hook"], [1680, 3, 1, "", "state_dict"], [1680, 3, 1, "", "step"], [1680, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1681, 3, 1, "", "add_param_group"], [1681, 3, 1, "", "load_state_dict"], [1681, 3, 1, "", "register_load_state_dict_post_hook"], [1681, 3, 1, "", "register_load_state_dict_pre_hook"], [1681, 3, 1, "", "register_state_dict_post_hook"], [1681, 3, 1, "", "register_state_dict_pre_hook"], [1681, 3, 1, "", "register_step_post_hook"], [1681, 3, 1, "", "register_step_pre_hook"], [1681, 3, 1, "", "state_dict"], [1681, 3, 1, "", "step"], [1681, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1682, 3, 1, "", "add_param_group"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "register_load_state_dict_post_hook"], [1682, 3, 1, "", "register_load_state_dict_pre_hook"], [1682, 3, 1, "", "register_state_dict_post_hook"], [1682, 3, 1, "", "register_state_dict_pre_hook"], [1682, 3, 1, "", "register_step_post_hook"], [1682, 3, 1, "", "register_step_pre_hook"], [1682, 3, 1, "", "state_dict"], [1682, 3, 1, "", "step"], [1682, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1683, 3, 1, "", "add_param_group"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "register_load_state_dict_post_hook"], [1683, 3, 1, "", "register_load_state_dict_pre_hook"], [1683, 3, 1, "", "register_state_dict_post_hook"], [1683, 3, 1, "", "register_state_dict_pre_hook"], [1683, 3, 1, "", "register_step_post_hook"], [1683, 3, 1, "", "register_step_pre_hook"], [1683, 3, 1, "", "state_dict"], [1683, 3, 1, "", "step"], [1683, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1684, 3, 1, "", "add_param_group"], [1685, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "state_dict"], [1687, 3, 1, "", "step"], [1688, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1689, 3, 1, "", "add_param_group"], [1689, 3, 1, "", "load_state_dict"], [1689, 3, 1, "", "register_load_state_dict_post_hook"], [1689, 3, 1, "", "register_load_state_dict_pre_hook"], [1689, 3, 1, "", "register_state_dict_post_hook"], [1689, 3, 1, "", "register_state_dict_pre_hook"], [1689, 3, 1, "", "register_step_post_hook"], [1689, 3, 1, "", "register_step_pre_hook"], [1689, 3, 1, "", "state_dict"], [1689, 3, 1, "", "step"], [1689, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1690, 3, 1, "", "add_param_group"], [1690, 3, 1, "", "load_state_dict"], [1690, 3, 1, "", "register_load_state_dict_post_hook"], [1690, 3, 1, "", "register_load_state_dict_pre_hook"], [1690, 3, 1, "", "register_state_dict_post_hook"], [1690, 3, 1, "", "register_state_dict_pre_hook"], [1690, 3, 1, "", "register_step_post_hook"], [1690, 3, 1, "", "register_step_pre_hook"], [1690, 3, 1, "", "state_dict"], [1690, 3, 1, "", "step"], [1690, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1691, 3, 1, "", "add_param_group"], [1691, 3, 1, "", "load_state_dict"], [1691, 3, 1, "", "register_load_state_dict_post_hook"], [1691, 3, 1, "", "register_load_state_dict_pre_hook"], [1691, 3, 1, "", "register_state_dict_post_hook"], [1691, 3, 1, "", "register_state_dict_pre_hook"], [1691, 3, 1, "", "register_step_post_hook"], [1691, 3, 1, "", "register_step_pre_hook"], [1691, 3, 1, "", "state_dict"], [1691, 3, 1, "", "step"], [1691, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1692, 3, 1, "", "add_param_group"], [1692, 3, 1, "", "load_state_dict"], [1692, 3, 1, "", "register_load_state_dict_post_hook"], [1692, 3, 1, "", "register_load_state_dict_pre_hook"], [1692, 3, 1, "", "register_state_dict_post_hook"], [1692, 3, 1, "", "register_state_dict_pre_hook"], [1692, 3, 1, "", "register_step_post_hook"], [1692, 3, 1, "", "register_step_pre_hook"], [1692, 3, 1, "", "state_dict"], [1692, 3, 1, "", "step"], [1692, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1693, 3, 1, "", "add_param_group"], [1693, 3, 1, "", "load_state_dict"], [1693, 3, 1, "", "register_load_state_dict_post_hook"], [1693, 3, 1, "", "register_load_state_dict_pre_hook"], [1693, 3, 1, "", "register_state_dict_post_hook"], [1693, 3, 1, "", "register_state_dict_pre_hook"], [1693, 3, 1, "", "register_step_post_hook"], [1693, 3, 1, "", "register_step_pre_hook"], [1693, 3, 1, "", "state_dict"], [1693, 3, 1, "", "step"], [1693, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1694, 1, 1, "", "ChainedScheduler"], [1695, 1, 1, "", "ConstantLR"], [1696, 1, 1, "", "CosineAnnealingLR"], [1697, 1, 1, "", "CosineAnnealingWarmRestarts"], [1698, 1, 1, "", "CyclicLR"], [1699, 1, 1, "", "ExponentialLR"], [1700, 1, 1, "", "LambdaLR"], [1701, 1, 1, "", "LinearLR"], [1702, 1, 1, "", "MultiStepLR"], [1703, 1, 1, "", "MultiplicativeLR"], [1704, 1, 1, "", "OneCycleLR"], [1705, 1, 1, "", "PolynomialLR"], [1706, 1, 1, "", "ReduceLROnPlateau"], [1707, 1, 1, "", "SequentialLR"], [1708, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1694, 3, 1, "", "get_last_lr"], [1694, 3, 1, "", "load_state_dict"], [1694, 3, 1, "", "print_lr"], [1694, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1695, 3, 1, "", "get_last_lr"], [1695, 3, 1, "", "load_state_dict"], [1695, 3, 1, "", "print_lr"], [1695, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1696, 3, 1, "", "get_last_lr"], [1696, 3, 1, "", "load_state_dict"], [1696, 3, 1, "", "print_lr"], [1696, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1697, 3, 1, "", "get_last_lr"], [1697, 3, 1, "", "load_state_dict"], [1697, 3, 1, "", "print_lr"], [1697, 3, 1, "", "state_dict"], [1697, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1698, 3, 1, "", "get_last_lr"], [1698, 3, 1, "", "get_lr"], [1698, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1699, 3, 1, "", "get_last_lr"], [1699, 3, 1, "", "load_state_dict"], [1699, 3, 1, "", "print_lr"], [1699, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1700, 3, 1, "", "get_last_lr"], [1700, 3, 1, "", "load_state_dict"], [1700, 3, 1, "", "print_lr"], [1700, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1701, 3, 1, "", "get_last_lr"], [1701, 3, 1, "", "load_state_dict"], [1701, 3, 1, "", "print_lr"], [1701, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1702, 3, 1, "", "get_last_lr"], [1702, 3, 1, "", "load_state_dict"], [1702, 3, 1, "", "print_lr"], [1702, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1703, 3, 1, "", "get_last_lr"], [1703, 3, 1, "", "load_state_dict"], [1703, 3, 1, "", "print_lr"], [1703, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1704, 3, 1, "", "get_last_lr"], [1704, 3, 1, "", "load_state_dict"], [1704, 3, 1, "", "print_lr"], [1704, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1705, 3, 1, "", "get_last_lr"], [1705, 3, 1, "", "load_state_dict"], [1705, 3, 1, "", "print_lr"], [1705, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ReduceLROnPlateau": [[1706, 3, 1, "", "get_last_lr"], [1706, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.SequentialLR": [[1707, 3, 1, "", "get_last_lr"], [1707, 3, 1, "", "load_state_dict"], [1707, 3, 1, "", "print_lr"], [1707, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1708, 3, 1, "", "get_last_lr"], [1708, 3, 1, "", "load_state_dict"], [1708, 3, 1, "", "print_lr"], [1708, 3, 1, "", "state_dict"]], "torch.overrides": [[1970, 5, 1, "", "get_ignored_functions"], [1970, 5, 1, "", "get_overridable_functions"], [1970, 5, 1, "", "get_testing_overrides"], [1970, 5, 1, "", "handle_torch_function"], [1970, 5, 1, "", "has_torch_function"], [1970, 5, 1, "", "is_tensor_like"], [1970, 5, 1, "", "is_tensor_method_or_property"], [1970, 5, 1, "", "resolve_name"], [1970, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1928, 1, 1, "", "Directory"], [1928, 1, 1, "", "EmptyMatchError"], [1928, 1, 1, "", "PackageExporter"], [1928, 1, 1, "", "PackageImporter"], [1928, 1, 1, "", "PackagingError"], [1928, 0, 0, "-", "analyze"], [1928, 0, 0, "-", "file_structure_representation"], [1928, 0, 0, "-", "find_file_dependencies"], [1928, 0, 0, "-", "glob_group"], [1928, 0, 0, "-", "importer"], [1928, 0, 0, "-", "package_exporter"], [1928, 0, 0, "-", "package_importer"]], "torch.package.Directory": [[1928, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1928, 3, 1, "", "__init__"], [1928, 3, 1, "", "add_dependency"], [1928, 3, 1, "", "all_paths"], [1928, 3, 1, "", "close"], [1928, 3, 1, "", "denied_modules"], [1928, 3, 1, "", "deny"], [1928, 3, 1, "", "dependency_graph_string"], [1928, 3, 1, "", "extern"], [1928, 3, 1, "", "externed_modules"], [1928, 3, 1, "", "get_rdeps"], [1928, 3, 1, "", "get_unique_id"], [1928, 3, 1, "", "intern"], [1928, 3, 1, "", "interned_modules"], [1928, 3, 1, "", "mock"], [1928, 3, 1, "", "mocked_modules"], [1928, 3, 1, "", "register_extern_hook"], [1928, 3, 1, "", "register_intern_hook"], [1928, 3, 1, "", "register_mock_hook"], [1928, 3, 1, "", "save_binary"], [1928, 3, 1, "", "save_module"], [1928, 3, 1, "", "save_pickle"], [1928, 3, 1, "", "save_source_file"], [1928, 3, 1, "", "save_source_string"], [1928, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1928, 3, 1, "", "__init__"], [1928, 3, 1, "", "file_structure"], [1928, 3, 1, "", "id"], [1928, 3, 1, "", "import_module"], [1928, 3, 1, "", "load_binary"], [1928, 3, 1, "", "load_pickle"], [1928, 3, 1, "", "load_text"], [1928, 3, 1, "", "python_version"]], "torch.package.analyze": [[1928, 0, 0, "-", "find_first_use_of_broken_modules"], [1928, 0, 0, "-", "is_from_package"], [1928, 0, 0, "-", "trace_dependencies"]], "torch.profiler": [[1930, 1, 1, "", "ProfilerAction"], [1930, 1, 1, "", "ProfilerActivity"], [1930, 1, 1, "", "_KinetoProfile"], [1930, 0, 0, "-", "itt"], [1930, 1, 1, "", "profile"], [1930, 0, 0, "-", "profiler"], [1930, 0, 0, "-", "python_tracer"], [1930, 5, 1, "", "schedule"], [1930, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1930, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1930, 3, 1, "", "add_metadata"], [1930, 3, 1, "", "add_metadata_json"], [1930, 3, 1, "", "events"], [1930, 3, 1, "", "export_chrome_trace"], [1930, 3, 1, "", "export_memory_timeline"], [1930, 3, 1, "", "export_stacks"], [1930, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1930, 5, 1, "", "is_available"], [1930, 5, 1, "", "mark"], [1930, 5, 1, "", "range_pop"], [1930, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1930, 3, 1, "", "step"]], "torch.quantization": [[1931, 0, 0, "-", "fake_quantize"], [1931, 0, 0, "-", "fuse_modules"], [1931, 0, 0, "-", "fuser_method_mappings"], [1934, 0, 0, "-", "fx"], [1931, 0, 0, "-", "observer"], [1931, 0, 0, "-", "qconfig"], [1931, 0, 0, "-", "quant_type"], [1931, 0, 0, "-", "quantization_mappings"], [1931, 0, 0, "-", "quantize"], [1931, 0, 0, "-", "quantize_fx"], [1931, 0, 0, "-", "quantize_jit"], [1931, 0, 0, "-", "stubs"], [1931, 0, 0, "-", "utils"]], "torch.quantization.fx": [[1931, 0, 0, "-", "convert"], [1931, 0, 0, "-", "fuse"], [1931, 0, 0, "-", "fusion_patterns"], [1931, 0, 0, "-", "graph_module"], [1931, 0, 0, "-", "match_utils"], [1931, 0, 0, "-", "pattern_utils"], [1931, 0, 0, "-", "prepare"], [1931, 0, 0, "-", "quantization_patterns"], [1931, 0, 0, "-", "quantization_types"], [1931, 0, 0, "-", "utils"]], "torch.quasirandom": [[1729, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1729, 3, 1, "", "draw"], [1729, 3, 1, "", "draw_base2"], [1729, 3, 1, "", "fast_forward"], [1729, 3, 1, "", "reset"]], "torch.random": [[1935, 5, 1, "", "fork_rng"], [1935, 5, 1, "", "get_rng_state"], [1935, 5, 1, "", "initial_seed"], [1935, 5, 1, "", "manual_seed"], [1935, 5, 1, "", "seed"], [1935, 5, 1, "", "set_rng_state"]], "torch.serialization": [[1920, 5, 1, "", "get_default_load_endianness"], [1920, 5, 1, "", "register_package"], [1920, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[1939, 0, 0, "-", "windows"]], "torch.signal.windows": [[1777, 5, 1, "", "bartlett"], [1778, 5, 1, "", "blackman"], [1779, 5, 1, "", "cosine"], [1780, 5, 1, "", "exponential"], [1781, 5, 1, "", "gaussian"], [1782, 5, 1, "", "general_cosine"], [1783, 5, 1, "", "general_hamming"], [1784, 5, 1, "", "hamming"], [1785, 5, 1, "", "hann"], [1786, 5, 1, "", "kaiser"], [1787, 5, 1, "", "nuttall"], [1948, 0, 0, "-", "windows"]], "torch.sparse": [[1797, 5, 1, "", "addmm"], [1798, 5, 1, "", "as_sparse_gradcheck"], [1799, 1, 1, "", "check_sparse_tensor_invariants"], [1800, 5, 1, "", "log_softmax"], [1801, 5, 1, "", "mm"], [1802, 5, 1, "", "sampled_addmm"], [1948, 0, 0, "-", "semi_structured"], [1803, 5, 1, "", "softmax"], [1804, 5, 1, "", "spdiags"], [1805, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1799, 3, 1, "", "disable"], [1799, 3, 1, "", "enable"], [1799, 3, 1, "", "is_enabled"]], "torch.special": [[1941, 5, 1, "", "airy_ai"], [1941, 5, 1, "", "bessel_j0"], [1941, 5, 1, "", "bessel_j1"], [1941, 5, 1, "", "digamma"], [1941, 5, 1, "", "entr"], [1941, 5, 1, "", "erf"], [1941, 5, 1, "", "erfc"], [1941, 5, 1, "", "erfcx"], [1941, 5, 1, "", "erfinv"], [1941, 5, 1, "", "exp2"], [1941, 5, 1, "", "expit"], [1941, 5, 1, "", "expm1"], [1941, 5, 1, "", "gammainc"], [1941, 5, 1, "", "gammaincc"], [1941, 5, 1, "", "gammaln"], [1941, 5, 1, "", "i0"], [1941, 5, 1, "", "i0e"], [1941, 5, 1, "", "i1"], [1941, 5, 1, "", "i1e"], [1941, 5, 1, "", "log1p"], [1941, 5, 1, "", "log_ndtr"], [1941, 5, 1, "", "log_softmax"], [1941, 5, 1, "", "logit"], [1941, 5, 1, "", "logsumexp"], [1941, 5, 1, "", "multigammaln"], [1941, 5, 1, "", "ndtr"], [1941, 5, 1, "", "ndtri"], [1941, 5, 1, "", "polygamma"], [1941, 5, 1, "", "psi"], [1941, 5, 1, "", "round"], [1941, 5, 1, "", "scaled_modified_bessel_k0"], [1941, 5, 1, "", "scaled_modified_bessel_k1"], [1941, 5, 1, "", "sinc"], [1941, 5, 1, "", "softmax"], [1941, 5, 1, "", "spherical_bessel_j0"], [1941, 5, 1, "", "xlog1py"], [1941, 5, 1, "", "xlogy"], [1941, 5, 1, "", "zeta"]], "torch.testing": [[1947, 5, 1, "", "assert_allclose"], [1947, 5, 1, "", "assert_close"], [1947, 5, 1, "", "make_tensor"]], "torch.torch": [[1948, 2, 1, "", "default_generator"], [1972, 1, 1, "", "finfo"], [1972, 1, 1, "", "iinfo"]], "torch.utils": [[1948, 0, 0, "-", "backcompat"], [1973, 0, 0, "-", "backend_registration"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [1973, 0, 0, "-", "bundled_inputs"], [1973, 0, 0, "-", "checkpoint"], [1973, 0, 0, "-", "collect_env"], [1973, 0, 0, "-", "cpp_backtrace"], [1973, 0, 0, "-", "cpp_extension"], [21, 0, 0, "-", "data"], [24, 0, 0, "-", "deterministic"], [1973, 0, 0, "-", "dlpack"], [1973, 0, 0, "-", "file_baton"], [1973, 0, 0, "-", "flop_counter"], [1862, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1863, 5, 1, "", "get_cpp_backtrace"], [1948, 0, 0, "-", "hipify"], [1973, 0, 0, "-", "hooks"], [1887, 0, 0, "-", "jit"], [1973, 0, 0, "-", "mkldnn"], [1973, 0, 0, "-", "mobile_optimizer"], [1948, 0, 0, "-", "model_dump"], [1893, 0, 0, "-", "model_zoo"], [1864, 5, 1, "", "rename_privateuse1_backend"], [1865, 5, 1, "", "set_module"], [1973, 0, 0, "-", "show_pickle"], [1945, 0, 0, "-", "tensorboard"], [1973, 0, 0, "-", "throughput_benchmark"], [1948, 0, 0, "-", "viz"], [1973, 0, 0, "-", "weak"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "adaptive_autorange"], [3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.examples": [[1973, 0, 0, "-", "blas_compare_setup"], [1973, 0, 0, "-", "compare"], [1973, 0, 0, "-", "fuzzer"], [1973, 0, 0, "-", "op_benchmark"], [1973, 0, 0, "-", "simple_timeit"], [1973, 0, 0, "-", "spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers": [[1973, 0, 0, "-", "binary"], [1973, 0, 0, "-", "sparse_binary"], [1973, 0, 0, "-", "sparse_unary"], [1973, 0, 0, "-", "spectral"], [1973, 0, 0, "-", "unary"]], "torch.utils.benchmark.utils": [[1973, 0, 0, "-", "common"], [1973, 0, 0, "-", "compare"], [1973, 0, 0, "-", "compile"], [1973, 0, 0, "-", "cpp_jit"], [1973, 0, 0, "-", "fuzzer"], [1973, 0, 0, "-", "sparse_fuzzer"], [1973, 0, 0, "-", "timer"], [3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[1973, 0, 0, "-", "timer_interface"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"], [5, 5, 1, "", "set_checkpoint_debug_enabled"]], "torch.utils.cpp_extension": [[14, 5, 1, "", "BuildExtension"], [14, 5, 1, "", "CUDAExtension"], [14, 5, 1, "", "CppExtension"], [14, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [14, 5, 1, "", "include_paths"], [14, 5, 1, "", "is_ninja_available"], [14, 5, 1, "", "load"], [14, 5, 1, "", "load_inline"], [14, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[21, 1, 1, "", "BatchSampler"], [21, 1, 1, "", "ChainDataset"], [21, 1, 1, "", "ConcatDataset"], [21, 1, 1, "", "DataLoader"], [21, 1, 1, "", "Dataset"], [21, 1, 1, "", "IterableDataset"], [21, 1, 1, "", "RandomSampler"], [21, 1, 1, "", "Sampler"], [21, 1, 1, "", "SequentialSampler"], [21, 1, 1, "", "StackDataset"], [21, 1, 1, "", "Subset"], [21, 1, 1, "", "SubsetRandomSampler"], [21, 1, 1, "", "TensorDataset"], [21, 1, 1, "", "WeightedRandomSampler"], [1973, 0, 0, "-", "backward_compatibility"], [1973, 0, 0, "-", "dataloader"], [21, 0, 0, "-", "datapipes"], [1973, 0, 0, "-", "dataset"], [21, 5, 1, "", "default_collate"], [21, 5, 1, "", "default_convert"], [1973, 0, 0, "-", "distributed"], [21, 5, 1, "", "get_worker_info"], [1973, 0, 0, "-", "graph"], [1973, 0, 0, "-", "graph_settings"], [21, 5, 1, "", "random_split"], [1973, 0, 0, "-", "sampler"]], "torch.utils.data._utils.collate": [[21, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[21, 0, 0, "-", "dataframe"], [1973, 0, 0, "-", "datapipe"], [1973, 0, 0, "-", "gen_pyi"], [21, 0, 0, "-", "iter"], [21, 0, 0, "-", "map"], [21, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.dataframe": [[1973, 0, 0, "-", "dataframe_wrapper"], [1973, 0, 0, "-", "dataframes"], [1973, 0, 0, "-", "datapipes"], [1973, 0, 0, "-", "structures"]], "torch.utils.data.datapipes.iter": [[1973, 0, 0, "-", "callable"], [1973, 0, 0, "-", "combinatorics"], [1973, 0, 0, "-", "combining"], [1973, 0, 0, "-", "filelister"], [1973, 0, 0, "-", "fileopener"], [1973, 0, 0, "-", "grouping"], [1973, 0, 0, "-", "routeddecoder"], [1973, 0, 0, "-", "selecting"], [1973, 0, 0, "-", "sharding"], [1973, 0, 0, "-", "streamreader"], [1973, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.map": [[1973, 0, 0, "-", "callable"], [1973, 0, 0, "-", "combinatorics"], [1973, 0, 0, "-", "combining"], [1973, 0, 0, "-", "grouping"], [1973, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.utils": [[1973, 0, 0, "-", "common"], [1973, 0, 0, "-", "decoder"], [1973, 0, 0, "-", "snapshot"]], "torch.utils.data.distributed": [[21, 1, 1, "", "DistributedSampler"]], "torch.utils.deterministic": [[24, 2, 1, "", "fill_uninitialized_memory"]], "torch.utils.dlpack": [[32, 5, 1, "", "from_dlpack"], [32, 5, 1, "", "to_dlpack"]], "torch.utils.hipify": [[1973, 0, 0, "-", "constants"], [1973, 0, 0, "-", "cuda_to_hip_mappings"], [1973, 0, 0, "-", "hipify_python"], [1973, 0, 0, "-", "version"]], "torch.utils.jit": [[1973, 0, 0, "-", "log_extract"]], "torch.utils.mobile_optimizer": [[1892, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1893, 5, 1, "", "load_url"]], "torch.utils.tensorboard": [[1973, 0, 0, "-", "summary"], [1973, 0, 0, "-", "writer"]], "torch.utils.tensorboard.writer": [[1945, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1945, 3, 1, "", "__init__"], [1945, 3, 1, "", "add_audio"], [1945, 3, 1, "", "add_custom_scalars"], [1945, 3, 1, "", "add_embedding"], [1945, 3, 1, "", "add_figure"], [1945, 3, 1, "", "add_graph"], [1945, 3, 1, "", "add_histogram"], [1945, 3, 1, "", "add_hparams"], [1945, 3, 1, "", "add_image"], [1945, 3, 1, "", "add_images"], [1945, 3, 1, "", "add_mesh"], [1945, 3, 1, "", "add_pr_curve"], [1945, 3, 1, "", "add_scalar"], [1945, 3, 1, "", "add_scalars"], [1945, 3, 1, "", "add_text"], [1945, 3, 1, "", "add_video"], [1945, 3, 1, "", "close"], [1945, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 21, 1881, 1903, 1910], "mix": [0, 1881, 1903], "precis": [0, 1903, 1907, 1918], "packag": [0, 1, 15, 25, 1896, 1921, 1928], "torch": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14, 16, 17, 21, 23, 24, 25, 27, 28, 30, 31, 32, 43, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 966, 967, 968, 969, 970, 971, 972, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1684, 1685, 1686, 1687, 1688, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1884, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1901, 1902, 1907, 1909, 1910, 1913, 1918, 1920, 1922, 1925, 1927, 1928, 1930, 1934, 1935, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1959, 1960, 1967, 1970, 1972, 1973], "amp": [0, 1907], "autocast": [0, 1903], "gradient": [0, 1, 55, 1153, 1903, 1904, 1910, 1948], "scale": [0, 1903, 1914], "op": [0, 12, 75, 1886, 1903, 1925, 1948], "refer": [0, 12, 18, 46, 47, 51, 57, 1881, 1883, 1884, 1885, 1894, 1898, 1913, 1923, 1928, 1930, 1931, 1934, 1938, 1946, 1952, 1971], "elig": 0, "cuda": [0, 2, 10, 17, 18, 200, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1896, 1903, 1907, 1911, 1913, 1917, 1919, 1921, 1954, 1959, 1967, 1971], "specif": [0, 21, 47, 1940], "behavior": [0, 21, 1904, 1912], "can": [0, 1904, 1911, 1959, 1966], "float16": 0, "float32": 0, "promot": [0, 7, 77], "widest": 0, "input": [0, 46, 1897, 1903, 1912], "type": [0, 21, 47, 77, 593, 1883, 1884, 1909, 1925, 1928, 1946, 1972], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1506], "over": [0, 8, 1883], "binary_cross_entropi": [0, 1505], "cpu": [0, 2, 10, 16, 197, 965, 966, 967, 968, 969, 970, 971, 1904, 1906, 1917, 1931, 1953], "bfloat16": [0, 146], "differenti": [1, 1904], "autograd": [1, 10, 11, 15, 54, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 1898, 1903, 1904, 1909, 1910, 1925, 1936, 1937], "forward": [1, 880, 1909, 1937], "mode": [1, 43, 52, 405, 1306, 1904, 1909, 1912, 1925, 1931, 1937], "function": [1, 25, 31, 48, 50, 51, 53, 55, 57, 73, 76, 879, 880, 881, 882, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 1130, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1881, 1882, 1883, 1884, 1886, 1889, 1891, 1897, 1899, 1900, 1901, 1903, 1904, 1910, 1912, 1920, 1925, 1934, 1940, 1941, 1959, 1970], "higher": 1, "level": [1, 10, 75, 1888, 1934], "api": [1, 10, 12, 15, 18, 28, 36, 46, 51, 54, 57, 1880, 1881, 1884, 1888, 1894, 1898, 1906, 1907, 1909, 1913, 1914, 1923, 1925, 1928, 1929, 1930, 1931, 1934, 1952, 1957, 1958, 1959, 1960, 1971], "local": [1, 1884, 1904, 1948, 1966, 1968], "disabl": [1, 21, 948, 1881, 1904, 1948, 1959, 1960], "comput": [1, 55, 1904, 1918, 1937, 1948], "default": [1, 21, 22, 1883, 1904, 1907, 1912, 1933], "layout": [1, 1943], "manual": 1, "In": [1, 8, 1904, 1905, 1948], "place": [1, 54, 1897, 1904, 1905, 1925, 1948], "oper": [1, 10, 22, 25, 46, 54, 78, 1883, 1884, 1889, 1891, 1897, 1898, 1899, 1904, 1909, 1914, 1921, 1925, 1926, 1931, 1940, 1946, 1948, 1958], "tensor": [1, 11, 15, 30, 46, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 1839, 1882, 1886, 1889, 1896, 1897, 1898, 1899, 1904, 1909, 1920, 1925, 1931, 1934, 1940, 1943, 1944, 1946, 1948, 1958], "correct": [1, 57, 1904], "check": [1, 57, 1881, 1904, 1913, 1966], "variabl": [1, 25, 43, 1881, 1883, 1884, 1907, 1962, 1963], "deprec": 1, "context": [1, 26, 40, 62, 1937], "method": [1, 35, 36, 39, 44, 1882, 1883, 1886, 1925, 1934, 1940], "mixin": 1, "numer": [1, 1912, 1918, 1932], "profil": [1, 25, 905, 906, 907, 908, 909, 1315, 1316, 1317, 1895, 1914, 1915, 1930, 1963, 1967, 1969], "anomali": 1, "detect": 1, "graph": [1, 17, 46, 47, 57, 70, 900, 901, 902, 903, 904, 1007, 1881, 1904, 1907, 1931, 1954, 1959, 1967, 1968, 1969], "backend": [2, 25, 42, 43, 1881, 1913, 1916, 1924, 1931, 1933, 1936, 1951, 1953, 1955, 1969], "cudnn": 2, "mp": [2, 10, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1895, 1916], "mkl": 2, "mkldnn": [2, 10], "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 1919, 1963], "util": [3, 4, 5, 10, 14, 21, 24, 25, 32, 51, 53, 1050, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1862, 1863, 1864, 1865, 1887, 1892, 1893, 1900, 1920, 1934, 1945, 1948, 1950, 1968, 1973], "bottleneck": 4, "checkpoint": [5, 22, 27], "pytorch": [6, 7, 8, 9, 10, 15, 23, 25, 46, 54, 1880, 1881, 1882, 1886, 1904, 1907, 1909, 1919, 1920, 1925, 1929, 1931, 1934, 1951, 1954, 1965, 1966, 1969], "govern": [6, 9, 10], "build": [6, 7, 10, 1906, 1914, 1915, 1921], "ci": [6, 10], "how": [6, 22, 52, 1879, 1904, 1909, 1927, 1928, 1956, 1958, 1959, 1966], "add": [6, 9, 88, 675], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1922], "guid": 7, "process": [7, 9, 21, 40, 1903], "get": [7, 28, 1925, 1951, 1959, 1961], "start": [7, 28, 40, 1316, 1951, 1961], "propos": 7, "featur": [7, 1914, 1915, 1959], "report": [7, 1911], "issu": [7, 1881, 1923, 1967], "implement": [7, 33, 42, 44, 1879, 1908, 1912, 1925, 1932, 1934, 1938, 1958], "fix": [7, 43, 52, 252, 1110], "bug": 7, "ad": [7, 1909, 1925], "tutori": [7, 10, 1928, 1929, 1936], "improv": [7, 1915], "document": [7, 28, 1880], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 57, 1881, 1907, 1928, 1959], "readabl": 7, "test": [7, 1884, 1909, 1928, 1947, 1966], "case": [7, 1881], "make": [7, 9, 1954, 1962], "codebas": 7, "more": [7, 46, 50, 1936, 1951], "robust": 7, "triag": 7, "about": [7, 1904, 1936, 1958], "sourc": [7, 1919, 1921, 1928], "develop": [7, 46, 1880, 1922, 1951], "common": [7, 25, 57, 1914, 1931], "mistak": 7, "To": 7, "avoid": [7, 1917, 1919, 1925, 1928], "frequent": [7, 1881, 1911, 1925, 1931, 1959], "ask": [7, 1881, 1911, 1925, 1931, 1959], "question": [7, 1881, 1911, 1925, 1931, 1959], "On": [7, 22, 1883], "python": [7, 8, 54, 59, 60, 61, 62, 63, 64, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1909, 1919, 1925, 1962], "doc": [7, 10, 1913], "c": [7, 10, 15, 1904, 1909, 1913, 1920, 1925], "overview": [7, 18, 46, 57, 1922, 1923, 1928, 1930, 1940, 1955, 1962], "design": [8, 1884, 1908, 1936, 1937, 1938], "philosophi": 8, "principl": [8, 9], "1": [8, 43, 52, 1881, 1910], "usabl": 8, "perform": [8, 10, 1915, 1920, 1958, 1966, 1967, 1969], "2": [8, 52, 1881, 1907, 1910, 1911, 1931, 1934, 1965, 1966, 1969], "simpl": [8, 1883, 1884, 1915, 1923, 1937], "easi": 8, "3": [8, 43, 52], "first": [8, 1928], "best": [8, 1907, 1917, 1931, 1953], "class": [8, 35, 57, 1881, 1883, 1884, 1886, 1925, 1927, 1928, 1946], "languag": [8, 1880, 1881, 1883, 1884, 1885], "interoper": 8, "mechan": [9, 1901, 1904, 1912], "summari": [9, 1931, 1962], "modul": [9, 10, 51, 53, 57, 1434, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1881, 1882, 1883, 1884, 1886, 1900, 1904, 1909, 1915, 1920, 1928, 1931, 1965], "core": [9, 10, 1964], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1884], "confirm": 9, "remov": [9, 1650, 1897], "The": [9, 57, 1884, 1904, 1957], "re": [9, 1928], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 43, 52, 1959], "controversi": 9, "gener": [9, 17, 26, 54, 57, 79, 1905, 1910, 1919, 1931, 1932, 1948, 1956, 1971], "polici": [9, 1957], "faq": [9, 1921], "respons": 10, "nn": [10, 51, 53, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1883, 1884, 1900, 1901, 1902, 1904, 1907, 1909, 1920, 1934, 1940, 1965], "optim": [10, 29, 1684, 1685, 1686, 1687, 1688, 1903, 1904, 1927, 1936, 1937, 1948], "compil": [10, 53, 942, 944, 945, 946, 947, 948, 949, 950, 1907, 1951, 1952, 1959, 1960, 1967, 1969], "jit": [10, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1219, 1881, 1884, 1887], "torchscript": [10, 15, 1881, 1882, 1883, 1884, 1886, 1906, 1914, 1922, 1925, 1926, 1928], "fx": [10, 57, 70, 71, 72, 74, 77, 1915, 1931, 1934, 1950], "torchdynamo": [10, 1908, 1922, 1923, 1924, 1954, 1956, 1960, 1969], "distribut": [10, 25, 27, 28, 29, 30, 31, 43, 1900, 1901, 1908, 1913, 1915, 1936, 1937, 1959], "rng": 10, "multiprocess": [10, 40, 1896, 1907, 1917, 1921], "dataload": [10, 1919], "linear": [10, 11, 722, 723, 746, 754, 771, 1137, 1421, 1550, 1900, 1901, 1918, 1940], "algebra": [10, 11, 1918, 1940], "linalg": [10, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1889, 1918], "spars": [10, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1900, 1901, 1940], "nestedtensor": 10, "nest": [10, 1899], "maskedtensor": [10, 1891], "mask": [10, 1891], "fast": [10, 48, 1912, 1937], "fourier": [10, 48], "transform": [10, 31, 48, 50, 51, 53, 55, 57, 1477, 1900, 1909, 1915, 1959, 1968], "fft": [10, 48, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109], "inductor": 10, "gpu": [10, 25, 1900, 1901, 1903, 1911, 1929, 1963], "triton": [10, 1963], "nvfuser": 10, "amd": [10, 1918], "rocm": [10, 1913], "hip": [10, 1913], "tool": [10, 17, 1932, 1940], "c10": 10, "dispatch": 10, "onnx": [10, 70, 71, 78, 1922, 1923, 1924, 1925, 1926], "export": [10, 46, 47, 1922, 1923, 1925, 1928, 1931, 1934, 1948, 1959], "mobil": 10, "edg": [10, 1881, 1928], "model": [10, 15, 46, 1879, 1903, 1911, 1914, 1923, 1927, 1928, 1929, 1931, 1934, 1957, 1961, 1963], "compress": [10, 1940], "window": [10, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1921, 1939], "appl": 10, "m1": 10, "powerpc": 10, "aarch64": 10, "librari": [10, 1880, 1888, 1919], "xla": 10, "torchserv": 10, "torchvis": [10, 52], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 951, 1904, 1912], "number": [11, 17, 43, 1904, 1906, 1911, 1919, 1948], "creat": [11, 1881, 1898], "transit": [11, 43], "from": [11, 43, 53, 57, 1879, 1897, 1921, 1925, 1928], "old": 11, "represent": [11, 70], "access": [11, 1883, 1928, 1969], "real": [11, 473, 1740, 1912], "imag": [11, 302, 1170], "angl": [11, 108, 688], "ab": [11, 80, 671], "serial": [11, 46, 1920, 1948], "control": [12, 46, 54, 57, 63, 1919, 1948, 1960], "flow": [12, 46, 54, 57, 63, 1931, 1948], "cond": [12, 65, 954, 1232], "exampl": [12, 37, 46, 57, 1903, 1908, 1909, 1910, 1923, 1925, 1937, 1955], "invari": 12, "higher_ord": 12, "__config__": 13, "cpp_extens": 14, "extend": [15, 33, 1909, 1910], "extens": [15, 17, 1909, 1914, 1921], "author": [15, 57], "stream": [16, 17, 18, 963, 970, 978, 1047, 1907], "event": [16, 17, 34, 36, 975, 1312, 1895], "random": [17, 21, 54, 1911, 1919, 1935, 1948], "commun": [17, 22, 25, 1880], "collect": [17, 25], "beta": [17, 31], "memori": [17, 21, 1907, 1911, 1913, 1915, 1919, 1971], "manag": [17, 26, 62, 1896, 1907, 1913, 1928, 1968], "nvidia": [17, 1918], "nvtx": [17, 1032, 1033, 1034], "jiter": [17, 1015, 1016], "sanit": [17, 18], "prototyp": [17, 1931, 1932], "usag": [18, 28, 43, 1907, 1910, 1914, 1915, 1921, 1965, 1971], "data": [21, 46, 54, 64, 1884, 1908, 1911, 1925, 1932, 1946], "dataset": 21, "map": [21, 69, 1913], "style": 21, "iter": [21, 1883], "load": [21, 1208, 1272, 1879, 1920, 1928, 1931], "order": [21, 1904], "sampler": 21, "batch": [21, 52, 1918, 1927], "non": [21, 46, 57, 1900, 1901, 1904, 1907, 1918, 1928, 1931], "work": [21, 51, 1903, 1911, 1940, 1958, 1959, 1967], "collate_fn": 21, "singl": [21, 43, 1903], "multi": [21, 25, 43, 1900, 1901], "platform": 21, "pin": [21, 1907], "ddp": 22, "hook": [22, 1904, 1915, 1965], "us": [22, 25, 57, 1883, 1904, 1907, 1909, 1912, 1923, 1925, 1927, 1928, 1929, 1931, 1940, 1959, 1961, 1967, 1969, 1971], "what": [22, 47, 50, 52, 55, 1891, 1904, 1928, 1956, 1959, 1966, 1967], "doe": [22, 1904, 1958, 1959], "powersgd": 22, "state": [22, 1915, 1928, 1971], "debug": [22, 25, 57, 75, 1881, 1931, 1932, 1955, 1959, 1969], "acknowledg": [22, 1929], "deploi": 23, "ha": 23, "been": 23, "move": 23, "multipi": 23, "determinist": 24, "come": [25, 1904], "which": [25, 1904, 1959], "environ": [25, 43, 1907, 1914, 1928, 1963], "choos": 25, "network": [25, 1907, 1911, 1915], "interfac": [25, 1206, 1913], "other": [25, 1900, 1919, 1928, 1940, 1948, 1958], "nccl": [25, 1907], "basic": [25, 1884, 1898, 1910, 1936, 1946, 1967], "initi": [25, 1900, 1915, 1946], "tcp": 25, "share": [25, 1896, 1907, 1928, 1938], "file": [25, 1896, 1928], "system": [25, 1884, 1896, 1910], "post": [25, 1931], "kei": [25, 70, 1921], "valu": [25, 67, 604, 1883, 1884, 1918, 1933, 1938], "store": [25, 42], "group": 25, "point": [25, 1914], "synchron": [25, 971, 1048, 1321], "asynchron": [25, 1884, 1907, 1917], "third": 25, "parti": 25, "launch": [25, 43, 1967], "spawn": [25, 1896], "applic": 25, "monitor": [25, 1894], "barrier": 25, "torch_distributed_debug": 25, "log": [25, 360, 1274, 1914], "join": [26, 1948], "elast": [28, 33, 43], "advanc": [28, 1915], "plugin": 28, "parallel": [30, 1598, 1907, 1908, 1911, 1929, 1948], "probabl": 31, "score": 31, "pathwis": 31, "deriv": [31, 1904], "exponentialfamili": 31, "bernoulli": [31, 144, 912], "binomi": 31, "categor": 31, "cauchi": 31, "chi2": 31, "continuousbernoulli": 31, "dirichlet": 31, "exponenti": [31, 1780], "fishersnedecor": 31, "gamma": 31, "geometr": 31, "gumbel": 31, "halfcauchi": 31, "halfnorm": 31, "independ": 31, "kumaraswami": 31, "lkjcholeski": 31, "laplac": 31, "lognorm": 31, "lowrankmultivariatenorm": 31, "mixturesamefamili": 31, "multinomi": [31, 411, 1324], "multivariatenorm": 31, "negativebinomi": 31, "normal": [31, 1569, 1668, 1900, 1927], "onehotcategor": 31, "pareto": 31, "poisson": [31, 1715], "relaxedbernoulli": 31, "logitrelaxedbernoulli": 31, "relaxedonehotcategor": 31, "studentt": 31, "transformeddistribut": 31, "uniform": 31, "vonmis": 31, "weibul": 31, "wishart": 31, "kl": 31, "diverg": [31, 1886], "constraint": [31, 1907], "registri": [31, 42, 78], "dlpack": 32, "agent": 33, "server": [33, 42, 44], "concept": 33, "watchdog": 33, "custom": [34, 44, 57, 1884, 1903, 1907, 1909, 1910, 1915, 1925, 1927, 1928, 1931, 1955], "launcher": 34, "rendezv": [34, 42, 43], "handler": [34, 39, 42, 1911], "metric": [34, 39], "error": [35, 1911, 1921, 1931, 1932, 1969], "propag": [35, 1898], "object": [36, 1928], "torchelast": 38, "kubernet": 38, "multipl": [40, 1903, 1907, 1909, 1929], "worker": [40, 43, 1911], "quickstart": 41, "except": [42, 1911], "dynam": [42, 46, 54, 57, 66, 67, 1931, 1934, 1957, 1958], "c10d": 42, "etcd": 42, "legaci": 42, "torchrun": 43, "node": [43, 47, 71, 74, 77, 900, 901, 902, 903, 904, 1904], "stack": [43, 1817, 1931], "fault": 43, "toler": 43, "size": [43, 527, 1899], "failur": 43, "min": [43, 402, 1303], "max": [43, 398, 1298], "4": [43, 52], "up": [43, 1959], "membership": [43, 1884], "note": [43, 70, 1880, 1884, 1907, 1931, 1936], "definit": [43, 1884], "deploy": [43, 1914], "import": [43, 1879, 1921, 1928, 1958], "notic": [43, 1879], "expir": 44, "timer": 44, "client": 44, "write": [44, 57, 1904, 1909, 1925, 1968], "train": [45, 1903, 1915, 1917, 1931, 1959], "script": [45, 1212, 1881, 1921, 1925], "exist": 46, "framework": [46, 1928, 1936], "an": [46, 1879, 1925, 1927, 1928], "express": [46, 1883, 1884], "special": [46, 1884, 1904, 1941], "shape": [46, 54, 66, 513, 1925, 1957, 1958], "limit": [46, 54, 57, 1879, 1910, 1925, 1954, 1959, 1960, 1965], "break": [46, 1883, 1884, 1959, 1967, 1969], "depend": [46, 54, 1923, 1928, 1937], "miss": 46, "meta": [46, 1884], "kernel": [46, 1913, 1931, 1963], "read": [46, 50, 1925, 1951, 1966], "addit": [46, 70], "link": 46, "user": [46, 1928, 1938, 1951], "deep": [46, 1951, 1956], "dive": [46, 1951, 1956], "ir": [47, 1964, 1968], "assumpt": [47, 1938], "i": [47, 55, 1891, 1904, 1928, 1956, 1958, 1959, 1966], "exportedprogram": 47, "call_funct": 47, "metadata": [47, 900, 1914], "placehold": 47, "output": [47, 1912], "get_attr": 47, "symint": [47, 1957], "faketensor": 47, "pytre": 47, "abl": 47, "helper": 48, "fullyshardeddataparallel": 49, "func": [50, 51, 53, 55, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1909, 1910, 1959], "ar": [50, 55, 1879, 1904, 1928, 1959], "compos": [50, 55, 1955], "why": [50, 55, 1907, 1912, 1928, 1940, 1959], "patch": [52, 1928], "norm": [52, 443, 1257, 1667], "": [52, 1928, 1959, 1966], "happen": 52, "option": [52, 1883, 1906, 1921, 1927], "batchnorm": 52, "paramet": [52, 1615, 1883, 1927], "functorch": [52, 53], "eval": [52, 1904], "migrat": [53, 1881], "make_funct": 53, "combine_state_for_ensembl": 53, "ux": 54, "vmap": [54, 55, 882, 1141, 1872, 1909, 1910, 1959], "mutat": [54, 1948], "arbitrari": [54, 1928], "structur": [54, 64, 1884, 1940], "out": [54, 1897, 1911], "item": [54, 343], "nonzero": [54, 442, 1666], "friend": 54, "whirlwind": 55, "tour": 55, "grad": [55, 281, 897, 1131, 1904, 1907, 1959], "auto": 55, "vector": 55, "vjp": [55, 896, 1140], "jacobian": [55, 893], "product": [55, 1889, 1959], "jvp": [55, 881, 894, 1136, 1910], "jacrev": [55, 1135], "jacfwd": [55, 1134], "hessian": [55, 891, 1133], "futur": 56, "A": [57, 1915, 1923], "quick": 57, "primer": 57, "manipul": [57, 1898], "direct": 57, "subgraph": [57, 1968], "rewrit": [57, 1968], "With": [57, 1886], "replace_pattern": 57, "proxi": 57, "retrac": 57, "interpret": [57, 1881], "pattern": [57, 1883, 1925, 1928], "introduct": [57, 1891, 1899, 1931], "pitfal": [57, 1925], "pdb": 57, "print": [57, 1883, 1884], "to_fold": 57, "graphmodul": 57, "avail": 57, "debugg": 57, "symbol": [57, 73, 76, 1925, 1931, 1948], "trace": [57, 581, 1216, 1844, 1881, 1925, 1930, 1931, 1959, 1960, 1967], "static": [57, 1925, 1931], "tracer": [57, 1881], "leaf": 57, "miscellanea": 57, "exportdb": 58, "tag": [58, 1948], "support": [58, 1882, 1884, 1891, 1897, 1898, 1899, 1910, 1925, 1926, 1931, 1940, 1959, 1965], "assume_constant_result": [58, 68, 945], "autograd_funct": 58, "class_method": 58, "cond_branch_class_method": [58, 65, 66], "cond_branch_nested_funct": [58, 65, 66], "cond_branch_nonlocal_vari": [58, 65, 66], "cond_closed_over_vari": [58, 61, 65], "cond_operand": [58, 65, 66], "cond_pred": [58, 65, 66], "constrain_as_size_exampl": [58, 67, 68], "constrain_as_value_exampl": [58, 67, 68], "decor": 58, "dictionari": [58, 64, 1884], "dynamic_shape_assert": [58, 59], "dynamic_shape_constructor": [58, 66], "dynamic_shape_if_guard": [58, 63, 66], "dynamic_shape_map": [58, 66, 69], "dynamic_shape_sl": [58, 66], "dynamic_shape_view": [58, 66], "fn_with_kwarg": [58, 64], "list_contain": [58, 59, 64, 66], "list_unpack": [58, 63, 64], "nested_funct": [58, 61], "null_context_manag": [58, 62], "pytree_flatten": 58, "scalar_output": [58, 66], "specialized_attribut": 58, "static_for_loop": [58, 63], "static_if": [58, 63], "tensor_setattr": [58, 60], "Not": [58, 1886], "yet": 58, "dynamic_shape_round": [58, 60, 66], "type_reflection_method": [58, 60], "assert": [59, 1884, 1913], "builtin": [60, 1882], "closur": [61, 1927], "escap": [68, 1959], "hatch": [68, 1959], "fxe0007": 70, "fxe0008": 71, "fxe0010": 72, "pass": [72, 1884, 1907, 1917, 1931, 1937, 1968], "fxe0011": 73, "call": [73, 1883, 1884, 1910, 1959], "fxe0012": 74, "unsupport": [74, 1883, 1884, 1886, 1925, 1926], "analysi": 74, "fxe0013": 75, "fxe0014": 76, "find": [76, 78, 1928, 1967], "opschema": 76, "match": [76, 1883, 1898], "fxe0015": 77, "insert": 77, "fxe0016": 78, "overload": 78, "abs_": 81, "absolut": [82, 672], "absolute_": 83, "aco": [84, 673], "acos_": 85, "acosh": [86, 674], "acosh_": 87, "add_": 89, "addbmm": [90, 676], "addbmm_": 91, "addcdiv": [92, 677], "addcdiv_": 93, "addcmul": [94, 678], "addcmul_": 95, "addmm": [96, 679, 1797], "addmm_": 97, "addmv": [98, 680], "addmv_": 99, "addr": [100, 681], "addr_": 101, "adjoint": [102, 682], "all": [103, 683, 1909, 1925, 1927], "allclos": [104, 684], "amax": [105, 685], "amin": [106, 686], "aminmax": [107, 687], "ani": [109, 689, 1884, 1959, 1966], "apply_": 110, "arcco": [111, 856], "arccos_": 112, "arccosh": [113, 857], "arccosh_": 114, "arcsin": [115, 858], "arcsin_": 116, "arcsinh": [117, 859], "arcsinh_": 118, "arctan": [119, 860], "arctan2": [120, 861], "arctan2_": 121, "arctan_": 122, "arctanh": [123, 862], "arctanh_": 124, "argmax": [125, 864], "argmin": [126, 865], "argsort": [127, 866], "argwher": [128, 867], "as_strid": [129, 868], "as_subclass": 130, "asin": [131, 871], "asin_": 132, "asinh": [133, 872], "asinh_": 134, "atan": [135, 873], "atan2": [136, 874], "atan2_": 137, "atan_": 138, "atanh": [139, 875], "atanh_": 140, "backward": [141, 879, 883, 1904, 1905, 1907, 1912, 1937], "baddbmm": [142, 910], "baddbmm_": 143, "bernoulli_": 145, "bincount": [147, 913], "bitwise_and": [148, 914], "bitwise_and_": 149, "bitwise_left_shift": [150, 915], "bitwise_left_shift_": 151, "bitwise_not": [152, 916], "bitwise_not_": 153, "bitwise_or": [154, 917], "bitwise_or_": 155, "bitwise_right_shift": [156, 918], "bitwise_right_shift_": 157, "bitwise_xor": [158, 919], "bitwise_xor_": 159, "bmm": [160, 922], "bool": 161, "broadcast_to": [162, 925], "byte": 163, "cauchy_": 164, "ccol_indic": 165, "cdoubl": 166, "ceil": [167, 931], "ceil_": 168, "cfloat": 169, "chalf": 170, "char": 171, "choleski": [172, 933, 1230], "cholesky_invers": [173, 934], "cholesky_solv": [174, 935], "chunk": [175, 936], "clamp": [176, 761, 937], "clamp_": 177, "clip": [178, 938, 1903], "clip_": 179, "clone": [180, 939], "coalesc": 181, "col_indic": 182, "conj": [183, 955], "conj_phys": [184, 956], "conj_physical_": 185, "contigu": 186, "copy_": 187, "copysign": [188, 957], "copysign_": 189, "corrcoef": [190, 958], "co": [191, 959], "cos_": 192, "cosh": [193, 960], "cosh_": 194, "count_nonzero": [195, 961], "cov": [196, 962], "cross": [198, 972, 1233, 1904], "crow_indic": 199, "cummax": [201, 1051], "cummin": [202, 1052], "cumprod": [203, 1053], "cumprod_": 204, "cumsum": [205, 1054], "cumsum_": 206, "data_ptr": 207, "deg2rad": [208, 1056], "dense_dim": 209, "dequant": [210, 1057, 1931], "det": [211, 1058, 1234], "detach": 212, "detach_": 213, "devic": [214, 994, 1907, 1918, 1943], "diag": [215, 1059], "diag_emb": [216, 1060], "diagflat": [217, 1061], "diagon": [218, 1062, 1235], "diagonal_scatt": [219, 1063], "diff": [220, 1064], "digamma": [221, 1065], "digamma_": 222, "dim": [223, 1897], "dim_ord": 224, "dist": [225, 1066], "div": [226, 1067, 1920], "div_": 227, "divid": [228, 1068], "divide_": 229, "dot": [230, 1069], "doubl": 231, "dsplit": [232, 1070], "element_s": 233, "eq": [234, 1077], "eq_": 235, "equal": [236, 1078], "erf": [237, 1079], "erf_": 238, "erfc": [239, 1080], "erfc_": 240, "erfinv": [241, 1081], "erfinv_": 242, "exp": [243, 1082], "exp_": 244, "expand": 245, "expand_a": 246, "expm1": [247, 1084], "expm1_": 248, "exponential_": 249, "fill_": 250, "fill_diagonal_": 251, "fix_": 253, "flatten": [254, 1111, 1380], "flip": [255, 1112], "fliplr": [256, 1113], "flipud": [257, 1114], "float": [258, 1920], "float_pow": [259, 1115], "float_power_": 260, "floor": [261, 1116], "floor_": 262, "floor_divid": [263, 1117], "floor_divide_": 264, "fmax": [265, 1118], "fmin": [266, 1119], "fmod": [267, 1120], "fmod_": 268, "frac": [269, 1121], "frac_": 270, "frexp": [271, 1122], "gather": [272, 987, 1142], "gcd": [273, 1143], "gcd_": 274, "ge": [275, 1144], "ge_": 276, "geometric_": 277, "geqrf": [278, 1145], "ger": [279, 1146], "get_devic": 280, "greater": [282, 1154], "greater_": 283, "greater_equ": [284, 1155], "greater_equal_": 285, "gt": [286, 1156], "gt_": 287, "half": 288, "hardshrink": [289, 1390, 1536], "heavisid": [290, 1159], "histc": [291, 1160], "histogram": [292, 1161], "hsplit": [293, 1163], "hypot": [294, 1166], "hypot_": 295, "i0": [296, 1167], "i0_": 297, "igamma": [298, 1168], "igamma_": 299, "igammac": [300, 1169], "igammac_": 301, "index_add": [303, 1171], "index_add_": 304, "index_copi": [305, 1172], "index_copy_": 306, "index_fil": 307, "index_fill_": 308, "index_put": 309, "index_put_": 310, "index_reduc": [311, 1173], "index_reduce_": 312, "index_select": [313, 1174], "indic": [314, 1880], "inner": [315, 1177], "int": 316, "int_repr": 317, "invers": [318, 1178, 1889], "is_coalesc": 319, "is_complex": [320, 1179], "is_conj": [321, 1180], "is_contigu": 322, "is_cuda": 323, "is_floating_point": [324, 1182], "is_infer": 325, "is_leaf": 326, "is_meta": 327, "is_pin": 328, "is_quant": 329, "is_set_to": 330, "is_shar": 331, "is_sign": 332, "is_spars": 333, "is_sparse_csr": 334, "isclos": [335, 1189], "isfinit": [336, 1190], "isinf": [337, 1192], "isnan": [338, 1193], "isneginf": [339, 1194], "isposinf": [340, 1195], "isreal": [341, 1196], "istft": [342, 1197], "items": 344, "kthvalu": [345, 1222], "lcm": [346, 1223], "lcm_": 347, "ldexp": [348, 1224], "ldexp_": 349, "le": [350, 1225], "le_": 351, "lerp": [352, 1226], "lerp_": 353, "less": [354, 1227], "less_": 355, "less_equ": [356, 1228], "less_equal_": 357, "lgamma": [358, 1229], "lgamma_": 359, "log10": [361, 1275], "log10_": 362, "log1p": [363, 1276], "log1p_": 364, "log2": [365, 1277], "log2_": 366, "log_": 367, "log_normal_": 368, "logaddexp": [369, 1278], "logaddexp2": [370, 1279], "logcumsumexp": [371, 1280], "logdet": [372, 1281], "logical_and": [373, 1282], "logical_and_": 374, "logical_not": [375, 1283], "logical_not_": 376, "logical_or": [377, 1284], "logical_or_": 378, "logical_xor": [379, 1285], "logical_xor_": 380, "logit": [381, 1286], "logit_": 382, "logsumexp": [383, 1288], "long": 384, "lt": [385, 1289], "lt_": 386, "lu": [387, 1247, 1290], "lu_solv": [388, 1250, 1291], "map_": 389, "masked_fil": 390, "masked_fill_": 391, "masked_scatt": 392, "masked_scatter_": 393, "masked_select": [394, 1294], "matmul": [395, 1251, 1295], "matrix_exp": [396, 1252, 1296], "matrix_pow": [397, 1254, 1297], "maximum": [399, 1299], "mean": [400, 1300], "median": [401, 1301], "minimum": [403, 1304], "mm": [404, 1305, 1801], "moveaxi": [406, 1307], "movedim": [407, 1308], "msort": [408, 1322], "mul": [409, 1323], "mul_": 410, "multipli": [412, 1325], "multiply_": 413, "mv": [414, 1326], "mvlgamma": [415, 1327], "mvlgamma_": 416, "nan_to_num": [417, 1328], "nan_to_num_": 418, "nanmean": [419, 1329], "nanmedian": [420, 1330], "nanquantil": [421, 1331], "nansum": [422, 1332], "narrow": [423, 1333], "narrow_copi": [424, 1334], "nbyte": 425, "ndim": 426, "ndimens": 427, "ne": [428, 1335], "ne_": 429, "neg": [430, 432, 1336, 1337], "neg_": 431, "negative_": 433, "nelement": 434, "new_empti": 435, "new_ful": 436, "new_on": 437, "new_tensor": 438, "new_zero": 439, "nextaft": [440, 1338], "nextafter_": 441, "normal_": 444, "not_equ": [445, 1669], "not_equal_": 446, "numel": [447, 1670], "numpi": [448, 1925, 1959], "orgqr": [449, 1709], "ormqr": [450, 1710], "outer": [451, 1711], "permut": [452, 1713, 1897], "pin_memori": 453, "pinvers": [454, 1714], "polygamma": [455, 1717], "polygamma_": 456, "posit": [457, 1718], "pow": [458, 1719], "pow_": 459, "prod": [460, 1720], "put_": 461, "q_per_channel_axi": 462, "q_per_channel_scal": 463, "q_per_channel_zero_point": 464, "q_scale": 465, "q_zero_point": 466, "qr": [467, 1259, 1722], "qscheme": 468, "quantil": [469, 1723], "rad2deg": [470, 1730], "random_": 471, "ravel": [472, 1739], "reciproc": [474, 1741], "reciprocal_": 475, "record_stream": 476, "register_hook": [477, 903], "register_post_accumulate_grad_hook": 478, "remaind": [479, 1742], "remainder_": 480, "renorm": [481, 1743], "renorm_": 482, "repeat": 483, "repeat_interleav": [484, 1744], "requires_grad": [485, 1904], "requires_grad_": 486, "reshap": [487, 1745], "reshape_a": 488, "resize_": 489, "resize_as_": 490, "resolve_conj": [491, 1746], "resolve_neg": [492, 1747], "retain_grad": 493, "retains_grad": 494, "roll": [495, 1749], "rot90": [496, 1750], "round": [497, 1751], "round_": 498, "row_indic": 499, "rsqrt": [500, 1753], "rsqrt_": 501, "scatter": [502, 989, 1755], "scatter_": 503, "scatter_add": [504, 1756], "scatter_add_": 505, "scatter_reduc": [506, 1757], "scatter_reduce_": 507, "select": [508, 1760, 1891], "select_scatt": [509, 1761], "set_": 510, "sgn": [511, 1774], "sgn_": 512, "share_memory_": 514, "short": 515, "sigmoid": [516, 749, 1464, 1585, 1775], "sigmoid_": 517, "sign": [518, 1776], "sign_": 519, "signbit": [520, 1788], "sin": [521, 1789], "sin_": 522, "sinc": [523, 1790], "sinc_": 524, "sinh": [525, 1791], "sinh_": 526, "slice_scatt": [528, 1792], "slogdet": [529, 1260, 1793], "smm": [530, 1794], "softmax": [531, 1467, 1589, 1795, 1803], "sort": [532, 1796], "sparse_dim": 533, "sparse_mask": 534, "sparse_resize_": 535, "sparse_resize_and_clear_": 536, "split": [537, 1812], "sqrt": [538, 1813], "sqrt_": 539, "squar": [540, 1814], "square_": 541, "squeez": [542, 1815], "squeeze_": 543, "sspaddmm": [544, 1816], "std": [545, 1818], "stft": [546, 1820], "storag": [547, 1942], "storage_offset": 548, "storage_typ": 549, "stride": 550, "sub": [551, 1821], "sub_": 552, "subtract": [553, 1822], "subtract_": 554, "sum": [555, 1805, 1823, 1900], "sum_to_s": 556, "svd": [557, 1264, 1824], "swapax": [558, 1826], "swapdim": [559, 1827], "t": [560, 1834, 1884, 1911, 1959], "t_": 561, "take": [562, 1835, 1927], "take_along_dim": [563, 1836], "tan": [564, 1837], "tan_": 565, "tanh": [566, 1474, 1594, 1838], "tanh_": 567, "tensor_split": [568, 1840], "tile": [569, 1842], "to_dens": 571, "to_mkldnn": 572, "to_spars": 573, "to_sparse_bsc": 574, "to_sparse_bsr": 575, "to_sparse_coo": 576, "to_sparse_csc": 577, "to_sparse_csr": 578, "tolist": 579, "topk": [580, 1843], "transpos": [582, 1845], "transpose_": 583, "triangular_solv": [584, 1848], "tril": [585, 1849], "tril_": 586, "triu": [587, 1851], "triu_": 588, "true_divid": [589, 1853], "true_divide_": 590, "trunc": [591, 1854], "trunc_": 592, "type_a": 594, "unbind": [595, 1855, 1899], "unflatten": [596, 1484, 1856], "unfold": [597, 1485, 1601], "uniform_": 598, "uniqu": [599, 1857], "unique_consecut": [600, 1858], "unsqueez": [601, 1860], "unsqueeze_": 602, "untyped_storag": 603, "var": [605, 1867], "vdot": [606, 1869], "view": [607, 1891, 1920, 1944, 1967], "view_a": 608, "vsplit": [609, 1873], "where": [610, 1875, 1879], "xlogi": [611, 1876], "xlogy_": 612, "zero_": 613, "_assert": 614, "_foreach_ab": 615, "_foreach_abs_": 616, "_foreach_aco": 617, "_foreach_acos_": 618, "_foreach_asin": 619, "_foreach_asin_": 620, "_foreach_atan": 621, "_foreach_atan_": 622, "_foreach_ceil": 623, "_foreach_ceil_": 624, "_foreach_co": 625, "_foreach_cos_": 626, "_foreach_cosh": 627, "_foreach_cosh_": 628, "_foreach_erf": 629, "_foreach_erf_": 630, "_foreach_erfc": 631, "_foreach_erfc_": 632, "_foreach_exp": 633, "_foreach_exp_": 634, "_foreach_expm1": 635, "_foreach_expm1_": 636, "_foreach_floor": 637, "_foreach_floor_": 638, "_foreach_frac": 639, "_foreach_frac_": 640, "_foreach_lgamma": 641, "_foreach_lgamma_": 642, "_foreach_log": 643, "_foreach_log10": 644, "_foreach_log10_": 645, "_foreach_log1p": 646, "_foreach_log1p_": 647, "_foreach_log2": 648, "_foreach_log2_": 649, "_foreach_log_": 650, "_foreach_neg": 651, "_foreach_neg_": 652, "_foreach_reciproc": 653, "_foreach_reciprocal_": 654, "_foreach_round": 655, "_foreach_round_": 656, "_foreach_sigmoid": 657, "_foreach_sigmoid_": 658, "_foreach_sin": 659, "_foreach_sin_": 660, "_foreach_sinh": 661, "_foreach_sinh_": 662, "_foreach_sqrt": 663, "_foreach_sqrt_": 664, "_foreach_tan": 665, "_foreach_tan_": 666, "_foreach_trunc": 667, "_foreach_trunc_": 668, "_foreach_zero_": 669, "_log": [670, 1890], "set_log": 670, "bnrelu2d": [690, 713], "bnrelu3d": [691, 714], "convbn1d": [692, 702], "convbn2d": [693, 703], "convbn3d": [694, 704], "convbnrelu1d": [695, 705], "convbnrelu2d": [696, 706], "convbnrelu3d": [697, 707], "convrelu1d": [698, 715], "convrelu2d": [699, 708, 716], "convrelu3d": [700, 709, 717], "linearrelu": [701, 710, 718, 719], "freeze_bn_stat": 711, "update_bn_stat": 712, "conv2d": [720, 729, 763, 1363, 1509], "conv3d": [721, 730, 764, 1364, 1510], "lstm": [724, 752, 1404, 1919], "multiheadattent": [725, 1440], "batchnorm2d": [726, 1353], "batchnorm3d": [727, 1354], "conv1d": [728, 762, 1362, 1508], "convtranspose1d": [731, 1365], "convtranspose2d": [732, 1366], "convtranspose3d": [733, 1367], "elu": [734, 765, 1376, 1522], "embed": [735, 1377, 1524], "embeddingbag": [736, 1378], "fxfloatfunct": 737, "floatfunct": 738, "groupnorm": [739, 1389], "hardswish": [740, 767, 1392, 1538], "instancenorm1d": [741, 1397], "instancenorm2d": [742, 1398], "instancenorm3d": [743, 1399], "layernorm": [744, 1406], "leakyrelu": [745, 1420], "qfunction": 747, "relu6": [748, 1454, 1579], "gru": [750, 1386], "grucel": [751, 1387], "lstmcell": [753, 1405], "rnncell": [755, 1451], "adaptive_avg_pool2d": [756, 1493], "adaptive_avg_pool3d": [757, 1494], "avg_pool2d": [758, 1501], "avg_pool3d": [759, 1502], "celu": [760, 1356, 1507], "hardsigmoid": [766, 1391, 1537], "hardtanh": [768, 1393, 1539], "interpol": [769, 1544], "leaky_relu": [770, 1548], "max_pool1d": [772, 1557], "max_pool2d": [773, 1558], "threshold": [774, 1476, 1596], "upsampl": [775, 1486, 1602], "upsample_bilinear": [776, 1603], "upsample_nearest": [777, 1604], "dequantstub": 778, "quantstub": 779, "quantwrapp": 780, "add_quant_dequ": 781, "backendconfig": 782, "backendpatternconfig": 783, "dtypeconfig": 784, "dtypewithconstraint": 785, "observationtyp": 786, "convert": [787, 1958], "default_eval_fn": 788, "fakequant": [789, 1931], "fakequantizebas": 790, "fixedqparamsfakequant": 791, "fusedmovingavgobsfakequant": 792, "default_fake_qu": 793, "default_fused_act_fake_qu": 794, "default_fused_per_channel_wt_fake_qu": 795, "default_fused_wt_fake_qu": 796, "default_histogram_fake_qu": 797, "default_per_channel_weight_fake_qu": 798, "default_weight_fake_qu": 799, "disable_fake_qu": 800, "disable_observ": 801, "enable_fake_qu": 802, "enable_observ": 803, "fuse_modul": 804, "convertcustomconfig": 805, "fusecustomconfig": 806, "preparecustomconfig": 807, "standalonemoduleconfigentri": 808, "histogramobserv": 809, "minmaxobserv": 810, "movingaverageminmaxobserv": 811, "movingaverageperchannelminmaxobserv": 812, "noopobserv": 813, "observerbas": 814, "perchannelminmaxobserv": 815, "placeholderobserv": 816, "recordingobserv": 817, "default_debug_observ": 818, "default_dynamic_quant_observ": 819, "default_float_qparams_observ": 820, "default_histogram_observ": 821, "default_observ": 822, "default_per_channel_weight_observ": 823, "default_placeholder_observ": 824, "default_weight_observ": 825, "get_observer_state_dict": 826, "load_observer_state_dict": 827, "prepar": [828, 1931, 1934], "prepare_qat": 829, "propagate_qconfig": 830, "qconfig": [831, 1931, 1934], "default_activation_only_qconfig": 832, "default_debug_qconfig": 833, "default_dynamic_qconfig": 834, "default_per_channel_qconfig": 835, "default_qat_qconfig": 836, "default_qat_qconfig_v2": 837, "default_qconfig": 838, "default_weight_only_qconfig": 839, "float16_dynamic_qconfig": 840, "float16_static_qconfig": 841, "float_qparams_weight_only_qconfig": 842, "per_channel_dynamic_qconfig": 843, "qconfigmap": 844, "get_default_qat_qconfig_map": 845, "get_default_qconfig_map": 846, "quantiz": [847, 1900, 1915, 1925, 1931, 1932, 1933, 1934], "quantize_dynam": 848, "convert_fx": 849, "fuse_fx": 850, "prepare_fx": 851, "prepare_qat_fx": 852, "quantize_qat": 853, "swap_modul": 854, "arang": 855, "are_deterministic_algorithms_en": 863, "as_tensor": 869, "asarrai": 870, "atleast_1d": 876, "atleast_2d": 877, "atleast_3d": 878, "dual_level": 884, "forward_ad": [885, 886], "make_du": 885, "unpack_du": 886, "functionctx": [887, 888, 889, 890], "mark_dirti": 887, "mark_non_differenti": 888, "save_for_backward": 889, "set_materialize_grad": 890, "hvp": 892, "vhp": 895, "gradcheck": [898, 899, 1912], "gradgradcheck": [899, 1912], "name": [901, 1883, 1897, 1898], "next_funct": 902, "register_prehook": 904, "load_nvprof": 905, "export_chrome_trac": 906, "key_averag": 907, "self_cpu_time_tot": 908, "total_averag": 909, "bartlett_window": 911, "blackman_window": 920, "block_diag": 921, "broadcast_shap": 923, "broadcast_tensor": 924, "bucket": 926, "can_cast": 927, "cartesian_prod": 928, "cat": 929, "cdist": 930, "chain_matmul": 932, "column_stack": 940, "combin": [941, 1909], "compiled_with_cxx11_abi": 943, "allow_in_graph": [944, 1960], "cudagraph_mark_step_begin": 947, "list_backend": 949, "reset": 950, "concat": 952, "concaten": 953, "streamcontext": [964, 979], "current_devic": [965, 991], "current_stream": [966, 992], "device_count": [967, 995], "is_avail": [968, 1012], "set_devic": [969, 1041], "cudagraph": [973, 1954], "cudapluggablealloc": 974, "externalstream": 976, "outofmemoryerror": 977, "caching_allocator_alloc": 980, "caching_allocator_delet": 981, "can_device_access_p": 982, "change_current_alloc": 983, "clock_rat": 984, "comm": [985, 986, 987, 988, 989], "broadcast": [985, 1905], "broadcast_coalesc": 986, "reduce_add": 988, "current_blas_handl": 990, "default_stream": 993, "device_of": 996, "empty_cach": [997, 1311], "get_allocator_backend": 998, "get_arch_list": 999, "get_device_cap": 1000, "get_device_nam": 1001, "get_device_properti": 1002, "get_gencode_flag": 1003, "get_rng_stat": [1004, 1152, 1313], "get_rng_state_al": 1005, "get_sync_debug_mod": 1006, "graph_pool_handl": 1008, "init": [1009, 1902], "initial_se": [1010, 1176], "ipc_collect": 1011, "is_current_stream_captur": 1013, "is_initi": 1014, "_create_jit_fn": 1015, "_create_multi_output_jit_fn": 1016, "list_gpu_process": 1017, "make_graphed_cal": 1018, "manual_se": [1019, 1293, 1314], "manual_seed_al": 1020, "max_memory_alloc": 1021, "max_memory_cach": 1022, "max_memory_reserv": 1023, "mem_get_info": 1024, "memory_alloc": 1025, "memory_cach": 1026, "memory_reserv": 1027, "memory_snapshot": 1028, "memory_stat": 1029, "memory_summari": 1030, "memory_usag": 1031, "mark": 1032, "range_pop": 1033, "range_push": 1034, "power_draw": 1035, "reset_max_memory_alloc": 1036, "reset_max_memory_cach": 1037, "reset_peak_memory_stat": 1038, "seed": [1039, 1318, 1759], "seed_al": 1040, "set_per_process_memory_fract": [1042, 1319], "set_rng_stat": [1043, 1320, 1772], "set_rng_state_al": 1044, "set_stream": 1045, "set_sync_debug_mod": 1046, "temperatur": 1049, "cumulative_trapezoid": 1055, "dstack": 1071, "einsum": 1072, "empti": 1073, "empty_lik": 1074, "empty_strid": 1075, "enable_grad": 1076, "exp2": 1083, "ey": 1085, "fake_quantize_per_channel_affin": 1086, "fake_quantize_per_tensor_affin": 1087, "fft2": 1089, "fftfreq": 1090, "fftn": 1091, "fftshift": 1092, "hfft": 1093, "hfft2": 1094, "hfftn": 1095, "ifft": 1096, "ifft2": 1097, "ifftn": 1098, "ifftshift": 1099, "ihfft": 1100, "ihfft2": 1101, "ihfftn": 1102, "irfft": 1103, "irfft2": 1104, "irfftn": 1105, "rfft": 1106, "rfft2": 1107, "rfftfreq": 1108, "rfftn": 1109, "from_dlpack": 1123, "from_fil": 1124, "from_numpi": 1125, "frombuff": 1126, "full": [1127, 1920], "full_lik": 1128, "functional_cal": [1129, 1662], "grad_and_valu": 1132, "replace_all_batch_norm_modules_": 1138, "stack_module_st": 1139, "get_default_dtyp": 1147, "get_deterministic_debug_mod": 1148, "get_float32_matmul_precis": 1149, "get_num_interop_thread": 1150, "get_num_thread": 1151, "hamming_window": 1157, "hann_window": 1158, "histogramdd": 1162, "hspmm": 1164, "hstack": 1165, "inference_mod": 1175, "is_deterministic_algorithms_warn_only_en": 1181, "is_grad_en": 1183, "is_inference_mode_en": 1184, "is_nonzero": 1185, "is_storag": 1186, "is_tensor": 1187, "is_warn_always_en": 1188, "isin": 1191, "attribut": [1198, 1881, 1883, 1884, 1886, 1943], "scriptfunct": 1199, "scriptmodul": [1200, 1920], "annot": [1201, 1884], "enable_onednn_fus": 1202, "fork": 1203, "freez": 1204, "ignor": 1205, "isinst": 1207, "onednn_fusion_en": 1209, "optimize_for_infer": 1210, "save": [1211, 1754, 1879, 1904, 1914, 1920, 1931], "script_if_trac": 1213, "set_fusion_strategi": 1214, "strict_fus": 1215, "trace_modul": 1217, "unus": 1218, "wait": 1219, "kaiser_window": 1220, "kron": 1221, "cholesky_ex": 1231, "eig": 1236, "eigh": 1237, "eigval": 1238, "eigvalsh": 1239, "householder_product": 1240, "inv": 1241, "inv_ex": 1242, "ldl_factor": 1243, "ldl_factor_ex": 1244, "ldl_solv": 1245, "lstsq": 1246, "lu_factor": 1248, "lu_factor_ex": 1249, "matrix_norm": 1253, "matrix_rank": 1255, "multi_dot": 1256, "pinv": 1258, "solv": 1261, "solve_ex": 1262, "solve_triangular": 1263, "svdval": 1265, "tensorinv": 1266, "tensorsolv": 1267, "vander": [1268, 1866], "vecdot": 1269, "vector_norm": 1270, "linspac": 1271, "lobpcg": 1273, "logspac": 1287, "lu_unpack": 1292, "meshgrid": 1302, "current_allocated_memori": 1309, "driver_allocated_memori": 1310, "stop": 1317, "adaptiveavgpool1d": 1339, "adaptiveavgpool2d": 1340, "adaptiveavgpool3d": 1341, "adaptivelogsoftmaxwithloss": 1342, "adaptivemaxpool1d": 1343, "adaptivemaxpool2d": 1344, "adaptivemaxpool3d": 1345, "alphadropout": 1346, "avgpool1d": 1347, "avgpool2d": 1348, "avgpool3d": 1349, "bceloss": 1350, "bcewithlogitsloss": 1351, "batchnorm1d": 1352, "bilinear": [1355, 1504], "ctcloss": 1357, "channelshuffl": 1358, "constantpad1d": 1359, "constantpad2d": 1360, "constantpad3d": 1361, "cosineembeddingloss": 1368, "cosinesimilar": 1369, "crossentropyloss": 1370, "dataparallel": [1371, 1900, 1901, 1903, 1907], "dropout": [1372, 1518, 1900, 1901], "dropout1d": [1373, 1519], "dropout2d": [1374, 1520], "dropout3d": [1375, 1521], "featurealphadropout": 1379, "fold": [1381, 1527], "fractionalmaxpool2d": 1382, "fractionalmaxpool3d": 1383, "gelu": [1384, 1531], "glu": [1385, 1532], "gaussiannllloss": 1388, "hingeembeddingloss": 1394, "huberloss": 1395, "ident": [1396, 1636, 1644, 1884, 1911], "kldivloss": 1400, "l1loss": 1401, "lppool1d": 1402, "lppool2d": 1403, "lazybatchnorm1d": 1407, "lazybatchnorm2d": 1408, "lazybatchnorm3d": 1409, "lazyconv1d": 1410, "lazyconv2d": 1411, "lazyconv3d": 1412, "lazyconvtranspose1d": 1413, "lazyconvtranspose2d": 1414, "lazyconvtranspose3d": 1415, "lazyinstancenorm1d": 1416, "lazyinstancenorm2d": 1417, "lazyinstancenorm3d": 1418, "lazylinear": 1419, "localresponsenorm": 1422, "logsigmoid": [1423, 1553], "logsoftmax": 1424, "mseloss": 1425, "marginrankingloss": 1426, "maxpool1d": 1427, "maxpool2d": 1428, "maxpool3d": 1429, "maxunpool1d": 1430, "maxunpool2d": 1431, "maxunpool3d": 1432, "mish": [1433, 1563], "moduledict": [1435, 1884], "modulelist": [1436, 1883, 1884], "multilabelmarginloss": 1437, "multilabelsoftmarginloss": 1438, "multimarginloss": 1439, "nllloss": 1441, "prelu": [1442, 1577], "pairwisedist": 1443, "parameterdict": 1444, "parameterlist": 1445, "pixelshuffl": 1446, "pixelunshuffl": 1447, "poissonnllloss": 1448, "rnn": [1449, 1654, 1655, 1656, 1657, 1658, 1659, 1919], "rnnbase": 1450, "rrelu": [1452, 1581], "relu": [1453, 1578], "reflectionpad1d": 1455, "reflectionpad2d": 1456, "reflectionpad3d": 1457, "replicationpad1d": 1458, "replicationpad2d": 1459, "replicationpad3d": 1460, "selu": [1461, 1584], "sequenti": 1462, "silu": [1463, 1586], "smoothl1loss": 1465, "softmarginloss": 1466, "softmax2d": 1468, "softmin": [1469, 1590], "softplu": [1470, 1591], "softshrink": [1471, 1592], "softsign": [1472, 1593], "syncbatchnorm": 1473, "tanhshrink": [1475, 1595], "transformerdecod": 1478, "transformerdecoderlay": 1479, "transformerencod": 1480, "transformerencoderlay": 1481, "tripletmarginloss": 1482, "tripletmarginwithdistanceloss": 1483, "upsamplingbilinear2d": 1487, "upsamplingnearest2d": 1488, "zeropad1d": 1489, "zeropad2d": 1490, "zeropad3d": 1491, "adaptive_avg_pool1d": 1492, "adaptive_max_pool1d": 1495, "adaptive_max_pool2d": 1496, "adaptive_max_pool3d": 1497, "affine_grid": 1498, "alpha_dropout": 1499, "avg_pool1d": 1500, "batch_norm": 1503, "conv_transpose1d": 1511, "conv_transpose2d": 1512, "conv_transpose3d": 1513, "cosine_embedding_loss": 1514, "cosine_similar": 1515, "cross_entropi": 1516, "ctc_loss": 1517, "elu_": 1523, "embedding_bag": 1525, "feature_alpha_dropout": 1526, "fractional_max_pool2d": 1528, "fractional_max_pool3d": 1529, "gaussian_nll_loss": 1530, "grid_sampl": 1533, "group_norm": 1534, "gumbel_softmax": 1535, "hardtanh_": 1540, "hinge_embedding_loss": 1541, "huber_loss": 1542, "instance_norm": 1543, "kl_div": 1545, "l1_loss": 1546, "layer_norm": 1547, "leaky_relu_": 1549, "local_response_norm": 1551, "log_softmax": [1552, 1800], "lp_pool1d": 1554, "lp_pool2d": 1555, "margin_ranking_loss": 1556, "max_pool3d": 1559, "max_unpool1d": 1560, "max_unpool2d": 1561, "max_unpool3d": 1562, "mse_loss": 1564, "multi_margin_loss": 1565, "multilabel_margin_loss": 1566, "multilabel_soft_margin_loss": 1567, "nll_loss": 1568, "one_hot": 1570, "pad": [1571, 1900], "pairwise_dist": 1572, "pdist": 1573, "pixel_shuffl": 1574, "pixel_unshuffl": 1575, "poisson_nll_loss": 1576, "relu_": 1580, "rrelu_": 1582, "scaled_dot_product_attent": 1583, "smooth_l1_loss": 1587, "soft_margin_loss": 1588, "threshold_": 1597, "data_parallel": [1598, 1901], "triplet_margin_loss": 1599, "triplet_margin_with_distance_loss": 1600, "lazymodulemixin": 1605, "register_module_backward_hook": 1606, "register_module_buffer_registration_hook": 1607, "register_module_forward_hook": 1608, "register_module_forward_pre_hook": 1609, "register_module_full_backward_hook": 1610, "register_module_full_backward_pre_hook": 1611, "register_module_module_registration_hook": 1612, "register_module_parameter_registration_hook": 1613, "distributeddataparallel": [1614, 1903, 1907, 1908], "uninitializedbuff": 1616, "uninitializedparamet": 1617, "clip_grad_norm": 1618, "clip_grad_norm_": 1619, "clip_grad_value_": 1620, "convert_conv2d_weight_memory_format": 1621, "fuse_conv_bn_ev": 1622, "fuse_conv_bn_weight": 1623, "fuse_linear_bn_ev": 1624, "fuse_linear_bn_weight": 1625, "parameters_to_vector": 1626, "parametr": [1627, 1628, 1630, 1631, 1632, 1633, 1915], "orthogon": 1627, "spectral_norm": [1628, 1661], "parametrizationlist": 1629, "cach": [1630, 1879, 1907, 1913, 1962], "is_parametr": 1631, "register_parametr": 1632, "remove_parametr": 1633, "basepruningmethod": 1634, "customfrommask": 1635, "l1unstructur": 1637, "lnstructur": 1638, "pruningcontain": 1639, "randomstructur": 1640, "randomunstructur": 1641, "prune": [1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1915], "custom_from_mask": 1642, "global_unstructur": 1643, "is_prun": 1645, "l1_unstructur": 1646, "ln_structur": 1647, "random_structur": 1648, "random_unstructur": 1649, "remove_spectral_norm": 1651, "remove_weight_norm": 1652, "packedsequ": 1653, "pack_padded_sequ": 1654, "pack_sequ": 1655, "pad_packed_sequ": 1656, "pad_sequ": 1657, "unpack_sequ": 1658, "unpad_sequ": 1659, "skip_init": 1660, "stateless": 1662, "vector_to_paramet": 1663, "weight_norm": 1664, "no_grad": 1665, "ones": [1671, 1959], "ones_lik": 1672, "jitscalartyp": 1673, "graphinfo": 1674, "verificationopt": 1675, "asgd": 1676, "adadelta": 1677, "adagrad": 1678, "adam": 1679, "adamw": 1680, "adamax": 1681, "lbfg": 1682, "nadam": 1683, "add_param_group": 1684, "load_state_dict": 1685, "state_dict": [1686, 1965], "step": [1687, 1927, 1961], "zero_grad": 1688, "radam": 1689, "rmsprop": 1690, "rprop": 1691, "sgd": 1692, "sparseadam": 1693, "chainedschedul": 1694, "constantlr": 1695, "cosineannealinglr": 1696, "cosineannealingwarmrestart": 1697, "cycliclr": 1698, "exponentiallr": 1699, "lambdalr": 1700, "linearlr": 1701, "multisteplr": 1702, "multiplicativelr": 1703, "onecyclelr": 1704, "polynomiallr": 1705, "reducelronplateau": 1706, "sequentiallr": 1707, "steplr": 1708, "pca_lowrank": 1712, "polar": 1716, "promote_typ": 1721, "quantize_per_channel": 1724, "quantize_per_tensor": 1725, "quantized_batch_norm": 1726, "quantized_max_pool1d": 1727, "quantized_max_pool2d": 1728, "sobolengin": 1729, "rand": 1731, "rand_lik": 1732, "randint": 1733, "randint_lik": 1734, "randn": 1735, "randn_lik": 1736, "randperm": 1737, "rang": [1738, 1883], "result_typ": 1748, "row_stack": 1752, "searchsort": 1758, "set_default_devic": 1762, "set_default_dtyp": 1763, "set_default_tensor_typ": 1764, "set_deterministic_debug_mod": 1765, "set_float32_matmul_precis": 1766, "set_flush_denorm": 1767, "set_grad_en": 1768, "set_num_interop_thread": 1769, "set_num_thread": 1770, "set_printopt": 1771, "set_warn_alwai": 1773, "signal": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1939], "bartlett": 1777, "blackman": 1778, "cosin": 1779, "gaussian": 1781, "general_cosin": 1782, "general_ham": 1783, "ham": 1784, "hann": 1785, "kaiser": 1786, "nuttal": 1787, "as_sparse_gradcheck": 1798, "check_sparse_tensor_invari": 1799, "sampled_addmm": 1802, "spdiag": 1804, "sparse_bsc_tensor": 1806, "sparse_bsr_tensor": 1807, "sparse_compressed_tensor": 1808, "sparse_coo_tensor": 1809, "sparse_csc_tensor": 1810, "sparse_csr_tensor": 1811, "std_mean": 1819, "svd_lowrank": 1825, "sym_float": 1828, "sym_int": 1829, "sym_it": 1830, "sym_max": 1831, "sym_min": 1832, "sym_not": 1833, "tensordot": 1841, "trapezoid": 1846, "trapz": 1847, "tril_indic": 1850, "triu_indic": 1852, "unravel_index": 1859, "use_deterministic_algorithm": 1861, "generate_methods_for_privateuse1_backend": 1862, "get_cpp_backtrac": 1863, "rename_privateuse1_backend": 1864, "set_modul": 1865, "var_mean": 1868, "view_as_complex": 1870, "view_as_r": 1871, "vstack": 1874, "zero": 1877, "zeros_lik": 1878, "hub": 1879, "publish": 1879, "entrypoint": 1879, "run": [1879, 1966], "my": [1879, 1904, 1911, 1928, 1959, 1966], "download": 1879, "logic": [1879, 1883], "known": [1879, 1881], "bind": 1880, "tabl": [1880, 1920], "built": [1881, 1882, 1884, 1925], "comparison": [1881, 1883, 1884, 1948, 1954], "inspect": [1881, 1923, 1956], "warn": 1881, "appendix": [1881, 1884], "recurs": 1881, "constant": [1881, 1883], "fusion": 1881, "math": [1882, 1948], "construct": [1883, 1884, 1886, 1899, 1927, 1940], "refin": [1883, 1884], "enum": [1883, 1884], "tupl": [1883, 1884], "liter": [1883, 1884], "list": [1883, 1884, 1925], "dict": 1883, "arithmet": [1883, 1884], "subscript": [1883, 1884], "slice": [1883, 1884, 1918, 1948], "ternari": [1883, 1884], "cast": 1883, "statement": [1883, 1884], "assign": [1883, 1884], "If": 1883, "while": [1883, 1884], "loop": 1883, "For": 1883, "continu": [1883, 1884], "return": [1883, 1884, 1911, 1938], "resolut": [1883, 1884], "lookup": 1883, "defin": [1883, 1909, 1910], "terminologi": 1884, "primit": 1884, "instanc": 1884, "when": [1884, 1904, 1909, 1925, 1931, 1940, 1959], "signatur": 1884, "expr": 1884, "convers": [1884, 1899], "atom": 1884, "identifi": [1884, 1959, 1969], "parenthes": 1884, "form": 1884, "displai": 1884, "primari": 1884, "power": 1884, "unari": [1884, 1891, 1940], "bitwis": 1884, "binari": [1884, 1891], "shift": 1884, "boolean": 1884, "condit": 1884, "augment": 1884, "rais": 1884, "del": 1884, "compound": 1884, "els": 1884, "getattr": 1884, "hasattr": 1884, "zip": [1884, 1928], "enumer": 1884, "rule": [1884, 1898, 1910, 1923], "remot": [1884, 1938], "procedur": 1884, "execut": [1884, 1904, 1907, 1928, 1929, 1959], "program": 1884, "coverag": [1885, 1897, 1909], "properti": [1886, 1889], "correctli": 1886, "bound": 1886, "schema": 1886, "between": [1886, 1928, 1959], "low": 1888, "matrix": [1889, 1931], "decomposit": 1889, "solver": 1889, "misc": 1889, "experiment": 1889, "motiv": [1891, 1957, 1958], "reduct": [1891, 1907, 1918, 1948], "mobile_optim": 1892, "model_zoo": 1893, "strategi": [1896, 1927], "descriptor": 1896, "file_descriptor": 1896, "file_system": 1896, "subprocess": 1896, "keep": [1897, 1928], "dimens": [1897, 1898], "unifi": 1897, "contract": 1897, "awai": 1897, "factori": 1897, "variant": 1897, "semant": [1898, 1905, 1907, 1913, 1920], "infer": [1898, 1904, 1906, 1920], "explicit": 1898, "align": 1898, "current": 1898, "subsystem": 1898, "constructor": 1899, "contain": 1900, "convolut": [1900, 1901, 1918, 1919], "layer": 1900, "pool": [1900, 1901], "activ": [1900, 1901, 1971], "weight": [1900, 1927], "nonlinear": 1900, "recurr": [1900, 1911], "distanc": [1900, 1901], "loss": [1900, 1901, 1903], "vision": [1900, 1901], "shuffl": 1900, "lazi": 1900, "attent": 1901, "typic": 1903, "unscal": 1903, "accumul": 1903, "penalti": 1903, "one": 1903, "per": [1903, 1927], "need": [1903, 1959], "particular": [1903, 1904], "dtype": [1903, 1920, 1934, 1943], "encod": 1904, "histori": [1904, 1971], "set": [1904, 1925], "No": 1904, "evalu": [1904, 1912, 1962], "multithread": 1904, "concurr": 1904, "determin": [1904, 1919], "retain": 1904, "thread": [1904, 1906], "safeti": 1904, "wirting": 1904, "calculu": 1904, "pictur": 1904, "conjug": 1904, "own": 1904, "formula": 1904, "domain": 1904, "regist": [1904, 1955], "whether": [1904, 1928], "fire": 1904, "differ": [1904, 1925, 1959], "modifi": 1904, "compat": 1905, "runtim": [1906, 1911, 1969], "tune": 1906, "tensorfloat": [1907, 1913, 1918], "32": [1907, 1913, 1918, 1921], "tf32": [1907, 1913, 1918], "amper": [1907, 1918], "later": [1907, 1918, 1928], "reduc": [1907, 1918], "fp16": [1907, 1918], "gemm": [1907, 1918], "bf16": [1907, 1918], "bc": 1907, "alloc": [1907, 1911, 1971], "cubla": 1907, "workspac": 1907, "cufft": 1907, "plan": [1907, 1913], "just": 1907, "time": [1907, 1963, 1967], "practic": [1907, 1917, 1931, 1953], "agnost": 1907, "buffer": [1907, 1917], "instead": 1907, "whole": [1907, 1959], "captur": 1907, "partial": 1907, "9": 1907, "6": 1907, "across": [1907, 1920], "intern": [1908, 1925, 1928, 1956, 1957], "processgroup": 1908, "ddpoptim": 1908, "separ": 1909, "setup_context": 1909, "like": [1909, 1928], "subclass": [1909, 1958], "wrapper": 1909, "__torch_function__": 1909, "overrid": [1909, 1970], "nativ": [1909, 1931, 1933], "anoth": 1910, "specifi": 1910, "gotcha": 1910, "staticmethod": 1910, "isn": 1911, "freed": 1911, "properli": 1911, "loader": 1911, "doesn": 1911, "notat": 1912, "background": [1912, 1937, 1938, 1954], "inform": [1912, 1936, 1968], "analyt": 1912, "u": 1912, "reus": [1913, 1917], "hipfft": 1913, "rocfft": 1913, "enabl": 1913, "larg": 1914, "fleet": 1914, "wide": 1914, "attach": 1914, "consider": 1914, "block": 1915, "neural": 1915, "tip": [1917, 1932], "fight": 1917, "deadlock": 1917, "through": 1917, "queue": 1917, "e": 1917, "g": 1917, "hogwild": 1917, "oversubscript": 1917, "accuraci": [1918, 1931, 1932, 1969], "extrem": 1918, "finit": 1918, "instinct": 1918, "mi200": 1918, "reproduc": 1919, "nondeterminist": 1919, "algorithm": [1919, 1927, 1937], "fill": 1919, "uniniti": 1919, "content": [1920, 1928], "preserv": 1920, "them": [1920, 1928], "version": 1920, "integ": 1920, "divis": 1920, "alwai": 1920, "includ": [1921, 1928], "compon": 1921, "speed": [1921, 1959], "One": [1921, 1968], "instal": 1921, "cffi": 1921, "cpp": 1921, "found": 1921, "win": 1921, "channel": 1921, "without": 1921, "claus": 1921, "protect": 1921, "broken": 1921, "pipe": [1921, 1929], "driver": 1921, "shut": 1921, "down": 1921, "ipc": 1921, "base": [1922, 1923, 1925, 1927, 1968], "gui": 1923, "diagnos": [1923, 1969], "sarif": 1923, "diagnost": 1923, "alexnet": 1925, "v": 1925, "index": [1925, 1948], "aten": [1925, 1964, 1968], "inlin": 1925, "discov": 1925, "unconvert": 1925, "onc": 1925, "adjust": 1927, "learn": 1927, "rate": 1927, "averag": 1927, "swa": 1927, "ema": 1927, "schedul": 1927, "care": 1927, "put": 1927, "togeth": 1927, "your": 1928, "do": [1928, 1956, 1959], "see": [1928, 1959], "insid": [1928, 1959], "treat": 1928, "archiv": 1928, "file_structur": 1928, "given": 1928, "wa": 1928, "resourc": [1928, 1958], "distinguish": 1928, "explan": 1928, "format": 1928, "analyz": 1928, "extern": 1928, "mock": 1928, "refactor": 1928, "sharp": 1928, "global": 1928, "isol": 1928, "each": [1928, 1958], "mangl": 1928, "pipelin": 1929, "skip": 1929, "connect": 1929, "intel": 1930, "instrument": 1930, "technologi": 1930, "eager": 1931, "awar": 1931, "maintainc": 1931, "engin": 1931, "observ": [1931, 1934], "hardwar": 1931, "configur": [1931, 1933], "insensit": 1932, "int8": 1932, "sensit": 1932, "ao": [1934, 1949, 1950], "top": 1934, "quantize_fx": 1934, "qconfig_map": 1934, "backend_config": 1934, "custom_config": 1934, "pt2e": 1934, "0": [1934, 1965, 1966, 1969], "relat": [1934, 1958], "fake_quant": 1934, "intrins": 1934, "qat": 1934, "scheme": 1934, "rpc": 1936, "tensorpip": 1936, "rref": [1936, 1938], "remotemodul": 1936, "record": 1937, "dure": 1937, "smart": 1937, "end": 1937, "protocol": 1938, "lifetim": 1938, "reason": 1938, "scenario": 1938, "owner": 1938, "argument": 1938, "sparsiti": 1940, "semi": 1940, "acceler": 1940, "coo": 1940, "hybrid": 1940, "uncoalesc": 1940, "csr": 1940, "csc": 1940, "bsr": 1940, "bsc": 1940, "memory_format": 1943, "tensorboard": 1945, "creation": 1948, "sampl": 1948, "quasi": 1948, "pointwis": 1948, "spectral": 1948, "bla": 1948, "lapack": 1948, "foreach": 1948, "path": 1948, "n": [1949, 1950], "_numeric_suit": 1949, "_numeric_suite_fx": 1950, "howto": 1951, "vendor": 1951, "x86": 1953, "tree": 1954, "integr": 1954, "callabl": 1954, "previou": 1954, "after": 1955, "aotautograd": 1955, "speedi": 1955, "guard": [1956, 1957, 1962], "dynamo": 1956, "artifact": 1956, "abridg": 1957, "public": 1957, "overal": [1957, 1958], "architectur": [1957, 1958], "dimdynam": 1957, "unback": 1957, "fake": 1958, "bit": 1958, "detail": 1958, "individu": [1958, 1963], "characterist": 1958, "interact": 1958, "you": 1959, "still": 1959, "crash": 1959, "slow": 1959, "recompil": [1959, 1969], "am": 1959, "speedup": 1959, "caus": [1959, 1969], "didn": 1959, "incorrect": 1959, "result": 1959, "oom": 1959, "handl": 1959, "besid": 1959, "via": 1959, "under": 1959, "some": 1959, "did": 1959, "fine": [1959, 1960], "grain": [1959, 1960], "_dynamo": [1959, 1960], "disallow_in_graph": [1959, 1960], "_dynamo_skip": 1959, "pretrain": 1961, "next": 1961, "frame": 1962, "pep": 1962, "523": 1962, "instructiontransl": 1962, "torchinductor": [1963, 1966, 1969], "relev": 1963, "breakdown": 1963, "prim": 1964, "nnmodul": 1965, "__call__": 1965, "dashboard": 1966, "measur": 1966, "pr": 1966, "affect": 1966, "befor": 1966, "merg": 1966, "understand": [1967, 1971], "around": 1967, "overhead": 1967, "x": 1968, "none": 1968, "partition": 1968, "matcher": 1968, "capabl": 1968, "troubleshoot": 1969, "titl": 1969, "minifi": 1969, "torch_compile_debug": 1969, "excess": 1969, "snapshot": 1971, "visual": 1971, "timelin": 1971, "info": 1972, "finfo": 1972, "iinfo": 1972}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.corrcoef": [[190, "torch-tensor-corrcoef"]], "torch.Tensor.conj": [[183, "torch-tensor-conj"]], "torch.Tensor.cos_": [[192, "torch-tensor-cos"]], "torch.Tensor.clamp_": [[177, "torch-tensor-clamp"]], "torch.Tensor.clamp": [[176, "torch-tensor-clamp"]], "torch.Tensor.cos": [[191, "torch-tensor-cos"]], "torch.Tensor.cosh": [[193, "torch-tensor-cosh"]], "torch.Tensor.byte": [[163, "torch-tensor-byte"]], "torch.Tensor.ccol_indices": [[165, "torch-tensor-ccol-indices"]], "torch.Tensor.copy_": [[187, "torch-tensor-copy"]], "torch.Tensor.char": [[171, "torch-tensor-char"]], "torch.Tensor.cholesky_inverse": [[173, "torch-tensor-cholesky-inverse"]], "torch.Tensor.cholesky": [[172, "torch-tensor-cholesky"]], "torch.Tensor.ceil_": [[168, "torch-tensor-ceil"]], "torch.Tensor.col_indices": [[182, "torch-tensor-col-indices"]], "torch.Tensor.bitwise_left_shift": [[150, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.cauchy_": [[164, "torch-tensor-cauchy"]], "torch.Tensor.bitwise_right_shift": [[156, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bmm": [[160, "torch-tensor-bmm"]], "torch.Tensor.clip": [[178, "torch-tensor-clip"]], "torch.Tensor.chalf": [[170, "torch-tensor-chalf"]], "torch.Tensor.count_nonzero": [[195, "torch-tensor-count-nonzero"]], "torch.Tensor.coalesce": [[181, "torch-tensor-coalesce"]], "torch.Tensor.conj_physical_": [[185, "torch-tensor-conj-physical"]], "torch.Tensor.bincount": [[147, "torch-tensor-bincount"]], "torch.Tensor.cosh_": [[194, "torch-tensor-cosh"]], "torch.Tensor.bitwise_left_shift_": [[151, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.cdouble": [[166, "torch-tensor-cdouble"]], "torch.Tensor.bitwise_right_shift_": [[157, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bitwise_or_": [[155, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_or": [[154, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_xor_": [[159, "torch-tensor-bitwise-xor"]], "torch.Tensor.contiguous": [[186, "torch-tensor-contiguous"]], "torch.Tensor.ceil": [[167, "torch-tensor-ceil"]], "torch.Tensor.copysign_": [[189, "torch-tensor-copysign"]], "torch.Tensor.broadcast_to": [[162, "torch-tensor-broadcast-to"]], "torch.Tensor.cfloat": [[169, "torch-tensor-cfloat"]], "torch.Tensor.bitwise_xor": [[158, "torch-tensor-bitwise-xor"]], "torch.Tensor.bitwise_and_": [[149, "torch-tensor-bitwise-and"]], "torch.Tensor.chunk": [[175, "torch-tensor-chunk"]], "torch.Tensor.clone": [[180, "torch-tensor-clone"]], "torch.Tensor.bitwise_and": [[148, "torch-tensor-bitwise-and"]], "torch.Tensor.bitwise_not": [[152, "torch-tensor-bitwise-not"]], "torch.Tensor.bitwise_not_": [[153, "torch-tensor-bitwise-not"]], "torch.Tensor.clip_": [[179, "torch-tensor-clip"]], "torch.Tensor.conj_physical": [[184, "torch-tensor-conj-physical"]], "torch.Tensor.cholesky_solve": [[174, "torch-tensor-cholesky-solve"]], "torch.Tensor.copysign": [[188, "torch-tensor-copysign"]], "torch.Tensor.bool": [[161, "torch-tensor-bool"]], "torch.Tensor.float": [[258, "torch-tensor-float"]], "torch.Tensor.exponential_": [[249, "torch-tensor-exponential"]], "torch.Tensor.flatten": [[254, "torch-tensor-flatten"]], "torch.Tensor.floor_": [[262, "torch-tensor-floor"]], "torch.Tensor.fmod_": [[268, "torch-tensor-fmod"]], "torch.Tensor.greater_equal": [[284, "torch-tensor-greater-equal"]], "torch.Tensor.geometric_": [[277, "torch-tensor-geometric"]], "torch.Tensor.float_power": [[259, "torch-tensor-float-power"]], "torch.Tensor.grad": [[281, "torch-tensor-grad"]], "torch.Tensor.greater_": [[283, "torch-tensor-greater"]], "torch.Tensor.histogram": [[292, "torch-tensor-histogram"]], "torch.Tensor.flip": [[255, "torch-tensor-flip"]], "torch.Tensor.fmax": [[265, "torch-tensor-fmax"]], "torch.Tensor.fmod": [[267, "torch-tensor-fmod"]], "torch.Tensor.gt": [[286, "torch-tensor-gt"]], "torch.Tensor.floor_divide_": [[264, "torch-tensor-floor-divide"]], "torch.Tensor.frexp": [[271, "torch-tensor-frexp"]], "torch.Tensor.ge_": [[276, "torch-tensor-ge"]], "torch.Tensor.fill_": [[250, "torch-tensor-fill"]], "torch.Tensor.hardshrink": [[289, "torch-tensor-hardshrink"]], "torch.Tensor.greater": [[282, "torch-tensor-greater"]], "torch.Tensor.expand_as": [[246, "torch-tensor-expand-as"]], "torch.Tensor.fliplr": [[256, "torch-tensor-fliplr"]], "torch.Tensor.frac": [[269, "torch-tensor-frac"]], "torch.Tensor.heaviside": [[290, "torch-tensor-heaviside"]], "torch.Tensor.gt_": [[287, "torch-tensor-gt"]], "torch.Tensor.get_device": [[280, "torch-tensor-get-device"]], "torch.Tensor.floor_divide": [[263, "torch-tensor-floor-divide"]], "torch.Tensor.expm1": [[247, "torch-tensor-expm1"]], "torch.Tensor.fmin": [[266, "torch-tensor-fmin"]], "torch.Tensor.expand": [[245, "torch-tensor-expand"]], "torch.Tensor.flipud": [[257, "torch-tensor-flipud"]], "torch.Tensor.floor": [[261, "torch-tensor-floor"]], "torch.Tensor.geqrf": [[278, "torch-tensor-geqrf"]], "torch.Tensor.histc": [[291, "torch-tensor-histc"]], "torch.Tensor.fix_": [[253, "torch-tensor-fix"]], "torch.Tensor.ge": [[275, "torch-tensor-ge"]], "torch.Tensor.greater_equal_": [[285, "torch-tensor-greater-equal"]], "torch.Tensor.fix": [[252, "torch-tensor-fix"]], "torch.Tensor.ger": [[279, "torch-tensor-ger"]], "torch.Tensor.frac_": [[270, "torch-tensor-frac"]], "torch.Tensor.fill_diagonal_": [[251, "torch-tensor-fill-diagonal"]], "torch.Tensor.gcd": [[273, "torch-tensor-gcd"]], "torch.Tensor.half": [[288, "torch-tensor-half"]], "torch.Tensor.float_power_": [[260, "torch-tensor-float-power"]], "torch.Tensor.hsplit": [[293, "torch-tensor-hsplit"]], "torch.Tensor.gather": [[272, "torch-tensor-gather"]], "torch.Tensor.expm1_": [[248, "torch-tensor-expm1"]], "torch.Tensor.gcd_": [[274, "torch-tensor-gcd"]], "torch.Tensor.all": [[103, "torch-tensor-all"]], "torch.Tensor.argmax": [[125, "torch-tensor-argmax"]], "torch.Tensor.arccos": [[111, "torch-tensor-arccos"]], "torch.Tensor.addmv": [[98, "torch-tensor-addmv"]], "torch.Tensor.atan2": [[136, "torch-tensor-atan2"]], "torch.Tensor.any": [[109, "torch-tensor-any"]], "torch.Tensor.argsort": [[127, "torch-tensor-argsort"]], "torch.Tensor.bfloat16": [[146, "torch-tensor-bfloat16"]], "torch.Tensor.arctan2_": [[121, "torch-tensor-arctan2"]], "torch.Tensor.amin": [[106, "torch-tensor-amin"]], "torch.Tensor.atan": [[135, "torch-tensor-atan"]], "torch.Tensor.asinh": [[133, "torch-tensor-asinh"]], "torch.Tensor.atan2_": [[137, "torch-tensor-atan2"]], "torch.Tensor.asin_": [[132, "torch-tensor-asin"]], "torch.Tensor.asinh_": [[134, "torch-tensor-asinh"]], "torch.Tensor.arccosh_": [[114, "torch-tensor-arccosh"]], "torch.Tensor.arcsinh_": [[118, "torch-tensor-arcsinh"]], "torch.Tensor.arctan": [[119, "torch-tensor-arctan"]], "torch.Tensor.as_subclass": [[130, "torch-tensor-as-subclass"]], "torch.Tensor.aminmax": [[107, "torch-tensor-aminmax"]], "torch.Tensor.arccosh": [[113, "torch-tensor-arccosh"]], "torch.Tensor.allclose": [[104, "torch-tensor-allclose"]], "torch.Tensor.arcsin": [[115, "torch-tensor-arcsin"]], "torch.Tensor.angle": [[108, "torch-tensor-angle"]], "torch.Tensor.baddbmm_": [[143, "torch-tensor-baddbmm"]], "torch.Tensor.backward": [[141, "torch-tensor-backward"]], "torch.Tensor.apply_": [[110, "torch-tensor-apply"]], "torch.Tensor.atanh_": [[140, "torch-tensor-atanh"]], "torch.Tensor.argmin": [[126, "torch-tensor-argmin"]], "torch.Tensor.amax": [[105, "torch-tensor-amax"]], "torch.Tensor.arcsinh": [[117, "torch-tensor-arcsinh"]], "torch.Tensor.arcsin_": [[116, "torch-tensor-arcsin"]], "torch.Tensor.addmv_": [[99, "torch-tensor-addmv"]], "torch.Tensor.bernoulli_": [[145, "torch-tensor-bernoulli"]], "torch.Tensor.arccos_": [[112, "torch-tensor-arccos"]], "torch.Tensor.baddbmm": [[142, "torch-tensor-baddbmm"]], "torch.Tensor.as_strided": [[129, "torch-tensor-as-strided"]], "torch.Tensor.argwhere": [[128, "torch-tensor-argwhere"]], "torch.Tensor.addr": [[100, "torch-tensor-addr"]], "torch.Tensor.arctanh_": [[124, "torch-tensor-arctanh"]], "torch.Tensor.atan_": [[138, "torch-tensor-atan"]], "torch.Tensor.atanh": [[139, "torch-tensor-atanh"]], "torch.Tensor.arctanh": [[123, "torch-tensor-arctanh"]], "torch.Tensor.bernoulli": [[144, "torch-tensor-bernoulli"]], "torch.Tensor.arctan_": [[122, "torch-tensor-arctan"]], "torch.Tensor.addr_": [[101, "torch-tensor-addr"]], "torch.Tensor.asin": [[131, "torch-tensor-asin"]], "torch.Tensor.adjoint": [[102, "torch-tensor-adjoint"]], "torch.Tensor.arctan2": [[120, "torch-tensor-arctan2"]], "torch.Tensor.element_size": [[233, "torch-tensor-element-size"]], "torch.Tensor.deg2rad": [[208, "torch-tensor-deg2rad"]], "torch.Tensor.detach_": [[213, "torch-tensor-detach"]], "torch.Tensor.erfc_": [[240, "torch-tensor-erfc"]], "torch.Tensor.detach": [[212, "torch-tensor-detach"]], "torch.Tensor.cov": [[196, "torch-tensor-cov"]], "torch.Tensor.cross": [[198, "torch-tensor-cross"]], "torch.Tensor.cummin": [[202, "torch-tensor-cummin"]], "torch.Tensor.exp_": [[244, "torch-tensor-exp"]], "torch.Tensor.dense_dim": [[209, "torch-tensor-dense-dim"]], "torch.Tensor.erfc": [[239, "torch-tensor-erfc"]], "torch.Tensor.eq": [[234, "torch-tensor-eq"]], "torch.Tensor.double": [[231, "torch-tensor-double"]], "torch.Tensor.diag_embed": [[216, "torch-tensor-diag-embed"]], "torch.Tensor.dist": [[225, "torch-tensor-dist"]], "torch.Tensor.div_": [[227, "torch-tensor-div"]], "torch.Tensor.cummax": [[201, "torch-tensor-cummax"]], "torch.Tensor.data_ptr": [[207, "torch-tensor-data-ptr"]], "torch.Tensor.dim": [[223, "torch-tensor-dim"]], "torch.Tensor.diagflat": [[217, "torch-tensor-diagflat"]], "torch.Tensor.diff": [[220, "torch-tensor-diff"]], "torch.Tensor.diag": [[215, "torch-tensor-diag"]], "torch.Tensor.diagonal": [[218, "torch-tensor-diagonal"]], "torch.Tensor.digamma": [[221, "torch-tensor-digamma"]], "torch.Tensor.dim_order": [[224, "torch-tensor-dim-order"]], "torch.Tensor.erfinv_": [[242, "torch-tensor-erfinv"]], "torch.Tensor.cumprod": [[203, "torch-tensor-cumprod"]], "torch.Tensor.div": [[226, "torch-tensor-div"]], "torch.Tensor.cumsum_": [[206, "torch-tensor-cumsum"]], "torch.Tensor.cumsum": [[205, "torch-tensor-cumsum"]], "torch.Tensor.cpu": [[197, "torch-tensor-cpu"]], "torch.Tensor.det": [[211, "torch-tensor-det"]], "torch.Tensor.divide": [[228, "torch-tensor-divide"]], "torch.Tensor.cuda": [[200, "torch-tensor-cuda"]], "torch.Tensor.device": [[214, "torch-tensor-device"]], "torch.Tensor.dot": [[230, "torch-tensor-dot"]], "torch.Tensor.dequantize": [[210, "torch-tensor-dequantize"]], "torch.Tensor.digamma_": [[222, "torch-tensor-digamma"]], "torch.Tensor.erfinv": [[241, "torch-tensor-erfinv"]], "torch.Tensor.cumprod_": [[204, "torch-tensor-cumprod"]], "torch.Tensor.exp": [[243, "torch-tensor-exp"]], "torch.Tensor.divide_": [[229, "torch-tensor-divide"]], "torch.Tensor.erf_": [[238, "torch-tensor-erf"]], "torch.Tensor.diagonal_scatter": [[219, "torch-tensor-diagonal-scatter"]], "torch.Tensor.crow_indices": [[199, "torch-tensor-crow-indices"]], "torch.Tensor.dsplit": [[232, "torch-tensor-dsplit"]], "torch.Tensor.eq_": [[235, "torch-tensor-eq"]], "torch.Tensor.erf": [[237, "torch-tensor-erf"]], "torch.Tensor.equal": [[236, "torch-tensor-equal"]], "torch.Tensor.index_put_": [[310, "torch-tensor-index-put"]], "torch.Tensor.is_meta": [[327, "torch-tensor-is-meta"]], "torch.Tensor.is_conj": [[321, "torch-tensor-is-conj"]], "torch.Tensor.is_signed": [[332, "torch-tensor-is-signed"]], "torch.Tensor.inverse": [[318, "torch-tensor-inverse"]], "torch.Tensor.igammac": [[300, "torch-tensor-igammac"]], "torch.Tensor.isclose": [[335, "torch-tensor-isclose"]], "torch.Tensor.isnan": [[338, "torch-tensor-isnan"]], "torch.Tensor.index_put": [[309, "torch-tensor-index-put"]], "torch.Tensor.isposinf": [[340, "torch-tensor-isposinf"]], "torch.Tensor.is_pinned": [[328, "torch-tensor-is-pinned"]], "torch.Tensor.is_cuda": [[323, "torch-tensor-is-cuda"]], "torch.Tensor.is_quantized": [[329, "torch-tensor-is-quantized"]], "torch.Tensor.istft": [[342, "torch-tensor-istft"]], "torch.Tensor.igamma": [[298, "torch-tensor-igamma"]], "torch.Tensor.index_fill": [[307, "torch-tensor-index-fill"]], "torch.Tensor.index_add_": [[304, "torch-tensor-index-add"]], "torch.Tensor.hypot": [[294, "torch-tensor-hypot"]], "torch.Tensor.i0_": [[297, "torch-tensor-i0"]], "torch.Tensor.index_reduce_": [[312, "torch-tensor-index-reduce"]], "torch.Tensor.is_shared": [[331, "torch-tensor-is-shared"]], "torch.Tensor.is_sparse_csr": [[334, "torch-tensor-is-sparse-csr"]], "torch.Tensor.isinf": [[337, "torch-tensor-isinf"]], "torch.Tensor.i0": [[296, "torch-tensor-i0"]], "torch.Tensor.isneginf": [[339, "torch-tensor-isneginf"]], "torch.Tensor.index_copy_": [[306, "torch-tensor-index-copy"]], "torch.Tensor.index_reduce": [[311, "torch-tensor-index-reduce"]], "torch.Tensor.int_repr": [[317, "torch-tensor-int-repr"]], "torch.Tensor.inner": [[315, "torch-tensor-inner"]], "torch.Tensor.igammac_": [[301, "torch-tensor-igammac"]], "torch.Tensor.is_coalesced": [[319, "torch-tensor-is-coalesced"]], "torch.Tensor.int": [[316, "torch-tensor-int"]], "torch.Tensor.is_inference": [[325, "torch-tensor-is-inference"]], "torch.Tensor.hypot_": [[295, "torch-tensor-hypot"]], "torch.Tensor.is_leaf": [[326, "torch-tensor-is-leaf"]], "torch.Tensor.index_add": [[303, "torch-tensor-index-add"]], "torch.Tensor.isfinite": [[336, "torch-tensor-isfinite"]], "torch.Tensor.is_complex": [[320, "torch-tensor-is-complex"]], "torch.Tensor.index_select": [[313, "torch-tensor-index-select"]], "torch.Tensor.is_sparse": [[333, "torch-tensor-is-sparse"]], "torch.Tensor.is_floating_point": [[324, "torch-tensor-is-floating-point"]], "torch.Tensor.index_copy": [[305, "torch-tensor-index-copy"]], "torch.Tensor.imag": [[302, "torch-tensor-imag"]], "torch.Tensor.index_fill_": [[308, "torch-tensor-index-fill"]], "torch.Tensor.indices": [[314, "torch-tensor-indices"]], "torch.Tensor.is_contiguous": [[322, "torch-tensor-is-contiguous"]], "torch.Tensor.is_set_to": [[330, "torch-tensor-is-set-to"]], "torch.Tensor.isreal": [[341, "torch-tensor-isreal"]], "torch.Tensor.igamma_": [[299, "torch-tensor-igamma"]], "torch.Tensor.lgamma_": [[359, "torch-tensor-lgamma"]], "torch.Tensor.logsumexp": [[383, "torch-tensor-logsumexp"]], "torch.Tensor.log10": [[361, "torch-tensor-log10"]], "torch.Tensor.lerp": [[352, "torch-tensor-lerp"]], "torch.Tensor.lt_": [[386, "torch-tensor-lt"]], "torch.Tensor.masked_fill_": [[391, "torch-tensor-masked-fill"]], "torch.Tensor.lcm_": [[347, "torch-tensor-lcm"]], "torch.Tensor.logical_and": [[373, "torch-tensor-logical-and"]], "torch.Tensor.logical_or_": [[378, "torch-tensor-logical-or"]], "torch.Tensor.log2_": [[366, "torch-tensor-log2"]], "torch.Tensor.item": [[343, "torch-tensor-item"]], "torch.Tensor.lerp_": [[353, "torch-tensor-lerp"]], "torch.Tensor.less_equal_": [[357, "torch-tensor-less-equal"]], "torch.Tensor.logaddexp": [[369, "torch-tensor-logaddexp"]], "torch.Tensor.log10_": [[362, "torch-tensor-log10"]], "torch.Tensor.logical_and_": [[374, "torch-tensor-logical-and"]], "torch.Tensor.le_": [[351, "torch-tensor-le"]], "torch.Tensor.log_normal_": [[368, "torch-tensor-log-normal"]], "torch.Tensor.ldexp_": [[349, "torch-tensor-ldexp"]], "torch.Tensor.itemsize": [[344, "torch-tensor-itemsize"]], "torch.Tensor.logit_": [[382, "torch-tensor-logit"]], "torch.Tensor.map_": [[389, "torch-tensor-map"]], "torch.Tensor.log": [[360, "torch-tensor-log"]], "torch.Tensor.kthvalue": [[345, "torch-tensor-kthvalue"]], "torch.Tensor.masked_fill": [[390, "torch-tensor-masked-fill"]], "torch.Tensor.logit": [[381, "torch-tensor-logit"]], "torch.Tensor.lu_solve": [[388, "torch-tensor-lu-solve"]], "torch.Tensor.logaddexp2": [[370, "torch-tensor-logaddexp2"]], "torch.Tensor.logdet": [[372, "torch-tensor-logdet"]], "torch.Tensor.log1p": [[363, "torch-tensor-log1p"]], "torch.Tensor.lgamma": [[358, "torch-tensor-lgamma"]], "torch.Tensor.less": [[354, "torch-tensor-less"]], "torch.Tensor.logical_xor": [[379, "torch-tensor-logical-xor"]], "torch.Tensor.logical_or": [[377, "torch-tensor-logical-or"]], "torch.Tensor.lt": [[385, "torch-tensor-lt"]], "torch.Tensor.le": [[350, "torch-tensor-le"]], "torch.Tensor.logical_xor_": [[380, "torch-tensor-logical-xor"]], "torch.Tensor.less_equal": [[356, "torch-tensor-less-equal"]], "torch.Tensor.logcumsumexp": [[371, "torch-tensor-logcumsumexp"]], "torch.Tensor.lcm": [[346, "torch-tensor-lcm"]], "torch.Tensor.ldexp": [[348, "torch-tensor-ldexp"]], "torch.Tensor.logical_not_": [[376, "torch-tensor-logical-not"]], "torch.Tensor.logical_not": [[375, "torch-tensor-logical-not"]], "torch.Tensor.less_": [[355, "torch-tensor-less"]], "torch.Tensor.log_": [[367, "torch-tensor-log"]], "torch.Tensor.log1p_": [[364, "torch-tensor-log1p"]], "torch.Tensor.lu": [[387, "torch-tensor-lu"]], "torch.Tensor.long": [[384, "torch-tensor-long"]], "torch.Tensor.log2": [[365, "torch-tensor-log2"]], "Profiling to understand torch.compile performance": [[1967, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[1967, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[1967, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[1967, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[1967, "understanding-compilation-time"]], "Finding graph breaks": [[1967, "finding-graph-breaks"]], "Launch overhead": [[1967, "launch-overhead"]], "Type Info": [[1972, "type-info"]], "torch.finfo": [[1972, "torch-finfo"]], "torch.iinfo": [[1972, "torch-iinfo"]], "TorchInductor GPU Profiling": [[1963, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[1963, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[1963, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[1963, "benchmark-individual-triton-kernel"]], "IRs": [[1964, "irs"]], "Core Aten IR": [[1964, "core-aten-ir"]], "Prims IR": [[1964, "prims-ir"]], "PyTorch 2.0 Troubleshooting": [[1969, "pytorch-2-0-troubleshooting"]], "Title": [[1969, "id1"]], "Diagnosing Runtime Errors": [[1969, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[1969, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[1969, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[1969, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[1969, "minifying-backend-compiler-errors"]], "Performance Profiling": [[1969, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[1969, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[1969, "torchinductor-debugging-using-torch-compile-debug"]], "Graph Breaks": [[1969, "graph-breaks"], [46, "graph-breaks"], [1959, "graph-breaks"]], "Identifying the Cause of a Graph Break": [[1969, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[1969, "excessive-recompilation"]], "Accuracy Debugging": [[1969, "accuracy-debugging"]], "PyTorch 2.0 NNModule Support": [[1965, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[1965, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[1965, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[1965, "state-dict-hooks"]], "TorchDynamo APIs for fine-grained tracing": [[1960, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[1960, "id1"]], "torch.compiler.disable": [[1960, "torch-compiler-disable"], [948, "torch-compiler-disable"]], "torch._dynamo.disallow_in_graph": [[1960, "torch-dynamo-disallow-in-graph"]], "torch.compiler.allow_in_graph": [[1960, "torch-compiler-allow-in-graph"], [944, "torch-compiler-allow-in-graph"]], "Limitations": [[1960, "limitations"], [1959, "limitations"], [1954, "limitations"], [1925, "limitations"]], "PyTorch 2.0 Performance Dashboard": [[1966, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[1966, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[1966, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[1966, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[1966, "how-can-i-run-any-performance-test-locally"]], "Writing Graph Transformations on ATen IR": [[1968, "writing-graph-transformations-on-aten-ir"]], "Passes": [[1968, "passes"]], "Transformer": [[1968, "transformer"], [1477, "transformer"]], "One-to-One Pass": [[1968, "one-to-one-pass"]], "One-to-X Pass": [[1968, "one-to-x-pass"]], "One-to-None Pass": [[1968, "one-to-none-pass"]], "Utilizing Local Information": [[1968, "utilizing-local-information"]], "Subgraph Rewriter": [[1968, "subgraph-rewriter"]], "Pass Manager": [[1968, "pass-manager"]], "Partitioner": [[1968, "partitioner"]], "Subgraph Matcher": [[1968, "subgraph-matcher"]], "Capability Based Partitioner": [[1968, "capability-based-partitioner"]], "Understanding CUDA Memory Usage": [[1971, "understanding-cuda-memory-usage"]], "Generating a Snapshot": [[1971, "generating-a-snapshot"]], "Using the visualizer": [[1971, "using-the-visualizer"]], "Active Memory Timeline": [[1971, "active-memory-timeline"]], "Allocator State History": [[1971, "allocator-state-history"]], "Snapshot API Reference": [[1971, "snapshot-api-reference"]], "Getting Started": [[1961, "getting-started"], [7, "getting-started"]], "Using a pretrained model": [[1961, "using-a-pretrained-model"]], "Next Steps": [[1961, "next-steps"]], "torch.overrides": [[1970, "module-torch.overrides"]], "Functions": [[1970, "functions"], [1883, "functions"], [1881, "functions"], [1941, "functions"], [1925, "functions"]], "Guards Overview": [[1962, "guards-overview"]], "Caching and Guards Overview": [[1962, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[1962, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[1962, "instructiontranslator"]], "Variables": [[1962, "variables"], [1883, "variables"], [1881, "variables"]], "Making Guards": [[1962, "making-guards"]], "Summary": [[1962, "summary"], [9, "summary"]], "torch.utils": [[1973, "module-torch.utils"]], "torch.sym_not": [[1833, "torch-sym-not"]], "torch.triu_indices": [[1852, "torch-triu-indices"]], "torch.sym_int": [[1829, "torch-sym-int"]], "torch.tril": [[1849, "torch-tril"]], "torch.unique_consecutive": [[1858, "torch-unique-consecutive"]], "torch.stack": [[1817, "torch-stack"]], "torch.tan": [[1837, "torch-tan"]], "torch.take_along_dim": [[1836, "torch-take-along-dim"]], "torch.tensordot": [[1841, "torch-tensordot"]], "torch.sym_max": [[1831, "torch-sym-max"]], "torch.trapezoid": [[1846, "torch-trapezoid"]], "torch.unique": [[1857, "torch-unique"]], "torch.trapz": [[1847, "torch-trapz"]], "torch.sym_min": [[1832, "torch-sym-min"]], "torch.squeeze": [[1815, "torch-squeeze"]], "torch.trace": [[1844, "torch-trace"]], "torch.sspaddmm": [[1816, "torch-sspaddmm"]], "torch.unravel_index": [[1859, "torch-unravel-index"]], "torch.swapdims": [[1827, "torch-swapdims"]], "torch.take": [[1835, "torch-take"]], "torch.t": [[1834, "torch-t"]], "torch.sub": [[1821, "torch-sub"]], "torch.tensor_split": [[1840, "torch-tensor-split"]], "torch.sum": [[1823, "torch-sum"]], "torch.topk": [[1843, "torch-topk"]], "torch.triu": [[1851, "torch-triu"]], "torch.svd": [[1824, "torch-svd"]], "torch.sym_float": [[1828, "torch-sym-float"]], "torch.std": [[1818, "torch-std"]], "torch.std_mean": [[1819, "torch-std-mean"]], "torch.tile": [[1842, "torch-tile"]], "torch.tril_indices": [[1850, "torch-tril-indices"]], "torch.unbind": [[1855, "torch-unbind"]], "torch.unflatten": [[1856, "torch-unflatten"]], "torch.square": [[1814, "torch-square"]], "torch.stft": [[1820, "torch-stft"]], "torch.unsqueeze": [[1860, "torch-unsqueeze"]], "torch.tensor": [[1839, "torch-tensor"]], "torch.use_deterministic_algorithms": [[1861, "torch-use-deterministic-algorithms"]], "torch.tanh": [[1838, "torch-tanh"]], "torch.svd_lowrank": [[1825, "torch-svd-lowrank"]], "torch.trunc": [[1854, "torch-trunc"]], "torch.sym_ite": [[1830, "torch-sym-ite"]], "torch.transpose": [[1845, "torch-transpose"]], "torch.triangular_solve": [[1848, "torch-triangular-solve"]], "torch.swapaxes": [[1826, "torch-swapaxes"]], "torch.subtract": [[1822, "torch-subtract"]], "torch.sqrt": [[1813, "torch-sqrt"]], "torch.true_divide": [[1853, "torch-true-divide"]], "torch.select": [[1760, "torch-select"]], "torch.rand": [[1731, "torch-rand"]], "torch.reshape": [[1745, "torch-reshape"]], "torch.row_stack": [[1752, "torch-row-stack"]], "torch.polar": [[1716, "torch-polar"]], "torch.rsqrt": [[1753, "torch-rsqrt"]], "torch.remainder": [[1742, "torch-remainder"]], "torch.rot90": [[1750, "torch-rot90"]], "torch.set_default_dtype": [[1763, "torch-set-default-dtype"]], "torch.result_type": [[1748, "torch-result-type"]], "torch.randn": [[1735, "torch-randn"]], "torch.randint_like": [[1734, "torch-randint-like"]], "torch.scatter": [[1755, "torch-scatter"]], "torch.quantize_per_channel": [[1724, "torch-quantize-per-channel"]], "torch.quantized_max_pool2d": [[1728, "torch-quantized-max-pool2d"]], "torch.quantized_batch_norm": [[1726, "torch-quantized-batch-norm"]], "torch.ravel": [[1739, "torch-ravel"]], "torch.searchsorted": [[1758, "torch-searchsorted"]], "torch.scatter_reduce": [[1757, "torch-scatter-reduce"]], "torch.qr": [[1722, "torch-qr"]], "torch.prod": [[1720, "torch-prod"]], "torch.quantile": [[1723, "torch-quantile"]], "torch.real": [[1740, "torch-real"]], "torch.rad2deg": [[1730, "torch-rad2deg"]], "torch.randn_like": [[1736, "torch-randn-like"]], "SobolEngine": [[1729, "sobolengine"]], "torch.polygamma": [[1717, "torch-polygamma"]], "torch.select_scatter": [[1761, "torch-select-scatter"]], "torch.promote_types": [[1721, "torch-promote-types"]], "torch.quantize_per_tensor": [[1725, "torch-quantize-per-tensor"]], "torch.positive": [[1718, "torch-positive"]], "torch.pow": [[1719, "torch-pow"]], "torch.set_default_device": [[1762, "torch-set-default-device"]], "torch.roll": [[1749, "torch-roll"]], "torch.randint": [[1733, "torch-randint"]], "torch.save": [[1754, "torch-save"]], "torch.range": [[1738, "torch-range"]], "torch.seed": [[1759, "torch-seed"]], "torch.repeat_interleave": [[1744, "torch-repeat-interleave"]], "torch.quantized_max_pool1d": [[1727, "torch-quantized-max-pool1d"]], "torch.reciprocal": [[1741, "torch-reciprocal"]], "torch.resolve_conj": [[1746, "torch-resolve-conj"]], "torch.randperm": [[1737, "torch-randperm"]], "torch.round": [[1751, "torch-round"]], "torch.resolve_neg": [[1747, "torch-resolve-neg"]], "torch.rand_like": [[1732, "torch-rand-like"]], "torch.poisson": [[1715, "torch-poisson"]], "torch.renorm": [[1743, "torch-renorm"]], "torch.scatter_add": [[1756, "torch-scatter-add"]], "torch.sparse.mm": [[1801, "torch-sparse-mm"]], "torch.sparse_coo_tensor": [[1809, "torch-sparse-coo-tensor"]], "torch.sign": [[1776, "torch-sign"]], "torch.sparse.as_sparse_gradcheck": [[1798, "torch-sparse-as-sparse-gradcheck"]], "torch.sparse_csr_tensor": [[1811, "torch-sparse-csr-tensor"]], "torch.sparse.sum": [[1805, "torch-sparse-sum"]], "torch.sgn": [[1774, "torch-sgn"]], "torch.signal.windows.gaussian": [[1781, "torch-signal-windows-gaussian"]], "torch.set_flush_denormal": [[1767, "torch-set-flush-denormal"]], "torch.sparse.sampled_addmm": [[1802, "torch-sparse-sampled-addmm"]], "torch.split": [[1812, "torch-split"]], "check_sparse_tensor_invariants": [[1799, "check-sparse-tensor-invariants"]], "torch.sparse_compressed_tensor": [[1808, "torch-sparse-compressed-tensor"]], "torch.signbit": [[1788, "torch-signbit"]], "torch.signal.windows.blackman": [[1778, "torch-signal-windows-blackman"]], "torch.slice_scatter": [[1792, "torch-slice-scatter"]], "torch.set_float32_matmul_precision": [[1766, "torch-set-float32-matmul-precision"]], "torch.signal.windows.exponential": [[1780, "torch-signal-windows-exponential"]], "torch.signal.windows.general_hamming": [[1783, "torch-signal-windows-general-hamming"]], "torch.sinh": [[1791, "torch-sinh"]], "torch.signal.windows.general_cosine": [[1782, "torch-signal-windows-general-cosine"]], "torch.set_deterministic_debug_mode": [[1765, "torch-set-deterministic-debug-mode"]], "torch.set_num_threads": [[1770, "torch-set-num-threads"]], "torch.slogdet": [[1793, "torch-slogdet"]], "torch.set_warn_always": [[1773, "torch-set-warn-always"]], "torch.sparse_bsc_tensor": [[1806, "torch-sparse-bsc-tensor"]], "torch.sparse.addmm": [[1797, "torch-sparse-addmm"]], "torch.sparse.log_softmax": [[1800, "torch-sparse-log-softmax"]], "set_grad_enabled": [[1768, "set-grad-enabled"]], "torch.set_printoptions": [[1771, "torch-set-printoptions"]], "torch.sin": [[1789, "torch-sin"]], "torch.sparse_csc_tensor": [[1810, "torch-sparse-csc-tensor"]], "torch.set_num_interop_threads": [[1769, "torch-set-num-interop-threads"]], "torch.sparse.spdiags": [[1804, "torch-sparse-spdiags"]], "torch.sparse.softmax": [[1803, "torch-sparse-softmax"]], "torch.sparse_bsr_tensor": [[1807, "torch-sparse-bsr-tensor"]], "torch.smm": [[1794, "torch-smm"]], "torch.sinc": [[1790, "torch-sinc"]], "torch.softmax": [[1795, "torch-softmax"]], "torch.signal.windows.bartlett": [[1777, "torch-signal-windows-bartlett"]], "torch.sigmoid": [[1775, "torch-sigmoid"]], "torch.signal.windows.cosine": [[1779, "torch-signal-windows-cosine"]], "torch.signal.windows.hamming": [[1784, "torch-signal-windows-hamming"]], "torch.signal.windows.kaiser": [[1786, "torch-signal-windows-kaiser"]], "torch.set_rng_state": [[1772, "torch-set-rng-state"]], "torch.signal.windows.hann": [[1785, "torch-signal-windows-hann"]], "torch.sort": [[1796, "torch-sort"]], "torch.signal.windows.nuttall": [[1787, "torch-signal-windows-nuttall"]], "torch.set_default_tensor_type": [[1764, "torch-set-default-tensor-type"]], "torch.func API Reference": [[51, "module-torch.func"]], "Function Transforms": [[51, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[51, "utilities-for-working-with-torch-nn-modules"]], "torch.dynamic-shape": [[66, "torch-dynamic-shape"]], "cond_branch_class_method": [[66, "cond-branch-class-method"], [65, "cond-branch-class-method"], [58, "cond-branch-class-method"]], "cond_branch_nested_function": [[66, "cond-branch-nested-function"], [65, "cond-branch-nested-function"], [58, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[66, "cond-branch-nonlocal-variables"], [65, "cond-branch-nonlocal-variables"], [58, "cond-branch-nonlocal-variables"]], "cond_operands": [[66, "cond-operands"], [65, "cond-operands"], [58, "cond-operands"]], "cond_predicate": [[66, "cond-predicate"], [65, "cond-predicate"], [58, "cond-predicate"]], "dynamic_shape_constructor": [[66, "dynamic-shape-constructor"], [58, "dynamic-shape-constructor"]], "dynamic_shape_if_guard": [[66, "dynamic-shape-if-guard"], [63, "dynamic-shape-if-guard"], [58, "dynamic-shape-if-guard"]], "dynamic_shape_map": [[66, "dynamic-shape-map"], [69, "dynamic-shape-map"], [58, "dynamic-shape-map"]], "dynamic_shape_round": [[66, "dynamic-shape-round"], [60, "dynamic-shape-round"], [58, "dynamic-shape-round"]], "dynamic_shape_slicing": [[66, "dynamic-shape-slicing"], [58, "dynamic-shape-slicing"]], "dynamic_shape_view": [[66, "dynamic-shape-view"], [58, "dynamic-shape-view"]], "list_contains": [[66, "list-contains"], [64, "list-contains"], [59, "list-contains"], [58, "list-contains"]], "scalar_output": [[66, "scalar-output"], [58, "scalar-output"]], "torch.map": [[69, "torch-map"]], "torch.Tensor.absolute": [[82, "torch-tensor-absolute"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[78, "fxe0016-find-operator-overloads-in-onnx-registry"]], "Generator": [[79, "generator"]], "python.data-structure": [[64, "python-data-structure"]], "dictionary": [[64, "dictionary"], [58, "dictionary"]], "fn_with_kwargs": [[64, "fn-with-kwargs"], [58, "fn-with-kwargs"]], "list_unpack": [[64, "list-unpack"], [63, "list-unpack"], [58, "list-unpack"]], "torch.escape-hatch": [[68, "torch-escape-hatch"]], "assume_constant_result": [[68, "assume-constant-result"], [58, "assume-constant-result"]], "constrain_as_size_example": [[68, "constrain-as-size-example"], [67, "constrain-as-size-example"], [58, "constrain-as-size-example"]], "constrain_as_value_example": [[68, "constrain-as-value-example"], [67, "constrain-as-value-example"], [58, "constrain-as-value-example"]], "torch.Tensor.add_": [[89, "torch-tensor-add"]], "python.control-flow": [[63, "python-control-flow"]], "static_for_loop": [[63, "static-for-loop"], [58, "static-for-loop"]], "static_if": [[63, "static-if"], [58, "static-if"]], "torch.Tensor.abs": [[80, "torch-tensor-abs"]], "torch.func": [[50, "torch-func"]], "What are composable function transforms?": [[50, "what-are-composable-function-transforms"]], "Why composable function transforms?": [[50, "why-composable-function-transforms"], [55, "why-composable-function-transforms"]], "Read More": [[50, "read-more"], [46, "read-more"], [1951, "read-more"]], "torch.Tensor.addcmul_": [[95, "torch-tensor-addcmul"]], "torch.dynamic-value": [[67, "torch-dynamic-value"]], "torch.Tensor.acos_": [[85, "torch-tensor-acos"]], "torch.cond": [[65, "torch-cond"], [954, "torch-cond"]], "cond_closed_over_variable": [[65, "cond-closed-over-variable"], [61, "cond-closed-over-variable"], [58, "cond-closed-over-variable"]], "FullyShardedDataParallel": [[49, "module-torch.distributed.fsdp"]], "torch.Tensor.abs_": [[81, "torch-tensor-abs"]], "torch.Tensor.addcdiv": [[92, "torch-tensor-addcdiv"]], "torch.Tensor.absolute_": [[83, "torch-tensor-absolute"]], "python.context-manager": [[62, "python-context-manager"]], "null_context_manager": [[62, "null-context-manager"], [58, "null-context-manager"]], "UX Limitations": [[54, "ux-limitations"]], "General limitations": [[54, "general-limitations"]], "torch.autograd APIs": [[54, "torch-autograd-apis"]], "vmap limitations": [[54, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[54, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[54, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[54, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[54, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[54, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[54, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[54, "randomness"]], "Patching Batch Norm": [[52, "patching-batch-norm"]], "What\u2019s happening?": [[52, "what-s-happening"]], "How to fix": [[52, "how-to-fix"]], "Option 1: Change the BatchNorm": [[52, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[52, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[52, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[52, "option-4-eval-mode"]], "FXE0015:fx-node-insert-type-promotion": [[77, "fxe0015-fx-node-insert-type-promotion"]], "torch.Tensor.addcmul": [[94, "torch-tensor-addcmul"]], "torch.fx": [[57, "torch-fx"]], "Overview": [[57, "module-torch.fx"], [46, "overview"], [18, "module-torch.cuda._sanitizer"], [1930, "module-torch.profiler"], [1923, "overview"], [1922, "overview"], [1955, "overview"]], "Writing Transformations": [[57, "writing-transformations"]], "A Quick Primer on Graphs": [[57, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[57, "graph-manipulation"]], "Direct Graph Manipulation": [[57, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[57, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[57, "graph-manipulation-examples"]], "Proxy/Retracing": [[57, "proxy-retracing"]], "The Interpreter Pattern": [[57, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[57, "examples-of-the-interpreter-pattern"]], "Debugging": [[57, "debugging"], [1881, "debugging"]], "Introduction": [[57, "introduction"], [1899, "introduction"], [1891, "introduction"]], "Common Pitfalls in Transform Authoring": [[57, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[57, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[57, "debugging-the-generated-code"]], "Use pdb": [[57, "use-pdb"]], "Print the Generated Code": [[57, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[57, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[57, "debugging-the-transformation"]], "Available Debuggers": [[57, "available-debuggers"]], "Limitations of Symbolic Tracing": [[57, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[57, "dynamic-control-flow"]], "Static Control Flow": [[57, "static-control-flow"]], "Non-torch Functions": [[57, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[57, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[57, "leaf-modules"]], "Miscellanea": [[57, "miscellanea"]], "API Reference": [[57, "api-reference"], [1894, "module-torch.monitor"], [12, "api-reference"], [46, "module-torch.export"], [18, "api-reference"], [1930, "api-reference"], [1923, "api-reference"], [1928, "api-reference"]], "python.assert": [[59, "python-assert"]], "dynamic_shape_assert": [[59, "dynamic-shape-assert"], [58, "dynamic-shape-assert"]], "FXE0012:unsupported-fx-node-analysis": [[74, "fxe0012-unsupported-fx-node-analysis"]], "torch.Tensor.add": [[88, "torch-tensor-add"]], "FXE0007:fx-graph-to-onnx": [[70, "fxe0007-fx-graph-to-onnx"]], "Key Representations:": [[70, "key-representations"]], "Additional Notes:": [[70, "additional-notes"]], "FXE0014:find-opschema-matched-symbolic-function": [[76, "fxe0014-find-opschema-matched-symbolic-function"]], "python.builtin": [[60, "python-builtin"]], "tensor_setattr": [[60, "tensor-setattr"], [58, "tensor-setattr"]], "type_reflection_method": [[60, "type-reflection-method"], [58, "type-reflection-method"]], "FXE0013:op-level-debugging": [[75, "fxe0013-op-level-debugging"]], "torch.Tensor.acos": [[84, "torch-tensor-acos"]], "torch.Tensor.addbmm": [[90, "torch-tensor-addbmm"]], "FXE0008:fx-node-to-onnx": [[71, "fxe0008-fx-node-to-onnx"]], "torch.Tensor.addcdiv_": [[93, "torch-tensor-addcdiv"]], "torch.Tensor.acosh_": [[87, "torch-tensor-acosh"]], "torch.futures": [[56, "torch-futures"]], "python.closure": [[61, "python-closure"]], "nested_function": [[61, "nested-function"], [58, "nested-function"]], "FXE0011:no-symbolic-function-for-call-function": [[73, "fxe0011-no-symbolic-function-for-call-function"]], "torch.Tensor.addbmm_": [[91, "torch-tensor-addbmm"]], "torch.Tensor.addmm": [[96, "torch-tensor-addmm"]], "torch.Tensor.addmm_": [[97, "torch-tensor-addmm"]], "FXE0010:fx-pass": [[72, "fxe0010-fx-pass"]], "ExportDB": [[58, "exportdb"]], "Tags": [[58, null]], "Supported": [[58, "supported"]], "autograd_function": [[58, "autograd-function"]], "class_method": [[58, "class-method"]], "decorator": [[58, "decorator"]], "pytree_flatten": [[58, "pytree-flatten"]], "specialized_attribute": [[58, "specialized-attribute"]], "Not Supported Yet": [[58, "not-supported-yet"]], "Migrating from functorch to torch.func": [[53, "migrating-from-functorch-to-torch-func"]], "function transforms": [[53, "function-transforms"]], "NN module utilities": [[53, "nn-module-utilities"]], "functorch.make_functional": [[53, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[53, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[53, "functorch-compile"]], "torch.Tensor.acosh": [[86, "torch-tensor-acosh"]], "torch.func Whirlwind Tour": [[55, "torch-func-whirlwind-tour"]], "What is torch.func?": [[55, "what-is-torch-func"]], "What are the transforms?": [[55, "what-are-the-transforms"]], "grad() (gradient computation)": [[55, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[55, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[55, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[55, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[55, "jacrev-jacfwd-and-hessian"]], "torch.nn.functional.hardtanh": [[1539, "torch-nn-functional-hardtanh"]], "torch.nn.functional.max_pool3d": [[1559, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.margin_ranking_loss": [[1556, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.layer_norm": [[1547, "torch-nn-functional-layer-norm"]], "torch.nn.functional.elu_": [[1523, "torch-nn-functional-elu"]], "torch.nn.functional.max_unpool1d": [[1560, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.max_pool2d": [[1558, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.fractional_max_pool3d": [[1529, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.l1_loss": [[1546, "torch-nn-functional-l1-loss"]], "torch.nn.functional.dropout1d": [[1519, "torch-nn-functional-dropout1d"]], "torch.nn.functional.elu": [[1522, "torch-nn-functional-elu"]], "torch.nn.functional.lp_pool1d": [[1554, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.hardswish": [[1538, "torch-nn-functional-hardswish"]], "torch.nn.functional.max_unpool2d": [[1561, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.logsigmoid": [[1553, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.lp_pool2d": [[1555, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.group_norm": [[1534, "torch-nn-functional-group-norm"]], "torch.nn.functional.gaussian_nll_loss": [[1530, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.embedding": [[1524, "torch-nn-functional-embedding"]], "torch.nn.functional.feature_alpha_dropout": [[1526, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.hardshrink": [[1536, "torch-nn-functional-hardshrink"]], "torch.nn.functional.dropout3d": [[1521, "torch-nn-functional-dropout3d"]], "torch.nn.functional.huber_loss": [[1542, "torch-nn-functional-huber-loss"]], "torch.nn.functional.max_unpool3d": [[1562, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.kl_div": [[1545, "torch-nn-functional-kl-div"]], "torch.nn.functional.leaky_relu": [[1548, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.dropout2d": [[1520, "torch-nn-functional-dropout2d"]], "torch.nn.functional.interpolate": [[1544, "torch-nn-functional-interpolate"]], "torch.nn.functional.gumbel_softmax": [[1535, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.linear": [[1550, "torch-nn-functional-linear"]], "torch.nn.functional.mse_loss": [[1564, "torch-nn-functional-mse-loss"]], "torch.nn.functional.glu": [[1532, "torch-nn-functional-glu"]], "torch.nn.functional.hardtanh_": [[1540, "torch-nn-functional-hardtanh"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1567, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.hinge_embedding_loss": [[1541, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.fractional_max_pool2d": [[1528, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.log_softmax": [[1552, "torch-nn-functional-log-softmax"]], "torch.nn.functional.hardsigmoid": [[1537, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.max_pool1d": [[1557, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.local_response_norm": [[1551, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.multi_margin_loss": [[1565, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.mish": [[1563, "torch-nn-functional-mish"]], "torch.nn.functional.grid_sample": [[1533, "torch-nn-functional-grid-sample"]], "torch.nn.functional.multilabel_margin_loss": [[1566, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.embedding_bag": [[1525, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.instance_norm": [[1543, "torch-nn-functional-instance-norm"]], "torch.nn.functional.leaky_relu_": [[1549, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.gelu": [[1531, "torch-nn-functional-gelu"]], "torch.nn.functional.fold": [[1527, "torch-nn-functional-fold"]], "torch.nn.functional.soft_margin_loss": [[1588, "torch-nn-functional-soft-margin-loss"]], "torch.nn.modules.module.register_module_backward_hook": [[1606, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.functional.pairwise_distance": [[1572, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.triplet_margin_loss": [[1599, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.functional.pdist": [[1573, "torch-nn-functional-pdist"]], "DistributedDataParallel": [[1614, "distributeddataparallel"], [1908, "distributeddataparallel"]], "torch.nn.functional.pixel_shuffle": [[1574, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.rrelu": [[1581, "torch-nn-functional-rrelu"]], "torch.nn.functional.rrelu_": [[1582, "torch-nn-functional-rrelu"]], "torch.nn.functional.threshold": [[1596, "torch-nn-functional-threshold"]], "torch.nn.functional.unfold": [[1601, "torch-nn-functional-unfold"]], "torch.nn.functional.selu": [[1584, "torch-nn-functional-selu"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1607, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1610, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.softplus": [[1591, "torch-nn-functional-softplus"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1609, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.functional.scaled_dot_product_attention": [[1583, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.smooth_l1_loss": [[1587, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1598, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.functional.nll_loss": [[1568, "torch-nn-functional-nll-loss"]], "LazyModuleMixin": [[1605, "lazymodulemixin"]], "torch.nn.functional.normalize": [[1569, "torch-nn-functional-normalize"]], "torch.nn.functional.prelu": [[1577, "torch-nn-functional-prelu"]], "torch.nn.functional.upsample": [[1602, "torch-nn-functional-upsample"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1612, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1600, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1613, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.modules.module.register_module_forward_hook": [[1608, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.functional.relu_": [[1580, "torch-nn-functional-relu"]], "torch.nn.functional.softmax": [[1589, "torch-nn-functional-softmax"]], "torch.nn.functional.softmin": [[1590, "torch-nn-functional-softmin"]], "torch.nn.functional.softshrink": [[1592, "torch-nn-functional-softshrink"]], "torch.nn.functional.tanh": [[1594, "torch-nn-functional-tanh"]], "torch.nn.functional.pad": [[1571, "torch-nn-functional-pad"]], "Parameter": [[1615, "parameter"]], "torch.nn.functional.relu6": [[1579, "torch-nn-functional-relu6"]], "torch.nn.functional.poisson_nll_loss": [[1576, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.tanhshrink": [[1595, "torch-nn-functional-tanhshrink"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1611, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "UninitializedBuffer": [[1616, "uninitializedbuffer"]], "torch.nn.functional.sigmoid": [[1585, "torch-nn-functional-sigmoid"]], "torch.nn.functional.threshold_": [[1597, "torch-nn-functional-threshold"]], "torch.nn.functional.silu": [[1586, "torch-nn-functional-silu"]], "torch.nn.functional.upsample_nearest": [[1604, "torch-nn-functional-upsample-nearest"]], "torch.nn.functional.pixel_unshuffle": [[1575, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.one_hot": [[1570, "torch-nn-functional-one-hot"]], "torch.nn.functional.softsign": [[1593, "torch-nn-functional-softsign"]], "torch.nn.functional.upsample_bilinear": [[1603, "torch-nn-functional-upsample-bilinear"]], "torch.nn.functional.relu": [[1578, "torch-nn-functional-relu"]], "torch.nn.utils.parametrize.is_parametrized": [[1631, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.utils.skip_init": [[1660, "torch-nn-utils-skip-init"]], "torch.nn.utils.prune.is_pruned": [[1645, "torch-nn-utils-prune-is-pruned"]], "torch.nn.utils.remove_spectral_norm": [[1651, "torch-nn-utils-remove-spectral-norm"]], "L1Unstructured": [[1637, "l1unstructured"]], "torch.nn.utils.clip_grad_norm": [[1618, "torch-nn-utils-clip-grad-norm"]], "LnStructured": [[1638, "lnstructured"]], "torch.nn.utils.parametrize.register_parametrization": [[1632, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.utils.clip_grad_value_": [[1620, "torch-nn-utils-clip-grad-value"]], "Identity": [[1636, "identity"], [1396, "identity"]], "torch.nn.utils.stateless.functional_call": [[1662, "torch-nn-utils-stateless-functional-call"]], "torch.nn.utils.parametrizations.orthogonal": [[1627, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.utils.weight_norm": [[1664, "torch-nn-utils-weight-norm"]], "torch.nn.utils.convert_conv2d_weight_memory_format": [[1621, "torch-nn-utils-convert-conv2d-weight-memory-format"]], "torch.nn.utils.prune.l1_unstructured": [[1646, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.prune.global_unstructured": [[1643, "torch-nn-utils-prune-global-unstructured"]], "torch.nn.utils.prune.identity": [[1644, "torch-nn-utils-prune-identity"]], "torch.nn.utils.rnn.unpad_sequence": [[1659, "torch-nn-utils-rnn-unpad-sequence"]], "torch.nn.utils.prune.random_unstructured": [[1649, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.utils.prune.random_structured": [[1648, "torch-nn-utils-prune-random-structured"]], "no_grad": [[1665, "no-grad"]], "torch.nn.utils.parametrize.cached": [[1630, "torch-nn-utils-parametrize-cached"]], "PackedSequence": [[1653, "packedsequence"]], "torch.nn.utils.fuse_conv_bn_eval": [[1622, "torch-nn-utils-fuse-conv-bn-eval"]], "torch.nn.utils.fuse_conv_bn_weights": [[1623, "torch-nn-utils-fuse-conv-bn-weights"]], "torch.nn.utils.rnn.pad_sequence": [[1657, "torch-nn-utils-rnn-pad-sequence"]], "RandomStructured": [[1640, "randomstructured"]], "torch.nn.utils.clip_grad_norm_": [[1619, "torch-nn-utils-clip-grad-norm"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1656, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.nn.utils.prune.custom_from_mask": [[1642, "torch-nn-utils-prune-custom-from-mask"]], "torch.nn.utils.spectral_norm": [[1661, "torch-nn-utils-spectral-norm"]], "torch.nn.utils.fuse_linear_bn_weights": [[1625, "torch-nn-utils-fuse-linear-bn-weights"]], "torch.nn.utils.fuse_linear_bn_eval": [[1624, "torch-nn-utils-fuse-linear-bn-eval"]], "torch.nn.utils.prune.remove": [[1650, "torch-nn-utils-prune-remove"]], "CustomFromMask": [[1635, "customfrommask"]], "torch.nn.utils.parametrizations.spectral_norm": [[1628, "torch-nn-utils-parametrizations-spectral-norm"]], "PruningContainer": [[1639, "pruningcontainer"]], "torch.nn.utils.parameters_to_vector": [[1626, "torch-nn-utils-parameters-to-vector"]], "BasePruningMethod": [[1634, "basepruningmethod"]], "torch.nn.utils.remove_weight_norm": [[1652, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1654, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.rnn.pack_sequence": [[1655, "torch-nn-utils-rnn-pack-sequence"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1633, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.utils.prune.ln_structured": [[1647, "torch-nn-utils-prune-ln-structured"]], "torch.nn.utils.rnn.unpack_sequence": [[1658, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nn.utils.vector_to_parameters": [[1663, "torch-nn-utils-vector-to-parameters"]], "RandomUnstructured": [[1641, "randomunstructured"]], "ParametrizationList": [[1629, "parametrizationlist"]], "UninitializedParameter": [[1617, "uninitializedparameter"]], "TransformerEncoderLayer": [[1481, "transformerencoderlayer"]], "TransformerDecoder": [[1478, "transformerdecoder"]], "Unfold": [[1485, "unfold"]], "torch.nn.functional.dropout": [[1518, "torch-nn-functional-dropout"]], "torch.nn.functional.adaptive_avg_pool2d": [[1493, "torch-nn-functional-adaptive-avg-pool2d"]], "Tanhshrink": [[1475, "tanhshrink"]], "torch.nn.functional.conv2d": [[1509, "torch-nn-functional-conv2d"]], "UpsamplingNearest2d": [[1488, "upsamplingnearest2d"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1506, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.celu": [[1507, "torch-nn-functional-celu"]], "torch.nn.functional.cosine_embedding_loss": [[1514, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.conv1d": [[1508, "torch-nn-functional-conv1d"]], "Threshold": [[1476, "threshold"]], "torch.nn.functional.alpha_dropout": [[1499, "torch-nn-functional-alpha-dropout"]], "TransformerDecoderLayer": [[1479, "transformerdecoderlayer"]], "Softshrink": [[1471, "softshrink"]], "TripletMarginWithDistanceLoss": [[1483, "tripletmarginwithdistanceloss"]], "torch.nn.functional.binary_cross_entropy": [[1505, "torch-nn-functional-binary-cross-entropy"]], "Softsign": [[1472, "softsign"]], "torch.nn.functional.conv_transpose3d": [[1513, "torch-nn-functional-conv-transpose3d"]], "ZeroPad3d": [[1491, "zeropad3d"]], "Softplus": [[1470, "softplus"]], "torch.nn.functional.adaptive_max_pool3d": [[1497, "torch-nn-functional-adaptive-max-pool3d"]], "TransformerEncoder": [[1480, "transformerencoder"]], "torch.nn.functional.cross_entropy": [[1516, "torch-nn-functional-cross-entropy"]], "Unflatten": [[1484, "unflatten"]], "torch.nn.functional.adaptive_max_pool2d": [[1496, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.conv_transpose1d": [[1511, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.batch_norm": [[1503, "torch-nn-functional-batch-norm"]], "torch.nn.functional.avg_pool3d": [[1502, "torch-nn-functional-avg-pool3d"]], "Upsample": [[1486, "upsample"]], "torch.nn.functional.avg_pool2d": [[1501, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.bilinear": [[1504, "torch-nn-functional-bilinear"]], "ZeroPad1d": [[1489, "zeropad1d"]], "torch.nn.functional.adaptive_avg_pool1d": [[1492, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.ctc_loss": [[1517, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.adaptive_max_pool1d": [[1495, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.cosine_similarity": [[1515, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.affine_grid": [[1498, "torch-nn-functional-affine-grid"]], "Tanh": [[1474, "tanh"]], "UpsamplingBilinear2d": [[1487, "upsamplingbilinear2d"]], "torch.nn.functional.adaptive_avg_pool3d": [[1494, "torch-nn-functional-adaptive-avg-pool3d"]], "ZeroPad2d": [[1490, "zeropad2d"]], "torch.nn.functional.conv3d": [[1510, "torch-nn-functional-conv3d"]], "torch.nn.functional.conv_transpose2d": [[1512, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.avg_pool1d": [[1500, "torch-nn-functional-avg-pool1d"]], "TripletMarginLoss": [[1482, "tripletmarginloss"]], "SyncBatchNorm": [[1473, "syncbatchnorm"]], "torch.ones_like": [[1672, "torch-ones-like"]], "LambdaLR": [[1700, "lambdalr"]], "SparseAdam": [[1693, "sparseadam"]], "VerificationOptions": [[1675, "verificationoptions"]], "torch.optim.Optimizer.step": [[1687, "torch-optim-optimizer-step"]], "LBFGS": [[1682, "lbfgs"]], "LinearLR": [[1701, "linearlr"]], "OneCycleLR": [[1704, "onecyclelr"]], "CosineAnnealingLR": [[1696, "cosineannealinglr"]], "ReduceLROnPlateau": [[1706, "reducelronplateau"]], "torch.outer": [[1711, "torch-outer"]], "torch.optim.Optimizer.add_param_group": [[1684, "torch-optim-optimizer-add-param-group"]], "torch.normal": [[1668, "torch-normal"]], "PolynomialLR": [[1705, "polynomiallr"]], "CyclicLR": [[1698, "cycliclr"]], "torch.permute": [[1713, "torch-permute"]], "torch.norm": [[1667, "torch-norm"]], "NAdam": [[1683, "nadam"]], "ConstantLR": [[1695, "constantlr"]], "ChainedScheduler": [[1694, "chainedscheduler"]], "torch.pinverse": [[1714, "torch-pinverse"]], "Adamax": [[1681, "adamax"]], "torch.optim.Optimizer.state_dict": [[1686, "torch-optim-optimizer-state-dict"]], "MultiplicativeLR": [[1703, "multiplicativelr"]], "AdamW": [[1680, "adamw"]], "torch.orgqr": [[1709, "torch-orgqr"]], "ASGD": [[1676, "asgd"]], "torch.numel": [[1670, "torch-numel"]], "Adam": [[1679, "adam"]], "torch.optim.Optimizer.zero_grad": [[1688, "torch-optim-optimizer-zero-grad"]], "RAdam": [[1689, "radam"]], "SGD": [[1692, "sgd"]], "SequentialLR": [[1707, "sequentiallr"]], "torch.pca_lowrank": [[1712, "torch-pca-lowrank"]], "Adagrad": [[1678, "adagrad"]], "torch.not_equal": [[1669, "torch-not-equal"]], "ExponentialLR": [[1699, "exponentiallr"]], "GraphInfo": [[1674, "graphinfo"]], "torch.optim.Optimizer.load_state_dict": [[1685, "torch-optim-optimizer-load-state-dict"]], "Adadelta": [[1677, "adadelta"]], "MultiStepLR": [[1702, "multisteplr"]], "CosineAnnealingWarmRestarts": [[1697, "cosineannealingwarmrestarts"]], "torch.ormqr": [[1710, "torch-ormqr"]], "torch.ones": [[1671, "torch-ones"]], "StepLR": [[1708, "steplr"]], "RMSprop": [[1690, "rmsprop"]], "torch.nonzero": [[1666, "torch-nonzero"]], "JitScalarType": [[1673, "jitscalartype"]], "Rprop": [[1691, "rprop"]], "MultiLabelSoftMarginLoss": [[1438, "multilabelsoftmarginloss"]], "ReflectionPad3d": [[1457, "reflectionpad3d"]], "Sigmoid": [[1464, "sigmoid"], [749, "sigmoid"]], "RNNBase": [[1450, "rnnbase"]], "LocalResponseNorm": [[1422, "localresponsenorm"]], "Softmax": [[1467, "softmax"]], "MultiheadAttention": [[1440, "multiheadattention"], [725, "multiheadattention"]], "ModuleDict": [[1435, "moduledict"]], "ReplicationPad3d": [[1460, "replicationpad3d"]], "RReLU": [[1452, "rrelu"]], "ReflectionPad2d": [[1456, "reflectionpad2d"]], "PixelShuffle": [[1446, "pixelshuffle"]], "RNNCell": [[1451, "rnncell"], [755, "rnncell"]], "MSELoss": [[1425, "mseloss"]], "NLLLoss": [[1441, "nllloss"]], "MaxUnpool2d": [[1431, "maxunpool2d"]], "Linear": [[1421, "linear"], [754, "linear"], [746, "linear"], [723, "linear"], [722, "linear"]], "MaxUnpool1d": [[1430, "maxunpool1d"]], "MarginRankingLoss": [[1426, "marginrankingloss"]], "ReplicationPad1d": [[1458, "replicationpad1d"]], "MultiLabelMarginLoss": [[1437, "multilabelmarginloss"]], "ParameterDict": [[1444, "parameterdict"]], "SiLU": [[1463, "silu"]], "LogSoftmax": [[1424, "logsoftmax"]], "PairwiseDistance": [[1443, "pairwisedistance"]], "MaxPool1d": [[1427, "maxpool1d"]], "ReplicationPad2d": [[1459, "replicationpad2d"]], "MultiMarginLoss": [[1439, "multimarginloss"]], "ReLU6": [[1454, "relu6"], [748, "relu6"]], "Softmin": [[1469, "softmin"]], "PixelUnshuffle": [[1447, "pixelunshuffle"]], "MaxPool3d": [[1429, "maxpool3d"]], "Sequential": [[1462, "sequential"]], "ModuleList": [[1436, "modulelist"]], "SoftMarginLoss": [[1466, "softmarginloss"]], "ReflectionPad1d": [[1455, "reflectionpad1d"]], "SmoothL1Loss": [[1465, "smoothl1loss"]], "RNN": [[1449, "rnn"]], "ReLU": [[1453, "relu"]], "PoissonNLLLoss": [[1448, "poissonnllloss"]], "PReLU": [[1442, "prelu"]], "Softmax2d": [[1468, "softmax2d"]], "MaxUnpool3d": [[1432, "maxunpool3d"]], "Mish": [[1433, "mish"]], "LogSigmoid": [[1423, "logsigmoid"]], "SELU": [[1461, "selu"]], "ParameterList": [[1445, "parameterlist"]], "MaxPool2d": [[1428, "maxpool2d"]], "Module": [[1434, "module"]], "LazyConvTranspose1d": [[1413, "lazyconvtranspose1d"]], "GRU": [[1386, "gru"], [750, "gru"]], "Dropout": [[1372, "dropout"]], "LPPool1d": [[1402, "lppool1d"]], "LazyConv3d": [[1412, "lazyconv3d"]], "HingeEmbeddingLoss": [[1394, "hingeembeddingloss"]], "FractionalMaxPool2d": [[1382, "fractionalmaxpool2d"]], "InstanceNorm3d": [[1399, "instancenorm3d"], [743, "instancenorm3d"]], "KLDivLoss": [[1400, "kldivloss"]], "LazyBatchNorm3d": [[1409, "lazybatchnorm3d"]], "Embedding": [[1377, "embedding"], [735, "embedding"]], "LazyBatchNorm2d": [[1408, "lazybatchnorm2d"]], "Dropout1d": [[1373, "dropout1d"]], "LazyLinear": [[1419, "lazylinear"]], "Hardshrink": [[1390, "hardshrink"]], "Dropout3d": [[1375, "dropout3d"]], "Hardtanh": [[1393, "hardtanh"]], "L1Loss": [[1401, "l1loss"]], "LSTM": [[1404, "lstm"], [752, "lstm"], [724, "lstm"]], "HuberLoss": [[1395, "huberloss"]], "LSTMCell": [[1405, "lstmcell"], [753, "lstmcell"]], "InstanceNorm2d": [[1398, "instancenorm2d"], [742, "instancenorm2d"]], "EmbeddingBag": [[1378, "embeddingbag"], [736, "embeddingbag"]], "ELU": [[1376, "elu"], [734, "elu"]], "Fold": [[1381, "fold"]], "FractionalMaxPool3d": [[1383, "fractionalmaxpool3d"]], "LPPool2d": [[1403, "lppool2d"]], "LazyConv1d": [[1410, "lazyconv1d"]], "LazyConvTranspose3d": [[1415, "lazyconvtranspose3d"]], "LazyBatchNorm1d": [[1407, "lazybatchnorm1d"]], "GELU": [[1384, "gelu"]], "GRUCell": [[1387, "grucell"], [751, "grucell"]], "Dropout2d": [[1374, "dropout2d"]], "FeatureAlphaDropout": [[1379, "featurealphadropout"]], "Hardsigmoid": [[1391, "hardsigmoid"]], "GLU": [[1385, "glu"]], "LeakyReLU": [[1420, "leakyrelu"], [745, "leakyrelu"]], "InstanceNorm1d": [[1397, "instancenorm1d"], [741, "instancenorm1d"]], "LazyInstanceNorm3d": [[1418, "lazyinstancenorm3d"]], "Hardswish": [[1392, "hardswish"], [740, "hardswish"]], "GroupNorm": [[1389, "groupnorm"], [739, "groupnorm"]], "GaussianNLLLoss": [[1388, "gaussiannllloss"]], "LazyConv2d": [[1411, "lazyconv2d"]], "LazyConvTranspose2d": [[1414, "lazyconvtranspose2d"]], "LazyInstanceNorm2d": [[1417, "lazyinstancenorm2d"]], "LazyInstanceNorm1d": [[1416, "lazyinstancenorm1d"]], "Flatten": [[1380, "flatten"]], "LayerNorm": [[1406, "layernorm"], [744, "layernorm"]], "AdaptiveAvgPool1d": [[1339, "adaptiveavgpool1d"]], "ConstantPad1d": [[1359, "constantpad1d"]], "Conv3d": [[1364, "conv3d"], [730, "conv3d"], [721, "conv3d"]], "ConstantPad3d": [[1361, "constantpad3d"]], "ChannelShuffle": [[1358, "channelshuffle"]], "ConvTranspose2d": [[1366, "convtranspose2d"], [732, "convtranspose2d"]], "AdaptiveLogSoftmaxWithLoss": [[1342, "adaptivelogsoftmaxwithloss"]], "torch.multinomial": [[1324, "torch-multinomial"]], "AdaptiveAvgPool2d": [[1340, "adaptiveavgpool2d"]], "BatchNorm2d": [[1353, "batchnorm2d"], [726, "batchnorm2d"]], "BatchNorm3d": [[1354, "batchnorm3d"], [727, "batchnorm3d"]], "torch.mv": [[1326, "torch-mv"]], "torch.nan_to_num": [[1328, "torch-nan-to-num"]], "AlphaDropout": [[1346, "alphadropout"]], "torch.nanquantile": [[1331, "torch-nanquantile"]], "AvgPool3d": [[1349, "avgpool3d"]], "torch.multiply": [[1325, "torch-multiply"]], "torch.narrow": [[1333, "torch-narrow"]], "BCELoss": [[1350, "bceloss"]], "AdaptiveMaxPool2d": [[1344, "adaptivemaxpool2d"]], "AvgPool1d": [[1347, "avgpool1d"]], "ConvTranspose3d": [[1367, "convtranspose3d"], [733, "convtranspose3d"]], "torch.negative": [[1337, "torch-negative"]], "torch.neg": [[1336, "torch-neg"]], "torch.narrow_copy": [[1334, "torch-narrow-copy"]], "BatchNorm1d": [[1352, "batchnorm1d"]], "torch.mvlgamma": [[1327, "torch-mvlgamma"]], "BCEWithLogitsLoss": [[1351, "bcewithlogitsloss"]], "DataParallel": [[1371, "dataparallel"]], "CosineSimilarity": [[1369, "cosinesimilarity"]], "AdaptiveMaxPool1d": [[1343, "adaptivemaxpool1d"]], "Conv1d": [[1362, "conv1d"], [728, "conv1d"]], "CELU": [[1356, "celu"]], "CosineEmbeddingLoss": [[1368, "cosineembeddingloss"]], "AdaptiveMaxPool3d": [[1345, "adaptivemaxpool3d"]], "torch.mul": [[1323, "torch-mul"]], "AdaptiveAvgPool3d": [[1341, "adaptiveavgpool3d"]], "AvgPool2d": [[1348, "avgpool2d"]], "Bilinear": [[1355, "bilinear"]], "CTCLoss": [[1357, "ctcloss"]], "ConvTranspose1d": [[1365, "convtranspose1d"], [731, "convtranspose1d"]], "torch.nanmean": [[1329, "torch-nanmean"]], "CrossEntropyLoss": [[1370, "crossentropyloss"]], "torch.ne": [[1335, "torch-ne"]], "torch.nextafter": [[1338, "torch-nextafter"]], "Conv2d": [[1363, "conv2d"], [720, "conv2d"], [729, "conv2d"]], "ConstantPad2d": [[1360, "constantpad2d"]], "torch.nansum": [[1332, "torch-nansum"]], "torch.nanmedian": [[1330, "torch-nanmedian"]], "torch.mps.profiler.stop": [[1317, "torch-mps-profiler-stop"]], "torch.logsumexp": [[1288, "torch-logsumexp"]], "torch.manual_seed": [[1293, "torch-manual-seed"]], "torch.log": [[1274, "torch-log"]], "torch.lt": [[1289, "torch-lt"]], "torch.logaddexp": [[1278, "torch-logaddexp"]], "torch.mean": [[1300, "torch-mean"]], "Event": [[1312, "event"], [975, "event"]], "torch.mps.synchronize": [[1321, "torch-mps-synchronize"]], "torch.mps.empty_cache": [[1311, "torch-mps-empty-cache"]], "torch.maximum": [[1299, "torch-maximum"]], "torch.lu": [[1290, "torch-lu"]], "torch.movedim": [[1308, "torch-movedim"]], "torch.matrix_exp": [[1296, "torch-matrix-exp"]], "torch.mps.profiler.profile": [[1315, "torch-mps-profiler-profile"]], "torch.mps.set_per_process_memory_fraction": [[1319, "torch-mps-set-per-process-memory-fraction"]], "torch.logit": [[1286, "torch-logit"]], "torch.moveaxis": [[1307, "torch-moveaxis"]], "torch.mps.set_rng_state": [[1320, "torch-mps-set-rng-state"]], "torch.mps.profiler.start": [[1316, "torch-mps-profiler-start"]], "torch.median": [[1301, "torch-median"]], "torch.logdet": [[1281, "torch-logdet"]], "torch.logspace": [[1287, "torch-logspace"]], "torch.logcumsumexp": [[1280, "torch-logcumsumexp"]], "torch.mode": [[1306, "torch-mode"]], "torch.logaddexp2": [[1279, "torch-logaddexp2"]], "torch.lu_unpack": [[1292, "torch-lu-unpack"]], "torch.meshgrid": [[1302, "torch-meshgrid"]], "torch.msort": [[1322, "torch-msort"]], "torch.matmul": [[1295, "torch-matmul"]], "torch.minimum": [[1304, "torch-minimum"]], "torch.logical_xor": [[1285, "torch-logical-xor"]], "torch.matrix_power": [[1297, "torch-matrix-power"]], "torch.mm": [[1305, "torch-mm"]], "torch.mps.manual_seed": [[1314, "torch-mps-manual-seed"]], "torch.mps.current_allocated_memory": [[1309, "torch-mps-current-allocated-memory"]], "torch.log2": [[1277, "torch-log2"]], "torch.logical_and": [[1282, "torch-logical-and"]], "torch.mps.driver_allocated_memory": [[1310, "torch-mps-driver-allocated-memory"]], "torch.mps.get_rng_state": [[1313, "torch-mps-get-rng-state"]], "torch.min": [[1303, "torch-min"]], "torch.mps.seed": [[1318, "torch-mps-seed"]], "torch.log1p": [[1276, "torch-log1p"]], "torch.max": [[1298, "torch-max"]], "torch.log10": [[1275, "torch-log10"]], "torch.logical_not": [[1283, "torch-logical-not"]], "torch.masked_select": [[1294, "torch-masked-select"]], "torch.logical_or": [[1284, "torch-logical-or"]], "torch.lu_solve": [[1291, "torch-lu-solve"]], "torch.less_equal": [[1228, "torch-less-equal"]], "torch.linalg.tensorinv": [[1266, "torch-linalg-tensorinv"]], "torch.linalg.lu": [[1247, "torch-linalg-lu"]], "torch.linalg.matrix_exp": [[1252, "torch-linalg-matrix-exp"]], "torch.lobpcg": [[1273, "torch-lobpcg"]], "torch.linalg.vector_norm": [[1270, "torch-linalg-vector-norm"]], "torch.linalg.matrix_rank": [[1255, "torch-linalg-matrix-rank"]], "torch.linalg.ldl_factor": [[1243, "torch-linalg-ldl-factor"]], "torch.lerp": [[1226, "torch-lerp"]], "torch.linalg.ldl_factor_ex": [[1244, "torch-linalg-ldl-factor-ex"]], "torch.linalg.pinv": [[1258, "torch-linalg-pinv"]], "torch.linalg.vecdot": [[1269, "torch-linalg-vecdot"]], "torch.linalg.inv_ex": [[1242, "torch-linalg-inv-ex"]], "torch.load": [[1272, "torch-load"]], "torch.linalg.svdvals": [[1265, "torch-linalg-svdvals"]], "torch.linalg.eig": [[1236, "torch-linalg-eig"]], "torch.linalg.cholesky": [[1230, "torch-linalg-cholesky"]], "torch.linalg.householder_product": [[1240, "torch-linalg-householder-product"]], "torch.linalg.diagonal": [[1235, "torch-linalg-diagonal"]], "torch.linalg.eigvals": [[1238, "torch-linalg-eigvals"]], "torch.linalg.ldl_solve": [[1245, "torch-linalg-ldl-solve"]], "torch.linalg.solve_ex": [[1262, "torch-linalg-solve-ex"]], "torch.linalg.qr": [[1259, "torch-linalg-qr"]], "torch.less": [[1227, "torch-less"]], "torch.linalg.eigvalsh": [[1239, "torch-linalg-eigvalsh"]], "torch.linalg.det": [[1234, "torch-linalg-det"]], "torch.linalg.vander": [[1268, "torch-linalg-vander"]], "torch.linalg.lu_factor_ex": [[1249, "torch-linalg-lu-factor-ex"]], "torch.lgamma": [[1229, "torch-lgamma"]], "torch.linalg.lu_factor": [[1248, "torch-linalg-lu-factor"]], "torch.linalg.matrix_power": [[1254, "torch-linalg-matrix-power"]], "torch.linalg.solve": [[1261, "torch-linalg-solve"]], "torch.linalg.norm": [[1257, "torch-linalg-norm"]], "torch.linalg.tensorsolve": [[1267, "torch-linalg-tensorsolve"]], "torch.linalg.matrix_norm": [[1253, "torch-linalg-matrix-norm"]], "torch.linalg.slogdet": [[1260, "torch-linalg-slogdet"]], "torch.linalg.eigh": [[1237, "torch-linalg-eigh"]], "torch.linalg.solve_triangular": [[1263, "torch-linalg-solve-triangular"]], "torch.linalg.lstsq": [[1246, "torch-linalg-lstsq"]], "torch.linspace": [[1271, "torch-linspace"]], "torch.linalg.lu_solve": [[1250, "torch-linalg-lu-solve"]], "torch.linalg.svd": [[1264, "torch-linalg-svd"]], "torch.linalg.cross": [[1233, "torch-linalg-cross"]], "torch.linalg.inv": [[1241, "torch-linalg-inv"]], "torch.linalg.cholesky_ex": [[1231, "torch-linalg-cholesky-ex"]], "torch.linalg.multi_dot": [[1256, "torch-linalg-multi-dot"]], "torch.le": [[1225, "torch-le"]], "torch.linalg.matmul": [[1251, "torch-linalg-matmul"]], "torch.linalg.cond": [[1232, "torch-linalg-cond"]], "torch.var": [[1867, "torch-var"]], "torch.zeros_like": [[1878, "torch-zeros-like"]], "torch.xlogy": [[1876, "torch-xlogy"]], "torch.library": [[1888, "module-torch.library"]], "Low-level APIs": [[1888, "low-level-apis"]], "torch._logging": [[1890, "torch-logging"]], "Named Tensors operator coverage": [[1897, "named-tensors-operator-coverage"]], "Supported Operations": [[1897, "id1"]], "Keeps input names": [[1897, "keeps-input-names"]], "Removes dimensions": [[1897, "removes-dimensions"]], "Unifies names from inputs": [[1897, "unifies-names-from-inputs"]], "Permutes dimensions": [[1897, "permutes-dimensions"]], "Contracts away dims": [[1897, "contracts-away-dims"]], "Factory functions": [[1897, "factory-functions"]], "out function and in-place variants": [[1897, "out-function-and-in-place-variants"]], "torch.nested": [[1899, "module-torch.nested"]], "Construction": [[1899, "construction"], [1940, "construction"]], "size": [[1899, "size"]], "unbind": [[1899, "unbind"]], "Nested tensor constructor and conversion functions": [[1899, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1899, "supported-operations"], [1940, "supported-operations"]], "Python Language Reference Coverage": [[1885, "python-language-reference-coverage"]], "torch.nn": [[1900, "module-torch.nn"], [1900, "id1"]], "Containers": [[1900, "containers"]], "Convolution Layers": [[1900, "convolution-layers"]], "Pooling layers": [[1900, "pooling-layers"]], "Padding Layers": [[1900, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1900, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1900, "non-linear-activations-other"]], "Normalization Layers": [[1900, "normalization-layers"]], "Recurrent Layers": [[1900, "recurrent-layers"]], "Transformer Layers": [[1900, "transformer-layers"]], "Linear Layers": [[1900, "linear-layers"]], "Dropout Layers": [[1900, "dropout-layers"]], "Sparse Layers": [[1900, "sparse-layers"]], "Distance Functions": [[1900, "distance-functions"]], "Loss Functions": [[1900, "loss-functions"]], "Vision Layers": [[1900, "vision-layers"]], "Shuffle Layers": [[1900, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1900, "module-torch.nn.parallel"]], "Utilities": [[1900, "module-torch.nn.utils"], [1948, "utilities"]], "Quantized Functions": [[1900, "quantized-functions"]], "Lazy Modules Initialization": [[1900, "lazy-modules-initialization"]], "Named Tensors": [[1898, "named-tensors"]], "Creating named tensors": [[1898, "creating-named-tensors"]], "Named dimensions": [[1898, "named-dimensions"]], "Name propagation semantics": [[1898, "name-propagation-semantics"]], "match semantics": [[1898, "match-semantics"]], "Basic name inference rules": [[1898, "basic-name-inference-rules"]], "Explicit alignment by names": [[1898, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1898, "manipulating-dimensions"]], "Autograd support": [[1898, "autograd-support"]], "Currently supported operations and subsystems": [[1898, "currently-supported-operations-and-subsystems"]], "Operators": [[1898, "operators"]], "Subsystems": [[1898, "subsystems"]], "Named tensor API reference": [[1898, "named-tensor-api-reference"]], "torch.monitor": [[1894, "torch-monitor"]], "torch.nn.init": [[1902, "torch-nn-init"]], "torch.linalg": [[1889, "torch-linalg"]], "Matrix Properties": [[1889, "matrix-properties"]], "Decompositions": [[1889, "decompositions"]], "Solvers": [[1889, "solvers"]], "Inverses": [[1889, "inverses"]], "Matrix Functions": [[1889, "matrix-functions"]], "Matrix Products": [[1889, "matrix-products"]], "Tensor Operations": [[1889, "tensor-operations"]], "Misc": [[1889, "misc"]], "Experimental Functions": [[1889, "experimental-functions"]], "torch.vander": [[1866, "torch-vander"]], "torch.vdot": [[1869, "torch-vdot"]], "torch.utils.rename_privateuse1_backend": [[1864, "torch-utils-rename-privateuse1-backend"]], "CUDA semantics": [[1907, "cuda-semantics"]], "TensorFloat-32 (TF32) on Ampere (and later) devices": [[1907, "tensorfloat-32-tf32-on-ampere-and-later-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1907, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1907, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1907, "asynchronous-execution"]], "CUDA streams": [[1907, "cuda-streams"]], "Stream semantics of backward passes": [[1907, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1907, "bc-note-using-grads-on-the-default-stream"]], "Memory management": [[1907, "memory-management"], [17, "memory-management"], [1913, "memory-management"]], "Environment variables": [[1907, "environment-variables"]], "Using custom memory allocators for CUDA": [[1907, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1907, "cublas-workspaces"]], "cuFFT plan cache": [[1907, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1907, "just-in-time-compilation"]], "Best practices": [[1907, "best-practices"]], "Device-agnostic code": [[1907, "device-agnostic-code"]], "Use pinned memory buffers": [[1907, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1907, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1907, "cuda-graphs"]], "Why CUDA Graphs?": [[1907, "why-cuda-graphs"]], "PyTorch API": [[1907, "pytorch-api"]], "Constraints": [[1907, "constraints"], [31, "module-torch.distributions.constraints"]], "Non-constraints": [[1907, "non-constraints"]], "Whole-network capture": [[1907, "whole-network-capture"]], "Partial-network capture": [[1907, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1907, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1907, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1907, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1907, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1907, "id5"]], "Graph memory management": [[1907, "graph-memory-management"]], "Sharing memory across captures": [[1907, "sharing-memory-across-captures"]], "PyTorch documentation": [[1880, "pytorch-documentation"]], "Community": [[1880, null]], "Developer Notes": [[1880, null]], "Language Bindings": [[1880, null]], "Python API": [[1880, null], [1925, "module-torch.onnx"]], "Libraries": [[1880, null]], "Indices and tables": [[1880, "indices-and-tables"]], "torch.view_as_real": [[1871, "torch-view-as-real"]], "Extending torch.func with autograd.Function": [[1910, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1910, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1910, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1910, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1910, "limitations-and-gotchas"]], "torch.vmap() Support": [[1910, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1910, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1910, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1910, "torch-func-jvp-support"]], "Broadcasting semantics": [[1905, "broadcasting-semantics"]], "General semantics": [[1905, "general-semantics"]], "In-place semantics": [[1905, "in-place-semantics"]], "Backwards compatibility": [[1905, "backwards-compatibility"]], "Distributed Data Parallel": [[1908, "distributed-data-parallel"]], "Example": [[1908, "example"], [1909, "example"]], "Internal Design": [[1908, "internal-design"]], "Implementation": [[1908, "implementation"], [1938, "implementation"]], "ProcessGroup": [[1908, "processgroup"]], "TorchDynamo DDPOptimizer": [[1908, "id1"]], "torch.vsplit": [[1873, "torch-vsplit"]], "JIT Utils - torch.utils.jit": [[1887, "module-torch.utils.jit"]], "torch.utils.set_module": [[1865, "torch-utils-set-module"]], "CPU threading and TorchScript inference": [[1906, "cpu-threading-and-torchscript-inference"]], "Build options": [[1906, "build-options"]], "Runtime API": [[1906, "runtime-api"]], "Tuning the number of threads": [[1906, "tuning-the-number-of-threads"]], "torch.utils.get_cpp_backtrace": [[1863, "torch-utils-get-cpp-backtrace"]], "torch.vmap": [[1872, "torch-vmap"]], "torch.masked": [[1891, "torch-masked"]], "Motivation": [[1891, "motivation"], [1957, "motivation"], [1958, "motivation"]], "What is a MaskedTensor?": [[1891, "what-is-a-maskedtensor"]], "Supported Operators": [[1891, "supported-operators"]], "Unary Operators": [[1891, "unary-operators"]], "Binary Operators": [[1891, "binary-operators"]], "Reductions": [[1891, "reductions"]], "View and select functions": [[1891, "view-and-select-functions"]], "torch.nn.functional": [[1901, "torch-nn-functional"]], "Convolution functions": [[1901, "convolution-functions"]], "Pooling functions": [[1901, "pooling-functions"]], "Attention Mechanisms": [[1901, "attention-mechanisms"]], "Non-linear activation functions": [[1901, "non-linear-activation-functions"]], "Linear functions": [[1901, "linear-functions"]], "Dropout functions": [[1901, "dropout-functions"]], "Sparse functions": [[1901, "sparse-functions"]], "Distance functions": [[1901, "distance-functions"]], "Loss functions": [[1901, "loss-functions"]], "Vision functions": [[1901, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1901, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1901, "data-parallel"]], "torch.utils.mobile_optimizer": [[1892, "torch-utils-mobile-optimizer"]], "Extending PyTorch": [[1909, "extending-pytorch"]], "Extending torch.autograd": [[1909, "extending-torch-autograd"]], "When to use": [[1909, "when-to-use"]], "When not to use": [[1909, "when-not-to-use"]], "How to use": [[1909, "how-to-use"]], "Combined or separate forward() and setup_context()": [[1909, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1909, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1909, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1909, "extending-torch-nn"]], "Adding a Module": [[1909, "adding-a-module"]], "Extending torch Python API": [[1909, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1909, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1909, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1909, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1909, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1909, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1909, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1909, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1909, "writing-custom-c-extensions"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1862, "torch-utils-generate-methods-for-privateuse1-backend"]], "TorchScript Builtins": [[1882, "torchscript-builtins"]], "Supported Tensor Methods": [[1882, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1882, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1882, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1882, "python-built-in-functions"]], "math Module": [[1882, "math-module"]], "TorchScript Language Reference": [[1883, "torchscript-language-reference"], [1884, "torchscript-language-reference"]], "Types": [[1883, "supported-type"], [1925, "types"]], "Unsupported Typing Constructs": [[1883, "unsupported-typing-constructs"], [1884, "unsupported-typing-constructs"]], "Default Types": [[1883, "default-types"]], "Optional Type Refinement": [[1883, "optional-type-refinement"]], "TorchScript Classes": [[1883, "id2"], [1881, "torchscript-classes"]], "TorchScript Enums": [[1883, "id4"]], "Named Tuples": [[1883, "named-tuples"]], "Iterables": [[1883, "iterables"]], "Expressions": [[1883, "expressions"], [1884, "expressions"]], "Literals": [[1883, "literals"], [1884, "literals"]], "List Construction": [[1883, "list-construction"]], "Tuple Construction": [[1883, "tuple-construction"]], "Dict Construction": [[1883, "dict-construction"]], "Arithmetic Operators": [[1883, "arithmetic-operators"]], "Comparison Operators": [[1883, "comparison-operators"]], "Logical Operators": [[1883, "logical-operators"]], "Subscripts and Slicing": [[1883, "subscripts-and-slicing"]], "Function Calls": [[1883, "function-calls"]], "Method Calls": [[1883, "method-calls"]], "Ternary Expressions": [[1883, "ternary-expressions"]], "Casts": [[1883, "casts"]], "Accessing Module Parameters": [[1883, "accessing-module-parameters"]], "Statements": [[1883, "statements"]], "Simple Assignments": [[1883, "simple-assignments"]], "Pattern Matching Assignments": [[1883, "pattern-matching-assignments"]], "Print Statements": [[1883, "print-statements"]], "If Statements": [[1883, "if-statements"]], "While Loops": [[1883, "while-loops"]], "For loops with range": [[1883, "for-loops-with-range"]], "For loops over tuples": [[1883, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1883, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1883, "break-and-continue"]], "Return": [[1883, "return"]], "Variable Resolution": [[1883, "variable-resolution"]], "Use of Python Values": [[1883, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[1883, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1883, "python-defined-constants"]], "Module Attributes": [[1883, "module-attributes"]], "torch.hub": [[1879, "torch-hub"]], "Publishing models": [[1879, "publishing-models"]], "How to implement an entrypoint?": [[1879, "how-to-implement-an-entrypoint"]], "Important Notice": [[1879, "important-notice"]], "Loading models from Hub": [[1879, "loading-models-from-hub"]], "Running a loaded model:": [[1879, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1879, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1879, "caching-logic"]], "Known limitations:": [[1879, "known-limitations"]], "torch.where": [[1875, "torch-where"]], "CUDA Automatic Mixed Precision examples": [[1903, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1903, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1903, "working-with-unscaled-gradients"]], "Gradient clipping": [[1903, "gradient-clipping"]], "Working with Scaled Gradients": [[1903, "working-with-scaled-gradients"]], "Gradient accumulation": [[1903, "gradient-accumulation"]], "Gradient penalty": [[1903, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1903, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1903, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1903, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1903, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1903, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1903, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1903, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1903, "functions-that-need-a-particular-dtype"]], "torch.var_mean": [[1868, "torch-var-mean"]], "torch.view_as_complex": [[1870, "torch-view-as-complex"]], "TorchScript Unsupported PyTorch Constructs": [[1886, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1886, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1886, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1886, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1886, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1886, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1886, "pytorch-unsupported-modules-and-classes"]], "torch.mps": [[1895, "module-torch.mps"]], "MPS Profiler": [[1895, "mps-profiler"]], "MPS Event": [[1895, "mps-event"]], "TorchScript": [[1881, "torchscript"]], "Creating TorchScript Code": [[1881, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1881, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1881, "torchscript-language"]], "Built-in Functions and Modules": [[1881, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1881, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1881, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1881, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1881, "disable-jit-for-debugging"]], "Inspecting Code": [[1881, "inspecting-code"]], "Interpreting Graphs": [[1881, "interpreting-graphs"]], "Tracer": [[1881, "tracer"]], "Tracing Edge Cases": [[1881, "tracing-edge-cases"]], "Automatic Trace Checking": [[1881, "automatic-trace-checking"]], "Tracer Warnings": [[1881, "tracer-warnings"]], "Frequently Asked Questions": [[1881, "frequently-asked-questions"], [7, "frequently-asked-questions"], [1911, "frequently-asked-questions"], [1959, "frequently-asked-questions"], [1925, "frequently-asked-questions"], [1931, "frequently-asked-questions"]], "Known Issues": [[1881, "known-issues"]], "Appendix": [[1881, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1881, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1881, "modules"], [1915, "modules"]], "Attributes": [[1881, "attributes"]], "Constants": [[1881, "constants"]], "Fusion Backends": [[1881, "fusion-backends"]], "References": [[1881, "references"], [47, "references"]], "Autograd mechanics": [[1904, "autograd-mechanics"]], "How autograd encodes the history": [[1904, "how-autograd-encodes-the-history"]], "Saved tensors": [[1904, "saved-tensors"]], "Gradients for non-differentiable functions": [[1904, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[1904, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [1948, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[1904, "setting-requires-grad"]], "Grad Modes": [[1904, "grad-modes"]], "Default Mode (Grad Mode)": [[1904, "default-mode-grad-mode"]], "No-grad Mode": [[1904, "no-grad-mode"]], "Inference Mode": [[1904, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1904, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1904, "in-place-operations-with-autograd"]], "In-place correctness checks": [[1904, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[1904, "multithreaded-autograd"]], "Concurrency on CPU": [[1904, "concurrency-on-cpu"]], "Non-determinism": [[1904, "non-determinism"]], "Graph retaining": [[1904, "graph-retaining"]], "Thread Safety on Autograd Node": [[1904, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1904, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1904, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1904, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1904, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1904, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1904, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1904, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1904, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1904, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1904, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1904, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1904, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1904, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1904, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1904, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1904, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "Multiprocessing package - torch.multiprocessing": [[1896, "module-torch.multiprocessing"]], "Strategy management": [[1896, "strategy-management"]], "Sharing CUDA tensors": [[1896, "sharing-cuda-tensors"]], "Sharing strategies": [[1896, "sharing-strategies"]], "File descriptor - file_descriptor": [[1896, "file-descriptor-file-descriptor"]], "File system - file_system": [[1896, "file-system-file-system"]], "Spawning subprocesses": [[1896, "spawning-subprocesses"]], "torch.zeros": [[1877, "torch-zeros"]], "torch.vstack": [[1874, "torch-vstack"]], "Terminology": [[1884, "terminology"]], "Type System": [[1884, "id1"]], "TorchScript Types": [[1884, "torchscript-types"]], "Meta Types": [[1884, "meta-types"]], "Any Type": [[1884, "any-type"]], "Operators Supported for Any Type": [[1884, "operators-supported-for-any-type"]], "Design Notes": [[1884, "design-notes"], [1936, "design-notes"]], "Primitive Types": [[1884, "primitive-types"]], "Structural Types": [[1884, "structural-types"]], "Nominal Types": [[1884, "nominal-types"]], "Built-in Class": [[1884, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1884, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1884, "custom-class"]], "Enum Type": [[1884, "enum-type"]], "TorchScript Module Class": [[1884, "torchscript-module-class"]], "Module Instance Class": [[1884, "module-instance-class"]], "Type Annotation": [[1884, "type-annotation"]], "When to Annotate Types": [[1884, "when-to-annotate-types"]], "Annotate Function Signature": [[1884, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1884, "annotate-variables-and-data-attributes"]], "Local Variables": [[1884, "local-variables"]], "Instance Data Attributes": [[1884, "instance-data-attributes"]], "Type Annotation APIs": [[1884, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1884, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1884, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1884, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[1884, "arithmetic-conversions"]], "Atoms": [[1884, "atoms"]], "Identifiers": [[1884, "identifiers"]], "Parenthesized Forms": [[1884, "parenthesized-forms"]], "List and Dictionary Displays": [[1884, "list-and-dictionary-displays"]], "Primaries": [[1884, "primaries"]], "Attribute References": [[1884, "attribute-references"]], "Subscriptions": [[1884, "subscriptions"]], "Slicings": [[1884, "slicings"]], "Calls": [[1884, "calls"]], "Power Operator": [[1884, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1884, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1884, "binary-arithmetic-operations"]], "Shifting Operations": [[1884, "shifting-operations"]], "Binary Bitwise Operations": [[1884, "binary-bitwise-operations"]], "Comparisons": [[1884, "comparisons"], [1954, "comparisons"]], "Value Comparisons": [[1884, "value-comparisons"]], "Membership Test Operations": [[1884, "membership-test-operations"]], "Identity Comparisons": [[1884, "identity-comparisons"]], "Boolean Operations": [[1884, "boolean-operations"]], "Conditional Expressions": [[1884, "conditional-expressions"]], "Expression Lists": [[1884, "expression-lists"]], "Simple Statements": [[1884, "simple-statements"]], "Expression Statements": [[1884, "expression-statements"]], "Assignment Statements": [[1884, "assignment-statements"]], "Augmented Assignment Statements": [[1884, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1884, "annotated-assignment-statements"]], "The raise Statement": [[1884, "the-raise-statement"]], "The assert Statement": [[1884, "the-assert-statement"]], "The return Statement": [[1884, "the-return-statement"]], "The del Statement": [[1884, "the-del-statement"]], "The pass Statement": [[1884, "the-pass-statement"]], "The print Statement": [[1884, "the-print-statement"]], "The break Statement": [[1884, "the-break-statement"]], "The continue Statement:": [[1884, "the-continue-statement"]], "Compound Statements": [[1884, "compound-statements"]], "The if Statement": [[1884, "the-if-statement"]], "Basic if/else Statement": [[1884, "basic-if-else-statement"]], "Ternary if/else Statement": [[1884, "ternary-if-else-statement"]], "The while Statement": [[1884, "the-while-statement"]], "The for-in Statement": [[1884, "the-for-in-statement"]], "The with Statement": [[1884, "the-with-statement"]], "The tuple Statement": [[1884, "the-tuple-statement"]], "The getattr Statement": [[1884, "the-getattr-statement"]], "The hasattr Statement": [[1884, "the-hasattr-statement"]], "The zip Statement": [[1884, "the-zip-statement"]], "The enumerate Statement": [[1884, "the-enumerate-statement"]], "Python Values": [[1884, "python-values"]], "Resolution Rules": [[1884, "resolution-rules"]], "Python Built-in Functions Support": [[1884, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1884, "id5"]], "Python Built-in Values Support": [[1884, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1884, "id6"]], "torch.* APIs": [[1884, "torch-apis"]], "Remote Procedure Calls": [[1884, "remote-procedure-calls"]], "Asynchronous Execution": [[1884, "asynchronous-execution"]], "Type Annotations": [[1884, "type-annotations"]], "Meta Programming": [[1884, "meta-programming"]], "Type Refinement": [[1884, "type-refinement"]], "torch.utils.model_zoo": [[1893, "torch-utils-model-zoo"]], "torch.inverse": [[1178, "torch-inverse"]], "torch.initial_seed": [[1176, "torch-initial-seed"]], "torch.jit.trace": [[1216, "torch-jit-trace"]], "torch.kron": [[1221, "torch-kron"]], "torch.jit.annotate": [[1201, "torch-jit-annotate"]], "torch.jit.onednn_fusion_enabled": [[1209, "torch-jit-onednn-fusion-enabled"]], "torch.is_conj": [[1180, "torch-is-conj"]], "torch.jit.optimize_for_inference": [[1210, "torch-jit-optimize-for-inference"]], "torch.isclose": [[1189, "torch-isclose"]], "torch.is_storage": [[1186, "torch-is-storage"]], "torch.is_inference_mode_enabled": [[1184, "torch-is-inference-mode-enabled"]], "torch.jit.save": [[1211, "torch-jit-save"]], "torch.jit.wait": [[1219, "torch-jit-wait"]], "torch.jit.script_if_tracing": [[1213, "torch-jit-script-if-tracing"]], "torch.inner": [[1177, "torch-inner"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1181, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.isfinite": [[1190, "torch-isfinite"]], "strict_fusion": [[1215, "strict-fusion"]], "torch.jit.interface": [[1206, "torch-jit-interface"]], "torch.ldexp": [[1224, "torch-ldexp"]], "torch.is_tensor": [[1187, "torch-is-tensor"]], "torch.jit.script": [[1212, "torch-jit-script"]], "torch.isin": [[1191, "torch-isin"]], "torch.is_floating_point": [[1182, "torch-is-floating-point"]], "torch.jit.unused": [[1218, "torch-jit-unused"]], "ScriptModule": [[1200, "scriptmodule"]], "torch.isinf": [[1192, "torch-isinf"]], "torch.isneginf": [[1194, "torch-isneginf"]], "torch.jit.isinstance": [[1207, "torch-jit-isinstance"]], "torch.istft": [[1197, "torch-istft"]], "torch.isnan": [[1193, "torch-isnan"]], "torch.jit.freeze": [[1204, "torch-jit-freeze"]], "torch.jit.trace_module": [[1217, "torch-jit-trace-module"]], "torch.kaiser_window": [[1220, "torch-kaiser-window"]], "torch.is_warn_always_enabled": [[1188, "torch-is-warn-always-enabled"]], "torch.isposinf": [[1195, "torch-isposinf"]], "torch.isreal": [[1196, "torch-isreal"]], "Attribute": [[1198, "attribute"]], "torch.jit.ignore": [[1205, "torch-jit-ignore"]], "torch.is_nonzero": [[1185, "torch-is-nonzero"]], "ScriptFunction": [[1199, "scriptfunction"]], "torch.jit.enable_onednn_fusion": [[1202, "torch-jit-enable-onednn-fusion"]], "torch.is_grad_enabled": [[1183, "torch-is-grad-enabled"]], "torch.jit.fork": [[1203, "torch-jit-fork"]], "torch.jit.set_fusion_strategy": [[1214, "torch-jit-set-fusion-strategy"]], "torch.jit.load": [[1208, "torch-jit-load"]], "torch.is_complex": [[1179, "torch-is-complex"]], "torch.kthvalue": [[1222, "torch-kthvalue"]], "torch.lcm": [[1223, "torch-lcm"]], "torch.gradient": [[1153, "torch-gradient"]], "torch.get_default_dtype": [[1147, "torch-get-default-dtype"]], "torch.get_num_interop_threads": [[1150, "torch-get-num-interop-threads"]], "torch.full": [[1127, "torch-full"]], "torch.heaviside": [[1159, "torch-heaviside"]], "torch.func.functional_call": [[1129, "torch-func-functional-call"]], "torch.func.grad": [[1131, "torch-func-grad"]], "torch.func.jvp": [[1136, "torch-func-jvp"]], "torch.hann_window": [[1158, "torch-hann-window"]], "torch.ger": [[1146, "torch-ger"]], "torch.histogram": [[1161, "torch-histogram"]], "torch.index_add": [[1171, "torch-index-add"]], "torch.gather": [[1142, "torch-gather"]], "torch.func.linearize": [[1137, "torch-func-linearize"]], "torch.gt": [[1156, "torch-gt"]], "torch.i0": [[1167, "torch-i0"]], "torch.full_like": [[1128, "torch-full-like"]], "torch.get_float32_matmul_precision": [[1149, "torch-get-float32-matmul-precision"]], "torch.hspmm": [[1164, "torch-hspmm"]], "torch.histc": [[1160, "torch-histc"]], "torch.get_deterministic_debug_mode": [[1148, "torch-get-deterministic-debug-mode"]], "torch.index_select": [[1174, "torch-index-select"]], "torch.hsplit": [[1163, "torch-hsplit"]], "torch.func.vjp": [[1140, "torch-func-vjp"]], "torch.func.grad_and_value": [[1132, "torch-func-grad-and-value"]], "torch.func.jacfwd": [[1134, "torch-func-jacfwd"]], "torch.get_num_threads": [[1151, "torch-get-num-threads"]], "torch.func.jacrev": [[1135, "torch-func-jacrev"]], "torch.func.hessian": [[1133, "torch-func-hessian"]], "torch.get_rng_state": [[1152, "torch-get-rng-state"]], "torch.func.vmap": [[1141, "torch-func-vmap"]], "torch.index_reduce": [[1173, "torch-index-reduce"]], "inference_mode": [[1175, "inference-mode"]], "torch.func.replace_all_batch_norm_modules_": [[1138, "torch-func-replace-all-batch-norm-modules"]], "torch.greater_equal": [[1155, "torch-greater-equal"]], "torch.geqrf": [[1145, "torch-geqrf"]], "torch.hstack": [[1165, "torch-hstack"]], "torch.gcd": [[1143, "torch-gcd"]], "torch.igammac": [[1169, "torch-igammac"]], "torch.imag": [[1170, "torch-imag"]], "torch.ge": [[1144, "torch-ge"]], "torch.func.stack_module_state": [[1139, "torch-func-stack-module-state"]], "torch.hamming_window": [[1157, "torch-hamming-window"]], "torch.hypot": [[1166, "torch-hypot"]], "torch.igamma": [[1168, "torch-igamma"]], "torch.func.functionalize": [[1130, "torch-func-functionalize"]], "torch.histogramdd": [[1162, "torch-histogramdd"]], "torch.index_copy": [[1172, "torch-index-copy"]], "torch.greater": [[1154, "torch-greater"]], "torch.fft.rfft": [[1106, "torch-fft-rfft"]], "torch.from_file": [[1124, "torch-from-file"]], "torch.fake_quantize_per_channel_affine": [[1086, "torch-fake-quantize-per-channel-affine"]], "torch.erfinv": [[1081, "torch-erfinv"]], "torch.from_dlpack": [[1123, "torch-from-dlpack"]], "torch.fft.rfft2": [[1107, "torch-fft-rfft2"]], "torch.fft.ifftshift": [[1099, "torch-fft-ifftshift"]], "torch.fft.fftshift": [[1092, "torch-fft-fftshift"]], "torch.exp2": [[1083, "torch-exp2"]], "torch.expm1": [[1084, "torch-expm1"]], "torch.fft.ihfftn": [[1102, "torch-fft-ihfftn"]], "torch.fft.fft": [[1088, "torch-fft-fft"]], "torch.equal": [[1078, "torch-equal"]], "torch.fliplr": [[1113, "torch-fliplr"]], "torch.erfc": [[1080, "torch-erfc"]], "torch.fake_quantize_per_tensor_affine": [[1087, "torch-fake-quantize-per-tensor-affine"]], "torch.fft.irfft2": [[1104, "torch-fft-irfft2"]], "torch.flipud": [[1114, "torch-flipud"]], "torch.exp": [[1082, "torch-exp"]], "torch.frexp": [[1122, "torch-frexp"]], "torch.floor": [[1116, "torch-floor"]], "torch.fft.rfftfreq": [[1108, "torch-fft-rfftfreq"]], "torch.fft.fft2": [[1089, "torch-fft-fft2"]], "torch.fft.ifft": [[1096, "torch-fft-ifft"]], "torch.fft.ifftn": [[1098, "torch-fft-ifftn"]], "torch.fft.irfftn": [[1105, "torch-fft-irfftn"]], "torch.fmod": [[1120, "torch-fmod"]], "torch.fft.fftfreq": [[1090, "torch-fft-fftfreq"]], "torch.fmin": [[1119, "torch-fmin"]], "torch.fft.hfft": [[1093, "torch-fft-hfft"]], "torch.eye": [[1085, "torch-eye"]], "torch.fft.irfft": [[1103, "torch-fft-irfft"]], "torch.fft.ihfft2": [[1101, "torch-fft-ihfft2"]], "torch.floor_divide": [[1117, "torch-floor-divide"]], "torch.frombuffer": [[1126, "torch-frombuffer"]], "torch.flatten": [[1111, "torch-flatten"]], "torch.fix": [[1110, "torch-fix"]], "torch.float_power": [[1115, "torch-float-power"]], "torch.fft.ifft2": [[1097, "torch-fft-ifft2"]], "torch.fft.fftn": [[1091, "torch-fft-fftn"]], "torch.fft.rfftn": [[1109, "torch-fft-rfftn"]], "torch.fft.hfft2": [[1094, "torch-fft-hfft2"]], "torch.fmax": [[1118, "torch-fmax"]], "torch.frac": [[1121, "torch-frac"]], "torch.from_numpy": [[1125, "torch-from-numpy"]], "torch.flip": [[1112, "torch-flip"]], "torch.erf": [[1079, "torch-erf"]], "torch.fft.ihfft": [[1100, "torch-fft-ihfft"]], "torch.fft.hfftn": [[1095, "torch-fft-hfftn"]], "torch.cuda.power_draw": [[1035, "torch-cuda-power-draw"]], "torch.cuda.memory_usage": [[1031, "torch-cuda-memory-usage"]], "torch.cuda.set_per_process_memory_fraction": [[1042, "torch-cuda-set-per-process-memory-fraction"]], "torch.cuda.memory_stats": [[1029, "torch-cuda-memory-stats"]], "torch.cuda.seed": [[1039, "torch-cuda-seed"]], "torch.dot": [[1069, "torch-dot"]], "enable_grad": [[1076, "enable-grad"]], "torch.cuda.utilization": [[1050, "torch-cuda-utilization"]], "torch.cuda.memory_summary": [[1030, "torch-cuda-memory-summary"]], "torch.cuda.synchronize": [[1048, "torch-cuda-synchronize"]], "torch.diagonal_scatter": [[1063, "torch-diagonal-scatter"]], "torch.cuda.temperature": [[1049, "torch-cuda-temperature"]], "torch.dstack": [[1071, "torch-dstack"]], "torch.cuda.set_rng_state": [[1043, "torch-cuda-set-rng-state"]], "torch.cuda.nvtx.range_pop": [[1033, "torch-cuda-nvtx-range-pop"]], "torch.dequantize": [[1057, "torch-dequantize"]], "torch.divide": [[1068, "torch-divide"]], "torch.cuda.reset_max_memory_cached": [[1037, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.nvtx.mark": [[1032, "torch-cuda-nvtx-mark"]], "torch.dist": [[1066, "torch-dist"]], "torch.cuda.nvtx.range_push": [[1034, "torch-cuda-nvtx-range-push"]], "torch.diagonal": [[1062, "torch-diagonal"]], "torch.empty_like": [[1074, "torch-empty-like"]], "torch.cuda.set_sync_debug_mode": [[1046, "torch-cuda-set-sync-debug-mode"]], "torch.diag_embed": [[1060, "torch-diag-embed"]], "torch.cumsum": [[1054, "torch-cumsum"]], "torch.cumprod": [[1053, "torch-cumprod"]], "torch.einsum": [[1072, "torch-einsum"]], "torch.cuda.set_stream": [[1045, "torch-cuda-set-stream"]], "torch.digamma": [[1065, "torch-digamma"]], "torch.cumulative_trapezoid": [[1055, "torch-cumulative-trapezoid"]], "torch.cuda.set_rng_state_all": [[1044, "torch-cuda-set-rng-state-all"]], "torch.dsplit": [[1070, "torch-dsplit"]], "torch.eq": [[1077, "torch-eq"]], "torch.cummax": [[1051, "torch-cummax"]], "torch.cummin": [[1052, "torch-cummin"]], "torch.det": [[1058, "torch-det"]], "torch.cuda.seed_all": [[1040, "torch-cuda-seed-all"]], "torch.cuda.reset_max_memory_allocated": [[1036, "torch-cuda-reset-max-memory-allocated"]], "torch.div": [[1067, "torch-div"]], "torch.deg2rad": [[1056, "torch-deg2rad"]], "torch.cuda.reset_peak_memory_stats": [[1038, "torch-cuda-reset-peak-memory-stats"]], "torch.diagflat": [[1061, "torch-diagflat"]], "torch.empty": [[1073, "torch-empty"]], "torch.cuda.stream": [[1047, "torch-cuda-stream"]], "torch.empty_strided": [[1075, "torch-empty-strided"]], "torch.diff": [[1064, "torch-diff"]], "torch.cuda.set_device": [[1041, "torch-cuda-set-device"]], "torch.diag": [[1059, "torch-diag"]], "torch.cuda.can_device_access_peer": [[982, "torch-cuda-can-device-access-peer"]], "torch.cuda.empty_cache": [[997, "torch-cuda-empty-cache"]], "torch.cuda.comm.broadcast_coalesced": [[986, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.default_stream": [[993, "torch-cuda-default-stream"]], "torch.cuda.caching_allocator_alloc": [[980, "torch-cuda-caching-allocator-alloc"]], "torch.cuda.get_rng_state_all": [[1005, "torch-cuda-get-rng-state-all"]], "torch.cuda.get_gencode_flags": [[1003, "torch-cuda-get-gencode-flags"]], "torch.cuda.comm.broadcast": [[985, "torch-cuda-comm-broadcast"]], "torch.cuda.current_blas_handle": [[990, "torch-cuda-current-blas-handle"]], "torch.cuda.memory_cached": [[1026, "torch-cuda-memory-cached"]], "device_of": [[996, "device-of"]], "torch.cuda.ipc_collect": [[1011, "torch-cuda-ipc-collect"]], "torch.cuda.current_device": [[991, "torch-cuda-current-device"]], "torch.cuda.memory_reserved": [[1027, "torch-cuda-memory-reserved"]], "torch.cuda.initial_seed": [[1010, "torch-cuda-initial-seed"]], "torch.cuda.manual_seed": [[1019, "torch-cuda-manual-seed"]], "torch.cuda.comm.scatter": [[989, "torch-cuda-comm-scatter"]], "torch.cuda.jiterator._create_jit_fn": [[1015, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1016, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.manual_seed_all": [[1020, "torch-cuda-manual-seed-all"]], "torch.cuda.caching_allocator_delete": [[981, "torch-cuda-caching-allocator-delete"]], "device": [[994, "device"]], "torch.cuda.clock_rate": [[984, "torch-cuda-clock-rate"]], "torch.cuda.get_arch_list": [[999, "torch-cuda-get-arch-list"]], "torch.cuda.max_memory_reserved": [[1023, "torch-cuda-max-memory-reserved"]], "torch.cuda.memory_allocated": [[1025, "torch-cuda-memory-allocated"]], "graph": [[1007, "graph"]], "torch.cuda.max_memory_cached": [[1022, "torch-cuda-max-memory-cached"]], "torch.cuda.get_device_capability": [[1000, "torch-cuda-get-device-capability"]], "torch.cuda.get_device_properties": [[1002, "torch-cuda-get-device-properties"]], "torch.cuda.get_rng_state": [[1004, "torch-cuda-get-rng-state"]], "torch.cuda.get_allocator_backend": [[998, "torch-cuda-get-allocator-backend"]], "torch.cuda.comm.gather": [[987, "torch-cuda-comm-gather"]], "torch.cuda.comm.reduce_add": [[988, "torch-cuda-comm-reduce-add"]], "torch.cuda.is_available": [[1012, "torch-cuda-is-available"]], "torch.cuda.current_stream": [[992, "torch-cuda-current-stream"]], "torch.cuda.graph_pool_handle": [[1008, "torch-cuda-graph-pool-handle"]], "torch.cuda.list_gpu_processes": [[1017, "torch-cuda-list-gpu-processes"]], "torch.cuda.is_current_stream_capturing": [[1013, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.get_sync_debug_mode": [[1006, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.get_device_name": [[1001, "torch-cuda-get-device-name"]], "torch.cuda.max_memory_allocated": [[1021, "torch-cuda-max-memory-allocated"]], "torch.cuda.mem_get_info": [[1024, "torch-cuda-mem-get-info"]], "torch.cuda.change_current_allocator": [[983, "torch-cuda-change-current-allocator"]], "torch.cuda.device_count": [[995, "torch-cuda-device-count"]], "torch.cuda.is_initialized": [[1014, "torch-cuda-is-initialized"]], "torch.cuda.make_graphed_callables": [[1018, "torch-cuda-make-graphed-callables"]], "torch.cuda.memory_snapshot": [[1028, "torch-cuda-memory-snapshot"]], "torch.cuda.init": [[1009, "torch-cuda-init"]], "torch.cos": [[959, "torch-cos"]], "torch.combinations": [[941, "torch-combinations"]], "torch.count_nonzero": [[961, "torch-count-nonzero"]], "torch.cross": [[972, "torch-cross"]], "torch.cuda.OutOfMemoryError": [[977, "torch-cuda-outofmemoryerror"]], "ExternalStream": [[976, "externalstream"]], "torch.compiler.cudagraph_mark_step_begin": [[947, "torch-compiler-cudagraph-mark-step-begin"]], "torch.cpu.current_device": [[965, "torch-cpu-current-device"]], "CUDAPluggableAllocator": [[974, "cudapluggableallocator"]], "torch.concat": [[952, "torch-concat"]], "torch.compile": [[942, "torch-compile"]], "Stream": [[978, "stream"], [963, "stream"]], "torch.clip": [[938, "torch-clip"]], "torch.compiler.compile": [[946, "torch-compiler-compile"]], "torch.cholesky": [[933, "torch-cholesky"]], "torch.cpu.is_available": [[968, "torch-cpu-is-available"]], "CUDAGraph": [[973, "cudagraph"]], "StreamContext": [[979, "streamcontext"], [964, "streamcontext"]], "torch.compiled_with_cxx11_abi": [[943, "torch-compiled-with-cxx11-abi"]], "torch.compiler.assume_constant_result": [[945, "torch-compiler-assume-constant-result"]], "torch.copysign": [[957, "torch-copysign"]], "torch.cpu.current_stream": [[966, "torch-cpu-current-stream"]], "torch.clamp": [[937, "torch-clamp"]], "torch.cpu.stream": [[970, "torch-cpu-stream"]], "torch.compiler.reset": [[950, "torch-compiler-reset"]], "torch.conj_physical": [[956, "torch-conj-physical"]], "torch.ceil": [[931, "torch-ceil"]], "torch.conj": [[955, "torch-conj"]], "torch.complex": [[951, "torch-complex"]], "torch.cpu.set_device": [[969, "torch-cpu-set-device"]], "torch.corrcoef": [[958, "torch-corrcoef"]], "torch.chunk": [[936, "torch-chunk"]], "torch.concatenate": [[953, "torch-concatenate"]], "torch.cholesky_inverse": [[934, "torch-cholesky-inverse"]], "torch.clone": [[939, "torch-clone"]], "torch.column_stack": [[940, "torch-column-stack"]], "torch.cpu.device_count": [[967, "torch-cpu-device-count"]], "torch.compiler.list_backends": [[949, "torch-compiler-list-backends"]], "torch.cpu.synchronize": [[971, "torch-cpu-synchronize"]], "torch.cov": [[962, "torch-cov"]], "torch.cosh": [[960, "torch-cosh"]], "torch.cholesky_solve": [[935, "torch-cholesky-solve"]], "torch.chain_matmul": [[932, "torch-chain-matmul"]], "torch.cat": [[929, "torch-cat"]], "torch.autograd.profiler.profile.total_average": [[909, "torch-autograd-profiler-profile-total-average"]], "torch.autograd.functional.jacobian": [[893, "torch-autograd-functional-jacobian"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[889, "torch-autograd-function-functionctx-save-for-backward"]], "torch.autograd.functional.vhp": [[895, "torch-autograd-functional-vhp"]], "torch.autograd.graph.Node.metadata": [[900, "torch-autograd-graph-node-metadata"]], "torch.bitwise_and": [[914, "torch-bitwise-and"]], "torch.bitwise_xor": [[919, "torch-bitwise-xor"]], "torch.bitwise_left_shift": [[915, "torch-bitwise-left-shift"]], "torch.bucketize": [[926, "torch-bucketize"]], "torch.bincount": [[913, "torch-bincount"]], "torch.autograd.grad": [[897, "torch-autograd-grad"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[908, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[887, "torch-autograd-function-functionctx-mark-dirty"]], "torch.bitwise_not": [[916, "torch-bitwise-not"]], "torch.broadcast_to": [[925, "torch-broadcast-to"]], "torch.bernoulli": [[912, "torch-bernoulli"]], "torch.broadcast_tensors": [[924, "torch-broadcast-tensors"]], "torch.block_diag": [[921, "torch-block-diag"]], "torch.autograd.Function.vmap": [[882, "torch-autograd-function-vmap"]], "torch.blackman_window": [[920, "torch-blackman-window"]], "torch.broadcast_shapes": [[923, "torch-broadcast-shapes"]], "torch.autograd.functional.jvp": [[894, "torch-autograd-functional-jvp"]], "torch.autograd.graph.Node.register_prehook": [[904, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.gradcheck.gradcheck": [[898, "torch-autograd-gradcheck-gradcheck"]], "torch.autograd.functional.hessian": [[891, "torch-autograd-functional-hessian"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[890, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.autograd.functional.hvp": [[892, "torch-autograd-functional-hvp"]], "torch.bitwise_or": [[917, "torch-bitwise-or"]], "torch.cdist": [[930, "torch-cdist"]], "torch.bartlett_window": [[911, "torch-bartlett-window"]], "torch.autograd.profiler.load_nvprof": [[905, "torch-autograd-profiler-load-nvprof"]], "dual_level": [[884, "dual-level"]], "torch.autograd.graph.Node.next_functions": [[902, "torch-autograd-graph-node-next-functions"]], "torch.autograd.forward_ad.unpack_dual": [[886, "torch-autograd-forward-ad-unpack-dual"]], "torch.autograd.graph.Node.name": [[901, "torch-autograd-graph-node-name"]], "torch.autograd.graph.Node.register_hook": [[903, "torch-autograd-graph-node-register-hook"]], "torch.autograd.profiler.profile.export_chrome_trace": [[906, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.autograd.gradcheck.gradgradcheck": [[899, "torch-autograd-gradcheck-gradgradcheck"]], "torch.baddbmm": [[910, "torch-baddbmm"]], "torch.autograd.backward": [[883, "torch-autograd-backward"]], "torch.bitwise_right_shift": [[918, "torch-bitwise-right-shift"]], "torch.autograd.forward_ad.make_dual": [[885, "torch-autograd-forward-ad-make-dual"]], "torch.bmm": [[922, "torch-bmm"]], "torch.cartesian_prod": [[928, "torch-cartesian-prod"]], "torch.autograd.functional.vjp": [[896, "torch-autograd-functional-vjp"]], "torch.can_cast": [[927, "torch-can-cast"]], "torch.autograd.profiler.profile.key_averages": [[907, "torch-autograd-profiler-profile-key-averages"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[888, "torch-autograd-function-functionctx-mark-non-differentiable"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Serialization": [[11, "serialization"], [46, "serialization"], [1948, "serialization"]], "Autograd": [[11, "autograd"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "torch.utils.cpp_extension": [[14, "torch-utils-cpp-extension"]], "torchrun (Elastic Launch)": [[43, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[43, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Usage": [[43, "usage"], [18, "usage"], [28, null]], "Single-node multi-worker": [[43, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[43, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[43, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[43, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[43, "note-on-rendezvous-backend"]], "Definitions": [[43, "definitions"]], "Environment Variables": [[43, "environment-variables"]], "Deployment": [[43, "deployment"]], "Failure Modes": [[43, "failure-modes"]], "Membership Changes": [[43, "membership-changes"]], "Important Notices": [[43, "important-notices"]], "torch.cuda": [[17, "module-torch.cuda"]], "Random Number Generator": [[17, "random-number-generator"]], "Communication collectives": [[17, "communication-collectives"]], "Streams and events": [[17, "streams-and-events"], [16, "streams-and-events"]], "Graphs (beta)": [[17, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[17, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[17, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[17, "stream-sanitizer-prototype"]], "Rendezvous": [[42, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[42, "registry"]], "Handler": [[42, "handler"]], "Exceptions": [[42, "exceptions"]], "Implementations": [[42, "implementations"], [33, "implementations"]], "Dynamic Rendezvous": [[42, "dynamic-rendezvous"]], "C10d Backend": [[42, "c10d-backend"]], "Etcd Backend": [[42, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[42, "etcd-rendezvous-legacy"]], "Etcd Store": [[42, "etcd-store"]], "Etcd Server": [[42, "etcd-server"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "Control Flow - Cond": [[12, "control-flow-cond"]], "Examples": [[12, "examples"], [37, "examples"], [1955, "examples"]], "Invariants of torch.ops.higher_order.cond": [[12, "invariants-of-torch-ops-higher-order-cond"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[27, "distributed-checkpoint-torch-distributed-checkpoint"]], "Distributed Optimizers": [[29, "distributed-optimizers"]], "torch.utils.dlpack": [[32, "torch-utils-dlpack"]], "torch.fft": [[48, "torch-fft"]], "Fast Fourier Transforms": [[48, "fast-fourier-transforms"]], "Helper Functions": [[48, "helper-functions"]], "DDP Communication Hooks": [[22, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[22, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[22, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[22, "default-communication-hooks"]], "PowerSGD Communication Hook": [[22, "powersgd-communication-hook"]], "PowerSGD State": [[22, "powersgd-state"]], "PowerSGD Hooks": [[22, "powersgd-hooks"]], "Debugging Communication Hooks": [[22, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[22, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[22, "acknowledgements"], [1929, "acknowledgements"]], "torch.__config__": [[13, "module-torch.__config__"]], "torch.export": [[46, "torch-export"]], "Existing frameworks": [[46, "existing-frameworks"]], "Exporting a PyTorch Model": [[46, "exporting-a-pytorch-model"]], "An Example": [[46, "an-example"]], "Expressing Dynamism": [[46, "expressing-dynamism"]], "Specialization": [[46, "specialization"]], "Input shapes": [[46, "input-shapes"]], "Non-tensor inputs": [[46, "non-tensor-inputs"]], "Limitations of torch.export": [[46, "limitations-of-torch-export"]], "Data/Shape-Dependent Control Flow": [[46, "data-shape-dependent-control-flow"]], "Missing Meta Kernels for Operators": [[46, "missing-meta-kernels-for-operators"]], "Additional Links for Export Users": [[46, null]], "Deep Dive for PyTorch Developers": [[46, null], [1951, null]], "Customization": [[34, "customization"]], "Launcher": [[34, "launcher"]], "Rendezvous Handler": [[34, "rendezvous-handler"]], "Metric Handler": [[34, "metric-handler"]], "Events Handler": [[34, "events-handler"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "Metrics": [[39, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[39, "metric-handlers"]], "Methods": [[39, "methods"]], "torch.export IR Specification": [[47, "torch-export-ir-specification"]], "Assumptions": [[47, "assumptions"], [1938, "assumptions"]], "What is Export IR": [[47, "what-is-export-ir"]], "ExportedProgram": [[47, "exportedprogram"]], "Graph": [[47, "graph"]], "Node": [[47, "node"]], "call_function": [[47, "call-function"]], "Metadata": [[47, "metadata"]], "placeholder": [[47, "placeholder"]], "output": [[47, "output"]], "get_attr": [[47, "get-attr"]], "SymInt": [[47, "symint"]], "FakeTensor": [[47, "faketensor"]], "Pytree-able Types": [[47, "pytree-able-types"]], "Generic Join Context Manager": [[26, "generic-join-context-manager"]], "C++": [[15, "c"]], "TorchScript C++ API": [[15, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[15, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[15, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[15, "authoring-models-in-c"]], "Packaging for C++": [[15, "packaging-for-c"]], "Distributed communication package - torch.distributed": [[25, "distributed-communication-package-torch-distributed"]], "Backends": [[25, "backends"], [1936, "backends"]], "Backends that come with PyTorch": [[25, "backends-that-come-with-pytorch"]], "Which backend to use?": [[25, "which-backend-to-use"]], "Common environment variables": [[25, "common-environment-variables"]], "Choosing the network interface to use": [[25, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[25, "other-nccl-environment-variables"]], "Basics": [[25, "basics"], [1936, "basics"]], "Initialization": [[25, "initialization"]], "TCP initialization": [[25, "tcp-initialization"]], "Shared file-system initialization": [[25, "shared-file-system-initialization"]], "Environment variable initialization": [[25, "environment-variable-initialization"]], "Post-Initialization": [[25, "post-initialization"]], "Distributed Key-Value Store": [[25, "distributed-key-value-store"]], "Groups": [[25, "groups"]], "Point-to-point communication": [[25, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[25, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[25, "collective-functions"]], "Profiling Collective Communication": [[25, "profiling-collective-communication"]], "Multi-GPU collective functions": [[25, "multi-gpu-collective-functions"]], "Third-party backends": [[25, "third-party-backends"]], "Launch utility": [[25, "launch-utility"]], "Spawn utility": [[25, "spawn-utility"]], "Debugging torch.distributed applications": [[25, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[25, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[25, "torch-distributed-debug"]], "Logging": [[25, "logging"]], "Expiration Timers": [[44, "module-torch.distributed.elastic.timer"]], "Client Methods": [[44, "client-methods"]], "Server/Client Implementations": [[44, "server-client-implementations"]], "Writing a custom timer server/client": [[44, "writing-a-custom-timer-server-client"]], "Probability distributions - torch.distributions": [[31, "module-torch.distributions"]], "Score function": [[31, "score-function"]], "Pathwise derivative": [[31, "pathwise-derivative"]], "Distribution": [[31, "distribution"]], "ExponentialFamily": [[31, "exponentialfamily"]], "Bernoulli": [[31, "bernoulli"]], "Beta": [[31, "beta"]], "Binomial": [[31, "binomial"]], "Categorical": [[31, "categorical"]], "Cauchy": [[31, "cauchy"]], "Chi2": [[31, "chi2"]], "ContinuousBernoulli": [[31, "continuousbernoulli"]], "Dirichlet": [[31, "dirichlet"]], "Exponential": [[31, "exponential"]], "FisherSnedecor": [[31, "fishersnedecor"]], "Gamma": [[31, "gamma"]], "Geometric": [[31, "geometric"]], "Gumbel": [[31, "gumbel"]], "HalfCauchy": [[31, "halfcauchy"]], "HalfNormal": [[31, "halfnormal"]], "Independent": [[31, "independent"]], "Kumaraswamy": [[31, "kumaraswamy"]], "LKJCholesky": [[31, "lkjcholesky"]], "Laplace": [[31, "laplace"]], "LogNormal": [[31, "lognormal"]], "LowRankMultivariateNormal": [[31, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[31, "mixturesamefamily"]], "Multinomial": [[31, "multinomial"]], "MultivariateNormal": [[31, "multivariatenormal"]], "NegativeBinomial": [[31, "negativebinomial"]], "Normal": [[31, "normal"]], "OneHotCategorical": [[31, "onehotcategorical"]], "Pareto": [[31, "pareto"]], "Poisson": [[31, "poisson"]], "RelaxedBernoulli": [[31, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[31, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[31, "relaxedonehotcategorical"]], "StudentT": [[31, "studentt"]], "TransformedDistribution": [[31, "transformeddistribution"]], "Uniform": [[31, "uniform"]], "VonMises": [[31, "vonmises"]], "Weibull": [[31, "weibull"]], "Wishart": [[31, "wishart"]], "KL Divergence": [[31, "module-torch.distributions.kl"]], "Transforms": [[31, "module-torch.distributions.transforms"]], "Constraint Registry": [[31, "module-torch.distributions.constraint_registry"]], "Quickstart": [[41, "quickstart"]], "Error Propagation": [[35, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[35, "methods-and-classes"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "Events": [[36, "module-torch.distributed.elastic.events"]], "API Methods": [[36, "api-methods"]], "Event Objects": [[36, "event-objects"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [1929, "tutorials"], [1928, "tutorials"], [1936, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "CUDA Stream Sanitizer": [[18, "cuda-stream-sanitizer"]], "torch.utils.deterministic": [[24, "module-torch.utils.deterministic"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Module Maintainers": [[9, "module-maintainers"]], "Core Maintainers": [[9, "core-maintainers"], [10, "core-maintainers"]], "Lead Core Maintainer (BDFL)": [[9, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "torch.utils.data": [[21, "module-torch.utils.data"]], "Dataset Types": [[21, "dataset-types"]], "Map-style datasets": [[21, "map-style-datasets"]], "Iterable-style datasets": [[21, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[21, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[21, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[21, "automatic-batching-default"]], "Disable automatic batching": [[21, "disable-automatic-batching"]], "Working with collate_fn": [[21, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[21, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[21, "single-process-data-loading-default"]], "Multi-process data loading": [[21, "multi-process-data-loading"]], "Platform-specific behaviors": [[21, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[21, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[21, "memory-pinning"]], "Elastic Agent": [[33, "module-torch.distributed.elastic.agent"]], "Server": [[33, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[33, "concepts"]], "Extending the Agent": [[33, "extending-the-agent"]], "Watchdog in the Agent": [[33, "watchdog-in-the-agent"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "AArch64 CPU": [[10, "aarch64-cpu"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "Multiprocessing": [[40, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[40, "starting-multiple-workers"]], "Process Context": [[40, "process-context"]], "Torch Distributed Elastic": [[28, "torch-distributed-elastic"]], "Get Started": [[28, "get-started"]], "Documentation": [[28, "documentation"]], "API": [[28, null]], "Advanced": [[28, null]], "Plugins": [[28, null]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "Train script": [[45, "train-script"]], "torch::deploy has been moved to pytorch/multipy": [[23, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[30, "tensor-parallelism-torch-distributed-tensor-parallel"]], "TorchElastic Kubernetes": [[38, "torchelastic-kubernetes"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Numerical gradient checking": [[1, "module-torch.autograd.gradcheck"]], "Profiler": [[1, "profiler"]], "Anomaly detection": [[1, "anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "torch.cpu": [[16, "module-torch.cpu"]], "prepare_fx": [[851, "prepare-fx"]], "torch.asinh": [[872, "torch-asinh"]], "default_debug_qconfig": [[833, "default-debug-qconfig"]], "torch.arccos": [[856, "torch-arccos"]], "torch.are_deterministic_algorithms_enabled": [[863, "torch-are-deterministic-algorithms-enabled"]], "prepare_qat_fx": [[852, "prepare-qat-fx"]], "torch.argmin": [[865, "torch-argmin"]], "default_qat_qconfig": [[836, "default-qat-qconfig"]], "torch.arctanh": [[862, "torch-arctanh"]], "default_dynamic_qconfig": [[834, "default-dynamic-qconfig"]], "quantize_dynamic": [[848, "quantize-dynamic"]], "torch.autograd.Function.backward": [[879, "torch-autograd-function-backward"]], "quantize": [[847, "quantize"]], "float_qparams_weight_only_qconfig": [[842, "float-qparams-weight-only-qconfig"]], "quantize_qat": [[853, "quantize-qat"]], "torch.arctan2": [[861, "torch-arctan2"]], "torch.atleast_1d": [[876, "torch-atleast-1d"]], "torch.atan": [[873, "torch-atan"]], "torch.autograd.Function.jvp": [[881, "torch-autograd-function-jvp"]], "torch.arcsinh": [[859, "torch-arcsinh"]], "torch.atanh": [[875, "torch-atanh"]], "torch.atleast_2d": [[877, "torch-atleast-2d"]], "convert_fx": [[849, "convert-fx"]], "fuse_fx": [[850, "fuse-fx"]], "default_per_channel_qconfig": [[835, "default-per-channel-qconfig"]], "torch.arccosh": [[857, "torch-arccosh"]], "torch.arctan": [[860, "torch-arctan"]], "torch.atan2": [[874, "torch-atan2"]], "torch.asarray": [[870, "torch-asarray"]], "float16_static_qconfig": [[841, "float16-static-qconfig"]], "default_weight_only_qconfig": [[839, "default-weight-only-qconfig"]], "torch.asin": [[871, "torch-asin"]], "float16_dynamic_qconfig": [[840, "float16-dynamic-qconfig"]], "torch.arange": [[855, "torch-arange"]], "torch.as_tensor": [[869, "torch-as-tensor"]], "default_qconfig": [[838, "default-qconfig"]], "QConfigMapping": [[844, "qconfigmapping"]], "swap_module": [[854, "swap-module"]], "torch.atleast_3d": [[878, "torch-atleast-3d"]], "torch.argwhere": [[867, "torch-argwhere"]], "torch.argsort": [[866, "torch-argsort"]], "torch.arcsin": [[858, "torch-arcsin"]], "get_default_qconfig_mapping": [[846, "get-default-qconfig-mapping"]], "torch.autograd.Function.forward": [[880, "torch-autograd-function-forward"]], "get_default_qat_qconfig_mapping": [[845, "get-default-qat-qconfig-mapping"]], "torch.as_strided": [[868, "torch-as-strided"]], "per_channel_dynamic_qconfig": [[843, "per-channel-dynamic-qconfig"]], "torch.argmax": [[864, "torch-argmax"]], "default_qat_qconfig_v2": [[837, "default-qat-qconfig-v2"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1911, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1911, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1911, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1911, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1911, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "torch.testing": [[1947, "module-torch.testing"]], "Numerical accuracy": [[1918, "numerical-accuracy"]], "Batched computations or slice computations": [[1918, "batched-computations-or-slice-computations"]], "Extremal values": [[1918, "extremal-values"]], "Linear algebra (torch.linalg)": [[1918, "linear-algebra-torch-linalg"]], "Non-finite values": [[1918, "non-finite-values"]], "Extremal values in linalg": [[1918, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere (and later) devices": [[1918, "tensorfloat-32-tf32-on-nvidia-ampere-and-later-devices"]], "Reduced Precision Reduction for FP16 and BF16 GEMMs": [[1918, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1918, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "torch.special": [[1941, "torch-special"]], "torch.utils.tensorboard": [[1945, "module-torch.utils.tensorboard"]], "torch.random": [[1935, "module-torch.random"]], "Quantization Accuracy Debugging": [[1932, "quantization-accuracy-debugging"], [1931, "quantization-accuracy-debugging"]], "Data insensitive error": [[1932, "data-insensitive-error"]], "General tips": [[1932, "general-tips"]], "Int8 quantization tips": [[1932, "int8-quantization-tips"]], "Data sensitive error": [[1932, "data-sensitive-error"]], "Implementation error": [[1932, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1932, "numerical-debugging-tooling-prototype"]], "torch.profiler": [[1930, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1930, "intel-instrumentation-and-tracing-technology-apis"]], "Pipeline Parallelism": [[1929, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1929, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1929, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1929, "pipe-apis-in-pytorch"]], "Skip connections": [[1929, "skip-connections"]], "Remote Reference Protocol": [[1938, "remote-reference-protocol"]], "Background": [[1938, "background"], [1937, "background"]], "RRef Lifetime": [[1938, "rref-lifetime"]], "Design Reasoning": [[1938, "design-reasoning"]], "Protocol Scenarios": [[1938, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1938, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1938, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1938, "owner-share-rref-with-user"]], "User Share RRef with User": [[1938, "user-share-rref-with-user"]], "A Simple Custom Module": [[1915, "a-simple-custom-module"]], "Modules as Building Blocks": [[1915, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1915, "neural-network-training-with-modules"]], "Module State": [[1915, "module-state"]], "Module Initialization": [[1915, "module-initialization"]], "Module Hooks": [[1915, "module-hooks"]], "Advanced Features": [[1915, "advanced-features"]], "Distributed Training": [[1915, "distributed-training"]], "Profiling Performance": [[1915, "profiling-performance"]], "Improving Performance with Quantization": [[1915, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1915, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1915, "parametrizations"]], "Transforming Modules with FX": [[1915, "transforming-modules-with-fx"]], "torch": [[1948, "module-torch"]], "Tensors": [[1948, "tensors"]], "Creation Ops": [[1948, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1948, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1948, "generators"]], "Random sampling": [[1948, "random-sampling"]], "In-place random sampling": [[1948, "in-place-random-sampling"]], "Quasi-random sampling": [[1948, "quasi-random-sampling"]], "Parallelism": [[1948, "parallelism"]], "Math operations": [[1948, "math-operations"]], "Pointwise Ops": [[1948, "pointwise-ops"]], "Reduction Ops": [[1948, "reduction-ops"]], "Comparison Ops": [[1948, "comparison-ops"]], "Spectral Ops": [[1948, "spectral-ops"]], "Other Operations": [[1948, "other-operations"]], "BLAS and LAPACK Operations": [[1948, "blas-and-lapack-operations"]], "Foreach Operations": [[1948, "foreach-operations"]], "Symbolic Numbers": [[1948, "symbolic-numbers"]], "Export Path": [[1948, "export-path"]], "Control Flow": [[1948, "control-flow"]], "Optimizations": [[1948, "optimizations"]], "Operator Tags": [[1948, "operator-tags"]], "Windows FAQ": [[1921, "windows-faq"]], "Building from source": [[1921, "building-from-source"]], "Include optional components": [[1921, "include-optional-components"]], "Speeding CUDA build for Windows": [[1921, "speeding-cuda-build-for-windows"]], "One key install script": [[1921, "one-key-install-script"]], "Extension": [[1921, "extension"]], "CFFI Extension": [[1921, "cffi-extension"]], "Cpp Extension": [[1921, "cpp-extension"]], "Installation": [[1921, "installation"]], "Package not found in win-32 channel.": [[1921, "package-not-found-in-win-32-channel"]], "Import error": [[1921, "import-error"]], "Usage (multiprocessing)": [[1921, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1921, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1921, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1921, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1921, "cuda-ipc-operations"]], "Does torch.compile support training?": [[1959, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[1959, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[1959, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[1959, "why-is-my-code-crashing"]], "Why is compilation slow?": [[1959, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[1959, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[1959, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[1959, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[1959, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[1959, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[1959, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[1959, "why-am-i-getting-ooms"]], "Does torch.func work with torch.compile (for grad and vmap transforms)?": [[1959, "does-torch-func-work-with-torch-compile-for-grad-and-vmap-transforms"]], "Calling torch.func transform inside of a function handled with torch.compile": [[1959, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Compiling torch.func.grad with torch.compile": [[1959, "compiling-torch-func-grad-with-torch-compile"]], "Compiling torch.vmap with torch.compile": [[1959, "compiling-torch-vmap-with-torch-compile"]], "Compiling functions besides the ones which are supported (escape hatch)": [[1959, "compiling-functions-besides-the-ones-which-are-supported-escape-hatch"]], "Does NumPy work with torch.compile?": [[1959, "does-numpy-work-with-torch-compile"]], "Which NumPy features does torch.compile support?": [[1959, "which-numpy-features-does-torch-compile-support"]], "Can I execute NumPy code on CUDA via torch.compile?": [[1959, "can-i-execute-numpy-code-on-cuda-via-torch-compile"]], "How do I debug NumPy code under torch.compile?": [[1959, "how-do-i-debug-numpy-code-under-torch-compile"]], "I torch.compile some NumPy code and I did not see any speed-up.": [[1959, "i-torch-compile-some-numpy-code-and-i-did-not-see-any-speed-up"]], "Which API to use for fine grain tracing?": [[1959, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[1959, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[1959, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[1959, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "Tensor Views": [[1944, "tensor-views"]], "torch.compiler API reference": [[1952, "torch-compiler-api-reference"]], "CUDAGraph Trees": [[1954, "cudagraph-trees"]], "CUDAGraph Background": [[1954, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[1954, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[1954, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[1954, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[1954, "cudagraph-trees-integration"]], "torch.compiler": [[1951, "torch-compiler"]], "Getting Started for PyTorch Users": [[1951, null]], "HowTo for PyTorch Backend Vendors": [[1951, null]], "TorchDynamo-based ONNX Exporter": [[1923, "torchdynamo-based-onnx-exporter"], [1922, "torchdynamo-based-onnx-exporter"]], "Dependencies": [[1923, "dependencies"]], "A simple example": [[1923, "a-simple-example"]], "Inspecting the ONNX model using GUI": [[1923, "inspecting-the-onnx-model-using-gui"]], "Diagnosing issues with SARIF": [[1923, "diagnosing-issues-with-sarif"]], "ONNX Diagnostic SARIF Rules": [[1923, null]], "HIP (ROCm) semantics": [[1913, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1913, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1913, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1913, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[1913, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1913, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1913, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1913, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1913, "enabling-kernel-asserts"]], "TorchScript-based ONNX Exporter": [[1925, "torchscript-based-onnx-exporter"], [1922, "torchscript-based-onnx-exporter"]], "Example: AlexNet from PyTorch to ONNX": [[1925, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1925, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1925, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1925, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1925, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1925, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[1925, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1925, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1925, "reads-gets"]], "Writes / Sets": [[1925, "writes-sets"]], "Adding support for operators": [[1925, "adding-support-for-operators"]], "ONNX exporter internals": [[1925, "onnx-exporter-internals"]], "ATen operators": [[1925, "aten-operators"]], "List of supported operators": [[1925, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1925, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1925, "torch-autograd-functions"]], "Static Symbolic Method": [[1925, "static-symbolic-method"]], "Inline Autograd Function": [[1925, "inline-autograd-function"]], "Custom operators": [[1925, "custom-operators"]], "ONNX-script functions": [[1925, "onnx-script-functions"]], "C++ Operators": [[1925, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1925, "discovering-all-unconvertible-aten-ops-at-once"]], "Classes": [[1925, "classes"]], "torch.onnx": [[1922, "torch-onnx"]], "Contributing / Developing": [[1922, "contributing-developing"]], "torch.optim": [[1927, "module-torch.optim"]], "How to use an optimizer": [[1927, "how-to-use-an-optimizer"]], "Constructing it": [[1927, "constructing-it"]], "Per-parameter options": [[1927, "per-parameter-options"]], "Taking an optimization step": [[1927, "taking-an-optimization-step"]], "optimizer.step()": [[1927, "optimizer-step"]], "optimizer.step(closure)": [[1927, "optimizer-step-closure"]], "Base class": [[1927, "base-class"]], "Algorithms": [[1927, "algorithms"]], "How to adjust learning rate": [[1927, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1927, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1927, "constructing-averaged-models"]], "Custom averaging strategies": [[1927, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1927, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1927, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1927, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1927, "putting-it-all-together-ema"]], "Custom Backends": [[1955, "custom-backends"]], "Registering Custom Backends": [[1955, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[1955, "custom-backends-after-aotautograd"]], "Debugging Backend": [[1955, "debugging-backend"]], "Speedy Backend": [[1955, "speedy-backend"]], "Composable Backends": [[1955, "composable-backends"]], "Multiprocessing best practices": [[1917, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1917, "cuda-in-multiprocessing"]], "Best practices and tips": [[1917, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1917, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1917, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1917, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1917, "hogwild"]], "CPU in multiprocessing": [[1917, "cpu-in-multiprocessing"]], "CPU oversubscription": [[1917, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[1917, "avoid-cpu-oversubscription"]], "Serialization semantics": [[1920, "serialization-semantics"]], "Table of Contents": [[1920, "table-of-contents"]], "Saving and loading tensors": [[1920, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1920, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1920, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1920, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1920, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1920, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1920, "torch-full-always-inferring-a-float-dtype"]], "Utility functions": [[1920, "utility-functions"], [1934, "utility-functions"]], "Gradcheck mechanics": [[1912, "gradcheck-mechanics"]], "Notations and background information": [[1912, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1912, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1912, "real-to-real-functions"]], "Default real input numerical evaluation": [[1912, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1912, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1912, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1912, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1912, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1912, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1912, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1912, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1912, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1912, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1912, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1912, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1912, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1912, "gradgradcheck-implementation"]], "torch.Storage": [[1942, "torch-storage"]], "ONNX supported TorchScript operators": [[1926, "onnx-supported-torchscript-operators"]], "Supported operators": [[1926, "supported-operators"]], "ONNX support for TorchScript operators": [[1926, "id1"]], "Unsupported operators": [[1926, "unsupported-operators"], [1926, "id2"]], "Dynamic shapes": [[1957, "dynamic-shapes"]], "Abridged public API": [[1957, "abridged-public-api"]], "The Guard Model": [[1957, "the-guard-model"]], "Overall architecture": [[1957, "overall-architecture"], [1958, "overall-architecture"]], "Abridged internal API": [[1957, "abridged-internal-api"]], "DimDynamic policy": [[1957, "dimdynamic-policy"]], "Unbacked SymInts": [[1957, "unbacked-symints"]], "Reproducibility": [[1919, "reproducibility"]], "Controlling sources of randomness": [[1919, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1919, "pytorch-random-number-generator"]], "Python": [[1919, "python"]], "Random number generators in other libraries": [[1919, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1919, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1919, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1919, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1919, "cuda-rnn-and-lstm"]], "Filling uninitialized memory": [[1919, "filling-uninitialized-memory"]], "DataLoader": [[1919, "dataloader"]], "Quantization API Reference": [[1934, "quantization-api-reference"], [1931, "quantization-api-reference"]], "torch.ao.quantization": [[1934, "torch-ao-quantization"]], "Top level APIs": [[1934, "top-level-apis"]], "Preparing model for quantization": [[1934, "preparing-model-for-quantization"]], "torch.ao.quantization.quantize_fx": [[1934, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1934, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1934, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1934, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[1934, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[1934, "module-torch.ao.quantization.pt2e"]], "torch (quantization related functions)": [[1934, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1934, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1934, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1934, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1934, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1934, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1934, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1934, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1934, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1934, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1934, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1934, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1934, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1934, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1934, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1934, "quantized-dtypes-and-quantization-schemes"]], "torch.sparse": [[1940, "torch-sparse"]], "Why and when to use sparsity": [[1940, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1940, "functionality-overview"]], "Operator overview": [[1940, "operator-overview"]], "Sparse Semi-Structured Tensors": [[1940, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[1940, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[1940, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[1940, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[1940, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[1940, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1940, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1940, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1940, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1940, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1940, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1940, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1940, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1940, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1940, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1940, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1940, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1940, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1940, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1940, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[1940, "linear-algebra-operations"]], "Tensor methods and sparse": [[1940, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1940, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1940, "other-functions"]], "Unary functions": [[1940, "unary-functions"]], "torch.ao.ns._numeric_suite_fx": [[1950, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1950, "torch-ao-ns-fx-utils"]], "torch.package": [[1928, "torch-package"]], "Packaging your first model": [[1928, "packaging-your-first-model"]], "How do I\u2026": [[1928, "how-do-i"]], "See what is inside a package?": [[1928, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1928, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1928, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1928, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1928, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1928, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1928, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1928, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1928, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1928, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1928, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1928, "package-a-torchscript-module"]], "Explanation": [[1928, "explanation"]], "torch.package Format Overview": [[1928, "torch-package-format-overview"]], "Framework files": [[1928, "framework-files"]], "User files": [[1928, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1928, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1928, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1928, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1928, "dependency-management"]], "intern": [[1928, "intern"]], "extern": [[1928, "extern"]], "mock": [[1928, "mock"]], "Refactoring": [[1928, "refactoring"]], "Patterns": [[1928, "patterns"]], "torch.package sharp edges": [[1928, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1928, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1928, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1928, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1928, "mangling"]], "Best Practices for Backends": [[1953, "best-practices-for-backends"]], "x86 CPU": [[1953, "x86-cpu"]], "Fake tensor": [[1958, "fake-tensor"]], "Related work": [[1958, "related-work"]], "API: the important bits": [[1958, "api-the-important-bits"]], "Details": [[1958, "details"]], "About the tensor subclass": [[1958, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[1958, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[1958, "how-does-the-converter-work"]], "Performance characteristics": [[1958, "performance-characteristics"]], "Fake tensor of fake tensor?": [[1958, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[1958, "interaction-with-dynamic-shapes"]], "Other resources": [[1958, "other-resources"]], "MPS backend": [[1916, "mps-backend"]], "torch.ao.ns._numeric_suite": [[1949, "torch-ao-ns-numeric-suite"]], "torch.Tensor": [[1946, "torch-tensor"]], "Data types": [[1946, "data-types"]], "Initializing and basic operations": [[1946, "initializing-and-basic-operations"]], "Tensor class reference": [[1946, "tensor-class-reference"]], "Distributed RPC Framework": [[1936, "distributed-rpc-framework"]], "RPC": [[1936, "rpc"]], "TensorPipe Backend": [[1936, "tensorpipe-backend"]], "RRef": [[1936, "rref"]], "More Information about RRef": [[1936, null]], "RemoteModule": [[1936, "remotemodule"]], "Distributed Autograd Framework": [[1936, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1936, null]], "Distributed Optimizer": [[1936, "distributed-optimizer"], [1937, "distributed-optimizer"]], "Quantization": [[1931, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1931, "introduction-to-quantization"]], "Quantization API Summary": [[1931, "quantization-api-summary"]], "Eager Mode Quantization": [[1931, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1931, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1931, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1931, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1931, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype - maintaince mode) FX Graph Mode Quantization": [[1931, "prototype-maintaince-mode-fx-graph-mode-quantization"]], "(Prototype) PyTorch 2 Export Quantization": [[1931, "prototype-pytorch-2-export-quantization"]], "Quantization Stack": [[1931, "quantization-stack"]], "Quantized Model": [[1931, "quantized-model"]], "Quantized Tensor": [[1931, "quantized-tensor"]], "Quantize and Dequantize": [[1931, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1931, "quantized-operators-modules"]], "Quantized Engine": [[1931, "quantized-engine"]], "Quantization Flow": [[1931, "quantization-flow"]], "Observer and FakeQuantize": [[1931, "observer-and-fakequantize"]], "QConfig": [[1931, "qconfig"], [831, "qconfig"]], "General Quantization Flow": [[1931, "general-quantization-flow"]], "Quantization Support Matrix": [[1931, "quantization-support-matrix"]], "Quantization Mode Support": [[1931, "quantization-mode-support"]], "Quantization Flow Support": [[1931, "quantization-flow-support"]], "Backend/Hardware Support": [[1931, "backend-hardware-support"]], "Note for native CPU backends": [[1931, "note-for-native-cpu-backends"]], "Operator Support": [[1931, "operator-support"]], "Quantization Backend Configuration": [[1931, "quantization-backend-configuration"], [1933, "quantization-backend-configuration"]], "Quantization Customizations": [[1931, "quantization-customizations"]], "Quantization Custom Module API": [[1931, "quantization-custom-module-api"]], "Best Practices": [[1931, "best-practices"]], "Common Errors": [[1931, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1931, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1931, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1931, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1931, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "torch.signal": [[1939, "module-torch.signal"]], "torch.signal.windows": [[1939, "module-torch.signal.windows"]], "TorchDynamo Deep Dive": [[1956, "torchdynamo-deep-dive"]], "TorchDynamo Internals": [[1956, "torchdynamo-internals"]], "What is a guard?": [[1956, "what-is-a-guard"]], "What is Dynamo doing?": [[1956, "what-is-dynamo-doing"]], "How to inspect artifacts generated by TorchDynamo?": [[1956, "how-to-inspect-artifacts-generated-by-torchdynamo"]], "Features for large-scale deployments": [[1914, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1914, "fleet-wide-operator-profiling"]], "API usage logging": [[1914, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1914, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1914, "build-environment-considerations"]], "Common extension points": [[1914, "common-extension-points"]], "Tensor Attributes": [[1943, "tensor-attributes"]], "torch.dtype": [[1943, "torch-dtype"]], "torch.device": [[1943, "torch-device"]], "torch.layout": [[1943, "torch-layout"]], "torch.memory_format": [[1943, "torch-memory-format"]], "ONNX Backend for TorchDynamo": [[1924, "onnx-backend-for-torchdynamo"]], "Default values for native configurations": [[1933, "default-values-for-native-configurations"]], "Distributed Autograd Design": [[1937, "distributed-autograd-design"]], "Autograd recording during the forward pass": [[1937, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1937, "distributed-autograd-context"]], "Distributed Backward Pass": [[1937, "distributed-backward-pass"]], "Computing dependencies": [[1937, "computing-dependencies"]], "FAST mode algorithm": [[1937, "fast-mode-algorithm"]], "SMART mode algorithm": [[1937, "smart-mode-algorithm"]], "Simple end to end example": [[1937, "simple-end-to-end-example"]], "default_per_channel_weight_fake_quant": [[798, "default-per-channel-weight-fake-quant"]], "enable_fake_quant": [[802, "enable-fake-quant"]], "ObserverBase": [[814, "observerbase"]], "prepare_qat": [[829, "prepare-qat"]], "ConvertCustomConfig": [[805, "convertcustomconfig"]], "ObservationType": [[786, "observationtype"]], "default_placeholder_observer": [[824, "default-placeholder-observer"]], "PerChannelMinMaxObserver": [[815, "perchannelminmaxobserver"]], "NoopObserver": [[813, "noopobserver"]], "MovingAverageMinMaxObserver": [[811, "movingaverageminmaxobserver"]], "default_per_channel_weight_observer": [[823, "default-per-channel-weight-observer"]], "FakeQuantize": [[789, "fakequantize"]], "default_weight_observer": [[825, "default-weight-observer"]], "FusedMovingAvgObsFakeQuantize": [[792, "fusedmovingavgobsfakequantize"]], "enable_observer": [[803, "enable-observer"]], "FixedQParamsFakeQuantize": [[791, "fixedqparamsfakequantize"]], "fuse_modules": [[804, "fuse-modules"]], "default_debug_observer": [[818, "default-debug-observer"]], "RecordingObserver": [[817, "recordingobserver"]], "default_dynamic_quant_observer": [[819, "default-dynamic-quant-observer"]], "PrepareCustomConfig": [[807, "preparecustomconfig"]], "convert": [[787, "convert"]], "default_fused_wt_fake_quant": [[796, "default-fused-wt-fake-quant"]], "FuseCustomConfig": [[806, "fusecustomconfig"]], "FakeQuantizeBase": [[790, "fakequantizebase"]], "default_histogram_observer": [[821, "default-histogram-observer"]], "DTypeConfig": [[784, "dtypeconfig"]], "HistogramObserver": [[809, "histogramobserver"]], "default_weight_fake_quant": [[799, "default-weight-fake-quant"]], "get_observer_state_dict": [[826, "get-observer-state-dict"]], "StandaloneModuleConfigEntry": [[808, "standalonemoduleconfigentry"]], "load_observer_state_dict": [[827, "load-observer-state-dict"]], "DTypeWithConstraints": [[785, "dtypewithconstraints"]], "default_fused_per_channel_wt_fake_quant": [[795, "default-fused-per-channel-wt-fake-quant"]], "PlaceholderObserver": [[816, "placeholderobserver"]], "default_activation_only_qconfig": [[832, "default-activation-only-qconfig"]], "default_histogram_fake_quant": [[797, "default-histogram-fake-quant"]], "default_fused_act_fake_quant": [[794, "default-fused-act-fake-quant"]], "default_observer": [[822, "default-observer"]], "prepare": [[828, "prepare"]], "disable_observer": [[801, "disable-observer"]], "default_float_qparams_observer": [[820, "default-float-qparams-observer"]], "MovingAveragePerChannelMinMaxObserver": [[812, "movingaverageperchannelminmaxobserver"]], "propagate_qconfig": [[830, "propagate-qconfig"]], "default_fake_quant": [[793, "default-fake-quant"]], "MinMaxObserver": [[810, "minmaxobserver"]], "default_eval_fn": [[788, "default-eval-fn"]], "disable_fake_quant": [[800, "disable-fake-quant"]], "conv2d": [[763, "conv2d"]], "hardswish": [[767, "hardswish"]], "celu": [[760, "celu"]], "max_pool1d": [[772, "max-pool1d"]], "add_quant_dequant": [[781, "add-quant-dequant"]], "hardtanh": [[768, "hardtanh"]], "QuantWrapper": [[780, "quantwrapper"]], "upsample_bilinear": [[776, "upsample-bilinear"]], "max_pool2d": [[773, "max-pool2d"]], "BackendConfig": [[782, "backendconfig"]], "adaptive_avg_pool2d": [[756, "adaptive-avg-pool2d"]], "adaptive_avg_pool3d": [[757, "adaptive-avg-pool3d"]], "avg_pool3d": [[759, "avg-pool3d"]], "threshold": [[774, "threshold"]], "FXFloatFunctional": [[737, "fxfloatfunctional"]], "upsample": [[775, "upsample"]], "avg_pool2d": [[758, "avg-pool2d"]], "upsample_nearest": [[777, "upsample-nearest"]], "hardsigmoid": [[766, "hardsigmoid"]], "leaky_relu": [[770, "leaky-relu"]], "elu": [[765, "elu"]], "QFunctional": [[747, "qfunctional"]], "clamp": [[761, "clamp"]], "interpolate": [[769, "interpolate"]], "conv1d": [[762, "conv1d"]], "linear": [[771, "linear"]], "DeQuantStub": [[778, "dequantstub"]], "BackendPatternConfig": [[783, "backendpatternconfig"]], "FloatFunctional": [[738, "floatfunctional"]], "QuantStub": [[779, "quantstub"]], "conv3d": [[764, "conv3d"]], "ConvBn1d": [[692, "convbn1d"], [702, "convbn1d"]], "ConvBn2d": [[703, "convbn2d"], [693, "convbn2d"]], "torch.any": [[689, "torch-any"]], "ConvBn3d": [[694, "convbn3d"], [704, "convbn3d"]], "freeze_bn_stats": [[711, "freeze-bn-stats"]], "torch.aminmax": [[687, "torch-aminmax"]], "ConvReLU3d": [[717, "convrelu3d"], [700, "convrelu3d"], [709, "convrelu3d"]], "BNReLU2d": [[690, "bnrelu2d"], [713, "bnrelu2d"]], "ConvReLU1d": [[698, "convrelu1d"], [715, "convrelu1d"]], "BNReLU3d": [[714, "bnrelu3d"], [691, "bnrelu3d"]], "torch.angle": [[688, "torch-angle"]], "ConvReLU2d": [[699, "convrelu2d"], [716, "convrelu2d"], [708, "convrelu2d"]], "LinearReLU": [[710, "linearrelu"], [718, "linearrelu"], [719, "linearrelu"], [701, "linearrelu"]], "ConvBnReLU3d": [[707, "convbnrelu3d"], [697, "convbnrelu3d"]], "ConvBnReLU1d": [[695, "convbnrelu1d"], [705, "convbnrelu1d"]], "torch.amin": [[686, "torch-amin"]], "update_bn_stats": [[712, "update-bn-stats"]], "ConvBnReLU2d": [[696, "convbnrelu2d"], [706, "convbnrelu2d"]], "torch.addcdiv": [[677, "torch-addcdiv"]], "torch._foreach_sinh": [[661, "torch-foreach-sinh"]], "torch.allclose": [[684, "torch-allclose"]], "torch.addmv": [[680, "torch-addmv"]], "torch._foreach_reciprocal_": [[654, "torch-foreach-reciprocal"]], "torch._foreach_sinh_": [[662, "torch-foreach-sinh"]], "torch._foreach_log10_": [[645, "torch-foreach-log10"]], "torch._foreach_log10": [[644, "torch-foreach-log10"]], "torch._foreach_floor_": [[638, "torch-foreach-floor"]], "torch.add": [[675, "torch-add"]], "torch._foreach_lgamma": [[641, "torch-foreach-lgamma"]], "torch._foreach_round_": [[656, "torch-foreach-round"]], "torch._foreach_sigmoid_": [[658, "torch-foreach-sigmoid"]], "torch._logging.set_logs": [[670, "torch-logging-set-logs"]], "torch._foreach_tan_": [[666, "torch-foreach-tan"]], "torch.all": [[683, "torch-all"]], "torch._foreach_log2_": [[649, "torch-foreach-log2"]], "torch._foreach_log2": [[648, "torch-foreach-log2"]], "torch._foreach_neg_": [[652, "torch-foreach-neg"]], "torch._foreach_sin": [[659, "torch-foreach-sin"]], "torch.amax": [[685, "torch-amax"]], "torch.acosh": [[674, "torch-acosh"]], "torch._foreach_zero_": [[669, "torch-foreach-zero"]], "torch.acos": [[673, "torch-acos"]], "torch._foreach_round": [[655, "torch-foreach-round"]], "torch.abs": [[671, "torch-abs"]], "torch._foreach_log_": [[650, "torch-foreach-log"]], "torch._foreach_log": [[643, "torch-foreach-log"]], "torch._foreach_frac": [[639, "torch-foreach-frac"]], "torch._foreach_sqrt": [[663, "torch-foreach-sqrt"]], "torch.addbmm": [[676, "torch-addbmm"]], "torch.addr": [[681, "torch-addr"]], "torch.absolute": [[672, "torch-absolute"]], "torch.addmm": [[679, "torch-addmm"]], "torch._foreach_trunc_": [[668, "torch-foreach-trunc"]], "torch._foreach_log1p_": [[647, "torch-foreach-log1p"]], "torch._foreach_sigmoid": [[657, "torch-foreach-sigmoid"]], "torch._foreach_frac_": [[640, "torch-foreach-frac"]], "torch.addcmul": [[678, "torch-addcmul"]], "torch.adjoint": [[682, "torch-adjoint"]], "torch._foreach_sqrt_": [[664, "torch-foreach-sqrt"]], "torch._foreach_reciprocal": [[653, "torch-foreach-reciprocal"]], "torch._foreach_lgamma_": [[642, "torch-foreach-lgamma"]], "torch._foreach_sin_": [[660, "torch-foreach-sin"]], "torch._foreach_tan": [[665, "torch-foreach-tan"]], "torch._foreach_floor": [[637, "torch-foreach-floor"]], "torch._foreach_trunc": [[667, "torch-foreach-trunc"]], "torch._foreach_log1p": [[646, "torch-foreach-log1p"]], "torch._foreach_neg": [[651, "torch-foreach-neg"]], "torch._foreach_asin_": [[620, "torch-foreach-asin"]], "torch._foreach_atan": [[621, "torch-foreach-atan"]], "torch._foreach_cos_": [[626, "torch-foreach-cos"]], "torch._foreach_expm1_": [[636, "torch-foreach-expm1"]], "torch._assert": [[614, "torch-assert"]], "torch._foreach_exp": [[633, "torch-foreach-exp"]], "torch.Tensor.unfold": [[597, "torch-tensor-unfold"]], "torch._foreach_acos_": [[618, "torch-foreach-acos"]], "torch.Tensor.trunc_": [[592, "torch-tensor-trunc"]], "torch.Tensor.view_as": [[608, "torch-tensor-view-as"]], "torch.Tensor.true_divide_": [[590, "torch-tensor-true-divide"]], "torch._foreach_exp_": [[634, "torch-foreach-exp"]], "torch._foreach_acos": [[617, "torch-foreach-acos"]], "torch.Tensor.values": [[604, "torch-tensor-values"]], "torch._foreach_erf": [[629, "torch-foreach-erf"]], "torch.Tensor.triu_": [[588, "torch-tensor-triu"]], "torch.Tensor.true_divide": [[589, "torch-tensor-true-divide"]], "torch.Tensor.unsqueeze_": [[602, "torch-tensor-unsqueeze"]], "torch._foreach_expm1": [[635, "torch-foreach-expm1"]], "torch.Tensor.vsplit": [[609, "torch-tensor-vsplit"]], "torch._foreach_ceil_": [[624, "torch-foreach-ceil"]], "torch.Tensor.xlogy_": [[612, "torch-tensor-xlogy"]], "torch.Tensor.trunc": [[591, "torch-tensor-trunc"]], "torch.Tensor.unflatten": [[596, "torch-tensor-unflatten"]], "torch._foreach_atan_": [[622, "torch-foreach-atan"]], "torch.Tensor.zero_": [[613, "torch-tensor-zero"]], "torch._foreach_abs_": [[616, "torch-foreach-abs"]], "torch._foreach_cosh_": [[628, "torch-foreach-cosh"]], "torch.Tensor.type_as": [[594, "torch-tensor-type-as"]], "torch.Tensor.unique": [[599, "torch-tensor-unique"]], "torch.Tensor.var": [[605, "torch-tensor-var"]], "torch._foreach_cosh": [[627, "torch-foreach-cosh"]], "torch._foreach_abs": [[615, "torch-foreach-abs"]], "torch.Tensor.untyped_storage": [[603, "torch-tensor-untyped-storage"]], "torch._foreach_cos": [[625, "torch-foreach-cos"]], "torch._foreach_erfc": [[631, "torch-foreach-erfc"]], "torch.Tensor.uniform_": [[598, "torch-tensor-uniform"]], "torch.Tensor.unique_consecutive": [[600, "torch-tensor-unique-consecutive"]], "torch.Tensor.xlogy": [[611, "torch-tensor-xlogy"]], "torch.Tensor.vdot": [[606, "torch-tensor-vdot"]], "torch._foreach_ceil": [[623, "torch-foreach-ceil"]], "torch.Tensor.where": [[610, "torch-tensor-where"]], "torch.Tensor.type": [[593, "torch-tensor-type"]], "torch._foreach_erfc_": [[632, "torch-foreach-erfc"]], "torch.Tensor.unbind": [[595, "torch-tensor-unbind"]], "torch._foreach_erf_": [[630, "torch-foreach-erf"]], "torch.Tensor.view": [[607, "torch-tensor-view"]], "torch._foreach_asin": [[619, "torch-foreach-asin"]], "torch.Tensor.unsqueeze": [[601, "torch-tensor-unsqueeze"]], "torch.Tensor.swapaxes": [[558, "torch-tensor-swapaxes"]], "torch.Tensor.to_sparse_coo": [[576, "torch-tensor-to-sparse-coo"]], "torch.Tensor.subtract_": [[554, "torch-tensor-subtract"]], "torch.Tensor.sqrt_": [[539, "torch-tensor-sqrt"]], "torch.Tensor.transpose_": [[583, "torch-tensor-transpose"]], "torch.Tensor.take": [[562, "torch-tensor-take"]], "torch.Tensor.sub": [[551, "torch-tensor-sub"]], "torch.Tensor.tan": [[564, "torch-tensor-tan"]], "torch.Tensor.tolist": [[579, "torch-tensor-tolist"]], "torch.Tensor.storage": [[547, "torch-tensor-storage"]], "torch.Tensor.triu": [[587, "torch-tensor-triu"]], "torch.Tensor.subtract": [[553, "torch-tensor-subtract"]], "torch.Tensor.transpose": [[582, "torch-tensor-transpose"]], "torch.Tensor.tril": [[585, "torch-tensor-tril"]], "torch.Tensor.sspaddmm": [[544, "torch-tensor-sspaddmm"]], "torch.Tensor.storage_offset": [[548, "torch-tensor-storage-offset"]], "torch.Tensor.sub_": [[552, "torch-tensor-sub"]], "torch.Tensor.square": [[540, "torch-tensor-square"]], "torch.Tensor.tanh": [[566, "torch-tensor-tanh"]], "torch.Tensor.std": [[545, "torch-tensor-std"]], "torch.Tensor.triangular_solve": [[584, "torch-tensor-triangular-solve"]], "torch.Tensor.trace": [[581, "torch-tensor-trace"]], "torch.Tensor.storage_type": [[549, "torch-tensor-storage-type"]], "torch.Tensor.svd": [[557, "torch-tensor-svd"]], "torch.Tensor.square_": [[541, "torch-tensor-square"]], "torch.Tensor.sum_to_size": [[556, "torch-tensor-sum-to-size"]], "torch.Tensor.stride": [[550, "torch-tensor-stride"]], "torch.Tensor.swapdims": [[559, "torch-tensor-swapdims"]], "torch.Tensor.to_dense": [[571, "torch-tensor-to-dense"]], "torch.Tensor.sum": [[555, "torch-tensor-sum"]], "torch.Tensor.take_along_dim": [[563, "torch-tensor-take-along-dim"]], "torch.Tensor.tan_": [[565, "torch-tensor-tan"]], "torch.Tensor.to_sparse_bsc": [[574, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.tril_": [[586, "torch-tensor-tril"]], "torch.Tensor.t_": [[561, "torch-tensor-t"]], "torch.Tensor.topk": [[580, "torch-tensor-topk"]], "torch.Tensor.to_sparse_csr": [[578, "torch-tensor-to-sparse-csr"]], "torch.Tensor.to_mkldnn": [[572, "torch-tensor-to-mkldnn"]], "torch.Tensor.tanh_": [[567, "torch-tensor-tanh"]], "torch.Tensor.tile": [[569, "torch-tensor-tile"]], "torch.Tensor.squeeze": [[542, "torch-tensor-squeeze"]], "torch.Tensor.to": [[570, "torch-tensor-to"]], "torch.Tensor.tensor_split": [[568, "torch-tensor-tensor-split"]], "torch.Tensor.stft": [[546, "torch-tensor-stft"]], "torch.Tensor.to_sparse_csc": [[577, "torch-tensor-to-sparse-csc"]], "torch.Tensor.t": [[560, "torch-tensor-t"]], "torch.Tensor.to_sparse": [[573, "torch-tensor-to-sparse"]], "torch.Tensor.squeeze_": [[543, "torch-tensor-squeeze"]], "torch.Tensor.to_sparse_bsr": [[575, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.sgn_": [[512, "torch-tensor-sgn"]], "torch.Tensor.retains_grad": [[494, "torch-tensor-retains-grad"]], "torch.Tensor.sqrt": [[538, "torch-tensor-sqrt"]], "torch.Tensor.split": [[537, "torch-tensor-split"]], "torch.Tensor.row_indices": [[499, "torch-tensor-row-indices"]], "torch.Tensor.scatter_reduce": [[506, "torch-tensor-scatter-reduce"]], "torch.Tensor.rsqrt": [[500, "torch-tensor-rsqrt"]], "torch.Tensor.scatter_reduce_": [[507, "torch-tensor-scatter-reduce"]], "torch.Tensor.sparse_mask": [[534, "torch-tensor-sparse-mask"]], "torch.Tensor.sparse_resize_and_clear_": [[536, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.sin_": [[522, "torch-tensor-sin"]], "torch.Tensor.sin": [[521, "torch-tensor-sin"]], "torch.Tensor.resolve_neg": [[492, "torch-tensor-resolve-neg"]], "torch.Tensor.resolve_conj": [[491, "torch-tensor-resolve-conj"]], "torch.Tensor.round": [[497, "torch-tensor-round"]], "torch.Tensor.sign": [[518, "torch-tensor-sign"]], "torch.Tensor.sparse_dim": [[533, "torch-tensor-sparse-dim"]], "torch.Tensor.sigmoid_": [[517, "torch-tensor-sigmoid"]], "torch.Tensor.scatter_add_": [[505, "torch-tensor-scatter-add"]], "torch.Tensor.sinc_": [[524, "torch-tensor-sinc"]], "torch.Tensor.sort": [[532, "torch-tensor-sort"]], "torch.Tensor.shape": [[513, "torch-tensor-shape"]], "torch.Tensor.smm": [[530, "torch-tensor-smm"]], "torch.Tensor.size": [[527, "torch-tensor-size"]], "torch.Tensor.slogdet": [[529, "torch-tensor-slogdet"]], "torch.Tensor.resize_as_": [[490, "torch-tensor-resize-as"]], "torch.Tensor.softmax": [[531, "torch-tensor-softmax"]], "torch.Tensor.rot90": [[496, "torch-tensor-rot90"]], "torch.Tensor.sgn": [[511, "torch-tensor-sgn"]], "torch.Tensor.short": [[515, "torch-tensor-short"]], "torch.Tensor.signbit": [[520, "torch-tensor-signbit"]], "torch.Tensor.sinh": [[525, "torch-tensor-sinh"]], "torch.Tensor.set_": [[510, "torch-tensor-set"]], "torch.Tensor.slice_scatter": [[528, "torch-tensor-slice-scatter"]], "torch.Tensor.sinc": [[523, "torch-tensor-sinc"]], "torch.Tensor.rsqrt_": [[501, "torch-tensor-rsqrt"]], "torch.Tensor.retain_grad": [[493, "torch-tensor-retain-grad"]], "torch.Tensor.select_scatter": [[509, "torch-tensor-select-scatter"]], "torch.Tensor.sinh_": [[526, "torch-tensor-sinh"]], "torch.Tensor.sign_": [[519, "torch-tensor-sign"]], "torch.Tensor.share_memory_": [[514, "torch-tensor-share-memory"]], "torch.Tensor.scatter_": [[503, "torch-tensor-scatter"]], "torch.Tensor.sparse_resize_": [[535, "torch-tensor-sparse-resize"]], "torch.Tensor.roll": [[495, "torch-tensor-roll"]], "torch.Tensor.select": [[508, "torch-tensor-select"]], "torch.Tensor.sigmoid": [[516, "torch-tensor-sigmoid"]], "torch.Tensor.round_": [[498, "torch-tensor-round"]], "torch.Tensor.scatter": [[502, "torch-tensor-scatter"]], "torch.Tensor.scatter_add": [[504, "torch-tensor-scatter-add"]], "torch.Tensor.qr": [[467, "torch-tensor-qr"]], "torch.Tensor.rad2deg": [[470, "torch-tensor-rad2deg"]], "torch.Tensor.register_post_accumulate_grad_hook": [[478, "torch-tensor-register-post-accumulate-grad-hook"]], "torch.Tensor.q_zero_point": [[466, "torch-tensor-q-zero-point"]], "torch.Tensor.reshape_as": [[488, "torch-tensor-reshape-as"]], "torch.Tensor.pin_memory": [[453, "torch-tensor-pin-memory"]], "torch.Tensor.random_": [[471, "torch-tensor-random"]], "torch.Tensor.put_": [[461, "torch-tensor-put"]], "torch.Tensor.quantile": [[469, "torch-tensor-quantile"]], "torch.Tensor.reshape": [[487, "torch-tensor-reshape"]], "torch.Tensor.orgqr": [[449, "torch-tensor-orgqr"]], "torch.Tensor.permute": [[452, "torch-tensor-permute"]], "torch.Tensor.repeat": [[483, "torch-tensor-repeat"]], "torch.Tensor.not_equal": [[445, "torch-tensor-not-equal"]], "torch.Tensor.q_per_channel_zero_points": [[464, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.record_stream": [[476, "torch-tensor-record-stream"]], "torch.Tensor.numpy": [[448, "torch-tensor-numpy"]], "torch.Tensor.polygamma_": [[456, "torch-tensor-polygamma"]], "torch.Tensor.q_per_channel_scales": [[463, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.q_scale": [[465, "torch-tensor-q-scale"]], "torch.Tensor.normal_": [[444, "torch-tensor-normal"]], "torch.Tensor.polygamma": [[455, "torch-tensor-polygamma"]], "torch.Tensor.reciprocal": [[474, "torch-tensor-reciprocal"]], "torch.Tensor.requires_grad_": [[486, "torch-tensor-requires-grad"]], "torch.Tensor.prod": [[460, "torch-tensor-prod"]], "torch.Tensor.nextafter_": [[441, "torch-tensor-nextafter"]], "torch.Tensor.register_hook": [[477, "torch-tensor-register-hook"]], "torch.Tensor.norm": [[443, "torch-tensor-norm"]], "torch.Tensor.pow_": [[459, "torch-tensor-pow"]], "torch.Tensor.repeat_interleave": [[484, "torch-tensor-repeat-interleave"]], "torch.Tensor.positive": [[457, "torch-tensor-positive"]], "torch.Tensor.ormqr": [[450, "torch-tensor-ormqr"]], "torch.Tensor.real": [[473, "torch-tensor-real"]], "torch.Tensor.requires_grad": [[485, "torch-tensor-requires-grad"]], "torch.Tensor.nonzero": [[442, "torch-tensor-nonzero"]], "torch.Tensor.pinverse": [[454, "torch-tensor-pinverse"]], "torch.Tensor.renorm_": [[482, "torch-tensor-renorm"]], "torch.Tensor.remainder_": [[480, "torch-tensor-remainder"]], "torch.Tensor.resize_": [[489, "torch-tensor-resize"]], "torch.Tensor.q_per_channel_axis": [[462, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.renorm": [[481, "torch-tensor-renorm"]], "torch.Tensor.qscheme": [[468, "torch-tensor-qscheme"]], "torch.Tensor.ravel": [[472, "torch-tensor-ravel"]], "torch.Tensor.outer": [[451, "torch-tensor-outer"]], "torch.Tensor.remainder": [[479, "torch-tensor-remainder"]], "torch.Tensor.not_equal_": [[446, "torch-tensor-not-equal"]], "torch.Tensor.numel": [[447, "torch-tensor-numel"]], "torch.Tensor.reciprocal_": [[475, "torch-tensor-reciprocal"]], "torch.Tensor.pow": [[458, "torch-tensor-pow"]], "torch.Tensor.ne": [[428, "torch-tensor-ne"]], "torch.Tensor.masked_scatter": [[392, "torch-tensor-masked-scatter"]], "torch.Tensor.new_zeros": [[439, "torch-tensor-new-zeros"]], "torch.Tensor.masked_scatter_": [[393, "torch-tensor-masked-scatter"]], "torch.Tensor.min": [[402, "torch-tensor-min"]], "torch.Tensor.nan_to_num_": [[418, "torch-tensor-nan-to-num"]], "torch.Tensor.narrow_copy": [[424, "torch-tensor-narrow-copy"]], "torch.Tensor.nanquantile": [[421, "torch-tensor-nanquantile"]], "torch.Tensor.maximum": [[399, "torch-tensor-maximum"]], "torch.Tensor.new_tensor": [[438, "torch-tensor-new-tensor"]], "torch.Tensor.nan_to_num": [[417, "torch-tensor-nan-to-num"]], "torch.Tensor.matmul": [[395, "torch-tensor-matmul"]], "torch.Tensor.negative_": [[433, "torch-tensor-negative"]], "torch.Tensor.nbytes": [[425, "torch-tensor-nbytes"]], "torch.Tensor.new_full": [[436, "torch-tensor-new-full"]], "torch.Tensor.max": [[398, "torch-tensor-max"]], "torch.Tensor.msort": [[408, "torch-tensor-msort"]], "torch.Tensor.mul_": [[410, "torch-tensor-mul"]], "torch.Tensor.multiply_": [[413, "torch-tensor-multiply"]], "torch.Tensor.neg_": [[431, "torch-tensor-neg"]], "torch.Tensor.moveaxis": [[406, "torch-tensor-moveaxis"]], "torch.Tensor.mv": [[414, "torch-tensor-mv"]], "torch.Tensor.negative": [[432, "torch-tensor-negative"]], "torch.Tensor.new_ones": [[437, "torch-tensor-new-ones"]], "torch.Tensor.nansum": [[422, "torch-tensor-nansum"]], "torch.Tensor.mul": [[409, "torch-tensor-mul"]], "torch.Tensor.narrow": [[423, "torch-tensor-narrow"]], "torch.Tensor.mm": [[404, "torch-tensor-mm"]], "torch.Tensor.masked_select": [[394, "torch-tensor-masked-select"]], "torch.Tensor.mean": [[400, "torch-tensor-mean"]], "torch.Tensor.matrix_power": [[397, "torch-tensor-matrix-power"]], "torch.Tensor.new_empty": [[435, "torch-tensor-new-empty"]], "torch.Tensor.mvlgamma_": [[416, "torch-tensor-mvlgamma"]], "torch.Tensor.nanmean": [[419, "torch-tensor-nanmean"]], "torch.Tensor.ndimension": [[427, "torch-tensor-ndimension"]], "torch.Tensor.nelement": [[434, "torch-tensor-nelement"]], "torch.Tensor.median": [[401, "torch-tensor-median"]], "torch.Tensor.nanmedian": [[420, "torch-tensor-nanmedian"]], "torch.Tensor.neg": [[430, "torch-tensor-neg"]], "torch.Tensor.movedim": [[407, "torch-tensor-movedim"]], "torch.Tensor.matrix_exp": [[396, "torch-tensor-matrix-exp"]], "torch.Tensor.mode": [[405, "torch-tensor-mode"]], "torch.Tensor.ndim": [[426, "torch-tensor-ndim"]], "torch.Tensor.minimum": [[403, "torch-tensor-minimum"]], "torch.Tensor.multinomial": [[411, "torch-tensor-multinomial"]], "torch.Tensor.nextafter": [[440, "torch-tensor-nextafter"]], "torch.Tensor.ne_": [[429, "torch-tensor-ne"]], "torch.Tensor.multiply": [[412, "torch-tensor-multiply"]], "torch.Tensor.mvlgamma": [[415, "torch-tensor-mvlgamma"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.load_state_dict"]], "module": [[0, "module-torch.amp"], [0, "module-torch.amp.autocast_mode"], [0, "module-torch.cpu.amp"], [0, "module-torch.cpu.amp.autocast_mode"], [0, "module-torch.cuda.amp"], [0, "module-torch.cuda.amp.autocast_mode"], [0, "module-torch.cuda.amp.common"], [0, "module-torch.cuda.amp.grad_scaler"], [1, "module-torch.autograd"], [1, "module-torch.autograd.anomaly_mode"], [1, "module-torch.autograd.forward_ad"], [1, "module-torch.autograd.function"], [1, "module-torch.autograd.functional"], [1, "module-torch.autograd.grad_mode"], [1, "module-torch.autograd.gradcheck"], [1, "module-torch.autograd.graph"], [1, "module-torch.autograd.profiler"], [1, "module-torch.autograd.profiler_legacy"], [1, "module-torch.autograd.profiler_util"], [1, "module-torch.autograd.variable"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.cudnn.rnn"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xeon.run_cpu"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [13, "module-torch.__config__"], [16, "module-torch.cpu"], [17, "module-torch.cuda"], [17, "module-torch.cuda.comm"], [17, "module-torch.cuda.error"], [17, "module-torch.cuda.graphs"], [17, "module-torch.cuda.jiterator"], [17, "module-torch.cuda.memory"], [17, "module-torch.cuda.nccl"], [17, "module-torch.cuda.nvtx"], [17, "module-torch.cuda.profiler"], [17, "module-torch.cuda.random"], [17, "module-torch.cuda.sparse"], [17, "module-torch.cuda.streams"], [18, "module-torch.cuda._sanitizer"], [21, "module-torch.utils.data"], [21, "module-torch.utils.data.datapipes"], [21, "module-torch.utils.data.datapipes.dataframe"], [21, "module-torch.utils.data.datapipes.iter"], [21, "module-torch.utils.data.datapipes.map"], [21, "module-torch.utils.data.datapipes.utils"], [24, "module-torch.utils.deterministic"], [25, "module-torch.distributed"], [25, "module-torch.distributed.algorithms"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"], [25, "module-torch.distributed.algorithms.join"], [25, "module-torch.distributed.algorithms.model_averaging"], [25, "module-torch.distributed.algorithms.model_averaging.averagers"], [25, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"], [25, "module-torch.distributed.algorithms.model_averaging.utils"], [25, "module-torch.distributed.argparse_util"], [25, "module-torch.distributed.c10d_logger"], [25, "module-torch.distributed.checkpoint.api"], [25, "module-torch.distributed.checkpoint.default_planner"], [25, "module-torch.distributed.checkpoint.filesystem"], [25, "module-torch.distributed.checkpoint.metadata"], [25, "module-torch.distributed.checkpoint.optimizer"], [25, "module-torch.distributed.checkpoint.planner"], [25, "module-torch.distributed.checkpoint.planner_helpers"], [25, "module-torch.distributed.checkpoint.resharding"], [25, "module-torch.distributed.checkpoint.state_dict"], [25, "module-torch.distributed.checkpoint.state_dict_loader"], [25, "module-torch.distributed.checkpoint.state_dict_saver"], [25, "module-torch.distributed.checkpoint.storage"], [25, "module-torch.distributed.checkpoint.utils"], [25, "module-torch.distributed.collective_utils"], [25, "module-torch.distributed.constants"], [25, "module-torch.distributed.distributed_c10d"], [25, "module-torch.distributed.elastic"], [25, "module-torch.distributed.elastic.agent.server.api"], [25, "module-torch.distributed.elastic.agent.server.local_elastic_agent"], [25, "module-torch.distributed.elastic.events.api"], [25, "module-torch.distributed.elastic.events.handlers"], [25, "module-torch.distributed.elastic.metrics.api"], [25, "module-torch.distributed.elastic.multiprocessing.api"], [25, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"], [25, "module-torch.distributed.elastic.multiprocessing.errors.handlers"], [25, "module-torch.distributed.elastic.multiprocessing.redirects"], [25, "module-torch.distributed.elastic.multiprocessing.tail_log"], [25, "module-torch.distributed.elastic.rendezvous.api"], [25, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"], [25, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"], [25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"], [25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"], [25, "module-torch.distributed.elastic.rendezvous.etcd_server"], [25, "module-torch.distributed.elastic.rendezvous.etcd_store"], [25, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"], [25, "module-torch.distributed.elastic.rendezvous.utils"], [25, "module-torch.distributed.elastic.timer.api"], [25, "module-torch.distributed.elastic.timer.file_based_local_timer"], [25, "module-torch.distributed.elastic.timer.local_timer"], [25, "module-torch.distributed.elastic.utils"], [25, "module-torch.distributed.elastic.utils.api"], [25, "module-torch.distributed.elastic.utils.data"], [25, "module-torch.distributed.elastic.utils.data.cycling_iterator"], [25, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"], [25, "module-torch.distributed.elastic.utils.distributed"], [25, "module-torch.distributed.elastic.utils.log_level"], [25, "module-torch.distributed.elastic.utils.logging"], [25, "module-torch.distributed.elastic.utils.store"], [25, "module-torch.distributed.fsdp.api"], [25, "module-torch.distributed.fsdp.fully_sharded_data_parallel"], [25, "module-torch.distributed.fsdp.sharded_grad_scaler"], [25, "module-torch.distributed.fsdp.wrap"], [25, "module-torch.distributed.launch"], [25, "module-torch.distributed.launcher"], [25, "module-torch.distributed.launcher.api"], [25, "module-torch.distributed.logging_handlers"], [25, "module-torch.distributed.nn"], [25, "module-torch.distributed.nn.api"], [25, "module-torch.distributed.nn.api.remote_module"], [25, "module-torch.distributed.nn.functional"], [25, "module-torch.distributed.nn.jit"], [25, "module-torch.distributed.nn.jit.instantiator"], [25, "module-torch.distributed.nn.jit.templates"], [25, "module-torch.distributed.nn.jit.templates.remote_module_template"], [25, "module-torch.distributed.optim.apply_optimizer_in_backward"], [25, "module-torch.distributed.optim.functional_adadelta"], [25, "module-torch.distributed.optim.functional_adagrad"], [25, "module-torch.distributed.optim.functional_adam"], [25, "module-torch.distributed.optim.functional_adamax"], [25, "module-torch.distributed.optim.functional_adamw"], [25, "module-torch.distributed.optim.functional_rmsprop"], [25, "module-torch.distributed.optim.functional_rprop"], [25, "module-torch.distributed.optim.functional_sgd"], [25, "module-torch.distributed.optim.named_optimizer"], [25, "module-torch.distributed.optim.optimizer"], [25, "module-torch.distributed.optim.post_localSGD_optimizer"], [25, "module-torch.distributed.optim.utils"], [25, "module-torch.distributed.optim.zero_redundancy_optimizer"], [25, "module-torch.distributed.pipeline"], [25, "module-torch.distributed.pipeline.sync"], [25, "module-torch.distributed.pipeline.sync.batchnorm"], [25, "module-torch.distributed.pipeline.sync.checkpoint"], [25, "module-torch.distributed.pipeline.sync.copy"], [25, "module-torch.distributed.pipeline.sync.dependency"], [25, "module-torch.distributed.pipeline.sync.microbatch"], [25, "module-torch.distributed.pipeline.sync.phony"], [25, "module-torch.distributed.pipeline.sync.pipe"], [25, "module-torch.distributed.pipeline.sync.pipeline"], [25, "module-torch.distributed.pipeline.sync.skip"], [25, "module-torch.distributed.pipeline.sync.skip.layout"], [25, "module-torch.distributed.pipeline.sync.skip.namespace"], [25, "module-torch.distributed.pipeline.sync.skip.portal"], [25, "module-torch.distributed.pipeline.sync.skip.skippable"], [25, "module-torch.distributed.pipeline.sync.skip.tracker"], [25, "module-torch.distributed.pipeline.sync.stream"], [25, "module-torch.distributed.pipeline.sync.utils"], [25, "module-torch.distributed.pipeline.sync.worker"], [25, "module-torch.distributed.remote_device"], [25, "module-torch.distributed.rendezvous"], [25, "module-torch.distributed.rpc.api"], [25, "module-torch.distributed.rpc.backend_registry"], [25, "module-torch.distributed.rpc.constants"], [25, "module-torch.distributed.rpc.functions"], [25, "module-torch.distributed.rpc.internal"], [25, "module-torch.distributed.rpc.options"], [25, "module-torch.distributed.rpc.rref_proxy"], [25, "module-torch.distributed.rpc.server_process_global_profiler"], [25, "module-torch.distributed.tensor"], [25, "module-torch.distributed.tensor.parallel.api"], [25, "module-torch.distributed.tensor.parallel.ddp"], [25, "module-torch.distributed.tensor.parallel.fsdp"], [25, "module-torch.distributed.tensor.parallel.input_reshard"], [25, "module-torch.distributed.tensor.parallel.style"], [25, "module-torch.distributed.utils"], [27, "module-torch.distributed.checkpoint"], [29, "module-torch.distributed.optim"], [30, "module-torch.distributed.tensor.parallel"], [31, "module-torch.distributions"], [31, "module-torch.distributions.bernoulli"], [31, "module-torch.distributions.beta"], [31, "module-torch.distributions.binomial"], [31, "module-torch.distributions.categorical"], [31, "module-torch.distributions.cauchy"], [31, "module-torch.distributions.chi2"], [31, "module-torch.distributions.constraint_registry"], [31, "module-torch.distributions.constraints"], [31, "module-torch.distributions.continuous_bernoulli"], [31, "module-torch.distributions.dirichlet"], [31, "module-torch.distributions.distribution"], [31, "module-torch.distributions.exp_family"], [31, "module-torch.distributions.exponential"], [31, "module-torch.distributions.fishersnedecor"], [31, "module-torch.distributions.gamma"], [31, "module-torch.distributions.geometric"], [31, "module-torch.distributions.gumbel"], [31, "module-torch.distributions.half_cauchy"], [31, "module-torch.distributions.half_normal"], [31, "module-torch.distributions.independent"], [31, "module-torch.distributions.kl"], [31, "module-torch.distributions.kumaraswamy"], [31, "module-torch.distributions.laplace"], [31, "module-torch.distributions.lkj_cholesky"], [31, "module-torch.distributions.log_normal"], [31, "module-torch.distributions.logistic_normal"], [31, "module-torch.distributions.lowrank_multivariate_normal"], [31, "module-torch.distributions.mixture_same_family"], [31, "module-torch.distributions.multinomial"], [31, "module-torch.distributions.multivariate_normal"], [31, "module-torch.distributions.negative_binomial"], [31, "module-torch.distributions.normal"], [31, "module-torch.distributions.one_hot_categorical"], [31, "module-torch.distributions.pareto"], [31, "module-torch.distributions.poisson"], [31, "module-torch.distributions.relaxed_bernoulli"], [31, "module-torch.distributions.relaxed_categorical"], [31, "module-torch.distributions.studentT"], [31, "module-torch.distributions.transformed_distribution"], [31, "module-torch.distributions.transforms"], [31, "module-torch.distributions.uniform"], [31, "module-torch.distributions.utils"], [31, "module-torch.distributions.von_mises"], [31, "module-torch.distributions.weibull"], [31, "module-torch.distributions.wishart"], [33, "module-torch.distributed.elastic.agent"], [33, "module-torch.distributed.elastic.agent.server"], [35, "module-torch.distributed.elastic.multiprocessing.errors"], [36, "module-torch.distributed.elastic.events"], [39, "module-torch.distributed.elastic.metrics"], [40, "module-torch.distributed.elastic.multiprocessing"], [42, "module-torch.distributed.elastic.rendezvous"], [42, "module-torch.distributed.elastic.rendezvous.registry"], [43, "module-torch.distributed.run"], [44, "module-torch.distributed.elastic.timer"], [46, "module-torch.export"], [46, "module-torch.export.exported_program"], [48, "module-torch.fft"], [49, "module-torch.distributed.fsdp"], [51, "module-torch.func"], [56, "module-torch.futures"], [57, "module-torch.fx"], [57, "module-torch.fx.annotate"], [57, "module-torch.fx.config"], [57, "module-torch.fx.experimental"], [57, "module-torch.fx.experimental.accelerator_partitioner"], [57, "module-torch.fx.experimental.const_fold"], [57, "module-torch.fx.experimental.debug"], [57, "module-torch.fx.experimental.graph_gradual_typechecker"], [57, "module-torch.fx.experimental.merge_matmul"], [57, "module-torch.fx.experimental.meta_tracer"], [57, "module-torch.fx.experimental.migrate_gradual_types"], [57, "module-torch.fx.experimental.migrate_gradual_types.constraint"], [57, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"], [57, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"], [57, "module-torch.fx.experimental.migrate_gradual_types.operation"], [57, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"], [57, "module-torch.fx.experimental.migrate_gradual_types.util"], [57, "module-torch.fx.experimental.migrate_gradual_types.z3_types"], [57, "module-torch.fx.experimental.normalize"], [57, "module-torch.fx.experimental.optimization"], [57, "module-torch.fx.experimental.partitioner_utils"], [57, "module-torch.fx.experimental.proxy_tensor"], [57, "module-torch.fx.experimental.recording"], [57, "module-torch.fx.experimental.refinement_types"], [57, "module-torch.fx.experimental.rewriter"], [57, "module-torch.fx.experimental.schema_type_annotation"], [57, "module-torch.fx.experimental.sym_node"], [57, "module-torch.fx.experimental.symbolic_shapes"], [57, "module-torch.fx.experimental.unification"], [57, "module-torch.fx.experimental.unification.core"], [57, "module-torch.fx.experimental.unification.dispatch"], [57, "module-torch.fx.experimental.unification.match"], [57, "module-torch.fx.experimental.unification.more"], [57, "module-torch.fx.experimental.unification.multipledispatch"], [57, "module-torch.fx.experimental.unification.multipledispatch.conflict"], [57, "module-torch.fx.experimental.unification.multipledispatch.core"], [57, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"], [57, "module-torch.fx.experimental.unification.multipledispatch.utils"], [57, "module-torch.fx.experimental.unification.multipledispatch.variadic"], [57, "module-torch.fx.experimental.unification.unification_tools"], [57, "module-torch.fx.experimental.unification.utils"], [57, "module-torch.fx.experimental.unification.variable"], [57, "module-torch.fx.experimental.unify_refinements"], [57, "module-torch.fx.experimental.validator"], [57, "module-torch.fx.graph"], [57, "module-torch.fx.graph_module"], [57, "module-torch.fx.immutable_collections"], [57, "module-torch.fx.interpreter"], [57, "module-torch.fx.node"], [57, "module-torch.fx.operator_schemas"], [57, "module-torch.fx.passes"], [57, "module-torch.fx.passes.annotate_getitem_nodes"], [57, "module-torch.fx.passes.backends"], [57, "module-torch.fx.passes.backends.cudagraphs"], [57, "module-torch.fx.passes.dialect"], [57, "module-torch.fx.passes.dialect.common"], [57, "module-torch.fx.passes.dialect.common.cse_pass"], [57, "module-torch.fx.passes.fake_tensor_prop"], [57, "module-torch.fx.passes.graph_drawer"], [57, "module-torch.fx.passes.graph_manipulation"], [57, "module-torch.fx.passes.infra"], [57, "module-torch.fx.passes.infra.partitioner"], [57, "module-torch.fx.passes.infra.pass_base"], [57, "module-torch.fx.passes.infra.pass_manager"], [57, "module-torch.fx.passes.net_min_base"], [57, "module-torch.fx.passes.operator_support"], [57, "module-torch.fx.passes.param_fetch"], [57, "module-torch.fx.passes.pass_manager"], [57, "module-torch.fx.passes.reinplace"], [57, "module-torch.fx.passes.shape_prop"], [57, "module-torch.fx.passes.split_module"], [57, "module-torch.fx.passes.split_utils"], [57, "module-torch.fx.passes.splitter_base"], [57, "module-torch.fx.passes.tests"], [57, "module-torch.fx.passes.tests.test_pass_manager"], [57, "module-torch.fx.passes.tools_common"], [57, "module-torch.fx.passes.utils"], [57, "module-torch.fx.passes.utils.common"], [57, "module-torch.fx.passes.utils.fuser_utils"], [57, "module-torch.fx.passes.utils.matcher_utils"], [57, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"], [57, "module-torch.fx.passes.utils.source_matcher_utils"], [57, "module-torch.fx.proxy"], [57, "module-torch.fx.subgraph_rewriter"], [57, "module-torch.fx.tensor_type"], [57, "module-torch.fx.traceback"], [1879, "module-torch.hub"], [1881, "module-torch.jit"], [1881, "module-torch.jit.annotations"], [1881, "module-torch.jit.frontend"], [1881, "module-torch.jit.generate_bytecode"], [1881, "module-torch.jit.mobile"], [1881, "module-torch.jit.quantized"], [1882, "module-torch.jit.supported_ops"], [1886, "module-torch.jit.unsupported_tensor_ops"], [1887, "module-torch.utils.jit"], [1888, "module-torch.library"], [1889, "module-torch.linalg"], [1890, "module-torch._logging"], [1891, "module-torch.masked"], [1891, "module-torch.masked.maskedtensor"], [1891, "module-torch.masked.maskedtensor.binary"], [1891, "module-torch.masked.maskedtensor.core"], [1891, "module-torch.masked.maskedtensor.creation"], [1891, "module-torch.masked.maskedtensor.passthrough"], [1891, "module-torch.masked.maskedtensor.reductions"], [1891, "module-torch.masked.maskedtensor.unary"], [1893, "module-torch.utils.model_zoo"], [1894, "module-torch.monitor"], [1895, "module-torch.mps"], [1895, "module-torch.mps.event"], [1895, "module-torch.mps.profiler"], [1896, "module-torch.multiprocessing"], [1896, "module-torch.multiprocessing.pool"], [1896, "module-torch.multiprocessing.queue"], [1896, "module-torch.multiprocessing.reductions"], [1896, "module-torch.multiprocessing.spawn"], [1899, "module-torch.nested"], [1900, "module-torch.nn"], [1900, "module-torch.nn.backends"], [1900, "module-torch.nn.backends.thnn"], [1900, "module-torch.nn.common_types"], [1900, "module-torch.nn.cpp"], [1900, "module-torch.nn.functional"], [1900, "module-torch.nn.grad"], [1900, "module-torch.nn.init"], [1900, "module-torch.nn.modules"], [1900, "module-torch.nn.modules.activation"], [1900, "module-torch.nn.modules.adaptive"], [1900, "module-torch.nn.modules.batchnorm"], [1900, "module-torch.nn.modules.channelshuffle"], [1900, "module-torch.nn.modules.container"], [1900, "module-torch.nn.modules.conv"], [1900, "module-torch.nn.modules.distance"], [1900, "module-torch.nn.modules.dropout"], [1900, "module-torch.nn.modules.flatten"], [1900, "module-torch.nn.modules.fold"], [1900, "module-torch.nn.modules.instancenorm"], [1900, "module-torch.nn.modules.lazy"], [1900, "module-torch.nn.modules.linear"], [1900, "module-torch.nn.modules.loss"], [1900, "module-torch.nn.modules.module"], [1900, "module-torch.nn.modules.normalization"], [1900, "module-torch.nn.modules.padding"], [1900, "module-torch.nn.modules.pixelshuffle"], [1900, "module-torch.nn.modules.pooling"], [1900, "module-torch.nn.modules.rnn"], [1900, "module-torch.nn.modules.sparse"], [1900, "module-torch.nn.modules.transformer"], [1900, "module-torch.nn.modules.upsampling"], [1900, "module-torch.nn.modules.utils"], [1900, "module-torch.nn.parallel"], [1900, "module-torch.nn.parallel.comm"], [1900, "module-torch.nn.parallel.data_parallel"], [1900, "module-torch.nn.parallel.distributed"], [1900, "module-torch.nn.parallel.parallel_apply"], [1900, "module-torch.nn.parallel.replicate"], [1900, "module-torch.nn.parallel.scatter_gather"], [1900, "module-torch.nn.parameter"], [1900, "module-torch.nn.utils"], [1900, "module-torch.nn.utils.clip_grad"], [1900, "module-torch.nn.utils.convert_parameters"], [1900, "module-torch.nn.utils.fusion"], [1900, "module-torch.nn.utils.init"], [1900, "module-torch.nn.utils.memory_format"], [1900, "module-torch.nn.utils.parametrizations"], [1900, "module-torch.nn.utils.parametrize"], [1900, "module-torch.nn.utils.prune"], [1900, "module-torch.nn.utils.rnn"], [1900, "module-torch.nn.utils.spectral_norm"], [1900, "module-torch.nn.utils.stateless"], [1900, "module-torch.nn.utils.weight_norm"], [1922, "module-torch.onnx.errors"], [1922, "module-torch.onnx.operators"], [1922, "module-torch.onnx.symbolic_caffe2"], [1922, "module-torch.onnx.symbolic_helper"], [1922, "module-torch.onnx.symbolic_opset10"], [1922, "module-torch.onnx.symbolic_opset11"], [1922, "module-torch.onnx.symbolic_opset12"], [1922, "module-torch.onnx.symbolic_opset13"], [1922, "module-torch.onnx.symbolic_opset14"], [1922, "module-torch.onnx.symbolic_opset15"], [1922, "module-torch.onnx.symbolic_opset16"], [1922, "module-torch.onnx.symbolic_opset17"], [1922, "module-torch.onnx.symbolic_opset18"], [1922, "module-torch.onnx.symbolic_opset7"], [1922, "module-torch.onnx.symbolic_opset8"], [1922, "module-torch.onnx.symbolic_opset9"], [1922, "module-torch.onnx.utils"], [1922, "module-torch.onnx.verification"], [1925, "module-torch.onnx"], [1927, "module-torch.optim"], [1927, "module-torch.optim.adadelta"], [1927, "module-torch.optim.adagrad"], [1927, "module-torch.optim.adam"], [1927, "module-torch.optim.adamax"], [1927, "module-torch.optim.adamw"], [1927, "module-torch.optim.asgd"], [1927, "module-torch.optim.lbfgs"], [1927, "module-torch.optim.lr_scheduler"], [1927, "module-torch.optim.nadam"], [1927, "module-torch.optim.optimizer"], [1927, "module-torch.optim.radam"], [1927, "module-torch.optim.rmsprop"], [1927, "module-torch.optim.rprop"], [1927, "module-torch.optim.sgd"], [1927, "module-torch.optim.sparse_adam"], [1927, "module-torch.optim.swa_utils"], [1928, "module-torch.package"], [1928, "module-torch.package.analyze"], [1928, "module-torch.package.analyze.find_first_use_of_broken_modules"], [1928, "module-torch.package.analyze.is_from_package"], [1928, "module-torch.package.analyze.trace_dependencies"], [1928, "module-torch.package.file_structure_representation"], [1928, "module-torch.package.find_file_dependencies"], [1928, "module-torch.package.glob_group"], [1928, "module-torch.package.importer"], [1928, "module-torch.package.package_exporter"], [1928, "module-torch.package.package_importer"], [1930, "module-torch.profiler"], [1930, "module-torch.profiler.itt"], [1930, "module-torch.profiler.profiler"], [1930, "module-torch.profiler.python_tracer"], [1931, "module-torch.ao"], [1931, "module-torch.ao.nn"], [1931, "module-torch.ao.nn.intrinsic.modules.fused"], [1931, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"], [1931, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"], [1931, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"], [1931, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [1931, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"], [1931, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"], [1931, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"], [1931, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"], [1931, "module-torch.ao.nn.qat.dynamic.modules.linear"], [1931, "module-torch.ao.nn.qat.modules.conv"], [1931, "module-torch.ao.nn.qat.modules.embedding_ops"], [1931, "module-torch.ao.nn.qat.modules.linear"], [1931, "module-torch.ao.nn.quantizable"], [1931, "module-torch.ao.nn.quantizable.modules"], [1931, "module-torch.ao.nn.quantizable.modules.activation"], [1931, "module-torch.ao.nn.quantizable.modules.rnn"], [1931, "module-torch.ao.nn.quantized"], [1931, "module-torch.ao.nn.quantized.dynamic.modules.conv"], [1931, "module-torch.ao.nn.quantized.dynamic.modules.linear"], [1931, "module-torch.ao.nn.quantized.dynamic.modules.rnn"], [1931, "module-torch.ao.nn.quantized.modules.activation"], [1931, "module-torch.ao.nn.quantized.modules.batchnorm"], [1931, "module-torch.ao.nn.quantized.modules.conv"], [1931, "module-torch.ao.nn.quantized.modules.dropout"], [1931, "module-torch.ao.nn.quantized.modules.embedding_ops"], [1931, "module-torch.ao.nn.quantized.modules.functional_modules"], [1931, "module-torch.ao.nn.quantized.modules.linear"], [1931, "module-torch.ao.nn.quantized.modules.normalization"], [1931, "module-torch.ao.nn.quantized.modules.rnn"], [1931, "module-torch.ao.nn.quantized.modules.utils"], [1931, "module-torch.ao.nn.quantized.reference"], [1931, "module-torch.ao.nn.quantized.reference.modules"], [1931, "module-torch.ao.nn.quantized.reference.modules.conv"], [1931, "module-torch.ao.nn.quantized.reference.modules.linear"], [1931, "module-torch.ao.nn.quantized.reference.modules.rnn"], [1931, "module-torch.ao.nn.quantized.reference.modules.sparse"], [1931, "module-torch.ao.nn.quantized.reference.modules.utils"], [1931, "module-torch.ao.nn.sparse"], [1931, "module-torch.ao.nn.sparse.quantized"], [1931, "module-torch.ao.nn.sparse.quantized.dynamic"], [1931, "module-torch.ao.nn.sparse.quantized.dynamic.linear"], [1931, "module-torch.ao.nn.sparse.quantized.linear"], [1931, "module-torch.ao.nn.sparse.quantized.utils"], [1931, "module-torch.ao.ns"], [1931, "module-torch.ao.ns.fx"], [1931, "module-torch.ao.ns.fx.graph_matcher"], [1931, "module-torch.ao.ns.fx.graph_passes"], [1931, "module-torch.ao.ns.fx.mappings"], [1931, "module-torch.ao.ns.fx.n_shadows_utils"], [1931, "module-torch.ao.ns.fx.ns_types"], [1931, "module-torch.ao.ns.fx.pattern_utils"], [1931, "module-torch.ao.ns.fx.qconfig_multi_mapping"], [1931, "module-torch.ao.ns.fx.utils"], [1931, "module-torch.ao.ns.fx.weight_utils"], [1931, "module-torch.ao.pruning"], [1931, "module-torch.ao.pruning.scheduler"], [1931, "module-torch.ao.pruning.scheduler.base_scheduler"], [1931, "module-torch.ao.pruning.scheduler.cubic_scheduler"], [1931, "module-torch.ao.pruning.scheduler.lambda_scheduler"], [1931, "module-torch.ao.pruning.sparsifier"], [1931, "module-torch.ao.pruning.sparsifier.base_sparsifier"], [1931, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"], [1931, "module-torch.ao.pruning.sparsifier.utils"], [1931, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"], [1931, "module-torch.ao.quantization"], [1931, "module-torch.ao.quantization.backend_config"], [1931, "module-torch.ao.quantization.backend_config.backend_config"], [1931, "module-torch.ao.quantization.backend_config.executorch"], [1931, "module-torch.ao.quantization.backend_config.fbgemm"], [1931, "module-torch.ao.quantization.backend_config.native"], [1931, "module-torch.ao.quantization.backend_config.observation_type"], [1931, "module-torch.ao.quantization.backend_config.onednn"], [1931, "module-torch.ao.quantization.backend_config.qnnpack"], [1931, "module-torch.ao.quantization.backend_config.tensorrt"], [1931, "module-torch.ao.quantization.backend_config.utils"], [1931, "module-torch.ao.quantization.backend_config.x86"], [1931, "module-torch.ao.quantization.fake_quantize"], [1931, "module-torch.ao.quantization.fuse_modules"], [1931, "module-torch.ao.quantization.fuser_method_mappings"], [1931, "module-torch.ao.quantization.fx"], [1931, "module-torch.ao.quantization.fx.convert"], [1931, "module-torch.ao.quantization.fx.custom_config"], [1931, "module-torch.ao.quantization.fx.fuse"], [1931, "module-torch.ao.quantization.fx.fuse_handler"], [1931, "module-torch.ao.quantization.fx.graph_module"], [1931, "module-torch.ao.quantization.fx.lower_to_fbgemm"], [1931, "module-torch.ao.quantization.fx.lower_to_qnnpack"], [1931, "module-torch.ao.quantization.fx.lstm_utils"], [1931, "module-torch.ao.quantization.fx.match_utils"], [1931, "module-torch.ao.quantization.fx.pattern_utils"], [1931, "module-torch.ao.quantization.fx.prepare"], [1931, "module-torch.ao.quantization.fx.qconfig_mapping_utils"], [1931, "module-torch.ao.quantization.fx.quantize_handler"], [1931, "module-torch.ao.quantization.fx.tracer"], [1931, "module-torch.ao.quantization.fx.utils"], [1931, "module-torch.ao.quantization.observer"], [1931, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"], [1931, "module-torch.ao.quantization.pt2e.eval_utils"], [1931, "module-torch.ao.quantization.pt2e.graph_utils"], [1931, "module-torch.ao.quantization.pt2e.port_metadata_pass"], [1931, "module-torch.ao.quantization.pt2e.prepare"], [1931, "module-torch.ao.quantization.pt2e.qat_utils"], [1931, "module-torch.ao.quantization.pt2e.representation.rewrite"], [1931, "module-torch.ao.quantization.pt2e.utils"], [1931, "module-torch.ao.quantization.qconfig"], [1931, "module-torch.ao.quantization.qconfig_mapping"], [1931, "module-torch.ao.quantization.quant_type"], [1931, "module-torch.ao.quantization.quantization_mappings"], [1931, "module-torch.ao.quantization.quantize"], [1931, "module-torch.ao.quantization.quantize_fx"], [1931, "module-torch.ao.quantization.quantize_jit"], [1931, "module-torch.ao.quantization.quantize_pt2e"], [1931, "module-torch.ao.quantization.quantizer.composable_quantizer"], [1931, "module-torch.ao.quantization.quantizer.embedding_quantizer"], [1931, "module-torch.ao.quantization.quantizer.quantizer"], [1931, "module-torch.ao.quantization.quantizer.utils"], [1931, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"], [1931, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"], [1931, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"], [1931, "module-torch.ao.quantization.stubs"], [1931, "module-torch.ao.quantization.utils"], [1931, "module-torch.nn.intrinsic.modules.fused"], [1931, "module-torch.nn.intrinsic.qat.modules.conv_fused"], [1931, "module-torch.nn.intrinsic.qat.modules.linear_fused"], [1931, "module-torch.nn.intrinsic.qat.modules.linear_relu"], [1931, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [1931, "module-torch.nn.intrinsic.quantized.modules.bn_relu"], [1931, "module-torch.nn.intrinsic.quantized.modules.conv_relu"], [1931, "module-torch.nn.intrinsic.quantized.modules.linear_relu"], [1931, "module-torch.nn.qat.dynamic.modules.linear"], [1931, "module-torch.nn.qat.modules.conv"], [1931, "module-torch.nn.qat.modules.embedding_ops"], [1931, "module-torch.nn.qat.modules.linear"], [1931, "module-torch.nn.quantizable.modules.activation"], [1931, "module-torch.nn.quantizable.modules.rnn"], [1931, "module-torch.nn.quantized.dynamic.modules.conv"], [1931, "module-torch.nn.quantized.dynamic.modules.linear"], [1931, "module-torch.nn.quantized.dynamic.modules.rnn"], [1931, "module-torch.nn.quantized.functional"], [1931, "module-torch.nn.quantized.modules.activation"], [1931, "module-torch.nn.quantized.modules.batchnorm"], [1931, "module-torch.nn.quantized.modules.conv"], [1931, "module-torch.nn.quantized.modules.dropout"], [1931, "module-torch.nn.quantized.modules.embedding_ops"], [1931, "module-torch.nn.quantized.modules.functional_modules"], [1931, "module-torch.nn.quantized.modules.linear"], [1931, "module-torch.nn.quantized.modules.normalization"], [1931, "module-torch.nn.quantized.modules.rnn"], [1931, "module-torch.nn.quantized.modules.utils"], [1931, "module-torch.quantization.fake_quantize"], [1931, "module-torch.quantization.fuse_modules"], [1931, "module-torch.quantization.fuser_method_mappings"], [1931, "module-torch.quantization.fx.convert"], [1931, "module-torch.quantization.fx.fuse"], [1931, "module-torch.quantization.fx.fusion_patterns"], [1931, "module-torch.quantization.fx.graph_module"], [1931, "module-torch.quantization.fx.match_utils"], [1931, "module-torch.quantization.fx.pattern_utils"], [1931, "module-torch.quantization.fx.prepare"], [1931, "module-torch.quantization.fx.quantization_patterns"], [1931, "module-torch.quantization.fx.quantization_types"], [1931, "module-torch.quantization.fx.utils"], [1931, "module-torch.quantization.observer"], [1931, "module-torch.quantization.qconfig"], [1931, "module-torch.quantization.quant_type"], [1931, "module-torch.quantization.quantization_mappings"], [1931, "module-torch.quantization.quantize"], [1931, "module-torch.quantization.quantize_fx"], [1931, "module-torch.quantization.quantize_jit"], [1931, "module-torch.quantization.stubs"], [1931, "module-torch.quantization.utils"], [1934, "module-torch.ao.nn.intrinsic"], [1934, "module-torch.ao.nn.intrinsic.modules"], [1934, "module-torch.ao.nn.intrinsic.qat"], [1934, "module-torch.ao.nn.intrinsic.qat.modules"], [1934, "module-torch.ao.nn.intrinsic.quantized"], [1934, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1934, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1934, "module-torch.ao.nn.intrinsic.quantized.modules"], [1934, "module-torch.ao.nn.qat"], [1934, "module-torch.ao.nn.qat.dynamic"], [1934, "module-torch.ao.nn.qat.dynamic.modules"], [1934, "module-torch.ao.nn.qat.modules"], [1934, "module-torch.ao.nn.quantized.dynamic"], [1934, "module-torch.ao.nn.quantized.dynamic.modules"], [1934, "module-torch.ao.nn.quantized.functional"], [1934, "module-torch.ao.nn.quantized.modules"], [1934, "module-torch.ao.quantization.pt2e"], [1934, "module-torch.ao.quantization.pt2e.representation"], [1934, "module-torch.ao.quantization.quantizer"], [1934, "module-torch.nn.intrinsic"], [1934, "module-torch.nn.intrinsic.modules"], [1934, "module-torch.nn.intrinsic.qat"], [1934, "module-torch.nn.intrinsic.qat.modules"], [1934, "module-torch.nn.intrinsic.quantized"], [1934, "module-torch.nn.intrinsic.quantized.dynamic"], [1934, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1934, "module-torch.nn.intrinsic.quantized.modules"], [1934, "module-torch.nn.qat"], [1934, "module-torch.nn.qat.dynamic"], [1934, "module-torch.nn.qat.dynamic.modules"], [1934, "module-torch.nn.qat.modules"], [1934, "module-torch.nn.quantizable"], [1934, "module-torch.nn.quantizable.modules"], [1934, "module-torch.nn.quantized"], [1934, "module-torch.nn.quantized.dynamic"], [1934, "module-torch.nn.quantized.dynamic.modules"], [1934, "module-torch.nn.quantized.modules"], [1934, "module-torch.quantization"], [1934, "module-torch.quantization.fx"], [1935, "module-torch.random"], [1936, "module-torch.distributed.autograd"], [1936, "module-torch.distributed.rpc"], [1939, "module-torch.signal"], [1939, "module-torch.signal.windows"], [1940, "module-torch.sparse"], [1941, "module-torch.special"], [1945, "module-torch.utils.tensorboard"], [1947, "module-torch.testing"], [1948, "module-torch"], [1948, "module-torch.contrib"], [1948, "module-torch.functional"], [1948, "module-torch.quasirandom"], [1948, "module-torch.return_types"], [1948, "module-torch.serialization"], [1948, "module-torch.signal.windows.windows"], [1948, "module-torch.sparse.semi_structured"], [1948, "module-torch.storage"], [1948, "module-torch.torch_version"], [1948, "module-torch.types"], [1948, "module-torch.utils.backcompat"], [1948, "module-torch.utils.hipify"], [1948, "module-torch.utils.model_dump"], [1948, "module-torch.utils.viz"], [1948, "module-torch.version"], [1949, "module-torch.ao.ns._numeric_suite"], [1950, "module-torch.ao.ns._numeric_suite_fx"], [1952, "module-torch.compiler"], [1970, "module-torch.overrides"], [1973, "module-torch.utils"], [1973, "module-torch.utils.backend_registration"], [1973, "module-torch.utils.benchmark.examples.blas_compare_setup"], [1973, "module-torch.utils.benchmark.examples.compare"], [1973, "module-torch.utils.benchmark.examples.fuzzer"], [1973, "module-torch.utils.benchmark.examples.op_benchmark"], [1973, "module-torch.utils.benchmark.examples.simple_timeit"], [1973, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"], [1973, "module-torch.utils.benchmark.op_fuzzers.binary"], [1973, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"], [1973, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"], [1973, "module-torch.utils.benchmark.op_fuzzers.spectral"], [1973, "module-torch.utils.benchmark.op_fuzzers.unary"], [1973, "module-torch.utils.benchmark.utils.common"], [1973, "module-torch.utils.benchmark.utils.compare"], [1973, "module-torch.utils.benchmark.utils.compile"], [1973, "module-torch.utils.benchmark.utils.cpp_jit"], [1973, "module-torch.utils.benchmark.utils.fuzzer"], [1973, "module-torch.utils.benchmark.utils.sparse_fuzzer"], [1973, "module-torch.utils.benchmark.utils.timer"], [1973, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"], [1973, "module-torch.utils.bundled_inputs"], [1973, "module-torch.utils.checkpoint"], [1973, "module-torch.utils.collect_env"], [1973, "module-torch.utils.cpp_backtrace"], [1973, "module-torch.utils.cpp_extension"], [1973, "module-torch.utils.data.backward_compatibility"], [1973, "module-torch.utils.data.dataloader"], [1973, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"], [1973, "module-torch.utils.data.datapipes.dataframe.dataframes"], [1973, "module-torch.utils.data.datapipes.dataframe.datapipes"], [1973, "module-torch.utils.data.datapipes.dataframe.structures"], [1973, "module-torch.utils.data.datapipes.datapipe"], [1973, "module-torch.utils.data.datapipes.gen_pyi"], [1973, "module-torch.utils.data.datapipes.iter.callable"], [1973, "module-torch.utils.data.datapipes.iter.combinatorics"], [1973, "module-torch.utils.data.datapipes.iter.combining"], [1973, "module-torch.utils.data.datapipes.iter.filelister"], [1973, "module-torch.utils.data.datapipes.iter.fileopener"], [1973, "module-torch.utils.data.datapipes.iter.grouping"], [1973, "module-torch.utils.data.datapipes.iter.routeddecoder"], [1973, "module-torch.utils.data.datapipes.iter.selecting"], [1973, "module-torch.utils.data.datapipes.iter.sharding"], [1973, "module-torch.utils.data.datapipes.iter.streamreader"], [1973, "module-torch.utils.data.datapipes.iter.utils"], [1973, "module-torch.utils.data.datapipes.map.callable"], [1973, "module-torch.utils.data.datapipes.map.combinatorics"], [1973, "module-torch.utils.data.datapipes.map.combining"], [1973, "module-torch.utils.data.datapipes.map.grouping"], [1973, "module-torch.utils.data.datapipes.map.utils"], [1973, "module-torch.utils.data.datapipes.utils.common"], [1973, "module-torch.utils.data.datapipes.utils.decoder"], [1973, "module-torch.utils.data.datapipes.utils.snapshot"], [1973, "module-torch.utils.data.dataset"], [1973, "module-torch.utils.data.distributed"], [1973, "module-torch.utils.data.graph"], [1973, "module-torch.utils.data.graph_settings"], [1973, "module-torch.utils.data.sampler"], [1973, "module-torch.utils.dlpack"], [1973, "module-torch.utils.file_baton"], [1973, "module-torch.utils.flop_counter"], [1973, "module-torch.utils.hipify.constants"], [1973, "module-torch.utils.hipify.cuda_to_hip_mappings"], [1973, "module-torch.utils.hipify.hipify_python"], [1973, "module-torch.utils.hipify.version"], [1973, "module-torch.utils.hooks"], [1973, "module-torch.utils.jit.log_extract"], [1973, "module-torch.utils.mkldnn"], [1973, "module-torch.utils.mobile_optimizer"], [1973, "module-torch.utils.show_pickle"], [1973, "module-torch.utils.tensorboard.summary"], [1973, "module-torch.utils.tensorboard.writer"], [1973, "module-torch.utils.throughput_benchmark"], [1973, "module-torch.utils.weak"]], "scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[0, "module-torch.amp"]], "torch.amp.autocast_mode": [[0, "module-torch.amp.autocast_mode"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cpu.amp.autocast_mode": [[0, "module-torch.cpu.amp.autocast_mode"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "torch.cuda.amp.autocast_mode": [[0, "module-torch.cuda.amp.autocast_mode"]], "torch.cuda.amp.common": [[0, "module-torch.cuda.amp.common"]], "torch.cuda.amp.grad_scaler": [[0, "module-torch.cuda.amp.grad_scaler"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "gradientedge (class in torch.autograd.graph)": [[1, "torch.autograd.graph.GradientEdge"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "get_gradient_edge() (in module torch.autograd.graph)": [[1, "torch.autograd.graph.get_gradient_edge"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "torch.autograd.anomaly_mode": [[1, "module-torch.autograd.anomaly_mode"]], "torch.autograd.forward_ad": [[1, "module-torch.autograd.forward_ad"]], "torch.autograd.function": [[1, "module-torch.autograd.function"]], "torch.autograd.functional": [[1, "module-torch.autograd.functional"]], "torch.autograd.grad_mode": [[1, "module-torch.autograd.grad_mode"]], "torch.autograd.gradcheck": [[1, "module-torch.autograd.gradcheck"]], "torch.autograd.graph": [[1, "module-torch.autograd.graph"]], "torch.autograd.profiler": [[1, "module-torch.autograd.profiler"]], "torch.autograd.profiler_legacy": [[1, "module-torch.autograd.profiler_legacy"]], "torch.autograd.profiler_util": [[1, "module-torch.autograd.profiler_util"]], "torch.autograd.variable": [[1, "module-torch.autograd.variable"]], "sdpbackend (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.cudnn.rnn": [[2, "module-torch.backends.cudnn.rnn"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xeon.run_cpu": [[2, "module-torch.backends.xeon.run_cpu"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "adaptive_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.adaptive_autorange"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "set_checkpoint_debug_enabled() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.set_checkpoint_debug_enabled"]], "cond() (in module torch._higher_order_ops.cond)": [[12, "torch._higher_order_ops.cond.cond"]], "parallel_info() (in module torch.__config__)": [[13, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[13, "torch.__config__.show"]], "torch.__config__": [[13, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[16, "module-torch.cpu"]], "torch.cuda": [[17, "module-torch.cuda"]], "torch.cuda.comm": [[17, "module-torch.cuda.comm"]], "torch.cuda.error": [[17, "module-torch.cuda.error"]], "torch.cuda.graphs": [[17, "module-torch.cuda.graphs"]], "torch.cuda.jiterator": [[17, "module-torch.cuda.jiterator"]], "torch.cuda.memory": [[17, "module-torch.cuda.memory"]], "torch.cuda.nccl": [[17, "module-torch.cuda.nccl"]], "torch.cuda.nvtx": [[17, "module-torch.cuda.nvtx"]], "torch.cuda.profiler": [[17, "module-torch.cuda.profiler"]], "torch.cuda.random": [[17, "module-torch.cuda.random"]], "torch.cuda.sparse": [[17, "module-torch.cuda.sparse"]], "torch.cuda.streams": [[17, "module-torch.cuda.streams"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[18, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[18, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[21, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[21, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[21, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[21, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[21, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[21, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[21, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[21, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[21, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[21, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[21, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[21, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[21, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[21, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[21, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[21, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[21, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[21, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[21, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[21, "torch.utils.data.random_split"]], "torch.utils.data": [[21, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[21, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[21, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[21, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[21, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[21, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[22, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.set_buffer"]], "fill_uninitialized_memory (in module torch.utils.deterministic)": [[24, "torch.utils.deterministic.fill_uninitialized_memory"]], "torch.utils.deterministic": [[24, "module-torch.utils.deterministic"]], "backend (class in torch.distributed)": [[25, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[25, "torch.distributed.DistBackendError"]], "disterror (class in torch.distributed)": [[25, "torch.distributed.DistError"]], "distnetworkerror (class in torch.distributed)": [[25, "torch.distributed.DistNetworkError"]], "diststoreerror (class in torch.distributed)": [[25, "torch.distributed.DistStoreError"]], "filestore (class in torch.distributed)": [[25, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[25, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[25, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[25, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[25, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[25, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[25, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[25, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[25, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[25, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[25, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[25, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[25, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[25, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[25, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[25, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[25, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[25, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[25, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[25, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[25, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[25, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[25, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[25, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[25, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[25, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[25, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[25, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[25, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[25, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[25, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[25, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[25, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[25, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[25, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[25, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[25, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[25, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[25, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[25, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[25, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[25, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[25, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[25, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[25, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[25, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[25, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[25, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[25, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[25, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[25, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[25, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[25, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[25, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[25, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[25, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[25, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[25, "module-torch.distributed"]], "torch.distributed.algorithms": [[25, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.post_localsgd_hook": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"]], "torch.distributed.algorithms.join": [[25, "module-torch.distributed.algorithms.join"]], "torch.distributed.algorithms.model_averaging": [[25, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.algorithms.model_averaging.averagers": [[25, "module-torch.distributed.algorithms.model_averaging.averagers"]], "torch.distributed.algorithms.model_averaging.hierarchical_model_averager": [[25, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"]], "torch.distributed.algorithms.model_averaging.utils": [[25, "module-torch.distributed.algorithms.model_averaging.utils"]], "torch.distributed.argparse_util": [[25, "module-torch.distributed.argparse_util"]], "torch.distributed.c10d_logger": [[25, "module-torch.distributed.c10d_logger"]], "torch.distributed.checkpoint.api": [[25, "module-torch.distributed.checkpoint.api"]], "torch.distributed.checkpoint.default_planner": [[25, "module-torch.distributed.checkpoint.default_planner"]], "torch.distributed.checkpoint.filesystem": [[25, "module-torch.distributed.checkpoint.filesystem"]], "torch.distributed.checkpoint.metadata": [[25, "module-torch.distributed.checkpoint.metadata"]], "torch.distributed.checkpoint.optimizer": [[25, "module-torch.distributed.checkpoint.optimizer"]], "torch.distributed.checkpoint.planner": [[25, "module-torch.distributed.checkpoint.planner"]], "torch.distributed.checkpoint.planner_helpers": [[25, "module-torch.distributed.checkpoint.planner_helpers"]], "torch.distributed.checkpoint.resharding": [[25, "module-torch.distributed.checkpoint.resharding"]], "torch.distributed.checkpoint.state_dict": [[25, "module-torch.distributed.checkpoint.state_dict"]], "torch.distributed.checkpoint.state_dict_loader": [[25, "module-torch.distributed.checkpoint.state_dict_loader"]], "torch.distributed.checkpoint.state_dict_saver": [[25, "module-torch.distributed.checkpoint.state_dict_saver"]], "torch.distributed.checkpoint.storage": [[25, "module-torch.distributed.checkpoint.storage"]], "torch.distributed.checkpoint.utils": [[25, "module-torch.distributed.checkpoint.utils"]], "torch.distributed.collective_utils": [[25, "module-torch.distributed.collective_utils"]], "torch.distributed.constants": [[25, "module-torch.distributed.constants"]], "torch.distributed.distributed_c10d": [[25, "module-torch.distributed.distributed_c10d"]], "torch.distributed.elastic": [[25, "module-torch.distributed.elastic"]], "torch.distributed.elastic.agent.server.api": [[25, "module-torch.distributed.elastic.agent.server.api"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[25, "module-torch.distributed.elastic.agent.server.local_elastic_agent"]], "torch.distributed.elastic.events.api": [[25, "module-torch.distributed.elastic.events.api"]], "torch.distributed.elastic.events.handlers": [[25, "module-torch.distributed.elastic.events.handlers"]], "torch.distributed.elastic.metrics.api": [[25, "module-torch.distributed.elastic.metrics.api"]], "torch.distributed.elastic.multiprocessing.api": [[25, "module-torch.distributed.elastic.multiprocessing.api"]], "torch.distributed.elastic.multiprocessing.errors.error_handler": [[25, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"]], "torch.distributed.elastic.multiprocessing.errors.handlers": [[25, "module-torch.distributed.elastic.multiprocessing.errors.handlers"]], "torch.distributed.elastic.multiprocessing.redirects": [[25, "module-torch.distributed.elastic.multiprocessing.redirects"]], "torch.distributed.elastic.multiprocessing.tail_log": [[25, "module-torch.distributed.elastic.multiprocessing.tail_log"]], "torch.distributed.elastic.rendezvous.api": [[25, "module-torch.distributed.elastic.rendezvous.api"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[25, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[25, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.etcd_server": [[25, "module-torch.distributed.elastic.rendezvous.etcd_server"]], "torch.distributed.elastic.rendezvous.etcd_store": [[25, "module-torch.distributed.elastic.rendezvous.etcd_store"]], "torch.distributed.elastic.rendezvous.static_tcp_rendezvous": [[25, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"]], "torch.distributed.elastic.rendezvous.utils": [[25, "module-torch.distributed.elastic.rendezvous.utils"]], "torch.distributed.elastic.timer.api": [[25, "module-torch.distributed.elastic.timer.api"]], "torch.distributed.elastic.timer.file_based_local_timer": [[25, "module-torch.distributed.elastic.timer.file_based_local_timer"]], "torch.distributed.elastic.timer.local_timer": [[25, "module-torch.distributed.elastic.timer.local_timer"]], "torch.distributed.elastic.utils": [[25, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.api": [[25, "module-torch.distributed.elastic.utils.api"]], "torch.distributed.elastic.utils.data": [[25, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.elastic.utils.data.cycling_iterator": [[25, "module-torch.distributed.elastic.utils.data.cycling_iterator"]], "torch.distributed.elastic.utils.data.elastic_distributed_sampler": [[25, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"]], "torch.distributed.elastic.utils.distributed": [[25, "module-torch.distributed.elastic.utils.distributed"]], "torch.distributed.elastic.utils.log_level": [[25, "module-torch.distributed.elastic.utils.log_level"]], "torch.distributed.elastic.utils.logging": [[25, "module-torch.distributed.elastic.utils.logging"]], "torch.distributed.elastic.utils.store": [[25, "module-torch.distributed.elastic.utils.store"]], "torch.distributed.fsdp.api": [[25, "module-torch.distributed.fsdp.api"]], "torch.distributed.fsdp.fully_sharded_data_parallel": [[25, "module-torch.distributed.fsdp.fully_sharded_data_parallel"]], "torch.distributed.fsdp.sharded_grad_scaler": [[25, "module-torch.distributed.fsdp.sharded_grad_scaler"]], "torch.distributed.fsdp.wrap": [[25, "module-torch.distributed.fsdp.wrap"]], "torch.distributed.launch": [[25, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[25, "module-torch.distributed.launcher"]], "torch.distributed.launcher.api": [[25, "module-torch.distributed.launcher.api"]], "torch.distributed.logging_handlers": [[25, "module-torch.distributed.logging_handlers"]], "torch.distributed.nn": [[25, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[25, "module-torch.distributed.nn.api"]], "torch.distributed.nn.api.remote_module": [[25, "module-torch.distributed.nn.api.remote_module"]], "torch.distributed.nn.functional": [[25, "module-torch.distributed.nn.functional"]], "torch.distributed.nn.jit": [[25, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.instantiator": [[25, "module-torch.distributed.nn.jit.instantiator"]], "torch.distributed.nn.jit.templates": [[25, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.nn.jit.templates.remote_module_template": [[25, "module-torch.distributed.nn.jit.templates.remote_module_template"]], "torch.distributed.optim.apply_optimizer_in_backward": [[25, "module-torch.distributed.optim.apply_optimizer_in_backward"]], "torch.distributed.optim.functional_adadelta": [[25, "module-torch.distributed.optim.functional_adadelta"]], "torch.distributed.optim.functional_adagrad": [[25, "module-torch.distributed.optim.functional_adagrad"]], "torch.distributed.optim.functional_adam": [[25, "module-torch.distributed.optim.functional_adam"]], "torch.distributed.optim.functional_adamax": [[25, "module-torch.distributed.optim.functional_adamax"]], "torch.distributed.optim.functional_adamw": [[25, "module-torch.distributed.optim.functional_adamw"]], "torch.distributed.optim.functional_rmsprop": [[25, "module-torch.distributed.optim.functional_rmsprop"]], "torch.distributed.optim.functional_rprop": [[25, "module-torch.distributed.optim.functional_rprop"]], "torch.distributed.optim.functional_sgd": [[25, "module-torch.distributed.optim.functional_sgd"]], "torch.distributed.optim.named_optimizer": [[25, "module-torch.distributed.optim.named_optimizer"]], "torch.distributed.optim.optimizer": [[25, "module-torch.distributed.optim.optimizer"]], "torch.distributed.optim.post_localsgd_optimizer": [[25, "module-torch.distributed.optim.post_localSGD_optimizer"]], "torch.distributed.optim.utils": [[25, "module-torch.distributed.optim.utils"]], "torch.distributed.optim.zero_redundancy_optimizer": [[25, "module-torch.distributed.optim.zero_redundancy_optimizer"]], "torch.distributed.pipeline": [[25, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[25, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.batchnorm": [[25, "module-torch.distributed.pipeline.sync.batchnorm"]], "torch.distributed.pipeline.sync.checkpoint": [[25, "module-torch.distributed.pipeline.sync.checkpoint"]], "torch.distributed.pipeline.sync.copy": [[25, "module-torch.distributed.pipeline.sync.copy"]], "torch.distributed.pipeline.sync.dependency": [[25, "module-torch.distributed.pipeline.sync.dependency"]], "torch.distributed.pipeline.sync.microbatch": [[25, "module-torch.distributed.pipeline.sync.microbatch"]], "torch.distributed.pipeline.sync.phony": [[25, "module-torch.distributed.pipeline.sync.phony"]], "torch.distributed.pipeline.sync.pipe": [[25, "module-torch.distributed.pipeline.sync.pipe"]], "torch.distributed.pipeline.sync.pipeline": [[25, "module-torch.distributed.pipeline.sync.pipeline"]], "torch.distributed.pipeline.sync.skip": [[25, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.pipeline.sync.skip.layout": [[25, "module-torch.distributed.pipeline.sync.skip.layout"]], "torch.distributed.pipeline.sync.skip.namespace": [[25, "module-torch.distributed.pipeline.sync.skip.namespace"]], "torch.distributed.pipeline.sync.skip.portal": [[25, "module-torch.distributed.pipeline.sync.skip.portal"]], "torch.distributed.pipeline.sync.skip.skippable": [[25, "module-torch.distributed.pipeline.sync.skip.skippable"]], "torch.distributed.pipeline.sync.skip.tracker": [[25, "module-torch.distributed.pipeline.sync.skip.tracker"]], "torch.distributed.pipeline.sync.stream": [[25, "module-torch.distributed.pipeline.sync.stream"]], "torch.distributed.pipeline.sync.utils": [[25, "module-torch.distributed.pipeline.sync.utils"]], "torch.distributed.pipeline.sync.worker": [[25, "module-torch.distributed.pipeline.sync.worker"]], "torch.distributed.remote_device": [[25, "module-torch.distributed.remote_device"]], "torch.distributed.rendezvous": [[25, "module-torch.distributed.rendezvous"]], "torch.distributed.rpc.api": [[25, "module-torch.distributed.rpc.api"]], "torch.distributed.rpc.backend_registry": [[25, "module-torch.distributed.rpc.backend_registry"]], "torch.distributed.rpc.constants": [[25, "module-torch.distributed.rpc.constants"]], "torch.distributed.rpc.functions": [[25, "module-torch.distributed.rpc.functions"]], "torch.distributed.rpc.internal": [[25, "module-torch.distributed.rpc.internal"]], "torch.distributed.rpc.options": [[25, "module-torch.distributed.rpc.options"]], "torch.distributed.rpc.rref_proxy": [[25, "module-torch.distributed.rpc.rref_proxy"]], "torch.distributed.rpc.server_process_global_profiler": [[25, "module-torch.distributed.rpc.server_process_global_profiler"]], "torch.distributed.tensor": [[25, "module-torch.distributed.tensor"]], "torch.distributed.tensor.parallel.api": [[25, "module-torch.distributed.tensor.parallel.api"]], "torch.distributed.tensor.parallel.ddp": [[25, "module-torch.distributed.tensor.parallel.ddp"]], "torch.distributed.tensor.parallel.fsdp": [[25, "module-torch.distributed.tensor.parallel.fsdp"]], "torch.distributed.tensor.parallel.input_reshard": [[25, "module-torch.distributed.tensor.parallel.input_reshard"]], "torch.distributed.tensor.parallel.style": [[25, "module-torch.distributed.tensor.parallel.style"]], "torch.distributed.utils": [[25, "module-torch.distributed.utils"]], "wait() (in module torch.distributed.store)": [[25, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[26, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[26, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[26, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[26, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[26, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[26, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[26, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[26, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[26, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.SavePlanner"]], "statedictoptions (class in torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.StateDictOptions"]], "storagereader (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "get_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.get_state_dict"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[27, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[27, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.save_state_dict"]], "set_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.set_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[27, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[27, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[27, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[29, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[29, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[29, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "preparemoduleinput() (in module torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.PrepareModuleInput"]], "preparemoduleoutput() (in module torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.PrepareModuleOutput"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[30, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[30, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.parallelize_module"]], "pre_dp_module_transform() (in module torch.distributed.tensor.parallel.ddp)": [[30, "torch.distributed.tensor.parallel.ddp.pre_dp_module_transform"]], "torch.distributed.tensor.parallel": [[30, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[31, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[31, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[31, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[31, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[31, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[31, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[31, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[31, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[31, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[31, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[31, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[31, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[31, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[31, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[31, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[31, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[31, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[31, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[31, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[31, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[31, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[31, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[31, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[31, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[31, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[31, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[31, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[31, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[31, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[31, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[31, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[31, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[31, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[31, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[31, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[31, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[31, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[31, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[31, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[31, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[31, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[31, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[31, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[31, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[31, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[31, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[31, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[31, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[31, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[31, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[31, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[31, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[31, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[31, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[31, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[31, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[31, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[31, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[31, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[31, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[31, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[31, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[31, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[31, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[31, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[31, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[31, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[31, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[31, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[31, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[31, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[31, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[31, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[31, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[31, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[31, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[31, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[31, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[31, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[31, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[31, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[31, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[31, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[31, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[31, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[31, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[31, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[31, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[31, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[31, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[31, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[31, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[31, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[31, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[31, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[31, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[31, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[31, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[31, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[31, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[31, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[31, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[31, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[31, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[31, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[31, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[31, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[31, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[31, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[31, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[31, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[31, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[31, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[31, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[31, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[31, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[31, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[31, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[31, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[31, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[31, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[31, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[31, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[31, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[31, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[31, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[31, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[31, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[31, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[31, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[31, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[31, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[31, "module-torch.distributions"]], "torch.distributions.bernoulli": [[31, "module-torch.distributions.bernoulli"]], "torch.distributions.beta": [[31, "module-torch.distributions.beta"]], "torch.distributions.binomial": [[31, "module-torch.distributions.binomial"]], "torch.distributions.categorical": [[31, "module-torch.distributions.categorical"]], "torch.distributions.cauchy": [[31, "module-torch.distributions.cauchy"]], "torch.distributions.chi2": [[31, "module-torch.distributions.chi2"]], "torch.distributions.constraint_registry": [[31, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[31, "module-torch.distributions.constraints"]], "torch.distributions.continuous_bernoulli": [[31, "module-torch.distributions.continuous_bernoulli"]], "torch.distributions.dirichlet": [[31, "module-torch.distributions.dirichlet"]], "torch.distributions.distribution": [[31, "module-torch.distributions.distribution"]], "torch.distributions.exp_family": [[31, "module-torch.distributions.exp_family"]], "torch.distributions.exponential": [[31, "module-torch.distributions.exponential"]], "torch.distributions.fishersnedecor": [[31, "module-torch.distributions.fishersnedecor"]], "torch.distributions.gamma": [[31, "module-torch.distributions.gamma"]], "torch.distributions.geometric": [[31, "module-torch.distributions.geometric"]], "torch.distributions.gumbel": [[31, "module-torch.distributions.gumbel"]], "torch.distributions.half_cauchy": [[31, "module-torch.distributions.half_cauchy"]], "torch.distributions.half_normal": [[31, "module-torch.distributions.half_normal"]], "torch.distributions.independent": [[31, "module-torch.distributions.independent"]], "torch.distributions.kl": [[31, "module-torch.distributions.kl"]], "torch.distributions.kumaraswamy": [[31, "module-torch.distributions.kumaraswamy"]], "torch.distributions.laplace": [[31, "module-torch.distributions.laplace"]], "torch.distributions.lkj_cholesky": [[31, "module-torch.distributions.lkj_cholesky"]], "torch.distributions.log_normal": [[31, "module-torch.distributions.log_normal"]], "torch.distributions.logistic_normal": [[31, "module-torch.distributions.logistic_normal"]], "torch.distributions.lowrank_multivariate_normal": [[31, "module-torch.distributions.lowrank_multivariate_normal"]], "torch.distributions.mixture_same_family": [[31, "module-torch.distributions.mixture_same_family"]], "torch.distributions.multinomial": [[31, "module-torch.distributions.multinomial"]], "torch.distributions.multivariate_normal": [[31, "module-torch.distributions.multivariate_normal"]], "torch.distributions.negative_binomial": [[31, "module-torch.distributions.negative_binomial"]], "torch.distributions.normal": [[31, "module-torch.distributions.normal"]], "torch.distributions.one_hot_categorical": [[31, "module-torch.distributions.one_hot_categorical"]], "torch.distributions.pareto": [[31, "module-torch.distributions.pareto"]], "torch.distributions.poisson": [[31, "module-torch.distributions.poisson"]], "torch.distributions.relaxed_bernoulli": [[31, "module-torch.distributions.relaxed_bernoulli"]], "torch.distributions.relaxed_categorical": [[31, "module-torch.distributions.relaxed_categorical"]], "torch.distributions.studentt": [[31, "module-torch.distributions.studentT"]], "torch.distributions.transformed_distribution": [[31, "module-torch.distributions.transformed_distribution"]], "torch.distributions.transforms": [[31, "module-torch.distributions.transforms"]], "torch.distributions.uniform": [[31, "module-torch.distributions.uniform"]], "torch.distributions.utils": [[31, "module-torch.distributions.utils"]], "torch.distributions.von_mises": [[31, "module-torch.distributions.von_mises"]], "torch.distributions.weibull": [[31, "module-torch.distributions.weibull"]], "torch.distributions.wishart": [[31, "module-torch.distributions.wishart"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[31, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[31, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[31, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[31, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[31, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[31, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[31, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[31, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[32, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[32, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[33, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[33, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[33, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[33, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[33, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[33, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[33, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[33, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[35, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[36, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[36, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[36, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[36, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[36, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[36, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[39, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[39, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[39, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[39, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[39, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[39, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[39, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[40, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[40, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[42, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[42, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[42, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[43, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[44, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[44, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[44, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[44, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[44, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[44, "module-torch.distributed.elastic.timer"]], "constraint (class in torch.export)": [[46, "torch.export.Constraint"]], "dim() (in module torch.export)": [[46, "torch.export.Dim"]], "exportbackwardsignature (class in torch.export)": [[46, "torch.export.ExportBackwardSignature"]], "exportgraphsignature (class in torch.export)": [[46, "torch.export.ExportGraphSignature"]], "exportedprogram (class in torch.export)": [[46, "torch.export.ExportedProgram"]], "inputkind (class in torch.export.exported_program)": [[46, "torch.export.exported_program.InputKind"]], "inputspec (class in torch.export.exported_program)": [[46, "torch.export.exported_program.InputSpec"]], "modulecallentry (class in torch.export)": [[46, "torch.export.ModuleCallEntry"]], "modulecallsignature (class in torch.export)": [[46, "torch.export.ModuleCallSignature"]], "outputkind (class in torch.export.exported_program)": [[46, "torch.export.exported_program.OutputKind"]], "outputspec (class in torch.export.exported_program)": [[46, "torch.export.exported_program.OutputSpec"]], "buffers() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.buffers"]], "dims() (in module torch.export)": [[46, "torch.export.dims"]], "dynamic_dim() (in module torch.export)": [[46, "torch.export.dynamic_dim"]], "export() (in module torch.export)": [[46, "torch.export.export"]], "load() (in module torch.export)": [[46, "torch.export.load"]], "module() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.module"]], "named_buffers() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.named_buffers"]], "named_parameters() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.named_parameters"]], "parameters() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.parameters"]], "register_dataclass() (in module torch.export)": [[46, "torch.export.register_dataclass"]], "save() (in module torch.export)": [[46, "torch.export.save"]], "torch.export": [[46, "module-torch.export"]], "torch.export.exported_program": [[46, "module-torch.export.exported_program"]], "torch.fft": [[48, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[49, "module-torch.distributed.fsdp"]], "torch.func": [[51, "module-torch.func"]], "future (class in torch.futures)": [[56, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[56, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[56, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[56, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[56, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[56, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[56, "torch.futures.Future.then"]], "torch.futures": [[56, "module-torch.futures"]], "value() (torch.futures.future method)": [[56, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[56, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[56, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[57, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[57, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[57, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[57, "torch.fx.Node"]], "proxy (class in torch.fx)": [[57, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[57, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[57, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[57, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[57, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[57, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[57, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[57, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[57, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[57, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[57, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[57, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[57, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[57, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[57, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[57, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[57, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[57, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[57, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[57, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[57, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[57, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[57, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[57, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[57, "torch.fx.Graph.graph_copy"]], "insert_arg() (torch.fx.node method)": [[57, "torch.fx.Node.insert_arg"]], "inserting_after() (torch.fx.graph method)": [[57, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[57, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[57, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[57, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[57, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[57, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[57, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[57, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[57, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[57, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[57, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[57, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[57, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[57, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[57, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[57, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[57, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[57, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[57, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[57, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[57, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[57, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[57, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[57, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[57, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[57, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[57, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[57, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[57, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[57, "module-torch.fx"]], "torch.fx.annotate": [[57, "module-torch.fx.annotate"]], "torch.fx.config": [[57, "module-torch.fx.config"]], "torch.fx.experimental": [[57, "module-torch.fx.experimental"]], "torch.fx.experimental.accelerator_partitioner": [[57, "module-torch.fx.experimental.accelerator_partitioner"]], "torch.fx.experimental.const_fold": [[57, "module-torch.fx.experimental.const_fold"]], "torch.fx.experimental.debug": [[57, "module-torch.fx.experimental.debug"]], "torch.fx.experimental.graph_gradual_typechecker": [[57, "module-torch.fx.experimental.graph_gradual_typechecker"]], "torch.fx.experimental.merge_matmul": [[57, "module-torch.fx.experimental.merge_matmul"]], "torch.fx.experimental.meta_tracer": [[57, "module-torch.fx.experimental.meta_tracer"]], "torch.fx.experimental.migrate_gradual_types": [[57, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.migrate_gradual_types.constraint": [[57, "module-torch.fx.experimental.migrate_gradual_types.constraint"]], "torch.fx.experimental.migrate_gradual_types.constraint_generator": [[57, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"]], "torch.fx.experimental.migrate_gradual_types.constraint_transformation": [[57, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"]], "torch.fx.experimental.migrate_gradual_types.operation": [[57, "module-torch.fx.experimental.migrate_gradual_types.operation"]], "torch.fx.experimental.migrate_gradual_types.transform_to_z3": [[57, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"]], "torch.fx.experimental.migrate_gradual_types.util": [[57, "module-torch.fx.experimental.migrate_gradual_types.util"]], "torch.fx.experimental.migrate_gradual_types.z3_types": [[57, "module-torch.fx.experimental.migrate_gradual_types.z3_types"]], "torch.fx.experimental.normalize": [[57, "module-torch.fx.experimental.normalize"]], "torch.fx.experimental.optimization": [[57, "module-torch.fx.experimental.optimization"]], "torch.fx.experimental.partitioner_utils": [[57, "module-torch.fx.experimental.partitioner_utils"]], "torch.fx.experimental.proxy_tensor": [[57, "module-torch.fx.experimental.proxy_tensor"]], "torch.fx.experimental.recording": [[57, "module-torch.fx.experimental.recording"]], "torch.fx.experimental.refinement_types": [[57, "module-torch.fx.experimental.refinement_types"]], "torch.fx.experimental.rewriter": [[57, "module-torch.fx.experimental.rewriter"]], "torch.fx.experimental.schema_type_annotation": [[57, "module-torch.fx.experimental.schema_type_annotation"]], "torch.fx.experimental.sym_node": [[57, "module-torch.fx.experimental.sym_node"]], "torch.fx.experimental.symbolic_shapes": [[57, "module-torch.fx.experimental.symbolic_shapes"]], "torch.fx.experimental.unification": [[57, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.core": [[57, "module-torch.fx.experimental.unification.core"]], "torch.fx.experimental.unification.dispatch": [[57, "module-torch.fx.experimental.unification.dispatch"]], "torch.fx.experimental.unification.match": [[57, "module-torch.fx.experimental.unification.match"]], "torch.fx.experimental.unification.more": [[57, "module-torch.fx.experimental.unification.more"]], "torch.fx.experimental.unification.multipledispatch": [[57, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.experimental.unification.multipledispatch.conflict": [[57, "module-torch.fx.experimental.unification.multipledispatch.conflict"]], "torch.fx.experimental.unification.multipledispatch.core": [[57, "module-torch.fx.experimental.unification.multipledispatch.core"]], "torch.fx.experimental.unification.multipledispatch.dispatcher": [[57, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"]], "torch.fx.experimental.unification.multipledispatch.utils": [[57, "module-torch.fx.experimental.unification.multipledispatch.utils"]], "torch.fx.experimental.unification.multipledispatch.variadic": [[57, "module-torch.fx.experimental.unification.multipledispatch.variadic"]], "torch.fx.experimental.unification.unification_tools": [[57, "module-torch.fx.experimental.unification.unification_tools"]], "torch.fx.experimental.unification.utils": [[57, "module-torch.fx.experimental.unification.utils"]], "torch.fx.experimental.unification.variable": [[57, "module-torch.fx.experimental.unification.variable"]], "torch.fx.experimental.unify_refinements": [[57, "module-torch.fx.experimental.unify_refinements"]], "torch.fx.experimental.validator": [[57, "module-torch.fx.experimental.validator"]], "torch.fx.graph": [[57, "module-torch.fx.graph"]], "torch.fx.graph_module": [[57, "module-torch.fx.graph_module"]], "torch.fx.immutable_collections": [[57, "module-torch.fx.immutable_collections"]], "torch.fx.interpreter": [[57, "module-torch.fx.interpreter"]], "torch.fx.node": [[57, "module-torch.fx.node"]], "torch.fx.operator_schemas": [[57, "module-torch.fx.operator_schemas"]], "torch.fx.passes": [[57, "module-torch.fx.passes"]], "torch.fx.passes.annotate_getitem_nodes": [[57, "module-torch.fx.passes.annotate_getitem_nodes"]], "torch.fx.passes.backends": [[57, "module-torch.fx.passes.backends"]], "torch.fx.passes.backends.cudagraphs": [[57, "module-torch.fx.passes.backends.cudagraphs"]], "torch.fx.passes.dialect": [[57, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[57, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.dialect.common.cse_pass": [[57, "module-torch.fx.passes.dialect.common.cse_pass"]], "torch.fx.passes.fake_tensor_prop": [[57, "module-torch.fx.passes.fake_tensor_prop"]], "torch.fx.passes.graph_drawer": [[57, "module-torch.fx.passes.graph_drawer"]], "torch.fx.passes.graph_manipulation": [[57, "module-torch.fx.passes.graph_manipulation"]], "torch.fx.passes.infra": [[57, "module-torch.fx.passes.infra"]], "torch.fx.passes.infra.partitioner": [[57, "module-torch.fx.passes.infra.partitioner"]], "torch.fx.passes.infra.pass_base": [[57, "module-torch.fx.passes.infra.pass_base"]], "torch.fx.passes.infra.pass_manager": [[57, "module-torch.fx.passes.infra.pass_manager"]], "torch.fx.passes.net_min_base": [[57, "module-torch.fx.passes.net_min_base"]], "torch.fx.passes.operator_support": [[57, "module-torch.fx.passes.operator_support"]], "torch.fx.passes.param_fetch": [[57, "module-torch.fx.passes.param_fetch"]], "torch.fx.passes.pass_manager": [[57, "module-torch.fx.passes.pass_manager"]], "torch.fx.passes.reinplace": [[57, "module-torch.fx.passes.reinplace"]], "torch.fx.passes.shape_prop": [[57, "module-torch.fx.passes.shape_prop"]], "torch.fx.passes.split_module": [[57, "module-torch.fx.passes.split_module"]], "torch.fx.passes.split_utils": [[57, "module-torch.fx.passes.split_utils"]], "torch.fx.passes.splitter_base": [[57, "module-torch.fx.passes.splitter_base"]], "torch.fx.passes.tests": [[57, "module-torch.fx.passes.tests"]], "torch.fx.passes.tests.test_pass_manager": [[57, "module-torch.fx.passes.tests.test_pass_manager"]], "torch.fx.passes.tools_common": [[57, "module-torch.fx.passes.tools_common"]], "torch.fx.passes.utils": [[57, "module-torch.fx.passes.utils"]], "torch.fx.passes.utils.common": [[57, "module-torch.fx.passes.utils.common"]], "torch.fx.passes.utils.fuser_utils": [[57, "module-torch.fx.passes.utils.fuser_utils"]], "torch.fx.passes.utils.matcher_utils": [[57, "module-torch.fx.passes.utils.matcher_utils"]], "torch.fx.passes.utils.matcher_with_name_node_map_utils": [[57, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"]], "torch.fx.passes.utils.source_matcher_utils": [[57, "module-torch.fx.passes.utils.source_matcher_utils"]], "torch.fx.proxy": [[57, "module-torch.fx.proxy"]], "torch.fx.subgraph_rewriter": [[57, "module-torch.fx.subgraph_rewriter"]], "torch.fx.tensor_type": [[57, "module-torch.fx.tensor_type"]], "torch.fx.traceback": [[57, "module-torch.fx.traceback"]], "trace() (torch.fx.tracer method)": [[57, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[57, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[57, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[57, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[57, "torch.fx.wrap"]], "generator (class in torch)": [[79, "torch.Generator"]], "device (torch.generator attribute)": [[79, "torch.Generator.device"]], "get_state() (torch.generator method)": [[79, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[79, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[79, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[79, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[79, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[80, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[81, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[82, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[83, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[84, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[85, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[86, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[87, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[88, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[89, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[90, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[91, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[92, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[93, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[94, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[95, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[96, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[97, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[98, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[99, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[100, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[101, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[102, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[103, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[104, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[105, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[106, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[107, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[108, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[109, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[110, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[111, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[112, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[113, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[114, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[115, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[116, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[117, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[118, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[119, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[120, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[121, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[122, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[123, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[124, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[125, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[126, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[127, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[128, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[129, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[130, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[131, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[132, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[133, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[134, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[135, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[136, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[137, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[138, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[139, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[140, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[141, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[142, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[143, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[144, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[145, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[146, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[147, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[148, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[149, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[150, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[151, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[152, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[153, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[154, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[155, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[156, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[157, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[158, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[159, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[160, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[161, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[162, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[163, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[164, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[165, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[166, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[167, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[168, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[169, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[170, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[171, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[172, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[173, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[174, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[175, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[176, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[177, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[178, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[179, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[180, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[181, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[182, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[183, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[184, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[185, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[186, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[187, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[188, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[189, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[190, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[191, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[192, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[193, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[194, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[195, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[196, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[197, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[198, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[199, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[200, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[201, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[202, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[203, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[204, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[205, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[206, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[207, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[208, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[209, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[210, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[211, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[212, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[213, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[214, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[215, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[216, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[217, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[218, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[219, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[220, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[221, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[222, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[223, "torch.Tensor.dim"]], "dim_order() (torch.tensor method)": [[224, "torch.Tensor.dim_order"]], "dist() (torch.tensor method)": [[225, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[226, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[227, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[228, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[229, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[230, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[231, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[232, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[233, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[234, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[235, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[236, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[237, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[238, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[239, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[240, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[241, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[242, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[243, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[244, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[245, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[246, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[247, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[248, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[249, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[250, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[251, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[252, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[253, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[254, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[255, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[256, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[257, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[258, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[259, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[260, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[261, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[262, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[263, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[264, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[265, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[266, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[267, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[268, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[269, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[270, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[271, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[272, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[273, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[274, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[275, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[276, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[277, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[278, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[279, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[280, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[281, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[282, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[283, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[284, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[285, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[286, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[287, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[288, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[289, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[290, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[291, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[292, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[293, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[294, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[295, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[296, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[297, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[298, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[299, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[300, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[301, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[302, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[303, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[304, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[305, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[306, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[307, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[308, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[309, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[310, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[311, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[312, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[313, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[314, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[315, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[316, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[317, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[318, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[319, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[320, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[321, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[322, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[323, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[324, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[325, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[326, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[327, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[328, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[329, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[330, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[331, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[332, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[333, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[334, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[335, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[336, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[337, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[338, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[339, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[340, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[341, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[342, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[343, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[344, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[345, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[346, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[347, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[348, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[349, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[350, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[351, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[352, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[353, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[354, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[355, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[356, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[357, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[358, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[359, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[360, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[361, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[362, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[363, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[364, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[365, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[366, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[367, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[368, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[369, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[370, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[371, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[372, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[373, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[374, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[375, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[376, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[377, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[378, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[379, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[380, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[381, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[382, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[383, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[384, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[385, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[386, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[387, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[388, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[389, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[390, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[391, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[392, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[393, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[394, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[395, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[396, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[397, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[398, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[399, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[400, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[401, "torch.Tensor.median"]], "min() (torch.tensor method)": [[402, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[403, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[404, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[405, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[406, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[407, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[408, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[409, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[410, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[411, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[412, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[413, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[414, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[415, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[416, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[417, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[418, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[419, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[420, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[421, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[422, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[423, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[424, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[425, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[426, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[427, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[428, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[429, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[430, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[431, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[432, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[433, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[434, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[435, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[436, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[437, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[438, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[439, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[440, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[441, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[442, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[443, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[444, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[445, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[446, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[447, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[448, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[449, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[450, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[451, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[452, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[453, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[454, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[455, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[456, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[457, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[458, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[459, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[460, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[461, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[462, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[463, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[464, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[465, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[466, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[467, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[468, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[469, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[470, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[471, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[472, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[473, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[474, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[475, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[476, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[477, "torch.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (torch.tensor method)": [[478, "torch.Tensor.register_post_accumulate_grad_hook"]], "remainder() (torch.tensor method)": [[479, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[480, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[481, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[482, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[483, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[484, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[485, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[486, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[487, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[488, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[489, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[490, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[491, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[492, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[493, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[494, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[495, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[496, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[497, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[498, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[499, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[500, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[501, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[502, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[503, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[504, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[505, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[506, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[507, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[508, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[509, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[510, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[511, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[512, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[513, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[514, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[515, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[516, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[517, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[518, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[519, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[520, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[521, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[522, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[523, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[524, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[525, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[526, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[527, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[528, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[529, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[530, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[531, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[532, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[533, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[534, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[535, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[536, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[537, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[538, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[539, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[540, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[541, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[542, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[543, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[544, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[545, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[546, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[547, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[548, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[549, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[550, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[551, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[552, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[553, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[554, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[555, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[556, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[557, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[558, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[559, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[560, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[561, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[562, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[563, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[564, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[565, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[566, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[567, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[568, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[569, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[570, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[571, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[572, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[573, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[574, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[575, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[576, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[577, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[578, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[579, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[580, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[581, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[582, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[583, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[584, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[585, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[586, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[587, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[588, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[589, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[590, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[591, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[592, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[593, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[594, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[595, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[596, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[597, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[598, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[599, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[600, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[601, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[602, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[603, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[604, "torch.Tensor.values"]], "var() (torch.tensor method)": [[605, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[606, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[607, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[608, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[609, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[610, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[611, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[612, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[613, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[614, "torch._assert"]], "_foreach_abs() (in module torch)": [[615, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[616, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[617, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[618, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[619, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[620, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[621, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[622, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[623, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[624, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[625, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[626, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[627, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[628, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[629, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[630, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[631, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[632, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[633, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[634, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[635, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[636, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[637, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[638, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[639, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[640, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[641, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[642, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[643, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[644, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[645, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[646, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[647, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[648, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[649, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[650, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[651, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[652, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[653, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[654, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[655, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[656, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[657, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[658, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[659, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[660, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[661, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[662, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[663, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[664, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[665, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[666, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[667, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[668, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[669, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[670, "torch._logging.set_logs"]], "abs() (in module torch)": [[671, "torch.abs"]], "absolute() (in module torch)": [[672, "torch.absolute"]], "acos() (in module torch)": [[673, "torch.acos"]], "acosh() (in module torch)": [[674, "torch.acosh"]], "add() (in module torch)": [[675, "torch.add"]], "addbmm() (in module torch)": [[676, "torch.addbmm"]], "addcdiv() (in module torch)": [[677, "torch.addcdiv"]], "addcmul() (in module torch)": [[678, "torch.addcmul"]], "addmm() (in module torch)": [[679, "torch.addmm"]], "addmv() (in module torch)": [[680, "torch.addmv"]], "addr() (in module torch)": [[681, "torch.addr"]], "adjoint() (in module torch)": [[682, "torch.adjoint"]], "all() (in module torch)": [[683, "torch.all"]], "allclose() (in module torch)": [[684, "torch.allclose"]], "amax() (in module torch)": [[685, "torch.amax"]], "amin() (in module torch)": [[686, "torch.amin"]], "aminmax() (in module torch)": [[687, "torch.aminmax"]], "angle() (in module torch)": [[688, "torch.angle"]], "any() (in module torch)": [[689, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[690, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[691, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[692, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[693, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[694, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[695, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[702, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[703, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[704, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[705, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[706, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[707, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[713, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[714, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[715, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[716, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[717, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[718, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[719, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[720, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[721, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[722, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[722, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[723, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[724, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[725, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[725, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[725, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[726, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[727, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[728, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[728, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[729, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[729, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[730, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[730, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[731, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[735, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[736, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[746, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[746, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[750, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[751, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[752, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[753, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[754, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[754, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[754, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[755, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[756, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[757, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[758, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[759, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[760, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[761, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[778, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[779, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[780, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[781, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[782, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[782, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[782, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[782, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[782, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[782, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[782, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[783, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[784, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[784, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[784, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[785, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[786, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[786, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[786, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[786, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[787, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[788, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[789, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[790, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[791, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[792, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[793, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[794, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization.fuse_modules)": [[804, "torch.ao.quantization.fuse_modules.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[805, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[805, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[805, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[806, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[806, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[806, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[807, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[808, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[809, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[810, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[810, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[810, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[810, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[811, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[812, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[813, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[814, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[814, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[814, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[815, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[828, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[829, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[830, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[831, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[832, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[833, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[834, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[835, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[836, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[844, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[844, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[844, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[844, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[844, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[844, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[844, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[844, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[845, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[846, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[847, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[848, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[849, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[850, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[851, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[852, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[853, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[854, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[855, "torch.arange"]], "arccos() (in module torch)": [[856, "torch.arccos"]], "arccosh() (in module torch)": [[857, "torch.arccosh"]], "arcsin() (in module torch)": [[858, "torch.arcsin"]], "arcsinh() (in module torch)": [[859, "torch.arcsinh"]], "arctan() (in module torch)": [[860, "torch.arctan"]], "arctan2() (in module torch)": [[861, "torch.arctan2"]], "arctanh() (in module torch)": [[862, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[863, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[864, "torch.argmax"]], "argmin() (in module torch)": [[865, "torch.argmin"]], "argsort() (in module torch)": [[866, "torch.argsort"]], "argwhere() (in module torch)": [[867, "torch.argwhere"]], "as_strided() (in module torch)": [[868, "torch.as_strided"]], "as_tensor() (in module torch)": [[869, "torch.as_tensor"]], "asarray() (in module torch)": [[870, "torch.asarray"]], "asin() (in module torch)": [[871, "torch.asin"]], "asinh() (in module torch)": [[872, "torch.asinh"]], "atan() (in module torch)": [[873, "torch.atan"]], "atan2() (in module torch)": [[874, "torch.atan2"]], "atanh() (in module torch)": [[875, "torch.atanh"]], "atleast_1d() (in module torch)": [[876, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[877, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[878, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[879, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[880, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[881, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[882, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[883, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[884, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[885, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[886, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[887, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[888, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[889, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[890, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[891, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[892, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[893, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[894, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[895, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[896, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[897, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd.gradcheck)": [[898, "torch.autograd.gradcheck.gradcheck"]], "gradgradcheck() (in module torch.autograd.gradcheck)": [[899, "torch.autograd.gradcheck.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[900, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[901, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[902, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[903, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[904, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[905, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[906, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[907, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[908, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[909, "torch.autograd.profiler.profile.total_average"]], "baddbmm() (in module torch)": [[910, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[911, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[912, "torch.bernoulli"]], "bincount() (in module torch)": [[913, "torch.bincount"]], "bitwise_and() (in module torch)": [[914, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[915, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[916, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[917, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[918, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[919, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[920, "torch.blackman_window"]], "block_diag() (in module torch)": [[921, "torch.block_diag"]], "bmm() (in module torch)": [[922, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[923, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[924, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[925, "torch.broadcast_to"]], "bucketize() (in module torch)": [[926, "torch.bucketize"]], "can_cast() (in module torch)": [[927, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[928, "torch.cartesian_prod"]], "cat() (in module torch)": [[929, "torch.cat"]], "cdist() (in module torch)": [[930, "torch.cdist"]], "ceil() (in module torch)": [[931, "torch.ceil"]], "chain_matmul() (in module torch)": [[932, "torch.chain_matmul"]], "cholesky() (in module torch)": [[933, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[934, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[935, "torch.cholesky_solve"]], "chunk() (in module torch)": [[936, "torch.chunk"]], "clamp() (in module torch)": [[937, "torch.clamp"]], "clip() (in module torch)": [[938, "torch.clip"]], "clone() (in module torch)": [[939, "torch.clone"]], "column_stack() (in module torch)": [[940, "torch.column_stack"]], "combinations() (in module torch)": [[941, "torch.combinations"]], "compile() (in module torch)": [[942, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[943, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[944, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[945, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[946, "torch.compiler.compile"]], "cudagraph_mark_step_begin() (in module torch.compiler)": [[947, "torch.compiler.cudagraph_mark_step_begin"]], "disable() (in module torch.compiler)": [[948, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[949, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[950, "torch.compiler.reset"]], "complex() (in module torch)": [[951, "torch.complex"]], "concat() (in module torch)": [[952, "torch.concat"]], "concatenate() (in module torch)": [[953, "torch.concatenate"]], "cond() (in module torch)": [[954, "torch.cond"]], "conj() (in module torch)": [[955, "torch.conj"]], "conj_physical() (in module torch)": [[956, "torch.conj_physical"]], "copysign() (in module torch)": [[957, "torch.copysign"]], "corrcoef() (in module torch)": [[958, "torch.corrcoef"]], "cos() (in module torch)": [[959, "torch.cos"]], "cosh() (in module torch)": [[960, "torch.cosh"]], "count_nonzero() (in module torch)": [[961, "torch.count_nonzero"]], "cov() (in module torch)": [[962, "torch.cov"]], "stream (class in torch.cpu)": [[963, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[964, "torch.cpu.StreamContext"]], "current_device() (in module torch.cpu)": [[965, "torch.cpu.current_device"]], "current_stream() (in module torch.cpu)": [[966, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[967, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[968, "torch.cpu.is_available"]], "set_device() (in module torch.cpu)": [[969, "torch.cpu.set_device"]], "stream() (in module torch.cpu)": [[970, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[971, "torch.cpu.synchronize"]], "cross() (in module torch)": [[972, "torch.cross"]], "cudagraph (class in torch.cuda)": [[973, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[973, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[973, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[973, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[973, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[973, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[973, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[973, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[974, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[975, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[975, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[975, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[975, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[975, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[975, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[975, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[975, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[976, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[976, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[976, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[976, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[976, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[976, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[977, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[978, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[978, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[978, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[978, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[978, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[978, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[979, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[980, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[981, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[982, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[983, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[984, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[985, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[986, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[987, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[988, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[989, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[990, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[991, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[992, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[993, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[994, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[995, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[996, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[997, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[998, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[999, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[1000, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[1001, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[1002, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1003, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1004, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1005, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1006, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1007, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1008, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1009, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1010, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1011, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1012, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1013, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1014, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1015, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1016, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1017, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1018, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1019, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1020, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1021, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1022, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1023, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1024, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1025, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1026, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1027, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1028, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1029, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1030, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1031, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1032, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1033, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1034, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1035, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1036, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1037, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1038, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1039, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1040, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1041, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1042, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1043, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1044, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1045, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1046, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1047, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1048, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1049, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1050, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1051, "torch.cummax"]], "cummin() (in module torch)": [[1052, "torch.cummin"]], "cumprod() (in module torch)": [[1053, "torch.cumprod"]], "cumsum() (in module torch)": [[1054, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1055, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1056, "torch.deg2rad"]], "dequantize() (in module torch)": [[1057, "torch.dequantize"]], "det() (in module torch)": [[1058, "torch.det"]], "diag() (in module torch)": [[1059, "torch.diag"]], "diag_embed() (in module torch)": [[1060, "torch.diag_embed"]], "diagflat() (in module torch)": [[1061, "torch.diagflat"]], "diagonal() (in module torch)": [[1062, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1063, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1064, "torch.diff"]], "digamma() (in module torch)": [[1065, "torch.digamma"]], "dist() (in module torch)": [[1066, "torch.dist"]], "div() (in module torch)": [[1067, "torch.div"]], "divide() (in module torch)": [[1068, "torch.divide"]], "dot() (in module torch)": [[1069, "torch.dot"]], "dsplit() (in module torch)": [[1070, "torch.dsplit"]], "dstack() (in module torch)": [[1071, "torch.dstack"]], "einsum() (in module torch)": [[1072, "torch.einsum"]], "empty() (in module torch)": [[1073, "torch.empty"]], "empty_like() (in module torch)": [[1074, "torch.empty_like"]], "empty_strided() (in module torch)": [[1075, "torch.empty_strided"]], "enable_grad (class in torch)": [[1076, "torch.enable_grad"]], "eq() (in module torch)": [[1077, "torch.eq"]], "equal() (in module torch)": [[1078, "torch.equal"]], "erf() (in module torch)": [[1079, "torch.erf"]], "erfc() (in module torch)": [[1080, "torch.erfc"]], "erfinv() (in module torch)": [[1081, "torch.erfinv"]], "exp() (in module torch)": [[1082, "torch.exp"]], "exp2() (in module torch)": [[1083, "torch.exp2"]], "expm1() (in module torch)": [[1084, "torch.expm1"]], "eye() (in module torch)": [[1085, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1086, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1087, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1088, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1089, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1090, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1091, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1092, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1093, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1094, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1095, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1096, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1097, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1098, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1099, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1100, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1101, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1102, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1103, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1104, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1105, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1106, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1107, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1108, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1109, "torch.fft.rfftn"]], "fix() (in module torch)": [[1110, "torch.fix"]], "flatten() (in module torch)": [[1111, "torch.flatten"]], "flip() (in module torch)": [[1112, "torch.flip"]], "fliplr() (in module torch)": [[1113, "torch.fliplr"]], "flipud() (in module torch)": [[1114, "torch.flipud"]], "float_power() (in module torch)": [[1115, "torch.float_power"]], "floor() (in module torch)": [[1116, "torch.floor"]], "floor_divide() (in module torch)": [[1117, "torch.floor_divide"]], "fmax() (in module torch)": [[1118, "torch.fmax"]], "fmin() (in module torch)": [[1119, "torch.fmin"]], "fmod() (in module torch)": [[1120, "torch.fmod"]], "frac() (in module torch)": [[1121, "torch.frac"]], "frexp() (in module torch)": [[1122, "torch.frexp"]], "from_dlpack() (in module torch)": [[1123, "torch.from_dlpack"]], "from_file() (in module torch)": [[1124, "torch.from_file"]], "from_numpy() (in module torch)": [[1125, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1126, "torch.frombuffer"]], "full() (in module torch)": [[1127, "torch.full"]], "full_like() (in module torch)": [[1128, "torch.full_like"]], "functional_call() (in module torch.func)": [[1129, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1130, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1131, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1132, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1133, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1134, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1135, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1136, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1137, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1138, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1139, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1140, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1141, "torch.func.vmap"]], "gather() (in module torch)": [[1142, "torch.gather"]], "gcd() (in module torch)": [[1143, "torch.gcd"]], "ge() (in module torch)": [[1144, "torch.ge"]], "geqrf() (in module torch)": [[1145, "torch.geqrf"]], "ger() (in module torch)": [[1146, "torch.ger"]], "get_default_dtype() (in module torch)": [[1147, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1148, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1149, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1150, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1151, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1152, "torch.get_rng_state"]], "gradient() (in module torch)": [[1153, "torch.gradient"]], "greater() (in module torch)": [[1154, "torch.greater"]], "greater_equal() (in module torch)": [[1155, "torch.greater_equal"]], "gt() (in module torch)": [[1156, "torch.gt"]], "hamming_window() (in module torch)": [[1157, "torch.hamming_window"]], "hann_window() (in module torch)": [[1158, "torch.hann_window"]], "heaviside() (in module torch)": [[1159, "torch.heaviside"]], "histc() (in module torch)": [[1160, "torch.histc"]], "histogram() (in module torch)": [[1161, "torch.histogram"]], "histogramdd() (in module torch)": [[1162, "torch.histogramdd"]], "hsplit() (in module torch)": [[1163, "torch.hsplit"]], "hspmm() (in module torch)": [[1164, "torch.hspmm"]], "hstack() (in module torch)": [[1165, "torch.hstack"]], "hypot() (in module torch)": [[1166, "torch.hypot"]], "i0() (in module torch)": [[1167, "torch.i0"]], "igamma() (in module torch)": [[1168, "torch.igamma"]], "igammac() (in module torch)": [[1169, "torch.igammac"]], "imag() (in module torch)": [[1170, "torch.imag"]], "index_add() (in module torch)": [[1171, "torch.index_add"]], "index_copy() (in module torch)": [[1172, "torch.index_copy"]], "index_reduce() (in module torch)": [[1173, "torch.index_reduce"]], "index_select() (in module torch)": [[1174, "torch.index_select"]], "inference_mode (class in torch)": [[1175, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1176, "torch.initial_seed"]], "inner() (in module torch)": [[1177, "torch.inner"]], "inverse() (in module torch)": [[1178, "torch.inverse"]], "is_complex() (in module torch)": [[1179, "torch.is_complex"]], "is_conj() (in module torch)": [[1180, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1181, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1182, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1183, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1184, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1185, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1186, "torch.is_storage"]], "is_tensor() (in module torch)": [[1187, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1188, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1189, "torch.isclose"]], "isfinite() (in module torch)": [[1190, "torch.isfinite"]], "isin() (in module torch)": [[1191, "torch.isin"]], "isinf() (in module torch)": [[1192, "torch.isinf"]], "isnan() (in module torch)": [[1193, "torch.isnan"]], "isneginf() (in module torch)": [[1194, "torch.isneginf"]], "isposinf() (in module torch)": [[1195, "torch.isposinf"]], "isreal() (in module torch)": [[1196, "torch.isreal"]], "istft() (in module torch)": [[1197, "torch.istft"]], "attribute (class in torch.jit)": [[1198, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1198, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1198, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1198, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1198, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1199, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1199, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1199, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1199, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1200, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1200, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1200, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1200, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1200, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1200, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1201, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1202, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1203, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1204, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1205, "torch.jit.ignore"]], "interface() (in module torch.jit)": [[1206, "torch.jit.interface"]], "isinstance() (in module torch.jit)": [[1207, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1208, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1209, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1210, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1211, "torch.jit.save"]], "script() (in module torch.jit)": [[1212, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1213, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1214, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1215, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1216, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1217, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1218, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1219, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1220, "torch.kaiser_window"]], "kron() (in module torch)": [[1221, "torch.kron"]], "kthvalue() (in module torch)": [[1222, "torch.kthvalue"]], "lcm() (in module torch)": [[1223, "torch.lcm"]], "ldexp() (in module torch)": [[1224, "torch.ldexp"]], "le() (in module torch)": [[1225, "torch.le"]], "lerp() (in module torch)": [[1226, "torch.lerp"]], "less() (in module torch)": [[1227, "torch.less"]], "less_equal() (in module torch)": [[1228, "torch.less_equal"]], "lgamma() (in module torch)": [[1229, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1230, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1231, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1232, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1233, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1234, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1235, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1236, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1237, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1238, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1239, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1240, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1241, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1242, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1243, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1244, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1245, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1246, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1247, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1248, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1249, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1250, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1251, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1252, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1253, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1254, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1255, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1256, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1257, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1258, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1259, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1260, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1261, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1262, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1263, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1264, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1265, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1266, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1267, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1268, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1269, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1270, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1271, "torch.linspace"]], "load() (in module torch)": [[1272, "torch.load"]], "lobpcg() (in module torch)": [[1273, "torch.lobpcg"]], "log() (in module torch)": [[1274, "torch.log"]], "log10() (in module torch)": [[1275, "torch.log10"]], "log1p() (in module torch)": [[1276, "torch.log1p"]], "log2() (in module torch)": [[1277, "torch.log2"]], "logaddexp() (in module torch)": [[1278, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1279, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1280, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1281, "torch.logdet"]], "logical_and() (in module torch)": [[1282, "torch.logical_and"]], "logical_not() (in module torch)": [[1283, "torch.logical_not"]], "logical_or() (in module torch)": [[1284, "torch.logical_or"]], "logical_xor() (in module torch)": [[1285, "torch.logical_xor"]], "logit() (in module torch)": [[1286, "torch.logit"]], "logspace() (in module torch)": [[1287, "torch.logspace"]], "logsumexp() (in module torch)": [[1288, "torch.logsumexp"]], "lt() (in module torch)": [[1289, "torch.lt"]], "lu() (in module torch)": [[1290, "torch.lu"]], "lu_solve() (in module torch)": [[1291, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1292, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1293, "torch.manual_seed"]], "masked_select() (in module torch)": [[1294, "torch.masked_select"]], "matmul() (in module torch)": [[1295, "torch.matmul"]], "matrix_exp() (in module torch)": [[1296, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1297, "torch.matrix_power"]], "max() (in module torch)": [[1298, "torch.max"]], "maximum() (in module torch)": [[1299, "torch.maximum"]], "mean() (in module torch)": [[1300, "torch.mean"]], "median() (in module torch)": [[1301, "torch.median"]], "meshgrid() (in module torch)": [[1302, "torch.meshgrid"]], "min() (in module torch)": [[1303, "torch.min"]], "minimum() (in module torch)": [[1304, "torch.minimum"]], "mm() (in module torch)": [[1305, "torch.mm"]], "mode() (in module torch)": [[1306, "torch.mode"]], "moveaxis() (in module torch)": [[1307, "torch.moveaxis"]], "movedim() (in module torch)": [[1308, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1309, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1310, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1311, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1312, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1312, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1312, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1312, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1312, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1312, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1313, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1314, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1315, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1316, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1317, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1318, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1319, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1320, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1321, "torch.mps.synchronize"]], "msort() (in module torch)": [[1322, "torch.msort"]], "mul() (in module torch)": [[1323, "torch.mul"]], "multinomial() (in module torch)": [[1324, "torch.multinomial"]], "multiply() (in module torch)": [[1325, "torch.multiply"]], "mv() (in module torch)": [[1326, "torch.mv"]], "mvlgamma() (in module torch)": [[1327, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1328, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1329, "torch.nanmean"]], "nanmedian() (in module torch)": [[1330, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1331, "torch.nanquantile"]], "nansum() (in module torch)": [[1332, "torch.nansum"]], "narrow() (in module torch)": [[1333, "torch.narrow"]], "narrow_copy() (in module torch)": [[1334, "torch.narrow_copy"]], "ne() (in module torch)": [[1335, "torch.ne"]], "neg() (in module torch)": [[1336, "torch.neg"]], "negative() (in module torch)": [[1337, "torch.negative"]], "nextafter() (in module torch)": [[1338, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1339, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1340, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1341, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1342, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1342, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1342, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1343, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1344, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1345, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1346, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1347, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1348, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1349, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1350, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1351, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1352, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1353, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1354, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1355, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1356, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1357, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1358, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1359, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1360, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1361, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1362, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1363, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1364, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1365, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1366, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1367, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1368, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1369, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1370, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1371, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1372, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1373, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1374, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1375, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1376, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1377, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1377, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1378, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1378, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1378, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1379, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1380, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1381, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1382, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1383, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1384, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1385, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1386, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1387, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1388, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1389, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1390, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1391, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1392, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1393, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1394, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1395, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1396, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1397, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1398, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1399, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1400, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1401, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1402, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1403, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1404, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1405, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1406, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1407, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1407, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1408, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1408, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1409, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1409, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1410, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1410, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1411, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1411, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1412, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1412, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1413, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1413, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1414, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1414, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1415, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1415, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1416, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1416, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1417, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1417, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1418, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1418, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1419, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1419, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1420, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1421, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1422, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1423, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1424, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1425, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1426, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1427, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1428, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1429, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1430, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1431, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1432, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1433, "torch.nn.Mish"]], "module (class in torch.nn)": [[1434, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1434, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1434, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1434, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1434, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1434, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1434, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1434, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1434, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1434, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1434, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1434, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1434, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1434, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1434, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1434, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1434, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1434, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1434, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1434, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1434, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1434, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1434, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1434, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1434, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1434, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1434, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1434, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1434, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1434, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1434, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1434, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1434, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1434, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1434, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1434, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1434, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1434, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1434, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1434, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1435, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1436, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1436, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1436, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1436, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1437, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1438, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1439, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1440, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1440, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1440, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1441, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1442, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1443, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1444, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1445, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1445, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1445, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1446, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1447, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1448, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1449, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1450, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1450, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1451, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1452, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1453, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1454, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1455, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1456, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1457, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1458, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1459, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1460, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1461, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1462, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1462, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1463, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1464, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1465, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1466, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1467, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1468, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1469, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1470, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1471, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1472, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1473, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1473, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1474, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1475, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1476, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1477, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1477, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1477, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1478, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1478, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1479, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1479, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1480, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1480, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1481, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1481, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1482, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1483, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1484, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1485, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1486, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1487, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1488, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1489, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1490, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1491, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1492, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1493, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1494, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1495, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1496, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1497, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1498, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1499, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1500, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1501, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1502, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1503, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1504, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1505, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1506, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1507, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1508, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1509, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1510, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1511, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1512, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1513, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1514, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1515, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1516, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1517, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1518, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1519, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1520, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1521, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1522, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1523, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1524, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1525, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1526, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1527, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1528, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1529, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1530, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1531, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1532, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1533, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1534, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1535, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1536, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1537, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1538, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1539, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1540, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1541, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1542, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1543, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1544, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1545, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1546, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1547, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1548, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1549, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1550, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1551, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1552, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1553, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1554, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1555, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1556, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1557, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1558, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1559, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1560, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1561, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1562, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1563, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1564, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1565, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1566, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1567, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1568, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1569, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1570, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1571, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1572, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1573, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1574, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1575, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1576, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1577, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1578, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1579, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1580, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1581, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1582, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1583, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1584, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1585, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1586, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1587, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1588, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1589, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1590, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1591, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1592, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1593, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1594, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1595, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1596, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1597, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1598, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1599, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1600, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1601, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1602, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1603, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1604, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1605, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1605, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1605, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1606, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1607, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1608, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1609, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1610, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1611, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1612, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1613, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1614, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1614, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1614, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1614, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1614, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1615, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1616, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1617, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1617, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm() (in module torch.nn.utils)": [[1618, "torch.nn.utils.clip_grad_norm"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1619, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1620, "torch.nn.utils.clip_grad_value_"]], "convert_conv2d_weight_memory_format() (in module torch.nn.utils)": [[1621, "torch.nn.utils.convert_conv2d_weight_memory_format"]], "fuse_conv_bn_eval() (in module torch.nn.utils)": [[1622, "torch.nn.utils.fuse_conv_bn_eval"]], "fuse_conv_bn_weights() (in module torch.nn.utils)": [[1623, "torch.nn.utils.fuse_conv_bn_weights"]], "fuse_linear_bn_eval() (in module torch.nn.utils)": [[1624, "torch.nn.utils.fuse_linear_bn_eval"]], "fuse_linear_bn_weights() (in module torch.nn.utils)": [[1625, "torch.nn.utils.fuse_linear_bn_weights"]], "parameters_to_vector() (in module torch.nn.utils)": [[1626, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1627, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1628, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1629, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1629, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1630, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1631, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1632, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1633, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1634, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1634, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1634, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1634, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1634, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1634, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1635, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1635, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1635, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1635, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1635, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1636, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1636, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1636, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1636, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1636, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1637, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1637, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1637, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1637, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1637, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1638, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1638, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1638, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1638, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1638, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1638, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1639, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1639, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1639, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1639, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1639, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1639, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1639, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1640, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1640, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1640, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1640, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1640, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1640, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1641, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1641, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1641, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1641, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1641, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1642, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1643, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1644, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1645, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1646, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1647, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1648, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1649, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1650, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1651, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1652, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1653, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1653, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1653, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1653, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1653, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1653, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1653, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1653, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1653, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1653, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1654, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1655, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1656, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1657, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1658, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1659, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1660, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1661, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1662, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1663, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1664, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1665, "torch.no_grad"]], "nonzero() (in module torch)": [[1666, "torch.nonzero"]], "norm() (in module torch)": [[1667, "torch.norm"]], "normal() (in module torch)": [[1668, "torch.normal"]], "not_equal() (in module torch)": [[1669, "torch.not_equal"]], "numel() (in module torch)": [[1670, "torch.numel"]], "ones() (in module torch)": [[1671, "torch.ones"]], "ones_like() (in module torch)": [[1672, "torch.ones_like"]], "jitscalartype (class in torch.onnx)": [[1673, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1673, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1673, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1673, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1673, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1673, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1673, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1673, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1674, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1674, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1675, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1676, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1676, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1677, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1677, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1678, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1678, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1679, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1679, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1679, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1679, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1679, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1679, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1679, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1679, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1679, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1679, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1679, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1679, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1680, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1680, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1681, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1681, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1682, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1682, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1683, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1683, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1684, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1685, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1686, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1687, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1688, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1689, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1689, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1690, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1690, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1691, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1691, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1692, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1692, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1693, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1693, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1694, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1694, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1694, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1694, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1694, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1695, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1695, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1695, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1695, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1695, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1697, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1697, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1697, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1697, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1697, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1697, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1698, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1698, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1698, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1698, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1699, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1699, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1699, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1699, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1699, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1700, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1700, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1700, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1700, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1700, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1701, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1701, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1701, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1701, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1701, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1702, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1702, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1702, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1702, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1702, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1703, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1703, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1703, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1703, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1703, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1704, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1704, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1704, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1704, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1704, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1705, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1705, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1705, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1705, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1705, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1706, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "get_last_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1706, "torch.optim.lr_scheduler.ReduceLROnPlateau.get_last_lr"]], "print_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1706, "torch.optim.lr_scheduler.ReduceLROnPlateau.print_lr"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1707, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1707, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1707, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1707, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1707, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1708, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1708, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1708, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1708, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1708, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1709, "torch.orgqr"]], "ormqr() (in module torch)": [[1710, "torch.ormqr"]], "outer() (in module torch)": [[1711, "torch.outer"]], "pca_lowrank() (in module torch)": [[1712, "torch.pca_lowrank"]], "permute() (in module torch)": [[1713, "torch.permute"]], "pinverse() (in module torch)": [[1714, "torch.pinverse"]], "poisson() (in module torch)": [[1715, "torch.poisson"]], "polar() (in module torch)": [[1716, "torch.polar"]], "polygamma() (in module torch)": [[1717, "torch.polygamma"]], "positive() (in module torch)": [[1718, "torch.positive"]], "pow() (in module torch)": [[1719, "torch.pow"]], "prod() (in module torch)": [[1720, "torch.prod"]], "promote_types() (in module torch)": [[1721, "torch.promote_types"]], "qr() (in module torch)": [[1722, "torch.qr"]], "quantile() (in module torch)": [[1723, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1724, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1725, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1726, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1727, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1728, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1729, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1729, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1729, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1729, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1729, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1730, "torch.rad2deg"]], "rand() (in module torch)": [[1731, "torch.rand"]], "rand_like() (in module torch)": [[1732, "torch.rand_like"]], "randint() (in module torch)": [[1733, "torch.randint"]], "randint_like() (in module torch)": [[1734, "torch.randint_like"]], "randn() (in module torch)": [[1735, "torch.randn"]], "randn_like() (in module torch)": [[1736, "torch.randn_like"]], "randperm() (in module torch)": [[1737, "torch.randperm"]], "range() (in module torch)": [[1738, "torch.range"]], "ravel() (in module torch)": [[1739, "torch.ravel"]], "real() (in module torch)": [[1740, "torch.real"]], "reciprocal() (in module torch)": [[1741, "torch.reciprocal"]], "remainder() (in module torch)": [[1742, "torch.remainder"]], "renorm() (in module torch)": [[1743, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1744, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1745, "torch.reshape"]], "resolve_conj() (in module torch)": [[1746, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1747, "torch.resolve_neg"]], "result_type() (in module torch)": [[1748, "torch.result_type"]], "roll() (in module torch)": [[1749, "torch.roll"]], "rot90() (in module torch)": [[1750, "torch.rot90"]], "round() (in module torch)": [[1751, "torch.round"]], "row_stack() (in module torch)": [[1752, "torch.row_stack"]], "rsqrt() (in module torch)": [[1753, "torch.rsqrt"]], "save() (in module torch)": [[1754, "torch.save"]], "scatter() (in module torch)": [[1755, "torch.scatter"]], "scatter_add() (in module torch)": [[1756, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1757, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1758, "torch.searchsorted"]], "seed() (in module torch)": [[1759, "torch.seed"]], "select() (in module torch)": [[1760, "torch.select"]], "select_scatter() (in module torch)": [[1761, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1762, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1763, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1764, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1765, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1766, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1767, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1768, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1769, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1770, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1771, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1772, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1773, "torch.set_warn_always"]], "sgn() (in module torch)": [[1774, "torch.sgn"]], "sigmoid() (in module torch)": [[1775, "torch.sigmoid"]], "sign() (in module torch)": [[1776, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1777, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1778, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1779, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1780, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1781, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1782, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1783, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1784, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1785, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1786, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1787, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1788, "torch.signbit"]], "sin() (in module torch)": [[1789, "torch.sin"]], "sinc() (in module torch)": [[1790, "torch.sinc"]], "sinh() (in module torch)": [[1791, "torch.sinh"]], "slice_scatter() (in module torch)": [[1792, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1793, "torch.slogdet"]], "smm() (in module torch)": [[1794, "torch.smm"]], "softmax() (in module torch)": [[1795, "torch.softmax"]], "sort() (in module torch)": [[1796, "torch.sort"]], "addmm() (in module torch.sparse)": [[1797, "torch.sparse.addmm"]], "as_sparse_gradcheck() (in module torch.sparse)": [[1798, "torch.sparse.as_sparse_gradcheck"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1799, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1799, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1799, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1799, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1800, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1801, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1802, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1803, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1804, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1805, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1806, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1807, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1808, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1809, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1810, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1811, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1812, "torch.split"]], "sqrt() (in module torch)": [[1813, "torch.sqrt"]], "square() (in module torch)": [[1814, "torch.square"]], "squeeze() (in module torch)": [[1815, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1816, "torch.sspaddmm"]], "stack() (in module torch)": [[1817, "torch.stack"]], "std() (in module torch)": [[1818, "torch.std"]], "std_mean() (in module torch)": [[1819, "torch.std_mean"]], "stft() (in module torch)": [[1820, "torch.stft"]], "sub() (in module torch)": [[1821, "torch.sub"]], "subtract() (in module torch)": [[1822, "torch.subtract"]], "sum() (in module torch)": [[1823, "torch.sum"]], "svd() (in module torch)": [[1824, "torch.svd"]], "svd_lowrank() (in module torch)": [[1825, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1826, "torch.swapaxes"]], "swapdims() (in module torch)": [[1827, "torch.swapdims"]], "sym_float() (in module torch)": [[1828, "torch.sym_float"]], "sym_int() (in module torch)": [[1829, "torch.sym_int"]], "sym_ite() (in module torch)": [[1830, "torch.sym_ite"]], "sym_max() (in module torch)": [[1831, "torch.sym_max"]], "sym_min() (in module torch)": [[1832, "torch.sym_min"]], "sym_not() (in module torch)": [[1833, "torch.sym_not"]], "t() (in module torch)": [[1834, "torch.t"]], "take() (in module torch)": [[1835, "torch.take"]], "take_along_dim() (in module torch)": [[1836, "torch.take_along_dim"]], "tan() (in module torch)": [[1837, "torch.tan"]], "tanh() (in module torch)": [[1838, "torch.tanh"]], "tensor() (in module torch)": [[1839, "torch.tensor"]], "tensor_split() (in module torch)": [[1840, "torch.tensor_split"]], "tensordot() (in module torch)": [[1841, "torch.tensordot"]], "tile() (in module torch)": [[1842, "torch.tile"]], "topk() (in module torch)": [[1843, "torch.topk"]], "trace() (in module torch)": [[1844, "torch.trace"]], "transpose() (in module torch)": [[1845, "torch.transpose"]], "trapezoid() (in module torch)": [[1846, "torch.trapezoid"]], "trapz() (in module torch)": [[1847, "torch.trapz"]], "triangular_solve() (in module torch)": [[1848, "torch.triangular_solve"]], "tril() (in module torch)": [[1849, "torch.tril"]], "tril_indices() (in module torch)": [[1850, "torch.tril_indices"]], "triu() (in module torch)": [[1851, "torch.triu"]], "triu_indices() (in module torch)": [[1852, "torch.triu_indices"]], "true_divide() (in module torch)": [[1853, "torch.true_divide"]], "trunc() (in module torch)": [[1854, "torch.trunc"]], "unbind() (in module torch)": [[1855, "torch.unbind"]], "unflatten() (in module torch)": [[1856, "torch.unflatten"]], "unique() (in module torch)": [[1857, "torch.unique"]], "unique_consecutive() (in module torch)": [[1858, "torch.unique_consecutive"]], "unravel_index() (in module torch)": [[1859, "torch.unravel_index"]], "unsqueeze() (in module torch)": [[1860, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1861, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1862, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1863, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1864, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1865, "torch.utils.set_module"]], "vander() (in module torch)": [[1866, "torch.vander"]], "var() (in module torch)": [[1867, "torch.var"]], "var_mean() (in module torch)": [[1868, "torch.var_mean"]], "vdot() (in module torch)": [[1869, "torch.vdot"]], "view_as_complex() (in module torch)": [[1870, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1871, "torch.view_as_real"]], "vmap() (in module torch)": [[1872, "torch.vmap"]], "vsplit() (in module torch)": [[1873, "torch.vsplit"]], "vstack() (in module torch)": [[1874, "torch.vstack"]], "where() (in module torch)": [[1875, "torch.where"]], "xlogy() (in module torch)": [[1876, "torch.xlogy"]], "zeros() (in module torch)": [[1877, "torch.zeros"]], "zeros_like() (in module torch)": [[1878, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1879, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1879, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1879, "torch.hub.help"]], "list() (in module torch.hub)": [[1879, "torch.hub.list"]], "load() (in module torch.hub)": [[1879, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1879, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1879, "torch.hub.set_dir"]], "torch.hub": [[1879, "module-torch.hub"]], "pytorch_jit": [[1881, "envvar-PYTORCH_JIT"]], "environment variable": [[1881, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1881, "torch.jit.export"]], "torch.jit": [[1881, "module-torch.jit"]], "torch.jit.annotations": [[1881, "module-torch.jit.annotations"]], "torch.jit.frontend": [[1881, "module-torch.jit.frontend"]], "torch.jit.generate_bytecode": [[1881, "module-torch.jit.generate_bytecode"]], "torch.jit.mobile": [[1881, "module-torch.jit.mobile"]], "torch.jit.quantized": [[1881, "module-torch.jit.quantized"]], "torch.jit.supported_ops": [[1882, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1883, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1883, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1886, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1887, "module-torch.utils.jit"]], "library (class in torch.library)": [[1888, "torch.library.Library"]], "define() (in module torch.library)": [[1888, "torch.library.define"]], "define() (torch.library.library method)": [[1888, "torch.library.Library.define"]], "fallthrough_kernel() (in module torch.library)": [[1888, "torch.library.fallthrough_kernel"]], "get_ctx() (in module torch.library)": [[1888, "torch.library.get_ctx"]], "impl() (in module torch.library)": [[1888, "torch.library.impl"]], "impl() (torch.library.library method)": [[1888, "torch.library.Library.impl"]], "impl_abstract() (in module torch.library)": [[1888, "torch.library.impl_abstract"]], "torch.library": [[1888, "module-torch.library"]], "torch.linalg": [[1889, "module-torch.linalg"]], "torch._logging": [[1890, "module-torch._logging"]], "torch.masked": [[1891, "module-torch.masked"]], "torch.masked.maskedtensor": [[1891, "module-torch.masked.maskedtensor"]], "torch.masked.maskedtensor.binary": [[1891, "module-torch.masked.maskedtensor.binary"]], "torch.masked.maskedtensor.core": [[1891, "module-torch.masked.maskedtensor.core"]], "torch.masked.maskedtensor.creation": [[1891, "module-torch.masked.maskedtensor.creation"]], "torch.masked.maskedtensor.passthrough": [[1891, "module-torch.masked.maskedtensor.passthrough"]], "torch.masked.maskedtensor.reductions": [[1891, "module-torch.masked.maskedtensor.reductions"]], "torch.masked.maskedtensor.unary": [[1891, "module-torch.masked.maskedtensor.unary"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1892, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1893, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1893, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1894, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1894, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1894, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1894, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1894, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1894, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1894, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1894, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1894, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1894, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1894, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1894, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1894, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1894, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1894, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1894, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1894, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1894, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1894, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1894, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1894, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1895, "module-torch.mps"]], "torch.mps.event": [[1895, "module-torch.mps.event"]], "torch.mps.profiler": [[1895, "module-torch.mps.profiler"]], "spawncontext (class in torch.multiprocessing)": [[1896, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1896, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1896, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1896, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1896, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing.spawn)": [[1896, "torch.multiprocessing.spawn.spawn"]], "torch.multiprocessing": [[1896, "module-torch.multiprocessing"]], "torch.multiprocessing.pool": [[1896, "module-torch.multiprocessing.pool"]], "torch.multiprocessing.queue": [[1896, "module-torch.multiprocessing.queue"]], "torch.multiprocessing.reductions": [[1896, "module-torch.multiprocessing.reductions"]], "torch.multiprocessing.spawn": [[1896, "module-torch.multiprocessing.spawn"]], "align_as() (torch.tensor method)": [[1898, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1898, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1898, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1898, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1898, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1898, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1899, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1899, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1899, "torch.nested.to_padded_tensor"]], "torch.nested": [[1899, "module-torch.nested"]], "torch.nn": [[1900, "module-torch.nn"]], "torch.nn.backends": [[1900, "module-torch.nn.backends"]], "torch.nn.backends.thnn": [[1900, "module-torch.nn.backends.thnn"]], "torch.nn.common_types": [[1900, "module-torch.nn.common_types"]], "torch.nn.cpp": [[1900, "module-torch.nn.cpp"]], "torch.nn.functional": [[1900, "module-torch.nn.functional"]], "torch.nn.grad": [[1900, "module-torch.nn.grad"]], "torch.nn.init": [[1900, "module-torch.nn.init"]], "torch.nn.modules": [[1900, "module-torch.nn.modules"]], "torch.nn.modules.activation": [[1900, "module-torch.nn.modules.activation"]], "torch.nn.modules.adaptive": [[1900, "module-torch.nn.modules.adaptive"]], "torch.nn.modules.batchnorm": [[1900, "module-torch.nn.modules.batchnorm"]], "torch.nn.modules.channelshuffle": [[1900, "module-torch.nn.modules.channelshuffle"]], "torch.nn.modules.container": [[1900, "module-torch.nn.modules.container"]], "torch.nn.modules.conv": [[1900, "module-torch.nn.modules.conv"]], "torch.nn.modules.distance": [[1900, "module-torch.nn.modules.distance"]], "torch.nn.modules.dropout": [[1900, "module-torch.nn.modules.dropout"]], "torch.nn.modules.flatten": [[1900, "module-torch.nn.modules.flatten"]], "torch.nn.modules.fold": [[1900, "module-torch.nn.modules.fold"]], "torch.nn.modules.instancenorm": [[1900, "module-torch.nn.modules.instancenorm"]], "torch.nn.modules.lazy": [[1900, "module-torch.nn.modules.lazy"]], "torch.nn.modules.linear": [[1900, "module-torch.nn.modules.linear"]], "torch.nn.modules.loss": [[1900, "module-torch.nn.modules.loss"]], "torch.nn.modules.module": [[1900, "module-torch.nn.modules.module"]], "torch.nn.modules.normalization": [[1900, "module-torch.nn.modules.normalization"]], "torch.nn.modules.padding": [[1900, "module-torch.nn.modules.padding"]], "torch.nn.modules.pixelshuffle": [[1900, "module-torch.nn.modules.pixelshuffle"]], "torch.nn.modules.pooling": [[1900, "module-torch.nn.modules.pooling"]], "torch.nn.modules.rnn": [[1900, "module-torch.nn.modules.rnn"]], "torch.nn.modules.sparse": [[1900, "module-torch.nn.modules.sparse"]], "torch.nn.modules.transformer": [[1900, "module-torch.nn.modules.transformer"]], "torch.nn.modules.upsampling": [[1900, "module-torch.nn.modules.upsampling"]], "torch.nn.modules.utils": [[1900, "module-torch.nn.modules.utils"]], "torch.nn.parallel": [[1900, "module-torch.nn.parallel"]], "torch.nn.parallel.comm": [[1900, "module-torch.nn.parallel.comm"]], "torch.nn.parallel.data_parallel": [[1900, "module-torch.nn.parallel.data_parallel"]], "torch.nn.parallel.distributed": [[1900, "module-torch.nn.parallel.distributed"]], "torch.nn.parallel.parallel_apply": [[1900, "module-torch.nn.parallel.parallel_apply"]], "torch.nn.parallel.replicate": [[1900, "module-torch.nn.parallel.replicate"]], "torch.nn.parallel.scatter_gather": [[1900, "module-torch.nn.parallel.scatter_gather"]], "torch.nn.parameter": [[1900, "module-torch.nn.parameter"]], "torch.nn.utils": [[1900, "module-torch.nn.utils"]], "torch.nn.utils.clip_grad": [[1900, "module-torch.nn.utils.clip_grad"]], "torch.nn.utils.convert_parameters": [[1900, "module-torch.nn.utils.convert_parameters"]], "torch.nn.utils.fusion": [[1900, "module-torch.nn.utils.fusion"]], "torch.nn.utils.init": [[1900, "module-torch.nn.utils.init"]], "torch.nn.utils.memory_format": [[1900, "module-torch.nn.utils.memory_format"]], "torch.nn.utils.parametrizations": [[1900, "module-torch.nn.utils.parametrizations"]], "torch.nn.utils.parametrize": [[1900, "module-torch.nn.utils.parametrize"]], "torch.nn.utils.prune": [[1900, "module-torch.nn.utils.prune"]], "torch.nn.utils.rnn": [[1900, "module-torch.nn.utils.rnn"]], "torch.nn.utils.spectral_norm": [[1900, "module-torch.nn.utils.spectral_norm"]], "torch.nn.utils.stateless": [[1900, "module-torch.nn.utils.stateless"]], "torch.nn.utils.weight_norm": [[1900, "module-torch.nn.utils.weight_norm"]], "calculate_gain() (in module torch.nn.init)": [[1902, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1902, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1902, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1902, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1902, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1902, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1902, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1902, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1902, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1902, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1902, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1902, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1902, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1902, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1902, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[1920, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[1920, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[1920, "torch.serialization.set_default_load_endianness"]], "torch.onnx.errors": [[1922, "module-torch.onnx.errors"]], "torch.onnx.operators": [[1922, "module-torch.onnx.operators"]], "torch.onnx.symbolic_caffe2": [[1922, "module-torch.onnx.symbolic_caffe2"]], "torch.onnx.symbolic_helper": [[1922, "module-torch.onnx.symbolic_helper"]], "torch.onnx.symbolic_opset10": [[1922, "module-torch.onnx.symbolic_opset10"]], "torch.onnx.symbolic_opset11": [[1922, "module-torch.onnx.symbolic_opset11"]], "torch.onnx.symbolic_opset12": [[1922, "module-torch.onnx.symbolic_opset12"]], "torch.onnx.symbolic_opset13": [[1922, "module-torch.onnx.symbolic_opset13"]], "torch.onnx.symbolic_opset14": [[1922, "module-torch.onnx.symbolic_opset14"]], "torch.onnx.symbolic_opset15": [[1922, "module-torch.onnx.symbolic_opset15"]], "torch.onnx.symbolic_opset16": [[1922, "module-torch.onnx.symbolic_opset16"]], "torch.onnx.symbolic_opset17": [[1922, "module-torch.onnx.symbolic_opset17"]], "torch.onnx.symbolic_opset18": [[1922, "module-torch.onnx.symbolic_opset18"]], "torch.onnx.symbolic_opset7": [[1922, "module-torch.onnx.symbolic_opset7"]], "torch.onnx.symbolic_opset8": [[1922, "module-torch.onnx.symbolic_opset8"]], "torch.onnx.symbolic_opset9": [[1922, "module-torch.onnx.symbolic_opset9"]], "torch.onnx.utils": [[1922, "module-torch.onnx.utils"]], "torch.onnx.verification": [[1922, "module-torch.onnx.verification"]], "diagnosticoptions (class in torch.onnx)": [[1923, "torch.onnx.DiagnosticOptions"]], "exportoptions (class in torch.onnx)": [[1923, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1923, "torch.onnx.ExportOutput"]], "exportoutputserializer (class in torch.onnx)": [[1923, "torch.onnx.ExportOutputSerializer"]], "invalidexportoptionserror (class in torch.onnx)": [[1923, "torch.onnx.InvalidExportOptionsError"]], "onnxexportererror (class in torch.onnx)": [[1923, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[1923, "torch.onnx.OnnxRegistry"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1923, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1923, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1923, "torch.onnx.ExportOutput.diagnostic_context"]], "dynamo_export() (in module torch.onnx)": [[1923, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[1923, "torch.onnx.enable_fake_mode"]], "fake_context (torch.onnx.exportoutput property)": [[1923, "torch.onnx.ExportOutput.fake_context"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[1923, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[1923, "torch.onnx.OnnxRegistry.is_registered_op"]], "model_proto (torch.onnx.exportoutput property)": [[1923, "torch.onnx.ExportOutput.model_proto"]], "opset_version (torch.onnx.onnxregistry property)": [[1923, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[1923, "torch.onnx.OnnxRegistry.register_op"]], "save() (torch.onnx.exportoutput method)": [[1923, "torch.onnx.ExportOutput.save"]], "save_diagnostics() (torch.onnx.exportoutput method)": [[1923, "torch.onnx.ExportOutput.save_diagnostics"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1923, "torch.onnx.ExportOutputSerializer.serialize"]], "is_onnxrt_backend_supported() (in module torch.onnx)": [[1924, "torch.onnx.is_onnxrt_backend_supported"]], "disable_log() (in module torch.onnx)": [[1925, "torch.onnx.disable_log"]], "enable_log() (in module torch.onnx)": [[1925, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1925, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1925, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1925, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1925, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1925, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1925, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1925, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1925, "torch.onnx.unregister_custom_op_symbolic"]], "optimizer (class in torch.optim)": [[1927, "torch.optim.Optimizer"]], "torch.optim": [[1927, "module-torch.optim"]], "torch.optim.adadelta": [[1927, "module-torch.optim.adadelta"]], "torch.optim.adagrad": [[1927, "module-torch.optim.adagrad"]], "torch.optim.adam": [[1927, "module-torch.optim.adam"]], "torch.optim.adamax": [[1927, "module-torch.optim.adamax"]], "torch.optim.adamw": [[1927, "module-torch.optim.adamw"]], "torch.optim.asgd": [[1927, "module-torch.optim.asgd"]], "torch.optim.lbfgs": [[1927, "module-torch.optim.lbfgs"]], "torch.optim.lr_scheduler": [[1927, "module-torch.optim.lr_scheduler"]], "torch.optim.nadam": [[1927, "module-torch.optim.nadam"]], "torch.optim.optimizer": [[1927, "module-torch.optim.optimizer"]], "torch.optim.radam": [[1927, "module-torch.optim.radam"]], "torch.optim.rmsprop": [[1927, "module-torch.optim.rmsprop"]], "torch.optim.rprop": [[1927, "module-torch.optim.rprop"]], "torch.optim.sgd": [[1927, "module-torch.optim.sgd"]], "torch.optim.sparse_adam": [[1927, "module-torch.optim.sparse_adam"]], "torch.optim.swa_utils": [[1927, "module-torch.optim.swa_utils"]], "directory (class in torch.package)": [[1928, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1928, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1928, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1928, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1928, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1928, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1928, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1928, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1928, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1928, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1928, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1928, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1928, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1928, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1928, "torch.package.PackageExporter.save_text"]], "torch.package": [[1928, "module-torch.package"]], "torch.package.analyze": [[1928, "module-torch.package.analyze"]], "torch.package.analyze.find_first_use_of_broken_modules": [[1928, "module-torch.package.analyze.find_first_use_of_broken_modules"]], "torch.package.analyze.is_from_package": [[1928, "module-torch.package.analyze.is_from_package"]], "torch.package.analyze.trace_dependencies": [[1928, "module-torch.package.analyze.trace_dependencies"]], "torch.package.file_structure_representation": [[1928, "module-torch.package.file_structure_representation"]], "torch.package.find_file_dependencies": [[1928, "module-torch.package.find_file_dependencies"]], "torch.package.glob_group": [[1928, "module-torch.package.glob_group"]], "torch.package.importer": [[1928, "module-torch.package.importer"]], "torch.package.package_exporter": [[1928, "module-torch.package.package_exporter"]], "torch.package.package_importer": [[1928, "module-torch.package.package_importer"]], "pipe (class in torch.distributed.pipeline.sync)": [[1929, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1929, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1929, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1929, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1929, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1929, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1930, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1930, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1930, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1930, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1930, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1930, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1930, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1930, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1930, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1930, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1930, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1930, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1930, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1930, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1930, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1930, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1930, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1930, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1930, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1930, "module-torch.profiler"]], "torch.profiler.itt": [[1930, "module-torch.profiler.itt"]], "torch.profiler.profiler": [[1930, "module-torch.profiler.profiler"]], "torch.profiler.python_tracer": [[1930, "module-torch.profiler.python_tracer"]], "torch.ao": [[1931, "module-torch.ao"]], "torch.ao.nn": [[1931, "module-torch.ao.nn"]], "torch.ao.nn.intrinsic.modules.fused": [[1931, "module-torch.ao.nn.intrinsic.modules.fused"]], "torch.ao.nn.intrinsic.qat.modules.conv_fused": [[1931, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_fused": [[1931, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_relu": [[1931, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[1931, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules.bn_relu": [[1931, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"]], "torch.ao.nn.intrinsic.quantized.modules.conv_add": [[1931, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"]], "torch.ao.nn.intrinsic.quantized.modules.conv_relu": [[1931, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"]], "torch.ao.nn.intrinsic.quantized.modules.linear_relu": [[1931, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"]], "torch.ao.nn.qat.dynamic.modules.linear": [[1931, "module-torch.ao.nn.qat.dynamic.modules.linear"]], "torch.ao.nn.qat.modules.conv": [[1931, "module-torch.ao.nn.qat.modules.conv"]], "torch.ao.nn.qat.modules.embedding_ops": [[1931, "module-torch.ao.nn.qat.modules.embedding_ops"]], "torch.ao.nn.qat.modules.linear": [[1931, "module-torch.ao.nn.qat.modules.linear"]], "torch.ao.nn.quantizable": [[1931, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1931, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantizable.modules.activation": [[1931, "module-torch.ao.nn.quantizable.modules.activation"]], "torch.ao.nn.quantizable.modules.rnn": [[1931, "module-torch.ao.nn.quantizable.modules.rnn"]], "torch.ao.nn.quantized": [[1931, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.dynamic.modules.conv": [[1931, "module-torch.ao.nn.quantized.dynamic.modules.conv"]], "torch.ao.nn.quantized.dynamic.modules.linear": [[1931, "module-torch.ao.nn.quantized.dynamic.modules.linear"]], "torch.ao.nn.quantized.dynamic.modules.rnn": [[1931, "module-torch.ao.nn.quantized.dynamic.modules.rnn"]], "torch.ao.nn.quantized.modules.activation": [[1931, "module-torch.ao.nn.quantized.modules.activation"]], "torch.ao.nn.quantized.modules.batchnorm": [[1931, "module-torch.ao.nn.quantized.modules.batchnorm"]], "torch.ao.nn.quantized.modules.conv": [[1931, "module-torch.ao.nn.quantized.modules.conv"]], "torch.ao.nn.quantized.modules.dropout": [[1931, "module-torch.ao.nn.quantized.modules.dropout"]], "torch.ao.nn.quantized.modules.embedding_ops": [[1931, "module-torch.ao.nn.quantized.modules.embedding_ops"]], "torch.ao.nn.quantized.modules.functional_modules": [[1931, "module-torch.ao.nn.quantized.modules.functional_modules"]], "torch.ao.nn.quantized.modules.linear": [[1931, "module-torch.ao.nn.quantized.modules.linear"]], "torch.ao.nn.quantized.modules.normalization": [[1931, "module-torch.ao.nn.quantized.modules.normalization"]], "torch.ao.nn.quantized.modules.rnn": [[1931, "module-torch.ao.nn.quantized.modules.rnn"]], "torch.ao.nn.quantized.modules.utils": [[1931, "module-torch.ao.nn.quantized.modules.utils"]], "torch.ao.nn.quantized.reference": [[1931, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1931, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.quantized.reference.modules.conv": [[1931, "module-torch.ao.nn.quantized.reference.modules.conv"]], "torch.ao.nn.quantized.reference.modules.linear": [[1931, "module-torch.ao.nn.quantized.reference.modules.linear"]], "torch.ao.nn.quantized.reference.modules.rnn": [[1931, "module-torch.ao.nn.quantized.reference.modules.rnn"]], "torch.ao.nn.quantized.reference.modules.sparse": [[1931, "module-torch.ao.nn.quantized.reference.modules.sparse"]], "torch.ao.nn.quantized.reference.modules.utils": [[1931, "module-torch.ao.nn.quantized.reference.modules.utils"]], "torch.ao.nn.sparse": [[1931, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1931, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1931, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.nn.sparse.quantized.dynamic.linear": [[1931, "module-torch.ao.nn.sparse.quantized.dynamic.linear"]], "torch.ao.nn.sparse.quantized.linear": [[1931, "module-torch.ao.nn.sparse.quantized.linear"]], "torch.ao.nn.sparse.quantized.utils": [[1931, "module-torch.ao.nn.sparse.quantized.utils"]], "torch.ao.ns": [[1931, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1931, "module-torch.ao.ns.fx"]], "torch.ao.ns.fx.graph_matcher": [[1931, "module-torch.ao.ns.fx.graph_matcher"]], "torch.ao.ns.fx.graph_passes": [[1931, "module-torch.ao.ns.fx.graph_passes"]], "torch.ao.ns.fx.mappings": [[1931, "module-torch.ao.ns.fx.mappings"]], "torch.ao.ns.fx.n_shadows_utils": [[1931, "module-torch.ao.ns.fx.n_shadows_utils"]], "torch.ao.ns.fx.ns_types": [[1931, "module-torch.ao.ns.fx.ns_types"]], "torch.ao.ns.fx.pattern_utils": [[1931, "module-torch.ao.ns.fx.pattern_utils"]], "torch.ao.ns.fx.qconfig_multi_mapping": [[1931, "module-torch.ao.ns.fx.qconfig_multi_mapping"]], "torch.ao.ns.fx.utils": [[1931, "module-torch.ao.ns.fx.utils"]], "torch.ao.ns.fx.weight_utils": [[1931, "module-torch.ao.ns.fx.weight_utils"]], "torch.ao.pruning": [[1931, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1931, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.scheduler.base_scheduler": [[1931, "module-torch.ao.pruning.scheduler.base_scheduler"]], "torch.ao.pruning.scheduler.cubic_scheduler": [[1931, "module-torch.ao.pruning.scheduler.cubic_scheduler"]], "torch.ao.pruning.scheduler.lambda_scheduler": [[1931, "module-torch.ao.pruning.scheduler.lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[1931, "module-torch.ao.pruning.sparsifier"]], "torch.ao.pruning.sparsifier.base_sparsifier": [[1931, "module-torch.ao.pruning.sparsifier.base_sparsifier"]], "torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier": [[1931, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"]], "torch.ao.pruning.sparsifier.utils": [[1931, "module-torch.ao.pruning.sparsifier.utils"]], "torch.ao.pruning.sparsifier.weight_norm_sparsifier": [[1931, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"]], "torch.ao.quantization": [[1931, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1931, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.backend_config.backend_config": [[1931, "module-torch.ao.quantization.backend_config.backend_config"]], "torch.ao.quantization.backend_config.executorch": [[1931, "module-torch.ao.quantization.backend_config.executorch"]], "torch.ao.quantization.backend_config.fbgemm": [[1931, "module-torch.ao.quantization.backend_config.fbgemm"]], "torch.ao.quantization.backend_config.native": [[1931, "module-torch.ao.quantization.backend_config.native"]], "torch.ao.quantization.backend_config.observation_type": [[1931, "module-torch.ao.quantization.backend_config.observation_type"]], "torch.ao.quantization.backend_config.onednn": [[1931, "module-torch.ao.quantization.backend_config.onednn"]], "torch.ao.quantization.backend_config.qnnpack": [[1931, "module-torch.ao.quantization.backend_config.qnnpack"]], "torch.ao.quantization.backend_config.tensorrt": [[1931, "module-torch.ao.quantization.backend_config.tensorrt"]], "torch.ao.quantization.backend_config.utils": [[1931, "module-torch.ao.quantization.backend_config.utils"]], "torch.ao.quantization.backend_config.x86": [[1931, "module-torch.ao.quantization.backend_config.x86"]], "torch.ao.quantization.fake_quantize": [[1931, "module-torch.ao.quantization.fake_quantize"]], "torch.ao.quantization.fuse_modules": [[1931, "module-torch.ao.quantization.fuse_modules"]], "torch.ao.quantization.fuser_method_mappings": [[1931, "module-torch.ao.quantization.fuser_method_mappings"]], "torch.ao.quantization.fx": [[1931, "module-torch.ao.quantization.fx"]], "torch.ao.quantization.fx.convert": [[1931, "module-torch.ao.quantization.fx.convert"]], "torch.ao.quantization.fx.custom_config": [[1931, "module-torch.ao.quantization.fx.custom_config"]], "torch.ao.quantization.fx.fuse": [[1931, "module-torch.ao.quantization.fx.fuse"]], "torch.ao.quantization.fx.fuse_handler": [[1931, "module-torch.ao.quantization.fx.fuse_handler"]], "torch.ao.quantization.fx.graph_module": [[1931, "module-torch.ao.quantization.fx.graph_module"]], "torch.ao.quantization.fx.lower_to_fbgemm": [[1931, "module-torch.ao.quantization.fx.lower_to_fbgemm"]], "torch.ao.quantization.fx.lower_to_qnnpack": [[1931, "module-torch.ao.quantization.fx.lower_to_qnnpack"]], "torch.ao.quantization.fx.lstm_utils": [[1931, "module-torch.ao.quantization.fx.lstm_utils"]], "torch.ao.quantization.fx.match_utils": [[1931, "module-torch.ao.quantization.fx.match_utils"]], "torch.ao.quantization.fx.pattern_utils": [[1931, "module-torch.ao.quantization.fx.pattern_utils"]], "torch.ao.quantization.fx.prepare": [[1931, "module-torch.ao.quantization.fx.prepare"]], "torch.ao.quantization.fx.qconfig_mapping_utils": [[1931, "module-torch.ao.quantization.fx.qconfig_mapping_utils"]], "torch.ao.quantization.fx.quantize_handler": [[1931, "module-torch.ao.quantization.fx.quantize_handler"]], "torch.ao.quantization.fx.tracer": [[1931, "module-torch.ao.quantization.fx.tracer"]], "torch.ao.quantization.fx.utils": [[1931, "module-torch.ao.quantization.fx.utils"]], "torch.ao.quantization.observer": [[1931, "module-torch.ao.quantization.observer"]], "torch.ao.quantization.pt2e.duplicate_dq_pass": [[1931, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"]], "torch.ao.quantization.pt2e.eval_utils": [[1931, "module-torch.ao.quantization.pt2e.eval_utils"]], "torch.ao.quantization.pt2e.graph_utils": [[1931, "module-torch.ao.quantization.pt2e.graph_utils"]], "torch.ao.quantization.pt2e.port_metadata_pass": [[1931, "module-torch.ao.quantization.pt2e.port_metadata_pass"]], "torch.ao.quantization.pt2e.prepare": [[1931, "module-torch.ao.quantization.pt2e.prepare"]], "torch.ao.quantization.pt2e.qat_utils": [[1931, "module-torch.ao.quantization.pt2e.qat_utils"]], "torch.ao.quantization.pt2e.representation.rewrite": [[1931, "module-torch.ao.quantization.pt2e.representation.rewrite"]], "torch.ao.quantization.pt2e.utils": [[1931, "module-torch.ao.quantization.pt2e.utils"]], "torch.ao.quantization.qconfig": [[1931, "module-torch.ao.quantization.qconfig"]], "torch.ao.quantization.qconfig_mapping": [[1931, "module-torch.ao.quantization.qconfig_mapping"]], "torch.ao.quantization.quant_type": [[1931, "module-torch.ao.quantization.quant_type"]], "torch.ao.quantization.quantization_mappings": [[1931, "module-torch.ao.quantization.quantization_mappings"]], "torch.ao.quantization.quantize": [[1931, "module-torch.ao.quantization.quantize"]], "torch.ao.quantization.quantize_fx": [[1931, "module-torch.ao.quantization.quantize_fx"]], "torch.ao.quantization.quantize_jit": [[1931, "module-torch.ao.quantization.quantize_jit"]], "torch.ao.quantization.quantize_pt2e": [[1931, "module-torch.ao.quantization.quantize_pt2e"]], "torch.ao.quantization.quantizer.composable_quantizer": [[1931, "module-torch.ao.quantization.quantizer.composable_quantizer"]], "torch.ao.quantization.quantizer.embedding_quantizer": [[1931, "module-torch.ao.quantization.quantizer.embedding_quantizer"]], "torch.ao.quantization.quantizer.quantizer": [[1931, "module-torch.ao.quantization.quantizer.quantizer"]], "torch.ao.quantization.quantizer.utils": [[1931, "module-torch.ao.quantization.quantizer.utils"]], "torch.ao.quantization.quantizer.x86_inductor_quantizer": [[1931, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer": [[1931, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer_utils": [[1931, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"]], "torch.ao.quantization.stubs": [[1931, "module-torch.ao.quantization.stubs"]], "torch.ao.quantization.utils": [[1931, "module-torch.ao.quantization.utils"]], "torch.nn.intrinsic.modules.fused": [[1931, "module-torch.nn.intrinsic.modules.fused"]], "torch.nn.intrinsic.qat.modules.conv_fused": [[1931, "module-torch.nn.intrinsic.qat.modules.conv_fused"]], "torch.nn.intrinsic.qat.modules.linear_fused": [[1931, "module-torch.nn.intrinsic.qat.modules.linear_fused"]], "torch.nn.intrinsic.qat.modules.linear_relu": [[1931, "module-torch.nn.intrinsic.qat.modules.linear_relu"]], "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[1931, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.nn.intrinsic.quantized.modules.bn_relu": [[1931, "module-torch.nn.intrinsic.quantized.modules.bn_relu"]], "torch.nn.intrinsic.quantized.modules.conv_relu": [[1931, "module-torch.nn.intrinsic.quantized.modules.conv_relu"]], "torch.nn.intrinsic.quantized.modules.linear_relu": [[1931, "module-torch.nn.intrinsic.quantized.modules.linear_relu"]], "torch.nn.qat.dynamic.modules.linear": [[1931, "module-torch.nn.qat.dynamic.modules.linear"]], "torch.nn.qat.modules.conv": [[1931, "module-torch.nn.qat.modules.conv"]], "torch.nn.qat.modules.embedding_ops": [[1931, "module-torch.nn.qat.modules.embedding_ops"]], "torch.nn.qat.modules.linear": [[1931, "module-torch.nn.qat.modules.linear"]], "torch.nn.quantizable.modules.activation": [[1931, "module-torch.nn.quantizable.modules.activation"]], "torch.nn.quantizable.modules.rnn": [[1931, "module-torch.nn.quantizable.modules.rnn"]], "torch.nn.quantized.dynamic.modules.conv": [[1931, "module-torch.nn.quantized.dynamic.modules.conv"]], "torch.nn.quantized.dynamic.modules.linear": [[1931, "module-torch.nn.quantized.dynamic.modules.linear"]], "torch.nn.quantized.dynamic.modules.rnn": [[1931, "module-torch.nn.quantized.dynamic.modules.rnn"]], "torch.nn.quantized.functional": [[1931, "module-torch.nn.quantized.functional"]], "torch.nn.quantized.modules.activation": [[1931, "module-torch.nn.quantized.modules.activation"]], "torch.nn.quantized.modules.batchnorm": [[1931, "module-torch.nn.quantized.modules.batchnorm"]], "torch.nn.quantized.modules.conv": [[1931, "module-torch.nn.quantized.modules.conv"]], "torch.nn.quantized.modules.dropout": [[1931, "module-torch.nn.quantized.modules.dropout"]], "torch.nn.quantized.modules.embedding_ops": [[1931, "module-torch.nn.quantized.modules.embedding_ops"]], "torch.nn.quantized.modules.functional_modules": [[1931, "module-torch.nn.quantized.modules.functional_modules"]], "torch.nn.quantized.modules.linear": [[1931, "module-torch.nn.quantized.modules.linear"]], "torch.nn.quantized.modules.normalization": [[1931, "module-torch.nn.quantized.modules.normalization"]], "torch.nn.quantized.modules.rnn": [[1931, "module-torch.nn.quantized.modules.rnn"]], "torch.nn.quantized.modules.utils": [[1931, "module-torch.nn.quantized.modules.utils"]], "torch.quantization.fake_quantize": [[1931, "module-torch.quantization.fake_quantize"]], "torch.quantization.fuse_modules": [[1931, "module-torch.quantization.fuse_modules"]], "torch.quantization.fuser_method_mappings": [[1931, "module-torch.quantization.fuser_method_mappings"]], "torch.quantization.fx.convert": [[1931, "module-torch.quantization.fx.convert"]], "torch.quantization.fx.fuse": [[1931, "module-torch.quantization.fx.fuse"]], "torch.quantization.fx.fusion_patterns": [[1931, "module-torch.quantization.fx.fusion_patterns"]], "torch.quantization.fx.graph_module": [[1931, "module-torch.quantization.fx.graph_module"]], "torch.quantization.fx.match_utils": [[1931, "module-torch.quantization.fx.match_utils"]], "torch.quantization.fx.pattern_utils": [[1931, "module-torch.quantization.fx.pattern_utils"]], "torch.quantization.fx.prepare": [[1931, "module-torch.quantization.fx.prepare"]], "torch.quantization.fx.quantization_patterns": [[1931, "module-torch.quantization.fx.quantization_patterns"]], "torch.quantization.fx.quantization_types": [[1931, "module-torch.quantization.fx.quantization_types"]], "torch.quantization.fx.utils": [[1931, "module-torch.quantization.fx.utils"]], "torch.quantization.observer": [[1931, "module-torch.quantization.observer"]], "torch.quantization.qconfig": [[1931, "module-torch.quantization.qconfig"]], "torch.quantization.quant_type": [[1931, "module-torch.quantization.quant_type"]], "torch.quantization.quantization_mappings": [[1931, "module-torch.quantization.quantization_mappings"]], "torch.quantization.quantize": [[1931, "module-torch.quantization.quantize"]], "torch.quantization.quantize_fx": [[1931, "module-torch.quantization.quantize_fx"]], "torch.quantization.quantize_jit": [[1931, "module-torch.quantization.quantize_jit"]], "torch.quantization.stubs": [[1931, "module-torch.quantization.stubs"]], "torch.quantization.utils": [[1931, "module-torch.quantization.utils"]], "torch.ao.nn.intrinsic": [[1934, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1934, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1934, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1934, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1934, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1934, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1934, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1934, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1934, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1934, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1934, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1934, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1934, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1934, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1934, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1934, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[1934, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.representation": [[1934, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[1934, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[1934, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1934, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1934, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1934, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1934, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1934, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1934, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1934, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1934, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1934, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1934, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1934, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1934, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1934, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1934, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1934, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1934, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1934, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1934, "module-torch.quantization"]], "torch.quantization.fx": [[1934, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1935, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1935, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1935, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1935, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1935, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1935, "torch.random.set_rng_state"]], "torch.random": [[1935, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1936, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[1936, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1936, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1936, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1936, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1936, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1936, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1936, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[1936, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[1936, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[1936, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1936, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1936, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1936, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1936, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1936, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1936, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1936, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1936, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1936, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[1936, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[1936, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[1936, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1936, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[1936, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[1936, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[1936, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[1936, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1936, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1936, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[1936, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1936, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[1936, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1936, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1936, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1936, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1936, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1936, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[1936, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[1936, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1936, "module-torch.distributed.rpc"]], "torch.signal": [[1939, "module-torch.signal"]], "torch.signal.windows": [[1939, "module-torch.signal.windows"]], "torch.sparse": [[1940, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1941, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1941, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1941, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1941, "torch.special.digamma"]], "entr() (in module torch.special)": [[1941, "torch.special.entr"]], "erf() (in module torch.special)": [[1941, "torch.special.erf"]], "erfc() (in module torch.special)": [[1941, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1941, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1941, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1941, "torch.special.exp2"]], "expit() (in module torch.special)": [[1941, "torch.special.expit"]], "expm1() (in module torch.special)": [[1941, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1941, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1941, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1941, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1941, "torch.special.i0"]], "i0e() (in module torch.special)": [[1941, "torch.special.i0e"]], "i1() (in module torch.special)": [[1941, "torch.special.i1"]], "i1e() (in module torch.special)": [[1941, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1941, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1941, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1941, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1941, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1941, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1941, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1941, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1941, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1941, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1941, "torch.special.psi"]], "round() (in module torch.special)": [[1941, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1941, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1941, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1941, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1941, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1941, "torch.special.spherical_bessel_j0"]], "torch.special": [[1941, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1941, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1941, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1941, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1942, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1942, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1942, "torch.ByteStorage"]], "charstorage (class in torch)": [[1942, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1942, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1942, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1942, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1942, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1942, "torch.HalfStorage"]], "intstorage (class in torch)": [[1942, "torch.IntStorage"]], "longstorage (class in torch)": [[1942, "torch.LongStorage"]], "qint32storage (class in torch)": [[1942, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1942, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1942, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1942, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1942, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1942, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1942, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1942, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1942, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1942, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1942, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1942, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1942, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1942, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1942, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1942, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1942, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1942, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1942, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1942, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1942, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1942, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1942, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1942, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1942, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1942, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1942, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1942, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1942, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1942, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1942, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1942, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1942, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1942, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1942, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1942, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1942, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1942, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1942, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1942, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1942, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.element_size"]], "filename (torch.typedstorage property)": [[1942, "torch.TypedStorage.filename"]], "filename (torch.untypedstorage property)": [[1942, "torch.UntypedStorage.filename"]], "fill_() (torch.typedstorage method)": [[1942, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1942, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.float"]], "float8_e4m3fn() (torch.typedstorage method)": [[1942, "torch.TypedStorage.float8_e4m3fn"]], "float8_e4m3fn() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.float8_e4m3fn"]], "float8_e5m2() (torch.typedstorage method)": [[1942, "torch.TypedStorage.float8_e5m2"]], "float8_e5m2() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.float8_e5m2"]], "from_buffer() (torch.typedstorage class method)": [[1942, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1942, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1942, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1942, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1942, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1942, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[1942, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[1942, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1942, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1942, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[1942, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[1942, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[1942, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1942, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1942, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1942, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1942, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1942, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1942, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1942, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1942, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1942, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1942, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1942, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1942, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1942, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1942, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1942, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1942, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1943, "torch.device"]], "dtype (class in torch)": [[1943, "torch.dtype"]], "layout (class in torch)": [[1943, "torch.layout"]], "memory_format (class in torch)": [[1943, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1945, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1945, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1946, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1946, "torch.Tensor.T"]], "tensor (class in torch)": [[1946, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1946, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1946, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1947, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1947, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1947, "torch.testing.make_tensor"]], "torch.testing": [[1947, "module-torch.testing"]], "symbool (class in torch)": [[1948, "torch.SymBool"]], "symfloat (class in torch)": [[1948, "torch.SymFloat"]], "symint (class in torch)": [[1948, "torch.SymInt"]], "tag (class in torch)": [[1948, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1948, "torch.torch.default_generator"]], "name (torch.tag property)": [[1948, "torch.Tag.name"]], "torch": [[1948, "module-torch"]], "torch.contrib": [[1948, "module-torch.contrib"]], "torch.functional": [[1948, "module-torch.functional"]], "torch.quasirandom": [[1948, "module-torch.quasirandom"]], "torch.return_types": [[1948, "module-torch.return_types"]], "torch.serialization": [[1948, "module-torch.serialization"]], "torch.signal.windows.windows": [[1948, "module-torch.signal.windows.windows"]], "torch.sparse.semi_structured": [[1948, "module-torch.sparse.semi_structured"]], "torch.storage": [[1948, "module-torch.storage"]], "torch.torch_version": [[1948, "module-torch.torch_version"]], "torch.types": [[1948, "module-torch.types"]], "torch.utils.backcompat": [[1948, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1948, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1948, "module-torch.utils.model_dump"]], "torch.utils.viz": [[1948, "module-torch.utils.viz"]], "torch.version": [[1948, "module-torch.version"]], "logger (class in torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1949, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1949, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1949, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1949, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1949, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1949, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1949, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1949, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1949, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1949, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1949, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1949, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1950, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1950, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1950, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1950, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1950, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1950, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1950, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1950, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[1952, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[1970, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1970, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1970, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1970, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1970, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1970, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1970, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1970, "torch.overrides.resolve_name"]], "torch.overrides": [[1970, "module-torch.overrides"]], "wrap_torch_function() (in module torch.overrides)": [[1970, "torch.overrides.wrap_torch_function"]], "_dump_snapshot() (in module torch.cuda.memory)": [[1971, "torch.cuda.memory._dump_snapshot"]], "_record_memory_history() (in module torch.cuda.memory)": [[1971, "torch.cuda.memory._record_memory_history"]], "_snapshot() (in module torch.cuda.memory)": [[1971, "torch.cuda.memory._snapshot"]], "torch.finfo (class in torch)": [[1972, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1972, "torch.torch.iinfo"]], "torch.utils": [[1973, "module-torch.utils"]], "torch.utils.backend_registration": [[1973, "module-torch.utils.backend_registration"]], "torch.utils.benchmark.examples.blas_compare_setup": [[1973, "module-torch.utils.benchmark.examples.blas_compare_setup"]], "torch.utils.benchmark.examples.compare": [[1973, "module-torch.utils.benchmark.examples.compare"]], "torch.utils.benchmark.examples.fuzzer": [[1973, "module-torch.utils.benchmark.examples.fuzzer"]], "torch.utils.benchmark.examples.op_benchmark": [[1973, "module-torch.utils.benchmark.examples.op_benchmark"]], "torch.utils.benchmark.examples.simple_timeit": [[1973, "module-torch.utils.benchmark.examples.simple_timeit"]], "torch.utils.benchmark.examples.spectral_ops_fuzz_test": [[1973, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers.binary": [[1973, "module-torch.utils.benchmark.op_fuzzers.binary"]], "torch.utils.benchmark.op_fuzzers.sparse_binary": [[1973, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"]], "torch.utils.benchmark.op_fuzzers.sparse_unary": [[1973, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"]], "torch.utils.benchmark.op_fuzzers.spectral": [[1973, "module-torch.utils.benchmark.op_fuzzers.spectral"]], "torch.utils.benchmark.op_fuzzers.unary": [[1973, "module-torch.utils.benchmark.op_fuzzers.unary"]], "torch.utils.benchmark.utils.common": [[1973, "module-torch.utils.benchmark.utils.common"]], "torch.utils.benchmark.utils.compare": [[1973, "module-torch.utils.benchmark.utils.compare"]], "torch.utils.benchmark.utils.compile": [[1973, "module-torch.utils.benchmark.utils.compile"]], "torch.utils.benchmark.utils.cpp_jit": [[1973, "module-torch.utils.benchmark.utils.cpp_jit"]], "torch.utils.benchmark.utils.fuzzer": [[1973, "module-torch.utils.benchmark.utils.fuzzer"]], "torch.utils.benchmark.utils.sparse_fuzzer": [[1973, "module-torch.utils.benchmark.utils.sparse_fuzzer"]], "torch.utils.benchmark.utils.timer": [[1973, "module-torch.utils.benchmark.utils.timer"]], "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface": [[1973, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"]], "torch.utils.bundled_inputs": [[1973, "module-torch.utils.bundled_inputs"]], "torch.utils.checkpoint": [[1973, "module-torch.utils.checkpoint"]], "torch.utils.collect_env": [[1973, "module-torch.utils.collect_env"]], "torch.utils.cpp_backtrace": [[1973, "module-torch.utils.cpp_backtrace"]], "torch.utils.cpp_extension": [[1973, "module-torch.utils.cpp_extension"]], "torch.utils.data.backward_compatibility": [[1973, "module-torch.utils.data.backward_compatibility"]], "torch.utils.data.dataloader": [[1973, "module-torch.utils.data.dataloader"]], "torch.utils.data.datapipes.dataframe.dataframe_wrapper": [[1973, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"]], "torch.utils.data.datapipes.dataframe.dataframes": [[1973, "module-torch.utils.data.datapipes.dataframe.dataframes"]], "torch.utils.data.datapipes.dataframe.datapipes": [[1973, "module-torch.utils.data.datapipes.dataframe.datapipes"]], "torch.utils.data.datapipes.dataframe.structures": [[1973, "module-torch.utils.data.datapipes.dataframe.structures"]], "torch.utils.data.datapipes.datapipe": [[1973, "module-torch.utils.data.datapipes.datapipe"]], "torch.utils.data.datapipes.gen_pyi": [[1973, "module-torch.utils.data.datapipes.gen_pyi"]], "torch.utils.data.datapipes.iter.callable": [[1973, "module-torch.utils.data.datapipes.iter.callable"]], "torch.utils.data.datapipes.iter.combinatorics": [[1973, "module-torch.utils.data.datapipes.iter.combinatorics"]], "torch.utils.data.datapipes.iter.combining": [[1973, "module-torch.utils.data.datapipes.iter.combining"]], "torch.utils.data.datapipes.iter.filelister": [[1973, "module-torch.utils.data.datapipes.iter.filelister"]], "torch.utils.data.datapipes.iter.fileopener": [[1973, "module-torch.utils.data.datapipes.iter.fileopener"]], "torch.utils.data.datapipes.iter.grouping": [[1973, "module-torch.utils.data.datapipes.iter.grouping"]], "torch.utils.data.datapipes.iter.routeddecoder": [[1973, "module-torch.utils.data.datapipes.iter.routeddecoder"]], "torch.utils.data.datapipes.iter.selecting": [[1973, "module-torch.utils.data.datapipes.iter.selecting"]], "torch.utils.data.datapipes.iter.sharding": [[1973, "module-torch.utils.data.datapipes.iter.sharding"]], "torch.utils.data.datapipes.iter.streamreader": [[1973, "module-torch.utils.data.datapipes.iter.streamreader"]], "torch.utils.data.datapipes.iter.utils": [[1973, "module-torch.utils.data.datapipes.iter.utils"]], "torch.utils.data.datapipes.map.callable": [[1973, "module-torch.utils.data.datapipes.map.callable"]], "torch.utils.data.datapipes.map.combinatorics": [[1973, "module-torch.utils.data.datapipes.map.combinatorics"]], "torch.utils.data.datapipes.map.combining": [[1973, "module-torch.utils.data.datapipes.map.combining"]], "torch.utils.data.datapipes.map.grouping": [[1973, "module-torch.utils.data.datapipes.map.grouping"]], "torch.utils.data.datapipes.map.utils": [[1973, "module-torch.utils.data.datapipes.map.utils"]], "torch.utils.data.datapipes.utils.common": [[1973, "module-torch.utils.data.datapipes.utils.common"]], "torch.utils.data.datapipes.utils.decoder": [[1973, "module-torch.utils.data.datapipes.utils.decoder"]], "torch.utils.data.datapipes.utils.snapshot": [[1973, "module-torch.utils.data.datapipes.utils.snapshot"]], "torch.utils.data.dataset": [[1973, "module-torch.utils.data.dataset"]], "torch.utils.data.distributed": [[1973, "module-torch.utils.data.distributed"]], "torch.utils.data.graph": [[1973, "module-torch.utils.data.graph"]], "torch.utils.data.graph_settings": [[1973, "module-torch.utils.data.graph_settings"]], "torch.utils.data.sampler": [[1973, "module-torch.utils.data.sampler"]], "torch.utils.dlpack": [[1973, "module-torch.utils.dlpack"]], "torch.utils.file_baton": [[1973, "module-torch.utils.file_baton"]], "torch.utils.flop_counter": [[1973, "module-torch.utils.flop_counter"]], "torch.utils.hipify.constants": [[1973, "module-torch.utils.hipify.constants"]], "torch.utils.hipify.cuda_to_hip_mappings": [[1973, "module-torch.utils.hipify.cuda_to_hip_mappings"]], "torch.utils.hipify.hipify_python": [[1973, "module-torch.utils.hipify.hipify_python"]], "torch.utils.hipify.version": [[1973, "module-torch.utils.hipify.version"]], "torch.utils.hooks": [[1973, "module-torch.utils.hooks"]], "torch.utils.jit.log_extract": [[1973, "module-torch.utils.jit.log_extract"]], "torch.utils.mkldnn": [[1973, "module-torch.utils.mkldnn"]], "torch.utils.mobile_optimizer": [[1973, "module-torch.utils.mobile_optimizer"]], "torch.utils.show_pickle": [[1973, "module-torch.utils.show_pickle"]], "torch.utils.tensorboard.summary": [[1973, "module-torch.utils.tensorboard.summary"]], "torch.utils.tensorboard.writer": [[1973, "module-torch.utils.tensorboard.writer"]], "torch.utils.throughput_benchmark": [[1973, "module-torch.utils.throughput_benchmark"]], "torch.utils.weak": [[1973, "module-torch.utils.weak"]]}})