Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "compile/cudagraph_trees", "compile/custom-backends", "compile/deep-dive", "compile/dynamic-shapes", "compile/fake-tensor", "compile/faq", "compile/fine_grained_apis", "compile/generated/torch.compile", "compile/get-started", "compile/guards-overview", "compile/index", "compile/inductor_profiling", "compile/nn-module", "compile/performance-dashboard", "compile/profiling_torch_compile", "compile/technical-overview", "compile/torchfunc-and-torchcompile", "compile/transformations", "compile/troubleshooting", "compiler", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.set_multithreading_enabled", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "ir", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "type_info"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "compile/cudagraph_trees.rst", "compile/custom-backends.rst", "compile/deep-dive.rst", "compile/dynamic-shapes.rst", "compile/fake-tensor.rst", "compile/faq.rst", "compile/fine_grained_apis.rst", "compile/generated/torch.compile.rst", "compile/get-started.rst", "compile/guards-overview.rst", "compile/index.rst", "compile/inductor_profiling.rst", "compile/nn-module.rst", "compile/performance-dashboard.rst", "compile/profiling_torch_compile.rst", "compile/technical-overview.rst", "compile/torchfunc-and-torchcompile.rst", "compile/transformations.rst", "compile/troubleshooting.rst", "compiler.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose.md", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success.md", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure.md", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd.md", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid.md", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node.md", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference.md", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.set_multithreading_enabled.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "ir.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.overrides.rst", "type_info.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deeper Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs to control fine-grained tracing", "torch.compile", "Getting Started", "Guards Overview", "torch.compile", "TorchInductor GPU Profiling", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Technical Overview", "torch.func interaction with torch.compile", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.compiler", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "DIAGSYS0001:arg-format-too-verbose", "FXE0001:fx-tracer-success", "FXE0002:fx-tracer-failure", "FXE0003:fx-frontend-aotautograd", "FXE0004:fx-pass-convert-neg-to-sigmoid", "FXE0005:fx-ir-add-node", "FXE0006:atenlib-symbolic-function", "FXE0007:atenlib-fx-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0009:fx-frontend-dynamo-make-fx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "POE0001:node-missing-onnx-shape-inference", "POE0002:missing-custom-symbolic-function", "POE0003:missing-standard-symbolic-function", "POE0004:operator-supported-in-newer-opset-version", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "set_multithreading_enabled", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "IRs", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "Type Info"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 12, 14, 16, 17, 20, 21, 25, 26, 28, 29, 31, 33, 34, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 57, 59, 60, 61, 62, 64, 68, 71, 72, 153, 602, 679, 688, 734, 737, 738, 739, 744, 745, 747, 755, 756, 759, 763, 787, 788, 798, 799, 813, 823, 840, 857, 892, 901, 903, 904, 905, 931, 936, 939, 944, 945, 957, 970, 982, 1028, 1071, 1091, 1127, 1139, 1151, 1159, 1160, 1195, 1198, 1204, 1205, 1209, 1211, 1213, 1228, 1245, 1270, 1302, 1361, 1362, 1363, 1366, 1382, 1383, 1391, 1396, 1400, 1401, 1426, 1427, 1428, 1430, 1436, 1437, 1440, 1445, 1447, 1458, 1473, 1474, 1475, 1476, 1477, 1501, 1502, 1579, 1610, 1624, 1644, 1652, 1667, 1668, 1697, 1700, 1705, 1741, 1751, 1798, 1799, 1800, 1801, 1802, 1803, 1841, 1843, 1858, 1865, 1868, 1870, 1871, 1875, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1894, 1895, 1896, 1897, 1899, 1902, 1903, 1905, 1909, 1912, 1913, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1937], "conveni": [0, 3, 7, 11, 14, 20, 22, 26, 33, 56, 59, 60, 70, 1139, 1255, 1601, 1858, 1865, 1870, 1875, 1890, 1891, 1894, 1896, 1901, 1902, 1913, 1920], "method": [0, 3, 7, 9, 12, 13, 19, 20, 25, 29, 33, 34, 36, 39, 42, 43, 44, 46, 48, 49, 50, 51, 57, 59, 64, 71, 72, 224, 225, 325, 487, 488, 497, 498, 499, 520, 613, 792, 796, 798, 814, 815, 816, 837, 840, 853, 873, 874, 875, 892, 896, 897, 898, 899, 912, 913, 1008, 1122, 1151, 1196, 1198, 1199, 1201, 1202, 1203, 1208, 1209, 1213, 1214, 1215, 1243, 1261, 1262, 1269, 1270, 1327, 1330, 1338, 1346, 1373, 1430, 1431, 1432, 1440, 1441, 1458, 1529, 1601, 1610, 1618, 1619, 1622, 1624, 1626, 1629, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1646, 1651, 1664, 1665, 1670, 1671, 1672, 1674, 1684, 1716, 1797, 1812, 1816, 1865, 1866, 1868, 1871, 1872, 1879, 1881, 1883, 1884, 1885, 1889, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1907, 1910, 1912, 1913, 1916, 1918, 1921, 1923, 1927, 1928, 1930, 1931, 1933, 1936], "where": [0, 1, 2, 3, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 25, 29, 31, 33, 34, 39, 40, 42, 46, 47, 48, 50, 52, 59, 60, 61, 62, 64, 66, 67, 69, 72, 156, 226, 256, 402, 404, 487, 679, 692, 694, 695, 698, 734, 757, 759, 780, 819, 820, 832, 876, 895, 900, 902, 915, 921, 930, 936, 943, 944, 945, 952, 966, 970, 975, 977, 986, 988, 1050, 1051, 1054, 1058, 1076, 1087, 1088, 1090, 1093, 1094, 1096, 1097, 1099, 1100, 1101, 1103, 1104, 1106, 1108, 1132, 1133, 1134, 1138, 1139, 1142, 1154, 1155, 1156, 1157, 1187, 1188, 1190, 1191, 1194, 1195, 1196, 1199, 1211, 1217, 1218, 1219, 1222, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1266, 1267, 1269, 1270, 1275, 1278, 1285, 1286, 1287, 1288, 1292, 1295, 1297, 1298, 1299, 1300, 1303, 1320, 1325, 1326, 1328, 1331, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1500, 1502, 1512, 1513, 1520, 1525, 1527, 1528, 1546, 1547, 1564, 1566, 1567, 1570, 1571, 1573, 1579, 1582, 1610, 1612, 1613, 1617, 1644, 1645, 1646, 1647, 1656, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1691, 1703, 1713, 1715, 1716, 1736, 1737, 1773, 1779, 1780, 1785, 1789, 1793, 1794, 1795, 1798, 1799, 1800, 1801, 1802, 1803, 1810, 1811, 1812, 1815, 1816, 1830, 1839, 1840, 1841, 1842, 1843, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1867, 1868, 1869, 1871, 1872, 1877, 1878, 1880, 1883, 1886, 1889, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1923, 1925, 1926, 1928, 1930, 1935, 1936], "some": [0, 1, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 33, 38, 39, 40, 42, 44, 47, 48, 50, 52, 60, 61, 64, 67, 69, 70, 71, 72, 478, 496, 566, 688, 747, 952, 1024, 1028, 1031, 1071, 1092, 1094, 1102, 1103, 1104, 1119, 1128, 1139, 1173, 1195, 1196, 1198, 1199, 1208, 1211, 1213, 1243, 1261, 1267, 1292, 1299, 1302, 1338, 1342, 1346, 1347, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1390, 1393, 1394, 1395, 1396, 1397, 1400, 1421, 1422, 1430, 1433, 1434, 1435, 1437, 1444, 1445, 1461, 1462, 1478, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1513, 1514, 1541, 1546, 1564, 1567, 1572, 1579, 1601, 1610, 1611, 1612, 1613, 1617, 1650, 1685, 1691, 1697, 1715, 1735, 1759, 1766, 1780, 1816, 1858, 1865, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1883, 1884, 1885, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1930], "oper": [0, 2, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 26, 27, 28, 29, 31, 34, 36, 39, 44, 48, 49, 56, 57, 59, 60, 65, 70, 71, 72, 84, 85, 86, 87, 88, 89, 256, 315, 323, 337, 354, 404, 446, 447, 448, 449, 450, 493, 496, 513, 515, 517, 588, 679, 685, 688, 740, 741, 742, 746, 747, 756, 757, 767, 768, 778, 784, 791, 792, 794, 795, 798, 822, 825, 858, 860, 861, 864, 888, 890, 896, 898, 920, 921, 923, 925, 928, 930, 932, 934, 939, 942, 945, 949, 952, 959, 964, 975, 977, 1005, 1014, 1045, 1050, 1051, 1052, 1053, 1066, 1071, 1072, 1073, 1074, 1084, 1089, 1107, 1119, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1139, 1146, 1149, 1155, 1156, 1173, 1198, 1208, 1209, 1213, 1214, 1217, 1227, 1240, 1250, 1253, 1254, 1267, 1268, 1277, 1284, 1292, 1297, 1302, 1311, 1312, 1325, 1328, 1342, 1347, 1352, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1387, 1388, 1389, 1390, 1392, 1397, 1416, 1421, 1426, 1427, 1428, 1430, 1443, 1448, 1449, 1450, 1457, 1472, 1473, 1475, 1477, 1481, 1497, 1498, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1514, 1515, 1516, 1517, 1521, 1522, 1524, 1525, 1529, 1533, 1540, 1546, 1548, 1554, 1555, 1565, 1567, 1571, 1579, 1585, 1586, 1597, 1598, 1599, 1600, 1610, 1612, 1613, 1646, 1652, 1657, 1661, 1662, 1683, 1689, 1699, 1703, 1712, 1713, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1735, 1741, 1758, 1759, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1792, 1793, 1794, 1795, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1815, 1830, 1851, 1858, 1861, 1863, 1864, 1866, 1867, 1868, 1872, 1875, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1902, 1903, 1904, 1905, 1906, 1910, 1912, 1915, 1917, 1919, 1920, 1921, 1922, 1926, 1928, 1929, 1932], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 31, 33, 34, 35, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 84, 85, 86, 91, 100, 122, 153, 157, 194, 211, 321, 323, 337, 344, 345, 408, 436, 449, 459, 487, 488, 496, 499, 513, 517, 520, 543, 556, 582, 583, 584, 586, 587, 616, 679, 685, 688, 711, 712, 713, 714, 715, 716, 719, 728, 729, 730, 731, 732, 734, 747, 756, 759, 767, 768, 771, 772, 773, 778, 780, 784, 785, 786, 789, 792, 793, 794, 795, 798, 801, 806, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 830, 831, 832, 833, 836, 853, 857, 858, 860, 861, 864, 877, 878, 879, 888, 889, 890, 892, 893, 894, 895, 897, 898, 900, 901, 902, 903, 906, 907, 908, 912, 913, 916, 919, 920, 921, 922, 930, 932, 933, 940, 942, 944, 952, 955, 959, 963, 966, 968, 971, 972, 973, 974, 975, 977, 979, 980, 982, 985, 995, 996, 999, 1000, 1006, 1010, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1028, 1029, 1038, 1040, 1041, 1047, 1052, 1053, 1054, 1063, 1071, 1072, 1074, 1084, 1085, 1086, 1089, 1091, 1099, 1101, 1105, 1107, 1114, 1116, 1119, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1144, 1148, 1149, 1151, 1155, 1156, 1157, 1158, 1172, 1173, 1185, 1195, 1196, 1198, 1199, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1217, 1219, 1221, 1229, 1233, 1234, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1250, 1251, 1252, 1254, 1255, 1261, 1262, 1263, 1267, 1268, 1269, 1270, 1275, 1278, 1284, 1287, 1288, 1291, 1292, 1297, 1298, 1299, 1302, 1308, 1320, 1325, 1327, 1328, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1416, 1417, 1418, 1423, 1424, 1425, 1426, 1427, 1430, 1432, 1436, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1461, 1463, 1466, 1469, 1477, 1478, 1479, 1480, 1482, 1485, 1486, 1487, 1494, 1496, 1497, 1498, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1524, 1525, 1529, 1531, 1538, 1540, 1541, 1548, 1553, 1554, 1555, 1565, 1567, 1573, 1579, 1583, 1585, 1586, 1594, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1644, 1645, 1646, 1650, 1651, 1652, 1654, 1655, 1657, 1658, 1661, 1664, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1695, 1697, 1698, 1700, 1701, 1703, 1713, 1715, 1716, 1717, 1720, 1721, 1722, 1724, 1726, 1728, 1730, 1731, 1737, 1744, 1747, 1752, 1753, 1755, 1756, 1757, 1759, 1761, 1762, 1763, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1789, 1791, 1792, 1794, 1795, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1815, 1816, 1817, 1830, 1834, 1837, 1841, 1843, 1848, 1850, 1851, 1855, 1858, 1863, 1865, 1866, 1867, 1868, 1869, 1871, 1872, 1873, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1890, 1893, 1895, 1897, 1898, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1915, 1917, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936], "float": [0, 1, 3, 14, 19, 28, 31, 39, 40, 42, 46, 48, 50, 53, 61, 64, 72, 156, 157, 222, 315, 317, 319, 323, 335, 402, 476, 482, 513, 684, 686, 691, 693, 697, 731, 734, 737, 738, 739, 743, 744, 745, 747, 754, 755, 760, 761, 762, 763, 764, 769, 770, 771, 772, 773, 774, 776, 778, 779, 780, 784, 791, 792, 793, 798, 816, 818, 829, 837, 838, 851, 856, 857, 860, 861, 864, 879, 907, 908, 921, 922, 930, 937, 940, 944, 960, 965, 966, 970, 971, 1041, 1054, 1065, 1066, 1076, 1089, 1107, 1116, 1117, 1118, 1119, 1121, 1142, 1145, 1154, 1155, 1156, 1159, 1160, 1180, 1187, 1188, 1190, 1191, 1192, 1193, 1196, 1198, 1213, 1214, 1217, 1221, 1223, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1275, 1284, 1286, 1288, 1315, 1319, 1320, 1324, 1326, 1327, 1328, 1331, 1334, 1338, 1342, 1348, 1349, 1350, 1352, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1416, 1418, 1422, 1430, 1435, 1436, 1438, 1439, 1444, 1448, 1451, 1452, 1453, 1454, 1455, 1461, 1467, 1469, 1472, 1473, 1475, 1477, 1478, 1479, 1482, 1483, 1484, 1511, 1512, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1526, 1531, 1540, 1565, 1572, 1579, 1598, 1610, 1614, 1615, 1618, 1627, 1628, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1646, 1647, 1651, 1657, 1658, 1664, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1697, 1699, 1701, 1703, 1709, 1712, 1716, 1717, 1718, 1719, 1731, 1735, 1736, 1756, 1757, 1760, 1764, 1773, 1774, 1776, 1777, 1779, 1813, 1816, 1820, 1837, 1839, 1851, 1867, 1868, 1869, 1870, 1871, 1872, 1878, 1881, 1883, 1884, 1886, 1887, 1889, 1890, 1894, 1896, 1898, 1902, 1905, 1909, 1911, 1913, 1915, 1916, 1917, 1921, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1937], "datatyp": [0, 72, 879, 1195, 1198, 1430, 1612, 1613, 1759, 1905, 1909, 1925], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 16, 17, 18, 19, 20, 21, 25, 28, 29, 33, 34, 36, 39, 40, 43, 46, 48, 49, 50, 52, 56, 57, 59, 60, 64, 65, 67, 69, 70, 71, 72, 100, 101, 116, 132, 133, 136, 148, 149, 152, 153, 162, 163, 168, 169, 199, 200, 201, 210, 236, 241, 245, 246, 247, 257, 276, 277, 284, 285, 286, 287, 293, 294, 295, 296, 297, 298, 305, 306, 309, 310, 311, 312, 315, 317, 323, 326, 346, 354, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 380, 381, 396, 397, 410, 414, 439, 440, 451, 452, 456, 457, 488, 498, 520, 560, 561, 562, 563, 579, 582, 615, 616, 617, 620, 621, 679, 684, 693, 737, 738, 739, 740, 741, 742, 759, 813, 825, 860, 864, 870, 877, 878, 883, 889, 892, 893, 906, 907, 908, 912, 913, 919, 924, 925, 927, 928, 929, 931, 936, 952, 965, 971, 972, 975, 977, 979, 986, 996, 1017, 1059, 1065, 1066, 1067, 1068, 1075, 1076, 1077, 1091, 1098, 1116, 1117, 1118, 1119, 1122, 1128, 1129, 1130, 1131, 1134, 1138, 1140, 1141, 1142, 1152, 1153, 1154, 1163, 1164, 1166, 1167, 1172, 1173, 1175, 1187, 1196, 1198, 1202, 1209, 1218, 1220, 1221, 1222, 1224, 1225, 1230, 1248, 1250, 1253, 1254, 1267, 1275, 1276, 1277, 1279, 1281, 1282, 1285, 1286, 1292, 1295, 1296, 1300, 1301, 1305, 1308, 1319, 1321, 1331, 1334, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1367, 1377, 1382, 1384, 1396, 1430, 1431, 1440, 1458, 1473, 1477, 1481, 1504, 1505, 1506, 1531, 1540, 1579, 1598, 1601, 1610, 1614, 1615, 1633, 1655, 1659, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1694, 1695, 1701, 1703, 1731, 1735, 1751, 1756, 1759, 1761, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1813, 1814, 1830, 1836, 1840, 1842, 1855, 1856, 1861, 1862, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1879, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1909, 1912, 1916, 1917, 1921, 1922, 1923, 1926, 1930, 1931, 1932, 1936], "lower": [0, 1, 8, 16, 29, 40, 42, 48, 64, 792, 794, 858, 931, 936, 943, 944, 945, 947, 1085, 1086, 1158, 1159, 1227, 1234, 1236, 1244, 1245, 1252, 1255, 1260, 1298, 1320, 1327, 1338, 1448, 1504, 1505, 1506, 1577, 1578, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1699, 1714, 1716, 1736, 1751, 1759, 1796, 1839, 1840, 1841, 1867, 1868, 1869, 1871, 1887, 1889, 1891, 1902, 1907, 1911, 1916, 1926, 1932], "point": [0, 1, 7, 8, 9, 12, 13, 16, 18, 19, 20, 23, 28, 31, 39, 40, 43, 46, 50, 56, 59, 60, 64, 72, 91, 156, 157, 323, 335, 341, 482, 697, 737, 738, 739, 740, 741, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 758, 760, 761, 762, 763, 764, 774, 776, 778, 779, 780, 784, 794, 798, 818, 819, 820, 821, 824, 829, 851, 860, 861, 864, 879, 901, 903, 904, 905, 907, 908, 921, 922, 930, 952, 965, 966, 970, 1020, 1022, 1031, 1035, 1036, 1117, 1118, 1119, 1145, 1151, 1155, 1156, 1160, 1180, 1195, 1198, 1213, 1214, 1221, 1223, 1244, 1245, 1268, 1270, 1275, 1284, 1327, 1334, 1343, 1344, 1345, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1423, 1424, 1425, 1430, 1481, 1482, 1494, 1520, 1529, 1540, 1579, 1598, 1610, 1657, 1669, 1700, 1716, 1717, 1718, 1722, 1731, 1744, 1756, 1757, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1851, 1866, 1868, 1870, 1871, 1872, 1875, 1881, 1887, 1889, 1890, 1891, 1895, 1899, 1902, 1905, 1914, 1915, 1916, 1917, 1919, 1921, 1922, 1925, 1928, 1930, 1931, 1932, 1933, 1934, 1937], "lower_precision_fp": 0, "half": [0, 1, 10, 40, 48, 616, 960, 1085, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1198, 1260, 1266, 1358, 1359, 1360, 1361, 1362, 1363, 1378, 1379, 1381, 1430, 1524, 1525, 1528, 1666, 1691, 1744, 1812, 1884, 1902, 1905, 1925, 1927, 1928, 1931, 1933], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 33, 34, 39, 40, 42, 47, 48, 57, 59, 60, 64, 65, 66, 67, 68, 69, 70, 72, 338, 588, 616, 759, 792, 840, 859, 877, 898, 907, 908, 921, 930, 954, 959, 1014, 1015, 1024, 1066, 1071, 1072, 1092, 1114, 1117, 1118, 1124, 1128, 1131, 1132, 1133, 1139, 1155, 1156, 1196, 1198, 1199, 1205, 1208, 1213, 1217, 1244, 1245, 1256, 1269, 1338, 1346, 1374, 1377, 1393, 1394, 1395, 1430, 1431, 1432, 1440, 1441, 1458, 1481, 1523, 1541, 1597, 1601, 1610, 1611, 1612, 1613, 1618, 1643, 1661, 1686, 1709, 1724, 1728, 1747, 1756, 1759, 1816, 1827, 1858, 1863, 1865, 1866, 1868, 1870, 1871, 1878, 1883, 1884, 1885, 1890, 1891, 1894, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1912, 1914, 1915, 1916, 1919, 1921, 1922, 1925, 1927, 1928, 1932, 1933, 1935, 1936], "linear": [0, 2, 9, 25, 29, 40, 42, 43, 46, 48, 64, 66, 68, 70, 72, 432, 473, 474, 475, 476, 477, 480, 710, 719, 727, 728, 764, 791, 792, 793, 795, 813, 853, 857, 858, 860, 861, 902, 945, 977, 1071, 1127, 1129, 1137, 1139, 1151, 1198, 1202, 1209, 1223, 1229, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1258, 1260, 1288, 1327, 1346, 1352, 1372, 1380, 1381, 1389, 1415, 1430, 1432, 1445, 1447, 1449, 1457, 1459, 1466, 1469, 1480, 1482, 1518, 1527, 1528, 1540, 1574, 1582, 1587, 1598, 1601, 1610, 1617, 1618, 1622, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1642, 1650, 1651, 1654, 1694, 1697, 1705, 1716, 1851, 1858, 1866, 1869, 1870, 1876, 1879, 1886, 1889, 1894, 1895, 1896, 1898, 1902, 1907, 1909, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1921], "layer": [0, 8, 16, 40, 42, 44, 46, 47, 64, 67, 733, 734, 759, 840, 857, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1369, 1370, 1371, 1375, 1382, 1383, 1385, 1393, 1394, 1395, 1400, 1401, 1402, 1415, 1417, 1423, 1424, 1425, 1436, 1437, 1445, 1447, 1458, 1469, 1473, 1474, 1475, 1476, 1477, 1543, 1610, 1617, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1866, 1889, 1894, 1896, 1898, 1901, 1902, 1907, 1909, 1912, 1914, 1916, 1917, 1919, 1925, 1935], "convolut": [0, 1, 2, 18, 737, 738, 739, 740, 741, 742, 771, 772, 773, 952, 1207, 1358, 1359, 1360, 1361, 1362, 1363, 1369, 1370, 1371, 1375, 1406, 1407, 1408, 1409, 1410, 1411, 1442, 1443, 1448, 1478, 1479, 1481, 1504, 1505, 1506, 1507, 1508, 1509, 1528, 1529, 1759, 1866, 1867, 1869, 1879, 1889, 1893, 1894, 1899, 1902, 1911, 1915, 1916, 1919], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 56, 57, 59, 60, 61, 64, 66, 67, 68, 69, 71, 72, 84, 86, 91, 100, 153, 256, 321, 323, 337, 338, 341, 379, 404, 449, 472, 482, 487, 499, 513, 517, 543, 579, 588, 616, 679, 688, 689, 690, 696, 734, 755, 759, 760, 762, 763, 764, 778, 781, 782, 784, 785, 786, 791, 792, 793, 794, 795, 798, 813, 814, 815, 816, 818, 819, 820, 821, 824, 839, 853, 857, 858, 859, 860, 861, 864, 873, 874, 885, 886, 887, 889, 892, 898, 900, 901, 902, 903, 904, 905, 907, 908, 921, 930, 931, 933, 934, 936, 939, 945, 952, 960, 965, 966, 969, 970, 973, 974, 975, 977, 978, 980, 985, 997, 1008, 1014, 1017, 1018, 1028, 1038, 1045, 1054, 1059, 1063, 1066, 1071, 1087, 1088, 1089, 1090, 1092, 1094, 1099, 1101, 1107, 1110, 1112, 1113, 1117, 1118, 1119, 1127, 1128, 1133, 1135, 1137, 1138, 1139, 1143, 1151, 1155, 1156, 1158, 1160, 1173, 1175, 1187, 1188, 1190, 1191, 1194, 1195, 1196, 1198, 1199, 1202, 1204, 1205, 1208, 1211, 1213, 1214, 1219, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1250, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1264, 1267, 1268, 1269, 1270, 1279, 1280, 1281, 1282, 1284, 1285, 1287, 1289, 1290, 1292, 1295, 1298, 1299, 1300, 1303, 1305, 1320, 1324, 1325, 1326, 1327, 1328, 1338, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1377, 1382, 1383, 1384, 1385, 1390, 1393, 1394, 1395, 1396, 1397, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1444, 1445, 1447, 1458, 1461, 1462, 1463, 1469, 1473, 1475, 1477, 1478, 1479, 1481, 1482, 1494, 1500, 1501, 1502, 1512, 1513, 1520, 1521, 1522, 1523, 1529, 1540, 1541, 1564, 1567, 1569, 1572, 1579, 1597, 1598, 1599, 1600, 1601, 1606, 1607, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1622, 1629, 1643, 1647, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1664, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1693, 1696, 1697, 1709, 1715, 1716, 1722, 1731, 1734, 1735, 1742, 1744, 1755, 1756, 1759, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1808, 1811, 1812, 1815, 1816, 1825, 1827, 1831, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1851, 1852, 1853, 1854, 1858, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1887, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937], "much": [0, 4, 7, 9, 14, 16, 20, 21, 34, 39, 40, 153, 892, 901, 906, 1028, 1233, 1234, 1261, 1270, 1374, 1610, 1633, 1697, 1868, 1891, 1894, 1899, 1902, 1907, 1913, 1914, 1921, 1922, 1925], "faster": [0, 2, 8, 16, 19, 23, 26, 31, 39, 40, 42, 64, 901, 907, 908, 1127, 1227, 1228, 1233, 1234, 1238, 1243, 1251, 1253, 1255, 1258, 1261, 1263, 1267, 1270, 1446, 1463, 1569, 1585, 1610, 1614, 1615, 1617, 1672, 1673, 1684, 1798, 1799, 1800, 1802, 1803, 1879, 1891, 1894, 1899, 1912, 1916, 1925, 1930], "reduct": [0, 2, 18, 22, 29, 42, 64, 323, 513, 517, 952, 1243, 1275, 1327, 1346, 1347, 1353, 1364, 1366, 1374, 1384, 1390, 1391, 1396, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1479, 1501, 1502, 1510, 1512, 1513, 1521, 1526, 1537, 1538, 1541, 1542, 1552, 1560, 1561, 1562, 1563, 1564, 1572, 1583, 1584, 1595, 1596, 1610, 1716, 1793, 1869, 1884, 1895, 1899, 1913, 1916], "often": [0, 2, 4, 7, 8, 15, 16, 21, 25, 29, 33, 39, 42, 48, 60, 67, 72, 153, 892, 906, 1213, 1244, 1245, 1254, 1303, 1373, 1393, 1394, 1395, 1494, 1502, 1520, 1529, 1601, 1617, 1664, 1699, 1871, 1891, 1894, 1898, 1901, 1902, 1904, 1905, 1906, 1913, 1921, 1930], "requir": [0, 1, 5, 8, 9, 11, 12, 13, 15, 16, 18, 19, 23, 25, 33, 34, 39, 40, 42, 43, 44, 46, 48, 50, 58, 59, 64, 67, 69, 71, 72, 122, 153, 224, 337, 459, 496, 513, 515, 517, 559, 792, 794, 822, 825, 879, 888, 892, 897, 900, 901, 902, 903, 904, 905, 906, 952, 971, 972, 1027, 1071, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1112, 1113, 1139, 1140, 1211, 1237, 1268, 1270, 1284, 1366, 1373, 1374, 1473, 1474, 1475, 1476, 1477, 1479, 1521, 1579, 1601, 1610, 1611, 1620, 1622, 1624, 1664, 1675, 1685, 1703, 1800, 1812, 1851, 1858, 1865, 1868, 1871, 1873, 1878, 1879, 1883, 1885, 1886, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1909, 1913, 1914, 1916, 1917, 1921, 1922, 1923, 1925, 1930, 1932, 1933, 1935, 1936], "dynam": [0, 13, 16, 18, 21, 24, 26, 29, 33, 34, 39, 679, 728, 732, 759, 760, 761, 762, 763, 764, 793, 814, 825, 828, 843, 849, 850, 851, 852, 857, 858, 952, 973, 1205, 1211, 1213, 1269, 1617, 1866, 1870, 1871, 1872, 1889, 1894, 1902, 1905, 1909, 1912, 1913, 1917], "rang": [0, 1, 3, 12, 14, 20, 25, 29, 39, 42, 43, 46, 48, 59, 60, 62, 68, 72, 91, 303, 482, 683, 760, 762, 764, 794, 818, 819, 820, 821, 822, 824, 825, 826, 884, 922, 947, 1032, 1033, 1041, 1071, 1121, 1137, 1158, 1159, 1160, 1264, 1275, 1290, 1299, 1315, 1327, 1338, 1366, 1376, 1378, 1379, 1383, 1389, 1401, 1420, 1432, 1437, 1441, 1447, 1463, 1464, 1465, 1469, 1524, 1525, 1529, 1585, 1610, 1615, 1687, 1688, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1716, 1795, 1850, 1868, 1869, 1871, 1891, 1893, 1894, 1898, 1902, 1904, 1905, 1909, 1911, 1912, 1915, 1916, 1919, 1920, 1926, 1928, 1930, 1931, 1932, 1933], "tri": [0, 2, 3, 7, 15, 16, 39, 48, 52, 72, 579, 1198, 1430, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1870, 1871, 1883, 1898, 1909, 1913], "match": [0, 1, 3, 16, 20, 28, 42, 44, 46, 48, 59, 72, 86, 153, 315, 317, 323, 474, 475, 499, 500, 579, 582, 692, 698, 778, 792, 793, 794, 853, 877, 892, 906, 907, 908, 971, 974, 986, 987, 988, 1017, 1063, 1071, 1127, 1139, 1175, 1198, 1211, 1213, 1230, 1269, 1291, 1365, 1374, 1430, 1436, 1482, 1501, 1502, 1540, 1566, 1573, 1579, 1598, 1610, 1622, 1652, 1658, 1717, 1751, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1832, 1858, 1868, 1871, 1878, 1884, 1886, 1891, 1892, 1894, 1896, 1902, 1907, 1909, 1912, 1913, 1914, 1916, 1917, 1918, 1921, 1928, 1932, 1934], "each": [0, 1, 2, 5, 9, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 57, 60, 61, 62, 64, 65, 67, 69, 70, 72, 85, 100, 122, 156, 157, 400, 404, 493, 513, 515, 517, 544, 606, 616, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 685, 692, 694, 695, 698, 734, 759, 791, 839, 840, 858, 860, 861, 864, 876, 885, 886, 887, 888, 890, 891, 892, 897, 906, 920, 923, 932, 936, 940, 941, 943, 946, 950, 952, 954, 970, 983, 984, 988, 1017, 1020, 1022, 1028, 1030, 1034, 1037, 1043, 1048, 1049, 1050, 1051, 1054, 1055, 1066, 1069, 1071, 1088, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1112, 1113, 1115, 1120, 1124, 1129, 1130, 1134, 1138, 1139, 1140, 1151, 1157, 1159, 1160, 1161, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1198, 1213, 1214, 1219, 1251, 1269, 1270, 1285, 1287, 1295, 1297, 1298, 1299, 1300, 1303, 1305, 1311, 1312, 1320, 1326, 1328, 1338, 1343, 1346, 1347, 1351, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1377, 1382, 1383, 1385, 1390, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1410, 1411, 1415, 1417, 1421, 1422, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1444, 1445, 1447, 1458, 1461, 1462, 1464, 1469, 1472, 1478, 1479, 1481, 1499, 1501, 1502, 1507, 1508, 1509, 1512, 1513, 1515, 1516, 1517, 1520, 1521, 1522, 1526, 1529, 1539, 1541, 1564, 1565, 1567, 1569, 1572, 1579, 1592, 1601, 1606, 1607, 1610, 1643, 1644, 1646, 1656, 1657, 1658, 1664, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1708, 1712, 1713, 1716, 1723, 1731, 1736, 1737, 1742, 1746, 1751, 1764, 1775, 1781, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1815, 1816, 1831, 1833, 1834, 1837, 1848, 1849, 1852, 1858, 1859, 1865, 1870, 1871, 1877, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1909, 1912, 1914, 1915, 1916, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1935], "its": [0, 1, 4, 5, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20, 22, 23, 33, 34, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 59, 60, 61, 64, 71, 72, 84, 85, 153, 459, 488, 504, 513, 515, 517, 582, 583, 584, 616, 679, 822, 825, 873, 874, 875, 877, 878, 879, 892, 895, 907, 912, 913, 919, 944, 945, 959, 960, 966, 970, 978, 1006, 1008, 1017, 1054, 1058, 1061, 1071, 1074, 1119, 1124, 1128, 1129, 1130, 1133, 1138, 1159, 1160, 1164, 1178, 1198, 1208, 1233, 1234, 1238, 1243, 1250, 1252, 1255, 1256, 1261, 1267, 1292, 1318, 1346, 1348, 1349, 1350, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1393, 1394, 1395, 1430, 1431, 1440, 1461, 1469, 1477, 1529, 1540, 1567, 1573, 1601, 1606, 1607, 1611, 1612, 1613, 1618, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1644, 1650, 1654, 1658, 1667, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1706, 1731, 1735, 1739, 1740, 1756, 1757, 1761, 1781, 1817, 1836, 1837, 1839, 1847, 1856, 1868, 1870, 1871, 1875, 1879, 1881, 1883, 1890, 1891, 1892, 1894, 1895, 1896, 1898, 1899, 1902, 1904, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1921, 1922, 1923, 1925, 1928, 1929, 1931, 1934, 1935], "appropri": [0, 7, 8, 9, 16, 20, 23, 42, 43, 48, 64, 71, 72, 893, 1017, 1213, 1871, 1872, 1875, 1885, 1899, 1904, 1907, 1914, 1916, 1919, 1921, 1922, 1923, 1927, 1936], "ordinarili": [0, 1890], "train": [0, 1, 11, 12, 16, 19, 21, 22, 24, 26, 29, 34, 39, 40, 42, 43, 45, 46, 50, 57, 58, 59, 60, 64, 67, 68, 72, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 798, 800, 837, 838, 854, 855, 856, 858, 860, 861, 862, 1016, 1017, 1020, 1022, 1029, 1137, 1173, 1198, 1203, 1209, 1212, 1213, 1338, 1342, 1348, 1349, 1350, 1366, 1367, 1368, 1373, 1374, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1430, 1436, 1437, 1448, 1469, 1477, 1495, 1499, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1577, 1578, 1610, 1618, 1620, 1622, 1651, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1865, 1867, 1868, 1869, 1879, 1881, 1889, 1891, 1894, 1895, 1898, 1903, 1905, 1907, 1909, 1912, 1913, 1914, 1915, 1919, 1921, 1923, 1930], "gradscal": [0, 1890, 1894], "togeth": [0, 3, 9, 12, 15, 16, 23, 39, 42, 47, 48, 65, 70, 72, 759, 1014, 1071, 1127, 1129, 1133, 1137, 1138, 1143, 1237, 1382, 1400, 1445, 1540, 1610, 1614, 1837, 1879, 1890, 1896, 1897, 1898, 1901, 1902, 1916, 1921, 1922, 1923, 1925, 1930], "shown": [0, 12, 17, 40, 51, 60, 1014, 1024, 1402, 1622, 1667, 1697, 1764, 1868, 1871, 1890, 1894, 1896, 1898, 1902, 1914, 1916, 1925], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 33, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 90, 91, 194, 211, 244, 256, 262, 291, 313, 315, 317, 319, 323, 337, 354, 403, 404, 446, 447, 448, 449, 450, 472, 482, 484, 488, 493, 496, 499, 513, 515, 517, 536, 543, 557, 559, 579, 580, 582, 583, 584, 585, 586, 587, 588, 606, 616, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 719, 727, 728, 733, 737, 738, 739, 740, 741, 742, 744, 745, 747, 755, 756, 757, 759, 760, 761, 762, 763, 764, 771, 772, 773, 784, 791, 792, 793, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 823, 837, 853, 858, 859, 860, 861, 864, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 910, 912, 913, 920, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 950, 951, 952, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 1014, 1015, 1020, 1022, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1135, 1137, 1139, 1140, 1141, 1142, 1145, 1151, 1154, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1168, 1172, 1173, 1175, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1220, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1494, 1496, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1520, 1521, 1524, 1525, 1529, 1531, 1564, 1566, 1567, 1570, 1571, 1579, 1598, 1601, 1610, 1617, 1618, 1620, 1622, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1706, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1751, 1753, 1754, 1755, 1756, 1757, 1760, 1761, 1764, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1789, 1791, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1810, 1811, 1813, 1815, 1816, 1818, 1819, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1868, 1870, 1871, 1872, 1875, 1877, 1878, 1880, 1881, 1884, 1885, 1886, 1889, 1891, 1892, 1893, 1894, 1898, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936], "recip": [0, 3, 15, 46, 1430, 1610, 1624, 1890, 1902], "howev": [0, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 33, 34, 39, 40, 42, 46, 48, 50, 56, 64, 65, 66, 68, 69, 71, 72, 86, 482, 544, 893, 900, 974, 996, 1017, 1059, 1061, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1127, 1128, 1132, 1133, 1135, 1138, 1139, 1198, 1201, 1202, 1208, 1210, 1237, 1252, 1253, 1255, 1269, 1270, 1287, 1346, 1349, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1374, 1430, 1504, 1505, 1506, 1529, 1601, 1610, 1643, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1858, 1866, 1871, 1886, 1890, 1891, 1894, 1896, 1900, 1902, 1904, 1906, 1907, 1908, 1909, 1913, 1914, 1921, 1923, 1925], "modular": [0, 1890], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 20, 22, 25, 27, 29, 33, 38, 39, 40, 42, 46, 48, 49, 50, 52, 56, 58, 59, 64, 65, 69, 71, 72, 86, 199, 224, 256, 315, 323, 459, 515, 517, 555, 602, 616, 679, 688, 814, 815, 816, 860, 891, 898, 900, 902, 906, 907, 916, 923, 934, 946, 952, 963, 964, 966, 968, 971, 972, 974, 975, 983, 996, 1006, 1007, 1008, 1014, 1015, 1017, 1028, 1030, 1034, 1048, 1049, 1071, 1110, 1114, 1119, 1122, 1124, 1131, 1132, 1134, 1160, 1195, 1198, 1201, 1202, 1207, 1208, 1210, 1211, 1213, 1219, 1228, 1229, 1233, 1234, 1235, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1253, 1255, 1256, 1259, 1260, 1261, 1267, 1269, 1270, 1275, 1292, 1302, 1315, 1338, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1396, 1400, 1426, 1427, 1428, 1430, 1437, 1445, 1475, 1477, 1482, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1521, 1529, 1531, 1540, 1546, 1567, 1579, 1597, 1598, 1599, 1600, 1601, 1610, 1617, 1619, 1620, 1622, 1657, 1686, 1691, 1715, 1735, 1738, 1756, 1759, 1766, 1784, 1796, 1812, 1816, 1839, 1851, 1865, 1866, 1868, 1870, 1871, 1875, 1877, 1878, 1879, 1881, 1885, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1902, 1905, 1906, 1907, 1908, 1909, 1913, 1915, 1916, 1917, 1919, 1921, 1923, 1925, 1927, 1933, 1936], "separ": [0, 1, 3, 9, 11, 29, 33, 39, 42, 46, 59, 60, 64, 65, 67, 70, 71, 72, 734, 759, 889, 1071, 1088, 1090, 1096, 1097, 1100, 1101, 1106, 1108, 1127, 1208, 1243, 1258, 1385, 1393, 1394, 1395, 1436, 1438, 1548, 1658, 1865, 1869, 1871, 1877, 1890, 1891, 1893, 1894, 1897, 1907, 1912, 1913, 1922, 1925, 1926, 1930], "desir": [0, 1, 3, 29, 39, 42, 48, 64, 72, 91, 158, 173, 175, 178, 181, 182, 183, 198, 209, 212, 242, 256, 269, 299, 327, 395, 446, 447, 448, 449, 450, 497, 499, 500, 520, 524, 543, 544, 545, 559, 579, 582, 602, 603, 616, 792, 864, 878, 921, 930, 949, 1018, 1019, 1042, 1043, 1052, 1053, 1072, 1073, 1074, 1084, 1089, 1107, 1124, 1125, 1126, 1155, 1156, 1198, 1217, 1268, 1284, 1290, 1297, 1310, 1316, 1325, 1327, 1328, 1346, 1347, 1430, 1480, 1502, 1548, 1585, 1586, 1601, 1643, 1657, 1661, 1662, 1706, 1713, 1716, 1717, 1718, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1765, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1792, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1815, 1830, 1841, 1843, 1863, 1864, 1884, 1885, 1886, 1890, 1891, 1894, 1897, 1900, 1902, 1907, 1914, 1920, 1921, 1926, 1927, 1928], "As": [0, 1, 8, 12, 17, 20, 27, 29, 40, 42, 44, 48, 64, 67, 68, 72, 256, 934, 1071, 1202, 1229, 1233, 1234, 1244, 1245, 1256, 1261, 1369, 1370, 1371, 1375, 1396, 1430, 1461, 1597, 1656, 1662, 1864, 1868, 1870, 1871, 1878, 1886, 1891, 1894, 1896, 1898, 1902, 1905, 1908, 1909, 1913, 1914, 1920, 1921, 1922, 1923, 1925, 1933], "section": [0, 1, 7, 12, 17, 20, 25, 27, 29, 39, 48, 50, 51, 68, 72, 122, 1028, 1071, 1151, 1367, 1382, 1400, 1428, 1445, 1512, 1646, 1831, 1868, 1869, 1870, 1871, 1872, 1883, 1885, 1886, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1904, 1922, 1930], "infer": [0, 1, 2, 3, 5, 11, 14, 16, 19, 21, 24, 31, 34, 48, 59, 579, 616, 860, 861, 864, 878, 879, 988, 1124, 1125, 1160, 1173, 1182, 1196, 1199, 1207, 1212, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1436, 1482, 1540, 1566, 1601, 1655, 1686, 1697, 1731, 1738, 1756, 1757, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1847, 1866, 1868, 1870, 1871, 1875, 1884, 1886, 1902, 1909, 1910, 1915, 1916, 1917, 1919, 1925], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 57, 59, 60, 64, 68, 69, 71, 72, 84, 85, 86, 122, 256, 313, 323, 325, 337, 354, 446, 447, 448, 449, 450, 459, 482, 487, 513, 515, 517, 556, 582, 583, 584, 586, 587, 613, 616, 694, 695, 734, 737, 738, 739, 740, 742, 771, 772, 773, 778, 784, 785, 786, 790, 792, 800, 813, 816, 819, 820, 823, 827, 841, 848, 857, 877, 893, 896, 897, 898, 899, 900, 902, 907, 921, 922, 930, 952, 973, 974, 975, 977, 984, 986, 988, 1014, 1015, 1017, 1038, 1068, 1072, 1074, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1117, 1118, 1122, 1123, 1128, 1139, 1151, 1155, 1156, 1160, 1168, 1179, 1187, 1196, 1198, 1201, 1202, 1209, 1213, 1214, 1217, 1228, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1256, 1258, 1259, 1261, 1262, 1269, 1270, 1287, 1292, 1338, 1361, 1362, 1363, 1366, 1367, 1373, 1374, 1377, 1400, 1430, 1433, 1435, 1436, 1438, 1446, 1469, 1477, 1481, 1482, 1512, 1521, 1523, 1529, 1540, 1567, 1597, 1598, 1601, 1604, 1605, 1606, 1607, 1610, 1612, 1613, 1623, 1643, 1644, 1645, 1657, 1664, 1668, 1672, 1673, 1675, 1686, 1689, 1693, 1696, 1697, 1699, 1703, 1715, 1724, 1728, 1730, 1732, 1755, 1759, 1760, 1762, 1766, 1793, 1797, 1807, 1812, 1816, 1830, 1841, 1843, 1848, 1849, 1851, 1855, 1856, 1857, 1858, 1865, 1869, 1870, 1871, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 28, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 48, 50, 56, 57, 59, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 199, 224, 256, 291, 315, 317, 323, 337, 354, 472, 482, 493, 499, 513, 515, 517, 582, 588, 602, 616, 685, 686, 687, 688, 689, 692, 698, 733, 737, 738, 739, 740, 741, 742, 759, 791, 792, 793, 813, 857, 858, 891, 907, 920, 924, 926, 927, 929, 932, 941, 945, 952, 1006, 1020, 1022, 1028, 1052, 1053, 1054, 1071, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1115, 1137, 1139, 1140, 1151, 1160, 1175, 1198, 1208, 1209, 1211, 1213, 1214, 1229, 1233, 1234, 1237, 1240, 1241, 1242, 1243, 1245, 1254, 1255, 1257, 1261, 1270, 1277, 1285, 1292, 1298, 1302, 1338, 1342, 1346, 1347, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1373, 1374, 1376, 1377, 1382, 1384, 1391, 1396, 1400, 1402, 1430, 1433, 1434, 1435, 1436, 1444, 1445, 1451, 1452, 1453, 1454, 1455, 1456, 1461, 1466, 1480, 1481, 1485, 1486, 1487, 1502, 1504, 1505, 1506, 1529, 1565, 1567, 1579, 1587, 1601, 1606, 1607, 1610, 1620, 1643, 1644, 1645, 1647, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1699, 1744, 1753, 1791, 1801, 1807, 1816, 1831, 1833, 1837, 1845, 1856, 1857, 1858, 1865, 1866, 1868, 1871, 1873, 1875, 1877, 1878, 1879, 1881, 1884, 1885, 1886, 1887, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1936], "api": [0, 2, 3, 5, 8, 9, 11, 21, 26, 40, 42, 43, 47, 50, 51, 52, 56, 57, 58, 59, 60, 64, 65, 68, 71, 799, 823, 860, 893, 894, 895, 903, 919, 941, 972, 1006, 1007, 1008, 1014, 1015, 1017, 1044, 1075, 1115, 1128, 1131, 1132, 1134, 1139, 1208, 1209, 1211, 1315, 1610, 1652, 1654, 1655, 1664, 1666, 1744, 1755, 1761, 1845, 1858, 1865, 1875, 1877, 1878, 1879, 1882, 1883, 1884, 1886, 1891, 1895, 1907, 1909, 1917, 1921, 1922, 1925, 1928, 1930, 1933, 1936], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 28, 29, 31, 33, 34, 36, 39, 40, 42, 46, 47, 48, 49, 56, 59, 64, 68, 69, 70, 71, 72, 157, 221, 224, 225, 256, 325, 513, 515, 517, 542, 613, 740, 741, 742, 759, 799, 813, 860, 879, 888, 889, 898, 921, 930, 944, 952, 957, 971, 1014, 1017, 1028, 1052, 1053, 1071, 1075, 1091, 1122, 1128, 1134, 1138, 1139, 1140, 1143, 1145, 1155, 1156, 1160, 1173, 1198, 1201, 1202, 1204, 1207, 1211, 1213, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1266, 1299, 1305, 1318, 1326, 1338, 1346, 1348, 1349, 1350, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1374, 1377, 1382, 1396, 1400, 1430, 1437, 1445, 1459, 1461, 1469, 1478, 1479, 1481, 1507, 1508, 1509, 1529, 1566, 1582, 1601, 1610, 1620, 1622, 1632, 1634, 1636, 1637, 1638, 1639, 1655, 1687, 1693, 1697, 1700, 1703, 1728, 1735, 1747, 1757, 1772, 1773, 1790, 1793, 1807, 1816, 1825, 1827, 1830, 1836, 1837, 1848, 1849, 1858, 1861, 1865, 1866, 1868, 1870, 1871, 1875, 1877, 1878, 1879, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1921, 1922, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936], "arg": [0, 1, 3, 4, 5, 12, 13, 15, 20, 28, 29, 33, 39, 40, 42, 46, 47, 48, 50, 51, 57, 58, 60, 61, 62, 64, 71, 72, 90, 579, 602, 679, 731, 746, 748, 750, 751, 752, 753, 759, 761, 762, 823, 860, 889, 891, 896, 897, 956, 1017, 1127, 1131, 1132, 1133, 1139, 1198, 1201, 1287, 1346, 1347, 1364, 1366, 1382, 1390, 1392, 1397, 1400, 1419, 1421, 1422, 1430, 1433, 1434, 1435, 1437, 1444, 1445, 1458, 1460, 1461, 1462, 1464, 1468, 1469, 1470, 1471, 1478, 1501, 1502, 1512, 1541, 1564, 1572, 1601, 1610, 1624, 1629, 1643, 1650, 1652, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1817, 1849, 1855, 1858, 1865, 1869, 1871, 1872, 1883, 1885, 1891, 1894, 1895, 1896, 1897, 1904, 1909, 1910, 1913, 1914, 1921, 1922, 1923, 1927, 1935, 1936], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 84, 85, 86, 87, 90, 91, 100, 153, 156, 157, 158, 173, 175, 178, 181, 182, 183, 193, 194, 198, 199, 209, 211, 212, 221, 226, 242, 256, 257, 269, 292, 299, 313, 315, 317, 321, 323, 325, 327, 330, 331, 332, 333, 334, 335, 337, 338, 340, 342, 343, 344, 345, 354, 395, 402, 404, 408, 449, 459, 472, 473, 482, 484, 487, 488, 493, 495, 496, 497, 498, 499, 500, 503, 504, 513, 515, 517, 520, 523, 524, 536, 542, 543, 544, 556, 559, 579, 580, 582, 583, 584, 586, 587, 588, 602, 603, 606, 613, 616, 617, 619, 623, 679, 680, 682, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 722, 723, 724, 725, 726, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 767, 768, 771, 772, 773, 774, 775, 776, 777, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 798, 800, 801, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 823, 825, 826, 832, 837, 838, 839, 856, 857, 858, 860, 861, 864, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 912, 913, 916, 919, 920, 921, 922, 923, 925, 928, 930, 932, 933, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 959, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 986, 988, 991, 992, 993, 995, 999, 1000, 1003, 1006, 1007, 1008, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1058, 1059, 1060, 1061, 1062, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1081, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1142, 1143, 1144, 1145, 1151, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1168, 1172, 1173, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1217, 1218, 1219, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1280, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1461, 1462, 1463, 1465, 1466, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1494, 1497, 1498, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1531, 1540, 1541, 1546, 1548, 1550, 1551, 1553, 1554, 1555, 1564, 1565, 1567, 1569, 1570, 1571, 1572, 1573, 1579, 1582, 1585, 1586, 1594, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1722, 1724, 1725, 1726, 1728, 1729, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1746, 1747, 1751, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1810, 1811, 1812, 1815, 1816, 1817, 1818, 1819, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937], "equival": [0, 3, 5, 12, 20, 39, 40, 46, 47, 48, 52, 59, 60, 68, 69, 72, 84, 158, 173, 175, 178, 181, 182, 183, 242, 257, 269, 299, 321, 327, 395, 449, 459, 498, 500, 524, 603, 609, 616, 617, 619, 691, 743, 747, 754, 756, 758, 784, 785, 786, 875, 889, 933, 935, 938, 940, 943, 950, 951, 1059, 1063, 1066, 1069, 1070, 1071, 1073, 1088, 1090, 1093, 1096, 1097, 1100, 1101, 1103, 1106, 1108, 1126, 1128, 1131, 1133, 1139, 1161, 1163, 1175, 1197, 1198, 1208, 1213, 1214, 1217, 1229, 1250, 1254, 1262, 1267, 1299, 1304, 1318, 1325, 1338, 1348, 1349, 1350, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1373, 1374, 1385, 1391, 1393, 1394, 1395, 1396, 1400, 1402, 1430, 1461, 1469, 1481, 1483, 1548, 1569, 1579, 1598, 1599, 1600, 1610, 1662, 1686, 1722, 1725, 1729, 1753, 1759, 1767, 1789, 1795, 1808, 1818, 1819, 1825, 1830, 1849, 1858, 1859, 1860, 1864, 1868, 1870, 1871, 1891, 1909, 1913, 1917, 1925, 1926, 1928, 1931, 1932, 1936, 1937], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 33, 34, 35, 36, 39, 40, 42, 44, 46, 47, 48, 49, 51, 52, 59, 60, 64, 67, 68, 69, 71, 72, 84, 85, 313, 323, 459, 582, 616, 684, 685, 686, 688, 692, 694, 695, 698, 728, 737, 738, 739, 771, 772, 773, 778, 784, 785, 786, 791, 792, 793, 794, 800, 816, 832, 858, 860, 861, 891, 893, 898, 907, 908, 920, 921, 925, 928, 930, 932, 944, 945, 952, 965, 971, 973, 1014, 1015, 1017, 1034, 1066, 1068, 1071, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1134, 1138, 1155, 1156, 1168, 1195, 1202, 1209, 1213, 1217, 1218, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1288, 1292, 1296, 1301, 1302, 1319, 1358, 1359, 1360, 1361, 1362, 1363, 1370, 1373, 1374, 1377, 1397, 1417, 1435, 1436, 1469, 1477, 1479, 1481, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1521, 1523, 1529, 1540, 1546, 1579, 1597, 1598, 1600, 1610, 1657, 1662, 1664, 1672, 1673, 1675, 1703, 1715, 1734, 1735, 1756, 1759, 1760, 1790, 1793, 1796, 1813, 1816, 1839, 1841, 1843, 1855, 1856, 1857, 1864, 1865, 1866, 1868, 1870, 1872, 1873, 1875, 1879, 1881, 1883, 1887, 1891, 1892, 1893, 1894, 1895, 1896, 1900, 1902, 1904, 1905, 1907, 1908, 1910, 1912, 1913, 1914, 1915, 1919, 1920, 1921, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936], "now": [0, 1, 11, 14, 15, 17, 19, 20, 22, 27, 28, 29, 42, 47, 49, 56, 60, 61, 64, 69, 72, 224, 496, 899, 906, 986, 1014, 1035, 1036, 1122, 1145, 1195, 1196, 1202, 1213, 1247, 1427, 1446, 1482, 1601, 1622, 1633, 1654, 1675, 1756, 1807, 1812, 1868, 1878, 1884, 1885, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1902, 1903, 1909, 1913, 1916, 1922, 1923, 1925, 1933, 1936], "class": [0, 1, 2, 3, 12, 13, 14, 20, 23, 25, 28, 29, 34, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 53, 56, 57, 59, 61, 64, 69, 71, 91, 556, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 835, 836, 837, 838, 839, 840, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 893, 896, 897, 898, 899, 919, 972, 973, 974, 975, 977, 978, 993, 995, 1006, 1046, 1075, 1137, 1173, 1196, 1197, 1198, 1201, 1203, 1204, 1208, 1209, 1212, 1213, 1214, 1215, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1502, 1512, 1520, 1564, 1566, 1601, 1610, 1611, 1612, 1613, 1619, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1643, 1650, 1655, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1722, 1761, 1791, 1866, 1869, 1872, 1875, 1878, 1881, 1883, 1885, 1890, 1891, 1894, 1896, 1897, 1898, 1902, 1904, 1907, 1910, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1925, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1936, 1937], "device_typ": [0, 1, 42, 1890, 1920], "dtype": [0, 1, 5, 13, 15, 29, 31, 36, 37, 39, 42, 44, 47, 64, 72, 156, 157, 194, 211, 215, 216, 217, 218, 244, 313, 315, 317, 319, 321, 323, 411, 430, 433, 446, 447, 448, 449, 450, 454, 459, 471, 482, 484, 513, 515, 564, 579, 580, 602, 616, 686, 688, 691, 692, 696, 698, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 748, 749, 750, 751, 752, 753, 754, 755, 757, 759, 760, 763, 764, 771, 772, 773, 793, 794, 798, 818, 819, 820, 821, 822, 823, 824, 825, 826, 840, 857, 858, 860, 861, 864, 878, 879, 896, 898, 900, 902, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 937, 944, 960, 963, 964, 970, 971, 987, 1052, 1053, 1072, 1073, 1074, 1084, 1088, 1089, 1090, 1096, 1097, 1107, 1114, 1119, 1121, 1123, 1124, 1125, 1126, 1145, 1155, 1156, 1168, 1198, 1202, 1211, 1217, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1279, 1280, 1281, 1282, 1284, 1287, 1288, 1292, 1296, 1297, 1298, 1301, 1302, 1320, 1324, 1325, 1326, 1328, 1338, 1347, 1348, 1349, 1350, 1351, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1373, 1374, 1377, 1382, 1383, 1385, 1393, 1394, 1395, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1430, 1436, 1437, 1438, 1445, 1446, 1447, 1451, 1452, 1453, 1454, 1455, 1469, 1473, 1475, 1477, 1481, 1482, 1483, 1484, 1496, 1512, 1513, 1546, 1548, 1579, 1585, 1586, 1601, 1612, 1613, 1619, 1622, 1623, 1643, 1657, 1661, 1662, 1666, 1668, 1703, 1709, 1713, 1714, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1741, 1744, 1756, 1757, 1759, 1760, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1788, 1792, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1815, 1816, 1827, 1830, 1841, 1843, 1848, 1851, 1856, 1857, 1861, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1878, 1885, 1886, 1894, 1896, 1902, 1905, 1909, 1911, 1916, 1917, 1918, 1925, 1926, 1927, 1930, 1931, 1932, 1937], "none": [0, 1, 2, 3, 5, 12, 18, 20, 29, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 56, 57, 59, 61, 64, 68, 69, 70, 71, 72, 115, 117, 118, 119, 121, 137, 138, 141, 153, 156, 157, 159, 176, 188, 189, 190, 191, 207, 208, 210, 212, 215, 216, 217, 218, 232, 237, 238, 239, 240, 260, 288, 292, 303, 337, 353, 356, 379, 409, 411, 412, 413, 416, 422, 428, 429, 430, 431, 432, 433, 446, 447, 448, 449, 450, 454, 455, 471, 480, 482, 488, 494, 503, 513, 520, 536, 537, 551, 552, 554, 555, 564, 579, 580, 582, 587, 589, 602, 607, 608, 609, 614, 625, 627, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 649, 651, 654, 656, 658, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 748, 749, 750, 751, 752, 753, 754, 765, 766, 767, 768, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 792, 793, 794, 796, 798, 813, 816, 818, 819, 820, 821, 824, 825, 837, 838, 839, 856, 857, 858, 859, 860, 861, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 888, 889, 890, 891, 892, 893, 894, 895, 898, 899, 901, 903, 904, 905, 906, 907, 908, 912, 913, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 936, 939, 941, 942, 943, 944, 945, 947, 948, 950, 952, 957, 960, 961, 962, 964, 965, 967, 968, 969, 970, 971, 972, 974, 975, 977, 978, 979, 983, 984, 986, 987, 988, 991, 992, 993, 999, 1000, 1006, 1016, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1041, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1063, 1064, 1066, 1067, 1068, 1070, 1072, 1073, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1133, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1175, 1176, 1192, 1193, 1195, 1197, 1198, 1202, 1205, 1207, 1208, 1209, 1211, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1373, 1374, 1376, 1378, 1379, 1380, 1383, 1384, 1385, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1444, 1446, 1447, 1461, 1462, 1463, 1464, 1465, 1469, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1489, 1490, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1512, 1513, 1520, 1521, 1524, 1525, 1526, 1527, 1529, 1530, 1537, 1539, 1540, 1541, 1542, 1543, 1546, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1567, 1569, 1572, 1579, 1583, 1584, 1585, 1586, 1594, 1595, 1596, 1598, 1599, 1600, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1621, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1643, 1645, 1646, 1647, 1648, 1651, 1652, 1654, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1703, 1704, 1705, 1708, 1709, 1710, 1712, 1713, 1715, 1716, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1742, 1744, 1745, 1746, 1751, 1764, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1788, 1789, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1827, 1828, 1829, 1830, 1832, 1834, 1837, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1852, 1853, 1854, 1855, 1858, 1860, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1889, 1891, 1894, 1896, 1897, 1902, 1904, 1907, 1909, 1913, 1914, 1915, 1916, 1918, 1920, 1921, 1926, 1927, 1928, 1930, 1932, 1934, 1935, 1936], "enabl": [0, 1, 2, 5, 8, 12, 15, 16, 17, 18, 20, 21, 22, 25, 29, 36, 37, 39, 40, 42, 43, 44, 46, 47, 48, 50, 60, 64, 503, 504, 679, 759, 811, 812, 893, 898, 919, 952, 972, 1017, 1071, 1075, 1173, 1181, 1182, 1200, 1206, 1311, 1312, 1382, 1400, 1445, 1446, 1476, 1579, 1610, 1619, 1620, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1655, 1685, 1760, 1761, 1764, 1791, 1851, 1871, 1877, 1878, 1879, 1882, 1886, 1890, 1891, 1892, 1893, 1894, 1896, 1901, 1903, 1905, 1906, 1909, 1914, 1915, 1920, 1921, 1922, 1925, 1933, 1935, 1936], "true": [0, 1, 2, 3, 5, 13, 14, 16, 18, 19, 20, 21, 23, 25, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 61, 64, 69, 70, 71, 72, 153, 199, 212, 262, 321, 323, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 353, 398, 402, 404, 449, 459, 461, 472, 478, 488, 495, 496, 504, 516, 517, 555, 566, 579, 580, 589, 593, 602, 608, 616, 679, 686, 691, 692, 693, 694, 695, 696, 698, 717, 718, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 745, 748, 753, 755, 759, 760, 763, 764, 767, 768, 778, 784, 785, 796, 813, 825, 858, 872, 874, 875, 879, 888, 891, 892, 893, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 912, 913, 919, 921, 924, 927, 929, 930, 936, 937, 943, 944, 945, 951, 952, 955, 957, 963, 974, 1012, 1066, 1075, 1076, 1077, 1093, 1094, 1100, 1101, 1124, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1138, 1139, 1140, 1142, 1154, 1155, 1156, 1159, 1160, 1171, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1202, 1203, 1204, 1207, 1213, 1214, 1215, 1217, 1219, 1222, 1227, 1228, 1239, 1240, 1241, 1244, 1245, 1246, 1247, 1250, 1252, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1263, 1264, 1267, 1269, 1270, 1279, 1280, 1281, 1282, 1285, 1286, 1287, 1289, 1291, 1295, 1297, 1298, 1299, 1300, 1303, 1320, 1325, 1328, 1331, 1334, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1390, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1439, 1444, 1445, 1446, 1447, 1461, 1462, 1469, 1473, 1475, 1476, 1477, 1478, 1479, 1482, 1483, 1494, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1524, 1525, 1529, 1531, 1533, 1539, 1540, 1541, 1553, 1554, 1555, 1564, 1572, 1579, 1598, 1599, 1601, 1610, 1611, 1613, 1614, 1617, 1618, 1621, 1622, 1623, 1635, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1705, 1713, 1715, 1716, 1720, 1721, 1722, 1739, 1740, 1747, 1750, 1751, 1759, 1760, 1761, 1764, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1789, 1791, 1793, 1810, 1811, 1812, 1815, 1816, 1830, 1834, 1839, 1848, 1849, 1851, 1852, 1853, 1854, 1858, 1861, 1865, 1867, 1869, 1870, 1871, 1878, 1880, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1905, 1906, 1907, 1909, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1936], "cache_en": [0, 1017], "sourc": [0, 1, 2, 3, 4, 5, 9, 16, 17, 18, 20, 29, 32, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 61, 64, 71, 72, 153, 199, 212, 314, 315, 323, 342, 353, 398, 403, 404, 417, 418, 454, 472, 488, 513, 515, 517, 520, 523, 546, 555, 556, 558, 585, 602, 605, 608, 609, 623, 679, 694, 695, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 835, 836, 837, 838, 839, 840, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 885, 886, 887, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 918, 919, 931, 933, 934, 938, 940, 942, 952, 953, 954, 955, 956, 957, 958, 959, 972, 973, 974, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1071, 1075, 1122, 1124, 1140, 1146, 1147, 1150, 1169, 1170, 1171, 1173, 1174, 1179, 1184, 1185, 1186, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1269, 1270, 1290, 1299, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1489, 1490, 1494, 1495, 1499, 1501, 1502, 1503, 1510, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1548, 1550, 1551, 1552, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1572, 1574, 1575, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1589, 1590, 1591, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1722, 1747, 1752, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1765, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1791, 1797, 1804, 1812, 1817, 1820, 1821, 1822, 1823, 1824, 1832, 1851, 1865, 1868, 1869, 1870, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1889, 1898, 1900, 1901, 1905, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1920, 1921, 1922, 1927, 1930, 1932, 1933, 1934, 1935, 1936], "instanc": [0, 3, 11, 20, 28, 39, 42, 43, 44, 46, 48, 49, 50, 56, 59, 60, 61, 64, 69, 72, 142, 616, 679, 733, 747, 756, 792, 795, 823, 825, 840, 857, 972, 1071, 1122, 1196, 1198, 1209, 1213, 1270, 1373, 1374, 1377, 1393, 1394, 1395, 1402, 1430, 1440, 1474, 1476, 1477, 1481, 1539, 1610, 1618, 1629, 1643, 1651, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1801, 1831, 1868, 1870, 1872, 1877, 1879, 1883, 1885, 1890, 1891, 1894, 1895, 1896, 1898, 1902, 1906, 1913, 1916, 1921, 1922, 1923, 1925, 1927, 1932, 1936], "serv": [0, 7, 8, 12, 16, 34, 42, 1867, 1878, 1910, 1912, 1921, 1922], "context": [0, 2, 5, 14, 15, 20, 25, 39, 46, 50, 59, 60, 64, 72, 153, 791, 888, 889, 890, 892, 893, 906, 907, 919, 957, 978, 993, 995, 1006, 1012, 1017, 1024, 1044, 1046, 1075, 1129, 1133, 1138, 1173, 1198, 1311, 1430, 1579, 1601, 1610, 1611, 1620, 1622, 1655, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1761, 1791, 1866, 1871, 1872, 1883, 1890, 1891, 1894, 1896, 1900, 1901, 1904, 1909, 1913, 1915, 1920, 1921, 1923, 1925, 1928, 1933], "manag": [0, 1, 2, 5, 7, 14, 15, 16, 20, 42, 46, 48, 50, 57, 59, 60, 61, 64, 72, 91, 487, 893, 919, 957, 972, 973, 975, 978, 979, 980, 982, 993, 995, 996, 997, 1006, 1007, 1017, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1044, 1046, 1075, 1129, 1133, 1138, 1173, 1311, 1579, 1610, 1619, 1620, 1622, 1655, 1761, 1791, 1866, 1871, 1872, 1891, 1898, 1901, 1909, 1914, 1915, 1920, 1921, 1922, 1925, 1928, 1933], "decor": [0, 1, 12, 17, 26, 48, 52, 56, 60, 72, 898, 954, 957, 1075, 1173, 1203, 1209, 1215, 1655, 1791, 1868, 1870, 1871, 1875, 1890, 1891, 1896, 1914, 1921, 1936], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 13, 14, 15, 16, 19, 20, 23, 28, 29, 31, 33, 34, 39, 40, 42, 43, 48, 50, 51, 59, 60, 64, 65, 67, 68, 69, 70, 72, 153, 513, 679, 734, 792, 796, 798, 823, 892, 894, 906, 907, 937, 951, 955, 1014, 1017, 1041, 1071, 1132, 1198, 1203, 1215, 1253, 1275, 1315, 1329, 1343, 1344, 1345, 1366, 1367, 1384, 1423, 1424, 1425, 1430, 1433, 1436, 1458, 1473, 1610, 1615, 1656, 1664, 1668, 1684, 1793, 1851, 1865, 1870, 1871, 1878, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1909, 1912, 1913, 1914, 1915, 1916, 1918, 1921, 1925, 1928, 1929, 1930, 1932], "region": [0, 3, 5, 15, 16, 18, 25, 48, 56, 767, 768, 952, 1343, 1344, 1345, 1378, 1379, 1389, 1391, 1423, 1424, 1425, 1497, 1498, 1524, 1525, 1554, 1555, 1868, 1883, 1890, 1894], "your": [0, 1, 2, 4, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 29, 31, 33, 34, 35, 39, 42, 46, 47, 48, 51, 52, 56, 58, 59, 60, 61, 62, 64, 68, 69, 71, 72, 892, 898, 900, 901, 906, 952, 955, 1173, 1198, 1202, 1203, 1207, 1210, 1213, 1214, 1215, 1430, 1437, 1477, 1610, 1619, 1622, 1655, 1686, 1760, 1848, 1868, 1870, 1871, 1875, 1877, 1883, 1884, 1885, 1887, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1908, 1909, 1912, 1914, 1917, 1920, 1922, 1925, 1930, 1931, 1933, 1936], "script": [0, 4, 12, 19, 22, 24, 29, 36, 39, 42, 45, 50, 52, 58, 60, 61, 1199, 1201, 1202, 1203, 1204, 1207, 1208, 1210, 1212, 1213, 1215, 1865, 1866, 1870, 1871, 1879, 1893, 1901, 1903, 1907, 1913, 1916, 1921], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 33, 34, 36, 39, 40, 42, 43, 46, 48, 50, 51, 52, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 153, 791, 797, 816, 818, 819, 820, 821, 824, 856, 860, 861, 862, 892, 906, 907, 908, 952, 1016, 1017, 1128, 1133, 1139, 1173, 1198, 1199, 1201, 1202, 1205, 1207, 1209, 1211, 1213, 1214, 1243, 1269, 1270, 1298, 1348, 1349, 1350, 1367, 1393, 1394, 1395, 1403, 1404, 1405, 1412, 1413, 1414, 1430, 1458, 1469, 1579, 1601, 1610, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1759, 1763, 1795, 1841, 1843, 1851, 1858, 1866, 1868, 1871, 1879, 1881, 1882, 1883, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1919, 1920, 1921, 1922, 1923, 1925, 1930, 1933, 1934, 1935], "In": [0, 2, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 28, 29, 34, 36, 39, 42, 44, 46, 48, 52, 59, 60, 61, 64, 66, 67, 68, 69, 71, 72, 86, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 124, 126, 128, 130, 133, 134, 136, 144, 146, 149, 150, 152, 155, 157, 161, 163, 165, 167, 169, 171, 180, 189, 197, 201, 204, 206, 216, 218, 224, 234, 238, 240, 246, 249, 251, 253, 255, 259, 264, 271, 273, 275, 279, 281, 285, 287, 294, 296, 298, 306, 308, 310, 312, 358, 360, 362, 364, 366, 368, 370, 373, 375, 377, 378, 385, 387, 389, 391, 393, 397, 421, 424, 427, 429, 440, 442, 444, 452, 457, 467, 470, 486, 490, 492, 508, 511, 522, 526, 528, 531, 533, 535, 548, 550, 552, 561, 563, 570, 574, 576, 592, 595, 597, 599, 601, 611, 621, 679, 759, 799, 823, 853, 898, 928, 936, 952, 963, 964, 971, 1017, 1028, 1040, 1041, 1045, 1046, 1071, 1092, 1094, 1102, 1103, 1104, 1119, 1129, 1133, 1136, 1138, 1196, 1198, 1207, 1210, 1211, 1213, 1229, 1238, 1243, 1244, 1245, 1253, 1256, 1261, 1266, 1270, 1275, 1278, 1287, 1292, 1298, 1299, 1325, 1343, 1344, 1345, 1347, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1369, 1370, 1371, 1375, 1377, 1382, 1391, 1400, 1415, 1423, 1424, 1425, 1430, 1436, 1473, 1475, 1477, 1481, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1519, 1529, 1536, 1545, 1573, 1576, 1578, 1579, 1593, 1610, 1617, 1622, 1623, 1655, 1686, 1697, 1699, 1735, 1751, 1753, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1816, 1817, 1839, 1851, 1855, 1856, 1865, 1866, 1867, 1868, 1870, 1871, 1877, 1878, 1883, 1884, 1885, 1886, 1889, 1890, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1909, 1912, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1930, 1932], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 85, 91, 153, 157, 193, 224, 244, 256, 315, 317, 323, 325, 330, 337, 513, 515, 517, 536, 544, 559, 606, 613, 616, 679, 686, 687, 734, 740, 741, 742, 755, 759, 764, 778, 784, 786, 788, 791, 795, 814, 816, 822, 825, 853, 860, 861, 863, 877, 878, 879, 888, 890, 891, 892, 894, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 914, 915, 916, 923, 939, 949, 952, 963, 964, 966, 972, 974, 975, 977, 984, 985, 986, 987, 988, 1006, 1007, 1014, 1015, 1017, 1029, 1031, 1041, 1045, 1046, 1056, 1069, 1071, 1073, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1111, 1114, 1122, 1124, 1127, 1128, 1131, 1132, 1133, 1135, 1137, 1139, 1140, 1143, 1151, 1159, 1160, 1161, 1195, 1196, 1198, 1201, 1202, 1205, 1208, 1209, 1211, 1213, 1214, 1215, 1216, 1227, 1228, 1233, 1234, 1239, 1241, 1243, 1246, 1247, 1251, 1254, 1256, 1259, 1260, 1267, 1269, 1270, 1287, 1289, 1292, 1298, 1315, 1320, 1329, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1377, 1378, 1379, 1382, 1390, 1394, 1395, 1398, 1399, 1400, 1402, 1412, 1413, 1414, 1415, 1417, 1418, 1420, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1447, 1449, 1458, 1461, 1463, 1464, 1465, 1469, 1474, 1476, 1477, 1478, 1481, 1483, 1484, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1504, 1505, 1506, 1507, 1508, 1509, 1514, 1520, 1521, 1523, 1524, 1525, 1529, 1540, 1547, 1548, 1550, 1551, 1553, 1554, 1555, 1579, 1583, 1598, 1600, 1601, 1604, 1610, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1629, 1646, 1653, 1655, 1657, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1715, 1720, 1721, 1722, 1741, 1743, 1747, 1755, 1758, 1767, 1773, 1793, 1796, 1797, 1801, 1804, 1809, 1812, 1816, 1830, 1831, 1847, 1848, 1849, 1851, 1856, 1857, 1858, 1859, 1864, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937], "chosen": [0, 16, 29, 69, 1059, 1219, 1579, 1764, 1789, 1834, 1886, 1890, 1894, 1896, 1904, 1909, 1916], "improv": [0, 1, 3, 9, 22, 23, 25, 29, 33, 37, 40, 42, 64, 72, 759, 803, 804, 805, 900, 902, 906, 966, 1151, 1368, 1382, 1400, 1445, 1476, 1579, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1699, 1866, 1868, 1890, 1895, 1896, 1897, 1905, 1906, 1910, 1916, 1917, 1921], "perform": [0, 1, 2, 3, 4, 5, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 59, 60, 64, 68, 71, 72, 122, 209, 212, 459, 579, 602, 616, 685, 686, 687, 688, 689, 690, 759, 780, 803, 804, 805, 846, 857, 860, 893, 898, 900, 902, 903, 906, 907, 920, 932, 952, 963, 964, 973, 979, 1028, 1052, 1053, 1066, 1091, 1114, 1116, 1127, 1128, 1131, 1162, 1173, 1198, 1207, 1208, 1213, 1241, 1243, 1246, 1250, 1253, 1254, 1258, 1259, 1267, 1268, 1270, 1275, 1284, 1297, 1302, 1311, 1312, 1322, 1325, 1328, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1370, 1373, 1374, 1382, 1400, 1430, 1436, 1438, 1445, 1458, 1473, 1476, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1548, 1565, 1579, 1585, 1586, 1601, 1610, 1612, 1613, 1618, 1622, 1643, 1650, 1652, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1705, 1713, 1741, 1755, 1759, 1787, 1792, 1793, 1794, 1795, 1815, 1817, 1851, 1866, 1868, 1871, 1881, 1882, 1883, 1884, 1885, 1887, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1903, 1904, 1905, 1906, 1909, 1912, 1913, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1936], "while": [0, 2, 3, 5, 7, 8, 15, 16, 17, 19, 20, 22, 29, 31, 33, 39, 40, 42, 43, 44, 48, 61, 64, 69, 71, 72, 694, 695, 734, 853, 883, 891, 975, 1046, 1128, 1160, 1198, 1201, 1213, 1214, 1270, 1326, 1338, 1354, 1391, 1393, 1394, 1395, 1400, 1430, 1436, 1448, 1461, 1469, 1473, 1477, 1548, 1610, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1657, 1751, 1872, 1877, 1878, 1885, 1886, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1906, 1907, 1909, 1912, 1914, 1916, 1919, 1921, 1923, 1925, 1926, 1929, 1930, 1931], "maintain": [0, 7, 8, 14, 15, 20, 21, 39, 40, 42, 48, 64, 68, 72, 1342, 1370, 1375, 1522, 1610, 1643, 1657, 1866, 1886, 1890, 1891, 1894, 1896, 1902, 1916], "accuraci": [0, 16, 18, 40, 952, 1261, 1579, 1866, 1881, 1890, 1902, 1930, 1934], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 17, 18, 19, 20, 22, 25, 27, 28, 29, 33, 34, 35, 38, 39, 42, 43, 48, 51, 59, 60, 62, 64, 69, 70, 71, 72, 92, 96, 98, 100, 102, 104, 106, 108, 110, 112, 115, 116, 117, 118, 119, 120, 121, 123, 125, 127, 129, 131, 132, 135, 137, 138, 139, 140, 141, 143, 145, 147, 148, 151, 153, 154, 156, 157, 158, 159, 160, 162, 164, 166, 168, 170, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 192, 195, 196, 200, 202, 203, 205, 207, 208, 210, 213, 214, 215, 217, 220, 221, 223, 227, 228, 229, 230, 231, 232, 233, 236, 237, 239, 241, 242, 243, 245, 247, 248, 250, 252, 254, 257, 258, 263, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 280, 282, 283, 284, 286, 289, 290, 293, 295, 297, 299, 300, 301, 302, 303, 304, 305, 307, 309, 311, 315, 323, 324, 325, 326, 327, 329, 330, 336, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 361, 363, 365, 367, 369, 371, 372, 374, 376, 380, 381, 382, 383, 384, 386, 388, 390, 392, 394, 395, 396, 398, 399, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 428, 430, 431, 432, 433, 434, 435, 439, 441, 443, 451, 453, 454, 456, 458, 460, 461, 462, 463, 465, 466, 468, 469, 471, 478, 480, 481, 483, 485, 488, 489, 491, 493, 494, 495, 497, 498, 499, 501, 502, 505, 506, 507, 510, 515, 517, 518, 519, 521, 524, 525, 527, 529, 530, 532, 534, 537, 538, 539, 541, 542, 546, 547, 549, 551, 553, 554, 555, 560, 562, 564, 566, 567, 568, 569, 571, 572, 573, 575, 577, 578, 589, 590, 591, 593, 594, 596, 598, 600, 604, 605, 608, 609, 610, 613, 614, 615, 617, 618, 619, 620, 679, 692, 694, 695, 698, 729, 730, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 744, 745, 747, 755, 756, 759, 760, 761, 762, 763, 764, 765, 766, 767, 770, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 792, 839, 858, 859, 860, 861, 864, 873, 874, 875, 878, 889, 891, 892, 893, 894, 895, 897, 898, 902, 906, 907, 912, 913, 916, 921, 923, 930, 932, 935, 949, 952, 956, 968, 972, 973, 974, 975, 977, 979, 980, 982, 996, 997, 1006, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1066, 1069, 1071, 1072, 1074, 1075, 1084, 1089, 1107, 1110, 1125, 1130, 1131, 1132, 1134, 1143, 1151, 1155, 1156, 1160, 1161, 1169, 1170, 1171, 1173, 1198, 1202, 1209, 1213, 1214, 1216, 1217, 1219, 1229, 1237, 1240, 1243, 1245, 1252, 1254, 1255, 1263, 1267, 1268, 1270, 1276, 1278, 1284, 1285, 1287, 1295, 1297, 1298, 1299, 1300, 1302, 1303, 1311, 1312, 1318, 1325, 1327, 1328, 1338, 1346, 1347, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1373, 1374, 1376, 1382, 1384, 1390, 1391, 1396, 1397, 1400, 1421, 1422, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1442, 1443, 1444, 1445, 1448, 1457, 1459, 1461, 1462, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1596, 1597, 1598, 1599, 1600, 1610, 1611, 1617, 1618, 1619, 1622, 1628, 1637, 1646, 1651, 1654, 1655, 1656, 1657, 1661, 1703, 1713, 1714, 1724, 1726, 1728, 1730, 1731, 1735, 1738, 1741, 1747, 1756, 1759, 1761, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1791, 1792, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1810, 1811, 1812, 1815, 1825, 1827, 1830, 1836, 1837, 1841, 1843, 1851, 1853, 1854, 1859, 1861, 1863, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1876, 1877, 1878, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1914, 1915, 1916, 1917, 1920, 1921, 1922, 1925, 1926, 1928, 1929, 1931, 1932, 1933, 1936, 1937], "detail": [0, 1, 2, 3, 7, 8, 20, 21, 24, 29, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 48, 50, 60, 64, 70, 72, 153, 325, 495, 613, 734, 737, 738, 739, 740, 741, 742, 759, 765, 766, 767, 770, 771, 772, 773, 778, 779, 781, 782, 783, 784, 792, 858, 859, 860, 861, 872, 889, 891, 892, 893, 894, 895, 898, 907, 935, 956, 968, 973, 977, 979, 980, 982, 996, 997, 1006, 1017, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1054, 1071, 1110, 1132, 1143, 1146, 1147, 1151, 1179, 1186, 1198, 1202, 1213, 1237, 1255, 1262, 1270, 1276, 1278, 1298, 1338, 1342, 1352, 1361, 1362, 1363, 1367, 1373, 1374, 1375, 1376, 1378, 1379, 1382, 1400, 1430, 1436, 1442, 1443, 1445, 1457, 1478, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1530, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1577, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1596, 1597, 1601, 1610, 1611, 1646, 1656, 1667, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1686, 1691, 1703, 1715, 1747, 1758, 1784, 1792, 1837, 1851, 1865, 1868, 1869, 1870, 1871, 1878, 1880, 1882, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1905, 1906, 1907, 1909, 1913, 1914, 1916, 1918, 1920, 1921, 1922, 1923, 1925, 1929, 1930, 1932, 1933, 1936], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 20, 22, 23, 25, 28, 29, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 64, 67, 69, 70, 71, 72, 84, 86, 87, 100, 153, 194, 211, 262, 315, 323, 449, 488, 497, 498, 513, 515, 517, 543, 559, 579, 616, 685, 688, 734, 767, 768, 778, 784, 790, 792, 823, 839, 857, 864, 876, 879, 892, 900, 901, 902, 903, 904, 905, 906, 907, 908, 912, 913, 920, 923, 932, 940, 943, 951, 952, 963, 964, 968, 974, 976, 986, 988, 1010, 1016, 1017, 1029, 1054, 1071, 1110, 1114, 1119, 1124, 1128, 1129, 1134, 1137, 1138, 1139, 1151, 1173, 1187, 1188, 1190, 1191, 1194, 1198, 1199, 1201, 1209, 1210, 1211, 1213, 1214, 1218, 1219, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1267, 1268, 1269, 1270, 1278, 1284, 1287, 1292, 1298, 1299, 1302, 1320, 1325, 1326, 1327, 1338, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1373, 1374, 1377, 1380, 1382, 1383, 1385, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1417, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1444, 1445, 1457, 1458, 1461, 1462, 1463, 1464, 1466, 1469, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1484, 1494, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1513, 1521, 1527, 1529, 1540, 1541, 1564, 1567, 1569, 1572, 1573, 1579, 1587, 1598, 1599, 1600, 1601, 1606, 1607, 1610, 1611, 1612, 1613, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1646, 1651, 1655, 1656, 1657, 1658, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1705, 1712, 1715, 1716, 1738, 1744, 1751, 1756, 1759, 1766, 1784, 1790, 1793, 1795, 1796, 1797, 1807, 1812, 1816, 1825, 1830, 1832, 1837, 1841, 1843, 1848, 1851, 1858, 1861, 1865, 1866, 1868, 1870, 1877, 1879, 1881, 1883, 1884, 1885, 1889, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1912, 1913, 1914, 1915, 1920, 1921, 1922, 1923, 1926, 1928, 1929, 1930, 1931, 1932], "enter": [0, 42, 893, 1173, 1896], "tensor": [0, 2, 5, 7, 8, 11, 12, 13, 14, 16, 18, 19, 20, 21, 27, 28, 29, 33, 35, 36, 39, 40, 42, 43, 44, 46, 48, 49, 64, 67, 68, 69, 70, 71, 72, 86, 91, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 719, 731, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 749, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 793, 797, 798, 799, 800, 801, 818, 819, 820, 821, 823, 824, 826, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 912, 913, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 984, 985, 986, 987, 988, 995, 1003, 1004, 1010, 1014, 1017, 1020, 1024, 1035, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1180, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1201, 1202, 1204, 1205, 1208, 1209, 1211, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1338, 1342, 1343, 1346, 1347, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1382, 1383, 1384, 1390, 1396, 1397, 1400, 1401, 1417, 1420, 1421, 1422, 1423, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1462, 1463, 1464, 1465, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1606, 1607, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1681, 1682, 1683, 1684, 1685, 1686, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1757, 1760, 1761, 1764, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1870, 1871, 1875, 1878, 1887, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1911, 1912, 1913, 1914, 1915, 1917, 1920, 1921, 1922, 1926, 1927, 1930, 1932, 1934, 1935, 1936], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 23, 25, 27, 28, 29, 31, 33, 36, 39, 40, 42, 43, 44, 46, 48, 50, 52, 53, 57, 58, 59, 60, 62, 64, 69, 71, 72, 153, 256, 499, 544, 616, 696, 757, 780, 791, 792, 793, 799, 809, 810, 811, 812, 814, 815, 816, 817, 822, 823, 825, 853, 864, 888, 889, 890, 892, 898, 900, 906, 907, 908, 928, 934, 938, 939, 963, 974, 1010, 1017, 1028, 1087, 1088, 1090, 1091, 1092, 1094, 1098, 1102, 1103, 1104, 1119, 1127, 1128, 1135, 1136, 1137, 1139, 1160, 1197, 1198, 1202, 1204, 1208, 1209, 1211, 1213, 1219, 1227, 1229, 1233, 1234, 1238, 1243, 1244, 1245, 1250, 1251, 1254, 1258, 1261, 1267, 1269, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1346, 1347, 1351, 1352, 1358, 1359, 1360, 1367, 1368, 1372, 1376, 1377, 1380, 1381, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1396, 1397, 1416, 1417, 1419, 1420, 1421, 1429, 1430, 1438, 1440, 1441, 1444, 1448, 1449, 1450, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1479, 1480, 1481, 1500, 1504, 1505, 1506, 1546, 1565, 1566, 1579, 1601, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1634, 1644, 1645, 1647, 1650, 1652, 1657, 1664, 1667, 1686, 1691, 1731, 1747, 1762, 1764, 1816, 1858, 1865, 1868, 1869, 1870, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1909, 1911, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1927, 1930, 1932, 1934, 1935, 1936], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 40, 42, 46, 47, 48, 50, 51, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 84, 85, 153, 256, 337, 449, 499, 679, 688, 733, 734, 747, 756, 780, 888, 889, 890, 891, 892, 897, 898, 900, 901, 902, 906, 934, 952, 972, 995, 1006, 1008, 1017, 1018, 1038, 1071, 1127, 1128, 1131, 1132, 1133, 1134, 1139, 1173, 1198, 1202, 1203, 1210, 1213, 1214, 1215, 1243, 1261, 1269, 1292, 1299, 1302, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1400, 1426, 1427, 1428, 1430, 1435, 1436, 1437, 1445, 1464, 1473, 1475, 1477, 1482, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1540, 1546, 1579, 1597, 1598, 1601, 1610, 1618, 1644, 1652, 1654, 1655, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1697, 1715, 1738, 1747, 1755, 1798, 1799, 1800, 1802, 1803, 1807, 1858, 1865, 1868, 1870, 1871, 1873, 1875, 1878, 1879, 1881, 1883, 1884, 1886, 1889, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1936], "should": [0, 1, 3, 4, 5, 9, 12, 15, 16, 17, 19, 20, 22, 23, 25, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 86, 122, 153, 157, 315, 323, 400, 404, 446, 447, 448, 449, 450, 488, 496, 513, 515, 517, 582, 583, 584, 586, 587, 685, 688, 689, 734, 759, 771, 772, 773, 792, 795, 799, 816, 823, 837, 838, 853, 854, 855, 858, 864, 888, 889, 890, 891, 892, 896, 897, 898, 899, 900, 901, 902, 906, 912, 913, 920, 921, 922, 923, 930, 943, 957, 970, 974, 977, 987, 988, 1006, 1008, 1017, 1062, 1072, 1073, 1074, 1084, 1089, 1092, 1093, 1094, 1102, 1103, 1104, 1107, 1122, 1124, 1125, 1126, 1128, 1129, 1133, 1137, 1138, 1139, 1155, 1156, 1159, 1160, 1195, 1196, 1198, 1199, 1203, 1207, 1209, 1210, 1213, 1214, 1215, 1217, 1242, 1267, 1268, 1269, 1275, 1284, 1287, 1288, 1289, 1338, 1346, 1347, 1351, 1364, 1366, 1367, 1369, 1370, 1371, 1374, 1375, 1396, 1422, 1430, 1436, 1437, 1438, 1457, 1478, 1482, 1494, 1500, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1521, 1529, 1579, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1643, 1644, 1645, 1648, 1650, 1661, 1662, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1715, 1717, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1738, 1754, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1816, 1830, 1839, 1858, 1863, 1864, 1865, 1866, 1868, 1870, 1871, 1875, 1877, 1878, 1880, 1881, 1883, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1902, 1904, 1905, 1906, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1923, 1925, 1929, 1930, 1932, 1933, 1936], "call": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 20, 22, 23, 28, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 59, 61, 64, 65, 66, 68, 69, 70, 71, 72, 77, 153, 292, 325, 337, 459, 487, 488, 555, 579, 613, 616, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 780, 789, 796, 823, 856, 860, 861, 892, 896, 897, 898, 899, 900, 902, 903, 906, 912, 913, 935, 952, 957, 959, 972, 975, 977, 1006, 1008, 1018, 1019, 1028, 1035, 1036, 1038, 1039, 1069, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1127, 1128, 1139, 1143, 1161, 1173, 1183, 1198, 1201, 1203, 1208, 1209, 1210, 1217, 1253, 1261, 1265, 1267, 1269, 1270, 1299, 1342, 1348, 1349, 1350, 1367, 1368, 1369, 1370, 1371, 1373, 1375, 1377, 1415, 1426, 1427, 1428, 1430, 1437, 1438, 1458, 1469, 1481, 1507, 1508, 1509, 1515, 1516, 1517, 1522, 1540, 1579, 1598, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1619, 1622, 1629, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1645, 1651, 1652, 1654, 1655, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1728, 1755, 1762, 1763, 1791, 1810, 1811, 1812, 1832, 1851, 1853, 1854, 1858, 1859, 1865, 1868, 1872, 1875, 1881, 1883, 1885, 1886, 1887, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1936, 1937], "model": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29, 40, 42, 43, 44, 46, 47, 48, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 72, 84, 85, 90, 791, 792, 793, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 823, 824, 825, 835, 836, 837, 838, 853, 856, 857, 858, 859, 860, 861, 862, 952, 1018, 1038, 1127, 1128, 1129, 1137, 1139, 1173, 1198, 1202, 1203, 1207, 1209, 1213, 1215, 1269, 1338, 1367, 1384, 1395, 1396, 1430, 1436, 1458, 1469, 1473, 1475, 1476, 1477, 1528, 1610, 1611, 1616, 1618, 1620, 1633, 1652, 1653, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1699, 1812, 1858, 1866, 1868, 1870, 1871, 1872, 1879, 1880, 1886, 1891, 1893, 1894, 1895, 1896, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1915, 1917, 1921, 1922, 1924, 1925, 1926, 1930, 1934, 1935], "": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 55, 56, 57, 59, 60, 64, 66, 68, 69, 71, 72, 464, 482, 493, 496, 513, 543, 557, 580, 623, 679, 688, 693, 694, 695, 734, 759, 792, 793, 794, 814, 815, 816, 819, 822, 825, 853, 860, 861, 874, 876, 877, 878, 879, 895, 896, 897, 901, 902, 904, 908, 936, 938, 951, 963, 964, 965, 970, 972, 974, 978, 993, 997, 1006, 1008, 1013, 1014, 1017, 1018, 1019, 1038, 1039, 1040, 1046, 1063, 1066, 1068, 1069, 1071, 1085, 1086, 1088, 1089, 1090, 1093, 1094, 1096, 1097, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1117, 1118, 1119, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1137, 1139, 1143, 1151, 1159, 1160, 1161, 1185, 1187, 1195, 1196, 1198, 1202, 1208, 1209, 1213, 1228, 1229, 1239, 1240, 1241, 1243, 1246, 1250, 1252, 1254, 1255, 1259, 1260, 1261, 1262, 1267, 1269, 1270, 1285, 1292, 1297, 1299, 1302, 1304, 1305, 1311, 1312, 1315, 1324, 1325, 1328, 1330, 1336, 1337, 1338, 1346, 1347, 1348, 1349, 1350, 1353, 1367, 1373, 1384, 1430, 1431, 1436, 1440, 1446, 1458, 1461, 1463, 1469, 1473, 1475, 1477, 1483, 1484, 1501, 1502, 1513, 1526, 1529, 1540, 1541, 1546, 1579, 1585, 1598, 1601, 1606, 1607, 1610, 1611, 1622, 1633, 1646, 1650, 1657, 1658, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1681, 1682, 1683, 1684, 1685, 1686, 1691, 1703, 1705, 1709, 1716, 1731, 1734, 1735, 1738, 1739, 1740, 1742, 1744, 1751, 1758, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1810, 1811, 1812, 1815, 1816, 1817, 1818, 1819, 1827, 1831, 1833, 1839, 1853, 1854, 1855, 1858, 1859, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1875, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936], "wrap": [0, 1, 12, 16, 20, 26, 29, 34, 39, 40, 42, 46, 52, 61, 64, 68, 69, 72, 262, 789, 790, 975, 1128, 1198, 1213, 1367, 1430, 1469, 1605, 1610, 1620, 1646, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1868, 1869, 1871, 1878, 1890, 1891, 1894, 1895, 1896, 1897, 1902, 1908, 1909, 1914, 1915, 1916, 1921, 1922, 1933, 1935, 1936], "forward": [0, 5, 7, 8, 11, 12, 16, 20, 22, 23, 25, 28, 29, 33, 40, 42, 43, 46, 48, 64, 65, 66, 68, 70, 72, 153, 224, 225, 679, 734, 747, 756, 759, 799, 814, 815, 816, 819, 823, 860, 861, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 906, 907, 919, 1017, 1063, 1075, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1128, 1130, 1131, 1132, 1134, 1137, 1173, 1198, 1201, 1202, 1203, 1204, 1208, 1209, 1213, 1214, 1215, 1342, 1346, 1349, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1382, 1400, 1415, 1426, 1427, 1428, 1430, 1431, 1432, 1436, 1437, 1440, 1441, 1445, 1458, 1473, 1474, 1475, 1476, 1477, 1515, 1516, 1517, 1522, 1567, 1601, 1604, 1605, 1606, 1607, 1610, 1620, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1651, 1654, 1655, 1722, 1761, 1790, 1851, 1866, 1867, 1868, 1870, 1871, 1877, 1879, 1883, 1885, 1889, 1890, 1891, 1893, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1905, 1907, 1909, 1912, 1913, 1914, 1915, 1916, 1921, 1933, 1934, 1935], "pass": [0, 1, 3, 5, 6, 7, 12, 15, 16, 18, 20, 21, 24, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69, 71, 72, 153, 256, 449, 513, 515, 517, 543, 559, 792, 793, 822, 825, 858, 860, 879, 888, 889, 890, 891, 892, 898, 906, 936, 952, 958, 972, 1006, 1017, 1061, 1092, 1093, 1094, 1102, 1103, 1104, 1110, 1124, 1127, 1128, 1132, 1133, 1134, 1137, 1138, 1160, 1196, 1198, 1199, 1202, 1207, 1209, 1213, 1214, 1242, 1258, 1260, 1269, 1315, 1338, 1339, 1340, 1341, 1349, 1367, 1373, 1374, 1378, 1379, 1430, 1435, 1436, 1458, 1474, 1475, 1476, 1477, 1482, 1494, 1524, 1525, 1529, 1540, 1541, 1567, 1579, 1601, 1604, 1605, 1606, 1607, 1610, 1620, 1622, 1624, 1629, 1643, 1646, 1650, 1652, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1747, 1751, 1755, 1816, 1865, 1868, 1872, 1875, 1879, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1895, 1896, 1897, 1899, 1901, 1902, 1905, 1909, 1910, 1912, 1913, 1914, 1921, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1935, 1936], "e": [0, 1, 2, 3, 5, 7, 11, 14, 15, 17, 20, 22, 25, 29, 31, 33, 34, 39, 40, 42, 43, 46, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 64, 67, 69, 71, 72, 91, 153, 260, 337, 379, 579, 616, 734, 747, 756, 759, 792, 793, 814, 816, 853, 857, 858, 860, 861, 879, 888, 892, 897, 907, 908, 931, 933, 936, 1003, 1017, 1042, 1071, 1081, 1122, 1128, 1133, 1137, 1148, 1173, 1177, 1178, 1180, 1183, 1195, 1198, 1204, 1205, 1213, 1233, 1234, 1249, 1261, 1269, 1270, 1271, 1273, 1275, 1292, 1303, 1346, 1347, 1348, 1349, 1350, 1353, 1358, 1359, 1360, 1366, 1367, 1369, 1370, 1371, 1373, 1374, 1375, 1377, 1382, 1385, 1390, 1393, 1394, 1395, 1396, 1397, 1400, 1402, 1403, 1404, 1405, 1421, 1430, 1431, 1436, 1437, 1439, 1440, 1444, 1445, 1461, 1469, 1473, 1477, 1478, 1479, 1481, 1504, 1505, 1506, 1513, 1515, 1516, 1517, 1520, 1521, 1522, 1529, 1540, 1572, 1579, 1598, 1600, 1601, 1606, 1610, 1611, 1612, 1613, 1618, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1643, 1644, 1650, 1654, 1657, 1664, 1665, 1672, 1673, 1708, 1719, 1737, 1744, 1751, 1755, 1762, 1767, 1812, 1816, 1865, 1868, 1870, 1871, 1872, 1875, 1878, 1879, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1900, 1901, 1902, 1905, 1907, 1909, 1912, 1913, 1915, 1916, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1932, 1936, 1937], "network": [0, 1, 7, 8, 14, 34, 46, 48, 59, 840, 1017, 1198, 1213, 1214, 1342, 1348, 1349, 1350, 1353, 1361, 1362, 1363, 1367, 1368, 1369, 1370, 1371, 1372, 1375, 1384, 1396, 1400, 1430, 1437, 1442, 1443, 1448, 1457, 1459, 1469, 1473, 1475, 1477, 1494, 1528, 1529, 1582, 1601, 1618, 1620, 1646, 1651, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1868, 1870, 1871, 1889, 1890, 1896, 1905, 1906, 1909, 1912, 1916, 1921, 1922, 1923], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 12, 13, 15, 16, 19, 23, 24, 25, 29, 33, 34, 39, 40, 42, 44, 56, 59, 60, 64, 72, 85, 323, 517, 582, 767, 768, 858, 860, 954, 1099, 1101, 1159, 1196, 1198, 1199, 1227, 1306, 1307, 1343, 1344, 1345, 1351, 1353, 1367, 1376, 1384, 1417, 1426, 1427, 1428, 1430, 1436, 1474, 1475, 1476, 1477, 1480, 1496, 1497, 1498, 1513, 1526, 1546, 1610, 1644, 1645, 1647, 1780, 1840, 1841, 1842, 1843, 1865, 1868, 1870, 1871, 1878, 1879, 1881, 1883, 1891, 1893, 1894, 1898, 1901, 1902, 1907, 1909, 1915, 1916, 1921, 1923, 1930, 1933, 1936], "loss": [0, 1, 40, 42, 43, 46, 48, 64, 1129, 1195, 1233, 1234, 1243, 1261, 1338, 1346, 1347, 1353, 1364, 1366, 1373, 1384, 1390, 1391, 1396, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1479, 1501, 1502, 1512, 1513, 1526, 1541, 1564, 1572, 1610, 1644, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1690, 1699, 1759, 1865, 1866, 1881, 1885, 1891, 1894, 1895, 1898, 1899, 1902, 1912, 1916, 1917, 1921, 1922, 1930], "comput": [0, 3, 5, 7, 8, 11, 14, 15, 16, 19, 28, 31, 33, 35, 39, 40, 42, 44, 48, 50, 52, 64, 65, 66, 68, 153, 292, 488, 495, 680, 682, 696, 697, 759, 767, 768, 799, 801, 818, 819, 820, 821, 823, 824, 888, 892, 893, 894, 896, 897, 900, 901, 902, 903, 904, 905, 906, 907, 908, 912, 913, 919, 924, 925, 926, 927, 928, 929, 940, 942, 943, 944, 951, 964, 966, 971, 1014, 1017, 1054, 1063, 1065, 1068, 1071, 1075, 1076, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1114, 1116, 1117, 1118, 1120, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1141, 1142, 1143, 1151, 1154, 1157, 1158, 1159, 1160, 1173, 1175, 1198, 1201, 1209, 1217, 1218, 1220, 1222, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1270, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1296, 1297, 1298, 1301, 1325, 1327, 1331, 1338, 1342, 1343, 1344, 1345, 1348, 1349, 1350, 1361, 1362, 1363, 1365, 1366, 1368, 1373, 1374, 1382, 1385, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1420, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1436, 1437, 1439, 1444, 1445, 1463, 1465, 1469, 1478, 1479, 1482, 1496, 1497, 1498, 1511, 1512, 1520, 1521, 1528, 1529, 1531, 1540, 1548, 1553, 1554, 1555, 1556, 1557, 1558, 1569, 1572, 1579, 1585, 1586, 1601, 1604, 1606, 1607, 1610, 1611, 1614, 1617, 1620, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1637, 1644, 1650, 1654, 1655, 1657, 1670, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1703, 1709, 1715, 1716, 1720, 1721, 1735, 1736, 1759, 1761, 1767, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1790, 1792, 1793, 1794, 1795, 1812, 1816, 1817, 1832, 1837, 1855, 1858, 1866, 1868, 1871, 1878, 1881, 1884, 1885, 1887, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1909, 1912, 1916, 1919, 1921, 1925, 1926, 1931, 1934], "backward": [0, 1, 5, 9, 11, 12, 16, 22, 23, 25, 28, 29, 42, 43, 44, 46, 48, 64, 68, 69, 72, 292, 337, 488, 496, 503, 504, 513, 515, 517, 580, 679, 685, 688, 759, 814, 815, 816, 889, 894, 895, 896, 897, 898, 899, 901, 903, 906, 907, 912, 913, 919, 920, 932, 1017, 1075, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1127, 1128, 1198, 1270, 1278, 1292, 1302, 1346, 1347, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1373, 1382, 1383, 1384, 1397, 1400, 1401, 1417, 1421, 1422, 1430, 1436, 1437, 1444, 1445, 1474, 1475, 1476, 1477, 1478, 1479, 1501, 1502, 1512, 1513, 1529, 1540, 1564, 1567, 1602, 1606, 1607, 1610, 1622, 1655, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1690, 1703, 1715, 1790, 1793, 1797, 1816, 1851, 1865, 1866, 1869, 1871, 1877, 1885, 1886, 1889, 1890, 1895, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1912, 1913, 1915, 1916, 1921, 1925, 1926, 1931], "under": [0, 1, 3, 4, 5, 9, 14, 15, 16, 20, 25, 29, 39, 42, 59, 64, 65, 67, 69, 71, 87, 907, 915, 937, 1173, 1198, 1353, 1430, 1494, 1520, 1521, 1617, 1619, 1622, 1667, 1736, 1867, 1883, 1890, 1891, 1894, 1895, 1897, 1899, 1904, 1909, 1913, 1914, 1916, 1919, 1920, 1923, 1925, 1926, 1930, 1933, 1935], "recommend": [0, 1, 5, 16, 39, 40, 42, 44, 48, 50, 59, 60, 64, 68, 71, 72, 86, 91, 449, 892, 959, 963, 964, 971, 1092, 1093, 1094, 1102, 1103, 1104, 1185, 1201, 1243, 1270, 1315, 1338, 1367, 1541, 1610, 1722, 1848, 1865, 1868, 1880, 1883, 1885, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1902, 1904, 1905, 1907, 1909, 1913, 1916], "same": [0, 1, 3, 7, 11, 12, 14, 15, 16, 18, 20, 23, 25, 28, 29, 33, 34, 35, 36, 39, 40, 42, 43, 44, 46, 48, 50, 56, 57, 59, 60, 61, 62, 64, 67, 69, 71, 72, 142, 156, 198, 224, 257, 313, 315, 317, 321, 323, 341, 446, 447, 448, 449, 450, 472, 484, 497, 498, 500, 513, 515, 517, 520, 543, 579, 616, 617, 685, 688, 692, 694, 695, 696, 698, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 744, 745, 755, 757, 760, 761, 762, 763, 764, 778, 784, 787, 788, 792, 793, 795, 799, 801, 813, 818, 821, 823, 824, 858, 860, 877, 878, 879, 891, 894, 897, 900, 901, 902, 903, 904, 905, 907, 908, 920, 922, 923, 932, 934, 936, 939, 944, 946, 952, 955, 960, 971, 972, 974, 985, 987, 1006, 1017, 1054, 1059, 1061, 1062, 1068, 1071, 1073, 1074, 1077, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1119, 1123, 1124, 1126, 1127, 1128, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1140, 1143, 1151, 1159, 1160, 1168, 1172, 1189, 1195, 1198, 1208, 1209, 1213, 1214, 1218, 1219, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1265, 1285, 1289, 1291, 1292, 1295, 1297, 1298, 1299, 1300, 1303, 1325, 1328, 1329, 1330, 1336, 1337, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1377, 1380, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1402, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1438, 1439, 1444, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1481, 1482, 1485, 1486, 1487, 1494, 1500, 1501, 1502, 1504, 1505, 1506, 1512, 1521, 1529, 1531, 1540, 1541, 1579, 1598, 1610, 1617, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1643, 1647, 1652, 1657, 1658, 1662, 1664, 1668, 1682, 1703, 1708, 1709, 1712, 1713, 1725, 1727, 1729, 1733, 1735, 1737, 1738, 1742, 1744, 1751, 1754, 1767, 1790, 1798, 1799, 1800, 1802, 1803, 1809, 1810, 1811, 1815, 1816, 1826, 1837, 1848, 1849, 1850, 1851, 1853, 1854, 1855, 1858, 1864, 1865, 1868, 1870, 1871, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1916, 1919, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936], "correspond": [0, 1, 7, 17, 24, 25, 29, 36, 39, 40, 42, 46, 47, 48, 59, 64, 72, 84, 474, 475, 513, 515, 517, 543, 544, 679, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 734, 792, 796, 835, 837, 856, 857, 858, 863, 879, 888, 890, 891, 892, 897, 900, 902, 907, 944, 965, 1017, 1037, 1066, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1151, 1160, 1187, 1198, 1214, 1228, 1233, 1234, 1239, 1242, 1261, 1268, 1270, 1284, 1299, 1320, 1367, 1373, 1400, 1430, 1436, 1476, 1520, 1529, 1566, 1606, 1610, 1618, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1651, 1657, 1686, 1691, 1708, 1709, 1719, 1742, 1751, 1767, 1810, 1811, 1816, 1847, 1850, 1853, 1854, 1865, 1868, 1869, 1871, 1875, 1881, 1884, 1885, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1906, 1909, 1913, 1915, 1916, 1921, 1922, 1925, 1926, 1927, 1930, 1932, 1934, 1935], "devic": [0, 1, 2, 5, 8, 11, 13, 15, 19, 24, 25, 29, 33, 36, 39, 40, 42, 43, 44, 47, 60, 61, 64, 68, 71, 72, 91, 199, 209, 212, 291, 315, 323, 337, 446, 447, 448, 449, 450, 515, 517, 579, 685, 688, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 748, 749, 750, 751, 752, 753, 754, 864, 876, 878, 879, 900, 902, 920, 921, 923, 930, 932, 973, 974, 975, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 990, 991, 992, 995, 999, 1000, 1001, 1003, 1004, 1012, 1014, 1015, 1016, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1040, 1041, 1042, 1043, 1047, 1048, 1049, 1072, 1073, 1074, 1084, 1089, 1107, 1125, 1126, 1155, 1156, 1198, 1202, 1205, 1208, 1211, 1217, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1252, 1255, 1256, 1258, 1259, 1261, 1262, 1268, 1269, 1284, 1287, 1292, 1298, 1302, 1315, 1317, 1338, 1348, 1349, 1350, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1373, 1374, 1383, 1385, 1393, 1394, 1395, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1430, 1436, 1438, 1446, 1447, 1469, 1473, 1475, 1477, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1521, 1540, 1546, 1579, 1594, 1598, 1599, 1600, 1601, 1610, 1612, 1613, 1614, 1615, 1643, 1650, 1656, 1658, 1661, 1662, 1675, 1715, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1755, 1759, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1816, 1830, 1832, 1841, 1843, 1851, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1879, 1884, 1886, 1890, 1895, 1897, 1898, 1900, 1902, 1903, 1904, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1920, 1921, 1925, 1927, 1931, 1932], "creat": [0, 1, 3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 18, 20, 26, 28, 29, 33, 39, 40, 42, 44, 46, 48, 50, 51, 57, 59, 60, 61, 62, 64, 71, 72, 86, 91, 153, 225, 256, 337, 579, 580, 582, 583, 584, 586, 587, 731, 737, 738, 739, 744, 745, 755, 763, 791, 792, 793, 813, 814, 815, 816, 818, 823, 853, 877, 878, 879, 892, 894, 906, 931, 933, 949, 950, 952, 965, 973, 982, 1014, 1015, 1024, 1059, 1074, 1123, 1124, 1125, 1195, 1198, 1201, 1210, 1216, 1221, 1227, 1228, 1234, 1236, 1255, 1268, 1284, 1299, 1320, 1346, 1364, 1373, 1374, 1377, 1391, 1397, 1421, 1422, 1430, 1433, 1434, 1435, 1458, 1461, 1462, 1469, 1478, 1479, 1481, 1610, 1622, 1643, 1650, 1655, 1666, 1667, 1686, 1754, 1785, 1796, 1801, 1830, 1837, 1866, 1871, 1872, 1875, 1879, 1883, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1902, 1903, 1904, 1907, 1909, 1912, 1913, 1915, 1916, 1921, 1922, 1923, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937], "optim": [0, 1, 2, 7, 8, 11, 12, 14, 16, 18, 20, 26, 29, 31, 33, 34, 40, 42, 43, 44, 48, 64, 72, 818, 907, 916, 952, 955, 1071, 1137, 1198, 1202, 1207, 1209, 1213, 1214, 1253, 1270, 1348, 1349, 1350, 1366, 1373, 1393, 1394, 1395, 1430, 1433, 1434, 1435, 1436, 1462, 1469, 1477, 1579, 1601, 1610, 1617, 1622, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1866, 1868, 1870, 1879, 1885, 1889, 1893, 1894, 1895, 1896, 1898, 1899, 1902, 1904, 1909, 1915, 1916, 1925], "default": [0, 2, 3, 5, 9, 12, 14, 15, 16, 18, 21, 22, 23, 24, 28, 29, 31, 33, 36, 42, 43, 44, 46, 47, 48, 50, 51, 56, 57, 58, 59, 60, 62, 64, 67, 68, 69, 70, 72, 86, 153, 158, 173, 175, 178, 181, 182, 183, 198, 209, 212, 242, 269, 292, 299, 327, 333, 395, 446, 447, 448, 449, 450, 459, 496, 499, 500, 520, 524, 579, 580, 582, 679, 693, 696, 711, 712, 713, 714, 715, 716, 719, 729, 730, 731, 732, 734, 754, 757, 759, 767, 768, 769, 771, 772, 773, 778, 784, 792, 797, 802, 807, 808, 813, 816, 818, 819, 820, 821, 824, 827, 828, 829, 830, 831, 832, 833, 834, 840, 841, 842, 843, 844, 845, 847, 848, 853, 854, 855, 857, 864, 878, 879, 892, 893, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 921, 930, 936, 940, 943, 944, 945, 949, 952, 970, 971, 974, 977, 979, 983, 986, 987, 988, 991, 992, 999, 1000, 1003, 1014, 1016, 1017, 1020, 1022, 1023, 1024, 1026, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1041, 1042, 1045, 1047, 1048, 1049, 1052, 1053, 1054, 1059, 1060, 1061, 1062, 1063, 1066, 1071, 1072, 1073, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1138, 1139, 1143, 1145, 1151, 1155, 1156, 1159, 1160, 1187, 1189, 1195, 1198, 1199, 1202, 1209, 1213, 1214, 1217, 1218, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1284, 1287, 1289, 1295, 1297, 1298, 1299, 1303, 1324, 1325, 1327, 1328, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1444, 1445, 1447, 1448, 1449, 1450, 1457, 1461, 1462, 1466, 1467, 1469, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1526, 1528, 1529, 1531, 1533, 1540, 1541, 1548, 1553, 1554, 1555, 1564, 1565, 1567, 1572, 1579, 1585, 1586, 1594, 1598, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1644, 1645, 1647, 1649, 1650, 1651, 1652, 1654, 1656, 1657, 1661, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1705, 1713, 1715, 1716, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1737, 1743, 1744, 1747, 1751, 1755, 1756, 1757, 1758, 1759, 1764, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1810, 1811, 1812, 1815, 1816, 1817, 1830, 1831, 1837, 1839, 1841, 1843, 1848, 1849, 1851, 1852, 1853, 1854, 1858, 1863, 1864, 1865, 1866, 1868, 1871, 1875, 1877, 1879, 1880, 1883, 1886, 1889, 1890, 1893, 1895, 1896, 1897, 1898, 1900, 1902, 1905, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1920, 1921, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1937], "net": [0, 6, 34, 50, 67, 72, 1198, 1213, 1214, 1367, 1430, 1610, 1633, 1690, 1870, 1871, 1890, 1891, 1894, 1902, 1930], "sgd": [0, 39, 40, 46, 1373, 1601, 1610, 1691, 1697, 1699, 1890, 1894, 1895, 1902, 1904, 1912, 1921, 1922], "paramet": [0, 1, 2, 3, 5, 16, 18, 21, 27, 28, 31, 33, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 53, 57, 59, 61, 64, 66, 68, 71, 72, 91, 153, 158, 173, 175, 178, 181, 182, 183, 198, 199, 209, 212, 242, 256, 257, 262, 269, 299, 315, 317, 319, 321, 323, 327, 333, 395, 402, 404, 446, 447, 448, 449, 450, 459, 472, 493, 496, 497, 498, 499, 500, 513, 515, 517, 520, 524, 536, 543, 544, 545, 559, 565, 582, 583, 584, 586, 587, 602, 603, 606, 616, 617, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 749, 754, 755, 757, 758, 759, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 792, 794, 796, 798, 799, 800, 813, 818, 819, 820, 821, 822, 823, 824, 825, 826, 837, 838, 839, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 892, 900, 901, 902, 903, 904, 905, 906, 907, 908, 914, 915, 916, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 957, 958, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 991, 992, 993, 995, 999, 1000, 1001, 1003, 1006, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1168, 1172, 1173, 1175, 1177, 1178, 1180, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1208, 1209, 1210, 1211, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1310, 1311, 1312, 1315, 1316, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1524, 1525, 1526, 1528, 1529, 1531, 1533, 1540, 1541, 1548, 1553, 1554, 1555, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1573, 1579, 1585, 1586, 1594, 1598, 1599, 1600, 1601, 1609, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1787, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1820, 1821, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1868, 1871, 1873, 1875, 1879, 1880, 1883, 1885, 1886, 1887, 1889, 1890, 1891, 1894, 1895, 1896, 1900, 1901, 1902, 1904, 1906, 1907, 1909, 1913, 1914, 1915, 1916, 1920, 1921, 1922, 1925, 1926, 1927, 1930, 1932, 1934, 1935, 1936], "target": [0, 12, 13, 14, 20, 28, 29, 33, 46, 64, 68, 70, 71, 72, 499, 734, 765, 766, 791, 796, 858, 860, 861, 937, 1129, 1198, 1207, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1346, 1347, 1353, 1364, 1366, 1378, 1379, 1384, 1390, 1391, 1396, 1397, 1421, 1422, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1444, 1461, 1462, 1473, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1501, 1502, 1510, 1512, 1513, 1524, 1525, 1526, 1537, 1538, 1541, 1542, 1552, 1560, 1561, 1562, 1563, 1564, 1572, 1579, 1583, 1584, 1610, 1685, 1851, 1869, 1871, 1890, 1891, 1894, 1904, 1909, 1912, 1913, 1916, 1917, 1921, 1930, 1934], "data": [0, 1, 2, 3, 7, 14, 15, 16, 19, 20, 25, 27, 31, 36, 37, 40, 42, 44, 46, 48, 49, 50, 53, 56, 59, 61, 64, 68, 72, 142, 153, 198, 199, 328, 331, 335, 338, 343, 446, 449, 482, 493, 497, 499, 616, 737, 738, 739, 759, 771, 772, 773, 780, 791, 792, 793, 797, 818, 819, 820, 821, 822, 824, 826, 864, 878, 879, 889, 892, 921, 930, 936, 975, 1052, 1053, 1072, 1073, 1074, 1084, 1085, 1086, 1089, 1091, 1092, 1094, 1102, 1103, 1104, 1107, 1110, 1111, 1112, 1113, 1122, 1124, 1125, 1126, 1128, 1137, 1155, 1156, 1158, 1177, 1180, 1205, 1209, 1213, 1217, 1268, 1269, 1270, 1284, 1289, 1297, 1299, 1311, 1312, 1325, 1327, 1328, 1351, 1353, 1358, 1359, 1360, 1367, 1382, 1385, 1393, 1394, 1395, 1400, 1402, 1417, 1437, 1445, 1446, 1482, 1494, 1499, 1500, 1504, 1505, 1506, 1539, 1546, 1548, 1585, 1586, 1610, 1611, 1612, 1613, 1643, 1644, 1645, 1646, 1648, 1657, 1661, 1662, 1666, 1667, 1691, 1697, 1705, 1713, 1716, 1717, 1718, 1722, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1738, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1792, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1815, 1816, 1830, 1839, 1841, 1843, 1850, 1851, 1863, 1864, 1866, 1868, 1869, 1872, 1878, 1879, 1881, 1883, 1886, 1890, 1891, 1892, 1894, 1896, 1897, 1901, 1904, 1906, 1907, 1908, 1911, 1912, 1913, 1914, 1916, 1919, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935], "zero_grad": [0, 1, 46, 1198, 1430, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1690, 1890, 1894, 1898, 1902, 1904, 1912], "output": [0, 1, 4, 5, 7, 11, 12, 13, 14, 15, 16, 19, 20, 22, 27, 28, 29, 36, 39, 40, 42, 46, 47, 48, 50, 56, 57, 68, 69, 70, 72, 142, 315, 323, 446, 447, 448, 450, 513, 517, 565, 616, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 719, 727, 728, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772, 773, 774, 776, 778, 779, 780, 781, 782, 784, 785, 786, 791, 792, 793, 795, 798, 801, 813, 816, 857, 860, 861, 862, 864, 873, 874, 877, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 920, 922, 923, 924, 925, 926, 927, 928, 929, 932, 936, 939, 940, 941, 942, 943, 944, 945, 947, 950, 964, 965, 967, 968, 971, 984, 986, 987, 988, 1014, 1015, 1017, 1027, 1028, 1050, 1051, 1052, 1053, 1055, 1058, 1059, 1061, 1063, 1066, 1068, 1070, 1071, 1072, 1073, 1074, 1076, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1125, 1126, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1151, 1154, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1172, 1175, 1192, 1193, 1195, 1198, 1202, 1209, 1213, 1214, 1218, 1219, 1220, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1520, 1521, 1523, 1524, 1525, 1526, 1529, 1531, 1540, 1541, 1546, 1548, 1553, 1554, 1555, 1564, 1565, 1569, 1570, 1571, 1572, 1579, 1594, 1598, 1599, 1600, 1604, 1606, 1607, 1610, 1618, 1619, 1620, 1623, 1644, 1646, 1647, 1651, 1654, 1656, 1657, 1658, 1661, 1662, 1664, 1667, 1668, 1686, 1690, 1703, 1704, 1712, 1713, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1739, 1740, 1744, 1746, 1751, 1759, 1764, 1767, 1769, 1781, 1782, 1784, 1789, 1793, 1794, 1796, 1797, 1805, 1806, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1827, 1828, 1829, 1834, 1837, 1839, 1840, 1842, 1845, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1858, 1860, 1861, 1863, 1864, 1865, 1868, 1869, 1871, 1877, 1879, 1884, 1885, 1886, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1902, 1905, 1909, 1912, 1913, 1914, 1915, 1916, 1918, 1922, 1925, 1926, 1928, 1929, 1930, 1932, 1934, 1935], "loss_fn": [0, 46, 1685, 1890, 1894, 1895, 1904, 1912], "exit": [0, 1, 2, 4, 20, 36, 42, 50, 59, 64, 71, 72, 893, 1610, 1871, 1883, 1891, 1896, 1904, 1909, 1923], "befor": [0, 1, 3, 6, 7, 11, 12, 14, 15, 17, 20, 23, 26, 29, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 51, 56, 58, 59, 60, 61, 64, 72, 100, 153, 746, 759, 787, 788, 789, 892, 896, 898, 950, 959, 974, 1052, 1053, 1054, 1063, 1071, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1112, 1113, 1116, 1124, 1127, 1198, 1209, 1211, 1250, 1254, 1267, 1297, 1325, 1328, 1367, 1373, 1374, 1377, 1382, 1430, 1431, 1432, 1469, 1473, 1481, 1529, 1548, 1585, 1586, 1601, 1604, 1605, 1606, 1607, 1610, 1618, 1651, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1699, 1713, 1716, 1742, 1751, 1762, 1763, 1792, 1795, 1798, 1799, 1800, 1802, 1803, 1812, 1815, 1837, 1848, 1868, 1870, 1871, 1883, 1890, 1891, 1894, 1895, 1896, 1899, 1901, 1902, 1905, 1907, 1908, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1926, 1930, 1932], "step": [0, 1, 2, 4, 9, 16, 20, 22, 25, 29, 33, 39, 40, 42, 43, 44, 46, 48, 60, 64, 68, 72, 537, 606, 685, 767, 768, 856, 864, 893, 894, 895, 923, 947, 1157, 1245, 1268, 1269, 1270, 1284, 1287, 1299, 1378, 1379, 1400, 1497, 1498, 1524, 1525, 1610, 1643, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1722, 1731, 1785, 1867, 1868, 1869, 1885, 1890, 1891, 1894, 1895, 1896, 1898, 1902, 1904, 1906, 1908, 1909, 1913, 1915, 1916, 1921, 1922, 1925, 1930], "usag": [0, 1, 4, 7, 9, 14, 15, 16, 17, 18, 29, 34, 39, 42, 46, 48, 49, 50, 53, 56, 57, 59, 61, 64, 72, 747, 756, 791, 792, 793, 809, 810, 811, 812, 814, 815, 816, 853, 857, 889, 952, 1020, 1040, 1044, 1071, 1122, 1127, 1131, 1132, 1133, 1211, 1270, 1610, 1665, 1868, 1871, 1881, 1885, 1890, 1891, 1896, 1898, 1909, 1915, 1923, 1930, 1931, 1933, 1934, 1935], "along": [0, 33, 36, 39, 42, 48, 52, 59, 315, 317, 319, 323, 493, 513, 515, 517, 685, 696, 818, 874, 875, 939, 946, 969, 971, 986, 988, 1054, 1062, 1063, 1070, 1071, 1087, 1092, 1095, 1099, 1102, 1105, 1111, 1139, 1140, 1163, 1172, 1175, 1219, 1230, 1266, 1318, 1325, 1329, 1330, 1339, 1340, 1341, 1347, 1365, 1378, 1379, 1420, 1423, 1424, 1425, 1463, 1465, 1494, 1502, 1511, 1524, 1525, 1528, 1531, 1548, 1553, 1554, 1555, 1565, 1585, 1586, 1628, 1630, 1637, 1638, 1647, 1656, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1697, 1716, 1736, 1737, 1742, 1753, 1789, 1792, 1795, 1796, 1804, 1809, 1827, 1831, 1834, 1837, 1846, 1855, 1858, 1860, 1865, 1870, 1875, 1886, 1892, 1896, 1898, 1901, 1902, 1913, 1916, 1926], "more": [0, 1, 2, 3, 4, 5, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 29, 31, 33, 34, 35, 38, 39, 40, 42, 43, 48, 49, 50, 51, 55, 58, 59, 60, 61, 64, 67, 68, 69, 70, 72, 85, 153, 256, 257, 315, 323, 488, 493, 495, 498, 513, 515, 517, 544, 617, 679, 734, 770, 779, 783, 792, 853, 858, 859, 860, 872, 885, 886, 887, 889, 891, 892, 898, 900, 902, 906, 907, 908, 912, 913, 923, 931, 934, 936, 942, 943, 944, 945, 952, 974, 975, 977, 979, 980, 996, 1015, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1041, 1049, 1054, 1060, 1069, 1071, 1075, 1087, 1088, 1090, 1092, 1111, 1112, 1113, 1114, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1146, 1147, 1151, 1160, 1161, 1173, 1179, 1183, 1185, 1186, 1198, 1211, 1214, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1267, 1270, 1273, 1276, 1278, 1288, 1289, 1311, 1312, 1315, 1326, 1338, 1342, 1347, 1352, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1373, 1374, 1375, 1391, 1400, 1426, 1427, 1428, 1430, 1436, 1442, 1443, 1444, 1445, 1457, 1469, 1477, 1494, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1518, 1520, 1521, 1529, 1532, 1533, 1534, 1535, 1540, 1544, 1548, 1549, 1559, 1566, 1573, 1574, 1575, 1577, 1579, 1580, 1581, 1582, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1597, 1598, 1599, 1600, 1601, 1610, 1611, 1617, 1619, 1620, 1655, 1656, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1703, 1714, 1715, 1741, 1747, 1751, 1761, 1791, 1792, 1816, 1837, 1839, 1851, 1858, 1859, 1865, 1866, 1867, 1868, 1870, 1871, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1905, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1922, 1923, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1936, 1937], "complex": [0, 1, 3, 7, 8, 17, 19, 39, 40, 42, 72, 313, 331, 484, 684, 691, 907, 908, 945, 963, 964, 1066, 1092, 1114, 1119, 1151, 1168, 1177, 1188, 1190, 1191, 1194, 1195, 1198, 1218, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1247, 1250, 1252, 1254, 1255, 1256, 1257, 1261, 1262, 1266, 1267, 1268, 1270, 1278, 1284, 1296, 1301, 1319, 1358, 1359, 1360, 1397, 1430, 1504, 1505, 1506, 1617, 1657, 1709, 1722, 1735, 1756, 1767, 1812, 1813, 1816, 1851, 1855, 1856, 1857, 1865, 1866, 1869, 1871, 1872, 1880, 1904, 1911, 1927, 1928, 1931, 1932, 1933], "scenario": [0, 16, 17, 39, 42, 59, 1665, 1666, 1894, 1899, 1904, 1909, 1915, 1921], "g": [0, 1, 2, 3, 5, 7, 12, 14, 15, 22, 25, 27, 29, 31, 33, 34, 39, 40, 42, 46, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 64, 67, 69, 71, 72, 579, 616, 747, 756, 759, 792, 793, 814, 816, 853, 858, 860, 861, 888, 897, 907, 908, 933, 1017, 1071, 1122, 1128, 1132, 1133, 1148, 1151, 1173, 1195, 1198, 1204, 1205, 1213, 1269, 1353, 1354, 1367, 1369, 1370, 1371, 1375, 1377, 1382, 1390, 1396, 1400, 1401, 1430, 1431, 1440, 1445, 1461, 1513, 1515, 1516, 1517, 1522, 1529, 1610, 1611, 1612, 1613, 1654, 1657, 1664, 1665, 1670, 1671, 1672, 1673, 1676, 1682, 1683, 1684, 1685, 1737, 1744, 1755, 1762, 1780, 1812, 1865, 1868, 1870, 1871, 1872, 1875, 1878, 1883, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1905, 1906, 1909, 1912, 1913, 1915, 1916, 1921, 1925, 1928, 1929, 1930, 1936], "penalti": [0, 23, 780, 1028, 1669, 1670, 1671, 1672, 1674, 1676, 1682, 1683, 1685, 1917], "multipl": [0, 1, 2, 3, 5, 11, 15, 16, 18, 28, 39, 40, 42, 43, 44, 48, 49, 52, 59, 60, 61, 64, 69, 71, 72, 194, 211, 317, 513, 685, 687, 688, 694, 695, 759, 840, 873, 874, 877, 906, 940, 942, 952, 966, 970, 986, 987, 988, 1014, 1069, 1071, 1074, 1124, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1147, 1161, 1162, 1211, 1214, 1219, 1220, 1235, 1236, 1237, 1253, 1258, 1263, 1264, 1292, 1295, 1300, 1302, 1346, 1347, 1361, 1362, 1363, 1364, 1366, 1374, 1377, 1382, 1390, 1396, 1397, 1418, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1481, 1501, 1502, 1512, 1521, 1541, 1564, 1572, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1684, 1692, 1693, 1694, 1695, 1696, 1701, 1703, 1759, 1787, 1793, 1794, 1798, 1799, 1800, 1802, 1803, 1831, 1832, 1839, 1847, 1851, 1858, 1859, 1865, 1866, 1870, 1871, 1883, 1884, 1885, 1886, 1891, 1893, 1895, 1897, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1935], "custom": [0, 1, 3, 5, 15, 17, 18, 20, 26, 33, 34, 39, 42, 43, 44, 45, 46, 47, 52, 55, 56, 58, 64, 84, 85, 86, 499, 792, 796, 813, 814, 815, 816, 837, 839, 858, 859, 860, 861, 898, 952, 954, 973, 982, 1046, 1198, 1430, 1473, 1477, 1478, 1479, 1624, 1633, 1650, 1691, 1866, 1872, 1875, 1877, 1883, 1884, 1891, 1901, 1906, 1907, 1908, 1910, 1919, 1920, 1934], "autograd": [0, 4, 5, 7, 8, 16, 17, 23, 29, 42, 46, 48, 64, 65, 68, 142, 337, 446, 447, 448, 449, 450, 496, 688, 864, 878, 879, 893, 919, 921, 930, 949, 954, 1017, 1072, 1073, 1074, 1084, 1089, 1107, 1124, 1125, 1126, 1127, 1128, 1137, 1139, 1155, 1156, 1173, 1198, 1217, 1237, 1268, 1284, 1292, 1302, 1384, 1430, 1436, 1477, 1531, 1546, 1610, 1661, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1763, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1858, 1863, 1864, 1866, 1869, 1873, 1878, 1886, 1889, 1894, 1895, 1898, 1899, 1901, 1902, 1915, 1931, 1932, 1933, 1936], "function": [0, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 28, 29, 31, 33, 34, 35, 36, 38, 39, 43, 44, 46, 47, 49, 50, 52, 56, 57, 59, 60, 64, 67, 69, 71, 85, 86, 91, 122, 153, 198, 262, 291, 300, 323, 488, 493, 496, 517, 540, 555, 679, 688, 692, 693, 697, 698, 747, 756, 757, 759, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 796, 797, 799, 813, 814, 815, 816, 823, 825, 837, 840, 853, 856, 858, 860, 861, 862, 876, 877, 892, 893, 894, 895, 906, 907, 908, 912, 913, 916, 919, 921, 930, 932, 940, 942, 946, 949, 952, 954, 955, 956, 957, 959, 963, 964, 971, 972, 973, 975, 977, 979, 982, 999, 1000, 1003, 1008, 1009, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1027, 1028, 1035, 1036, 1038, 1039, 1040, 1044, 1054, 1059, 1061, 1062, 1069, 1071, 1075, 1087, 1088, 1090, 1110, 1114, 1117, 1118, 1119, 1122, 1124, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1143, 1144, 1151, 1155, 1156, 1157, 1159, 1161, 1169, 1170, 1171, 1173, 1185, 1195, 1196, 1197, 1198, 1199, 1201, 1203, 1204, 1208, 1209, 1210, 1211, 1213, 1215, 1217, 1218, 1219, 1221, 1226, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1249, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1273, 1275, 1284, 1287, 1288, 1292, 1295, 1298, 1300, 1302, 1303, 1304, 1322, 1325, 1326, 1342, 1346, 1352, 1353, 1355, 1356, 1357, 1364, 1368, 1372, 1375, 1380, 1381, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1396, 1398, 1399, 1400, 1401, 1416, 1419, 1420, 1422, 1429, 1430, 1435, 1436, 1438, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1475, 1477, 1478, 1479, 1481, 1483, 1485, 1486, 1487, 1602, 1606, 1607, 1610, 1617, 1618, 1622, 1633, 1643, 1644, 1645, 1647, 1650, 1651, 1652, 1654, 1655, 1657, 1658, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1687, 1690, 1691, 1693, 1696, 1697, 1698, 1703, 1704, 1705, 1709, 1715, 1722, 1726, 1731, 1744, 1753, 1754, 1755, 1758, 1761, 1767, 1775, 1779, 1780, 1785, 1788, 1790, 1791, 1792, 1793, 1795, 1801, 1808, 1812, 1818, 1819, 1827, 1831, 1833, 1837, 1847, 1848, 1849, 1851, 1855, 1856, 1857, 1858, 1859, 1864, 1865, 1866, 1867, 1872, 1875, 1877, 1880, 1881, 1883, 1885, 1889, 1892, 1894, 1895, 1896, 1898, 1901, 1902, 1904, 1905, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1920, 1921, 1922, 1923, 1928, 1930, 1932, 1933, 1934, 1935], "autocastmodel": 0, "nn": [0, 3, 5, 12, 15, 20, 25, 27, 28, 29, 34, 39, 40, 42, 43, 46, 47, 60, 64, 65, 72, 300, 540, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 791, 792, 813, 853, 858, 859, 860, 861, 863, 1014, 1017, 1071, 1127, 1136, 1137, 1196, 1198, 1199, 1201, 1202, 1203, 1204, 1207, 1208, 1209, 1213, 1214, 1215, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1601, 1610, 1611, 1612, 1613, 1619, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1643, 1655, 1686, 1788, 1812, 1851, 1865, 1866, 1868, 1869, 1873, 1885, 1886, 1890, 1895, 1898, 1902, 1904, 1905, 1906, 1909, 1912, 1913, 1914, 1916, 1918, 1921, 1930, 1932, 1935], "modul": [0, 1, 3, 5, 6, 8, 12, 15, 16, 18, 21, 22, 25, 27, 28, 29, 31, 33, 36, 40, 42, 44, 46, 47, 51, 53, 56, 59, 60, 64, 65, 67, 488, 679, 685, 688, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 737, 738, 739, 744, 745, 746, 755, 760, 761, 762, 763, 764, 787, 788, 789, 790, 791, 792, 796, 798, 799, 801, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 837, 838, 839, 853, 856, 857, 858, 859, 860, 861, 863, 912, 913, 920, 932, 952, 1017, 1127, 1136, 1137, 1139, 1173, 1196, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1213, 1214, 1215, 1269, 1292, 1302, 1338, 1342, 1348, 1349, 1350, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1383, 1385, 1393, 1394, 1395, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1431, 1432, 1440, 1441, 1446, 1458, 1463, 1469, 1473, 1477, 1520, 1521, 1594, 1601, 1610, 1611, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1646, 1650, 1651, 1652, 1654, 1686, 1747, 1791, 1858, 1865, 1866, 1872, 1877, 1879, 1881, 1883, 1885, 1886, 1889, 1893, 1894, 1895, 1898, 1901, 1903, 1904, 1906, 1908, 1909, 1912, 1914, 1915, 1918, 1919, 1921, 1924, 1925, 1926, 1930, 1933, 1934, 1935, 1936], "def": [0, 1, 11, 12, 14, 16, 18, 19, 20, 21, 25, 27, 28, 29, 39, 40, 42, 43, 44, 48, 50, 51, 52, 56, 57, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 400, 791, 792, 860, 861, 889, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 952, 1075, 1127, 1128, 1129, 1131, 1132, 1133, 1135, 1137, 1138, 1139, 1173, 1196, 1198, 1199, 1201, 1202, 1203, 1204, 1208, 1209, 1212, 1213, 1214, 1215, 1430, 1431, 1432, 1440, 1441, 1479, 1601, 1610, 1622, 1655, 1664, 1665, 1791, 1858, 1865, 1868, 1870, 1871, 1875, 1885, 1890, 1891, 1893, 1895, 1896, 1897, 1898, 1902, 1904, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1921, 1922, 1923, 1936], "self": [0, 1, 9, 12, 20, 25, 28, 29, 36, 39, 40, 42, 44, 47, 50, 51, 56, 61, 64, 69, 72, 100, 142, 153, 156, 157, 158, 173, 175, 178, 181, 182, 183, 193, 194, 198, 199, 211, 219, 221, 235, 242, 256, 257, 260, 261, 269, 288, 292, 299, 313, 315, 317, 319, 321, 323, 325, 327, 328, 330, 331, 332, 333, 335, 343, 379, 395, 400, 402, 403, 404, 455, 472, 482, 484, 497, 498, 499, 500, 513, 515, 517, 520, 524, 536, 542, 543, 544, 545, 557, 559, 579, 580, 582, 583, 584, 586, 587, 603, 606, 607, 613, 616, 617, 619, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 860, 861, 917, 1127, 1128, 1137, 1168, 1196, 1197, 1198, 1201, 1202, 1203, 1204, 1208, 1209, 1213, 1214, 1215, 1338, 1342, 1375, 1429, 1430, 1431, 1432, 1436, 1440, 1441, 1457, 1459, 1469, 1475, 1477, 1559, 1582, 1601, 1619, 1620, 1622, 1628, 1630, 1643, 1652, 1665, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1712, 1733, 1867, 1868, 1869, 1870, 1871, 1875, 1881, 1884, 1885, 1889, 1891, 1892, 1893, 1896, 1898, 1902, 1907, 1909, 1913, 1914, 1916, 1921, 1927], "produc": [0, 7, 12, 14, 16, 19, 20, 23, 29, 33, 39, 42, 44, 49, 51, 53, 56, 61, 69, 70, 71, 72, 91, 731, 737, 738, 739, 744, 745, 755, 763, 791, 792, 923, 943, 1010, 1102, 1103, 1104, 1122, 1132, 1133, 1139, 1151, 1209, 1213, 1214, 1217, 1233, 1234, 1237, 1244, 1245, 1256, 1261, 1295, 1298, 1299, 1300, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1406, 1407, 1408, 1409, 1410, 1411, 1436, 1513, 1521, 1529, 1540, 1598, 1599, 1600, 1657, 1686, 1715, 1722, 1731, 1816, 1851, 1858, 1868, 1870, 1871, 1883, 1884, 1890, 1891, 1892, 1894, 1896, 1900, 1901, 1902, 1905, 1906, 1907, 1908, 1909, 1925, 1929], "after": [0, 1, 7, 9, 11, 13, 16, 17, 18, 20, 23, 25, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 59, 61, 64, 71, 72, 262, 759, 789, 856, 858, 860, 861, 892, 893, 896, 952, 959, 972, 974, 1010, 1017, 1070, 1128, 1183, 1198, 1202, 1253, 1269, 1292, 1334, 1367, 1382, 1415, 1430, 1433, 1473, 1475, 1477, 1494, 1529, 1601, 1604, 1610, 1622, 1624, 1628, 1630, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1697, 1699, 1755, 1812, 1837, 1860, 1865, 1870, 1871, 1881, 1883, 1889, 1890, 1891, 1894, 1895, 1896, 1898, 1899, 1901, 1902, 1904, 1905, 1909, 1912, 1913, 1915, 1916, 1921, 1922, 1923, 1924, 1926, 1928, 1930], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 57, 59, 61, 64, 65, 66, 68, 69, 70, 71, 72, 91, 122, 156, 158, 173, 175, 178, 181, 182, 183, 193, 194, 198, 199, 209, 211, 212, 219, 221, 222, 224, 235, 242, 244, 256, 262, 269, 291, 299, 313, 321, 325, 327, 328, 330, 331, 332, 333, 335, 339, 341, 343, 354, 379, 395, 436, 446, 447, 448, 449, 450, 459, 473, 474, 475, 476, 477, 479, 484, 488, 496, 497, 498, 513, 515, 524, 536, 542, 543, 555, 556, 557, 558, 559, 579, 580, 581, 582, 588, 602, 603, 606, 608, 612, 613, 616, 683, 691, 692, 694, 695, 696, 697, 698, 734, 765, 766, 769, 770, 774, 775, 776, 777, 780, 783, 790, 791, 792, 793, 813, 814, 815, 816, 835, 839, 840, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 916, 917, 918, 921, 922, 923, 930, 931, 933, 936, 938, 940, 941, 942, 943, 944, 945, 946, 947, 949, 951, 952, 953, 954, 955, 958, 963, 964, 966, 967, 968, 970, 971, 972, 974, 975, 977, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1065, 1071, 1072, 1073, 1074, 1075, 1076, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1143, 1146, 1147, 1148, 1149, 1150, 1154, 1155, 1156, 1158, 1159, 1160, 1164, 1168, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1195, 1196, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1222, 1223, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1277, 1278, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1303, 1306, 1307, 1309, 1315, 1320, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1338, 1339, 1340, 1341, 1346, 1347, 1364, 1365, 1366, 1367, 1374, 1378, 1379, 1390, 1396, 1397, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1444, 1458, 1461, 1462, 1463, 1464, 1465, 1469, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1501, 1502, 1503, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1572, 1574, 1575, 1577, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1592, 1594, 1595, 1596, 1597, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1614, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1664, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1705, 1706, 1708, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1744, 1746, 1751, 1752, 1753, 1754, 1760, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1789, 1791, 1792, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1811, 1812, 1815, 1816, 1817, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1854, 1856, 1857, 1858, 1861, 1863, 1864, 1865, 1868, 1872, 1875, 1879, 1880, 1881, 1883, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1905, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1937], "disabl": [0, 2, 5, 15, 16, 17, 18, 22, 24, 29, 43, 48, 64, 72, 809, 810, 919, 952, 1017, 1071, 1075, 1127, 1173, 1198, 1200, 1213, 1214, 1430, 1436, 1469, 1477, 1579, 1610, 1611, 1652, 1655, 1760, 1761, 1764, 1791, 1866, 1870, 1877, 1890, 1893, 1894, 1895, 1896, 1900, 1905, 1906, 1909, 1914, 1920, 1925, 1932], "them": [0, 1, 3, 5, 7, 8, 9, 14, 15, 16, 19, 20, 23, 24, 28, 29, 31, 33, 34, 39, 42, 44, 50, 51, 56, 59, 61, 64, 68, 69, 71, 72, 153, 224, 256, 733, 892, 898, 902, 934, 1017, 1056, 1059, 1071, 1198, 1219, 1228, 1239, 1253, 1265, 1269, 1297, 1328, 1354, 1373, 1430, 1463, 1465, 1585, 1629, 1644, 1647, 1687, 1795, 1797, 1815, 1865, 1870, 1871, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1900, 1901, 1902, 1906, 1908, 1912, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1926, 1930, 1931, 1934], "differ": [0, 1, 3, 5, 8, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 29, 33, 36, 39, 42, 44, 46, 47, 48, 50, 51, 52, 56, 57, 59, 60, 62, 64, 65, 68, 69, 70, 72, 199, 487, 493, 616, 679, 685, 688, 694, 695, 734, 759, 792, 795, 796, 821, 823, 824, 860, 861, 864, 878, 879, 907, 908, 920, 932, 933, 970, 1054, 1059, 1061, 1063, 1071, 1111, 1112, 1113, 1117, 1118, 1124, 1127, 1132, 1133, 1139, 1151, 1172, 1198, 1208, 1213, 1227, 1233, 1234, 1244, 1245, 1253, 1256, 1261, 1265, 1292, 1302, 1338, 1347, 1348, 1349, 1350, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1382, 1383, 1391, 1393, 1394, 1395, 1396, 1400, 1401, 1417, 1430, 1433, 1436, 1451, 1452, 1454, 1455, 1456, 1458, 1461, 1469, 1475, 1477, 1479, 1482, 1485, 1486, 1487, 1494, 1502, 1520, 1529, 1540, 1542, 1553, 1554, 1555, 1579, 1601, 1610, 1612, 1613, 1617, 1652, 1657, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1691, 1699, 1705, 1715, 1737, 1810, 1811, 1816, 1837, 1848, 1849, 1851, 1853, 1854, 1858, 1865, 1868, 1870, 1871, 1873, 1877, 1878, 1883, 1884, 1886, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1902, 1904, 1905, 1906, 1908, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1923, 1925, 1928, 1930, 1931, 1932, 1935], "caus": [0, 1, 2, 3, 5, 15, 17, 33, 36, 39, 42, 46, 52, 58, 59, 60, 69, 72, 86, 555, 616, 876, 879, 892, 955, 1124, 1209, 1213, 1233, 1234, 1261, 1315, 1540, 1541, 1598, 1601, 1610, 1656, 1668, 1755, 1766, 1812, 1851, 1868, 1871, 1883, 1892, 1894, 1896, 1898, 1904, 1906, 1908, 1909, 1913, 1916, 1917, 1923, 1925, 1928], "mismatch": [0, 42, 72, 879, 1199, 1667, 1668, 1870, 1890, 1895, 1896, 1898, 1909, 1932], "error": [0, 1, 5, 8, 11, 15, 19, 27, 33, 35, 36, 39, 40, 42, 43, 45, 48, 57, 59, 60, 64, 67, 69, 71, 72, 84, 85, 86, 193, 224, 315, 317, 323, 325, 330, 544, 555, 613, 616, 679, 818, 864, 877, 879, 898, 900, 901, 902, 903, 904, 905, 906, 982, 1017, 1028, 1041, 1045, 1069, 1127, 1131, 1132, 1134, 1139, 1161, 1198, 1203, 1212, 1227, 1228, 1237, 1239, 1241, 1244, 1245, 1246, 1256, 1259, 1269, 1287, 1315, 1320, 1346, 1347, 1380, 1391, 1397, 1421, 1430, 1459, 1461, 1527, 1538, 1560, 1579, 1582, 1583, 1610, 1612, 1613, 1614, 1652, 1657, 1667, 1668, 1711, 1751, 1758, 1807, 1812, 1851, 1858, 1859, 1865, 1866, 1868, 1870, 1871, 1877, 1878, 1883, 1884, 1885, 1886, 1890, 1891, 1894, 1896, 1897, 1899, 1900, 1906, 1909, 1913, 1919, 1921, 1926, 1931, 1932, 1934, 1935], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 27, 28, 29, 31, 33, 34, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 84, 85, 86, 100, 153, 157, 198, 209, 212, 256, 317, 321, 323, 446, 447, 448, 449, 450, 459, 472, 482, 496, 499, 517, 520, 536, 544, 579, 580, 582, 583, 584, 586, 587, 602, 606, 616, 679, 685, 688, 689, 690, 692, 694, 695, 696, 698, 734, 755, 759, 763, 778, 780, 784, 793, 794, 816, 819, 820, 821, 824, 853, 857, 860, 864, 873, 874, 875, 876, 877, 878, 879, 888, 890, 891, 892, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 920, 921, 923, 930, 932, 933, 934, 936, 940, 942, 943, 944, 945, 946, 947, 954, 960, 963, 964, 965, 969, 970, 971, 974, 975, 977, 979, 982, 984, 986, 988, 995, 1006, 1012, 1017, 1018, 1038, 1041, 1052, 1053, 1054, 1058, 1059, 1060, 1061, 1062, 1071, 1072, 1073, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1114, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1138, 1139, 1140, 1151, 1155, 1156, 1158, 1159, 1160, 1161, 1172, 1175, 1189, 1195, 1198, 1201, 1202, 1203, 1205, 1207, 1209, 1210, 1213, 1214, 1217, 1218, 1219, 1223, 1227, 1228, 1233, 1234, 1236, 1237, 1239, 1240, 1241, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1260, 1261, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1280, 1284, 1285, 1287, 1289, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1315, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1338, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1377, 1378, 1379, 1382, 1383, 1384, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1406, 1407, 1408, 1409, 1410, 1411, 1415, 1417, 1421, 1422, 1423, 1424, 1425, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1444, 1445, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1461, 1462, 1469, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1485, 1486, 1487, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1524, 1525, 1529, 1531, 1533, 1540, 1541, 1546, 1548, 1550, 1551, 1553, 1554, 1555, 1564, 1565, 1566, 1569, 1572, 1573, 1579, 1585, 1586, 1597, 1598, 1610, 1611, 1614, 1615, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1643, 1644, 1645, 1646, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1661, 1662, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1704, 1709, 1713, 1715, 1716, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1736, 1737, 1742, 1744, 1747, 1751, 1753, 1755, 1758, 1759, 1764, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1789, 1792, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1810, 1811, 1812, 1815, 1816, 1830, 1831, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1848, 1849, 1851, 1852, 1853, 1854, 1858, 1863, 1864, 1865, 1868, 1871, 1873, 1875, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1936], "so": [0, 1, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 33, 35, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 59, 60, 62, 64, 67, 68, 69, 71, 72, 337, 459, 496, 679, 858, 893, 898, 900, 901, 906, 949, 952, 973, 996, 1059, 1061, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1097, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1122, 1124, 1127, 1131, 1132, 1134, 1135, 1185, 1195, 1198, 1201, 1202, 1207, 1209, 1211, 1253, 1255, 1265, 1270, 1275, 1287, 1308, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1374, 1377, 1384, 1430, 1446, 1463, 1465, 1481, 1494, 1504, 1505, 1506, 1529, 1585, 1586, 1601, 1610, 1656, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1781, 1795, 1807, 1812, 1816, 1836, 1848, 1852, 1868, 1870, 1871, 1877, 1879, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1916, 1920, 1921, 1925, 1926, 1928, 1930, 1931, 1933], "cast": [0, 6, 40, 57, 64, 337, 602, 603, 937, 1052, 1053, 1198, 1250, 1254, 1267, 1297, 1325, 1328, 1430, 1548, 1585, 1586, 1657, 1713, 1792, 1795, 1801, 1815, 1820, 1821, 1868, 1890, 1905, 1909, 1926, 1927, 1928], "back": [0, 1, 2, 11, 17, 18, 19, 20, 33, 39, 40, 42, 44, 48, 59, 64, 69, 72, 734, 836, 907, 949, 952, 1091, 1128, 1199, 1211, 1263, 1269, 1476, 1614, 1615, 1797, 1865, 1868, 1871, 1891, 1896, 1897, 1904, 1905, 1906, 1909, 1912, 1913, 1916, 1921, 1925, 1936], "from": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 56, 57, 59, 61, 62, 64, 65, 67, 69, 70, 71, 86, 91, 156, 157, 176, 199, 224, 225, 260, 288, 315, 317, 321, 323, 379, 404, 449, 455, 472, 474, 475, 482, 487, 488, 493, 513, 515, 517, 543, 545, 559, 579, 606, 607, 609, 616, 679, 711, 712, 713, 714, 715, 716, 719, 727, 728, 731, 734, 737, 738, 739, 740, 741, 742, 744, 745, 755, 759, 763, 771, 772, 773, 780, 787, 788, 791, 792, 793, 796, 799, 814, 815, 816, 823, 825, 839, 853, 857, 859, 860, 861, 863, 864, 878, 879, 890, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 912, 913, 921, 922, 930, 931, 936, 937, 949, 973, 974, 977, 986, 987, 988, 1006, 1010, 1028, 1055, 1071, 1091, 1093, 1094, 1099, 1100, 1101, 1105, 1106, 1107, 1108, 1111, 1112, 1113, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1155, 1156, 1160, 1175, 1195, 1196, 1198, 1199, 1201, 1203, 1204, 1205, 1208, 1209, 1221, 1237, 1241, 1250, 1253, 1254, 1267, 1268, 1269, 1270, 1284, 1288, 1289, 1302, 1307, 1311, 1312, 1313, 1315, 1320, 1329, 1330, 1338, 1342, 1348, 1349, 1350, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1377, 1382, 1383, 1384, 1385, 1391, 1393, 1394, 1395, 1396, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1430, 1431, 1432, 1436, 1440, 1441, 1445, 1447, 1448, 1469, 1474, 1475, 1477, 1479, 1481, 1482, 1494, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1526, 1529, 1531, 1540, 1553, 1554, 1555, 1567, 1597, 1601, 1610, 1614, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1637, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1654, 1658, 1664, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1705, 1708, 1716, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1737, 1738, 1741, 1743, 1744, 1751, 1764, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1813, 1817, 1827, 1830, 1839, 1841, 1843, 1848, 1849, 1851, 1852, 1861, 1866, 1868, 1869, 1870, 1871, 1873, 1875, 1877, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1889, 1891, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1912, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936], "alreadi": [0, 1, 11, 15, 31, 39, 40, 42, 43, 59, 60, 64, 71, 72, 198, 209, 212, 464, 487, 523, 579, 602, 603, 791, 839, 853, 857, 878, 982, 1008, 1198, 1207, 1269, 1430, 1605, 1610, 1643, 1686, 1846, 1848, 1865, 1868, 1878, 1880, 1884, 1885, 1890, 1891, 1894, 1896, 1899, 1904, 1909, 1912, 1913, 1916, 1922, 1923, 1925, 1927, 1929], "incur": [0, 5, 40, 42, 64, 942, 1904, 1921], "addit": [0, 1, 3, 5, 7, 9, 11, 14, 16, 17, 23, 24, 29, 33, 34, 39, 42, 43, 44, 48, 53, 59, 60, 64, 71, 72, 337, 513, 606, 748, 750, 751, 752, 753, 757, 759, 780, 794, 813, 858, 1028, 1195, 1198, 1202, 1207, 1212, 1338, 1349, 1350, 1351, 1361, 1362, 1363, 1374, 1381, 1382, 1384, 1391, 1394, 1395, 1409, 1410, 1411, 1415, 1416, 1417, 1418, 1420, 1426, 1427, 1428, 1430, 1436, 1438, 1463, 1465, 1469, 1473, 1477, 1479, 1500, 1507, 1508, 1509, 1546, 1610, 1675, 1848, 1849, 1856, 1868, 1870, 1871, 1877, 1881, 1884, 1885, 1886, 1891, 1893, 1894, 1896, 1897, 1901, 1904, 1905, 1908, 1909, 1910, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1929, 1932], "overhead": [0, 1, 3, 4, 8, 11, 15, 16, 18, 19, 20, 22, 40, 42, 64, 780, 952, 1028, 1209, 1610, 1893, 1894, 1895, 1900, 1901, 1904, 1914, 1915, 1922, 1925, 1931], "here": [0, 1, 7, 8, 9, 11, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 29, 34, 36, 39, 40, 42, 43, 48, 58, 60, 66, 67, 68, 69, 71, 72, 579, 792, 793, 968, 980, 1071, 1088, 1090, 1091, 1096, 1097, 1098, 1100, 1101, 1106, 1108, 1127, 1137, 1196, 1209, 1348, 1349, 1350, 1361, 1362, 1363, 1393, 1394, 1395, 1438, 1469, 1529, 1531, 1619, 1683, 1686, 1697, 1784, 1865, 1868, 1870, 1871, 1873, 1884, 1885, 1886, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1908, 1909, 1912, 1913, 1914, 1916, 1919, 1925, 1929, 1930, 1932], "assum": [0, 13, 14, 23, 31, 39, 42, 47, 48, 50, 52, 59, 60, 64, 67, 70, 72, 816, 1054, 1089, 1092, 1094, 1102, 1103, 1104, 1107, 1189, 1195, 1196, 1199, 1213, 1233, 1234, 1236, 1243, 1252, 1255, 1258, 1260, 1270, 1353, 1422, 1482, 1513, 1579, 1610, 1619, 1622, 1647, 1687, 1688, 1693, 1694, 1695, 1698, 1700, 1701, 1705, 1817, 1837, 1839, 1865, 1868, 1870, 1871, 1884, 1891, 1894, 1896, 1897, 1899, 1901, 1904, 1905, 1909, 1912, 1913, 1914, 1921, 1922, 1923, 1925], "a_float32": 0, "rand": [0, 1, 25, 36, 48, 72, 337, 692, 698, 900, 901, 902, 903, 904, 905, 970, 1014, 1015, 1088, 1090, 1093, 1094, 1096, 1097, 1100, 1101, 1103, 1104, 1106, 1108, 1129, 1204, 1209, 1213, 1214, 1215, 1271, 1272, 1274, 1346, 1396, 1473, 1474, 1475, 1476, 1477, 1501, 1520, 1521, 1579, 1610, 1622, 1655, 1708, 1719, 1720, 1721, 1725, 1867, 1868, 1869, 1870, 1871, 1873, 1884, 1885, 1909, 1911, 1914, 1916, 1921, 1922, 1925, 1926, 1929, 1930, 1933], "8": [0, 1, 13, 20, 29, 33, 38, 39, 40, 42, 48, 50, 315, 317, 319, 323, 403, 404, 472, 513, 517, 559, 606, 616, 684, 685, 696, 697, 744, 745, 760, 762, 764, 772, 773, 819, 820, 821, 824, 903, 923, 931, 942, 945, 946, 950, 1014, 1015, 1050, 1054, 1069, 1074, 1087, 1103, 1104, 1110, 1111, 1114, 1121, 1151, 1160, 1161, 1221, 1250, 1253, 1254, 1255, 1263, 1265, 1268, 1269, 1329, 1330, 1335, 1336, 1337, 1339, 1340, 1341, 1354, 1365, 1400, 1426, 1427, 1433, 1435, 1437, 1444, 1445, 1448, 1451, 1452, 1453, 1454, 1455, 1456, 1469, 1473, 1474, 1475, 1476, 1477, 1481, 1505, 1508, 1511, 1567, 1572, 1577, 1578, 1579, 1657, 1658, 1664, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1691, 1699, 1704, 1708, 1712, 1732, 1742, 1743, 1744, 1751, 1764, 1771, 1774, 1779, 1785, 1789, 1796, 1798, 1799, 1804, 1812, 1816, 1826, 1831, 1832, 1833, 1835, 1837, 1846, 1851, 1852, 1859, 1868, 1872, 1878, 1894, 1896, 1907, 1909, 1911, 1913, 1914, 1915, 1916, 1919, 1921, 1925, 1926, 1928, 1929, 1931], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 22, 944, 945, 1202, 1253, 1292, 1440, 1441, 1715, 1816, 1851, 1867, 1869, 1870, 1884, 1890, 1893, 1896, 1905, 1911, 1925], "list": [0, 1, 3, 5, 6, 7, 9, 12, 14, 15, 18, 19, 20, 21, 22, 25, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 46, 48, 50, 59, 61, 64, 69, 71, 72, 85, 187, 243, 304, 446, 448, 450, 577, 582, 583, 584, 588, 618, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 791, 792, 797, 813, 814, 815, 816, 837, 853, 860, 878, 885, 886, 887, 934, 935, 938, 942, 946, 951, 952, 954, 958, 998, 1004, 1056, 1069, 1071, 1072, 1111, 1125, 1137, 1151, 1161, 1198, 1202, 1204, 1209, 1211, 1213, 1214, 1297, 1299, 1328, 1367, 1373, 1402, 1430, 1432, 1441, 1458, 1469, 1480, 1520, 1594, 1610, 1611, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1657, 1661, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1691, 1693, 1695, 1696, 1697, 1699, 1700, 1718, 1720, 1721, 1724, 1728, 1743, 1780, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1810, 1811, 1815, 1830, 1831, 1832, 1848, 1849, 1851, 1853, 1854, 1859, 1863, 1865, 1868, 1869, 1872, 1873, 1877, 1879, 1881, 1884, 1885, 1886, 1896, 1900, 1902, 1905, 1906, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1921, 1922, 1925, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936], "No": [0, 9, 11, 62, 71, 899, 1610, 1655, 1870, 1894, 1909, 1919, 1929, 1932], "manual": [0, 11, 14, 24, 39, 42, 57, 59, 60, 62, 64, 72, 796, 837, 877, 906, 1160, 1202, 1346, 1347, 1366, 1434, 1435, 1437, 1458, 1477, 1501, 1502, 1512, 1564, 1622, 1643, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1868, 1871, 1883, 1890, 1894, 1896, 1897, 1898, 1899, 1902, 1908, 1909, 1916, 1917, 1930], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 15, 16, 17, 19, 20, 23, 31, 33, 39, 40, 42, 43, 44, 46, 50, 51, 52, 59, 60, 64, 71, 72, 488, 839, 889, 899, 912, 913, 954, 965, 974, 989, 1016, 1029, 1071, 1117, 1118, 1139, 1198, 1228, 1367, 1430, 1477, 1479, 1529, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1735, 1781, 1817, 1858, 1865, 1881, 1883, 1885, 1894, 1896, 1897, 1898, 1899, 1904, 1909, 1913, 1916, 1921, 1923, 1932, 1933], "f_float16": 0, "g_float32": 0, "epoch": [0, 39, 52, 62, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1881, 1890, 1904, 1912, 1930], "eval": [0, 72, 813, 859, 860, 1137, 1198, 1202, 1207, 1213, 1348, 1349, 1350, 1393, 1394, 1395, 1403, 1404, 1405, 1412, 1413, 1414, 1430, 1436, 1469, 1477, 1618, 1871, 1879, 1902, 1909, 1916, 1935, 1936], "jit": [0, 12, 14, 19, 26, 27, 31, 33, 1014, 1015, 1046, 1148, 1196, 1197, 1198, 1212, 1666, 1667, 1762, 1763, 1866, 1870, 1873, 1879, 1885, 1893, 1901, 1907, 1909, 1916, 1921, 1930], "trace": [0, 1, 5, 12, 14, 15, 16, 18, 19, 20, 22, 23, 27, 29, 34, 36, 39, 40, 42, 52, 74, 75, 76, 914, 915, 916, 952, 1071, 1201, 1209, 1210, 1214, 1270, 1311, 1312, 1313, 1668, 1866, 1869, 1870, 1871, 1873, 1877, 1891, 1894, 1895, 1907, 1911, 1913, 1930], "testmodel": 0, "__init__": [0, 1, 12, 14, 25, 28, 29, 39, 40, 42, 48, 64, 72, 860, 861, 1137, 1196, 1199, 1201, 1204, 1209, 1213, 1214, 1215, 1430, 1431, 1432, 1440, 1441, 1601, 1868, 1870, 1871, 1881, 1891, 1896, 1898, 1902, 1907, 1909, 1913, 1916, 1930], "input_s": [0, 733, 759, 760, 764, 1382, 1383, 1400, 1401, 1445, 1446, 1447, 1869], "num_class": [0, 19, 1566, 1869], "super": [0, 9, 12, 17, 25, 28, 29, 39, 40, 42, 44, 72, 860, 861, 1137, 1196, 1201, 1204, 1209, 1213, 1214, 1215, 1430, 1431, 1432, 1440, 1441, 1442, 1443, 1601, 1697, 1868, 1870, 1871, 1872, 1891, 1896, 1902, 1907, 1909, 1913, 1916], "fc1": [0, 40, 1601, 1914], "x": [0, 1, 3, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 27, 29, 31, 33, 39, 40, 42, 48, 50, 56, 64, 66, 67, 69, 70, 71, 72, 176, 256, 260, 288, 291, 313, 315, 317, 319, 323, 354, 379, 449, 484, 493, 499, 557, 559, 582, 606, 607, 616, 691, 757, 759, 769, 778, 779, 783, 784, 795, 798, 801, 819, 820, 860, 861, 877, 883, 885, 886, 887, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 934, 935, 936, 939, 940, 952, 963, 966, 969, 970, 1014, 1015, 1054, 1061, 1065, 1066, 1071, 1075, 1085, 1086, 1087, 1088, 1090, 1091, 1096, 1097, 1099, 1101, 1105, 1106, 1108, 1111, 1112, 1113, 1121, 1127, 1129, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1151, 1168, 1172, 1173, 1185, 1203, 1204, 1208, 1209, 1212, 1213, 1214, 1215, 1219, 1229, 1242, 1243, 1247, 1250, 1254, 1258, 1260, 1263, 1264, 1265, 1266, 1267, 1270, 1275, 1276, 1277, 1285, 1288, 1291, 1292, 1299, 1324, 1325, 1329, 1330, 1336, 1337, 1346, 1347, 1348, 1349, 1350, 1352, 1364, 1366, 1372, 1378, 1379, 1380, 1382, 1383, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1416, 1419, 1420, 1421, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1445, 1447, 1448, 1449, 1450, 1457, 1459, 1460, 1461, 1462, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1478, 1479, 1482, 1503, 1527, 1529, 1533, 1534, 1540, 1544, 1548, 1559, 1564, 1569, 1573, 1575, 1580, 1581, 1582, 1586, 1587, 1589, 1590, 1591, 1598, 1601, 1618, 1620, 1622, 1643, 1644, 1645, 1646, 1647, 1652, 1655, 1656, 1657, 1664, 1667, 1670, 1691, 1705, 1706, 1717, 1719, 1733, 1736, 1737, 1739, 1740, 1742, 1743, 1747, 1751, 1761, 1789, 1793, 1807, 1810, 1811, 1812, 1818, 1819, 1825, 1831, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1849, 1850, 1852, 1853, 1854, 1856, 1857, 1858, 1861, 1865, 1868, 1869, 1870, 1871, 1872, 1883, 1884, 1885, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1908, 1909, 1913, 1916, 1921, 1925, 1926, 1928, 1930, 1931, 1933, 1934, 1935], "2": [0, 1, 3, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 25, 28, 31, 33, 36, 37, 38, 39, 40, 42, 43, 46, 48, 49, 50, 52, 57, 59, 64, 68, 69, 70, 71, 72, 176, 194, 211, 228, 236, 256, 262, 315, 317, 319, 323, 337, 379, 403, 404, 446, 447, 448, 449, 450, 482, 488, 493, 496, 499, 513, 515, 517, 543, 557, 559, 579, 580, 582, 583, 584, 586, 587, 588, 606, 616, 679, 680, 682, 683, 684, 685, 688, 689, 690, 691, 692, 694, 696, 697, 698, 733, 737, 738, 739, 740, 741, 742, 744, 745, 754, 757, 759, 761, 792, 795, 819, 864, 873, 874, 875, 876, 877, 878, 879, 883, 885, 886, 887, 889, 898, 900, 901, 902, 903, 904, 905, 912, 913, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 938, 939, 940, 942, 943, 944, 945, 946, 950, 951, 960, 963, 964, 965, 966, 969, 970, 971, 1045, 1050, 1053, 1054, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1132, 1133, 1134, 1138, 1139, 1140, 1141, 1142, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1172, 1173, 1175, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1201, 1202, 1207, 1209, 1211, 1213, 1217, 1218, 1219, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1274, 1275, 1276, 1277, 1284, 1286, 1287, 1288, 1289, 1291, 1292, 1295, 1296, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1315, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1334, 1337, 1342, 1343, 1344, 1345, 1346, 1347, 1352, 1353, 1354, 1355, 1356, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1381, 1382, 1384, 1386, 1387, 1388, 1389, 1391, 1398, 1399, 1400, 1401, 1402, 1416, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1435, 1436, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1494, 1496, 1501, 1502, 1513, 1520, 1521, 1527, 1529, 1531, 1533, 1540, 1546, 1553, 1554, 1555, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1579, 1595, 1601, 1610, 1614, 1617, 1618, 1622, 1634, 1635, 1636, 1637, 1639, 1640, 1643, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1664, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1698, 1699, 1700, 1704, 1705, 1706, 1708, 1709, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1726, 1728, 1730, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1747, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1761, 1764, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1785, 1789, 1790, 1791, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1810, 1811, 1812, 1813, 1815, 1816, 1817, 1818, 1819, 1825, 1826, 1828, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1866, 1867, 1869, 1870, 1871, 1872, 1878, 1879, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1935], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 39, 40, 42, 44, 46, 47, 48, 49, 50, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 496, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 778, 784, 787, 788, 790, 792, 793, 837, 856, 858, 860, 861, 864, 892, 893, 896, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 921, 930, 952, 971, 1028, 1071, 1089, 1091, 1092, 1093, 1094, 1101, 1106, 1107, 1108, 1122, 1131, 1132, 1134, 1139, 1151, 1155, 1156, 1172, 1196, 1198, 1201, 1202, 1209, 1211, 1213, 1253, 1256, 1261, 1269, 1270, 1289, 1320, 1338, 1346, 1347, 1396, 1430, 1482, 1529, 1531, 1540, 1598, 1605, 1610, 1617, 1619, 1628, 1630, 1633, 1637, 1638, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1688, 1694, 1699, 1716, 1858, 1865, 1866, 1868, 1870, 1871, 1873, 1875, 1878, 1879, 1883, 1884, 1885, 1886, 1891, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1908, 1909, 1912, 1913, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1928, 1930, 1933, 1934, 1935], "suggest": [0, 9, 22, 29, 40, 65, 84, 85, 86, 1364, 1865, 1873, 1890, 1891, 1898, 1925], "issu": [0, 2, 3, 5, 9, 10, 11, 16, 17, 18, 21, 27, 31, 33, 38, 39, 42, 49, 64, 65, 67, 69, 72, 86, 900, 906, 952, 954, 955, 1122, 1133, 1135, 1139, 1243, 1287, 1299, 1396, 1400, 1426, 1427, 1428, 1445, 1482, 1540, 1541, 1654, 1755, 1858, 1865, 1866, 1871, 1873, 1878, 1883, 1884, 1885, 1886, 1890, 1891, 1894, 1896, 1904, 1905, 1906, 1908, 1909, 1913, 1916, 1917, 1921, 1925, 1926, 1928], "http": [0, 2, 3, 4, 7, 9, 18, 19, 22, 27, 28, 33, 34, 40, 41, 42, 47, 48, 59, 60, 64, 153, 679, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 791, 792, 892, 952, 1071, 1128, 1270, 1299, 1353, 1400, 1426, 1427, 1428, 1448, 1449, 1473, 1476, 1479, 1654, 1705, 1722, 1755, 1780, 1851, 1865, 1872, 1880, 1882, 1891, 1892, 1896, 1899, 1900, 1902, 1906, 1908, 1909, 1913, 1915, 1928, 1930, 1937], "github": [0, 7, 9, 16, 22, 27, 28, 29, 33, 41, 42, 55, 64, 65, 69, 153, 791, 792, 892, 906, 1128, 1299, 1426, 1427, 1428, 1473, 1654, 1691, 1755, 1865, 1873, 1878, 1896, 1899, 1906, 1909, 1915, 1916, 1925, 1926, 1928], "com": [0, 7, 22, 27, 28, 33, 41, 42, 58, 60, 64, 153, 791, 792, 892, 1128, 1299, 1426, 1427, 1428, 1473, 1654, 1755, 1851, 1865, 1880, 1882, 1896, 1899, 1900, 1906, 1908, 1909, 1915, 1928], "pytorch": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 18, 20, 21, 25, 26, 27, 28, 31, 32, 33, 35, 36, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 59, 60, 64, 65, 68, 70, 72, 84, 85, 86, 88, 89, 153, 513, 582, 679, 697, 729, 730, 731, 732, 744, 745, 755, 759, 760, 761, 762, 763, 764, 791, 792, 809, 810, 811, 812, 879, 892, 937, 942, 943, 952, 953, 971, 996, 997, 1008, 1013, 1071, 1116, 1122, 1128, 1129, 1133, 1138, 1139, 1144, 1184, 1185, 1208, 1228, 1239, 1241, 1242, 1243, 1246, 1259, 1268, 1284, 1287, 1288, 1299, 1346, 1347, 1353, 1382, 1396, 1426, 1427, 1428, 1473, 1502, 1579, 1610, 1643, 1651, 1652, 1654, 1657, 1664, 1668, 1715, 1747, 1755, 1756, 1766, 1812, 1816, 1839, 1851, 1858, 1865, 1867, 1870, 1871, 1875, 1877, 1878, 1880, 1881, 1885, 1886, 1887, 1892, 1893, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1908, 1912, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1925, 1926, 1928, 1929, 1930, 1936, 1937], "75956": 0, "_c": [0, 39, 40, 42, 71, 900, 906, 1197, 1209, 1666, 1869, 1871, 1881, 1894, 1901, 1905, 1908, 1909], "_jit_set_autocast_mod": 0, "fals": [0, 1, 3, 5, 11, 16, 17, 18, 20, 23, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 64, 67, 72, 115, 116, 117, 118, 119, 121, 137, 138, 139, 153, 184, 185, 186, 199, 212, 262, 303, 320, 321, 323, 330, 334, 337, 338, 340, 344, 345, 346, 353, 356, 394, 398, 409, 411, 412, 413, 416, 422, 430, 431, 432, 433, 446, 447, 448, 449, 450, 454, 459, 461, 471, 472, 480, 495, 496, 504, 517, 541, 554, 555, 564, 579, 593, 602, 608, 609, 614, 616, 679, 692, 693, 694, 695, 696, 698, 711, 712, 713, 714, 715, 716, 733, 734, 744, 745, 750, 751, 752, 754, 757, 759, 767, 768, 775, 777, 778, 779, 781, 782, 784, 796, 813, 818, 819, 820, 821, 823, 824, 825, 837, 838, 856, 857, 862, 864, 873, 874, 875, 879, 892, 893, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 916, 919, 921, 924, 927, 929, 930, 936, 937, 943, 944, 945, 951, 952, 963, 974, 1012, 1017, 1029, 1071, 1072, 1073, 1074, 1076, 1077, 1084, 1088, 1089, 1090, 1091, 1096, 1097, 1102, 1103, 1104, 1106, 1107, 1108, 1124, 1125, 1126, 1127, 1129, 1130, 1132, 1133, 1134, 1136, 1138, 1140, 1142, 1154, 1155, 1156, 1159, 1160, 1173, 1183, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1203, 1204, 1205, 1213, 1214, 1215, 1217, 1219, 1222, 1227, 1228, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1250, 1252, 1254, 1255, 1258, 1259, 1260, 1261, 1262, 1267, 1268, 1269, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1289, 1291, 1295, 1297, 1298, 1300, 1303, 1311, 1312, 1320, 1325, 1326, 1327, 1328, 1331, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1364, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1416, 1417, 1421, 1422, 1423, 1424, 1425, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1439, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1457, 1459, 1461, 1462, 1469, 1472, 1473, 1474, 1475, 1477, 1478, 1479, 1482, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1524, 1525, 1526, 1529, 1531, 1533, 1534, 1535, 1540, 1541, 1544, 1550, 1551, 1553, 1554, 1555, 1559, 1564, 1568, 1572, 1574, 1575, 1577, 1578, 1579, 1580, 1582, 1592, 1595, 1596, 1598, 1610, 1612, 1614, 1617, 1619, 1622, 1623, 1635, 1644, 1645, 1646, 1647, 1649, 1652, 1655, 1656, 1657, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1713, 1715, 1716, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1739, 1740, 1747, 1751, 1759, 1760, 1761, 1764, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1789, 1798, 1799, 1800, 1801, 1802, 1803, 1810, 1811, 1812, 1815, 1816, 1830, 1834, 1839, 1848, 1851, 1852, 1853, 1854, 1861, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1877, 1878, 1879, 1880, 1883, 1885, 1886, 1890, 1891, 1894, 1895, 1896, 1898, 1902, 1905, 1906, 1909, 1910, 1913, 1914, 1915, 1917, 1920, 1921, 1925, 1926, 1927, 1929, 1930, 1932, 1933, 1935, 1936], "randn": [0, 1, 11, 12, 16, 19, 20, 21, 25, 27, 29, 31, 42, 48, 66, 68, 69, 70, 72, 291, 313, 484, 543, 579, 583, 584, 585, 586, 587, 588, 616, 682, 683, 684, 685, 686, 687, 688, 689, 694, 695, 698, 719, 727, 728, 733, 737, 738, 739, 740, 741, 742, 755, 757, 759, 760, 761, 762, 763, 764, 771, 772, 773, 860, 861, 873, 874, 875, 877, 880, 881, 882, 883, 884, 920, 932, 939, 941, 942, 943, 944, 945, 947, 965, 966, 967, 968, 969, 971, 1050, 1051, 1052, 1053, 1058, 1059, 1060, 1061, 1065, 1071, 1085, 1086, 1115, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1168, 1172, 1175, 1209, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1251, 1252, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1273, 1277, 1278, 1285, 1287, 1288, 1289, 1291, 1292, 1295, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1318, 1319, 1322, 1332, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1456, 1457, 1459, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1478, 1480, 1481, 1485, 1486, 1487, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1524, 1525, 1531, 1564, 1570, 1571, 1660, 1664, 1706, 1711, 1712, 1713, 1715, 1716, 1729, 1733, 1734, 1746, 1782, 1784, 1789, 1794, 1797, 1805, 1806, 1815, 1816, 1825, 1828, 1829, 1832, 1836, 1839, 1840, 1842, 1845, 1847, 1851, 1856, 1857, 1858, 1861, 1867, 1869, 1870, 1871, 1873, 1884, 1885, 1886, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1902, 1906, 1907, 1909, 1911, 1913, 1916, 1921, 1925, 1926, 1928, 1930, 1933, 1935], "1": [0, 1, 3, 11, 12, 13, 14, 16, 17, 19, 20, 22, 25, 28, 29, 31, 33, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 62, 64, 68, 69, 70, 71, 72, 91, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 139, 154, 155, 176, 194, 208, 211, 228, 230, 231, 232, 244, 256, 260, 265, 288, 291, 313, 314, 315, 317, 319, 323, 354, 379, 403, 404, 446, 448, 449, 455, 472, 482, 484, 488, 493, 496, 499, 513, 515, 517, 536, 537, 541, 543, 553, 554, 555, 557, 559, 560, 561, 562, 563, 580, 582, 583, 584, 586, 587, 606, 607, 614, 616, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 711, 712, 713, 714, 715, 716, 717, 718, 722, 723, 724, 725, 726, 729, 730, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 750, 751, 752, 755, 756, 757, 759, 769, 771, 772, 773, 774, 777, 781, 782, 784, 795, 807, 808, 818, 819, 820, 821, 824, 826, 854, 860, 861, 864, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 893, 896, 898, 899, 900, 901, 902, 903, 904, 905, 912, 913, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 950, 951, 953, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 983, 1014, 1015, 1030, 1034, 1041, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1077, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1140, 1141, 1142, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1168, 1169, 1172, 1173, 1175, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1202, 1208, 1209, 1213, 1214, 1217, 1218, 1219, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1243, 1244, 1245, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1315, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1472, 1473, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1494, 1496, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1531, 1533, 1535, 1536, 1537, 1538, 1539, 1547, 1549, 1553, 1554, 1555, 1561, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1573, 1577, 1578, 1579, 1580, 1581, 1583, 1585, 1586, 1587, 1589, 1594, 1595, 1596, 1597, 1598, 1601, 1610, 1617, 1618, 1622, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1708, 1709, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1751, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1764, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1784, 1785, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1867, 1869, 1870, 1871, 1872, 1875, 1878, 1879, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937], "freez": [0, 1198, 1207, 1373, 1374, 1430, 1891], "_": [0, 1, 3, 12, 20, 25, 29, 39, 40, 42, 43, 46, 52, 70, 72, 680, 682, 683, 697, 864, 880, 881, 882, 883, 884, 893, 899, 922, 941, 964, 965, 967, 968, 970, 1115, 1120, 1134, 1138, 1164, 1218, 1226, 1277, 1285, 1348, 1349, 1350, 1393, 1394, 1395, 1469, 1610, 1618, 1651, 1683, 1685, 1705, 1728, 1731, 1734, 1746, 1761, 1767, 1769, 1775, 1782, 1784, 1805, 1816, 1828, 1829, 1891, 1894, 1897, 1898, 1902, 1908, 1912, 1913, 1915, 1926], "3": [0, 1, 3, 4, 6, 9, 11, 13, 16, 17, 19, 20, 22, 24, 25, 27, 28, 29, 31, 36, 37, 39, 40, 42, 44, 46, 48, 49, 50, 52, 57, 59, 64, 66, 68, 69, 70, 71, 72, 194, 211, 256, 262, 291, 315, 317, 319, 323, 403, 404, 446, 447, 448, 449, 450, 472, 488, 493, 496, 499, 513, 515, 517, 536, 543, 557, 559, 580, 582, 583, 584, 586, 587, 606, 616, 679, 680, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 697, 698, 733, 737, 738, 739, 740, 741, 742, 745, 747, 756, 759, 760, 761, 762, 764, 771, 772, 773, 784, 792, 823, 860, 861, 864, 874, 875, 877, 878, 879, 886, 887, 900, 901, 902, 903, 904, 905, 920, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 938, 939, 940, 942, 943, 944, 945, 946, 950, 951, 960, 963, 964, 969, 970, 971, 1014, 1015, 1017, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1084, 1087, 1092, 1095, 1099, 1105, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1134, 1135, 1137, 1139, 1140, 1141, 1142, 1151, 1154, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1172, 1173, 1175, 1183, 1185, 1187, 1189, 1198, 1202, 1204, 1207, 1209, 1213, 1214, 1218, 1219, 1220, 1221, 1222, 1223, 1227, 1229, 1230, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1275, 1278, 1280, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1304, 1305, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1343, 1344, 1345, 1346, 1347, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1366, 1373, 1374, 1377, 1378, 1379, 1380, 1382, 1383, 1385, 1387, 1388, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1433, 1435, 1437, 1442, 1443, 1445, 1447, 1448, 1451, 1452, 1453, 1454, 1455, 1456, 1463, 1464, 1465, 1469, 1477, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1494, 1496, 1501, 1502, 1505, 1506, 1508, 1509, 1512, 1520, 1521, 1524, 1525, 1527, 1529, 1533, 1534, 1540, 1548, 1564, 1566, 1567, 1570, 1571, 1577, 1578, 1585, 1586, 1598, 1610, 1618, 1632, 1634, 1636, 1637, 1638, 1639, 1643, 1645, 1646, 1647, 1648, 1651, 1656, 1657, 1658, 1660, 1661, 1662, 1664, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1694, 1697, 1698, 1700, 1704, 1706, 1708, 1712, 1713, 1715, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1728, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1747, 1751, 1755, 1756, 1757, 1764, 1767, 1769, 1771, 1773, 1774, 1775, 1779, 1780, 1781, 1789, 1791, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1815, 1816, 1818, 1819, 1825, 1826, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1855, 1858, 1859, 1860, 1861, 1863, 1864, 1867, 1868, 1869, 1870, 1871, 1872, 1878, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1899, 1902, 1903, 1907, 1908, 1909, 1912, 1913, 1916, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933], "bug": [0, 16, 29, 33, 36, 42, 72, 1131, 1132, 1134, 1287, 1890, 1904, 1925], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 84, 85, 86, 87, 122, 153, 157, 198, 199, 209, 212, 224, 225, 226, 257, 262, 291, 292, 315, 323, 325, 337, 339, 342, 354, 446, 447, 448, 449, 450, 459, 487, 488, 493, 495, 496, 497, 498, 499, 500, 503, 504, 513, 515, 517, 523, 555, 565, 582, 583, 584, 586, 587, 588, 602, 603, 613, 616, 617, 679, 683, 685, 688, 692, 693, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 734, 735, 736, 743, 747, 748, 749, 750, 751, 752, 753, 754, 756, 758, 759, 774, 775, 776, 777, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 798, 799, 801, 809, 810, 811, 812, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 853, 858, 860, 861, 873, 874, 875, 876, 877, 884, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 912, 913, 916, 919, 920, 923, 925, 928, 932, 933, 940, 942, 943, 946, 947, 949, 952, 954, 955, 956, 957, 959, 963, 964, 966, 971, 972, 973, 974, 975, 977, 978, 979, 982, 993, 995, 998, 999, 1000, 1002, 1003, 1006, 1007, 1008, 1009, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1024, 1027, 1028, 1029, 1035, 1036, 1038, 1039, 1040, 1044, 1045, 1046, 1052, 1053, 1054, 1059, 1061, 1062, 1066, 1069, 1070, 1071, 1075, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1117, 1118, 1119, 1122, 1124, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1143, 1144, 1145, 1151, 1155, 1161, 1163, 1173, 1185, 1195, 1196, 1198, 1199, 1201, 1203, 1204, 1205, 1207, 1208, 1209, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1221, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1273, 1275, 1278, 1287, 1288, 1292, 1295, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1311, 1312, 1322, 1325, 1326, 1327, 1328, 1330, 1338, 1342, 1346, 1347, 1348, 1349, 1350, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1377, 1378, 1379, 1382, 1383, 1385, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1417, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1436, 1437, 1440, 1442, 1445, 1446, 1458, 1461, 1463, 1466, 1469, 1475, 1476, 1477, 1478, 1481, 1482, 1483, 1484, 1494, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1524, 1525, 1529, 1531, 1533, 1540, 1546, 1548, 1553, 1554, 1555, 1565, 1567, 1569, 1579, 1585, 1586, 1594, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1643, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1654, 1655, 1657, 1658, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1694, 1695, 1697, 1699, 1701, 1703, 1704, 1705, 1709, 1713, 1715, 1722, 1726, 1731, 1735, 1737, 1744, 1751, 1753, 1754, 1755, 1757, 1758, 1759, 1761, 1764, 1766, 1767, 1785, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1808, 1810, 1811, 1812, 1815, 1816, 1818, 1819, 1825, 1827, 1831, 1833, 1837, 1839, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937], "what": [0, 1, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 20, 21, 27, 29, 42, 47, 48, 52, 56, 57, 64, 66, 68, 69, 72, 891, 1132, 1213, 1214, 1287, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1424, 1425, 1458, 1481, 1553, 1554, 1555, 1579, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1716, 1865, 1866, 1868, 1870, 1871, 1884, 1896, 1897, 1899, 1902, 1904, 1909, 1912, 1915, 1916, 1921, 1922, 1925], "observ": [0, 11, 16, 25, 29, 40, 50, 59, 755, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 807, 808, 810, 812, 814, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 840, 858, 860, 861, 863, 966, 970, 1211, 1299, 1346, 1347, 1348, 1349, 1350, 1364, 1366, 1390, 1393, 1394, 1395, 1396, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1469, 1478, 1501, 1502, 1512, 1541, 1564, 1572, 1890, 1891, 1894, 1895, 1901, 1904, 1917, 1935], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 12, 15, 21, 24, 27, 29, 31, 34, 40, 42, 48, 51, 54, 55, 59, 60, 64, 65, 66, 67, 68, 69, 70, 72, 256, 257, 498, 513, 617, 688, 729, 730, 731, 732, 733, 734, 740, 741, 742, 744, 745, 755, 760, 761, 762, 763, 764, 860, 861, 891, 893, 894, 895, 900, 902, 903, 906, 934, 1054, 1127, 1131, 1132, 1133, 1134, 1135, 1139, 1198, 1261, 1292, 1302, 1353, 1361, 1396, 1430, 1529, 1541, 1546, 1567, 1579, 1597, 1610, 1651, 1652, 1654, 1693, 1755, 1858, 1873, 1878, 1884, 1885, 1886, 1887, 1890, 1891, 1896, 1897, 1900, 1905, 1906, 1908, 1909, 1912, 1913, 1916, 1919, 1921, 1922, 1925, 1926, 1928, 1929, 1930, 1932], "file": [0, 1, 3, 6, 7, 9, 12, 14, 16, 17, 22, 24, 25, 31, 33, 36, 39, 44, 50, 52, 57, 59, 61, 67, 69, 72, 900, 906, 914, 915, 973, 1010, 1131, 1132, 1134, 1135, 1173, 1205, 1208, 1269, 1667, 1747, 1791, 1865, 1868, 1871, 1872, 1873, 1880, 1884, 1885, 1886, 1891, 1894, 1896, 1901, 1904, 1906, 1907, 1908, 1909, 1915, 1919, 1922, 1925, 1927, 1930], "subregion": 0, "nest": [0, 1, 5, 33, 44, 64, 72, 588, 792, 814, 816, 893, 902, 1032, 1033, 1129, 1139, 1198, 1201, 1213, 1430, 1436, 1476, 1477, 1664, 1668, 1858, 1866, 1897, 1909, 1915, 1921], "local": [0, 13, 16, 20, 29, 42, 44, 46, 47, 50, 57, 59, 60, 61, 62, 64, 72, 919, 1014, 1075, 1128, 1173, 1198, 1270, 1369, 1370, 1371, 1375, 1377, 1418, 1430, 1481, 1523, 1547, 1597, 1610, 1611, 1655, 1761, 1791, 1865, 1866, 1870, 1883, 1890, 1894, 1895, 1898, 1909, 1913, 1914, 1918, 1921, 1922, 1923, 1930], "want": [0, 1, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 27, 28, 33, 39, 42, 47, 48, 56, 64, 66, 67, 68, 69, 71, 72, 449, 496, 499, 780, 790, 837, 1010, 1127, 1128, 1210, 1213, 1214, 1299, 1378, 1379, 1482, 1524, 1525, 1540, 1598, 1610, 1611, 1652, 1655, 1672, 1673, 1686, 1747, 1865, 1875, 1878, 1890, 1891, 1893, 1894, 1896, 1897, 1899, 1902, 1909, 1912, 1913, 1916, 1925, 1930, 1931, 1934], "forc": [0, 1, 11, 13, 18, 33, 36, 64, 459, 879, 952, 1010, 1201, 1212, 1216, 1766, 1865, 1868, 1871, 1890, 1894, 1930, 1933], "particular": [0, 3, 7, 11, 15, 16, 17, 18, 29, 39, 44, 50, 56, 59, 60, 64, 72, 559, 679, 860, 861, 952, 1045, 1139, 1198, 1292, 1367, 1430, 1664, 1858, 1868, 1870, 1878, 1886, 1894, 1896, 1898, 1901, 1902, 1905, 1909, 1912, 1925, 1927, 1933, 1936], "give": [0, 3, 4, 7, 9, 11, 14, 15, 17, 19, 21, 24, 29, 36, 39, 40, 44, 46, 58, 64, 72, 907, 908, 970, 1089, 1091, 1092, 1094, 1098, 1107, 1131, 1132, 1133, 1211, 1227, 1234, 1358, 1359, 1360, 1435, 1481, 1482, 1617, 1656, 1672, 1673, 1812, 1851, 1865, 1868, 1883, 1885, 1889, 1891, 1894, 1896, 1897, 1899, 1900, 1902, 1906, 1909, 1912, 1914, 1925, 1936], "explicit": [0, 8, 42, 64, 68, 72, 1006, 1151, 1185, 1541, 1755, 1832, 1865, 1866, 1867, 1871, 1872, 1884, 1890, 1894, 1896, 1913, 1928, 1929], "control": [0, 1, 2, 11, 12, 14, 19, 20, 33, 39, 40, 42, 43, 44, 48, 50, 55, 58, 59, 754, 798, 857, 860, 875, 879, 893, 921, 930, 1058, 1059, 1060, 1061, 1062, 1155, 1156, 1209, 1210, 1211, 1213, 1228, 1234, 1236, 1239, 1241, 1244, 1246, 1250, 1256, 1259, 1261, 1267, 1287, 1338, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1416, 1424, 1425, 1481, 1579, 1610, 1703, 1759, 1760, 1774, 1789, 1791, 1796, 1812, 1816, 1834, 1840, 1841, 1842, 1843, 1866, 1868, 1877, 1891, 1893, 1894, 1895, 1902, 1904, 1905, 1907, 1909, 1912, 1916, 1923, 1925], "execut": [0, 1, 2, 3, 4, 5, 7, 13, 14, 15, 16, 17, 18, 20, 22, 23, 26, 28, 29, 33, 34, 39, 42, 44, 46, 50, 51, 53, 60, 64, 69, 71, 72, 488, 912, 913, 952, 977, 988, 1049, 1128, 1198, 1199, 1201, 1213, 1214, 1269, 1311, 1312, 1367, 1430, 1436, 1474, 1475, 1476, 1477, 1604, 1606, 1610, 1762, 1866, 1868, 1870, 1872, 1879, 1890, 1892, 1893, 1898, 1901, 1902, 1904, 1906, 1908, 1909, 1915, 1916, 1921, 1922, 1925], "surround": [0, 72, 789, 1870, 1890, 1894], "ensur": [0, 1, 4, 6, 7, 9, 11, 15, 16, 29, 39, 42, 43, 44, 46, 50, 59, 60, 62, 64, 71, 72, 482, 487, 734, 818, 896, 898, 959, 1128, 1198, 1342, 1423, 1430, 1433, 1434, 1473, 1529, 1553, 1554, 1555, 1579, 1610, 1763, 1865, 1868, 1870, 1878, 1880, 1883, 1890, 1891, 1894, 1896, 1897, 1899, 1904, 1906, 1913, 1916, 1917, 1921, 1922], "necessari": [0, 1, 3, 9, 16, 29, 33, 39, 44, 50, 59, 60, 64, 71, 91, 194, 211, 559, 588, 899, 1128, 1172, 1209, 1436, 1644, 1645, 1868, 1871, 1885, 1889, 1891, 1892, 1894, 1895, 1900, 1902, 1905, 1908, 1913, 1916, 1921, 1922, 1923, 1928], "becaus": [0, 1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 19, 20, 25, 27, 29, 33, 39, 40, 42, 46, 48, 52, 64, 68, 69, 71, 72, 496, 902, 907, 908, 1092, 1093, 1094, 1102, 1103, 1104, 1129, 1133, 1138, 1139, 1195, 1199, 1202, 1205, 1244, 1245, 1269, 1287, 1348, 1349, 1350, 1367, 1469, 1601, 1610, 1611, 1689, 1731, 1812, 1858, 1866, 1868, 1871, 1873, 1883, 1884, 1885, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1909, 1913, 1916, 1917, 1921, 1923, 1925, 1930, 1932, 1935, 1936], "wa": [0, 1, 3, 7, 15, 17, 20, 21, 28, 36, 40, 42, 47, 57, 58, 59, 60, 64, 71, 72, 337, 487, 496, 679, 784, 791, 853, 942, 953, 974, 975, 998, 1002, 1017, 1030, 1049, 1091, 1139, 1195, 1204, 1213, 1228, 1239, 1241, 1245, 1269, 1287, 1320, 1400, 1426, 1427, 1428, 1459, 1482, 1494, 1529, 1582, 1598, 1610, 1611, 1646, 1691, 1697, 1810, 1811, 1848, 1849, 1853, 1854, 1858, 1865, 1868, 1870, 1871, 1872, 1875, 1877, 1878, 1881, 1883, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1901, 1903, 1909, 1912, 1914, 1916, 1920, 1921, 1925, 1932], "f_float32": 0, "re": [0, 1, 4, 5, 7, 11, 14, 15, 16, 19, 21, 28, 29, 33, 39, 42, 46, 49, 56, 59, 64, 65, 66, 67, 68, 69, 71, 72, 932, 1122, 1198, 1202, 1430, 1585, 1611, 1646, 1742, 1795, 1868, 1871, 1878, 1883, 1890, 1891, 1894, 1896, 1897, 1899, 1904, 1916, 1922, 1923, 1926, 1936], "again": [0, 11, 14, 15, 20, 22, 36, 39, 42, 46, 50, 67, 1320, 1891, 1896, 1897, 1902], "regardless": [0, 16, 39, 58, 64, 964, 1202, 1207, 1848, 1890, 1894, 1907, 1921, 1932], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 68, 69, 70, 71, 74, 75, 76, 84, 85, 86, 91, 153, 194, 199, 211, 212, 224, 257, 292, 313, 315, 317, 321, 323, 400, 402, 403, 404, 449, 459, 484, 487, 488, 493, 495, 498, 499, 513, 515, 517, 536, 543, 582, 602, 616, 617, 679, 683, 686, 687, 688, 689, 693, 694, 695, 696, 734, 747, 756, 759, 765, 766, 767, 768, 771, 772, 773, 778, 779, 781, 782, 784, 785, 786, 791, 792, 793, 794, 798, 801, 814, 816, 818, 819, 820, 821, 824, 826, 836, 837, 853, 858, 863, 876, 877, 879, 883, 884, 888, 889, 891, 892, 893, 894, 895, 900, 901, 903, 904, 905, 906, 907, 908, 912, 913, 915, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 937, 938, 944, 951, 955, 957, 960, 966, 970, 973, 974, 980, 987, 1003, 1014, 1015, 1017, 1018, 1019, 1028, 1041, 1042, 1043, 1054, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1071, 1072, 1076, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1119, 1121, 1122, 1123, 1124, 1125, 1128, 1131, 1134, 1137, 1138, 1139, 1142, 1143, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1164, 1168, 1172, 1175, 1195, 1198, 1201, 1203, 1205, 1208, 1209, 1211, 1213, 1214, 1217, 1218, 1222, 1223, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1243, 1244, 1245, 1247, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1260, 1261, 1262, 1264, 1267, 1269, 1270, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1298, 1306, 1307, 1310, 1311, 1312, 1315, 1316, 1320, 1326, 1329, 1331, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1373, 1374, 1375, 1377, 1378, 1379, 1382, 1383, 1384, 1385, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1433, 1435, 1437, 1444, 1445, 1447, 1448, 1458, 1459, 1461, 1469, 1472, 1473, 1478, 1479, 1481, 1482, 1494, 1497, 1498, 1512, 1513, 1520, 1521, 1522, 1524, 1525, 1528, 1529, 1531, 1540, 1541, 1553, 1554, 1555, 1564, 1567, 1579, 1582, 1598, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1636, 1637, 1640, 1646, 1650, 1651, 1654, 1656, 1657, 1658, 1664, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1705, 1706, 1709, 1712, 1715, 1720, 1721, 1722, 1724, 1726, 1728, 1733, 1735, 1737, 1739, 1740, 1742, 1744, 1747, 1754, 1755, 1756, 1757, 1764, 1765, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1791, 1793, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1810, 1811, 1812, 1816, 1817, 1826, 1832, 1833, 1834, 1836, 1837, 1840, 1841, 1842, 1843, 1850, 1851, 1852, 1853, 1854, 1856, 1858, 1861, 1865, 1868, 1869, 1870, 1872, 1873, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1937], "state": [0, 1, 2, 5, 9, 11, 13, 14, 15, 16, 23, 27, 39, 42, 44, 46, 48, 50, 52, 59, 62, 64, 72, 91, 747, 759, 835, 959, 1003, 1004, 1008, 1013, 1017, 1027, 1042, 1043, 1128, 1137, 1150, 1198, 1201, 1213, 1270, 1309, 1316, 1382, 1383, 1400, 1401, 1430, 1445, 1447, 1477, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1722, 1765, 1791, 1879, 1890, 1891, 1894, 1895, 1896, 1900, 1904, 1907, 1909, 1912, 1920, 1934], "thread": [0, 1, 3, 13, 39, 42, 44, 50, 61, 64, 71, 919, 974, 1075, 1148, 1149, 1173, 1367, 1655, 1761, 1762, 1763, 1866, 1868, 1881, 1890, 1894, 1901, 1904, 1921, 1923, 1933], "new": [0, 1, 5, 8, 11, 13, 14, 16, 20, 28, 29, 33, 36, 39, 41, 42, 44, 48, 50, 59, 60, 64, 65, 68, 69, 70, 71, 72, 224, 256, 313, 449, 484, 488, 496, 499, 543, 579, 582, 616, 679, 683, 759, 790, 813, 818, 853, 878, 880, 881, 882, 883, 884, 894, 912, 913, 935, 936, 939, 941, 950, 954, 965, 967, 968, 975, 977, 1055, 1059, 1081, 1085, 1086, 1112, 1113, 1115, 1128, 1137, 1139, 1168, 1172, 1173, 1187, 1188, 1191, 1194, 1198, 1204, 1209, 1211, 1271, 1272, 1273, 1274, 1291, 1329, 1332, 1348, 1349, 1350, 1382, 1393, 1394, 1395, 1430, 1431, 1436, 1440, 1469, 1480, 1482, 1540, 1603, 1606, 1607, 1608, 1609, 1610, 1618, 1622, 1624, 1628, 1629, 1630, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1647, 1651, 1654, 1655, 1672, 1673, 1699, 1723, 1733, 1734, 1738, 1739, 1740, 1746, 1747, 1751, 1756, 1757, 1767, 1769, 1780, 1782, 1784, 1805, 1806, 1809, 1826, 1828, 1829, 1845, 1847, 1850, 1856, 1857, 1858, 1865, 1868, 1870, 1871, 1875, 1878, 1879, 1883, 1884, 1885, 1886, 1887, 1891, 1894, 1896, 1897, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1915, 1916, 1919, 1923, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1935], "must": [0, 3, 5, 6, 9, 11, 12, 14, 17, 20, 28, 29, 33, 39, 42, 44, 46, 48, 49, 50, 57, 60, 61, 64, 67, 69, 71, 72, 91, 100, 142, 156, 157, 199, 262, 315, 317, 323, 400, 402, 404, 513, 543, 544, 565, 582, 583, 584, 586, 587, 616, 685, 686, 687, 688, 689, 690, 696, 747, 756, 771, 772, 773, 792, 814, 816, 858, 859, 877, 883, 888, 889, 890, 891, 893, 899, 901, 903, 904, 905, 907, 908, 920, 922, 924, 925, 926, 927, 928, 929, 932, 936, 939, 960, 970, 973, 974, 984, 985, 986, 988, 1014, 1015, 1017, 1059, 1061, 1062, 1063, 1065, 1068, 1069, 1071, 1092, 1093, 1094, 1099, 1101, 1102, 1103, 1104, 1105, 1112, 1113, 1122, 1124, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1151, 1160, 1161, 1164, 1175, 1195, 1198, 1208, 1213, 1220, 1223, 1252, 1253, 1254, 1255, 1261, 1263, 1264, 1267, 1270, 1288, 1290, 1291, 1292, 1298, 1305, 1320, 1326, 1329, 1330, 1334, 1347, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1373, 1374, 1377, 1384, 1385, 1391, 1423, 1430, 1433, 1436, 1461, 1467, 1482, 1502, 1511, 1513, 1521, 1540, 1553, 1554, 1555, 1573, 1610, 1633, 1643, 1644, 1650, 1652, 1657, 1665, 1695, 1697, 1704, 1705, 1708, 1709, 1712, 1720, 1721, 1742, 1751, 1754, 1763, 1779, 1790, 1793, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1817, 1827, 1831, 1832, 1836, 1841, 1843, 1847, 1851, 1855, 1856, 1858, 1859, 1861, 1868, 1869, 1870, 1871, 1878, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1900, 1904, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1932, 1936], "invok": [0, 2, 8, 11, 15, 17, 20, 27, 34, 36, 39, 42, 57, 59, 60, 71, 72, 900, 902, 1014, 1015, 1198, 1201, 1207, 1367, 1430, 1603, 1605, 1608, 1609, 1654, 1691, 1697, 1868, 1871, 1872, 1879, 1890, 1893, 1894, 1895, 1896, 1897, 1901, 1902, 1913, 1921, 1922], "affect": [0, 1, 2, 7, 9, 23, 25, 36, 38, 49, 64, 224, 225, 784, 919, 975, 977, 1075, 1122, 1145, 1173, 1198, 1311, 1312, 1400, 1430, 1445, 1482, 1598, 1611, 1655, 1755, 1758, 1759, 1761, 1890, 1891, 1894, 1899, 1902, 1905, 1906, 1927], "dataparallel": [0, 42, 1594, 1610, 1646, 1866, 1891, 1898, 1904, 1921], "parallel": [0, 16, 32, 33, 39, 40, 42, 43, 44, 46, 59, 60, 64, 1148, 1149, 1201, 1367, 1436, 1469, 1529, 1610, 1762, 1763, 1866, 1871, 1890, 1891, 1893, 1904, 1908, 1921, 1923], "distributeddataparallel": [0, 39, 40, 42, 43, 46, 60, 64, 1367, 1469, 1904, 1914, 1921], "than": [0, 3, 4, 5, 6, 8, 9, 11, 12, 15, 16, 19, 22, 23, 25, 29, 31, 33, 39, 40, 42, 43, 44, 48, 49, 50, 52, 56, 59, 60, 61, 64, 69, 72, 153, 256, 499, 544, 616, 679, 692, 698, 778, 784, 892, 901, 902, 916, 923, 934, 941, 942, 946, 947, 986, 1024, 1028, 1041, 1059, 1060, 1111, 1112, 1113, 1115, 1119, 1124, 1135, 1142, 1154, 1158, 1172, 1183, 1195, 1196, 1199, 1209, 1218, 1219, 1222, 1227, 1228, 1234, 1238, 1243, 1251, 1252, 1254, 1255, 1258, 1263, 1269, 1273, 1286, 1289, 1295, 1298, 1300, 1303, 1315, 1320, 1330, 1346, 1347, 1358, 1359, 1360, 1367, 1373, 1374, 1391, 1422, 1436, 1444, 1461, 1467, 1477, 1478, 1479, 1494, 1504, 1505, 1506, 1520, 1521, 1529, 1540, 1566, 1579, 1597, 1598, 1601, 1610, 1617, 1618, 1619, 1620, 1646, 1651, 1657, 1672, 1673, 1697, 1699, 1713, 1714, 1735, 1736, 1764, 1797, 1798, 1799, 1800, 1802, 1803, 1833, 1841, 1843, 1851, 1865, 1867, 1868, 1870, 1871, 1873, 1885, 1886, 1887, 1889, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1916, 1917, 1921, 1925, 1926, 1928, 1930, 1931, 1932], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 19, 20, 22, 24, 26, 28, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 56, 59, 61, 62, 64, 68, 69, 70, 71, 72, 74, 76, 84, 85, 86, 153, 224, 256, 354, 404, 487, 513, 520, 544, 559, 696, 747, 756, 792, 853, 854, 855, 879, 885, 891, 892, 893, 894, 896, 902, 923, 934, 936, 946, 950, 954, 975, 977, 982, 984, 988, 1015, 1038, 1049, 1060, 1071, 1075, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1103, 1104, 1105, 1107, 1110, 1114, 1117, 1118, 1119, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1151, 1160, 1161, 1173, 1177, 1180, 1183, 1202, 1207, 1211, 1217, 1218, 1228, 1229, 1239, 1242, 1243, 1245, 1250, 1254, 1256, 1258, 1261, 1267, 1268, 1284, 1292, 1296, 1301, 1320, 1326, 1338, 1343, 1346, 1347, 1348, 1349, 1350, 1353, 1358, 1361, 1362, 1363, 1374, 1378, 1379, 1384, 1393, 1394, 1395, 1397, 1398, 1399, 1409, 1410, 1411, 1421, 1430, 1434, 1436, 1469, 1477, 1482, 1494, 1504, 1507, 1508, 1509, 1524, 1525, 1526, 1531, 1566, 1579, 1597, 1601, 1610, 1611, 1616, 1618, 1619, 1623, 1633, 1644, 1653, 1654, 1655, 1656, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1693, 1695, 1696, 1697, 1717, 1718, 1735, 1751, 1759, 1761, 1764, 1767, 1807, 1816, 1831, 1836, 1837, 1839, 1847, 1850, 1851, 1858, 1866, 1868, 1871, 1875, 1877, 1879, 1881, 1883, 1884, 1885, 1886, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1917, 1921, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932], "gpu": [0, 1, 2, 3, 4, 7, 11, 15, 16, 18, 19, 21, 24, 25, 26, 29, 33, 35, 37, 39, 40, 44, 50, 60, 61, 64, 71, 199, 212, 291, 334, 602, 759, 952, 979, 980, 983, 984, 985, 986, 987, 988, 994, 995, 996, 1003, 1009, 1010, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1048, 1049, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1119, 1198, 1207, 1244, 1269, 1298, 1306, 1307, 1308, 1311, 1312, 1338, 1367, 1382, 1400, 1430, 1445, 1446, 1469, 1594, 1610, 1643, 1816, 1866, 1868, 1879, 1882, 1894, 1896, 1900, 1902, 1903, 1905, 1906, 1908, 1916, 1921, 1925, 1927, 1931, 1933], "per": [0, 14, 18, 33, 39, 40, 42, 43, 44, 46, 47, 49, 50, 52, 58, 60, 61, 64, 65, 70, 473, 474, 475, 733, 734, 800, 807, 818, 821, 824, 832, 844, 852, 891, 900, 902, 952, 978, 1054, 1085, 1129, 1139, 1270, 1346, 1347, 1348, 1349, 1350, 1364, 1366, 1367, 1374, 1385, 1390, 1393, 1394, 1395, 1396, 1397, 1402, 1421, 1422, 1430, 1433, 1434, 1435, 1436, 1437, 1444, 1461, 1462, 1469, 1473, 1474, 1475, 1476, 1477, 1478, 1501, 1502, 1512, 1541, 1564, 1572, 1610, 1654, 1658, 1675, 1691, 1697, 1705, 1717, 1764, 1766, 1817, 1833, 1837, 1858, 1881, 1885, 1887, 1893, 1894, 1895, 1897, 1901, 1914, 1916, 1917, 1919, 1922, 1925, 1930], "process": [0, 1, 3, 14, 16, 20, 25, 29, 31, 33, 40, 42, 43, 44, 48, 50, 51, 52, 53, 59, 60, 61, 62, 64, 72, 86, 974, 1010, 1016, 1041, 1198, 1208, 1270, 1307, 1315, 1346, 1347, 1364, 1366, 1373, 1374, 1390, 1397, 1421, 1422, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1469, 1473, 1475, 1477, 1478, 1501, 1502, 1512, 1541, 1564, 1572, 1610, 1694, 1700, 1766, 1780, 1865, 1866, 1868, 1881, 1883, 1884, 1885, 1891, 1893, 1894, 1895, 1896, 1901, 1902, 1904, 1906, 1908, 1909, 1913, 1914, 1915, 1916, 1919, 1921, 1923, 1925, 1927, 1934], "work": [0, 1, 2, 3, 5, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 29, 31, 33, 34, 35, 42, 43, 44, 46, 47, 48, 49, 50, 59, 60, 61, 62, 64, 65, 69, 72, 122, 153, 354, 446, 447, 448, 449, 450, 487, 586, 587, 820, 860, 861, 892, 906, 952, 972, 974, 975, 977, 1006, 1017, 1018, 1038, 1072, 1074, 1091, 1111, 1112, 1113, 1128, 1198, 1202, 1209, 1210, 1233, 1234, 1261, 1262, 1270, 1367, 1427, 1430, 1446, 1463, 1567, 1585, 1610, 1667, 1697, 1724, 1728, 1730, 1756, 1762, 1827, 1830, 1865, 1868, 1871, 1872, 1882, 1883, 1884, 1885, 1886, 1889, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1904, 1907, 1908, 1909, 1913, 1914, 1916, 1919, 1921, 1922, 1931, 1933, 1936], "str": [0, 1, 2, 3, 5, 16, 18, 20, 28, 29, 33, 39, 40, 42, 44, 46, 47, 48, 50, 53, 57, 59, 61, 64, 72, 323, 513, 517, 602, 778, 784, 791, 792, 793, 814, 815, 816, 853, 900, 902, 910, 914, 915, 940, 952, 958, 973, 984, 985, 986, 988, 997, 998, 1000, 1001, 1002, 1014, 1015, 1016, 1028, 1029, 1031, 1033, 1045, 1066, 1071, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1127, 1128, 1132, 1137, 1139, 1147, 1196, 1197, 1198, 1199, 1201, 1202, 1204, 1207, 1243, 1256, 1261, 1262, 1269, 1270, 1299, 1311, 1312, 1327, 1346, 1347, 1353, 1358, 1359, 1360, 1364, 1366, 1374, 1380, 1384, 1390, 1391, 1396, 1397, 1406, 1407, 1408, 1421, 1422, 1430, 1431, 1433, 1434, 1435, 1437, 1440, 1444, 1447, 1458, 1461, 1462, 1473, 1475, 1477, 1478, 1479, 1480, 1482, 1501, 1502, 1512, 1513, 1521, 1526, 1529, 1540, 1541, 1564, 1572, 1598, 1610, 1617, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1651, 1652, 1654, 1664, 1667, 1675, 1691, 1697, 1699, 1716, 1747, 1751, 1758, 1759, 1793, 1812, 1858, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1879, 1880, 1881, 1883, 1885, 1889, 1891, 1907, 1909, 1911, 1913, 1914, 1915, 1920, 1921, 1927, 1930, 1932, 1934, 1935, 1936], "whether": [0, 1, 2, 7, 16, 18, 20, 29, 33, 39, 40, 42, 43, 44, 47, 48, 50, 58, 59, 64, 72, 321, 323, 472, 517, 616, 679, 692, 694, 695, 698, 873, 874, 879, 888, 896, 899, 900, 902, 907, 908, 919, 921, 930, 943, 944, 945, 951, 952, 953, 955, 957, 1013, 1029, 1127, 1139, 1155, 1156, 1173, 1195, 1198, 1205, 1206, 1214, 1219, 1227, 1228, 1234, 1236, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1252, 1254, 1255, 1258, 1259, 1260, 1261, 1269, 1285, 1287, 1295, 1297, 1298, 1300, 1303, 1320, 1325, 1326, 1327, 1328, 1353, 1364, 1390, 1396, 1430, 1439, 1444, 1479, 1491, 1492, 1493, 1513, 1541, 1572, 1610, 1617, 1619, 1622, 1635, 1649, 1652, 1657, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1691, 1703, 1713, 1716, 1760, 1761, 1810, 1811, 1812, 1815, 1816, 1834, 1839, 1848, 1849, 1851, 1853, 1854, 1858, 1865, 1871, 1877, 1878, 1880, 1886, 1890, 1894, 1896, 1900, 1909, 1914, 1916, 1921, 1925, 1927, 1929, 1930, 1935], "bool": [0, 1, 2, 3, 5, 14, 18, 28, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 53, 59, 61, 64, 71, 72, 153, 199, 212, 247, 262, 321, 323, 330, 331, 332, 333, 335, 336, 341, 343, 446, 447, 448, 449, 450, 459, 472, 496, 517, 580, 602, 679, 692, 693, 694, 695, 696, 698, 734, 757, 778, 779, 784, 793, 813, 864, 873, 874, 875, 879, 892, 900, 901, 902, 903, 904, 905, 906, 907, 908, 919, 921, 924, 926, 927, 929, 930, 936, 937, 943, 944, 945, 951, 952, 974, 981, 1011, 1017, 1029, 1072, 1073, 1074, 1077, 1084, 1089, 1107, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1132, 1133, 1134, 1138, 1140, 1155, 1156, 1159, 1160, 1173, 1183, 1187, 1189, 1195, 1198, 1202, 1204, 1205, 1213, 1214, 1217, 1219, 1227, 1228, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1250, 1252, 1254, 1255, 1258, 1259, 1260, 1261, 1267, 1268, 1269, 1270, 1279, 1280, 1281, 1282, 1284, 1285, 1287, 1289, 1295, 1297, 1298, 1300, 1303, 1311, 1312, 1320, 1325, 1326, 1327, 1328, 1329, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1421, 1422, 1423, 1424, 1425, 1430, 1433, 1434, 1435, 1436, 1437, 1439, 1444, 1447, 1448, 1449, 1450, 1457, 1461, 1462, 1469, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1494, 1501, 1502, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1526, 1529, 1531, 1533, 1540, 1541, 1564, 1572, 1579, 1598, 1610, 1611, 1614, 1615, 1617, 1619, 1621, 1622, 1623, 1644, 1645, 1646, 1647, 1649, 1652, 1657, 1661, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1705, 1711, 1713, 1715, 1716, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1751, 1756, 1760, 1761, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1789, 1798, 1799, 1800, 1801, 1802, 1803, 1810, 1811, 1812, 1815, 1816, 1824, 1830, 1834, 1839, 1848, 1849, 1851, 1852, 1853, 1854, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1880, 1881, 1883, 1884, 1885, 1886, 1900, 1907, 1909, 1911, 1913, 1914, 1915, 1920, 1921, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1935, 1936], "option": [0, 1, 3, 5, 16, 17, 18, 19, 20, 21, 24, 28, 29, 33, 39, 42, 46, 47, 48, 50, 53, 57, 58, 59, 61, 62, 64, 72, 85, 91, 153, 158, 173, 175, 178, 181, 182, 183, 198, 209, 212, 242, 269, 299, 327, 333, 395, 446, 447, 448, 449, 450, 488, 499, 500, 513, 520, 524, 536, 559, 579, 580, 582, 583, 584, 586, 587, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 734, 757, 778, 779, 784, 791, 793, 798, 817, 853, 858, 861, 864, 875, 877, 878, 879, 880, 881, 882, 883, 884, 891, 892, 900, 901, 902, 903, 904, 905, 906, 907, 908, 911, 912, 913, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 936, 939, 941, 942, 943, 944, 945, 947, 949, 950, 951, 952, 957, 958, 964, 965, 967, 968, 969, 970, 971, 972, 974, 975, 977, 979, 983, 984, 986, 987, 988, 991, 992, 999, 1000, 1003, 1006, 1014, 1015, 1016, 1020, 1022, 1023, 1024, 1026, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1041, 1042, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1068, 1070, 1071, 1072, 1073, 1074, 1076, 1081, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1140, 1141, 1142, 1143, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1162, 1163, 1164, 1172, 1175, 1187, 1189, 1192, 1193, 1195, 1196, 1198, 1199, 1202, 1204, 1211, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1311, 1312, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1336, 1337, 1338, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1352, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1384, 1387, 1388, 1389, 1390, 1391, 1396, 1397, 1402, 1406, 1407, 1408, 1409, 1410, 1411, 1416, 1421, 1422, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1444, 1448, 1449, 1450, 1457, 1461, 1462, 1469, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1494, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1520, 1521, 1524, 1525, 1526, 1529, 1531, 1540, 1541, 1548, 1553, 1554, 1555, 1564, 1565, 1572, 1579, 1585, 1586, 1598, 1606, 1607, 1610, 1611, 1617, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1651, 1652, 1654, 1656, 1657, 1658, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1682, 1683, 1684, 1685, 1686, 1690, 1703, 1704, 1705, 1708, 1712, 1713, 1715, 1716, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1744, 1746, 1751, 1764, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1817, 1827, 1828, 1829, 1830, 1831, 1834, 1836, 1839, 1840, 1841, 1842, 1843, 1845, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1860, 1861, 1863, 1864, 1865, 1868, 1869, 1871, 1873, 1875, 1877, 1879, 1880, 1881, 1886, 1889, 1894, 1896, 1897, 1898, 1901, 1902, 1906, 1907, 1909, 1913, 1915, 1916, 1921, 1925, 1926, 1928, 1930, 1932, 1935], "torch_dtyp": 0, "weight": [0, 16, 39, 42, 48, 64, 70, 72, 159, 303, 363, 364, 496, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 744, 745, 748, 750, 751, 752, 753, 755, 759, 760, 762, 763, 764, 771, 772, 773, 780, 791, 792, 793, 807, 808, 832, 834, 840, 844, 848, 849, 850, 851, 852, 857, 858, 860, 861, 923, 970, 1127, 1129, 1137, 1139, 1159, 1160, 1198, 1202, 1207, 1209, 1214, 1223, 1320, 1346, 1347, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1373, 1374, 1382, 1383, 1385, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1430, 1434, 1435, 1436, 1437, 1438, 1445, 1447, 1459, 1473, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1520, 1521, 1530, 1539, 1543, 1546, 1561, 1563, 1564, 1573, 1582, 1601, 1610, 1617, 1618, 1620, 1622, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1650, 1651, 1652, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1685, 1719, 1858, 1865, 1866, 1867, 1869, 1870, 1871, 1879, 1880, 1885, 1886, 1889, 1896, 1898, 1902, 1907, 1916, 1917, 1918, 1919, 1925, 1930, 1934, 1935], "cach": [0, 2, 3, 11, 16, 18, 22, 25, 29, 48, 72, 487, 952, 959, 996, 997, 1014, 1017, 1022, 1024, 1026, 1028, 1036, 1041, 1306, 1307, 1308, 1611, 1622, 1654, 1883, 1898], "insid": [0, 1, 7, 15, 17, 20, 29, 39, 59, 64, 69, 71, 72, 896, 897, 898, 899, 980, 1017, 1129, 1133, 1138, 1209, 1610, 1868, 1870, 1871, 1879, 1890, 1894, 1896, 1897, 1901, 1909, 1925, 1934], "custom_fwd": [0, 1890], "fwd": [0, 22], "cast_input": [0, 1890], "helper": [0, 3, 5, 28, 42, 68, 72, 1469, 1865, 1866, 1870, 1894, 1895, 1909, 1913, 1921, 1936], "subclass": [0, 1, 13, 20, 33, 39, 44, 48, 52, 69, 72, 142, 536, 888, 889, 890, 1196, 1199, 1208, 1430, 1611, 1624, 1629, 1650, 1868, 1871, 1872, 1878, 1890, 1902, 1909, 1910, 1921, 1925, 1936], "page": [0, 6, 7, 9, 24, 39, 43, 60, 62, 1270, 1473, 1475, 1477, 1894, 1895, 1902, 1911, 1921], "incom": [0, 42, 61, 780, 818, 819, 820, 821, 824, 1351, 1417, 1500, 1546, 1883, 1891], "non": [0, 1, 3, 5, 11, 14, 15, 16, 17, 18, 19, 25, 28, 33, 38, 40, 42, 43, 44, 47, 48, 50, 52, 59, 61, 62, 64, 71, 86, 91, 153, 337, 504, 513, 517, 544, 697, 733, 738, 739, 740, 741, 742, 744, 745, 755, 759, 763, 764, 771, 772, 773, 837, 864, 876, 888, 890, 892, 897, 899, 907, 908, 923, 936, 939, 952, 963, 964, 969, 1028, 1117, 1118, 1124, 1128, 1133, 1139, 1175, 1198, 1201, 1210, 1213, 1214, 1233, 1234, 1241, 1245, 1246, 1259, 1261, 1270, 1280, 1287, 1292, 1297, 1320, 1325, 1326, 1330, 1343, 1344, 1345, 1359, 1360, 1362, 1363, 1366, 1376, 1382, 1399, 1400, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1435, 1437, 1445, 1447, 1461, 1512, 1531, 1559, 1564, 1606, 1607, 1610, 1656, 1686, 1708, 1751, 1752, 1767, 1779, 1793, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1832, 1848, 1858, 1865, 1866, 1868, 1870, 1871, 1873, 1883, 1886, 1889, 1892, 1896, 1897, 1898, 1902, 1906, 1909, 1914, 1915, 1920, 1921, 1923, 1925, 1926, 1928, 1929, 1930, 1932, 1936], "intern": [0, 3, 8, 9, 16, 20, 21, 29, 33, 39, 40, 42, 44, 48, 50, 56, 64, 69, 72, 972, 1006, 1027, 1128, 1198, 1234, 1236, 1252, 1255, 1278, 1348, 1349, 1350, 1384, 1469, 1504, 1505, 1506, 1529, 1619, 1666, 1759, 1801, 1851, 1872, 1890, 1891, 1893, 1894, 1899, 1905, 1906, 1922, 1923, 1927, 1929], "current": [0, 1, 2, 3, 5, 6, 7, 9, 14, 15, 16, 20, 23, 24, 29, 31, 33, 39, 42, 44, 46, 47, 48, 50, 52, 59, 60, 64, 65, 71, 72, 91, 153, 212, 224, 487, 497, 498, 499, 740, 742, 780, 792, 794, 816, 858, 860, 861, 864, 878, 889, 892, 893, 900, 901, 902, 907, 921, 930, 972, 973, 974, 975, 977, 982, 983, 986, 987, 989, 990, 991, 992, 995, 996, 997, 999, 1000, 1003, 1005, 1006, 1009, 1011, 1012, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1026, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1040, 1042, 1044, 1047, 1048, 1049, 1072, 1074, 1084, 1089, 1107, 1123, 1125, 1145, 1146, 1147, 1155, 1156, 1181, 1182, 1198, 1202, 1213, 1217, 1268, 1270, 1284, 1299, 1306, 1308, 1370, 1373, 1377, 1430, 1469, 1477, 1481, 1523, 1529, 1540, 1579, 1597, 1598, 1600, 1610, 1623, 1627, 1628, 1629, 1630, 1631, 1636, 1637, 1638, 1639, 1661, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1715, 1724, 1726, 1728, 1730, 1731, 1755, 1759, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1841, 1843, 1848, 1863, 1866, 1868, 1870, 1871, 1872, 1873, 1875, 1878, 1881, 1883, 1886, 1890, 1891, 1894, 1895, 1900, 1901, 1902, 1903, 1904, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1916, 1919, 1921, 1922, 1925, 1927, 1928, 1930, 1931, 1934, 1936], "outsid": [0, 5, 9, 23, 27, 39, 52, 64, 69, 683, 794, 884, 1127, 1129, 1133, 1138, 1199, 1529, 1610, 1688, 1689, 1694, 1695, 1701, 1870, 1871, 1889, 1891, 1894, 1897, 1898, 1932], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 29, 31, 33, 34, 35, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 56, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 91, 153, 199, 212, 257, 262, 337, 446, 447, 448, 449, 450, 474, 475, 496, 498, 543, 579, 580, 602, 603, 617, 679, 688, 692, 694, 695, 696, 698, 734, 759, 778, 780, 784, 786, 790, 796, 837, 839, 846, 857, 863, 873, 874, 876, 888, 891, 892, 894, 896, 902, 907, 908, 922, 940, 943, 944, 954, 963, 964, 965, 971, 974, 975, 977, 982, 1010, 1013, 1014, 1059, 1061, 1075, 1107, 1119, 1127, 1128, 1131, 1132, 1135, 1139, 1151, 1160, 1161, 1172, 1195, 1198, 1202, 1205, 1208, 1209, 1210, 1213, 1218, 1219, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1251, 1252, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1264, 1265, 1269, 1278, 1285, 1287, 1292, 1295, 1297, 1298, 1299, 1300, 1302, 1303, 1325, 1326, 1327, 1328, 1346, 1347, 1348, 1349, 1350, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1368, 1374, 1377, 1378, 1379, 1382, 1385, 1390, 1393, 1394, 1395, 1400, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1434, 1435, 1436, 1437, 1438, 1445, 1461, 1463, 1469, 1477, 1481, 1482, 1494, 1504, 1505, 1506, 1512, 1521, 1524, 1525, 1529, 1540, 1564, 1566, 1567, 1569, 1573, 1579, 1585, 1598, 1600, 1601, 1604, 1605, 1610, 1617, 1619, 1621, 1624, 1628, 1630, 1633, 1643, 1644, 1651, 1652, 1656, 1658, 1664, 1667, 1669, 1672, 1673, 1689, 1690, 1691, 1693, 1697, 1699, 1703, 1713, 1715, 1716, 1717, 1718, 1735, 1737, 1747, 1759, 1781, 1794, 1795, 1796, 1807, 1809, 1810, 1811, 1812, 1815, 1816, 1833, 1839, 1853, 1854, 1858, 1868, 1870, 1871, 1877, 1878, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1930, 1931, 1932, 1933], "effect": [0, 3, 7, 11, 33, 39, 40, 42, 48, 61, 69, 72, 199, 212, 602, 734, 778, 784, 1006, 1054, 1139, 1198, 1240, 1241, 1242, 1243, 1299, 1338, 1353, 1361, 1362, 1363, 1368, 1369, 1370, 1371, 1375, 1430, 1436, 1482, 1540, 1567, 1598, 1604, 1610, 1611, 1629, 1683, 1691, 1791, 1796, 1816, 1837, 1858, 1865, 1868, 1879, 1889, 1890, 1891, 1894, 1896, 1916, 1919, 1927, 1928, 1930], "custom_bwd": [0, 1890], "bwd": 0, "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 16, 20, 22, 28, 29, 31, 33, 36, 39, 40, 43, 44, 46, 48, 50, 51, 53, 56, 57, 59, 60, 64, 66, 69, 71, 72, 91, 104, 105, 106, 107, 122, 153, 157, 224, 237, 238, 239, 240, 256, 261, 262, 274, 275, 301, 313, 315, 317, 318, 319, 320, 321, 323, 325, 328, 354, 401, 402, 420, 421, 423, 424, 472, 482, 484, 513, 515, 517, 536, 543, 559, 582, 583, 584, 586, 587, 598, 599, 679, 680, 683, 686, 687, 690, 694, 695, 696, 734, 755, 763, 769, 770, 778, 783, 784, 786, 792, 794, 795, 798, 801, 818, 819, 820, 821, 824, 825, 826, 853, 858, 864, 873, 874, 875, 879, 884, 888, 890, 892, 894, 895, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 921, 922, 923, 928, 930, 936, 940, 945, 947, 957, 965, 966, 969, 975, 1005, 1014, 1015, 1028, 1041, 1050, 1051, 1054, 1062, 1063, 1076, 1085, 1086, 1088, 1090, 1092, 1093, 1094, 1099, 1101, 1102, 1103, 1104, 1105, 1114, 1119, 1125, 1127, 1128, 1129, 1130, 1134, 1135, 1137, 1138, 1140, 1142, 1146, 1147, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1168, 1183, 1188, 1189, 1190, 1191, 1194, 1195, 1196, 1198, 1199, 1201, 1204, 1205, 1213, 1216, 1218, 1219, 1222, 1226, 1227, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1247, 1250, 1252, 1254, 1255, 1257, 1261, 1262, 1267, 1268, 1269, 1270, 1273, 1278, 1284, 1286, 1287, 1290, 1295, 1297, 1298, 1300, 1303, 1315, 1318, 1320, 1324, 1325, 1326, 1327, 1330, 1331, 1334, 1338, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1377, 1384, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1416, 1417, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1444, 1458, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1472, 1473, 1475, 1477, 1478, 1479, 1481, 1482, 1501, 1502, 1504, 1505, 1506, 1511, 1512, 1521, 1522, 1526, 1529, 1531, 1540, 1541, 1542, 1553, 1554, 1555, 1564, 1565, 1566, 1567, 1569, 1572, 1579, 1592, 1593, 1598, 1600, 1601, 1603, 1605, 1608, 1609, 1610, 1615, 1617, 1618, 1619, 1620, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1636, 1637, 1643, 1646, 1647, 1650, 1652, 1656, 1657, 1661, 1662, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1705, 1709, 1712, 1716, 1718, 1719, 1731, 1733, 1735, 1736, 1737, 1742, 1743, 1744, 1751, 1754, 1764, 1767, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1789, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1816, 1817, 1827, 1831, 1834, 1837, 1840, 1841, 1842, 1843, 1845, 1848, 1849, 1850, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1872, 1878, 1880, 1881, 1883, 1886, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1906, 1907, 1909, 1911, 1912, 1913, 1915, 1916, 1919, 1920, 1921, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1935], "small": [0, 3, 7, 9, 11, 15, 17, 18, 22, 25, 29, 39, 40, 42, 48, 59, 864, 907, 908, 952, 985, 1028, 1260, 1261, 1273, 1275, 1338, 1365, 1439, 1444, 1458, 1482, 1511, 1565, 1572, 1610, 1688, 1694, 1703, 1816, 1868, 1870, 1871, 1894, 1896, 1898, 1902, 1905, 1907, 1909, 1913, 1916, 1917, 1925, 1926, 1932], "magnitud": [0, 965, 1654, 1767, 1889, 1890, 1894], "represent": [0, 3, 14, 16, 29, 33, 39, 42, 44, 57, 72, 482, 757, 825, 975, 1087, 1088, 1090, 1114, 1143, 1198, 1237, 1240, 1242, 1245, 1324, 1430, 1436, 1664, 1703, 1866, 1868, 1871, 1886, 1896, 1905, 1909, 1913, 1916, 1925, 1932, 1937], "These": [0, 1, 2, 3, 8, 11, 14, 16, 20, 23, 29, 33, 34, 39, 42, 43, 48, 65, 67, 70, 72, 793, 879, 970, 1071, 1135, 1195, 1198, 1240, 1305, 1338, 1430, 1601, 1618, 1866, 1868, 1869, 1870, 1871, 1881, 1884, 1885, 1887, 1890, 1891, 1894, 1895, 1896, 1902, 1905, 1907, 1909, 1913, 1919, 1921, 1922, 1928, 1933, 1936], "flush": [0, 1, 44, 1028, 1208, 1747, 1760, 1905, 1930], "zero": [0, 1, 2, 15, 19, 40, 42, 43, 46, 48, 61, 64, 69, 72, 153, 262, 317, 513, 515, 543, 544, 583, 584, 586, 587, 622, 678, 690, 697, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 758, 759, 763, 767, 768, 771, 772, 773, 774, 776, 779, 780, 794, 798, 818, 819, 820, 821, 824, 829, 876, 885, 886, 887, 892, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 922, 923, 943, 944, 945, 950, 965, 969, 1017, 1028, 1032, 1033, 1062, 1066, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1110, 1119, 1124, 1127, 1135, 1157, 1158, 1161, 1183, 1195, 1198, 1209, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1270, 1278, 1279, 1280, 1281, 1282, 1287, 1288, 1320, 1324, 1328, 1342, 1343, 1344, 1345, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1377, 1382, 1383, 1385, 1398, 1399, 1400, 1401, 1402, 1406, 1407, 1408, 1409, 1410, 1411, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1436, 1439, 1442, 1443, 1444, 1445, 1447, 1467, 1481, 1482, 1485, 1486, 1487, 1496, 1497, 1498, 1507, 1508, 1509, 1511, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1529, 1550, 1551, 1565, 1566, 1567, 1627, 1628, 1629, 1630, 1645, 1652, 1656, 1660, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1703, 1715, 1717, 1718, 1719, 1735, 1744, 1754, 1781, 1785, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1816, 1830, 1831, 1833, 1839, 1864, 1868, 1869, 1871, 1873, 1881, 1883, 1884, 1885, 1886, 1889, 1891, 1894, 1896, 1902, 1905, 1908, 1909, 1911, 1913, 1915, 1916, 1919, 1925, 1926, 1928, 1930, 1931, 1932, 1933], "underflow": [0, 1396, 1890], "updat": [0, 9, 11, 28, 31, 39, 40, 44, 46, 50, 59, 64, 67, 68, 72, 224, 513, 515, 759, 798, 799, 823, 1127, 1136, 1198, 1348, 1349, 1350, 1367, 1373, 1374, 1382, 1393, 1394, 1395, 1430, 1431, 1440, 1469, 1520, 1521, 1618, 1622, 1652, 1669, 1675, 1680, 1682, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1865, 1868, 1879, 1890, 1891, 1894, 1895, 1896, 1902, 1904, 1907, 1908, 1909, 1911, 1912, 1914, 1916, 1921, 1922, 1923, 1930], "lost": [0, 50, 60, 62, 1367, 1426, 1427, 1428], "To": [0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 14, 15, 16, 18, 20, 21, 25, 27, 28, 29, 33, 34, 39, 40, 42, 43, 46, 47, 48, 50, 51, 57, 58, 60, 61, 64, 69, 72, 84, 85, 337, 499, 556, 733, 893, 906, 949, 952, 973, 1018, 1038, 1059, 1061, 1071, 1099, 1101, 1105, 1116, 1198, 1199, 1201, 1202, 1208, 1209, 1243, 1265, 1270, 1298, 1338, 1347, 1370, 1396, 1426, 1427, 1428, 1430, 1483, 1484, 1502, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1654, 1697, 1705, 1716, 1755, 1763, 1817, 1865, 1868, 1870, 1871, 1875, 1883, 1884, 1885, 1887, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1907, 1909, 1912, 1913, 1914, 1915, 1916, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1931], "prevent": [0, 7, 8, 11, 15, 17, 20, 39, 40, 42, 43, 50, 64, 72, 734, 898, 974, 1052, 1053, 1195, 1297, 1325, 1328, 1368, 1436, 1461, 1548, 1585, 1586, 1601, 1610, 1713, 1792, 1795, 1815, 1841, 1843, 1851, 1883, 1890, 1891, 1894, 1895, 1898, 1902, 1913, 1915, 1923, 1925, 1926], "multipli": [0, 16, 42, 315, 323, 424, 513, 684, 685, 686, 687, 688, 689, 690, 759, 778, 784, 785, 786, 920, 932, 1041, 1054, 1071, 1151, 1162, 1221, 1233, 1234, 1238, 1251, 1253, 1255, 1261, 1263, 1292, 1302, 1315, 1319, 1322, 1346, 1358, 1359, 1360, 1363, 1382, 1400, 1482, 1483, 1484, 1540, 1598, 1599, 1600, 1622, 1688, 1694, 1696, 1703, 1787, 1790, 1793, 1794, 1808, 1812, 1813, 1816, 1837, 1869, 1884, 1894, 1899, 1902, 1905, 1911, 1925, 1926], "factor": [0, 3, 16, 40, 48, 72, 688, 689, 690, 798, 818, 920, 943, 944, 945, 1240, 1241, 1242, 1245, 1247, 1287, 1288, 1289, 1368, 1391, 1418, 1442, 1443, 1570, 1571, 1579, 1683, 1684, 1685, 1687, 1688, 1690, 1692, 1693, 1694, 1695, 1696, 1699, 1700, 1701, 1715, 1773, 1794, 1816, 1889, 1890, 1916, 1925], "flow": [0, 11, 12, 14, 19, 20, 25, 949, 1210, 1213, 1494, 1529, 1610, 1868, 1889, 1891, 1894, 1896, 1907, 1909, 1923], "through": [0, 5, 7, 9, 11, 12, 14, 15, 16, 17, 20, 26, 28, 29, 34, 39, 42, 44, 48, 52, 64, 69, 71, 72, 496, 791, 839, 853, 860, 861, 898, 907, 908, 979, 1017, 1098, 1131, 1139, 1196, 1199, 1201, 1213, 1214, 1216, 1233, 1234, 1255, 1261, 1278, 1437, 1474, 1475, 1476, 1477, 1531, 1601, 1610, 1622, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1715, 1858, 1865, 1866, 1870, 1871, 1875, 1877, 1881, 1883, 1884, 1885, 1891, 1894, 1896, 1898, 1899, 1901, 1902, 1908, 1909, 1913, 1914, 1916, 1919, 1921, 1922, 1923, 1925, 1929, 1933, 1935, 1937], "word": [0, 1, 8, 42, 59, 60, 67, 71, 72, 936, 1338, 1358, 1359, 1360, 1373, 1374, 1473, 1520, 1521, 1540, 1598, 1610, 1617, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1870, 1891, 1898, 1913, 1922], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 39, 42, 43, 44, 46, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 72, 86, 91, 156, 157, 224, 225, 315, 317, 323, 337, 400, 404, 449, 459, 472, 487, 488, 503, 513, 515, 517, 520, 543, 616, 679, 688, 692, 694, 695, 696, 698, 814, 816, 840, 879, 888, 892, 900, 902, 912, 913, 921, 922, 930, 939, 940, 952, 955, 970, 977, 986, 987, 1017, 1028, 1062, 1070, 1077, 1091, 1101, 1106, 1108, 1122, 1127, 1128, 1139, 1140, 1141, 1155, 1156, 1159, 1160, 1172, 1173, 1195, 1197, 1198, 1201, 1202, 1205, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1219, 1220, 1229, 1233, 1234, 1250, 1257, 1258, 1261, 1263, 1269, 1278, 1280, 1285, 1292, 1295, 1297, 1298, 1299, 1300, 1302, 1303, 1320, 1325, 1326, 1328, 1330, 1338, 1342, 1346, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1373, 1374, 1378, 1379, 1384, 1389, 1393, 1394, 1395, 1422, 1430, 1433, 1434, 1435, 1436, 1437, 1477, 1479, 1511, 1520, 1521, 1524, 1525, 1529, 1546, 1564, 1566, 1569, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1615, 1617, 1619, 1622, 1646, 1650, 1655, 1657, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1713, 1739, 1740, 1754, 1767, 1790, 1793, 1797, 1798, 1799, 1800, 1802, 1803, 1810, 1811, 1812, 1815, 1816, 1827, 1831, 1837, 1839, 1851, 1853, 1854, 1856, 1858, 1860, 1865, 1868, 1869, 1870, 1871, 1873, 1875, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1917, 1920, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1936], "larger": [0, 9, 20, 22, 24, 25, 28, 42, 48, 72, 256, 499, 908, 923, 1028, 1128, 1252, 1255, 1338, 1367, 1373, 1374, 1422, 1479, 1482, 1520, 1521, 1891, 1894, 1898, 1899, 1901, 1905, 1907, 1925, 1930], "thei": [0, 1, 3, 5, 7, 9, 11, 14, 15, 16, 17, 18, 19, 23, 27, 29, 31, 35, 36, 39, 42, 44, 48, 49, 59, 64, 67, 68, 71, 72, 86, 323, 337, 338, 685, 688, 689, 696, 799, 814, 815, 816, 823, 840, 853, 858, 889, 898, 908, 920, 952, 1017, 1075, 1122, 1127, 1137, 1173, 1187, 1188, 1195, 1198, 1205, 1210, 1219, 1233, 1234, 1240, 1261, 1269, 1291, 1295, 1298, 1300, 1303, 1320, 1343, 1344, 1345, 1361, 1362, 1363, 1377, 1415, 1423, 1424, 1425, 1430, 1436, 1446, 1458, 1481, 1529, 1531, 1601, 1610, 1611, 1614, 1617, 1619, 1620, 1643, 1646, 1655, 1693, 1696, 1755, 1761, 1812, 1816, 1851, 1852, 1865, 1868, 1870, 1871, 1873, 1875, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1887, 1889, 1890, 1891, 1894, 1895, 1896, 1897, 1900, 1902, 1904, 1905, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1921, 1925, 1930, 1932, 1933, 1934, 1936], "don": [0, 1, 4, 7, 9, 14, 15, 16, 17, 20, 21, 31, 42, 58, 65, 67, 69, 72, 153, 784, 794, 892, 893, 906, 1045, 1127, 1213, 1291, 1393, 1394, 1395, 1482, 1598, 1601, 1610, 1658, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1758, 1865, 1868, 1872, 1883, 1884, 1885, 1891, 1894, 1896, 1898, 1902, 1904, 1908, 1909, 1912, 1913, 1914, 1916, 1921, 1922, 1925, 1936], "t": [0, 1, 2, 3, 4, 7, 8, 9, 14, 15, 17, 19, 20, 21, 25, 29, 31, 39, 40, 42, 44, 48, 49, 52, 56, 58, 59, 65, 67, 69, 70, 71, 72, 153, 315, 317, 323, 459, 536, 570, 686, 687, 696, 759, 780, 784, 794, 822, 825, 876, 877, 878, 879, 888, 890, 892, 893, 896, 898, 901, 906, 943, 944, 945, 950, 970, 972, 975, 996, 1014, 1015, 1045, 1069, 1087, 1092, 1093, 1094, 1095, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1110, 1122, 1123, 1124, 1127, 1128, 1129, 1139, 1140, 1151, 1161, 1195, 1196, 1198, 1199, 1201, 1204, 1205, 1209, 1211, 1213, 1216, 1218, 1227, 1228, 1234, 1236, 1237, 1240, 1247, 1255, 1256, 1261, 1269, 1270, 1278, 1291, 1304, 1305, 1318, 1327, 1347, 1351, 1353, 1358, 1359, 1360, 1367, 1373, 1374, 1382, 1391, 1393, 1394, 1395, 1396, 1400, 1417, 1430, 1445, 1461, 1463, 1473, 1481, 1482, 1500, 1504, 1505, 1506, 1513, 1520, 1521, 1541, 1546, 1565, 1585, 1598, 1601, 1604, 1605, 1610, 1611, 1617, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1644, 1646, 1647, 1658, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1689, 1699, 1705, 1711, 1715, 1732, 1757, 1758, 1767, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1790, 1793, 1812, 1816, 1817, 1827, 1830, 1836, 1839, 1858, 1859, 1865, 1867, 1868, 1869, 1870, 1872, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1901, 1902, 1904, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1936], "grad": [0, 1, 5, 23, 27, 42, 48, 65, 68, 69, 72, 153, 337, 459, 488, 495, 496, 503, 504, 580, 879, 888, 892, 893, 899, 900, 902, 907, 908, 912, 913, 1017, 1075, 1127, 1128, 1130, 1134, 1138, 1139, 1173, 1181, 1198, 1270, 1430, 1610, 1655, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1761, 1793, 1851, 1858, 1866, 1868, 1869, 1884, 1885, 1886, 1890, 1895, 1896, 1897, 1899, 1902, 1904, 1911, 1921, 1922, 1925, 1931], "attribut": [0, 1, 20, 28, 31, 39, 40, 42, 43, 49, 72, 153, 292, 495, 496, 726, 737, 738, 739, 740, 741, 742, 744, 745, 755, 763, 790, 801, 814, 815, 816, 837, 838, 839, 857, 858, 888, 892, 894, 898, 1122, 1197, 1198, 1199, 1201, 1202, 1208, 1209, 1270, 1367, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1430, 1473, 1610, 1611, 1621, 1622, 1623, 1644, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1866, 1869, 1872, 1886, 1890, 1891, 1894, 1896, 1897, 1902, 1907, 1909, 1913, 1916, 1921, 1931, 1932, 1936, 1937], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 11, 19, 20, 27, 29, 33, 42, 46, 48, 50, 52, 56, 58, 59, 61, 64, 67, 68, 69, 71, 72, 153, 256, 337, 436, 459, 582, 616, 679, 694, 695, 747, 756, 759, 789, 793, 860, 879, 919, 932, 1008, 1012, 1062, 1071, 1075, 1124, 1127, 1139, 1172, 1197, 1199, 1202, 1208, 1213, 1223, 1228, 1240, 1241, 1245, 1246, 1253, 1259, 1261, 1267, 1270, 1287, 1291, 1292, 1298, 1302, 1306, 1322, 1348, 1349, 1350, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1370, 1373, 1374, 1377, 1382, 1383, 1393, 1394, 1395, 1400, 1401, 1403, 1404, 1405, 1412, 1413, 1414, 1424, 1425, 1431, 1437, 1440, 1445, 1447, 1469, 1481, 1512, 1564, 1610, 1611, 1619, 1622, 1626, 1652, 1655, 1657, 1662, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1700, 1704, 1709, 1751, 1754, 1755, 1759, 1761, 1785, 1790, 1816, 1836, 1839, 1851, 1858, 1864, 1865, 1866, 1868, 1870, 1871, 1873, 1879, 1883, 1884, 1885, 1886, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1902, 1904, 1905, 1906, 1909, 1913, 1914, 1916, 1921, 1923, 1925, 1928, 1932], "interfer": [0, 16, 1881, 1894, 1909], "learn": [0, 7, 8, 12, 14, 20, 34, 48, 58, 72, 1351, 1364, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1390, 1415, 1417, 1438, 1459, 1478, 1479, 1582, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1866, 1875, 1887, 1889, 1900, 1902, 1903, 1909, 1913, 1916, 1921, 1923], "rate": [0, 8, 24, 40, 48, 1369, 1370, 1371, 1375, 1476, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1708, 1866, 1901, 1930], "fp16": [0, 2, 728, 1610, 1916, 1917], "everi": [0, 1, 2, 8, 9, 14, 15, 16, 18, 20, 24, 25, 28, 29, 39, 40, 42, 44, 46, 48, 50, 64, 69, 72, 482, 488, 609, 679, 780, 818, 896, 912, 913, 952, 1054, 1071, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1128, 1151, 1160, 1198, 1229, 1243, 1253, 1256, 1287, 1342, 1368, 1369, 1370, 1371, 1375, 1423, 1430, 1463, 1465, 1469, 1515, 1516, 1517, 1522, 1553, 1554, 1555, 1569, 1586, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1618, 1651, 1654, 1655, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1755, 1816, 1849, 1871, 1877, 1881, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1903, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1927, 1928, 1930, 1932], "most": [0, 1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 34, 39, 42, 44, 46, 48, 49, 50, 51, 58, 59, 61, 62, 69, 70, 71, 72, 499, 792, 896, 897, 898, 903, 907, 916, 952, 1040, 1054, 1071, 1128, 1173, 1183, 1196, 1199, 1303, 1338, 1477, 1529, 1579, 1610, 1622, 1680, 1791, 1837, 1865, 1868, 1870, 1871, 1873, 1878, 1883, 1885, 1886, 1891, 1894, 1896, 1904, 1905, 1906, 1912, 1915, 1916, 1922, 1923, 1925, 1928, 1930, 1932], "bf16": [0, 2], "pretrain": [0, 19, 861, 1373, 1374, 1865, 1891, 1909], "cannot": [0, 3, 8, 9, 11, 19, 39, 40, 42, 48, 49, 52, 59, 64, 65, 69, 70, 71, 72, 88, 89, 225, 256, 523, 544, 879, 1092, 1094, 1102, 1103, 1104, 1110, 1127, 1195, 1203, 1320, 1353, 1373, 1482, 1513, 1579, 1610, 1666, 1817, 1865, 1868, 1869, 1870, 1871, 1872, 1873, 1881, 1885, 1886, 1891, 1895, 1896, 1907, 1908, 1909, 1916, 1921, 1923, 1925, 1927, 1928, 1936], "numer": [0, 16, 29, 39, 48, 65, 70, 686, 792, 907, 908, 936, 1202, 1213, 1214, 1229, 1233, 1234, 1238, 1243, 1251, 1252, 1255, 1258, 1261, 1263, 1285, 1287, 1347, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1463, 1466, 1469, 1520, 1541, 1548, 1579, 1585, 1587, 1618, 1651, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1719, 1751, 1816, 1866, 1871, 1872, 1876, 1879, 1894, 1896, 1897, 1909, 1916, 1926, 1931, 1937], "max": [0, 15, 18, 21, 22, 39, 42, 50, 52, 58, 59, 61, 64, 72, 119, 188, 189, 190, 191, 302, 694, 695, 696, 757, 769, 770, 779, 781, 782, 801, 818, 819, 820, 821, 824, 873, 923, 940, 947, 948, 952, 1050, 1085, 1086, 1158, 1209, 1229, 1243, 1250, 1252, 1254, 1255, 1267, 1339, 1340, 1341, 1352, 1353, 1364, 1365, 1374, 1378, 1379, 1384, 1389, 1390, 1398, 1399, 1416, 1418, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1433, 1434, 1435, 1438, 1449, 1450, 1457, 1478, 1479, 1481, 1491, 1492, 1493, 1503, 1511, 1521, 1524, 1525, 1540, 1544, 1553, 1554, 1555, 1565, 1569, 1573, 1575, 1580, 1598, 1614, 1646, 1672, 1673, 1674, 1684, 1689, 1690, 1699, 1720, 1721, 1793, 1822, 1823, 1851, 1867, 1868, 1869, 1878, 1881, 1886, 1892, 1894, 1898, 1911, 1916, 1919, 1937], "65504": 0, "overflow": [0, 1052, 1053, 1297, 1325, 1328, 1548, 1585, 1586, 1713, 1744, 1792, 1795, 1815, 1841, 1843, 1894, 1905, 1926], "instead": [0, 1, 3, 5, 8, 9, 11, 12, 14, 15, 16, 17, 20, 23, 28, 29, 33, 39, 40, 42, 44, 47, 48, 50, 56, 59, 60, 64, 67, 68, 69, 72, 224, 408, 459, 499, 513, 747, 756, 767, 768, 792, 816, 825, 879, 889, 900, 901, 902, 903, 906, 907, 936, 942, 1106, 1108, 1132, 1133, 1134, 1135, 1138, 1139, 1144, 1185, 1196, 1198, 1199, 1203, 1227, 1228, 1234, 1236, 1252, 1255, 1261, 1267, 1269, 1298, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1364, 1366, 1367, 1369, 1370, 1371, 1375, 1382, 1390, 1396, 1397, 1398, 1399, 1400, 1421, 1422, 1423, 1424, 1425, 1430, 1433, 1434, 1435, 1437, 1444, 1445, 1457, 1461, 1462, 1463, 1469, 1478, 1496, 1497, 1498, 1501, 1502, 1512, 1522, 1529, 1541, 1553, 1554, 1555, 1564, 1572, 1585, 1610, 1652, 1654, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1697, 1720, 1721, 1731, 1751, 1755, 1797, 1812, 1816, 1851, 1858, 1868, 1870, 1871, 1878, 1885, 1889, 1890, 1891, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1906, 1907, 1908, 1909, 1912, 1913, 1915, 1916, 1919, 1922, 1925, 1932, 1933, 1935, 1936], "case": [0, 1, 3, 4, 8, 9, 14, 15, 16, 17, 20, 23, 25, 28, 29, 31, 33, 34, 39, 40, 42, 44, 46, 47, 48, 50, 51, 52, 59, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 86, 153, 157, 199, 354, 496, 499, 679, 759, 783, 790, 793, 819, 820, 822, 825, 857, 864, 892, 900, 902, 906, 921, 923, 928, 965, 971, 996, 1018, 1019, 1038, 1039, 1040, 1071, 1092, 1094, 1102, 1103, 1104, 1119, 1129, 1133, 1138, 1157, 1183, 1196, 1199, 1207, 1210, 1211, 1213, 1227, 1229, 1233, 1234, 1238, 1243, 1244, 1245, 1247, 1253, 1256, 1261, 1263, 1267, 1269, 1270, 1275, 1278, 1287, 1298, 1320, 1338, 1343, 1344, 1345, 1346, 1347, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1369, 1370, 1371, 1372, 1374, 1375, 1377, 1386, 1387, 1388, 1389, 1390, 1391, 1397, 1398, 1399, 1416, 1421, 1423, 1424, 1425, 1436, 1437, 1438, 1448, 1461, 1467, 1472, 1477, 1479, 1481, 1494, 1512, 1521, 1529, 1533, 1534, 1564, 1566, 1573, 1610, 1612, 1613, 1617, 1619, 1622, 1623, 1656, 1657, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1697, 1735, 1738, 1751, 1753, 1767, 1770, 1816, 1817, 1847, 1851, 1861, 1865, 1871, 1876, 1883, 1884, 1885, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1907, 1909, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1936, 1937], "decreas": [0, 48, 1028, 1243, 1369, 1370, 1371, 1375, 1443, 1644, 1645, 1684, 1691, 1699, 1877, 1879, 1904, 1906, 1925, 1928], "attempt": [0, 1, 8, 14, 15, 16, 18, 29, 33, 42, 59, 60, 69, 946, 952, 955, 966, 1202, 1208, 1287, 1579, 1612, 1613, 1672, 1673, 1851, 1868, 1871, 1884, 1885, 1890, 1894, 1896, 1908, 1912, 1913, 1921], "bring": [0, 22, 24, 65, 72, 1092, 1494, 1529, 1914], "number": [0, 1, 2, 3, 4, 5, 7, 11, 14, 15, 16, 19, 24, 29, 33, 39, 40, 42, 46, 47, 48, 50, 57, 58, 59, 62, 64, 65, 67, 70, 72, 91, 157, 176, 221, 235, 256, 315, 354, 379, 400, 404, 436, 447, 472, 474, 475, 482, 493, 497, 499, 513, 515, 517, 542, 544, 545, 557, 582, 583, 584, 586, 587, 588, 607, 616, 684, 685, 686, 687, 688, 689, 690, 697, 757, 759, 767, 768, 771, 772, 773, 780, 818, 864, 876, 889, 907, 920, 922, 923, 928, 932, 934, 938, 946, 947, 951, 965, 969, 970, 977, 979, 985, 994, 1003, 1004, 1015, 1017, 1018, 1019, 1028, 1038, 1039, 1042, 1043, 1063, 1066, 1068, 1071, 1072, 1076, 1084, 1114, 1116, 1119, 1124, 1126, 1140, 1142, 1148, 1149, 1150, 1154, 1158, 1159, 1160, 1172, 1174, 1195, 1196, 1198, 1211, 1218, 1221, 1222, 1229, 1243, 1252, 1261, 1265, 1270, 1275, 1286, 1290, 1298, 1309, 1310, 1314, 1316, 1319, 1320, 1324, 1328, 1331, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1351, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1400, 1401, 1406, 1407, 1408, 1409, 1410, 1411, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1444, 1445, 1447, 1448, 1449, 1450, 1457, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1496, 1497, 1498, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1513, 1520, 1521, 1524, 1525, 1530, 1540, 1541, 1543, 1546, 1553, 1554, 1555, 1564, 1566, 1572, 1573, 1579, 1601, 1610, 1618, 1622, 1627, 1628, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1643, 1644, 1645, 1647, 1651, 1656, 1657, 1658, 1660, 1661, 1667, 1675, 1688, 1689, 1690, 1691, 1694, 1695, 1697, 1698, 1699, 1705, 1708, 1712, 1722, 1724, 1725, 1726, 1728, 1729, 1730, 1735, 1737, 1738, 1741, 1742, 1743, 1744, 1752, 1756, 1760, 1762, 1763, 1764, 1765, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1790, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1808, 1809, 1810, 1811, 1812, 1813, 1817, 1831, 1832, 1833, 1841, 1843, 1848, 1849, 1852, 1853, 1854, 1855, 1856, 1857, 1863, 1866, 1869, 1870, 1871, 1872, 1873, 1878, 1881, 1883, 1886, 1889, 1892, 1894, 1896, 1899, 1902, 1904, 1905, 1907, 1909, 1912, 1913, 1914, 1915, 1917, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1937], "expect": [0, 1, 3, 5, 7, 9, 12, 15, 16, 22, 23, 29, 39, 40, 42, 44, 46, 50, 57, 59, 61, 64, 69, 70, 72, 679, 696, 759, 853, 900, 901, 902, 903, 904, 905, 1017, 1092, 1094, 1111, 1112, 1113, 1132, 1133, 1172, 1195, 1198, 1213, 1214, 1242, 1263, 1264, 1298, 1349, 1350, 1366, 1382, 1383, 1384, 1385, 1394, 1395, 1396, 1400, 1401, 1402, 1412, 1413, 1414, 1430, 1436, 1437, 1445, 1447, 1463, 1469, 1473, 1475, 1477, 1482, 1520, 1526, 1540, 1564, 1572, 1573, 1585, 1598, 1599, 1600, 1601, 1610, 1644, 1700, 1756, 1825, 1856, 1865, 1866, 1873, 1891, 1894, 1895, 1898, 1899, 1902, 1909, 1912, 1913, 1916, 1917, 1918, 1925, 1930, 1932], "alwai": [0, 5, 7, 11, 14, 15, 18, 33, 35, 39, 40, 42, 57, 61, 64, 68, 72, 342, 449, 459, 793, 879, 897, 900, 906, 921, 930, 940, 946, 952, 1017, 1028, 1058, 1066, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1102, 1103, 1104, 1105, 1107, 1110, 1114, 1155, 1156, 1198, 1208, 1213, 1228, 1233, 1234, 1235, 1236, 1238, 1239, 1251, 1254, 1255, 1256, 1257, 1261, 1263, 1326, 1346, 1348, 1349, 1350, 1367, 1393, 1394, 1395, 1403, 1404, 1405, 1412, 1413, 1414, 1430, 1466, 1469, 1601, 1610, 1643, 1739, 1740, 1766, 1812, 1816, 1848, 1851, 1871, 1872, 1883, 1886, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1901, 1902, 1913, 1914, 1920, 1921, 1923, 1925, 1928, 1931, 1932], "abov": [0, 1, 3, 12, 13, 14, 16, 17, 19, 20, 21, 22, 29, 34, 42, 48, 52, 59, 61, 64, 65, 70, 72, 84, 616, 679, 791, 792, 879, 921, 930, 945, 1028, 1054, 1058, 1059, 1060, 1061, 1062, 1071, 1143, 1155, 1156, 1198, 1199, 1218, 1229, 1233, 1234, 1252, 1254, 1255, 1258, 1261, 1264, 1267, 1270, 1346, 1377, 1430, 1458, 1466, 1481, 1579, 1601, 1658, 1691, 1715, 1726, 1727, 1759, 1764, 1777, 1796, 1837, 1840, 1841, 1842, 1843, 1865, 1868, 1870, 1871, 1878, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1902, 1904, 1906, 1907, 1909, 1913, 1916, 1921, 1922, 1923, 1925, 1926, 1932], "our": [0, 3, 7, 8, 11, 14, 15, 16, 19, 20, 21, 22, 28, 29, 42, 55, 58, 59, 60, 62, 68, 69, 70, 72, 896, 1091, 1128, 1346, 1891, 1896, 1899, 1904, 1909, 1912, 1916, 1922, 1925], "NOT": [0, 39, 42, 50, 59, 60, 61, 72, 926, 1280, 1370, 1610, 1611, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1655, 1664, 1666, 1672, 1673, 1686, 1891, 1923, 1925], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 16, 17, 19, 21, 22, 23, 26, 28, 29, 33, 34, 39, 40, 42, 44, 45, 47, 48, 50, 51, 56, 59, 60, 61, 62, 64, 68, 69, 72, 142, 225, 496, 778, 784, 860, 861, 892, 943, 944, 945, 974, 975, 977, 1059, 1075, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1111, 1112, 1113, 1173, 1198, 1202, 1207, 1208, 1227, 1228, 1240, 1241, 1242, 1270, 1346, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1391, 1430, 1440, 1477, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1529, 1531, 1540, 1579, 1598, 1610, 1617, 1633, 1650, 1655, 1693, 1756, 1789, 1798, 1799, 1800, 1802, 1803, 1834, 1851, 1865, 1868, 1870, 1871, 1875, 1881, 1883, 1884, 1886, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1904, 1906, 1908, 1909, 1910, 1912, 1913, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1928, 1930, 1934, 1936], "guarante": [0, 1, 5, 9, 14, 18, 39, 42, 44, 46, 48, 59, 61, 69, 71, 72, 875, 952, 1198, 1207, 1367, 1430, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1789, 1851, 1891, 1893, 1894, 1905, 1906, 1913, 1915, 1917, 1921, 1923], "encount": [0, 5, 12, 16, 20, 23, 25, 29, 42, 69, 71, 72, 679, 1610, 1868, 1871, 1873, 1877, 1893, 1905, 1913, 1916], "nan": [0, 1, 48, 428, 429, 683, 685, 688, 689, 690, 693, 696, 697, 880, 884, 920, 936, 1117, 1118, 1119, 1158, 1187, 1188, 1190, 1191, 1237, 1244, 1257, 1260, 1273, 1278, 1296, 1297, 1301, 1324, 1325, 1326, 1327, 1328, 1529, 1614, 1709, 1746, 1751, 1805, 1839, 1869, 1878, 1890, 1891, 1897, 1905, 1926, 1932], "verifi": [0, 19, 27, 42, 72, 907, 1054, 1667, 1668, 1686, 1837, 1865, 1868, 1880, 1896, 1899, 1909, 1914], "compat": [0, 1, 33, 39, 44, 48, 50, 64, 68, 69, 72, 497, 498, 602, 616, 679, 814, 815, 816, 889, 933, 963, 964, 1198, 1203, 1215, 1228, 1239, 1252, 1255, 1430, 1436, 1474, 1475, 1476, 1477, 1540, 1654, 1664, 1666, 1738, 1865, 1866, 1870, 1871, 1877, 1883, 1884, 1890, 1896, 1907, 1913, 1915, 1916, 1919, 1921, 1925, 1927], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 12, 13, 14, 16, 19, 20, 21, 22, 25, 28, 31, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 57, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 91, 157, 159, 176, 187, 194, 211, 227, 228, 229, 230, 231, 256, 262, 265, 291, 300, 302, 313, 315, 317, 319, 323, 354, 403, 404, 428, 429, 446, 449, 450, 455, 482, 484, 488, 496, 507, 508, 513, 515, 517, 520, 537, 542, 543, 546, 555, 557, 559, 577, 579, 580, 582, 583, 584, 586, 587, 588, 594, 595, 596, 597, 604, 606, 607, 616, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 711, 712, 713, 714, 715, 716, 717, 718, 722, 723, 724, 725, 726, 729, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 750, 751, 752, 754, 755, 756, 757, 759, 767, 768, 769, 771, 772, 773, 774, 777, 779, 781, 782, 784, 793, 795, 798, 801, 816, 819, 820, 821, 824, 853, 855, 864, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 900, 901, 902, 904, 907, 908, 910, 912, 913, 916, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 936, 939, 940, 941, 942, 943, 944, 945, 946, 947, 950, 961, 962, 965, 966, 967, 968, 969, 970, 971, 977, 986, 988, 1014, 1015, 1041, 1045, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1069, 1071, 1073, 1074, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1129, 1130, 1131, 1132, 1133, 1137, 1138, 1139, 1140, 1141, 1151, 1155, 1157, 1158, 1159, 1160, 1161, 1164, 1168, 1172, 1175, 1183, 1194, 1195, 1196, 1198, 1202, 1204, 1205, 1209, 1217, 1218, 1219, 1220, 1221, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1287, 1291, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1315, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1334, 1336, 1337, 1338, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1418, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1461, 1463, 1464, 1465, 1467, 1469, 1472, 1473, 1475, 1477, 1478, 1479, 1481, 1482, 1485, 1486, 1487, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1524, 1525, 1527, 1529, 1532, 1533, 1534, 1537, 1538, 1539, 1540, 1544, 1545, 1547, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1564, 1565, 1566, 1567, 1568, 1569, 1572, 1573, 1575, 1579, 1580, 1583, 1585, 1588, 1594, 1595, 1596, 1597, 1598, 1601, 1610, 1614, 1617, 1618, 1622, 1627, 1628, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1644, 1646, 1647, 1649, 1650, 1651, 1652, 1654, 1656, 1657, 1658, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1708, 1709, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1746, 1747, 1751, 1753, 1754, 1755, 1758, 1760, 1764, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1789, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1818, 1819, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1857, 1858, 1859, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1878, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 13, 16, 17, 25, 28, 29, 31, 33, 36, 37, 39, 40, 42, 48, 57, 68, 69, 70, 71, 72, 157, 194, 211, 262, 291, 300, 315, 317, 319, 323, 403, 404, 446, 472, 499, 513, 515, 517, 536, 543, 557, 559, 583, 584, 585, 586, 587, 606, 684, 685, 689, 696, 733, 738, 739, 740, 741, 742, 744, 745, 759, 761, 772, 773, 860, 861, 864, 879, 885, 886, 887, 900, 903, 905, 920, 923, 930, 931, 932, 936, 938, 942, 945, 946, 947, 950, 965, 969, 1050, 1052, 1054, 1061, 1063, 1065, 1066, 1069, 1070, 1071, 1074, 1087, 1089, 1091, 1092, 1098, 1099, 1102, 1107, 1110, 1111, 1114, 1117, 1119, 1120, 1121, 1129, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1141, 1151, 1157, 1159, 1161, 1163, 1164, 1175, 1183, 1187, 1204, 1208, 1209, 1218, 1219, 1220, 1223, 1226, 1227, 1244, 1247, 1250, 1253, 1254, 1255, 1256, 1261, 1262, 1265, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1280, 1284, 1291, 1292, 1298, 1299, 1303, 1327, 1329, 1330, 1332, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1347, 1348, 1349, 1350, 1354, 1355, 1356, 1357, 1359, 1360, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1384, 1385, 1386, 1391, 1393, 1394, 1395, 1396, 1397, 1400, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1418, 1421, 1426, 1427, 1430, 1437, 1440, 1444, 1445, 1451, 1452, 1453, 1454, 1455, 1458, 1461, 1467, 1469, 1473, 1475, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1495, 1496, 1504, 1505, 1507, 1508, 1512, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1524, 1525, 1527, 1529, 1532, 1540, 1564, 1566, 1572, 1588, 1598, 1599, 1600, 1610, 1622, 1632, 1635, 1637, 1638, 1640, 1645, 1646, 1648, 1650, 1656, 1657, 1658, 1660, 1661, 1664, 1667, 1682, 1684, 1686, 1688, 1694, 1698, 1704, 1706, 1708, 1709, 1711, 1712, 1715, 1716, 1719, 1720, 1721, 1722, 1726, 1731, 1732, 1735, 1736, 1742, 1743, 1744, 1751, 1764, 1771, 1773, 1774, 1775, 1776, 1779, 1780, 1789, 1794, 1796, 1797, 1798, 1799, 1801, 1804, 1812, 1815, 1816, 1817, 1818, 1819, 1826, 1828, 1830, 1831, 1832, 1834, 1835, 1837, 1846, 1847, 1851, 1852, 1858, 1859, 1860, 1863, 1868, 1869, 1870, 1871, 1872, 1878, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1896, 1898, 1899, 1902, 1903, 1907, 1908, 1909, 1912, 1914, 1916, 1921, 1925, 1926, 1928, 1930, 1931, 1932], "growth_interv": 0, "2000": [0, 42, 46, 1089, 1091, 1098, 1107, 1120, 1275, 1482, 1691, 1719, 1769, 1770, 1830], "get_backoff_factor": 0, "python": [0, 1, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 29, 33, 34, 36, 39, 42, 46, 48, 49, 50, 52, 53, 56, 57, 59, 60, 64, 72, 354, 588, 623, 679, 780, 879, 900, 901, 902, 903, 904, 905, 907, 908, 938, 939, 951, 952, 954, 1008, 1014, 1015, 1017, 1066, 1071, 1089, 1091, 1119, 1124, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1174, 1196, 1198, 1199, 1201, 1202, 1203, 1208, 1209, 1213, 1269, 1431, 1432, 1440, 1441, 1579, 1610, 1709, 1731, 1735, 1755, 1756, 1791, 1858, 1865, 1875, 1877, 1882, 1883, 1885, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1901, 1904, 1907, 1908, 1913, 1916, 1920, 1921, 1922, 1923, 1928, 1931, 1932, 1936], "contain": [0, 1, 2, 3, 5, 12, 15, 20, 22, 24, 28, 29, 31, 33, 34, 39, 42, 43, 46, 47, 48, 50, 52, 53, 57, 60, 64, 71, 72, 85, 91, 153, 157, 194, 198, 211, 292, 313, 315, 317, 321, 323, 472, 484, 543, 602, 606, 685, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 759, 813, 836, 840, 876, 891, 892, 900, 901, 902, 903, 904, 905, 906, 916, 920, 921, 922, 930, 932, 936, 954, 965, 966, 970, 973, 984, 985, 986, 987, 988, 1017, 1071, 1105, 1106, 1108, 1114, 1134, 1135, 1138, 1139, 1155, 1156, 1159, 1160, 1168, 1172, 1189, 1196, 1198, 1199, 1204, 1205, 1208, 1213, 1214, 1217, 1228, 1234, 1235, 1236, 1237, 1239, 1241, 1243, 1244, 1260, 1269, 1287, 1291, 1298, 1320, 1326, 1338, 1347, 1366, 1367, 1373, 1374, 1377, 1382, 1383, 1385, 1390, 1400, 1401, 1422, 1430, 1431, 1432, 1437, 1440, 1445, 1447, 1458, 1462, 1469, 1481, 1512, 1520, 1521, 1523, 1594, 1601, 1604, 1605, 1610, 1618, 1619, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1650, 1651, 1654, 1656, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1705, 1708, 1733, 1747, 1751, 1811, 1812, 1816, 1832, 1839, 1841, 1843, 1848, 1849, 1854, 1858, 1866, 1868, 1870, 1871, 1872, 1878, 1881, 1885, 1886, 1890, 1891, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1905, 1907, 1909, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1921, 1923, 1925, 1927, 1928, 1930, 1931, 1933, 1934, 1935, 1936], "backoff": [0, 1921], "get_growth_factor": 0, "growth": [0, 8], "get_growth_interv": 0, "int": [0, 2, 3, 14, 20, 28, 36, 39, 40, 42, 44, 46, 47, 48, 50, 53, 56, 57, 59, 60, 62, 64, 72, 91, 219, 221, 235, 244, 256, 315, 317, 319, 323, 438, 445, 446, 448, 450, 458, 473, 477, 493, 497, 499, 513, 515, 517, 520, 536, 542, 544, 545, 557, 559, 565, 582, 583, 584, 586, 587, 606, 616, 679, 692, 694, 695, 696, 698, 754, 755, 774, 776, 778, 779, 784, 785, 786, 818, 873, 874, 875, 877, 891, 898, 911, 921, 923, 930, 937, 939, 946, 951, 969, 970, 971, 973, 975, 977, 979, 980, 983, 984, 985, 986, 987, 988, 990, 991, 992, 993, 994, 999, 1000, 1001, 1003, 1005, 1009, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1040, 1041, 1042, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1058, 1059, 1060, 1061, 1062, 1063, 1069, 1072, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1139, 1140, 1146, 1148, 1149, 1151, 1155, 1156, 1158, 1159, 1160, 1161, 1172, 1174, 1195, 1196, 1198, 1199, 1201, 1204, 1209, 1217, 1219, 1229, 1230, 1250, 1251, 1254, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1277, 1284, 1285, 1290, 1295, 1297, 1298, 1300, 1303, 1305, 1306, 1307, 1310, 1320, 1325, 1326, 1327, 1328, 1329, 1330, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1373, 1374, 1376, 1377, 1378, 1379, 1381, 1383, 1385, 1393, 1394, 1395, 1398, 1399, 1401, 1402, 1406, 1407, 1408, 1409, 1410, 1411, 1415, 1417, 1418, 1420, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1432, 1435, 1437, 1438, 1441, 1442, 1443, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1463, 1465, 1466, 1469, 1473, 1475, 1477, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1511, 1512, 1513, 1520, 1521, 1528, 1531, 1540, 1548, 1564, 1565, 1566, 1570, 1571, 1585, 1586, 1594, 1598, 1599, 1600, 1610, 1618, 1627, 1628, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1644, 1646, 1651, 1654, 1657, 1658, 1660, 1661, 1664, 1666, 1667, 1668, 1675, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1706, 1713, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1726, 1727, 1728, 1730, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1747, 1752, 1753, 1754, 1758, 1762, 1763, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1789, 1792, 1795, 1796, 1797, 1804, 1807, 1809, 1810, 1811, 1812, 1815, 1817, 1821, 1827, 1831, 1832, 1834, 1836, 1837, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1854, 1858, 1859, 1863, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1883, 1884, 1886, 1889, 1894, 1897, 1904, 1907, 1909, 1911, 1914, 1915, 1916, 1920, 1921, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1937], "interv": [0, 48, 61, 864, 966, 1121, 1311, 1312, 1700, 1724, 1725, 1773, 1881, 1894, 1915], "get_scal": [0, 1890], "sync": [0, 11, 15, 42, 46, 64, 71, 72, 1610, 1894, 1895, 1914], "is_en": [0, 1791, 1798, 1799, 1800, 1801, 1802, 1803], "indic": [0, 1, 2, 3, 17, 20, 29, 39, 40, 42, 43, 47, 48, 59, 85, 86, 194, 211, 224, 315, 317, 319, 320, 321, 323, 472, 513, 515, 517, 543, 571, 572, 582, 613, 694, 695, 734, 744, 745, 873, 874, 875, 876, 877, 897, 907, 908, 936, 943, 944, 957, 972, 974, 975, 977, 1011, 1050, 1051, 1074, 1129, 1130, 1132, 1133, 1134, 1138, 1139, 1140, 1151, 1172, 1196, 1198, 1203, 1211, 1214, 1215, 1219, 1228, 1239, 1241, 1252, 1255, 1269, 1277, 1285, 1287, 1289, 1295, 1298, 1300, 1303, 1320, 1326, 1330, 1338, 1339, 1340, 1341, 1366, 1373, 1374, 1378, 1379, 1424, 1425, 1426, 1427, 1428, 1433, 1435, 1436, 1491, 1492, 1493, 1512, 1520, 1521, 1524, 1525, 1541, 1556, 1557, 1558, 1566, 1579, 1594, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1636, 1637, 1656, 1657, 1695, 1697, 1716, 1751, 1789, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1826, 1827, 1831, 1834, 1840, 1841, 1842, 1843, 1848, 1849, 1851, 1858, 1861, 1867, 1868, 1869, 1871, 1875, 1884, 1885, 1896, 1904, 1907, 1909, 1911, 1921, 1925, 1929, 1930, 1932], "load_state_dict": [0, 40, 44, 46, 64, 1198, 1269, 1430, 1601, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1865, 1866, 1902, 1907, 1916], "state_dict": [0, 40, 44, 46, 64, 835, 836, 1198, 1430, 1601, 1636, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1865, 1880, 1895, 1902, 1904, 1907, 1909, 1916, 1934], "load": [0, 1, 18, 19, 22, 25, 29, 31, 33, 34, 40, 44, 46, 64, 836, 861, 915, 952, 973, 1202, 1208, 1213, 1374, 1601, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1747, 1866, 1868, 1879, 1880, 1885, 1891, 1894, 1901, 1902, 1906, 1908, 1909, 1930], "scaler": [0, 1890, 1894], "dict": [0, 3, 5, 18, 23, 28, 39, 40, 42, 43, 44, 46, 47, 48, 50, 53, 57, 61, 64, 66, 68, 72, 679, 791, 792, 793, 814, 815, 816, 835, 853, 909, 952, 1014, 1015, 1028, 1037, 1127, 1137, 1139, 1196, 1197, 1198, 1199, 1204, 1209, 1213, 1214, 1269, 1270, 1367, 1377, 1430, 1431, 1440, 1481, 1601, 1610, 1633, 1652, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1858, 1865, 1868, 1869, 1871, 1872, 1880, 1881, 1896, 1902, 1907, 1909, 1911, 1912, 1921, 1922, 1930, 1934, 1935, 1936], "object": [0, 1, 3, 5, 6, 8, 12, 13, 15, 18, 20, 23, 28, 33, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 59, 61, 64, 71, 72, 77, 91, 209, 212, 602, 792, 793, 853, 860, 879, 889, 890, 891, 916, 918, 952, 995, 1006, 1046, 1071, 1110, 1122, 1124, 1129, 1130, 1132, 1133, 1134, 1138, 1184, 1185, 1198, 1204, 1205, 1208, 1209, 1213, 1214, 1229, 1250, 1254, 1267, 1269, 1270, 1290, 1367, 1369, 1370, 1371, 1375, 1393, 1394, 1395, 1430, 1440, 1469, 1610, 1620, 1635, 1644, 1645, 1648, 1649, 1650, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1747, 1820, 1821, 1824, 1865, 1870, 1871, 1872, 1875, 1879, 1880, 1883, 1887, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1904, 1906, 1907, 1908, 1909, 1912, 1916, 1918, 1919, 1920, 1921, 1923, 1927, 1928, 1930, 1932, 1936, 1937], "unmodifi": [0, 26, 42], "iter": [0, 1, 2, 3, 7, 16, 20, 28, 29, 40, 42, 43, 44, 46, 48, 60, 62, 64, 72, 984, 985, 986, 987, 988, 1017, 1020, 1022, 1043, 1198, 1270, 1430, 1431, 1432, 1440, 1441, 1610, 1611, 1614, 1615, 1616, 1618, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1651, 1653, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1691, 1694, 1705, 1775, 1817, 1869, 1871, 1872, 1883, 1885, 1890, 1891, 1892, 1894, 1895, 1896, 1899, 1902, 1912, 1915, 1920, 1930, 1936], "set_backoff_factor": 0, "new_factor": 0, "new_scal": 0, "set_growth_factor": 0, "set_growth_interv": 0, "new_interv": 0, "It": [0, 1, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 19, 20, 22, 26, 28, 29, 35, 36, 39, 40, 42, 43, 44, 47, 48, 50, 52, 56, 57, 58, 59, 60, 61, 64, 66, 68, 69, 70, 71, 72, 86, 91, 153, 199, 474, 475, 513, 515, 517, 543, 556, 888, 889, 890, 891, 892, 896, 919, 954, 957, 959, 963, 964, 988, 993, 999, 1000, 1018, 1019, 1038, 1039, 1047, 1094, 1123, 1128, 1131, 1139, 1140, 1159, 1195, 1198, 1199, 1204, 1208, 1230, 1234, 1238, 1241, 1243, 1245, 1246, 1251, 1255, 1256, 1258, 1259, 1261, 1263, 1266, 1267, 1269, 1270, 1278, 1338, 1347, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1377, 1424, 1425, 1426, 1427, 1428, 1430, 1437, 1458, 1461, 1481, 1483, 1531, 1541, 1585, 1603, 1604, 1605, 1608, 1609, 1610, 1618, 1619, 1622, 1643, 1646, 1647, 1655, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1703, 1722, 1735, 1751, 1761, 1767, 1774, 1795, 1847, 1858, 1865, 1870, 1871, 1881, 1883, 1885, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1926, 1927, 1929, 1933], "five": [0, 1871, 1907], "entri": [0, 3, 12, 14, 20, 42, 43, 46, 48, 57, 59, 60, 317, 734, 857, 858, 916, 1014, 1015, 1061, 1112, 1113, 1172, 1198, 1218, 1373, 1374, 1430, 1436, 1520, 1521, 1606, 1607, 1628, 1629, 1637, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1795, 1868, 1871, 1872, 1878, 1886, 1891, 1895, 1896, 1899, 1902, 1919, 1925, 1930, 1934], "_growth_track": 0, "recent": [0, 1, 7, 8, 24, 29, 62, 71, 1173, 1183, 1791, 1870, 1871, 1886, 1896, 1905, 1906, 1925, 1932], "consecut": [0, 42, 609, 1645, 1687, 1837, 1848, 1849, 1885, 1909], "unskip": 0, "empti": [0, 3, 14, 15, 25, 42, 44, 50, 57, 64, 69, 72, 323, 513, 515, 536, 544, 816, 922, 923, 933, 939, 1071, 1073, 1196, 1199, 1223, 1243, 1244, 1249, 1256, 1279, 1280, 1281, 1282, 1289, 1347, 1366, 1374, 1437, 1502, 1521, 1567, 1650, 1662, 1666, 1801, 1816, 1830, 1864, 1867, 1868, 1869, 1870, 1871, 1873, 1879, 1884, 1885, 1886, 1889, 1892, 1894, 1896, 1909, 1911, 1913, 1925, 1926, 1933], "wish": [0, 1134, 1807, 1890, 1894, 1896, 1897], "checkpoint": [0, 11, 46, 60, 62, 64, 915, 1269, 1610, 1865, 1866, 1880, 1898, 1914, 1923], "kwarg": [0, 1, 5, 12, 13, 28, 29, 33, 39, 42, 43, 46, 59, 64, 72, 579, 602, 746, 759, 761, 762, 820, 821, 823, 826, 889, 956, 975, 977, 1014, 1015, 1127, 1138, 1139, 1198, 1201, 1203, 1261, 1287, 1382, 1392, 1400, 1419, 1430, 1445, 1460, 1464, 1468, 1470, 1471, 1601, 1606, 1610, 1624, 1629, 1633, 1643, 1650, 1652, 1655, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1747, 1849, 1858, 1865, 1871, 1872, 1896, 1897, 1902, 1910, 1912, 1921, 1927, 1935, 1936], "carri": [0, 68, 338, 796, 837, 838, 856, 857, 1892, 1916], "out": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 18, 19, 20, 21, 22, 25, 28, 31, 34, 36, 39, 42, 44, 47, 48, 56, 57, 60, 65, 68, 72, 314, 316, 318, 320, 401, 403, 449, 496, 512, 514, 516, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 755, 759, 763, 771, 772, 773, 778, 780, 784, 796, 835, 837, 838, 856, 857, 864, 865, 866, 867, 868, 869, 870, 871, 876, 880, 881, 882, 883, 884, 893, 894, 895, 898, 907, 920, 922, 923, 924, 925, 926, 927, 928, 929, 932, 936, 939, 941, 942, 943, 944, 945, 947, 948, 950, 952, 960, 961, 962, 964, 965, 967, 968, 971, 976, 984, 986, 988, 1015, 1016, 1028, 1029, 1041, 1045, 1050, 1051, 1052, 1053, 1055, 1058, 1063, 1064, 1066, 1067, 1068, 1070, 1071, 1072, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1128, 1129, 1131, 1132, 1134, 1139, 1140, 1141, 1142, 1143, 1144, 1152, 1153, 1154, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1192, 1193, 1198, 1209, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1330, 1331, 1332, 1333, 1334, 1335, 1339, 1340, 1341, 1343, 1344, 1345, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1368, 1369, 1370, 1371, 1373, 1375, 1378, 1379, 1382, 1383, 1398, 1399, 1400, 1415, 1417, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1442, 1443, 1445, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1473, 1474, 1475, 1476, 1477, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1500, 1504, 1505, 1506, 1507, 1508, 1509, 1515, 1516, 1517, 1522, 1525, 1529, 1540, 1546, 1565, 1567, 1598, 1610, 1627, 1628, 1629, 1630, 1656, 1657, 1658, 1659, 1661, 1662, 1686, 1703, 1704, 1708, 1709, 1710, 1712, 1715, 1716, 1722, 1723, 1724, 1726, 1728, 1730, 1731, 1734, 1735, 1736, 1740, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1767, 1768, 1769, 1781, 1782, 1783, 1784, 1789, 1793, 1794, 1805, 1806, 1808, 1809, 1810, 1811, 1813, 1814, 1816, 1827, 1828, 1829, 1832, 1834, 1836, 1839, 1840, 1842, 1844, 1845, 1851, 1853, 1854, 1855, 1858, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1868, 1869, 1871, 1878, 1881, 1883, 1885, 1886, 1891, 1892, 1894, 1895, 1896, 1897, 1902, 1904, 1909, 1912, 1913, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1935, 1936], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 25, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 46, 47, 48, 50, 56, 57, 58, 59, 60, 64, 66, 68, 69, 72, 84, 85, 86, 488, 616, 679, 759, 778, 784, 791, 792, 793, 799, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 853, 860, 861, 888, 889, 890, 894, 912, 913, 936, 941, 1014, 1028, 1071, 1089, 1091, 1115, 1124, 1137, 1151, 1198, 1199, 1207, 1211, 1218, 1229, 1240, 1250, 1253, 1254, 1267, 1270, 1289, 1292, 1338, 1347, 1353, 1366, 1374, 1377, 1382, 1400, 1430, 1445, 1461, 1477, 1481, 1548, 1579, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1617, 1657, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1694, 1697, 1705, 1716, 1744, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1791, 1792, 1793, 1794, 1801, 1812, 1837, 1845, 1851, 1865, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1878, 1879, 1880, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1931, 1932, 1936, 1937], "two": [0, 1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 19, 25, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 48, 50, 56, 57, 59, 60, 64, 68, 69, 72, 86, 582, 583, 584, 586, 587, 606, 616, 679, 691, 693, 759, 792, 886, 889, 902, 907, 940, 942, 981, 1020, 1022, 1050, 1051, 1059, 1068, 1071, 1077, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1117, 1118, 1127, 1137, 1159, 1161, 1187, 1196, 1198, 1208, 1211, 1218, 1221, 1223, 1228, 1230, 1233, 1234, 1239, 1240, 1245, 1250, 1253, 1254, 1256, 1257, 1259, 1261, 1266, 1269, 1292, 1295, 1298, 1300, 1303, 1327, 1344, 1346, 1347, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1377, 1382, 1390, 1391, 1397, 1399, 1400, 1421, 1422, 1424, 1430, 1433, 1434, 1435, 1437, 1438, 1444, 1445, 1461, 1462, 1477, 1478, 1479, 1481, 1501, 1502, 1512, 1531, 1541, 1548, 1564, 1572, 1579, 1617, 1622, 1644, 1654, 1656, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1693, 1697, 1716, 1731, 1744, 1796, 1801, 1816, 1832, 1836, 1837, 1839, 1855, 1859, 1865, 1867, 1868, 1870, 1871, 1875, 1877, 1878, 1884, 1885, 1886, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1902, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1917, 1921, 1922, 1923, 1925, 1926, 1930, 1931, 1932, 1934, 1935], "unscale_": [0, 1890], "unless": [0, 1, 4, 7, 14, 40, 42, 61, 64, 65, 72, 153, 499, 839, 857, 896, 923, 1127, 1198, 1241, 1246, 1259, 1269, 1298, 1384, 1430, 1477, 1605, 1633, 1652, 1680, 1686, 1751, 1851, 1871, 1877, 1891, 1894, 1906, 1909, 1913, 1917], "explicitli": [0, 8, 14, 33, 42, 47, 52, 64, 1008, 1059, 1061, 1071, 1160, 1238, 1251, 1255, 1263, 1305, 1540, 1598, 1697, 1812, 1868, 1870, 1871, 1872, 1877, 1894, 1896, 1899, 1901, 1907, 1909, 1913, 1914, 1920, 1921, 1925], "earlier": [0, 1, 6, 17, 1816, 1891, 1894, 1898, 1901, 1907, 1909, 1915], "part": [0, 1, 3, 4, 5, 6, 7, 9, 12, 15, 16, 17, 25, 28, 29, 33, 34, 36, 39, 40, 42, 44, 48, 59, 60, 64, 68, 69, 72, 84, 85, 840, 906, 960, 1071, 1188, 1190, 1191, 1194, 1198, 1208, 1210, 1213, 1214, 1228, 1234, 1236, 1245, 1252, 1255, 1430, 1469, 1579, 1610, 1620, 1689, 1716, 1797, 1837, 1840, 1841, 1842, 1843, 1865, 1866, 1868, 1870, 1871, 1879, 1880, 1890, 1891, 1894, 1896, 1898, 1899, 1902, 1907, 1909, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1930, 1932], "check": [0, 4, 5, 13, 14, 15, 16, 17, 20, 21, 22, 28, 29, 31, 33, 39, 42, 43, 48, 50, 59, 64, 224, 342, 499, 693, 860, 896, 898, 899, 907, 908, 954, 974, 975, 977, 981, 1010, 1028, 1185, 1195, 1198, 1213, 1214, 1227, 1228, 1233, 1234, 1236, 1239, 1241, 1246, 1252, 1255, 1259, 1261, 1262, 1287, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1430, 1601, 1610, 1619, 1622, 1635, 1645, 1667, 1668, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1865, 1866, 1870, 1871, 1872, 1884, 1885, 1890, 1894, 1896, 1897, 1898, 1901, 1902, 1903, 1906, 1909, 1912, 1913, 1914, 1915, 1921, 1925, 1930, 1932, 1936], "inf": [0, 29, 48, 64, 683, 685, 688, 689, 690, 884, 920, 936, 1187, 1188, 1190, 1192, 1193, 1229, 1244, 1250, 1254, 1257, 1267, 1278, 1324, 1420, 1463, 1473, 1579, 1614, 1628, 1637, 1657, 1744, 1751, 1890, 1891, 1897, 1905, 1926, 1932], "found": [0, 7, 12, 15, 19, 22, 24, 28, 34, 36, 59, 72, 85, 936, 971, 1050, 1051, 1198, 1202, 1219, 1295, 1298, 1300, 1303, 1326, 1342, 1352, 1375, 1430, 1457, 1751, 1865, 1868, 1871, 1886, 1890, 1896, 1899, 1902, 1904, 1909, 1913, 1915, 1916, 1921, 1930, 1936], "otherwis": [0, 1, 3, 5, 7, 9, 31, 33, 39, 42, 43, 49, 52, 64, 65, 69, 72, 91, 212, 323, 330, 334, 338, 340, 344, 345, 495, 504, 559, 579, 580, 582, 602, 616, 679, 685, 686, 687, 688, 689, 692, 694, 695, 696, 698, 734, 759, 767, 768, 783, 793, 816, 819, 820, 860, 861, 864, 891, 894, 902, 907, 920, 936, 1012, 1071, 1077, 1110, 1122, 1189, 1195, 1198, 1201, 1204, 1210, 1219, 1243, 1258, 1267, 1269, 1270, 1285, 1290, 1295, 1297, 1298, 1300, 1302, 1303, 1325, 1328, 1344, 1345, 1364, 1366, 1369, 1370, 1371, 1375, 1382, 1386, 1387, 1388, 1389, 1391, 1400, 1416, 1430, 1434, 1435, 1436, 1437, 1438, 1440, 1445, 1446, 1448, 1461, 1467, 1469, 1472, 1473, 1475, 1477, 1478, 1479, 1497, 1498, 1531, 1533, 1534, 1538, 1573, 1583, 1610, 1617, 1622, 1643, 1647, 1655, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1682, 1683, 1684, 1685, 1703, 1705, 1713, 1715, 1722, 1731, 1738, 1751, 1759, 1767, 1810, 1811, 1812, 1815, 1847, 1848, 1849, 1853, 1854, 1861, 1865, 1868, 1870, 1871, 1878, 1879, 1884, 1890, 1896, 1897, 1904, 1909, 1916, 1917, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1932, 1936], "skip": [0, 14, 17, 20, 59, 858, 954, 1071, 1124, 1227, 1228, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1785, 1868, 1890, 1891, 1894, 1895, 1896, 1902, 1912, 1915], "avoid": [0, 5, 8, 9, 14, 15, 16, 17, 18, 20, 39, 42, 48, 57, 60, 64, 72, 91, 194, 211, 449, 780, 864, 892, 933, 952, 1028, 1198, 1243, 1269, 1365, 1396, 1397, 1421, 1430, 1439, 1444, 1481, 1511, 1541, 1565, 1572, 1610, 1618, 1686, 1737, 1766, 1812, 1830, 1848, 1866, 1881, 1885, 1891, 1893, 1894, 1898, 1899, 1902, 1914, 1921, 1922, 1929, 1930, 1931], "corrupt": [0, 42, 59, 1367, 1894, 1904], "param": [0, 1, 46, 48, 51, 59, 64, 66, 68, 72, 763, 794, 1127, 1137, 1198, 1216, 1430, 1436, 1440, 1441, 1609, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1681, 1682, 1683, 1684, 1685, 1686, 1699, 1740, 1869, 1879, 1889, 1890, 1894, 1895, 1912, 1936], "appli": [0, 1, 3, 5, 8, 11, 13, 17, 28, 40, 44, 46, 47, 48, 50, 52, 59, 64, 68, 69, 70, 72, 84, 85, 122, 323, 400, 473, 513, 517, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 734, 737, 738, 739, 740, 741, 742, 757, 759, 765, 766, 767, 768, 769, 770, 771, 772, 773, 779, 780, 781, 782, 783, 809, 810, 811, 812, 839, 857, 896, 898, 899, 907, 919, 925, 928, 954, 965, 1059, 1061, 1066, 1075, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1119, 1127, 1128, 1135, 1138, 1139, 1198, 1202, 1247, 1270, 1287, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1372, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1444, 1445, 1448, 1449, 1450, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1483, 1484, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1522, 1524, 1525, 1526, 1527, 1530, 1532, 1533, 1534, 1535, 1539, 1540, 1541, 1543, 1544, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1559, 1564, 1572, 1573, 1574, 1575, 1579, 1580, 1581, 1582, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1601, 1606, 1607, 1610, 1617, 1618, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1643, 1644, 1651, 1652, 1654, 1655, 1657, 1670, 1682, 1686, 1699, 1712, 1717, 1718, 1719, 1720, 1721, 1761, 1792, 1793, 1795, 1812, 1848, 1849, 1850, 1858, 1868, 1871, 1878, 1883, 1885, 1890, 1891, 1894, 1895, 1896, 1897, 1899, 1902, 1905, 1909, 1912, 1913, 1914, 1916, 1919, 1922, 1925, 1926], "argument": [0, 1, 3, 4, 5, 8, 9, 11, 15, 22, 28, 33, 36, 39, 42, 43, 44, 46, 48, 50, 57, 60, 62, 64, 68, 69, 71, 72, 86, 91, 153, 199, 212, 315, 323, 446, 447, 448, 449, 450, 488, 513, 517, 559, 579, 580, 582, 583, 584, 586, 587, 602, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 733, 737, 738, 739, 740, 741, 742, 792, 793, 798, 818, 819, 820, 823, 824, 825, 840, 856, 857, 860, 862, 864, 879, 880, 881, 882, 883, 884, 888, 889, 890, 891, 892, 896, 897, 898, 901, 903, 904, 905, 906, 907, 912, 913, 919, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 932, 936, 939, 941, 942, 943, 944, 945, 947, 949, 950, 956, 960, 964, 965, 967, 968, 970, 971, 993, 995, 999, 1000, 1006, 1014, 1015, 1017, 1040, 1044, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1066, 1068, 1069, 1070, 1072, 1073, 1074, 1076, 1081, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1172, 1175, 1192, 1193, 1195, 1198, 1201, 1209, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1288, 1289, 1291, 1292, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1348, 1349, 1350, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1374, 1377, 1380, 1382, 1389, 1392, 1393, 1394, 1395, 1396, 1400, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1426, 1427, 1428, 1430, 1431, 1436, 1437, 1438, 1445, 1469, 1477, 1481, 1483, 1484, 1527, 1529, 1565, 1601, 1604, 1605, 1606, 1607, 1610, 1621, 1622, 1624, 1628, 1629, 1633, 1637, 1643, 1652, 1656, 1658, 1661, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1691, 1703, 1704, 1708, 1709, 1712, 1713, 1715, 1716, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1744, 1746, 1751, 1755, 1761, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1789, 1791, 1793, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1848, 1851, 1853, 1854, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1869, 1870, 1871, 1873, 1875, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1906, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1925, 1926, 1927, 1928, 1930, 1932, 1936, 1937], "keyword": [0, 1, 5, 39, 42, 43, 46, 64, 69, 72, 86, 91, 315, 323, 446, 447, 448, 449, 450, 580, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 860, 864, 879, 880, 881, 882, 883, 884, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 932, 936, 939, 941, 943, 944, 945, 947, 949, 950, 960, 964, 965, 967, 968, 970, 971, 984, 986, 988, 1014, 1015, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1063, 1066, 1068, 1070, 1072, 1073, 1074, 1076, 1081, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1140, 1141, 1142, 1143, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1172, 1175, 1192, 1193, 1198, 1201, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1288, 1289, 1291, 1292, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1318, 1319, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1367, 1389, 1392, 1430, 1604, 1605, 1610, 1622, 1624, 1629, 1633, 1652, 1656, 1658, 1661, 1662, 1664, 1703, 1704, 1708, 1709, 1712, 1713, 1715, 1716, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1744, 1746, 1751, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1789, 1791, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1808, 1809, 1810, 1811, 1813, 1815, 1816, 1827, 1828, 1829, 1830, 1834, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1851, 1853, 1854, 1855, 1860, 1861, 1863, 1864, 1865, 1871, 1872, 1885, 1886, 1896, 1905, 1909, 1912, 1921, 1925, 1926, 1930, 1933, 1936], "closur": [0, 17, 46, 954, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686], "divid": [0, 5, 40, 42, 46, 240, 582, 583, 584, 988, 1066, 1069, 1089, 1107, 1116, 1160, 1161, 1208, 1346, 1347, 1353, 1354, 1364, 1390, 1391, 1397, 1421, 1422, 1433, 1434, 1435, 1444, 1461, 1462, 1478, 1479, 1501, 1502, 1512, 1513, 1541, 1564, 1572, 1610, 1816, 1859, 1869, 1911], "need": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 20, 23, 25, 29, 33, 34, 39, 40, 42, 43, 44, 46, 47, 48, 51, 52, 57, 59, 60, 62, 64, 66, 67, 69, 72, 153, 256, 472, 495, 499, 582, 679, 733, 734, 818, 819, 820, 823, 824, 825, 840, 857, 888, 892, 896, 897, 906, 933, 934, 942, 1008, 1017, 1024, 1059, 1061, 1071, 1092, 1094, 1114, 1127, 1198, 1291, 1320, 1366, 1373, 1426, 1427, 1428, 1430, 1436, 1473, 1475, 1477, 1504, 1505, 1506, 1597, 1610, 1622, 1624, 1628, 1630, 1658, 1686, 1732, 1737, 1751, 1809, 1837, 1866, 1868, 1870, 1871, 1878, 1879, 1883, 1885, 1886, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1919, 1921, 1922, 1923, 1925, 1927, 1928, 1932, 1933, 1935, 1936], "modifi": [0, 1, 13, 14, 15, 16, 23, 26, 29, 36, 39, 40, 42, 43, 44, 46, 64, 72, 262, 488, 790, 837, 838, 839, 896, 898, 899, 912, 913, 954, 963, 964, 1151, 1195, 1198, 1201, 1202, 1217, 1373, 1430, 1473, 1475, 1477, 1520, 1521, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1614, 1615, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1689, 1697, 1779, 1868, 1871, 1884, 1890, 1894, 1896, 1897, 1902, 1907, 1913, 1914, 1916, 1921, 1926, 1929, 1931, 1935], "inspect": [0, 1, 16, 19, 22, 42, 64, 72, 915, 1198, 1209, 1890, 1896, 1901, 1913, 1917, 1928, 1936], "between": [0, 1, 2, 3, 7, 11, 16, 17, 18, 20, 25, 29, 35, 36, 40, 42, 48, 49, 59, 60, 61, 64, 71, 72, 199, 513, 582, 583, 584, 586, 587, 606, 616, 688, 689, 690, 694, 695, 759, 771, 772, 773, 801, 856, 864, 883, 892, 894, 901, 903, 904, 905, 907, 908, 940, 952, 970, 974, 981, 983, 1030, 1034, 1048, 1049, 1054, 1071, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1122, 1151, 1158, 1195, 1198, 1209, 1233, 1234, 1256, 1261, 1327, 1346, 1347, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1369, 1370, 1371, 1375, 1377, 1382, 1391, 1397, 1406, 1407, 1408, 1409, 1410, 1411, 1421, 1423, 1424, 1425, 1430, 1433, 1434, 1435, 1439, 1458, 1461, 1462, 1463, 1478, 1479, 1481, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1528, 1553, 1554, 1555, 1569, 1585, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1697, 1699, 1708, 1716, 1720, 1721, 1726, 1727, 1731, 1756, 1809, 1810, 1811, 1812, 1816, 1836, 1837, 1853, 1854, 1868, 1870, 1871, 1872, 1878, 1883, 1886, 1890, 1891, 1893, 1894, 1895, 1899, 1900, 1902, 1904, 1906, 1907, 1909, 1912, 1914, 1916, 1917, 1921, 1923, 1925, 1927, 1930, 1934], "dure": [0, 1, 5, 11, 12, 16, 19, 20, 24, 25, 28, 29, 33, 36, 40, 42, 44, 50, 51, 53, 59, 64, 71, 72, 85, 86, 337, 503, 504, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 792, 826, 888, 889, 898, 1016, 1017, 1029, 1030, 1049, 1208, 1210, 1211, 1213, 1269, 1342, 1348, 1349, 1350, 1367, 1368, 1373, 1374, 1393, 1394, 1395, 1448, 1469, 1475, 1477, 1514, 1520, 1521, 1601, 1610, 1612, 1613, 1650, 1664, 1667, 1700, 1797, 1841, 1843, 1870, 1877, 1878, 1879, 1881, 1884, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1905, 1906, 1909, 1913, 1915, 1916, 1919, 1921, 1923, 1932], "simpl": [0, 15, 19, 20, 34, 36, 40, 52, 59, 68, 70, 72, 970, 1028, 1129, 1137, 1138, 1139, 1198, 1202, 1209, 1348, 1349, 1350, 1373, 1403, 1404, 1405, 1430, 1469, 1520, 1665, 1772, 1858, 1865, 1868, 1872, 1886, 1893, 1894, 1895, 1896, 1898, 1899, 1901, 1909, 1913, 1921, 1925], "clip": [0, 64, 966, 1614, 1615, 1869, 1897, 1909, 1911], "util": [0, 7, 14, 16, 21, 25, 29, 35, 60, 64, 65, 71, 72, 731, 734, 737, 738, 739, 744, 745, 755, 759, 763, 789, 797, 988, 1122, 1198, 1382, 1400, 1430, 1445, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1619, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1643, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1691, 1697, 1820, 1821, 1822, 1823, 1824, 1866, 1871, 1881, 1890, 1892, 1893, 1894, 1896, 1898, 1899, 1901, 1902, 1904, 1909, 1912, 1913, 1914], "clip_grad_norm_": [0, 64, 1890], "max_norm": [0, 64, 744, 745, 1373, 1374, 1520, 1521, 1614, 1869, 1890], "own": [0, 7, 9, 15, 19, 42, 43, 46, 48, 51, 59, 61, 64, 72, 679, 1006, 1105, 1124, 1160, 1198, 1269, 1358, 1359, 1360, 1361, 1362, 1363, 1430, 1619, 1622, 1871, 1887, 1890, 1894, 1913, 1916, 1917, 1921, 1923, 1925], "onc": [0, 1, 7, 9, 11, 13, 16, 20, 22, 24, 34, 39, 40, 42, 43, 44, 46, 48, 49, 51, 52, 59, 64, 67, 69, 71, 72, 84, 896, 897, 898, 900, 902, 1071, 1198, 1202, 1269, 1367, 1430, 1610, 1620, 1622, 1654, 1695, 1699, 1715, 1762, 1766, 1868, 1871, 1879, 1881, 1883, 1890, 1891, 1893, 1894, 1896, 1899, 1901, 1902, 1912, 1913, 1925, 1930], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 48, 50, 52, 56, 57, 58, 59, 60, 61, 62, 64, 67, 69, 70, 71, 72, 77, 91, 153, 262, 315, 317, 323, 337, 487, 513, 515, 517, 545, 559, 606, 609, 616, 679, 685, 686, 691, 693, 697, 698, 734, 759, 790, 792, 793, 813, 839, 853, 857, 860, 873, 876, 888, 889, 890, 892, 893, 896, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 916, 917, 918, 922, 931, 933, 938, 939, 943, 946, 947, 951, 952, 954, 959, 969, 974, 975, 977, 978, 986, 987, 996, 1004, 1008, 1014, 1018, 1019, 1027, 1028, 1035, 1036, 1038, 1039, 1043, 1045, 1047, 1088, 1089, 1090, 1091, 1094, 1097, 1098, 1101, 1104, 1106, 1108, 1124, 1127, 1128, 1134, 1135, 1137, 1138, 1140, 1160, 1163, 1194, 1195, 1198, 1205, 1208, 1209, 1212, 1213, 1233, 1260, 1269, 1285, 1287, 1295, 1297, 1300, 1308, 1317, 1325, 1326, 1327, 1328, 1338, 1345, 1347, 1351, 1353, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1373, 1374, 1377, 1382, 1383, 1384, 1385, 1390, 1396, 1397, 1400, 1401, 1417, 1421, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1445, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1469, 1473, 1475, 1477, 1478, 1481, 1486, 1487, 1494, 1500, 1502, 1520, 1521, 1526, 1531, 1550, 1551, 1579, 1585, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1614, 1617, 1622, 1629, 1633, 1643, 1647, 1655, 1656, 1657, 1658, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1691, 1694, 1695, 1698, 1699, 1700, 1701, 1713, 1791, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1809, 1810, 1811, 1812, 1815, 1831, 1833, 1840, 1841, 1842, 1843, 1846, 1849, 1853, 1854, 1856, 1860, 1865, 1868, 1869, 1870, 1871, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1936], "assign": [0, 1, 7, 9, 10, 39, 42, 50, 59, 60, 69, 72, 679, 837, 838, 839, 1196, 1198, 1199, 1338, 1366, 1430, 1437, 1440, 1441, 1611, 1622, 1868, 1872, 1890, 1896, 1897, 1898, 1909, 1916, 1922, 1923, 1929, 1930], "been": [0, 1, 5, 9, 11, 12, 16, 23, 29, 31, 39, 40, 42, 43, 46, 47, 48, 50, 52, 59, 62, 64, 67, 68, 72, 86, 679, 759, 896, 975, 977, 982, 1010, 1013, 1070, 1075, 1128, 1201, 1202, 1207, 1212, 1269, 1382, 1389, 1400, 1445, 1494, 1529, 1610, 1619, 1624, 1628, 1630, 1650, 1651, 1664, 1669, 1689, 1690, 1691, 1697, 1699, 1715, 1812, 1860, 1877, 1881, 1883, 1884, 1885, 1890, 1891, 1893, 1894, 1899, 1900, 1902, 1904, 1906, 1908, 1909, 1912, 1913, 1921, 1923, 1925, 1930], "accumul": [0, 1, 2, 14, 16, 29, 64, 153, 292, 315, 320, 321, 323, 472, 685, 892, 906, 1267, 1610, 1670, 1671, 1851, 1868, 1869, 1881, 1891, 1894, 1895, 1898, 1905, 1912, 1917, 1921, 1922, 1925], "twice": [0, 15, 71, 616, 901, 1135, 1890, 1891, 1898, 1899], "given": [0, 1, 2, 3, 7, 9, 15, 16, 18, 20, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 57, 59, 61, 64, 70, 71, 72, 77, 153, 222, 315, 317, 319, 323, 328, 379, 400, 404, 473, 474, 475, 476, 477, 479, 513, 515, 517, 583, 584, 603, 606, 679, 692, 694, 695, 697, 698, 734, 759, 778, 784, 791, 792, 793, 794, 798, 799, 801, 819, 823, 836, 839, 853, 857, 864, 875, 888, 890, 892, 894, 896, 898, 900, 901, 902, 903, 904, 905, 908, 922, 923, 926, 934, 938, 939, 945, 946, 951, 952, 964, 966, 969, 970, 971, 974, 975, 977, 978, 979, 983, 991, 992, 995, 999, 1000, 1016, 1020, 1022, 1023, 1024, 1026, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1046, 1047, 1048, 1049, 1056, 1058, 1063, 1071, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1111, 1127, 1137, 1138, 1164, 1195, 1198, 1205, 1213, 1214, 1219, 1223, 1233, 1235, 1236, 1245, 1247, 1253, 1261, 1270, 1277, 1279, 1280, 1281, 1282, 1285, 1295, 1297, 1299, 1300, 1303, 1328, 1338, 1346, 1347, 1353, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1373, 1374, 1378, 1379, 1382, 1390, 1400, 1422, 1426, 1427, 1428, 1430, 1432, 1434, 1435, 1437, 1439, 1441, 1445, 1458, 1464, 1478, 1479, 1482, 1483, 1484, 1494, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1513, 1520, 1521, 1524, 1525, 1529, 1540, 1564, 1579, 1594, 1598, 1599, 1600, 1604, 1605, 1606, 1618, 1643, 1650, 1651, 1654, 1657, 1658, 1667, 1693, 1696, 1698, 1700, 1703, 1708, 1713, 1716, 1717, 1718, 1731, 1737, 1742, 1753, 1754, 1785, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1812, 1815, 1817, 1826, 1827, 1832, 1834, 1836, 1846, 1851, 1865, 1866, 1868, 1871, 1875, 1877, 1878, 1880, 1883, 1886, 1887, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1906, 1907, 1909, 1912, 1915, 1916, 1921, 1922, 1925, 1926, 1927, 1930, 1932, 1935, 1936], "trigger": [0, 7, 9, 11, 13, 16, 23, 24, 29, 42, 59, 64, 71, 86, 224, 1045, 1764, 1890, 1894, 1895, 1896, 1901, 1907, 1921], "runtimeerror": [0, 1, 33, 42, 46, 69, 72, 86, 91, 582, 696, 896, 933, 1119, 1173, 1183, 1198, 1227, 1228, 1229, 1237, 1238, 1239, 1241, 1245, 1251, 1258, 1263, 1264, 1290, 1320, 1430, 1666, 1753, 1791, 1851, 1868, 1870, 1871, 1884, 1886, 1890, 1892, 1898, 1906, 1908, 1909, 1916, 1920, 1925, 1928], "spars": [0, 1, 14, 31, 193, 194, 211, 221, 224, 325, 330, 344, 345, 436, 542, 543, 544, 545, 580, 582, 583, 584, 585, 586, 587, 613, 688, 744, 745, 907, 908, 1045, 1140, 1162, 1183, 1270, 1292, 1302, 1330, 1373, 1374, 1463, 1520, 1521, 1546, 1686, 1705, 1753, 1787, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1808, 1817, 1836, 1851, 1866, 1869, 1873, 1878, 1889, 1905, 1906, 1911, 1918, 1928, 1929, 1932], "place": [0, 3, 7, 14, 15, 20, 24, 27, 28, 31, 39, 40, 42, 44, 49, 50, 64, 67, 68, 72, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 124, 126, 128, 130, 133, 134, 136, 144, 146, 149, 150, 152, 155, 161, 163, 165, 167, 169, 171, 180, 189, 197, 201, 204, 206, 216, 218, 224, 225, 234, 238, 240, 246, 249, 251, 253, 255, 256, 259, 262, 264, 271, 273, 275, 279, 281, 285, 287, 294, 296, 298, 306, 308, 310, 312, 314, 316, 318, 320, 358, 360, 362, 364, 366, 368, 370, 373, 375, 377, 378, 385, 387, 389, 391, 393, 397, 401, 403, 421, 424, 427, 429, 440, 442, 444, 452, 457, 467, 470, 486, 488, 490, 492, 496, 499, 508, 511, 512, 514, 516, 522, 526, 528, 531, 533, 535, 548, 550, 552, 561, 563, 570, 574, 576, 592, 595, 597, 599, 601, 602, 611, 621, 757, 792, 796, 813, 837, 838, 856, 857, 896, 898, 912, 913, 934, 984, 985, 987, 988, 1008, 1071, 1122, 1127, 1128, 1136, 1198, 1242, 1260, 1320, 1342, 1352, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1387, 1388, 1389, 1416, 1430, 1447, 1448, 1449, 1450, 1457, 1472, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1533, 1536, 1545, 1576, 1578, 1593, 1597, 1601, 1606, 1607, 1610, 1614, 1615, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1652, 1686, 1742, 1744, 1748, 1749, 1750, 1796, 1832, 1866, 1868, 1870, 1871, 1878, 1885, 1890, 1894, 1896, 1901, 1912, 1913, 1914, 1921, 1922, 1927, 1929, 1931], "replac": [0, 1, 12, 14, 19, 28, 33, 39, 40, 42, 44, 58, 60, 64, 66, 67, 68, 69, 70, 72, 84, 86, 122, 422, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 746, 813, 838, 857, 943, 1017, 1071, 1127, 1128, 1203, 1205, 1215, 1287, 1288, 1320, 1324, 1461, 1472, 1601, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1652, 1654, 1715, 1812, 1816, 1839, 1868, 1869, 1871, 1879, 1894, 1896, 1897, 1899, 1901, 1904, 1908, 1909, 1911, 1913, 1916, 1932], "were": [0, 1, 2, 3, 11, 15, 16, 23, 28, 29, 36, 42, 50, 59, 62, 64, 69, 71, 72, 153, 323, 337, 472, 853, 888, 890, 892, 906, 1017, 1128, 1139, 1205, 1269, 1494, 1610, 1614, 1619, 1629, 1646, 1682, 1751, 1755, 1826, 1833, 1858, 1870, 1878, 1890, 1894, 1896, 1907, 1909, 1913], "reduc": [0, 2, 3, 11, 14, 16, 18, 23, 29, 33, 40, 42, 43, 44, 46, 64, 323, 513, 516, 517, 685, 692, 694, 695, 696, 698, 818, 819, 820, 821, 824, 826, 873, 874, 952, 985, 996, 1028, 1171, 1250, 1254, 1256, 1261, 1267, 1285, 1295, 1297, 1298, 1300, 1303, 1325, 1326, 1327, 1328, 1346, 1347, 1348, 1349, 1350, 1364, 1366, 1374, 1390, 1396, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1469, 1478, 1501, 1502, 1510, 1512, 1521, 1537, 1540, 1541, 1542, 1552, 1560, 1561, 1562, 1563, 1564, 1565, 1572, 1583, 1584, 1595, 1598, 1610, 1618, 1655, 1675, 1699, 1713, 1715, 1716, 1750, 1793, 1797, 1810, 1811, 1815, 1816, 1837, 1851, 1853, 1854, 1867, 1869, 1883, 1884, 1891, 1893, 1895, 1896, 1902, 1904, 1906, 1907, 1908, 1911, 1912, 1913, 1914, 1916, 1925, 1936], "occur": [0, 14, 16, 19, 23, 25, 29, 31, 39, 42, 52, 53, 59, 64, 69, 84, 86, 199, 317, 1031, 1071, 1195, 1201, 1211, 1241, 1353, 1469, 1513, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1870, 1881, 1885, 1890, 1891, 1894, 1898, 1905, 1909, 1915, 1921, 1923, 1929, 1932, 1936], "increas": [0, 1, 3, 7, 11, 16, 22, 40, 42, 48, 56, 64, 679, 853, 897, 936, 996, 1028, 1071, 1159, 1160, 1338, 1347, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1442, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1570, 1571, 1579, 1684, 1690, 1691, 1695, 1697, 1699, 1751, 1759, 1837, 1852, 1869, 1877, 1882, 1893, 1894, 1900, 1904, 1917, 1925], "set": [0, 1, 2, 3, 5, 8, 9, 13, 15, 16, 17, 18, 20, 21, 23, 24, 28, 29, 32, 33, 38, 39, 40, 42, 43, 44, 46, 48, 50, 52, 57, 59, 60, 61, 62, 64, 67, 68, 71, 72, 91, 153, 157, 256, 332, 446, 447, 448, 449, 450, 459, 496, 520, 579, 580, 679, 734, 740, 742, 759, 778, 784, 791, 792, 793, 796, 814, 815, 816, 819, 820, 821, 824, 825, 840, 853, 857, 858, 860, 861, 864, 877, 889, 891, 892, 899, 900, 901, 902, 903, 904, 905, 906, 919, 931, 936, 947, 951, 952, 964, 982, 997, 1006, 1018, 1019, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1072, 1074, 1127, 1136, 1145, 1160, 1178, 1179, 1198, 1202, 1205, 1207, 1209, 1211, 1213, 1214, 1233, 1234, 1237, 1243, 1250, 1252, 1254, 1255, 1267, 1268, 1269, 1270, 1284, 1287, 1290, 1310, 1314, 1315, 1316, 1338, 1342, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1375, 1382, 1385, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1417, 1421, 1422, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1440, 1444, 1445, 1461, 1462, 1469, 1478, 1479, 1494, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1513, 1514, 1515, 1516, 1517, 1522, 1529, 1533, 1540, 1541, 1550, 1551, 1564, 1566, 1572, 1579, 1598, 1610, 1612, 1613, 1618, 1623, 1652, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1715, 1722, 1724, 1728, 1730, 1731, 1739, 1740, 1751, 1752, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1781, 1796, 1810, 1811, 1830, 1840, 1841, 1842, 1843, 1851, 1853, 1854, 1865, 1867, 1868, 1870, 1871, 1872, 1875, 1877, 1879, 1880, 1881, 1883, 1886, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1908, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1930, 1932, 1934, 1935, 1936], "directli": [0, 1, 3, 7, 9, 14, 15, 16, 19, 22, 28, 29, 33, 34, 39, 40, 42, 44, 48, 49, 50, 58, 64, 68, 72, 556, 731, 746, 889, 898, 954, 1054, 1122, 1128, 1135, 1137, 1143, 1228, 1436, 1463, 1482, 1540, 1585, 1644, 1837, 1868, 1870, 1871, 1881, 1891, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1907, 1913, 1915, 1916, 1921, 1925, 1930, 1932], "fill": [0, 15, 20, 42, 157, 176, 260, 261, 262, 288, 319, 323, 379, 402, 446, 447, 448, 450, 455, 482, 607, 622, 923, 1059, 1072, 1074, 1125, 1126, 1228, 1239, 1241, 1374, 1473, 1521, 1567, 1661, 1662, 1724, 1725, 1726, 1727, 1728, 1729, 1816, 1863, 1864, 1867, 1869, 1875, 1885, 1886, 1889, 1894, 1896, 1907, 1911, 1925, 1932], "later": [0, 1, 3, 7, 20, 23, 38, 40, 42, 64, 71, 72, 744, 745, 755, 763, 915, 1006, 1269, 1400, 1423, 1424, 1425, 1445, 1459, 1553, 1554, 1555, 1582, 1610, 1816, 1868, 1891, 1893, 1894, 1895, 1902, 1907, 1922, 1923], "chang": [0, 1, 2, 3, 7, 11, 14, 15, 17, 18, 19, 20, 21, 23, 24, 29, 31, 36, 40, 42, 44, 46, 47, 48, 50, 58, 64, 65, 68, 69, 71, 72, 142, 224, 256, 323, 459, 496, 499, 517, 520, 555, 616, 679, 818, 876, 907, 908, 952, 963, 964, 971, 972, 973, 982, 993, 995, 1006, 1007, 1014, 1015, 1017, 1059, 1107, 1127, 1145, 1151, 1172, 1195, 1198, 1208, 1209, 1228, 1239, 1241, 1242, 1243, 1246, 1259, 1299, 1370, 1373, 1391, 1400, 1430, 1461, 1482, 1494, 1529, 1553, 1554, 1555, 1579, 1601, 1602, 1610, 1612, 1613, 1619, 1622, 1623, 1652, 1656, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1691, 1694, 1695, 1697, 1699, 1701, 1715, 1755, 1759, 1796, 1807, 1810, 1811, 1812, 1836, 1853, 1854, 1865, 1866, 1868, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1902, 1904, 1905, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935], "further": [0, 1, 4, 9, 14, 25, 29, 33, 40, 42, 64, 71, 1143, 1202, 1237, 1338, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1610, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1703, 1867, 1871, 1878, 1902, 1904, 1913, 1915, 1923, 1930, 1935], "floattensor": [0, 42, 323, 488, 685, 686, 687, 688, 689, 734, 907, 908, 920, 1145, 1373, 1374, 1433, 1473, 1757, 1928, 1931], "end": [0, 7, 8, 9, 11, 15, 29, 39, 40, 42, 48, 52, 56, 67, 72, 363, 364, 537, 759, 783, 796, 819, 820, 864, 921, 965, 972, 1032, 1061, 1071, 1110, 1124, 1151, 1157, 1158, 1195, 1198, 1218, 1223, 1253, 1263, 1265, 1268, 1270, 1284, 1329, 1330, 1345, 1346, 1347, 1364, 1366, 1372, 1376, 1382, 1383, 1386, 1387, 1388, 1389, 1390, 1391, 1397, 1400, 1401, 1416, 1421, 1424, 1425, 1430, 1432, 1437, 1438, 1441, 1445, 1448, 1458, 1461, 1467, 1472, 1479, 1512, 1521, 1533, 1534, 1610, 1617, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1689, 1694, 1731, 1764, 1767, 1770, 1785, 1837, 1848, 1849, 1861, 1867, 1868, 1869, 1870, 1871, 1883, 1890, 1891, 1894, 1895, 1896, 1898, 1899, 1905, 1908, 1909, 1912, 1915, 1916, 1919, 1921, 1926], "reason": [0, 3, 8, 9, 12, 14, 15, 16, 20, 22, 29, 39, 42, 44, 64, 69, 679, 840, 1092, 1094, 1198, 1213, 1214, 1233, 1234, 1261, 1298, 1346, 1370, 1430, 1531, 1579, 1606, 1607, 1622, 1747, 1868, 1870, 1871, 1877, 1891, 1895, 1897, 1905, 1907, 1909, 1921, 1928, 1936], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 33, 34, 39, 40, 42, 46, 47, 49, 50, 52, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 86, 495, 513, 515, 517, 757, 822, 825, 862, 891, 893, 898, 907, 938, 951, 952, 1017, 1050, 1051, 1052, 1053, 1122, 1124, 1133, 1140, 1160, 1173, 1185, 1195, 1201, 1209, 1213, 1243, 1261, 1270, 1277, 1287, 1289, 1298, 1320, 1330, 1342, 1352, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1387, 1388, 1389, 1416, 1448, 1449, 1450, 1457, 1472, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1531, 1533, 1548, 1601, 1610, 1658, 1666, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1703, 1709, 1851, 1865, 1866, 1868, 1869, 1871, 1873, 1875, 1883, 1884, 1885, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1915, 1916, 1917, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1932], "synchron": [0, 3, 4, 16, 35, 36, 40, 44, 46, 50, 59, 64, 71, 876, 974, 975, 977, 985, 1005, 1045, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1245, 1246, 1252, 1255, 1258, 1259, 1261, 1262, 1270, 1469, 1610, 1656, 1658, 1737, 1866, 1893, 1894, 1895, 1900, 1904, 1914, 1921], "fall": [0, 2, 7, 18, 33, 39, 794, 907, 952, 1160, 1211, 1269, 1391, 1461, 1538, 1583, 1614, 1615, 1865, 1909, 1916], "below": [0, 1, 5, 9, 12, 14, 16, 17, 19, 20, 21, 22, 23, 25, 29, 33, 39, 40, 42, 48, 50, 51, 56, 59, 60, 61, 62, 72, 679, 733, 747, 756, 794, 813, 1014, 1058, 1059, 1060, 1061, 1062, 1071, 1099, 1101, 1105, 1143, 1151, 1198, 1214, 1254, 1255, 1260, 1267, 1299, 1361, 1362, 1363, 1382, 1384, 1391, 1400, 1402, 1426, 1427, 1428, 1430, 1445, 1461, 1482, 1512, 1538, 1583, 1610, 1622, 1656, 1686, 1756, 1796, 1827, 1837, 1840, 1841, 1842, 1843, 1868, 1870, 1871, 1873, 1877, 1878, 1883, 1884, 1890, 1891, 1894, 1895, 1896, 1899, 1900, 1902, 1904, 1906, 1907, 1909, 1912, 1913, 1914, 1916, 1918, 1921, 1922, 1923, 1926, 1929, 1932], "someth": [0, 3, 7, 12, 14, 16, 19, 20, 28, 29, 66, 72, 900, 902, 1071, 1198, 1213, 1430, 1873, 1881, 1883, 1884, 1891, 1900, 1908, 1909, 1921, 1936], "wrong": [0, 19, 42, 72, 86, 896, 1196, 1199, 1895, 1904, 1908, 1909, 1912], "incompat": [0, 9, 33, 69, 933, 1195, 1892, 1913], "due": [0, 3, 4, 5, 7, 16, 20, 23, 29, 40, 42, 48, 58, 64, 69, 72, 86, 487, 879, 900, 901, 906, 966, 1210, 1233, 1234, 1261, 1287, 1370, 1384, 1473, 1482, 1540, 1579, 1650, 1664, 1686, 1817, 1868, 1886, 1894, 1895, 1899, 1900, 1906, 1909, 1916, 1917, 1921, 1923], "float64": [0, 31, 242, 447, 450, 579, 879, 960, 1114, 1123, 1145, 1180, 1198, 1227, 1233, 1234, 1236, 1238, 1254, 1430, 1579, 1672, 1673, 1709, 1717, 1756, 1757, 1760, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1856, 1861, 1902, 1905, 1925, 1927, 1928, 1931, 1932, 1937], "variant": [0, 5, 23, 28, 40, 857, 1228, 1239, 1252, 1255, 1327, 1330, 1672, 1673, 1674, 1686, 1839, 1866, 1867, 1901, 1919, 1931], "suppli": [0, 5, 7, 16, 29, 33, 34, 42, 1006, 1436, 1668, 1871, 1894, 1925], "won": [0, 8, 15, 16, 20, 25, 29, 40, 44, 59, 67, 459, 1198, 1209, 1430, 1565, 1604, 1605, 1865, 1891, 1896, 1921, 1933], "go": [0, 1, 7, 12, 14, 15, 16, 20, 21, 34, 39, 42, 56, 61, 68, 72, 499, 500, 559, 897, 912, 1270, 1343, 1344, 1345, 1423, 1424, 1425, 1870, 1871, 1878, 1883, 1884, 1885, 1891, 1893, 1894, 1896, 1897, 1901, 1902, 1904, 1908, 1909, 1913, 1928, 1930], "addmm": [0, 28, 109, 1808, 1867, 1869, 1884, 1905, 1911, 1925], "b": [0, 1, 3, 12, 13, 16, 19, 20, 28, 29, 31, 39, 42, 44, 48, 57, 72, 262, 337, 400, 616, 684, 685, 747, 756, 780, 823, 879, 896, 898, 899, 910, 912, 913, 920, 931, 932, 934, 938, 940, 942, 945, 950, 965, 971, 1014, 1015, 1063, 1066, 1070, 1071, 1116, 1117, 1118, 1119, 1124, 1128, 1141, 1163, 1175, 1195, 1201, 1208, 1209, 1217, 1218, 1220, 1229, 1230, 1238, 1242, 1243, 1247, 1250, 1251, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1263, 1264, 1267, 1270, 1279, 1281, 1282, 1288, 1296, 1301, 1303, 1319, 1347, 1351, 1373, 1374, 1381, 1417, 1500, 1502, 1521, 1528, 1546, 1617, 1644, 1645, 1646, 1647, 1648, 1649, 1657, 1664, 1683, 1685, 1716, 1722, 1735, 1738, 1754, 1766, 1785, 1793, 1798, 1799, 1800, 1802, 1803, 1807, 1812, 1813, 1815, 1822, 1823, 1832, 1839, 1840, 1842, 1855, 1860, 1867, 1868, 1869, 1870, 1871, 1884, 1885, 1886, 1889, 1890, 1892, 1894, 1896, 1898, 1899, 1900, 1905, 1907, 1915, 1916, 1922, 1923, 1925, 1926, 1929, 1930, 1935], "c": [0, 1, 3, 8, 9, 14, 15, 16, 19, 20, 26, 28, 29, 33, 39, 42, 48, 57, 67, 72, 262, 337, 499, 520, 616, 684, 820, 876, 879, 898, 931, 942, 945, 966, 1008, 1014, 1048, 1063, 1066, 1071, 1117, 1118, 1119, 1128, 1129, 1133, 1138, 1141, 1151, 1198, 1208, 1220, 1227, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1243, 1244, 1247, 1249, 1253, 1254, 1256, 1258, 1260, 1261, 1319, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1366, 1369, 1370, 1371, 1375, 1377, 1378, 1379, 1385, 1393, 1394, 1395, 1398, 1399, 1401, 1402, 1412, 1413, 1414, 1418, 1423, 1424, 1425, 1426, 1427, 1428, 1433, 1434, 1435, 1437, 1442, 1443, 1451, 1452, 1453, 1454, 1455, 1456, 1464, 1469, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1494, 1502, 1512, 1513, 1525, 1529, 1564, 1570, 1571, 1579, 1617, 1645, 1647, 1648, 1649, 1656, 1657, 1703, 1719, 1735, 1773, 1793, 1807, 1812, 1832, 1849, 1866, 1867, 1868, 1869, 1870, 1871, 1875, 1884, 1885, 1893, 1894, 1895, 1897, 1899, 1901, 1908, 1910, 1913, 1922, 1923, 1925, 1926, 1929, 1930, 1936], "addmm_": [0, 1869, 1884, 1925], "d": [0, 1, 15, 16, 19, 25, 29, 31, 39, 40, 42, 47, 48, 65, 72, 315, 323, 337, 472, 513, 515, 517, 543, 582, 616, 685, 689, 864, 879, 898, 920, 921, 923, 930, 931, 932, 936, 942, 1058, 1060, 1070, 1071, 1084, 1088, 1089, 1090, 1091, 1096, 1097, 1100, 1101, 1106, 1107, 1108, 1111, 1112, 1113, 1139, 1140, 1155, 1156, 1163, 1172, 1195, 1199, 1203, 1240, 1241, 1291, 1302, 1322, 1337, 1345, 1346, 1350, 1360, 1364, 1365, 1369, 1370, 1371, 1373, 1375, 1377, 1382, 1384, 1395, 1400, 1402, 1414, 1425, 1439, 1445, 1469, 1478, 1479, 1481, 1494, 1529, 1540, 1546, 1573, 1597, 1598, 1618, 1651, 1656, 1657, 1684, 1704, 1722, 1731, 1743, 1751, 1756, 1807, 1812, 1825, 1826, 1832, 1835, 1840, 1841, 1842, 1843, 1852, 1858, 1860, 1865, 1869, 1878, 1884, 1885, 1886, 1889, 1891, 1894, 1896, 1897, 1899, 1900, 1907, 1909, 1921, 1922, 1925, 1926, 1930, 1931], "best": [0, 1, 7, 16, 18, 22, 26, 34, 36, 39, 42, 48, 60, 64, 67, 860, 861, 916, 939, 952, 1213, 1214, 1243, 1436, 1686, 1699, 1866, 1868, 1870, 1883, 1889, 1890, 1891, 1896, 1898, 1913, 1921, 1925], "stabil": [0, 16, 29, 1229, 1285, 1347, 1348, 1349, 1350, 1384, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1466, 1469, 1526, 1587, 1618, 1651, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1719, 1897], "respect": [0, 1, 5, 8, 15, 22, 42, 43, 46, 48, 57, 59, 64, 70, 71, 72, 199, 212, 488, 579, 602, 688, 689, 690, 759, 794, 818, 840, 884, 890, 892, 906, 908, 912, 913, 947, 970, 1059, 1061, 1062, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1138, 1151, 1198, 1229, 1233, 1234, 1243, 1253, 1256, 1258, 1261, 1270, 1302, 1324, 1346, 1353, 1361, 1362, 1363, 1367, 1382, 1384, 1400, 1430, 1431, 1445, 1475, 1477, 1478, 1479, 1480, 1482, 1520, 1529, 1606, 1607, 1624, 1628, 1630, 1652, 1654, 1685, 1699, 1790, 1793, 1816, 1832, 1885, 1890, 1891, 1894, 1896, 1899, 1902, 1903, 1914, 1919, 1925, 1926, 1927, 1932], "describ": [0, 5, 7, 8, 9, 17, 23, 39, 40, 44, 46, 47, 50, 51, 57, 59, 64, 72, 513, 791, 792, 793, 814, 815, 816, 840, 858, 937, 997, 1014, 1031, 1071, 1151, 1218, 1258, 1338, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1368, 1369, 1370, 1371, 1372, 1375, 1377, 1378, 1379, 1385, 1388, 1391, 1393, 1394, 1395, 1397, 1402, 1421, 1423, 1424, 1425, 1436, 1437, 1444, 1448, 1461, 1469, 1477, 1478, 1479, 1481, 1512, 1524, 1525, 1534, 1567, 1697, 1837, 1866, 1868, 1870, 1871, 1889, 1890, 1891, 1894, 1895, 1898, 1899, 1901, 1902, 1907, 1909, 1913, 1915, 1916, 1919, 1922, 1923, 1932], "expos": [0, 1, 8, 21, 42, 46, 64, 71, 72, 794, 1124, 1891, 1894, 1901, 1913, 1916, 1936], "namespac": [0, 17, 72, 1045, 1868, 1872, 1875, 1896, 1902, 1909, 1914, 1919, 1936], "defin": [0, 1, 2, 3, 5, 9, 11, 12, 15, 20, 24, 33, 34, 39, 40, 42, 43, 44, 47, 48, 50, 51, 57, 59, 60, 64, 69, 72, 436, 446, 448, 450, 517, 565, 791, 796, 798, 837, 858, 859, 860, 861, 888, 889, 890, 891, 1028, 1054, 1071, 1072, 1091, 1119, 1125, 1141, 1143, 1157, 1159, 1160, 1187, 1198, 1220, 1227, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1243, 1244, 1247, 1249, 1250, 1254, 1255, 1256, 1258, 1260, 1261, 1267, 1303, 1367, 1372, 1386, 1387, 1388, 1389, 1396, 1398, 1399, 1430, 1436, 1448, 1463, 1465, 1470, 1472, 1494, 1529, 1579, 1585, 1601, 1610, 1628, 1630, 1637, 1638, 1658, 1661, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1691, 1694, 1697, 1715, 1724, 1726, 1728, 1735, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1793, 1795, 1837, 1840, 1841, 1842, 1843, 1861, 1863, 1865, 1868, 1871, 1873, 1875, 1883, 1884, 1886, 1891, 1894, 1895, 1899, 1900, 1902, 1904, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1925, 1926, 1931, 1932, 1933, 1936], "still": [0, 1, 2, 7, 8, 15, 19, 20, 21, 23, 29, 39, 42, 47, 48, 50, 59, 71, 72, 793, 798, 897, 902, 1202, 1207, 1215, 1397, 1421, 1610, 1611, 1612, 1613, 1699, 1747, 1867, 1868, 1871, 1883, 1884, 1885, 1886, 1890, 1891, 1894, 1895, 1896, 1898, 1900, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 39, 40, 43, 44, 46, 47, 48, 49, 50, 52, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 91, 153, 291, 315, 317, 319, 321, 323, 337, 473, 487, 488, 499, 513, 515, 517, 536, 559, 603, 606, 616, 623, 683, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 759, 763, 780, 789, 790, 796, 798, 818, 822, 825, 837, 853, 856, 857, 858, 860, 875, 879, 884, 891, 892, 893, 894, 900, 901, 902, 903, 904, 905, 906, 912, 913, 916, 923, 936, 939, 942, 946, 952, 954, 968, 969, 970, 971, 972, 977, 984, 985, 986, 987, 988, 999, 1000, 1001, 1028, 1030, 1035, 1036, 1047, 1049, 1054, 1058, 1059, 1060, 1061, 1062, 1071, 1087, 1092, 1095, 1099, 1102, 1105, 1110, 1111, 1112, 1113, 1114, 1119, 1122, 1127, 1128, 1131, 1132, 1133, 1134, 1135, 1139, 1140, 1143, 1160, 1172, 1183, 1189, 1195, 1196, 1198, 1199, 1201, 1207, 1208, 1209, 1213, 1230, 1233, 1234, 1243, 1247, 1249, 1250, 1253, 1254, 1258, 1260, 1261, 1263, 1266, 1267, 1269, 1275, 1291, 1298, 1303, 1320, 1326, 1329, 1330, 1336, 1337, 1338, 1340, 1341, 1342, 1344, 1345, 1348, 1349, 1350, 1353, 1359, 1360, 1362, 1363, 1366, 1367, 1374, 1381, 1382, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1402, 1416, 1420, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1435, 1436, 1458, 1461, 1463, 1465, 1469, 1478, 1479, 1511, 1528, 1529, 1531, 1541, 1548, 1566, 1567, 1585, 1586, 1594, 1601, 1610, 1617, 1619, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1652, 1654, 1657, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1717, 1731, 1735, 1737, 1738, 1742, 1744, 1751, 1755, 1764, 1766, 1784, 1789, 1792, 1793, 1795, 1796, 1804, 1807, 1831, 1836, 1837, 1840, 1841, 1842, 1843, 1847, 1848, 1850, 1851, 1858, 1865, 1868, 1870, 1871, 1873, 1877, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1906, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937], "unlist": 0, "downstream": [0, 3, 16, 17, 20, 29, 1881], "stabl": [0, 1, 2, 42, 48, 59, 60, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 875, 1071, 1233, 1234, 1238, 1243, 1251, 1255, 1258, 1261, 1263, 1270, 1347, 1789, 1866, 1869, 1889, 1892, 1906, 1921], "believ": [0, 8, 27], "unstabl": [0, 48, 1233, 1234, 1261, 1278, 1287, 1548, 1816, 1926], "__matmul__": 0, "addbmm": [0, 103, 920, 1869, 1905, 1911], "addmv": [0, 111, 1869, 1884, 1911], "addr": [0, 42, 113, 1869, 1911], "baddbmm": [0, 155, 1869, 1905, 1911], "bmm": [0, 1851, 1867, 1869, 1884, 1886, 1905, 1906, 1911, 1925], "chain_matmul": [0, 1869, 1911], "multi_dot": [0, 942], "conv1d": [0, 707, 711, 714, 724, 740, 1361, 1369, 1406, 1851, 1869, 1911, 1916, 1918], "conv2d": [0, 708, 712, 715, 717, 725, 741, 791, 813, 1198, 1207, 1209, 1213, 1214, 1362, 1370, 1407, 1430, 1431, 1437, 1458, 1481, 1637, 1851, 1868, 1869, 1879, 1909, 1911, 1916, 1918, 1919, 1930, 1935], "conv3d": [0, 709, 713, 716, 718, 726, 742, 1363, 1371, 1408, 1851, 1869, 1911, 1916, 1918], "conv_transpose1d": [0, 1869, 1911, 1918], "conv_transpose2d": [0, 1869, 1911, 1918], "conv_transpose3d": [0, 1869, 1911, 1918], "grucel": [0, 1905, 1916, 1918, 1919], "lstmcell": [0, 1905, 1916, 1918, 1919], "matmul": [0, 2, 11, 18, 31, 932, 952, 1138, 1302, 1481, 1705, 1715, 1759, 1816, 1869, 1884, 1886, 1894, 1905, 1911, 1918, 1925], "mv": [0, 31, 1209, 1851, 1869, 1884, 1911, 1925], "prelu": [0, 1431, 1869, 1911, 1918], "rnncell": [0, 1916, 1918, 1919], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 97, 626, 627, 865, 1867, 1869, 1884, 1911, 1932], "asin": [0, 144, 628, 629, 867, 1867, 1869, 1884, 1911, 1925], "cosh": [0, 206, 636, 637, 683, 1867, 1869, 1884, 1911], "cosine_embedding_loss": [0, 1869, 1911], "cdist": [0, 1894, 1911], "cosine_similar": [0, 1479, 1869, 1911], "cross_entropi": [0, 1869], "cumprod": [0, 216, 1869, 1884, 1911], "cumsum": [0, 218, 1054, 1851, 1869, 1884, 1911], "dist": [0, 40, 42, 43, 46, 48, 60, 64, 943, 944, 1227, 1233, 1234, 1235, 1237, 1238, 1239, 1243, 1244, 1255, 1256, 1259, 1261, 1262, 1285, 1288, 1439, 1469, 1610, 1617, 1816, 1869, 1895, 1911, 1921, 1923], "erfinv": [0, 253, 1869, 1884, 1911, 1925, 1926], "exp": [0, 1, 48, 255, 642, 643, 769, 902, 903, 905, 1114, 1257, 1277, 1285, 1347, 1352, 1366, 1372, 1396, 1419, 1420, 1434, 1444, 1457, 1460, 1462, 1463, 1465, 1466, 1470, 1503, 1549, 1572, 1580, 1581, 1585, 1587, 1590, 1617, 1712, 1773, 1774, 1795, 1812, 1867, 1869, 1884, 1891, 1909, 1911, 1926], "expm1": [0, 259, 644, 645, 1867, 1869, 1884, 1911, 1925, 1926], "group_norm": [0, 1869, 1911, 1918], "hinge_embedding_loss": [0, 1869, 1911], "kl_div": [0, 1869, 1911], "l1_loss": [0, 1869, 1911], "layer_norm": [0, 1402, 1869, 1911, 1918], "log": [0, 13, 16, 17, 20, 22, 24, 25, 29, 33, 39, 40, 48, 50, 52, 53, 56, 57, 61, 378, 379, 652, 659, 679, 1081, 1273, 1275, 1277, 1278, 1285, 1312, 1338, 1346, 1347, 1366, 1384, 1396, 1419, 1420, 1434, 1437, 1444, 1462, 1463, 1466, 1526, 1531, 1541, 1548, 1549, 1564, 1572, 1585, 1587, 1610, 1866, 1867, 1869, 1877, 1881, 1884, 1891, 1894, 1896, 1909, 1911, 1915, 1926, 1930, 1933, 1934, 1935], "log_softmax": [0, 1353, 1396, 1513, 1564, 1585, 1869, 1885, 1911, 1926], "log10": [0, 373, 653, 654, 1867, 1869, 1884, 1911], "log1p": [0, 375, 655, 656, 1867, 1869, 1884, 1911, 1925, 1926], "log2": [0, 377, 657, 658, 1867, 1869, 1884, 1911, 1926], "margin_ranking_loss": [0, 1869, 1911], "mse_loss": [0, 68, 1127, 1869, 1911], "multilabel_margin_loss": [0, 1869, 1911], "multi_margin_loss": [0, 1869, 1911], "nll_loss": [0, 1869, 1911], "norm": [0, 48, 64, 66, 72, 701, 702, 703, 704, 705, 706, 940, 1065, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1229, 1233, 1242, 1243, 1250, 1255, 1267, 1373, 1374, 1421, 1439, 1474, 1475, 1476, 1477, 1478, 1520, 1521, 1565, 1569, 1614, 1618, 1627, 1628, 1633, 1636, 1637, 1651, 1654, 1674, 1736, 1869, 1873, 1890, 1891, 1899, 1902, 1905, 1911], "normal": [0, 1, 40, 46, 59, 64, 72, 84, 338, 353, 379, 455, 555, 970, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1159, 1195, 1198, 1203, 1233, 1275, 1342, 1348, 1349, 1350, 1369, 1370, 1371, 1375, 1385, 1393, 1394, 1395, 1402, 1412, 1413, 1414, 1418, 1457, 1469, 1473, 1474, 1475, 1476, 1477, 1499, 1529, 1530, 1539, 1543, 1547, 1573, 1614, 1615, 1618, 1633, 1641, 1642, 1651, 1654, 1683, 1699, 1719, 1728, 1729, 1736, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1812, 1851, 1865, 1866, 1867, 1868, 1869, 1873, 1884, 1886, 1889, 1891, 1894, 1897, 1909, 1911, 1913, 1918, 1921, 1926, 1930, 1932, 1933, 1937], "pdist": [0, 1439, 1869, 1911], "poisson_nll_loss": [0, 1869, 1911], "pow": [0, 1, 470, 496, 900, 901, 904, 1114, 1867, 1869, 1871, 1884, 1890, 1891, 1911, 1925, 1931], "prod": [0, 56, 323, 517, 1088, 1090, 1093, 1094, 1096, 1097, 1100, 1101, 1103, 1104, 1106, 1108, 1263, 1264, 1373, 1377, 1481, 1851, 1867, 1869, 1884, 1911, 1925], "reciproc": [0, 486, 662, 663, 1746, 1867, 1869, 1884, 1911], "rsqrt": [0, 511, 1867, 1869, 1884, 1911], "sinh": [0, 535, 670, 671, 881, 1867, 1869, 1884, 1911, 1925], "smooth_l1_loss": [0, 1869, 1911], "soft_margin_loss": [0, 1869, 1911], "softmax": [0, 48, 795, 1338, 1366, 1396, 1420, 1464, 1512, 1531, 1541, 1548, 1579, 1586, 1792, 1869, 1884, 1885, 1886, 1894, 1911, 1918, 1925, 1926], "softmin": [0, 1869], "softplu": [0, 48, 1429, 1559, 1869, 1911], "sum": [0, 1, 11, 12, 13, 16, 20, 25, 27, 29, 39, 42, 43, 46, 48, 50, 64, 69, 70, 72, 496, 517, 565, 745, 892, 900, 901, 902, 903, 904, 905, 906, 912, 913, 917, 970, 986, 987, 988, 1053, 1054, 1071, 1131, 1132, 1133, 1138, 1175, 1229, 1250, 1254, 1267, 1275, 1276, 1277, 1285, 1320, 1328, 1346, 1347, 1353, 1363, 1364, 1366, 1367, 1374, 1377, 1384, 1390, 1391, 1396, 1397, 1398, 1399, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1463, 1465, 1478, 1479, 1481, 1501, 1502, 1512, 1513, 1521, 1526, 1531, 1541, 1550, 1551, 1564, 1572, 1585, 1586, 1610, 1633, 1638, 1639, 1657, 1691, 1737, 1775, 1793, 1795, 1835, 1837, 1851, 1866, 1867, 1869, 1871, 1875, 1881, 1884, 1890, 1891, 1894, 1895, 1896, 1897, 1902, 1905, 1909, 1911, 1921, 1922, 1925, 1926, 1931], "renorm": [0, 492, 1373, 1374, 1520, 1521, 1869, 1911], "tan": [0, 574, 674, 675, 882, 1867, 1869, 1884, 1911, 1925, 1930], "triplet_margin_loss": [0, 1869, 1911], "take": [0, 1, 2, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 20, 22, 25, 28, 33, 39, 40, 42, 44, 46, 48, 50, 58, 59, 60, 61, 64, 66, 67, 69, 70, 71, 72, 759, 792, 797, 813, 819, 825, 861, 900, 901, 902, 903, 904, 905, 907, 908, 945, 971, 1008, 1059, 1061, 1062, 1087, 1089, 1092, 1095, 1099, 1100, 1102, 1105, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1230, 1252, 1255, 1338, 1347, 1374, 1378, 1379, 1382, 1400, 1424, 1425, 1426, 1427, 1428, 1430, 1438, 1445, 1473, 1483, 1484, 1524, 1525, 1542, 1566, 1579, 1610, 1655, 1683, 1687, 1712, 1839, 1858, 1865, 1868, 1869, 1871, 1878, 1879, 1883, 1884, 1885, 1886, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1906, 1907, 1908, 1909, 1911, 1913, 1915, 1916, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1934], "addcdiv": [0, 105, 1869, 1911], "addcmul": [0, 107, 1869, 1911], "atan2": [0, 149, 870, 1867, 1869, 1884, 1911], "bilinear": [0, 778, 784, 785, 1071, 1482, 1483, 1529, 1540, 1598, 1599, 1851, 1869, 1911], "cross": [0, 7, 8, 20, 44, 48, 50, 1346, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1501, 1502, 1512, 1869, 1894, 1908, 1911], "dot": [0, 2, 33, 69, 70, 616, 901, 903, 904, 905, 1050, 1051, 1052, 1053, 1129, 1139, 1175, 1218, 1265, 1266, 1292, 1346, 1347, 1366, 1377, 1390, 1397, 1421, 1436, 1437, 1479, 1579, 1812, 1855, 1856, 1857, 1858, 1869, 1884, 1899, 1911, 1913], "grid_sampl": [0, 1494, 1851, 1869, 1911], "index_put": [0, 1851, 1869, 1911], "scatter_add": [0, 1867, 1869, 1911], "tensordot": [0, 1175, 1263, 1264, 1873, 1894, 1911], "binari": [0, 2, 33, 34, 40, 48, 50, 52, 57, 59, 72, 157, 734, 922, 1291, 1346, 1347, 1436, 1501, 1502, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1665, 1667, 1866, 1872, 1884, 1885, 1901, 1909, 1913, 1930], "add": [0, 1, 3, 7, 11, 12, 13, 14, 17, 22, 25, 28, 29, 34, 35, 39, 42, 44, 46, 56, 59, 64, 70, 71, 72, 84, 101, 292, 315, 513, 515, 685, 686, 687, 690, 746, 747, 756, 789, 792, 837, 858, 860, 861, 987, 1017, 1028, 1071, 1128, 1198, 1209, 1338, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1406, 1407, 1408, 1409, 1410, 1411, 1430, 1432, 1436, 1437, 1441, 1444, 1531, 1572, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1808, 1865, 1867, 1868, 1869, 1870, 1871, 1875, 1879, 1881, 1884, 1886, 1890, 1892, 1893, 1896, 1897, 1900, 1901, 1902, 1904, 1909, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1934, 1935, 1936], "nativ": [0, 2, 31, 40, 47, 64, 72, 997, 1128, 1208, 1614, 1615, 1759, 1868, 1871, 1883, 1894, 1912, 1913, 1921], "without": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 16, 19, 29, 33, 36, 39, 40, 42, 43, 44, 46, 48, 52, 59, 64, 65, 70, 71, 72, 256, 616, 949, 975, 977, 1012, 1092, 1093, 1094, 1102, 1103, 1104, 1195, 1196, 1198, 1199, 1244, 1245, 1260, 1267, 1320, 1348, 1349, 1350, 1370, 1374, 1393, 1394, 1395, 1427, 1430, 1438, 1469, 1477, 1521, 1601, 1610, 1634, 1650, 1691, 1722, 1738, 1755, 1756, 1846, 1865, 1870, 1871, 1878, 1879, 1881, 1883, 1885, 1890, 1891, 1892, 1894, 1895, 1896, 1899, 1900, 1902, 1904, 1906, 1907, 1909, 1913, 1914, 1916, 1920, 1921, 1925, 1930, 1935, 1937], "intervent": [0, 8, 1921], "mixtur": [0, 48, 1366, 1512], "bceloss": [0, 1347, 1501], "aren": [0, 8, 69, 72, 1128, 1884, 1891, 1922, 1936], "mean": [0, 2, 3, 5, 7, 8, 14, 15, 16, 20, 22, 23, 24, 34, 36, 39, 40, 42, 44, 46, 48, 59, 61, 64, 65, 67, 70, 71, 72, 256, 323, 337, 379, 455, 495, 517, 757, 759, 780, 793, 795, 860, 861, 920, 933, 970, 1127, 1129, 1208, 1298, 1315, 1320, 1325, 1329, 1330, 1336, 1337, 1338, 1340, 1341, 1342, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1364, 1366, 1368, 1372, 1374, 1375, 1376, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1400, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1416, 1417, 1419, 1420, 1421, 1422, 1429, 1433, 1434, 1435, 1437, 1438, 1444, 1445, 1448, 1449, 1450, 1457, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1478, 1479, 1480, 1500, 1501, 1502, 1510, 1512, 1513, 1521, 1522, 1526, 1537, 1538, 1541, 1542, 1546, 1552, 1560, 1561, 1562, 1563, 1564, 1572, 1583, 1584, 1595, 1596, 1610, 1658, 1686, 1719, 1728, 1729, 1773, 1793, 1810, 1811, 1817, 1851, 1853, 1854, 1865, 1867, 1868, 1869, 1870, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1894, 1895, 1896, 1898, 1899, 1902, 1908, 1909, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925], "doesn": [0, 1, 2, 7, 8, 15, 29, 31, 39, 42, 44, 67, 69, 71, 72, 822, 825, 879, 896, 906, 975, 996, 1128, 1139, 1205, 1211, 1237, 1261, 1269, 1278, 1358, 1359, 1360, 1367, 1396, 1463, 1504, 1505, 1506, 1541, 1585, 1610, 1611, 1633, 1675, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1790, 1793, 1858, 1867, 1868, 1871, 1872, 1884, 1886, 1891, 1892, 1894, 1896, 1897, 1901, 1904, 1908, 1912, 1914, 1922, 1925], "help": [0, 1, 4, 7, 8, 15, 17, 19, 20, 22, 25, 29, 31, 33, 39, 40, 42, 56, 59, 64, 69, 72, 907, 908, 916, 996, 1028, 1128, 1129, 1139, 1198, 1199, 1217, 1299, 1311, 1312, 1369, 1370, 1371, 1375, 1430, 1617, 1766, 1858, 1865, 1871, 1878, 1884, 1885, 1890, 1891, 1892, 1894, 1895, 1897, 1900, 1902, 1905, 1909, 1910, 1913, 1921, 1922, 1925, 1933], "revers": [0, 48, 70, 72, 513, 733, 792, 900, 902, 1089, 1091, 1111, 1131, 1133, 1138, 1265, 1400, 1443, 1571, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1839, 1852, 1869, 1870, 1871, 1891, 1895, 1897, 1911, 1931], "therefor": [0, 3, 5, 17, 20, 39, 40, 42, 48, 49, 57, 64, 67, 449, 543, 906, 921, 930, 954, 1017, 1105, 1122, 1124, 1127, 1155, 1156, 1210, 1213, 1243, 1256, 1373, 1374, 1481, 1520, 1521, 1529, 1652, 1691, 1871, 1890, 1891, 1894, 1896, 1898, 1901, 1909, 1923, 1925], "rais": [0, 1, 5, 7, 15, 20, 27, 28, 29, 33, 42, 46, 48, 50, 52, 59, 64, 69, 71, 72, 91, 315, 317, 323, 696, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 933, 942, 976, 1041, 1114, 1119, 1196, 1198, 1203, 1205, 1213, 1215, 1227, 1229, 1237, 1238, 1241, 1245, 1246, 1251, 1258, 1259, 1263, 1264, 1269, 1290, 1315, 1430, 1579, 1622, 1623, 1628, 1630, 1633, 1643, 1666, 1667, 1753, 1851, 1865, 1872, 1878, 1883, 1891, 1894, 1896, 1898, 1905, 1909, 1913, 1914, 1920, 1921, 1932, 1936], "mani": [0, 3, 7, 12, 14, 15, 16, 19, 20, 22, 23, 28, 29, 31, 33, 39, 40, 42, 48, 59, 64, 68, 69, 72, 91, 404, 679, 888, 890, 900, 902, 1071, 1210, 1353, 1686, 1785, 1833, 1840, 1841, 1842, 1843, 1868, 1870, 1884, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1901, 1902, 1905, 1909, 1912, 1916, 1923, 1925, 1928, 1930, 1931, 1933], "sigmoid": [0, 48, 72, 526, 666, 667, 759, 794, 1346, 1347, 1373, 1382, 1383, 1400, 1401, 1459, 1501, 1528, 1582, 1867, 1869, 1884, 1885, 1889, 1910, 1911, 1918, 1926], "right": [0, 2, 7, 9, 15, 16, 21, 25, 26, 42, 44, 48, 64, 72, 819, 864, 921, 928, 930, 931, 936, 941, 1065, 1071, 1112, 1115, 1116, 1120, 1151, 1155, 1156, 1160, 1164, 1195, 1217, 1242, 1247, 1258, 1260, 1261, 1269, 1275, 1276, 1320, 1338, 1343, 1344, 1345, 1346, 1347, 1358, 1359, 1360, 1377, 1384, 1397, 1398, 1399, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1433, 1434, 1435, 1439, 1440, 1446, 1478, 1481, 1482, 1483, 1484, 1529, 1549, 1567, 1615, 1622, 1675, 1689, 1690, 1731, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1812, 1832, 1837, 1839, 1852, 1865, 1869, 1871, 1883, 1884, 1885, 1891, 1896, 1899, 1909, 1912, 1919, 1923, 1926], "entropi": [0, 48, 1346, 1366, 1434, 1501, 1502, 1512, 1926], "combin": [0, 3, 12, 20, 39, 40, 42, 59, 70, 71, 616, 688, 711, 712, 713, 714, 715, 716, 717, 718, 792, 853, 889, 1028, 1100, 1101, 1106, 1108, 1160, 1292, 1302, 1347, 1377, 1391, 1436, 1477, 1481, 1523, 1546, 1629, 1868, 1869, 1870, 1890, 1894, 1897, 1909, 1911, 1912, 1914, 1916, 1919, 1921], "bcewithlogitsloss": [0, 1502], "bcewithlogit": 0, "safe": [0, 11, 16, 17, 20, 29, 42, 59, 71, 72, 1018, 1019, 1038, 1039, 1610, 1672, 1673, 1868, 1871, 1890, 1891, 1894, 1897, 1901, 1921], "_convolut": [0, 1911], "avg_pool3d": [0, 1869, 1911, 1918], "grid_sampler_2d": [0, 1867, 1869, 1911], "_grid_sampler_2d_cpu_fallback": [0, 1911], "grid_sampler_3d": [0, 1869, 1911], "polar": [0, 48, 1257, 1869, 1911], "quantil": [0, 1298, 1327, 1869, 1911, 1926], "nanquantil": [0, 1869, 1911], "stft": [0, 921, 930, 1155, 1156, 1195, 1217, 1869, 1911], "view_as_complex": [0, 31, 1869, 1911], "choleski": [0, 2, 48, 944, 945, 1228, 1234, 1270, 1869, 1911], "cholesky_invers": [0, 2, 1869, 1911], "cholesky_solv": [0, 2, 1869, 1911], "invers": [0, 48, 682, 683, 881, 884, 939, 944, 945, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1195, 1238, 1239, 1251, 1255, 1258, 1263, 1264, 1361, 1362, 1363, 1373, 1374, 1377, 1426, 1427, 1428, 1481, 1520, 1521, 1556, 1557, 1558, 1619, 1622, 1646, 1691, 1697, 1847, 1866, 1869, 1871, 1905, 1911, 1926], "lu_solv": [0, 2, 1245, 1869, 1911], "orgqr": [0, 1869, 1911], "ormqr": [0, 1143, 1237, 1869, 1911], "pinvers": [0, 1243, 1869, 1911], "max_pool3d": [0, 1869, 1911, 1918], "max_unpool2d": [0, 1524, 1554, 1869, 1911], "max_unpool3d": [0, 1525, 1555, 1869, 1911], "adaptive_avg_pool3d": [0, 1869, 1896, 1911, 1918], "reflection_pad1d": [0, 1869, 1911], "reflection_pad2d": [0, 1867, 1869, 1911], "replication_pad1d": [0, 1869, 1911], "replication_pad2d": [0, 1867, 1869, 1911], "replication_pad3d": [0, 1867, 1869, 1911], "ctc_loss": [0, 1353, 1869, 1911], "fft_fft": [0, 1869, 1911], "fft_ifft": [0, 1869, 1911], "fft_fft2": [0, 1869, 1911], "fft_ifft2": [0, 1869, 1911], "fft_fftn": [0, 1869, 1911], "fft_ifftn": [0, 1869, 1911], "fft_rfft": [0, 1869, 1911], "fft_irfft": [0, 1869, 1911], "fft_rfft2": [0, 1869, 1911], "fft_irfft2": [0, 1869, 1911], "fft_rfftn": [0, 1869, 1911], "fft_irfftn": [0, 1869, 1911], "fft_hfft": [0, 1869, 1911], "fft_ihfft": [0, 1869, 1911], "linalg_matrix_norm": [0, 1869, 1911], "linalg_cond": [0, 1869, 1911], "linalg_matrix_rank": [0, 1869, 1911], "linalg_solv": [0, 1869, 1911], "linalg_choleski": [0, 1869, 1911], "linalg_svdv": [0, 1869, 1911], "linalg_eigv": [0, 1869, 1911], "linalg_eigvalsh": [0, 1869, 1911], "linalg_inv": [0, 1869, 1911], "linalg_householder_product": [0, 1869, 1911], "linalg_tensorinv": [0, 1869, 1911], "linalg_tensorsolv": [0, 1869, 1911], "fake_quantize_per_tensor_affin": [0, 1869, 1911], "eig": [0, 1234, 1235, 1261, 1905], "geqrf": [0, 1237, 1703, 1869, 1911], "lstsq": [0, 1143, 1229, 1255], "_lu_with_info": [0, 1911], "qr": [0, 2, 1143, 1233, 1234, 1237, 1243, 1261, 1617, 1703, 1869, 1911], "solv": [0, 7, 16, 21, 31, 945, 1143, 1151, 1229, 1238, 1240, 1241, 1244, 1245, 1247, 1251, 1259, 1260, 1264, 1270, 1288, 1839, 1891, 1899, 1905, 1908], "svd": [0, 2, 31, 1233, 1234, 1243, 1255, 1262, 1278, 1622, 1705, 1817, 1867, 1869, 1905, 1911, 1925], "symeig": 0, "triangular_solv": [0, 1869, 1911], "fractional_max_pool2d": [0, 1869, 1911], "fractional_max_pool3d": [0, 1869, 1911], "adaptive_max_pool3d": [0, 1869, 1911], "multilabel_margin_loss_forward": [0, 1911], "linalg_qr": [0, 1869, 1911], "linalg_cholesky_ex": [0, 1869, 1911], "linalg_svd": [0, 1869, 1911], "linalg_eig": [0, 1869, 1911], "linalg_eigh": [0, 1869, 1911], "linalg_lstsq": [0, 1869, 1911], "linalg_inv_ex": [0, 1869, 1911], "cat": [0, 14, 42, 48, 72, 543, 746, 747, 756, 792, 795, 961, 962, 1299, 1449, 1797, 1809, 1867, 1868, 1869, 1884, 1909, 1911, 1913, 1916, 1918, 1925, 1934], "stack": [0, 8, 13, 15, 16, 17, 20, 21, 29, 36, 39, 40, 42, 48, 52, 68, 69, 72, 759, 916, 939, 950, 1032, 1033, 1070, 1137, 1139, 1163, 1299, 1353, 1382, 1400, 1401, 1445, 1474, 1476, 1647, 1858, 1860, 1866, 1869, 1886, 1894, 1895, 1898, 1910, 1911, 1913, 1915, 1918, 1925], "index_copi": [0, 1851, 1869, 1911], "implement": [1, 2, 5, 8, 11, 14, 20, 23, 35, 39, 40, 42, 43, 44, 46, 47, 48, 51, 56, 57, 60, 64, 69, 72, 86, 153, 513, 515, 517, 686, 737, 738, 739, 740, 741, 742, 759, 778, 780, 784, 792, 799, 818, 819, 820, 823, 824, 825, 877, 879, 892, 901, 907, 908, 968, 1071, 1114, 1119, 1124, 1131, 1132, 1134, 1135, 1198, 1205, 1207, 1208, 1211, 1253, 1256, 1269, 1270, 1298, 1338, 1353, 1367, 1382, 1398, 1399, 1430, 1436, 1442, 1449, 1466, 1475, 1477, 1529, 1567, 1579, 1587, 1610, 1614, 1615, 1617, 1618, 1622, 1633, 1646, 1650, 1651, 1654, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1689, 1691, 1697, 1715, 1722, 1735, 1744, 1747, 1784, 1793, 1816, 1817, 1832, 1848, 1851, 1870, 1871, 1872, 1875, 1878, 1883, 1886, 1887, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1912, 1913, 1914, 1916, 1919, 1921, 1922, 1925, 1926, 1929, 1931, 1933, 1936], "arbitrari": [1, 3, 16, 23, 29, 42, 46, 256, 889, 1054, 1261, 1269, 1367, 1373, 1397, 1421, 1481, 1501, 1502, 1520, 1541, 1567, 1643, 1816, 1837, 1871, 1877, 1891, 1897, 1901, 1902, 1912, 1914, 1916, 1925, 1933, 1936], "scalar": [1, 15, 28, 42, 48, 100, 153, 157, 262, 315, 447, 588, 686, 687, 737, 738, 739, 740, 741, 742, 878, 879, 892, 900, 901, 904, 906, 925, 928, 936, 966, 970, 1066, 1071, 1086, 1119, 1125, 1151, 1158, 1175, 1189, 1222, 1223, 1292, 1299, 1327, 1338, 1346, 1347, 1353, 1364, 1366, 1367, 1384, 1390, 1391, 1396, 1397, 1402, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1479, 1531, 1573, 1656, 1661, 1662, 1666, 1699, 1712, 1714, 1716, 1734, 1735, 1751, 1799, 1800, 1801, 1802, 1803, 1830, 1848, 1849, 1861, 1863, 1864, 1867, 1869, 1870, 1871, 1881, 1886, 1889, 1891, 1896, 1899, 1909, 1921, 1925, 1928, 1930, 1932, 1933], "minim": [1, 7, 8, 16, 29, 818, 874, 1300, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1683, 1684, 1685, 1686, 1699, 1865, 1881, 1890, 1894, 1902, 1904, 1907, 1909, 1914, 1916, 1933], "exist": [1, 7, 8, 9, 11, 12, 15, 17, 25, 31, 33, 39, 42, 43, 44, 48, 50, 52, 57, 59, 60, 64, 68, 72, 84, 85, 256, 499, 791, 853, 877, 900, 901, 902, 903, 904, 905, 906, 907, 1012, 1198, 1202, 1213, 1233, 1238, 1244, 1245, 1270, 1327, 1430, 1431, 1440, 1791, 1809, 1865, 1867, 1868, 1875, 1878, 1883, 1884, 1886, 1887, 1891, 1892, 1894, 1896, 1897, 1900, 1901, 1902, 1903, 1905, 1907, 1909, 1913, 1914, 1915, 1916, 1921, 1923, 1925, 1929, 1931, 1933], "code": [1, 3, 4, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 34, 39, 40, 42, 48, 50, 60, 61, 69, 70, 71, 122, 679, 952, 954, 1014, 1015, 1028, 1128, 1173, 1198, 1202, 1203, 1208, 1209, 1210, 1213, 1214, 1215, 1228, 1239, 1241, 1269, 1446, 1458, 1610, 1763, 1865, 1866, 1870, 1871, 1877, 1885, 1891, 1892, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1908, 1909, 1912, 1920, 1921, 1922, 1923, 1925, 1928, 1929, 1933, 1936], "declar": [1, 9, 33, 39, 60, 1870, 1871, 1872, 1896, 1909, 1913, 1914, 1933], "requires_grad": [1, 5, 13, 15, 25, 48, 70, 337, 446, 447, 448, 449, 450, 488, 496, 864, 879, 896, 898, 899, 907, 908, 910, 912, 913, 921, 930, 1017, 1072, 1073, 1074, 1075, 1084, 1089, 1107, 1124, 1125, 1126, 1129, 1139, 1155, 1156, 1173, 1198, 1217, 1268, 1284, 1346, 1347, 1366, 1373, 1374, 1384, 1396, 1397, 1421, 1422, 1430, 1436, 1437, 1444, 1477, 1478, 1501, 1502, 1512, 1564, 1610, 1611, 1612, 1613, 1650, 1655, 1661, 1662, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1761, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1851, 1858, 1863, 1864, 1867, 1869, 1873, 1884, 1885, 1886, 1894, 1896, 1897, 1902, 1907, 1909, 1911, 1921, 1922, 1931, 1932, 1933], "type": [1, 2, 3, 5, 12, 13, 14, 18, 19, 20, 28, 33, 34, 35, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 57, 59, 60, 61, 64, 69, 71, 72, 91, 153, 194, 199, 211, 328, 331, 335, 343, 446, 447, 448, 449, 450, 482, 558, 603, 679, 684, 685, 686, 687, 688, 689, 733, 734, 737, 738, 739, 748, 750, 751, 752, 753, 755, 763, 765, 766, 769, 770, 771, 772, 773, 774, 775, 776, 777, 780, 783, 791, 792, 793, 796, 814, 815, 816, 818, 819, 820, 821, 822, 824, 826, 839, 853, 854, 855, 856, 857, 858, 859, 860, 861, 864, 878, 888, 889, 890, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 920, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 936, 937, 938, 939, 940, 942, 951, 952, 958, 981, 983, 990, 991, 992, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1009, 1011, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1034, 1046, 1048, 1049, 1052, 1053, 1066, 1071, 1072, 1073, 1074, 1084, 1085, 1086, 1089, 1107, 1114, 1116, 1117, 1118, 1119, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1135, 1136, 1137, 1139, 1141, 1145, 1146, 1147, 1150, 1155, 1156, 1158, 1159, 1160, 1174, 1177, 1180, 1183, 1194, 1195, 1196, 1198, 1199, 1201, 1204, 1207, 1209, 1211, 1213, 1214, 1216, 1217, 1220, 1229, 1233, 1250, 1254, 1261, 1267, 1268, 1269, 1270, 1284, 1287, 1290, 1297, 1299, 1306, 1307, 1309, 1319, 1325, 1328, 1338, 1342, 1358, 1359, 1360, 1367, 1374, 1420, 1430, 1431, 1432, 1436, 1440, 1441, 1458, 1463, 1464, 1465, 1473, 1474, 1475, 1476, 1477, 1489, 1490, 1494, 1495, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1526, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1548, 1550, 1551, 1552, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1572, 1574, 1575, 1577, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1592, 1594, 1595, 1596, 1597, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1654, 1656, 1657, 1661, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1705, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1737, 1740, 1741, 1744, 1751, 1752, 1755, 1756, 1757, 1759, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1792, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1812, 1813, 1815, 1816, 1817, 1830, 1839, 1841, 1843, 1848, 1849, 1851, 1852, 1858, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1872, 1879, 1880, 1881, 1884, 1886, 1889, 1890, 1891, 1893, 1894, 1899, 1900, 1901, 1902, 1905, 1907, 1908, 1910, 1911, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1925, 1926, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1936], "doubl": [1, 3, 50, 482, 488, 616, 748, 750, 751, 752, 753, 755, 765, 766, 780, 896, 898, 903, 907, 908, 937, 944, 960, 971, 1017, 1086, 1114, 1151, 1198, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1278, 1279, 1280, 1281, 1282, 1288, 1374, 1430, 1489, 1492, 1521, 1601, 1666, 1703, 1709, 1798, 1799, 1800, 1802, 1803, 1816, 1830, 1839, 1861, 1871, 1884, 1894, 1896, 1897, 1905, 1909, 1913, 1927, 1928, 1931, 1933], "bfloat16": [1, 40, 64, 1180, 1198, 1249, 1266, 1430, 1666, 1672, 1673, 1759, 1884, 1894, 1925, 1927, 1928, 1931, 1932, 1933, 1937], "cfloat": [1, 31, 42, 313, 484, 616, 944, 971, 1168, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1288, 1703, 1733, 1816, 1839, 1857, 1928, 1931, 1933], "cdoubl": [1, 31, 944, 971, 1198, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1288, 1430, 1703, 1816, 1839, 1928, 1931, 1933], "beta": [1, 2, 31, 65, 71, 102, 103, 108, 109, 110, 111, 112, 113, 154, 155, 323, 517, 553, 685, 688, 689, 690, 920, 972, 1006, 1007, 1014, 1015, 1017, 1155, 1217, 1292, 1302, 1348, 1349, 1350, 1385, 1391, 1393, 1394, 1395, 1402, 1418, 1461, 1466, 1469, 1546, 1547, 1579, 1583, 1587, 1672, 1673, 1674, 1676, 1682, 1686, 1719, 1777, 1779, 1790, 1794, 1808, 1866, 1867, 1869, 1879, 1894, 1909, 1916, 1921, 1925, 1928, 1933], "even": [1, 8, 11, 14, 15, 17, 18, 19, 20, 39, 40, 42, 47, 50, 64, 71, 72, 543, 579, 814, 815, 816, 892, 952, 970, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1102, 1103, 1104, 1107, 1138, 1183, 1210, 1227, 1229, 1233, 1234, 1235, 1236, 1250, 1254, 1256, 1257, 1261, 1262, 1267, 1292, 1298, 1367, 1469, 1504, 1505, 1506, 1567, 1610, 1617, 1655, 1657, 1697, 1744, 1755, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1816, 1856, 1868, 1871, 1872, 1881, 1886, 1890, 1891, 1894, 1896, 1898, 1900, 1902, 1904, 1905, 1906, 1907, 1912, 1913, 1914, 1923, 1928], "though": [1, 15, 42, 72, 153, 793, 889, 892, 902, 1087, 1088, 1090, 1196, 1199, 1292, 1657, 1868, 1872, 1885, 1886, 1891, 1896, 1897, 1904, 1905, 1912, 1916], "signatur": [1, 19, 20, 39, 52, 64, 72, 86, 400, 488, 555, 912, 913, 973, 1198, 1430, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1622, 1643, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1812, 1894, 1896, 1897, 1909, 1913, 1914, 1921, 1925, 1936], "veri": [1, 4, 7, 8, 15, 16, 17, 19, 20, 21, 28, 29, 36, 39, 40, 42, 68, 70, 72, 954, 968, 1129, 1137, 1139, 1260, 1393, 1394, 1395, 1610, 1611, 1617, 1675, 1697, 1703, 1780, 1784, 1839, 1858, 1870, 1883, 1891, 1896, 1898, 1899, 1900, 1902, 1904, 1905, 1908, 1912, 1913, 1920, 1921, 1922, 1925], "unlik": [1, 3, 7, 14, 17, 48, 64, 70, 493, 1068, 1107, 1110, 1114, 1173, 1233, 1234, 1253, 1256, 1261, 1265, 1295, 1298, 1300, 1402, 1612, 1613, 1734, 1756, 1855, 1870, 1871, 1883, 1886, 1894, 1904, 1906, 1928, 1933], "coverag": [1, 7, 19, 65, 72, 1131, 1132, 1866, 1868, 1873, 1885, 1916, 1925, 1936], "plan": [1, 2, 7, 9, 14, 28, 29, 42, 44, 47, 893, 1610, 1715, 1886, 1891, 1896, 1913, 1925], "consid": [1, 5, 8, 14, 28, 40, 42, 50, 59, 64, 69, 71, 72, 693, 778, 784, 793, 900, 902, 903, 907, 945, 970, 1058, 1059, 1060, 1061, 1062, 1092, 1127, 1187, 1191, 1194, 1198, 1238, 1240, 1241, 1242, 1243, 1251, 1252, 1255, 1260, 1263, 1366, 1377, 1430, 1433, 1481, 1494, 1529, 1540, 1598, 1611, 1617, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1652, 1685, 1753, 1773, 1807, 1840, 1841, 1842, 1843, 1865, 1868, 1871, 1875, 1878, 1890, 1891, 1892, 1896, 1898, 1899, 1902, 1905, 1913, 1915, 1917, 1922, 1923, 1925, 1928, 1931, 1932, 1936], "ad": [1, 3, 9, 12, 15, 16, 19, 23, 28, 33, 39, 40, 42, 46, 48, 56, 64, 67, 69, 70, 71, 72, 224, 225, 315, 321, 472, 515, 679, 685, 686, 687, 688, 689, 690, 734, 893, 894, 895, 900, 901, 902, 903, 907, 919, 920, 1071, 1075, 1131, 1132, 1134, 1173, 1198, 1211, 1275, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1436, 1437, 1439, 1444, 1458, 1469, 1473, 1481, 1507, 1508, 1509, 1526, 1553, 1554, 1555, 1579, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1622, 1629, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1655, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1719, 1720, 1721, 1761, 1790, 1794, 1808, 1865, 1866, 1867, 1868, 1870, 1875, 1881, 1885, 1890, 1897, 1899, 1901, 1902, 1913, 1916, 1919, 1925, 1930, 1933], "tutori": [1, 3, 9, 15, 19, 21, 34, 42, 43, 46, 72, 893, 894, 895, 898, 1866, 1868, 1875, 1878, 1887, 1896, 1901, 1902, 1904, 1907, 1909, 1916], "how": [1, 3, 5, 7, 8, 9, 14, 17, 19, 20, 21, 22, 27, 34, 35, 39, 42, 44, 47, 51, 59, 60, 61, 64, 65, 66, 68, 69, 72, 488, 784, 791, 792, 795, 840, 858, 860, 861, 893, 894, 895, 898, 912, 913, 1054, 1075, 1128, 1137, 1151, 1173, 1198, 1208, 1269, 1377, 1430, 1481, 1482, 1567, 1598, 1610, 1643, 1655, 1735, 1759, 1761, 1774, 1785, 1866, 1868, 1870, 1871, 1875, 1878, 1880, 1883, 1884, 1885, 1887, 1890, 1893, 1895, 1897, 1898, 1899, 1902, 1904, 1906, 1907, 1909, 1914, 1916, 1919, 1921, 1922, 1923, 1925, 1930], "major": [1, 6, 7, 8, 9, 14, 16, 19, 22, 999, 1816, 1866, 1871, 1912], "build": [1, 8, 9, 11, 19, 29, 33, 34, 42, 48, 72, 1198, 1207, 1430, 1476, 1494, 1529, 1866, 1868, 1878, 1887, 1891, 1909, 1914, 1916, 1922, 1930, 1931], "basic": [1, 3, 7, 9, 16, 20, 44, 59, 72, 1131, 1132, 1133, 1204, 1270, 1610, 1691, 1866, 1872, 1887, 1892, 1894, 1895, 1899, 1913, 1922, 1929, 1930], "jacobian": [1, 48, 65, 66, 68, 69, 892, 894, 900, 903, 905, 906, 907, 908, 1132, 1133, 1134, 1138, 1139, 1858, 1891, 1896, 1899], "hessian": [1, 65, 68, 69, 901, 904, 1132, 1133, 1889, 1897], "etc": [1, 3, 5, 11, 13, 17, 20, 27, 31, 39, 40, 42, 48, 50, 59, 60, 64, 858, 859, 860, 954, 1195, 1198, 1366, 1430, 1610, 1664, 1737, 1865, 1870, 1871, 1878, 1896, 1897, 1898, 1902, 1904, 1909, 1912, 1913, 1916, 1921, 1925, 1927, 1930, 1933], "user": [1, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 25, 29, 31, 34, 39, 40, 42, 43, 44, 47, 48, 49, 50, 52, 56, 59, 60, 62, 64, 65, 68, 69, 71, 72, 86, 153, 337, 731, 737, 738, 739, 744, 745, 755, 763, 793, 796, 798, 837, 853, 860, 861, 892, 898, 906, 975, 1008, 1122, 1127, 1128, 1198, 1269, 1430, 1473, 1475, 1476, 1477, 1579, 1605, 1610, 1619, 1633, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1865, 1866, 1868, 1870, 1871, 1875, 1878, 1883, 1885, 1886, 1890, 1891, 1892, 1894, 1896, 1899, 1900, 1901, 1902, 1904, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1921, 1922, 1925, 1929, 1930, 1932, 1936], "input": [1, 2, 3, 5, 9, 11, 14, 15, 18, 25, 27, 28, 29, 31, 34, 37, 39, 40, 42, 43, 46, 47, 48, 49, 52, 64, 65, 66, 67, 68, 69, 70, 72, 84, 86, 91, 153, 262, 282, 303, 403, 484, 517, 608, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 719, 727, 728, 733, 734, 737, 738, 739, 740, 741, 742, 744, 745, 755, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 801, 813, 816, 818, 836, 837, 838, 839, 856, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 916, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 935, 936, 938, 940, 941, 943, 944, 945, 946, 947, 948, 949, 951, 952, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 987, 1014, 1015, 1017, 1050, 1051, 1052, 1053, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1139, 1140, 1141, 1142, 1143, 1144, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1175, 1176, 1177, 1178, 1180, 1183, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1201, 1202, 1204, 1205, 1209, 1211, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1597, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1620, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1636, 1637, 1638, 1639, 1643, 1644, 1645, 1647, 1652, 1655, 1656, 1657, 1659, 1660, 1662, 1664, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1690, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1725, 1727, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1748, 1749, 1750, 1753, 1754, 1756, 1767, 1768, 1769, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1825, 1826, 1827, 1828, 1829, 1831, 1833, 1834, 1835, 1836, 1839, 1840, 1842, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1862, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1878, 1879, 1885, 1886, 1887, 1889, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1905, 1906, 1907, 1909, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1925, 1926, 1928, 1929, 1932, 1934, 1935, 1936], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 46, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 85, 86, 153, 157, 256, 325, 337, 459, 488, 513, 515, 544, 613, 616, 679, 686, 728, 740, 741, 742, 747, 756, 757, 759, 767, 768, 771, 772, 773, 784, 790, 791, 792, 793, 796, 798, 813, 819, 822, 823, 825, 836, 840, 853, 857, 858, 860, 861, 862, 878, 879, 888, 889, 890, 892, 893, 894, 895, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 912, 913, 915, 919, 922, 939, 945, 952, 955, 958, 963, 972, 974, 984, 986, 988, 995, 996, 1014, 1016, 1020, 1022, 1024, 1028, 1029, 1054, 1071, 1072, 1075, 1076, 1089, 1091, 1092, 1093, 1094, 1107, 1110, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1137, 1138, 1139, 1142, 1143, 1151, 1154, 1159, 1160, 1173, 1189, 1195, 1196, 1198, 1199, 1201, 1202, 1204, 1208, 1209, 1211, 1213, 1214, 1219, 1222, 1229, 1237, 1240, 1244, 1245, 1250, 1253, 1256, 1257, 1261, 1267, 1269, 1286, 1287, 1289, 1299, 1308, 1327, 1329, 1330, 1331, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1368, 1372, 1373, 1374, 1375, 1378, 1379, 1382, 1387, 1388, 1389, 1391, 1397, 1399, 1400, 1403, 1404, 1405, 1416, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1435, 1436, 1437, 1439, 1440, 1441, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1457, 1458, 1461, 1466, 1469, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1482, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1524, 1525, 1540, 1553, 1554, 1555, 1573, 1579, 1598, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1622, 1643, 1644, 1650, 1655, 1657, 1661, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1694, 1695, 1697, 1701, 1703, 1712, 1716, 1724, 1728, 1738, 1744, 1747, 1759, 1761, 1762, 1764, 1789, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1810, 1811, 1812, 1816, 1830, 1834, 1837, 1839, 1847, 1850, 1853, 1854, 1858, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937], "lambda": [1, 39, 44, 48, 67, 70, 71, 72, 260, 488, 912, 913, 940, 1129, 1134, 1138, 1139, 1233, 1234, 1235, 1236, 1269, 1386, 1467, 1479, 1569, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1685, 1691, 1693, 1696, 1858, 1872, 1891, 1896, 1897, 1912, 1913, 1921, 1932, 1936], "captur": [1, 11, 13, 14, 16, 20, 25, 27, 29, 34, 72, 679, 972, 974, 1006, 1012, 1017, 1201, 1672, 1673, 1868, 1872, 1877, 1896, 1897, 1900, 1909, 1913, 1916, 1935], "f": [1, 10, 12, 14, 20, 27, 28, 40, 42, 48, 50, 51, 56, 57, 65, 66, 69, 70, 71, 72, 176, 260, 288, 337, 379, 894, 895, 1089, 1091, 1098, 1107, 1128, 1129, 1131, 1132, 1133, 1134, 1138, 1139, 1151, 1198, 1205, 1208, 1209, 1269, 1396, 1398, 1399, 1401, 1430, 1479, 1496, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1520, 1521, 1524, 1525, 1531, 1564, 1566, 1567, 1579, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1747, 1858, 1868, 1870, 1871, 1884, 1885, 1891, 1894, 1896, 1898, 1899, 1900, 1902, 1908, 1909, 1913, 1914, 1925, 1930, 1932, 1936], "three": [1, 2, 6, 9, 24, 42, 46, 47, 64, 66, 69, 72, 887, 1069, 1071, 1151, 1160, 1241, 1244, 1245, 1246, 1261, 1289, 1345, 1360, 1363, 1402, 1425, 1579, 1617, 1657, 1691, 1759, 1871, 1891, 1894, 1895, 1896, 1909, 1913, 1914, 1916, 1921, 1923, 1925, 1930], "anoth": [1, 5, 7, 11, 12, 16, 20, 23, 28, 39, 40, 42, 44, 48, 49, 50, 61, 64, 72, 487, 959, 972, 974, 975, 977, 1122, 1207, 1233, 1234, 1237, 1261, 1373, 1374, 1431, 1440, 1601, 1618, 1755, 1868, 1870, 1871, 1877, 1890, 1891, 1893, 1894, 1896, 1902, 1904, 1908, 1913, 1914, 1922, 1923, 1925, 1931, 1933], "constant": [1, 15, 19, 20, 39, 72, 743, 774, 820, 821, 955, 1054, 1111, 1112, 1113, 1195, 1198, 1202, 1213, 1245, 1270, 1355, 1356, 1357, 1374, 1377, 1384, 1439, 1461, 1481, 1526, 1529, 1567, 1618, 1667, 1683, 1688, 1691, 1837, 1869, 1871, 1890, 1896, 1902, 1906, 1909, 1912, 1925], "boolean": [1, 33, 48, 59, 72, 402, 404, 888, 924, 926, 927, 929, 957, 974, 975, 977, 1076, 1142, 1154, 1187, 1188, 1189, 1190, 1191, 1194, 1222, 1270, 1286, 1291, 1331, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1430, 1469, 1579, 1619, 1622, 1715, 1810, 1811, 1834, 1853, 1854, 1870, 1872, 1896, 1927, 1928, 1930, 1931, 1932, 1933], "flag": [1, 2, 16, 17, 18, 28, 29, 33, 42, 43, 49, 60, 62, 64, 67, 69, 72, 734, 872, 900, 902, 919, 921, 930, 943, 944, 952, 1002, 1122, 1127, 1129, 1130, 1132, 1133, 1134, 1138, 1139, 1155, 1156, 1173, 1179, 1186, 1269, 1289, 1436, 1540, 1541, 1610, 1619, 1622, 1652, 1672, 1673, 1759, 1761, 1766, 1791, 1839, 1851, 1858, 1866, 1868, 1871, 1883, 1891, 1894, 1896, 1905, 1906, 1909, 1913, 1916, 1930, 1931], "inform": [1, 2, 3, 4, 7, 8, 9, 14, 15, 20, 22, 25, 29, 35, 36, 38, 39, 40, 42, 43, 46, 50, 51, 52, 55, 59, 60, 64, 66, 72, 194, 211, 257, 315, 323, 488, 498, 515, 517, 617, 679, 734, 902, 907, 908, 912, 913, 923, 1075, 1106, 1108, 1128, 1173, 1195, 1198, 1214, 1227, 1234, 1243, 1358, 1359, 1360, 1361, 1362, 1363, 1391, 1400, 1426, 1427, 1428, 1430, 1436, 1445, 1457, 1473, 1475, 1477, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1521, 1540, 1579, 1598, 1599, 1600, 1610, 1643, 1655, 1667, 1714, 1741, 1761, 1766, 1791, 1851, 1868, 1871, 1877, 1878, 1886, 1887, 1891, 1893, 1894, 1895, 1896, 1901, 1902, 1905, 1909, 1910, 1913, 1915, 1916, 1928, 1930, 1931, 1932, 1935, 1937], "well": [1, 3, 5, 7, 9, 12, 15, 17, 21, 23, 33, 40, 42, 59, 64, 69, 70, 72, 616, 790, 821, 824, 860, 1014, 1132, 1133, 1198, 1202, 1208, 1213, 1233, 1234, 1235, 1237, 1243, 1256, 1261, 1307, 1348, 1349, 1350, 1366, 1400, 1430, 1469, 1550, 1551, 1610, 1667, 1715, 1868, 1871, 1878, 1884, 1886, 1890, 1891, 1894, 1896, 1897, 1899, 1902, 1904, 1906, 1909, 1913, 1916, 1919, 1921, 1923, 1925, 1929, 1930, 1933], "relat": [1, 6, 7, 9, 39, 42, 50, 63, 64, 69, 679, 1151, 1237, 1377, 1461, 1481, 1610, 1705, 1886, 1891, 1907, 1913, 1921, 1925, 1926, 1932, 1936], "mechan": [1, 8, 11, 42, 53, 57, 59, 72, 878, 1075, 1173, 1198, 1430, 1579, 1655, 1761, 1830, 1866, 1883, 1886, 1895, 1896, 1901, 1902, 1919, 1921, 1922], "confus": [1, 8, 17, 20, 1198, 1430, 1891, 1894, 1913, 1925], "receiv": [1, 7, 9, 14, 20, 29, 39, 42, 46, 48, 69, 71, 1028, 1198, 1430, 1606, 1607, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1700, 1871, 1881, 1883, 1890, 1891, 1904, 1914, 1921, 1922, 1923, 1925], "initi": [1, 3, 4, 8, 11, 20, 25, 28, 35, 36, 39, 40, 44, 46, 50, 52, 59, 60, 62, 64, 91, 496, 579, 711, 712, 713, 714, 715, 716, 719, 729, 730, 731, 732, 744, 745, 755, 759, 763, 860, 861, 878, 959, 974, 982, 1003, 1008, 1009, 1012, 1013, 1038, 1145, 1174, 1196, 1198, 1210, 1211, 1269, 1270, 1287, 1348, 1349, 1350, 1351, 1353, 1361, 1362, 1363, 1367, 1373, 1374, 1382, 1383, 1385, 1393, 1394, 1395, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1430, 1438, 1445, 1447, 1469, 1479, 1520, 1601, 1610, 1612, 1613, 1617, 1619, 1622, 1650, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1701, 1755, 1756, 1757, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1866, 1869, 1870, 1871, 1881, 1886, 1889, 1891, 1894, 1895, 1896, 1901, 1908, 1909, 1912, 1913, 1914, 1920, 1921, 1922], "memori": [1, 2, 3, 5, 11, 15, 16, 18, 19, 21, 24, 28, 31, 40, 44, 46, 48, 49, 64, 68, 72, 153, 158, 173, 175, 178, 181, 182, 183, 198, 209, 212, 242, 256, 269, 299, 327, 333, 339, 341, 342, 395, 446, 447, 448, 449, 450, 459, 464, 487, 499, 500, 523, 524, 579, 602, 616, 733, 762, 877, 879, 892, 898, 907, 908, 934, 949, 952, 972, 973, 976, 979, 980, 982, 996, 997, 1006, 1007, 1010, 1014, 1016, 1017, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1035, 1036, 1037, 1041, 1071, 1072, 1073, 1074, 1122, 1123, 1124, 1126, 1127, 1128, 1133, 1135, 1139, 1198, 1215, 1243, 1269, 1306, 1307, 1308, 1315, 1374, 1400, 1401, 1430, 1473, 1474, 1475, 1477, 1579, 1597, 1610, 1617, 1643, 1655, 1662, 1664, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1724, 1725, 1727, 1728, 1729, 1730, 1830, 1851, 1858, 1864, 1866, 1868, 1879, 1883, 1885, 1886, 1891, 1896, 1904, 1909, 1914, 1915, 1916, 1921, 1925, 1927, 1928, 1929, 1931, 1932], "overlap": [1, 14, 16, 28, 39, 40, 42, 46, 64, 72, 877, 907, 908, 1074, 1128, 1195, 1377, 1481, 1610, 1812, 1851, 1894, 1895, 1928], "dens": [1, 14, 46, 221, 544, 545, 582, 583, 584, 585, 586, 587, 921, 930, 1155, 1156, 1217, 1270, 1686, 1787, 1790, 1793, 1794, 1797, 1798, 1799, 1800, 1802, 1803, 1808, 1817, 1851, 1886, 1906, 1925, 1928], "stride": [1, 13, 14, 15, 29, 31, 141, 224, 256, 341, 446, 447, 448, 449, 450, 499, 520, 543, 580, 582, 583, 584, 586, 587, 616, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 767, 768, 771, 772, 773, 781, 782, 864, 877, 921, 930, 1072, 1074, 1084, 1089, 1107, 1125, 1126, 1155, 1156, 1162, 1198, 1207, 1211, 1217, 1268, 1284, 1302, 1343, 1344, 1345, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1398, 1399, 1406, 1407, 1408, 1409, 1410, 1411, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1442, 1481, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1523, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1558, 1597, 1610, 1661, 1720, 1721, 1724, 1726, 1727, 1728, 1730, 1731, 1738, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1836, 1841, 1843, 1856, 1863, 1867, 1869, 1872, 1884, 1909, 1911, 1921, 1925, 1927, 1928, 1930, 1931, 1932], "thu": [1, 31, 39, 42, 48, 60, 64, 72, 784, 821, 824, 853, 1071, 1092, 1261, 1292, 1370, 1482, 1598, 1610, 1672, 1673, 1683, 1801, 1868, 1871, 1878, 1879, 1891, 1893, 1896, 1898, 1899, 1901, 1902, 1909, 1916, 1921, 1925, 1929, 1931, 1932], "rowmajor": [1, 1610], "contigu": [1, 31, 40, 44, 333, 499, 520, 616, 1376, 1433, 1569, 1610, 1732, 1738, 1816, 1869, 1885, 1886, 1911, 1918, 1925, 1927, 1929], "create_graph": [1, 153, 892, 900, 901, 902, 903, 904, 905, 906, 1869, 1890], "preserv": [1, 11, 15, 39, 48, 64, 72, 499, 778, 784, 853, 875, 878, 1112, 1113, 1128, 1198, 1202, 1208, 1430, 1431, 1440, 1482, 1540, 1598, 1668, 1747, 1751, 1789, 1830, 1868, 1879, 1884, 1886, 1889, 1894, 1897, 1906, 1909, 1921, 1925, 1928], "preexist": [1, 14, 15], "behavior": [1, 2, 7, 15, 17, 20, 29, 33, 38, 40, 42, 43, 44, 46, 48, 49, 52, 57, 60, 64, 68, 69, 71, 72, 256, 321, 472, 513, 543, 616, 686, 784, 792, 825, 877, 891, 928, 934, 938, 951, 1066, 1071, 1074, 1116, 1123, 1124, 1128, 1198, 1208, 1211, 1213, 1243, 1250, 1254, 1267, 1268, 1269, 1284, 1292, 1299, 1367, 1370, 1391, 1400, 1430, 1445, 1469, 1482, 1494, 1529, 1597, 1598, 1601, 1602, 1610, 1611, 1654, 1656, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1709, 1715, 1731, 1738, 1780, 1816, 1837, 1851, 1865, 1868, 1872, 1873, 1875, 1877, 1884, 1886, 1892, 1894, 1896, 1897, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1917, 1918, 1921, 1926, 1929], "let": [1, 7, 8, 11, 12, 15, 19, 20, 22, 28, 29, 39, 40, 47, 48, 60, 69, 72, 487, 496, 947, 1151, 1198, 1217, 1227, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1243, 1244, 1247, 1249, 1256, 1258, 1260, 1261, 1430, 1610, 1617, 1830, 1875, 1884, 1885, 1891, 1894, 1895, 1896, 1897, 1902, 1904, 1905, 1906, 1907, 1908, 1913, 1922, 1923, 1925, 1930], "first": [1, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 20, 25, 28, 29, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 56, 59, 60, 64, 70, 72, 219, 256, 292, 588, 609, 685, 688, 690, 693, 759, 792, 793, 813, 853, 856, 858, 873, 874, 883, 888, 889, 890, 891, 906, 907, 920, 924, 925, 927, 928, 929, 932, 934, 936, 950, 971, 974, 985, 1059, 1061, 1062, 1063, 1068, 1071, 1076, 1089, 1091, 1110, 1124, 1129, 1130, 1132, 1133, 1134, 1138, 1139, 1142, 1151, 1154, 1162, 1163, 1164, 1175, 1187, 1196, 1205, 1210, 1211, 1217, 1222, 1227, 1230, 1237, 1253, 1256, 1263, 1264, 1266, 1269, 1270, 1286, 1292, 1295, 1298, 1299, 1300, 1302, 1318, 1320, 1326, 1331, 1334, 1338, 1344, 1345, 1351, 1359, 1360, 1362, 1363, 1373, 1374, 1376, 1381, 1382, 1396, 1399, 1400, 1415, 1422, 1424, 1425, 1445, 1458, 1511, 1597, 1601, 1610, 1619, 1620, 1622, 1633, 1643, 1649, 1672, 1673, 1674, 1675, 1676, 1682, 1685, 1686, 1690, 1694, 1697, 1699, 1705, 1715, 1716, 1742, 1743, 1751, 1779, 1793, 1796, 1801, 1831, 1832, 1836, 1841, 1843, 1849, 1852, 1855, 1858, 1860, 1865, 1868, 1870, 1871, 1878, 1880, 1883, 1884, 1886, 1890, 1891, 1894, 1896, 1898, 1899, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1912, 1914, 1915, 1916, 1921, 1922, 1923, 1925, 1926, 1930, 1934, 1936], "accord": [1, 9, 29, 50, 796, 860, 861, 879, 922, 934, 1069, 1161, 1258, 1291, 1320, 1338, 1374, 1601, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1691, 1697, 1716, 1780, 1804, 1831, 1859, 1871, 1881, 1885, 1886, 1889, 1902, 1906, 1908, 1913, 1923, 1932], "retain": [1, 9, 42, 692, 694, 695, 698, 873, 874, 879, 1202, 1219, 1250, 1254, 1267, 1285, 1295, 1297, 1298, 1300, 1303, 1325, 1326, 1327, 1328, 1657, 1713, 1716, 1747, 1810, 1811, 1815, 1840, 1841, 1842, 1843, 1853, 1854, 1883, 1904, 1925], "over": [1, 9, 11, 14, 15, 16, 20, 21, 29, 39, 40, 42, 43, 47, 48, 50, 57, 60, 64, 65, 66, 67, 68, 69, 70, 72, 482, 679, 696, 737, 738, 739, 740, 741, 742, 765, 766, 771, 772, 773, 781, 782, 891, 916, 939, 983, 1028, 1030, 1034, 1048, 1049, 1050, 1051, 1052, 1053, 1071, 1127, 1131, 1133, 1137, 1139, 1151, 1159, 1198, 1213, 1230, 1250, 1254, 1266, 1267, 1269, 1277, 1297, 1299, 1328, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1374, 1377, 1378, 1379, 1385, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1402, 1418, 1421, 1422, 1423, 1424, 1425, 1430, 1433, 1434, 1435, 1437, 1444, 1458, 1461, 1462, 1464, 1469, 1478, 1481, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1513, 1524, 1525, 1541, 1547, 1550, 1551, 1553, 1554, 1555, 1564, 1565, 1572, 1579, 1605, 1614, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1720, 1721, 1736, 1795, 1797, 1810, 1811, 1812, 1815, 1832, 1847, 1853, 1854, 1858, 1871, 1881, 1883, 1884, 1885, 1890, 1892, 1893, 1895, 1896, 1897, 1899, 1902, 1904, 1905, 1912, 1921, 1922, 1925, 1933], "time": [1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 28, 29, 33, 39, 40, 42, 43, 44, 46, 48, 49, 50, 56, 59, 60, 61, 69, 71, 72, 91, 292, 315, 488, 493, 616, 679, 684, 685, 686, 687, 688, 689, 690, 693, 744, 745, 755, 759, 763, 767, 768, 798, 800, 823, 840, 876, 906, 912, 913, 917, 920, 932, 940, 942, 952, 963, 970, 974, 975, 977, 1017, 1030, 1049, 1052, 1063, 1092, 1093, 1094, 1100, 1111, 1112, 1113, 1121, 1124, 1133, 1134, 1135, 1138, 1139, 1187, 1195, 1198, 1205, 1210, 1213, 1214, 1218, 1223, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1242, 1243, 1244, 1247, 1249, 1253, 1256, 1258, 1260, 1261, 1269, 1270, 1292, 1302, 1319, 1320, 1322, 1332, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1374, 1377, 1378, 1379, 1382, 1393, 1394, 1395, 1400, 1402, 1416, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1442, 1443, 1445, 1466, 1469, 1481, 1482, 1483, 1484, 1494, 1497, 1498, 1524, 1525, 1569, 1570, 1571, 1587, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1617, 1618, 1620, 1622, 1656, 1672, 1673, 1693, 1703, 1704, 1715, 1737, 1743, 1793, 1807, 1812, 1813, 1832, 1858, 1866, 1870, 1871, 1872, 1877, 1879, 1883, 1889, 1891, 1893, 1895, 1896, 1898, 1899, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1930, 1935], "4": [1, 3, 11, 13, 14, 16, 17, 20, 25, 29, 31, 36, 37, 39, 40, 42, 44, 46, 48, 49, 50, 57, 59, 69, 72, 194, 211, 244, 256, 291, 313, 315, 317, 319, 323, 403, 404, 446, 447, 472, 484, 488, 493, 496, 499, 513, 517, 536, 543, 555, 557, 559, 583, 584, 606, 616, 682, 683, 684, 685, 688, 690, 691, 692, 694, 695, 696, 698, 738, 740, 741, 742, 745, 747, 756, 759, 772, 773, 823, 864, 873, 874, 875, 879, 880, 881, 882, 883, 884, 886, 887, 898, 900, 903, 904, 905, 920, 923, 926, 930, 931, 932, 936, 938, 941, 942, 945, 946, 947, 950, 960, 965, 966, 967, 968, 971, 1051, 1054, 1061, 1063, 1065, 1066, 1069, 1070, 1071, 1074, 1076, 1086, 1087, 1089, 1091, 1099, 1105, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1121, 1122, 1124, 1127, 1129, 1137, 1138, 1139, 1140, 1141, 1142, 1151, 1154, 1158, 1159, 1160, 1161, 1163, 1164, 1168, 1172, 1175, 1187, 1189, 1195, 1204, 1209, 1211, 1218, 1219, 1220, 1221, 1222, 1223, 1227, 1229, 1230, 1236, 1238, 1240, 1241, 1242, 1245, 1247, 1250, 1252, 1254, 1256, 1258, 1260, 1263, 1264, 1265, 1267, 1268, 1271, 1273, 1274, 1279, 1281, 1282, 1284, 1286, 1291, 1292, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1318, 1319, 1320, 1328, 1329, 1330, 1331, 1338, 1343, 1354, 1355, 1356, 1359, 1360, 1362, 1363, 1371, 1373, 1374, 1375, 1377, 1381, 1382, 1400, 1401, 1426, 1427, 1433, 1435, 1437, 1442, 1443, 1445, 1451, 1452, 1453, 1454, 1455, 1469, 1481, 1482, 1483, 1484, 1485, 1486, 1494, 1496, 1505, 1508, 1520, 1521, 1529, 1540, 1564, 1567, 1570, 1571, 1597, 1598, 1599, 1600, 1601, 1610, 1617, 1622, 1633, 1645, 1646, 1648, 1650, 1656, 1657, 1658, 1660, 1662, 1664, 1669, 1682, 1687, 1688, 1694, 1698, 1699, 1700, 1704, 1708, 1709, 1712, 1713, 1715, 1716, 1718, 1722, 1724, 1726, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1742, 1743, 1744, 1746, 1747, 1751, 1764, 1771, 1773, 1774, 1779, 1780, 1782, 1784, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1812, 1815, 1818, 1819, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1837, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1849, 1850, 1851, 1852, 1855, 1856, 1857, 1858, 1859, 1860, 1864, 1867, 1868, 1869, 1870, 1871, 1872, 1878, 1883, 1885, 1886, 1889, 1891, 1892, 1894, 1895, 1896, 1902, 1904, 1907, 1908, 1909, 1913, 1914, 1916, 1918, 1921, 1925, 1926, 1928, 1929, 1930, 1931, 1932], "fact": [1, 3, 8, 11, 15, 22, 64, 495, 921, 930, 964, 1151, 1155, 1156, 1233, 1234, 1261, 1868, 1896, 1899, 1909, 1922, 1925], "reset": [1, 759, 819, 824, 892, 972, 1020, 1022, 1035, 1036, 1037, 1198, 1382, 1430, 1446, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1705, 1722, 1817, 1881, 1909, 1920], "phase": [1, 16, 29, 40, 792, 1233, 1234, 1697, 1816, 1869, 1908], "recreat": [1, 28, 1891], "valid": [1, 14, 20, 23, 29, 42, 48, 57, 59, 72, 86, 87, 746, 747, 756, 790, 943, 955, 958, 1014, 1071, 1196, 1198, 1199, 1219, 1233, 1234, 1243, 1244, 1245, 1256, 1261, 1292, 1358, 1359, 1360, 1504, 1505, 1506, 1529, 1601, 1628, 1633, 1637, 1666, 1667, 1687, 1688, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1715, 1868, 1869, 1870, 1871, 1885, 1886, 1891, 1894, 1896, 1900, 1909, 1912, 1915, 1921, 1922], "altern": [1, 9, 16, 25, 39, 42, 72, 679, 813, 1131, 1132, 1160, 1205, 1269, 1458, 1475, 1477, 1548, 1610, 1662, 1686, 1758, 1851, 1864, 1865, 1872, 1891, 1900, 1902, 1905, 1906, 1908], "never": [1, 5, 7, 11, 14, 40, 42, 59, 60, 224, 225, 795, 878, 940, 1195, 1244, 1245, 1256, 1269, 1610, 1643, 1891, 1894, 1896, 1913, 1914, 1921, 1932], "long": [1, 7, 9, 16, 25, 29, 39, 59, 71, 733, 748, 750, 751, 752, 753, 755, 762, 780, 1128, 1174, 1298, 1303, 1326, 1353, 1366, 1374, 1400, 1401, 1437, 1513, 1666, 1714, 1827, 1831, 1841, 1843, 1848, 1866, 1871, 1878, 1883, 1884, 1885, 1891, 1892, 1894, 1896, 1898, 1904, 1906, 1909, 1913, 1915, 1920, 1927, 1928, 1930, 1931], "hard": [1, 7, 8, 16, 17, 19, 42, 47, 60, 954, 1071, 1270, 1386, 1531, 1532, 1868, 1869, 1870, 1891, 1909, 1913], "matter": [1, 4, 42, 64, 896, 1059, 1071, 1205, 1208, 1213, 1610, 1886, 1891, 1913], "discourag": [1, 1040, 1044, 1891, 1921], "aggress": [1, 16, 1195, 1891, 1921], "buffer": [1, 4, 16, 39, 40, 42, 64, 68, 879, 985, 1017, 1124, 1127, 1137, 1198, 1205, 1208, 1219, 1269, 1348, 1349, 1350, 1367, 1403, 1404, 1405, 1430, 1469, 1603, 1610, 1612, 1619, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1650, 1652, 1665, 1683, 1685, 1747, 1789, 1834, 1870, 1887, 1891, 1895, 1896, 1902, 1907, 1909, 1914], "free": [1, 7, 14, 42, 44, 48, 50, 59, 60, 64, 72, 1023, 1041, 1201, 1213, 1270, 1879, 1889, 1891, 1894, 1896, 1898, 1904, 1908, 1909, 1925], "reus": [1, 11, 14, 16, 29, 42, 47, 72, 487, 1867, 1891, 1894, 1921], "effici": [1, 2, 3, 8, 31, 39, 48, 64, 65, 70, 153, 759, 892, 897, 906, 942, 1135, 1143, 1215, 1253, 1270, 1289, 1338, 1369, 1370, 1371, 1374, 1375, 1382, 1436, 1442, 1443, 1477, 1579, 1879, 1886, 1891, 1895, 1896, 1899, 1903, 1904, 1905, 1912, 1914, 1916, 1921, 1922, 1925, 1928, 1929, 1933], "few": [1, 7, 8, 14, 16, 19, 20, 21, 22, 25, 29, 40, 44, 50, 1071, 1128, 1374, 1610, 1865, 1871, 1891, 1894, 1896, 1898, 1900, 1905, 1908, 1909, 1912, 1914, 1916, 1919, 1925, 1929, 1931, 1933], "occas": [1, 7, 1891], "actual": [1, 8, 14, 15, 16, 19, 20, 21, 27, 44, 50, 52, 64, 69, 72, 789, 963, 1089, 1107, 1209, 1213, 1361, 1362, 1363, 1529, 1610, 1634, 1664, 1686, 1691, 1865, 1870, 1871, 1884, 1891, 1894, 1895, 1896, 1899, 1904, 1908, 1916, 1921, 1927, 1932], "signific": [1, 3, 19, 23, 44, 1699, 1891, 1894, 1925], "amount": [1, 2, 3, 4, 7, 14, 22, 25, 29, 39, 42, 44, 50, 59, 72, 908, 996, 1022, 1024, 1028, 1195, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1377, 1418, 1433, 1481, 1512, 1627, 1628, 1630, 1631, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1885, 1891, 1893, 1894, 1897, 1898, 1900, 1921, 1925], "heavi": [1, 15, 42, 1891, 1908], "pressur": [1, 1891], "might": [1, 3, 4, 9, 11, 14, 15, 16, 17, 19, 20, 28, 29, 33, 34, 36, 42, 44, 46, 48, 59, 69, 71, 72, 153, 487, 543, 892, 971, 1213, 1214, 1529, 1610, 1611, 1865, 1868, 1881, 1886, 1891, 1893, 1894, 1895, 1896, 1899, 1901, 1906, 1909, 1913, 1914, 1916, 1921, 1922, 1923, 1925, 1929, 1931, 1932], "keep": [1, 3, 7, 14, 15, 20, 25, 39, 40, 44, 46, 50, 59, 64, 975, 1269, 1348, 1349, 1350, 1354, 1373, 1393, 1394, 1395, 1439, 1469, 1529, 1540, 1610, 1629, 1668, 1736, 1865, 1866, 1868, 1883, 1885, 1886, 1891, 1894, 1895, 1897, 1898, 1899, 1904, 1910, 1912, 1916, 1921, 1922, 1923], "track": [1, 14, 15, 16, 20, 24, 27, 50, 337, 980, 1020, 1022, 1035, 1036, 1037, 1127, 1128, 1173, 1299, 1348, 1349, 1350, 1393, 1394, 1395, 1403, 1404, 1405, 1412, 1413, 1414, 1469, 1610, 1629, 1881, 1883, 1885, 1886, 1891, 1894, 1896, 1897, 1898, 1901, 1902, 1910, 1912, 1914, 1915, 1922, 1923, 1925], "save": [1, 5, 7, 11, 16, 31, 34, 40, 42, 44, 46, 64, 496, 836, 888, 889, 898, 1135, 1197, 1198, 1203, 1205, 1213, 1215, 1269, 1430, 1610, 1664, 1665, 1687, 1693, 1696, 1700, 1868, 1869, 1880, 1885, 1896, 1897, 1902, 1904, 1906, 1909, 1911, 1912, 1913, 1915, 1925, 1930, 1934], "afterward": [1, 1430, 1601, 1610, 1925], "start": [1, 3, 4, 8, 9, 14, 16, 21, 24, 39, 40, 42, 44, 50, 56, 58, 59, 60, 61, 64, 68, 71, 72, 404, 434, 435, 496, 537, 697, 864, 1020, 1022, 1033, 1035, 1036, 1093, 1094, 1110, 1124, 1196, 1210, 1223, 1268, 1284, 1329, 1330, 1338, 1343, 1344, 1345, 1374, 1376, 1423, 1424, 1425, 1431, 1433, 1521, 1567, 1610, 1624, 1628, 1630, 1643, 1669, 1691, 1697, 1731, 1762, 1785, 1798, 1799, 1800, 1802, 1803, 1865, 1866, 1867, 1869, 1870, 1875, 1878, 1883, 1885, 1891, 1892, 1894, 1895, 1898, 1902, 1903, 1904, 1908, 1909, 1912, 1915, 1921, 1922, 1923, 1925], "sure": [1, 7, 9, 16, 19, 29, 39, 42, 44, 49, 51, 60, 62, 67, 72, 860, 861, 892, 1075, 1122, 1173, 1202, 1213, 1214, 1270, 1610, 1655, 1693, 1834, 1871, 1884, 1891, 1895, 1898, 1899, 1908, 1909, 1915, 1916, 1921, 1922, 1923, 1925, 1930], "longer": [1, 11, 29, 42, 61, 68, 69, 686, 889, 907, 908, 1195, 1202, 1610, 1654, 1657, 1881, 1891, 1894, 1921, 1923], "find": [1, 7, 14, 15, 16, 17, 20, 21, 22, 28, 29, 33, 42, 59, 69, 72, 84, 1071, 1151, 1219, 1270, 1361, 1362, 1363, 1400, 1667, 1705, 1716, 1751, 1817, 1865, 1879, 1883, 1885, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1904, 1906, 1909, 1911, 1916, 1921, 1925, 1928, 1930, 1932, 1934, 1936], "quick": [1, 7, 25, 67, 1878, 1902], "guid": [1, 8, 9, 20, 21, 25, 27, 39, 84, 85, 1209, 1654, 1866, 1894, 1897, 1913, 1916], "var": [1, 14, 20, 29, 52, 57, 59, 62, 1348, 1349, 1350, 1384, 1385, 1393, 1394, 1395, 1402, 1469, 1526, 1719, 1854, 1867, 1869, 1871, 1884, 1911], "thing": [1, 3, 7, 8, 11, 15, 16, 20, 22, 25, 27, 29, 42, 69, 72, 1128, 1207, 1299, 1346, 1531, 1790, 1870, 1891, 1894, 1896, 1897, 1898, 1899, 1904, 1909, 1913, 1916, 1917, 1923], "detach": [1, 5, 28, 225, 449, 459, 949, 1127, 1198, 1353, 1430, 1513, 1531, 1793, 1830, 1868, 1869, 1884, 1886, 1898, 1909, 1911, 1918, 1925, 1929, 1931], "register_hook": [1, 1884, 1891], "name": [1, 2, 3, 12, 13, 16, 20, 22, 24, 28, 29, 33, 40, 42, 47, 48, 50, 52, 53, 56, 57, 59, 61, 64, 72, 679, 696, 746, 747, 756, 791, 813, 814, 815, 816, 823, 839, 853, 857, 916, 958, 973, 1000, 1127, 1137, 1196, 1198, 1199, 1205, 1208, 1213, 1214, 1228, 1233, 1234, 1240, 1241, 1243, 1244, 1245, 1246, 1256, 1257, 1259, 1261, 1262, 1269, 1430, 1480, 1603, 1608, 1609, 1610, 1617, 1618, 1619, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1651, 1652, 1654, 1666, 1667, 1747, 1757, 1852, 1865, 1866, 1868, 1869, 1871, 1872, 1875, 1877, 1880, 1881, 1883, 1889, 1891, 1894, 1895, 1896, 1899, 1901, 1902, 1909, 1911, 1913, 1914, 1915, 1921, 1922, 1927, 1930, 1932, 1933, 1934, 1935, 1936, 1937], "factori": [1, 2, 15, 31, 48, 50, 53, 57, 69, 823, 1071, 1655, 1667, 1755, 1866, 1869, 1885, 1894, 1911, 1928], "ones": [1, 16, 18, 22, 28, 29, 39, 42, 46, 48, 64, 69, 70, 71, 72, 153, 256, 315, 404, 446, 447, 449, 515, 793, 858, 892, 901, 903, 904, 905, 906, 907, 922, 934, 952, 1054, 1062, 1084, 1127, 1134, 1135, 1138, 1173, 1195, 1198, 1209, 1218, 1244, 1260, 1269, 1347, 1373, 1377, 1384, 1385, 1402, 1430, 1434, 1435, 1437, 1439, 1481, 1520, 1579, 1597, 1601, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1647, 1649, 1652, 1662, 1666, 1719, 1736, 1754, 1785, 1833, 1837, 1861, 1869, 1871, 1873, 1884, 1885, 1891, 1892, 1894, 1896, 1903, 1905, 1906, 1909, 1911, 1912, 1913, 1916, 1921, 1923, 1926, 1928, 1931], "autograd_tensor": 1, "base": [1, 3, 7, 9, 13, 14, 16, 18, 19, 20, 33, 34, 39, 42, 43, 44, 46, 47, 48, 50, 52, 57, 59, 60, 61, 64, 69, 72, 77, 790, 795, 799, 801, 819, 820, 821, 823, 824, 860, 861, 898, 919, 952, 970, 1032, 1033, 1069, 1071, 1114, 1151, 1161, 1200, 1211, 1223, 1261, 1272, 1274, 1276, 1284, 1367, 1430, 1433, 1434, 1435, 1439, 1473, 1475, 1477, 1546, 1579, 1610, 1614, 1615, 1617, 1624, 1628, 1630, 1669, 1670, 1671, 1672, 1673, 1674, 1683, 1684, 1685, 1686, 1712, 1722, 1747, 1761, 1816, 1817, 1831, 1841, 1843, 1859, 1866, 1869, 1871, 1893, 1894, 1895, 1896, 1902, 1910, 1914, 1915, 1916, 1921, 1922, 1925, 1926, 1929, 1930, 1932, 1934, 1935], "static": [1, 3, 8, 11, 13, 14, 18, 20, 33, 43, 48, 50, 64, 793, 814, 816, 825, 831, 856, 858, 860, 888, 889, 890, 891, 952, 1211, 1473, 1610, 1791, 1868, 1869, 1870, 1871, 1894, 1901, 1910, 1914, 1917, 1921, 1927], "Then": [1, 11, 17, 42, 60, 72, 1377, 1481, 1619, 1667, 1891, 1892, 1895, 1896, 1897, 1905, 1906, 1909, 1912, 1913, 1921, 1922, 1934], "op": [1, 4, 11, 12, 15, 16, 17, 18, 19, 20, 22, 28, 29, 42, 72, 84, 153, 503, 523, 603, 756, 791, 792, 793, 822, 825, 853, 860, 861, 892, 898, 906, 942, 952, 978, 993, 995, 999, 1000, 1014, 1015, 1040, 1044, 1046, 1128, 1148, 1199, 1211, 1213, 1214, 1269, 1275, 1446, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1703, 1762, 1839, 1866, 1867, 1871, 1875, 1877, 1878, 1879, 1881, 1884, 1885, 1893, 1894, 1895, 1896, 1904, 1910, 1913, 1915, 1916, 1917, 1918, 1919, 1925, 1927, 1929, 1931, 1935], "ctx": [1, 57, 888, 889, 890, 896, 897, 898, 899, 1890, 1896, 1897, 1909], "gradcheck": [1, 908, 1866, 1896], "extend": [1, 39, 42, 44, 48, 51, 61, 72, 860, 889, 891, 898, 1432, 1441, 1866, 1875, 1886, 1891, 1901, 1903, 1904, 1909, 1911, 1913, 1919, 1925, 1936], "staticmethod": [1, 889, 891, 896, 897, 898, 899, 1871, 1890, 1896, 1909, 1921], "result": [1, 3, 4, 5, 7, 8, 9, 12, 15, 18, 20, 21, 24, 25, 28, 29, 33, 36, 39, 40, 42, 44, 48, 50, 52, 57, 60, 64, 69, 70, 71, 72, 86, 156, 224, 225, 256, 257, 317, 337, 400, 496, 498, 555, 582, 583, 584, 586, 587, 617, 685, 686, 687, 688, 689, 692, 694, 695, 696, 698, 759, 792, 876, 878, 894, 895, 900, 901, 902, 903, 904, 905, 907, 908, 920, 923, 934, 938, 943, 949, 951, 952, 955, 966, 968, 984, 986, 988, 1014, 1015, 1028, 1050, 1051, 1052, 1053, 1054, 1066, 1071, 1089, 1092, 1098, 1107, 1114, 1116, 1119, 1123, 1124, 1127, 1128, 1129, 1132, 1133, 1138, 1139, 1143, 1159, 1160, 1162, 1175, 1189, 1198, 1201, 1202, 1209, 1213, 1214, 1216, 1218, 1219, 1223, 1237, 1239, 1241, 1242, 1250, 1254, 1256, 1258, 1259, 1260, 1267, 1277, 1278, 1285, 1295, 1297, 1298, 1299, 1300, 1302, 1303, 1325, 1328, 1367, 1369, 1370, 1371, 1375, 1377, 1382, 1396, 1400, 1430, 1436, 1445, 1474, 1475, 1476, 1477, 1481, 1511, 1529, 1540, 1594, 1597, 1598, 1610, 1617, 1619, 1652, 1655, 1656, 1657, 1658, 1667, 1697, 1703, 1705, 1712, 1713, 1716, 1722, 1735, 1741, 1756, 1784, 1794, 1796, 1797, 1808, 1810, 1811, 1812, 1815, 1816, 1817, 1826, 1830, 1831, 1836, 1837, 1839, 1840, 1842, 1853, 1854, 1858, 1868, 1869, 1870, 1871, 1878, 1879, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1909, 1910, 1912, 1914, 1915, 1917, 1918, 1921, 1922, 1925, 1928, 1930, 1931, 1932, 1935, 1936], "save_for_backward": [1, 889, 897, 899, 1890, 1891, 1896, 1897, 1909], "grad_output": [1, 888, 896, 906, 908, 912, 913, 1198, 1430, 1606, 1607, 1867, 1869, 1891, 1894, 1896, 1897, 1902], "saved_tensor": [1, 897, 898, 899, 1890, 1891, 1896, 1897], "avail": [1, 2, 5, 8, 9, 16, 19, 21, 29, 33, 34, 39, 42, 50, 59, 60, 84, 85, 994, 996, 997, 1008, 1011, 1018, 1019, 1038, 1039, 1041, 1071, 1204, 1261, 1262, 1287, 1473, 1482, 1540, 1579, 1598, 1705, 1759, 1812, 1817, 1851, 1865, 1866, 1868, 1870, 1871, 1875, 1878, 1883, 1891, 1894, 1896, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1912, 1913, 1915, 1916, 1917, 1921, 1935, 1936], "cost": [1, 3, 4, 8, 9, 18, 23, 29, 40, 64, 942, 952, 1253, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1579, 1755, 1894, 1906, 1917, 1922, 1928], "both": [1, 2, 3, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 26, 29, 33, 39, 40, 42, 43, 44, 47, 48, 52, 57, 58, 59, 60, 64, 71, 72, 100, 341, 728, 767, 768, 771, 772, 773, 792, 850, 891, 895, 901, 902, 903, 904, 905, 920, 957, 970, 995, 1066, 1087, 1117, 1118, 1119, 1127, 1141, 1143, 1151, 1158, 1175, 1188, 1189, 1195, 1198, 1211, 1219, 1220, 1268, 1284, 1292, 1298, 1311, 1312, 1343, 1344, 1348, 1349, 1350, 1355, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1385, 1391, 1393, 1394, 1395, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1423, 1424, 1425, 1430, 1436, 1469, 1477, 1481, 1482, 1485, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1553, 1554, 1555, 1579, 1610, 1622, 1652, 1672, 1673, 1697, 1720, 1721, 1790, 1791, 1793, 1812, 1816, 1836, 1837, 1868, 1870, 1871, 1878, 1884, 1885, 1887, 1890, 1891, 1892, 1896, 1897, 1899, 1902, 1905, 1906, 1907, 1909, 1913, 1914, 1916, 1919, 1921, 1923, 1925, 1926, 1932, 1934, 1935], "cpu": [1, 4, 5, 11, 15, 19, 22, 24, 25, 26, 29, 33, 35, 39, 42, 44, 64, 91, 122, 199, 291, 328, 337, 446, 447, 448, 449, 450, 459, 579, 588, 864, 879, 917, 921, 930, 968, 974, 984, 985, 986, 988, 1072, 1074, 1084, 1089, 1107, 1119, 1124, 1125, 1148, 1149, 1155, 1156, 1198, 1205, 1207, 1208, 1217, 1227, 1229, 1233, 1234, 1235, 1236, 1238, 1240, 1243, 1245, 1246, 1252, 1255, 1258, 1261, 1262, 1268, 1269, 1284, 1287, 1298, 1367, 1373, 1430, 1473, 1594, 1610, 1614, 1615, 1643, 1644, 1658, 1661, 1715, 1724, 1726, 1728, 1730, 1731, 1755, 1760, 1762, 1763, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1793, 1798, 1799, 1800, 1801, 1802, 1803, 1816, 1830, 1831, 1832, 1841, 1843, 1848, 1851, 1863, 1866, 1868, 1869, 1871, 1875, 1879, 1883, 1884, 1886, 1894, 1896, 1897, 1900, 1902, 1905, 1906, 1908, 1909, 1911, 1914, 1915, 1917, 1920, 1921, 1925, 1927, 1928, 1931, 1932, 1933], "There": [1, 5, 6, 7, 9, 11, 14, 15, 16, 18, 20, 21, 22, 28, 29, 33, 38, 42, 44, 59, 65, 69, 70, 72, 86, 679, 733, 792, 889, 952, 1128, 1367, 1400, 1445, 1579, 1610, 1650, 1655, 1865, 1868, 1870, 1871, 1877, 1878, 1885, 1891, 1894, 1896, 1897, 1898, 1901, 1904, 1908, 1909, 1913, 1916, 1917, 1921, 1923, 1931, 1933], "moment": [1, 20, 24, 771, 772, 773, 966, 1672, 1673, 1674, 1676, 1682, 1686, 1879, 1883, 1886, 1915, 1921], "nvprof": [1, 4, 914, 1894], "regist": [1, 15, 18, 19, 23, 34, 40, 42, 46, 47, 48, 59, 61, 64, 72, 84, 85, 86, 488, 679, 791, 792, 853, 912, 913, 952, 1017, 1198, 1269, 1430, 1431, 1432, 1440, 1441, 1458, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1620, 1622, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1875, 1881, 1883, 1895, 1896, 1901, 1902, 1907, 1909, 1913, 1921], "activ": [1, 5, 7, 9, 11, 15, 29, 61, 64, 70, 791, 793, 795, 802, 806, 840, 841, 850, 860, 861, 973, 982, 997, 1010, 1028, 1127, 1129, 1139, 1270, 1342, 1369, 1370, 1371, 1375, 1385, 1402, 1429, 1431, 1448, 1459, 1473, 1475, 1477, 1522, 1559, 1582, 1610, 1620, 1621, 1622, 1652, 1657, 1858, 1866, 1867, 1879, 1883, 1894, 1896, 1897, 1902, 1909, 1912, 1914, 1915, 1916, 1917, 1918, 1921, 1925, 1934, 1935], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 1915], "use_devic": 1, "record_shap": [1, 1915], "with_flop": [1, 1915], "profile_memori": [1, 1915], "with_stack": [1, 1915], "with_modul": [1, 1915], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 1915], "hold": [1, 14, 20, 42, 57, 59, 61, 62, 64, 68, 71, 72, 536, 1270, 1377, 1431, 1432, 1440, 1441, 1481, 1601, 1610, 1612, 1613, 1619, 1629, 1643, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1798, 1799, 1800, 1801, 1802, 1803, 1892, 1894, 1896, 1898, 1901, 1904, 1912, 1915, 1921, 1922, 1923, 1925, 1927, 1928, 1930, 1931], "summari": [1, 3, 17, 22, 29, 60, 1029, 1764, 1866, 1881, 1930, 1935], "hood": [1, 15, 20, 71, 1883, 1891, 1894, 1895, 1904, 1913, 1923, 1925], "just": [1, 2, 7, 11, 12, 13, 14, 15, 16, 17, 20, 26, 28, 33, 40, 42, 47, 48, 50, 57, 72, 588, 686, 696, 789, 822, 825, 888, 890, 916, 963, 964, 1213, 1214, 1252, 1255, 1260, 1261, 1287, 1369, 1370, 1371, 1375, 1610, 1622, 1623, 1687, 1755, 1840, 1841, 1842, 1843, 1865, 1868, 1883, 1890, 1891, 1896, 1897, 1899, 1901, 1902, 1903, 1907, 1913, 1914, 1921, 1922, 1925, 1928, 1929, 1931, 1935], "record": [1, 5, 11, 14, 16, 29, 46, 51, 52, 53, 57, 60, 71, 72, 446, 447, 448, 449, 450, 496, 818, 819, 820, 821, 824, 826, 864, 921, 930, 974, 975, 977, 1072, 1073, 1074, 1084, 1089, 1107, 1124, 1125, 1126, 1155, 1156, 1198, 1213, 1217, 1268, 1284, 1311, 1312, 1367, 1430, 1661, 1662, 1664, 1667, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1863, 1864, 1868, 1870, 1886, 1890, 1891, 1894, 1896, 1909, 1910, 1915, 1921, 1930, 1931, 1932, 1933, 1934, 1935], "event": [1, 25, 45, 48, 50, 58, 61, 71, 916, 917, 918, 975, 977, 1028, 1031, 1213, 1214, 1275, 1311, 1312, 1579, 1866, 1881, 1883, 1894, 1915, 1930], "being": [1, 3, 5, 9, 11, 14, 15, 16, 19, 20, 25, 27, 29, 39, 42, 44, 46, 48, 50, 52, 59, 60, 61, 64, 68, 69, 71, 72, 100, 404, 759, 792, 798, 891, 900, 906, 950, 975, 983, 1030, 1034, 1048, 1049, 1084, 1117, 1118, 1128, 1137, 1138, 1187, 1198, 1202, 1287, 1296, 1301, 1346, 1347, 1364, 1366, 1373, 1374, 1378, 1379, 1384, 1390, 1397, 1421, 1422, 1430, 1433, 1434, 1435, 1436, 1437, 1444, 1461, 1462, 1478, 1494, 1501, 1502, 1512, 1524, 1525, 1529, 1541, 1564, 1572, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1636, 1637, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1715, 1716, 1810, 1811, 1812, 1853, 1854, 1868, 1871, 1878, 1881, 1884, 1885, 1886, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1909, 1913, 1916, 1919, 1921, 1922, 1925, 1932, 1934, 1936], "those": [1, 2, 4, 5, 11, 13, 15, 16, 19, 20, 22, 24, 29, 33, 39, 40, 42, 44, 46, 48, 64, 69, 71, 72, 823, 907, 986, 996, 1059, 1061, 1139, 1213, 1255, 1261, 1269, 1308, 1338, 1346, 1347, 1364, 1366, 1374, 1390, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1482, 1501, 1502, 1512, 1521, 1541, 1564, 1572, 1667, 1686, 1759, 1816, 1837, 1858, 1870, 1884, 1885, 1890, 1891, 1894, 1896, 1897, 1900, 1902, 1906, 1907, 1909, 1912, 1919, 1921, 1923], "report": [1, 3, 4, 16, 22, 24, 29, 36, 42, 52, 60, 71, 72, 86, 1028, 1131, 1132, 1134, 1890, 1894, 1914, 1925], "runtim": [1, 3, 5, 16, 23, 33, 42, 72, 826, 877, 916, 1069, 1071, 1161, 1198, 1213, 1430, 1612, 1613, 1668, 1711, 1851, 1859, 1871, 1884, 1885, 1891, 1894, 1896, 1904, 1909], "note": [1, 2, 3, 5, 8, 14, 16, 17, 18, 19, 22, 25, 28, 29, 31, 33, 34, 36, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 57, 59, 61, 64, 68, 70, 71, 72, 86, 153, 224, 379, 499, 500, 513, 515, 517, 734, 740, 741, 742, 790, 792, 793, 794, 798, 840, 860, 864, 883, 892, 898, 900, 901, 902, 903, 904, 905, 906, 908, 942, 952, 971, 1046, 1054, 1059, 1071, 1092, 1122, 1124, 1139, 1140, 1151, 1173, 1185, 1195, 1196, 1198, 1199, 1204, 1270, 1292, 1311, 1312, 1346, 1347, 1353, 1361, 1362, 1363, 1364, 1366, 1373, 1374, 1382, 1384, 1390, 1396, 1397, 1400, 1421, 1422, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1444, 1445, 1461, 1462, 1469, 1473, 1478, 1482, 1501, 1502, 1512, 1520, 1521, 1529, 1540, 1541, 1564, 1567, 1572, 1573, 1586, 1601, 1610, 1611, 1657, 1665, 1666, 1683, 1689, 1691, 1697, 1699, 1715, 1722, 1797, 1798, 1799, 1800, 1802, 1803, 1808, 1812, 1816, 1837, 1851, 1858, 1865, 1868, 1869, 1872, 1878, 1883, 1886, 1887, 1891, 1892, 1893, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1915, 1917, 1919, 1920, 1922, 1923, 1925, 1929, 1930, 1937], "propag": [1, 14, 15, 20, 28, 44, 45, 48, 50, 59, 72, 513, 685, 688, 689, 690, 694, 695, 696, 697, 765, 766, 767, 768, 778, 781, 782, 784, 785, 786, 837, 839, 920, 1117, 1118, 1325, 1797, 1866, 1883, 1884, 1890, 1894, 1896, 1899, 1901, 1921, 1934, 1935], "async": [1, 42, 43, 71, 602, 1610, 1872, 1894, 1901, 1927], "task": [1, 3, 7, 40, 65, 70, 1201, 1216, 1393, 1394, 1395, 1871, 1893, 1901, 1902, 1904, 1908], "cuda": [1, 3, 4, 5, 15, 16, 18, 19, 21, 24, 29, 33, 38, 39, 40, 42, 44, 46, 64, 91, 153, 291, 315, 323, 337, 342, 515, 517, 523, 579, 864, 876, 878, 892, 906, 921, 923, 930, 952, 972, 973, 974, 975, 977, 978, 993, 995, 1006, 1072, 1073, 1074, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1125, 1155, 1156, 1198, 1217, 1219, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1252, 1255, 1258, 1259, 1261, 1262, 1268, 1269, 1284, 1287, 1303, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1373, 1400, 1430, 1445, 1469, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1521, 1529, 1540, 1567, 1579, 1598, 1599, 1600, 1601, 1610, 1612, 1613, 1614, 1615, 1656, 1658, 1661, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1715, 1724, 1726, 1728, 1730, 1731, 1755, 1759, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1816, 1830, 1832, 1841, 1843, 1848, 1851, 1863, 1866, 1869, 1875, 1884, 1886, 1896, 1897, 1902, 1905, 1909, 1911, 1912, 1914, 1915, 1920, 1921, 1925, 1927, 1928, 1931, 1932, 1933], "cudaev": 1, "approxim": [1, 3, 40, 46, 59, 72, 1135, 1151, 1261, 1270, 1338, 1380, 1444, 1459, 1466, 1527, 1572, 1582, 1618, 1669, 1686, 1705, 1817, 1837, 1867, 1869, 1871, 1894, 1895, 1896, 1899, 1909, 1937], "4u": 1, "shape": [1, 5, 8, 13, 16, 18, 21, 28, 29, 31, 40, 42, 48, 64, 66, 68, 70, 72, 100, 174, 194, 211, 221, 402, 404, 446, 448, 450, 472, 497, 498, 513, 515, 517, 543, 565, 616, 679, 684, 686, 687, 696, 734, 744, 745, 755, 757, 759, 763, 765, 766, 767, 768, 771, 772, 773, 780, 795, 877, 883, 897, 901, 903, 904, 905, 916, 922, 923, 925, 928, 933, 935, 939, 940, 952, 965, 987, 1061, 1062, 1063, 1065, 1066, 1071, 1072, 1074, 1076, 1091, 1092, 1093, 1094, 1102, 1103, 1104, 1110, 1116, 1117, 1118, 1119, 1125, 1132, 1133, 1137, 1138, 1139, 1140, 1142, 1154, 1159, 1160, 1164, 1172, 1175, 1189, 1195, 1211, 1213, 1214, 1217, 1222, 1223, 1227, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1286, 1287, 1291, 1299, 1304, 1305, 1319, 1320, 1331, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1520, 1521, 1525, 1529, 1531, 1540, 1541, 1546, 1553, 1554, 1555, 1565, 1566, 1569, 1570, 1571, 1573, 1579, 1598, 1601, 1610, 1612, 1613, 1617, 1619, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1658, 1661, 1666, 1668, 1703, 1712, 1716, 1720, 1721, 1724, 1726, 1727, 1728, 1735, 1737, 1738, 1742, 1751, 1754, 1779, 1793, 1794, 1796, 1799, 1801, 1807, 1812, 1813, 1816, 1826, 1833, 1837, 1847, 1848, 1849, 1858, 1861, 1863, 1866, 1867, 1868, 1869, 1871, 1884, 1885, 1886, 1891, 1892, 1894, 1896, 1897, 1898, 1910, 1911, 1915, 1918, 1921, 1925, 1926, 1930, 1931, 1932, 1933], "about": [1, 8, 9, 12, 14, 16, 17, 20, 21, 23, 29, 35, 39, 42, 43, 46, 50, 52, 56, 58, 60, 65, 69, 72, 257, 498, 617, 907, 908, 979, 980, 996, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1128, 1227, 1234, 1374, 1643, 1686, 1697, 1758, 1865, 1868, 1870, 1871, 1875, 1878, 1893, 1894, 1895, 1896, 1898, 1901, 1904, 1905, 1907, 1913, 1915, 1916, 1919, 1922, 1923, 1925, 1929, 1931], "dimens": [1, 14, 31, 39, 42, 47, 48, 64, 69, 70, 72, 86, 221, 235, 256, 262, 315, 317, 319, 323, 434, 435, 473, 474, 475, 493, 513, 515, 517, 536, 542, 544, 545, 559, 582, 583, 584, 586, 587, 606, 616, 685, 691, 692, 694, 695, 696, 698, 734, 757, 778, 780, 784, 873, 874, 875, 876, 885, 886, 887, 891, 906, 931, 939, 942, 943, 944, 945, 946, 971, 986, 988, 1050, 1051, 1052, 1053, 1054, 1059, 1060, 1061, 1062, 1063, 1069, 1071, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1110, 1139, 1140, 1151, 1160, 1161, 1172, 1175, 1195, 1218, 1219, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1277, 1278, 1285, 1288, 1292, 1295, 1297, 1298, 1299, 1300, 1303, 1305, 1318, 1325, 1326, 1327, 1328, 1329, 1330, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1372, 1373, 1374, 1376, 1377, 1380, 1381, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1400, 1402, 1410, 1411, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1429, 1436, 1437, 1438, 1439, 1442, 1443, 1444, 1448, 1449, 1450, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1477, 1478, 1479, 1480, 1481, 1494, 1500, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1528, 1529, 1530, 1531, 1540, 1543, 1546, 1547, 1548, 1565, 1566, 1567, 1579, 1585, 1586, 1598, 1617, 1618, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1644, 1645, 1647, 1649, 1651, 1654, 1656, 1657, 1703, 1706, 1713, 1715, 1716, 1717, 1722, 1736, 1737, 1738, 1742, 1751, 1753, 1754, 1764, 1785, 1789, 1792, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1815, 1816, 1825, 1827, 1831, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1850, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1866, 1867, 1869, 1870, 1871, 1886, 1889, 1892, 1894, 1897, 1898, 1899, 1905, 1914, 1916, 1925, 1926, 1928, 1930, 1931], "collect": [1, 3, 7, 16, 20, 24, 28, 29, 39, 43, 44, 46, 50, 59, 64, 71, 72, 798, 799, 823, 860, 861, 940, 1010, 1072, 1160, 1299, 1610, 1633, 1661, 1724, 1728, 1863, 1866, 1869, 1870, 1871, 1881, 1894, 1895, 1897, 1912, 1915, 1916, 1919, 1923, 1925, 1930, 1932], "group": [1, 3, 9, 12, 16, 29, 39, 40, 43, 44, 46, 50, 56, 59, 60, 61, 62, 64, 67, 72, 609, 679, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 771, 772, 773, 879, 916, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1385, 1406, 1407, 1408, 1409, 1410, 1411, 1469, 1504, 1505, 1506, 1507, 1508, 1509, 1530, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1849, 1865, 1866, 1867, 1869, 1871, 1883, 1889, 1894, 1895, 1909, 1912, 1913, 1915, 1921, 1930], "prof": [1, 16, 25, 29, 56, 1915], "key_averag": [1, 1915], "group_by_input_shap": [1, 916, 1915], "skew": [1, 3, 4, 1249, 1617], "neglig": [1, 1210, 1759], "bottom": [1, 25, 1529, 1878], "But": [1, 7, 15, 17, 20, 22, 64, 71, 487, 1213, 1243, 1610, 1891, 1896, 1898, 1899, 1913, 1914, 1925, 1929, 1936], "total": [1, 3, 4, 7, 39, 40, 42, 56, 58, 59, 60, 64, 876, 917, 988, 1023, 1028, 1041, 1124, 1159, 1160, 1307, 1353, 1377, 1390, 1397, 1421, 1436, 1481, 1566, 1610, 1614, 1656, 1658, 1660, 1691, 1697, 1737, 1764, 1812, 1865, 1870, 1881, 1894, 1900, 1904, 1912, 1925], "artifici": [1, 1925], "estim": [1, 3, 39, 48, 966, 970, 1151, 1195, 1348, 1349, 1350, 1380, 1384, 1385, 1393, 1394, 1395, 1402, 1469, 1527, 1618, 1683, 1780, 1915], "flop": [1, 1915], "hardwar": [1, 8, 16, 29, 858, 860, 861, 1233, 1234, 1261, 1851, 1894, 1904, 1906, 1917, 1925], "matrix": [1, 2, 16, 18, 40, 42, 48, 194, 211, 685, 688, 689, 690, 759, 920, 922, 931, 932, 940, 942, 943, 944, 945, 952, 966, 970, 1054, 1058, 1059, 1061, 1071, 1139, 1143, 1147, 1162, 1218, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1265, 1267, 1270, 1278, 1287, 1289, 1292, 1302, 1320, 1322, 1373, 1374, 1382, 1400, 1481, 1520, 1521, 1617, 1622, 1651, 1657, 1703, 1704, 1705, 1715, 1759, 1787, 1790, 1793, 1794, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1808, 1816, 1817, 1832, 1835, 1837, 1839, 1840, 1841, 1842, 1843, 1852, 1858, 1866, 1871, 1884, 1885, 1886, 1889, 1893, 1894, 1896, 1899, 1902, 1905, 1915, 1925, 1930, 1931], "2d": [1, 44, 47, 48, 586, 587, 699, 702, 705, 734, 738, 741, 765, 767, 772, 778, 782, 784, 785, 786, 945, 966, 970, 1059, 1071, 1253, 1254, 1336, 1340, 1344, 1347, 1348, 1349, 1359, 1362, 1366, 1370, 1374, 1378, 1393, 1394, 1399, 1424, 1433, 1435, 1436, 1437, 1482, 1483, 1484, 1489, 1492, 1494, 1497, 1502, 1505, 1508, 1516, 1521, 1524, 1551, 1554, 1564, 1567, 1618, 1651, 1721, 1796, 1801, 1839, 1879, 1889, 1896, 1915, 1916, 1925], "alloc": [1, 4, 11, 14, 15, 25, 31, 36, 40, 44, 48, 50, 59, 256, 333, 446, 447, 448, 449, 450, 487, 973, 975, 977, 979, 980, 982, 995, 996, 997, 1020, 1022, 1024, 1026, 1027, 1028, 1029, 1036, 1037, 1041, 1072, 1074, 1306, 1307, 1308, 1315, 1665, 1724, 1728, 1730, 1755, 1830, 1883, 1886, 1891, 1895, 1900, 1904, 1915, 1928], "dealloc": [1, 72, 1124, 1883, 1894, 1898, 1900, 1915], "line": [1, 4, 16, 19, 20, 21, 22, 24, 26, 29, 36, 42, 72, 916, 1071, 1128, 1173, 1198, 1208, 1430, 1494, 1529, 1764, 1791, 1868, 1871, 1872, 1886, 1892, 1896, 1899, 1900, 1906, 1908, 1909, 1915, 1925], "hierarchi": [1, 14, 72, 839, 1202, 1672, 1673, 1872, 1896, 1915, 1916], "callstack": [1, 42, 1915], "A": [1, 2, 3, 5, 7, 8, 9, 11, 12, 15, 16, 18, 19, 20, 21, 25, 27, 28, 29, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 50, 56, 59, 60, 61, 64, 65, 70, 71, 77, 91, 559, 579, 582, 583, 584, 593, 623, 679, 691, 696, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 744, 745, 755, 760, 761, 762, 763, 764, 789, 791, 813, 857, 858, 860, 861, 918, 921, 930, 931, 933, 938, 943, 944, 951, 952, 954, 957, 958, 966, 970, 974, 975, 977, 985, 987, 988, 1056, 1071, 1076, 1084, 1085, 1086, 1098, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1142, 1151, 1154, 1155, 1156, 1160, 1188, 1189, 1190, 1191, 1194, 1196, 1198, 1201, 1205, 1208, 1210, 1213, 1214, 1218, 1222, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1267, 1270, 1278, 1286, 1287, 1288, 1289, 1293, 1331, 1347, 1351, 1353, 1366, 1373, 1374, 1383, 1384, 1392, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1420, 1429, 1430, 1436, 1458, 1463, 1465, 1473, 1478, 1479, 1494, 1500, 1512, 1520, 1531, 1541, 1548, 1559, 1579, 1585, 1586, 1601, 1610, 1611, 1612, 1613, 1617, 1619, 1622, 1644, 1645, 1648, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1693, 1696, 1697, 1699, 1705, 1715, 1717, 1718, 1719, 1720, 1721, 1732, 1738, 1744, 1747, 1780, 1789, 1791, 1792, 1795, 1807, 1811, 1812, 1816, 1817, 1834, 1839, 1840, 1841, 1842, 1843, 1847, 1848, 1849, 1850, 1851, 1854, 1858, 1861, 1865, 1867, 1868, 1869, 1870, 1871, 1875, 1878, 1879, 1884, 1885, 1889, 1890, 1893, 1894, 1896, 1897, 1898, 1904, 1905, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1931, 1935, 1936, 1937], "aten": [1, 2, 3, 12, 17, 21, 22, 29, 33, 36, 84, 1014, 1128, 1320, 1666, 1667, 1791, 1866, 1868, 1869, 1875, 1893, 1896, 1908, 1911, 1915, 1916, 1925], "torchscript": [1, 3, 8, 19, 46, 72, 616, 1196, 1199, 1201, 1202, 1203, 1204, 1209, 1213, 1215, 1667, 1866, 1872, 1907, 1909, 1915, 1921], "eager": [1, 8, 11, 14, 16, 17, 18, 19, 24, 29, 952, 1046, 1196, 1199, 1209, 1763, 1871, 1894, 1915, 1917, 1919], "experiment": [1, 2, 14, 15, 18, 21, 29, 40, 42, 46, 47, 64, 72, 900, 902, 906, 952, 958, 1045, 1128, 1228, 1239, 1241, 1242, 1246, 1259, 1610, 1664, 1686, 1866, 1868, 1870, 1884, 1885, 1895, 1906, 1908, 1909, 1913, 1914, 1915], "kineto": [1, 1915], "_experimentalconfig": [1, 1915], "librari": [1, 2, 3, 4, 8, 9, 16, 19, 21, 31, 33, 34, 39, 42, 49, 57, 61, 65, 68, 69, 70, 72, 679, 968, 975, 998, 1002, 1014, 1122, 1210, 1241, 1287, 1784, 1881, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1908, 1909, 1913, 1915, 1916, 1921, 1936], "100": [1, 12, 20, 22, 39, 42, 46, 48, 72, 302, 737, 738, 741, 742, 1158, 1198, 1209, 1215, 1253, 1268, 1275, 1284, 1299, 1319, 1338, 1346, 1347, 1348, 1349, 1350, 1359, 1360, 1362, 1363, 1365, 1366, 1393, 1394, 1395, 1430, 1437, 1439, 1469, 1478, 1511, 1512, 1564, 1675, 1687, 1688, 1693, 1694, 1695, 1696, 1698, 1700, 1701, 1717, 1773, 1869, 1871, 1883, 1893, 1894, 1909, 1912, 1917, 1923, 1925, 1930], "realli": [1, 7, 15, 17, 72, 954, 1871, 1891, 1913], "y": [1, 11, 12, 14, 19, 20, 28, 29, 31, 33, 39, 48, 56, 64, 69, 70, 72, 616, 619, 780, 883, 885, 886, 887, 894, 895, 898, 900, 901, 902, 903, 904, 905, 934, 940, 963, 970, 1014, 1015, 1054, 1065, 1071, 1075, 1127, 1129, 1132, 1133, 1134, 1138, 1139, 1173, 1204, 1209, 1213, 1266, 1275, 1276, 1299, 1346, 1347, 1348, 1349, 1350, 1351, 1364, 1366, 1385, 1390, 1391, 1393, 1394, 1395, 1397, 1402, 1417, 1421, 1422, 1433, 1434, 1435, 1437, 1439, 1461, 1462, 1469, 1472, 1478, 1479, 1500, 1529, 1546, 1569, 1601, 1622, 1655, 1664, 1719, 1737, 1739, 1740, 1761, 1793, 1807, 1833, 1837, 1838, 1858, 1861, 1868, 1869, 1870, 1871, 1884, 1885, 1889, 1891, 1892, 1893, 1894, 1897, 1899, 1900, 1903, 1909, 1913, 1916, 1921, 1923, 1926, 1930, 1933, 1934, 1935], "column": [1, 3, 40, 47, 194, 262, 583, 586, 950, 966, 970, 1054, 1084, 1112, 1113, 1163, 1233, 1234, 1237, 1253, 1256, 1261, 1265, 1270, 1320, 1439, 1481, 1520, 1521, 1617, 1705, 1715, 1796, 1798, 1799, 1800, 1802, 1803, 1816, 1837, 1841, 1843, 1852, 1889, 1899, 1925], "remov": [1, 3, 16, 17, 19, 23, 28, 39, 40, 42, 44, 48, 60, 62, 64, 72, 488, 513, 545, 556, 696, 796, 814, 815, 816, 858, 912, 913, 942, 943, 1017, 1128, 1144, 1195, 1198, 1202, 1287, 1288, 1292, 1430, 1431, 1440, 1531, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1618, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1636, 1637, 1638, 1639, 1641, 1642, 1652, 1654, 1657, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1715, 1731, 1753, 1807, 1816, 1839, 1846, 1865, 1866, 1879, 1891, 1902, 1907, 1909, 1911, 1913, 1923, 1927, 1932], "breviti": [1, 72, 1909], "print": [1, 3, 12, 16, 20, 29, 36, 39, 42, 50, 51, 56, 57, 60, 64, 69, 71, 719, 727, 728, 733, 744, 745, 755, 763, 910, 912, 913, 1127, 1128, 1137, 1198, 1202, 1204, 1205, 1209, 1287, 1351, 1354, 1392, 1417, 1430, 1442, 1443, 1511, 1567, 1570, 1571, 1622, 1632, 1633, 1634, 1635, 1638, 1648, 1652, 1664, 1667, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1764, 1865, 1868, 1869, 1891, 1893, 1894, 1896, 1902, 1903, 1909, 1911, 1913, 1915, 1921, 1930, 1931, 1934, 1935], "tabl": [1, 3, 15, 17, 22, 24, 29, 42, 72, 1373, 1520, 1869, 1871, 1896, 1912, 1913, 1915, 1916, 1921, 1925, 1932], "sort_bi": [1, 1915], "self_cpu_time_tot": [1, 1915], "avg": [1, 42, 1670], "mul": [1, 12, 14, 28, 36, 72, 421, 746, 747, 756, 1175, 1321, 1867, 1868, 1869, 1871, 1884, 1886, 1896, 1909, 1911, 1918, 1922, 1925, 1928, 1934], "32": [1, 2, 13, 20, 22, 40, 42, 745, 1124, 1195, 1207, 1287, 1344, 1369, 1370, 1371, 1375, 1376, 1378, 1379, 1399, 1418, 1424, 1435, 1473, 1474, 1475, 1476, 1477, 1494, 1524, 1525, 1531, 1579, 1885, 1886, 1902, 1906, 1909, 1919, 1925, 1928, 1930, 1931], "048m": 1, "200": [1, 29, 46, 1198, 1275, 1430, 1717, 1871, 1925], "27": [1, 616, 1265, 1690, 1712, 1852, 1909], "041m": 1, "powbackward0": 1, "9": [1, 7, 13, 39, 40, 42, 49, 72, 90, 315, 317, 319, 323, 403, 404, 472, 513, 559, 580, 582, 696, 744, 745, 853, 936, 942, 946, 950, 970, 1054, 1069, 1072, 1093, 1094, 1103, 1104, 1114, 1117, 1118, 1121, 1122, 1151, 1161, 1227, 1229, 1250, 1252, 1254, 1265, 1267, 1329, 1330, 1336, 1337, 1340, 1341, 1354, 1373, 1374, 1426, 1427, 1442, 1443, 1452, 1455, 1520, 1521, 1567, 1570, 1571, 1657, 1658, 1670, 1672, 1673, 1674, 1675, 1676, 1682, 1685, 1686, 1687, 1691, 1697, 1699, 1700, 1704, 1708, 1744, 1751, 1760, 1764, 1774, 1779, 1789, 1796, 1804, 1830, 1831, 1835, 1837, 1846, 1852, 1859, 1868, 1872, 1878, 1898, 1902, 1907, 1908, 1909, 1911, 1912, 1913, 1921, 1925, 1926, 1928, 1932], "727m": 1, "55": [1, 1384, 1909], "483m": 1, "accumulategrad": [1, 1891], "148m": 1, "graphroot": 1, "691": 1, "816u": 1, "emit": [1, 33, 51, 56, 72, 679, 1213, 1766, 1871, 1877, 1910, 1920, 1925], "nvtx": [1, 4, 1866], "program": [1, 3, 4, 8, 11, 14, 15, 16, 19, 21, 23, 25, 26, 29, 36, 39, 42, 51, 60, 62, 64, 72, 616, 963, 964, 1020, 1022, 1128, 1759, 1868, 1870, 1872, 1882, 1891, 1894, 1898, 1901, 1903, 1904, 1907, 1908, 1930], "off": [1, 5, 7, 8, 15, 20, 24, 33, 42, 50, 64, 72, 919, 921, 930, 1032, 1128, 1155, 1156, 1195, 1213, 1261, 1343, 1344, 1345, 1347, 1423, 1424, 1425, 1529, 1567, 1761, 1893, 1894, 1895, 1898, 1901, 1905, 1915, 1916, 1917, 1921, 1922], "o": [1, 29, 40, 42, 43, 48, 60, 61, 62, 72, 1198, 1269, 1311, 1312, 1313, 1401, 1430, 1436, 1610, 1747, 1865, 1872, 1883, 1891, 1894, 1895, 1898, 1908, 1913, 1914, 1921], "trace_nam": 1, "regular": [1, 3, 4, 20, 42, 50, 60, 64, 67, 72, 1014, 1015, 1127, 1245, 1246, 1353, 1368, 1369, 1370, 1371, 1375, 1415, 1429, 1430, 1431, 1432, 1440, 1441, 1522, 1559, 1601, 1612, 1613, 1652, 1673, 1871, 1885, 1886, 1896, 1897, 1901, 1902, 1909, 1913, 1916, 1919, 1921, 1925, 1926, 1933, 1935], "command": [1, 4, 22, 24, 42, 50, 57, 60, 72, 1894, 1900, 1904, 1908, 1914, 1915, 1922], "unfortun": [1, 9, 13, 15, 39, 1610, 1891], "wai": [1, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 20, 25, 28, 29, 33, 39, 40, 42, 44, 46, 48, 52, 56, 64, 66, 67, 71, 72, 153, 579, 679, 795, 818, 821, 824, 860, 861, 889, 892, 901, 903, 904, 905, 906, 907, 1092, 1094, 1128, 1151, 1198, 1227, 1228, 1243, 1258, 1346, 1374, 1393, 1394, 1395, 1400, 1412, 1413, 1414, 1430, 1458, 1475, 1477, 1521, 1573, 1610, 1620, 1650, 1686, 1690, 1697, 1868, 1870, 1871, 1875, 1877, 1878, 1881, 1883, 1884, 1885, 1891, 1893, 1896, 1897, 1898, 1899, 1902, 1904, 1905, 1908, 1909, 1910, 1912, 1913, 1916, 1921, 1922, 1925, 1929, 1931, 1935], "disk": [1, 39, 1269, 1747, 1891, 1902, 1913, 1930], "annot": [1, 17, 19, 20, 27, 52, 57, 72, 914, 1196, 1209, 1868, 1870, 1872, 1909, 1921], "wait": [1, 16, 21, 25, 36, 42, 50, 57, 59, 71, 823, 974, 975, 977, 1047, 1201, 1311, 1312, 1317, 1699, 1869, 1871, 1883, 1893, 1894, 1895, 1911, 1915, 1921], "either": [1, 8, 9, 14, 16, 17, 18, 19, 21, 33, 36, 39, 40, 42, 46, 47, 48, 50, 52, 57, 59, 60, 61, 64, 69, 71, 72, 157, 224, 315, 323, 513, 515, 616, 679, 731, 737, 738, 739, 744, 745, 755, 763, 778, 784, 790, 857, 889, 891, 898, 907, 908, 939, 952, 985, 1071, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1124, 1128, 1151, 1175, 1191, 1198, 1213, 1253, 1268, 1269, 1284, 1299, 1336, 1337, 1340, 1341, 1344, 1345, 1346, 1347, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1374, 1384, 1390, 1397, 1399, 1421, 1422, 1424, 1425, 1430, 1433, 1434, 1435, 1436, 1437, 1444, 1445, 1447, 1461, 1462, 1477, 1478, 1480, 1482, 1483, 1484, 1501, 1502, 1512, 1540, 1541, 1564, 1572, 1598, 1605, 1610, 1635, 1657, 1672, 1673, 1675, 1697, 1712, 1714, 1756, 1812, 1816, 1861, 1865, 1868, 1870, 1871, 1873, 1877, 1885, 1889, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1906, 1909, 1912, 1913, 1914, 1916, 1922, 1923, 1925, 1926, 1929, 1932, 1937], "nvidia": [1, 24, 25, 29, 33, 42, 983, 996, 1024, 1030, 1034, 1048, 1049, 1851, 1866, 1894, 1898, 1900, 1906, 1908, 1916, 1925, 1933], "visual": [1, 16, 25, 29, 72, 1299, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1423, 1424, 1425, 1481, 1902, 1908, 1915, 1930], "nvvp": 1, "timelin": [1, 4, 1311, 1312, 1915], "load_nvprof": 1, "repl": [1, 19], "append": [1, 20, 28, 42, 71, 72, 232, 256, 606, 760, 762, 764, 1017, 1061, 1063, 1292, 1383, 1401, 1432, 1441, 1447, 1458, 1610, 1869, 1870, 1871, 1891, 1893, 1904, 1908, 1909, 1911, 1925, 1930], "size": [1, 2, 3, 7, 11, 13, 14, 15, 16, 18, 22, 25, 29, 36, 39, 40, 42, 44, 48, 50, 59, 64, 67, 72, 141, 211, 224, 244, 256, 257, 315, 317, 323, 341, 446, 447, 448, 450, 488, 493, 498, 499, 500, 513, 515, 517, 520, 543, 544, 545, 565, 580, 582, 583, 584, 586, 587, 605, 606, 616, 617, 689, 690, 692, 694, 695, 696, 698, 719, 727, 728, 734, 740, 741, 742, 744, 745, 755, 763, 765, 766, 767, 768, 778, 784, 785, 786, 795, 857, 864, 876, 877, 879, 891, 900, 901, 902, 903, 904, 905, 916, 920, 921, 923, 930, 932, 933, 934, 935, 936, 943, 944, 945, 946, 952, 970, 971, 973, 979, 985, 986, 988, 1028, 1052, 1053, 1059, 1062, 1069, 1071, 1072, 1073, 1074, 1077, 1088, 1089, 1090, 1092, 1093, 1094, 1096, 1097, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1124, 1125, 1126, 1133, 1134, 1139, 1140, 1155, 1156, 1160, 1161, 1172, 1175, 1195, 1198, 1219, 1228, 1237, 1242, 1250, 1254, 1258, 1261, 1263, 1264, 1265, 1267, 1268, 1270, 1278, 1284, 1285, 1287, 1288, 1292, 1295, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1306, 1307, 1320, 1322, 1325, 1328, 1330, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1373, 1374, 1376, 1377, 1378, 1379, 1382, 1384, 1385, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1442, 1443, 1445, 1451, 1452, 1453, 1454, 1455, 1456, 1461, 1469, 1473, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1502, 1507, 1508, 1509, 1512, 1513, 1520, 1521, 1524, 1525, 1529, 1540, 1547, 1553, 1554, 1555, 1564, 1565, 1567, 1570, 1571, 1573, 1579, 1598, 1599, 1600, 1601, 1610, 1633, 1643, 1644, 1645, 1646, 1647, 1649, 1651, 1654, 1656, 1658, 1661, 1662, 1675, 1684, 1703, 1704, 1705, 1706, 1708, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1737, 1742, 1751, 1754, 1773, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1810, 1811, 1812, 1815, 1816, 1817, 1830, 1831, 1832, 1837, 1839, 1847, 1848, 1849, 1850, 1853, 1854, 1856, 1857, 1858, 1859, 1863, 1864, 1866, 1867, 1868, 1869, 1871, 1879, 1881, 1884, 1885, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1906, 1907, 1909, 1911, 1914, 1915, 1916, 1918, 1925, 1927, 1928, 1930, 1931], "format": [1, 25, 29, 37, 40, 42, 44, 52, 61, 72, 158, 173, 175, 178, 181, 182, 183, 198, 209, 212, 242, 269, 299, 327, 333, 395, 499, 500, 524, 579, 582, 583, 584, 585, 586, 587, 679, 734, 759, 791, 792, 949, 1017, 1071, 1072, 1073, 1126, 1195, 1198, 1211, 1240, 1353, 1374, 1382, 1400, 1430, 1445, 1477, 1610, 1644, 1646, 1662, 1664, 1665, 1667, 1725, 1727, 1729, 1747, 1790, 1793, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1864, 1865, 1868, 1871, 1872, 1877, 1894, 1896, 1902, 1907, 1909, 1910, 1911, 1915, 1916, 1921, 1922, 1925, 1928, 1930, 1932], "arg0": [1, 42], "arg1": [1, 42, 57, 58, 60], "repres": [1, 8, 14, 15, 20, 31, 39, 40, 48, 49, 50, 52, 53, 59, 61, 64, 72, 84, 759, 791, 792, 795, 888, 954, 958, 966, 970, 972, 1004, 1007, 1071, 1092, 1094, 1099, 1101, 1102, 1103, 1104, 1128, 1151, 1158, 1187, 1188, 1191, 1194, 1197, 1213, 1214, 1245, 1287, 1338, 1353, 1430, 1436, 1477, 1479, 1481, 1610, 1616, 1619, 1624, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1643, 1653, 1665, 1667, 1691, 1697, 1703, 1705, 1716, 1798, 1799, 1800, 1802, 1803, 1812, 1816, 1848, 1849, 1856, 1857, 1868, 1870, 1871, 1878, 1881, 1886, 1891, 1896, 1897, 1899, 1901, 1902, 1905, 1909, 1910, 1914, 1916, 1917, 1919, 1921, 1925, 1928, 1937], "order": [1, 3, 5, 11, 12, 14, 16, 22, 25, 26, 29, 42, 43, 44, 46, 48, 60, 64, 65, 70, 71, 72, 153, 194, 211, 315, 317, 319, 323, 333, 404, 488, 679, 791, 792, 801, 853, 875, 892, 893, 906, 912, 913, 931, 942, 975, 1017, 1028, 1059, 1062, 1063, 1071, 1089, 1091, 1092, 1098, 1110, 1111, 1112, 1113, 1129, 1139, 1151, 1198, 1217, 1228, 1234, 1236, 1243, 1250, 1253, 1254, 1261, 1262, 1265, 1267, 1270, 1299, 1305, 1318, 1320, 1338, 1347, 1353, 1367, 1430, 1431, 1440, 1457, 1458, 1494, 1502, 1529, 1553, 1554, 1555, 1579, 1601, 1610, 1619, 1629, 1643, 1644, 1645, 1646, 1657, 1675, 1697, 1703, 1706, 1716, 1751, 1754, 1779, 1789, 1816, 1834, 1841, 1843, 1848, 1851, 1852, 1858, 1865, 1866, 1868, 1869, 1871, 1872, 1883, 1884, 1885, 1886, 1889, 1892, 1894, 1895, 1896, 1897, 1899, 1902, 1905, 1907, 1909, 1912, 1913, 1914, 1916, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1932, 1935], "backend": [1, 13, 16, 17, 18, 20, 21, 22, 24, 26, 33, 58, 62, 64, 740, 741, 742, 791, 792, 832, 854, 855, 858, 860, 861, 900, 906, 952, 958, 997, 1028, 1071, 1128, 1211, 1241, 1243, 1261, 1311, 1312, 1313, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1529, 1567, 1579, 1610, 1667, 1668, 1759, 1866, 1867, 1869, 1870, 1875, 1879, 1882, 1893, 1894, 1896, 1905, 1906, 1909, 1917, 1919, 1925], "side": [1, 11, 20, 33, 42, 59, 61, 69, 72, 767, 768, 771, 772, 773, 1006, 1065, 1087, 1088, 1090, 1093, 1094, 1099, 1101, 1102, 1103, 1104, 1107, 1195, 1196, 1242, 1247, 1258, 1260, 1343, 1344, 1345, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1406, 1407, 1408, 1409, 1410, 1411, 1423, 1424, 1425, 1451, 1452, 1454, 1455, 1456, 1481, 1485, 1486, 1487, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1553, 1554, 1555, 1567, 1691, 1720, 1721, 1751, 1812, 1839, 1865, 1868, 1869, 1871, 1890, 1891, 1894, 1896, 1899, 1921], "creation": [1, 2, 14, 20, 39, 42, 44, 72, 744, 745, 755, 763, 823, 974, 1128, 1610, 1611, 1624, 1868, 1872, 1881, 1883, 1891, 1894, 1921, 1923, 1925, 1931], "warmup": [1, 3, 11, 16, 25, 1017, 1894, 1915], "correl": [1, 48, 60, 966, 1358, 1359, 1360, 1361, 1362, 1363, 1369, 1370, 1371, 1375], "view": [1, 7, 8, 14, 15, 24, 28, 29, 31, 36, 39, 40, 44, 46, 50, 64, 72, 225, 256, 436, 497, 498, 499, 606, 617, 691, 696, 759, 877, 885, 886, 887, 895, 934, 946, 963, 964, 1061, 1062, 1069, 1110, 1111, 1112, 1113, 1128, 1161, 1173, 1198, 1253, 1264, 1312, 1374, 1382, 1400, 1430, 1445, 1481, 1482, 1483, 1484, 1521, 1566, 1606, 1607, 1610, 1614, 1706, 1738, 1742, 1743, 1747, 1753, 1754, 1785, 1804, 1815, 1826, 1831, 1835, 1847, 1856, 1857, 1859, 1866, 1867, 1868, 1869, 1883, 1885, 1886, 1892, 1896, 1911, 1918, 1923, 1925, 1927, 1928, 1931], "difficult": [1, 7, 9, 15, 16, 23, 25, 29, 69, 1139, 1858], "eas": [1, 14, 28, 72, 1893, 1896, 1900], "sequenc": [1, 11, 14, 16, 26, 28, 29, 39, 44, 46, 47, 48, 64, 153, 565, 734, 759, 813, 879, 892, 906, 936, 938, 939, 942, 950, 977, 984, 985, 988, 1056, 1070, 1072, 1139, 1159, 1160, 1163, 1213, 1253, 1299, 1338, 1348, 1353, 1358, 1367, 1374, 1382, 1400, 1436, 1445, 1458, 1473, 1474, 1475, 1476, 1477, 1521, 1579, 1619, 1622, 1629, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1658, 1661, 1664, 1668, 1683, 1722, 1724, 1728, 1751, 1809, 1812, 1858, 1860, 1863, 1868, 1869, 1870, 1886, 1894, 1898, 1909, 1913, 1914, 1921, 1931, 1932], "gener": [1, 2, 3, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 28, 29, 33, 39, 40, 42, 48, 52, 53, 60, 64, 65, 66, 86, 156, 157, 176, 260, 288, 379, 422, 455, 482, 607, 679, 908, 922, 952, 954, 1003, 1006, 1014, 1015, 1018, 1019, 1038, 1039, 1041, 1042, 1043, 1071, 1093, 1094, 1128, 1139, 1150, 1155, 1174, 1202, 1207, 1218, 1229, 1234, 1243, 1260, 1261, 1265, 1270, 1290, 1298, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1320, 1366, 1377, 1391, 1473, 1481, 1482, 1494, 1601, 1618, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1651, 1654, 1658, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1703, 1705, 1708, 1722, 1724, 1726, 1727, 1728, 1730, 1752, 1765, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1817, 1832, 1836, 1852, 1858, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1879, 1884, 1889, 1891, 1894, 1896, 1898, 1899, 1901, 1902, 1904, 1908, 1909, 1912, 1913, 1915, 1920, 1921, 1922, 1925, 1928, 1930, 1932, 1934, 1936], "seq": [1, 604, 759, 939, 951, 1299, 1382, 1400, 1436, 1445, 1473, 1475, 1477, 1646, 1846], "n": [1, 3, 20, 42, 44, 47, 48, 50, 52, 57, 60, 72, 232, 262, 408, 466, 467, 685, 688, 689, 690, 734, 757, 759, 780, 876, 916, 920, 921, 923, 930, 932, 936, 942, 943, 944, 970, 1052, 1053, 1063, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1111, 1131, 1134, 1139, 1151, 1155, 1156, 1160, 1195, 1198, 1209, 1213, 1214, 1217, 1218, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1270, 1278, 1287, 1292, 1294, 1299, 1302, 1322, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1369, 1370, 1371, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1402, 1412, 1413, 1414, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1437, 1439, 1445, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1461, 1463, 1464, 1465, 1469, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1494, 1500, 1512, 1513, 1521, 1525, 1529, 1564, 1567, 1569, 1579, 1610, 1617, 1628, 1637, 1656, 1703, 1704, 1705, 1710, 1715, 1716, 1722, 1728, 1730, 1743, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1794, 1810, 1811, 1812, 1816, 1817, 1831, 1832, 1837, 1841, 1843, 1852, 1853, 1854, 1855, 1858, 1867, 1869, 1871, 1875, 1884, 1885, 1889, 1891, 1894, 1896, 1898, 1899, 1904, 1913, 1915, 1916, 1917, 1925, 1926, 1930, 1931, 1932], "counter": [1, 42, 1010, 1028, 1173, 1367, 1881, 1883, 1891], "increment": [1, 11, 42, 59, 1124, 1160, 1202, 1367, 1868, 1870, 1891, 1921], "stash": [1, 5, 1894, 1896, 1914], "associ": [1, 8, 9, 15, 16, 18, 20, 29, 42, 44, 53, 894, 952, 980, 1031, 1033, 1159, 1160, 1198, 1247, 1258, 1260, 1269, 1353, 1430, 1440, 1513, 1610, 1618, 1664, 1773, 1775, 1868, 1871, 1877, 1884, 1885, 1891, 1899, 1902, 1905, 1907, 1913, 1914, 1915, 1921, 1922, 1928, 1931], "tell": [1, 7, 72, 496, 1199, 1205, 1269, 1668, 1868, 1878, 1891, 1896, 1897, 1913], "top": [1, 3, 7, 8, 13, 24, 25, 39, 44, 47, 48, 52, 64, 68, 72, 746, 916, 1346, 1347, 1366, 1390, 1397, 1421, 1437, 1479, 1482, 1529, 1624, 1628, 1630, 1780, 1834, 1872, 1878, 1883, 1896, 1912], "m": [1, 4, 8, 19, 40, 42, 47, 48, 56, 60, 72, 685, 688, 689, 690, 719, 727, 728, 737, 738, 739, 740, 741, 742, 744, 745, 755, 757, 763, 813, 859, 860, 861, 920, 932, 936, 940, 945, 1084, 1137, 1160, 1196, 1198, 1203, 1204, 1208, 1209, 1215, 1218, 1229, 1237, 1243, 1244, 1245, 1246, 1250, 1251, 1252, 1254, 1255, 1256, 1261, 1262, 1263, 1264, 1270, 1287, 1288, 1292, 1302, 1320, 1322, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1378, 1379, 1380, 1381, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1395, 1398, 1399, 1416, 1417, 1419, 1420, 1423, 1424, 1425, 1429, 1430, 1437, 1438, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1480, 1482, 1483, 1484, 1485, 1486, 1487, 1567, 1569, 1610, 1617, 1622, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1650, 1651, 1654, 1703, 1704, 1705, 1715, 1722, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1794, 1812, 1816, 1817, 1832, 1839, 1868, 1869, 1870, 1871, 1894, 1896, 1898, 1899, 1902, 1904, 1907, 1916, 1925, 1935], "By": [1, 2, 3, 5, 13, 16, 22, 23, 27, 29, 33, 39, 42, 51, 56, 72, 446, 447, 448, 449, 450, 879, 970, 977, 1020, 1022, 1054, 1066, 1089, 1091, 1092, 1093, 1094, 1102, 1103, 1104, 1129, 1130, 1132, 1133, 1139, 1151, 1159, 1160, 1202, 1250, 1261, 1269, 1298, 1303, 1324, 1346, 1347, 1348, 1349, 1350, 1364, 1366, 1384, 1390, 1393, 1394, 1395, 1396, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1469, 1478, 1501, 1502, 1512, 1541, 1564, 1572, 1654, 1705, 1716, 1737, 1791, 1837, 1858, 1865, 1870, 1875, 1878, 1891, 1894, 1896, 1898, 1902, 1904, 1905, 1907, 1909, 1912, 1920, 1921, 1925, 1932], "compar": [1, 3, 5, 11, 17, 24, 33, 39, 64, 72, 693, 864, 875, 906, 1028, 1075, 1076, 1099, 1100, 1101, 1105, 1106, 1107, 1108, 1117, 1118, 1142, 1154, 1173, 1187, 1222, 1286, 1296, 1301, 1331, 1436, 1610, 1655, 1761, 1871, 1881, 1894, 1896, 1899, 1905, 1908, 1916, 1917, 1921, 1925, 1930, 1932, 1934, 1935], "down": [1, 7, 22, 29, 33, 39, 48, 50, 57, 58, 60, 64, 72, 778, 1028, 1066, 1113, 1119, 1207, 1243, 1540, 1716, 1744, 1896, 1901, 1904, 1909, 1921, 1923, 1925, 1930], "irrelev": [1, 3, 1872], "simpli": [1, 3, 14, 16, 23, 33, 39, 48, 52, 60, 71, 72, 862, 1128, 1185, 1196, 1342, 1368, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1868, 1870, 1891, 1897, 1899, 1902, 1903, 1915, 1925], "hand": [1, 4, 15, 20, 42, 64, 69, 72, 1065, 1071, 1196, 1242, 1247, 1258, 1260, 1342, 1440, 1458, 1839, 1851, 1868, 1870, 1871, 1891, 1899, 1902, 1904, 1907, 1913, 1925], "underwai": [1, 1012, 1894], "up": [1, 6, 7, 8, 9, 11, 13, 15, 18, 19, 20, 21, 23, 25, 29, 33, 39, 40, 42, 46, 48, 50, 52, 56, 58, 59, 61, 62, 67, 72, 778, 784, 889, 952, 1014, 1015, 1017, 1054, 1071, 1100, 1101, 1106, 1108, 1113, 1128, 1189, 1202, 1207, 1210, 1211, 1256, 1338, 1353, 1377, 1436, 1475, 1477, 1481, 1482, 1494, 1520, 1529, 1540, 1598, 1610, 1686, 1722, 1744, 1848, 1849, 1865, 1868, 1870, 1875, 1878, 1881, 1883, 1884, 1885, 1891, 1892, 1893, 1894, 1898, 1899, 1900, 1902, 1905, 1909, 1913, 1915, 1916, 1921, 1922, 1932], "nonzero": [1, 14, 15, 64, 1195, 1279, 1281, 1282, 1287, 1861, 1867, 1869, 1911], "themselv": [1, 9, 48, 59, 64, 792, 840, 1834, 1894, 1913, 1936], "origin": [1, 5, 12, 13, 15, 16, 17, 20, 22, 28, 29, 31, 36, 39, 40, 42, 44, 52, 64, 67, 71, 72, 209, 212, 224, 487, 544, 602, 606, 616, 679, 759, 796, 837, 838, 853, 856, 857, 937, 942, 975, 1091, 1092, 1094, 1098, 1102, 1103, 1104, 1110, 1127, 1137, 1172, 1195, 1205, 1209, 1210, 1213, 1214, 1291, 1305, 1338, 1342, 1354, 1366, 1367, 1382, 1459, 1469, 1512, 1582, 1617, 1618, 1619, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1643, 1646, 1649, 1651, 1652, 1654, 1667, 1697, 1706, 1742, 1753, 1789, 1804, 1837, 1848, 1849, 1868, 1871, 1877, 1883, 1885, 1891, 1894, 1896, 1898, 1901, 1904, 1905, 1907, 1909, 1913, 1914, 1916, 1917, 1925, 1927, 1934, 1935, 1936], "did": [1, 7, 8, 19, 20, 42, 59, 1327, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1870, 1871, 1899, 1907, 1913], "relationship": [1, 9, 15, 20, 56, 72, 949, 1151, 1479, 1891, 1894, 1907, 1913], "conceptu": [1, 3, 1891, 1897, 1923], "tag": [1, 3, 7, 42, 958, 1269, 1865, 1866, 1901, 1907, 1913, 1930], "eventu": [1, 7, 14, 15, 59, 64, 1865, 1914], "itt": [1, 1915], "intel": [1, 4, 24, 1866, 1908], "r": [1, 20, 29, 48, 70, 153, 888, 890, 892, 906, 907, 940, 951, 966, 1071, 1129, 1131, 1134, 1139, 1140, 1143, 1151, 1209, 1227, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1243, 1244, 1247, 1249, 1256, 1258, 1260, 1261, 1270, 1373, 1374, 1383, 1442, 1443, 1461, 1520, 1521, 1570, 1571, 1617, 1684, 1715, 1858, 1868, 1869, 1870, 1891, 1893, 1896, 1899, 1908, 1925, 1928, 1930], "instrument": [1, 3, 40, 1312, 1866, 1901, 1935], "technologi": [1, 1866], "applic": [1, 2, 9, 16, 18, 48, 59, 798, 809, 810, 811, 812, 898, 952, 996, 1133, 1308, 1366, 1367, 1475, 1477, 1512, 1610, 1851, 1866, 1878, 1886, 1891, 1893, 1894, 1895, 1896, 1900, 1901, 1902, 1906, 1909, 1912, 1916, 1921, 1922, 1923, 1925, 1931], "across": [1, 8, 11, 14, 16, 20, 29, 33, 39, 40, 42, 44, 46, 50, 60, 64, 69, 72, 616, 734, 818, 873, 917, 988, 1027, 1028, 1071, 1085, 1139, 1208, 1213, 1299, 1347, 1367, 1377, 1418, 1436, 1438, 1469, 1481, 1499, 1502, 1531, 1547, 1594, 1610, 1629, 1633, 1657, 1747, 1858, 1866, 1868, 1881, 1884, 1886, 1891, 1895, 1898, 1901, 1902, 1904, 1905, 1906, 1912, 1914, 1917, 1921, 1922, 1927, 1930, 1935], "tool": [1, 4, 8, 9, 16, 19, 21, 22, 25, 29, 36, 42, 60, 72, 860, 915, 1312, 1791, 1865, 1866, 1868, 1870, 1893, 1894, 1908, 1909, 1913, 1915, 1935], "With": [1, 16, 17, 20, 24, 29, 36, 39, 42, 48, 64, 71, 738, 739, 740, 741, 742, 784, 1028, 1092, 1093, 1094, 1102, 1103, 1104, 1214, 1348, 1349, 1350, 1359, 1360, 1362, 1363, 1376, 1393, 1394, 1395, 1469, 1480, 1482, 1505, 1508, 1540, 1565, 1598, 1683, 1726, 1872, 1891, 1894, 1896, 1921, 1925, 1930], "abl": [1, 2, 7, 8, 12, 14, 15, 16, 17, 23, 29, 36, 42, 44, 59, 69, 1128, 1196, 1208, 1473, 1610, 1868, 1875, 1884, 1891, 1896, 1897, 1907, 1909, 1913, 1916, 1921, 1925, 1932], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 16, 31, 34, 337, 740, 741, 742, 896, 906, 1139, 1722, 1858, 1866, 1891, 1894, 1895, 1896, 1921, 1922], "traceback": [1, 29, 36, 52, 60, 71, 72, 1173, 1183, 1791, 1870, 1871, 1872, 1883, 1886, 1896, 1906, 1925, 1932], "fail": [1, 7, 12, 13, 14, 16, 17, 20, 21, 29, 42, 48, 50, 51, 52, 57, 58, 59, 60, 62, 71, 72, 75, 86, 907, 908, 975, 1028, 1199, 1205, 1208, 1227, 1256, 1261, 1269, 1270, 1287, 1666, 1871, 1873, 1883, 1891, 1894, 1896, 1904, 1905, 1908, 1909, 1913, 1921], "debug": [1, 2, 4, 5, 8, 14, 16, 17, 18, 23, 39, 56, 679, 826, 827, 831, 842, 907, 908, 952, 954, 958, 972, 1005, 1045, 1146, 1227, 1604, 1605, 1606, 1607, 1758, 1766, 1866, 1870, 1877, 1891, 1893, 1894, 1895, 1900, 1901, 1902, 1906, 1908, 1909, 1910, 1913, 1934], "test": [1, 3, 15, 16, 18, 29, 33, 36, 42, 47, 57, 59, 60, 72, 692, 698, 952, 1088, 1090, 1091, 1096, 1097, 1102, 1103, 1104, 1106, 1108, 1184, 1185, 1189, 1190, 1192, 1193, 1667, 1781, 1866, 1868, 1872, 1881, 1883, 1891, 1899, 1906, 1909, 1912, 1930, 1935, 1936], "slow": [1, 15, 907, 1207, 1211, 1227, 1228, 1614, 1615, 1650, 1848, 1899, 1904, 1930], "import": [1, 2, 3, 5, 7, 9, 11, 12, 13, 14, 16, 19, 20, 21, 25, 27, 28, 29, 33, 35, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 53, 56, 57, 61, 64, 67, 68, 69, 70, 71, 72, 86, 224, 679, 733, 740, 741, 742, 771, 772, 773, 791, 859, 860, 861, 910, 912, 931, 938, 970, 1122, 1124, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1137, 1173, 1195, 1196, 1199, 1201, 1203, 1204, 1205, 1207, 1208, 1209, 1213, 1214, 1215, 1249, 1250, 1253, 1254, 1267, 1299, 1396, 1430, 1610, 1620, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1645, 1646, 1647, 1648, 1649, 1650, 1657, 1664, 1685, 1686, 1709, 1868, 1870, 1871, 1872, 1881, 1883, 1886, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1906, 1907, 1909, 1916, 1919, 1921, 1922, 1923, 1925, 1928, 1930, 1931, 1932, 1935, 1936], "myfunc": [1, 1897], "inp": [1, 25, 39, 42, 72, 893, 894, 895, 1481, 1610, 1867, 1936], "clone": [1, 34, 39, 64, 256, 449, 896, 899, 910, 912, 913, 934, 1202, 1373, 1597, 1830, 1839, 1867, 1869, 1883, 1886, 1907, 1911, 1915, 1925, 1927, 1928, 1932], "run_fn": [1, 5, 856, 862], "10": [1, 11, 12, 13, 16, 19, 20, 21, 25, 29, 38, 39, 40, 42, 43, 48, 49, 59, 61, 315, 323, 337, 472, 513, 559, 580, 582, 583, 584, 684, 685, 696, 733, 744, 745, 759, 760, 761, 762, 764, 920, 932, 942, 944, 945, 946, 950, 970, 1050, 1051, 1052, 1053, 1054, 1069, 1071, 1088, 1090, 1093, 1094, 1096, 1097, 1100, 1101, 1103, 1104, 1106, 1108, 1114, 1122, 1141, 1151, 1161, 1187, 1203, 1208, 1209, 1215, 1220, 1223, 1250, 1252, 1253, 1268, 1270, 1272, 1277, 1279, 1280, 1281, 1282, 1284, 1292, 1303, 1320, 1336, 1337, 1338, 1340, 1341, 1347, 1350, 1353, 1354, 1357, 1360, 1363, 1373, 1374, 1382, 1383, 1384, 1385, 1395, 1400, 1401, 1402, 1427, 1431, 1432, 1437, 1440, 1441, 1445, 1447, 1469, 1473, 1474, 1475, 1476, 1477, 1481, 1487, 1506, 1509, 1513, 1520, 1521, 1531, 1601, 1610, 1633, 1641, 1655, 1658, 1667, 1671, 1691, 1697, 1699, 1717, 1718, 1726, 1751, 1764, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1789, 1804, 1816, 1817, 1827, 1831, 1832, 1835, 1837, 1851, 1859, 1865, 1868, 1869, 1870, 1871, 1872, 1878, 1891, 1894, 1895, 1902, 1905, 1906, 1907, 1908, 1909, 1911, 1925, 1926, 1928, 1930, 1931, 1932, 1937], "last": [1, 5, 6, 12, 22, 29, 31, 39, 40, 43, 46, 47, 48, 59, 71, 72, 317, 616, 691, 759, 876, 921, 930, 936, 946, 1014, 1054, 1059, 1063, 1088, 1090, 1093, 1094, 1096, 1097, 1100, 1101, 1103, 1104, 1106, 1108, 1110, 1155, 1156, 1160, 1173, 1175, 1183, 1195, 1219, 1253, 1256, 1261, 1298, 1303, 1338, 1351, 1366, 1374, 1376, 1382, 1400, 1402, 1417, 1437, 1440, 1444, 1445, 1458, 1474, 1475, 1481, 1500, 1521, 1530, 1543, 1566, 1567, 1610, 1611, 1656, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1742, 1751, 1789, 1791, 1798, 1799, 1800, 1802, 1803, 1804, 1812, 1816, 1832, 1834, 1837, 1856, 1857, 1870, 1871, 1881, 1884, 1886, 1891, 1894, 1896, 1899, 1906, 1909, 1913, 1914, 1925, 1931, 1932], "stdin": [1, 1173, 1791, 1886, 1896, 1906, 1925], "instal": [1, 3, 12, 14, 20, 23, 33, 34, 42, 72, 1865, 1902, 1903, 1909, 1913, 1921, 1930], "_tensor": [1, 157], "py": [1, 4, 12, 13, 14, 15, 16, 19, 20, 22, 24, 28, 29, 33, 36, 42, 46, 48, 51, 58, 60, 64, 72, 859, 1610, 1865, 1868, 1871, 1877, 1895, 1899, 1901, 1904, 1909, 1913, 1916, 1922], "93": [1, 616], "retain_graph": [1, 153, 892, 906, 912, 913, 1139, 1858, 1869, 1890, 1891, 1921], "90": [1, 1055, 1701, 1743], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 22, 33, 42, 57, 59, 1865, 1894, 1915], "53": [1, 482], "44": [1, 13, 323, 446, 1074, 1345, 1425, 1650], "set_detect_anomali": 1, "behaviour": [1, 692, 693, 698, 971, 1529, 1567, 1697, 1766, 1865, 1905], "interpos": [1, 1896], "grad_fn": [1, 153, 337, 879, 892, 900, 901, 902, 903, 904, 905, 910, 912, 913, 1127, 1618, 1793, 1891, 1902, 1907], "node": [1, 14, 15, 16, 24, 28, 29, 42, 46, 50, 52, 58, 59, 64, 72, 84, 88, 89, 818, 819, 820, 823, 824, 825, 1017, 1137, 1212, 1353, 1367, 1610, 1667, 1879, 1894, 1909, 1910, 1913, 1914, 1921, 1922, 1923, 1933, 1935], "grad_mod": [1, 1869], "least": [1, 5, 6, 8, 16, 29, 40, 44, 48, 58, 59, 64, 262, 404, 696, 923, 1059, 1061, 1062, 1071, 1112, 1113, 1151, 1159, 1160, 1195, 1220, 1243, 1270, 1292, 1324, 1338, 1610, 1644, 1865, 1871, 1885, 1889, 1891, 1892, 1894, 1898, 1914, 1917, 1923, 1925, 1926, 1927, 1932], "intermediari": [1, 33, 48, 898, 1891, 1899], "access": [1, 9, 11, 14, 15, 16, 19, 23, 36, 39, 42, 44, 64, 71, 556, 733, 898, 981, 1198, 1201, 1213, 1260, 1338, 1430, 1601, 1612, 1613, 1618, 1622, 1644, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1866, 1868, 1869, 1871, 1872, 1875, 1879, 1882, 1883, 1885, 1886, 1891, 1894, 1898, 1899, 1901, 1902, 1921, 1925, 1928, 1929, 1931, 1937], "isinst": [1, 28, 29, 39, 48, 72, 910, 912, 913, 1185, 1196, 1869, 1871, 1891, 1896, 1902, 1913, 1925], "dir": [1, 1014, 1667, 1865, 1871, 1913], "__call__": [1, 1198, 1430], "__class__": 1, "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1872], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1872], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1871], "__ne__": 1, "__new__": [1, 1870, 1872], "__reduce__": [1, 1913], "__reduce_ex__": 1, "__repr__": [1, 3, 1896], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 72, 1869, 1871], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1891], "metadata": [1, 3, 15, 28, 44, 52, 53, 1269, 1747, 1886, 1891, 1896, 1897, 1907, 1913, 1915, 1921, 1922, 1925, 1930], "next_funct": 1, "register_prehook": [1, 1891], "allclos": [1, 69, 70, 72, 907, 908, 1014, 1093, 1094, 1100, 1101, 1128, 1129, 1131, 1132, 1133, 1134, 1138, 1139, 1245, 1247, 1258, 1260, 1263, 1264, 1289, 1622, 1649, 1715, 1858, 1869, 1897, 1911, 1925], "pack": [1, 46, 737, 738, 739, 740, 741, 742, 744, 745, 759, 780, 1213, 1214, 1289, 1367, 1382, 1400, 1445, 1643, 1644, 1645, 1646, 1869, 1879, 1886, 1891, 1898, 1908, 1916], "unpack": [1, 759, 895, 1213, 1245, 1289, 1367, 1646, 1648, 1655, 1668, 1871, 1872, 1891, 1896, 1898], "hook": [1, 15, 16, 17, 20, 26, 43, 46, 64, 488, 747, 756, 898, 912, 913, 1017, 1198, 1367, 1430, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1651, 1654, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1866, 1887, 1895, 1896, 1901, 1913, 1916], "common": [1, 3, 8, 14, 20, 23, 25, 27, 28, 29, 39, 50, 59, 69, 684, 792, 864, 925, 928, 933, 965, 1066, 1071, 1116, 1117, 1118, 1119, 1141, 1220, 1269, 1319, 1348, 1349, 1350, 1353, 1469, 1511, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1735, 1747, 1813, 1866, 1871, 1876, 1885, 1891, 1894, 1896, 1897, 1898, 1902, 1904, 1907, 1909, 1913, 1925, 1926, 1929, 1932], "trade": [1, 5, 8, 64, 1261, 1347, 1893, 1898, 1917], "leav": [1, 8, 20, 50, 60, 153, 892, 1203, 1215, 1620, 1623, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1807, 1868, 1870, 1871, 1891, 1913, 1917], "especi": [1, 9, 11, 15, 16, 18, 19, 20, 31, 39, 42, 72, 256, 934, 952, 959, 1597, 1870, 1891, 1896, 1897, 1905, 1907, 1916, 1921, 1925], "notic": [1, 23, 25, 42, 688, 1091, 1105, 1292, 1302, 1346, 1482, 1546, 1688, 1689, 1694, 1695, 1701, 1866, 1868, 1891, 1925], "fit": [1, 9, 29, 51, 68, 69, 499, 916, 1195, 1675, 1737, 1914, 1932], "evalu": [1, 4, 8, 9, 14, 15, 17, 26, 46, 47, 48, 67, 72, 692, 698, 797, 862, 907, 1028, 1134, 1135, 1198, 1338, 1342, 1348, 1349, 1350, 1368, 1385, 1393, 1394, 1395, 1402, 1430, 1444, 1448, 1469, 1572, 1594, 1620, 1675, 1691, 1722, 1871, 1872, 1896, 1902, 1925, 1933], "saved_tensors_hook": [1, 898, 1891], "pack_hook": [1, 1891], "unpack_hook": [1, 1891], "pair": [1, 16, 42, 44, 47, 48, 59, 61, 616, 734, 864, 940, 970, 1105, 1211, 1261, 1299, 1422, 1431, 1436, 1440, 1569, 1684, 1731, 1870, 1871, 1877, 1884, 1891, 1894, 1914, 1921, 1922, 1923, 1930, 1932, 1935], "retriev": [1, 20, 39, 40, 42, 46, 50, 59, 72, 536, 888, 889, 1373, 1377, 1481, 1520, 1610, 1644, 1667, 1791, 1886, 1891, 1901, 1909, 1913, 1914, 1921, 1922, 1923], "everytim": 1, "store": [1, 3, 5, 15, 19, 20, 33, 36, 40, 44, 50, 60, 64, 72, 328, 334, 400, 685, 821, 824, 889, 932, 984, 986, 988, 1143, 1198, 1205, 1208, 1228, 1239, 1240, 1241, 1270, 1275, 1287, 1349, 1373, 1430, 1458, 1610, 1617, 1619, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1643, 1796, 1865, 1866, 1868, 1885, 1886, 1887, 1895, 1896, 1897, 1898, 1901, 1913, 1916, 1921, 1922, 1923, 1925, 1927, 1930, 1931, 1935], "content": [1, 3, 7, 23, 29, 44, 52, 72, 898, 1205, 1208, 1228, 1239, 1241, 1246, 1259, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1807, 1836, 1865, 1871, 1880, 1883, 1891, 1904, 1921, 1929, 1930, 1931], "equal": [1, 28, 40, 42, 48, 59, 60, 61, 72, 262, 499, 544, 616, 679, 693, 694, 695, 738, 739, 740, 741, 742, 759, 767, 768, 819, 820, 821, 824, 860, 875, 921, 928, 930, 941, 942, 960, 970, 986, 988, 1041, 1060, 1076, 1115, 1129, 1130, 1142, 1155, 1156, 1158, 1159, 1160, 1183, 1187, 1222, 1243, 1256, 1260, 1263, 1264, 1287, 1288, 1299, 1315, 1331, 1335, 1336, 1337, 1339, 1340, 1341, 1346, 1347, 1353, 1359, 1360, 1362, 1363, 1367, 1374, 1377, 1378, 1379, 1382, 1384, 1400, 1435, 1436, 1444, 1445, 1481, 1497, 1498, 1502, 1505, 1508, 1520, 1521, 1524, 1525, 1531, 1610, 1644, 1647, 1703, 1716, 1773, 1774, 1779, 1804, 1812, 1831, 1847, 1861, 1869, 1872, 1878, 1884, 1885, 1886, 1891, 1892, 1899, 1905, 1911, 1912, 1914, 1926, 1930, 1932], "term": [1, 8, 9, 14, 48, 59, 72, 557, 733, 762, 791, 942, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1102, 1103, 1104, 1107, 1119, 1229, 1338, 1346, 1384, 1391, 1400, 1401, 1435, 1444, 1461, 1526, 1538, 1572, 1583, 1610, 1617, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1735, 1780, 1866, 1871, 1890, 1891, 1896, 1897, 1898, 1899, 1904, 1909, 1913, 1916, 1922, 1925], "mulbackward0": [1, 901, 904, 905], "inplac": [1, 28, 67, 69, 72, 754, 757, 775, 777, 779, 790, 796, 813, 837, 838, 839, 856, 857, 862, 896, 1128, 1198, 1342, 1352, 1368, 1369, 1370, 1371, 1372, 1375, 1387, 1388, 1389, 1416, 1429, 1430, 1448, 1449, 1450, 1457, 1459, 1472, 1495, 1503, 1514, 1515, 1516, 1517, 1518, 1522, 1533, 1534, 1535, 1544, 1559, 1574, 1575, 1577, 1580, 1582, 1592, 1604, 1851, 1867, 1869, 1878, 1891, 1896, 1909, 1935], "lead": [1, 5, 7, 11, 17, 38, 42, 49, 64, 70, 72, 896, 900, 902, 906, 908, 954, 1122, 1139, 1228, 1400, 1445, 1461, 1807, 1858, 1871, 1885, 1886, 1891, 1893, 1895, 1896, 1897, 1904, 1905, 1908, 1912, 1913, 1916, 1925, 1930, 1931], "undefin": [1, 42, 49, 52, 64, 321, 472, 616, 877, 899, 907, 908, 928, 936, 1074, 1123, 1124, 1346, 1666, 1709, 1891, 1894, 1896, 1897], "recurs": [1, 13, 17, 20, 48, 64, 72, 954, 957, 1063, 1198, 1209, 1211, 1430, 1689, 1870, 1896, 1902, 1913, 1921], "inner": [1, 3, 64, 65, 70, 814, 816, 900, 1054, 1129, 1133, 1138, 1837, 1869, 1911, 1921, 1935], "save_on_cpu": 1, "pin_memori": [1, 39, 446, 447, 448, 449, 450, 1072, 1074, 1724, 1728, 1730, 1830, 1867, 1868, 1869, 1886, 1894, 1911, 1927], "within": [1, 5, 9, 14, 16, 18, 19, 28, 29, 39, 40, 42, 46, 47, 48, 59, 60, 61, 64, 71, 72, 91, 877, 907, 908, 952, 978, 1054, 1198, 1202, 1290, 1343, 1344, 1345, 1353, 1369, 1370, 1371, 1375, 1377, 1423, 1424, 1425, 1430, 1436, 1469, 1481, 1529, 1553, 1554, 1555, 1610, 1620, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1636, 1637, 1638, 1639, 1640, 1720, 1721, 1751, 1773, 1850, 1868, 1870, 1871, 1881, 1886, 1889, 1893, 1894, 1896, 1900, 1901, 1902, 1905, 1909, 1912, 1913, 1916, 1919, 1920, 1921, 1922, 1930], "move": [1, 5, 7, 8, 9, 17, 20, 29, 33, 42, 44, 64, 72, 523, 588, 820, 1091, 1198, 1205, 1264, 1269, 1305, 1348, 1349, 1350, 1403, 1404, 1405, 1430, 1469, 1567, 1612, 1613, 1683, 1870, 1879, 1880, 1883, 1885, 1894, 1897, 1898, 1902, 1903, 1904, 1907, 1912, 1913, 1914, 1921, 1927, 1932], "copi": [1, 7, 15, 18, 19, 28, 31, 39, 40, 42, 44, 50, 57, 64, 68, 69, 72, 193, 199, 209, 212, 317, 404, 449, 459, 464, 472, 493, 499, 579, 580, 581, 582, 602, 616, 791, 813, 837, 838, 878, 879, 894, 941, 949, 952, 984, 985, 1110, 1111, 1112, 1113, 1115, 1128, 1198, 1209, 1269, 1270, 1330, 1367, 1377, 1430, 1440, 1481, 1610, 1643, 1732, 1738, 1744, 1830, 1839, 1845, 1868, 1869, 1883, 1886, 1891, 1892, 1894, 1896, 1904, 1911, 1913, 1914, 1915, 1916, 1921, 1925, 1927, 1928, 1929, 1931, 1935], "pin": [1, 212, 339, 446, 447, 448, 449, 450, 464, 579, 602, 1072, 1074, 1198, 1430, 1643, 1724, 1728, 1730, 1830, 1866, 1886, 1927], "asynchron": [1, 3, 4, 25, 71, 199, 212, 579, 602, 997, 1198, 1201, 1216, 1430, 1866, 1872, 1893, 1895, 1921, 1927, 1930], "prod_1": 1, "prod_2": 1, "del": [1, 1872, 1883, 1896, 1898], "illustr": [1, 11, 20, 22, 1871, 1890, 1896, 1925], "aliv": [1, 39, 50, 59, 975, 1891, 1894, 1898, 1904, 1921, 1922, 1923], "live": [1, 11, 15, 46, 1014, 1017, 1198, 1430, 1868, 1894, 1898, 1921, 1923], "releas": [1, 7, 29, 38, 42, 59, 61, 68, 72, 513, 686, 942, 943, 971, 972, 973, 979, 996, 1006, 1007, 1010, 1014, 1015, 1017, 1028, 1144, 1198, 1228, 1239, 1241, 1242, 1243, 1246, 1259, 1287, 1288, 1308, 1370, 1400, 1430, 1445, 1553, 1554, 1555, 1657, 1715, 1731, 1747, 1812, 1816, 1839, 1865, 1866, 1870, 1881, 1883, 1891, 1893, 1894, 1900, 1905, 1906, 1907, 1908, 1909, 1916, 1921, 1931, 1932], "delet": [1, 28, 42, 72, 893, 972, 980, 1865, 1879, 1883, 1891, 1911, 1920, 1921, 1923], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 17, 19, 21, 31, 34, 36, 42, 44, 46, 60, 65, 71, 679, 688, 759, 767, 768, 900, 902, 906, 1045, 1209, 1292, 1302, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1348, 1363, 1368, 1369, 1370, 1371, 1375, 1378, 1379, 1382, 1383, 1393, 1400, 1401, 1436, 1445, 1447, 1464, 1473, 1475, 1477, 1478, 1479, 1480, 1497, 1498, 1515, 1516, 1517, 1522, 1524, 1525, 1546, 1610, 1705, 1851, 1866, 1868, 1870, 1871, 1872, 1875, 1877, 1885, 1886, 1891, 1896, 1898, 1899, 1906, 1909, 1910, 1915, 1916, 1921, 1925, 1930], "messag": [1, 2, 5, 29, 36, 42, 52, 61, 69, 72, 85, 86, 623, 679, 1031, 1033, 1227, 1228, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1865, 1868, 1869, 1871, 1872, 1877, 1898, 1909, 1914, 1915, 1921, 1923, 1932], "get": [1, 8, 11, 14, 15, 20, 21, 22, 26, 27, 29, 33, 39, 42, 43, 44, 59, 60, 61, 62, 64, 69, 71, 72, 91, 153, 337, 685, 733, 787, 788, 860, 861, 892, 895, 936, 999, 1000, 1001, 1018, 1058, 1128, 1131, 1132, 1133, 1145, 1173, 1213, 1265, 1373, 1374, 1398, 1399, 1426, 1427, 1428, 1440, 1457, 1610, 1611, 1618, 1644, 1651, 1736, 1751, 1865, 1866, 1868, 1871, 1881, 1883, 1884, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1911, 1913, 1916, 1921, 1923, 1925, 1929, 1930, 1931, 1936], "register_multi_grad_hook": [1, 1891], "fn": [1, 12, 17, 19, 20, 21, 25, 28, 29, 50, 51, 52, 56, 61, 64, 72, 912, 913, 954, 955, 957, 1129, 1135, 1139, 1198, 1199, 1210, 1215, 1430, 1858, 1868, 1870, 1871, 1875, 1883, 1891, 1901, 1921], "multi": [1, 4, 47, 50, 59, 759, 975, 1018, 1038, 1071, 1091, 1160, 1198, 1347, 1367, 1382, 1400, 1430, 1433, 1434, 1435, 1436, 1445, 1473, 1475, 1482, 1502, 1610, 1866, 1868, 1871, 1891, 1893, 1894, 1902, 1906, 1912, 1921, 1925, 1928, 1931, 1933], "specifi": [1, 2, 3, 5, 8, 12, 14, 18, 28, 33, 39, 40, 42, 46, 47, 48, 50, 52, 57, 58, 59, 60, 64, 72, 100, 153, 198, 261, 321, 333, 472, 482, 493, 497, 499, 500, 513, 515, 517, 536, 544, 545, 559, 579, 582, 583, 584, 586, 587, 602, 679, 734, 740, 741, 742, 767, 768, 792, 793, 794, 798, 813, 822, 825, 839, 853, 857, 858, 860, 877, 879, 891, 892, 906, 923, 946, 952, 969, 970, 971, 974, 975, 984, 985, 986, 988, 1003, 1006, 1017, 1042, 1052, 1053, 1054, 1058, 1059, 1061, 1071, 1074, 1085, 1088, 1090, 1091, 1093, 1094, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1129, 1130, 1133, 1139, 1140, 1151, 1159, 1160, 1198, 1202, 1213, 1214, 1240, 1250, 1252, 1254, 1255, 1264, 1267, 1269, 1270, 1280, 1297, 1299, 1305, 1324, 1325, 1328, 1344, 1345, 1346, 1347, 1353, 1362, 1364, 1366, 1367, 1373, 1374, 1377, 1384, 1390, 1391, 1396, 1397, 1400, 1421, 1422, 1427, 1430, 1433, 1434, 1435, 1436, 1437, 1444, 1461, 1462, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1497, 1498, 1501, 1502, 1512, 1513, 1520, 1521, 1526, 1529, 1541, 1548, 1564, 1565, 1572, 1579, 1585, 1586, 1610, 1615, 1617, 1618, 1621, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1654, 1657, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1682, 1683, 1684, 1685, 1686, 1691, 1696, 1697, 1705, 1713, 1722, 1738, 1743, 1744, 1747, 1764, 1792, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1807, 1810, 1811, 1815, 1831, 1833, 1837, 1847, 1848, 1849, 1850, 1852, 1853, 1854, 1858, 1865, 1868, 1870, 1871, 1875, 1877, 1878, 1880, 1881, 1884, 1885, 1891, 1894, 1896, 1900, 1902, 1904, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1920, 1921, 1925, 1926, 1927, 1928, 1930, 1932], "ignor": [1, 5, 7, 11, 23, 28, 42, 46, 51, 57, 64, 72, 153, 499, 543, 685, 688, 689, 690, 734, 793, 794, 857, 860, 861, 873, 892, 906, 907, 908, 920, 942, 970, 1018, 1019, 1038, 1039, 1092, 1094, 1102, 1103, 1104, 1143, 1158, 1198, 1209, 1215, 1218, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1289, 1325, 1326, 1327, 1343, 1344, 1345, 1346, 1347, 1364, 1366, 1374, 1382, 1384, 1390, 1396, 1397, 1400, 1421, 1422, 1423, 1424, 1425, 1430, 1433, 1434, 1435, 1436, 1437, 1444, 1445, 1461, 1462, 1473, 1478, 1501, 1502, 1512, 1521, 1541, 1564, 1572, 1610, 1657, 1668, 1691, 1699, 1703, 1764, 1794, 1795, 1812, 1816, 1839, 1868, 1871, 1872, 1878, 1885, 1891, 1894, 1896, 1909, 1925, 1932], "rel": [1, 8, 9, 20, 33, 40, 42, 48, 64, 72, 488, 693, 875, 907, 908, 912, 913, 970, 1187, 1252, 1255, 1478, 1479, 1494, 1529, 1668, 1672, 1673, 1699, 1878, 1881, 1893, 1894, 1901, 1909, 1913, 1932], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 15, 16, 18, 27, 72, 796, 837, 838, 856, 857, 952, 1128, 1202, 1913, 1931], "version": [1, 2, 5, 8, 17, 25, 29, 33, 38, 40, 42, 44, 48, 60, 64, 67, 68, 72, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 124, 126, 128, 130, 133, 134, 136, 144, 146, 149, 150, 152, 155, 161, 163, 165, 167, 169, 171, 180, 189, 197, 201, 204, 206, 216, 218, 234, 238, 240, 246, 249, 251, 253, 255, 259, 264, 271, 273, 275, 279, 281, 285, 287, 294, 296, 298, 306, 308, 310, 312, 314, 316, 318, 320, 358, 360, 362, 364, 366, 368, 370, 373, 375, 377, 378, 385, 387, 389, 391, 393, 397, 401, 403, 421, 424, 427, 429, 440, 442, 444, 452, 457, 467, 470, 486, 490, 492, 508, 511, 512, 514, 516, 522, 526, 528, 531, 533, 535, 548, 550, 552, 555, 561, 563, 570, 574, 576, 592, 595, 597, 599, 601, 611, 621, 734, 735, 736, 748, 749, 750, 751, 752, 753, 774, 775, 776, 777, 779, 783, 784, 803, 804, 805, 838, 846, 854, 855, 857, 1017, 1127, 1155, 1173, 1195, 1198, 1201, 1202, 1205, 1208, 1227, 1240, 1241, 1245, 1246, 1259, 1292, 1329, 1347, 1400, 1430, 1431, 1445, 1482, 1494, 1519, 1529, 1536, 1545, 1576, 1578, 1593, 1594, 1598, 1602, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1651, 1652, 1683, 1685, 1686, 1748, 1749, 1750, 1807, 1810, 1811, 1812, 1816, 1836, 1851, 1853, 1854, 1865, 1884, 1885, 1891, 1892, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1906, 1908, 1909, 1910, 1912, 1913, 1915, 1919, 1925, 1932, 1933], "_allowmutationonsavedcontext": 1, "purpos": [1, 12, 19, 20, 22, 29, 40, 42, 72, 472, 499, 759, 907, 1207, 1292, 1353, 1382, 1436, 1604, 1605, 1606, 1607, 1764, 1881, 1886, 1891, 1896, 1913, 1922], "clear": [1, 2, 8, 9, 61, 72, 959, 1198, 1430, 1431, 1440, 1667, 1865, 1891, 1894, 1902, 1907, 1911, 1912], "upon": [1, 2, 39, 43, 50, 52, 72, 1610, 1619, 1622, 1883, 1891, 1894, 1909, 1916, 1923], "sin_": [1, 1869, 1884], "8415": [1, 1925], "sinbackward0": 1, "variou": [2, 5, 15, 33, 39, 42, 72, 1270, 1875, 1878, 1883, 1886, 1896, 1902, 1904, 1912, 1916, 1918, 1925, 1936], "get_cpu_cap": 2, "capabl": [2, 8, 33, 34, 42, 999, 1722, 1875, 1894, 1900, 1901, 1903, 1933], "string": [2, 3, 5, 12, 16, 20, 29, 32, 33, 39, 42, 50, 56, 57, 59, 72, 602, 813, 853, 958, 997, 1014, 1015, 1071, 1128, 1198, 1205, 1208, 1269, 1358, 1359, 1360, 1430, 1431, 1440, 1473, 1475, 1477, 1504, 1505, 1506, 1633, 1715, 1747, 1755, 1757, 1865, 1869, 1870, 1871, 1872, 1885, 1891, 1896, 1901, 1902, 1907, 1909, 1913, 1915, 1921, 1927, 1928, 1930, 1935, 1936], "possibl": [2, 9, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 29, 33, 34, 36, 42, 44, 48, 68, 69, 72, 497, 498, 579, 616, 857, 878, 879, 946, 952, 981, 1119, 1131, 1198, 1211, 1238, 1251, 1254, 1255, 1258, 1263, 1269, 1347, 1353, 1430, 1436, 1520, 1521, 1540, 1573, 1598, 1622, 1623, 1735, 1738, 1753, 1804, 1812, 1830, 1868, 1870, 1871, 1883, 1884, 1889, 1891, 1893, 1894, 1895, 1896, 1899, 1904, 1905, 1906, 1908, 1913, 1916, 1921, 1923, 1928, 1932], "vsx": 2, "z": [2, 3, 10, 11, 14, 28, 29, 48, 64, 69, 616, 819, 876, 898, 943, 944, 960, 1071, 1075, 1299, 1383, 1529, 1622, 1655, 1656, 1664, 1709, 1739, 1740, 1868, 1869, 1870, 1885, 1891, 1893, 1894, 1899, 1900, 1909, 1913, 1919, 1921, 1923], "vector": [2, 19, 31, 40, 48, 64, 65, 69, 256, 315, 317, 323, 688, 689, 690, 883, 892, 894, 900, 901, 902, 903, 904, 905, 906, 933, 934, 940, 951, 966, 970, 971, 1052, 1053, 1058, 1060, 1134, 1138, 1139, 1143, 1230, 1237, 1245, 1253, 1254, 1258, 1261, 1265, 1266, 1267, 1287, 1292, 1299, 1320, 1322, 1348, 1349, 1350, 1353, 1367, 1373, 1374, 1377, 1385, 1393, 1394, 1395, 1439, 1469, 1478, 1481, 1520, 1521, 1529, 1531, 1565, 1569, 1597, 1614, 1616, 1618, 1622, 1653, 1657, 1704, 1705, 1796, 1816, 1852, 1855, 1858, 1891, 1899, 1916, 1925, 1930], "NO": 2, "avx": 2, "avx2": [2, 1916], "avx512": 2, "is_built": [2, 1903], "built": [2, 3, 7, 8, 12, 13, 20, 29, 33, 40, 42, 47, 52, 67, 72, 953, 997, 1207, 1479, 1691, 1866, 1886, 1891, 1893, 1894, 1896, 1900, 1902, 1903, 1904, 1918, 1936], "necessarili": [2, 40, 42, 48, 50, 59, 86, 472, 907, 1234, 1256, 1267, 1298, 1366, 1437, 1894, 1896], "machin": [2, 42, 50, 59, 64, 65, 70, 1202, 1207, 1243, 1466, 1900, 1901, 1902, 1903, 1904, 1906, 1909, 1910, 1913, 1920, 1921, 1922], "driver": [2, 25, 29, 1143, 1243, 1261, 1262, 1307, 1869, 1894, 1905, 1921], "would": [2, 3, 5, 8, 9, 11, 12, 14, 15, 16, 19, 22, 23, 28, 29, 31, 33, 39, 42, 48, 50, 52, 59, 60, 64, 66, 69, 72, 153, 446, 447, 448, 449, 450, 697, 759, 793, 853, 892, 896, 906, 942, 1072, 1074, 1092, 1132, 1133, 1196, 1198, 1199, 1203, 1205, 1213, 1214, 1311, 1312, 1343, 1344, 1345, 1346, 1347, 1382, 1396, 1400, 1423, 1424, 1425, 1430, 1440, 1445, 1529, 1540, 1601, 1610, 1611, 1643, 1655, 1686, 1724, 1728, 1730, 1741, 1751, 1830, 1831, 1836, 1868, 1870, 1871, 1884, 1885, 1886, 1887, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1904, 1907, 1909, 1912, 1913, 1914, 1916, 1921, 1922, 1923, 1925], "allow_tf32": [2, 1759, 1869, 1894, 1905], "tensorfloat": 2, "core": [2, 3, 7, 8, 14, 18, 20, 21, 24, 68, 952, 1028, 1666, 1871, 1875, 1893, 1894, 1895, 1904, 1905, 1913, 1933], "amper": [2, 21, 1925], "newer": [2, 19, 33, 1034, 1651, 1893, 1894, 1907, 1910, 1912, 1913, 1917], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1894, 1905], "precis": [2, 3, 8, 24, 31, 33, 40, 48, 64, 685, 688, 907, 908, 920, 932, 1017, 1114, 1147, 1243, 1261, 1267, 1292, 1302, 1343, 1344, 1345, 1347, 1358, 1359, 1360, 1361, 1362, 1363, 1383, 1401, 1417, 1423, 1424, 1425, 1482, 1540, 1579, 1610, 1744, 1759, 1764, 1866, 1871, 1881, 1887, 1891, 1902, 1913, 1916, 1917, 1919, 1926, 1928, 1930, 1931, 1937], "gemm": [2, 16, 1893, 1909], "allow_bf16_reduced_precision_reduct": [2, 1894, 1905], "cufft_plan_cach": [2, 1894], "cufft": 2, "queri": [2, 14, 15, 20, 42, 59, 72, 734, 974, 975, 977, 983, 1030, 1034, 1048, 1049, 1198, 1430, 1436, 1579, 1621, 1869, 1894, 1913], "specif": [2, 3, 7, 8, 9, 14, 15, 17, 19, 20, 24, 28, 29, 33, 42, 44, 46, 48, 50, 57, 59, 61, 64, 69, 72, 91, 513, 853, 860, 916, 977, 1062, 1091, 1160, 1195, 1202, 1207, 1211, 1213, 1214, 1298, 1377, 1402, 1579, 1604, 1605, 1624, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1754, 1793, 1865, 1868, 1870, 1871, 1873, 1875, 1877, 1881, 1885, 1887, 1891, 1894, 1896, 1900, 1904, 1906, 1909, 1912, 1913, 1915, 1916, 1917, 1919, 1921, 1923, 1930, 1931], "via": [2, 7, 12, 14, 15, 16, 20, 23, 27, 33, 34, 39, 42, 44, 48, 57, 64, 68, 72, 517, 616, 907, 908, 939, 972, 1008, 1028, 1075, 1131, 1270, 1348, 1349, 1350, 1367, 1385, 1393, 1394, 1395, 1402, 1469, 1617, 1651, 1654, 1697, 1868, 1870, 1871, 1881, 1883, 1886, 1889, 1891, 1894, 1896, 1897, 1898, 1900, 1902, 1904, 1905, 1909, 1913, 1916, 1921, 1922, 1925, 1928, 1929, 1936], "readonli": 2, "show": [2, 4, 7, 18, 21, 22, 24, 25, 29, 32, 36, 39, 40, 42, 44, 49, 64, 72, 900, 906, 952, 1122, 1198, 1299, 1430, 1601, 1667, 1865, 1866, 1871, 1884, 1893, 1894, 1895, 1899, 1900, 1902, 1909, 1912, 1913, 1921, 1923], "max_siz": [2, 58, 60, 1894], "capac": [2, 1041, 1894, 1904], "preferred_linalg_librari": 2, "subject": [2, 3, 14, 21, 24, 31, 36, 42, 46, 47, 64, 71, 72, 864, 1579, 1610, 1871, 1884, 1885, 1891, 1896, 1909, 1910, 1914, 1915, 1916, 1917, 1921, 1925, 1928, 1933, 1934, 1935], "algebra": [2, 9, 1071, 1255, 1866, 1876], "cusolv": [2, 1261, 1262, 1816], "magma": [2, 944, 1243, 1287, 1715, 1816, 1908, 1925], "decid": [2, 4, 7, 15, 16, 17, 22, 42, 59, 68, 1633, 1878, 1909, 1925], "heurist": [2, 16, 22, 29, 33, 39, 59, 60, 72, 1071], "overrid": [2, 28, 33, 40, 42, 43, 48, 52, 60, 64, 69, 72, 791, 792, 853, 889, 891, 1014, 1346, 1347, 1364, 1366, 1390, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1501, 1502, 1512, 1541, 1564, 1572, 1624, 1686, 1747, 1764, 1866, 1871, 1875, 1907, 1912, 1913, 1916, 1921, 1925, 1930, 1935], "wherev": [2, 9, 20, 1884], "pick": [2, 13, 14, 18, 22, 42, 58, 60, 513, 952, 1891, 1921], "prefer": [2, 9, 39, 44, 50, 64, 861, 877, 902, 1196, 1238, 1251, 1255, 1263, 1270, 1437, 1579, 1751, 1812, 1830, 1868, 1891, 1894, 1913, 1925], "achiev": [2, 29, 39, 40, 42, 48, 60, 64, 1071, 1135, 1198, 1347, 1353, 1430, 1436, 1437, 1502, 1531, 1610, 1882, 1894, 1901, 1904, 1913, 1921, 1923], "better": [2, 3, 7, 8, 9, 12, 13, 16, 18, 20, 24, 29, 33, 39, 42, 50, 68, 952, 1040, 1127, 1131, 1132, 1173, 1185, 1213, 1366, 1463, 1585, 1610, 1697, 1722, 1871, 1890, 1891, 1893, 1894, 1899, 1908, 1909, 1912, 1915, 1916, 1917, 1925, 1930, 1935], "select": [2, 5, 20, 24, 34, 37, 39, 42, 48, 50, 315, 317, 319, 323, 759, 942, 978, 979, 983, 990, 991, 992, 993, 995, 1016, 1020, 1022, 1023, 1024, 1026, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1040, 1041, 1044, 1046, 1048, 1049, 1091, 1270, 1299, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1382, 1400, 1445, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1579, 1638, 1639, 1754, 1827, 1861, 1867, 1868, 1869, 1871, 1883, 1884, 1885, 1886, 1891, 1893, 1894, 1899, 1906, 1911, 1916, 1925, 1929, 1932], "incorrect": [2, 4, 5, 64, 72, 86, 256, 513, 555, 898, 907, 934, 1213, 1256, 1269, 1436, 1474, 1475, 1476, 1477, 1597, 1657, 1812, 1868, 1871, 1894, 1905, 1909], "linalg": [2, 408, 942, 943, 944, 945, 971, 1057, 1143, 1176, 1278, 1287, 1288, 1289, 1293, 1294, 1617, 1618, 1622, 1657, 1702, 1707, 1709, 1715, 1786, 1816, 1817, 1839, 1855, 1866], "inv": [2, 48, 944, 1176, 1229, 1233, 1239, 1255, 1259, 1263], "inv_ex": 2, "cholesky_ex": [2, 1227], "lu_factor": [2, 1246, 1247, 1287, 1288, 1289], "lu": [2, 10, 1239, 1245, 1246, 1247, 1288, 1289, 1869], "eigh": [2, 1227, 1233, 1236, 1255, 1261, 1905], "eighval": 2, "svdval": [2, 1229, 1243, 1252, 1261, 1816, 1905], "_linalgbackend": 2, "sdpbackend": 2, "enum": [2, 20, 42, 795, 1896, 1909, 1916, 1921], "scale": [2, 7, 16, 39, 48, 50, 58, 60, 100, 474, 476, 616, 684, 688, 689, 690, 737, 738, 739, 740, 741, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 758, 769, 771, 772, 773, 774, 776, 779, 780, 794, 798, 801, 818, 819, 820, 821, 824, 920, 1085, 1086, 1089, 1107, 1138, 1139, 1284, 1342, 1368, 1373, 1374, 1375, 1391, 1402, 1457, 1482, 1483, 1484, 1520, 1521, 1522, 1538, 1540, 1579, 1580, 1585, 1670, 1691, 1717, 1718, 1719, 1720, 1721, 1794, 1795, 1813, 1858, 1866, 1869, 1885, 1889, 1894, 1898, 1902, 1916, 1917, 1919, 1926], "product": [2, 21, 34, 42, 48, 59, 153, 685, 688, 689, 690, 759, 892, 894, 901, 903, 904, 905, 906, 920, 932, 938, 942, 966, 971, 983, 1030, 1034, 1048, 1049, 1052, 1068, 1071, 1134, 1138, 1139, 1175, 1218, 1230, 1237, 1263, 1264, 1266, 1292, 1299, 1302, 1322, 1382, 1383, 1400, 1401, 1528, 1579, 1617, 1703, 1704, 1713, 1832, 1847, 1855, 1858, 1866, 1868, 1884, 1891, 1899, 1901, 1905, 1913, 1925], "attent": [2, 7, 47, 734, 1347, 1436, 1473, 1475, 1477, 1502, 1579, 1866, 1908, 1929], "stai": [2, 7, 46, 142, 1367, 1894, 1904, 1916, 1921, 1925], "align": [2, 9, 18, 40, 759, 778, 784, 819, 825, 952, 1071, 1151, 1253, 1345, 1353, 1366, 1382, 1396, 1400, 1424, 1425, 1445, 1482, 1512, 1513, 1540, 1541, 1598, 1617, 1657, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1689, 1837, 1866, 1884, 1891, 1899, 1909, 1919, 1926], "src": [2, 3, 42, 72, 199, 231, 315, 323, 472, 512, 513, 514, 515, 516, 517, 519, 537, 1062, 1128, 1320, 1473, 1476, 1477, 1666, 1748, 1749, 1750, 1754, 1785, 1826, 1851, 1867, 1869, 1913], "transform": [2, 3, 19, 20, 21, 39, 44, 47, 64, 69, 780, 796, 837, 838, 856, 857, 943, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1127, 1128, 1129, 1133, 1138, 1195, 1207, 1351, 1385, 1393, 1394, 1395, 1402, 1417, 1458, 1474, 1475, 1476, 1477, 1494, 1500, 1529, 1546, 1565, 1601, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1780, 1812, 1866, 1897, 1914, 1916, 1925, 1930, 1935], "sdp_utils_cpp": 2, "h": [2, 4, 10, 14, 24, 33, 48, 488, 740, 741, 742, 759, 1227, 1234, 1237, 1247, 1261, 1336, 1337, 1344, 1345, 1347, 1349, 1350, 1354, 1359, 1360, 1362, 1370, 1371, 1373, 1375, 1382, 1383, 1394, 1395, 1400, 1401, 1402, 1413, 1414, 1424, 1425, 1442, 1443, 1445, 1447, 1464, 1480, 1483, 1484, 1494, 1502, 1529, 1564, 1570, 1571, 1617, 1618, 1651, 1666, 1816, 1869, 1884, 1885, 1891, 1894, 1895, 1896, 1898, 1899, 1909, 1929, 1930, 1931], "flash_sdp_en": 2, "flash": 2, "enable_mem_efficient_sdp": [2, 1579], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1579], "math_sdp_en": 2, "math": [2, 29, 39, 72, 1081, 1247, 1249, 1541, 1579, 1705, 1722, 1817, 1866, 1868, 1870, 1871, 1905, 1925, 1926, 1932], "enable_math_sdp": [2, 1579], "sdp_kernel": [2, 1579], "enable_flash": 2, "enable_math": [2, 1579], "enable_mem_effici": 2, "temporarili": [2, 22, 50, 1755, 1891, 1909, 1915], "previou": [2, 16, 18, 36, 42, 59, 64, 72, 555, 759, 952, 1006, 1116, 1151, 1208, 1268, 1284, 1382, 1400, 1445, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1667, 1722, 1812, 1879, 1891, 1894, 1896, 1902, 1908, 1916, 1923], "restor": [2, 5, 13, 46, 72, 91, 959, 1116, 1268, 1284, 1654, 1742, 1764, 1902, 1907], "is_avail": [2, 35, 42, 1866, 1894, 1900, 1903, 1907, 1915], "determinist": [2, 3, 5, 38, 42, 48, 72, 86, 91, 513, 872, 1146, 1179, 1201, 1213, 1214, 1295, 1298, 1300, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1400, 1445, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1579, 1752, 1758, 1851, 1869, 1891, 1906, 1912, 1920], "algorithm": [2, 3, 7, 31, 37, 40, 43, 46, 48, 50, 64, 91, 759, 778, 784, 942, 1195, 1238, 1245, 1251, 1255, 1261, 1270, 1287, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1380, 1382, 1400, 1445, 1481, 1482, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1529, 1540, 1579, 1598, 1610, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1686, 1705, 1744, 1759, 1816, 1817, 1851, 1866, 1891, 1894, 1905, 1921, 1925], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 872, 1179, 1758, 1906], "benchmark": [2, 11, 16, 21, 22, 24, 1866, 1869, 1894, 1900], "fastest": [2, 876, 1610, 1656, 1672, 1673, 1899, 1906, 1912], "benchmark_limit": 2, "maximum": [2, 14, 48, 59, 60, 694, 696, 770, 794, 819, 820, 821, 824, 825, 873, 985, 1020, 1022, 1028, 1035, 1036, 1050, 1051, 1117, 1133, 1158, 1159, 1160, 1270, 1295, 1315, 1389, 1520, 1521, 1615, 1689, 1697, 1722, 1736, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1867, 1869, 1877, 1889, 1890, 1894, 1904, 1911, 1919, 1932], "try": [2, 3, 4, 7, 8, 12, 14, 15, 16, 18, 19, 29, 42, 44, 51, 52, 56, 59, 64, 68, 69, 84, 85, 952, 1041, 1124, 1133, 1139, 1203, 1204, 1213, 1315, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1474, 1476, 1482, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1579, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1858, 1865, 1868, 1871, 1872, 1891, 1894, 1896, 1898, 1899, 1904, 1909, 1912, 1913, 1916, 1917, 1921, 1925], "dispatch": [2, 16, 17, 42, 64, 72, 86, 1203, 1311, 1312, 1871, 1875, 1894, 1896, 1909, 1936], "v8": 2, "verbos": [2, 16, 29, 33, 42, 72, 679, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1865, 1877, 1885, 1909, 1910, 1930], "On": [2, 11, 14, 15, 33, 38, 39, 42, 43, 48, 60, 64, 69, 72, 685, 688, 920, 932, 1245, 1292, 1302, 1358, 1359, 1360, 1361, 1362, 1363, 1383, 1398, 1399, 1400, 1401, 1417, 1440, 1445, 1458, 1610, 1672, 1673, 1682, 1685, 1866, 1868, 1878, 1891, 1893, 1894, 1896, 1905, 1913, 1921, 1922, 1923, 1925], "demand": [2, 39, 1008, 1870, 1901, 1904, 1921], "onemkl": 2, "easier": [2, 7, 16, 29, 39, 72, 1868, 1870, 1886, 1891, 1892, 1896, 1897, 1925], "dump": [2, 16, 20, 29, 72, 972, 1895, 1908], "durat": [2, 16, 29, 42, 56, 59, 1311, 1312, 1881, 1915], "kernel": [2, 3, 4, 11, 15, 16, 17, 18, 19, 22, 25, 29, 31, 33, 36, 42, 64, 71, 738, 739, 740, 741, 742, 771, 772, 773, 952, 975, 977, 978, 1014, 1015, 1047, 1049, 1317, 1343, 1344, 1345, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1378, 1379, 1398, 1399, 1406, 1407, 1408, 1409, 1410, 1411, 1423, 1424, 1425, 1426, 1427, 1428, 1481, 1504, 1505, 1506, 1507, 1508, 1509, 1524, 1525, 1579, 1620, 1868, 1875, 1879, 1886, 1894, 1896, 1897, 1903, 1905, 1909, 1912, 1915, 1917, 1925], "environ": [2, 3, 7, 12, 16, 22, 29, 33, 34, 36, 38, 40, 48, 50, 52, 57, 62, 72, 679, 1207, 1213, 1400, 1445, 1851, 1865, 1868, 1877, 1891, 1893, 1895, 1900, 1905, 1906, 1908, 1914, 1921], "variabl": [2, 3, 5, 14, 16, 19, 22, 29, 33, 36, 38, 40, 48, 50, 52, 57, 62, 64, 69, 72, 449, 679, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 727, 728, 729, 730, 731, 733, 737, 738, 739, 740, 741, 742, 744, 745, 755, 759, 763, 798, 896, 966, 970, 1040, 1072, 1139, 1211, 1213, 1270, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1373, 1374, 1382, 1383, 1400, 1401, 1402, 1415, 1417, 1430, 1433, 1438, 1445, 1447, 1610, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1661, 1668, 1670, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1724, 1726, 1728, 1851, 1858, 1863, 1865, 1866, 1877, 1878, 1885, 1886, 1891, 1893, 1895, 1898, 1899, 1905, 1906, 1908, 1909, 1912, 1916, 1921, 1927, 1930], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 11, 16, 25, 29, 39, 42, 72, 91, 679, 857, 968, 970, 1028, 1243, 1261, 1338, 1377, 1481, 1523, 1610, 1697, 1784, 1796, 1866, 1883, 1885, 1886, 1893, 1894, 1898, 1902, 1905, 1907, 1909, 1913, 1914, 1917, 1921, 1925, 1928, 1931], "moreov": [2, 64, 513, 1610, 1685], "investig": [2, 7, 25, 42, 69], "singl": [2, 3, 5, 11, 14, 15, 16, 18, 19, 20, 21, 26, 28, 29, 33, 40, 42, 44, 46, 47, 48, 50, 52, 58, 59, 64, 65, 67, 68, 69, 70, 71, 72, 256, 679, 694, 695, 765, 766, 767, 768, 771, 772, 773, 813, 893, 900, 901, 902, 903, 904, 905, 906, 921, 930, 934, 952, 966, 970, 1014, 1017, 1127, 1129, 1130, 1133, 1135, 1139, 1155, 1156, 1160, 1183, 1197, 1198, 1213, 1214, 1217, 1275, 1299, 1311, 1312, 1336, 1337, 1340, 1341, 1344, 1345, 1347, 1358, 1359, 1360, 1362, 1363, 1366, 1367, 1378, 1379, 1385, 1398, 1399, 1402, 1424, 1425, 1430, 1438, 1442, 1443, 1458, 1469, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1524, 1525, 1526, 1553, 1554, 1555, 1597, 1603, 1605, 1608, 1609, 1610, 1614, 1615, 1616, 1652, 1653, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1691, 1712, 1738, 1804, 1810, 1811, 1848, 1849, 1851, 1853, 1854, 1858, 1866, 1868, 1870, 1871, 1878, 1879, 1883, 1885, 1886, 1891, 1893, 1894, 1896, 1897, 1899, 1902, 1904, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1915, 1916, 1922, 1923, 1925, 1928, 1931, 1932, 1935], "enough": [2, 8, 17, 40, 72, 1209, 1320, 1479, 1798, 1799, 1800, 1801, 1802, 1803, 1851, 1870, 1883, 1886, 1896, 1899, 1912, 1913, 1928, 1936], "scope": [2, 7, 15, 28, 61, 72, 1124, 1469, 1633, 1868, 1870, 1871, 1894, 1898, 1909, 1913, 1923], "second": [2, 5, 11, 20, 33, 36, 42, 46, 50, 52, 59, 61, 70, 72, 685, 688, 690, 693, 759, 793, 873, 874, 875, 883, 891, 907, 908, 920, 924, 925, 927, 928, 929, 932, 971, 983, 1030, 1034, 1048, 1049, 1059, 1061, 1062, 1068, 1076, 1117, 1118, 1129, 1132, 1133, 1134, 1138, 1139, 1141, 1142, 1151, 1154, 1162, 1163, 1164, 1175, 1187, 1220, 1222, 1230, 1266, 1269, 1275, 1276, 1286, 1292, 1296, 1298, 1299, 1301, 1302, 1326, 1331, 1334, 1338, 1344, 1345, 1351, 1359, 1360, 1362, 1363, 1373, 1374, 1381, 1382, 1396, 1399, 1400, 1418, 1422, 1424, 1425, 1445, 1458, 1511, 1513, 1547, 1601, 1633, 1672, 1673, 1676, 1682, 1686, 1697, 1743, 1793, 1801, 1836, 1841, 1843, 1852, 1855, 1858, 1870, 1871, 1891, 1894, 1896, 1897, 1898, 1899, 1902, 1906, 1909, 1915, 1921, 1926, 1930], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 14, 16, 17, 20, 25, 26, 28, 29, 34, 36, 39, 42, 50, 51, 52, 56, 64, 68, 72, 499, 679, 746, 893, 894, 895, 903, 1128, 1143, 1367, 1610, 1866, 1867, 1868, 1871, 1872, 1877, 1881, 1883, 1886, 1889, 1891, 1893, 1896, 1899, 1910, 1913, 1915, 1916, 1917, 1921, 1925, 1930, 1934, 1935, 1936], "verbose_off": 2, "dnn": [2, 1893], "onednn": [2, 854, 855, 858, 1200, 1206, 1916], "former": [2, 64, 1400, 1430, 1891], "dnnl_verbos": 2, "verbose_on_cr": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 12, 35, 40, 48, 68, 71, 1529, 1610, 1865, 1866, 1882, 1896, 1902, 1912, 1919, 1921, 1930, 1933], "els": [2, 7, 11, 12, 14, 28, 39, 42, 44, 48, 50, 51, 59, 72, 602, 759, 923, 1209, 1215, 1396, 1469, 1566, 1579, 1610, 1664, 1672, 1673, 1682, 1683, 1684, 1685, 1739, 1740, 1773, 1779, 1868, 1870, 1872, 1873, 1878, 1883, 1886, 1894, 1896, 1897, 1902, 1903, 1909, 1912, 1913, 1927], "einsum": [2, 1869, 1911], "readthedoc": [2, 1071], "io": [2, 7, 39, 44, 1071, 1205, 1208, 1269, 1400, 1401, 1477, 1579, 1665, 1747, 1908, 1916], "en": [2, 40, 1071, 1900, 1930, 1937], "path_find": [2, 1071], "html": [2, 3, 4, 7, 18, 34, 60, 679, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 952, 1071, 1479, 1851, 1892, 1900, 1902, 1906, 1913, 1930], "calcul": [2, 39, 42, 56, 759, 767, 768, 798, 801, 818, 819, 823, 940, 970, 1059, 1063, 1071, 1075, 1189, 1195, 1253, 1275, 1276, 1278, 1343, 1344, 1345, 1348, 1349, 1350, 1353, 1361, 1362, 1363, 1377, 1382, 1384, 1385, 1393, 1394, 1395, 1402, 1469, 1481, 1482, 1496, 1497, 1498, 1526, 1529, 1540, 1569, 1618, 1629, 1651, 1655, 1657, 1691, 1737, 1761, 1810, 1811, 1841, 1843, 1853, 1854, 1891, 1892, 1895, 1899, 1905, 1908, 1916, 1925, 1935], "path": [2, 3, 4, 8, 11, 16, 20, 22, 33, 42, 44, 57, 59, 61, 62, 64, 72, 733, 914, 915, 972, 973, 1071, 1198, 1430, 1446, 1477, 1667, 1865, 1869, 1870, 1891, 1894, 1896, 1900, 1907, 1913, 1915, 1925, 1934], "contract": [2, 12, 20, 1071, 1832, 1866, 1885, 1913], "left": [2, 25, 39, 72, 461, 499, 813, 819, 864, 921, 925, 928, 930, 931, 936, 941, 1071, 1091, 1098, 1112, 1115, 1116, 1120, 1151, 1155, 1156, 1160, 1195, 1196, 1203, 1217, 1238, 1247, 1251, 1255, 1258, 1259, 1260, 1261, 1263, 1275, 1276, 1320, 1338, 1343, 1344, 1345, 1346, 1347, 1358, 1359, 1360, 1377, 1384, 1397, 1398, 1399, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1433, 1434, 1435, 1439, 1440, 1478, 1481, 1482, 1483, 1484, 1529, 1549, 1567, 1615, 1689, 1690, 1703, 1731, 1744, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1812, 1832, 1837, 1852, 1868, 1869, 1871, 1891, 1896, 1902, 1919, 1926], "strategi": [2, 3, 7, 16, 39, 40, 42, 46, 52, 64, 900, 902, 1071, 1131, 1211, 1338, 1610, 1697, 1870, 1897, 1899, 1917], "auto": [2, 15, 42, 64, 65, 84, 85, 1071, 1346, 1347, 1871, 1909, 1930], "greedi": [2, 46, 1071], "doc": [2, 3, 4, 9, 17, 18, 23, 34, 59, 60, 84, 679, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 839, 952, 1139, 1216, 1474, 1475, 1476, 1477, 1851, 1858, 1872, 1883, 1892, 1895, 1896, 1902, 1906, 1909, 1913, 1925, 1930], "timer": [3, 45, 1866], "stmt": [3, 1893], "setup": [3, 12, 33, 40, 59, 60, 819, 820, 821, 824, 1139, 1610, 1858, 1893, 1894, 1903, 1921, 1922], "global_setup": 3, "perf_count": 3, "global": [3, 5, 8, 13, 15, 16, 17, 27, 28, 29, 39, 42, 44, 46, 47, 48, 50, 60, 64, 69, 71, 72, 853, 860, 864, 872, 921, 930, 1023, 1030, 1072, 1074, 1084, 1089, 1107, 1125, 1128, 1155, 1156, 1179, 1186, 1198, 1201, 1213, 1217, 1268, 1284, 1430, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1629, 1633, 1661, 1724, 1726, 1728, 1731, 1755, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1863, 1868, 1871, 1872, 1887, 1890, 1896, 1901, 1902, 1904, 1906, 1907, 1916, 1921, 1922, 1923, 1925, 1928, 1930], "label": [3, 6, 7, 39, 46, 1071, 1338, 1347, 1353, 1364, 1366, 1390, 1422, 1433, 1434, 1513, 1644, 1690, 1895, 1904, 1906, 1930], "sub_label": 3, "descript": [3, 7, 17, 29, 32, 33, 39, 52, 59, 72, 733, 1169, 1170, 1171, 1243, 1270, 1494, 1715, 1870, 1871, 1894, 1896, 1899, 1901, 1902, 1909, 1937], "env": [3, 16, 29, 42, 48, 52, 57, 59, 60, 62, 72, 1028, 1664, 1895, 1905, 1921], "num_thread": [3, 1904], "languag": [3, 33, 52, 1209, 1338, 1473, 1528, 1898], "measur": [3, 48, 56, 974, 1020, 1022, 1229, 1346, 1347, 1364, 1390, 1397, 1421, 1422, 1478, 1479, 1501, 1502, 1560, 1699, 1866, 1894, 1901, 1902, 1912, 1925], "statement": [3, 12, 20, 48, 69, 72, 1199, 1213, 1872, 1891, 1896, 1904, 1907, 1909, 1913, 1919, 1921], "full": [3, 7, 8, 13, 16, 18, 20, 21, 22, 29, 34, 39, 40, 42, 46, 48, 59, 62, 64, 65, 69, 72, 513, 899, 921, 930, 952, 1099, 1100, 1101, 1105, 1106, 1108, 1126, 1138, 1139, 1155, 1156, 1202, 1235, 1236, 1243, 1244, 1245, 1256, 1261, 1262, 1270, 1287, 1347, 1353, 1384, 1444, 1473, 1504, 1505, 1506, 1513, 1526, 1572, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1764, 1816, 1817, 1858, 1865, 1867, 1868, 1869, 1870, 1871, 1873, 1885, 1890, 1894, 1895, 1896, 1899, 1902, 1905, 1906, 1911, 1913, 1916, 1919, 1922, 1929, 1932], "org": [3, 4, 7, 9, 10, 18, 34, 40, 47, 48, 60, 679, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 952, 1270, 1400, 1448, 1449, 1476, 1479, 1654, 1705, 1780, 1865, 1872, 1891, 1892, 1902, 1906, 1908, 1909, 1913, 1930, 1937], "timeit": [3, 1893], "sever": [3, 18, 34, 39, 42, 47, 48, 64, 72, 737, 738, 739, 740, 741, 742, 765, 766, 771, 772, 773, 781, 782, 952, 1017, 1075, 1173, 1198, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1358, 1359, 1360, 1361, 1362, 1363, 1378, 1379, 1398, 1399, 1418, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1483, 1484, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1504, 1505, 1506, 1507, 1508, 1509, 1524, 1525, 1547, 1550, 1551, 1553, 1554, 1555, 1610, 1619, 1620, 1622, 1623, 1655, 1666, 1720, 1721, 1761, 1847, 1868, 1890, 1891, 1893, 1894, 1901, 1902, 1904, 1909, 1912, 1916, 1921], "kei": [3, 17, 19, 20, 24, 25, 28, 39, 44, 50, 57, 59, 60, 64, 72, 602, 679, 734, 853, 858, 916, 1037, 1127, 1137, 1198, 1213, 1214, 1269, 1430, 1431, 1436, 1440, 1473, 1474, 1475, 1476, 1477, 1579, 1636, 1652, 1866, 1869, 1870, 1871, 1875, 1894, 1896, 1901, 1902, 1907, 1909, 1911, 1912, 1915, 1916, 1919, 1921, 1922, 1927, 1930, 1932, 1934], "awar": [3, 7, 24, 86, 487, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 837, 838, 854, 861, 862, 1477, 1579, 1610, 1820, 1821, 1822, 1823, 1824, 1885, 1891, 1894, 1913, 1919, 1922, 1925], "element": [3, 15, 19, 39, 42, 48, 69, 70, 72, 100, 122, 153, 157, 199, 219, 244, 256, 260, 288, 315, 317, 319, 321, 323, 354, 400, 402, 404, 436, 455, 472, 474, 475, 497, 499, 513, 515, 517, 520, 544, 545, 557, 559, 608, 609, 616, 680, 682, 683, 686, 687, 692, 693, 697, 698, 734, 757, 759, 769, 770, 771, 772, 773, 779, 783, 792, 873, 875, 876, 877, 880, 881, 882, 883, 884, 892, 900, 901, 903, 904, 905, 907, 908, 922, 931, 934, 941, 947, 951, 964, 966, 967, 968, 1014, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1060, 1061, 1062, 1066, 1068, 1071, 1074, 1076, 1077, 1081, 1101, 1105, 1106, 1108, 1110, 1115, 1117, 1118, 1120, 1124, 1129, 1130, 1132, 1133, 1134, 1138, 1139, 1140, 1141, 1142, 1143, 1151, 1154, 1157, 1158, 1159, 1160, 1175, 1183, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1217, 1219, 1220, 1222, 1239, 1241, 1245, 1256, 1260, 1271, 1272, 1274, 1277, 1279, 1280, 1281, 1282, 1286, 1287, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1318, 1320, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1342, 1343, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1371, 1372, 1374, 1375, 1377, 1382, 1383, 1386, 1387, 1388, 1389, 1390, 1391, 1396, 1397, 1400, 1402, 1406, 1407, 1408, 1409, 1410, 1411, 1416, 1419, 1421, 1422, 1423, 1424, 1425, 1429, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1457, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1478, 1479, 1481, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1514, 1518, 1521, 1522, 1527, 1528, 1532, 1533, 1534, 1535, 1538, 1541, 1542, 1544, 1549, 1553, 1554, 1555, 1559, 1560, 1564, 1565, 1567, 1570, 1571, 1572, 1573, 1574, 1575, 1579, 1580, 1581, 1582, 1583, 1585, 1587, 1589, 1590, 1591, 1592, 1597, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1636, 1637, 1643, 1644, 1646, 1647, 1656, 1657, 1658, 1660, 1668, 1708, 1709, 1712, 1713, 1720, 1721, 1723, 1734, 1737, 1738, 1742, 1744, 1746, 1764, 1767, 1769, 1781, 1782, 1784, 1785, 1789, 1795, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1810, 1811, 1815, 1826, 1828, 1829, 1833, 1834, 1835, 1837, 1839, 1840, 1841, 1842, 1843, 1845, 1847, 1848, 1849, 1853, 1854, 1855, 1858, 1861, 1869, 1871, 1878, 1886, 1889, 1892, 1893, 1896, 1899, 1905, 1907, 1909, 1912, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1936], "lazili": [3, 25, 35, 44, 974, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1601, 1868, 1896], "threadpool": 3, "comparison": [3, 26, 40, 42, 72, 1198, 1213, 1214, 1430, 1668, 1872, 1896, 1932, 1935], "appl": [3, 1882], "focu": [3, 16, 20, 1699], "replic": [3, 39, 47, 64, 1151, 1208, 1358, 1359, 1360, 1367, 1377, 1406, 1407, 1408, 1454, 1455, 1456, 1481, 1567, 1594, 1914], "particularli": [3, 14, 25, 39, 40, 61, 1366, 1367, 1437, 1868, 1894], "variat": [3, 29, 48, 1871, 1896, 1912, 1917], "confound": 3, "quantifi": [3, 1479], "nois": [3, 29, 1869, 1906], "median": [3, 48, 176, 1326, 1851, 1869, 1884, 1911], "robust": [3, 1270, 1883, 1902], "deviat": [3, 48, 379, 1342, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1402, 1469, 1658, 1774, 1779, 1810, 1811, 1889], "merg": [3, 6, 7, 9, 39, 42, 44, 60, 1431, 1436, 1440], "repeat": [3, 48, 69, 494, 970, 1071, 1261, 1287, 1426, 1427, 1428, 1501, 1502, 1705, 1737, 1796, 1816, 1817, 1833, 1867, 1869, 1871, 1911, 1915, 1918, 1925], "autorang": 3, "exact": [3, 15, 16, 18, 24, 29, 33, 39, 50, 61, 341, 740, 741, 742, 794, 873, 874, 875, 907, 908, 952, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1298, 1362, 1400, 1477, 1540, 1579, 1610, 1700, 1790, 1889, 1895, 1904, 1925, 1936], "discuss": [3, 5, 8, 9, 10, 16, 17, 26, 48, 72, 1391, 1878, 1891, 1896, 1902, 1906, 1921, 1923, 1925], "docstr": [3, 33, 72, 860, 861, 1198, 1430, 1865, 1894], "adapt": [3, 14, 765, 766, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1368, 1488, 1489, 1490, 1491, 1492, 1493, 1664, 1670, 1671, 1682, 1684, 1691, 1894], "field": [3, 7, 20, 28, 29, 42, 46, 50, 52, 56, 57, 72, 825, 892, 1196, 1198, 1338, 1346, 1347, 1364, 1366, 1390, 1396, 1397, 1421, 1422, 1430, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1494, 1501, 1502, 1512, 1529, 1541, 1564, 1572, 1643, 1680, 1686, 1881, 1891, 1895, 1904, 1909, 1921, 1922, 1930], "displai": [3, 16, 29, 36, 1016, 1029, 1540, 1598, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1865, 1872, 1877, 1880, 1909, 1930, 1932], "instruct": [3, 4, 15, 16, 20, 29, 31, 33, 61, 71, 1868, 1871, 1905, 1909, 1916, 1932], "count": [3, 20, 39, 48, 56, 72, 923, 969, 1010, 1124, 1159, 1160, 1196, 1235, 1236, 1643, 1848, 1849, 1869, 1881, 1894, 1911, 1915, 1921, 1923, 1925], "wall": [3, 22], "callgrind": 3, "analog": [3, 14, 20, 72, 693, 1054, 1092, 1094, 1173, 1247, 1400, 1685, 1816, 1833, 1886, 1902], "constructor": [3, 33, 39, 40, 46, 64, 72, 823, 860, 861, 1338, 1435, 1440, 1441, 1458, 1483, 1484, 1610, 1650, 1791, 1866, 1868, 1871, 1872, 1894, 1895, 1902, 1921, 1925, 1927, 1928, 1931, 1937], "snippet": [3, 20, 60, 1865, 1902, 1907], "loop": [3, 11, 15, 20, 21, 28, 40, 61, 65, 69, 70, 72, 861, 862, 906, 1017, 1020, 1022, 1133, 1139, 1213, 1610, 1620, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1858, 1868, 1869, 1871, 1881, 1893, 1894, 1898, 1899, 1902, 1905, 1909, 1912, 1915, 1916, 1930], "callabl": [3, 5, 12, 17, 18, 20, 28, 39, 40, 42, 46, 48, 50, 52, 57, 59, 61, 64, 71, 72, 74, 75, 76, 122, 400, 840, 952, 954, 1014, 1015, 1017, 1128, 1129, 1130, 1135, 1138, 1139, 1198, 1201, 1209, 1213, 1269, 1270, 1430, 1473, 1475, 1477, 1479, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1693, 1696, 1858, 1865, 1868, 1870, 1871, 1872, 1881, 1894, 1896, 1902, 1907, 1909, 1913, 1914, 1915, 1921, 1932, 1934, 1935, 1936], "present": [3, 9, 17, 23, 39, 42, 59, 64, 1196, 1287, 1338, 1400, 1440, 1643, 1666, 1812, 1865, 1880, 1883, 1884, 1885, 1890, 1891, 1894, 1896, 1899, 1902, 1909, 1913, 1922, 1925, 1928], "default_tim": 3, "summar": [3, 4, 20, 29, 60, 1764, 1871, 1886, 1925], "relu": [3, 12, 19, 25, 28, 29, 40, 69, 70, 72, 699, 700, 704, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 764, 791, 792, 813, 853, 859, 1014, 1129, 1139, 1209, 1430, 1445, 1447, 1458, 1466, 1473, 1475, 1477, 1576, 1577, 1601, 1667, 1858, 1867, 1868, 1869, 1879, 1885, 1886, 1889, 1891, 1902, 1907, 1909, 1911, 1916, 1918, 1919], "readabl": [3, 29, 32, 39, 57, 72, 1016, 1029, 1830, 1909, 1912, 1936], "supplement": 3, "disambigu": [3, 29, 57, 72, 1275], "ident": [3, 15, 29, 33, 39, 42, 48, 72, 787, 813, 907, 908, 1059, 1235, 1236, 1237, 1238, 1251, 1263, 1266, 1270, 1287, 1325, 1326, 1342, 1368, 1569, 1617, 1619, 1855, 1861, 1872, 1889, 1905, 1906, 1913, 1918, 1925], "easi": [3, 12, 20, 25, 26, 29, 39, 44, 59, 1868, 1891, 1898, 1901, 1902, 1904, 1913, 1916, 1921, 1922, 1925], "differenti": [3, 48, 65, 70, 153, 354, 588, 801, 888, 890, 892, 894, 895, 897, 900, 901, 902, 903, 904, 905, 906, 907, 908, 949, 1017, 1132, 1133, 1134, 1138, 1212, 1244, 1245, 1256, 1287, 1352, 1353, 1373, 1531, 1565, 1610, 1622, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1851, 1866, 1878, 1896, 1898, 1899, 1909, 1912, 1921, 1931, 1933], "distinguish": [3, 1916, 1925], "princip": [3, 1244, 1705], "signal": [3, 17, 31, 44, 50, 59, 61, 737, 738, 739, 765, 766, 781, 782, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1195, 1260, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1345, 1358, 1359, 1360, 1378, 1379, 1398, 1399, 1418, 1423, 1424, 1425, 1483, 1484, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1504, 1507, 1524, 1525, 1547, 1550, 1551, 1553, 1554, 1555, 1812, 1866, 1883, 1904, 1915, 1921], "form": [3, 7, 9, 13, 28, 31, 39, 42, 48, 58, 59, 60, 64, 69, 72, 759, 778, 784, 943, 1059, 1099, 1101, 1198, 1237, 1240, 1245, 1256, 1261, 1336, 1337, 1340, 1341, 1353, 1378, 1379, 1382, 1400, 1430, 1445, 1481, 1482, 1513, 1524, 1525, 1528, 1540, 1567, 1598, 1622, 1685, 1703, 1832, 1865, 1868, 1872, 1886, 1891, 1896, 1902, 1909, 1913, 1916, 1925, 1930], "treat": [3, 17, 23, 28, 48, 58, 67, 72, 323, 472, 792, 907, 908, 1014, 1127, 1250, 1253, 1255, 1267, 1269, 1279, 1280, 1281, 1282, 1299, 1328, 1374, 1384, 1402, 1434, 1435, 1436, 1437, 1440, 1458, 1463, 1521, 1610, 1652, 1656, 1691, 1744, 1812, 1826, 1833, 1870, 1871, 1884, 1891, 1921, 1925, 1928, 1935], "distinct": [3, 1127, 1233, 1234, 1278, 1871, 1896, 1907, 1921, 1922], "workload": [3, 8, 25, 39, 42, 64, 1017, 1894, 1901, 1905, 1921], "good": [3, 7, 8, 15, 18, 20, 24, 33, 64, 72, 91, 952, 1131, 1438, 1780, 1865, 1875, 1883, 1896, 1901, 1902, 1904, 1909, 1913, 1914, 1916], "intrins": [3, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 791, 792, 1917, 1918], "contrast": [3, 48, 50, 759, 1382, 1685, 1867, 1889, 1891, 1897, 1925], "blocked_autorang": 3, "callback": [3, 40, 59, 61, 71, 72, 1610, 1881, 1896, 1901, 1915, 1921], "min_run_tim": 3, "minimum": [3, 33, 40, 50, 59, 60, 695, 696, 770, 794, 819, 820, 821, 824, 825, 874, 923, 1051, 1118, 1158, 1159, 1160, 1300, 1353, 1389, 1479, 1689, 1690, 1697, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1867, 1869, 1889, 1891, 1899, 1911, 1919, 1928], "At": [3, 5, 6, 7, 13, 16, 20, 29, 34, 39, 1105, 1349, 1358, 1359, 1360, 1361, 1362, 1363, 1398, 1399, 1879, 1886, 1893, 1899, 1916, 1921, 1926], "high": [3, 4, 7, 8, 9, 10, 11, 16, 20, 21, 29, 34, 40, 42, 48, 50, 56, 58, 60, 72, 122, 1353, 1476, 1726, 1727, 1759, 1867, 1869, 1881, 1883, 1896, 1899, 1900, 1902, 1903, 1904, 1912, 1916, 1917, 1921, 1925, 1930, 1931, 1932, 1935], "pseudo": [3, 91], "total_tim": 3, "block_siz": 3, "choic": [3, 8, 9, 14, 16, 29, 42, 1213, 1261, 1431, 1440, 1722, 1893, 1909, 1919, 1925], "block": [3, 7, 8, 25, 39, 42, 46, 47, 59, 61, 71, 72, 582, 583, 584, 931, 974, 1028, 1218, 1270, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1406, 1407, 1408, 1409, 1410, 1411, 1433, 1481, 1523, 1597, 1610, 1798, 1799, 1800, 1868, 1870, 1871, 1881, 1883, 1887, 1891, 1894, 1895, 1899, 1909, 1916, 1921, 1925], "qualiti": [3, 7, 40], "balanc": [3, 18, 91, 952], "compet": [3, 1904], "statist": [3, 16, 29, 40, 42, 48, 798, 799, 819, 820, 821, 823, 824, 983, 1020, 1022, 1023, 1024, 1026, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1048, 1049, 1275, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1469, 1881, 1891, 1898, 1912, 1914, 1916, 1919], "amort": 3, "invoc": [3, 5, 11, 18, 20, 25, 72, 840, 952, 1201, 1213, 1868, 1871, 1894, 1896, 1901, 1909, 1921, 1923], "less": [3, 6, 7, 16, 33, 39, 40, 42, 48, 50, 61, 366, 679, 900, 902, 907, 908, 970, 1024, 1041, 1071, 1115, 1119, 1124, 1127, 1222, 1234, 1270, 1286, 1287, 1338, 1391, 1444, 1461, 1467, 1646, 1735, 1841, 1843, 1865, 1869, 1871, 1886, 1894, 1896, 1904, 1905, 1911, 1914, 1916], "bias": [3, 40, 733, 759, 793, 1348, 1349, 1350, 1382, 1383, 1385, 1393, 1394, 1395, 1400, 1401, 1402, 1445, 1447, 1469], "trivial": [3, 15, 50, 52, 734, 942, 1617, 1909, 1923], "low": [3, 7, 22, 36, 40, 48, 64, 499, 903, 1143, 1353, 1705, 1722, 1726, 1727, 1744, 1817, 1867, 1869, 1881, 1883, 1894, 1904, 1915, 1932, 1936], "digit": [3, 1764, 1865, 1880, 1901, 1905], "microsecond": [3, 1894], "bia": [3, 9, 42, 47, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 748, 750, 751, 752, 753, 755, 759, 760, 763, 764, 771, 772, 773, 780, 791, 1137, 1198, 1207, 1338, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1382, 1383, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1430, 1436, 1445, 1446, 1447, 1499, 1500, 1504, 1505, 1506, 1507, 1508, 1509, 1530, 1539, 1543, 1546, 1601, 1610, 1617, 1618, 1632, 1634, 1636, 1651, 1654, 1719, 1867, 1869, 1879, 1896, 1902, 1907, 1916, 1918, 1925, 1930], "period": [3, 9, 46, 59, 921, 930, 983, 1016, 1029, 1030, 1034, 1048, 1049, 1091, 1155, 1156, 1217, 1701, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1869, 1881, 1904], "until": [3, 7, 16, 39, 40, 42, 46, 50, 59, 64, 71, 72, 487, 974, 975, 977, 1008, 1124, 1218, 1270, 1311, 1312, 1529, 1601, 1610, 1688, 1694, 1833, 1883, 1889, 1894, 1898, 1907, 1909, 1915, 1921, 1923], "overal": [3, 9, 22, 39, 42, 59, 907, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1476, 1891, 1893, 1894, 1904, 1917], "main": [3, 7, 12, 16, 20, 28, 39, 40, 42, 43, 48, 50, 51, 52, 57, 59, 60, 61, 62, 72, 262, 496, 1058, 1059, 1060, 1061, 1062, 1260, 1531, 1796, 1840, 1841, 1842, 1843, 1865, 1868, 1881, 1883, 1885, 1886, 1890, 1891, 1894, 1895, 1896, 1897, 1902, 1904, 1908, 1921, 1922, 1930, 1931], "repetit": [3, 1737, 1833], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1866], "tupl": [3, 5, 20, 28, 33, 39, 44, 50, 56, 57, 59, 64, 72, 321, 446, 448, 450, 497, 520, 536, 559, 582, 583, 584, 694, 695, 696, 734, 765, 766, 767, 768, 771, 772, 773, 778, 784, 785, 786, 792, 816, 817, 853, 860, 861, 877, 878, 885, 886, 887, 888, 889, 891, 900, 901, 902, 903, 904, 905, 906, 907, 908, 911, 912, 913, 935, 954, 958, 969, 984, 985, 988, 999, 1017, 1023, 1050, 1051, 1069, 1072, 1074, 1088, 1090, 1091, 1093, 1094, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1106, 1108, 1111, 1121, 1125, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1143, 1159, 1161, 1198, 1204, 1209, 1213, 1214, 1219, 1228, 1233, 1234, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1250, 1254, 1256, 1257, 1259, 1261, 1264, 1267, 1285, 1287, 1289, 1295, 1297, 1299, 1300, 1303, 1305, 1325, 1328, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1377, 1378, 1379, 1398, 1399, 1406, 1407, 1408, 1409, 1410, 1411, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1436, 1440, 1451, 1452, 1453, 1454, 1455, 1456, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1489, 1490, 1492, 1493, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1524, 1525, 1540, 1553, 1554, 1555, 1565, 1567, 1598, 1599, 1600, 1605, 1606, 1607, 1610, 1622, 1633, 1646, 1652, 1656, 1657, 1661, 1664, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1705, 1706, 1715, 1724, 1726, 1728, 1738, 1742, 1743, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1807, 1810, 1811, 1815, 1816, 1817, 1830, 1831, 1832, 1833, 1834, 1839, 1846, 1847, 1848, 1849, 1853, 1854, 1858, 1859, 1861, 1863, 1868, 1869, 1872, 1883, 1886, 1891, 1894, 1896, 1897, 1902, 1907, 1909, 1912, 1913, 1916, 1921, 1925, 1930, 1932, 1935, 1936], "modulo": [3, 48, 1119, 1735], "determin": [3, 5, 8, 14, 15, 16, 28, 29, 31, 33, 35, 36, 38, 39, 40, 42, 48, 50, 57, 59, 64, 69, 72, 822, 825, 900, 902, 907, 908, 921, 930, 937, 942, 1018, 1073, 1092, 1102, 1126, 1127, 1155, 1156, 1159, 1160, 1211, 1231, 1243, 1254, 1257, 1278, 1292, 1374, 1378, 1379, 1400, 1436, 1439, 1445, 1521, 1524, 1525, 1540, 1573, 1598, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1652, 1662, 1697, 1725, 1727, 1729, 1756, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1864, 1871, 1872, 1885, 1894, 1895, 1896, 1902, 1909, 1913, 1916, 1921, 1923, 1925, 1927, 1928, 1930, 1932], "itself": [3, 5, 7, 8, 12, 15, 20, 29, 42, 43, 64, 70, 72, 692, 698, 878, 970, 1132, 1133, 1198, 1209, 1213, 1430, 1463, 1585, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1868, 1883, 1902, 1904, 1906, 1909, 1913, 1921, 1925, 1929], "jitter": 3, "interpret": [3, 20, 39, 42, 46, 48, 50, 59, 61, 77, 778, 784, 879, 906, 1027, 1092, 1093, 1094, 1099, 1101, 1102, 1103, 1104, 1124, 1148, 1160, 1198, 1203, 1209, 1213, 1250, 1270, 1370, 1529, 1540, 1541, 1598, 1756, 1762, 1865, 1870, 1871, 1883, 1893, 1894, 1909, 1925, 1927, 1929], "ideal": [3, 16, 58, 60, 1213, 1686, 1885], "analysi": [3, 12, 15, 26, 40, 48, 72, 1217, 1705, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1872, 1902, 1910, 1935], "valgrind": 3, "degrad": [3, 33, 1893, 1895, 1896, 1925], "amelior": 3, "suffici": [3, 16, 29, 33, 40, 48, 51, 59, 64, 1672, 1673, 1865, 1925, 1928], "obtain": [3, 25, 39, 42, 48, 52, 71, 72, 496, 917, 1143, 1315, 1353, 1437, 1513, 1610, 1705, 1722, 1817, 1871, 1883, 1884, 1893, 1906, 1909, 1912, 1915, 1916], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 16, 72, 778, 784, 936, 1151, 1355, 1356, 1357, 1451, 1452, 1453, 1454, 1455, 1456, 1482, 1485, 1486, 1487, 1540, 1598, 1691, 1697, 1751, 1869, 1895, 1913, 1914, 1921], "caller": [3, 50, 59, 72, 853, 1198, 1430, 1477, 1606, 1607, 1891, 1894, 1921, 1923], "structur": [3, 5, 9, 14, 17, 23, 39, 40, 42, 49, 50, 52, 60, 64, 72, 891, 1122, 1134, 1139, 1213, 1430, 1629, 1633, 1668, 1705, 1817, 1858, 1866, 1870, 1872, 1878, 1881, 1886, 1894, 1895, 1896, 1897, 1904, 1907, 1908, 1909, 1910, 1912, 1913, 1921, 1930, 1931, 1932, 1933, 1935], "restrict": [3, 8, 14, 39, 48, 64, 69, 70, 1269, 1292, 1366, 1870, 1871, 1872, 1885, 1886, 1891, 1894, 1899, 1914, 1916], "builtin": [3, 16, 29, 42, 72, 1210, 1269, 1731, 1868, 1870, 1872, 1921, 1923], "surpris": [3, 8, 15, 64, 1865, 1899, 1905], "serial": [3, 34, 39, 42, 44, 46, 59, 1198, 1207, 1208, 1269, 1430, 1601, 1664, 1665, 1747, 1865, 1866, 1869, 1880, 1885, 1891, 1894, 1901, 1902, 1904, 1913, 1916, 1922], "subsequ": [3, 7, 11, 16, 18, 20, 33, 34, 42, 72, 952, 975, 1198, 1209, 1213, 1358, 1359, 1360, 1361, 1362, 1363, 1430, 1458, 1606, 1607, 1894, 1906, 1909, 1921, 1925], "deseri": [3, 44, 1269, 1601, 1865, 1880, 1907], "globalsbridg": 3, "care": [3, 7, 11, 15, 16, 17, 29, 33, 42, 48, 64, 71, 72, 954, 1092, 1094, 1430, 1883, 1893, 1894, 1895, 1896, 1898, 1902, 1904, 1907, 1909, 1921, 1925], "reli": [3, 9, 15, 16, 17, 22, 33, 39, 40, 50, 52, 64, 72, 153, 892, 907, 954, 1071, 1367, 1686, 1891, 1893, 1895, 1896, 1906, 1907, 1925, 1929], "pickl": [3, 39, 40, 42, 1198, 1269, 1430, 1747, 1865, 1880, 1883, 1907, 1913], "transfer": [3, 39, 42, 1879, 1883, 1894, 1900, 1902, 1913, 1921], "properli": [3, 7, 39, 40, 44, 46, 50, 59, 64, 71, 1092, 1093, 1094, 1102, 1103, 1104, 1299, 1431, 1432, 1440, 1441, 1610, 1865, 1878, 1896, 1899, 1902, 1904, 1907, 1921, 1922, 1928], "profil": [3, 4, 16, 18, 56, 72, 952, 1211, 1604, 1605, 1606, 1607, 1764, 1866, 1911, 1921], "drive": [3, 9, 20, 42, 1891], "facil": [3, 1269, 1883], "analyz": [3, 4, 29, 36, 72, 1895, 1896, 1905], "manipul": [3, 28, 64, 71, 1202, 1866, 1890, 1898, 1902, 1914, 1919], "1000000": [3, 1669], "mirror": [3, 142], "semant": [3, 9, 35, 42, 59, 60, 64, 72, 153, 793, 873, 874, 875, 892, 906, 934, 977, 1028, 1128, 1139, 1202, 1208, 1267, 1347, 1502, 1573, 1686, 1849, 1858, 1866, 1870, 1871, 1875, 1878, 1886, 1897, 1902, 1909, 1925], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 40, 1868], "consum": [3, 20, 39, 44, 49, 61, 71, 436, 1071, 1883, 1894, 1904, 1909, 1910, 1930], "extrapol": 3, "sinc": [3, 7, 11, 16, 20, 23, 28, 29, 39, 40, 42, 47, 48, 52, 61, 64, 72, 317, 533, 746, 784, 792, 807, 808, 942, 954, 1020, 1022, 1024, 1071, 1111, 1112, 1113, 1127, 1195, 1198, 1203, 1208, 1211, 1287, 1346, 1373, 1426, 1427, 1428, 1430, 1482, 1494, 1529, 1531, 1598, 1601, 1604, 1633, 1652, 1657, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1691, 1697, 1812, 1868, 1869, 1870, 1871, 1877, 1879, 1881, 1886, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1920, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1931, 1932], "properti": [3, 13, 14, 15, 39, 42, 43, 44, 48, 51, 56, 59, 64, 72, 791, 879, 911, 917, 1001, 1087, 1088, 1090, 1092, 1093, 1094, 1102, 1103, 1104, 1198, 1342, 1430, 1463, 1585, 1601, 1611, 1612, 1613, 1643, 1664, 1866, 1871, 1875, 1881, 1891, 1894, 1896, 1899, 1912, 1915, 1921, 1925, 1927, 1928, 1931, 1933, 1936, 1937], "significant_figur": 3, "figur": [3, 7, 8, 16, 44, 72, 1893, 1895, 1896, 1909, 1914, 1923, 1930, 1935], "intend": [3, 59, 72, 889, 898, 979, 1217, 1494, 1604, 1605, 1606, 1607, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1686, 1871, 1886, 1889, 1891, 1902, 1913], "interquartil": 3, "mitig": 3, "tail": [3, 39, 57], "645": 3, "conjunct": [3, 39, 42, 46, 64, 823, 1494, 1529, 1610, 1919, 1921], "trim_sigfig": 3, "human": [3, 32, 57, 1016, 1029, 1889, 1909, 1936], "raw": [3, 72, 1124, 1256, 1894, 1913], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 12, 14, 15, 20, 24, 28, 34, 39, 42, 44, 47, 48, 50, 57, 64, 71, 72, 496, 679, 759, 907, 1088, 1090, 1093, 1094, 1096, 1097, 1100, 1101, 1103, 1104, 1106, 1108, 1213, 1287, 1348, 1349, 1350, 1367, 1370, 1382, 1393, 1394, 1395, 1412, 1413, 1414, 1415, 1440, 1469, 1475, 1477, 1610, 1807, 1871, 1875, 1879, 1883, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1902, 1905, 1909, 1912, 1914, 1916, 1917, 1921, 1923], "functioncount": [3, 1866], "stat": [3, 16, 29, 67, 825, 835, 836, 1028, 1035, 1036, 1037, 1469, 1610, 1881, 1894, 1934], "as_standard": 3, "strip": [3, 1531, 1610, 1868, 1911, 1925], "prefix": [3, 42, 44, 59, 64, 747, 756, 1198, 1430, 1610, 1865, 1877, 1891, 1909, 1913, 1934], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 12, 17, 20, 29, 34, 36, 42, 48, 72, 679, 907, 1091, 1092, 1094, 1102, 1103, 1104, 1237, 1473, 1474, 1475, 1476, 1477, 1601, 1705, 1812, 1856, 1857, 1872, 1877, 1891, 1895, 1896, 1901, 1902, 1914, 1925], "locat": [3, 9, 11, 15, 16, 33, 42, 48, 56, 153, 157, 256, 513, 934, 936, 986, 1050, 1051, 1219, 1269, 1295, 1300, 1303, 1320, 1367, 1377, 1464, 1481, 1494, 1529, 1594, 1597, 1610, 1622, 1716, 1751, 1773, 1794, 1797, 1851, 1865, 1868, 1880, 1894, 1907, 1909, 1913, 1915, 1921, 1923, 1925, 1930, 1934], "resembl": [3, 34], "23234231": 3, "first_build_dir": 3, "foo": [3, 11, 18, 33, 42, 56, 57, 71, 72, 823, 853, 858, 952, 1127, 1128, 1137, 1196, 1201, 1205, 1208, 1209, 1212, 1213, 1652, 1865, 1868, 1870, 1871, 1875, 1896, 1902, 1909, 1913, 1932], "9823794": 3, "bar": [3, 7, 20, 56, 72, 853, 858, 970, 1127, 1201, 1208, 1810, 1811, 1853, 1854, 1865, 1868, 1870, 1880, 1902, 1909, 1913, 1932], "53453": 3, "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1195], "site": [3, 7], "denois": 3, "explan": [3, 9, 16, 17, 24, 29, 52, 861, 1198, 1430, 1866, 1895, 1896, 1902], "delta": [3, 48, 759, 1382, 1391, 1400, 1461, 1538, 1670, 1810, 1811, 1837, 1853, 1854, 1869, 1889], "inclus": [3, 48, 91, 513, 1158, 1160, 1268, 1284, 1290, 1726, 1727, 1809, 1920, 1932], "diff": [3, 7, 1868, 1869, 1911], "One": [3, 8, 12, 14, 15, 22, 25, 33, 42, 44, 64, 67, 69, 72, 582, 931, 1128, 1139, 1189, 1482, 1566, 1617, 1620, 1686, 1691, 1699, 1726, 1727, 1847, 1858, 1868, 1870, 1871, 1885, 1886, 1892, 1893, 1894, 1896, 1901, 1914, 1923, 1930], "unit": [3, 11, 31, 33, 48, 50, 60, 64, 72, 759, 760, 1089, 1107, 1342, 1352, 1372, 1375, 1380, 1381, 1382, 1383, 1448, 1449, 1459, 1494, 1518, 1522, 1527, 1528, 1574, 1582, 1626, 1627, 1631, 1634, 1636, 1639, 1839, 1882, 1891, 1893, 1899, 1913], "next": [3, 13, 14, 16, 19, 20, 27, 39, 42, 48, 59, 64, 72, 559, 759, 1202, 1334, 1383, 1401, 1447, 1610, 1645, 1883, 1890, 1891, 1893, 1896, 1897, 1902, 1904, 1914, 1915, 1921, 1922, 1925, 1928, 1930], "logic": [3, 5, 20, 33, 39, 47, 62, 64, 72, 924, 926, 927, 929, 1088, 1090, 1093, 1094, 1096, 1097, 1100, 1101, 1103, 1104, 1106, 1108, 1128, 1202, 1279, 1280, 1281, 1282, 1292, 1436, 1610, 1714, 1741, 1824, 1871, 1872, 1894, 1895, 1896, 1897, 1899, 1916], "question": [3, 10, 15, 21, 39, 72, 1654, 1866, 1891], "why": [3, 7, 15, 25, 39, 64, 69, 72, 1071, 1202, 1579, 1866, 1878, 1897], "involv": [3, 5, 7, 9, 14, 15, 21, 31, 39, 42, 64, 67, 69, 72, 1610, 1871, 1884, 1886, 1891, 1894, 1895, 1898, 1902, 1909, 1921, 1922, 1923, 1925], "look": [3, 4, 7, 8, 9, 11, 12, 14, 16, 17, 20, 22, 24, 28, 29, 34, 42, 48, 58, 59, 66, 69, 72, 861, 900, 902, 1198, 1292, 1338, 1430, 1520, 1635, 1686, 1798, 1799, 1800, 1802, 1803, 1868, 1870, 1884, 1890, 1891, 1894, 1897, 1901, 1902, 1904, 1908, 1909, 1913, 1916, 1921, 1922, 1935], "autom": [3, 8, 16, 29, 72, 1868, 1916], "easili": [3, 7, 8, 19, 28, 29, 31, 40, 42, 1128, 1437, 1529, 1567, 1686, 1744, 1896, 1897, 1899, 1902, 1907, 1912, 1920, 1923, 1930], "exclus": [3, 39, 42, 48, 50, 59, 72, 734, 1160, 1610, 1726, 1727, 1730, 1891, 1932], "basi": [3, 9, 10, 48, 1270, 1691, 1894, 1901, 1916, 1921], "thought": [3, 56, 72, 1089, 1091, 1107], "path_and_function_nam": 3, "children": [3, 52, 64, 72, 790, 1198, 1430, 1883, 1902, 1913, 1923], "identifi": [3, 7, 9, 14, 20, 25, 42, 50, 53, 56, 59, 60, 61, 72, 816, 1160, 1269, 1469, 1872, 1883, 1892, 1901, 1902, 1913, 1921, 1922, 1923, 1930], "hot": [3, 20, 48, 1531, 1566, 1899], "spot": 3, "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 315, 563, 864, 1124, 1531, 1798, 1799, 1800, 1802, 1803, 1813, 1869, 1886, 1911, 1925], "index": [3, 15, 29, 34, 39, 40, 44, 48, 57, 72, 194, 211, 283, 314, 315, 316, 317, 318, 319, 321, 323, 324, 472, 473, 512, 513, 514, 515, 516, 517, 518, 519, 694, 695, 816, 853, 876, 891, 936, 990, 993, 1050, 1051, 1091, 1131, 1132, 1133, 1137, 1139, 1140, 1169, 1170, 1171, 1172, 1196, 1214, 1219, 1227, 1245, 1263, 1277, 1285, 1287, 1291, 1295, 1298, 1299, 1300, 1303, 1320, 1326, 1329, 1330, 1338, 1353, 1366, 1373, 1374, 1431, 1432, 1437, 1440, 1441, 1479, 1481, 1520, 1521, 1566, 1628, 1630, 1637, 1638, 1643, 1656, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1700, 1701, 1716, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1785, 1795, 1796, 1798, 1799, 1800, 1802, 1803, 1812, 1826, 1847, 1850, 1851, 1858, 1866, 1867, 1868, 1869, 1871, 1878, 1883, 1884, 1885, 1886, 1891, 1894, 1895, 1897, 1900, 1906, 1911, 1923, 1925, 1928, 1929, 1930, 1931, 1932], "cpython": [3, 26, 72], "known": [3, 7, 9, 14, 17, 29, 38, 42, 46, 53, 65, 68, 70, 1134, 1135, 1213, 1214, 1269, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1400, 1445, 1459, 1461, 1481, 1540, 1582, 1601, 1772, 1773, 1830, 1866, 1869, 1873, 1881, 1883, 1886, 1889, 1891, 1893, 1906, 1909, 1912, 1923, 1926], "quit": [3, 7, 22, 25, 72, 1871, 1896, 1898, 1913, 1921], "noisi": 3, "higher": [3, 7, 8, 14, 40, 42, 64, 65, 70, 153, 892, 893, 906, 977, 1017, 1028, 1063, 1129, 1135, 1139, 1158, 1175, 1327, 1366, 1422, 1437, 1579, 1716, 1817, 1858, 1866, 1894, 1896, 1897, 1899, 1901, 1907, 1916, 1917, 1921, 1928], "filter": [3, 29, 543, 771, 772, 773, 1195, 1217, 1358, 1359, 1360, 1361, 1362, 1363, 1504, 1505, 1506, 1507, 1508, 1509, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1812, 1871, 1913], "rather": [3, 8, 9, 11, 12, 15, 19, 20, 33, 42, 50, 52, 61, 72, 778, 784, 916, 942, 1196, 1199, 1269, 1330, 1494, 1529, 1540, 1598, 1618, 1764, 1868, 1871, 1885, 1886, 1892, 1894, 1896, 1897, 1909, 1913, 1916, 1921, 1925, 1930], "unicod": [3, 1872], "dictionari": [3, 18, 23, 33, 39, 40, 48, 68, 72, 679, 791, 792, 793, 796, 814, 815, 816, 837, 838, 839, 853, 857, 863, 952, 1028, 1127, 1137, 1198, 1199, 1205, 1209, 1213, 1214, 1269, 1270, 1373, 1374, 1430, 1431, 1440, 1520, 1633, 1870, 1872, 1896, 1902, 1909, 1912, 1921, 1930, 1934, 1936], "lookup": [3, 20, 22, 44, 48, 1373, 1520, 1868, 1872, 1893, 1922], "map": [3, 15, 20, 28, 33, 42, 48, 50, 56, 57, 59, 60, 64, 69, 70, 72, 683, 734, 791, 792, 796, 798, 813, 814, 816, 838, 839, 853, 854, 855, 856, 857, 863, 884, 933, 1128, 1139, 1151, 1160, 1205, 1208, 1269, 1270, 1361, 1362, 1363, 1369, 1370, 1371, 1375, 1377, 1426, 1427, 1428, 1431, 1440, 1515, 1516, 1517, 1522, 1617, 1633, 1716, 1718, 1848, 1849, 1858, 1872, 1885, 1887, 1891, 1895, 1896, 1897, 1903, 1908, 1913, 1916, 1919, 1921, 1922, 1923, 1927, 1932, 1936], "agnost": [3, 59, 1529, 1885], "reliabl": [3, 21], "warrant": 3, "except": [3, 5, 7, 9, 12, 15, 25, 28, 33, 42, 43, 47, 48, 50, 51, 52, 56, 60, 64, 71, 72, 582, 586, 587, 616, 683, 692, 694, 695, 698, 759, 884, 907, 908, 939, 946, 950, 976, 986, 988, 1016, 1029, 1063, 1069, 1071, 1117, 1118, 1137, 1139, 1161, 1205, 1213, 1215, 1219, 1253, 1269, 1285, 1295, 1297, 1298, 1300, 1303, 1325, 1328, 1330, 1382, 1400, 1445, 1482, 1566, 1610, 1618, 1643, 1650, 1651, 1655, 1657, 1713, 1737, 1753, 1790, 1808, 1810, 1811, 1815, 1837, 1853, 1854, 1858, 1859, 1866, 1868, 1870, 1871, 1872, 1873, 1878, 1883, 1886, 1894, 1896, 1902, 1905, 1908, 1913, 1914, 1921, 1923, 1925, 1927, 1928, 1932], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 16, 20, 325, 330, 543, 613, 985, 1797, 1847, 1869, 1895, 1911, 1925], "finit": [4, 48, 907, 908, 1187, 1188, 1233, 1234, 1244, 1245, 1261, 1287, 1320, 1324, 1346, 1816, 1896, 1899, 1932], "natur": [4, 7, 8, 31, 42, 48, 64, 86, 907, 908, 1226, 1231, 1257, 1271, 1273, 1278, 1338, 1477, 1579, 1899, 1925, 1926], "against": [4, 5, 24, 33, 42, 50, 59, 793, 864, 907, 908, 1099, 1100, 1101, 1105, 1106, 1108, 1140, 1189, 1198, 1213, 1214, 1430, 1436, 1667, 1865, 1871, 1913, 1935], "cprofil": 4, "mode": [4, 8, 13, 14, 15, 16, 17, 18, 19, 21, 29, 39, 40, 42, 44, 48, 59, 61, 69, 70, 72, 224, 225, 745, 746, 771, 772, 773, 778, 784, 785, 786, 814, 816, 822, 825, 858, 859, 888, 890, 893, 894, 895, 900, 901, 902, 903, 907, 919, 952, 972, 1005, 1045, 1046, 1075, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1128, 1131, 1132, 1133, 1134, 1137, 1138, 1146, 1173, 1181, 1182, 1196, 1198, 1199, 1202, 1213, 1215, 1256, 1269, 1299, 1311, 1312, 1348, 1349, 1350, 1358, 1359, 1360, 1374, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1430, 1446, 1469, 1482, 1483, 1504, 1505, 1506, 1521, 1529, 1540, 1567, 1598, 1599, 1600, 1611, 1618, 1622, 1655, 1691, 1699, 1715, 1758, 1760, 1761, 1851, 1866, 1869, 1879, 1884, 1889, 1894, 1895, 1897, 1898, 1902, 1911, 1915, 1917, 1918, 1919, 1921, 1933, 1936], "correct": [4, 6, 7, 28, 40, 42, 43, 44, 48, 59, 208, 209, 212, 224, 554, 579, 602, 603, 614, 896, 908, 970, 1092, 1094, 1102, 1103, 1104, 1172, 1196, 1199, 1213, 1214, 1233, 1367, 1384, 1396, 1601, 1610, 1643, 1763, 1810, 1811, 1853, 1854, 1867, 1868, 1869, 1870, 1884, 1885, 1894, 1896, 1899, 1927], "launch": [4, 11, 19, 33, 39, 45, 50, 51, 52, 57, 58, 59, 62, 71, 975, 1610, 1866, 1891, 1893, 1894, 1895, 1896, 1921], "spent": [4, 16, 25, 29, 42, 917, 1697, 1893, 1902], "appear": [4, 27, 40, 42, 48, 72, 853, 1017, 1071, 1112, 1113, 1139, 1269, 1303, 1305, 1606, 1611, 1737, 1766, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1858, 1868, 1871, 1884, 1885, 1896, 1897, 1902, 1909, 1913], "extrem": [4, 15, 20, 1610, 1891, 1909], "expens": [4, 14, 16, 22, 24, 29, 39, 48, 64, 1617, 1894, 1899, 1901, 1915, 1921, 1931], "bound": [4, 14, 15, 29, 34, 40, 42, 64, 482, 794, 936, 947, 1085, 1086, 1198, 1343, 1344, 1345, 1423, 1424, 1425, 1430, 1448, 1529, 1699, 1730, 1751, 1871, 1872, 1889, 1891, 1913, 1916, 1926], "greater": [4, 42, 59, 294, 616, 679, 928, 941, 942, 947, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1142, 1154, 1252, 1315, 1346, 1478, 1529, 1540, 1566, 1579, 1598, 1618, 1651, 1851, 1869, 1891, 1894, 1906, 1911, 1925, 1926], "spend": [4, 7, 22, 1270], "sens": [4, 17, 48, 59, 72, 1633, 1848, 1849, 1871, 1891], "respons": [4, 7, 9, 15, 42, 44, 46, 48, 50, 56, 61, 64, 71, 975, 1418, 1547, 1610, 1891, 1894, 1896, 1897, 1902, 1921], "Of": [4, 1656, 1865, 1895, 1896], "cours": [4, 16, 20, 72, 1865, 1895, 1896, 1921], "realiti": 4, "complic": [4, 15, 40, 72, 792, 1875, 1885, 1892, 1913, 1921, 1923], "depend": [4, 5, 11, 12, 14, 15, 16, 19, 20, 23, 27, 28, 33, 39, 42, 46, 48, 50, 59, 60, 61, 64, 72, 317, 784, 877, 983, 1030, 1034, 1048, 1049, 1092, 1094, 1102, 1103, 1104, 1129, 1133, 1138, 1209, 1213, 1233, 1234, 1261, 1287, 1292, 1346, 1347, 1364, 1366, 1374, 1377, 1390, 1396, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1481, 1482, 1494, 1501, 1502, 1512, 1521, 1529, 1541, 1564, 1572, 1579, 1598, 1601, 1610, 1622, 1623, 1629, 1664, 1691, 1703, 1705, 1722, 1738, 1798, 1799, 1800, 1802, 1803, 1816, 1839, 1861, 1865, 1868, 1870, 1871, 1878, 1883, 1891, 1893, 1894, 1896, 1897, 1899, 1902, 1904, 1909, 1915, 1916, 1921, 1925, 1931, 1932], "could": [4, 5, 7, 8, 12, 16, 17, 23, 29, 39, 42, 48, 50, 59, 69, 71, 72, 582, 583, 584, 586, 587, 954, 1010, 1092, 1094, 1102, 1103, 1104, 1195, 1228, 1269, 1287, 1311, 1312, 1690, 1793, 1848, 1870, 1871, 1878, 1883, 1891, 1894, 1895, 1908, 1909, 1913, 1916, 1917, 1921, 1922, 1923, 1925, 1929, 1930], "account": [4, 11, 57, 72, 1610, 1889, 1893, 1925], "heavili": [4, 1675, 1893, 1896, 1913], "similarli": [4, 7, 11, 15, 19, 71, 72, 759, 789, 793, 857, 943, 1091, 1198, 1253, 1430, 1477, 1606, 1607, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1840, 1841, 1842, 1843, 1870, 1891, 1896, 1898, 1899, 1905, 1925], "platform": [4, 8, 9, 33, 42, 51, 52, 56, 1244, 1245, 1256, 1715, 1816, 1879, 1900, 1905, 1906, 1916], "startup": 4, "slower": [4, 15, 33, 42, 875, 901, 1111, 1112, 1113, 1227, 1234, 1548, 1617, 1896, 1906, 1912, 1926], "rerun": [5, 42, 1894], "segment": [5, 16, 23, 1028, 1124, 1461, 1913], "persist": [5, 11, 15, 22, 37, 44, 64, 759, 814, 815, 816, 1198, 1382, 1400, 1430, 1445, 1894, 1902, 1907, 1908], "rng": [5, 39, 1003, 1042, 1752, 1894, 1906, 1920], "advanc": [5, 16, 34, 39, 40, 50, 1473, 1475, 1477, 1656, 1665, 1875, 1878, 1885, 1894, 1896, 1900, 1904, 1929, 1930], "juggl": 5, "dropout": [5, 47, 72, 733, 734, 759, 1198, 1342, 1369, 1370, 1371, 1375, 1382, 1400, 1430, 1436, 1445, 1446, 1473, 1475, 1477, 1495, 1515, 1516, 1517, 1522, 1579, 1866, 1869, 1879, 1885, 1886, 1891, 1894, 1911, 1918], "moder": 5, "hit": [5, 8, 11, 16, 22, 29, 33, 1610, 1865, 1894], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1866], "omit": [5, 33, 42, 60, 1105, 1106, 1108, 1384, 1444, 1908, 1909, 1921, 1932], "exclud": [5, 9, 13, 40, 59, 72, 958, 1160, 1374, 1521, 1569, 1667, 1840, 1841, 1842, 1843, 1900, 1913, 1922], "_infer_device_typ": 5, "remain": [5, 8, 48, 59, 72, 1305, 1373, 1374, 1520, 1521, 1601, 1610, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1716, 1738, 1881, 1883, 1890, 1898, 1902], "consequ": [5, 69, 1261, 1400, 1816, 1871, 1891, 1894, 1904, 1906], "random": [5, 16, 29, 48, 50, 59, 60, 65, 72, 86, 91, 157, 759, 891, 922, 1003, 1004, 1009, 1018, 1019, 1038, 1039, 1042, 1043, 1132, 1139, 1150, 1174, 1270, 1290, 1309, 1310, 1314, 1316, 1342, 1353, 1375, 1382, 1400, 1448, 1522, 1572, 1577, 1601, 1618, 1624, 1630, 1631, 1638, 1639, 1658, 1705, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1752, 1765, 1817, 1858, 1865, 1866, 1869, 1877, 1889, 1897, 1899, 1905, 1909, 1911, 1930], "gradient": [5, 16, 25, 31, 39, 40, 42, 46, 48, 64, 65, 68, 153, 224, 225, 292, 337, 488, 495, 513, 694, 695, 879, 888, 890, 892, 894, 895, 896, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 912, 913, 923, 949, 1075, 1127, 1128, 1129, 1130, 1134, 1139, 1140, 1173, 1198, 1233, 1234, 1237, 1244, 1245, 1261, 1270, 1287, 1289, 1295, 1298, 1300, 1346, 1353, 1361, 1362, 1363, 1366, 1367, 1373, 1374, 1384, 1398, 1399, 1430, 1437, 1461, 1512, 1513, 1520, 1521, 1531, 1540, 1548, 1550, 1551, 1564, 1598, 1599, 1600, 1606, 1607, 1610, 1611, 1614, 1615, 1617, 1622, 1655, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1703, 1761, 1797, 1816, 1858, 1866, 1868, 1869, 1878, 1885, 1886, 1889, 1894, 1895, 1896, 1898, 1899, 1902, 1905, 1911, 1912, 1921, 1922, 1925], "among": [5, 15, 39, 40, 42, 46, 48, 59, 984, 985, 988, 1160, 1367, 1658, 1871, 1904], "detect": [5, 14, 16, 29, 33, 35, 36, 39, 42, 43, 50, 52, 64, 900, 901, 902, 903, 904, 905, 1128, 1202, 1474, 1476, 1610, 1851, 1866, 1883, 1886, 1894, 1899, 1905, 1909, 1913, 1921], "priorit": [5, 1131, 1132, 1134, 1672, 1673, 1925], "defaultdevicetyp": 5, "anticip": 5, "belong": [5, 20, 28, 42, 44, 46, 48, 56, 72, 936, 977, 1687, 1865, 1894, 1912, 1936], "use_reentr": 5, "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 20, 29, 72, 1368, 1624, 1837, 1887, 1902, 1912, 1914, 1916], "intermedi": [5, 14, 15, 33, 49, 69, 72, 933, 1122, 1128, 1135, 1287, 1374, 1473, 1475, 1477, 1521, 1868, 1871, 1894, 1896, 1897, 1898, 1905, 1935], "entir": [5, 7, 12, 13, 14, 15, 16, 20, 21, 29, 33, 39, 42, 50, 60, 72, 696, 907, 908, 1128, 1151, 1369, 1370, 1371, 1375, 1393, 1394, 1395, 1402, 1515, 1516, 1517, 1522, 1610, 1628, 1630, 1654, 1871, 1886, 1891, 1894, 1896, 1897, 1898, 1901, 1902, 1909, 1913, 1916, 1921, 1923, 1925], "graph": [5, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 42, 44, 48, 64, 84, 85, 142, 153, 224, 225, 679, 746, 791, 792, 814, 815, 816, 822, 825, 892, 898, 906, 952, 954, 972, 1007, 1012, 1017, 1128, 1198, 1201, 1202, 1207, 1209, 1213, 1610, 1665, 1667, 1672, 1673, 1866, 1871, 1877, 1879, 1887, 1890, 1895, 1896, 1899, 1902, 1903, 1909, 1913, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1930, 1935], "recomput": [5, 14, 898, 1482, 1540, 1654, 1912], "refer": [5, 12, 20, 21, 23, 29, 33, 39, 40, 42, 43, 44, 46, 48, 51, 54, 55, 59, 60, 64, 65, 71, 86, 256, 733, 734, 755, 763, 791, 792, 793, 818, 819, 820, 823, 824, 825, 858, 872, 877, 892, 934, 1010, 1015, 1074, 1124, 1146, 1147, 1179, 1186, 1198, 1201, 1209, 1216, 1229, 1250, 1254, 1267, 1270, 1353, 1384, 1430, 1479, 1494, 1502, 1511, 1529, 1597, 1610, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1705, 1722, 1758, 1780, 1817, 1851, 1865, 1866, 1869, 1883, 1884, 1886, 1887, 1890, 1891, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1904, 1906, 1912, 1917, 1918, 1921, 1922, 1925, 1928, 1929, 1930, 1933], "potenti": [5, 8, 14, 16, 20, 42, 59, 61, 86, 194, 211, 1207, 1243, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1579, 1610, 1851, 1870, 1878, 1883, 1891, 1894, 1896, 1913, 1925, 1929], "silent": [5, 19, 1018, 1019, 1038, 1039, 1172, 1213, 1430, 1614, 1615, 1894, 1905, 1909], "consider": [5, 7, 883, 1195, 1374, 1610, 1871, 1893], "limit": [5, 8, 9, 14, 15, 16, 17, 19, 20, 24, 29, 39, 47, 64, 65, 70, 1041, 1128, 1211, 1315, 1353, 1373, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1579, 1610, 1633, 1764, 1866, 1871, 1875, 1883, 1885, 1886, 1891, 1894, 1895, 1902, 1905, 1906, 1907, 1913, 1916, 1919, 1921, 1922, 1925, 1932], "reentrant": [5, 1610], "stop": [5, 17, 48, 50, 59, 60, 61, 864, 1010, 1196, 1270, 1353, 1643, 1699, 1731, 1868, 1871, 1921], "soon": [5, 20, 29, 59, 64, 792, 1891, 1916, 1921, 1923], "set_checkpoint_early_stop": 5, "entireti": 5, "no_grad": [5, 860, 1075, 1129, 1133, 1138, 1173, 1198, 1373, 1430, 1436, 1477, 1611, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1889, 1891, 1902, 1933], "condit": [5, 14, 15, 37, 39, 69, 72, 616, 619, 623, 693, 759, 901, 907, 908, 1195, 1213, 1227, 1229, 1237, 1243, 1244, 1245, 1256, 1261, 1382, 1400, 1445, 1477, 1645, 1650, 1839, 1861, 1867, 1868, 1869, 1870, 1872, 1886, 1891, 1896, 1905, 1914, 1930], "unmet": 5, "particip": [5, 9, 14, 39, 42, 43, 46, 59, 60, 1610, 1922], "wherea": [5, 15, 1253, 1311, 1312, 1325, 1686, 1816, 1871, 1932], "know": [5, 7, 8, 11, 14, 15, 16, 20, 33, 43, 49, 72, 487, 896, 901, 1122, 1128, 1208, 1610, 1868, 1871, 1878, 1890, 1891, 1894, 1896, 1899, 1909, 1913, 1921, 1922, 1923, 1925], "lstm": [5, 762, 1401, 1869, 1894, 1909, 1911, 1916, 1918, 1919, 1930], "hidden": [5, 759, 1137, 1382, 1383, 1400, 1401, 1445, 1447, 1611, 1894, 1930], "correctli": [5, 19, 39, 42, 59, 64, 487, 1128, 1198, 1213, 1430, 1548, 1868, 1870, 1871, 1881, 1885, 1890, 1891, 1895, 1896, 1897, 1904, 1906, 1916, 1921], "entrant": 5, "futur": [5, 8, 9, 14, 16, 18, 40, 42, 44, 50, 59, 60, 69, 72, 292, 323, 513, 517, 556, 679, 686, 792, 814, 815, 816, 825, 860, 898, 942, 943, 952, 963, 964, 971, 972, 974, 975, 977, 1006, 1007, 1014, 1015, 1017, 1144, 1198, 1201, 1207, 1208, 1211, 1216, 1228, 1239, 1241, 1242, 1243, 1246, 1259, 1287, 1288, 1299, 1370, 1430, 1531, 1553, 1554, 1555, 1602, 1610, 1614, 1651, 1652, 1657, 1675, 1715, 1731, 1812, 1816, 1839, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1877, 1878, 1879, 1881, 1885, 1886, 1893, 1894, 1896, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1921, 1925, 1927, 1931, 1932, 1933, 1935], "turn": [5, 15, 18, 19, 20, 25, 33, 39, 69, 72, 679, 872, 952, 1186, 1213, 1474, 1476, 1798, 1799, 1800, 1801, 1802, 1803, 1878, 1891, 1894, 1905, 1906, 1909, 1915, 1916, 1922, 1925], "open": [5, 8, 9, 16, 25, 33, 39, 48, 59, 65, 688, 914, 1121, 1205, 1269, 1292, 1302, 1546, 1868, 1878, 1883, 1886, 1900, 1908, 1909, 1913, 1916, 1921, 1925, 1926], "ran": [5, 16, 23, 29, 36, 64], "sequenti": [5, 16, 25, 29, 39, 46, 64, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 792, 1139, 1198, 1207, 1376, 1430, 1469, 1480, 1619, 1633, 1700, 1858, 1868, 1883, 1886, 1894, 1902, 1909, 1912, 1914, 1916, 1935], "func": [5, 42, 47, 67, 69, 72, 861, 891, 893, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 1173, 1201, 1213, 1214, 1652, 1858, 1866, 1871, 1890, 1921, 1923, 1936], "compris": [5, 60], "chunk": [5, 39, 42, 44, 64, 939, 988, 1133, 1367, 1610, 1804, 1868, 1869, 1884, 1911, 1912, 1914, 1921, 1925, 1929], "input_var": [5, 1367], "person": [6, 7, 9], "land": [6, 9, 10, 24], "six": [6, 1360], "commit": [6, 7, 9, 24, 33, 65, 1865, 1866, 1905, 1906], "repositori": [6, 9, 68, 72, 1865, 1904], "submit": [6, 9, 24, 974, 975, 977, 1894, 1906], "month": [6, 9], "qualifi": [6, 42, 47, 56, 72, 679, 1198, 1430, 1877, 1913], "pr": [6, 7, 1705, 1817, 1935], "interest": [6, 7, 9, 13, 15, 17, 19, 21, 22, 25, 1891, 1897, 1899, 1902], "merge_rul": 6, "vote": [6, 9], "decis": [6, 14, 44, 50, 59, 61, 72, 1213, 1878, 1890], "criteria": [6, 9, 1270], "approv": [6, 9], "Not": [6, 20, 60, 1328, 1477, 1868, 1870, 1871, 1872, 1896, 1911, 1916, 1921], "busi": [6, 9, 22], "dai": [6, 7, 15, 24], "contributor": [6, 7, 8, 9], "seen": [6, 18, 20, 36, 48, 72, 224, 939, 952, 1299, 1361, 1362, 1363, 1461, 1553, 1554, 1555, 1699, 1868, 1878, 1891, 1894, 1909, 1925], "thumb": [6, 42], "acceler": [7, 11, 16, 40, 1348, 1349, 1350, 1469, 1669, 1900], "deep": [7, 9, 14, 16, 26, 29, 72, 1348, 1349, 1350, 1372, 1469, 1685, 1866, 1889, 1902, 1916], "neural": [7, 8, 14, 34, 72, 1342, 1353, 1368, 1375, 1384, 1396, 1429, 1430, 1437, 1442, 1443, 1457, 1459, 1473, 1475, 1477, 1559, 1582, 1620, 1683, 1691, 1697, 1868, 1870, 1871, 1889, 1894, 1896, 1905, 1909, 1916], "tape": [7, 11], "system": [7, 8, 14, 25, 33, 34, 35, 39, 60, 69, 72, 945, 959, 1151, 1205, 1229, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1258, 1259, 1260, 1264, 1269, 1288, 1315, 1473, 1475, 1477, 1610, 1620, 1622, 1760, 1839, 1872, 1877, 1881, 1891, 1893, 1894, 1901, 1902, 1904, 1908, 1913, 1921], "organ": [7, 16, 20, 1895, 1901, 1913], "govern": [7, 8, 1866, 1916], "technic": [7, 9, 14, 21, 59, 72, 1198, 1430, 1606, 1607, 1866, 1891, 1898, 1904, 1913], "md": [7, 72, 791, 1913], "healthi": [7, 50, 59], "team": [7, 42, 65, 86, 1907, 1914], "commun": [7, 8, 9, 16, 19, 21, 43, 44, 46, 50, 59, 61, 64, 679, 1610, 1891, 1895, 1921, 1922], "project": [7, 28, 44, 1299, 1400, 1436, 1622, 1705, 1865, 1900], "ve": [7, 15, 16, 20, 21, 67, 68, 69, 72, 1202, 1878, 1883, 1891, 1897, 1922, 1930], "come": [7, 8, 9, 18, 20, 23, 39, 47, 48, 49, 56, 59, 65, 69, 952, 1071, 1122, 1128, 1269, 1369, 1370, 1371, 1375, 1396, 1666, 1875, 1879, 1895, 1897, 1901, 1913, 1921, 1923, 1925], "peopl": [7, 19, 22, 1891, 1916], "scratch": [7, 29, 1891], "itch": 7, "acquaint": 7, "tip": [7, 16, 1894], "tracker": [7, 1270], "confirm": [7, 16, 23, 1865, 1868, 1896, 1909, 1921, 1923], "tend": [7, 902, 1851], "bootcamp": 7, "1hr": 7, "although": [7, 8, 25, 28, 47, 48, 69, 72, 1361, 1362, 1363, 1430, 1438, 1610, 1866, 1871, 1890, 1896, 1905, 1914, 1916], "join": [7, 40, 42, 46, 59, 60, 71, 72, 1610, 1865, 1866, 1872, 1883, 1891, 1895, 1904, 1911, 1931], "u": [7, 8, 14, 16, 20, 22, 29, 65, 70, 72, 759, 900, 943, 944, 945, 1234, 1236, 1240, 1244, 1245, 1261, 1287, 1289, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1382, 1383, 1400, 1401, 1415, 1417, 1445, 1447, 1448, 1469, 1480, 1622, 1705, 1816, 1817, 1867, 1868, 1869, 1878, 1885, 1889, 1891, 1894, 1895, 1896, 1897, 1902, 1913, 1915, 1925, 1929, 1930], "dev": [7, 10, 26, 29, 51, 56], "happi": 7, "research": [7, 8, 9, 1610, 1865, 1891, 1899, 1907], "partner": 7, "speed": [7, 8, 20, 21, 33, 46, 983, 1071, 1127, 1189, 1202, 1207, 1261, 1338, 1436, 1816, 1891, 1893, 1894, 1895, 1896, 1898, 1900, 1905, 1916, 1921], "reach": [7, 8, 9, 13, 39, 40, 42, 43, 50, 59, 65, 1270, 1610, 1688, 1691, 1694, 1695, 1891, 1896, 1904, 1914, 1916, 1917, 1921], "design": [7, 9, 14, 16, 19, 26, 29, 39, 48, 56, 59, 65, 68, 69, 70, 907, 908, 1198, 1217, 1430, 1664, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1827, 1865, 1866, 1867, 1881, 1894, 1896, 1900, 1902, 1913], "comment": [7, 22, 72, 1654, 1755, 1871, 1872, 1896, 1928, 1930], "crack": 7, "usual": [7, 15, 22, 33, 39, 40, 44, 59, 60, 72, 87, 482, 830, 831, 832, 833, 840, 892, 900, 902, 906, 1139, 1369, 1370, 1371, 1375, 1390, 1393, 1394, 1395, 1396, 1601, 1610, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1858, 1868, 1871, 1886, 1890, 1891, 1893, 1894, 1896, 1898, 1901, 1912, 1917, 1919, 1921, 1930, 1936], "idea": [7, 16, 29, 65, 1071, 1338, 1610, 1894, 1901, 1909, 1922], "rfc": [7, 1891, 1916, 1922], "big": [7, 15, 22, 1672, 1673, 1676, 1682, 1683, 1798, 1799, 1800, 1801, 1802, 1803, 1912, 1916], "post": [7, 8, 15, 26, 29, 43, 44, 46, 64, 855, 856, 860, 1198, 1430, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1866, 1875, 1891, 1895, 1896, 1898, 1908, 1925], "standard": [7, 33, 36, 40, 48, 52, 53, 57, 69, 72, 87, 354, 379, 588, 1091, 1342, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1396, 1402, 1469, 1475, 1477, 1658, 1705, 1728, 1774, 1779, 1810, 1811, 1870, 1872, 1886, 1889, 1893, 1894, 1904, 1905, 1909, 1910, 1913, 1926], "lot": [7, 14, 15, 19, 20, 21, 22, 33, 39, 1883, 1891, 1894, 1899, 1904, 1913, 1914, 1920, 1922, 1930], "boil": 7, "mostli": [7, 48, 1196, 1610, 1894, 1925, 1936], "evid": 7, "peer": [7, 42, 46, 59, 64, 981, 1610, 1894, 1921], "paper": [7, 9, 40, 48, 759, 1338, 1342, 1348, 1349, 1350, 1352, 1361, 1362, 1363, 1368, 1369, 1370, 1371, 1372, 1375, 1378, 1379, 1382, 1385, 1388, 1393, 1394, 1395, 1402, 1436, 1442, 1443, 1448, 1457, 1461, 1469, 1473, 1475, 1477, 1478, 1479, 1524, 1525, 1534, 1672, 1673, 1684, 1691, 1697, 1899, 1914], "framework": [7, 8, 9, 48, 56, 65, 71, 759, 979, 1307, 1382, 1610, 1617, 1685, 1764, 1866, 1903, 1914, 1916, 1922, 1923], "bit": [7, 19, 20, 22, 72, 91, 332, 459, 760, 762, 764, 818, 819, 820, 821, 824, 826, 857, 925, 928, 963, 964, 1124, 1178, 1739, 1740, 1752, 1781, 1894, 1902, 1905, 1908, 1916, 1919, 1920, 1925, 1928, 1931, 1937], "accept": [7, 9, 29, 39, 42, 44, 47, 65, 66, 68, 70, 153, 513, 801, 888, 889, 890, 891, 892, 897, 906, 942, 1014, 1017, 1123, 1139, 1160, 1198, 1202, 1366, 1430, 1437, 1458, 1477, 1629, 1643, 1644, 1650, 1668, 1756, 1793, 1807, 1858, 1871, 1885, 1894, 1896, 1897, 1909, 1912, 1921, 1928, 1930], "overwhelm": [7, 16, 29, 1921], "newli": [7, 20, 64, 72, 1085, 1086, 1373, 1374, 1717, 1718, 1875], "publish": [7, 9, 51, 56, 59, 1270, 1866], "ground": [7, 9, 1366, 1512, 1930], "break": [7, 11, 13, 14, 17, 18, 20, 22, 23, 48, 67, 72, 679, 892, 952, 954, 1198, 1243, 1430, 1744, 1764, 1866, 1872, 1877, 1895, 1912, 1925], "becom": [7, 8, 9, 16, 20, 29, 39, 42, 48, 72, 292, 759, 875, 1151, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1382, 1400, 1415, 1435, 1445, 1458, 1512, 1529, 1601, 1689, 1789, 1837, 1878, 1879, 1891, 1895, 1896, 1909, 1913, 1915, 1921], "refactor": [7, 17, 72, 1908, 1916], "coordin": [7, 16, 29, 42, 44, 48, 50, 582, 585, 883, 1151, 1160, 1299, 1709, 1801, 1841, 1843, 1891, 1925, 1930], "pace": 7, "branch": [7, 14, 24, 72, 1865, 1870, 1871, 1894], "fast": [7, 8, 15, 19, 22, 39, 42, 907, 1372, 1393, 1394, 1395, 1461, 1477, 1579, 1697, 1703, 1722, 1744, 1759, 1866, 1893, 1894, 1896, 1900, 1912, 1921, 1925, 1928, 1929], "definit": [7, 8, 20, 39, 42, 43, 48, 55, 72, 943, 944, 945, 970, 1014, 1119, 1218, 1227, 1228, 1270, 1396, 1541, 1586, 1657, 1735, 1837, 1865, 1868, 1870, 1872, 1890, 1891, 1896, 1899, 1913, 1916, 1930, 1932], "fundament": [7, 15, 69, 1870, 1902, 1921, 1925], "cut": [7, 16], "guidanc": [7, 9, 14, 34, 66, 1914], "stage": [7, 29, 36, 40, 46, 56, 64, 71, 1866, 1878, 1886, 1914, 1923], "piec": [7, 20, 1877, 1886, 1922], "advic": 7, "readi": [7, 11, 21, 33, 71, 860, 861, 921, 930, 1155, 1156, 1610, 1868, 1895, 1921, 1922], "draft": 7, "convert": [7, 20, 28, 29, 39, 42, 47, 48, 49, 64, 68, 72, 84, 153, 579, 583, 584, 585, 586, 587, 734, 787, 788, 789, 791, 792, 793, 814, 815, 816, 837, 838, 853, 856, 857, 858, 878, 879, 938, 951, 1055, 1091, 1122, 1198, 1267, 1430, 1440, 1441, 1469, 1476, 1601, 1612, 1613, 1616, 1653, 1664, 1666, 1667, 1686, 1717, 1718, 1723, 1798, 1799, 1800, 1801, 1802, 1803, 1868, 1869, 1870, 1871, 1886, 1896, 1900, 1909, 1910, 1916, 1919, 1925, 1930, 1932, 1935], "press": [7, 72], "button": [7, 24], "prepend": [7, 33, 39, 42, 46, 72, 232, 1063, 1198, 1292, 1430, 1833, 1869, 1892], "titl": [7, 1911, 1915], "wip": 7, "progress": [7, 42, 46, 50, 60, 62, 974, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1852, 1865, 1880], "ci": [7, 24, 1866], "folk": 7, "who": [7, 8, 9, 20, 21, 31, 59, 1913], "regularli": 7, "queue": [7, 50, 61, 1883, 1930], "everyth": [7, 14, 16, 20, 22, 29, 39, 48, 68, 1868, 1883, 1913], "happen": [7, 9, 11, 20, 21, 42, 44, 46, 48, 50, 52, 59, 64, 69, 72, 87, 606, 790, 813, 1128, 1469, 1610, 1617, 1688, 1694, 1695, 1701, 1816, 1866, 1881, 1883, 1891, 1894, 1895, 1896, 1897, 1898, 1903, 1904, 1908, 1909, 1916, 1921, 1929], "subsystem": [7, 31, 65, 70, 954, 1866, 1896], "patch": [7, 17, 66, 1377, 1481], "feel": [7, 1886, 1909, 1925], "ll": [7, 12, 15, 22, 25, 69, 72, 759, 819, 820, 860, 861, 943, 1017, 1227, 1382, 1383, 1400, 1401, 1878, 1891, 1894, 1896, 1897, 1904, 1909, 1916, 1922], "round": [7, 39, 42, 508, 664, 665, 798, 801, 819, 864, 966, 968, 1028, 1066, 1092, 1093, 1094, 1098, 1102, 1103, 1104, 1119, 1243, 1256, 1482, 1540, 1715, 1716, 1735, 1784, 1867, 1869, 1871, 1884, 1894, 1911, 1916, 1919, 1925, 1926], "trip": [7, 72, 1092, 1093, 1094, 1098, 1102, 1103, 1104], "noth": [7, 33, 50, 72, 679, 1008, 1622, 1672, 1673, 1700, 1868, 1870, 1923], "accompani": [7, 85], "solut": [7, 8, 69, 1242, 1243, 1247, 1255, 1258, 1260, 1264, 1346, 1610, 1839, 1868, 1869, 1889, 1890, 1898, 1904], "think": [7, 9, 15, 16, 17, 72, 1686, 1868, 1870, 1891, 1912, 1913, 1923], "confid": [7, 17, 1930], "ahead": [7, 14, 16, 1866, 1916], "search": [7, 12, 15, 24, 29, 31, 40, 818, 936, 1388, 1534, 1610, 1667, 1722, 1751, 1868, 1884, 1885, 1909, 1913, 1925], "repo": [7, 1691, 1865, 1896, 1908], "unabl": [7, 27, 29, 69, 84, 1909, 1912], "similar": [7, 9, 14, 15, 16, 20, 23, 29, 39, 42, 48, 56, 64, 69, 71, 72, 493, 515, 711, 712, 713, 714, 715, 716, 719, 729, 730, 731, 732, 744, 745, 755, 763, 801, 876, 891, 933, 938, 951, 1117, 1118, 1198, 1364, 1365, 1377, 1390, 1393, 1394, 1395, 1430, 1478, 1511, 1643, 1657, 1658, 1686, 1709, 1737, 1744, 1793, 1827, 1833, 1849, 1870, 1871, 1883, 1884, 1886, 1891, 1893, 1894, 1896, 1897, 1899, 1905, 1909, 1913, 1914, 1916, 1921, 1922, 1925, 1926, 1931, 1937], "reproduc": [7, 16, 29, 39, 69, 315, 323, 515, 517, 923, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1426, 1427, 1428, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1521, 1529, 1540, 1567, 1579, 1598, 1599, 1600, 1601, 1851, 1865, 1866, 1912, 1913], "problemat": [7, 39, 72, 1868, 1905, 1917], "insight": [7, 36], "individu": [7, 9, 11, 19, 22, 24, 33, 39, 40, 42, 44, 46, 64, 72, 85, 244, 679, 791, 837, 838, 943, 1037, 1089, 1107, 1198, 1353, 1430, 1469, 1610, 1664, 1871, 1884, 1890, 1891, 1894, 1896, 1901, 1905, 1906, 1909, 1919, 1921, 1932], "intent": [7, 23, 57, 59, 69, 1756, 1878, 1913], "lock": [7, 39, 42, 46, 48, 1891, 1894, 1904, 1913, 1922], "strike": 7, "convers": [7, 15, 28, 459, 579, 582, 792, 937, 1183, 1643, 1866, 1872, 1896, 1900, 1909, 1916, 1917, 1925], "medium": [7, 64, 1759], "prioriti": [7, 9, 10, 42, 679, 853, 977, 1870, 1907], "entranc": [7, 1894], "great": [7, 11, 14, 1891, 1899], "deal": [7, 8, 14, 15, 20, 22, 39, 50, 61, 1832, 1883, 1898, 1921], "welcom": [7, 1886, 1912, 1925], "aim": [7, 1897, 1925], "rare": [7, 14, 17, 1890, 1909, 1936], "typo": 7, "send": [7, 15, 19, 39, 42, 50, 61, 1010, 1601, 1610, 1883, 1895, 1904, 1908, 1911, 1915, 1921, 1922, 1923, 1933, 1935], "forum": [7, 9, 1898, 1904], "share": [7, 10, 11, 17, 18, 33, 39, 43, 46, 48, 49, 59, 60, 64, 69, 224, 313, 342, 459, 484, 520, 523, 616, 858, 878, 879, 896, 907, 908, 952, 972, 974, 1006, 1010, 1122, 1123, 1124, 1168, 1245, 1329, 1330, 1367, 1610, 1620, 1658, 1733, 1747, 1807, 1830, 1836, 1850, 1869, 1890, 1891, 1893, 1904, 1907, 1908, 1909, 1921, 1925, 1927, 1929, 1934], "resolv": [7, 8, 9, 14, 44, 48, 72, 84, 85, 1198, 1361, 1362, 1363, 1377, 1427, 1430, 1870, 1871, 1872, 1908, 1913, 1927, 1936], "challeng": [7, 16, 42, 1922], "feedback": [7, 29, 36, 40, 64, 65, 1610, 1866, 1925], "direct": [7, 9, 20, 28, 31, 42, 759, 791, 1112, 1113, 1198, 1382, 1400, 1430, 1445, 1654, 1684, 1705, 1722, 1743, 1891, 1894, 1896, 1902, 1921], "yourself": [7, 16, 67, 972, 1896, 1902, 1904, 1936], "problem": [7, 14, 16, 21, 29, 39, 42, 59, 69, 1071, 1213, 1243, 1255, 1270, 1366, 1437, 1494, 1755, 1883, 1891, 1894, 1898, 1899, 1904, 1908, 1914, 1916, 1917, 1923, 1928], "area": [7, 9, 1540, 1902, 1916, 1926], "appreci": 7, "strive": 7, "respond": [7, 42], "quickli": [7, 8, 19, 40, 59], "ey": [7, 48, 194, 211, 944, 1139, 1218, 1227, 1238, 1249, 1252, 1255, 1256, 1263, 1264, 1617, 1715, 1794, 1858, 1869, 1873, 1896, 1911], "everyon": [7, 50, 59], "touch": [7, 57, 72], "versu": [7, 1434], "write": [7, 8, 9, 14, 16, 19, 21, 22, 29, 36, 39, 42, 44, 47, 50, 52, 56, 57, 58, 59, 64, 69, 70, 84, 85, 256, 513, 696, 934, 954, 1123, 1139, 1175, 1208, 1228, 1239, 1240, 1241, 1245, 1246, 1259, 1597, 1665, 1747, 1839, 1851, 1858, 1866, 1870, 1881, 1885, 1894, 1897, 1898, 1899, 1912, 1913, 1925, 1930], "blog": [7, 8, 1875, 1895, 1896, 1916, 1925], "around": [7, 9, 11, 20, 27, 29, 31, 42, 48, 68, 69, 71, 72, 153, 623, 892, 906, 972, 974, 975, 977, 1046, 1117, 1118, 1128, 1198, 1610, 1744, 1868, 1883, 1891, 1894, 1909, 1921], "internet": 7, "grow": [7, 8, 19, 72, 1925], "market": [7, 9], "benefit": [7, 8, 29, 42, 72, 846, 1699, 1883, 1894, 1916, 1925], "opinion": [7, 8, 1925], "isn": [7, 15, 39, 72, 459, 1195, 1891, 1894, 1896, 1921, 1932], "categor": [7, 28, 52, 1531, 1866, 1872, 1917, 1921], "aspect": [7, 42, 72, 1896, 1902], "seem": [7, 1909], "unusu": [7, 15], "claim": [7, 1697, 1899], "wast": [7, 1894], "someon": [7, 9, 1196, 1885], "too": [7, 9, 14, 15, 21, 29, 33, 40, 44, 59, 64, 69, 72, 1028, 1127, 1243, 1261, 1326, 1353, 1366, 1430, 1513, 1611, 1652, 1871, 1893, 1898, 1899, 1904, 1905, 1906, 1908, 1910, 1913, 1914, 1923, 1925], "advisori": 7, "fashion": [7, 39, 42, 61, 515, 1275, 1633, 1868], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 29], "wrote": [7, 8], "implicitli": [7, 42, 52, 64, 72, 1054, 1143, 1151, 1213, 1214, 1269, 1343, 1344, 1345, 1423, 1424, 1425, 1756, 1837, 1868, 1870, 1871, 1891, 1896, 1900], "lifetim": [7, 15, 1894, 1921], "immedi": [7, 8, 9, 14, 15, 59, 60, 64, 71, 1198, 1201, 1430, 1871, 1902, 1907, 1912, 1921, 1923], "sai": [7, 11, 14, 20, 22, 28, 72, 496, 1131, 1132, 1133, 1198, 1430, 1868, 1890, 1891, 1898, 1913, 1922, 1923, 1925], "bugfix": 7, "Or": [7, 20, 50, 72, 947, 1900, 1903, 1909, 1925], "motiv": [7, 8, 16, 29, 72, 734, 1902, 1922], "ye": [7, 1909, 1912, 1925], "knuth": 7, "bewar": 7, "mere": 7, "proven": [7, 1368, 1610], "ok": [7, 18, 52, 57, 68, 952, 1203, 1923], "sometim": [7, 14, 15, 22, 72, 903, 1028, 1213, 1377, 1481, 1507, 1508, 1509, 1622, 1866, 1871, 1883, 1891, 1894, 1897, 1898, 1902, 1904, 1913, 1928, 1931, 1936], "obvious": [7, 15, 19], "broken": [7, 39, 1028, 1909, 1913], "contrari": [7, 1893], "accident": 7, "put": [7, 9, 15, 17, 27, 39, 42, 50, 68, 71, 72, 321, 1091, 1269, 1385, 1691, 1865, 1869, 1883, 1894, 1904, 1911, 1913, 1922, 1923], "difficulti": [7, 1889], "nonlinearli": 7, "sign": [7, 48, 343, 528, 883, 965, 1059, 1107, 1119, 1124, 1231, 1256, 1257, 1278, 1422, 1684, 1735, 1767, 1781, 1867, 1869, 1884, 1911, 1919, 1925, 1928, 1931, 1932], "split": [7, 25, 39, 42, 72, 616, 771, 772, 773, 858, 860, 861, 939, 946, 1028, 1069, 1161, 1367, 1381, 1382, 1400, 1436, 1445, 1504, 1505, 1506, 1507, 1508, 1509, 1528, 1831, 1859, 1868, 1869, 1884, 1894, 1911, 1913, 1914, 1916, 1921, 1925, 1929], "shippabl": 7, "complet": [7, 17, 20, 24, 25, 27, 33, 39, 42, 44, 50, 51, 57, 59, 61, 69, 71, 487, 679, 860, 954, 974, 975, 977, 1047, 1127, 1128, 1201, 1209, 1211, 1216, 1228, 1256, 1311, 1312, 1317, 1494, 1610, 1619, 1652, 1715, 1866, 1870, 1871, 1872, 1877, 1883, 1890, 1891, 1894, 1897, 1900, 1906, 1913, 1914, 1921, 1922], "subtl": [7, 15, 16, 29, 1393, 1394, 1395, 1896], "nuanc": [7, 20, 21], "extra": [7, 15, 20, 22, 33, 39, 40, 42, 46, 48, 64, 72, 1071, 1128, 1139, 1198, 1205, 1208, 1243, 1269, 1430, 1437, 1617, 1812, 1858, 1870, 1885, 1891, 1893, 1895, 1896, 1898, 1901, 1913, 1915, 1925, 1932, 1933], "understand": [7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21, 29, 42, 44, 50, 51, 1128, 1255, 1866, 1875, 1889, 1891, 1894, 1900, 1907, 1915, 1930], "hack": 7, "answer": [7, 10, 15, 72, 823, 1347, 1635], "regress": [7, 11, 23, 1346, 1906], "scrutini": 7, "undertak": 7, "rest": [7, 17, 20, 22, 25, 39, 40, 60, 72, 792, 813, 1124, 1263, 1264, 1831, 1885, 1902, 1906, 1913, 1914, 1916, 1921, 1925], "chanc": [7, 15, 22, 44, 48, 1896], "unrel": [7, 959, 1137, 1890, 1896, 1913], "aid": [7, 29, 72, 1891], "troubleshoot": [7, 42, 1866], "mayb": [7, 15, 1135], "bracnh": 7, "rebas": 7, "latest": [7, 42, 46, 48, 1629, 1865, 1896, 1900, 1909], "statu": [7, 9, 50, 1287, 1866, 1872, 1883, 1916], "hud": 7, "risk": [7, 8, 64, 1619, 1622], "anyth": [7, 14, 49, 52, 71, 822, 825, 1209, 1686, 1868, 1875, 1886, 1902, 1913], "configur": [7, 14, 16, 18, 24, 25, 29, 32, 39, 40, 42, 50, 51, 56, 59, 60, 61, 64, 787, 788, 791, 792, 796, 813, 814, 815, 816, 822, 825, 837, 838, 839, 842, 844, 847, 857, 858, 859, 860, 861, 952, 1028, 1610, 1643, 1760, 1851, 1866, 1877, 1881, 1894, 1895, 1896, 1906, 1908, 1913, 1919, 1921, 1930, 1932], "riski": 7, "had": [7, 14, 19, 23, 72, 1213, 1601, 1833, 1891, 1897], "beforehand": [7, 16, 71], "hei": 7, "my": [7, 39, 1367, 1901, 1909, 1916], "member": [7, 9, 39, 42, 50, 59, 60, 72, 1198, 1384, 1430, 1526, 1868, 1870, 1871, 1881, 1898, 1915, 1921, 1932, 1933], "sphinx": 7, "folder": [7, 9, 19, 29, 33, 39, 72, 1667, 1865, 1930], "tree": [7, 18, 52, 68, 952, 1430, 1473, 1667, 1866, 1909, 1913, 1915, 1923], "master": [7, 18, 42, 62, 791, 952, 1128, 1473, 1865, 1921], "doxygen": 7, "special": [7, 13, 14, 15, 18, 20, 23, 31, 52, 61, 69, 72, 740, 741, 742, 822, 825, 907, 952, 1064, 1078, 1079, 1080, 1082, 1083, 1092, 1094, 1165, 1166, 1167, 1211, 1269, 1283, 1323, 1367, 1477, 1611, 1612, 1613, 1656, 1686, 1710, 1768, 1779, 1783, 1862, 1866, 1872, 1877, 1885, 1894, 1896, 1899, 1901, 1909, 1913, 1916, 1929, 1930], "server": [7, 39, 42, 60, 1202, 1894, 1913, 1916, 1921], "cppdoc": [7, 34], "cpp": [7, 14, 33, 42, 1320, 1895], "accomplish": [7, 16, 44, 1902], "holist": 7, "concept": [7, 17, 69, 72, 1875, 1896, 1897, 1902, 1928], "galleri": 7, "restructur": [7, 1913], "text": [7, 19, 39, 48, 73, 78, 79, 80, 81, 82, 83, 156, 157, 176, 607, 616, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 697, 744, 745, 755, 757, 759, 763, 767, 768, 769, 771, 772, 773, 779, 783, 819, 820, 864, 880, 881, 882, 883, 884, 920, 921, 922, 925, 928, 930, 932, 941, 947, 964, 965, 967, 968, 970, 1066, 1085, 1086, 1115, 1116, 1120, 1121, 1142, 1154, 1155, 1156, 1157, 1164, 1187, 1195, 1218, 1221, 1222, 1223, 1226, 1227, 1234, 1237, 1243, 1247, 1252, 1255, 1261, 1268, 1277, 1284, 1285, 1286, 1287, 1319, 1320, 1331, 1332, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1496, 1497, 1498, 1500, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1515, 1516, 1517, 1522, 1525, 1527, 1528, 1529, 1533, 1534, 1544, 1549, 1553, 1554, 1555, 1559, 1564, 1567, 1572, 1573, 1575, 1579, 1580, 1581, 1582, 1585, 1586, 1587, 1589, 1590, 1591, 1615, 1617, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1691, 1708, 1709, 1712, 1715, 1728, 1731, 1734, 1746, 1767, 1769, 1770, 1782, 1784, 1794, 1795, 1805, 1812, 1813, 1816, 1828, 1829, 1861, 1886, 1889, 1899, 1909, 1913, 1919, 1926, 1930, 1932], "rst": 7, "rebuild": [7, 40], "circleci": 7, "shard": [7, 16, 39, 44, 46, 47, 64, 1610], "worker": [7, 33, 39, 40, 42, 43, 46, 50, 51, 52, 53, 59, 61, 62, 64, 1610, 1871, 1906, 1914, 1915, 1921, 1922, 1923], "40": [7, 13, 1151, 1270, 1351, 1393, 1617, 1618, 1641, 1642, 1651, 1654, 1827], "minut": [7, 10, 42, 1930], "netlifi": 7, "noplot": 7, "render": [7, 42, 1930], "notebook": 7, "rebuilt": [7, 40, 46], "deploi": [7, 50, 59, 1866, 1901, 1907, 1913], "action": [7, 42, 48, 50, 53, 72, 1894, 1913, 1915, 1923], "document": [8, 9, 10, 12, 16, 20, 22, 23, 28, 35, 39, 42, 64, 65, 72, 679, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 872, 873, 874, 875, 937, 974, 975, 977, 1028, 1071, 1143, 1146, 1147, 1179, 1186, 1198, 1311, 1312, 1327, 1338, 1373, 1374, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1430, 1619, 1628, 1637, 1657, 1714, 1741, 1758, 1851, 1865, 1868, 1870, 1871, 1882, 1883, 1884, 1885, 1887, 1890, 1896, 1898, 1902, 1906, 1907, 1909, 1912, 1913, 1916, 1917, 1918, 1921, 1925, 1929, 1933], "develop": [8, 9, 10, 21, 29, 33, 40, 42, 72, 1867, 1870, 1871, 1878, 1882, 1891, 1896, 1901, 1902, 1906, 1913, 1916, 1917, 1921, 1925], "meant": [8, 43, 59, 61, 1643, 1890, 1921], "rule": [8, 9, 15, 33, 42, 48, 72, 153, 859, 891, 892, 936, 937, 1054, 1247, 1258, 1348, 1349, 1350, 1393, 1394, 1395, 1469, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1751, 1837, 1866, 1868, 1870, 1884, 1886, 1891, 1892, 1896, 1899, 1928, 1932], "concern": [8, 25, 39, 1883, 1894, 1909], "disagr": 8, "contribut": [8, 9, 44, 916, 1159, 1160, 1366, 1373, 1374, 1437, 1512, 1520, 1521, 1564, 1610, 1866, 1886, 1896, 1897, 1914], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": [8, 19], "obsess": 8, "soumith": [8, 10], "goe": [8, 17, 20, 72, 1124, 1342, 1672, 1673, 1898], "depth": [8, 9, 778, 784, 1032, 1033, 1211, 1345, 1360, 1363, 1425, 1482, 1540, 1598, 1878, 1895, 1902, 1915], "primari": [8, 9, 15, 42, 72, 1207, 1872, 1878, 1925], "goal": [8, 19, 56, 68, 72, 1299, 1878, 1891, 1895, 1899, 1910, 1923], "secondari": 8, "abil": [8, 1747, 1878, 1901, 1913], "flexibl": [8, 20, 40, 64, 68, 1254, 1610, 1878, 1894, 1896, 1902], "abstract": [8, 11, 20, 39, 40, 43, 44, 48, 50, 59, 61, 909, 910, 911, 912, 913, 1624, 1871, 1895, 1916, 1921], "critic": [8, 16, 17, 20, 59, 679, 1618, 1651, 1881, 1893, 1894], "concret": [8, 14, 15, 18, 20, 48, 62, 68, 72, 784, 799, 823, 840, 952, 1482, 1567, 1598, 1868, 1871, 1894, 1896, 1904], "manner": [8, 50, 513, 900, 902, 1885, 1887, 1892], "jump": [8, 559, 1928], "regim": 8, "ei": 8, "tradeoff": [8, 16, 23, 40, 1916, 1922], "temptat": 8, "impos": [8, 61, 70, 1755, 1883, 1890, 1928], "strict": [8, 900, 901, 902, 903, 904, 905, 1127, 1134, 1198, 1213, 1214, 1430, 1652, 1913, 1930, 1932], "upfront": [8, 14], "simplifi": [8, 14, 40, 71, 1205, 1420, 1618, 1686, 1878, 1891, 1899, 1902, 1912, 1922], "worth": [8, 9, 20, 22, 39, 40, 62, 1128, 1865, 1929], "friction": 8, "compel": 8, "narrow": [8, 16, 29, 1267, 1330, 1686, 1774, 1869, 1871, 1884, 1911, 1918, 1929], "subproblem": 8, "fragment": [8, 29, 996, 1028, 1875, 1894], "ecosystem": [8, 19, 1901, 1903], "incomprehens": 8, "seamlessli": [8, 1886], "softwar": [8, 1233, 1234, 1261, 1851, 1894, 1900], "experi": [8, 9, 17, 21, 26, 29, 31, 40, 70, 73, 78, 79, 80, 81, 82, 83, 1139, 1459, 1582, 1610, 1858, 1878, 1896, 1930], "rich": [8, 1871], "denomin": [8, 686, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1469, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1719], "subset": [8, 39, 42, 46, 60, 1209, 1686, 1867, 1868, 1870, 1871, 1896, 1909, 1919], "borrow": 8, "zen": 8, "implicit": [8, 767, 768, 771, 772, 773, 1143, 1151, 1343, 1344, 1345, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1423, 1424, 1425, 1481, 1496, 1497, 1498, 1504, 1505, 1506, 1553, 1554, 1555, 1703, 1867, 1869, 1871, 1872, 1909, 1913, 1929], "concis": [8, 52, 1921], "interchang": [8, 48, 1683, 1836, 1870, 1900, 1910], "everydai": 8, "english": 8, "movement": [8, 1929], "worri": [8, 1921], "placement": [8, 16, 47, 50, 858, 1601, 1916, 1921], "favor": [8, 20, 42, 784, 785, 786, 943, 954, 1040, 1044, 1198, 1252, 1255, 1287, 1288, 1389, 1430, 1483, 1484, 1598, 1599, 1600, 1602, 1715, 1816, 1839], "practition": 8, "debugg": [8, 16, 29, 1203, 1899], "plug": 8, "ir": [8, 14, 15, 16, 21, 29, 72, 759, 1201, 1202, 1382, 1383, 1667, 1866, 1868, 1871, 1909, 1910], "classic": [8, 1891], "sort": [8, 14, 20, 46, 50, 72, 589, 608, 875, 876, 897, 1071, 1158, 1318, 1338, 1644, 1645, 1656, 1716, 1751, 1834, 1848, 1867, 1869, 1871, 1896, 1898, 1911, 1925], "distribut": [8, 21, 31, 39, 40, 43, 50, 51, 52, 53, 56, 57, 58, 59, 61, 62, 64, 71, 176, 260, 288, 379, 455, 482, 607, 679, 694, 695, 818, 922, 1045, 1320, 1338, 1342, 1366, 1367, 1368, 1369, 1370, 1371, 1375, 1380, 1384, 1396, 1444, 1448, 1469, 1512, 1514, 1515, 1516, 1517, 1522, 1526, 1527, 1531, 1541, 1572, 1610, 1658, 1708, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1866, 1871, 1885, 1886, 1889, 1890, 1894, 1914, 1915, 1917, 1923, 1926, 1930, 1933], "tldr": 8, "resourc": [8, 16, 24, 33, 39, 50, 55, 59, 72, 1871, 1883, 1904, 1925], "characterist": [8, 1817, 1897, 1902], "uniformli": [8, 48, 1726, 1727, 1932], "leak": [8, 892, 898, 1871, 1883, 1891], "smart": [8, 1896, 1913, 1921], "anywai": [8, 1891], "obviou": [8, 15, 1898, 1923], "extens": [8, 15, 16, 29, 33, 36, 42, 44, 47, 48, 1269, 1270, 1747, 1767, 1866, 1878, 1886, 1890, 1907, 1913, 1925], "unavoid": 8, "latenc": [8, 16, 24, 56, 1893, 1894], "caveat": [8, 12, 23, 29, 64, 1601, 1650, 1878, 1883, 1894, 1902, 1907], "valuabl": 8, "certainli": [8, 1878], "heterogen": [8, 1870], "cluster": [8, 42, 44, 58, 59, 60, 1338, 1930], "focus": [8, 29, 1870, 1871, 1896], "beaten": 8, "space": [8, 9, 39, 48, 771, 772, 773, 1054, 1089, 1091, 1093, 1094, 1100, 1107, 1151, 1160, 1213, 1214, 1268, 1284, 1338, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1396, 1406, 1407, 1408, 1409, 1410, 1411, 1424, 1425, 1481, 1504, 1505, 1506, 1507, 1508, 1509, 1541, 1837, 1869, 1887, 1891, 1899, 1902, 1907], "innov": 8, "ultim": [8, 9, 33, 52, 61, 64, 1895], "evidenc": 8, "began": 8, "bind": [8, 33, 42, 72, 1008, 1871, 1872, 1896, 1913], "monolith": 8, "deepli": 8, "integr": [8, 12, 39, 47, 53, 68, 157, 922, 924, 925, 926, 927, 928, 929, 970, 1054, 1159, 1198, 1221, 1265, 1266, 1329, 1430, 1722, 1734, 1837, 1886, 1896, 1901, 1902, 1912, 1914, 1916, 1926, 1928, 1932], "numpi": [8, 39, 69, 449, 493, 692, 693, 698, 876, 878, 879, 896, 1066, 1068, 1069, 1071, 1089, 1110, 1111, 1112, 1113, 1117, 1118, 1123, 1139, 1161, 1228, 1229, 1239, 1250, 1252, 1253, 1254, 1255, 1256, 1261, 1262, 1265, 1267, 1299, 1304, 1709, 1734, 1737, 1744, 1756, 1764, 1798, 1799, 1800, 1801, 1802, 1803, 1816, 1818, 1819, 1827, 1830, 1831, 1833, 1855, 1858, 1859, 1878, 1892, 1896, 1897, 1905, 1906, 1908, 1913, 1928, 1929, 1930, 1931, 1932, 1937], "scipi": [8, 940, 1244, 1245, 1569, 1709, 1913, 1924, 1926, 1930], "scikit": [8, 1540], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1908], "year": [8, 1925], "rewrot": 8, "frontend": [8, 16, 34, 68, 72, 1910], "familiar": [8, 16, 28, 34, 72, 1027, 1868, 1891, 1897, 1913, 1916, 1922, 1923], "perhap": [8, 20, 1897], "importantli": [8, 20], "huge": [8, 1817, 1881], "scientif": [8, 1764], "pareto": [8, 1866], "close": [8, 34, 42, 59, 72, 936, 1010, 1187, 1233, 1234, 1260, 1261, 1287, 1347, 1461, 1479, 1502, 1751, 1816, 1839, 1881, 1891, 1896, 1905, 1909, 1913, 1916, 1921, 1930, 1932], "curv": [8, 1930], "torchdynamo": [8, 12, 14, 18, 19, 20, 26, 679, 952, 954, 1663, 1866, 1877], "frame": [8, 13, 14, 16, 17, 18, 26, 29, 72, 952, 1195, 1812, 1898, 1930], "torch_funct": [8, 1896], "torch_dispatch": 8, "torch": [8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23, 26, 28, 29, 31, 34, 36, 37, 40, 43, 46, 50, 51, 52, 53, 56, 57, 59, 61, 62, 64, 67, 74, 75, 76, 77, 84, 86, 90, 91, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 893, 919, 972, 973, 974, 975, 977, 978, 993, 995, 1006, 1075, 1173, 1196, 1197, 1198, 1212, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1601, 1610, 1611, 1612, 1613, 1619, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1643, 1655, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1722, 1761, 1791, 1868, 1869, 1870, 1884, 1885, 1890, 1891, 1892, 1893, 1895, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1908, 1914, 1916, 1917, 1918, 1921, 1922, 1923, 1929], "fx": [8, 12, 13, 14, 15, 16, 19, 20, 26, 28, 29, 84, 746, 814, 815, 816, 817, 859, 1128, 1866, 1910, 1917, 1918], "tracer": [8, 20, 76, 1213, 1909, 1910, 1930, 1935], "functorch": [8, 12, 27, 65, 70], "anchor": [8, 28, 72, 1478, 1479, 1595, 1596, 1869], "hackabl": 8, "todai": [8, 14, 17, 18, 27, 65, 70, 952, 1916], "evolv": [8, 1895], "ai": [8, 1909, 1926], "adopt": [9, 42, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764], "hierarch": [9, 1930], "pull": [9, 10, 15, 34, 72, 153, 892, 1913], "request": [9, 10, 14, 31, 42, 44, 61, 688, 860, 878, 879, 1028, 1270, 1292, 1302, 1546, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1865, 1886, 1890, 1891, 1893, 1894, 1909, 1913, 1921, 1922, 1923, 1925, 1926], "overseen": 9, "catch": [9, 17, 52, 1868, 1891, 1897, 1899], "maker": 9, "strong": 9, "toward": [9, 1066, 1159, 1160, 1270, 1334, 1610, 1694, 1735, 1743, 1744, 1914], "philosophi": [9, 68, 1866], "beyond": [9, 40, 1315, 1366, 1672, 1673, 1682, 1742, 1898, 1902], "encourag": [9, 50, 1886, 1916, 1925, 1932], "propos": [9, 1669, 1689, 1690, 1878, 1899, 1912, 1922], "review": [9, 10, 20, 40, 1913], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 72], "codebas": [9, 1896], "strictli": [9, 39, 153, 194, 211, 892, 936, 1160, 1198, 1202, 1430, 1891, 1926], "compani": 9, "bui": 9, "addition": [9, 39, 40, 42, 48, 64, 153, 513, 616, 892, 1128, 1132, 1133, 1202, 1261, 1338, 1393, 1394, 1395, 1793, 1898, 1933], "membership": [9, 50, 58, 59, 1872], "That": [9, 27, 50, 57, 60, 66, 72, 1195, 1268, 1284, 1851, 1879, 1896, 1897, 1898, 1907, 1913, 1921], "seat": 9, "reserv": [9, 56, 1028, 1872, 1894, 1902], "emploi": [9, 1685, 1902, 1913, 1914], "directori": [9, 16, 17, 29, 33, 42, 44, 57, 1667, 1865, 1880, 1901, 1913, 1915, 1930], "procedur": [9, 29, 48, 858, 1213, 1214, 1270, 1791, 1921], "disput": 9, "made": [9, 11, 14, 20, 29, 44, 46, 47, 60, 72, 898, 908, 1198, 1430, 1475, 1477, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1732, 1870, 1878, 1891, 1908, 1913, 1930, 1932, 1936], "public": [9, 10, 1128, 1896, 1936], "relev": [9, 17, 19, 20, 22, 43, 50, 59, 64, 71, 679, 1261, 1872, 1890, 1891, 1913, 1916], "resolut": [9, 1442, 1443, 1494, 1529, 1570, 1571, 1837, 1872, 1913, 1937], "conclus": 9, "publicli": [9, 1936], "vision": [9, 19, 1207, 1366, 1512, 1865, 1866], "roadmap": [9, 10], "parti": [9, 59, 1865, 1866, 1868, 1894, 1897, 1902, 1913], "triag": [9, 10], "meet": [9, 10, 58, 1227, 1894], "Their": [9, 15, 1063, 1896], "articul": 9, "cohes": 9, "negoti": [9, 1921], "contenti": 9, "broad": [9, 1902], "stakehold": 9, "power": [9, 21, 58, 1034, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1114, 1221, 1251, 1265, 1398, 1399, 1550, 1551, 1618, 1651, 1669, 1698, 1712, 1736, 1852, 1872, 1894, 1925], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 14, 19, 48, 64, 1299, 1871, 1873, 1890, 1891, 1912, 1916, 1928], "merit": 9, "demonstr": [9, 19, 25, 60, 72, 1353, 1868, 1902, 1907, 1914, 1921], "expertis": 9, "continu": [9, 12, 13, 17, 20, 39, 42, 48, 62, 64, 72, 404, 607, 818, 901, 1151, 1233, 1234, 1261, 1352, 1353, 1610, 1872, 1878, 1891, 1907, 1915, 1933], "light": [9, 1930], "mainten": [9, 59, 60], "emeritu": [9, 10], "inact": [9, 1028, 1894], "contact": 9, "item": [9, 11, 14, 15, 20, 39, 44, 582, 583, 584, 588, 791, 792, 793, 813, 814, 815, 816, 1198, 1366, 1430, 1431, 1440, 1622, 1764, 1865, 1867, 1868, 1869, 1870, 1871, 1884, 1894, 1909, 1911, 1913, 1921, 1930, 1931], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 39, 48, 72, 91, 404, 472, 544, 734, 856, 860, 862, 907, 921, 923, 930, 943, 944, 945, 1087, 1088, 1089, 1090, 1091, 1099, 1101, 1105, 1107, 1124, 1134, 1135, 1138, 1155, 1156, 1190, 1193, 1198, 1201, 1227, 1228, 1239, 1241, 1252, 1255, 1256, 1270, 1290, 1305, 1324, 1329, 1330, 1347, 1358, 1359, 1360, 1365, 1366, 1367, 1374, 1384, 1391, 1430, 1436, 1466, 1473, 1478, 1479, 1494, 1502, 1521, 1526, 1529, 1595, 1596, 1604, 1605, 1606, 1742, 1744, 1794, 1796, 1840, 1841, 1842, 1843, 1850, 1865, 1869, 1884, 1885, 1896, 1897, 1899, 1909, 1911, 1914, 1920, 1925, 1926, 1932, 1936, 1937], "neg": [9, 14, 31, 33, 39, 42, 48, 61, 72, 91, 442, 444, 459, 660, 661, 697, 754, 779, 923, 928, 965, 968, 977, 993, 999, 1000, 1028, 1040, 1087, 1088, 1089, 1090, 1091, 1092, 1106, 1107, 1108, 1114, 1124, 1188, 1190, 1192, 1251, 1278, 1290, 1311, 1312, 1320, 1324, 1329, 1330, 1338, 1347, 1375, 1384, 1416, 1423, 1424, 1425, 1433, 1437, 1439, 1444, 1461, 1478, 1479, 1522, 1526, 1529, 1531, 1540, 1544, 1553, 1554, 1555, 1564, 1572, 1595, 1596, 1598, 1708, 1709, 1740, 1744, 1779, 1781, 1784, 1795, 1832, 1840, 1841, 1842, 1843, 1850, 1867, 1868, 1869, 1884, 1886, 1889, 1891, 1896, 1897, 1909, 1910, 1911, 1920, 1925, 1926], "interact": [9, 11, 16, 22, 34, 39, 47, 72, 861, 975, 1008, 1173, 1866, 1872, 1895, 1896, 1913, 1930], "final": [9, 11, 13, 14, 29, 42, 44, 46, 48, 50, 59, 68, 69, 685, 688, 689, 759, 920, 938, 951, 1071, 1110, 1128, 1151, 1269, 1287, 1292, 1382, 1384, 1400, 1445, 1458, 1601, 1794, 1837, 1868, 1870, 1871, 1872, 1884, 1896, 1899, 1902, 1905, 1907, 1909, 1913, 1922, 1923], "declin": 9, "conflict": [9, 40, 60, 1913], "lack": [9, 31, 1233, 1234, 1261], "unfit": 9, "conduct": [9, 1610, 1705, 1817, 1921], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 916, 1869, 1913], "letter": [9, 1071], "befit": 9, "candidaci": 9, "behind": [9, 15, 1866, 1907, 1922], "75": [9, 1159, 1418, 1529, 1547, 1669, 1716, 1869, 1926], "choos": [9, 34, 72, 891, 916, 997, 1243, 1256, 1261, 1346, 1889, 1890, 1893, 1913, 1917, 1930], "unforeseen": 9, "circumst": [9, 18, 59, 952, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1579, 1894], "perman": [9, 72, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1891, 1923], "unavail": [9, 1870], "rank": [9, 14, 29, 39, 40, 42, 43, 44, 46, 47, 48, 50, 57, 59, 60, 62, 64, 1243, 1244, 1245, 1252, 1287, 1422, 1469, 1610, 1622, 1705, 1817, 1869, 1895, 1904, 1909, 1914, 1921, 1922], "elect": 9, "invit": [9, 1865], "convinc": 9, "approach": [9, 16, 27, 40, 42, 72, 940, 1139, 1791, 1858, 1868, 1883, 1886, 1894, 1896, 1899, 1916, 1921], "interview": 9, "talk": [9, 61, 1896, 1901], "gather": [9, 42, 59, 64, 513, 1827, 1851, 1867, 1869, 1896, 1898, 1901, 1911, 1913], "read": [9, 11, 16, 19, 20, 26, 29, 36, 39, 42, 44, 49, 50, 52, 59, 60, 64, 68, 72, 449, 1030, 1054, 1122, 1123, 1124, 1205, 1269, 1699, 1866, 1884, 1885, 1891, 1892, 1894, 1895, 1897, 1901, 1905, 1913, 1916, 1921], "attend": [9, 734, 1436, 1473], "confer": [9, 1384], "pipelin": [9, 16, 72, 1866, 1921], "world": [9, 14, 17, 21, 26, 42, 46, 50, 57, 59, 60, 64, 1469, 1610, 1891, 1913, 1916], "cover": [9, 13, 20, 22, 65, 72, 1045, 1071, 1423, 1553, 1554, 1555, 1871, 1873, 1885, 1891, 1896, 1899, 1901, 1902, 1921], "push": [9, 20, 51, 1033, 1139, 1263, 1858, 1915], "codeown": 9, "notifi": [9, 43, 60, 1923], "expert": 9, "strongli": [9, 42, 50, 60, 1369, 1370, 1371, 1375, 1812, 1865], "failur": [9, 16, 18, 20, 29, 42, 48, 50, 51, 52, 56, 57, 58, 59, 62, 679, 907, 908, 952, 1128, 1213, 1214, 1315, 1871, 1877, 1883, 1910, 1914, 1921, 1923, 1932], "revert": [9, 48, 64, 1466, 1587, 1923], "substanti": [9, 11, 40, 1894], "syntact": [9, 52, 72], "establish": [9, 42, 59, 1891], "seri": [9, 11, 23, 72, 1353, 1393, 1906, 1909, 1936], "lf": 9, "llc": 9, "guidelin": [9, 1633, 1904, 1913, 1916, 1917], "trademark": 9, "www": [9, 1353, 1479, 1930], "lfproject": 9, "acknowledg": [9, 42, 1866, 1923, 1925], "copyright": [9, 29], "holder": 9, "independ": [9, 39, 42, 59, 64, 71, 156, 157, 778, 784, 900, 901, 902, 903, 904, 905, 977, 1151, 1160, 1256, 1368, 1369, 1370, 1371, 1375, 1515, 1516, 1517, 1522, 1540, 1598, 1654, 1715, 1866, 1868, 1890, 1891, 1894, 1907, 1913], "authorship": 9, "claus": [9, 1898], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 15, 40, 48, 432, 480, 757, 1143, 1218, 1234, 1237, 1256, 1298, 1327, 1396, 1436, 1579, 1617, 1703, 1705, 1715, 1716, 1817, 1868, 1869, 1896, 1899, 1906, 1909, 1925, 1926], "partli": [9, 1871], "domain": [9, 48, 52, 683, 825, 884, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1099, 1101, 1102, 1103, 1104, 1151, 1886, 1909, 1916], "absolut": [9, 31, 33, 72, 95, 680, 693, 907, 908, 1119, 1187, 1226, 1231, 1252, 1255, 1257, 1278, 1391, 1397, 1461, 1538, 1542, 1583, 1627, 1628, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1657, 1668, 1709, 1735, 1767, 1869, 1902, 1909, 1911, 1926, 1931, 1932], "health": 9, "success": [9, 29, 44, 48, 50, 56, 72, 1228, 1239, 1241, 1287, 1629, 1798, 1799, 1800, 1802, 1803, 1894, 1902, 1909, 1910, 1925], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 1909], "clearli": [9, 1878, 1913], "sponsorship": 9, "foundat": [9, 1910], "ptf": 9, "minor": [9, 999, 1228, 1244, 1925], "committ": 9, "prior": [9, 11, 16, 40, 42, 44, 50, 899, 1270, 1475, 1477, 1579, 1633, 1892, 1894, 1896, 1912, 1916], "facebook": 9, "infrastructur": [9, 14, 51, 1913], "employe": 9, "expand": [9, 48, 257, 493, 877, 899, 907, 908, 935, 1250, 1251, 1299, 1436, 1480, 1573, 1847, 1865, 1867, 1869, 1877, 1884, 1885, 1892, 1897, 1909, 1911, 1913, 1914, 1929], "deliv": [9, 1915], "offici": [9, 42, 1338, 1916], "showcas": [9, 1426, 1894, 1904], "whenev": [9, 15, 20, 879, 1617, 1618, 1881, 1883, 1919, 1922, 1923, 1936], "fix": [10, 11, 16, 25, 29, 36, 39, 42, 47, 48, 50, 59, 64, 66, 69, 72, 84, 85, 264, 794, 800, 1128, 1211, 1243, 1373, 1374, 1448, 1520, 1521, 1540, 1610, 1868, 1869, 1881, 1889, 1890, 1894, 1895, 1898, 1904, 1908, 1909, 1911, 1912], "plu": [10, 33, 44, 900, 1124, 1244, 1925], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1270], "ezyang": [10, 1896, 1929], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1705, 1817], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": [10, 1896], "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 43, 46, 48, 64, 1673, 1674, 1676, 1682, 1686, 1912], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 29], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 13], "ansel": [10, 13], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 1327, 1716, 1894], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 48], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1270], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1151], "robi": 10, "robieta": 10, "xu": [10, 64], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 11, 23, 42, 64, 72, 1801, 1870, 1885, 1909], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": 10, "sebastian": 10, "messmer": 10, "smessmer": 10, "bowen": 10, "bao": [10, 24], "bowenbao": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1338], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 792], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 16, 29, 1915], "johnson": 10, "peterjc123": [10, 1908], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 48], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "hirsch": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "debut": 11, "encapsul": [11, 71, 72, 1921], "henc": [11, 40, 46, 50, 58, 59, 62, 64, 71, 922, 1124, 1426, 1427, 1428, 1482, 1801, 1886, 1891, 1894, 1895, 1921, 1923], "speedup": [11, 19, 20, 21, 24, 39, 40, 1436, 1477], "address": [11, 39, 42, 59, 62, 69, 219, 907, 908, 980, 1878, 1883, 1894, 1921, 1922], "host": [11, 15, 39, 42, 50, 52, 58, 59, 60, 61, 199, 212, 579, 602, 876, 1198, 1430, 1610, 1622, 1656, 1894, 1914, 1921, 1922, 1927], "essenti": [11, 39, 42, 47, 50, 72, 1287, 1885, 1894, 1908, 1925], "wrapper": [11, 40, 42, 47, 48, 64, 71, 72, 623, 756, 789, 823, 972, 974, 975, 977, 1044, 1046, 1117, 1118, 1137, 1198, 1367, 1868, 1870, 1871, 1881, 1883, 1894, 1895, 1909, 1914], "coupl": [11, 27, 28, 68, 1868, 1901, 1922], "tricki": [11, 51, 65, 70, 1891, 1902, 1923], "cachingalloc": 11, "pool": [11, 71, 765, 766, 767, 768, 781, 782, 972, 1006, 1007, 1017, 1028, 1306, 1307, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1345, 1378, 1379, 1398, 1399, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1498, 1524, 1525, 1550, 1551, 1553, 1554, 1555, 1720, 1721, 1866, 1893, 1894, 1896, 1902, 1904, 1918, 1921], "freed": [11, 64, 153, 892, 906, 980, 1028, 1883, 1894, 1900, 1921], "exactli": [11, 20, 33, 40, 42, 48, 61, 907, 908, 946, 984, 988, 1071, 1117, 1118, 1195, 1198, 1239, 1374, 1377, 1430, 1458, 1461, 1521, 1531, 1610, 1657, 1668, 1878, 1884, 1891, 1894, 1895, 1896, 1899, 1900, 1909, 1913, 1914], "replai": [11, 16, 29, 972, 1006, 1664, 1894], "advantag": [11, 42, 59, 60, 1347, 1391, 1895, 1898, 1921, 1925], "overwrit": [11, 36, 39, 42, 72, 1431, 1440, 1871, 1891], "burn": 11, "forth": [11, 1691, 1852, 1865, 1915], "cudagraph_tre": 11, "reclaim": [11, 1894], "compil": [11, 12, 13, 14, 15, 17, 19, 22, 23, 24, 26, 33, 34, 64, 65, 72, 679, 973, 998, 1002, 1014, 1015, 1128, 1196, 1198, 1199, 1202, 1203, 1209, 1210, 1211, 1213, 1214, 1215, 1430, 1867, 1868, 1870, 1871, 1872, 1873, 1877, 1890, 1893, 1895, 1901, 1908, 1909, 1933], "ab": [11, 12, 13, 16, 20, 29, 47, 48, 93, 94, 624, 625, 681, 940, 1071, 1229, 1250, 1251, 1253, 1254, 1267, 1270, 1400, 1449, 1476, 1479, 1481, 1569, 1654, 1657, 1699, 1705, 1709, 1866, 1867, 1869, 1871, 1884, 1885, 1886, 1894, 1902, 1911, 1925, 1931], "_dynamo": [11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 26, 29, 952, 1895], "graph_break": [11, 17, 25, 679, 1877], "rand_lik": [11, 1869, 1873, 1894, 1911, 1933], "warm": [11, 16, 25, 40, 46, 1017, 1689, 1690, 1894, 1915], "cubla": [11, 31, 989, 1851, 1906], "triton": [11, 16, 18, 19, 22, 26, 29, 952, 1897], "arang": [11, 19, 31, 39, 42, 49, 513, 606, 690, 691, 692, 696, 698, 885, 886, 887, 934, 946, 950, 1054, 1069, 1087, 1091, 1099, 1105, 1107, 1111, 1112, 1113, 1114, 1121, 1122, 1161, 1218, 1219, 1223, 1226, 1250, 1253, 1254, 1267, 1330, 1451, 1452, 1453, 1454, 1455, 1482, 1483, 1484, 1566, 1657, 1658, 1704, 1712, 1716, 1731, 1738, 1743, 1764, 1796, 1804, 1815, 1831, 1832, 1834, 1835, 1837, 1859, 1867, 1869, 1878, 1886, 1907, 1911, 1926, 1930, 1931], "invari": [11, 28, 48, 1643, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1923, 1925], "overwritten": [11, 744, 745, 755, 763, 796, 840, 860, 1891, 1896, 1932], "constraint": [11, 14, 42, 47, 793, 794, 901, 1006, 1017, 1133, 1610, 1618, 1643, 1686, 1866, 1871, 1886, 1897, 1899, 1902, 1925], "pattern": [11, 14, 15, 28, 42, 44, 791, 792, 793, 795, 853, 860, 1014, 1367, 1646, 1794, 1868, 1871, 1891, 1894, 1896, 1898, 1900, 1907, 1917, 1918, 1925], "di": [11, 20, 1883], "yet": [11, 15, 16, 20, 21, 23, 27, 29, 43, 50, 64, 69, 71, 72, 84, 85, 974, 1045, 1201, 1203, 1215, 1303, 1610, 1624, 1628, 1630, 1866, 1870, 1871, 1877, 1885, 1886, 1894, 1909, 1911, 1916, 1921, 1923, 1925, 1926, 1928], "privat": [11, 59, 1894, 1896, 1913], "reflect": [11, 68, 459, 520, 555, 1123, 1124, 1127, 1195, 1358, 1359, 1360, 1406, 1407, 1408, 1451, 1452, 1453, 1529, 1567, 1652, 1700, 1812, 1868, 1869, 1898, 1929], "fallback": [11, 16, 29, 33, 42, 59, 67, 1211, 1261, 1890, 1894], "inductor": [11, 12, 14, 18, 19, 21, 22, 24, 25, 29, 679, 952, 1877], "my_model": [11, 16, 29, 44, 1610, 1868, 1909], "y1": [11, 1664, 1793], "y2": [11, 1664, 1793], "naiv": [11, 14, 16, 39, 1914], "pend": [11, 1921, 1930], "todo": [11, 15, 23, 73, 78, 79, 80, 81, 82, 83, 84, 85, 825, 858, 860, 861, 1896, 1935], "storag": [11, 15, 44, 64, 224, 313, 341, 344, 345, 436, 459, 484, 499, 520, 523, 557, 558, 583, 584, 586, 587, 877, 894, 896, 995, 1062, 1168, 1172, 1184, 1198, 1205, 1269, 1291, 1329, 1330, 1367, 1430, 1733, 1747, 1754, 1785, 1790, 1793, 1807, 1830, 1836, 1865, 1866, 1869, 1880, 1883, 1891, 1894, 1904, 1907, 1913, 1921, 1925, 1928, 1929, 1931], "footgun": [11, 15], "uniqu": [11, 42, 50, 56, 59, 60, 61, 513, 517, 1189, 1233, 1234, 1238, 1244, 1245, 1247, 1256, 1258, 1260, 1261, 1298, 1305, 1793, 1816, 1849, 1865, 1868, 1877, 1880, 1896, 1913, 1915, 1921, 1922, 1923, 1925, 1930], "straightforward": [12, 20, 72, 1878, 1886, 1902, 1912, 1925], "gm": [12, 15, 20, 28, 29, 72], "graphmodul": [12, 15, 20, 28, 29, 74, 75, 76, 77, 858, 859, 860, 861, 1935], "example_input": [12, 15, 20, 816, 817, 860, 861, 1209, 1213, 1916, 1935], "my_custom_backend": 12, "f_opt": 12, "register_backend": [12, 42, 1921], "my_compil": [12, 13, 20], "besid": [12, 40, 42, 1894, 1895, 1930], "plugin": [12, 1915, 1930], "entry_point": [12, 60], "torch_dynamo_backend": 12, "your_modul": 12, "submodul": [12, 28, 34, 64, 72, 790, 796, 813, 837, 838, 839, 857, 860, 861, 1137, 1198, 1202, 1208, 1209, 1367, 1430, 1431, 1432, 1458, 1608, 1868, 1870, 1871, 1879, 1902, 1907, 1913, 1916, 1921, 1935], "registr": [12, 46, 47, 71, 84, 1014, 1603, 1608, 1609, 1610, 1619, 1622, 1875, 1913], "minifi": [12, 16], "typic": [12, 14, 15, 25, 29, 33, 39, 40, 42, 48, 49, 50, 52, 59, 60, 61, 64, 72, 85, 970, 972, 1114, 1122, 1198, 1218, 1221, 1269, 1364, 1390, 1430, 1601, 1610, 1672, 1673, 1798, 1799, 1800, 1802, 1803, 1865, 1866, 1868, 1871, 1877, 1891, 1893, 1894, 1905, 1906, 1907, 1909, 1912, 1914, 1916, 1921, 1929, 1937], "consist": [12, 16, 22, 29, 39, 42, 44, 47, 48, 59, 60, 72, 907, 943, 944, 1198, 1227, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1265, 1267, 1430, 1477, 1619, 1622, 1668, 1715, 1816, 1868, 1871, 1878, 1885, 1886, 1897, 1902, 1904, 1906, 1909, 1912, 1915, 1925], "canon": [12, 15, 50, 52, 1868], "opset": [12, 1867, 1909, 1910, 1911], "significantli": [12, 42, 901, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1759, 1925], "smaller": [12, 39, 72, 499, 544, 970, 1610, 1699, 1714, 1804, 1894, 1907, 1913, 1937], "aot_autograd": 12, "fw_compil": 12, "bw_compil": 12, "box": [12, 14, 17, 19, 31, 42, 47, 60, 72, 1139, 1858, 1885, 1891, 1895], "make_boxed_func": 12, "my_backend": [12, 791], "model_opt": 12, "pretti": [12, 15, 20, 1198, 1667, 1764, 1868], "extract": [12, 17, 26, 27, 36, 72, 835, 1373, 1377, 1481, 1520, 1597, 1915, 1921, 1935], "dynamo": [12, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 29, 72, 679, 952, 1877, 1910], "bytecod": [12, 13, 16, 20, 26, 27, 29, 39, 679, 1877, 1913], "print_tabular": [12, 20, 72], "co": [12, 18, 19, 21, 70, 204, 634, 635, 682, 930, 952, 1014, 1129, 1132, 1133, 1138, 1155, 1156, 1249, 1364, 1365, 1368, 1689, 1690, 1697, 1709, 1771, 1772, 1775, 1776, 1777, 1778, 1780, 1798, 1799, 1800, 1802, 1803, 1867, 1869, 1884, 1911, 1912, 1925, 1930, 1932], "sin": [12, 18, 19, 21, 25, 27, 33, 69, 70, 531, 668, 669, 880, 952, 1014, 1129, 1131, 1132, 1133, 1135, 1138, 1156, 1249, 1299, 1709, 1772, 1778, 1867, 1869, 1884, 1891, 1911, 1925, 1926, 1930], "opcod": [12, 13, 20, 72, 1913], "placehold": [12, 13, 28, 72, 73, 78, 79, 80, 81, 82, 83, 833, 1392, 1894], "call_funct": [12, 13, 16, 20, 28, 29, 72, 84, 85], "0x7f1a894649a8": 12, "mockmodul": 12, "mod": [12, 29, 72, 720, 721, 731, 737, 738, 739, 744, 745, 755, 763, 809, 810, 811, 812, 835, 836, 863, 1127, 1201, 1202, 1207, 1214, 1652, 1870, 1871, 1913, 1934], "optimized_mod": 12, "toy_exampl": [12, 13, 16, 20, 29], "abs_1": [12, 13], "0x7f8d259298a0": 12, "truediv": [12, 13, 72], "call_method": [12, 13, 20, 72], "sum_1": [12, 13, 72], "lt": [12, 13, 365, 397, 1224, 1867, 1868, 1869, 1884, 1911], "mul_1": 12, "nondeterminist": [12, 72, 315, 317, 323, 515, 517, 923, 1219, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1426, 1427, 1428, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1521, 1529, 1540, 1567, 1579, 1598, 1599, 1600, 1758, 1851], "offer": [12, 16, 42, 64, 67, 1610, 1851, 1867, 1894, 1900, 1913, 1925], "superior": 12, "real": [12, 14, 15, 19, 20, 21, 39, 48, 72, 86, 685, 686, 687, 688, 689, 691, 697, 907, 920, 945, 960, 966, 1017, 1087, 1088, 1090, 1092, 1093, 1094, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1188, 1190, 1191, 1194, 1195, 1218, 1227, 1228, 1229, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1247, 1250, 1252, 1254, 1255, 1256, 1257, 1261, 1262, 1266, 1267, 1268, 1278, 1284, 1397, 1439, 1442, 1443, 1479, 1617, 1812, 1816, 1855, 1856, 1857, 1865, 1866, 1867, 1869, 1871, 1891, 1894, 1911, 1913, 1916, 1921, 1923, 1929, 1931, 1932, 1936], "optimize_for_infer": [12, 1202], "optimize_for_inference_compil": 12, "And": [12, 17, 19, 20, 68, 796, 823, 1050, 1051, 1127, 1198, 1219, 1295, 1300, 1353, 1430, 1891, 1896, 1897, 1908, 1909, 1916, 1935], "code_to_acceler": 12, "list_backend": [12, 18, 19, 21, 952], "trt_compil": 12, "tensorrt": [12, 16, 19, 1916], "inductor_compil": 12, "author": [13, 16, 19, 23, 24, 29, 40, 59, 60, 64, 1139, 1682, 1722, 1858, 1890], "tensor_match": 13, "function_match": 13, "recaptur": 13, "recompil": [13, 14, 18, 20, 21, 23, 33, 72, 679, 952, 1211, 1877, 1900], "dispatch_kei": [13, 1875], "ndim": [13, 1263, 1264, 1884, 1886, 1925, 1931], "config": [13, 14, 16, 18, 19, 20, 22, 23, 29, 40, 64, 72, 791, 792, 793, 794, 858, 860, 952, 1895, 1908, 1919], "log_level": [13, 16, 29, 1895], "info": [13, 14, 15, 16, 29, 42, 50, 53, 57, 679, 891, 974, 975, 977, 1228, 1239, 1241, 1242, 1246, 1259, 1287, 1311, 1312, 1666, 1866, 1869, 1877, 1895, 1896, 1897, 1909, 1913], "output_cod": [13, 29, 679, 1877], "spammi": [13, 1877], "printout": [13, 72, 1016, 1029], "__compiled_fn_0": 13, "eval_with_kei": 13, "0x7f9ca082f8a0": 13, "load_fast": [13, 20], "load_glob": 13, "load_method": 13, "6": [13, 16, 17, 24, 29, 33, 36, 39, 40, 42, 48, 57, 72, 315, 317, 319, 323, 403, 404, 472, 488, 499, 513, 517, 559, 606, 684, 685, 690, 696, 740, 741, 742, 744, 745, 757, 760, 762, 764, 900, 901, 903, 904, 905, 923, 931, 936, 942, 945, 946, 950, 970, 983, 1030, 1034, 1048, 1049, 1050, 1054, 1055, 1066, 1069, 1070, 1087, 1095, 1100, 1101, 1105, 1106, 1108, 1110, 1111, 1114, 1121, 1151, 1161, 1163, 1164, 1187, 1208, 1219, 1223, 1234, 1250, 1254, 1255, 1256, 1263, 1264, 1268, 1270, 1299, 1303, 1328, 1329, 1330, 1343, 1354, 1357, 1362, 1365, 1373, 1374, 1383, 1384, 1385, 1387, 1388, 1426, 1427, 1431, 1439, 1447, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1473, 1474, 1476, 1481, 1487, 1496, 1526, 1533, 1534, 1566, 1568, 1575, 1601, 1645, 1646, 1648, 1650, 1656, 1657, 1658, 1670, 1684, 1704, 1705, 1708, 1715, 1716, 1722, 1723, 1726, 1732, 1742, 1743, 1747, 1751, 1764, 1785, 1789, 1793, 1796, 1798, 1799, 1804, 1815, 1817, 1818, 1819, 1826, 1831, 1832, 1833, 1834, 1835, 1837, 1840, 1842, 1846, 1851, 1859, 1860, 1867, 1868, 1871, 1872, 1878, 1886, 1889, 1891, 1896, 1897, 1902, 1907, 1909, 1921, 1922, 1925, 1926, 1928, 1931, 1932, 1936], "load_const": [13, 20], "12": [13, 24, 25, 39, 40, 42, 64, 323, 517, 616, 685, 740, 741, 742, 744, 745, 942, 946, 1069, 1087, 1161, 1202, 1217, 1256, 1338, 1354, 1362, 1377, 1378, 1379, 1427, 1442, 1443, 1464, 1473, 1481, 1524, 1525, 1565, 1570, 1571, 1618, 1651, 1704, 1715, 1764, 1779, 1789, 1831, 1847, 1859, 1865, 1868, 1869, 1872, 1878, 1894, 1903, 1907, 1909, 1911, 1925, 1932], "binary_add": 13, "14": [13, 42, 323, 517, 945, 1014, 1015, 1054, 1069, 1161, 1250, 1256, 1324, 1354, 1427, 1715, 1722, 1789, 1831, 1832, 1837, 1859, 1868, 1872, 1909, 1911, 1925, 1929, 1930], "binary_true_divid": 13, "16": [13, 16, 29, 38, 42, 323, 616, 737, 738, 739, 740, 741, 742, 771, 1069, 1087, 1114, 1151, 1161, 1198, 1209, 1221, 1227, 1233, 1234, 1238, 1254, 1330, 1342, 1344, 1345, 1353, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1368, 1369, 1370, 1371, 1375, 1378, 1379, 1398, 1399, 1400, 1418, 1423, 1424, 1425, 1427, 1428, 1430, 1437, 1445, 1456, 1473, 1487, 1504, 1506, 1507, 1509, 1513, 1524, 1525, 1660, 1712, 1789, 1851, 1855, 1859, 1868, 1872, 1889, 1894, 1902, 1905, 1907, 1909, 1911, 1914, 1921, 1925, 1926, 1928, 1930, 1931], "store_fast": 13, "11": [13, 29, 33, 42, 323, 513, 942, 946, 1017, 1069, 1161, 1218, 1254, 1268, 1284, 1338, 1354, 1379, 1427, 1525, 1657, 1658, 1667, 1789, 1831, 1859, 1868, 1872, 1878, 1885, 1894, 1907, 1908, 1909, 1911, 1925, 1926], "18": [13, 42, 323, 446, 684, 1072, 1151, 1195, 1270, 1427, 1868, 1909, 1911, 1925], "20": [13, 15, 20, 42, 46, 48, 323, 684, 719, 727, 728, 733, 737, 738, 739, 740, 741, 742, 745, 755, 759, 760, 761, 762, 763, 764, 771, 1151, 1196, 1199, 1209, 1220, 1254, 1319, 1342, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1353, 1357, 1358, 1359, 1360, 1362, 1363, 1368, 1369, 1370, 1371, 1375, 1378, 1379, 1382, 1383, 1385, 1392, 1393, 1394, 1395, 1398, 1399, 1400, 1401, 1402, 1417, 1423, 1424, 1425, 1427, 1428, 1430, 1445, 1447, 1458, 1466, 1469, 1472, 1473, 1474, 1475, 1487, 1504, 1506, 1507, 1509, 1513, 1524, 1525, 1531, 1587, 1617, 1618, 1642, 1651, 1654, 1675, 1690, 1718, 1827, 1868, 1869, 1886, 1895, 1896, 1905, 1912, 1921, 1925], "22": [13, 42, 48, 323, 616, 1270, 1601, 1647, 1649, 1868, 1906, 1925], "24": [13, 40, 42, 48, 925, 1256, 1418, 1494, 1650, 1715, 1832, 1868, 1889, 1893, 1926], "26": [13, 29, 1253, 1690], "compare_op": 13, "28": [13, 22, 616, 745, 1054, 1837, 1909], "pop_jump_if_fals": 13, "38": [13, 1324], "30": [13, 21, 39, 42, 48, 50, 59, 446, 616, 719, 727, 728, 755, 763, 1151, 1220, 1351, 1353, 1357, 1417, 1481, 1487, 1504, 1513, 1601, 1693, 1695, 1701, 1718, 1827, 1896, 1909, 1912, 1921], "34": [13, 20, 29, 42], "binary_multipli": [13, 20], "36": [13, 20, 42, 323, 1114, 1151], "13": [13, 22, 29, 42, 874, 946, 1069, 1072, 1116, 1151, 1161, 1202, 1287, 1354, 1378, 1379, 1427, 1464, 1524, 1525, 1789, 1831, 1859, 1868, 1872, 1911, 1925], "42": [13, 39, 823, 930, 1319, 1771, 1894, 1902], "return_valu": [13, 50, 51, 57], "unpack_sequ": 13, "__resume_at_30_1": 13, "__resume_at_38_2": 13, "offset": [13, 20, 46, 50, 228, 229, 230, 231, 341, 520, 557, 745, 877, 1059, 1060, 1061, 1062, 1124, 1232, 1374, 1521, 1610, 1717, 1718, 1796, 1841, 1843, 1869, 1871], "__resume_at_": 13, "jump_absolut": 13, "resume_at": 13, "remaind": [13, 39, 490, 1119, 1151, 1867, 1869, 1911], "restart": [13, 40, 50, 58, 60, 62, 1689, 1690, 1883, 1930], "symbolic_shap": 14, "assumpt": [14, 16, 23, 29, 44, 56, 60, 907, 955, 1353, 1384, 1891, 1895, 1899, 1921, 1922, 1925], "situat": [14, 15, 16, 18, 19, 39, 48, 61, 72, 952, 966, 1622, 1883, 1896, 1897, 1904, 1905, 1913, 1916, 1923, 1936], "insuffici": [14, 29, 1018], "batch": [14, 15, 16, 18, 22, 25, 29, 40, 42, 48, 60, 62, 65, 66, 69, 70, 72, 582, 583, 584, 586, 587, 685, 701, 702, 703, 704, 705, 706, 734, 759, 778, 784, 906, 907, 908, 920, 932, 933, 940, 943, 944, 945, 952, 971, 1059, 1061, 1071, 1132, 1133, 1139, 1195, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1266, 1267, 1270, 1278, 1287, 1288, 1292, 1346, 1347, 1348, 1349, 1350, 1353, 1358, 1359, 1364, 1366, 1367, 1369, 1370, 1371, 1373, 1374, 1375, 1377, 1382, 1383, 1384, 1385, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1400, 1401, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1421, 1422, 1433, 1434, 1435, 1436, 1437, 1439, 1442, 1443, 1444, 1445, 1447, 1461, 1462, 1469, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1494, 1499, 1501, 1502, 1512, 1513, 1515, 1516, 1517, 1520, 1521, 1522, 1523, 1526, 1539, 1540, 1541, 1564, 1572, 1579, 1597, 1598, 1601, 1610, 1617, 1643, 1644, 1646, 1647, 1649, 1690, 1691, 1697, 1703, 1705, 1715, 1719, 1798, 1799, 1800, 1802, 1803, 1807, 1812, 1816, 1817, 1836, 1839, 1840, 1842, 1855, 1858, 1866, 1884, 1885, 1886, 1890, 1894, 1897, 1898, 1902, 1904, 1914, 1916, 1921, 1925, 1930, 1931], "length": [14, 16, 29, 39, 40, 42, 44, 48, 262, 315, 317, 323, 353, 434, 435, 582, 583, 584, 734, 759, 813, 892, 906, 951, 988, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1124, 1139, 1172, 1195, 1213, 1217, 1329, 1330, 1348, 1353, 1358, 1367, 1374, 1377, 1382, 1398, 1400, 1436, 1445, 1473, 1481, 1504, 1505, 1506, 1513, 1521, 1540, 1579, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1722, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1796, 1798, 1799, 1800, 1802, 1803, 1812, 1837, 1858, 1867, 1869, 1871, 1878, 1885, 1886, 1892, 1898, 1925, 1932], "vari": [14, 15, 16, 29, 818, 1461, 1643, 1773, 1881, 1904, 1905, 1912, 1916, 1917, 1925], "servic": [14, 51, 1895], "window": [14, 33, 39, 42, 72, 353, 555, 921, 930, 1155, 1156, 1195, 1217, 1343, 1344, 1345, 1378, 1379, 1398, 1399, 1423, 1424, 1425, 1426, 1427, 1428, 1496, 1524, 1525, 1553, 1554, 1555, 1720, 1721, 1812, 1866, 1869, 1881, 1894], "pad": [14, 18, 39, 40, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 734, 737, 738, 739, 740, 741, 742, 767, 768, 771, 772, 773, 778, 781, 782, 784, 952, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1195, 1343, 1344, 1345, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1373, 1374, 1377, 1406, 1407, 1408, 1409, 1410, 1411, 1423, 1424, 1425, 1426, 1427, 1428, 1433, 1434, 1436, 1451, 1452, 1453, 1454, 1455, 1456, 1476, 1477, 1481, 1485, 1486, 1487, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1520, 1521, 1523, 1529, 1540, 1553, 1554, 1555, 1556, 1557, 1558, 1597, 1598, 1644, 1646, 1647, 1649, 1720, 1721, 1812, 1866, 1867, 1869, 1886, 1898, 1909, 1911, 1916, 1930], "exhibit": [14, 29, 1667, 1909], "imag": [14, 16, 17, 29, 33, 39, 740, 741, 742, 860, 861, 960, 1336, 1340, 1341, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1377, 1378, 1379, 1394, 1402, 1437, 1442, 1443, 1464, 1481, 1483, 1484, 1494, 1505, 1506, 1508, 1509, 1523, 1524, 1529, 1540, 1597, 1598, 1740, 1866, 1867, 1869, 1886, 1899, 1911, 1914, 1929, 1930], "recognit": 14, "jag": 14, "chose": [14, 50, 1890], "whose": [14, 29, 42, 48, 64, 72, 543, 858, 894, 942, 965, 1059, 1071, 1076, 1124, 1142, 1151, 1154, 1160, 1198, 1214, 1222, 1268, 1284, 1286, 1331, 1430, 1610, 1658, 1709, 1767, 1833, 1871, 1891, 1896, 1899, 1913, 1925, 1930, 1932], "dimension": [14, 48, 513, 515, 879, 885, 886, 887, 931, 938, 950, 1059, 1061, 1062, 1071, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1105, 1106, 1108, 1110, 1112, 1113, 1124, 1151, 1160, 1161, 1162, 1230, 1235, 1236, 1237, 1238, 1263, 1268, 1284, 1292, 1299, 1338, 1355, 1356, 1357, 1366, 1367, 1373, 1374, 1402, 1420, 1437, 1451, 1452, 1453, 1454, 1455, 1456, 1463, 1465, 1469, 1485, 1486, 1487, 1512, 1564, 1567, 1599, 1600, 1617, 1656, 1722, 1798, 1799, 1800, 1801, 1802, 1803, 1812, 1827, 1830, 1831, 1837, 1871, 1886, 1889, 1892, 1899, 1905, 1925, 1927, 1928, 1931, 1933], "induct": 14, "symbol": [14, 15, 27, 33, 38, 85, 86, 623, 816, 954, 1212, 1266, 1400, 1445, 1839, 1855, 1866, 1871, 1910], "pt2": [14, 15, 17], "mark_dynam": 14, "dim": [14, 42, 47, 48, 69, 70, 72, 115, 117, 118, 119, 121, 137, 138, 139, 187, 207, 210, 213, 214, 215, 216, 217, 218, 232, 262, 266, 283, 314, 315, 316, 317, 318, 319, 323, 324, 356, 382, 394, 409, 411, 412, 413, 416, 430, 431, 432, 433, 437, 438, 454, 463, 471, 480, 491, 492, 494, 505, 506, 512, 513, 514, 515, 516, 517, 518, 519, 536, 537, 540, 541, 543, 546, 551, 552, 554, 559, 564, 572, 577, 582, 583, 584, 586, 587, 589, 604, 605, 608, 609, 610, 611, 614, 616, 692, 694, 695, 696, 698, 873, 874, 875, 902, 903, 905, 939, 946, 961, 969, 971, 986, 988, 1050, 1051, 1052, 1053, 1054, 1063, 1069, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1110, 1111, 1129, 1139, 1140, 1151, 1161, 1169, 1170, 1171, 1172, 1175, 1219, 1229, 1230, 1250, 1254, 1264, 1266, 1267, 1277, 1285, 1295, 1297, 1298, 1300, 1303, 1305, 1318, 1325, 1326, 1327, 1328, 1329, 1330, 1338, 1365, 1366, 1367, 1370, 1374, 1376, 1381, 1396, 1401, 1420, 1436, 1437, 1438, 1463, 1465, 1477, 1479, 1480, 1511, 1512, 1528, 1531, 1540, 1548, 1553, 1554, 1555, 1564, 1565, 1567, 1569, 1573, 1579, 1585, 1586, 1594, 1610, 1618, 1624, 1628, 1630, 1637, 1638, 1651, 1654, 1657, 1706, 1713, 1716, 1736, 1737, 1742, 1743, 1748, 1749, 1750, 1753, 1754, 1785, 1788, 1789, 1792, 1795, 1797, 1804, 1807, 1809, 1810, 1811, 1812, 1815, 1827, 1831, 1832, 1833, 1834, 1837, 1838, 1846, 1847, 1848, 1849, 1850, 1853, 1854, 1858, 1859, 1866, 1867, 1868, 1869, 1885, 1886, 1897, 1898, 1907, 1909, 1911, 1925, 1926, 1928, 1934], "integ": [14, 39, 42, 48, 59, 291, 446, 448, 450, 544, 559, 565, 684, 685, 686, 687, 688, 689, 765, 766, 784, 786, 864, 891, 920, 921, 930, 941, 965, 975, 977, 993, 999, 1000, 1028, 1066, 1069, 1071, 1072, 1114, 1115, 1116, 1117, 1118, 1119, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1141, 1155, 1156, 1159, 1160, 1161, 1208, 1211, 1220, 1221, 1228, 1239, 1241, 1251, 1270, 1319, 1338, 1353, 1358, 1359, 1360, 1402, 1488, 1489, 1490, 1491, 1492, 1493, 1600, 1643, 1658, 1661, 1693, 1696, 1700, 1705, 1717, 1718, 1724, 1726, 1727, 1728, 1730, 1735, 1744, 1756, 1804, 1813, 1817, 1831, 1832, 1845, 1859, 1863, 1870, 1871, 1872, 1884, 1897, 1899, 1914, 1917, 1919, 1925, 1926, 1928, 1931, 1932, 1937], "opt": [14, 42, 46, 1209, 1687, 1688, 1694, 1698, 1700, 1868, 1899], "automatic_dynamic_shap": 14, "proactiv": 14, "torch_log": [14, 18, 679, 952, 1877], "torchinductor": [14, 19, 26, 679, 1866, 1877], "decomposit": [14, 15, 28, 48, 72, 943, 1143, 1227, 1228, 1233, 1234, 1235, 1236, 1237, 1239, 1244, 1245, 1246, 1247, 1252, 1256, 1257, 1261, 1262, 1287, 1289, 1617, 1703, 1705, 1709, 1715, 1816, 1817, 1866, 1905], "written": [14, 19, 22, 28, 29, 42, 52, 69, 915, 1030, 1367, 1665, 1685, 1868, 1870, 1878, 1879, 1891, 1895, 1896, 1897, 1902, 1907, 1909, 1913, 1915, 1927, 1930], "fulli": [14, 20, 31, 33, 39, 42, 46, 47, 68, 72, 679, 1034, 1198, 1426, 1427, 1428, 1430, 1867, 1871, 1877, 1896, 1913, 1916], "hint": [14, 20, 679, 972, 1006, 1199, 1436, 1474, 1475, 1476, 1477, 1868, 1870, 1871, 1894, 1896], "consult": [14, 1913], "greatli": [14, 33, 72, 1894], "formula": [14, 48, 91, 767, 768, 888, 890, 921, 930, 1155, 1156, 1223, 1289, 1290, 1444, 1497, 1498, 1586, 1685, 1718, 1896, 1899, 1915, 1920, 1925], "flatten": [14, 40, 64, 72, 873, 874, 1060, 1160, 1254, 1267, 1481, 1657, 1664, 1668, 1716, 1732, 1737, 1742, 1847, 1848, 1849, 1869, 1884, 1885, 1889, 1909, 1911, 1918, 1929], "awai": [14, 40, 72, 955, 1529, 1866, 1885, 1891, 1897], "bailout": [14, 1911], "express": [14, 16, 29, 31, 44, 65, 69, 70, 72, 321, 1196, 1199, 1654, 1812, 1872, 1879, 1886, 1891, 1896, 1936], "meta": [14, 15, 17, 19, 28, 64, 68, 72, 338, 1875, 1921, 1930, 1932], "workflow": [14, 15, 22, 23, 24, 34, 1865, 1896, 1916, 1917, 1933], "shapeenv": [14, 15], "attach": [14, 67, 71, 72, 142, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 792, 837, 839, 863, 1601, 1865, 1868, 1870, 1884, 1891, 1896, 1916, 1922, 1934], "faketensormod": [14, 15], "knob": [14, 1894], "faithfulli": 14, "export": [14, 21, 25, 28, 34, 36, 42, 49, 62, 90, 915, 974, 1201, 1203, 1209, 1215, 1644, 1645, 1663, 1664, 1665, 1667, 1668, 1866, 1868, 1870, 1871, 1896, 1910, 1911, 1915, 1916, 1921], "sympi": 14, "induc": [14, 899, 1529, 1567, 1889], "simplif": [14, 44], "assert": [14, 28, 29, 39, 40, 48, 66, 68, 69, 70, 72, 623, 910, 912, 913, 1129, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1196, 1201, 1202, 1207, 1666, 1858, 1870, 1872, 1896, 1897, 1902, 1907, 1913, 1916, 1932], "s0": [14, 29], "occurr": [14, 64, 404, 1196, 1298, 1643, 1848, 1849], "reusabl": 14, "c10": [14, 59, 1901], "symfloat": [14, 1820, 1821, 1933], "symbool": [14, 1824, 1933], "plumb": 14, "symnodeimpl": 14, "csrc": [14, 1908], "python_symnod": 14, "init": [14, 42, 50, 52, 64, 1198, 1430, 1438, 1457, 1650, 1866, 1873, 1891, 1896, 1901, 1902], "_subclass": [14, 15], "fake_tensor": [14, 15], "_meta_registr": 14, "decomp": [14, 15], "primtorch": [14, 15, 19], "ref": [14, 20, 29, 1865, 1925], "visibl": [14, 17, 33, 42, 44, 56, 996, 1041, 1431, 1432, 1440, 1441], "simul": [14, 48, 798, 800, 1916, 1919], "counterpart": [14, 856, 863, 1267, 1610, 1871, 1879, 1933, 1934], "symnod": 14, "eras": [14, 72], "mix": [14, 26, 33, 40, 48, 64, 1017, 1610, 1866, 1891, 1893, 1916, 1925], "xla": [14, 1866], "far": [14, 60, 1207, 1529], "vice": [14, 72, 459, 602, 1123, 1124, 1422, 1891, 1919, 1927], "versa": [14, 72, 459, 602, 1123, 1124, 1422, 1891, 1919, 1927], "fairli": [14, 1904, 1914], "apparatu": 14, "traceabl": [14, 19, 72, 623, 816, 1868, 1916], "make_fx": [14, 29, 1128], "aka": [14, 42, 916, 1391, 1891, 1928], "aris": [14, 48, 72, 1891], "emerg": [14, 1908], "illeg": [14, 64, 1894], "enhanc": [14, 42, 64, 1610], "precomput": 14, "empty_strid": [14, 1867, 1869, 1873, 1911], "eagerli": [14, 1003, 1009, 1894], "needlessli": [14, 1894], "nontrivi": [14, 42, 1894], "lazi": [14, 963, 1210, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1601, 1866], "constrain_rang": 14, "wherebi": 14, "trash": 15, "bad": [15, 25, 72, 1883, 1909, 1913, 1916], "accur": [15, 21, 52, 974, 1151, 1273, 1372, 1722, 1837, 1894, 1922], "suppos": [15, 17, 42, 72, 1195, 1700, 1878, 1925], "val": [15, 20, 1014, 1204, 1869, 1871, 1889], "stuff": [15, 72], "probabl": [15, 16, 17, 23, 39, 157, 759, 922, 1159, 1275, 1320, 1338, 1342, 1346, 1353, 1366, 1368, 1369, 1370, 1371, 1375, 1382, 1384, 1400, 1436, 1437, 1445, 1501, 1512, 1513, 1514, 1515, 1516, 1517, 1522, 1531, 1541, 1564, 1579, 1715, 1883, 1896, 1908, 1909, 1926, 1930], "wouldn": [15, 1923], "alias": [15, 64, 894, 1128, 1139, 1540, 1858, 1870, 1871, 1875, 1896], "almost": [15, 1244, 1245, 1908], "subclass_zoo": [15, 1896], "subgraph": [15, 18, 29, 952, 1667, 1891, 1895, 1909, 1913, 1935], "possibli": [15, 39, 59, 64, 1198, 1213, 1240, 1245, 1430, 1610, 1868, 1875, 1906, 1913], "bunch": 15, "from_real_tensor": 15, "memo": [15, 1198, 1430], "fakeifi": 15, "alia": [15, 44, 48, 53, 94, 95, 114, 190, 191, 355, 408, 437, 438, 445, 540, 681, 865, 866, 867, 868, 869, 870, 871, 888, 948, 961, 962, 1057, 1064, 1067, 1078, 1079, 1080, 1082, 1083, 1109, 1144, 1152, 1153, 1165, 1166, 1167, 1176, 1196, 1198, 1224, 1225, 1232, 1248, 1252, 1255, 1283, 1293, 1294, 1304, 1321, 1323, 1333, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1430, 1540, 1613, 1643, 1659, 1702, 1707, 1710, 1745, 1768, 1783, 1786, 1788, 1814, 1818, 1819, 1838, 1844, 1862, 1867, 1871, 1896, 1911, 1926, 1927, 1931], "faketensor": 15, "automat": [15, 16, 19, 29, 33, 40, 42, 47, 59, 60, 72, 153, 588, 888, 890, 1008, 1017, 1160, 1207, 1213, 1299, 1476, 1579, 1611, 1734, 1764, 1865, 1866, 1870, 1871, 1879, 1880, 1884, 1885, 1891, 1892, 1894, 1896, 1902, 1904, 1909, 1913, 1914, 1916, 1917, 1921, 1930, 1931, 1933], "__torch_dispatch__": [15, 1896, 1925], "dispatch_devic": 15, "lie": [15, 1463, 1465, 1585, 1795, 1926, 1930], "prone": [15, 1883, 1904], "earli": [15, 20, 36, 40, 50, 71, 1369, 1370, 1371, 1375, 1866, 1916, 1917, 1934, 1935], "ly": 15, "whatev": [15, 16, 61, 72, 449, 1610, 1755, 1839, 1871, 1897], "derefer": 15, "pointer": [15, 36, 142, 989, 1446, 1894, 1895, 1901, 1921, 1923], "segfault": [15, 1883, 1905], "backtrac": 15, "unexpect": [15, 16, 20, 42, 49, 72, 971, 1122, 1124, 1127, 1198, 1430, 1652, 1668, 1807, 1868, 1891, 1896, 1905], "reinterpret": [15, 48, 499], "magic": [15, 1869, 1872, 1933], "in_kernel_invocation_manag": 15, "underli": [15, 20, 42, 44, 46, 48, 50, 64, 69, 72, 100, 313, 328, 379, 402, 404, 474, 475, 476, 477, 484, 499, 520, 523, 556, 557, 558, 612, 747, 756, 877, 974, 1168, 1172, 1198, 1269, 1329, 1572, 1733, 1836, 1850, 1868, 1871, 1886, 1894, 1898, 1900, 1914, 1921, 1927, 1929], "unwrap": 15, "promot": [15, 64, 684, 925, 928, 937, 1014, 1066, 1114, 1116, 1117, 1118, 1119, 1319, 1369, 1370, 1371, 1375, 1511, 1714, 1734, 1735, 1741, 1756, 1813, 1867, 1871, 1928, 1932], "test_fake_tensor": 15, "fake_mod": 15, "fake_x": 15, "fake_i": 15, "fake_z": 15, "pre": [15, 23, 29, 34, 42, 46, 64, 72, 906, 913, 1198, 1430, 1605, 1607, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1688, 1694, 1865, 1868, 1871, 1879, 1891, 1893, 1902, 1909, 1914, 1931], "aotautograd": [15, 16, 17, 19, 29, 68, 679, 1877, 1895, 1910], "_guard": 15, "detect_fake_mod": 15, "fake_arg": 15, "lifecycl": [15, 20], "proxy_tensor": [15, 29, 1128], "maybe_disable_fake_tensor_mod": 15, "nich": 15, "faketensorprop": 15, "fake_tensor_prop": 15, "real_input": [15, 1894], "popul": [15, 28, 42, 48, 57, 64, 71, 72, 337, 495, 503, 504, 1298, 1326, 1894, 1896], "propagate_dont_convert_input": 15, "fake_input": 15, "real_tensor": 15, "t_": [15, 1299, 1379, 1525, 1689, 1690, 1869, 1925], "opportun": [15, 16, 1228, 1868, 1922], "conserv": [15, 1875, 1878, 1894], "annoi": 15, "practic": [15, 16, 39, 42, 48, 64, 1866, 1868, 1878, 1883, 1885, 1891, 1896, 1899, 1902, 1907, 1913, 1921], "feed": [15, 72, 1868, 1898, 1902, 1934], "somehow": 15, "fakecopymod": 15, "gave": 15, "fakeif": 15, "face": [15, 1896, 1913, 1930], "invalid": [15, 20, 52, 57, 955, 1198, 1320, 1430, 1890, 1891, 1909, 1913, 1914], "old": [15, 20, 42, 49, 72, 853, 1122, 1370, 1654, 1662, 1699, 1747, 1864, 1866, 1868, 1891, 1894, 1896, 1908, 1916, 1930], "tension": 15, "seriou": [15, 1883, 1894], "analys": 15, "occasion": [15, 1894, 1925], "mistak": [15, 1871, 1898], "redispatch": [15, 1896], "lift": [15, 70, 1139, 1858, 1885, 1911], "recogn": [15, 39, 1871, 1921, 1925], "notimpl": [15, 1871, 1872, 1896], "hopefulli": 15, "desugar": [15, 1871], "plain": [15, 33, 1347, 1431, 1440, 1617, 1800, 1896, 1925], "infinit": [15, 39, 1190, 1270, 1346, 1353, 1513, 1709, 1896, 1905, 1921], "fastpath": [15, 1436], "certain": [15, 16, 20, 22, 29, 39, 40, 42, 56, 57, 69, 71, 72, 86, 685, 688, 734, 920, 932, 996, 1059, 1173, 1195, 1198, 1205, 1269, 1292, 1302, 1358, 1359, 1360, 1361, 1362, 1363, 1383, 1401, 1417, 1430, 1436, 1481, 1530, 1541, 1543, 1656, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1871, 1878, 1885, 1891, 1892, 1894, 1896, 1901, 1902, 1905, 1909, 1914, 1915, 1921, 1922, 1925], "custom_op": [15, 1909], "impl_abstract": 15, "hardcod": 15, "nor": [15, 39, 42, 50, 64, 794, 898, 1233, 1234, 1261, 1436, 1477, 1610, 1657, 1714, 1816, 1896, 1909], "sensit": [15, 40, 1391, 1461, 1909, 1913, 1922], "carefulli": [15, 17, 68, 71, 1897, 1913], "leaf": [15, 56, 153, 225, 337, 449, 503, 504, 790, 837, 839, 878, 892, 1137, 1667, 1830, 1886, 1890, 1891, 1909, 1935], "ness": [15, 60], "whole": [15, 20, 23, 24, 39, 42, 44, 1139, 1198, 1430, 1458, 1469, 1610, 1858, 1891, 1895, 1904, 1905, 1913], "bulk": [15, 39], "metaconvert": 15, "pointwis": [15, 18, 19, 22, 48, 952, 1132, 1133, 1275, 1276, 1396, 1884, 1892], "impli": [15, 40, 59, 64, 1883, 1891, 1909, 1914, 1919, 1921], "ti": [15, 1127, 1652, 1744], "die": 15, "unback": 15, "symint": [15, 1820, 1821, 1822, 1823, 1824, 1867, 1933], "memoiz": [15, 48], "colab": [15, 1875, 1913], "mark": [16, 17, 44, 59, 71, 72, 825, 896, 897, 955, 1311, 1312, 1610, 1667, 1868, 1870, 1891, 1895, 1896, 1902, 1913, 1915, 1922, 1931], "saroufim": 16, "evalfram": 16, "min": [16, 39, 42, 52, 59, 72, 119, 188, 189, 190, 191, 302, 694, 695, 696, 757, 769, 770, 779, 801, 818, 819, 820, 821, 824, 874, 947, 948, 1014, 1051, 1085, 1086, 1158, 1229, 1243, 1244, 1250, 1254, 1256, 1261, 1267, 1287, 1320, 1352, 1389, 1416, 1418, 1438, 1450, 1457, 1503, 1540, 1544, 1573, 1575, 1580, 1598, 1684, 1689, 1690, 1699, 1703, 1705, 1715, 1816, 1840, 1841, 1842, 1843, 1867, 1869, 1881, 1884, 1909, 1911, 1916, 1919, 1921, 1937], "partit": [16, 28, 46, 47, 1338, 1837, 1909, 1911, 1914, 1922, 1923], "usercod": 16, "ddp": [16, 42, 43, 44, 46, 64, 1469, 1610, 1866, 1894, 1895, 1921], "unrol": [16, 1870, 1871, 1909], "fsdp": [16, 44, 47, 64, 1866], "modif": [16, 19, 34, 64, 72, 224, 779, 896, 1123, 1124, 1198, 1430, 1610, 1891, 1896, 1902, 1913, 1916], "delai": [16, 1610, 1923], "outlin": [16, 43, 1914, 1922], "bucket": [16, 29, 40, 46, 1338, 1610, 1869, 1895, 1911], "broadcast": [16, 42, 46, 48, 64, 69, 100, 199, 400, 402, 403, 404, 513, 515, 517, 565, 684, 685, 686, 687, 688, 689, 690, 696, 734, 883, 920, 925, 928, 932, 933, 934, 935, 965, 985, 1014, 1065, 1066, 1071, 1076, 1116, 1117, 1118, 1119, 1140, 1142, 1154, 1164, 1222, 1223, 1230, 1243, 1247, 1252, 1253, 1255, 1258, 1266, 1286, 1291, 1292, 1302, 1319, 1322, 1331, 1334, 1347, 1365, 1384, 1436, 1502, 1511, 1573, 1610, 1668, 1704, 1712, 1735, 1737, 1813, 1832, 1837, 1861, 1866, 1867, 1871, 1884, 1885, 1886, 1895, 1909, 1911, 1926], "fraction": [16, 39, 48, 1041, 1114, 1120, 1315, 1361, 1362, 1363, 1378, 1379, 1436, 1477, 1524, 1525, 1627, 1628, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1716, 1889], "rob": 16, "fusion": [16, 18, 19, 28, 29, 72, 791, 813, 859, 860, 952, 1200, 1206, 1211, 1212, 1213, 1214, 1879, 1902, 1916], "diminish": 16, "vast": 16, "nopython": [16, 19, 20, 29], "250k": 16, "aitempl": 16, "fuse": [16, 18, 19, 28, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 791, 792, 801, 803, 804, 805, 813, 846, 858, 859, 952, 1211, 1212, 1579, 1672, 1673, 1879, 1884, 1909, 1912, 1916, 1917, 1918, 1919], "mobil": [16, 1879, 1916], "fine": [16, 33, 42, 44, 46, 49, 857, 860, 1122, 1213, 1579, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1865, 1866, 1883, 1891, 1894, 1896, 1909, 1913, 1914, 1916, 1925], "succeed": [16, 50, 59, 74, 76, 1287], "aot_eag": [16, 29], "warn": [16, 17, 20, 21, 29, 33, 36, 40, 42, 46, 64, 86, 679, 900, 906, 942, 983, 1030, 1034, 1045, 1048, 1049, 1139, 1179, 1213, 1255, 1299, 1436, 1474, 1475, 1476, 1477, 1619, 1622, 1758, 1766, 1851, 1858, 1865, 1877, 1881, 1892, 1896, 1911, 1913, 1920], "torchdynamo_debug_funct": [16, 29], "desired_function_nam": 16, "replay_record_en": [16, 29], "hundr": [16, 29, 1890, 1901], "thousand": [16, 29], "highli": [16, 59, 1338, 1610, 1865, 1903, 1909, 1925, 1932], "tini": [16, 22, 1931, 1932, 1937], "torchdynamo_repro_aft": [16, 29], "aot": [16, 17, 29, 679, 954, 1877], "your_model": 16, "quickest": 16, "repro": [16, 29, 1667], "torchdynamo_repro_dir": 16, "nvfuser": [16, 19, 29, 1868], "leverag": [16, 18, 952, 1921], "compile_tim": [16, 25, 29], "torch_compile_debug": [16, 19], "_inductor": [16, 18, 21, 29, 952], "diagram": [16, 29, 50, 59, 1198, 1430, 1916, 1923], "guard": [16, 18, 23, 26, 29, 50, 679, 952, 1866, 1877, 1904, 1911, 1913, 1933, 1936], "cache_size_limit": [16, 18, 20, 29, 952], "troubl": [16, 17, 29], "compileprofil": [16, 29], "profiler_model": [16, 29], "upcom": [16, 29, 42, 64, 1890], "tune": [16, 29, 40, 42, 46, 1028, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1891, 1894, 1903, 1916], "traffic": 16, "frozen_toy_exampl": 16, "vertic": [16, 1859, 1860, 1912, 1914, 1930], "cosin": [16, 682, 683, 967, 968, 1364, 1365, 1511, 1689, 1690, 1697, 1775, 1912], "horizont": [16, 950, 1161, 1163, 1912, 1914], "simplest": [16, 20, 21, 39, 44, 50, 72, 857, 1343, 1344, 1345, 1358, 1359, 1360, 1423, 1424, 1425, 1620, 1895, 1896, 1902, 1916, 1923, 1925], "schedul": [16, 44, 50, 52, 58, 64, 71, 679, 1683, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1877, 1895, 1901, 1915], "physic": [16, 60, 1089, 1107, 1872, 1893, 1904, 1925], "principl": [16, 1894], "stream": [16, 39, 42, 50, 57, 64, 71, 153, 487, 892, 906, 972, 973, 974, 975, 978, 979, 980, 988, 991, 992, 1006, 1012, 1044, 1047, 1311, 1312, 1317, 1665, 1737, 1866, 1869, 1871, 1921], "multiprocessor": 16, "tile": [16, 493, 1869, 1911, 1925], "some_fun": [16, 29], "insurmount": [16, 29], "invis": [16, 29, 1894], "introduc": [16, 21, 23, 29, 36, 48, 69, 759, 1270, 1382, 1400, 1445, 1540, 1742, 1865, 1871, 1892, 1895, 1903, 1909, 1913, 1914, 1915, 1921, 1925, 1931], "maxim": [16, 29, 873, 1295, 1426, 1427, 1428, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1683, 1684, 1685, 1686, 1925], "explain": [16, 29, 34, 42, 1686, 1865, 1871, 1890, 1894, 1897, 1904, 1925], "aggreg": [16, 29, 40, 42, 44, 52, 64, 1374, 1521, 1610, 1633, 1881, 1914], "woo": [16, 29], "out_guard": [16, 29], "ops_per_graph": [16, 29], "builtinvari": [16, 29], "constantvari": [16, 20, 29], "t2": [16, 29, 49, 686, 687, 879, 1122, 1151, 1610, 1921, 1922], "generic_jump": [16, 29], "17": [16, 29, 33, 42, 684, 1195, 1250, 1427, 1789, 1868, 1909, 1911, 1925], "throw": [16, 19, 29, 42, 43, 47, 64, 71, 72, 193, 325, 330, 544, 613, 1183, 1198, 1238, 1287, 1430, 1610, 1612, 1613, 1646, 1657, 1711, 1851, 1886, 1891, 1906, 1921, 1931], "fullgraph": [16, 18, 29, 952], "went": [16, 42, 72], "torchdynamo_dynamic_shap": 16, "cv": 16, "nlp": [16, 40, 1393, 1394, 1395, 1402], "client": [16, 42, 46, 59, 1028, 1913], "app": 16, "unnecessarili": 16, "cold": [16, 24], "metric": [16, 24, 45, 1020, 1022, 1028, 1699, 1881, 1902, 1915, 1930], "visibli": 16, "torchdynamo_repro_level": [16, 29], "bisect": [16, 29], "codegen": [16, 22, 29, 72, 1896], "dramat": [16, 29], "impact": [16, 23, 29, 40, 42, 1028, 1759, 1879, 1881, 1891, 1916, 1929], "fallback_random": [16, 18, 29, 952], "alpha": [16, 48, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 154, 155, 314, 315, 553, 560, 561, 562, 563, 684, 685, 688, 689, 690, 743, 769, 774, 920, 1014, 1015, 1155, 1169, 1342, 1352, 1372, 1418, 1457, 1495, 1503, 1518, 1519, 1529, 1547, 1580, 1669, 1683, 1776, 1777, 1790, 1794, 1808, 1813, 1814, 1867, 1869, 1891, 1896, 1909, 1912], "root": [16, 42, 44, 52, 59, 60, 64, 72, 792, 1136, 1235, 1236, 1683, 1746, 1805, 1879, 1891, 1913, 1921, 1922, 1925], "allevi": [16, 1914], "cudagraph": [16, 18, 19, 22, 24, 952, 1006, 1866, 1894], "amen": 17, "portion": [17, 29, 64, 1120, 1367, 1461, 1569, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1917], "usecas": 17, "disallow_in_graph": 17, "allow_in_graph": 17, "excel": [17, 72], "unblock": 17, "friendli": 17, "disallow": [17, 72, 1913, 1921, 1928], "nnthi": 17, "suitabl": [17, 39, 48, 936, 1217, 1686, 1751, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1905, 1915, 1917, 1930], "fbgemm": [17, 741, 742, 755, 763, 832, 854, 855, 858, 860, 861, 1916, 1917], "black": 17, "nnnote": 17, "screen": [17, 25], "deploy": [17, 50, 59, 1866], "tl": [17, 19], "dr": 17, "intercept": [17, 64, 72, 1896], "a_fn": 17, "b_fn": 17, "aa_fn": 17, "ab_fn": 17, "green": [17, 1870, 1871], "color": [17, 1395, 1870, 1871, 1930], "white": 17, "offend": [17, 1865], "syntax": [17, 1198, 1868, 1871, 1913], "style": [17, 44, 47, 49, 72, 876, 1066, 1122, 1656, 1868, 1870, 1871, 1909, 1913, 1930], "miss": [17, 20, 57, 64, 688, 1127, 1198, 1292, 1302, 1364, 1393, 1394, 1395, 1430, 1546, 1652, 1896, 1908, 1909, 1910, 1925], "incorrectli": [17, 36, 64, 975, 1116], "cautiou": 17, "switch": [17, 31, 39, 67, 71, 72, 1240, 1241, 1242, 1370, 1529, 1567, 1614, 1747, 1851, 1883, 1891, 1894, 1902, 1904, 1912], "safeti": [17, 50, 72, 954, 955, 1868, 1871, 1885], "bypass": [17, 954, 1071, 1875, 1886, 1894, 1896], "sound": [17, 72, 954, 955, 1458, 1875, 1930], "faq": [17, 39, 1367, 1646, 1866], "inlin": [17, 33, 71, 1014, 1198, 1202, 1213, 1893], "begin": [17, 29, 36, 39, 40, 42, 43, 51, 59, 64, 72, 496, 759, 783, 819, 820, 864, 921, 965, 972, 1020, 1022, 1091, 1151, 1157, 1218, 1253, 1265, 1345, 1346, 1347, 1364, 1366, 1372, 1382, 1383, 1386, 1387, 1388, 1389, 1390, 1391, 1397, 1400, 1401, 1416, 1421, 1424, 1425, 1437, 1438, 1445, 1448, 1461, 1467, 1472, 1479, 1512, 1533, 1534, 1610, 1617, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1689, 1691, 1697, 1764, 1767, 1770, 1812, 1837, 1848, 1861, 1871, 1890, 1891, 1894, 1896, 1899, 1901, 1906, 1909, 1912, 1919, 1926], "deprec": [17, 42, 50, 59, 60, 64, 68, 408, 513, 556, 602, 784, 785, 786, 792, 825, 906, 907, 942, 943, 1021, 1025, 1144, 1198, 1252, 1255, 1287, 1288, 1346, 1347, 1364, 1366, 1389, 1390, 1396, 1397, 1421, 1422, 1430, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1483, 1484, 1501, 1502, 1512, 1541, 1564, 1572, 1598, 1599, 1600, 1602, 1610, 1651, 1652, 1654, 1657, 1715, 1731, 1812, 1816, 1839, 1866, 1868, 1873, 1883, 1892, 1915, 1919, 1927, 1931, 1932], "finer": [17, 47], "wishlist": 17, "cc": [17, 33, 42, 1894], "skipfiles_inline_module_allowlist": 17, "breadcrumb": 17, "forgot": 17, "64": [18, 19, 67, 68, 70, 952, 1132, 1133, 1137, 1335, 1336, 1337, 1339, 1340, 1341, 1347, 1458, 1579, 1752, 1886, 1908, 1909, 1916, 1920, 1925, 1928, 1930, 1931], "front": [18, 256, 952, 1270, 1433, 1885, 1897], "overspeci": [18, 72, 952], "autotun": [18, 21, 22, 952], "workspac": [18, 33, 952], "realloc": [18, 952, 1172], "perf_hint": [18, 679, 952], "list_mode_opt": [18, 21, 952], "notabl": [18, 952, 1871], "epilogue_fus": [18, 952], "templat": [18, 952, 1014, 1015, 1912], "max_autotun": [18, 952], "shape_pad": [18, 952], "graph_diagram": [18, 952], "pictur": [18, 952], "list_opt": [18, 21, 952], "checkout": [19, 1909], "new_fn": 19, "input_tensor": [19, 42], "10000": [19, 36, 40, 693, 1697, 1744, 1898, 1902, 1925, 1930], "Its": [19, 42, 72, 970, 986, 1198, 1245, 1263, 1264, 1289, 1430, 1657, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1855, 1871, 1895], "famou": 19, "suboptim": [19, 40], "crucial": [19, 20, 21, 22, 34, 1875], "bottleneck": [19, 40, 1866, 1902], "bandwidth": [19, 22, 40, 42, 58, 60, 1916, 1921], "crunch": 19, "elimin": [19, 28, 42, 72, 609, 1848, 1849, 1906], "trig": 19, "size_hint": 19, "16384": [19, 1894], "filenam": [19, 33, 39, 72, 1197, 1205, 1208, 1865, 1869, 1880, 1891, 1913, 1927, 1930], "__file__": [19, 1865, 1908, 1913], "fp32": [19, 64, 780, 793, 816, 1056, 1610, 1894, 1905, 1916, 1917, 1919], "i32": 19, "instance_descriptor": 19, "divisible_by_16": 19, "equal_to_1": 19, "in_ptr0": 19, "out_ptr0": 19, "xnumel": 19, "xblock": 19, "constexpr": 19, "xoffset": 19, "program_id": 19, "xindex": 19, "reshap": [19, 34, 42, 48, 498, 499, 513, 543, 616, 691, 950, 1054, 1069, 1070, 1110, 1161, 1218, 1250, 1254, 1263, 1264, 1267, 1330, 1377, 1451, 1452, 1453, 1454, 1455, 1481, 1618, 1651, 1657, 1796, 1797, 1804, 1831, 1832, 1837, 1859, 1860, 1867, 1869, 1878, 1885, 1886, 1909, 1911, 1918, 1929, 1930], "xmask": 19, "x0": [19, 48], "tmp0": 19, "tmp1": 19, "tmp2": 19, "int32": [19, 194, 211, 315, 323, 327, 448, 616, 936, 1073, 1085, 1086, 1121, 1123, 1124, 1228, 1239, 1240, 1241, 1259, 1287, 1353, 1714, 1751, 1916, 1925, 1927, 1928, 1931, 1937], "temporari": [19, 33, 72, 822, 825, 1611, 1891, 1898], "held": [19, 71, 972, 996, 1024, 1308, 1890], "resnet50": [19, 1865, 1930], "hub": [19, 1866, 1880], "v0": 19, "resnet18": [19, 25, 67, 72, 1865, 1868, 1870, 1880, 1913], "opt_model": 19, "inspir": [19, 64, 1675, 1896], "frequent": [19, 21, 31, 44, 1338, 1866, 1904, 1905, 1907, 1925], "timm": [19, 21, 24], "download": [19, 1880, 1908, 1930], "huggingfac": [19, 21, 24], "berttoken": 19, "bertmodel": 19, "past": [19, 22, 24, 42, 72, 983, 1030, 1034, 1048, 1049, 1610, 1898], "bert": [19, 1476], "uncas": 19, "token": [19, 59, 972, 1006, 1007, 1865, 1872], "from_pretrain": [19, 1373, 1374], "me": 19, "encoded_input": 19, "return_tensor": 19, "pt": [19, 31, 40, 1203, 1205, 1208, 1215, 1269, 1747, 1868, 1902, 1907, 1913], "trigonometri": 19, "skim": 19, "create_model": 19, "resnext101_32x8d": 19, "7": [19, 24, 33, 39, 40, 42, 48, 72, 262, 315, 317, 319, 323, 403, 404, 472, 513, 559, 606, 616, 684, 696, 744, 745, 903, 905, 928, 931, 936, 942, 946, 950, 1054, 1066, 1068, 1069, 1072, 1087, 1110, 1111, 1114, 1117, 1121, 1151, 1161, 1175, 1219, 1223, 1233, 1238, 1240, 1241, 1244, 1245, 1249, 1250, 1254, 1261, 1328, 1329, 1330, 1336, 1337, 1340, 1341, 1343, 1354, 1373, 1418, 1426, 1427, 1451, 1452, 1453, 1454, 1455, 1481, 1496, 1567, 1635, 1640, 1650, 1657, 1675, 1722, 1726, 1732, 1742, 1743, 1744, 1751, 1764, 1767, 1769, 1780, 1781, 1789, 1796, 1798, 1799, 1804, 1816, 1818, 1819, 1826, 1831, 1832, 1835, 1837, 1846, 1855, 1859, 1868, 1872, 1878, 1885, 1886, 1892, 1894, 1896, 1905, 1907, 1909, 1911, 1916, 1925, 1928, 1929, 1930, 1931, 1932], "highest": [19, 679, 1338, 1726, 1727, 1759, 1917, 1932], "aot_ts_nvfus": 19, "nvprims_nvfus": 19, "onnxrt": 19, "ipex": 19, "tvm": 19, "apach": 19, "symbolic_trac": [19, 72], "partial": [19, 23, 48, 50, 59, 64, 67, 72, 840, 1017, 1061, 1138, 1151, 1244, 1245, 1246, 1288, 1426, 1427, 1428, 1556, 1557, 1558, 1610, 1629, 1796, 1871, 1872, 1885, 1891, 1896, 1899, 1909, 1923, 1932], "smoother": [19, 1865, 1878], "transit": [19, 20, 1198, 1299, 1430, 1812, 1866, 1868], "ux": [20, 65, 70], "perspect": [20, 1895, 1905, 1922], "fn_foo": 20, "grab": 20, "dig": 20, "hole": 20, "perf": [20, 22, 33, 679, 1916], "neutral": 20, "referenc": [20, 72, 975, 1198, 1430, 1839, 1870, 1891, 1909, 1921], "previous": [20, 23, 59, 64, 65, 68, 69, 70, 72, 224, 697, 791, 792, 1139, 1205, 1810, 1811, 1853, 1854, 1858, 1868, 1892, 1894, 1902, 1913, 1914, 1920, 1921, 1926], "translat": [20, 42, 88, 89, 1151, 1891, 1923], "check_fn": 20, "thrown": [20, 42, 47, 64, 71, 616, 877, 879, 1028, 1069, 1161, 1198, 1228, 1237, 1239, 1241, 1244, 1245, 1256, 1430, 1614, 1859, 1913], "_pyinterpreterstate_setevalframefunc": 20, "convert_fram": [20, 29], "convert_frame_assert": 20, "gloss": 20, "proxi": [20, 42, 44, 1916], "222": 20, "compiler_fn": 20, "one_graph": 20, "_convert_frame_assert": 20, "frametyp": 20, "cache_s": [20, 48], "f_code": 20, "unsupport": [20, 23, 69, 84, 86, 1868, 1872, 1885, 1910, 1921, 1925], "drop": [20, 39, 68, 70, 72, 1017, 1203, 1256, 1261, 1342, 1652, 1812, 1868, 1885, 1904], "needless": 20, "evict": 20, "alongsid": [20, 33, 1198, 1430, 1896], "transform_code_object": 20, "output_instruct": 20, "rememb": [20, 1898, 1904], "guardedcod": 20, "symbolic_loc": 20, "f_local": 20, "travers": [20, 64, 835, 1610, 1895, 1896, 1922, 1934, 1935], "ordereddict": [20, 1198, 1430, 1431, 1440, 1458, 1601, 1633, 1869, 1902, 1907, 1932], "k": [20, 22, 29, 39, 42, 44, 48, 60, 72, 288, 356, 506, 513, 515, 517, 589, 616, 759, 945, 1058, 1071, 1127, 1140, 1160, 1219, 1227, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1242, 1243, 1244, 1247, 1249, 1256, 1258, 1260, 1261, 1270, 1288, 1292, 1343, 1345, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1378, 1379, 1382, 1383, 1400, 1401, 1415, 1417, 1418, 1423, 1425, 1436, 1437, 1445, 1447, 1512, 1524, 1525, 1547, 1564, 1579, 1617, 1703, 1705, 1715, 1743, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1802, 1803, 1812, 1834, 1839, 1867, 1869, 1870, 1889, 1894, 1896, 1908, 1925, 1926, 1928], "variablebuild": 20, "localsourc": 20, "_wrap": 20, "construct": [20, 33, 34, 39, 42, 44, 46, 47, 48, 59, 64, 66, 68, 69, 72, 153, 449, 791, 792, 823, 877, 878, 892, 906, 960, 1058, 1074, 1139, 1160, 1198, 1209, 1213, 1214, 1221, 1228, 1268, 1269, 1284, 1299, 1373, 1374, 1430, 1520, 1601, 1610, 1612, 1613, 1643, 1650, 1664, 1705, 1709, 1756, 1791, 1798, 1799, 1800, 1801, 1802, 1803, 1817, 1830, 1833, 1858, 1866, 1868, 1881, 1894, 1895, 1902, 1904, 1907, 1913, 1916, 1921, 1923, 1928, 1930, 1931, 1932], "variabletrack": 20, "make_guard": 20, "outputgraph": [20, 72], "mention": [20, 22, 29, 42, 64, 1865, 1870, 1871, 1885, 1891, 1894, 1902, 1909, 1925, 1929], "recal": [20, 1347, 1896, 1930], "heart": [20, 39], "pump": 20, "cool": 20, "get_instruct": 20, "124": 20, "opnam": 20, "argval": 20, "starts_lin": 20, "is_jump_target": 20, "littl": [20, 42, 1896, 1923], "hasattr": [20, 72, 1869, 1896, 1916], "inst": 20, "unimpl": 20, "getattr": [20, 72, 1869, 1896, 1907], "inde": [20, 23, 49, 1868, 1878, 1913, 1923], "onto": [20, 28, 42, 64, 72, 1033, 1205, 1208, 1269, 1622, 1865, 1883, 1894, 1897, 1898, 1902, 1915], "dozen": 20, "symbolic_convert": [20, 29], "spoken": 20, "quiet": 20, "closer": [20, 22, 1151, 1479, 1716, 1896, 1902], "mind": [20, 21, 25, 1243, 1261, 1373, 1891, 1897, 1899], "replace_guard": 20, "add_guard": 20, "visit": [20, 22, 62, 1909], "act": [20, 44, 48, 50, 57, 69, 857, 1347, 1431, 1432, 1441, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1636, 1637, 1638, 1639, 1640, 1851, 1894, 1902, 1906, 1912], "behalf": 20, "python_typ": 20, "as_proxi": 20, "as_python_proxi": 20, "bookkeep": 20, "came": 20, "somewher": [20, 1885, 1901], "flesh": 20, "notimplementederror": [20, 48, 1913], "relianc": 20, "fulfil": [20, 1891, 1897, 1913], "build_tupl": 20, "gist": [20, 22, 68, 792, 1899], "notion": [20, 39, 907, 1348, 1349, 1350, 1393, 1394, 1395, 1469], "popn": 20, "tuplevari": 20, "pydoc": 20, "tensorvari": 20, "instructiontranslatorbas": 20, "pop": [20, 69, 1032, 1431, 1440, 1911, 1914, 1915], "dataclass": [20, 28, 44], "ctor": 20, "guardsourc": 20, "create_fn": 20, "kind": [20, 42, 53, 72, 679, 1217, 1611, 1667, 1714, 1779, 1865, 1875, 1896, 1904, 1909, 1913, 1916, 1926, 1928], "guard_sourc": 20, "elif": [20, 28, 72, 1204, 1396, 1664, 1870, 1871, 1900], "istyp": 20, "guardbuild": 20, "equals_match": 20, "rangevari": 20, "appar": 20, "checkfunctionmanag": 20, "compile_check_fn": 20, "cacheentri": 20, "create_cache_entri": 20, "pyobject": 20, "guarded_cod": 20, "malloc": [20, 64], "sizeof": [20, 1927], "debug_null_check": 20, "pyobject_getattrstr": 20, "null_check": 20, "pycodeobject": 20, "compos": [20, 23, 48, 68, 72, 737, 738, 739, 740, 741, 742, 765, 766, 771, 772, 773, 781, 782, 943, 945, 1129, 1131, 1132, 1133, 1139, 1198, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1345, 1358, 1359, 1360, 1361, 1362, 1363, 1378, 1379, 1398, 1399, 1418, 1423, 1424, 1425, 1430, 1478, 1483, 1484, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1504, 1505, 1506, 1507, 1508, 1509, 1524, 1525, 1547, 1550, 1551, 1553, 1554, 1555, 1720, 1721, 1858, 1866, 1867, 1868, 1871, 1884, 1896, 1897, 1902, 1909, 1913, 1930], "sort_kei": 20, "guard_nn_modul": 20, "is_nn_modul": 20, "local_build": 20, "global_build": 20, "___guarded_cod": 20, "___check_type_id": 20, "94367738391392": 20, "___check_tensor": 20, "id": [20, 24, 29, 36, 39, 42, 46, 50, 58, 59, 60, 64, 72, 773, 823, 972, 1007, 1469, 1555, 1594, 1610, 1667, 1871, 1901, 1909, 1911, 1913, 1920, 1921, 1922, 1927], "deeper": [20, 26, 1866, 1902, 1913], "dive": [20, 22, 26, 1866, 1895, 1899, 1913], "_eval_fram": 20, "anew": 20, "massiv": 20, "role": [20, 44, 50, 51, 59, 60], "weak": 20, "moduleinvalid": 20, "2x": [21, 22, 1930], "compress": [21, 24, 40, 64, 211, 586, 587, 1093, 1094, 1103, 1104, 1610, 1798, 1799, 1800, 1802, 1803, 1836, 1866], "varieti": [21, 1894, 1922], "announc": [21, 59], "compiled_fn": 21, "set_float32_matmul_precis": [21, 1147], "simpler": [21, 70, 1139, 1858, 1868, 1891, 1896, 1899, 1902], "bench_al": 21, "IF": 21, "odd": [21, 48, 1092, 1093, 1094, 1102, 1103, 1104, 1504, 1505, 1506], "quirk": 21, "ask": [21, 42, 68, 69, 1865, 1866, 1897, 1899], "overview": [21, 34, 42, 56, 1610, 1866, 1878, 1883, 1891, 1899, 1902, 1914, 1916, 1921], "nnmodul": 21, "torchinductor_unique_kernel_nam": 22, "triton_": 22, "envvar": 22, "meaning": [22, 50, 52, 53, 1028, 1894], "triton_poi_fused_cat_155": 22, "categori": [22, 23, 48, 52, 86, 1320, 1871, 1873, 1909, 1912, 1915, 1917, 1928], "poi": 22, "torchinductor_benchmark_kernel": 22, "har": 22, "torchinductor_max_autotun": 22, "hope": [22, 1909], "breakdown": 22, "mixnet_l": 22, "timm_model": 22, "amp": [22, 24, 29, 1017, 1866, 1890], "dashboard": [22, 26, 1866], "torchinductor_shunt": 22, "qz": 22, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 22, "shunting314": 22, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 22, "48efc83b12ec3ead950052e4a0220b10": 22, "p": [22, 40, 44, 48, 64, 72, 157, 236, 288, 426, 427, 454, 491, 492, 607, 685, 688, 920, 922, 932, 940, 1065, 1218, 1229, 1235, 1236, 1244, 1245, 1287, 1289, 1292, 1302, 1323, 1342, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1396, 1398, 1399, 1435, 1439, 1441, 1478, 1479, 1495, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1550, 1551, 1561, 1565, 1568, 1569, 1595, 1614, 1620, 1622, 1628, 1637, 1657, 1685, 1736, 1793, 1867, 1869, 1870, 1890, 1891, 1894, 1898, 1899, 1904, 1915, 1925, 1926], "8243734a38b5733ea78479209c0ae893": 22, "chrome": [22, 25, 915, 1915], "compiled_module_profil": 22, "json": [22, 25, 52, 57, 61, 1901, 1915], "browser": [22, 25], "ui": [22, 24, 1899, 1930], "zoom": [22, 25], "percent": [22, 1030, 1049], "regard": [22, 42, 1361, 1362, 1363, 1373, 1374, 1520, 1521, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1868, 1923, 1925], "102": [22, 1338], "88": 22, "distort": [22, 25], "densenet121": 22, "69": 22, "58": [22, 42], "85": [22, 25, 72, 1433, 1697], "89": [22, 616, 1723], "cutlass": [22, 1925], "cudnn": [22, 37, 38, 759, 1207, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1382, 1400, 1445, 1446, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1579, 1759, 1866, 1869, 1894, 1905, 1906], "conv": [22, 23, 72, 701, 702, 703, 704, 705, 706, 707, 708, 709, 791, 792, 795, 813, 853, 859, 1198, 1207, 1213, 1214, 1358, 1359, 1360, 1361, 1362, 1363, 1430, 1431, 1437, 1879, 1889, 1894, 1905, 1909, 1916, 1917, 1918, 1919], "56": [22, 739, 1925], "57": 22, "gain": [22, 1686, 1889], "effort": [22, 42, 1921], "nice": [22, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1423, 1424, 1425, 1481, 1885, 1891, 1913], "triton_red_fused__native_batch_norm_legit_functional_16": 22, "19": [22, 684, 745, 945, 1427, 1868, 1909, 1925], "jk": [22, 1071], "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 22, "renam": [22, 792, 1869, 1884, 1885, 1911], "96a0afef9dce53d6357bf1633094f358": 22, "standalon": [22, 33, 58, 59, 60, 816, 1209, 1213, 1868], "constabl": 23, "edg": [23, 778, 784, 1151, 1159, 1160, 1540, 1598, 1876, 1897, 1922], "orchestr": 23, "_forward_pre_hook": 23, "forward_hook": [23, 1902], "_backward_pre_hook": 23, "_backward_hook": 23, "_state_dict_hook": 23, "load_": 23, "alter": [23, 1890, 1896], "backward_hook": [23, 1902], "avoiabl": 23, "fire": [23, 1198, 1430, 1895, 1901], "presenc": [23, 69, 72, 1207, 1325, 1904, 1913, 1925], "opaqu": [23, 42, 49, 972, 1006, 1007, 1122], "skip_nnmodule_hook_guard": 23, "react": [23, 50], "pre_backward": 23, "accordingli": [23, 48, 72, 1207, 1400, 1622, 1886, 1921], "warn_onc": 23, "bin": [24, 50, 57, 59, 302, 303, 818, 923, 1158, 1159, 1160, 1869, 1871, 1911, 1930], "hui": 24, "nightli": 24, "gcp": [24, 42], "a100": [24, 29], "night": 24, "40gb": [24, 29], "2ghz": 24, "xeon": [24, 1866, 1893], "suit": [24, 42, 1868, 1870, 1871, 1909, 1917, 1921], "torchbench": 24, "trend": 24, "droplist": 24, "geometr": [24, 288, 778, 784, 1529, 1540, 1598, 1852, 1866, 1911, 1933], "peak": [24, 44, 46, 64, 1020, 1022, 1028, 1035, 1036, 1037, 1610, 1691, 1697, 1914], "footprint": [24, 40, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1894, 1925], "ratio": [24, 48, 50, 616, 1378, 1379, 1524, 1525, 1869, 1925], "click": [24, 25, 1933], "with_cudagraph": 24, "dynamic_shap": [24, 1663], "kick": [24, 1895, 1921, 1922], "Be": [24, 1909], "wise": [24, 40, 42, 48, 686, 687, 697, 757, 769, 770, 779, 783, 883, 964, 1071, 1076, 1117, 1118, 1141, 1142, 1154, 1163, 1220, 1222, 1279, 1280, 1281, 1282, 1286, 1296, 1299, 1301, 1331, 1352, 1363, 1370, 1372, 1386, 1387, 1388, 1389, 1391, 1416, 1419, 1429, 1438, 1448, 1449, 1450, 1457, 1459, 1460, 1461, 1466, 1468, 1470, 1471, 1503, 1518, 1527, 1528, 1532, 1533, 1534, 1535, 1538, 1542, 1544, 1549, 1559, 1560, 1573, 1574, 1575, 1580, 1581, 1582, 1583, 1587, 1589, 1590, 1591, 1796, 1860, 1893, 1896, 1925, 1926, 1929], "granular": [25, 47, 64, 1211, 1890], "toosl": 25, "ncu": 25, "export_chrome_trac": [25, 1915], "artifact": [25, 29, 679, 1877, 1901, 1913], "torchvis": [25, 72, 1865, 1866, 1868, 1870, 1909, 1913, 1916, 1930, 1934], "224": [25, 72, 860, 861, 1868, 1870, 1909], "model_c": 25, "fwd_bwd": 25, "w": [25, 48, 70, 153, 759, 888, 890, 892, 898, 906, 921, 930, 970, 1129, 1140, 1155, 1156, 1195, 1237, 1336, 1337, 1344, 1345, 1347, 1349, 1350, 1354, 1359, 1360, 1366, 1370, 1371, 1373, 1374, 1375, 1382, 1394, 1395, 1402, 1413, 1414, 1424, 1425, 1435, 1436, 1437, 1442, 1443, 1464, 1480, 1481, 1483, 1484, 1494, 1502, 1520, 1521, 1529, 1564, 1570, 1571, 1618, 1651, 1654, 1869, 1884, 1885, 1889, 1891, 1896, 1899, 1912, 1913, 1930], "scroll": 25, "shortcut": 25, "compiledfunct": 25, "compiledfunctionbackward": 25, "draw": [25, 39, 157, 922, 1034, 1320, 1722, 1930], "connect": [25, 42, 50, 59, 1358, 1359, 1360, 1361, 1362, 1363, 1406, 1407, 1408, 1409, 1410, 1411, 1458, 1883, 1921], "ac2g": 25, "dropdown": 25, "525": 25, "_util": [25, 39], "_init_for_cuda_graph": 25, "ed": [25, 48, 69, 1369, 1370, 1891, 1913, 1936], "1gb": [25, 1894], "roughli": [25, 28, 39, 1396, 1895], "graphic": [25, 72, 1882, 1908], "warmup_compil": 25, "fn_c": 25, "record_funct": 25, "trace_compil": 25, "interrupt": [25, 50, 1883], "synthet": 25, "modelwithbreak": 25, "create_sequenti": 25, "128": [25, 616, 719, 727, 728, 755, 763, 793, 818, 819, 1351, 1365, 1392, 1417, 1439, 1478, 1479, 1511, 1579, 1885, 1886, 1916, 1918, 1919, 1921, 1925, 1928, 1931], "mod1": 25, "mod2": 25, "mod3": 25, "mod4": 25, "trace_break": 25, "gap": [25, 864, 1731, 1866, 1916], "pep": [26, 1868, 1870, 1909], "523": 26, "rewrit": [26, 44, 69, 84, 85, 1879, 1891, 1899, 1909], "customiz": [26, 1872, 1934], "usabl": [26, 29, 71, 1871, 1909], "openmp": [26, 1866, 1893, 1908], "video": [26, 1442, 1443, 1885, 1930], "topic": [26, 31, 1901, 1902], "vmap": [27, 65, 67, 68, 72, 900, 902, 906, 907, 908, 1129, 1132, 1133, 1135, 1137], "jacrev": [27, 66, 68, 69, 902, 1131, 1132, 1897], "100320": 27, "escap": 27, "hatch": 27, "introspect": [27, 72, 954], "jax": [27, 65, 68, 69, 70, 1891, 1897], "promis": 27, "pure": [27, 33, 34, 69, 1201, 1868, 1896], "relax": [27, 48, 1213, 1214, 1622, 1916], "pitfal": [27, 1866], "functional_cal": [27, 66, 68, 1137], "sit": 28, "replace_add_with_mul": 28, "insert": [28, 39, 42, 48, 64, 71, 72, 746, 791, 792, 860, 861, 1431, 1432, 1440, 1610, 1751, 1754, 1764, 1785, 1809, 1850, 1868, 1879, 1894, 1911, 1916], "insert_relu_after_add": 28, "inserting_aft": [28, 72], "new_relu_nod": 28, "replace_all_uses_with": [28, 72], "axi": [28, 513, 515, 517, 821, 824, 962, 1070, 1085, 1111, 1140, 1163, 1717, 1737, 1742, 1743, 1860, 1867, 1869, 1897, 1909, 1914, 1916], "eg": [28, 936, 1744, 1751], "dead": [28, 72], "frequenc": [28, 60, 923, 970, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1195, 1338, 1373, 1374, 1520, 1521, 1691, 1812], "replaceaddwithmul": 28, "transformed_graph_modul": 28, "graph_modul": [28, 858], "replaceaddwithmulsub": 28, "mul_r": 28, "sub": [28, 52, 64, 71, 561, 813, 860, 861, 1209, 1213, 1214, 1295, 1298, 1300, 1442, 1443, 1473, 1474, 1476, 1736, 1814, 1831, 1865, 1867, 1868, 1869, 1884, 1886, 1891, 1904, 1909, 1911, 1925, 1928], "removedetachpass": 28, "detach_copi": [28, 1869, 1911], "len": [28, 39, 42, 44, 72, 221, 544, 694, 695, 1090, 1094, 1097, 1101, 1104, 1108, 1138, 1202, 1264, 1285, 1297, 1325, 1328, 1367, 1567, 1628, 1630, 1646, 1690, 1697, 1801, 1804, 1810, 1811, 1815, 1852, 1853, 1854, 1868, 1869, 1871, 1896, 1911, 1925, 1930], "args_map": 28, "schema": [28, 36, 42, 44, 1867, 1868, 1869, 1871, 1875, 1909], "enumer": [28, 39, 48, 72, 1198, 1430, 1432, 1441, 1690, 1869, 1870, 1890, 1894, 1908, 1930], "_schema": 28, "kwarg_onli": 28, "scalartotensorpass": 28, "breakpoint": [28, 72, 1871], "try_coerc": 28, "tensortyp": [28, 1871], "wildcard": [28, 1885, 1913], "subgraph_rewrit": [28, 72], "replace_pattern": 28, "replaced_pattern": 28, "replace_pattern_with_filt": 28, "traced_modul": [28, 72, 1907], "replacedpattern": 28, "nodes_map": [28, 72], "passmanag": 28, "blob": [28, 791, 1128, 1899, 1901, 1930], "infra": [28, 29, 52, 1910], "pass_manag": 28, "__": [28, 1872], "pm": 28, "replace_add_with_div": 28, "replace_div_with_mul": 28, "run_checks_after_each_pass": 28, "suppress_check_failur": 28, "graph_module_out": 28, "set_check": 28, "check_div_target": 28, "div": [28, 40, 238, 1067, 1116, 1119, 1338, 1442, 1443, 1735, 1844, 1867, 1869, 1875, 1884, 1911, 1925, 1928], "valueerror": [28, 71, 86, 1196, 1622, 1623, 1643, 1646, 1896, 1914, 1932], "add_check": 28, "subgraphmatch": 28, "matcher_util": 28, "match_output": 28, "match_placehold": 28, "remove_overlapping_match": 28, "ignore_liter": 28, "liter": [28, 1666, 1869, 1872, 1885, 1913], "largemodel": 28, "_weight": [28, 744, 745, 1373, 1374], "_bia": 28, "large_model_graph": 28, "patternmodel": 28, "_weight_1": 28, "_bias_1": 28, "pattern_graph": 28, "subgraph_match": 28, "match_result": 28, "internalmatch": 28, "default_factori": 28, "placeholder_nod": 28, "returning_nod": 28, "largest": [28, 64, 589, 923, 1115, 1229, 1250, 1252, 1254, 1255, 1270, 1566, 1618, 1834, 1867, 1869, 1870, 1871, 1937], "capabilitybasedpartition": 28, "l34": 28, "operator_support": 28, "operatorsupportbas": 28, "allows_single_node_partit": 28, "non_compute_op": 28, "ex": [28, 51, 1610, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1881], "_oper": 28, "getitem": 28, "allowed_single_node_partition_op": 28, "ll28c1": 28, "l28c1": 28, "is_node_support": 28, "chain": [28, 39, 40, 48, 71, 72, 153, 892, 942, 1253, 1374, 1458, 1687, 1700, 1871, 1891, 1894, 1896, 1899, 1902, 1912], "operatorsuppportbas": 28, "l150": 28, "any_chain": 28, "l164": 28, "addmuloperatorsupport": 28, "capability_partition": 28, "op_support": 28, "partition_list": 28, "propose_partit": 28, "call_modul": [28, 72], "fused_graph_modul": 28, "fuse_partit": 28, "lazo": 29, "meantim": [29, 1346, 1347, 1364, 1366, 1390, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1501, 1502, 1512, 1541, 1564, 1572], "_log": [29, 1866, 1871], "set_log": [29, 1866, 1877], "smallest": [29, 52, 941, 1219, 1229, 1250, 1254, 1270, 1714, 1834, 1932, 1937], "suspect": [29, 36, 1686, 1894], "taken": [29, 42, 48, 64, 71, 72, 864, 1092, 1094, 1117, 1118, 1353, 1366, 1374, 1437, 1513, 1521, 1764, 1796, 1889, 1891, 1893, 1894, 1896, 1898, 1901, 1907, 1909, 1913, 1915], "proce": [29, 1890, 1894, 1921], "sampl": [29, 39, 44, 48, 65, 70, 72, 91, 156, 157, 379, 455, 482, 607, 778, 922, 970, 983, 1017, 1030, 1034, 1048, 1049, 1089, 1107, 1129, 1139, 1151, 1195, 1214, 1287, 1320, 1342, 1346, 1347, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1384, 1390, 1393, 1394, 1395, 1396, 1397, 1415, 1417, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1448, 1461, 1462, 1469, 1478, 1494, 1501, 1502, 1512, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1526, 1529, 1531, 1539, 1540, 1541, 1564, 1572, 1610, 1618, 1658, 1690, 1705, 1708, 1722, 1724, 1726, 1728, 1730, 1794, 1810, 1811, 1812, 1853, 1854, 1858, 1866, 1881, 1889, 1890, 1894, 1901, 1902, 1913, 1916, 1917, 1930], "test_assertion_error": 29, "compiled_test_assertion_error": 29, "mlazo": 29, "837": 29, "build_map": 29, "assertionerror": [29, 64, 72, 86, 733, 1667, 1932], "fortun": [29, 1898], "isol": [29, 72, 1601, 1883, 1914], "test_backend_error": 29, "_foobar": [29, 1911], "dummi": [29, 39, 46, 1891, 1896, 1936], "compiled_test_backend_error": 29, "246": [29, 616], "185": [29, 616], "decomp_fn": 29, "810": 29, "repro_aft": 29, "nearli": [29, 153, 892, 906, 1705, 1904, 1921], "minifier_launch": 29, "base_dir": 29, "successfulli": [29, 42, 50, 56, 74, 75, 76, 1204, 1760, 1883, 1902, 1907, 1921], "runnabl": [29, 72, 1890, 1909, 1930], "rand_strid": 29, "0a0": 29, "gitfddfc44": 29, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 29, "nvcc": [29, 33, 1002], "2005": [29, 682, 1854], "2022": 29, "thu_feb_10_18": 29, "23": [29, 42, 513, 1270, 1775, 1868, 1925], "41_pst_2022": 29, "v11": 29, "112": [29, 616], "cuda_11": 29, "r11": 29, "30978841_0": 29, "sxm4": 29, "float32": [29, 39, 40, 269, 579, 616, 818, 819, 820, 821, 824, 825, 879, 960, 1085, 1086, 1123, 1145, 1147, 1180, 1334, 1347, 1482, 1483, 1484, 1496, 1672, 1673, 1709, 1714, 1722, 1726, 1741, 1756, 1757, 1759, 1801, 1856, 1886, 1890, 1894, 1905, 1909, 1918, 1925, 1926, 1927, 1928, 1931, 1932, 1937], "compile_fx": 29, "compile_fx_inn": 29, "walk": [29, 34, 72, 1875, 1896, 1913, 1922, 1923, 1929], "toi": [29, 56], "toy_compil": 29, "debug_util": 29, "run_fwd_maybe_bwd": 29, "opt_mod": 29, "sh": [29, 767, 768, 772, 773, 1497, 1498, 1505, 1506, 1508, 1509, 1554, 1555], "st": [29, 1498, 1506, 1509, 1555], "dt": [29, 1506, 1509, 1926], "requires_grad_": [29, 337, 449, 1198, 1353, 1430, 1513, 1793, 1830, 1869, 1884, 1891, 1931], "rg": 29, "autocast": [29, 1017, 1436, 1866, 1894, 1896], "test_model": 29, "layernorm": [29, 1385, 1393, 1394, 1395, 1473, 1477, 1543, 1886, 1918], "overridden": [29, 33, 72, 888, 889, 890, 1014, 1430, 1791, 1871, 1891, 1896, 1905, 1914, 1936], "debug_dir_root": 29, "torch_compile_debug_dir": 29, "timestamp": [29, 52, 53, 56, 60, 1881, 1915, 1930], "cd": [29, 1908, 1913, 1915], "l": [29, 48, 734, 759, 921, 930, 936, 943, 944, 1071, 1155, 1156, 1198, 1217, 1227, 1228, 1233, 1234, 1235, 1236, 1240, 1244, 1245, 1287, 1289, 1343, 1346, 1347, 1348, 1358, 1366, 1369, 1370, 1377, 1382, 1390, 1391, 1393, 1396, 1397, 1400, 1412, 1421, 1423, 1430, 1432, 1436, 1437, 1445, 1461, 1478, 1479, 1481, 1579, 1628, 1637, 1645, 1647, 1675, 1751, 1812, 1869, 1871, 1891, 1930], "run_2023_03_01_08_20_52_143510": 29, "pid_180167": 29, "subfold": [29, 33], "model__0_forward_1": 29, "aot_model___0_debug": 29, "fx_graph_read": 29, "fx_graph_runn": 29, "fx_graph_transform": 29, "ir_post_fus": 29, "txt": [29, 1205, 1208, 1913], "ir_pre_fus": 29, "fx_graph": 29, "buf1": 29, "schedulernod": 29, "computedbuff": 29, "memorydep": 29, "unmet_depend": 29, "buf0": 29, "c0": [29, 733, 761, 1400], "met_depend": 29, "primals_2": 29, "buf1_loop_bodi": 29, "var_rang": 29, "z0": 29, "index0": 29, "index1": 29, "bodi": [29, 72, 1209, 1868, 1870, 1871, 1872], "get_index": 29, "get_index_1": 29, "load_1": 29, "get_index_2": 29, "compiled_fun": 29, "hinder": 29, "break_reason": 29, "explanation_verbos": 29, "sublist": [29, 1071], "succe": [29, 42, 47, 59, 69, 1894, 1896, 1908], "compiled_toi": 29, "outweigh": [29, 1686], "readm": [29, 54, 55, 791, 1886], "verify_instal": 29, "log_fil": 29, "bj": 31, "j": [31, 42, 48, 315, 317, 323, 513, 515, 517, 691, 894, 900, 902, 960, 1071, 1087, 1088, 1095, 1101, 1105, 1106, 1140, 1195, 1198, 1233, 1234, 1245, 1261, 1270, 1277, 1285, 1287, 1292, 1369, 1370, 1371, 1375, 1430, 1433, 1515, 1516, 1517, 1522, 1709, 1716, 1795, 1812, 1816, 1855, 1870, 1889, 1891, 1896, 1899, 1907, 1930], "imaginari": [31, 313, 907, 960, 966, 1092, 1094, 1102, 1103, 1104, 1168, 1188, 1190, 1191, 1194, 1812, 1856, 1857, 1872, 1891, 1899, 1932], "satisfi": [31, 37, 40, 48, 616, 693, 759, 793, 901, 907, 908, 936, 1087, 1088, 1090, 1092, 1094, 1102, 1103, 1104, 1119, 1211, 1237, 1263, 1264, 1338, 1353, 1377, 1382, 1400, 1445, 1633, 1650, 1735, 1751, 1791, 1812, 1871, 1891, 1894, 1899, 1912, 1914, 1925, 1928], "equat": [31, 945, 1071, 1143, 1155, 1241, 1242, 1243, 1244, 1245, 1247, 1258, 1260, 1346, 1777, 1839, 1869, 1891, 1899, 1912, 1926], "mathemat": [31, 47, 72, 900, 901, 902, 903, 904, 905, 1119, 1151, 1346, 1348, 1349, 1350, 1393, 1394, 1395, 1396, 1469, 1548, 1586, 1610, 1657, 1735, 1793, 1794, 1871, 1891, 1905, 1926, 1933], "tradition": 31, "torchaudio": [31, 1866], "mimick": 31, "assembli": 31, "lapack": [31, 944, 1143, 1228, 1239, 1240, 1241, 1243, 1246, 1259, 1715, 1816], "spectral": [31, 1217, 1233, 1261, 1618, 1641, 1651, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1905], "fft": [31, 1866, 1894], "4621": 31, "0303j": 31, "2438": [31, 1243, 1520], "5874j": 31, "7706": 31, "1421j": 31, "2110": 31, "1918j": 31, "complex128": [31, 178, 960, 1114, 1123, 1177, 1198, 1227, 1228, 1233, 1234, 1235, 1236, 1237, 1238, 1358, 1359, 1360, 1430, 1504, 1505, 1506, 1666, 1709, 1756, 1927, 1928, 1931, 1932], "complex64": [31, 181, 960, 1088, 1090, 1091, 1096, 1097, 1123, 1177, 1229, 1252, 1255, 1358, 1359, 1360, 1504, 1505, 1506, 1666, 1709, 1756, 1927, 1928, 1931, 1932], "apart": [31, 1871, 1891], "linspac": [31, 923, 947, 1092, 1102, 1299, 1869, 1873, 1911], "logspac": [31, 1869, 1873, 1911], "view_as_r": [31, 1812, 1869, 1911, 1929], "6125": 31, "1681": 31, "3773": 31, "3487": 31, "0861": 31, "7981": 31, "1681j": 31, "3487j": 31, "7981j": 31, "mul_": [31, 1869, 1884, 1886, 1925], "2250": [31, 1254, 1657], "7546": [31, 945], "1722": 31, "x1": [31, 940, 1245, 1365, 1422, 1478, 1479, 1511, 1568, 1869], "3j": [31, 42, 697, 963, 964, 1739, 1740, 1756], "4j": [31, 42, 1767], "0000": [31, 48, 513, 864, 900, 902, 923, 943, 947, 966, 1052, 1058, 1059, 1060, 1085, 1086, 1089, 1091, 1092, 1098, 1099, 1102, 1107, 1119, 1120, 1121, 1151, 1157, 1160, 1164, 1223, 1226, 1227, 1228, 1240, 1241, 1244, 1249, 1250, 1254, 1256, 1268, 1284, 1325, 1373, 1374, 1482, 1483, 1485, 1486, 1520, 1521, 1657, 1709, 1715, 1720, 1721, 1722, 1731, 1735, 1736, 1760, 1767, 1769, 1770, 1772, 1775, 1776, 1777, 1778, 1794, 1839, 1840, 1842, 1861, 1878, 1886, 1894, 1925, 1926, 1931], "6569": [31, 1164], "5708": [31, 1055], "7854": 31, "complex_tensor": 31, "conjug": [31, 332, 459, 691, 907, 945, 963, 964, 1178, 1227, 1228, 1234, 1237, 1240, 1247, 1261, 1266, 1270, 1617, 1703, 1739, 1812, 1816, 1855, 1899, 1912, 1931], "wirting": [31, 907, 1899], "deriv": [31, 42, 64, 153, 737, 738, 739, 740, 741, 742, 780, 799, 823, 892, 906, 907, 908, 1134, 1138, 1151, 1195, 1255, 1287, 1477, 1601, 1866, 1870, 1896, 1897, 1899, 1921, 1925, 1926], "steepest": [31, 1891], "descent": [31, 48, 1669, 1685, 1689, 1690, 1891, 1902], "quantiz": [31, 72, 222, 328, 340, 473, 474, 475, 476, 477, 479, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 860, 861, 862, 863, 916, 1056, 1085, 1086, 1717, 1718, 1719, 1720, 1721, 1866, 1911, 1928, 1931, 1932, 1934, 1935], "parallel_info": [32, 1866, 1893], "cppextens": [33, 1866], "setuptool": 33, "bare": 33, "buildextens": [33, 1866], "ext_modul": 33, "extra_compile_arg": [33, 1908], "cmdclass": 33, "build_ext": 33, "cudaextens": [33, 1866], "cuda_extens": 33, "extension_kernel": 33, "cu": 33, "cxx": 33, "o2": 33, "arch": 33, "card": [33, 1908], "ptx": 33, "road": 33, "newest": [33, 68], "torch_cuda_arch_list": 33, "build_my_extens": 33, "older": [33, 1894, 1907, 1913], "modestli": [33, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686], "pars": [33, 42, 62, 914, 1871, 1913, 1921], "workaround": [33, 39, 72, 1202, 1865, 1906, 1909, 1916], "sigmoidalphablendforwardcuda": 33, "69460": 33, "facebookresearch": 33, "pytorch3d": 33, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 33, "relocat": 33, "link": [33, 34, 48, 72, 84, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1423, 1424, 1425, 1481, 1531, 1885, 1901, 1902, 1925], "rdc": 33, "dc": 33, "anymor": [33, 42, 64, 224], "dlto": 33, "dlink": 33, "protent": 33, "lib": [33, 1908], "nvshmem": 33, "ninja": [33, 1908], "dlink_librari": 33, "dlink_lib": 33, "std": [33, 50, 57, 91, 379, 455, 1085, 1086, 1117, 1118, 1119, 1658, 1709, 1735, 1774, 1779, 1811, 1849, 1867, 1869, 1884, 1889, 1894, 1901, 1908, 1911], "use_ninja": 33, "distutil": 33, "max_job": 33, "extra_cflag": 33, "extra_cuda_cflag": 33, "extra_ldflag": 33, "extra_include_path": 33, "build_directori": 33, "with_cuda": [33, 1908], "is_python_modul": 33, "is_standalon": 33, "keep_intermedi": 33, "torch_extens": 33, "torch_extensions_dir": 33, "o3": 33, "cuh": 33, "Such": [33, 39, 40, 71, 1852, 1925], "lib64": 33, "cudart": [33, 1908], "cuda_hom": 33, "safest": 33, "pybind11": [33, 34, 1870], "union": [33, 39, 44, 47, 50, 53, 57, 60, 64, 72, 1209, 1269, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1345, 1378, 1379, 1398, 1399, 1423, 1424, 1425, 1430, 1473, 1475, 1477, 1480, 1622, 1664, 1666, 1747, 1869, 1870, 1871, 1907, 1909, 1913, 1927, 1932, 1935], "linker": 33, "header": [33, 57, 1908, 1932], "torch_lib_path": 33, "load_inlin": [33, 1866], "cpp_sourc": 33, "cuda_sourc": 33, "with_pytorch_error_handl": 33, "behav": [33, 34, 42, 71, 72, 315, 323, 493, 515, 517, 840, 1138, 1213, 1426, 1427, 1428, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1870, 1871, 1878, 1891, 1897, 1902, 1906, 1913, 1921, 1925], "concaten": [33, 39, 42, 47, 902, 939, 950, 986, 1070, 1163, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1374, 1400, 1513, 1521, 1614, 1622, 1809, 1860, 1869, 1872, 1909, 1911, 1925], "furthermor": [33, 57, 68, 1233, 1234, 1261, 1287, 1368, 1884, 1885, 1891, 1906, 1919, 1921], "cuda_runtim": 33, "se": 33, "macro": [33, 1900], "pybind": 33, "_safe_foo": 33, "redirect": [33, 50, 57, 1933], "obscur": 33, "sin_add": 33, "inline_extens": 33, "include_path": [33, 1866], "get_compiler_abi_compatibility_and_vers": [33, 1866], "abi": [33, 34], "shell": 33, "torchvers": 33, "verify_ninja_avail": [33, 1866], "is_ninja_avail": [33, 1866], "embed": [34, 72, 734, 745, 894, 1062, 1338, 1364, 1374, 1390, 1402, 1436, 1479, 1521, 1579, 1686, 1754, 1869, 1893, 1911, 1916, 1918, 1921, 1925, 1930], "preprocess": [34, 496, 1198], "augment": [34, 1872, 1932], "interfac": [34, 40, 44, 49, 51, 56, 59, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 793, 1124, 1601, 1758, 1812, 1851, 1867, 1871, 1881, 1882, 1896, 1901, 1912, 1919, 1925, 1930], "opencv": [34, 1529, 1540], "struct": [34, 1138, 1139, 1858, 1879, 1901], "classat_1_1_tensor": 34, "tensor_index": 34, "cpp_autograd": 34, "undesir": [34, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1579, 1896], "cpp_frontend": 34, "library_root": 34, "libtorch": 34, "linux": [34, 42, 1865], "gcc": 34, "cxx11": 34, "prototyp": [36, 42, 679, 900, 902, 906, 907, 908, 1207, 1477, 1866, 1877, 1878, 1881, 1885, 1886, 1902, 1907, 1919, 1921, 1925, 1928, 1934, 1935], "race": [36, 42, 1891], "enable_cuda_sanit": 36, "torch_cuda_sanit": 36, "concurr": [36, 42, 46, 1893, 1894, 1904, 1921, 1922], "uniniti": [36, 446, 499, 1072, 1073, 1601, 1612, 1613, 1650, 1886, 1911], "commandlin": 36, "example_error": 36, "csan": 36, "139719969079296": 36, "94646435460352": 36, "_sanit": 36, "364": 36, "_handle_kernel_launch": 36, "stack_trac": [36, 72], "stacksummari": 36, "420": 36, "_handle_memory_alloc": 36, "faulti": [36, 42], "current_stream": [36, 974, 1866, 1894], "wait_stream": [36, 42, 975, 977, 1894], "default_stream": [36, 42, 1866], "float16": [37, 40, 44, 64, 299, 685, 688, 759, 822, 825, 833, 849, 850, 857, 920, 932, 1123, 1180, 1198, 1292, 1302, 1358, 1359, 1360, 1361, 1362, 1363, 1382, 1383, 1400, 1401, 1417, 1430, 1445, 1579, 1672, 1673, 1744, 1890, 1902, 1916, 1918, 1925, 1927, 1928, 1931, 1932, 1937], "v100": [37, 759, 1382, 1400, 1445, 1894], "packedsequ": [37, 759, 1382, 1400, 1445, 1644, 1645, 1646, 1648], "rnn": [38, 733, 759, 760, 761, 762, 764, 857, 1382, 1383, 1400, 1401, 1447, 1611, 1620, 1643, 1873, 1898, 1902, 1918, 1930], "enforc": [38, 40, 71, 794, 889, 1198, 1400, 1430, 1445, 1871, 1902, 1929], "cuda_launch_block": [38, 1400, 1445, 1894], "colon": [38, 1400, 1445, 1921], "cublas_workspace_config": [38, 1400, 1445, 1851, 1894, 1906], "4096": [38, 1400, 1445, 1851, 1894, 1909], "dataload": [39, 496, 1610, 1690, 1691, 1697, 1894, 1898, 1904, 1908, 1912, 1930], "batch_siz": [39, 48, 68, 70, 891, 1129, 1137, 1139, 1436, 1643, 1645, 1646, 1648, 1858, 1869, 1897, 1898, 1906, 1909, 1930], "shuffl": [39, 1866, 1930], "batch_sampl": 39, "num_work": [39, 50, 1906, 1908], "drop_last": 39, "timeout": [39, 42, 59, 1883, 1921], "worker_init_fn": [39, 1898, 1906], "prefetch_factor": 39, "persistent_work": 39, "__getitem__": [39, 1851], "__len__": [39, 72, 1869], "protocol": [39, 44, 49, 59, 61, 879, 1122, 1124, 1665, 1747, 1896, 1908, 1909, 1921, 1936], "idx": [39, 72, 897, 1198, 1338, 1373, 1430, 1618, 1869, 1885], "th": [39, 157, 315, 317, 323, 759, 900, 902, 922, 942, 1058, 1063, 1172, 1195, 1219, 1237, 1245, 1251, 1287, 1320, 1369, 1370, 1371, 1375, 1382, 1390, 1400, 1445, 1515, 1516, 1517, 1522, 1716, 1812, 1896, 1908, 1926, 1928], "iterabledataset": [39, 1901], "__iter__": [39, 1872], "improb": 39, "fetch": [39, 71, 72, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1666, 1921], "databas": 39, "remot": [39, 42, 46, 50, 1610, 1914, 1921, 1922], "replica": [39, 40, 42, 46, 57, 1367, 1610, 1895], "duplic": [39, 317, 321, 472, 543, 921, 930, 951, 1155, 1156, 1198, 1430, 1848, 1849, 1925], "yield": [39, 40, 64, 72, 1059, 1061, 1198, 1244, 1245, 1430, 1861, 1871, 1872, 1878, 1914, 1916, 1926], "stochast": [39, 48, 1378, 1379, 1524, 1525, 1669, 1671, 1672, 1674, 1685, 1689, 1690, 1902, 1912], "decent": 39, "randomli": [39, 744, 745, 755, 763, 908, 1342, 1368, 1369, 1370, 1371, 1375, 1448, 1514, 1515, 1516, 1517, 1522, 1630, 1886, 1901, 1902], "permut": [39, 1071, 1244, 1245, 1264, 1287, 1289, 1730, 1866, 1867, 1869, 1885, 1911, 1918, 1929, 1931], "mini": [39, 778, 784, 1348, 1349, 1350, 1373, 1374, 1385, 1390, 1393, 1394, 1395, 1402, 1422, 1433, 1435, 1469, 1478, 1520, 1521, 1540, 1598, 1914], "neither": [39, 42, 794, 895, 898, 1054, 1114, 1436, 1477, 1657, 1837, 1896, 1905, 1921], "collat": 39, "minibatch": [39, 767, 768, 771, 772, 773, 1287, 1338, 1346, 1347, 1364, 1366, 1390, 1396, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1482, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1506, 1507, 1508, 1509, 1512, 1541, 1553, 1554, 1555, 1564, 1572, 1914], "loader": [39, 1912], "dataset_it": 39, "cheaper": [39, 71], "arrai": [39, 50, 449, 759, 819, 820, 878, 879, 923, 941, 966, 970, 1071, 1115, 1123, 1124, 1132, 1133, 1269, 1299, 1377, 1382, 1383, 1400, 1401, 1523, 1737, 1744, 1764, 1798, 1799, 1800, 1802, 1803, 1830, 1837, 1845, 1852, 1868, 1872, 1894, 1902, 1925, 1927, 1931, 1932], "untouch": 39, "slightli": [39, 42, 48, 64, 1657, 1705, 1817, 1865, 1894, 1896, 1899, 1905, 1913], "default_col": 39, "channel": [39, 67, 473, 474, 475, 778, 784, 807, 821, 824, 832, 844, 852, 1085, 1348, 1349, 1350, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1368, 1369, 1370, 1371, 1375, 1377, 1385, 1393, 1394, 1395, 1402, 1406, 1407, 1408, 1409, 1410, 1411, 1418, 1438, 1464, 1469, 1481, 1482, 1483, 1484, 1499, 1515, 1516, 1517, 1522, 1539, 1540, 1547, 1573, 1598, 1628, 1629, 1630, 1637, 1638, 1654, 1717, 1885, 1887, 1889, 1891, 1916, 1917, 1919, 1930], "class_index": 39, "namedtupl": [39, 72, 895, 1050, 1051, 1143, 1198, 1209, 1219, 1239, 1289, 1295, 1298, 1300, 1303, 1326, 1338, 1430, 1705, 1715, 1789, 1816, 1834, 1839, 1868, 1870, 1871, 1916], "gil": [39, 42, 46, 1891, 1894, 1921], "descriptor": [39, 42, 1478, 1479, 1872, 1909], "parent": [39, 52, 57, 61, 64, 679, 787, 788, 816, 1430, 1883, 1908, 1913, 1923, 1930], "refcount": [39, 1883, 1904], "panda": 39, "pyarrow": 39, "13246": 39, "get_worker_info": [39, 1921], "seed": [39, 91, 1009, 1018, 1019, 1039, 1174, 1290, 1310, 1705, 1722, 1817, 1866, 1869, 1898, 1904, 1906, 1920], "shut": [39, 1921], "garbag": [39, 1923], "subtleti": [39, 1367, 1896, 1898], "multiprocess": [39, 40, 42, 43, 45, 50, 52, 60, 61, 1367, 1610, 1866, 1885, 1895, 1922], "unix": [39, 57, 973, 1883], "fork": [39, 57, 1216, 1610, 1871, 1893, 1894, 1898, 1901, 1904, 1908, 1920, 1921, 1923], "child": [39, 50, 52, 64, 790, 1198, 1430, 1629, 1883, 1902, 1908, 1923], "maco": [39, 42, 1883, 1903], "spawn": [39, 40, 43, 50, 51, 57, 61, 1201, 1610, 1866, 1890, 1895, 1904, 1908, 1922], "__name__": [39, 40, 42, 51, 52, 60, 1895, 1896, 1904, 1908, 1913, 1922], "__main__": [39, 40, 42, 51, 52, 60, 1892, 1895, 1904, 1908, 1922], "base_se": 39, "worker_id": [39, 61, 1906], "therebi": [39, 48, 1912, 1916], "mandatorili": 39, "initial_se": [39, 91, 1866, 1906, 1920], "simplecustombatch": 39, "transposed_data": 39, "zip": [39, 44, 1865, 1869, 1870, 1880, 1894, 1901, 1925], "tgt": [39, 1473, 1474, 1475], "collate_wrapp": 39, "tensordataset": 39, "batch_ndx": 39, "is_pin": [39, 1643, 1869, 1884, 1911, 1927], "multiprocessing_context": 39, "pin_memory_devic": 39, "reshuffl": 39, "mutual": [39, 42, 50, 734, 1932], "subprocess": [39, 42, 57, 59, 61, 1898, 1904], "incomplet": [39, 900, 1873, 1926], "divis": [39, 582, 616, 686, 771, 772, 773, 946, 1066, 1116, 1119, 1208, 1241, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1385, 1397, 1421, 1439, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1565, 1735, 1804, 1831, 1871, 1890, 1894], "basecontext": 39, "randomsampl": 39, "prefetch": [39, 64], "unpickl": [39, 42, 1269, 1913], "proper": [39, 50, 71, 72, 1062, 1754, 1870, 1891, 1894, 1896, 1904, 1908], "guess": 39, "trust": [39, 42, 1269, 1865, 1913], "inaccur": [39, 40], "kwd": 39, "__getitems__": 39, "myiterabledataset": 39, "worker_info": 39, "iter_start": 39, "iter_end": 39, "per_work": 39, "ceil": [39, 180, 632, 633, 767, 768, 1343, 1344, 1345, 1398, 1399, 1423, 1424, 1425, 1496, 1497, 1498, 1553, 1554, 1555, 1720, 1721, 1744, 1867, 1869, 1884, 1894, 1911, 1925], "mult": 39, "overall_start": 39, "overall_end": 39, "stackdataset": 39, "assembl": 39, "imagedataset": 39, "textdataset": 39, "tuple_stack": 39, "dict_stack": 39, "concatdataset": 39, "chaindataset": 39, "fly": [39, 1014, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1891], "collate_fn_map": 39, "registri": [39, 1866, 1907, 1909], "default_collate_fn_map": 39, "collate_tensor_fn": 39, "custom_col": 39, "collate_map": 39, "outer": [39, 690, 900, 1071, 1129, 1133, 1138, 1144, 1869, 1871, 1911], "unchang": [39, 499, 513, 515, 734, 813, 1110, 1198, 1430, 1473, 1736, 1807, 1890, 1905, 1916], "byte": [39, 42, 48, 59, 244, 436, 557, 879, 979, 1020, 1022, 1024, 1026, 1124, 1197, 1269, 1306, 1307, 1666, 1675, 1747, 1870, 1871, 1872, 1884, 1913, 1925, 1927], "v_i": [39, 1237], "v_1": 39, "v_2": 39, "v1_i": 39, "v2_i": 39, "v1_1": 39, "v1_2": 39, "v2_1": 39, "v2_2": 39, "elem": [39, 1869], "customtyp": 39, "collate_customtype_fn": 39, "custotyp": 39, "default_convert": 39, "np": [39, 940, 1066, 1071, 1111, 1112, 1113, 1569, 1709, 1897, 1906, 1909, 1930, 1931, 1932], "workerinfo": [39, 1921], "random_split": 39, "floor": [39, 273, 646, 647, 767, 768, 1066, 1116, 1208, 1343, 1344, 1345, 1398, 1399, 1423, 1424, 1425, 1496, 1497, 1498, 1553, 1554, 1555, 1720, 1721, 1735, 1744, 1812, 1867, 1869, 1871, 1884, 1904, 1907, 1911, 1925], "frac": [39, 48, 281, 379, 648, 649, 686, 759, 771, 772, 773, 864, 921, 930, 966, 970, 1066, 1116, 1151, 1155, 1156, 1217, 1229, 1233, 1234, 1237, 1249, 1261, 1268, 1284, 1338, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1368, 1377, 1382, 1383, 1384, 1385, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1415, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1433, 1434, 1435, 1437, 1445, 1447, 1448, 1460, 1462, 1463, 1465, 1466, 1468, 1469, 1470, 1481, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1549, 1565, 1567, 1569, 1579, 1581, 1585, 1587, 1589, 1590, 1670, 1671, 1674, 1676, 1682, 1689, 1690, 1719, 1731, 1734, 1746, 1767, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1795, 1810, 1811, 1812, 1816, 1837, 1853, 1854, 1869, 1884, 1889, 1891, 1899, 1911, 1925, 1926], "robin": [39, 42], "generator1": 39, "manual_se": [39, 69, 91, 1866, 1869, 1884, 1902, 1904, 1906, 1909, 1911, 1920], "generator2": 39, "data_sourc": 39, "accedingsequencelengthsampl": 39, "argsort": [39, 1827, 1869, 1897, 1911], "tolist": [39, 354, 1871, 1911, 1927], "accedingsequencelengthbatchsampl": 39, "sequentialsampl": 39, "num_sampl": [39, 422, 1320, 1869], "drawn": [39, 176, 260, 288, 1320, 1658, 1722, 1726, 1727, 1889, 1932, 1933], "subsetrandomsampl": 39, "weightedrandomsampl": 39, "row": [39, 40, 47, 48, 211, 315, 317, 323, 584, 587, 692, 698, 876, 900, 902, 940, 966, 970, 1054, 1084, 1112, 1113, 1133, 1139, 1160, 1219, 1245, 1253, 1256, 1261, 1285, 1287, 1295, 1297, 1298, 1300, 1303, 1320, 1326, 1327, 1328, 1520, 1521, 1569, 1617, 1656, 1713, 1716, 1736, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1815, 1834, 1837, 1841, 1843, 1852, 1858, 1860, 1869, 1899, 1925, 1930], "05": [39, 46, 72, 116, 346, 693, 711, 712, 713, 714, 715, 716, 722, 723, 735, 736, 748, 750, 751, 752, 753, 907, 908, 944, 1085, 1187, 1213, 1214, 1284, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1469, 1473, 1475, 1477, 1499, 1530, 1539, 1543, 1610, 1688, 1694, 1695, 1701, 1773, 1774, 1779, 1868, 1869, 1912, 1922, 1932], "batchsampl": 39, "distributedsampl": [39, 1610], "num_replica": 39, "world_siz": [39, 40, 42, 43, 46, 50, 59, 60, 62, 64, 1610, 1895, 1914, 1921, 1922], "evenli": [39, 582, 583, 584, 694, 695, 1069, 1161, 1268, 1284, 1859], "set_epoch": 39, "is_distribut": [39, 1869, 1911], "start_epoch": 39, "n_epoch": 39, "vanilla": [40, 1878], "allreduc": [40, 42, 1610, 1894, 1895, 1911], "register_comm_hook": [40, 46, 64, 1610], "mainli": [40, 48, 826, 1353, 1513, 1934], "gradbucket": [40, 1610], "decompos": [40, 72, 1121, 1128, 1242, 1867, 1891, 1896, 1909], "get_per_parameter_tensor": 40, "_distributed_c10d": [40, 42], "1d": [40, 47, 48, 64, 701, 704, 737, 740, 771, 781, 951, 966, 970, 1054, 1068, 1159, 1160, 1175, 1195, 1253, 1254, 1299, 1327, 1335, 1339, 1343, 1353, 1358, 1361, 1366, 1369, 1370, 1374, 1398, 1422, 1423, 1435, 1437, 1482, 1488, 1491, 1494, 1496, 1504, 1507, 1515, 1521, 1550, 1553, 1716, 1717, 1720, 1812, 1837, 1855], "is_last": 40, "set_buff": 40, "stateless": [40, 69, 1887, 1902], "ddp_comm_hook": [40, 46], "default_hook": 40, "allreduce_hook": 40, "process_group": [40, 43, 44, 46, 64, 1469, 1610], "unaffect": [40, 499, 500, 1384], "ddp_model": [40, 42, 1610, 1895], "fp16_compress_hook": 40, "decompress": [40, 1865, 1880], "bf16_compress_hook": 40, "nccl": [40, 43, 44, 60, 64, 1610, 1900], "brain": [40, 1928, 1931], "fp16_compress_wrapp": 40, "powersgdst": 40, "matrix_approximation_rank": 40, "start_powersgd_it": 40, "powersgd_hook": 40, "bf16_compress_wrapp": 40, "wikipedia": [40, 1566, 1891, 1899, 1937], "wiki": [40, 1937], "bfloat16_float": 40, "point_format": 40, "vogel": 40, "et": [40, 48, 64, 1353, 1442, 1443, 1478, 1479, 1685, 1780, 1817, 1889], "al": [40, 48, 64, 1353, 1442, 1443, 1478, 1479, 1685, 1780, 1817, 1889], "neurip": [40, 48], "2019": [40, 48, 1028], "hyperparamet": [40, 64, 72, 1930], "1000": [40, 1086, 1091, 1117, 1118, 1338, 1373, 1479, 1717, 1744, 1764, 1830, 1891, 1907, 1909, 1930], "min_compression_r": 40, "use_error_feedback": 40, "warm_start": 40, "orthogonalization_epsilon": 40, "random_se": 40, "compression_stats_logging_frequ": 40, "batch_tensors_with_same_shap": 40, "stronger": 40, "threshold": [40, 72, 1252, 1255, 1391, 1461, 1466, 1587, 1593, 1699, 1764, 1869, 1890, 1894, 1911, 1930], "exponenti": [40, 260, 1081, 1249, 1275, 1276, 1277, 1285, 1352, 1372, 1518, 1866, 1871, 1911, 1912, 1926, 1933], "grid": [40, 1091, 1299, 1494, 1529, 1867, 1869, 1894, 1930], "satisfactori": 40, "appendix": [40, 1866], "defer": [40, 64, 1894, 1914], "hybrid": [40, 64, 221, 542, 582, 583, 584, 586, 587, 1162], "scheme": [40, 59, 479, 801, 818, 819, 820, 821, 824, 826, 1902], "trajectori": 40, "irrecover": 40, "num_row": 40, "num_col": 40, "1e": [40, 72, 116, 346, 693, 711, 712, 713, 714, 715, 716, 722, 723, 735, 736, 748, 750, 751, 752, 753, 754, 907, 908, 943, 944, 1187, 1213, 1214, 1264, 1348, 1349, 1350, 1365, 1384, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1416, 1439, 1444, 1469, 1473, 1475, 1477, 1478, 1499, 1511, 1526, 1530, 1531, 1539, 1543, 1565, 1568, 1572, 1595, 1618, 1651, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1686, 1699, 1707, 1760, 1868, 1869, 1896, 1902, 1909, 1912, 1926, 1932], "orthogon": [40, 1234, 1237, 1256, 1261, 1270, 1703, 1715, 1889, 1891, 1902, 1925], "epsilon": [40, 72, 818, 819, 820, 821, 824, 864, 1252, 1255, 1348, 1349, 1350, 1365, 1385, 1393, 1394, 1395, 1402, 1439, 1469, 1511, 1565, 1618, 1651, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1719, 1869, 1926], "bucket_cap_mb": [40, 1610, 1895], "memor": 40, "compens": 40, "apex": 40, "uncompress": [40, 1925], "pq": 40, "mq": [40, 1916, 1935], "tp": [40, 47], "comm": [40, 42, 1895], "handler": [40, 42, 52, 53, 1629, 1881, 1901, 1913, 1936], "batched_powersgd_hook": 40, "destroi": [40, 59, 1367, 1891, 1921], "squar": [40, 48, 550, 738, 739, 740, 741, 778, 784, 793, 970, 1058, 1060, 1195, 1229, 1231, 1233, 1234, 1235, 1238, 1239, 1243, 1245, 1247, 1249, 1251, 1255, 1257, 1258, 1260, 1261, 1265, 1278, 1287, 1336, 1340, 1344, 1345, 1359, 1360, 1362, 1363, 1378, 1379, 1391, 1399, 1421, 1424, 1425, 1428, 1461, 1473, 1496, 1505, 1508, 1524, 1525, 1529, 1538, 1540, 1560, 1583, 1598, 1617, 1670, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1746, 1805, 1839, 1852, 1869, 1911, 1925], "truncat": [40, 1116, 1845, 1886, 1889, 1898, 1905], "debugging_hook": 40, "noop_hook": 40, "noop": [40, 1610], "headroom": 40, "desynchron": [40, 42], "trainer": [40, 50, 52, 57, 60, 61, 1610, 1921], "__setstate__": 40, "__getstate__": 40, "reload": [40, 46, 1865], "sy": [40, 51, 60, 62, 1865, 1894, 1913], "tempfil": 40, "mp": [40, 42, 43, 61, 1610, 1866, 1895, 1896, 1904, 1916, 1922, 1927, 1928, 1935], "simplemodel": 40, "fc2": [40, 1601, 1914], "master_addr": [40, 42, 50, 60, 62, 1895, 1914, 1921, 1922], "localhost": [40, 42, 59, 60, 1895, 1914, 1921, 1922], "master_port": [40, 42, 50, 60, 62, 1895, 1914, 1921, 1922], "12355": 40, "init_process_group": [40, 42, 43, 46, 50, 60, 62, 1610, 1894, 1895, 1921], "cleanup": 40, "destroy_process_group": 40, "run_demo": 40, "demo_fn": 40, "nproc": [40, 42, 57, 58, 60, 1883, 1895, 1922], "demo_seri": 40, "gettempdir": 40, "device_id": [40, 42, 43, 46, 60, 64, 1269, 1367, 1469, 1594, 1610, 1895], "powersgd_st": 40, "lr": [40, 43, 46, 64, 1601, 1610, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1894, 1895, 1902, 1904, 1912, 1922, 1930], "001": [40, 907, 908, 1207, 1668, 1672, 1673, 1682, 1686, 1698, 1895, 1909], "comm_hook": 40, "comm_hook_st": 40, "barrier": [40, 50, 59, 1911], "map_loc": [40, 1202, 1205, 1269, 1610, 1865, 1880, 1913], "new_ddp_model": 40, "n_gpu": 40, "device_count": [40, 42, 1866], "got": [40, 42, 890, 1896, 1932], "thank": [40, 48, 1896, 1914], "thij": 40, "par": 40, "home": [41, 1894], "brief": [42, 1610, 1883, 1921], "introduct": [42, 48, 1006, 1610, 1866, 1868, 1872, 1884, 1892, 1902, 1909, 1921, 1925, 1930], "mpi": [42, 1610], "gloo": [42, 60, 1610, 1895, 1900, 1921], "recv": [42, 1610, 1911, 1922], "all_reduc": [42, 61, 1610], "all_gath": 42, "scatter": [42, 46, 64, 513, 515, 517, 1367, 1851, 1869, 1898, 1911, 1921], "reduce_scatt": [42, 1911], "all_to_al": 42, "v1": [42, 64, 1266, 1704, 1865, 1895, 1921], "init_method": [42, 1610, 1921], "adher": [42, 1871, 1925], "some_fil": 42, "machine_nam": 42, "share_folder_nam": 42, "tcpstore": [42, 59], "infiniband": [42, 1610, 1921], "interconnect": 42, "gpudirect": 42, "ethernet": 42, "ip": [42, 59], "ib": 42, "nccl_socket_ifnam": 42, "eth0": 42, "gloo_socket_ifnam": 42, "comma": [42, 1071, 1871, 1877], "eth1": 42, "eth2": 42, "eth3": 42, "imper": 42, "nccl_debug": 42, "nccl_debug_subsi": 42, "coll": 42, "hang": [42, 43, 46, 1610, 1895], "topologi": [42, 44, 47, 50], "socket": [42, 1883, 1921], "nccl_socket_nthread": 42, "nccl_nsocks_perthread": 42, "cloud": [42, 1925, 1930], "aw": [42, 51, 970], "primit": [42, 46, 59, 1269, 1867, 1868, 1870, 1872, 1893, 1903, 1909, 1921], "redund": [42, 64, 1087, 1088, 1090, 1092, 1106, 1108, 1812], "averag": [42, 46, 734, 765, 766, 767, 768, 820, 821, 916, 918, 970, 1034, 1048, 1198, 1335, 1336, 1337, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1364, 1366, 1374, 1384, 1390, 1396, 1397, 1398, 1399, 1403, 1404, 1405, 1421, 1422, 1430, 1433, 1434, 1435, 1436, 1437, 1444, 1461, 1462, 1469, 1478, 1488, 1489, 1490, 1496, 1497, 1498, 1501, 1502, 1512, 1526, 1541, 1550, 1551, 1564, 1572, 1610, 1669, 1670, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1837, 1866, 1895, 1915], "thrash": 42, "recurr": [42, 759, 760, 1213, 1353, 1367, 1382, 1383, 1400, 1445, 1620, 1646, 1683, 1866, 1894], "use_distribut": 42, "datetim": [42, 1881], "timedelta": [42, 59, 1881], "1800": 42, "group_nam": [42, 56], "pg_option": 42, "url": [42, 59, 915, 1865, 1880, 1921], "discov": [42, 1921], "encod": [42, 50, 56, 59, 72, 1245, 1269, 1311, 1312, 1346, 1347, 1473, 1474, 1475, 1476, 1477, 1610, 1798, 1799, 1800, 1802, 1803, 1868, 1871, 1872, 1896, 1907, 1913, 1922, 1925], "ucc": 42, "lowercas": 42, "deadlock": [42, 1610], "job": [42, 50, 52, 53, 55, 56, 58, 59, 60, 61, 1610, 1691, 1697, 1901, 1915, 1930], "exchang": [42, 59, 975, 1059, 1894, 1909], "nccl_blocking_wait": 42, "nccl_async_error_handl": [42, 1894], "abort": [42, 1894], "crash": [42, 52, 59, 1883, 1891, 1921, 1923, 1930], "caught": [42, 1610, 1883], "watch": 42, "dog": 42, "processgroupopt": 42, "processgroupnccl": [42, 1895], "is_high_priority_stream": 42, "backend_nam": 42, "custom_backend": 42, "is_initi": [42, 1866], "is_mpi_avail": 42, "is_nccl_avail": 42, "is_gloo_avail": 42, "is_torchelastic_launch": 42, "elast": [42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 1866], "torchelast": [42, 45, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62], "torchelastic_run_id": [42, 60], "rendezv": [42, 45, 50, 56, 58, 62, 1895, 1921], "null": [42, 51, 53, 56], "discoveri": [42, 59, 1894, 1913], "reachabl": 42, "multicast": 42, "23456": 42, "clean": [42, 50, 72, 959, 1010, 1865, 1883, 1913], "fcntl": 42, "nf": 42, "brand": [42, 1896], "unsuccess": 42, "mnt": 42, "sharedfil": 42, "port": [42, 50, 58, 59, 60, 1900], "backend_str": 42, "uppercas": 42, "classmethod": [42, 59, 731, 737, 738, 739, 744, 745, 755, 763, 791, 792, 793, 814, 815, 816, 823, 853, 974, 1373, 1374, 1469, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1666, 1871, 1872, 1896, 1916, 1921, 1927, 1936], "extended_api": 42, "instanti": [42, 46, 58, 59, 60, 72, 840, 1075, 1173, 1374, 1521, 1619, 1643, 1650, 1655, 1865, 1868, 1870, 1871, 1894, 1896, 1902, 1927], "3rd": [42, 48, 59, 616, 1699, 1892], "processgroup": [42, 44, 46, 64, 1610], "four": [42, 1243, 1359, 1896, 1899, 1921, 1923], "c10d": [42, 50, 58, 60, 62, 1610, 1895, 1911], "distributedbackendopt": 42, "get_backend": [42, 59], "get_rank": [42, 1469], "get_world_s": 42, "filestor": [42, 59], "hashstor": 42, "host_nam": 42, "hostnam": [42, 50, 59, 1915], "listen": 42, "is_mast": 42, "300": [42, 50, 1275, 1347, 1647, 1649, 1912], "wait_for_work": 42, "multi_ten": 42, "tcpserver": 42, "master_listen_fd": 42, "server_stor": 42, "127": [42, 793, 1885, 1916, 1930], "1234": [42, 59, 1175], "client_stor": 42, "first_kei": 42, "first_valu": 42, "hashmap": 42, "file_nam": [42, 1865, 1880, 1913], "store1": 42, "store2": 42, "prefixstor": 42, "quantiti": [42, 65, 70, 1233, 1234, 1261, 1396, 1627, 1628, 1630, 1631, 1633, 1636, 1637, 1638, 1639, 1699, 1897, 1899], "compare_set": 42, "arg2": 42, "expected_valu": 42, "desired_valu": 42, "second_valu": 42, "overload": [42, 72, 616, 1870, 1871, 1875], "bad_kei": 42, "num_kei": 42, "destruct": [42, 1881, 1921, 1923], "delete_kei": 42, "set_timeout": 42, "grain": [42, 857, 860, 1579, 1866, 1891, 1909, 1925], "plai": 42, "new_group": [42, 64, 1469], "use_local_synchron": 42, "enqueu": [42, 71, 975, 977, 978, 1894, 1922], "get_group_rank": 42, "global_rank": [42, 50], "get_global_rank": 42, "group_rank": [42, 50, 60], "get_process_group_rank": 42, "dst": [42, 1865, 1913], "destin": [42, 44, 53, 56, 64, 212, 417, 418, 602, 986, 987, 1140, 1198, 1304, 1305, 1430, 1664, 1665, 1869, 1921, 1922, 1927], "unspecifi": [42, 482, 819, 820, 821, 824, 907, 908, 1463, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1795, 1878, 1925, 1930], "sender": [42, 1923], "isend": 42, "irecv": 42, "is_complet": 42, "finish": [42, 44, 50, 56, 57, 59, 61, 71, 1128, 1894, 1895, 1908, 1915, 1921, 1923], "batch_isend_irecv": 42, "p2p_op_list": 42, "p2pop": 42, "op_list": 42, "send_tensor": 42, "recv_tensor": 42, "send_op": 42, "recv_op": 42, "req": 42, "pg": [42, 1610], "set_devic": [42, 44, 64, 1610, 1755, 1866, 1921, 1928], "p2p": [42, 59], "async_op": 42, "get_futur": [42, 1610], "add_": [42, 67, 69, 224, 1128, 1869, 1884, 1892, 1925], "101": [42, 1338], "overwrot": 42, "sent": [42, 44, 1010, 1871, 1883, 1904, 1921, 1922, 1923], "broadcast_object_list": 42, "object_list": 42, "picklabl": [42, 1198, 1430, 1913], "current_devic": [42, 44, 983, 991, 992, 999, 1000, 1016, 1020, 1022, 1023, 1024, 1026, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1047, 1048, 1049, 1866, 1928], "insecur": [42, 1269], "malici": [42, 1269, 1913], "ineffici": [42, 1894, 1916], "redoptyp": 42, "bitwis": [42, 924, 926, 927, 929, 1872, 1905, 1917, 1933], "reduceop": 42, "int64": [42, 86, 194, 211, 315, 323, 395, 864, 923, 936, 1072, 1085, 1086, 1123, 1512, 1643, 1726, 1730, 1731, 1751, 1798, 1799, 1800, 1802, 1803, 1894, 1925, 1927, 1928, 1931, 1937], "1j": [42, 697, 963, 964, 1194, 1739, 1740, 1855, 1891, 1899, 1907], "2j": [42, 697, 963, 964, 1739, 1740, 1767, 1855, 1891], "tensor_list": [42, 1886], "all_gather_into_tensor": 42, "output_tensor": 42, "accommod": [42, 1426, 1427, 1428], "ii": [42, 966, 1071, 1400, 1401], "tensor_in": 42, "tensor_out": 42, "tensor_out2": 42, "all_gather_object": 42, "obj": [42, 72, 879, 995, 1184, 1185, 1204, 1209, 1747, 1869, 1907, 1908, 1913], "pickabl": 42, "responsibl": 42, "gather_object": 42, "gather_list": 42, "object_gather_list": 42, "scatter_list": 42, "tensor_s": 42, "t_one": 42, "t_five": 42, "scatter_object_list": 42, "scatter_object_output_list": 42, "scatter_object_input_list": 42, "output_list": 42, "input_list": 42, "reduce_scatter_tensor": 42, "all_to_all_singl": 42, "output_split_s": 42, "input_split_s": 42, "15": [42, 72, 616, 1069, 1141, 1151, 1161, 1220, 1234, 1354, 1427, 1428, 1647, 1649, 1707, 1780, 1789, 1835, 1859, 1868, 1869, 1872, 1909, 1925], "uneven": [42, 43, 46, 1610], "21": [42, 48, 684, 942, 1054, 1256, 1715, 1837, 1868, 1925], "31": [42, 928, 1345, 1425, 1601, 1775, 1909], "33": [42, 737, 738, 739, 740, 741, 742, 771, 1198, 1358, 1359, 1360, 1362, 1363, 1428, 1430, 1504, 1506, 1507, 1509, 1868, 1909], "35": [42, 1256, 1349, 1350, 1394, 1395, 1469, 1715], "input_split": 42, "output_split": 42, "5j": 42, "6j": 42, "7j": 42, "8j": 42, "9j": 42, "10j": 42, "11j": 42, "12j": 42, "13j": 42, "14j": 42, "15j": 42, "16j": 42, "output_tensor_list": 42, "input_tensor_list": 42, "monitored_barri": [42, 1911], "wait_all_rank": 42, "band": 42, "bor": 42, "bxor": 42, "premul_sum": 42, "_make_nccl_premul_sum": 42, "all_reduce_multigpu": 42, "__members__": 42, "reduce_op": 42, "revisit": 42, "broadcast_multigpu": 42, "reduce_multigpu": 42, "all_gather_multigpu": 42, "reduce_scatter_multigpu": 42, "distributed_test": 42, "dev_idx": 42, "src_tensor": 42, "resid": [42, 64, 71, 199, 291, 339, 1269, 1610, 1894, 1914, 1921], "dst_tensor": 42, "cpp_extens": [42, 1866, 1896], "cpp_c10d_extens": 42, "torchrun": [42, 45, 51, 58, 62], "benefici": [42, 1902], "nproc_per_nod": [42, 51], "num_gpus_you_hav": 42, "your_training_script": [42, 58, 60], "arg3": 42, "192": [42, 616, 1909], "168": 42, "nnode": [42, 58, 60], "local_process_rank": 42, "local_rank": [42, 50, 52, 57, 60, 62, 1469], "argpars": [42, 60, 1894], "parser": [42, 60, 1894], "argumentpars": [42, 60, 1894], "add_argu": [42, 60, 1894], "parse_arg": [42, 51, 60, 62, 1894, 1909], "output_devic": [42, 46, 60, 1367, 1469, 1594, 1610], "adjust": [42, 44, 46, 48, 64, 1866, 1893, 1917], "launcher": [42, 60], "filesystem": [42, 44, 973, 1865, 1913], "12042": 42, "imagenet": [42, 1889], "inconsist": [42, 64, 864, 1731, 1896], "group_gloo": 42, "29501": 42, "monitoredbarri": 42, "transport": [42, 1921], "598": 42, "2401": 42, "db00": 42, "eef0": 42, "1100": 42, "3560": 42, "1c05": 42, "25d": 42, "8594": 42, "torch_cpp_log_level": 42, "twolinlayernet": 42, "i0607": 42, "739390": 42, "515217": 42, "logger": [42, 1663, 1934, 1935], "173": 42, "broadcast_buff": [42, 1610], "bucket_cap_byt": 42, "26214400": 42, "find_unused_paramet": [42, 1610, 1895], "gradient_as_bucket_view": [42, 1610], "is_multi_device_modul": 42, "num_parameter_tensor": 42, "total_parameter_size_byt": 42, "440": 42, "bucket_s": 42, "cuda_visible_devic": [42, 1040, 1610, 1894], "module_nam": [42, 72, 816, 853, 1913], "nccl_ib_timeout": 42, "nccl_nthread": 42, "085681": 42, "544067": 42, "344": 42, "unused_parameter_s": 42, "40838608": 42, "5983335": 42, "4326421": 42, "comp": [42, 48], "4207652": 42, "085693": 42, "544066": 42, "42850427": 42, "3885553": 42, "2357981": 42, "2234674": 42, "unus": [42, 46, 72, 906, 1010, 1024, 1203, 1209, 1392, 1610, 1668, 1868, 1870, 1871, 1894, 1895, 1900, 1913], "wasn": [42, 1269, 1868], "va": 42, "lue": 42, "indirectli": 42, "outstand": [42, 1921], "stuck": [42, 50, 61], "uninform": 42, "reveal": [42, 1895], "default_pg": 42, "longtensor": [42, 137, 138, 139, 317, 319, 321, 453, 472, 513, 515, 517, 873, 874, 1140, 1172, 1219, 1320, 1373, 1374, 1433, 1520, 1521, 1566, 1656, 1751, 1789, 1801, 1826, 1834, 1861, 1928, 1931], "set_debug_level": 42, "set_debug_level_from_env": 42, "get_debug_level": 42, "torch_show_cpp_stacktrac": 42, "distbackenderror": 42, "facilit": [43, 48, 69, 975, 1059, 1756, 1865, 1868, 1871, 1906], "joinabl": [43, 46, 1610, 1866], "joinhook": [43, 1866], "throw_on_early_termin": [43, 1610], "shadow": [43, 46, 1610, 1934, 1935], "notify_join_context": 43, "zeroredundancyoptim": [43, 46, 1610, 1866], "01": [43, 46, 61, 754, 779, 820, 821, 1072, 1114, 1416, 1544, 1545, 1601, 1667, 1669, 1671, 1673, 1683, 1684, 1691, 1697, 1717, 1771, 1773, 1774, 1779, 1780, 1867, 1869, 1889, 1901, 1909, 1912], "vacuou": 43, "inherit": [43, 1635, 1868, 1870, 1886, 1896, 1902, 1904], "join_hook": [43, 46, 1610], "join_devic": 43, "join_process_group": 43, "repeatedli": [43, 1894, 1925], "main_hook": 43, "post_hook": 43, "is_last_join": 43, "dcp": 44, "reshard": [44, 47, 64], "entrypoint": [44, 47, 50, 52, 57, 60, 1883], "storage_read": 44, "coordinator_rank": 44, "no_dist": 44, "planner": 44, "spmd": 44, "fullfil": 44, "shardedtensor": [44, 64], "po": [44, 1909], "storageread": [44, 1866], "rank0": [44, 64], "mymodul": [44, 64, 72, 1202, 1203, 1204, 1208, 1209, 1215, 1431, 1432, 1440, 1441, 1868, 1870, 1871, 1898, 1907, 1921], "adagrad": [44, 1373, 1878, 1912, 1921], "model_state_dict": 44, "fs_storage_read": 44, "filesystemread": [44, 1866], "save_state_dict": [44, 1866], "storage_writ": 44, "storagewrit": [44, 1866], "fs_storage_writ": 44, "filesystemwrit": [44, 1866], "told": [44, 1870], "read_metadata": 44, "set_up_storage_read": 44, "prepare_local_plan": 44, "prepare_global_plan": 44, "read_data": 44, "central": [44, 1151, 1899, 1901], "loadplan": [44, 1866], "storage_data": 44, "loadplann": [44, 1866], "load_byt": 44, "bytesio": [44, 1205, 1208, 1269, 1747, 1909, 1916], "resolve_tensor": 44, "storagelay": 44, "is_coordin": 44, "set_up_storage_writ": 44, "write_data": 44, "recover": 44, "writeresult": 44, "saveplan": [44, 1866], "saveplann": [44, 1866], "resolve_data": 44, "writeitem": [44, 1866], "tensor_data": 44, "set_up_plann": 44, "create_local_plan": 44, "create_global_plan": 44, "commit_tensor": 44, "defaultloadplann": [44, 1866], "requit": 44, "intrincaci": 44, "renameplann": 44, "original_state_dict": 44, "foo_": [44, 1128], "v": [44, 56, 68, 72, 488, 543, 894, 901, 903, 904, 905, 936, 1127, 1137, 1139, 1195, 1211, 1233, 1237, 1261, 1265, 1270, 1436, 1478, 1479, 1520, 1565, 1579, 1649, 1654, 1683, 1685, 1705, 1738, 1797, 1801, 1816, 1817, 1858, 1866, 1868, 1869, 1870, 1871, 1881, 1891, 1899, 1908, 1913, 1925, 1930], "read_item": 44, "dest_index": 44, "fqn": [44, 47, 1935], "metamodelmateri": 44, "defaultsaveplann": [44, 1866], "empty_lik": [44, 1869, 1873, 1884, 1886, 1911, 1925], "global_plan": 44, "finish_plan": 44, "central_plan": 44, "readitem": [44, 1866], "planner_data": 44, "loaditemtyp": 44, "metadataindex": 44, "dest_offset": 44, "storage_index": 44, "storage_offset": [44, 141, 520, 616, 877, 1867, 1869, 1911], "tandem": 44, "fp16planner": 44, "write_item": 44, "writeitemtyp": 44, "byte_io": 44, "itertool": [44, 48, 938, 951], "islic": 44, "ddploadbalancingplann": 44, "all_plan": 44, "saveextradataplann": 44, "merged_data": 44, "new_plan": 44, "idempot": [44, 1921, 1923], "hi": [44, 1400, 1401, 1868, 1870, 1899], "late": [44, 59], "tensorwritedata": 44, "nonetyp": [44, 1869, 1871], "single_file_per_rank": 44, "sync_fil": 44, "thread_count": 44, "per_thread_copy_ahead": 44, "10000000": 44, "atom": [44, 59, 72, 1872], "distributedtensor": [44, 47], "flatten_state_dict": 44, "flatten_sharded_tensor": 44, "dedup_replicated_tensor": 44, "lookup_object": 44, "transform_object": 44, "lookup_tensor": 44, "transform_tensor": 44, "fault": [45, 50, 58, 59, 1124], "toler": [45, 50, 58, 59, 72, 693, 907, 908, 1187, 1213, 1214, 1252, 1255, 1270, 1668, 1675, 1868, 1932], "quickstart": 45, "agent": [45, 51, 52, 53, 56, 58, 60, 61, 1921], "expir": 45, "kubernet": 45, "distributedoptim": [46, 1610, 1866, 1921, 1922], "rref": [46, 1610, 1866, 1871, 1914, 1922], "optimizer_class": 46, "params_rref": 46, "get_gradi": [46, 1911, 1921, 1922], "multithread": [46, 919, 1894], "dist_autograd": [46, 1610, 1921, 1922], "rpc": [46, 71, 1610, 1866, 1871, 1914, 1922, 1923], "context_id": [46, 1610, 1921, 1922], "rref1": [46, 1921, 1922], "worker1": [46, 71, 1610, 1921, 1922], "rref2": [46, 1921, 1922], "to_her": [46, 1610, 1911, 1921, 1922, 1923], "dist_optim": [46, 1610, 1922], "postlocalsgdoptim": [46, 1866], "afer": 46, "modelaverag": 46, "localsgd": 46, "model_averag": 46, "post_localsgd_hook": 46, "postlocalsgdst": 46, "subgroup": 46, "start_localsgd_it": 46, "warmup_step": 46, "local_optim": 46, "periodicmodelaverag": 46, "intra": [46, 1893, 1895, 1914], "unnecessari": [46, 1650, 1871, 1891, 1894, 1896, 1907, 1913, 1929], "parameters_as_bucket_view": 46, "overlap_with_ddp": 46, "consumpt": [46, 68, 1655, 1925, 1930], "intact": [46, 1921], "ddp_zero_hook": 46, "disjointli": 46, "trail": [46, 1645, 1647, 1886, 1889, 1892, 1896], "wari": 46, "static_graph": [46, 1610, 1895], "third": [46, 48, 1070, 1071, 1287, 1338, 1345, 1360, 1363, 1425, 1697, 1866, 1868, 1894, 1897, 1902, 1913, 1915], "add_param_group": [46, 1622, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "param_group": [46, 64, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1682, 1683, 1684, 1685, 1686, 1693, 1696], "frozen": [46, 1202, 1207, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1872, 1908], "trainabl": [46, 1017, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1896], "consolidate_state_dict": 46, "consolid": [46, 64, 1914], "pertain": 46, "preced": [46, 50, 64, 679, 1605, 1697, 1836, 1872, 1893, 1912, 1916], "dtensor": 47, "rowwis": 47, "colwis": 47, "pairwis": [47, 48, 1390, 1439, 1478], "parallelize_modul": [47, 1866], "device_mesh": 47, "parallelize_plan": 47, "tp_mesh_dim": 47, "sub_modul": 47, "parallelstyl": 47, "devicemesh": 47, "mesh": [47, 1930], "prepar": [47, 72, 796, 838, 840, 856, 858, 860, 861, 862, 1137, 1207, 1872, 1909, 1934, 1935], "pairwiseparallel": [47, 1866], "rowwiseparallel": [47, 1866], "_prepare_input": 47, "make_input_shard_1d_last_dim": [47, 1866], "_prepare_output": 47, "make_output_tensor": [47, 1866], "colwiseparallel": [47, 1866], "make_input_replicate_1d": [47, 1866], "make_sharded_output_tensor": 47, "megatron": 47, "lm": 47, "arxiv": [47, 48, 1400, 1448, 1449, 1476, 1654, 1705, 1817, 1891], "1909": [47, 877], "08053": 47, "multihead": [47, 1436, 1475], "mlp": [47, 1601, 1916], "sequenceparallel": [47, 1866], "pdf": [47, 1353, 1448, 1780, 1891], "2205": 47, "05198": 47, "expectedli": 47, "make_input_reshard_repl": [47, 1866], "make_input_shard_1d": [47, 1866], "make_output_replicate_1d": [47, 1866], "make_output_reshard_tensor": [47, 1866], "make_output_shard_1d": [47, 1866], "multiheadattent": [47, 1473, 1475, 1477, 1916], "multihead_attent": 47, "swap": [47, 72, 616, 787, 788, 789, 792, 796, 863, 1287, 1478, 1479, 1595, 1596, 1836, 1869, 1872, 1894, 1916, 1925, 1927, 1934], "multihead_attention_tp": 47, "tensorparallelmultiheadattent": [47, 1866], "embed_dim": [47, 734, 1436], "num_head": [47, 734, 1436, 1869], "add_bias_kv": [47, 734, 1436], "add_zero_attn": [47, 734, 1436, 1869], "kdim": [47, 734, 1436], "vdim": [47, 734, 1436], "batch_first": [47, 733, 734, 759, 1382, 1400, 1436, 1445, 1446, 1473, 1475, 1477, 1644, 1646, 1647, 1649, 1869, 1898], "tp_size": 47, "self_attent": 47, "head": [47, 734, 1338, 1436, 1473, 1475, 1477], "fullyshardeddataparallel": [47, 1866], "enable_2d_with_fsdp": [47, 1866], "parameteriz": 48, "tensorflow": [48, 1683, 1891, 1930], "backpropag": [48, 908, 1684, 1715, 1898], "surrog": 48, "likelihood": [48, 1338, 1384, 1437, 1444, 1526, 1564, 1572], "reinforc": [48, 1459, 1582], "polici": [48, 50, 52, 64, 1691, 1697], "reparameter": [48, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1641, 1642, 1654], "trick": [48, 903, 1347, 1531, 1891, 1899, 1901], "autoencod": 48, "whilst": [48, 1894], "densiti": [48, 303, 1159, 1160, 1780, 1869, 1926], "log_prob": [48, 1338, 1353, 1513, 1869], "theta": [48, 1494, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1869], "pi": [48, 176, 379, 697, 930, 1155, 1156, 1249, 1380, 1444, 1527, 1572, 1689, 1690, 1709, 1771, 1772, 1775, 1776, 1777, 1778, 1812, 1870, 1871, 1913, 1926], "reward": 48, "ascent": 48, "prob": [48, 1869], "policy_network": 48, "next_stat": 48, "rsampl": 48, "parameter": [48, 379, 455, 1204, 1887, 1925], "has_rsampl": 48, "batch_shap": 48, "event_shap": 48, "validate_arg": 48, "arg_constraint": 48, "cdf": 48, "cumul": [48, 1050, 1051, 1052, 1053, 1054, 1277, 1348, 1349, 1350, 1380, 1403, 1404, 1405, 1469, 1527], "mass": 48, "enumerate_support": 48, "discret": [48, 63, 482, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1101, 1106, 1108, 1531, 1780, 1930, 1933], "cardin": [48, 1299], "univari": 48, "singleton": [48, 256, 1402, 1850, 1892], "cartesian": [48, 938, 1299, 1709], "_instanc": 48, "icdf": 48, "perplex": 48, "sample_shap": 48, "sample_n": 48, "set_default_validate_arg": 48, "mimic": [48, 1697], "stddev": 48, "varianc": [48, 970, 1348, 1349, 1350, 1375, 1384, 1393, 1394, 1395, 1403, 1404, 1405, 1412, 1413, 1414, 1469, 1522, 1526, 1682, 1683, 1719, 1728, 1729, 1853, 1854, 1889, 1902], "exp_famili": 48, "famili": 48, "p_": [48, 942, 1289, 1685], "langl": 48, "rangl": 48, "denot": [48, 72, 970, 1218, 1237, 1243, 1256, 1266, 1358, 1359, 1396, 1619, 1622, 1685, 1798, 1799, 1800, 1802, 1803, 1855, 1899, 1919, 1922, 1925], "carrier": 48, "analyt": [48, 907, 908, 1520, 1925], "bregman": 48, "courtesi": 48, "frank": 48, "nielsen": 48, "richard": 48, "nock": 48, "logit": [48, 393, 1347, 1366, 1502, 1512, 1531, 1869, 1911, 1926], "70": [48, 1256, 1715, 1886], "lower_bound": 48, "upper_bound": 48, "has_enumerate_support": 48, "param_shap": 48, "concentration1": 48, "concentration0": 48, "concentr": 48, "1046": 48, "1st": [48, 1892], "2nd": [48, 616, 1438, 1464, 1567, 1892], "greaterthan": 48, "total_count": 48, "71": 48, "trial": 48, "integergreaterthan": 48, "ldot": [48, 1229, 1237, 1268, 1284, 1299, 1402, 1423, 1424, 1425, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "unnorm": [48, 1366, 1502, 1512, 1531], "likewis": [48, 1836], "25": [48, 496, 585, 586, 587, 940, 1159, 1265, 1270, 1376, 1433, 1435, 1438, 1601, 1610, 1647, 1649, 1675, 1697, 1716, 1852, 1868, 1925, 1926], "independentconstraint": 48, "simplex": 48, "loc": [48, 1269], "lorentz": 48, "3214": 48, "width": [48, 778, 784, 857, 1158, 1159, 1160, 1344, 1345, 1359, 1360, 1362, 1363, 1399, 1424, 1425, 1437, 1464, 1482, 1540, 1598, 1885, 1925], "df": 48, "chi": 48, "continuous_bernoulli": 48, "lim": [48, 1195], "499": 48, "501": 48, "2538": [48, 1229], "pervas": 48, "loaiza": 48, "ganem": 48, "cunningham": 48, "jp": 48, "1907": 48, "06845": 48, "8954": 48, "greaterthaneq": 48, "df1": 48, "df2": 48, "fisher": 48, "snedecor": 48, "2453": 48, "degre": [48, 970, 1048, 1055, 1198, 1235, 1236, 1430, 1439, 1478, 1610, 1723, 1743, 1810, 1811, 1853, 1854, 1869, 1899, 1911, 1925], "freedom": [48, 970, 1810, 1811, 1853, 1854, 1899], "0124": 48, "half_cauchi": 48, "half_norm": 48, "base_distribut": 48, "reinterpreted_batch_ndim": 48, "diagon": [48, 69, 227, 262, 594, 595, 596, 597, 931, 966, 970, 1058, 1059, 1060, 1062, 1071, 1084, 1132, 1133, 1143, 1227, 1239, 1241, 1244, 1256, 1260, 1569, 1579, 1796, 1835, 1839, 1840, 1841, 1842, 1843, 1869, 1896, 1911, 1929], "multivari": [48, 1926], "multivariate_norm": 48, "mvn": 48, "scale_tril": 48, "diag": [48, 70, 1131, 1132, 1133, 1233, 1234, 1261, 1705, 1796, 1816, 1817, 1869, 1911], "diagn": 48, "1729": [48, 1902], "lkj_choleski": 48, "lkj": 48, "matric": [48, 262, 685, 688, 920, 932, 933, 942, 943, 944, 945, 1059, 1143, 1218, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1270, 1278, 1287, 1289, 1302, 1381, 1439, 1494, 1528, 1617, 1622, 1703, 1705, 1715, 1764, 1790, 1793, 1794, 1816, 1817, 1839, 1840, 1842, 1869, 1884, 1899, 1905, 1925, 1931], "eta": [48, 1669, 1671, 1684], "proport": [48, 1398, 1399, 1436, 1477], "det": [48, 1235, 1236, 1257, 1278, 1869, 1911], "lkjcorr": 48, "onion": 48, "3x3": [48, 1054, 1837], "3516": 48, "9361": 48, "1899": [48, 1300], "4748": 48, "8593": 48, "vine": 48, "2009": [48, 1705, 1817], "lewandowski": 48, "dorota": 48, "kurowicka": 48, "harri": [48, 1780], "joe": 48, "journal": [48, 1722], "1016": 48, "jmva": 48, "04": [48, 1114, 1275, 1773, 1780], "008": 48, "corrcholeski": 48, "log_norm": [48, 1911], "lowrank_multivariate_norm": 48, "cov_factor": 48, "cov_diag": 48, "covari": [48, 933, 966, 970, 1348, 1349, 1350, 1469, 1705], "covariance_matrix": 48, "2102": 48, "5429": [48, 1839], "woodburi": 48, "lemma": 48, "capacit": 48, "precision_matrix": 48, "mixture_same_famili": 48, "mixture_distribut": 48, "component_distribut": 48, "rightmost": [48, 933, 1159, 1160, 1871], "gaussian": [48, 1380, 1384, 1459, 1526, 1527, 1582, 1779, 1926], "gmm": 48, "bivari": 48, "innermost": [48, 72, 1151, 1160, 1751], "1338": 48, "mathbf": [48, 1218, 1618, 1651, 1654, 1684], "sigma": [48, 176, 379, 759, 1347, 1381, 1382, 1383, 1400, 1401, 1459, 1460, 1528, 1582, 1618, 1651, 1774, 1810, 1811, 1853, 1854, 1869], "triangular": [48, 943, 944, 945, 1227, 1228, 1234, 1236, 1244, 1245, 1252, 1255, 1256, 1258, 1260, 1569, 1691, 1715, 1839, 1840, 1841, 1842, 1843], "positivedefinit": 48, "lowercholeski": 48, "negative_binomi": 48, "halfopeninterv": 48, "mu": [48, 379, 1683, 1685], "one_hot_categor": 48, "onehot": 48, "5623": 48, "nonneg": [48, 1479, 1705, 1817, 1926], "pmf": 48, "mathrm": [48, 922, 1235, 1236, 1237, 1238, 1249, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1402, 1439, 1444, 1469, 1617, 1672, 1673, 1674, 1684, 1719, 1891, 1926], "relaxed_bernoulli": 48, "temperatur": [48, 1531, 1866], "parametr": [48, 1127, 1619, 1626, 1651, 1652, 1654, 1887, 1896], "reparametriz": 48, "99": [48, 1209, 1683, 1868], "2951": [48, 1297], "3442": 48, "8918": 48, "9021": 48, "maddison": 48, "2017": [48, 1473, 1475, 1477, 1797, 1908], "reparametr": [48, 1531, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1634, 1654], "jang": 48, "relaxed_categor": 48, "1294": [48, 943], "2324": [48, 1198, 1430], "3859": 48, "2523": 48, "student": 48, "transformed_distribut": 48, "composit": [48, 69, 1131, 1245, 1617, 1868, 1871, 1897, 1902, 1909], "basedistribut": 48, "dx": [48, 1054, 1346, 1837, 1869, 1896, 1897, 1926], "dy": 48, "logist": [48, 1459, 1462, 1582, 1926], "sigmoidtransform": 48, "affinetransform": 48, "invert": [48, 72, 945, 1189, 1229, 1238, 1239, 1245, 1251, 1258, 1260, 1263, 1264, 1278, 1426, 1427, 1428, 1839, 1869, 1905, 1921], "3418": 48, "upper": [48, 184, 185, 186, 593, 794, 931, 936, 943, 944, 945, 947, 1085, 1086, 1158, 1159, 1227, 1228, 1234, 1236, 1244, 1245, 1256, 1260, 1448, 1569, 1577, 1578, 1691, 1697, 1715, 1730, 1751, 1839, 1842, 1843, 1869, 1889, 1911, 1926, 1932], "von_mis": 48, "circular": [48, 1358, 1359, 1360, 1406, 1407, 1408, 1567], "von": 48, "mise": 48, "unconstrain": [48, 1622], "angl": [48, 754, 883, 1055, 1278, 1416, 1709, 1723, 1767, 1866, 1869, 1911, 1925], "9777": 48, "radian": [48, 697, 883, 1055, 1723, 1869, 1911], "nichola": 48, "1979": 48, "152": [48, 616], "157": 48, "4784": [48, 1302], "symmetr": [48, 801, 819, 921, 930, 943, 944, 945, 1092, 1093, 1094, 1099, 1101, 1105, 1106, 1108, 1155, 1156, 1217, 1227, 1228, 1233, 1234, 1236, 1240, 1241, 1242, 1249, 1252, 1255, 1261, 1270, 1617, 1622, 1697, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1916, 1919], "x_ij": 48, "wu": [48, 1270], "chu": 48, "2018": [48, 1270, 1713], "sawyer": 48, "2007": 48, "anderson": 48, "2003": 48, "odel": 48, "feiveson": 48, "1966": 48, "samplecovari": 48, "jasa": 48, "61": 48, "313": 48, "199": 48, "203": [48, 616], "ku": 48, "bloomfield": 48, "2010": [48, 1889], "ox": 48, "max_try_correct": 48, "bartlett": [48, 921], "singular": [48, 1229, 1243, 1244, 1250, 1252, 1254, 1255, 1261, 1262, 1270, 1278, 1287, 1618, 1622, 1705, 1816, 1817, 1905], "kl_diverg": 48, "kullback": [48, 1396, 1541], "leibler": [48, 1396, 1541], "register_kl": 48, "type_p": 48, "type_q": 48, "kl_normal_norm": 48, "ambigu": [48, 72, 1183, 1361, 1362, 1363, 1377, 1426, 1427, 1428, 1482, 1871], "runtimewarn": 48, "basep": 48, "derivedq": 48, "kl_version1": 48, "derivedp": 48, "baseq": 48, "kl_version2": 48, "tie": 48, "abstransform": 48, "event_dim": 48, "affin": [48, 473, 474, 475, 476, 477, 748, 750, 751, 752, 801, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1469, 1494, 1894, 1902], "cattransform": 48, "tseq": 48, "functor": [48, 1014, 1015], "submatrix": 48, "t0": [48, 1151, 1669, 1870], "exptransform": 48, "identity_transform": 48, "composetransform": 48, "corrcholeskytransform": 48, "uncontrain": 48, "euclidean": [48, 940, 1565], "x_i": [48, 69, 947, 1050, 1051, 1052, 1053, 1266, 1273, 1420, 1439, 1463, 1465, 1478, 1549, 1585, 1712, 1795, 1810, 1811, 1837, 1853, 1854, 1855, 1926], "stickbreakingtransform": 48, "r_i": 48, "tanh": [48, 576, 759, 764, 794, 884, 1380, 1382, 1383, 1400, 1401, 1429, 1445, 1447, 1471, 1527, 1559, 1591, 1867, 1869, 1884, 1885, 1889, 1911, 1918, 1925], "unsign": [48, 1919, 1928, 1931, 1932], "z_i": 48, "s_i": 48, "y_i": [48, 947, 1050, 1051, 1052, 1053, 1266, 1273, 1478, 1837, 1855, 1899], "sqrt": [48, 72, 379, 548, 672, 673, 759, 966, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1164, 1217, 1299, 1348, 1349, 1350, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1380, 1382, 1383, 1385, 1393, 1394, 1395, 1398, 1399, 1400, 1401, 1402, 1415, 1417, 1445, 1447, 1469, 1527, 1579, 1622, 1670, 1671, 1672, 1673, 1676, 1682, 1683, 1719, 1746, 1779, 1810, 1811, 1867, 1869, 1884, 1889, 1890, 1891, 1911, 1925, 1926, 1932], "cumulativedistributiontransform": 48, "copula": 48, "base_dist": 48, "independenttransform": 48, "base_transform": 48, "log_abs_det_jacobian": 48, "lowercholeskytransform": 48, "positivedefinitetransform": 48, "powertransform": 48, "expon": [48, 270, 271, 282, 469, 470, 1114, 1121, 1221, 1251, 1338, 1418, 1565, 1712, 1722, 1867, 1869, 1928, 1931], "reshapetransform": 48, "in_shap": 48, "out_shap": 48, "softplustransform": 48, "tanhtransform": 48, "softmaxtransform": 48, "biject": 48, "hmc": 48, "stacktransform": 48, "stick": 48, "primarili": [48, 71, 814, 815, 816, 822, 1330, 1881, 1916], "_call": 48, "_invers": 48, "codomain": [48, 1891], "iff": [48, 1436], "weaker": [48, 1894], "pseudoinvers": [48, 1238, 1255, 1263], "monoton": [48, 1429, 1559, 1751], "forward_shap": 48, "inverse_shap": 48, "corr_choleski": 48, "greater_than": 48, "greater_than_eq": 48, "integer_interv": 48, "less_than": 48, "lower_choleski": 48, "lower_triangular": 48, "nonnegative_integ": 48, "one_hot": [48, 1869, 1911], "positive_integ": 48, "positive_semidefinit": 48, "positive_definit": 48, "real_vector": 48, "unit_interv": 48, "is_discret": 48, "constrain": [48, 1466, 1871, 1902], "_cat": 48, "dependent_properti": 48, "_dependentproperti": 48, "_greaterthan": 48, "_greaterthaneq": 48, "_independentconstraint": 48, "_integerinterv": 48, "_interv": 48, "half_open_interv": 48, "_halfopeninterv": 48, "_lessthan": 48, "_multinomi": 48, "_stack": [48, 1911], "constraintregistri": 48, "biject_to": 48, "transform_to": 48, "overparameter": 48, "rotat": [48, 1743, 1816], "hamiltonian": 48, "mont": 48, "carlo": 48, "potential_energi": 48, "cheap": [48, 1338], "svi": 48, "fewer": [48, 69, 692, 694, 695, 698, 946, 1218, 1219, 1285, 1295, 1297, 1298, 1300, 1303, 1325, 1328, 1384, 1511, 1713, 1797, 1810, 1811, 1815, 1833, 1853, 1854, 1877, 1892, 1907, 1932], "my_constraint": 48, "my_transform": 48, "myconstraintclass": 48, "my_factori": 48, "mytransform": 48, "param1": [48, 1902], "param2": [48, 1902], "constraint_registri": 48, "my_registri": 48, "construct_transform": 48, "myconstraint": 48, "from_dlpack": [49, 879, 1866], "ext_tensor": [49, 1122], "extern": [49, 975, 1122, 1213, 1881, 1893, 1894, 1905, 1909], "immut": [49, 1122, 1871], "__dlpack__": [49, 1122], "capsul": [49, 879, 1122], "ndarrai": [49, 459, 878, 1122, 1123, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1909, 1930, 1932], "pycapsul": [49, 1122], "to_dlpack": [49, 1122, 1866], "dltensor": [49, 1122], "t3": [49, 1122, 1922], "legaci": [49, 60, 1531, 1915, 1928], "idiomat": 49, "plane": [50, 59, 737, 738, 739, 740, 741, 742, 765, 766, 767, 768, 771, 772, 773, 781, 782, 1059, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1345, 1358, 1359, 1360, 1361, 1362, 1363, 1378, 1379, 1398, 1399, 1402, 1418, 1423, 1424, 1425, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1524, 1525, 1547, 1550, 1551, 1553, 1554, 1555, 1654, 1720, 1721, 1743], "monitor": [50, 60, 61, 974, 1699, 1866, 1894, 1900], "unhealthi": 50, "tear": 50, "decentr": 50, "elasticag": 50, "quad": [50, 1346, 1347, 1366, 1397, 1421, 1437, 1479], "group_result": 50, "is_fail": [50, 51], "exit_cod": 50, "get_worker_group": 50, "workergroup": [50, 60], "mutabl": [50, 1213, 1868, 1913, 1930], "implementor": 50, "defens": 50, "retri": [50, 52, 61, 64, 1028, 1921, 1923], "max_restart": [50, 51, 60], "runresult": 50, "workerspec": [50, 51, 60, 61], "local_world_s": [50, 51, 60], "rdzv_handler": [50, 51, 59], "monitor_interv": [50, 51], "local_addr": [50, 59], "tee": [50, 57], "blueprint": 50, "spec": [50, 51, 61, 87, 792, 793, 818, 819, 820, 823, 824, 825, 1918], "homogen": [50, 60], "rendezvoushandl": [50, 51, 59, 60], "rdzv": [50, 58, 60], "consol": [50, 53, 56, 57, 60, 1930], "get_entrypoint_nam": 50, "__qualname__": 50, "workerst": 50, "unknown": [50, 1612, 1613, 1923], "unrecover": 50, "termin": [50, 59, 61, 72, 1675, 1883, 1921], "uncaught": [50, 52], "unhandl": 50, "recov": [50, 894, 1092, 1257, 1289, 1610, 1643, 1812, 1890, 1898, 1899, 1917], "is_run": 50, "role_rank": [50, 60], "role_world_s": [50, 60], "pid": [50, 52, 60, 61, 1469, 1898, 1915], "local_elastic_ag": 50, "localelasticag": [50, 51, 61], "start_method": [50, 51, 57, 61, 1883], "exit_barrier_timeout": 50, "log_dir": [50, 57, 1881, 1930], "inter": [50, 52, 1148, 1762, 1893, 1895, 1914, 1921], "advis": [50, 543, 616, 864, 1904], "pipe": [50, 61, 1866, 1921], "torchelastic_enable_file_tim": 50, "torchelastic_timer_fil": 50, "shared_queu": 50, "get_context": [50, 61, 1904], "nproc_per_process": 50, "foobar": [50, 52, 56, 57], "other_param": [50, 61], "usr": [50, 57, 59, 1894], "simpleelasticag": 50, "scaffold": 50, "_assign_worker_rank": 50, "group_world_s": 50, "_exit_barri": 50, "_initialize_work": 50, "worker_group": 50, "fresh": [50, 1062, 1754, 1785, 1865], "start_work": 50, "_stop_work": 50, "optimist": 50, "deleg": 50, "_monitor_work": 50, "_rendezv": 50, "_restart_work": 50, "_shutdown": 50, "death_sig": 50, "sigterm": 50, "_start_work": 50, "gracefulli": [50, 60, 69, 1228, 1897], "meaningless": 50, "intention": [50, 1068, 1855, 1900, 1921], "ship": [51, 1128, 1893, 1921], "programmat": [51, 72, 1902], "my_launch": 51, "argv": [51, 62], "trainer_entrypoint_fn": 51, "fn_arg": 51, "run_result": 51, "myrendezvoushandl": 51, "elastic_ag": 51, "metrichandl": [51, 56], "mymetrichandl": 51, "metric_data": [51, 56], "metricdata": 51, "sink": [51, 56, 1881], "eventhandl": 51, "cloudwatch": 51, "nulleventhandl": 51, "myeventhandl": 51, "start_process": [52, 57, 1883], "torchelastic_error_fil": 52, "error_handl": 52, "sugar": [52, 1870], "get_error_handl": 52, "childfailederror": 52, "get_first_failur": 52, "dump_error_fil": 52, "error_fil": [52, 57], "exitcod": [52, 60], "nanni": 52, "diagnost": [52, 73, 78, 79, 80, 81, 82, 83, 84, 85, 1664, 1866, 1868], "torchelastic_ag": 52, "trainer_0": 52, "trainer_1": 52, "trainer_n": 52, "errorhandl": 52, "record_except": 52, "processfailur": 52, "test_ev": 53, "eventsourc": 53, "get_logging_handl": 53, "millisecond": [53, 56, 974, 1881], "eventmetadatavalu": 53, "telemetri": 56, "timeseri": 56, "metric_group": 56, "metric_nam": 56, "sensibl": 56, "my_modul": [56, 64, 72, 1868, 1913], "nullmetricshandl": 56, "consolemetricshandl": 56, "my_method": 56, "put_metr": 56, "calculate_lat": 56, "succinctli": 56, "baz": [56, 72, 853, 1913, 1932], "leaf_modul": 56, "classnam": [56, 1871], "threw": 56, "my_app": 56, "consolemetrichandl": 56, "stdout": [56, 57, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1909], "stdoutmetrichandl": 56, "1574213883": 56, "4182858": 56, "my_metr": 56, "1574213940": 56, "5237644": 56, "nullmetrichandl": 56, "class_nam": [56, 72], "def_nam": 56, "metric_valu": 56, "metric_group_nam": 56, "popen": 57, "stderr": [57, 1865, 1880], "err": 57, "echo": 57, "hello": [57, 69, 1870, 1909, 1913], "pcontext": 57, "multiprocesscontext": 57, "subprocesscontext": 57, "keyset": 57, "bitmask": 57, "mask": [57, 401, 402, 403, 404, 405, 543, 734, 907, 908, 1291, 1342, 1353, 1375, 1436, 1473, 1474, 1475, 1476, 1477, 1522, 1579, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1686, 1866, 1869, 1884, 1885, 1925], "bar0": 57, "bar1": 57, "file1": 57, "file2": 57, "caution": 57, "short": [57, 72, 733, 762, 1071, 1195, 1353, 1400, 1401, 1513, 1666, 1764, 1812, 1870, 1884, 1891, 1892, 1902, 1921, 1927, 1928, 1931], "ing": 57, "cmd": [57, 60], "forkserv": [57, 1610, 1883, 1904], "tee_stdout": 57, "tee_stderr": 57, "processcontext": [57, 1883], "superset": [57, 60], "runprocsresult": 57, "num_nod": [58, 60], "trainers_per_nod": 58, "num_allowed_failur": 58, "job_id": [58, 59, 60], "endpoint": [58, 59, 60], "host_node_addr": [58, 60], "min_siz": [58, 60], "num_allowed_failures_or_membership_chang": 58, "node1": [58, 60], "29400": [58, 60], "sidecar": [58, 59], "agre": [59, 1256, 1923], "resum": [59, 1691, 1697, 1699, 1921, 1923, 1930], "retryabl": 59, "lose": [59, 62, 64, 194, 211, 1885], "train_loop": [59, 861], "arriv": [59, 60, 1921, 1923], "dynamicrendezvoushandl": 59, "rendezvousbackend": 59, "c10drendezvousbackend": 59, "etcdrendezvousbackend": 59, "supersed": 59, "etcdrendezvoushandl": 59, "my_run_id": 59, "from_backend": 59, "run_id": [59, 60], "min_nod": 59, "max_nod": 59, "rendezvousparamet": 59, "admit": [59, 60, 1894], "get_as_bool": 59, "get_as_int": 59, "rendezvoushandlerregistri": 59, "create_handl": 59, "creator": [59, 1891, 1921, 1923], "get_run_id": 59, "is_clos": 59, "set_clos": 59, "next_rendezv": 59, "rendezvousclosederror": 59, "rendezvousconnectionerror": 59, "rendezvousstateerror": 59, "rendezvoustimeouterror": 59, "num_nodes_wait": 59, "shutdown": [59, 1921, 1922], "rendezvouserror": 59, "dynamic_rendezv": 59, "join_timeout": 59, "600": 59, "last_call_timeout": 59, "close_timeout": 59, "rendezvoustimeout": 59, "get_stat": [59, 91], "fenc": 59, "set_stat": [59, 91], "condition": [59, 1761], "last_cal": 59, "heartbeat": 59, "keep_al": 59, "c10d_rendezvous_backend": 59, "create_backend": 59, "store_typ": 59, "tcp": [59, 60, 1921], "read_timeout": 59, "60": [59, 61, 1384, 1701, 1827, 1832, 1881, 1921], "is_host": 59, "cname": 59, "fqdn": [59, 60], "etcd_rendezvous_backend": 59, "ssl_cert": 59, "ssl": 59, "certif": 59, "ssl_cert_kei": 59, "ca_cert": 59, "rool": 59, "key_prefix": 59, "ttl": 59, "hour": 59, "etcd_rendezv": 59, "rdzv_impl": 59, "etcdrendezv": 59, "etcd_address": 59, "min_work": 59, "max_work": 59, "noqa": 59, "w605": 59, "2379": [59, 1295], "etcd_prefix": 59, "etcdstor": 59, "etcd_stor": 59, "etcd_client": 59, "etcd_store_prefix": 59, "piggyback": 59, "num": [59, 744, 745, 759, 1320, 1382, 1385, 1400, 1436, 1445, 1473, 1904], "lookuperror": 59, "override_timeout": 59, "etcdserv": 59, "cumbersom": [59, 1871], "etcd_serv": 59, "data_dir": 59, "v3": [59, 60], "substitut": [59, 72, 1210, 1891, 1928], "torchelastic_etcd_binary_path": 59, "get_client": 59, "etcd_binary_path": 59, "migrat": [60, 65, 1299, 1654, 1919], "train_script": 60, "aforment": 60, "suffic": [60, 72], "compliant": [60, 62], "num_train": 60, "wors": [60, 1851], "port_k": 60, "etcd": 60, "v2": [60, 1266, 1704, 1865], "revis": 60, "localworkergroup": 60, "rdzv_id": 60, "rdzv_backend": [60, 62], "rdzv_endpoint": [60, 62], "max_nnod": 60, "torchelastic_restart_count": 60, "torchelastic_max_restart": 60, "python_exec": 60, "gang": 60, "departur": 60, "surviv": 60, "kill": [60, 61, 1883, 1898], "load_checkpoint": [60, 62], "checkpoint_path": [60, 62], "dataset": [60, 62, 797, 1338, 1347, 1396, 1866, 1898, 1901, 1904, 1908, 1912, 1916, 1917, 1930], "train_step": 60, "should_checkpoint": 60, "save_checkpoint": [60, 62], "acquir": [61, 72, 1902, 1923, 1925], "deadlin": 61, "message_queu": 61, "localtimerserv": 61, "max_interv": 61, "trainer_func": 61, "localtimercli": 61, "expiri": 61, "timer_cli": 61, "countdown": 61, "timefram": [61, 1921], "elig": [61, 1923], "reap": 61, "timerserv": 61, "mp_queue": 61, "daemon": [61, 1883], "filetimerserv": 61, "file_path": 61, "log_ev": [61, 1881], "filetimercli": 61, "fifo": 61, "watchdog": 61, "filetimerrequest": 61, "sigkil": 61, "named_pip": 61, "mkfifo": 61, "timercli": 61, "timerrequest": 61, "scope_id": 61, "expiration_tim": 61, "acquisit": 61, "request_queu": 61, "entiti": [61, 72], "clear_tim": 61, "get_expired_tim": 61, "register_tim": 61, "timer_request": 61, "use_env": 62, "expositori": 62, "worst": [62, 1896], "total_num_epoch": 62, "sharding_strategi": 64, "cpu_offload": 64, "auto_wrap_polici": 64, "backward_prefetch": 64, "backwardprefetch": [64, 1866], "backward_pr": [64, 1198, 1430], "mixed_precis": [64, 1610], "ignored_modul": 64, "param_init_fn": 64, "sync_module_st": 64, "forward_prefetch": 64, "limit_all_gath": 64, "use_orig_param": 64, "ignored_st": 64, "deepspe": 64, "shorten": 64, "sharded_modul": 64, "0001": [64, 72, 1052, 1242, 1418, 1547, 1669, 1699, 1869, 1912], "stale": 64, "dev_id": 64, "no_sync": [64, 1610], "offload": 64, "ping": 64, "77724": 64, "summon_full_param": 64, "shardingstrategi": [64, 1866], "shard_grad_op": 64, "unshard": 64, "full_shard": 64, "with_grad": 64, "reacquir": 64, "hybrid_shard": 64, "cpuoffload": [64, 1866], "_fsdppolici": 64, "modulewrappolici": 64, "nonwrapped_numel": 64, "subtre": 64, "size_based_auto_wrap_polici": 64, "exce": [64, 1275, 1894, 1904], "100m": 64, "numel": [64, 436, 445, 950, 970, 1102, 1183, 1869, 1884, 1891, 1911, 1925], "custom_auto_wrap_polici": 64, "min_num_param": 64, "1e8": 64, "my_auto_wrap_polici": 64, "functool": [64, 67, 840, 1896, 1932], "1e5": 64, "mixedprecis": [64, 1866], "is_meta": [64, 1911], "reset_paramet": 64, "torchdistx": 64, "deferred_init": 64, "materialize_modul": 64, "my_init_fn": 64, "fsdp_model": 64, "fullstatedictconfig": 64, "flight": 64, "named_paramet": [64, 66, 68, 1127, 1198, 1202, 1430, 1902, 1907], "flatparamet": 64, "unifi": [64, 1866, 1885], "norm_typ": [64, 744, 745, 1373, 1374, 1398, 1399, 1520, 1521, 1550, 1551, 1614, 1869], "infin": [64, 968, 1188, 1190, 1192, 1193, 1324, 1346, 1423, 1424, 1425, 1553, 1554, 1555, 1614, 1674, 1784, 1795, 1925, 1926], "no_shard": 64, "flatten_sharded_optim_state_dict": 64, "sharded_optim_state_dict": 64, "shard_full_optim_state_dict": 64, "unflatten": [64, 1869, 1884, 1885, 1911, 1929], "fsdp_modul": 64, "root_onli": 64, "full_optim_state_dict": 64, "optim_input": 64, "rank0_onli": 64, "convent": [64, 72, 337, 941, 1071, 1089, 1091, 1115, 1137, 1348, 1349, 1350, 1393, 1394, 1395, 1469, 1744, 1747, 1845, 1865, 1880, 1886, 1891, 1899, 1902, 1907], "get_state_dict_typ": 64, "state_dict_typ": 64, "statedictset": 64, "optim_state_dict": 64, "differen": 64, "named_buff": [64, 1198, 1430, 1902, 1907], "oom": [64, 1898], "unflattend": 64, "statedicttyp": 64, "fulloptimstatedictconfig": 64, "set_state_dict_typ": 64, "full_state_dict": 64, "save_a_checkpoint": 64, "load_a_checkpoint": 64, "optim_state_dict_to_load": 64, "is_named_optim": 64, "load_directli": 64, "original_osd": 64, "namedoptim": 64, "keyedoptim": 64, "torchrec": [64, 1866], "gossipgrad": [64, 1610], "latter": [64, 686, 790, 1198, 1400, 1430, 1437, 1897, 1902, 1904, 1906], "rekey_optim_state_dict": 64, "optim_state_key_typ": 64, "loadabl": [64, 1865], "wrapped_model": 64, "wrapped_optim": 64, "full_osd": 64, "nonwrapped_model": 64, "nonwrapped_optim": 64, "rekeyed_osd": 64, "optimstatekeytyp": 64, "param_id": 64, "osd": 64, "param_nam": 64, "sharded_osd": 64, "scatter_full_optim_state_dict": 64, "new_model": 64, "new_optim": 64, "remap": [64, 91, 1202, 1205, 1269, 1290, 1865, 1880, 1920], "state_dict_config": 64, "optim_state_dict_config": 64, "descend": [64, 72, 139, 541, 875, 1198, 1261, 1262, 1430, 1789, 1816, 1869], "transpar": [64, 1895, 1914, 1921, 1923], "sharded_state_dict": 64, "shardedstatedictconfig": 64, "offload_to_cpu": 64, "optimstatedictconfig": 64, "param_state_dict": 64, "statedictconfig": 64, "writeback": 64, "summon": 64, "discard": [64, 1195, 1255, 1620, 1865, 1870, 1881], "redundantli": [64, 1890], "materi": [64, 899, 963, 1612, 1613, 1686, 1739, 1740, 1896], "throughput": [64, 1868, 1893], "contend": 64, "backward_post": 64, "reorder": [64, 1091, 1253], "volum": [64, 1160], "_hybrid_shard_zero2": 64, "param_dtyp": 64, "reduce_dtyp": 64, "buffer_dtyp": 64, "keep_low_precision_grad": 64, "cast_forward_input": 64, "cast_root_forward_input": 64, "_module_classes_to_ignor": 64, "batchnorm": [64, 699, 700, 1136, 1198, 1207, 1430, 1469, 1610, 1879, 1891, 1902, 1912, 1914, 1916, 1918, 1919], "_batchnorm": 64, "permit": [64, 1925], "thereaft": 64, "upcast": 64, "offload_param": 64, "love": 65, "hear": 65, "arbitrarili": [65, 70, 513, 1201, 1494, 1871, 1891, 1896, 1897], "stock": [65, 70], "ensembl": [65, 68, 70, 1137], "maml": [65, 70], "vjp": [65, 68, 69, 888, 889, 1133, 1139, 1858, 1896, 1897], "whirlwind": 65, "tour": 65, "running_mean": [67, 1136, 1198, 1348, 1349, 1350, 1393, 1394, 1395, 1403, 1404, 1405, 1412, 1413, 1414, 1430, 1469, 1499, 1539, 1867, 1869, 1902, 1907], "running_var": [67, 1136, 1198, 1348, 1349, 1350, 1393, 1394, 1395, 1403, 1404, 1405, 1412, 1413, 1414, 1430, 1469, 1499, 1539, 1867, 1869, 1907], "groupnorm": [67, 1530], "anywher": [67, 1890], "batchnorm2d": [67, 712, 715, 717, 722, 813, 1207, 1367, 1404, 1499, 1879, 1891, 1902, 1916, 1918], "track_running_stat": [67, 750, 751, 752, 1136, 1348, 1349, 1350, 1393, 1394, 1395, 1403, 1404, 1405, 1412, 1413, 1414, 1469, 1907], "resnet": [67, 1865, 1868, 1870, 1902, 1913, 1930, 1934], "regnet": 67, "norm_lay": 67, "num_group": [67, 748, 1385, 1530, 1869], "fragil": 67, "replace_all_batch_norm_modules_": 67, "upstream": [68, 1908], "kept": [68, 72, 696, 778, 784, 1348, 1349, 1350, 1393, 1394, 1395, 1469, 1540, 1598, 1871, 1883, 1919, 1925], "jvp": [68, 69, 889, 893, 894, 895, 899, 1135, 1896], "jacfwd": [68, 69, 902, 1131, 1897], "make_functional_with_buff": 68, "hurri": 68, "emul": [68, 798, 1872, 1896], "fmodel": 68, "compute_loss": [68, 70, 1127, 1129], "predict": [68, 1338, 1347, 1384, 1512, 1912, 1930], "argnum": [68, 1129, 1130, 1131, 1132, 1133], "stack_module_st": 68, "num_model": [68, 1137], "in_featur": [68, 719, 727, 728, 731, 732, 755, 763, 1137, 1198, 1338, 1415, 1417, 1430, 1601, 1617, 1618, 1650, 1651, 1654, 1902], "out_featur": [68, 719, 727, 728, 731, 732, 755, 763, 1137, 1198, 1351, 1415, 1417, 1430, 1601, 1617, 1618, 1650, 1651, 1654, 1902], "base_model": 68, "deepcopi": [68, 1916, 1935], "clearer": [68, 1254, 1686, 1896, 1910], "call_single_model": 68, "stori": [68, 1899], "grad_x": [69, 1897], "has_aux": [69, 1129, 1130, 1132, 1133, 1134, 1138], "mental": [69, 1128], "absenc": 69, "unbind": [69, 1139, 1858, 1866, 1869, 1884, 1911, 1929], "lst": 69, "in_dim": [69, 70, 891, 1129, 1139, 1858, 1897], "batchedtensor": 69, "batched_tensor_input": 69, "new_": [69, 1894, 1931], "new_zero": [69, 1869, 1911], "new_empti": [69, 1869, 1911], "diag_emb": [69, 1061, 1233, 1234, 1261, 1816, 1869, 1911], "vec": [69, 110, 111, 425, 689, 1322, 1653, 1867, 1869, 1925], "copy_": [69, 224, 1128, 1482, 1868, 1869, 1884, 1894, 1927], "arithmet": [69, 925, 928, 942, 1253, 1741, 1872, 1881, 1884, 1885, 1905, 1916, 1928], "extra_arg": 69, "theoret": 69, "custom_dot": 69, "lax": 69, "cond": [69, 1905], "while_loop": 69, "is_nonzero": [69, 1869, 1911, 1925], "rag": 69, "unclear": [69, 616], "add_nois": 69, "prng": 69, "cos_x": [70, 1129], "neg_sin_x": [70, 1129], "hide": [70, 1139, 1858, 1897], "feature_s": [70, 1129, 1139, 1858], "feature_vec": [70, 1129, 1139, 1858], "mseloss": [70, 1129, 1391, 1461, 1560, 1894, 1895], "grad_weight_per_exampl": [70, 1129], "cotang": [70, 1138], "vjp_fn": [70, 1138], "out_tang": 70, "hessian0": 70, "hessian1": 70, "hess": [70, 1131], "rpc_async": [71, 1871, 1911, 1921, 1923], "add_done_callback": 71, "fut": [71, 1201, 1610, 1893, 1921], "set_result": [71, 1610, 1921], "haven": [71, 1902], "set_except": 71, "baseexcept": 71, "slow_set_futur": 71, "sleep": 71, "cb1": 71, "cb2": 71, "dedic": [71, 1894], "didn": [71, 1896, 1908, 1912], "cb_fut": 71, "chain_cb_fut": 71, "cb": [71, 1921], "collect_al": [71, 1866], "fut0": 71, "fut1": [71, 1921], "fut_list": 71, "wait_al": [71, 1866], "toolkit": 72, "clamp": [72, 189, 190, 798, 801, 948, 1204, 1346, 1384, 1529, 1540, 1598, 1867, 1869, 1879, 1884, 1909, 1911, 1916, 1918, 1919, 1926, 1932], "num_us": 72, "get_attr": 72, "fake": [72, 86, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 792, 798, 799, 809, 811, 837, 860, 861, 1085, 1086, 1866, 1913, 1916, 1919], "theses": 72, "callsit": 72, "constitut": 72, "tracer_class": 72, "treatment": 72, "topk": [72, 1867, 1869, 1884, 1911], "linear_weight": 72, "add_1": [72, 1128], "linear_1": 72, "relu_1": 72, "topk_1": 72, "pose": [72, 1922], "explor": [72, 1865, 1891, 1902, 1913], "edit": [72, 1913, 1929], "lint": 72, "new_nod": 72, "tediou": 72, "unwieldi": 72, "machineri": [72, 1896], "imagin": [72, 1921], "requisit": 72, "relu_decomposit": 72, "decomposition_rul": 72, "constitu": [72, 1886], "new_graph": 72, "graphappendingtrac": 72, "proxy_arg": 72, "output_proxi": 72, "node_copi": 72, "ari": [72, 1909], "unari": [72, 1132, 1133, 1473, 1475, 1477, 1872, 1884], "organiz": 72, "shapeprop": 72, "named_modul": [72, 1198, 1430, 1902], "args_it": 72, "load_arg": 72, "map_arg": 72, "fetch_attr": 72, "target_atom": 72, "attr_itr": 72, "nonexist": [72, 1870, 1871], "self_obj": 72, "encompass": 72, "prove": [72, 1883], "disprov": 72, "led": 72, "auxiliari": [72, 1129, 1130, 1132, 1133, 1134, 1138, 1865, 1901], "unord": [72, 1431, 1440], "nondetermin": [72, 908, 1906], "dedupl": 72, "transformed_resnet18": 72, "input_imag": 72, "margin": [72, 1364, 1390, 1422, 1433, 1435, 1478, 1479, 1510, 1537, 1552, 1561, 1595, 1596, 1869, 1930], "commut": 72, "toolbox": 72, "tradit": [72, 1477], "luckili": 72, "my_pass": 72, "my_module_transform": 72, "input_valu": 72, "prompt": [72, 1865, 1908], "set_trac": [72, 1203, 1209, 1215, 1868], "examin": [72, 1902, 1909, 1915], "undergon": 72, "subclassm": 72, "untrac": 72, "pre_trac": 72, "post_trac": 72, "sake": 72, "tabular": [72, 679, 1877], "transform_graph": 72, "session": 72, "luck": 72, "input_nod": 72, "stepwis": 72, "onlin": [72, 1671], "realpython": 72, "pycharm": 72, "vscode": 72, "parlanc": 72, "func_to_trac": 72, "dyn": 72, "155": 72, "__bool__": [72, 1869, 1871], "to_bool": 72, "traceerror": [72, 1916], "architectur": [72, 998, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1366, 1473, 1512, 1760, 1894, 1905, 1916, 1925], "hyper": [72, 1461, 1870, 1930], "do_activ": 72, "512": [72, 1473, 1474, 1475, 1476, 1477, 1894], "without_activ": 72, "with_activ": 72, "traced_without_activ": 72, "traced_with_activ": 72, "concrete_arg": 72, "truli": [72, 1909], "__torch_function__": [72, 1936], "161": 72, "len_1": 72, "sqrt_1": 72, "mycustomtrac": 72, "traced_graph": 72, "myspecialsubmodul": 72, "submod": 72, "neg_1": 72, "is_leaf_modul": [72, 1935], "sparse_coo_tensor": [72, 543, 580, 1797, 1869, 1873, 1911, 1925], "ones_lik": [72, 1132, 1133, 1138, 1869, 1886, 1894, 1897, 1902, 1911], "zeros_lik": [72, 897, 899, 1869, 1873, 1886, 1894, 1911, 1925], "viabl": [72, 1894], "torch_randn": 72, "gotcha": 72, "bake": [72, 1202, 1207, 1672, 1673, 1912], "dropoutrepro": 72, "assert_clos": [72, 1088, 1090, 1091, 1096, 1097, 1102, 1103, 1104, 1106, 1108, 1866, 1868, 1932], "greatest": [72, 1141, 1324, 1909, 1932], "6207983493804932": 72, "dropoutrepro2": 72, "pytre": [72, 1897], "ph": 72, "shouldn": [72, 972, 1913, 1925, 1929], "fn_or_nam": 72, "callfunct": 72, "my_custom_funct": 72, "fn_to_be_trac": 72, "reassign": [72, 1894], "regener": 72, "unset": [72, 1905], "add_submodul": 72, "subpath": 72, "get_submodul": [72, 1198, 1430], "delete_all_unused_submodul": 72, "delete_submodul": 72, "print_read": 72, "print_output": 72, "date": [72, 1913], "pythoncod": 72, "fxmodul": 72, "pathlik": [72, 1269, 1747, 1913], "owning_modul": 72, "tracer_cl": 72, "tracer_extra": 72, "the_funct": 72, "type_expr": 72, "create_nod": 72, "method_nam": 72, "0th": [72, 1139, 1858], "inserting_befor": 72, "influenc": [72, 1663, 1909, 1925], "eliminate_dead_cod": 72, "topolog": [72, 1909], "attr_1": 72, "is_impur": 72, "erase_nod": 72, "to_eras": 72, "qualified_nam": 72, "graph_copi": 72, "val_map": 72, "return_output_nod": 72, "slice": [72, 606, 694, 695, 1348, 1349, 1350, 1463, 1465, 1469, 1585, 1586, 1736, 1753, 1754, 1785, 1795, 1846, 1867, 1868, 1872, 1886, 1909, 1911, 1925, 1926, 1929, 1931], "memory_format": [72, 158, 173, 175, 178, 181, 182, 183, 192, 198, 209, 212, 242, 269, 299, 327, 333, 395, 499, 500, 524, 579, 949, 1072, 1073, 1126, 1198, 1430, 1610, 1662, 1725, 1727, 1729, 1864, 1866, 1867, 1869, 1932], "layout": [72, 153, 194, 211, 344, 345, 436, 446, 447, 448, 449, 450, 459, 543, 580, 581, 582, 583, 584, 586, 587, 616, 688, 864, 892, 894, 921, 930, 987, 1072, 1073, 1074, 1084, 1089, 1107, 1125, 1126, 1155, 1156, 1217, 1268, 1284, 1292, 1302, 1330, 1546, 1661, 1662, 1686, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1836, 1841, 1843, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1873, 1886, 1894, 1911, 1913, 1925, 1930, 1931, 1932], "opoverload": [72, 1875], "companion": 72, "__exit__": [72, 1871, 1872, 1913], "arg_transform": 72, "value_remap": 72, "_node_list": 72, "doubli": 72, "on_generate_cod": 72, "make_transform": 72, "transformcodefunc": 72, "insert_pdb": 72, "current_tran": 72, "default_valu": 72, "_not_": 72, "tabul": 72, "process_input": 72, "process_output": 72, "python_cod": 72, "root_modul": [72, 792, 1918], "set_codegen": 72, "return_typ": [72, 696, 1050, 1051, 1160, 1219, 1257, 1295, 1298, 1300, 1303, 1326, 1789, 1834, 1839], "all_input_nod": 72, "format_nod": 72, "placeholder_nam": 72, "maybe_return_typenam": 72, "autogener": [72, 1897], "impur": 72, "normalized_argu": 72, "arg_typ": 72, "kwarg_typ": 72, "normalize_to_only_use_kwarg": 72, "vararg": 72, "argskwargspair": 72, "bx": 72, "ax": [72, 1229, 1243, 1247, 1258, 1259, 1260, 1288, 1299, 1438, 1448, 1839, 1909], "prev": [72, 1684], "replace_with": 72, "delete_user_cb": 72, "propagate_meta": 72, "replace_input_with": 72, "old_input": 72, "new_input": 72, "create_proxi": 72, "record_stack_trac": 72, "update_arg": 72, "update_kwarg": 72, "autowrap_modul": 72, "autowrap_funct": 72, "create_arg": 72, "create_args_for_root": 72, "root_fn": 72, "is_modul": 72, "proxy_factory_fn": 72, "attr": [72, 153, 892, 1299, 1744], "attr_val": 72, "parameter_proxy_cach": 72, "module_qualified_nam": [72, 1935], "path_of_modul": 72, "some_hyperparamet": 72, "indexed_item": 72, "proxied_valu": 72, "garbage_collect_valu": 72, "run_nod": 72, "negsigmswapinterpret": 72, "call_self": 72, "args_tail": 72, "boxed_run": 72, "args_list": 72, "promptli": [72, 1270], "fetch_args_kwargs_from_env": 72, "map_nodes_to_valu": 72, "initial_env": 72, "enable_io_process": 72, "negsigmswapxform": 72, "w1": 72, "w2": 72, "m1": [72, 1856, 1857], "m2": [72, 1650, 1856, 1857, 1916], "despit": [72, 1213, 1214, 1899], "stack_1": 72, "stack_2": 72, "sum_2": 72, "max_1": 72, "max_2": 72, "add_2": 72, "onnx": [84, 86, 88, 89, 90, 1644, 1645, 1663, 1664, 1665, 1666, 1667, 1668, 1866, 1885, 1916], "dynamo_export": [84, 1664, 1665, 1909], "disregard": 86, "indexerror": [86, 1628, 1630], "torchlib": 86, "opset_vers": [90, 1663, 1909, 1911], "g_cpu": 91, "g_cuda": 91, "bytetensor": [91, 1003, 1004, 1042, 1043, 1150, 1309, 1316, 1765, 1920, 1928, 1931], "2147483647": 91, "0x8000_0000_0000_0000": [91, 1290, 1920], "0xffff_ffff_ffff_ffff": [91, 1290, 1920], "random_devic": 91, "1516516984916": 91, "new_stat": [91, 1042, 1043, 1316, 1765, 1920], "void": [91, 973, 1015, 1894, 1901], "g_cpu_oth": 91, "abs_": [95, 1869, 1884, 1931], "acosh": [99, 125, 866, 1867, 1869, 1884, 1911], "batch1": [102, 103, 154, 155, 685, 920, 1869], "batch2": [102, 103, 154, 155, 172, 685, 920, 1869], "tensor1": [104, 105, 106, 107, 686, 687, 1292, 1741, 1869], "tensor2": [104, 105, 106, 107, 316, 406, 686, 687, 1292, 1741, 1869], "mat1": [108, 109, 553, 688, 1162, 1218, 1302, 1790, 1793, 1794, 1808, 1867, 1869], "mat2": [108, 109, 415, 553, 688, 932, 1162, 1218, 1302, 1790, 1793, 1794, 1808, 1867, 1869], "mat": [110, 111, 539, 689, 1322, 1722, 1787, 1790, 1808, 1869, 1930], "vec1": [112, 113, 690, 1869], "vec2": [112, 113, 290, 462, 690, 1144, 1704, 1869], "keepdim": [115, 117, 118, 119, 121, 137, 138, 356, 394, 409, 411, 412, 413, 416, 430, 431, 432, 433, 454, 471, 480, 554, 564, 614, 692, 694, 695, 696, 698, 873, 874, 1219, 1250, 1254, 1267, 1285, 1295, 1297, 1298, 1300, 1303, 1325, 1326, 1327, 1328, 1439, 1568, 1657, 1713, 1716, 1810, 1811, 1815, 1853, 1854, 1867, 1869, 1884, 1926], "rtol": [116, 346, 693, 907, 908, 1187, 1252, 1255, 1668, 1868, 1869, 1932], "atol": [116, 346, 693, 907, 908, 1187, 1252, 1255, 1264, 1668, 1868, 1869, 1896, 1932], "08": [116, 346, 693, 930, 1187, 1244, 1365, 1444, 1572, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1699, 1771, 1869], "equal_nan": [116, 346, 693, 1187, 1869, 1932], "arcco": [124, 1869, 1911, 1932], "acosh_": [126, 1869, 1884], "arccosh": [126, 1869, 1911], "arcsin": [128, 880, 1869, 1911, 1925], "arcsinh": [130, 1869, 1911], "atan2_": [133, 1869, 1884], "arctan2": [133, 1869, 1911], "arctan": [134, 1869, 1911], "arctanh": [136, 1869, 1911], "cl": [142, 1896, 1916, 1921, 1936], "asinh": [146, 868, 1867, 1869, 1884, 1911, 1925], "atan": [150, 630, 631, 869, 1867, 1869, 1884, 1911, 1925], "atanh": [152, 871, 1867, 1869, 1884, 1911, 1925], "wrt": [153, 907, 908], "60521": [153, 892], "issuecom": [153, 892], "867061780": [153, 892], "texttt": [156, 157, 693, 1187, 1338, 1932], "bernoulli": [157, 759, 1342, 1368, 1369, 1370, 1371, 1375, 1382, 1400, 1514, 1515, 1516, 1517, 1522, 1866, 1869, 1884, 1911, 1933], "preserve_format": [158, 173, 175, 178, 181, 182, 183, 192, 209, 212, 242, 269, 299, 327, 395, 524, 579, 949, 1073, 1126, 1662, 1725, 1727, 1729, 1864, 1928], "minlength": [159, 923, 1869], "bitwise_and": [161, 1867, 1869, 1911], "bitwise_left_shift": [163, 1869, 1911], "bitwise_not": [165, 1867, 1869, 1884, 1911], "bitwise_or": [167, 1867, 1869, 1911], "bitwise_right_shift": [169, 1869, 1911], "bitwise_xor": [171, 1867, 1869, 1911], "uint8": [175, 244, 616, 692, 698, 1123, 1714, 1717, 1718, 1741, 1916, 1927, 1928, 1930, 1931, 1937], "cauchi": [176, 1866, 1891, 1899, 1911, 1933], "dfrac": [176, 379, 607, 1365, 1511, 1618, 1651, 1654], "complex32": [182, 1358, 1359, 1360, 1504, 1505, 1506, 1666, 1931, 1932], "int8": [183, 449, 728, 924, 925, 926, 927, 928, 929, 1123, 1279, 1280, 1281, 1282, 1916, 1919, 1925, 1927, 1928, 1931, 1937], "input2": [186, 460, 461, 517, 759, 945, 1351, 1364, 1365, 1422, 1439, 1500, 1510, 1511, 1552, 1869, 1890, 1909], "clamp_": [191, 1869, 1884], "uncoalesc": [193, 330, 1801], "coo": [193, 325, 330, 344, 613, 1162, 1790, 1793, 1798, 1799, 1800, 1801, 1802, 1803, 1866, 1878, 1928, 1932], "inttensor": [194, 211, 1172, 1287, 1288, 1373, 1928, 1931], "csr": [194, 211, 345, 582, 587, 1374, 1790, 1793, 1794, 1800, 1803, 1878, 1932], "sparse_csr": [194, 211, 582, 587, 1793, 1794, 1796, 1800, 1803, 1925], "nnz": [194, 543, 582, 583, 584, 586, 587, 907, 1330, 1791, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1925], "mkl": [194, 211, 1866, 1893, 1908, 1911, 1925], "routin": [194, 211, 875, 944, 1270, 1789, 1816, 1925], "downcast": [194, 211], "to_sparse_csr": [194, 211, 583, 584, 1793, 1794, 1869, 1911, 1925], "conj_phys": [197, 963, 1867, 1869, 1911, 1925], "contiguous_format": [198, 333, 499, 500, 1072, 1610, 1928], "non_block": [199, 212, 579, 602, 1198, 1430, 1643, 1867, 1869, 1894, 1927], "copysign": [201, 1869, 1911], "fweight": [208, 970, 1869], "aweight": [208, 970, 1869], "sparse_dim": [221, 544, 545, 1790, 1793, 1797, 1801, 1869, 1911, 1925], "resize_": [224, 500, 1128, 1219, 1868, 1869, 1870, 1884, 1918, 1927], "resize_as_": [224, 1869, 1884, 1925], "set_": [224, 499, 1869], "transpose_": [224, 1869, 1925], "zero_": [224, 1243, 1520, 1869, 1884, 1885, 1902, 1925], "dim1": [228, 230, 231, 568, 591, 592, 1059, 1061, 1062, 1232, 1819, 1836, 1869], "dim2": [228, 230, 231, 1059, 1061, 1062, 1232, 1869], "digamma": [234, 1867, 1869, 1884, 1911, 1926], "rounding_mod": [237, 238, 239, 240, 1066, 1067, 1116, 1119, 1735, 1844, 1869], "split_size_or_sect": [243, 304, 618, 1804], "eq": [246, 1867, 1869, 1884, 1911], "erf": [249, 638, 639, 1867, 1869, 1884, 1911, 1925, 1926], "erfc": [251, 640, 641, 1867, 1869, 1884, 1911, 1926], "lambd": [260, 300, 1386, 1467, 1532, 1588, 1669, 1869], "fill_valu": [262, 447, 1125, 1126, 1353, 1867, 1869, 1894], "tall": [262, 1256, 1261, 1896], "start_dim": [265, 1110, 1376, 1869], "end_dim": [265, 1110, 1376, 1869], "float_pow": [271, 1869, 1911], "floor_divid": [275, 1066, 1869, 1911, 1925], "divisor": [278, 279, 489, 490, 767, 768, 1066, 1116, 1119, 1141, 1344, 1345, 1377, 1481, 1497, 1498, 1735, 1844], "fmod": [279, 1735, 1867, 1869, 1911], "mantissa": [282, 482, 1121, 1221, 1869, 1894, 1905], "gcd": [285, 1867, 1869, 1911], "ge": [287, 1153, 1291, 1387, 1388, 1533, 1534, 1867, 1869, 1884, 1911], "ordin": [291, 1798, 1799, 1800, 1802, 1803, 1928], "greater_equ": [296, 1869, 1911], "gt": [298, 1152, 1867, 1869, 1884, 1899, 1911], "hypot": [306, 1867, 1869, 1911], "i0": [308, 1217, 1779, 1869, 1911, 1926], "igamma": [310, 1867, 1869, 1911], "igammac": [312, 1867, 1869, 1911], "3100": [313, 484, 1168, 1733], "3553j": [313, 484, 1168, 1733], "5445": [313, 484, 1168, 1733], "7896j": [313, 484, 1168, 1733], "6492": [313, 484, 1168, 1733], "0633j": [313, 484, 1168, 1733], "0638": [313, 484, 1168, 1733], "8119j": [313, 484, 1168, 1733], "3553": [313, 1168], "7896": [313, 1168], "0633": [313, 1168, 1244, 1886], "8119": [313, 1168], "index_add_": [314, 897, 1169, 1170, 1869, 1906], "index_copy_": [316, 1869], "index_fill_": [318, 1869, 1884], "index_put_": [320, 1869], "include_self": [323, 516, 517, 1171, 1750, 1867, 1869], "identit": 323, "amax": [323, 517, 695, 696, 1793, 1867, 1869, 1911], "amin": [323, 517, 694, 696, 1793, 1867, 1869, 1911], "fill_": [323, 1198, 1223, 1430, 1736, 1869, 1884, 1902, 1927], "72": [323, 616, 1151], "uint8_t": [328, 1666], "retain_grad": [337, 1869, 1891, 1911], "n_fft": [353, 555, 1195, 1812, 1869], "hop_length": [353, 555, 1195, 1812, 1869], "win_length": [353, 555, 1195, 1812, 1869], "center": [353, 555, 778, 784, 1091, 1195, 1494, 1529, 1540, 1598, 1683, 1705, 1773, 1812, 1869, 1891, 1911, 1930], "onesid": [353, 555, 1195, 1812, 1867, 1869], "return_complex": [353, 555, 1195, 1812, 1869], "element_s": [355, 436, 1869, 1884, 1911, 1927], "lcm": [358, 1869, 1911], "ldexp": [360, 1121, 1869, 1911], "le": [362, 1225, 1387, 1388, 1533, 1534, 1867, 1869, 1884, 1911, 1932], "lerp": [364, 1869, 1911], "less_equ": [368, 1869, 1911], "lgamma": [370, 650, 651, 1867, 1869, 1911], "ln": [379, 1226, 1926], "logical_and": [385, 1867, 1869, 1911], "logical_not": [387, 1867, 1869, 1884, 1886, 1911], "logical_or": [389, 1867, 1869, 1911], "logical_xor": [391, 1869, 1911], "pivot": [398, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1287, 1288, 1289, 1715, 1869], "get_info": [398, 1287], "lu_data": [399, 1288, 1289, 1869], "lu_pivot": [399, 1288, 1289, 1869], "masked_fill_": [401, 1869, 1884, 1885], "booltensor": [402, 404, 734, 1291, 1473, 1861, 1928, 1931], "masked_scatter_": [403, 1869], "mvlgamma": [427, 1869, 1911], "posinf": [428, 429, 1324, 1869], "neginf": [428, 429, 1324, 1869], "nan_to_num": [429, 1869, 1911], "interpol": [432, 480, 784, 785, 786, 818, 1223, 1327, 1482, 1483, 1484, 1494, 1529, 1598, 1599, 1600, 1716, 1851, 1869, 1918], "ne": [440, 1618, 1651, 1659, 1867, 1869, 1884, 1911], "8182e": 446, "5765e": 446, "41": [446, 1074, 1256, 1601, 1650, 1715], "0545e": 446, "0949e": 446, "4842e": [446, 1074], "0000e": [446, 1074, 1114, 1275, 1284, 1324, 1650, 1771, 1773, 1774, 1779, 1780], "00": [446, 1074, 1114, 1275, 1284, 1324, 1650, 1667, 1771, 1773, 1774, 1779, 1780, 1868, 1909], "141592": [447, 1125], "1416": [447, 1055, 1125, 1830], "from_numpi": [449, 878, 879, 1830], "array_lik": [449, 878, 1798, 1799, 1800, 1801, 1802, 1803, 1830, 1886], "nextaft": [452, 1867, 1869, 1911], "fro": [454, 1229, 1250, 1254, 1267, 1628, 1637, 1657, 1869], "not_equ": [457, 1869, 1911], "resolve_conj": [459, 963, 1869, 1911], "resolve_neg": [459, 1869, 1911], "shorthand": [459, 1217], "input3": [461, 1869], "transpos": [461, 592, 593, 616, 691, 740, 741, 742, 945, 1071, 1138, 1227, 1228, 1234, 1237, 1240, 1247, 1258, 1261, 1361, 1362, 1363, 1481, 1507, 1508, 1509, 1579, 1617, 1646, 1703, 1816, 1818, 1819, 1825, 1839, 1867, 1869, 1884, 1886, 1891, 1905, 1909, 1911, 1918, 1925, 1929, 1931], "polygamma": [467, 1869, 1911, 1926], "q_per_channel_axi": [474, 475, 1869, 1911], "zero_point": [475, 477, 737, 738, 739, 740, 741, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 769, 771, 772, 773, 774, 776, 779, 780, 798, 801, 818, 819, 820, 821, 824, 851, 1085, 1086, 1717, 1718, 1719, 1720, 1721, 1869, 1916, 1917], "qtensor": [479, 1869], "uniform": [482, 607, 922, 1366, 1448, 1512, 1724, 1725, 1773, 1866, 1867, 1889, 1911, 1933], "queu": [487, 978, 1894], "life": [487, 975], "cycl": [487, 892, 975, 1691, 1697, 1891, 1915], "unexpectedli": [487, 1931], "maxnorm": [491, 492, 1736, 1869], "repeat_interleav": [493, 1851, 1869, 1911, 1918], "output_s": [494, 740, 741, 742, 765, 766, 1335, 1336, 1337, 1339, 1340, 1341, 1362, 1377, 1378, 1379, 1426, 1427, 1428, 1481, 1488, 1489, 1490, 1491, 1492, 1493, 1523, 1524, 1525, 1556, 1557, 1558, 1737, 1867, 1869, 1886], "is_leaf": [495, 1869, 1884, 1886, 1911], "saved_weight": 496, "loaded_weight": 496, "5503": 496, "4926": [496, 1902], "1158": 496, "8303": 496, "1007": 496, "9853": 496, "2316": 496, "6606": 496, "resiz": [499, 500, 523, 544, 545, 1123, 1124, 1128, 1482, 1529, 1540, 1867, 1869, 1884, 1911, 1927], "shift": [505, 925, 928, 1091, 1098, 1342, 1348, 1349, 1350, 1375, 1469, 1522, 1742, 1869, 1872], "decim": [507, 508, 1744, 1869, 1905, 1937], "scatter_": [512, 515, 1748, 1869], "scatter_add_": [513, 514, 1749, 1851, 1869], "scatter_reduce_": [513, 516, 1750, 1869], "4600": 513, "2300": 513, "scatter_reduc": [517, 1851, 1867, 1869, 1911], "sgn": [522, 1120, 1769, 1869, 1884, 1886, 1911, 1925], "int16": [524, 1123, 1280, 1925, 1927, 1928, 1931, 1937], "dense_dim": [542, 544, 545, 582, 583, 584, 586, 587, 1801, 1869, 1911, 1925], "nse": [543, 1925], "randint": [543, 923, 970, 1114, 1303, 1353, 1479, 1512, 1513, 1797, 1869, 1873, 1885, 1911, 1930, 1933], "6550": 543, "2397": 543, "1611": 543, "0779": [543, 1234, 1712, 1861], "2326": 543, "0558": 543, "4711": 543, "9678": 543, "5138": 543, "0411": 543, "9417": 543, "5158": 543, "0793": 543, "0036": [543, 1295], "2569": 543, "1055": 543, "sparse_coo": [543, 582, 1330, 1793, 1796, 1797, 1801, 1925, 1928], "split_siz": [546, 1804, 1869], "squeez": [552, 692, 694, 695, 696, 698, 1219, 1285, 1295, 1297, 1298, 1300, 1303, 1325, 1328, 1511, 1713, 1797, 1810, 1811, 1815, 1853, 1854, 1867, 1869, 1884, 1909, 1911, 1918, 1929], "pad_mod": [555, 1812, 1869], "typedstorag": [556, 1866, 1907, 1927], "untypedstorag": [556, 612, 1866, 1907, 1927], "untyped_storag": 556, "compute_uv": [566, 1261, 1262, 1816, 1869], "axis0": [567, 1818, 1869], "axis1": [567, 1818, 1869], "dim0": [568, 591, 592, 1819, 1836, 1869], "indices_or_sect": [577, 1069, 1161, 1831, 1859], "rep": 578, "5044": 579, "0005": [579, 1695, 1701], "3310": 579, "0584": [579, 1816], "cuda0": [579, 1894, 1900, 1931], "masked_grad": [580, 1869], "sparse_mask": [580, 1869, 1911], "mkldnn": [581, 1207, 1866, 1911], "sparsedim": 582, "blocksiz": [582, 583, 584, 1798, 1799, 1800, 1869, 1925], "sparse_csc": [582, 586, 1796, 1800, 1802, 1925], "sparse_bsr": [582, 584, 1799, 1800, 1925], "sparse_bsc": [582, 583, 1798, 1800, 1925], "bsr": [582, 584, 1799, 1800, 1932], "bsc": [582, 583, 1798, 1800, 1932], "csc": [582, 586, 1800, 1802, 1932], "minu": [582, 583, 584, 586, 587, 1926], "crow_indic": [582, 584, 587, 1791, 1793, 1794, 1796, 1799, 1800, 1803, 1869, 1911, 1925, 1932], "col_indic": [582, 584, 587, 1793, 1794, 1796, 1799, 1800, 1803, 1869, 1911, 1925, 1932], "sparsecsr": [582, 1836, 1925], "row_indic": [583, 586, 1798, 1802, 1869, 1911, 1925, 1932], "ccol_indic": [583, 586, 1798, 1802, 1869, 1911, 1925, 1932], "_nnz": [585, 586, 587, 1911], "012766935862600803": 588, "5415473580360413": 588, "08909505605697632": 588, "7729271650314331": 588, "unitriangular": [593, 1260, 1839, 1869], "tril": [595, 1579, 1869, 1911], "triu": [597, 1622, 1839, 1869, 1909, 1911], "trunc": [601, 676, 677, 686, 1066, 1109, 1116, 1119, 1744, 1867, 1869, 1884, 1911, 1925], "sizedim": 606, "return_invers": [608, 609, 1848, 1849, 1869], "return_count": [608, 609, 1848, 1849, 1869], "unsqueez": [611, 1091, 1218, 1258, 1373, 1449, 1622, 1833, 1867, 1869, 1896, 1911, 1918, 1925, 1929, 1930], "subspac": [616, 1261, 1436, 1705, 1816, 1817], "span": [616, 1032, 1033, 1366, 1816, 1915, 1921], "foral": 616, "proportion": [616, 784, 1482, 1598], "met": [616, 1237, 1244, 1245, 1256, 1270, 1477], "9482": [616, 1175], "0310": 616, "4999": 616, "5316": 616, "1520": 616, "7472": 616, "5617": 616, "8649": 616, "4724": [616, 1902], "0334": 616, "2976": 616, "8499": 616, "2109": 616, "9913": 616, "9607": 616, "6123": 616, "1064483442": 616, "1124191867": 616, "1069546515": 616, "1089989247": 616, "1105482831": 616, "1061112040": 616, "1057999968": 616, "1084397505": 616, "1071760287": 616, "1123489973": 616, "1097310419": 616, "1084649136": 616, "1101533110": 616, "1073668768": 616, "1082790149": 616, "1088634448": 616, "1000000000": 616, "0047": 616, "0310j": 616, "5316j": 616, "7472j": 616, "8649j": 616, "0334j": 616, "8499j": 616, "9913j": 616, "6123j": 616, "202": 616, "154": [616, 1908], "59": [616, 1841, 1843], "182": 616, "243": [616, 1195, 1816], "253": 616, "188": 616, "252": [616, 1908], "191": 616, "63": [616, 1908, 1916], "240": 616, "227": 616, "165": 616, "190": 616, "146": 616, "106": 616, "205": 616, "206": 616, "189": 616, "95": [616, 1693, 1696, 1697], "147": 616, "43": 616, "87": 616, "235": 616, "226": 616, "254": [616, 1908], "111": [616, 1667, 1909], "117": 616, "177": 616, "xlogi": [621, 1869, 1911, 1926], "aot_graph": [679, 1877], "aot_joint_graph": [679, 1877], "ddp_graph": [679, 1877], "graph_cod": [679, 1877], "toggl": [679, 1894], "supress": 679, "silenc": 679, "lowest": [679, 942, 1324, 1627, 1628, 1636, 1637, 1726, 1727, 1896, 1932], "notset": 679, "joint": [679, 1877], "ddpoptim": [679, 1877], "unregist": [679, 1877, 1881, 1909], "3348": 682, "5889": 682, "1584": 682, "2294": [682, 1297], "2004": 682, "3690": 682, "7298": [682, 1734], "hyperbol": [683, 881, 884, 968, 1470, 1784, 1829], "uniform_": [683, 884, 922, 1866, 1869, 1884, 1889, 1896, 1926, 1933], "3192": 683, "9915": 683, "9674": 683, "7151": 683, "7791": 683, "3120": [683, 965], "2979": 683, "1341": 683, "_i": [684, 685, 686, 687, 688, 920, 922, 925, 928, 932, 947, 1066, 1116, 1221, 1223, 1319, 1478, 1708, 1712, 1731, 1767, 1813, 1861, 1926], "0202": 684, "0985": 684, "3506": [684, 1287], "6056": 684, "3944": 684, "9732": 684, "3497": 684, "6245": [684, 1229], "4022": [684, 1053, 1816], "3743": 684, "7724": 684, "5811": 684, "8017": 684, "7695": 684, "3930": 684, "3672": [684, 971, 1230], "1450": [684, 1797], "6971": 684, "0736": [684, 1902], "0994": 684, "3216": 684, "7845": 684, "1610": 684, "1868": 684, "4090": 684, "9902": [684, 971, 1230], "3667": [684, 965], "3925": 684, "6147": 684, "sum_": [685, 1195, 1249, 1266, 1343, 1344, 1345, 1358, 1359, 1360, 1366, 1398, 1399, 1418, 1433, 1437, 1439, 1810, 1811, 1812, 1832, 1837, 1853, 1854, 1855, 1926], "mathbin": [685, 688, 689, 920, 932, 1794], "doubletensor": [685, 686, 687, 688, 689, 920, 1757, 1928, 1931], "tensorfloat32": [685, 688, 920, 932, 1292, 1302, 1358, 1359, 1360, 1361, 1362, 1363, 1417, 1504, 1505, 1506, 1507, 1508, 1509, 1546, 1759, 1894, 1905], "rocm": [685, 688, 920, 932, 1292, 1302, 1358, 1359, 1360, 1361, 1362, 1363, 1383, 1401, 1417, 1866], "6311": 685, "0503": 685, "9768": [685, 1902], "0362": 685, "1653": 685, "8185": 685, "4255": [685, 1319], "6760": 685, "9453": 685, "5743": 685, "8202": 685, "3691": 685, "0943": 685, "1109": [685, 1384, 1780], "4730": [685, 1832], "histor": [686, 1028, 1370, 1893, 1902, 1907], "t1": [686, 687, 879, 1151, 1610, 1870, 1921, 1922], "2312": [686, 1797], "6496": 686, "1312": 686, "0428": 686, "4292": 686, "1030": 686, "5369": 686, "9829": 686, "0430": 686, "8635": 687, "6391": 687, "6174": 687, "7617": 687, "5879": 687, "7388": 687, "8353": 687, "6249": 687, "6511": 687, "8716": 688, "4671": 688, "3746": 688, "7573": 688, "9555": 688, "8681": 688, "3768": 689, "5565": 689, "otim": [690, 1218, 1381, 1528], "conj": [691, 964, 1087, 1088, 1090, 1092, 1099, 1101, 1105, 1106, 1108, 1227, 1228, 1234, 1236, 1255, 1739, 1740, 1867, 1869, 1896, 1899, 1911, 1931], "mh": [691, 943, 1234, 1816, 1869, 1911, 1929, 1931], "lvert": [693, 1187, 1478, 1565, 1932], "rvert": [693, 1187, 1932], "leq": [693, 921, 922, 965, 1089, 1091, 1187, 1218, 1222, 1237, 1243, 1353, 1372, 1433, 1435, 1437, 1513, 1564, 1567, 1770, 1812, 1889, 1926], "elementwis": [693, 965, 987, 1014, 1015, 1114, 1116, 1334, 1393, 1394, 1395, 1467, 1588, 1852, 1871, 1886, 1899, 1926], "07": [693, 818, 819, 820, 821, 824, 943, 944, 1074, 1235, 1238, 1243, 1255, 1256, 1262, 1285, 1288, 1617, 1668, 1675, 1774, 1779, 1816, 1909], "09": [693, 1675, 1687, 1896, 1932], "8177": 694, "4878": 694, "2491": 694, "9130": 694, "7158": 694, "1775": 694, "0992": 694, "4817": 694, "0053": 694, "0164": 694, "3738": 694, "0507": [694, 1909], "9700": 694, "1106": 694, "0318": 694, "0816": [694, 1287], "6451": 695, "4866": 695, "2987": 695, "3312": 695, "5744": 695, "2980": [695, 1886], "8397": 695, "2713": 695, "9128": 695, "9214": 695, "7268": 695, "2995": 695, "9023": [695, 1228], "4853": 695, "9075": 695, "6165": 695, "180": [697, 1055, 1723], "14159": [697, 1830], "135": 697, "45": [697, 1349, 1350, 1394, 1395, 1469, 1650, 1909], "ao": [699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 1916, 1917, 1918], "batch_norm": [699, 700, 1207, 1869, 1911], "3d": [700, 703, 706, 734, 739, 742, 766, 768, 773, 778, 1299, 1337, 1341, 1345, 1348, 1350, 1360, 1363, 1370, 1371, 1377, 1379, 1393, 1395, 1425, 1436, 1482, 1490, 1493, 1494, 1498, 1506, 1509, 1517, 1523, 1525, 1540, 1555, 1567, 1598, 1886, 1905, 1916, 1925, 1930], "bn": [701, 702, 703, 704, 705, 706, 813, 859, 1071, 1207, 1907, 1912, 1916, 1917], "qat": [711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 729, 730, 731, 732, 791, 792, 845, 1916, 1917, 1918], "in_channel": [711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 1207, 1358, 1359, 1360, 1361, 1362, 1363, 1406, 1407, 1408, 1409, 1410, 1411], "out_channel": [711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 1207, 1358, 1359, 1360, 1361, 1362, 1363, 1406, 1407, 1408, 1409, 1410, 1411], "kernel_s": [711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 767, 768, 781, 782, 1198, 1207, 1343, 1344, 1345, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1378, 1379, 1398, 1399, 1406, 1407, 1408, 1409, 1410, 1411, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1481, 1496, 1497, 1498, 1507, 1508, 1509, 1523, 1524, 1525, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1558, 1597, 1720, 1721, 1867, 1869, 1930], "dilat": [711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 771, 772, 773, 781, 782, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1406, 1407, 1408, 1409, 1410, 1411, 1423, 1424, 1425, 1481, 1504, 1505, 1506, 1507, 1508, 1509, 1523, 1553, 1554, 1555, 1597, 1720, 1721, 1867, 1869, 1909], "padding_mod": [711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 771, 772, 773, 1358, 1359, 1360, 1361, 1362, 1363, 1406, 1407, 1408, 1409, 1410, 1411, 1529, 1867, 1869], "ep": [711, 712, 713, 714, 715, 716, 722, 723, 735, 736, 748, 750, 751, 752, 753, 794, 818, 819, 820, 821, 824, 825, 907, 908, 1207, 1283, 1334, 1348, 1349, 1350, 1365, 1384, 1385, 1393, 1394, 1395, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1439, 1444, 1469, 1473, 1475, 1477, 1478, 1499, 1511, 1526, 1530, 1531, 1539, 1543, 1565, 1568, 1572, 1595, 1618, 1651, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1686, 1699, 1719, 1867, 1869, 1896, 1899, 1926, 1937], "momentum": [711, 712, 713, 714, 715, 716, 722, 723, 735, 736, 750, 751, 752, 1348, 1349, 1350, 1393, 1394, 1395, 1403, 1404, 1405, 1412, 1413, 1414, 1469, 1499, 1539, 1676, 1683, 1685, 1691, 1697, 1699, 1867, 1869, 1902, 1904, 1912], "freeze_bn": [711, 712, 713, 714, 715, 716], "qconfig": [711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 787, 788, 790, 793, 794, 795, 796, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 860, 861, 1935], "batchnorm1d": [711, 714, 1403, 1469, 1499, 1907, 1918], "fakequant": [711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 801, 861], "weight_fake_qu": [711, 712, 713, 714, 715, 716, 717, 718, 729, 730], "quant": [711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 789, 791, 792, 837, 860, 861, 1085, 1086, 1916, 1917], "batchnorm3d": [713, 716, 718, 723, 1405, 1469, 1499, 1918], "num_featur": [722, 723, 735, 736, 750, 751, 752, 1198, 1348, 1349, 1350, 1393, 1394, 1395, 1403, 1404, 1405, 1412, 1413, 1414, 1430, 1469, 1531, 1902], "qint8": [727, 728, 755, 760, 763, 764, 771, 772, 773, 780, 791, 793, 798, 819, 840, 857, 858, 860, 861, 1666, 1717, 1718, 1916, 1918, 1919, 1927, 1931, 1932], "highlight": [729, 730, 1871], "from_float": [731, 737, 738, 739, 744, 745, 755, 763, 796, 816, 822, 825, 837, 1916], "qparams_dict": [731, 737, 738, 739, 763], "hidden_s": [733, 759, 760, 764, 1382, 1383, 1400, 1401, 1445, 1446, 1447, 1869], "num_lay": [733, 759, 1382, 1400, 1445, 1446, 1474, 1476, 1869, 1902], "bidirect": [733, 759, 1382, 1400, 1445, 1446, 1869], "_lstmlayer": 733, "nnqa": 733, "h0": [733, 759, 761, 1382, 1400, 1445], "hn": [733, 759, 761, 1382, 1383, 1400, 1445], "cn": [733, 761, 1198, 1400], "weight_ih": [733, 1383, 1401, 1447], "weight_hh": [733, 1383, 1401, 1447], "dequant": [734, 787, 789, 791, 792, 798, 800, 860, 1869, 1911, 1917, 1919, 1932, 1934], "mha": [734, 1436], "conver": 734, "key_padding_mask": [734, 1436, 1869], "need_weight": [734, 1436, 1869], "attn_mask": [734, 1436, 1579, 1869], "average_attn_weight": [734, 1436, 1869], "is_caus": [734, 1436, 1476, 1477, 1579, 1869], "attn_output_weight": [734, 1436], "unmask": [734, 1473], "causal": [734, 1436, 1474, 1475, 1476, 1477, 1579], "attn_weight": [734, 1436, 1579], "attn_output": [734, 1436], "quint8": [737, 738, 739, 740, 741, 742, 744, 745, 755, 771, 772, 773, 780, 791, 793, 798, 818, 819, 820, 821, 824, 826, 858, 860, 1666, 1717, 1718, 1719, 1720, 1721, 1916, 1918, 1919, 1927, 1931, 1932], "learnabl": [737, 738, 739, 740, 741, 742, 744, 745, 755, 759, 763, 1348, 1349, 1350, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1373, 1374, 1382, 1383, 1385, 1393, 1394, 1395, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1438, 1445, 1447, 1469, 1521, 1573, 1902], "q_input": [737, 738, 739, 740, 741, 742, 771, 772, 773], "quantize_per_tensor": [737, 738, 739, 740, 741, 742, 755, 756, 757, 771, 772, 773, 1719, 1720, 1721, 1869, 1911, 1916], "unequ": [738, 739, 740, 741, 742, 1359, 1360, 1362, 1363], "50": [738, 740, 741, 742, 771, 823, 1253, 1303, 1344, 1345, 1353, 1358, 1359, 1360, 1362, 1363, 1378, 1379, 1398, 1399, 1423, 1424, 1425, 1480, 1506, 1507, 1509, 1513, 1524, 1525, 1684, 1827, 1886], "output_pad": [740, 741, 742, 1361, 1362, 1363, 1409, 1410, 1411, 1507, 1508, 1509, 1867, 1869], "qnnpack": [740, 741, 755, 763, 854, 855, 858, 860, 861, 1916, 1918], "convtranspose2d": [740, 1410, 1508, 1851, 1918], "nnq": [740, 741, 742, 787, 788, 789, 863, 1916], "downsampl": [740, 741, 742, 1362, 1482, 1494, 1529, 1540], "upsampl": [740, 741, 742, 778, 785, 786, 818, 1362, 1483, 1484, 1494, 1529, 1540, 1599, 1600], "cubic": [742, 1379, 1525, 1529], "num_embed": [744, 745, 1373, 1374, 1521], "embedding_dim": [744, 745, 1373, 1374, 1402, 1520, 1521], "padding_idx": [744, 1373, 1374, 1520, 1521, 1867, 1869], "scale_grad_by_freq": [744, 745, 1373, 1374, 1520, 1521, 1867, 1869], "_embed": [744, 745], "_dim": [744, 745, 1373], "include_last_offset": [745, 1374, 1521, 1869], "embedding_bag": [745, 1869, 1911], "floatfunct": [746, 1916], "activation_post_process": [746, 798, 1916], "add_relu": [746, 747, 756, 1879, 1911, 1934], "add_scalar": [746, 747, 756, 1911, 1930, 1934], "mul_scalar": [746, 747, 756, 1911, 1934], "collector": 747, "f_add": 747, "num_channel": [748, 1385, 1885], "normalized_shap": [753, 1402, 1543, 1867, 1869, 1886], "elementwise_affin": [753, 1402], "negative_slop": [754, 779, 1416, 1544, 1545, 1867, 1869, 1889], "slope": [754, 779, 1416, 1461, 1889], "bias_": [755, 763], "_featur": [755, 763, 780, 1338, 1351, 1415, 1417, 1500, 1546], "from_refer": [755, 763], "ref_qlinear": [755, 763], "output_scal": [755, 758, 1719, 1869], "output_zero_point": [755, 758, 1719, 1869], "q_add": 756, "qint32": [756, 757, 1666, 1717, 1718, 1916, 1919, 1927, 1931, 1932], "x_0": [757, 1837], "gate": [759, 760, 1381, 1382, 1383, 1400, 1459, 1528, 1582], "r_t": [759, 1382, 1682], "w_": [759, 1336, 1337, 1340, 1341, 1344, 1345, 1347, 1355, 1356, 1357, 1359, 1360, 1362, 1363, 1366, 1378, 1379, 1382, 1383, 1399, 1400, 1401, 1424, 1425, 1427, 1428, 1437, 1442, 1443, 1445, 1447, 1451, 1452, 1453, 1454, 1455, 1456, 1482, 1483, 1484, 1485, 1486, 1487, 1525, 1529], "x_t": [759, 893, 895, 1348, 1349, 1350, 1382, 1393, 1394, 1395, 1400, 1445, 1469, 1670], "b_": [759, 1382, 1383, 1400, 1401, 1418, 1445, 1447, 1832, 1925], "hr": [759, 1382, 1383, 1400, 1899], "h_": [759, 1336, 1337, 1340, 1341, 1344, 1345, 1351, 1356, 1357, 1359, 1360, 1362, 1363, 1378, 1379, 1382, 1383, 1399, 1400, 1417, 1424, 1425, 1426, 1427, 1428, 1442, 1443, 1445, 1447, 1452, 1453, 1455, 1456, 1482, 1483, 1484, 1486, 1487, 1500, 1525, 1529], "z_t": [759, 1382], "iz": [759, 1382, 1383], "hz": [759, 983, 1382, 1383, 1930], "n_t": [759, 1382], "h_t": [759, 1382, 1400, 1445], "hadamard": [759, 1382, 1383, 1400, 1401], "multilay": [759, 1382, 1400], "_t": [759, 1382, 1400, 1683, 1685, 1896, 1912], "b_ih": [759, 1382, 1383, 1400, 1401, 1445, 1447, 1869], "b_hh": [759, 1382, 1383, 1400, 1401, 1445, 1447, 1869], "h_0": [759, 1382, 1400, 1401, 1445], "seq_len": [759, 1382, 1400, 1436, 1445], "pack_padded_sequ": [759, 1382, 1400, 1445, 1643, 1645, 1646, 1898], "num_direct": [759, 1382, 1400, 1445], "h_n": [759, 1382, 1400, 1445], "input1": [759, 1351, 1364, 1365, 1422, 1439, 1500, 1510, 1511, 1552, 1869, 1890, 1909], "_size": [759, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1345, 1358, 1359, 1360, 1361, 1362, 1363, 1377, 1378, 1379, 1382, 1383, 1398, 1399, 1400, 1401, 1423, 1424, 1425, 1426, 1427, 1428, 1445, 1447, 1481, 1525], "_layer": [759, 1382, 1400, 1445], "_direct": 759, "output1": [759, 1338, 1890, 1909], "output2": [759, 1338], "weight_ih_l": [759, 1382, 1400, 1445], "w_ir": [759, 1382], "w_iz": [759, 1382], "w_in": [759, 1382], "weight_hh_l": [759, 1382, 1400, 1445], "w_hr": [759, 1382], "w_hz": [759, 1382], "w_hn": [759, 1382], "bias_ih_l": [759, 1382, 1400, 1445], "b_ir": [759, 1382], "b_iz": [759, 1382], "b_in": [759, 1382], "bias_hh_l": [759, 1382, 1400, 1445], "b_hr": [759, 1382], "b_hz": [759, 1382], "b_hn": [759, 1382], "mathcal": [759, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1373, 1374, 1382, 1383, 1400, 1401, 1415, 1417, 1445, 1447, 1448, 1469, 1728, 1889, 1899], "subtli": [759, 1382, 1685], "gru": [760, 1383, 1869, 1894, 1911, 1916, 1918], "cell": [760, 762, 764, 1382, 1383, 1400, 1401, 1445, 1447], "hx": [760, 762, 764, 1383, 1401, 1447, 1869], "cx": [762, 1401, 1869], "nonlinear": [764, 1346, 1364, 1390, 1445, 1447, 1457, 1866, 1889, 1925], "elman": [764, 1445, 1447], "adaptiveavgpool2d": [765, 1489, 1851, 1918], "adaptiveavgpool3d": [766, 1490, 1851, 1918], "ceil_mod": [767, 768, 781, 782, 1343, 1344, 1345, 1398, 1399, 1423, 1424, 1425, 1496, 1497, 1498, 1550, 1551, 1553, 1554, 1555, 1720, 1721, 1867, 1869], "count_include_pad": [767, 768, 1343, 1344, 1345, 1496, 1497, 1498, 1867, 1869], "divisor_overrid": [767, 768, 1344, 1345, 1497, 1498, 1867, 1869], "kh": [767, 768, 772, 773, 1344, 1345, 1378, 1379, 1424, 1425, 1497, 1498, 1505, 1506, 1508, 1509, 1524, 1525, 1554, 1555], "kw": [767, 768, 772, 773, 1344, 1345, 1378, 1379, 1424, 1425, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1524, 1525, 1553, 1554, 1555], "sw": [767, 768, 771, 772, 773, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1553, 1554, 1555], "avgpool2d": [767, 1497, 1918], "_channel": [767, 768, 771, 772, 773, 1358, 1359, 1360, 1361, 1362, 1363, 1385, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1553, 1554, 1555, 1921], "ih": [767, 768, 772, 773, 1445, 1447, 1497, 1498, 1505, 1506, 1508, 1509, 1554, 1555], "iw": [767, 768, 771, 772, 773, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509, 1553, 1554, 1555], "padh": [767, 768, 772, 773, 1497, 1498, 1505, 1506, 1508, 1509], "padw": [767, 768, 771, 772, 773, 1496, 1497, 1498, 1504, 1505, 1506, 1507, 1508, 1509], "kd": [768, 773, 1345, 1425], "sd": [768, 773], "padd": [768, 773], "formul": [769, 1352, 1372, 1386, 1420, 1466, 1467, 1548, 1565, 1579, 1899, 1925], "min_": [770, 1233, 1234, 1243, 1261, 1816], "max_": [770, 1423, 1424, 1425, 1618, 1651], "convolv": [771, 772, 773, 1358, 1359, 1360, 1361, 1362, 1363, 1406, 1407, 1408, 1409, 1410, 1411, 1504, 1505, 1506, 1507, 1508, 1509], "dw": [771, 772, 773, 1504, 1505, 1506, 1507, 1508, 1509], "qf": [771, 772, 773], "dtype_input": [771, 772, 773], "dtype_filt": [771, 772, 773], "q_filter": [771, 772, 773], "dh": [772, 773, 1505, 1506, 1508, 1509], "dd": 773, "min_val": [777, 1389, 1535, 1536, 1867, 1869], "max_val": [777, 1389, 1535, 1536, 1867, 1869], "scale_factor": [778, 784, 785, 786, 1482, 1483, 1484, 1540, 1579, 1598, 1599, 1600, 1867, 1869], "nearest": [778, 784, 786, 1327, 1482, 1484, 1529, 1540, 1598, 1600, 1716, 1744, 1894], "align_corn": [778, 784, 785, 1482, 1483, 1494, 1529, 1540, 1598, 1599, 1867, 1869], "height": [778, 784, 1344, 1345, 1359, 1360, 1362, 1363, 1399, 1424, 1425, 1437, 1464, 1482, 1540, 1598, 1885], "spatial": [778, 784, 785, 786, 940, 1091, 1349, 1377, 1402, 1442, 1443, 1464, 1481, 1482, 1483, 1484, 1494, 1529, 1540, 1569, 1570, 1571, 1598, 1599, 1600], "pixel": [778, 784, 786, 1359, 1366, 1369, 1370, 1371, 1375, 1437, 1442, 1443, 1482, 1494, 1529, 1540, 1598, 1600], "corner": [778, 784, 931, 1482, 1494, 1529, 1540, 1598], "leakyrelu": [779, 1431, 1544, 1902, 1918], "_slope": [779, 1416, 1544, 1889], "xa": [780, 1247, 1258, 1259, 1260, 1417, 1546], "return_indic": [781, 782, 1339, 1340, 1341, 1378, 1379, 1423, 1424, 1425, 1426, 1427, 1428, 1491, 1492, 1493, 1524, 1525, 1553, 1554, 1555, 1869], "maxpool1d": [781, 1426, 1553, 1556, 1918], "maxpool2d": [782, 1427, 1431, 1554, 1557, 1909, 1918], "linearli": [784, 1135, 1256, 1482, 1598, 1694, 1715, 1898, 1912, 1919], "neighbour": [786, 1418, 1540, 1600], "stub": [787, 788, 1913], "calibr": [787, 788, 796, 837, 838, 856, 858, 860, 1890, 1916, 1917, 1919, 1935], "quantstub": [789, 1916], "dequantstub": [789, 1916], "quantwrapp": 790, "backend_config": [791, 792, 793, 794, 795, 816, 817, 858, 859, 860, 861, 1935], "acycl": [791, 1891], "backendpatternconfig": [791, 860], "dtypeconfig": [791, 792, 794, 860], "observationtyp": [791, 792, 860, 1918], "weighted_int8_dtype_config": [791, 860], "input_dtyp": [791, 793, 860, 1918], "output_dtyp": [791, 793, 860, 1867, 1918], "weight_dtyp": [791, 793, 860, 1918], "bias_dtyp": [791, 793, 1918], "fuse_conv2d_relu": 791, "is_qat": [791, 792], "convrelu2d": [791, 1918], "linear_config": 791, "set_observation_typ": [791, 792, 860], "output_use_different_observer_as_input": [791, 792, 795, 860, 1918], "add_dtype_config": [791, 792, 860], "set_root_modul": [791, 792], "set_qat_modul": [791, 792], "set_reference_quantized_modul": [791, 792], "conv_relu_config": 791, "set_fused_modul": [791, 792], "set_fuser_method": [791, 792], "fused_conv_relu_config": 791, "set_backend_pattern_config": [791, 860], "from_dict": [791, 792, 793, 814, 815, 816, 853], "backend_config_dict": [791, 1916], "set_nam": 791, "to_dict": [791, 792, 793, 814, 815, 816, 853], "backendconfig": [792, 817, 858, 860, 1919], "dtype_config": [792, 1918], "backend_pattern_config_dict": 792, "observation_typ": [792, 1918], "qat_modul": [792, 1918], "reference_quantized_modul": 792, "fused_modul": [792, 1918], "fuser_method": [792, 813, 1918], "pattern_complex_format": 792, "set_dtype_config": 792, "fuser": [792, 1211, 1868], "fuse_linear_relu": 792, "linearrelu": [792, 1918], "8bea7180a8ba3c279f2c9b050f2a69a6": 792, "understood": [792, 939], "output_share_observer_with_input": [792, 795, 1918], "quantdequantstub": 792, "set_pattern": 792, "is_dynam": [793, 825, 1918], "quant1": 793, "dequant1": 793, "fp32_linear": 793, "quant2": 793, "dequant2": 793, "bracket": [793, 1922], "dtype_config1": 793, "dtype_config2": 793, "dtypewithconstraint": [793, 1918], "quant_min_lower_bound": [793, 794, 1918], "quant_max_upper_bound": [793, 794, 1918], "255": [793, 801, 1085, 1086, 1124, 1529, 1540, 1598, 1916, 1918, 1930], "input_dtype_with_constraint": 793, "scale_min_lower_bound": [793, 794, 1918], "scale_max_upper_bound": [793, 794, 1918], "dtype_config_dict": 793, "bias_typ": [793, 860], "scale_exact_match": [794, 1918], "zero_point_exact_match": [794, 1918], "quant_min": [794, 798, 801, 818, 819, 820, 821, 824, 825, 1085, 1086, 1869, 1916], "quant_max": [794, 798, 801, 818, 819, 820, 821, 824, 825, 1085, 1086, 1869, 1916], "fixedqparamsobserv": 794, "fixedqparamsfakequant": 794, "input_output_not_observ": [795, 1918], "maxpool": [795, 1378, 1379, 1524, 1525, 1909], "remove_qconfig": 796, "is_refer": 796, "convert_custom_config_dict": [796, 814, 1916], "from_observ": [796, 814, 1916], "observed_to_quantized_custom_module_class": [796, 814, 1916], "observedcustommodul": [796, 814, 816, 837, 1916], "quantizedcustommodul": [796, 814], "calib_data": 797, "fake_quant": [798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 861, 1085, 1086, 1935], "movingaverageminmaxobserv": [798, 801, 821], "observer_kwarg": [798, 801], "x_out": [798, 801], "fake_quant_en": 798, "observer_en": 798, "calculate_qparam": [799, 818, 819, 823], "qscheme": [801, 818, 819, 820, 821, 824, 825, 826, 1869, 1911, 1916, 1919, 1932], "fake_qu": [802, 806, 807, 808, 1916], "default_fake_qu": 803, "default_per_channel_weight_fake_qu": 804, "default_weight_fake_qu": 805, "histogram": [806, 818, 830, 1158, 1160, 1869, 1911, 1930], "memoryless": [807, 808], "averaging_const": [807, 808, 820, 821, 1869], "modules_to_fus": 813, "fuser_func": 813, "fuse_known_modul": 813, "fuse_custom_config_dict": [813, 815], "convmodul": 813, "bnmodul": 813, "convbnmodul": 813, "additional_fuser_method_map": 813, "fuse_conv_bn": [813, 1918], "conv1": [813, 1209, 1430, 1458, 1868, 1916, 1930], "bn1": 813, "relu1": [813, 1458, 1601], "fused_m": 813, "custom_config": [814, 815, 816, 817], "convert_fx": [814, 1916, 1935], "convert_custom_config": [814, 858, 1916], "set_observed_to_quantized_map": 814, "set_preserved_attribut": [814, 815, 816], "attr1": [814, 815, 816, 1909], "attr2": [814, 815, 816, 1909], "floatcustommodul": [814, 816], "weight_onli": [814, 858, 1916], "preserved_attribut": [814, 815, 816], "observed_class": [814, 816], "quantized_class": 814, "quant_typ": [814, 816], "quanttyp": [814, 816], "fuse_fx": [815, 1916], "fuse_custom_config": [815, 859], "convertcustomconfig": [815, 858], "prepare_fx": [816, 839, 858, 861, 1916, 1935], "prepare_qat_fx": [816, 858, 1916], "prepare_custom_config": [816, 817, 860, 861, 1916], "set_standalone_module_nam": 816, "module1": [816, 853, 1894], "qconfig_map": [816, 817, 853, 854, 855, 858, 860, 861, 1916], "child_prepare_custom_config": 816, "set_standalone_module_class": 816, "mystandalonemodul": 816, "set_float_to_observed_map": 816, "set_non_traceable_module_nam": 816, "module2": [816, 853, 1894], "module3": [816, 1894], "set_non_traceable_module_class": 816, "nontraceablemodule1": 816, "nontraceablemodule2": 816, "set_input_quantized_index": 816, "set_output_quantized_index": 816, "prepare_custom_config_dict": [816, 837, 839, 1916], "standalone_module_nam": 816, "standalone_module_class": 816, "module_class": 816, "float_to_observed_custom_module_class": [816, 837, 1916], "non_traceable_module_nam": 816, "non_traceable_module_class": 816, "input_quantized_idx": 816, "output_quantized_idx": 816, "float_class": 816, "qconfigmap": [817, 854, 855, 858, 860, 1916, 1919], "preparecustomconfig": [817, 860], "2048": [818, 1473, 1475, 1477, 1894], "upsample_r": 818, "per_tensor_affin": [818, 819, 820, 1718, 1719, 1720, 1721, 1916, 1919], "reduce_rang": [818, 819, 820, 821, 824, 826, 1869, 1916, 1917], "factory_kwarg": [818, 819, 824], "1920928955078125e": [818, 819, 820, 821, 824], "finfo": [818, 819, 820, 821, 824, 1252, 1255, 1334, 1866, 1932], "minmaxobserv": [818, 820, 824, 840, 860, 861, 1919], "x_": [819, 820, 970, 1081, 1271, 1272, 1274, 1277, 1285, 1347, 1366, 1420, 1437, 1463, 1465, 1585, 1793, 1795, 1837, 1891, 1919, 1926], "q_": [819, 1919], "x_orig": 819, "reset_min_max_v": [819, 824], "ch_axi": [821, 824, 1869], "per_channel_affin": [821, 824, 1717, 1916, 1919], "custom_op_nam": [822, 825], "with_arg": [823, 840, 860, 861], "_callable_arg": 823, "_with_arg": 823, "foo_build": 823, "foo_instance1": 823, "foo_instance2": 823, "with_callable_arg": 823, "_with_callable_arg": 823, "cur_tim": 823, "get_time_func": 823, "dan": 823, "creation_tim": 823, "compute_dtyp": 825, "ptq": [830, 1916, 1917, 1919], "obs_dict": 836, "get_observer_state_dict": 836, "allow_list": [837, 1934], "observer_non_leaf_module_list": 837, "preemptiv": [837, 838, 1610], "custommodul": [837, 1916], "propagate_qconfig_": 839, "qconfig_dict": [839, 853], "my_qconfig": 840, "default_observ": 840, "default_qat_config": 846, "set_glob": [853, 858, 860, 1916], "set_object_typ": [853, 858, 860], "set_module_name_regex": 853, "regex": 853, "set_module_nam": [853, 858, 860], "set_module_name_object_type_ord": 853, "global_qconfig": 853, "qconfig1": 853, "qconfig2": 853, "qconfig3": 853, "object_typ": 853, "module_name_regex": 853, "module_name_object_type_ord": 853, "conv0": 853, "x86": [854, 855, 1760, 1916, 1918], "run_arg": [856, 862], "qconfig_spec": 857, "quantize_fx": [858, 859, 860, 861, 1916, 1935], "_remove_qconfig": 858, "qconfig_from_prepar": 858, "prepared_model": [858, 860, 861], "xnnpack": [858, 1879, 1916], "get_default_backend_config": [858, 860, 861], "quantized_model": 858, "fusion_pattern": 859, "fusecustomconfig": 859, "_equalization_config": 860, "get_default_qconfig_map": [860, 1916], "float_model": [860, 861, 1934], "data_load": [860, 861, 1691, 1697, 1904], "get_default_qconfig": [860, 861, 1916], "linear_pattern_config": 860, "suer": 860, "sample_inference_data": 860, "get_default_qat_qconfig_map": [861, 1916], "load_weight": 861, "train_data": 861, "get_default_qat_qconfig": [861, 1916], "custom_module_class_map": 863, "lceil": [864, 941], "rceil": [864, 941], "adjac": [864, 931, 1369, 1370, 1371, 1375, 1731, 1925], "set_default_tensor_typ": [864, 921, 930, 1072, 1074, 1084, 1089, 1107, 1125, 1145, 1155, 1156, 1217, 1268, 1284, 1661, 1724, 1726, 1728, 1730, 1731, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1798, 1799, 1800, 1801, 1802, 1803, 1841, 1843, 1863], "get_default_dtyp": [864, 1268, 1284, 1666, 1731, 1927, 1928, 1937], "5000": [864, 879, 885, 886, 887, 923, 947, 1089, 1091, 1092, 1099, 1102, 1107, 1117, 1119, 1120, 1121, 1151, 1157, 1160, 1223, 1249, 1268, 1325, 1327, 1355, 1356, 1374, 1482, 1716, 1720, 1721, 1722, 1731, 1735, 1926, 1931], "3398": 873, "2663": [873, 1894], "2686": 873, "2450": 873, "7401": 873, "8805": 873, "3402": 873, "1936": 873, "4907": [873, 1285], "3948": [873, 965], "0691": 873, "3132": 873, "6092": 873, "5419": 873, "2993": [873, 1815], "3195": 873, "1139": 874, "2254": 874, "1381": [874, 1815], "3687": 874, "0100": [874, 1251, 1717], "1975": [874, 1886], "0102": 874, "4732": 874, "9240": 874, "1207": [874, 1319], "7506": 874, "0213": 874, "7809": 874, "2960": 874, "9384": 874, "1438": 874, "ascend": [875, 1091, 1234, 1236, 1265, 1318, 1751, 1789, 1848], "0785": 875, "5267": 875, "8521": 875, "4065": 875, "1598": 875, "0788": 875, "0745": 875, "2700": 875, "2208": 875, "0722": 875, "7064": 875, "2564": 875, "0669": 875, "2318": 875, "8229": 875, "9280": 875, "lexicograph": [876, 1656, 1871, 1925], "9039": 877, "6291": 877, "0795": [877, 1716, 1902], "1586": 877, "1939": 877, "4900": 877, "7503": 877, "9355": 877, "histori": [878, 879, 1137, 1675, 1830, 1878, 1886, 1896, 1898, 1922], "dlpack": [879, 1122, 1866], "frombuff": 879, "data_ptr": [879, 1884, 1927, 1929], "addbackward0": [879, 1902, 1907], "__array_interface__": 879, "5962": 880, "4985": 880, "4396": 880, "4525": [880, 1886], "6387": 880, "4552": 880, "sine": [881, 1772, 1782, 1784], "1606": 881, "4267": 881, "0899": 881, "0250": 881, "1599": 881, "1534": 881, "9435": 881, "8990": [881, 1066], "arctang": [882, 883], "2341": 882, "2539": 882, "6256": 882, "6448": 882, "2299": 882, "2487": 882, "5591": [882, 904], "5727": 882, "quadrant": 883, "9041": [883, 940], "0196": [883, 940], "3108": [883, 940], "4423": [883, 940], "9833": 883, "0811": 883, "9743": 883, "4151": 883, "tangent": [884, 894, 895, 1134, 1135, 1470, 1828, 1829], "9385": 884, "2968": 884, "8591": 884, "1871": 884, "7253": 884, "3060": 884, "2899": 884, "1893": 884, "needs_input_grad": [888, 1896], "setup_context": [889, 1897], "save_for_forward": [889, 1897], "grad_input": [890, 897, 899, 912, 1198, 1430, 1606, 1896, 1902], "underneath": 891, "generate_vmap_rul": [891, 1897], "out_dim": [891, 1139, 1858, 1869, 1885, 1897], "grad_tensor": [892, 906, 1869, 1894], "grad_vari": 892, "forward_ad": 893, "dual": [893, 894, 895, 1655, 1897], "make_du": [893, 895], "your_fn": 893, "unpack_du": [893, 894], "grad_aft": 893, "dual_level": [894, 895], "primal": [895, 1130, 1134, 1135, 1138], "x_npy": 896, "once_differenti": [896, 897, 898, 899, 1896], "g1": [897, 899, 1894, 1923], "g2": [897, 899, 1894, 1923], "oppos": [898, 1897], "weren": 898, "grad_out": [898, 1867, 1869, 1899], "gx": 898, "gy": 898, "gz": 898, "simplefunc": 899, "outer_jacobian_strategi": 900, "disconnect": [900, 901, 902, 903, 904, 905], "said": [900, 901, 902, 903, 904, 905, 1878, 1905], "cliff": [900, 902, 906], "_debug_only_display_vmap_fallback_warn": [900, 906], "pow_reduc": [900, 901, 904], "2265": 900, "8221": 900, "9456": [900, 922], "2550": 900, "viewbackward": [900, 902], "pow_adder_reduc": [900, 901, 904], "func_output": [901, 903, 904, 905], "1448": 901, "0239": 901, "6456": 901, "4988": 901, "4310": 901, "sumbackward0": [901, 904], "3030": 901, "vhp": 901, "batched_grad": 902, "exp_reduc": [902, 903, 905], "4917": 902, "4352": 902, "4369": 902, "3799": 902, "exp_add": 902, "8052": 902, "3963": 902, "3090": 903, "6742": 903, "9114": 903, "2106": 903, "sumbackward1": [903, 905], "squeezebackward1": 903, "adder": [903, 905], "2399": 903, "5005": 903, "0689": 904, "2431": 904, "0989": 904, "4456": 904, "8053": [904, 1746], "7817": 905, "2458": 905, "7830": 905, "7782": 905, "4458": 905, "3962": 905, "3042": [905, 1255], "6354": 905, "1288": [905, 1775], "0652": 905, "5483": 905, "5035": 905, "2046": [905, 965], "1292": 905, "1432": 905, "3059": 905, "3225": 905, "6652": 905, "7753": 905, "0152": 905, "4225": 905, "3340": 905, "only_input": 906, "allow_unus": [906, 1869], "is_grads_batch": 906, "materialize_grad": 906, "require_grad": [906, 1871, 1891], "06": [907, 908, 1238, 1243, 1244, 1255, 1256, 1261, 1384, 1439, 1478, 1481, 1526, 1595, 1670, 1684, 1816, 1869, 1932], "raise_except": [907, 908], "check_sparse_nnz": 907, "nondet_tol": [907, 908], "check_undefined_grad": [907, 908], "check_grad_dtyp": [907, 908], "check_batched_grad": [907, 908], "check_batched_forward_grad": 907, "check_forward_ad": 907, "check_backward_ad": 907, "fast_mod": [907, 908, 1899], "differenc": [907, 1896], "perturb": [907, 908, 1899], "sparsetensor": [907, 1801], "gradgradcheck": [907, 1896], "gen_non_contig_grad_output": 908, "check_fwd_over_rev": 908, "check_rev_over_rev": 908, "noncontigu": [908, 1014, 1932], "inaccuraci": 908, "clonebackward0": 910, "gi": [912, 913, 1902], "removablehandl": [912, 913, 1198, 1430, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1913], "eventlist": [915, 916], "group_by_stack_n": [916, 1915], "roof": 916, "functioneventavg": [916, 918], "window_length": [921, 930, 1155, 1156, 1217, 1869], "2n": [921, 1770, 1925], "trim": [921, 930, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1155, 1156, 1195], "_length": [921, 930, 1155, 1156, 1195, 1353, 1812], "sim": [922, 1444, 1572, 1708, 1728], "pseudorandom": [922, 1320, 1658, 1705, 1708, 1724, 1726, 1728, 1730, 1817], "1737": 922, "0950": [922, 1794], "3609": 922, "7148": 922, "0289": [922, 1840], "2676": 922, "8937": 922, "7202": 922, "2500": [923, 1089, 1091, 1092, 1102, 1107, 1268, 1482, 1722], "7500": [923, 1092, 1102, 1121, 1151, 1253, 1268, 1482, 1722, 1778], "AND": [924, 1279, 1871, 1891], "OR": [927, 1281, 1871], "operand": [928, 1071, 1871, 1872, 1896, 1925, 1928], "xor": [929, 1282, 1871], "blackman": [930, 1780], "arrang": 931, "broadcast_tensor": [933, 1869, 1911], "out_int32": [936, 1751, 1869], "formal": [936, 1751, 1878, 1885], "tensor_a": [938, 951], "tensor_b": 938, "6580": 939, "0969": 939, "4614": 939, "1034": [939, 1071], "5790": 939, "1497": 939, "x2": [940, 1245, 1422, 1478, 1479, 1511, 1568, 1869], "compute_mod": 940, "use_mm_for_euclid_dist_if_necessari": 940, "distanc": [940, 1195, 1233, 1234, 1261, 1390, 1439, 1478, 1479, 1569, 1691, 1812, 1816, 1866], "infti": [940, 1195, 1249, 1346, 1398, 1399, 1461, 1569, 1682, 1926], "use_mm_for_euclid_dist": 940, "donot_use_mm_for_euclid_dist": 940, "minkowski": [940, 1569], "ham": [940, 1155, 1569, 1776], "closest": [940, 1569], "xn": [940, 1569], "4821": [940, 943], "059": 940, "0590": 940, "1763": [940, 1734], "4713": [940, 1734], "6986": [940, 1734], "3702": [940, 1734], "1193": [940, 1287], "0959": 940, "7138": 940, "8322": 940, "2830": [940, 1842], "3791": 940, "6341": 941, "4208": 941, "0900": 941, "5826": 941, "clr": [942, 1691], "3375": 942, "9790": 942, "1119": 942, "6577": 942, "5609": [942, 1520], "5095": 942, "2614": 942, "4038": 942, "3378": [942, 1842], "4982": 942, "2457": [942, 1300], "2561": 942, "4684": 942, "7163": 942, "9647": 942, "8917": [942, 1278], "3213": [942, 1274], "2284": [942, 1051], "8615": 942, "2816": 942, "tu": 943, "mt": [943, 944, 1227, 1234, 1236, 1240, 1241, 1242, 1247, 1256, 1715, 1816, 1869, 1878, 1911, 1929, 1931], "4112": 943, "7486": 943, "4551": 943, "3544": 943, "6724": 943, "5528": 943, "0592": [943, 1902], "9371": 943, "5487": 943, "7023": 943, "03": [943, 944, 1275, 1773, 1774, 1779], "3842e": [943, 1243], "dpotri": 944, "spotri": 944, "uu": 944, "9935": 944, "6353": 944, "5806": 944, "8769": 944, "7183": [944, 1249, 1902], "6618": 944, "9314": 944, "2251": [944, 971, 1230, 1272], "0889": 944, "4439": 944, "2122": 944, "1412": 944, "5894e": 944, "semidefinit": 945, "7747": 945, "9549": 945, "3086": 945, "4114": 945, "8733": 945, "6355": 945, "9891": 945, "1974": 945, "4706": 945, "4115": 945, "6225": 945, "1625": 945, "6097": 945, "8398": 945, "2387": [945, 966], "3771": [945, 1244], "4173": 945, "1626": [945, 971, 1230], "tensor_split": [946, 1069, 1161, 1859, 1869, 1911, 1929], "min_valu": [947, 1389], "max_valu": [947, 1389, 1869], "_valu": [947, 1338, 1615, 1801, 1896, 1911, 1925], "7120": 947, "1734": [947, 1172], "0478": [947, 1861], "0922": 947, "3333": [947, 1151, 1160, 1482, 1483, 1830], "hstack": [950, 1869, 1911, 1925], "with_replac": [951, 1869], "combinations_with_replac": 951, "_glibcxx_use_cxx11_abi": 953, "exclude_tag": 958, "flip": [963, 1112, 1113, 1265, 1867, 1869, 1911, 1912], "writeabl": [963, 964], "is_conj": [963, 1739, 1869, 1911], "geq": [965, 1142, 1229, 1237, 1366, 1416, 1437, 1438, 1448, 1512, 1564, 1617, 1889, 1926], "signbit": [965, 1867, 1869, 1911, 1925], "2557": 965, "0026": 965, "5387": 965, "4740": 965, "9244": 965, "7079": 965, "2778": 965, "0249": [965, 1273], "5719": 965, "0059": 965, "2600": 965, "4475": 965, "9567": [965, 1233, 1815], "5757": 965, "1751": 965, "0742": 965, "2998": 965, "1054": 965, "2373": 965, "3190": [965, 1894], "1128": [965, 1255, 1400], "pearson": 966, "coeffici": [966, 1155, 1670, 1672, 1673, 1674, 1676, 1682, 1686, 1775, 1776, 1777, 1839], "r_": [966, 1832], "ij": [966, 1071, 1277, 1285, 1299, 1433, 1793], "c_": [966, 1358, 1359, 1360, 1361, 1362, 1363, 1400, 1442, 1443], "jj": 966, "hermitian": [966, 1087, 1088, 1090, 1092, 1093, 1094, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1227, 1228, 1233, 1234, 1236, 1240, 1241, 1242, 1252, 1255, 1261, 1869], "cov": [966, 1869, 1911], "2678": [966, 1373], "0908": 966, "3766": 966, "2780": 966, "5812": 966, "1535": [966, 1373], "2350": 966, "3582": 966, "4309": 967, "2706": 967, "8562": 967, "9796": [967, 1243], "1395": 967, "2957": 967, "6553": 967, "5574": 967, "1632": 968, "1835": 968, "6979": 968, "7325": [968, 1061], "0133": 968, "7860": 968, "2536": 968, "2805": 968, "sleef": [968, 1784], "unbias": [970, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1402, 1469, 1810, 1811, 1853, 1854, 1867, 1869], "_w": 970, "y_": [970, 1081, 1271, 1272, 1274, 1347, 1366, 1396, 1793, 1837, 1891, 1926], "w_i": [970, 1237], "mu_x": 970, "mu_i": [970, 1676], "whichev": [970, 1139, 1529, 1716, 1858, 1894], "w_ix_": 970, "bessel": [970, 1217, 1779, 1810, 1811, 1853, 1854, 1926], "corrcoef": [970, 1869, 1911], "6667": [970, 1160, 1482, 1483, 1736, 1770, 1907], "fw": 970, "4282": 970, "0255": [970, 1058], "4144": [970, 1894], "4169": 970, "3956": [971, 1230], "1455": [971, 1230, 1908], "6895": [971, 1230], "5849": [971, 1230], "3599": [971, 1230], "7180": [971, 1230], "0521": [971, 1230], "1339": [971, 1230], "0225": [971, 1230, 1243], "0257": [971, 1230], "4725": [971, 1230], "1479": [971, 1230], "7005": [971, 1230], "9757": [971, 1230], "3904": [971, 1230], "3726": [971, 1230], "1836": [971, 1230], "9688": [971, 1230], "7153": [971, 1230, 1926], "2159": [971, 1230], "0844": [971, 1230], "5281": [971, 1230], "6120": [971, 1230], "4490": [971, 1230], "5687": [971, 1230], "9792": [971, 1052, 1230], "8304": [971, 1230], "3037": [971, 1230, 1902], "5650": [971, 1230], "2329": [971, 1230], "9883": [971, 1230], "0551": [971, 1230], "capture_begin": [972, 1894], "make_graphed_cal": [972, 1894], "graph_pool_handl": [972, 1006], "other_graph_inst": [972, 1006], "capture_end": [972, 1894], "debug_dump": 972, "debug_path": 972, "enable_debug_mod": 972, "path_to_so_fil": 973, "alloc_fn_nam": 973, "free_fn_nam": 973, "ctype": 973, "change_current_alloc": [973, 1894], "ssize_t": [973, 1894], "cudastream_t": [973, 975, 1894], "ptr": [973, 1894], "size_t": 973, "oss": 973, "enable_tim": [974, 1894], "interprocess": 974, "marker": 974, "elapsed_tim": [974, 1894], "end_ev": [974, 1894], "elaps": [974, 1881], "from_ipc_handl": 974, "reconstruct": [974, 1287, 1346, 1347, 1899, 1907, 1913], "ipc": [974, 1010], "ipc_handl": 974, "proceed": [974, 1384, 1922, 1923], "cudaeventsynchron": 974, "cudastreamwaitev": [974, 975, 977], "stream_ptr": 975, "record_ev": [975, 977], "cudastreamsynchron": [975, 977], "wait_ev": [975, 977], "interoper": 979, "caching_allocator_delet": 979, "mem_ptr": 980, "caching_allocator_alloc": 980, "peer_devic": 981, "_cudaalloc": 982, "clock": 983, "sm": 983, "hertz": 983, "smi": [983, 996, 1024, 1030, 1034, 1048, 1049, 1894, 1898, 1900], "buffer_s": 985, "10485760": 985, "chunk_siz": [988, 1133, 1139, 1858], "cublashandle_t": 989, "unoccupi": [996, 1308], "pytorch_cuda_alloc_conf": [997, 1894], "cudamallocasync": [997, 1028, 1894], "_cudadeviceproperti": 1001, "gencod": 1002, "cuda_graph": 1006, "ordinari": [1008, 1610, 1890], "code_str": [1014, 1015], "temp": 1014, "typenam": [1014, 1015], "my_kernel": [1014, 1015], "jitted_fn": [1014, 1015], "create_jit_fn": [1014, 1015], "util_fn": 1014, "gelu": [1014, 1459, 1473, 1475, 1477, 1582, 1867, 1869, 1886, 1911], "my_gelu": 1014, "my_lib": [1014, 1875, 1908], "impl": [1014, 1875], "num_output": 1015, "sample_arg": 1017, "num_warmup_it": 1017, "allow_unused_input": 1017, "datadistributedparallel": 1017, "manual_seed_al": 1018, "occupi": [1020, 1024, 1035, 1306, 1418, 1547, 1894, 1900, 1937], "reset_peak_memory_stat": [1020, 1022, 1035, 1036], "max_memory_reserv": [1021, 1894, 1900], "cudamemgetinfo": 1023, "memory_reserv": [1025, 1894, 1900], "snapshot": [1027, 1871, 1894, 1900], "large_pool": 1028, "small_pool": 1028, "allocated_byt": 1028, "cudamalloc": [1028, 1894], "reserved_byt": 1028, "active_byt": 1028, "inactive_split": 1028, "inactive_split_byt": 1028, "octob": 1028, "1mb": 1028, "num_alloc_retri": 1028, "num_oom": 1028, "assist": [1028, 1895], "max_split_s": 1028, "oversize_alloc": 1028, "oversize_seg": 1028, "requested_byt": 1028, "abbrevi": 1029, "msg": [1031, 1033, 1915, 1932], "instantan": [1031, 1915], "ascii": [1031, 1033, 1269, 1871, 1915], "sensor": [1034, 1048], "mw": 1034, "milliwatt": 1034, "fermi": 1034, "max_memory_alloc": [1035, 1894, 1900], "max_memory_cach": 1036, "memory_stat": [1037, 1894, 1900], "seed_al": 1038, "environment": 1040, "total_memori": [1041, 1315], "debug_mod": [1045, 1758], "streamcontext": [1046, 1866], "centigrad": 1048, "x_1": [1050, 1051, 1052, 1053, 1265, 1351, 1364, 1365, 1500, 1511, 1837], "x_2": [1050, 1051, 1052, 1053, 1265, 1351, 1364, 1365, 1500, 1511], "x_3": [1050, 1051, 1052, 1053, 1265], "3449": 1050, "5447": 1050, "0685": 1050, "5104": [1050, 1894], "1706": 1050, "2259": 1050, "4696": 1050, "3284": 1050, "9946": 1050, "8209": [1050, 1053], "6628": 1051, "0975": 1051, "2680": [1051, 1893], "3298": [1051, 1058], "4220": 1051, "3885": 1051, "1762": 1051, "9165": 1051, "6684": [1051, 1175], "6001": 1052, "2069": 1052, "1919": 1052, "6727": [1052, 1065], "0062": 1052, "4126": 1052, "2129": 1052, "4206": 1052, "1968": [1052, 1926], "1241": 1052, "0238": 1052, "0233": [1052, 1723], "0157": 1052, "0158": [1052, 1816], "0065": 1052, "0014": [1052, 1926], "0006": 1052, "8286": 1053, "4890": 1053, "5155": 1053, "8443": 1053, "1865": 1053, "1752": [1053, 1061], "0595": 1053, "1850": 1053, "1571": [1053, 1902, 1907], "4243": 1053, "3175": 1053, "8020": [1053, 1713], "0423": 1053, "2289": 1053, "0537": 1053, "0058": 1053, "9780": 1053, "trapezoid": [1054, 1838, 1869, 1911], "360": 1055, "2832": 1055, "diagflat": [1058, 1869, 1911], "5950": 1058, "0872": 1058, "4264": 1058, "1064": [1058, 1902], "8795": 1058, "2429": 1058, "1374": 1058, "1029": 1058, "6482": 1058, "6300": 1058, "5410": 1059, "2934": 1059, "1788": [1059, 1926], "5684": 1059, "0845": [1059, 1784, 1902], "3986": 1059, "2956": [1060, 1230], "9068": 1060, "1695": 1060, "2094": [1060, 1894], "3018": 1060, "1516": 1060, "9342": 1060, "0854": 1061, "1431": 1061, "8536": 1061, "0905": 1061, "0360": [1061, 1319], "6927": 1061, "3735": 1061, "4945": 1061, "2631": [1061, 1318, 1894], "3755": 1061, "5977": 1061, "8172": 1061, "1065": [1061, 1902], "0401": 1061, "2235": [1061, 1815], "7938": 1061, "3081": 1061, "6166": 1061, "2335": 1061, "0500": 1061, "7336": 1061, "3836": 1061, "1015": 1061, "emb": [1062, 1754, 1785], "5393": 1065, "8675": 1065, "5916": 1065, "6321": 1065, "0967": 1065, "0511": 1065, "6295": 1065, "8360": 1065, "6973": 1065, "6537": 1065, "dividend": [1066, 1116, 1119, 1735, 1844], "true_divid": [1066, 1869, 1911], "3810": [1066, 1159], "2774": 1066, "2972": 1066, "3719": 1066, "4637": 1066, "7620": 1066, "5548": 1066, "5944": 1066, "7438": 1066, "9274": 1066, "3711": 1066, "9353": 1066, "4605": 1066, "2917": 1066, "1815": [1066, 1278], "0111": [1066, 1773], "9805": 1066, "5923": 1066, "1062": 1066, "4581": [1066, 1237], "7759": 1066, "2344": 1066, "1830": 1066, "0313": 1066, "1908": 1066, "4757": 1066, "8032": 1066, "2930": 1066, "8113": 1066, "2308": 1066, "4620": [1066, 1861], "6051": 1066, "5676": 1066, "2639": 1066, "2260": 1066, "4509": [1066, 1251], "2086": 1066, "1322": 1066, "9764": 1066, "9564": 1066, "3484": 1066, "2278": 1066, "1068": [1066, 1172], "4678": 1066, "3938": [1066, 1825], "depthwis": [1069, 1070, 1358, 1359, 1360], "atleast_3d": [1070, 1869, 1911], "notat": [1071, 1396, 1764, 1872, 1902, 1931], "einstein": 1071, "summat": [1071, 1195, 1277, 1285, 1925], "subscript": [1071, 1872, 1904], "ik": [1071, 1270, 1793], "za": 1071, "alphabet": [1071, 1513, 1921], "arrow": [1071, 1923], "ki": 1071, "ellipsi": [1071, 1871, 1872, 1885], "fourth": 1071, "whitespac": [1071, 1872], "opt_einsum": [1071, 1866], "_the_": 1071, "disclaim": 1071, "52": 1071, "op1": [1071, 1871], "sublist1": 1071, "op2": [1071, 1871], "sublist2": 1071, "subslist_out": 1071, "2104": 1071, "7952": 1071, "2433": 1071, "4545": 1071, "1156": 1071, "2897": [1071, 1902], "3918": 1071, "4963": 1071, "3744": 1071, "9381": 1071, "2685": 1071, "6070": 1071, "7208": 1071, "8058": 1071, "4419": 1071, "0936": 1071, "1713": 1071, "4291": 1071, "5802": 1071, "7350": [1071, 1926], "5704": 1071, "4290": 1071, "9323": 1071, "4480": 1071, "bij": 1071, "bjk": 1071, "bik": 1071, "0564": 1071, "5904": 1071, "2023": 1071, "1271": 1071, "6706": [1071, 1716], "8097": 1071, "8025": 1071, "1183": 1071, "2239": [1071, 1257], "3107": 1071, "5756": 1071, "2354": 1071, "4558": 1071, "3460": 1071, "5087": 1071, "8530": [1071, 1355, 1485], "8153": 1071, "8787": 1071, "3839": [1071, 1857], "2112": [1071, 1840], "3728": 1071, "1131": [1071, 1713], "0921": 1071, "8305": 1071, "ji": 1071, "anm": 1071, "bm": 1071, "ba": 1071, "3430": [1071, 1278], "2405": 1071, "4494": 1071, "3311": 1071, "5201": 1071, "0356": 1071, "4064e": 1072, "8000e": 1072, "3493e": 1072, "5751e": 1072, "1428e": 1072, "5955e": 1072, "9683e": 1074, "1239e": 1074, "0705e": 1074, "set_grad_en": [1075, 1869, 1911, 1933], "parenthesi": [1075, 1173, 1655], "doubler": [1075, 1655], "elsewher": [1076, 1084, 1142, 1154, 1188, 1190, 1191, 1194, 1222, 1286, 1331, 1794, 1865], "_max": [1085, 1086, 1916], "_min": [1085, 1086, 1916], "nearbi": [1085, 1086], "_int": [1085, 1086], "_point": [1085, 1086], "2525": 1085, "0466": 1085, "3491": [1085, 1251], "2168": [1085, 1832], "5906": [1085, 1926], "6258": 1085, "6444": 1085, "0542": 1085, "0475": [1085, 1926], "0486": 1085, "3405": 1085, "6134": [1085, 1300], "6323": 1085, "0552": 1086, "9730": 1086, "3973": 1086, "0780": 1086, "4000": [1086, 1089, 1098, 1107, 1482, 1719, 1770], "6000": [1086, 1473, 1475, 1477, 1482, 1719, 1767, 1770], "fourier": [1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1195, 1780, 1812, 1866], "rfft": [1087, 1092, 1102, 1106, 1107, 1108], "compact": [1087, 1088, 1090, 1240, 1242, 1245, 1896, 1909, 1916], "chalf": [1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1102, 1103, 1104, 1869, 1911, 1931], "sm53": [1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108], "ortho": [1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1270], "orthonorm": [1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1261, 1617, 1816], "ifft": [1087, 1091, 1092, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104], "fftn": [1088, 1091, 1097, 1100, 1108], "rfft2": [1088, 1103], "ifft2": [1088, 1100], "two_fft": [1088, 1090, 1100, 1106, 1108], "check_strid": [1088, 1090, 1091, 1096, 1097, 1102, 1103, 1104, 1106, 1108, 1932], "nyquist": [1089, 1091, 1099, 1101, 1105, 1106, 1107, 1108], "i_1": [1090, 1108, 1218], "i_n": [1090, 1108, 1139, 1218, 1832, 1858], "rfftn": [1090, 1094, 1100, 1104, 1106], "ifftn": [1090, 1096, 1101], "rearrang": [1091, 1098, 1354, 1442, 1443, 1570, 1571, 1885], "fftfreq": [1091, 1098, 1107], "9000": [1091, 1830], "8000": [1091, 1325, 1482, 1716, 1770], "uncent": 1091, "ifftshift": 1091, "x_center": 1091, "x_uncent": 1091, "fft_uncent": 1091, "fft_center": 1091, "x_centered_2": 1091, "ihfft": [1092, 1100, 1101], "irfft": [1092, 1104, 1105], "symmetri": [1092, 1094, 1812], "opposit": [1092, 1094, 1816, 1836], "transformed_dim_s": [1092, 1102], "0000j": [1092, 1099, 1102, 1227, 1228, 1233, 1234, 1236, 1709, 1767], "1250": [1092, 1318], "1720j": 1092, "0406j": 1092, "2809": 1092, "6250": [1092, 1102, 1121, 1482], "9691": 1092, "hfftn": [1093, 1101], "last_dim_s": [1093, 1094, 1103, 1104, 1867], "ihfft2": 1093, "roundtrip": [1093, 1094, 1102, 1103, 1104], "ihfftn": [1094, 1100], "irfftn": [1094, 1103, 1108], "fft2": [1096, 1106], "two_ifft": [1096, 1097, 1101], "fftshift": 1098, "hfft": 1099, "6882j": 1099, "1625j": 1099, "hfft2": 1100, "8602j": 1102, "2031j": 1102, "1562": 1102, "3511": 1102, "7812": 1102, "2114": 1102, "irfft2": 1106, "wider": [1114, 1868, 1871, 1912, 1925], "49": [1114, 1253, 1893], "2500e": 1114, "1000e": 1114, "7656e": 1114, "lfloor": [1115, 1120, 1338, 1343, 1344, 1345, 1358, 1359, 1360, 1377, 1398, 1399, 1423, 1424, 1425, 1481, 1482, 1483, 1484, 1498, 1567, 1731, 1812], "rfloor": [1115, 1120, 1338, 1343, 1344, 1345, 1358, 1359, 1360, 1377, 1398, 1399, 1423, 1424, 1425, 1481, 1482, 1483, 1484, 1498, 1567, 1731, 1812], "8166": 1115, "5308": 1115, "2530": 1115, "2091": 1115, "7000": [1117, 1374, 1769], "3000": [1118, 1373, 1769, 1894], "entrywis": [1119, 1735], "modulu": [1119, 1257, 1735], "operatornam": [1120, 1233, 1234, 1235, 1236, 1253, 1261, 1346, 1347, 1353, 1390, 1391, 1397, 1421, 1461, 1479, 1769], "8750": [1121, 1482], "char": [1124, 1666, 1884, 1927], "parameter_and_buffer_dict": 1127, "tie_weight": [1127, 1652], "submodule_nam": [1127, 1652], "parameter_nam": [1127, 1652], "ty": [1127, 1652], "foo_ti": [1127, 1652], "new_a": [1127, 1652], "mutlipl": 1127, "grad_weight": [1127, 1896], "detached_param": 1127, "parameters_and_buffer_dict": 1127, "reparamater": [1127, 1652], "paramat": 1127, "intermediate_upd": 1128, "mutations_and_view": 1128, "intermeid": 1128, "inpt": 1128, "out1": [1128, 1869], "out2": [1128, 1869], "f_trace": 1128, "f_no_mutations_trac": 1128, "f_no_mutations_and_views_trac": 1128, "a_1": [1128, 1218], "view_1": 1128, "view_copi": [1128, 1869, 1911, 1933], "view_copy_1": 1128, "as_strid": [1128, 1867, 1869, 1911, 1929], "writ": 1128, "native_funct": [1128, 1867, 1896], "yaml": [1128, 1867, 1896], "aux": [1129, 1130, 1132, 1133, 1134, 1138], "my_loss_func": 1129, "y_pred": [1129, 1894], "loss_per_sampl": 1129, "y_true": 1129, "autodiff": [1132, 1133, 1134, 1256], "jacobian_f": [1132, 1133], "f_x": [1132, 1133], "jacboian": [1132, 1133], "expectedx": [1132, 1133], "expectedi": [1132, 1133], "_preallocate_and_copi": 1133, "stand": [1134, 1138, 1870, 1913, 1923], "jvp_out": 1134, "jvp_fn": 1135, "requr": 1135, "optimiz": [1137, 1868], "l1": [1137, 1390, 1391, 1461, 1538, 1583, 1627, 1636, 1902, 1907], "l2": [1137, 1391, 1421, 1461, 1669, 1670, 1671, 1672, 1674, 1676, 1682, 1683, 1685, 1890], "vjpfunc": 1138, "unsuccessfulli": [1139, 1858], "rummag": [1139, 1858], "batched_dot": [1139, 1858], "imposs": [1139, 1858, 1890], "jacobian_row": [1139, 1858], "get_vjp": [1139, 1858], "n1": [1139, 1737, 1858], "n0": [1139, 1858], "batched_pow": [1139, 1858], "autobatch": [1139, 1858], "sparse_grad": [1140, 1867, 1869], "tau": [1143, 1237, 1531, 1671, 1685, 1702, 1703, 1773, 1869], "elementari": [1143, 1891, 1899], "reflector": [1143, 1617, 1703], "household": [1143, 1237, 1617, 1703], "householder_product": [1143, 1617, 1702], "gel": [1143, 1243], "set_default_dtyp": 1145, "set_deterministic_debug_mod": [1146, 1851], "edge_ord": [1151, 1869], "mathbb": [1151, 1227, 1229, 1233, 1234, 1235, 1236, 1237, 1238, 1243, 1244, 1247, 1249, 1256, 1258, 1260, 1261, 1366, 1437, 1617], "rightarrow": 1151, "interior": 1151, "theorem": 1151, "h_l": 1151, "h_r": 1151, "neighbor": [1151, 1195, 1482, 1484, 1812], "xi_1": 1151, "xi_2": 1151, "approx": [1151, 1817, 1899], "outermost": 1151, "80": [1151, 1253, 1695, 1764, 1894, 1912], "halv": 1151, "coord": 1151, "54": [1155, 1392, 1776], "46": [1155, 1775], "hann_window": [1155, 1812, 1869, 1873, 1911], "hann": [1156, 1776], "hist": [1159, 1160, 1869], "bin_edg": [1159, 1160, 1869], "9524": 1159, "leftmost": [1160, 1886], "leg": 1164, "triangl": [1164, 1930], "hypotenus": 1164, "4031": 1164, "gammainc": [1166, 1926], "gammaincc": [1167, 1926], "index_reduce_": [1171, 1869], "1427": 1172, "0231": 1172, "5414": 1172, "0009": 1172, "4664": [1172, 1832], "2647": 1172, "1228": 1172, "6571": 1172, "7230": 1172, "6004": 1172, "inferencemod": [1173, 1891], "bump": 1173, "_version": [1173, 1911], "multidimension": [1175, 1267, 1393], "8173": 1175, "0874": 1175, "1784": 1175, "3279": 1175, "7894": 1175, "4682": 1175, "7159": 1175, "1506": 1175, "4034": 1175, "3657": 1175, "0387": 1175, "9892": 1175, "1774": 1175, "3261": 1175, "3917": 1175, "4537": [1175, 1601], "7493": 1175, "1724": 1175, "2291": 1175, "5749": 1175, "2267": 1175, "7920": 1175, "3607": 1175, "3701": 1175, "3666": 1175, "5850": [1175, 1228], "7242": 1175, "9837": 1175, "1560": 1175, "2907": 1175, "6785": 1175, "5671": [1175, 1229], "5452": 1175, "6912": 1175, "5509": 1175, "1782": 1175, "9843": 1175, "7366": 1175, "5672": [1175, 1658], "5115": 1175, "4864": 1175, "2476": 1175, "4337": 1175, "6347": 1175, "1748": 1175, "3567": [1175, 1228], "6558": 1175, "2469": [1175, 1902], "5787": [1175, 1278], "typecheck": [1185, 1911], "mypi": [1185, 1870, 1871], "warn_alwai": 1186, "set_warn_alwai": 1186, "nonfinit": 1187, "test_el": [1189, 1869], "assume_uniqu": [1189, 1869], "0j": [1194, 1855], "nola": 1195, "envelop": 1195, "hop": [1195, 1812], "shorter": [1195, 1909, 1921], "griffin": 1195, "ieee": [1195, 1384, 1780, 1905], "tran": 1195, "assp": 1195, "vol": [1195, 1384, 1780], "pp": [1195, 1384, 1780], "236": 1195, "apr": 1195, "1984": 1195, "slide": [1195, 1343, 1344, 1345, 1377, 1423, 1424, 1425, 1481, 1523, 1553, 1554, 1555, 1597, 1720, 1721, 1812], "fft_size": 1195, "scriptmodul": [1196, 1197, 1202, 1205, 1207, 1208, 1209, 1213, 1214, 1668, 1868, 1870, 1879, 1909], "implic": [1196, 1213, 1896, 1921, 1925], "attributemodul": 1196, "names_ag": 1196, "9223372036854775807": [1196, 1643, 1881], "get_debug_st": 1197, "graphexecutorst": 1197, "_extra_fil": [1197, 1198, 1205, 1208, 1901], "save_to_buff": 1197, "add_modul": [1198, 1430], "init_weight": [1198, 1430, 1902], "buf": [1198, 1430], "20l": [1198, 1430], "1l": [1198, 1430], "5l": [1198, 1430], "code_with_const": 1198, "constmap": 1198, "extra_repr": [1198, 1430, 1896], "get_buff": [1198, 1430], "attributeerror": [1198, 1430, 1896, 1916], "get_extra_st": [1198, 1430], "set_extra_st": [1198, 1430], "get_paramet": [1198, 1430], "net_b": [1198, 1430], "net_c": [1198, 1430], "inlined_graph": 1198, "ipu": [1198, 1430, 1907], "missing_kei": [1198, 1430], "unexpected_kei": [1198, 1430], "remove_dupl": [1198, 1430], "named_children": [1198, 1430, 1902], "conv4": [1198, 1430], "conv5": [1198, 1430], "register_backward_hook": [1198, 1430, 1606], "register_full_backward_hook": [1198, 1430, 1902], "register_buff": [1198, 1430, 1603, 1868, 1870, 1896, 1902], "register_forward_hook": [1198, 1430, 1604, 1902], "with_kwarg": [1198, 1430], "register_module_forward_hook": [1198, 1430, 1902], "register_forward_pre_hook": [1198, 1367, 1430, 1605, 1902], "forward_pr": [1198, 1430], "register_module_forward_pre_hook": [1198, 1430, 1902], "register_module_full_backward_hook": [1198, 1430, 1602, 1891, 1902], "register_full_backward_pre_hook": [1198, 1430, 1902], "register_module_full_backward_pre_hook": [1198, 1430, 1902], "register_load_state_dict_post_hook": [1198, 1430], "incompatible_kei": [1198, 1430], "register_modul": [1198, 1430, 1608], "register_paramet": [1198, 1430, 1609, 1896, 1902], "register_state_dict_pre_hook": [1198, 1430], "keep_var": [1198, 1430], "finetun": [1198, 1430], "gan": [1198, 1430, 1618, 1651], "share_memori": [1198, 1430, 1904], "share_memory_": [1198, 1430, 1883, 1927], "shallow": [1198, 1367, 1430, 1478, 1479], "channels_last": [1198, 1430, 1610, 1928], "4d": [1198, 1349, 1377, 1394, 1430, 1482, 1523, 1540, 1567, 1598, 1719], "1913": [1198, 1430], "3420": [1198, 1430], "5113": [1198, 1430, 1832], "2325": [1198, 1230, 1430], "gpu1": [1198, 1430], "1914": [1198, 1430], "5112": [1198, 1430, 1894], "3741": [1198, 1430], "2382": [1198, 1319, 1430], "5593": [1198, 1430], "4443": [1198, 1430], "6122": [1198, 1430], "1150": [1198, 1430], "to_empti": [1198, 1430], "dst_type": [1198, 1430], "xpu": [1198, 1430, 1915], "set_to_non": [1198, 1430, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1894], "the_typ": 1199, "the_valu": 1199, "script_bar": 1201, "addmod": 1201, "preserved_attr": 1202, "optimize_numer": 1202, "run_frozen_optim": 1202, "scripted_modul": [1202, 1209, 1907], "frozen_modul": 1202, "modified_tensor": 1202, "mymodule2": 1202, "dump_alias_db": 1202, "pdb": [1203, 1209, 1215, 1868, 1870], "training_method": 1203, "target_typ": 1204, "refin": [1204, 1885], "testcod": [1204, 1870], "key1": 1204, "val1": 1204, "key2": 1204, "val2": 1204, "_restore_shap": 1205, "scriptfunct": [1205, 1209, 1210, 1213, 1909], "readlin": [1205, 1269, 1913], "seek": [1205, 1269, 1913, 1916], "retrac": 1205, "rb": [1205, 1269], "extra_fil": [1205, 1208], "other_method": 1207, "lesser": [1207, 1891, 1893], "extent": [1207, 1893, 1925], "frozen_mod": 1207, "offlin": 1208, "_frames_up": 1209, "_rcb": 1209, "scriptdict": 1209, "scriptlist": 1209, "test_sum": 1209, "scripted_fn": [1209, 1868], "conv2": [1209, 1430, 1458, 1868, 1916], "some_entry_point": 1209, "python_only_fn": 1209, "testnnmodul": 1209, "pdt_model": 1209, "scripted_model": [1209, 1913], "un": [1211, 1353, 1916], "unfus": 1211, "nb": 1211, "check_trac": [1213, 1214], "check_input": [1213, 1214, 1868], "check_toler": [1213, 1214], "_force_outplac": [1213, 1214], "_module_class": [1213, 1214], "_compilation_unit": [1213, 1214], "compilationunit": [1213, 1214], "example_kwarg_input": 1213, "_store_input": [1213, 1214], "trace_modul": [1213, 1868, 1871], "untrack": 1213, "checker": [1213, 1214, 1871, 1909], "diverg": [1213, 1214, 1396, 1541, 1866, 1871], "traced_foo": [1213, 1868], "example_weight": [1213, 1214], "example_forward_input": [1213, 1214], "example_inputs_is_kwarg": 1214, "method2": 1214, "example_method2_input": 1214, "weighted_kernel_sum": 1214, "use_memory_effici": 1215, "memory_effici": 1215, "scriptabl": 1215, "kaiser": [1217, 1473, 1475, 1477], "i_0": [1217, 1218, 1779, 1832, 1926], "zeroth": [1217, 1779, 1926], "out_i": 1217, "kroneck": 1218, "a_0": 1218, "a_n": 1218, "b_0": 1218, "b_1": 1218, "b_n": 1218, "k_0": [1218, 1832], "k_1": 1218, "k_n": 1218, "j_0": 1218, "j_1": 1218, "j_n": 1218, "k_t": 1218, "i_t": [1218, 1400, 1684], "b_t": 1218, "j_t": 1218, "bmatrix": 1218, "a_": [1218, 1289, 1418, 1832], "cdot": [1218, 1243, 1255, 1346, 1347, 1365, 1366, 1388, 1396, 1433, 1434, 1435, 1436, 1437, 1473, 1511, 1534, 1709, 1812, 1926, 1932], "vdot": [1218, 1265, 1266, 1869, 1911], "ddot": [1218, 1265], "kth": 1219, "full_lik": [1223, 1869, 1873, 1911], "logarithm": [1226, 1231, 1257, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1284, 1353, 1513, 1548, 1792, 1926], "gamma": [1226, 1348, 1349, 1350, 1385, 1393, 1394, 1395, 1402, 1469, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1685, 1687, 1691, 1692, 1695, 1700, 1701, 1719, 1866, 1869, 1909, 1911, 1912, 1926], "5724": [1226, 1926], "1208": [1226, 1926], "mathrlap": [1227, 1233, 1234, 1235, 1236, 1244, 1247, 1256, 1258, 1260, 1261, 1617], "qquad": [1227, 1229, 1233, 1234, 1235, 1236, 1237, 1244, 1247, 1256, 1258, 1260, 1261, 1617], "eigenvalu": [1227, 1233, 1234, 1235, 1236, 1249, 1252, 1255, 1260, 1261, 1270, 1705, 1869], "resp": [1227, 1234, 1236, 1260, 1261, 1278], "5266": 1227, "9586": 1227, "0626j": 1227, "4160": 1227, "5895": 1227, "2322": 1227, "2976j": 1227, "4928": [1227, 1832], "4692e": 1227, "8747e": 1227, "check_error": [1228, 1239, 1241, 1246, 1259, 1869], "performantli": 1228, "3792": 1228, "9831j": 1228, "8757": 1228, "5425": 1228, "6374j": 1228, "kappa": 1229, "_p": [1229, 1439], "frobeniu": [1229, 1243, 1250, 1254, 1657], "nuc": [1229, 1250, 1254, 1267, 1628, 1637, 1657], "nuclear": [1229, 1250, 1254, 1657], "sigma_1": [1229, 1243, 1252, 1255], "sigma_n": 1229, "kappa_2": 1229, "kappa_": 1229, "4142": [1229, 1254, 1657, 1709], "1623": [1229, 1250], "2426": [1229, 1254, 1657], "7071": [1229, 1772], "5917": 1229, "9941": 1230, "5132": 1230, "5681": 1230, "4653": 1230, "4507": 1230, "4119": 1230, "6163": 1230, "1073": 1230, "3957": 1230, "9666": [1230, 1520], "0840": 1230, "3357": 1230, "2139": 1230, "slogdet": [1231, 1278, 1869, 1911], "0934": 1231, "1990": [1231, 1278], "4099": [1231, 1278], "7386": [1231, 1278], "diagonaliz": [1233, 1235], "eigenvector": [1233, 1234, 1270, 1869], "neq": [1233, 1234, 1237, 1261, 1331, 1433, 1435, 1670, 1671, 1672, 1674, 1676, 1682, 1683, 1685, 1689, 1816], "phi": [1233, 1234, 1261, 1380, 1527, 1816], "shall": [1233, 1234, 1261, 1619, 1623], "lambda_i": [1233, 1234, 1249], "lambda_j": [1233, 1234], "eigval": [1233, 1869], "9828": [1233, 1840, 1902], "3889j": 1233, "4617": 1233, "3010j": 1233, "1662": 1233, "7435j": 1233, "6139": 1233, "0562j": 1233, "1226": [1233, 1235], "5738j": [1233, 1235], "7537": [1233, 1235], "1286j": [1233, 1235], "9218": 1233, "1882": 1233, "2220j": 1233, "0270": 1233, "3867j": 1233, "7119e": 1233, "2841e": 1233, "uplo": [1234, 1236, 1869], "unitari": [1234, 1237, 1256, 1261, 1617, 1703], "eigvalsh": [1234, 1252], "9228": [1234, 1236], "2029": [1234, 1236], "0862j": [1234, 1236], "3464": [1234, 1236], "3277": [1234, 1236], "9415": [1234, 1236], "0846": 1234, "9964": 1234, "9170": 1234, "3898j": 1234, "0331j": 1234, "1062e": 1234, "5423e": 1234, "polynomi": [1235, 1236, 1698], "_n": [1235, 1236, 1238, 1617, 1896], "4576e": [1235, 1262], "5797": 1236, "4629": 1236, "1605": 1236, "3780": 1236, "1113": [1236, 1902], "7381": 1236, "h_1h_2": 1237, "h_k": 1237, "h_i": [1237, 1464], "_m": [1237, 1617], "tau_i": 1237, "8034": 1237, "4184j": 1237, "2588": 1237, "0174j": 1237, "6853": 1237, "7953j": 1237, "0790": 1237, "5620j": 1237, "6989j": 1237, "5360": 1237, "1193j": 1237, "3877": 1237, "6691j": 1237, "3512": 1237, "3024j": 1237, "4766": 1237, "5783j": 1237, "0361": [1237, 1902], "6587j": 1237, "6396": [1237, 1902], "1612j": 1237, "3693": 1237, "4481j": 1237, "aa": 1238, "pinv": [1238, 1243, 1707], "moor": [1238, 1255], "penros": [1238, 1255], "ainv": [1238, 1239, 1259, 1263], "1921e": 1238, "9073e": [1238, 1481], "5107e": 1238, "ldl": [1240, 1242], "indefinit": 1240, "ld": [1240, 1241, 1242, 1869], "sytrf": [1240, 1241], "ldl_solv": 1240, "ldl_factor_ex": [1240, 1242], "2079": [1240, 1241, 1926], "2414": [1240, 1241], "9428": [1240, 1241], "4554": [1240, 1241], "3264": [1240, 1241], "3823": [1240, 1241], "5884": [1240, 1241], "9595": [1240, 1241, 1772], "2695": [1240, 1241], "8513": [1240, 1241], "1633": [1240, 1241], "ldl_factor": 1241, "rcond": [1243, 1255, 1707, 1869], "_f": 1243, "gelsi": 1243, "gelsd": 1243, "gelss": 1243, "tridiagon": 1243, "sigma_i": [1243, 1261, 1816], "residu": [1243, 1270, 1869, 1902], "singular_valu": [1243, 1869], "lh": 1243, "rh": [1243, 1288], "0838": [1243, 1902], "2275": [1243, 1318], "3844": 1243, "5499": 1243, "1175": 1243, "9102": 1243, "0870": 1243, "6772": 1243, "7758": 1243, "5109": 1243, "4382": 1243, "3769": 1243, "1818": 1243, "3450": 1243, "0806": [1243, 1902], "3967": 1243, "3994": 1243, "1521": 1243, "1473": 1243, "9194": 1243, "0458": 1243, "6705": [1243, 1302], "1802": 1243, "4086": 1243, "5152e": 1243, "5007": 1244, "9755": 1244, "0489": 1244, "9644": [1244, 1297], "9605e": 1244, "0376e": 1244, "lu_factor_ex": [1245, 1287], "lu_unpack": [1245, 1287, 1869, 1911], "b1": 1245, "b2": [1245, 1894, 1900], "a_factor": 1245, "getrf": [1246, 1259], "adjoint": [1247, 1869, 1911, 1929, 1931], "_exp": 1249, "3891": 1249, "8660": 1249, "ord": [1250, 1254, 1267, 1657, 1869, 1871, 1911], "la": [1250, 1254, 1267, 1902], "2829": 1250, "2627": 1250, "0756": 1251, "4980": 1251, "6617": 1251, "4994": 1251, "9980": 1251, "2731": 1251, "8001": 1251, "2640": 1251, "4571": 1251, "5511": 1251, "0163": [1251, 1297], "5292": 1251, "4899": 1251, "0822": 1251, "2773": [1251, 1886], "varepsilon": [1252, 1255], "tol": [1252, 1270, 1869], "fewest": 1253, "nd": [1253, 1905], "bc": [1253, 1912], "75000": 1253, "148": 1253, "vector_norm": [1254, 1657], "matrix_norm": [1254, 1267, 1618, 1657], "7460": [1254, 1657], "3485": 1254, "8570e": 1254, "8480": 1254, "2361": [1254, 1657, 1658], "7417": [1254, 1657], "computation": [1255, 1899], "5495": [1255, 1318], "0979": 1255, "4092": 1255, "4132": [1255, 1778], "1143": 1255, "3662": 1255, "6374": 1255, "9294": 1255, "3269": [1255, 1902], "5745": [1255, 1810, 1811, 1853, 1854], "0382": [1255, 1319], "5922": 1255, "6759": 1255, "0600": 1255, "1933": 1255, "2090": 1255, "0903": 1255, "0817": 1255, "4752": [1255, 1815], "7124": 1255, "1631": 1255, "2272": 1255, "1356": 1255, "3933": 1255, "5023": 1255, "0308": 1255, "1725": 1255, "5216": 1255, "apinv": 1255, "5633e": 1255, "0830e": 1255, "wide": [1256, 1261, 1617, 1774, 1893, 1896, 1902, 1912], "51": [1256, 1428, 1715], "167": [1256, 1715], "68": [1256, 1715, 1868, 1870], "8571": [1256, 1715], "3943": [1256, 1715], "3314": [1256, 1715], "4286": [1256, 1715], "9029": [1256, 1715], "0343": [1256, 1715], "2857": [1256, 1715], "1714": [1256, 1715, 1902], "9429": [1256, 1715], "175": [1256, 1715], "q2": 1256, "r2": [1256, 1469], "6099e": 1256, "2158e": 1256, "logabsdet": [1257, 1869], "0032": 1257, "1219": [1257, 1734], "6690": 1257, "1161": 1257, "4053": 1257, "6218": [1257, 1829], "9273": 1257, "0082": 1257, "7576": 1257, "logdet": [1257, 1869, 1911], "linalg_slogdet": [1257, 1869, 1911], "2776": 1257, "solve_triangular": [1258, 1839], "expand_a": [1258, 1869, 1896, 1911, 1929], "rectangular": [1260, 1261, 1289, 1889], "triu_": [1260, 1869], "tril_": [1260, 1869], "full_matric": [1261, 1262, 1622, 1816, 1867, 1869], "vh": [1261, 1622, 1816, 1867, 1869], "gesvdj": [1261, 1262, 1816], "jacobi": 1261, "gesvda": [1261, 1262], "gesvd": [1261, 1262, 1816], "u_k": 1261, "v_k": 1261, "sigma_j": [1261, 1816], "eigendecomposit": 1261, "0486e": 1261, "0957e": 1261, "5139": 1262, "1087": 1262, "1066": 1262, "ind": [1263, 1264, 1869, 1897], "tensorsolv": 1263, "atensorinv": 1263, "movedim": [1264, 1304, 1869, 1897, 1911, 1929], "tensorinv": 1264, "vandermond": [1265, 1852], "pmatrix": 1265, "x_n": [1265, 1346, 1347, 1390, 1391, 1397, 1421, 1461, 1837, 1891], "125": [1265, 1448, 1852, 1869], "overlin": [1266, 1855], "3223": 1266, "2815": 1266, "1944": [1266, 1902], "4345": 1267, "pickle_modul": [1269, 1747], "weights_onli": [1269, 1865, 1880], "pickle_load_arg": 1269, "register_packag": [1269, 1907], "binaryio": [1269, 1747, 1913], "mmap": [1269, 1883], "mmape": 1269, "untrust": [1269, 1865, 1880, 1913], "unsaf": [1269, 1619, 1622, 1869, 1894, 1913], "tamper": [1269, 1913], "ram": [1269, 1894], "surg": 1269, "decod": [1269, 1473, 1474, 1475, 1610, 1913], "utf": [1269, 1909, 1913], "unicodedecodeerror": 1269, "codec": 1269, "0x": 1269, "latin1": 1269, "byte_arrai": 1269, "niter": [1270, 1705, 1817], "ortho_iparam": 1270, "ortho_fparam": 1270, "ortho_bparam": 1270, "knyazev": 1270, "knyazev2001": 1270, "stathopoulosetal2002": 1270, "converg": [1270, 1461, 1617, 1672, 1673, 1697, 1890, 1902, 1905], "precondition": 1270, "eigenpair": 1270, "criterion": [1270, 1346, 1347, 1364, 1366, 1391, 1397, 1421, 1422, 1433, 1434, 1435, 1461, 1462, 1478, 1479, 1512, 1690, 1722, 1898], "fep": 1270, "eigenproblem": 1270, "iparam": 1270, "fparam": 1270, "bparam": 1270, "ivar": 1270, "fvar": 1270, "bvar": 1270, "tvar": 1270, "istep": 1270, "converged_count": 1270, "rerr": 1270, "force_stop": 1270, "2001": 1270, "precondit": 1270, "eigensolv": 1270, "siam": 1270, "sci": 1270, "517": 1270, "541": 1270, "epub": 1270, "doi": [1270, 1384, 1780], "1137": 1270, "s1064827500366124": 1270, "andrea": 1270, "stathopoulo": 1270, "kesheng": 1270, "2002": [1270, 1780], "2165": 1270, "2182": 1270, "s1064827500370883": 1270, "duerschetal2018": 1270, "jed": 1270, "duersch": 1270, "meiyu": 1270, "shao": 1270, "chao": 1270, "ming": 1270, "gu": 1270, "c655": 1270, "c676": 1270, "17m1129830": 1270, "log_": [1271, 1272, 1273, 1274, 1869, 1884], "7767": 1271, "3234": 1271, "2156": 1271, "2411": 1271, "5739": 1271, "5637": 1271, "4640": 1271, "1952": 1271, "4226": 1271, "5204": [1271, 1724], "5224": 1272, "9354": 1272, "7257": 1272, "1301": 1272, "2820": 1272, "0290": 1272, "1392": 1272, "8857": 1272, "6476": 1272, "0090": [1273, 1332, 1711, 1926], "9923": 1273, "5372": 1273, "2492": 1273, "8653": 1273, "7055": 1273, "7705": 1273, "2225": 1273, "8419": 1274, "8003": [1274, 1906], "9971": 1274, "5287": 1274, "0490": 1274, "2483": 1274, "0042": 1274, "9196": 1274, "3504": [1274, 1832], "logsumexp": [1275, 1869, 1884, 1911, 1926], "3069": 1275, "6867": 1275, "8731": 1275, "30000": 1275, "1269e": 1275, "log_2": 1276, "logaddexp": [1276, 1869, 1911], "limits_": 1277, "42296738": 1277, "04462666": 1277, "86278635": 1277, "94622083": 1277, "05277811": 1277, "39202815": 1277, "83525007": 1277, "84492621": 1277, "06084887": 1277, "06844475": 1277, "2611": [1278, 1829], "9254": 1278, "6213": [1278, 1902], "6843": 1278, "3242": 1278, "9665": 1278, "4539": 1278, "0887": [1278, 1926], "1336": 1278, "4025": 1278, "7089": [1278, 1373], "9032": 1278, "3031": 1278, "2589": 1284, "1135": 1284, "5481": [1284, 1297, 1902], "9566": 1284, "sum_j": [1285, 1420, 1463, 1465, 1585, 1795, 1926], "0593": [1285, 1902], "5696": 1285, "6859e": 1285, "compute_pivot": 1287, "transposit": [1287, 1836, 1925], "perm": 1287, "a_lu": 1287, "5558": 1287, "1684": 1287, "1551": 1287, "1940": 1287, "6189": 1287, "5497": 1287, "4526": 1287, "2526": 1287, "3285": 1287, "7988": 1287, "7175": 1287, "9701": 1287, "2634": 1287, "9255": 1287, "3459": 1287, "00000e": 1288, "8312": 1288, "unpack_data": [1289, 1869], "unpack_pivot": [1289, 1869], "l_": [1289, 1335, 1339, 1343, 1347, 1358, 1359, 1360, 1361, 1398, 1423], "u_": [1289, 1670, 1674], "3552": [1291, 1521], "3825": 1291, "8297": 1291, "3477": 1291, "2035": [1291, 1810, 1811, 1853, 1854], "2252": [1291, 1926], "5002": 1291, "6248": [1291, 1300], "1307": 1291, "0608": [1291, 1789], "1244": 1291, "0139": 1291, "6763": 1295, "7445": 1295, "2369": 1295, "argmax": [1295, 1338, 1423, 1553, 1554, 1555, 1827, 1867, 1869, 1911], "max_indic": 1295, "2360": 1295, "2942": 1295, "1222": [1295, 1902], "8475": 1295, "1949": 1295, "1127": 1295, "6702": 1295, "5717": 1295, "9207": 1295, "1297": 1295, "8768": 1295, "6172": 1295, "6060": 1295, "2432": 1295, "3288": 1297, "3367": 1297, "nanmean": [1297, 1869, 1911], "3841": 1297, "6320": 1297, "4254": 1297, "7384": 1297, "0131": 1297, "6549": [1297, 1772], "4279": 1297, "3350": 1297, "7694": 1297, "5600": [1297, 1482], "0842": 1297, "9580": 1297, "3623": 1297, "2343": [1297, 1886], "5085": 1297, "4599": 1297, "1807": 1297, "5219": 1298, "5212": 1298, "2202": 1298, "2505": 1298, "3982": 1298, "9948": 1298, "3518": 1298, "3131": 1298, "3180": [1298, 1925], "6993": 1298, "0436": 1298, "0438": 1298, "2270": 1298, "2751": 1298, "7303": 1298, "2192": 1298, "3321": 1298, "2488": 1298, "0778": 1298, "9510": 1298, "7048": 1298, "4742": [1298, 1845, 1926], "7125": [1298, 1797], "plot": [1299, 1893, 1915, 1930], "t_0": [1299, 1690], "s_0": 1299, "s_": [1299, 1336, 1337, 1376, 1480], "g_0": 1299, "g_": [1299, 1674, 1684, 1685], "g_i": 1299, "t_i": 1299, "0d": [1299, 1422], "xy": 1299, "50276": 1299, "cartesian_prod": [1299, 1869, 1911], "grid_x": 1299, "grid_i": 1299, "dstack": [1299, 1869, 1911, 1925], "matplotlib": [1299, 1930], "pyplot": [1299, 1930], "plt": 1299, "plot_surfac": 1299, "6750": 1300, "0857": [1300, 1842], "7197": [1300, 1861], "argmin": [1300, 1867, 1869, 1911], "min_indic": [1300, 1869], "1334": 1300, "2803": 1300, "4644": [1300, 1810, 1811, 1853, 1854], "2635": [1300, 1902], "3651": 1300, "0384": 1300, "0128": 1300, "7015": 1300, "1153": 1300, "9849": 1300, "1458": [1300, 1926], "5788": 1300, "deduc": [1302, 1925], "4851": 1302, "5037": 1302, "3633": 1302, "0760": 1302, "3362": [1304, 1305], "8437": [1304, 1305], "9627": [1304, 1305], "1727": [1304, 1305], "5173": [1304, 1305], "1398": [1304, 1305], "mpsalloc": [1306, 1307], "metal": [1307, 1315, 1879, 1882, 1903], "mpsgraph": 1307, "wait_until_complet": [1311, 1312], "signpost": [1311, 1312, 1313], "xcode": 1312, "recommendedmaxworkingsets": 1315, "unlimit": [1315, 1894], "1321": 1318, "4370": [1318, 1925], "1289": 1318, "0527": 1318, "3077": [1318, 1806], "0881": 1318, "1259": 1318, "0284": 1318, "2015": [1319, 1889, 1902], "6087": 1319, "1494": 1319, "5491": 1319, "260": 1319, "8663": 1319, "3137": 1319, "0700": 1319, "8378": 1319, "5146": 1319, "1216": 1319, "5244": 1319, "5767": 1319, "1363": 1319, "5877": 1319, "5083": 1319, "1614": 1319, "1645": 1319, "7021": 1319, "0085": 1319, "0367": 1319, "1567": 1319, "4312": 1319, "1019": 1319, "4394": 1319, "8753": 1319, "_sampl": 1320, "thtensorrandom": 1320, "320": [1320, 1456], "0404": 1322, "6361": 1322, "multigammaln": [1323, 1926], "4028e": 1324, "1400e": 1324, "isnan": [1325, 1867, 1869, 1911, 1925], "midpoint": [1327, 1716], "weakli": [1329, 1330, 1926], "to_spars": [1330, 1793, 1869, 1906, 1911, 1925], "2262": [1332, 1711], "0682": [1332, 1711], "2866": [1332, 1711], "3940": [1332, 1711], "5x7": [1336, 1340], "7x7": [1336, 1340], "10x7": [1336, 1340], "cube": [1337, 1341, 1722], "d_": [1337, 1341, 1345, 1357, 1360, 1363, 1425, 1428, 1453, 1456, 1482, 1487, 1529, 1840, 1841, 1842, 1843], "5x7x9": [1337, 1341], "7x7x7": [1337, 1341], "7x9x8": [1337, 1341], "n_class": 1338, "cutoff": [1338, 1889], "div_valu": 1338, "head_bia": 1338, "edouard": 1338, "grave": [1338, 1353], "armand": 1338, "joulin": 1338, "moustapha": 1338, "ciss\u00e9": 1338, "grangier": 1338, "herv\u00e9": 1338, "j\u00e9gou": 1338, "imbalanc": 1338, "zipf": 1338, "law": 1338, "1001": 1338, "1002": 1338, "_class": 1338, "maxunpool1d": [1339, 1423, 1556, 1851], "maxunpool2d": [1340, 1378, 1424, 1557, 1851], "maxunpool3d": [1341, 1379, 1425, 1558, 1851], "selu": [1342, 1375, 1522, 1869, 1889, 1909, 1911], "n_i": [1343, 1344, 1345, 1358, 1359, 1360, 1423, 1424, 1425, 1478, 1479], "c_j": [1343, 1344, 1345, 1423, 1424, 1425], "size_averag": [1346, 1347, 1364, 1366, 1390, 1396, 1397, 1421, 1422, 1433, 1434, 1435, 1437, 1444, 1461, 1462, 1478, 1501, 1502, 1510, 1512, 1537, 1541, 1542, 1552, 1560, 1561, 1562, 1563, 1564, 1572, 1583, 1584, 1595, 1869], "unreduc": [1346, 1347, 1366, 1391, 1397, 1421, 1437, 1461, 1479], "ell": [1346, 1347, 1366, 1390, 1391, 1397, 1421, 1437, 1461, 1479], "l_1": [1346, 1347, 1366, 1390, 1391, 1397, 1421, 1437, 1461, 1479], "l_n": [1346, 1347, 1366, 1390, 1391, 1397, 1421, 1437, 1461, 1479], "w_n": [1346, 1347, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780], "y_n": [1346, 1347, 1366, 1390, 1391, 1397, 1421, 1437, 1461, 1837, 1891], "lim_": [1346, 1891], "secondli": 1346, "straight": [1346, 1531], "rescal": [1346, 1347, 1366, 1434, 1435, 1437, 1463, 1465, 1501, 1502, 1512, 1564, 1622, 1651], "nbatch": [1346, 1347], "pos_weight": [1347, 1502, 1869], "classif": [1347, 1353, 1366, 1433, 1435, 1437, 1462, 1513, 1866, 1889, 1917], "ell_c": 1347, "l_c": 1347, "p_c": 1347, "pai": [1347, 1502, 1908, 1929], "spacial": [1347, 1502], "random_": [1347, 1366, 1437, 1502, 1869, 1884, 1933], "hat": [1348, 1349, 1350, 1393, 1394, 1395, 1469], "terminologi": [1348, 1349, 1350, 1469], "tempor": [1348, 1350, 1353, 1469, 1482, 1513, 1540, 1598], "5d": [1350, 1395, 1482, 1529, 1540, 1567, 1598], "volumetr": [1350, 1469, 1482, 1529, 1540, 1598, 1599, 1600], "spatio": [1350, 1469], "in1_featur": 1351, "in2_featur": 1351, "in1": [1351, 1500], "in2": [1351, 1500], "blank": [1353, 1513, 1869, 1872], "zero_infin": [1353, 1513, 1869], "connectionist": [1353, 1513], "unseg": 1353, "longest": [1353, 1644, 1646, 1647, 1898], "input_length": [1353, 1513, 1869, 1898], "target_length": [1353, 1513, 1869], "s_n": 1353, "target_n": 1353, "unbatch": [1353, 1366, 1377, 1382, 1393, 1400, 1436, 1445, 1473, 1523], "s_min": 1353, "toronto": 1353, "edu": [1353, 1722], "icml_2006": 1353, "256": [1353, 1712, 1894, 1909], "background": [1353, 1361, 1529, 1567, 1904, 1921], "channel_shuffl": [1354, 1869, 1911], "_left": [1355, 1356, 1357, 1451, 1452, 1453, 1454, 1455, 1456, 1485, 1486, 1487, 1567], "_right": [1355, 1356, 1357, 1451, 1452, 1453, 1454, 1455, 1456, 1485, 1486, 1487, 1567], "0491": [1355, 1485], "7152": [1355, 1485], "0749": [1355, 1485], "3287": [1355, 1485], "8966": [1355, 1485], "1466": [1355, 1485], "2771": [1355, 1485], "6616": [1355, 1485], "4523": [1355, 1485], "1255": [1355, 1485], "6372": [1355, 1485, 1816], "1182": [1355, 1485], "8652": [1355, 1485], "_top": [1356, 1357, 1452, 1453, 1455, 1456, 1486, 1487, 1567], "_bottom": [1356, 1357, 1452, 1453, 1455, 1456, 1486, 1487, 1567], "6585": 1356, "4320": [1356, 1825], "8701": 1356, "4649": 1356, "_front": [1357, 1453, 1456, 1487, 1567], "_back": [1357, 1453, 1456, 1487, 1567], "_j": [1358, 1359], "star": [1358, 1359, 1360, 1871], "\u00e0": [1358, 1359, 1360, 1361, 1362, 1363, 1377, 1481], "trou": [1358, 1359, 1360, 1361, 1362, 1363, 1377, 1481], "harder": [1358, 1359, 1360, 1361, 1362, 1363, 1377, 1424, 1425, 1481], "prod_": [1359, 1360, 1362, 1363, 1376, 1480, 1676], "out_j": 1360, "deconvolut": [1361, 1362, 1363, 1507, 1508, 1509], "_pad": [1361, 1362, 1363], "dissimilar": [1364, 1390], "semi": [1364, 1390, 1866, 1889], "supervis": [1364, 1390], "vert": [1365, 1439, 1511], "_2": [1365, 1511, 1618, 1651], "ast_1": [1365, 1381], "ast_2": [1365, 1381], "ignore_index": [1366, 1437, 1512, 1564, 1869], "label_smooth": [1366, 1512, 1869], "unbalanc": [1366, 1437], "d_1": [1366, 1437, 1512, 1564], "d_2": [1366, 1437, 1512, 1564], "d_k": [1366, 1437, 1512, 1564], "_index": [1366, 1437], "logsoftmax": [1366, 1437, 1463, 1548], "nllloss": [1366, 1463, 1564, 1585, 1851], "blend": 1366, "smooth": [1366, 1391, 1461, 1466, 1512, 1683], "w_c": 1366, "truth": [1366, 1512, 1878, 1930], "rethink": [1366, 1512], "incept": [1366, 1512], "spectral_norm": [1367, 1641], "neuron": 1368, "detector": 1368, "dropout1d": [1370, 1869], "_freez": 1373, "sparseadam": [1373, 1912], "0251": 1373, "6902": [1373, 1713], "7172": 1373, "6431": 1373, "0748": 1373, "6969": 1373, "4970": 1373, "3448": 1373, "9685": 1373, "3677": 1373, "7265": 1373, "1685": 1373, "4362": 1373, "4004": [1373, 1797], "9400": 1373, "9124": 1373, "3616": 1373, "1151": 1373, "0309": 1373, "9315": 1373, "1655": [1373, 1894], "9897": 1373, "0635": 1373, "7895": 1373, "0364": 1373, "6778": 1373, "5803": 1373, "bag": [1374, 1521], "per_sample_weight": [1374, 1521, 1869], "embedding_sum": 1374, "8861": 1374, "4350": 1374, "0523": 1374, "1306": 1374, "5798": 1374, "0044": 1374, "7082": [1374, 1521], "2145": [1374, 1521], "6251": [1374, 1521], "6500": 1374, "satur": [1375, 1522], "alphadropout": [1375, 1495], "160": [1376, 1912], "unfold": [1377, 1869, 1911, 1929], "prod_d": [1377, 1481], "neighborhood": [1377, 1481], "col2im": [1377, 1867, 1869, 1911], "fold_param": [1377, 1481], "input_on": [1377, 1481], "output_ratio": [1378, 1379, 1524, 1525, 1869], "_random_sampl": [1378, 1379, 1524, 1525, 1869], "ben": [1378, 1379, 1524, 1525], "graham": [1378, 1379, 1524, 1525], "oh": [1378, 1379, 1524, 1525], "ow": [1378, 1379, 1524, 1525], "_ratio": [1378, 1379, 1525], "13x12": [1378, 1524], "kt": [1379, 1498, 1506, 1509, 1525, 1555], "ot": [1379, 1525], "13x12x11": [1379, 1525], "044715": [1380, 1527], "pack_sequ": [1382, 1400, 1445, 1646, 1648], "bias_ih": [1383, 1401, 1447], "bias_hh": [1383, 1401, 1447], "const": [1384, 1901], "homoscedast": [1384, 1526], "heteroscedast": [1384, 1526], "nix": 1384, "weigend": 1384, "1994": 1384, "icnn": 1384, "94": 1384, "orlando": 1384, "fl": 1384, "usa": [1384, 1930], "374138": 1384, "instancenorm": [1385, 1918], "shrinkag": [1386, 1467, 1532, 1588], "mobilenetv3": [1388, 1534], "_val": 1389, "l1loss": [1391, 1461, 1542], "outlier": [1391, 1461, 1916, 1917], "huber": [1391, 1461], "smoothl1loss": [1391, 1583], "insensit": 1392, "unused_argument1": 1392, "unused_argument2": 1392, "ingredi": [1393, 1394, 1395], "styliz": [1393, 1394, 1395], "rgb": [1394, 1395, 1930], "log_target": [1396, 1541, 1869], "pred": [1396, 1610, 1867, 1903, 1912, 1921], "kl": [1396, 1541, 1866], "summaris": 1396, "loss_pointwis": 1396, "batchmean": [1396, 1541], "kl_loss": 1396, "mae": 1397, "f_t": [1400, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "hf": [1400, 1401], "g_t": [1400, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "ig": [1400, 1401], "hg": [1400, 1401], "o_t": 1400, "ho": [1400, 1401], "c_t": 1400, "odot": 1400, "forget": [1400, 1870, 1871], "proj_siz": [1400, 1446], "1402": 1400, "c_0": [1400, 1401], "proj": 1400, "c_n": 1400, "w_ii": 1400, "w_if": 1400, "w_ig": 1400, "w_io": 1400, "w_hi": 1400, "w_hf": 1400, "w_hg": 1400, "w_ho": 1400, "b_ii": 1400, "b_if": 1400, "b_ig": 1400, "b_io": 1400, "b_hi": 1400, "b_hf": 1400, "b_hg": 1400, "b_ho": 1400, "weight_hr_l": 1400, "_revers": 1400, "h_1": 1401, "c_1": 1401, "time_step": 1401, "_shape": 1402, "sentence_length": 1402, "lazymodulemixin": [1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415], "cls_to_becom": [1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1613], "convtranspose1d": [1409, 1507, 1851, 1918], "convtranspose3d": [1411, 1509, 1851, 1918], "instancenorm1d": [1412, 1539, 1918], "instancenorm2d": [1413, 1539, 1918], "instancenorm3d": [1414, 1539, 1918], "uninitializedparamet": [1415, 1601, 1866], "lrn": 1418, "signal_2d": 1418, "signal_4d": 1418, "output_2d": 1418, "output_4d": 1418, "x_j": [1420, 1463, 1465, 1585, 1795, 1899, 1926], "80827": [1426, 1427, 1428], "unpool": [1426, 1427, 1428], "maxpool3d": [1428, 1555, 1558, 1851, 1918], "unpooled_output": 1428, "t_destin": 1430, "lrelu": [1431, 1902], "hing": [1433, 1435], "sum_i": [1434, 1435, 1462], "nelement": [1434, 1462], "jointli": 1436, "concat": [1436, 1869, 1911], "head_1": 1436, "head_h": 1436, "head_i": 1436, "qw_i": 1436, "kw_i": 1436, "vw_i": 1436, "scaled_dot_product_attent": [1436, 1869, 1911], "inference_mod": [1436, 1477], "nestedtensor": [1436, 1477, 1886], "multihead_attn": 1436, "e_q": 1436, "e_k": 1436, "e_v": 1436, "_head": [1436, 1473], "merge_mask": 1436, "mask_typ": 1436, "merged_mask": 1436, "nll": 1437, "crossentropyloss": [1437, 1512], "num_paramet": 1438, "nchannel": 1438, "decai": [1438, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1685, 1688, 1692, 1694, 1695, 1698, 1699, 1701, 1773, 1912], "legitim": [1438, 1529, 1897], "vert_p": 1439, "fromkei": 1440, "popitem": [1440, 1911], "setdefault": [1440, 1911], "upscale_factor": [1442, 1570, 1869], "upscal": 1442, "shi": [1442, 1443], "2016": [1442, 1443, 1479], "_factor": [1442, 1443, 1482, 1483, 1484], "pixel_shuffl": [1442, 1869, 1911, 1918], "downscale_factor": [1443, 1571, 1869], "pixelshuffl": [1443, 1570, 1571, 1918], "downscal": 1443, "pixel_unshuffl": [1443, 1869, 1911, 1918], "log_input": [1444, 1572, 1869], "poisson": [1444, 1572, 1773, 1866, 1869, 1911], "stirl": [1444, 1572], "hh": [1445, 1447], "flatten_paramet": 1446, "3333333333333333": [1448, 1688, 1694, 1869], "leaki": [1448, 1577, 1889], "rectifi": [1448, 1449, 1574, 1889], "liner": 1448, "empir": 1448, "1505": 1448, "00853": 1448, "crelu": 1449, "1603": 1449, "05201": 1449, "480": 1456, "6732632423543772848170429916717": [1457, 1580], "0507009873554804934193349852946": [1457, 1580], "kaiming_norm": 1457, "kaiming_normal_": [1457, 1866, 1873, 1889], "initialis": 1457, "calculate_gain": [1457, 1866, 1873, 1889], "modulelist": [1458, 1902], "cascad": 1458, "relu2": [1458, 1601], "swish": [1459, 1582], "coin": [1459, 1582], "explod": 1461, "cnn": [1461, 1916], "ross": 1461, "girshick": 1461, "quadrat": [1461, 1898], "huberloss": [1461, 1538], "w_j": 1464, "soft": [1467, 1531, 1588], "softshrinkag": 1467, "convert_sync_batchnorm": 1469, "r1": 1469, "sync_bn_network": 1469, "ddp_sync_bn_network": 1469, "sync_bn_modul": 1469, "d_model": [1473, 1474, 1475, 1476, 1477], "nhead": [1473, 1474, 1475, 1476, 1477], "num_encoder_lay": 1473, "num_decoder_lay": 1473, "dim_feedforward": [1473, 1475, 1477], "custom_encod": 1473, "custom_decod": 1473, "layer_norm_ep": [1473, 1475, 1477], "norm_first": [1473, 1475, 1477], "ashish": [1473, 1475, 1477], "vaswani": [1473, 1475, 1477], "noam": [1473, 1475, 1477], "shazeer": [1473, 1475, 1477], "niki": [1473, 1475, 1477], "parmar": [1473, 1475, 1477], "jakob": [1473, 1475, 1477], "uszkoreit": [1473, 1475, 1477], "llion": [1473, 1475, 1477], "jone": [1473, 1475, 1477], "aidan": [1473, 1475, 1477], "gomez": [1473, 1475, 1477], "lukasz": [1473, 1475, 1477], "illia": [1473, 1475, 1477], "polosukhin": [1473, 1475, 1477], "6010": [1473, 1475, 1477], "feedforward": [1473, 1475, 1477, 1889], "transformer_model": 1473, "word_language_model": 1473, "src_mask": [1473, 1477], "tgt_mask": [1473, 1474, 1475], "memory_mask": [1473, 1474, 1475], "src_key_padding_mask": [1473, 1476, 1477], "tgt_key_padding_mask": [1473, 1474, 1475], "memory_key_padding_mask": [1473, 1474, 1475], "_mask": [1473, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640], "_key_padding_mask": 1473, "generate_square_subsequent_mask": 1473, "sz": 1473, "decoder_lay": [1474, 1475], "transformerdecoderlay": 1474, "transformer_decod": 1474, "tgt_is_caus": [1474, 1475], "memory_is_caus": [1474, 1475], "attn": [1475, 1477], "encoder_lay": [1476, 1477], "enable_nested_tensor": 1476, "mask_check": 1476, "1810": 1476, "04805": 1476, "transformerencoderlay": 1476, "transformer_encod": 1476, "flashattent": [1477, 1579], "triplet": [1478, 1479], "x3": 1478, "balnta": [1478, 1479], "riba": [1478, 1479], "a_i": [1478, 1479, 1775], "p_i": [1478, 1479], "rm": [1478, 1479], "bf": [1478, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "rvert_p": [1478, 1565], "tripletmarginwithdistanceloss": [1478, 1596], "triplet_loss": [1478, 1479], "distance_funct": [1479, 1596], "l_i": 1479, "tripletmarginloss": [1479, 1595], "l_p": [1479, 1565], "pairwisedist": [1479, 1568], "penal": [1479, 1902], "distant": 1479, "anchor_id": 1479, "positive_id": 1479, "negative_id": 1479, "l_infin": 1479, "bmva": 1479, "bmvc": 1479, "paper119": 1479, "unflattened_s": 1480, "namedtensor": 1480, "namedshap": 1480, "u_1": 1480, "u_n": 1480, "u_i": 1480, "im2col": [1481, 1869, 1911], "fold": [1481, 1817, 1869, 1879, 1909, 1919, 1925], "2x3": 1481, "3x4": 1481, "inp_unf": 1481, "out_unf": 1481, "recompute_scale_factor": [1482, 1540], "bicub": [1482, 1529, 1540, 1598, 1851], "trilinear": [1482, 1529, 1540, 1598, 1851], "input_3x3": 1482, "4375": 1482, "8125": 1482, "9375": 1482, "2400": [1482, 1832], "1200": [1482, 1744, 1894], "8800": 1482, "4400": [1482, 1832], "7200": 1482, "0400": 1482, "2800": [1482, 1767], "3600": 1482, "5200": 1482, "6400": 1482, "1678": 1486, "4418": 1486, "9466": [1486, 1926], "9604": 1486, "4219": 1486, "5241": 1486, "9162": 1486, "5436": [1486, 1832], "6446": 1486, "adaptiveavgpool1d": [1488, 1918], "tripl": [1490, 1493], "adaptivemaxpool1d": 1491, "adaptivemaxpool2d": [1492, 1851], "adaptivemaxpool3d": 1493, "ill": [1494, 1905], "avgpool1d": [1496, 1918], "avgpool3d": [1498, 1851, 1918], "iT": [1498, 1506, 1509], "padt": [1498, 1506, 1509], "score": [1502, 1579, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637, 1866], "out_padw": [1507, 1508, 1509], "out_padh": [1508, 1509], "out_padt": 1509, "cosineembeddingloss": 1510, "ctcloss": [1513, 1851], "charact": [1513, 1764, 1868, 1871, 1885, 1921], "elu": [1519, 1869, 1909, 1911, 1918], "embedding_matrix": [1520, 1521], "8490": 1520, "9625": 1520, "6753": 1520, "7761": 1520, "6108": 1520, "6246": 1520, "9751": 1520, "3618": 1520, "4161": [1520, 1925], "2419": 1520, "7383": 1520, "0237": 1520, "7794": 1520, "0528": 1520, "3385": 1520, "8612": 1520, "1867": 1520, "5384": 1520, "8720": 1520, "6262": 1520, "7471": 1520, "embeddingbag": [1521, 1851, 1916, 1918, 1931], "3397": 1521, "5545": 1521, "5893": 1521, "4386": 1521, "5882": 1521, "featurealphadropout": 1522, "gaussiannllloss": 1526, "border": 1529, "affine_grid": [1529, 1869], "extrema": 1529, "pil": [1529, 1540], "overshoot": [1529, 1540, 1598], "gumbel": [1531, 1866], "y_hard": 1531, "y_soft": 1531, "hardtanh": [1536, 1867, 1869, 1879, 1911, 1918], "hingeembeddingloss": 1537, "use_input_stat": [1539, 1869], "antialia": 1540, "anti": 1540, "pillow": [1540, 1930], "buggi": 1540, "inter_nearest": 1540, "kldivloss": 1541, "batchsiz": [1541, 1798, 1799, 1800, 1802, 1803, 1925], "leaky_relu": [1545, 1867, 1869, 1889, 1911, 1918], "localresponsenorm": 1547, "_stacklevel": [1548, 1585, 1586, 1869], "lppool1d": 1550, "lppool2d": 1551, "marginrankingloss": 1552, "max_unpool1d": [1553, 1869], "multimarginloss": 1561, "multilabelmarginloss": 1562, "multilabelsoftmarginloss": 1563, "n_0": 1565, "n_": 1565, "n_k": 1565, "everywher": [1566, 1812, 1912], "constantpad2d": 1567, "reflectionpad2d": [1567, 1851], "replicationpad2d": [1567, 1851], "t4d": 1567, "p1d": 1567, "p2d": 1567, "p3d": 1567, "pixelunshuffl": [1571, 1918], "poissonnllloss": 1572, "rrelu": [1578, 1869, 1911], "dropout_p": [1579, 1869], "masked_fil": [1579, 1869, 1884, 1886, 1911], "ev": 1579, "legend": 1579, "softmarginloss": 1584, "module_kwarg": 1594, "upsample_trilinear": 1599, "fo": 1599, "spatia": 1600, "mixin": [1601, 1866], "dry": 1601, "lazymlp": 1601, "lazylinear": 1601, "lazy_mlp": 1601, "8832e": 1601, "5636e": 1601, "1598e": 1601, "5637e": 1601, "8788e": 1601, "0042e": 1601, "0019": 1601, "lazymodul": 1601, "full_mlp": 1601, "3837": [1601, 1713], "0907": 1601, "6708": 1601, "5223": 1601, "9028": 1601, "2851": 1601, "6813": 1601, "5766": 1601, "8678": 1601, "1320": 1601, "2938": 1601, "0679": [1601, 1842], "2793": [1601, 1658], "1088": 1601, "1795": 1601, "2301": 1601, "2807": 1601, "2479": 1601, "1091": 1601, "has_uninitialized_param": 1601, "initialize_paramet": 1601, "register_backward_pre_hook": 1607, "check_reduct": 1610, "delay_all_reduce_named_param": 1610, "param_to_hook_all_reduc": 1610, "optimizer_param": 1610, "loss_func": [1610, 1921], "consume_prefix_in_state_dict_if_pres": 1610, "nccl2": 1610, "dictat": [1610, 1871], "megabyt": 1610, "mb": [1610, 1894], "detach_": [1610, 1869, 1884, 1918, 1925], "ddp_logging_data": 1610, "can_set_static_graph": 1610, "model_ddp": 1610, "_get_ddp_logging_data": 1610, "divide_by_initial_world_s": 1610, "syncbatchnorm": 1610, "exhaust": 1610, "deplet": 1610, "pariti": 1610, "discrep": [1610, 1722, 1899], "another_input": 1610, "predivid": 1610, "encode_and_decod": 1610, "encoded_tensor": 1610, "decoded_tensor": 1610, "error_if_nonfinit": 1614, "foreach": [1614, 1615, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685, 1912], "clip_valu": 1615, "orthogonal_map": 1617, "use_trivi": 1617, "qq": 1617, "matrix_exp": [1617, 1869, 1911], "caylei": 1617, "thin": [1617, 1715], "manifold": 1617, "register_parametr": [1617, 1618, 1619, 1620, 1651, 1887], "orth_linear": 1617, "parametrizedlinear": [1617, 1618], "moduledict": [1617, 1618, 1870, 1902], "parametrizationlist": [1617, 1618, 1622], "_orthogon": 1617, "9332e": 1617, "n_power_iter": [1618, 1651], "sn": [1618, 1651], "discrimin": [1618, 1651], "adversari": [1618, 1651], "lipschitz": 1618, "reimplement": [1618, 1651], "_spectralnorm": 1618, "convtranspos": [1618, 1651], "snm": 1618, "0081": 1618, "amaxbackward0": 1618, "original0": [1619, 1622, 1654], "original1": [1619, 1622, 1654], "tensor_nam": [1619, 1621, 1622, 1623], "right_invers": [1619, 1622], "out_rnn": 1620, "rnn_cell": 1620, "simplic": [1622, 1922], "inbuilt": 1622, "unparametr": 1622, "rankon": 1622, "surject": 1622, "s0_sqrt": 1622, "linear_rank_on": 1622, "matrix_rank": 1622, "leave_parametr": 1623, "unparametris": 1623, "prune": [1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1925], "skeleton": 1624, "compute_mask": [1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631], "importance_scor": [1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1636, 1637], "apply_mask": [1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631], "pruned_tensor": [1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631], "default_mask": [1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631], "_orig": [1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640], "undon": [1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640], "unprun": [1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639], "basepruningmethod": [1629, 1635], "add_pruning_method": 1629, "pruning_typ": [1629, 1633], "unstructur": [1629, 1633], "ravel": [1629, 1869, 1911], "nonmask": 1629, "bias_mask": [1632, 1634], "pruning_method": 1633, "typeerror": [1633, 1896, 1914, 1932, 1936], "parameters_to_prun": 1633, "l1unstructur": 1633, "parameters_to_vector": 1633, "forward_pre_hook": [1635, 1902], "random_unstructur": [1635, 1640], "odict_kei": 1636, "weight_orig": 1636, "weight_mask": [1636, 1639], "columns_prun": 1638, "t_modul": [1641, 1642, 1651, 1654], "weight_norm": 1642, "sorted_indic": [1643, 1645, 1646, 1648], "unsorted_indic": [1643, 1645, 1646, 1648], "abc": [1643, 1871], "axbc": 1643, "throughout": [1643, 1899, 1902, 1916], "conform": [1643, 1902], "is_cuda": [1643, 1884, 1911, 1927], "enforce_sort": [1644, 1645, 1646], "unsort": [1644, 1645, 1751], "shortest": 1644, "uncondition": [1644, 1865, 1896, 1936], "pad_sequ": [1645, 1649, 1869, 1911], "padding_valu": [1646, 1647, 1869], "total_length": [1646, 1898], "seq_unpack": 1646, "lens_unpack": 1646, "packed_sequ": 1648, "unpacked_sequ": 1648, "padded_sequ": 1649, "unpad": 1649, "unstack": 1649, "as_tensor": [1649, 1830, 1869, 1886, 1896, 1911, 1930, 1931, 1932], "unpadded_sequ": 1649, "module_cl": [1650, 1921], "5846e": 1650, "29": [1650, 1780, 1909], "8307e": 1650, "5250e": 1650, "1210e": 1650, "4677e": 1650, "5915e": 1650, "4013e": 1650, "weight_u": 1651, "parameters_and_buff": 1652, "decoupl": [1654, 1673], "weight_g": [1654, 1869], "weight_v": 1654, "1602": 1654, "07868": 1654, "modern": [1654, 1905], "bother": 1654, "102999": 1654, "remove_parametr": 1654, "as_tupl": [1656, 1861], "complexfloat": [1657, 1666], "0425": 1658, "7969": 1658, "2925": 1658, "7229": 1658, "2134": 1658, "0505": 1658, "1408": 1658, "0563": 1658, "0566": 1658, "0732": [1658, 1832], "0687": 1658, "1177": 1658, "2303": 1658, "1552": 1658, "6148": 1658, "6535": 1658, "8318": 1658, "3987": 1658, "9544": [1658, 1723], "6048": 1658, "7909": 1658, "120": [1660, 1930], "op_level_debug": 1663, "model_proto": [1664, 1665], "input_adapt": 1664, "output_adapt": 1664, "diagnostic_context": 1664, "adapt_torch_inputs_to_onnx": 1664, "model_arg": [1664, 1909], "model_kwarg": [1664, 1909], "xdoctest": 1664, "torch_doctest_onnx": 1664, "func_with_nested_input_structur": 1664, "x_dict": 1664, "y_tupl": 1664, "y3": 1664, "export_output": [1664, 1665], "adapt_torch_outputs_to_onnx": 1664, "model_output": 1664, "func_returning_tupl": 1664, "pt_output": 1664, "diagnosticcontext": 1664, "modelproto": [1664, 1665], "protobuf": [1664, 1665, 1909], "exportoutput": [1665, 1909], "bufferediobas": 1665, "protobufexportoutputseri": 1665, "serializetostr": 1665, "exported_model": 1665, "from_valu": 1666, "onnx_typ": 1666, "tensorprotodatatyp": 1666, "torch_c_value_with_type_float": 1666, "from_dtyp": 1666, "jit_type_bas": 1666, "safer": [1666, 1878], "onnxexportererror": [1666, 1909], "symbolicvalueerror": 1666, "onnx_compat": 1666, "scalar_nam": 1666, "complexhalf": 1666, "complexdoubl": 1666, "torch_nam": 1666, "int8_t": 1666, "int64_t": 1666, "int16_t": 1666, "verif": [1667, 1668, 1909], "input_arg": [1667, 1909], "params_dict": 1667, "export_opt": [1667, 1909], "_excluded_node_kind": 1667, "frozenset": [1667, 1871], "scalarimplicit": [1667, 1911], "prim": [1667, 1868, 1909, 1911], "listconstruct": [1667, 1868], "all_mismatch_leaf_graph_info": 1667, "essential_node_count": 1667, "essential_node_kind": 1667, "export_repro": 1667, "repro_dir": 1667, "test_": 1667, "test_data_set_0": 1667, "input_0": [1667, 1909], "pb": [1667, 1909], "input_1": [1667, 1909], "output_0": 1667, "output_1": 1667, "find_mismatch": [1667, 1909], "verificationopt": [1667, 1909], "find_partit": 1667, "has_mismatch": 1667, "pretty_print_mismatch": 1667, "pretty_print_tre": 1667, "graph_info": [1667, 1909], "__2": [1667, 1909], "__1": [1667, 1909], "__3": [1667, 1909], "110": [1667, 1909], "verify_export": 1667, "onnx_graph": 1667, "onnx_out": 1667, "pt_out": 1667, "ignore_non": 1668, "check_shap": 1668, "check_dtyp": [1668, 1932], "onnxbackend": 1668, "onnx_runtime_cpu": 1668, "remained_onnx_input_idx": 1668, "acceptable_error_percentag": 1668, "percentag": [1668, 1697, 1773], "weight_decai": [1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1685, 1902], "1e6": 1669, "impair": [1669, 1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "register_step_post_hook": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "removeablehandl": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "register_step_pre_hook": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "new_arg": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "new_kwarg": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1686], "reevalu": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1912], "altogeth": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686], "rho": 1670, "110mm": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "4pt": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "textbf": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "theta_0": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "v_0": [1670, 1672, 1673, 1676, 1682, 1683], "leftarrow": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "u_0": [1670, 1674], "hspace": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "5mm": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "nabla_": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "theta_": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "10mm": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "v_t": [1670, 1672, 1673, 1676, 1682, 1683], "v_": [1670, 1672, 1673, 1676, 1682, 1683, 1685], "2_t": [1670, 1671, 1672, 1673, 1676, 1682, 1683], "21mm": 1670, "u_t": [1670, 1674], "theta_t": [1670, 1671, 1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "lr_decai": 1671, "initial_accumulator_valu": 1671, "12mm": [1671, 1682], "_sum_0": 1671, "tild": [1671, 1683], "_sum_t": 1671, "_sum_": 1671, "subgradi": 1671, "999": [1672, 1673, 1674, 1676, 1682, 1686, 1907, 1912], "amsgrad": [1672, 1673], "beta_1": [1672, 1673, 1674, 1676, 1682], "beta_2": [1672, 1673, 1674, 1676, 1682], "13mm": [1672, 1673, 1674, 1676, 1682, 1683, 1684, 1685], "textit": [1672, 1673, 1685], "m_0": [1672, 1673, 1674, 1676, 1682], "widehat": [1672, 1673, 1676, 1682], "m_t": [1672, 1673, 1674, 1676, 1682], "m_": [1672, 1673, 1674, 1676, 1682, 1925], "ungraph": [1672, 1673], "002": [1674, 1676], "t_1": 1674, "2e": [1674, 1676], "max_it": 1675, "max_ev": 1675, "tolerance_grad": 1675, "tolerance_chang": 1675, "history_s": 1675, "line_search_fn": 1675, "bfg": 1675, "minfunc": 1675, "intens": [1675, 1905], "param_byt": 1675, "strong_wolf": 1675, "momentum_decai": 1676, "004": 1676, "gamma_t": 1676, "psi": [1676, 1926], "mu_t": 1676, "96": 1676, "mu_": 1676, "11mm": 1676, "incorpor": [1676, 1916], "nesterov": [1676, 1685], "4e": 1676, "weightdecai": 1682, "18mm": 1682, "rho_": 1682, "6mm": 1682, "rho_t": 1682, "t_2": 1682, "l_t": 1682, "adamw": [1682, 1912], "_0": [1683, 1897, 1913], "av": 1683, "8mm": 1683, "3mm": 1683, "lectur": 1683, "hinton": 1683, "step_siz": [1684, 1701], "resili": [1684, 1905], "eta_": [1684, 1689, 1690], "etaplu": 1684, "etaminu": 1684, "gamma_": [1684, 1926], "0_": 1684, "eta_0": 1684, "i_": [1684, 1832], "15mm": [1684, 1685], "eta_t": [1684, 1689, 1690], "dampen": 1685, "sutskev": 1685, "veloc": 1685, "conflat": 1686, "is_spars": [1686, 1884, 1911, 1925, 1927], "maskedtensor": [1686, 1925], "rig": 1686, "insist": 1686, "lr_schedul": [1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1912], "chainabl": [1687, 1697], "081": 1687, "729": [1687, 1700], "6561": [1687, 1856], "59049": 1687, "scheduler1": [1687, 1700, 1912], "constantlr": [1687, 1700], "total_it": [1687, 1688, 1694, 1698, 1700], "scheduler2": [1687, 1700, 1912], "exponentiallr": [1687, 1700, 1912], "get_last_lr": [1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701], "print_lr": [1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701], "is_verbos": [1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701], "__dict__": [1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701], "last_epoch": [1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701], "mileston": [1688, 1694, 1695, 1700, 1912], "simultan": [1688, 1689, 1694, 1695, 1701, 1891, 1921], "025": [1688, 1694], "t_max": [1689, 1912], "eta_min": [1689, 1690], "anneal": [1689, 1690, 1697, 1912], "cur": [1689, 1690], "sgdr": [1689, 1690], "2k": 1689, "sole": 1689, "t_mult": 1690, "interleav": 1690, "base_lr": [1691, 1697], "max_lr": [1691, 1697], "step_size_up": 1691, "step_size_down": 1691, "scale_fn": 1691, "scale_mod": 1691, "cycle_momentum": [1691, 1697], "base_momentum": [1691, 1697], "max_momentum": [1691, 1697], "cyclic": 1691, "amplitud": [1691, 1697], "triangular2": 1691, "exp_rang": 1691, "bckenstler": 1691, "train_batch": [1691, 1697], "get_lr": 1691, "lr_lambda": [1693, 1696], "lambda1": 1693, "lambda2": 1693, "start_factor": 1694, "end_factor": 1694, "03125": 1694, "0375": 1694, "04375": 1694, "005": [1695, 1701], "lmbda": 1696, "total_step": 1697, "steps_per_epoch": 1697, "pct_start": 1697, "anneal_strategi": [1697, 1912], "div_factor": 1697, "final_div_factor": 1697, "three_phas": 1697, "1cycl": 1697, "fastai": 1697, "unpublish": 1697, "initial_lr": 1697, "min_lr": [1697, 1699], "1e4": 1697, "annihil": 1697, "00075": 1698, "00050": 1698, "00025": 1698, "patienc": 1699, "threshold_mod": 1699, "cooldown": 1699, "stagnat": 1699, "new_lr": 1699, "hasn": [1699, 1881, 1913], "optimum": 1699, "dynamic_threshold": 1699, "val_loss": 1699, "81": 1700, "mn": 1703, "pca": [1705, 1925], "overestim": [1705, 1817], "nathan": [1705, 1817], "halko": [1705, 1817], "gunnar": [1705, 1817], "martinsson": [1705, 1817], "tropp": [1705, 1817], "probabilist": [1705, 1817], "0909": [1705, 1817], "4061": [1705, 1817], "na": [1705, 1817], "cmath": [1709, 1869], "4142j": 1709, "4331": 1712, "2475": [1712, 1815], "6834": 1712, "2791": 1712, "1875": 1712, "5561": 1712, "4670": 1712, "5428": 1713, "5854": 1713, "5261": [1713, 1816], "1857": 1713, "2498": 1713, "1646": [1713, 1894], "0705": 1713, "0629": 1713, "2962": 1713, "0821": [1713, 1773], "1831": 1713, "type1": [1714, 1869], "type2": [1714, 1869], "2117": 1716, "9765": 1716, "1707": 1716, "4884": 1716, "5661": 1716, "5795": 1716, "5280": 1716, "9206": 1716, "quantization_schem": [1717, 1718, 1719, 1720, 1721], "int_repr": [1717, 1718, 1869, 1911], "nchw": [1719, 1930], "qx": [1719, 1720, 1721], "00001": 1719, "max_pool1d": [1720, 1869, 1911, 1918], "max_pool2d": [1721, 1869, 1911, 1918], "quasirandom": 1722, "scrambl": 1722, "sobol": 1722, "quasi": 1722, "21201": 1722, "web": 1722, "unsw": 1722, "au": [1722, 1913], "fkuo": 1722, "art": 1722, "owen": 1722, "niederreit": 1722, "xing": 1722, "466": 1722, "489": 1722, "decemb": 1722, "1998": 1722, "zh": 1722, "vychisl": 1722, "phy": 1722, "784": 1722, "802": 1722, "1967": 1722, "soboleng": 1722, "draw_base2": 1722, "base2": 1722, "fast_forward": 1722, "142": 1723, "283": 1723, "570": 1723, "359": 1723, "9894": 1723, "2503": 1724, "3525": 1724, "5673": 1724, "8237": 1724, "5781": 1724, "6879": 1724, "3816": 1724, "7249": 1724, "0998": 1724, "1436": 1728, "9966": 1728, "3426": 1728, "6366": 1728, "5954": 1728, "8929": 1728, "0923": 1728, "1719": 1728, "4709": 1728, "1996": 1728, "4595": 1734, "4314": 1734, "flat": [1737, 1780, 1869, 1886, 1909, 1925], "n2": 1737, "n3": 1737, "negat": [1740, 1824, 1871], "is_neg": [1740, 1869, 1911], "equidist": 1744, "inexact": 1744, "1234567": 1744, "1230": 1744, "vstack": [1745, 1869, 1911, 1925], "0370": 1746, "2970": 1746, "5420": 1746, "9105": 1746, "8351": 1746, "pickle_protocol": [1747, 1913], "default_protocol": 1747, "_use_new_zipfile_seri": 1747, "zipfil": [1747, 1913], "sorted_sequ": [1751, 1869], "sorter": [1751, 1869], "sorted_sequence_1d": 1751, "select_copi": [1753, 1869, 1911], "slight": [1755, 1925, 1928], "92701": [1755, 1928], "complaint": 1756, "bfloat16_3x": 1759, "denorm": [1760, 1905], "sse3": 1760, "323": 1760, "88131e": 1760, "324": 1760, "is_train": [1761, 1933], "interop": 1762, "intraop": 1763, "edgeitem": 1764, "linewidth": 1764, "sci_mod": 1764, "shamelessli": 1764, "repr": [1764, 1871], "sane": 1764, "_tensor_str": 1764, "_formatt": 1764, "12345": 1764, "1235": 1764, "excess": 1766, "24j": 1767, "8000j": 1767, "9600j": 1767, "4472": [1767, 1902], "8944j": 1767, "expit": [1768, 1926], "sym": [1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780], "2222": [1770, 1830], "4444": 1770, "8889": 1770, "4901e": 1771, "4000e": 1771, "0077e": 1771, "4923e": 1771, "waveform": [1772, 1773, 1774], "1564": 1772, "4540": 1772, "8910": 1772, "9877": 1772, "1423": [1772, 1794], "4154": 1772, "8413": [1772, 1926], "0302": 1773, "2231": 1773, "6065": 1773, "5400e": 1773, "3546e": 1773, "4788e": 1773, "8316e": 1773, "02": [1773, 1774, 1779], "3534e": 1773, "0065e": [1774, 1779], "1875e": [1774, 1779], "3937e": [1774, 1779], "2465e": [1774, 1779], "8250e": [1774, 1779], "9858e": [1774, 1779], "1365e": [1774, 1779], "8659e": [1774, 1779], "4658e": [1774, 1779], "3941e": [1774, 1779], "5400": 1775, "3376": 1775, "4200": 1775, "9136": 1775, "wit": [1775, 1868], "0955": [1775, 1776, 1778], "3455": [1775, 1776, 1778], "6545": [1775, 1776, 1778], "9045": [1775, 1776, 1778], "0800": [1776, 1777], "1876": [1776, 1777], "4601": [1776, 1777], "7700": [1776, 1777], "9723": [1776, 1777], "1679": 1777, "3979": 1777, "6821": 1777, "9121": 1777, "1170": 1778, "9698": 1778, "36358": 1780, "z_n": [1780, 1891], "48917": 1780, "2z_n": 1780, "13659": 1780, "3z_n": 1780, "01064": 1780, "4z_n": 1780, "\u03c0": 1780, "sidelob": 1780, "transact": 1780, "acoust": 1780, "speech": 1780, "84": 1780, "91": 1780, "feb": 1780, "1981": 1780, "tassp": 1780, "1163506": 1780, "heinzel": 1780, "spectrum": [1780, 1905], "dft": 1780, "comprehens": [1780, 1871, 1872, 1885, 1894, 1900, 1916], "februari": 1780, "holomet": 1780, "fnal": 1780, "gov": 1780, "gh_fft": 1780, "nutal": 1780, "general_ham": 1780, "6280e": 1780, "2698e": 1780, "1052e": 1780, "9826e": 1780, "5461": [1782, 1902], "1347": 1782, "7266": 1782, "2746": 1782, "5194": 1782, "1343": 1782, "4032": 1782, "2711": 1782, "5380": 1784, "8632": 1784, "1265": 1784, "9399": 1784, "5644": 1784, "9744": 1784, "1268": 1784, "2162": 1789, "6719": 1789, "3332": 1789, "5793": [1789, 1902], "0061": 1789, "6058": 1789, "9497": 1789, "5071": 1789, "3343": 1789, "9553": 1789, "0960": 1789, "derivati": [1790, 1793], "sparsr": 1791, "run_my_model": 1791, "prev_checks_en": 1791, "check_invari": [1791, 1798, 1799, 1800, 1801, 1802, 1803, 1925], "sparse_csr_tensor": [1791, 1869, 1911, 1925], "z_": [1793, 1891, 1926], "bigoplus_": 1793, "kj": 1793, "bigoplu": 1793, "sparseaddmmbackward0": 1793, "sparsemmreduceimplbackward0": 1793, "sparsiti": [1794, 1866, 1878, 1889], "spy": 1794, "2847": 1794, "7805": 1794, "1900": [1794, 1906], "to_dens": [1794, 1796, 1869, 1911, 1925], "3903": 1794, "x_k": 1795, "6438": 1797, "6467": 1797, "3411": 1797, "0918": 1797, "5348": 1797, "0634": 1797, "0494": 1797, "0646": 1797, "1844": 1797, "1276": 1797, "1874": 1797, "6334": 1797, "9682": 1797, "5340": 1797, "7483": 1797, "4512": 1797, "4073": 1797, "8901": 1797, "3183": 1797, "7539": 1797, "6596": 1797, "ncolblock": [1798, 1925], "array_list": [1798, 1799, 1800, 1802, 1803], "nrow": [1798, 1799, 1800, 1802, 1803, 1925], "ncol": [1798, 1799, 1800, 1802, 1803, 1925], "denses": [1798, 1799, 1800, 1802, 1803, 1925], "check_sparse_tensor_invari": [1798, 1799, 1800, 1801, 1802, 1803, 1925], "nrowblock": [1799, 1925], "compressed_indic": [1800, 1869, 1925], "plain_indic": [1800, 1869, 1925], "compressed_dim_s": [1800, 1925], "rdinat": 1801, "_indic": [1801, 1911, 1925], "0755": [1805, 1806], "0226": [1805, 1806], "0831": [1805, 1806], "4806": [1805, 1806], "0112": 1805, "2883": 1805, "6933": 1805, "0457": 1806, "0069": 1806, "2310": 1806, "2959": [1810, 1811, 1853, 1854], "8101": [1810, 1811, 1853, 1854], "5027": [1810, 1811, 1853, 1854], "3270": [1810, 1811, 1853, 1854], "5905": [1810, 1811, 1853, 1854], "6538": [1810, 1811, 1853, 1854, 1902], "3330": [1810, 1811, 1853, 1854], "5596": [1810, 1811, 1853, 1854], "6548": [1810, 1811, 1853, 1854], "1264": [1810, 1811, 1853, 1854], "5080": [1810, 1811, 1816, 1853, 1854, 1902], "6420": [1810, 1811, 1853, 1854], "1992": [1810, 1811, 1853, 1854], "0311": [1810, 1926], "7477": 1810, "2204": 1810, "9087": 1810, "2620": 1811, "0028": [1811, 1836], "0957": 1811, "6038": 1811, "0645": [1811, 1854], "4485": [1811, 1854], "8707": [1811, 1854], "0665": [1811, 1854], "librosa": 1812, "omega": 1812, "win": [1812, 1891], "_fft": [1812, 1869], "dimnsion": 1812, "1133": 1815, "2958": 1815, "5475": 1815, "0569": 1815, "0737": 1815, "3429": 1815, "9138": 1815, "9337": 1815, "6864": [1815, 1840], "1132": 1815, "7892": 1815, "1003": 1815, "5688": 1815, "3637": 1815, "9906": 1815, "5197": 1815, "4598": 1815, "3708": 1815, "6217": 1815, "435": 1815, "1335": 1815, "3135": 1815, "gesdd": 1816, "conquer": 1816, "gesvdjbatch": 1816, "fortran": 1816, "\u00b9": 1816, "2364": 1816, "7752": 1816, "7201": 1816, "7394": 1816, "0504": 1816, "3371": 1816, "5296": 1816, "3550": 1816, "5569": 1816, "2445": 1816, "1414": 1816, "4027": 1816, "0287": 1816, "5434": 1816, "1946": 1816, "8833": 1816, "3679": 1816, "4296": 1816, "2890": 1816, "6604": 1816, "2717": 1816, "2618": 1816, "4234": 1816, "2481": 1816, "4733": 1816, "3289": [1816, 1907], "0315": 1816, "7806": 1816, "0199": 1816, "8766": 1816, "4809": 1816, "4054": 1816, "7600": 1816, "8611": 1816, "2594": 1816, "4373": 1816, "6531e": 1816, "a_big": 1816, "6503e": 1816, "swapax": [1819, 1869, 1911, 1929], "1995": 1825, "4608": 1825, "7702": 1825, "4875": 1825, "9158": 1825, "5872": 1825, "6929": 1825, "6932": 1825, "take_along_axi": [1827, 1897], "max_idx": 1827, "sorted_idx": 1827, "2027": 1828, "7687": 1828, "4412": 1828, "3856": 1828, "5930": 1828, "9859": 1828, "4722": 1828, "3366": 1828, "8986": 1829, "7279": 1829, "1745": 1829, "7156": 1829, "8257": 1829, "2553": 1829, "11111": 1830, "222222": 1830, "3333333": 1830, "1111": 1830, "array_split": 1831, "i_d": 1832, "k_": 1832, "4532": 1832, "4874": 1832, "5018": 1832, "4796": [1832, 1906], "5162": 1832, "5306": 1832, "2922": 1832, "7556": 1832, "2741": 1832, "3161": 1832, "0704": 1832, "0187": 1832, "4079": 1832, "3126": 1832, "8744": 1832, "8223": 1832, "9445": 1832, "4117": 1832, "7780": 1832, "7193": 1832, "4867": 1832, "3204": 1832, "5513": 1832, "4737": [1832, 1857], "2850": 1832, "2573": 1832, "5997": 1832, "sparsebsr": 1836, "sparsecsc": 1836, "sparsebsc": 1836, "9893": 1836, "5809": 1836, "1669": 1836, "7299": 1836, "4942": [1836, 1902], "y_0": 1837, "y_1": 1837, "x_diff": 1837, "y_diff": 1837, "riemann": [1837, 1891, 1899, 1926], "badli": 1839, "cloned_coeffici": 1839, "1527": 1839, "0753": 1839, "7986": 1839, "0210": 1839, "3513": 1839, "5492": 1839, "7403": 1839, "0243": 1839, "7841": 1839, "9046": 1839, "5405": 1839, "9320": 1839, "9270": 1839, "2826": 1839, "lbrace": [1840, 1841, 1842, 1843], "rbrace": [1840, 1841, 1842, 1843], "0813": 1840, "8619": 1840, "7105": 1840, "0935": 1840, "1380": 1840, "3409": [1840, 1906], "2219": 1840, "5653": 1840, "2521": 1840, "2345": 1840, "2544": 1840, "3461": 1840, "4785": 1840, "4477": 1840, "6049": 1840, "6368": 1840, "8775": 1840, "7145": 1840, "1502": 1840, "2716": 1840, "1243": 1840, "5413": 1840, "3615": 1840, "0614": 1840, "7344": 1840, "3164": 1840, "7648": 1840, "4024": 1840, "0978": 1840, "col": [1841, 1843, 1869], "2309": 1842, "5207": 1842, "0049": 1842, "2072": 1842, "0680": 1842, "6602": 1842, "3480": 1842, "5211": 1842, "4573": 1842, "5876": 1842, "0794": [1842, 1926], "8373": 1842, "6654": 1842, "2604": 1842, "5235": 1842, "2447": 1842, "9556": 1842, "2919": 1842, "1768": 1842, "4333": 1842, "3146": [1842, 1902], "6576": 1842, "0432": 1842, "9348": [1842, 1926], "4410": 1842, "9888": 1842, "3337": 1842, "6556": 1842, "4798": 1842, "5466": 1845, "8008": 1845, "9079": 1845, "unique_consecut": [1848, 1869, 1911], "inverse_indic": [1848, 1849], "warn_onli": 1851, "alon": [1851, 1870, 1913], "put_": [1851, 1869], "index_add": [1851, 1869, 1911], "index_select": [1851, 1867, 1869, 1911, 1925], "fractionalmaxpool2d": 1851, "fractionalmaxpool3d": 1851, "reflectionpad1d": 1851, "reflectionpad3d": 1851, "replicationpad1d": 1851, "replicationpad3d": 1851, "histc": [1851, 1869, 1911], "bincount": [1851, 1869, 1911], "kthvalu": [1851, 1869, 1884, 1911], "cublasapi_reproduc": [1851, 1906], "avg_pool3d_backward_cuda": 1851, "alexandr": 1852, "theophil": 1852, "0631": 1853, "5590": 1853, "4893": 1853, "8258": 1853, "5926": 1854, "0056": 1854, "3646": 1854, "vecdot": 1855, "mi": [1856, 1857], "6116": 1856, "5772": [1856, 1926], "4606": 1856, "9120": 1856, "0786": 1856, "7497": 1856, "6623": 1856, "5772j": 1856, "9120j": 1856, "7497j": 1856, "6623j": 1856, "3839j": 1857, "2098": 1857, "6699j": 1857, "3470": 1857, "9451j": 1857, "5174": 1857, "3136j": 1857, "6699": 1857, "9451": 1857, "3136": 1857, "atleast_2d": [1860, 1869, 1911], "3139": 1861, "3898": 1861, "1657": 1861, "0383": 1861, "8785": 1861, "1089": 1861, "hubconf": 1865, "entrypoint_nam": 1865, "_resnet18": 1865, "underscor": [1865, 1885, 1921, 1931], "load_state_dict_from_url": [1865, 1880], "2gb": 1865, "relative_path_to_checkpoint": 1865, "pth": [1865, 1880, 1907], "dirnam": 1865, "5c106cde": [1865, 1880], "force_reload": 1865, "skip_valid": 1865, "trust_repo": 1865, "repo_own": 1865, "repo_nam": 1865, "torchhub": 1865, "owner": [1865, 1896, 1911, 1921, 1922], "github_token": 1865, "repo_or_dir": 1865, "mute": 1865, "resnet50_weight": 1865, "imagenet1k_v1": 1865, "download_url_to_fil": 1865, "hash_prefix": 1865, "temporary_fil": 1865, "sha256": [1865, 1880], "s3": [1865, 1880, 1908], "amazonaw": [1865, 1880, 1908], "model_dir": [1865, 1880], "check_hash": [1865, 1880], "hub_dir": [1865, 1880], "get_dir": [1865, 1880], "ext": [1865, 1880], "eight": [1865, 1880], "hash": [1865, 1869, 1871, 1880, 1911], "succinct": 1865, "set_dir": 1865, "path_to_hub_dir": 1865, "torch_hom": 1865, "xdg_cache_hom": [1865, 1894], "reiniti": 1865, "path_importer_cach": 1865, "subpackag": [1865, 1913], "classifi": [1866, 1871, 1909, 1912, 1916, 1930], "pypi": 1866, "conda": [1866, 1908], "hip": 1866, "javadoc": 1866, "uninitializedbuff": 1866, "anomali": 1866, "can_device_access_p": 1866, "current_blas_handl": 1866, "device_of": 1866, "get_arch_list": 1866, "get_device_cap": 1866, "get_device_nam": 1866, "get_device_properti": 1866, "get_gencode_flag": 1866, "get_sync_debug_mod": 1866, "ipc_collect": 1866, "memory_usag": 1866, "set_stream": 1866, "set_sync_debug_mod": 1866, "power_draw": 1866, "clock_rat": 1866, "outofmemoryerror": 1866, "jiter": 1866, "sanit": 1866, "get_rng_stat": [1866, 1920], "set_rng_stat": [1866, 1920], "empty_cach": [1866, 1894, 1900], "set_per_process_memory_fract": 1866, "current_allocated_memori": 1866, "driver_allocated_memori": 1866, "pathwis": 1866, "exponentialfamili": 1866, "binomi": [1866, 1869, 1911], "chi2": 1866, "continuousbernoulli": 1866, "dirichlet": 1866, "fishersnedecor": 1866, "halfcauchi": 1866, "halfnorm": 1866, "kumaraswami": 1866, "lkjcholeski": 1866, "laplac": 1866, "lognorm": 1866, "lowrankmultivariatenorm": 1866, "mixturesamefamili": 1866, "multinomi": [1866, 1869, 1911], "multivariatenorm": 1866, "negativebinomi": 1866, "onehotcategor": 1866, "relaxedbernoulli": 1866, "logitrelaxedbernoulli": 1866, "relaxedonehotcategor": 1866, "studentt": 1866, "transformeddistribut": 1866, "vonmis": 1866, "weibul": 1866, "wishart": 1866, "solver": [1866, 1905], "misc": 1866, "normal_": [1866, 1869, 1884, 1889, 1894, 1933], "constant_": [1866, 1889], "ones_": [1866, 1889], "zeros_": [1866, 1889], "eye_": [1866, 1873, 1889], "dirac_": [1866, 1873, 1889], "xavier_uniform_": [1866, 1889], "xavier_normal_": [1866, 1889, 1902], "kaiming_uniform_": [1866, 1889], "trunc_normal_": [1866, 1889], "orthogonal_": [1866, 1873, 1889, 1902], "sparse_": [1866, 1889], "alexnet": 1866, "preview": 1866, "swa": 1866, "ema": 1866, "powersgd": 1866, "remotemodul": 1866, "fork_rng": [1866, 1920], "doublestorag": [1866, 1927], "floatstorag": [1866, 1927], "halfstorag": [1866, 1927], "longstorag": [1866, 1927], "intstorag": [1866, 1927], "shortstorag": [1866, 1927], "charstorag": [1866, 1927], "bytestorag": [1866, 1927], "boolstorag": [1866, 1927], "bfloat16storag": [1866, 1927], "complexdoublestorag": [1866, 1927], "complexfloatstorag": [1866, 1927], "quint8storag": [1866, 1927], "qint8storag": [1866, 1927], "qint32storag": [1866, 1927], "quint4x2storag": [1866, 1927], "quint2x4storag": [1866, 1927], "make_tensor": [1866, 1932], "assert_allclos": [1866, 1932], "sampler": 1866, "mobile_optim": 1866, "optimize_for_mobil": [1866, 1879], "model_zoo": 1866, "load_url": [1866, 1880], "tensorboard": [1866, 1881, 1915], "summarywrit": [1866, 1881, 1930], "iinfo": 1866, "__config__": [1866, 1893], "torchdata": 1866, "torchserv": 1866, "torchtext": 1866, "_out": [1867, 1889, 1899], "_adaptive_avg_pool2d": [1867, 1911], "_adaptive_avg_pool2d_backward": 1867, "_log_softmax": [1867, 1911], "half_to_float": 1867, "_native_batch_norm_legit": [1867, 1911], "no_stat": 1867, "_softmax": [1867, 1911, 1926], "_to_copi": [1867, 1911], "scalartyp": 1867, "memoryformat": 1867, "start_step": 1867, "avg_pool2d": [1867, 1869, 1911, 1918], "avg_pool2d_backward": 1867, "constant_pad_nd": [1867, 1869, 1911], "convolution_backward": 1867, "bias_siz": 1867, "output_mask": 1867, "embedding_dense_backward": 1867, "num_weight": 1867, "interpolation_mod": [1867, 1869], "isinf": [1867, 1869, 1911, 1925], "max_pool2d_with_indic": [1867, 1869, 1911], "max_pool2d_with_indices_backward": 1867, "max_pool3d_with_indic": [1867, 1869, 1911], "native_batch_norm": [1867, 1869, 1911], "native_dropout": [1867, 1869, 1911], "native_group_norm": [1867, 1869, 1911], "hxw": [1867, 1869], "native_group_norm_backward": 1867, "rstd": 1867, "native_layer_norm": [1867, 1869, 1911], "native_layer_norm_backward": 1867, "tensor_scalar": 1867, "tensor_tensor": 1867, "scalar_tensor": [1867, 1869, 1911], "slice_scatt": [1867, 1869, 1911], "dim_intlist": 1867, "sym_numel": [1867, 1911], "sym_siz": [1867, 1911], "sym_storage_offset": [1867, 1911], "sym_strid": [1867, 1911], "upsample_bilinear2d": [1867, 1869, 1911], "upsample_nearest2d": [1867, 1869, 1911], "convert_element_typ": [1867, 1911], "broadcast_in_dim": [1867, 1911], "bessel_i0": [1867, 1911], "bessel_i1": [1867, 1911], "bessel_j0": [1867, 1911, 1926], "bessel_j1": [1867, 1911, 1926], "cbrt": [1867, 1911], "erf_inv": [1867, 1911], "erfcx": [1867, 1911, 1926], "exp2": [1867, 1869, 1911, 1926, 1930], "isfinit": [1867, 1869, 1905, 1911], "ndtri": [1867, 1911, 1926], "spherical_bessel_j0": [1867, 1911, 1926], "fmax": [1867, 1869, 1911], "fmin": [1867, 1869, 1911], "shift_left": [1867, 1911], "shift_right_arithmet": [1867, 1911], "zeta": [1867, 1894, 1911, 1926], "broadcast_dimens": 1867, "collapse_view": [1867, 1911], "start_indic": 1867, "limit_indic": 1867, "slice_in_dim": [1867, 1911], "start_index": 1867, "limit_index": 1867, "split_dim": [1867, 1911], "outer_length": 1867, "view_of": [1867, 1911], "as_strided_scatt": [1867, 1869, 1911], "collaps": [1867, 1884, 1911], "rev": [1867, 1911], "device_put": [1867, 1911], "maximum_valu": [1867, 1911], "minimum_valu": [1867, 1911], "copy_strid": [1867, 1911], "copy_to": [1867, 1911], "xor_sum": [1867, 1911], "empty_permut": [1867, 1869, 1911], "physical_layout": [1867, 1869], "iota": [1867, 1911], "fft_r2c": [1867, 1911], "fft_c2c": [1867, 1911], "fft_c2r": [1867, 1911], "disadvantag": 1868, "gentl": 1868, "beam": 1868, "traced_bar": 1868, "myscriptmodul": 1868, "103": [1868, 1870], "939": [1868, 1870], "116": [1868, 1870], "779": [1868, 1870], "123": [1868, 1870], "my_script_modul": [1868, 1870], "ins": 1868, "pytorch_jit": 1868, "traced_fn": 1868, "disable_jit_exampl": 1868, "printer": 1868, "rv": 1868, "rv0": 1868, "rv1": 1868, "ssa": 1868, "block0": 1868, "block1": 1868, "loop_in_traced_fn": 1868, "input_tupl": 1868, "fill_row_zero": 1868, "tracerwarn": 1868, "disjoint": 1868, "nr": 1868, "09115803241729736": 1868, "6782537698745728": 1868, "cpu_model": 1868, "gpu_model": 1868, "sample_input_cpu": 1868, "sample_input_gpu": 1868, "traced_cpu": 1868, "traced_gpu": 1868, "use_gpu": 1868, "__constants__": [1868, 1870], "my_module_inst": 1868, "redeclar": 1868, "nn_module_inst": 1868, "my_scripted_model": 1868, "526": [1868, 1870, 1909], "script_method": 1868, "implicitly_compiled_method": 1868, "another_forward": 1868, "unused_method": 1868, "some_fn": 1868, "ever": [1868, 1927], "some_fn2": 1868, "some_fn3": 1868, "some_fn4": 1868, "my_dict": [1868, 1870], "my_int": [1868, 1870], "my_const": 1868, "make_dict": 1868, "nnc": 1868, "__and__": 1869, "__iand__": 1869, "__ilshift__": 1869, "__ior__": 1869, "__irshift__": 1869, "__ixor__": 1869, "__lshift__": 1869, "__or__": 1869, "__rshift__": 1869, "__xor__": 1869, "absolute_": 1869, "acos_": [1869, 1884], "addbmm_": 1869, "addcdiv_": 1869, "addcmul_": 1869, "addmv_": [1869, 1884], "addr_": 1869, "align_a": [1869, 1884, 1885, 1911], "align_to": [1869, 1884, 1885, 1911], "ellipsis_idx": 1869, "aminmax": [1869, 1911], "arccos_": 1869, "arccosh_": 1869, "arcsin_": [1869, 1925], "arcsinh_": 1869, "arctan2_": 1869, "arctan_": 1869, "arctanh_": 1869, "argwher": [1869, 1911], "as_strided_": 1869, "asin_": [1869, 1884, 1925], "asinh_": [1869, 1884], "atan_": [1869, 1884], "atanh_": [1869, 1884], "baddbmm_": 1869, "bernoulli_": [1869, 1884, 1933], "bitwise_and_": 1869, "bitwise_left_shift_": 1869, "bitwise_not_": [1869, 1884], "bitwise_or_": 1869, "bitwise_right_shift_": 1869, "bitwise_xor_": 1869, "broadcast_to": [1869, 1911], "cauchy_": [1869, 1884, 1933], "ceil_": [1869, 1884], "clamp_max": [1869, 1911], "clamp_max_": 1869, "clamp_min": [1869, 1911], "clamp_min_": 1869, "clip_": 1869, "conj_physical_": 1869, "copysign_": 1869, "cos_": [1869, 1884, 1891], "cosh_": [1869, 1884], "count_nonzero": [1869, 1911], "cummax": [1869, 1911], "cummin": [1869, 1911], "cumprod_": 1869, "cumsum_": 1869, "deg2rad": [1869, 1884, 1911, 1925], "deg2rad_": [1869, 1884, 1925], "outdim": 1869, "diagonal_scatt": [1869, 1911], "digamma_": [1869, 1884], "div_": [1869, 1884, 1925], "divide_": 1869, "dsplit": [1869, 1911], "eq_": 1869, "erf_": [1869, 1884], "erfc_": [1869, 1884], "erfinv_": [1869, 1884], "exp2_": 1869, "exp_": [1869, 1884], "expm1_": [1869, 1884], "exponential_": [1869, 1884, 1933], "fill_diagonal_": 1869, "fix_": 1869, "fliplr": [1869, 1911], "flipud": [1869, 1911], "float_power_": 1869, "floor_": [1869, 1884], "floor_divide_": [1869, 1925], "fmod_": 1869, "frac_": [1869, 1884], "frexp": [1869, 1911], "gcd_": 1869, "ge_": 1869, "geometric_": [1869, 1933], "ger": [1869, 1911], "get_devic": [1869, 1884, 1911, 1925, 1927, 1928], "greater_": 1869, "greater_equal_": 1869, "gt_": 1869, "hardshrink": [1869, 1911], "heavisid": [1869, 1911], "heaviside_": 1869, "hsplit": [1869, 1911, 1929], "hypot_": 1869, "i0_": 1869, "igamma_": 1869, "igammac_": 1869, "index_fil": [1869, 1884, 1911], "index_reduc": [1869, 1911], "is_coalesc": [1869, 1911, 1925], "is_complex": [1869, 1911, 1925, 1928], "is_contigu": [1869, 1884, 1911, 1929], "is_floating_point": [1869, 1884, 1911, 1925, 1928], "is_infer": [1869, 1911], "is_same_s": [1869, 1911, 1925], "is_set_to": [1869, 1911], "is_sign": [1869, 1884, 1911, 1925], "isclos": [1869, 1911], "isneginf": [1869, 1911, 1925], "isposinf": [1869, 1911, 1925], "isreal": [1869, 1911], "istft": [1869, 1911], "kron": [1869, 1911], "lcm_": 1869, "ldexp_": 1869, "le_": 1869, "lerp_": 1869, "less_": 1869, "less_equal_": 1869, "lgamma_": 1869, "log10_": [1869, 1884], "log1p_": [1869, 1884, 1925], "log2_": [1869, 1884], "log_normal_": [1869, 1884, 1933], "logaddexp2": [1869, 1911], "logcumsumexp": [1869, 1911], "logical_and_": 1869, "logical_not_": [1869, 1884], "logical_or_": 1869, "logical_xor_": 1869, "logit_": 1869, "lt_": 1869, "masked_scatt": [1869, 1911], "masked_select": [1869, 1884, 1911], "matrix_pow": [1869, 1911], "moveaxi": [1869, 1911], "msort": [1869, 1911], "multiply_": 1869, "mvlgamma_": 1869, "nan_to_num_": 1869, "nanmedian": [1869, 1884, 1911], "nansum": [1869, 1911], "narrow_copi": [1869, 1911, 1925], "ne_": 1869, "neg_": [1869, 1884, 1925], "negative_": [1869, 1925], "new_empty_strid": [1869, 1911], "new_ful": [1869, 1894, 1911], "new_on": [1869, 1911], "nextafter_": 1869, "nonzero_stat": [1869, 1911], "not_equal_": 1869, "output_nr": [1869, 1911], "polygamma_": 1869, "pow_": [1869, 1884], "q_per_channel_scal": [1869, 1911], "q_per_channel_zero_point": [1869, 1911], "q_scale": [1869, 1911], "q_zero_point": [1869, 1911], "rad2deg": [1869, 1884, 1911, 1925], "rad2deg_": [1869, 1884, 1925], "reciprocal_": [1869, 1884], "record_stream": [1869, 1894, 1911], "refine_nam": [1869, 1884, 1885, 1911], "relu_": [1869, 1918], "remainder_": 1869, "rename_": [1869, 1884, 1885], "renorm_": 1869, "reshape_a": [1869, 1886, 1911, 1929], "resize_a": [1869, 1911], "the_templ": 1869, "resize_as_sparse_": 1869, "retains_grad": [1869, 1911], "roll": [1869, 1911], "rot90": [1869, 1911], "round_": [1869, 1884], "rsqrt_": [1869, 1884], "select_scatt": [1869, 1911], "sgn_": [1869, 1884], "sigmoid_": [1869, 1884, 1918], "sign_": [1869, 1884], "sinc_": 1869, "sinh_": [1869, 1884], "smm": [1869, 1911, 1925], "sparse_resize_": 1869, "sparse_resize_and_clear_": 1869, "split_with_s": [1869, 1911, 1929], "sqrt_": [1869, 1884], "square_": 1869, "squeeze_": [1869, 1918], "sspaddmm": [1869, 1911, 1925], "sub_": [1869, 1884, 1925], "subtract_": 1869, "sum_to_s": [1869, 1911], "swapaxes_": 1869, "swapdim": [1869, 1911, 1929], "swapdims_": 1869, "take_along_dim": [1869, 1911], "tan_": [1869, 1884], "tanh_": [1869, 1884, 1918], "tensor_indices_or_sect": 1869, "to_mkldnn": [1869, 1911], "to_padded_tensor": [1869, 1886, 1911], "to_sparse_bsc": [1869, 1911], "to_sparse_bsr": [1869, 1911, 1925], "to_sparse_csc": [1869, 1911, 1925], "true_divide_": 1869, "trunc_": [1869, 1884], "type_a": [1869, 1884, 1911], "out0": [1869, 1907], "unsafe_chunk": [1869, 1911], "unsafe_split": [1869, 1911], "unsafe_split_with_s": [1869, 1911], "unsqueeze_": [1869, 1918], "view_a": [1869, 1911, 1929], "vsplit": [1869, 1911, 1929], "xlogy_": 1869, "adaptive_avg_pool2d": [1869, 1896, 1911, 1918], "adaptive_max_pool1d_with_indic": [1869, 1896], "adaptive_max_pool2d_with_indic": 1869, "adaptive_max_pool3d_with_indic": 1869, "alpha_dropout": [1869, 1911], "assert_int_or_pair": 1869, "arg_nam": 1869, "binary_cross_entropi": [1869, 1911], "binary_cross_entropy_with_logit": [1869, 1911], "celu": [1869, 1911], "dropout2d": 1869, "dropout3d": 1869, "feature_alpha_dropout": [1869, 1911], "fractional_max_pool2d_with_indic": 1869, "fractional_max_pool3d_with_indic": 1869, "gaussian_nll_loss": 1869, "glu": [1869, 1911], "gumbel_softmax": 1869, "hardsigmoid": [1869, 1911, 1918], "hardswish": [1869, 1911, 1918], "huber_loss": [1869, 1911], "instance_norm": [1869, 1911, 1918], "local_response_norm": 1869, "lp_pool1d": 1869, "lp_pool2d": 1869, "max_pool1d_with_indic": [1869, 1911], "mish": [1869, 1911], "multi_head_attention_forward": 1869, "embed_dim_to_check": 1869, "in_proj_weight": 1869, "in_proj_bia": 1869, "bias_k": 1869, "bias_v": 1869, "out_proj_weight": 1869, "out_proj_bia": 1869, "use_separate_proj_weight": 1869, "q_proj_weight": 1869, "k_proj_weight": 1869, "v_proj_weight": 1869, "static_k": 1869, "static_v": 1869, "multilabel_soft_margin_loss": 1869, "relu6": [1869, 1911, 1918], "silu": [1869, 1886, 1911], "softsign": 1869, "tanhshrink": 1869, "adaptive_avg_pool1d": [1869, 1896, 1911, 1918], "adaptive_max_pool1d": [1869, 1896, 1911], "affine_grid_gener": [1869, 1911], "alias_copi": [1869, 1911], "align_tensor": [1869, 1911], "alpha_dropout_": 1869, "as_strided_copi": [1869, 1911], "atleast_1d": [1869, 1911], "avg_pool1d": [1869, 1911, 1918], "bartlett_window": [1869, 1873, 1911], "cudnn_en": 1869, "batch_norm_backward_elemt": 1869, "invstd": 1869, "mean_di": 1869, "mean_dy_xmu": 1869, "batch_norm_backward_reduc": 1869, "input_g": 1869, "bias_g": 1869, "out3": 1869, "batch_norm_elemt": [1869, 1911], "batch_norm_gather_stat": [1869, 1911], "batch_norm_gather_stats_with_count": [1869, 1911], "batch_norm_stat": [1869, 1911], "batch_norm_update_stat": [1869, 1911], "blackman_window": [1869, 1873, 1911], "block_diag": [1869, 1911], "can_cast": [1869, 1911], "ccol_indices_copi": [1869, 1911], "celu_": 1869, "choose_qparams_optim": [1869, 1911], "n_bin": 1869, "bit_width": 1869, "col_indices_copi": [1869, 1911], "column_stack": [1869, 1911], "conv_tbc": [1869, 1911], "crow_indices_copi": [1869, 1911], "cudnn_affine_grid_gener": [1869, 1911], "cudnn_batch_norm": [1869, 1911], "exponential_average_factor": 1869, "cudnn_convolut": [1869, 1911], "cudnn_convolution_add_relu": [1869, 1911], "cudnn_convolution_relu": [1869, 1911], "cudnn_convolution_transpos": [1869, 1911], "cudnn_grid_sampl": [1869, 1911], "cudnn_is_accept": [1869, 1911], "cumulative_trapezoid": [1869, 1911], "diagonal_copi": [1869, 1911], "dropout_": [1869, 1879], "embedding_renorm_": 1869, "empty_quant": [1869, 1911], "anyenumtyp": 1869, "expand_copi": [1869, 1911], "fake_quantize_per_channel_affin": [1869, 1911], "fbgemm_linear_fp16_weight": [1869, 1911], "packed_weight": 1869, "fbgemm_linear_fp16_weight_fp32_activ": [1869, 1911], "fbgemm_linear_int8_weight": [1869, 1911], "col_offset": 1869, "weight_scal": 1869, "weight_zero_point": 1869, "fbgemm_linear_int8_weight_fp32_activ": [1869, 1911], "fbgemm_linear_quantize_weight": [1869, 1911], "fbgemm_pack_gemm_matrix_fp16": [1869, 1911], "fbgemm_pack_quantized_matrix": [1869, 1911], "feature_alpha_dropout_": 1869, "feature_dropout": [1869, 1911], "feature_dropout_": 1869, "frobenius_norm": [1869, 1911], "from_fil": [1869, 1911, 1927], "fused_moving_avg_obs_fake_qu": [1869, 1911], "observer_on": 1869, "fake_quant_on": 1869, "running_min": 1869, "running_max": 1869, "per_row_fake_qu": 1869, "symmetric_qu": 1869, "has_bias": 1869, "gru_cel": [1869, 1911], "w_ih": 1869, "w_hh": 1869, "hamming_window": [1869, 1873, 1911], "histogramdd": [1869, 1911], "hspmm": [1869, 1911, 1925], "indices_copi": [1869, 1911], "is_autocast_cpu_en": [1869, 1911], "is_autocast_en": [1869, 1911], "is_grad_en": [1869, 1911], "is_vulkan_avail": [1869, 1911], "isin": [1869, 1911], "kaiser_window": [1869, 1911], "lstm_cell": [1869, 1911], "meshgrid": [1869, 1911], "miopen_batch_norm": [1869, 1911], "miopen_convolut": [1869, 1911], "miopen_convolution_add_relu": [1869, 1911], "miopen_convolution_relu": [1869, 1911], "miopen_convolution_transpos": [1869, 1911], "miopen_depthwise_convolut": [1869, 1911], "miopen_rnn": [1869, 1911], "weight_stride0": 1869, "dropout_st": 1869, "out4": 1869, "mkldnn_adaptive_avg_pool2d": [1869, 1911], "mkldnn_convolut": [1869, 1911], "mkldnn_linear_backward_weight": 1869, "bias_defin": 1869, "mkldnn_max_pool2d": [1869, 1911], "mkldnn_max_pool3d": [1869, 1911], "mkldnn_rnn_layer": [1869, 1911], "weight0": 1869, "weight1": 1869, "weight2": 1869, "weight3": 1869, "hx_": 1869, "cx_": 1869, "save_mean": 1869, "save_invstd": 1869, "native_channel_shuffl": [1869, 1911], "native_norm": [1869, 1911, 1925], "norm_except_dim": [1869, 1911], "nuclear_norm": [1869, 1911], "pairwise_dist": [1869, 1911], "permute_copi": [1869, 1911], "promote_typ": [1869, 1911, 1932], "quantize_per_channel": [1869, 1911, 1916], "quantize_per_tensor_dynam": [1869, 1911, 1916], "quantized_batch_norm": [1869, 1911], "quantized_gru_cel": [1869, 1911], "packed_ih": 1869, "packed_hh": 1869, "col_offsets_ih": 1869, "col_offsets_hh": 1869, "scale_ih": 1869, "scale_hh": 1869, "zero_point_ih": 1869, "zero_point_hh": 1869, "quantized_lstm_cel": [1869, 1911], "quantized_max_pool1d": [1869, 1911], "quantized_max_pool2d": [1869, 1911], "quantized_max_pool3d": [1869, 1911], "quantized_rnn_relu_cel": [1869, 1911], "quantized_rnn_tanh_cel": [1869, 1911], "randint_lik": [1869, 1873, 1911, 1933], "randn_lik": [1869, 1873, 1886, 1911, 1933], "randperm": [1869, 1873, 1911, 1933], "result_typ": [1869, 1911], "scalar1": 1869, "scalar2": 1869, "rnn_relu": [1869, 1911], "rnn_relu_cel": [1869, 1911], "rnn_tanh": [1869, 1911], "rnn_tanh_cel": [1869, 1911], "row_indices_copi": [1869, 1911], "row_stack": [1869, 1911], "rrelu_": 1869, "rsub": [1869, 1911], "searchsort": [1869, 1911], "segment_reduc": [1869, 1911], "selu_": 1869, "slice_copi": [1869, 1911], "sparse_bsc_tensor": [1869, 1911, 1925], "sparse_bsr_tensor": [1869, 1911, 1925], "sparse_compressed_tensor": [1869, 1911, 1925], "sparse_csc_tensor": [1869, 1911, 1925], "split_copi": [1869, 1911], "split_with_sizes_copi": [1869, 1911], "squeeze_copi": [1869, 1911], "std_mean": [1869, 1884, 1911], "sym_constrain_rang": [1869, 1911], "t_copi": [1869, 1911], "threshold_": 1869, "transpose_copi": [1869, 1911], "trapz": [1869, 1911], "tril_indic": [1869, 1873, 1911], "triu_indic": [1869, 1873, 1911], "unbind_copi": [1869, 1911], "unfold_copi": [1869, 1911], "unsqueeze_copi": [1869, 1911], "values_copi": [1869, 1911], "vander": [1869, 1873, 1911], "var_mean": [1869, 1884, 1911], "view_as_complex_copi": [1869, 1911], "view_as_real_copi": [1869, 1911], "_nn": 1869, "adaptive_max_pool2d": [1869, 1911], "conv_depthwise3d": [1869, 1911], "cross_entropy_loss": [1869, 1911], "input_scal": 1869, "elu_": 1869, "flatten_dense_tensor": [1869, 1911], "random_sampl": 1869, "gelu_": 1869, "hardsigmoid_": [1869, 1918], "hardswish_": 1869, "hardtanh_": [1869, 1918], "leaky_relu_": 1869, "log_sigmoid": [1869, 1911], "mish_": 1869, "mkldnn_linear": [1869, 1911], "mkldnn_reorder_conv2d_weight": [1869, 1911], "mkldnn_reorder_conv3d_weight": [1869, 1911], "nll_loss2d": [1869, 1911], "nll_loss_nd": [1869, 1911], "reflection_pad3d": [1869, 1911], "relu6_": 1869, "rrelu_with_nois": [1869, 1911], "rrelu_with_noise_": 1869, "silu_": 1869, "slow_conv3d": [1869, 1911], "slow_conv_dilated2d": [1869, 1911], "slow_conv_dilated3d": [1869, 1911], "slow_conv_transpose2d": [1869, 1911], "slow_conv_transpose3d": [1869, 1911], "softshrink": [1869, 1911], "thnn_conv2d": [1869, 1911], "unflatten_dense_tensor": [1869, 1911], "upsample_bicubic2d": [1869, 1911], "scales_h": 1869, "scales_w": 1869, "upsample_linear1d": [1869, 1911], "upsample_nearest1d": [1869, 1911], "upsample_nearest3d": [1869, 1911], "scales_d": 1869, "upsample_trilinear3d": [1869, 1911], "fft_fftfreq": [1869, 1911], "fft_fftshift": [1869, 1911], "fft_hfft2": [1869, 1911], "fft_hfftn": [1869, 1911], "fft_ifftshift": [1869, 1911], "fft_ihfft2": [1869, 1911], "fft_ihfftn": [1869, 1911], "fft_rfftfreq": [1869, 1911], "_linalg": 1869, "linalg_cross": [1869, 1911], "linalg_det": [1869, 1911], "linalg_diagon": [1869, 1911], "eigvec": 1869, "linalg_ldl_factor": [1869, 1911], "linalg_ldl_factor_ex": [1869, 1911], "linalg_ldl_solv": [1869, 1911], "linalg_lu": [1869, 1911], "linalg_lu_factor": [1869, 1911], "linalg_lu_factor_ex": [1869, 1911], "linalg_lu_solv": [1869, 1911], "linalg_matmul": [1869, 1911], "linalg_matrix_exp": [1869, 1911], "linalg_matrix_pow": [1869, 1911], "linalg_multi_dot": [1869, 1911], "linalg_norm": [1869, 1911], "linalg_pinv": [1869, 1911], "linalg_solve_ex": [1869, 1911], "linalg_solve_triangular": [1869, 1911], "linalg_vand": [1869, 1911], "linalg_vecdot": [1869, 1911], "linalg_vector_norm": [1869, 1911], "_nest": 1869, "nested_to_padded_tensor": [1869, 1911], "_spars": 1869, "sparse_sampled_addmm": [1869, 1911], "_special": 1869, "special_airy_ai": [1869, 1911], "special_bessel_j0": [1869, 1911], "special_bessel_j1": [1869, 1911], "special_bessel_y0": [1869, 1911], "special_bessel_y1": [1869, 1911], "special_chebyshev_polynomial_t": [1869, 1911], "special_chebyshev_polynomial_u": [1869, 1911], "special_chebyshev_polynomial_v": [1869, 1911], "special_chebyshev_polynomial_w": [1869, 1911], "special_digamma": [1869, 1911], "special_entr": [1869, 1911], "special_erf": [1869, 1911], "special_erfc": [1869, 1911], "special_erfcx": [1869, 1911], "special_erfinv": [1869, 1911], "special_exp2": [1869, 1911], "special_expit": [1869, 1911], "special_expm1": [1869, 1911], "special_gammainc": [1869, 1911], "special_gammaincc": [1869, 1911], "special_gammaln": [1869, 1911], "special_hermite_polynomial_h": [1869, 1911], "special_i0": [1869, 1911], "special_i1": [1869, 1911], "special_laguerre_polynomial_l": [1869, 1911], "special_legendre_polynomial_p": [1869, 1911], "special_log1p": [1869, 1911], "special_log_ndtr": [1869, 1911], "special_log_softmax": [1869, 1911], "special_logit": [1869, 1911], "special_logsumexp": [1869, 1911], "special_modified_bessel_i0": [1869, 1911], "special_modified_bessel_i1": [1869, 1911], "special_modified_bessel_k0": [1869, 1911], "special_modified_bessel_k1": [1869, 1911], "special_multigammaln": [1869, 1911], "special_ndtr": [1869, 1911], "special_ndtri": [1869, 1911], "special_polygamma": [1869, 1911], "special_psi": [1869, 1911], "special_round": [1869, 1911], "special_scaled_modified_bessel_k0": [1869, 1911], "special_scaled_modified_bessel_k1": [1869, 1911], "special_shifted_chebyshev_polynomial_t": [1869, 1911], "special_shifted_chebyshev_polynomial_u": [1869, 1911], "special_shifted_chebyshev_polynomial_v": [1869, 1911], "special_shifted_chebyshev_polynomial_w": [1869, 1911], "special_sinc": [1869, 1911], "special_softmax": [1869, 1911], "special_spherical_bessel_j0": [1869, 1911], "special_xlog1pi": [1869, 1911], "special_xlogi": [1869, 1911], "special_zeta": [1869, 1911], "tval": 1869, "is_accept": 1869, "rect": 1869, "__complex__": 1869, "__float__": 1869, "__int__": 1869, "hex": [1869, 1871, 1911], "__hex__": 1869, "oct": [1869, 1911], "__oct__": 1869, "divmod": [1869, 1871, 1911], "chr": [1869, 1871, 1911], "int_float": 1869, "float_int": 1869, "fab": [1869, 1911], "int_int": 1869, "float_float": 1869, "complex_complex": 1869, "int_complex": 1869, "complex_int": 1869, "float_complex": 1869, "complex_float": [1869, 1927], "scalar_scalar": 1869, "int_to_int": 1869, "modf": [1869, 1911], "mathremaind": [1869, 1911], "programm": [1870, 1871], "tn": 1870, "subtyp": 1870, "an_error": 1870, "noreturn": [1870, 1871], "classvar": [1870, 1871], "anystr": [1870, 1871], "nomin": 1870, "newtyp": [1870, 1871], "tup": [1870, 1871], "emptydatastructur": 1870, "my_list": 1870, "aug_add_x": 1870, "inc": [1870, 1871], "assign_x": [1870, 1871], "polymorph": 1870, "sum_pair": 1870, "red": [1870, 1871], "enum_fn": [1870, 1871], "my_variable_nam": 1870, "top_level_method": 1870, "other_help": 1870, "ten": [1870, 1930], "my_paramet": 1870, "my_submodul": 1870, "tuple_or_list": 1870, "a_tupl": 1870, "de": [1870, 1913, 1916], "is_script": [1870, 1871, 1911], "unsupported_linear_op": 1870, "is_trac": [1870, 1871], "univers": 1870, "typing_extens": 1870, "a_dict": 1870, "some_dict": 1870, "delimit": [1871, 1872], "tstype": 1871, "tsmoduletyp": 1871, "tsalltyp": 1871, "tsmetatyp": 1871, "tsprimitivetyp": 1871, "tsstructuraltyp": 1871, "tsnominaltyp": 1871, "myclass": [1871, 1913], "printabl": [1871, 1913], "sortabl": 1871, "nevertheless": [1871, 1923], "inc_first_el": 1871, "cpufloattyp": 1871, "tstupl": 1871, "tsnamedtupl": 1871, "tslist": 1871, "tsdict": 1871, "tsoption": 1871, "tsunion": 1871, "tsfutur": 1871, "tsrref": 1871, "tsawait": 1871, "await": [1871, 1872, 1921], "keytyp": 1871, "_await": 1871, "mytupl": 1871, "scripted_inc": 1871, "_annotatednamedtupl": 1871, "_namedtupleannot": 1871, "_unannotatednamedtupl": 1871, "nameerror": 1871, "remedi": 1871, "tsbuiltinclass": 1871, "tscustomclass": 1871, "tsenum": 1871, "tstensor": 1871, "subtensor": [1871, 1896, 1936], "subwithtorchfunct": 1871, "script_g": 1871, "tsclassdef": 1871, "methoddefinit": 1871, "__torch__": [1871, 1909], "class2": 1871, "tsenumdef": 1871, "tsenumtyp": 1871, "memberidentifi": 1871, "intenum": 1871, "intflag": 1871, "basecolor": 1871, "compli": [1871, 1913], "classbodydefinit": 1871, "moduleobj": 1871, "testmodul": 1871, "mymodel": [1871, 1890, 1904], "dosometh": 1871, "strateg": 1871, "congruent": 1871, "python3": 1871, "unannot": 1871, "python3annot": 1871, "paramannot": 1871, "returnannot": 1871, "funcormethodbodi": 1871, "mypyannot": 1871, "localvarannot": 1871, "setval": 1871, "moduletyp": [1871, 1913], "classidentifi": 1871, "instanceattridentifi": 1871, "offset_": 1871, "tsstructualtyp": 1871, "grammar": 1871, "chapter": [1871, 1899], "floattyp": 1871, "inttyp": 1871, "stringtyp": 1871, "devicetyp": 1871, "bullet": 1871, "tupletyp": 1871, "listtyp": 1871, "enclosur": 1871, "parenth_form": 1871, "list_displai": 1871, "dict_displai": 1871, "legal": 1871, "stringliter": 1871, "floatnumb": 1871, "expression_list": 1871, "list_comprehens": 1871, "comp_for": 1871, "target_list": 1871, "or_expr": 1871, "key_datum_list": 1871, "dict_comprehens": 1871, "key_datum": 1871, "ongo": [1871, 1909, 1919, 1921], "enclos": 1871, "datum": [1871, 1935], "attributeref": 1871, "slice_list": 1871, "slice_item": 1871, "proper_slic": 1871, "argument_list": 1871, "u_expr": 1871, "tightli": [1871, 1902], "m_expr": 1871, "a_expr": 1871, "shift_expr": 1871, "and_expr": 1871, "xor_expr": 1871, "comp_oper": 1871, "__contains__": 1871, "or_test": 1871, "and_test": 1871, "not_test": 1871, "conditional_express": 1871, "starred_item": 1871, "expression_stmt": 1871, "starred_express": 1871, "assignment_express": 1871, "assignment_stmt": 1871, "augmented_assignment_stmt": 1871, "augtarget": 1871, "augop": 1871, "annotated_assignment_stmt": 1871, "raise_stmt": 1871, "assert_stmt": 1871, "return_stmt": 1871, "del_stmt": 1871, "pass_stmt": 1871, "print_stmt": 1871, "break_stmt": 1871, "continue_stmt": 1871, "if_stmt": 1871, "while_stmt": 1871, "for_stmt": 1871, "with_stmt": 1871, "with_item": 1871, "__enter__": 1871, "suppress": [1871, 1920], "tuple_stmt": 1871, "getattr_stmt": 1871, "hasattr_stmt": 1871, "zip_stmt": 1871, "iterable1": 1871, "iterable2": 1871, "enumerate_stmt": 1871, "add_stat_valu": 1871, "sugaredvalu": 1871, "unrecogn": 1871, "honor": 1871, "__abs__": 1871, "bytearrai": 1871, "delattr": 1871, "exec": 1871, "__index__": 1871, "isint": 1871, "issubclass": [1871, 1896], "ndigit": 1871, "setattr": 1871, "__import__": [1871, 1913], "rpc_sync": [1871, 1911, 1921, 1922, 1923], "synonym": 1871, "_fork": [1871, 1893], "_wait": [1871, 1893], "lexic": 1872, "indent": 1872, "coroutin": 1872, "__del__": [1872, 1891], "__bytes__": 1872, "__slots__": 1872, "metaclass": 1872, "mro": 1872, "__r": 1872, "nonloc": 1872, "bytesliter": 1872, "imagnumb": 1872, "parenthes": 1872, "ifs": 1872, "compound": 1872, "exc_typ": 1872, "exc_valu": 1872, "adaptivelogsoftmaxwithloss": 1873, "enable_grad": [1873, 1933], "overload_nam": [1875, 1896], "handi": [1875, 1891, 1894], "spotti": 1875, "googl": 1875, "keynam": 1875, "alias_analysi": 1875, "op_nam": 1875, "div_cpu": 1875, "off_by_default": 1877, "_registr": 1877, "born": 1878, "citizen": 1878, "afterthought": 1878, "unlock": 1878, "intuit": 1878, "alik": 1878, "grai": 1878, "systemat": 1878, "onboard": 1878, "maskedarrai": 1878, "masked_tensor": 1878, "blocklist": [1879, 1913], "mobileoptimizertyp": 1879, "conv_bn_fus": 1879, "correspondingli": 1879, "prepack": [1879, 1911], "insert_fold_prepack_op": 1879, "arm": [1879, 1916], "remove_dropout": 1879, "hoist": 1879, "hoist_conv_packed_param": 1879, "fuse_add_relu": 1879, "vulkan": 1879, "vulkan_automatic_gpu_transf": 1879, "freeze_modul": 1879, "script_modul": 1879, "optimization_blocklist": 1879, "preserved_method": 1879, "_mobileoptimizertyp": 1879, "recursivescriptmodul": [1879, 1907], "infrequ": 1881, "window_s": 1881, "max_sampl": 1881, "cap": 1881, "_monitor": 1881, "data_value_t": 1881, "eventhandlerhandl": 1881, "register_event_handl": 1881, "unregister_event_handl": 1881, "tensorboardeventhandl": 1881, "writer": [1881, 1902, 1930], "shader": [1882, 1903], "processor": 1882, "metalperformanceshad": 1882, "shared_memori": 1883, "abruptli": 1883, "get_all_sharing_strategi": 1883, "get_sharing_strategi": 1883, "set_sharing_strategi": 1883, "new_strategi": 1883, "abnorm": [1883, 1904], "fatal": [1883, 1904], "forev": [1883, 1895], "asap": 1883, "queue_2": 1883, "x_clone": 1883, "shm_open": 1883, "destructor": [1883, 1923], "torch_shm_manag": 1883, "unnot": 1883, "spawncontext": 1883, "has_nam": 1884, "is_shar": [1884, 1927], "is_sparse_csr": [1884, 1911, 1927], "is_tensor": [1884, 1925], "items": [1884, 1911], "unifies_names_from_input_tensor": 1884, "nbyte": [1884, 1911, 1927], "ndimens": 1884, "position": [1884, 1885], "unnam": [1884, 1885], "misalign": 1884, "inher": 1884, "disappear": 1884, "img": [1885, 1930], "renamed_img": 1885, "coexist": 1885, "scale_channel": 1885, "more_img": 1885, "named_tensor": 1885, "named_img": 1885, "flat_img": 1885, "named_flat_img": 1885, "unflattened_img": 1885, "unflattened_named_img": 1885, "grad_loss": 1885, "8107": 1885, "6357": 1885, "0783": 1885, "untest": 1885, "rename_map": 1885, "greedili": 1885, "unment": 1885, "49152": 1885, "datastructur": 1886, "seamless": 1886, "nested_tensor": 1886, "nt": 1886, "vein": 1886, "as_nested_tensor": 1886, "irregular": 1886, "indistinguish": 1886, "2286": 1886, "4842": 1886, "7827": 1886, "6745": [1886, 1926], "0658": 1886, "1247": 1886, "4078": 1886, "8083": 1886, "2871": 1886, "5559": 1886, "9885": 1886, "4074": 1886, "4855": 1886, "0733": 1886, "8285": 1886, "6858": 1886, "7030": 1886, "3481": 1886, "0236": 1886, "fake_grad": 1886, "6862": 1886, "1282": 1886, "1031": 1886, "0464": 1886, "3276": 1886, "9967": 1886, "0054": 1886, "8972": 1886, "9174": 1886, "4995": 1886, "8546": 1886, "7194": 1886, "2918": 1886, "1846": 1886, "8793": 1886, "5183": 1886, "6447": 1886, "8009": 1886, "8468": 1886, "9832": 1886, "5272": 1886, "pt_infer": 1886, "pt_larg": 1886, "pt_small": 1886, "bitwidth": [1887, 1902, 1916, 1925], "asymmetr": [1887, 1916, 1919], "sacrific": [1889, 1894], "dirac": 1889, "glorot": 1889, "bengio": 1889, "fan": 1889, "_in": 1889, "fan_in": 1889, "delv": 1889, "surpass": 1889, "he": 1889, "_mode": 1889, "fan_out": 1889, "redrawn": 1889, "sax": 1889, "2013": 1889, "marten": 1889, "walkthrough": 1890, "clip_grad_value_": 1890, "optimizer2": 1890, "batch_per_it": 1890, "iters_to_accumul": 1890, "num_proc": 1890, "grad_param": 1890, "grad_norm": 1890, "scaled_grad_param": 1890, "inv_scal": 1890, "optimizer0": 1890, "optimizer1": 1890, "output0": 1890, "model0": 1890, "model1": 1890, "loss0": 1890, "loss1": 1890, "imped": 1890, "poor": [1890, 1891], "dp_model": 1890, "imported_funct": 1890, "mymm": 1890, "myfloat32func": 1890, "fwd_output": 1890, "cleaner": 1891, "mapsto": 1891, "educ": 1891, "_save": 1891, "_saved_self": 1891, "convex": 1891, "concav": 1891, "togglabl": 1891, "drawback": 1891, "0011": 1891, "dirti": 1891, "hogwild": 1891, "train_fn": 1891, "graphtask": 1891, "copyslic": 1891, "mutex": 1891, "gotten": 1891, "curiou": 1891, "\u2102": 1891, "yj": 1891, "holomorph": 1891, "theori": 1891, "homomorph": 1891, "mathematician": 1891, "im": 1891, "studi": [1891, 1915], "beauti": 1891, "somewhat": [1891, 1894, 1925], "counterintuit": 1891, "0906": 1891, "4835": 1891, "audio": [1891, 1930], "\u211d": 1891, "_output": 1891, "vj": 1891, "selfdeletingtempfil": 1891, "tmp_dir": 1891, "uuid": 1891, "uuid4": 1891, "temp_fil": 1891, "forbidden": 1891, "savedtensor": 1891, "_raw_saved_": 1891, "_raw_saved_self": 1891, "save_on_disk_threshold": 1891, "tensor_or_sctf": 1891, "_saved_oth": 1891, "4th": 1892, "backcompat": 1892, "broadcast_warn": 1892, "userwarn": 1892, "compute_z": 1893, "w_z": 1893, "w_y": 1893, "tbb": 1893, "aten_thread": 1893, "omp": 1893, "mkl_thread": 1893, "bla": 1893, "mkldnn_cpu_runtim": 1893, "use_mkldnn": 1893, "use_tbb": 1893, "use_openmp": 1893, "ON": [1893, 1900, 1901], "set_num_interop_thread": 1893, "get_num_interop_thread": 1893, "set_num_thread": [1893, 1904], "get_num_thread": 1893, "omp_num_thread": 1893, "mkl_num_thread": 1893, "1024": [1893, 1894], "e5": 1893, "oversubscript": 1893, "irrespect": 1894, "spread": 1894, "cuda2": [1894, 1900], "a_ful": 1894, "10240": 1894, "b_full": 1894, "ab_ful": 1894, "7277": 1894, "ab_tf32": 1894, "016": 1894, "ga100": 1894, "1747": 1894, "relative_error": 1894, "0022": 1894, "ab_fp32": 1894, "0031": 1894, "000039": 1894, "7x": 1894, "globalcontext": 1894, "setallowtf32cubla": 1894, "setallowtf32cudnn": 1894, "bench_gemm_transform": 1894, "allow_fp16_reduc": 1894, "4048": 1894, "1634": 1894, "1639": 1894, "4056": 1894, "1670": 1894, "1661": 1894, "4080": 1894, "1664": 1894, "1658": 1894, "1651": 1894, "4104": 1894, "1677": 1894, "1674": 1894, "4128": 1894, "1796": [1894, 1902], "2519": 1894, "5096": 1894, "2144": 1894, "2149": 1894, "2766": 1894, "5120": 1894, "2142": 1894, "9728": 1894, "3875": 1894, "5779": 1894, "6182": 1894, "9656": 1894, "setallowfp16reductioncubla": 1894, "instabl": 1894, "setallowbf16reductioncubla": 1894, "start_ev": 1894, "elapsed_time_m": 1894, "exploit": 1894, "paragraph": [1894, 1899], "initial_grad": 1894, "memory_alloc": [1894, 1900], "memory_snapshot": [1894, 1900], "memcheck": 1894, "pytorch_no_cuda_memory_cach": [1894, 1900], "option2": 1894, "value2": 1894, "max_split_size_mb": 1894, "borderlin": 1894, "memory_summari": 1894, "resort": [1894, 1899, 1913], "roundup_power2_divis": 1894, "cudacachingalloc": 1894, "1280": 1894, "1536": 1894, "1792": 1894, "256mb": 1894, "512mb": 1894, "roundup_bypass_threshold_mb": 1894, "garbage_collection_threshold": 1894, "release_cached_block": 1894, "unfavor": 1894, "cuda_runtime_api": 1894, "iostream": 1894, "fpic": 1894, "my_malloc": 1894, "cout": 1894, "endl": [1894, 1901], "my_fre": 1894, "cudafre": 1894, "cudapluggablealloc": 1894, "new_alloc": 1894, "_cuda_clearcublasworkspac": 1894, "kib": 1894, "lru": 1894, "geometri": 1894, "1023": 1894, "use_pytorch_kernel_cach": 1894, "pytorch_kernel_cache_path": 1894, "store_tru": 1894, "disable_cuda": 1894, "assess": 1894, "cudagetdevicecount": 1894, "cuinit": 1894, "pytorch_nvml_based_cuda_check": 1894, "nvml": 1894, "nvmldevicegetcount_v2": 1894, "poison": 1894, "aforement": [1894, 1904], "train_load": [1894, 1904], "x_cpu": 1894, "x_gpu": 1894, "x_cpu_long": 1894, "y_cpu": 1894, "y_gpu": 1894, "y_cpu_long": 1894, "new_tensor": 1894, "overus": 1894, "cudagraphlaunch": 1894, "elid": 1894, "versatil": 1894, "static_input": 1894, "static_output": 1894, "realist": 1894, "sophist": [1894, 1912], "violat": [1894, 1897], "prohibit": [1894, 1907], "virtual": 1894, "d_in": 1894, "d_out": 1894, "640": 1894, "static_target": 1894, "static_y_pr": 1894, "static_loss": 1894, "real_target": 1894, "refil": 1894, "dag": 1894, "rejoin": 1894, "cuda_work": 1894, "nsight": 1894, "reorgan": 1894, "graphabl": 1894, "econom": 1894, "static_out_1": 1894, "g1_workload": 1894, "static_in_1": 1894, "static_out_2": 1894, "g2_workload": 1894, "static_in_2": 1894, "real_data_1": 1894, "real_data_2": 1894, "29500": [1895, 1914, 1921, 1922], "prerequisit": 1895, "grad0": 1895, "grad1": 1895, "bucket1": 1895, "bucket0": 1895, "hurt": 1895, "earliest": 1895, "unreadi": 1895, "absent": 1895, "hpp": 1895, "processgroupgloo": 1895, "processgroupmpi": 1895, "_sync_param": 1895, "autograd_hook": 1895, "prepare_for_backward": 1895, "_after_": 1895, "optimize_ddp": 1895, "mark_dirti": 1896, "mark_non_differenti": [1896, 1897], "set_materialize_grad": 1896, "linearfunct": 1896, "grad_bia": 1896, "mulconst": 1896, "mycub": [1896, 1897], "grad_dx": [1896, 1897], "my_cub": [1896, 1897], "input_featur": 1896, "output_featur": 1896, "duck": [1896, 1913], "__array_function__": 1896, "nep": 1896, "0018": 1896, "scalartensor": 1896, "handled_funct": 1896, "mandat": 1896, "update_wrapp": 1896, "ensure_tensor": 1896, "metadatatensor": 1896, "__add__": 1896, "subtensor2": 1896, "othersubtensor": 1896, "loggingtensor": 1896, "permiss": 1896, "_metadata": 1896, "ndata": 1896, "ret": [1896, 1921], "ministri": 1896, "silli": 1896, "superclass": 1896, "troublesom": 1896, "_get_overridable_funct": 1896, "overriden": 1896, "get_overridable_funct": [1896, 1936], "func_dict": 1896, "nn_func": 1896, "labori": 1896, "_get_testing_overrid": 1896, "get_testing_overrid": [1896, 1936], "override_dict": 1896, "dummy_add": 1896, "get_ignored_funct": [1896, 1936], "2020": 1896, "outdat": 1896, "dispatchkei": 1896, "zerotensor": 1896, "compositeimplicitautograd": 1896, "func_nam": 1896, "exot": 1896, "zoo": 1896, "intro": 1896, "custom_vjp": 1897, "custom_jvp": 1897, "to_numpi": 1897, "numpysort": 1897, "ind_inv": 1897, "_1": [1897, 1913], "numpytak": 1897, "numpy_sort": 1897, "saniti": 1897, "ggx": 1897, "vmappabl": 1897, "x_bdim": 1897, "ind_bdim": 1897, "ind_inv_bdim": 1897, "expanded_x": 1897, "expanded_ind": 1897, "expanded_ind_inv": 1897, "new_dim": 1897, "logical_dim": 1897, "maybe_expand_bdim_at_front": 1897, "pseudocod": 1897, "rapidli": [1898, 1904], "abridg": 1898, "total_loss": 1898, "extrud": 1898, "phenomenon": 1898, "plenti": 1898, "bptt": 1898, "repackag": 1898, "nm": 1898, "blow": 1898, "elf": 1898, "grep": 1898, "run_model": 1898, "recoveri": 1898, "data_parallel": 1898, "pad_packed_sequ": 1898, "padded_input": 1898, "packed_input": 1898, "packed_output": 1898, "my_lstm": 1898, "dp_m": 1898, "padding_input": 1898, "ur": 1899, "rewritten": 1899, "j_f": 1899, "calculu": 1899, "cw": 1899, "bigger": 1899, "articl": 1899, "58eb23378f2a376565a66ac32c93a316c45b6131": 1899, "l99": 1899, "l105": 1899, "ds_dx": 1899, "compute_gradi": 1899, "ds_dy": 1899, "conj_w_d": 1899, "w_d": 1899, "d_idx": 1899, "albeit": 1899, "wonder": 1899, "amd": 1900, "dialect": 1900, "portabl": 1900, "rocmdoc": 1900, "programming_guid": 1900, "hip_api_guid": 1900, "cuda_vers": 1900, "cudaruntimegetvers": 1900, "cudadrivergetvers": 1900, "hip_vers": 1900, "hipruntimegetvers": 1900, "hipdrivergetvers": 1900, "11000": 1900, "use_rocm": 1900, "rocm_vers": 1900, "40300": 1900, "cmake": [1900, 1908], "drocm_force_enable_gpu_assert": 1900, "addglobalcallback": 1901, "recordfunct": 1901, "ivalu": 1901, "threadlocaldebuginfo": 1901, "debuginfoguard": 1901, "recordfunctioncallback": 1901, "onfunctionent": 1901, "onfunctionexit": 1901, "needsinput": 1901, "samplingprob": 1901, "enablerecordfunct": 1901, "cerr": 1901, "broader": [1901, 1933], "inject": 1901, "setapiusagehandl": 1901, "setapiusagelogg": 1901, "event_nam": 1901, "c10_log_api_usage_onc": 1901, "my_api": 1901, "_log_api_usage_onc": 1901, "archiv": 1901, "bundl": 1901, "akin": 1901, "jpeg": 1901, "camera": [1901, 1930], "setexportmoduleextrafileshook": 1901, "extrafilesmap": 1901, "producer_info": 1901, "getenv": 1901, "getsourc": 1901, "precompil": 1901, "pyc": 1901, "loos": 1901, "elabor": 1902, "tpu": 1902, "mylinear": 1902, "sample_input": 1902, "0413": 1902, "2057": 1902, "0597": 1902, "8247": 1902, "1045": 1902, "4299": 1902, "5457": 1902, "4793": 1902, "3634": 1902, "8525": 1902, "6749": 1902, "l0": [1902, 1907], "bignet": 1902, "big_net": 1902, "dynamicnet": 1902, "dynamic_net": 1902, "2051": 1902, "7601": 1902, "1963": 1902, "4354": 1902, "6598": 1902, "4446": 1902, "4628": 1902, "8774": 1902, "6848": 1902, "5458": 1902, "4647": 1902, "5310": 1902, "0609": 1902, "0940": 1902, "1266": 1902, "0623": 1902, "3508": 1902, "0550": 1902, "5317": 1902, "5562": 1902, "4028": 1902, "6942": 1902, "0140": 1902, "0329": 1902, "1160": 1902, "0434": 1902, "3889": 1902, "1613": 1902, "6340": 1902, "3887": 1902, "9979": 1902, "0767": 1902, "3526": 1902, "8756": 1902, "5847": 1902, "6016": 1902, "1608": 1902, "0829": 1902, "6338": 1902, "9239": 1902, "6943": 1902, "5034": 1902, "0268": 1902, "4489": 1902, "9403": 1902, "2509": 1902, "5052": 1902, "3088": 1902, "4951": 1902, "3381": 1902, "5166": 1902, "boilerpl": [1902, 1913], "beginn": 1902, "examples_nn": 1902, "polynomial_modul": 1902, "teach": 1902, "0013": [1902, 1926], "0030": 1902, "0008": 1902, "modalmodul": 1902, "6614": 1902, "2669": 1902, "0617": 1902, "4519": 1902, "two_layer_net_optim": 1902, "blitz": 1902, "neural_networks_tutori": 1902, "autograd_tutori": 1902, "new_net": 1902, "runningmean": 1902, "1041": 1902, "0647": 1902, "1515": 1902, "m_load": 1902, "unserialized_th": 1902, "statefulmodul": 1902, "param3": 1902, "param_list": 1902, "parameterlist": 1902, "param_dict": 1902, "parameterdict": 1902, "buffer1": 1902, "buffer2": 1902, "buffer3": 1902, "0322": 1902, "9066": 1902, "1409": 1902, "4852": 1902, "6949": 1902, "2911": 1902, "1044": 1902, "4202": 1902, "1953": 1902, "5299": 1902, "8747": 1902, "6289": 1902, "4898": 1902, "6434": 1902, "5187": 1902, "0346": 1902, "4077": 1902, "4324": 1902, "7022": 1902, "3915": 1902, "6176": 1902, "6062": 1902, "5992": 1902, "4452": 1902, "2843": 1902, "3710": 1902, "3947": 1902, "saving_loading_model": 1902, "what_is_state_dict": 1902, "skip_init": 1902, "skip_param_init": 1902, "new_grad_input": 1902, "5059": 1902, "8158": 1902, "2390": 1902, "0043": 1902, "addmmbackward": 1902, "forward_pre_hook_handl": 1902, "5752": 1902, "7421": 1902, "forward_hook_handl": 1902, "0980": 1902, "4666": 1902, "0256": 1902, "4497": 1902, "5046": 1902, "combat": 1902, "mps_devic": 1903, "yourfavoritenet": 1903, "a3c": 1904, "set_start_method": 1904, "simplequeu": 1904, "cope": 1904, "eleg": 1904, "num_process": 1904, "inappropri": 1904, "vcpu": 1904, "htop": 1904, "exceed": 1904, "competit": 1904, "oversubscrib": 1904, "mnist_hogwild": 1904, "dataloader_kwarg": 1904, "train_epoch": 1904, "30x": 1904, "boost": 1904, "754": 1905, "1e20": 1905, "4142e": 1905, "struggl": 1905, "benign": 1905, "v_dot2": 1905, "mfma": 1905, "fp64": 1905, "rocbla": 1905, "miopen": 1905, "rocblas_internal_fp16_alt_impl": 1905, "miopen_debug_convolution_attrib_fp16_alt_impl": 1905, "_convbackend": 1905, "slownd": 1905, "slownd_transpos": 1905, "slownd_dil": 1905, "slownd_dilated_transpos": 1905, "convbackend": 1905, "miopendepthwis": 1905, "miopentranspos": 1905, "svd_lowrank": [1906, 1925], "22modul": 1906, "20determin": 1906, "index_add_cuda_": 1906, "1509": 1906, "8027": 1906, "0333": 1906, "1444": 1906, "rese": 1906, "seed_work": 1906, "worker_se": 1906, "train_dataset": 1906, "tensor_dict": 1907, "loaded_numb": 1907, "loaded_even": 1907, "scene": [1907, 1930], "loaded_smal": 1907, "num_batches_track": 1907, "bn_state_dict": 1907, "new_bn": 1907, "out0_relu": 1907, "1400": 1907, "4563": 1907, "0271": 1907, "4406": 1907, "2827": 1907, "4588": 1907, "2031": 1907, "0300": 1907, "1316": 1907, "6533": 1907, "3413": 1907, "1112": 1907, "m_state_dict": 1907, "new_m": 1907, "original_nam": 1907, "controlflowmodul": 1907, "controlflowmodule_trac": 1907, "3793": 1907, "controlflowmodule_script": 1907, "tagger": 1907, "ipu_tag": 1907, "ipu_deseri": 1907, "startswith": [1907, 1911], "rem": 1908, "7z": 1908, "curl": 1908, "ossci": 1908, "mkl_2020": 1908, "aoa": 1908, "omkl": 1908, "cuda_prefix": 1908, "cuda102": 1908, "magma_2": 1908, "4_": 1908, "omagma": 1908, "cmake_include_path": 1908, "magma_hom": 1908, "studio": 1908, "pip": [1908, 1909, 1930], "cmake_gener": 1908, "ffi": 1908, "create_extens": 1908, "_ext": 1908, "define_macro": 1908, "relative_to": 1908, "c99": 1908, "x86_x64": 1908, "packagesnotfounderror": 1908, "anaconda": 1908, "noarch": 1908, "continuum": 1908, "pkg": 1908, "pro": [1908, 1930], "msys2": 1908, "importerror": [1908, 1913], "dll": 1908, "vc2017": 1908, "redistribut": 1908, "vc": 1908, "vs2017_runtim": 1908, "mkl_fft": 1908, "intel_openmp": 1908, "vs2017": 1908, "openbla": 1908, "forg": 1908, "bootstrap": 1908, "forgotten": 1908, "idiom": 1908, "freeze_support": 1908, "forkingpickl": 1908, "brokenpipeerror": 1908, "errno": 1908, "couldn": [1908, 1909], "torch_14808_1591070686": 1908, "thalloc": 1908, "tdr": 1908, "thcudacheck": 1908, "storageshar": 1908, "dummy_input": 1909, "input_nam": 1909, "actual_input_1": 1909, "learned_": 1909, "output_nam": 1909, "learned_0": 1909, "learned_1": 1909, "learned_2": 1909, "learned_3": 1909, "learned_14": 1909, "learned_15": 1909, "kernel_shap": 1909, "9216": 1909, "transb": 1909, "check_model": 1909, "printable_graph": 1909, "onnxruntim": 1909, "ort": 1909, "ort_sess": 1909, "inferencesess": 1909, "astyp": 1909, "seq_length": 1909, "real_seq_length": 1909, "experienc": 1909, "new_data": 1909, "symbolic_opset": 1909, "symbolic_opset9": 1909, "_variablefunct": 1909, "pyi": 1909, "___torch_mangle_0": 1909, "alpha_f": 1909, "myrelu": 1909, "value_t": 1909, "pythonop": [1909, 1911], "mylogexp": 1909, "operator_export_typ": 1909, "onnx_fallthrough": 1909, "onnx_aten_fallback": 1909, "onnxscript": 1909, "onnx_opset": 1909, "opset15": 1909, "custom_opset": 1909, "67326": 1909, "alphax": 1909, "castlik": 1909, "gammax": 1909, "settyp": 1909, "custom_selu": 1909, "jit_util": 1909, "graphcontext": 1909, "onnxscript_op": 1909, "register_custom_op_symbol": 1909, "symbolic_nam": 1909, "symbolic_fn": 1909, "symbolic_help": 1909, "symbolic_foo_forward": 1909, "custom_domain": 1909, "attr1_f": 1909, "attr2_i": 1909, "foo_forward": 1909, "foomodel": 1909, "example_input1": 1909, "caffe2": [1909, 1930], "torch_script_graph": 1909, "unconvertible_op": 1909, "dynamic_ax": 1909, "export_param": 1909, "trainingmod": 1909, "operatorexporttyp": 1909, "do_constant_fold": 1909, "keep_initializers_as_input": 1909, "export_modules_as_funct": 1909, "OF": 1909, "WITH": 1909, "input_i": 1909, "input_z": 1909, "fileno": 1909, "untrain": 1909, "doc_str": 1909, "onnx_aten": 1909, "build_caffe2": 1909, "summodul": 1909, "dim_valu": 1909, "my_custom_axis_nam": 1909, "dim_param": 1909, "sum_dynamic_axes_1": 1909, "predefin": 1909, "checkererror": 1909, "unsupportedoperatorerror": 1909, "export_to_pretty_str": 1909, "export_typ": 1909, "google_print": 1909, "add_node_nam": 1909, "nodeproto": 1909, "debugstr": 1909, "contrib": 1909, "test_aten_embedding_2": 1909, "test_oper": 1909, "unregister_custom_op_symbol": 1909, "select_model_mode_for_export": 1909, "is_in_onnx_export": 1909, "middl": 1909, "enable_log": 1909, "disable_log": 1909, "graphinfo": 1909, "incorrect_relu_symbolic_funct": 1909, "2328854203224182": 1909, "699536174352349": 1909, "rapid": 1909, "exportopt": 1909, "my_nn_modul": 1909, "my_nn_module_attribut": 1909, "underdevelop": 1910, "parsabl": 1910, "sarif": 1910, "diagsys0001": 1910, "fxe0001": 1910, "fxe0002": 1910, "fxe0003": 1910, "fxe0004": 1910, "fxe0005": 1910, "fxe0006": 1910, "atenlib": 1910, "fxe0007": 1910, "fxe0008": 1910, "fxe0009": 1910, "fxe0010": 1910, "fxe0011": 1910, "fxe0012": 1910, "fxe0013": 1910, "poe0001": 1910, "poe0002": 1910, "poe0003": 1910, "poe0004": 1910, "_intern": [1910, 1927], "exportdiagnost": 1910, "frames_to_skip": 1910, "cpp_stack": 1910, "record_cpp_call_stack": 1910, "constantchunk": 1911, "__and_": 1911, "__contains_": 1911, "__derive_index": 1911, "__getitem_": 1911, "__interpol": 1911, "__is_": 1911, "__isnot_": 1911, "__lshift_": 1911, "__not_": 1911, "__or_": 1911, "__range_length": 1911, "__rshift_": 1911, "__xor_": 1911, "_cast_byt": 1911, "_cast_char": 1911, "_cast_doubl": 1911, "_cast_float": 1911, "_cast_half": 1911, "_cast_int": 1911, "_cast_long": 1911, "_cast_short": 1911, "_conj": 1911, "_convolution_mod": 1911, "_dim_arang": 1911, "_pack_padded_sequ": 1911, "_pad_packed_sequ": 1911, "_reshape_from_tensor": 1911, "_sample_dirichlet": 1911, "_set_item": 1911, "_shape_as_tensor": 1911, "_standard_gamma": 1911, "_uniqu": 1911, "_unique2": 1911, "_weight_norm": 1911, "conv1d_relu": 1911, "conv2d_relu": 1911, "conv3d_relu": 1911, "embedding_renorm": 1911, "floordiv": [1911, 1918], "nonzero_numpi": 1911, "numpy_t": 1911, "unchecked_cast": 1911, "unique_dim": 1911, "_quantiz": 1911, "conv2d_prepack": 1911, "conv3d_prepack": 1911, "conv_transpose1d_prepack": 1911, "conv_transpose2d_prepack": 1911, "conv_transpose3d_prepack": 1911, "linear_dynam": 1911, "linear_prepack": 1911, "linear_prepack_fp16": 1911, "linear_prepack_fp16_legaci": 1911, "linear_prepack_legaci": 1911, "_test": 1911, "get_first": 1911, "compleximplicit": 1911, "floatimplicit": 1911, "intimplicit": 1911, "__iand_": 1911, "__ilshift_": 1911, "__ior_": 1911, "__irshift_": 1911, "__ixor_": 1911, "__round_to_zero_floordiv": 1911, "__upsampl": 1911, "__upsample_bilinear": 1911, "__upsample_nearest": 1911, "_adaptive_avg_pool3d": 1911, "_add_batch_dim": 1911, "_add_relu": 1911, "_addmm_activ": 1911, "_aminmax": 1911, "_amp_foreach_non_finite_check_and_unscal": 1911, "_amp_update_scal": 1911, "_assert_async": 1911, "_assert_tensor_metadata": 1911, "_autocast_to_full_precis": 1911, "_autocast_to_reduced_precis": 1911, "_batch_norm_impl_index": 1911, "_cdist_forward": 1911, "_cholesky_solve_help": 1911, "_choose_qparams_per_tensor": 1911, "_chunk_grad_outputs_efficient_attent": 1911, "_coalesc": 1911, "_compute_linear_combin": 1911, "_conj_copi": 1911, "_conj_phys": 1911, "_conv_depthwise2d": 1911, "_convert_indices_from_coo_to_csr": 1911, "_convert_indices_from_csr_to_coo": 1911, "_copy_from": 1911, "_copy_from_and_res": 1911, "_ctc_loss": 1911, "_cudnn_ctc_loss": 1911, "_cudnn_init_dropout_st": 1911, "_cudnn_rnn": 1911, "_cudnn_rnn_flatten_weight": 1911, "_cufft_clear_plan_cach": 1911, "_cufft_get_plan_cache_max_s": 1911, "_cufft_get_plan_cache_s": 1911, "_cufft_set_plan_cache_max_s": 1911, "_cummax_help": 1911, "_cummin_help": 1911, "_debug_has_internal_overlap": 1911, "_dimi": 1911, "_dimv": 1911, "_dirichlet_grad": 1911, "_efficient_attention_forward": 1911, "_efficientzerotensor": 1911, "_embedding_bag": 1911, "_embedding_bag_forward_onli": 1911, "_empty_affine_quant": 1911, "_empty_per_channel_affine_quant": 1911, "_euclidean_dist": 1911, "_fake_quantize_learnable_per_channel_affin": 1911, "_fake_quantize_learnable_per_tensor_affin": 1911, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1911, "_fft_c2c": 1911, "_fft_c2r": 1911, "_fft_r2c": 1911, "_fill_mem_eff_dropout_mask": 1911, "_flash_attention_forward": 1911, "_foreach_ab": 1911, "_foreach_aco": 1911, "_foreach_add": 1911, "_foreach_addcdiv": 1911, "_foreach_addcmul": 1911, "_foreach_asin": 1911, "_foreach_atan": 1911, "_foreach_ceil": 1911, "_foreach_clamp_max": 1911, "_foreach_clamp_min": 1911, "_foreach_co": 1911, "_foreach_cosh": 1911, "_foreach_div": 1911, "_foreach_erf": 1911, "_foreach_erfc": 1911, "_foreach_exp": 1911, "_foreach_expm1": 1911, "_foreach_floor": 1911, "_foreach_frac": 1911, "_foreach_lerp": 1911, "_foreach_lgamma": 1911, "_foreach_log": 1911, "_foreach_log10": 1911, "_foreach_log1p": 1911, "_foreach_log2": 1911, "_foreach_maximum": 1911, "_foreach_minimum": 1911, "_foreach_mul": 1911, "_foreach_neg": 1911, "_foreach_norm": 1911, "_foreach_pow": 1911, "_foreach_reciproc": 1911, "_foreach_round": 1911, "_foreach_sigmoid": 1911, "_foreach_sin": 1911, "_foreach_sinh": 1911, "_foreach_sqrt": 1911, "_foreach_sub": 1911, "_foreach_tan": 1911, "_foreach_tanh": 1911, "_foreach_trunc": 1911, "_foreach_zero": 1911, "_functional_assert_async": 1911, "_functional_sym_constrain_rang": 1911, "_fused_adam": 1911, "_fused_adamw": 1911, "_fused_dropout": 1911, "_fused_moving_avg_obs_fq_help": 1911, "_fused_moving_avg_obs_fq_helper_funct": 1911, "_fused_sdp_choic": 1911, "_fw_primal": 1911, "_fw_primal_copi": 1911, "_get_cpu_cap": 1911, "_get_tracing_st": 1911, "_grad_sum_to_s": 1911, "_has_compatible_shallow_copy_typ": 1911, "_has_same_storage_numel": 1911, "_histogramdd_bin_edg": 1911, "_histogramdd_from_bin_ct": 1911, "_histogramdd_from_bin_tensor": 1911, "_index_put_impl": 1911, "_indices_copi": 1911, "_infer_s": 1911, "_int_mm": 1911, "_is_all_tru": 1911, "_is_any_tru": 1911, "_is_zerotensor": 1911, "_linalg_check_error": 1911, "_linalg_det": 1911, "_linalg_eigh": 1911, "_linalg_slogdet": 1911, "_linalg_solve_ex": 1911, "_linalg_svd": 1911, "_list_to_tensor": 1911, "_local_scalar_dens": 1911, "_logcumsumexp": 1911, "_lstm_mp": 1911, "_make_dep_token": 1911, "_make_du": 1911, "_make_dual_copi": 1911, "_make_per_channel_quantized_tensor": 1911, "_make_per_tensor_quantized_tensor": 1911, "_masked_scal": 1911, "_masked_softmax": 1911, "_mkldnn_reshap": 1911, "_mkldnn_transpos": 1911, "_mps_convolut": 1911, "_mps_convolution_transpos": 1911, "_native_batch_norm_legit_funct": 1911, "_native_batch_norm_legit_no_train": 1911, "_native_multi_head_attent": 1911, "_ncf_unsqueez": 1911, "_ncf_view": 1911, "_neg_view": 1911, "_neg_view_copi": 1911, "_nested_from_pad": 1911, "_nested_from_padded_and_nested_exampl": 1911, "_nested_tensor_from_mask": 1911, "_nested_tensor_from_mask_left_align": 1911, "_nested_tensor_from_tensor_list": 1911, "_nested_tensor_s": 1911, "_nested_tensor_softmax_with_shap": 1911, "_nested_tensor_storage_offset": 1911, "_nested_tensor_strid": 1911, "_nested_view_from_buff": 1911, "_nested_view_from_buffer_copi": 1911, "_new_zeros_with_same_feature_meta": 1911, "_nnpack_avail": 1911, "_nnpack_spatial_convolut": 1911, "_no_grad_embedding_renorm": 1911, "_no_grad_fil": 1911, "_no_grad_norm": 1911, "_no_grad_uniform": 1911, "_no_grad_zero": 1911, "_pack_sequ": 1911, "_pad_circular": 1911, "_pad_enum": 1911, "_pdist_forward": 1911, "_pin_memori": 1911, "_prelu_kernel": 1911, "_propagate_xla_data": 1911, "_remove_batch_dim": 1911, "_reshape_alia": 1911, "_reshape_alias_copi": 1911, "_reshape_copi": 1911, "_resize_output": 1911, "_rowwise_prun": 1911, "_saturate_weight_to_fp16": 1911, "_scaled_dot_product_attent": 1911, "_scaled_dot_product_attention_math": 1911, "_scaled_dot_product_efficient_attent": 1911, "_scaled_dot_product_flash_attent": 1911, "_size_if_not_equ": 1911, "_slow_conv2d_forward": 1911, "_sobol_engine_draw": 1911, "_sobol_engine_ff": 1911, "_sobol_engine_initialize_st": 1911, "_sobol_engine_scrambl": 1911, "_sparse_addmm": 1911, "_sparse_broadcast_to": 1911, "_sparse_broadcast_to_copi": 1911, "_sparse_bsc_tensor_unsaf": 1911, "_sparse_bsr_tensor_unsaf": 1911, "_sparse_compressed_tensor_unsaf": 1911, "_sparse_coo_tensor_unsaf": 1911, "_sparse_coo_tensor_with_dim": 1911, "_sparse_coo_tensor_with_dims_and_tensor": 1911, "_sparse_csc_tensor_unsaf": 1911, "_sparse_csr_prod": 1911, "_sparse_csr_sum": 1911, "_sparse_csr_tensor_unsaf": 1911, "_sparse_log_softmax": 1911, "_sparse_mask_project": 1911, "_sparse_mm": 1911, "_sparse_mm_reduce_impl": 1911, "_sparse_softmax": 1911, "_sparse_sparse_matmul": 1911, "_sparse_sum": 1911, "_spdiag": 1911, "_standard_gamma_grad": 1911, "_structured_sparse_linear": [1911, 1925], "_tensor_to_list": 1911, "_test_ambiguous_default": 1911, "_test_autograd_multiple_dispatch": 1911, "_test_autograd_multiple_dispatch_view": 1911, "_test_autograd_multiple_dispatch_view_copi": 1911, "_test_check_tensor": 1911, "_test_functorch_fallback": 1911, "_test_optional_filled_intlist": 1911, "_test_optional_floatlist": 1911, "_test_optional_intlist": 1911, "_test_serialization_subcmul": 1911, "_test_string_default": 1911, "_test_warn_in_autograd": 1911, "_thnn_fused_gru_cel": 1911, "_thnn_fused_lstm_cel": 1911, "_to_cpu": 1911, "_to_dens": 1911, "_to_spars": 1911, "_to_sparse_bsc": 1911, "_to_sparse_bsr": 1911, "_to_sparse_csc": 1911, "_to_sparse_csr": 1911, "_transform_bias_rescale_qkv": 1911, "_transformer_encoder_layer_fwd": 1911, "_trilinear": 1911, "_triton_multi_head_attent": 1911, "_triton_scaled_dot_attent": 1911, "_unpack_du": 1911, "_unsafe_index": 1911, "_unsafe_index_put": 1911, "_unsafe_view": 1911, "_unwrap_opt": 1911, "_upsample_bicubic2d_aa": 1911, "_upsample_bilinear2d_aa": 1911, "_upsample_nearest_exact1d": 1911, "_upsample_nearest_exact2d": 1911, "_upsample_nearest_exact3d": 1911, "_use_cudnn_ctc_loss": 1911, "_use_cudnn_rnn_flatten_weight": 1911, "_validate_compressed_sparse_indic": 1911, "_validate_sparse_bsc_tensor_arg": 1911, "_validate_sparse_bsr_tensor_arg": 1911, "_validate_sparse_compressed_tensor_arg": 1911, "_validate_sparse_coo_tensor_arg": 1911, "_validate_sparse_csc_tensor_arg": 1911, "_validate_sparse_csr_tensor_arg": 1911, "_values_copi": 1911, "_weight_norm_interfac": 1911, "capit": 1911, "confirmed_by_own": [1911, 1921], "convolution_overrid": 1911, "copy_sparse_to_spars": 1911, "endswith": 1911, "expandtab": 1911, "fake_quantize_per_channel_affine_cachemask": 1911, "fake_quantize_per_tensor_affine_cachemask": 1911, "fill_diagon": 1911, "glu_jvp": 1911, "has_torch_funct": [1911, 1936], "is_non_overlapping_and_dens": 1911, "is_own": 1911, "is_strides_like_format": 1911, "isalnum": 1911, "isalpha": 1911, "isdecim": 1911, "isdigit": 1911, "isidentifi": 1911, "islow": 1911, "isnumer": 1911, "isprint": 1911, "isspac": 1911, "istitl": 1911, "isupp": 1911, "lift_fresh": 1911, "lift_fresh_copi": 1911, "ljust": 1911, "local_valu": [1911, 1914], "log_sigmoid_forward": 1911, "lstrip": 1911, "matrix_h": 1911, "nll_loss2d_forward": 1911, "nll_loss_forward": 1911, "normal_funct": 1911, "owner_nam": 1911, "percentformat": 1911, "quantized_gru": 1911, "quantized_lstm": 1911, "resize_as_spars": 1911, "rfind": 1911, "rindex": 1911, "rjust": 1911, "rpartit": 1911, "rsplit": 1911, "rstrip": 1911, "set_data": 1911, "slow_conv3d_forward": 1911, "sparse_res": 1911, "sparse_resize_and_clear": 1911, "splitlin": 1911, "swapcas": 1911, "unique_dim_consecut": 1911, "zfill": 1911, "_allgather_bas": 1911, "_reduce_scatter_bas": 1911, "allgath": 1911, "allgather_coalesc": 1911, "allgather_into_tensor_coalesc": 1911, "allreduce_coalesc": 1911, "alltoal": 1911, "alltoall_bas": 1911, "recv_any_sourc": 1911, "reduce_scatter_tensor_coalesc": 1911, "debugprim": 1911, "load_tensor": 1911, "_mkl_linear": 1911, "_mkl_reorder_linear_weight": 1911, "_convolution_pointwis": 1911, "_convolution_transpose_pointwis": 1911, "_is_mkldnn_bf16_support": 1911, "_linear_pointwis": 1911, "_reorder_convolution_transpose_weight": 1911, "_reorder_linear_weight": 1911, "mkldnn_prepack": 1911, "conv2d_run": 1911, "nvprim": 1911, "conv2d_clamp_prepack": 1911, "conv2d_clamp_run": 1911, "conv2d_transpose_clamp_prepack": 1911, "conv2d_transpose_clamp_run": 1911, "linear_clamp_prepack": 1911, "linear_clamp_run": 1911, "unpack_prepacked_sizes_conv2d": 1911, "unpack_prepacked_sizes_linear": 1911, "addstatvalu": 1911, "autogradadd": 1911, "autogradallnonzero": 1911, "autogradallzero": 1911, "autogradanynonzero": 1911, "autogradzero": 1911, "bailouttempl": 1911, "broadcastmkldnntensor": 1911, "broadcasts": 1911, "chunksiz": 1911, "constantmkldnntensor": 1911, "differentiablegraph": 1911, "enumnam": 1911, "enumvalu": 1911, "fallbackgraph": 1911, "fusedconcat": 1911, "fusiongroup": 1911, "ifthenels": 1911, "ignoredpythonop": 1911, "mkldnnclamp": 1911, "mkldnnhardsigmoid": 1911, "mkldnnhardswish": 1911, "mkldnnhardtanh": 1911, "mkldnnlayernorm": 1911, "mkldnnscalarmul": 1911, "mmbatchsid": 1911, "mmtreereduc": 1911, "modulecontainerindex": 1911, "numtotensor": 1911, "raiseexcept": 1911, "reductions": 1911, "requiresgradcheck": 1911, "staticruntimecopyout": 1911, "staticsubgraph": 1911, "stringindex": 1911, "tensorexprdynamicgroup": 1911, "tensorexprdynamicguard": 1911, "tensorexprgroup": 1911, "timepoint": 1911, "tupleindex": 1911, "tupleunpack": 1911, "varconcat": 1911, "varstack": 1911, "awaitable_nowait": 1911, "awaitable_wait": 1911, "is_cpu": 1911, "is_ipu": 1911, "is_mkldnn": 1911, "is_mp": 1911, "is_nest": 1911, "is_ort": 1911, "is_quant": 1911, "is_vulkan": 1911, "is_xla": 1911, "is_xpu": 1911, "onednnfusiongroup": 1911, "onednnfusionguard": 1911, "profile_ivalu": 1911, "rangelist": 1911, "rpc_remot": 1911, "unchecked_unwrap_opt": 1911, "_call_end_callbacks_on_jit_fut": 1911, "_record_function_ent": 1911, "_record_function_enter_new": 1911, "_record_function_exit": 1911, "_bfloat16quantizedtofloat": 1911, "_floattobfloat16quant": 1911, "add_out": 1911, "add_relu_out": 1911, "add_scalar_out": 1911, "add_scalar_relu": 1911, "add_scalar_relu_out": 1911, "batch_norm1d": 1911, "batch_norm1d_relu": 1911, "batch_norm2d": 1911, "batch_norm2d_relu": 1911, "batch_norm3d": 1911, "batch_norm3d_relu": 1911, "batch_norm_relu": 1911, "cat_out": 1911, "cat_relu": 1911, "cat_relu_out": 1911, "conv1d_dynam": 1911, "conv1d_prepack": 1911, "conv1d_unpack": 1911, "conv2d_add": 1911, "conv2d_add_relu": 1911, "conv2d_dil": 1911, "conv2d_dynam": 1911, "conv2d_group": 1911, "conv2d_output_pad": 1911, "conv2d_pad": 1911, "conv2d_strid": 1911, "conv2d_transpos": 1911, "conv2d_unpack": 1911, "conv2d_unpack_s": 1911, "conv3d_dil": 1911, "conv3d_dynam": 1911, "conv3d_group": 1911, "conv3d_output_pad": 1911, "conv3d_pad": 1911, "conv3d_strid": 1911, "conv3d_transpos": 1911, "conv3d_unpack": 1911, "conv_prepack": 1911, "conv_transpose1d_dynam": 1911, "conv_transpose1d_unpack": 1911, "conv_transpose2d_dil": 1911, "conv_transpose2d_dynam": 1911, "conv_transpose2d_group": 1911, "conv_transpose2d_output_pad": 1911, "conv_transpose2d_pad": 1911, "conv_transpose2d_strid": 1911, "conv_transpose2d_transpos": 1911, "conv_transpose2d_unpack": 1911, "conv_transpose3d_dil": 1911, "conv_transpose3d_dynam": 1911, "conv_transpose3d_group": 1911, "conv_transpose3d_output_pad": 1911, "conv_transpose3d_pad": 1911, "conv_transpose3d_strid": 1911, "conv_transpose3d_transpos": 1911, "conv_transpose3d_unpack": 1911, "conv_unpack": 1911, "embedding_4bit": 1911, "embedding_bag_2bit_prepack": 1911, "embedding_bag_2bit_rowwise_offset": 1911, "embedding_bag_2bit_unpack": 1911, "embedding_bag_4bit": 1911, "embedding_bag_4bit_prepack": 1911, "embedding_bag_4bit_rowwise_offset": 1911, "embedding_bag_4bit_unpack": 1911, "embedding_bag_byt": 1911, "embedding_bag_byte_prepack": 1911, "embedding_bag_byte_rowwise_offset": 1911, "embedding_bag_byte_unpack": 1911, "embedding_bag_prepack": 1911, "embedding_bag_unpack": 1911, "embedding_byt": 1911, "linear_dynamic_fp16": 1911, "linear_leaky_relu": 1911, "linear_relu": [1911, 1918], "linear_relu_dynam": 1911, "linear_relu_dynamic_fp16": 1911, "linear_tanh": 1911, "linear_unpack": 1911, "linear_unpack_fp16": 1911, "linear_with_input_q_dq_qweight_dq_output_fp32": 1911, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1911, "make_quantized_cell_param": 1911, "make_quantized_cell_params_dynam": 1911, "make_quantized_cell_params_fp16": 1911, "mul_out": 1911, "mul_relu": 1911, "mul_relu_out": 1911, "mul_scalar_out": 1911, "mul_scalar_relu": 1911, "mul_scalar_relu_out": 1911, "quantized_gru_cell_dynam": 1911, "quantized_lstm_cell_dynam": 1911, "quantized_rnn_relu_cell_dynam": 1911, "quantized_rnn_tanh_cell_dynam": 1911, "rngprim": 1911, "philox_rand": 1911, "qlinear": 1911, "qlinear_dynam": 1911, "qlinear_prepack": 1911, "qlinear_relu": 1911, "qlinear_relu_dynam": 1911, "qlinear_unpack": 1911, "static_runtim": 1911, "vartupleunpack": 1911, "clamp_nan_to_num": 1911, "create_owned_ref": 1911, "dequantize_copi": 1911, "dict_unpack": 1911, "expand_dims_copi": 1911, "flatten_copi": 1911, "fused_equally_split": 1911, "reshape_copi": 1911, "select_tensor": 1911, "signed_log1p": 1911, "to_copi": 1911, "to_maybe_copy_out": 1911, "var1": 1912, "var2": 1912, "lbfg": 1912, "adadelta": 1912, "adamax": 1912, "asgd": 1912, "nadam": 1912, "radam": 1912, "rmsprop": 1912, "rprop": 1912, "reducelronplateau": 1912, "multisteplr": 1912, "upgrad": [1912, 1932], "swa_util": 1912, "averagedmodel": 1912, "swalr": 1912, "update_bn": 1912, "optima": 1912, "polyak": 1912, "averaged_model": 1912, "multi_avg_fn": 1912, "get_ema_multi_avg_fn": 1912, "textrm": 1912, "update_paramet": 1912, "avg_fn": 1912, "_foreach": 1912, "ema_model": 1912, "ema_avg": 1912, "averaged_model_paramet": 1912, "model_paramet": 1912, "num_averag": 1912, "swa_schedul": 1912, "anneal_epoch": 1912, "swa_lr": 1912, "swa_model": 1912, "cosineannealinglr": 1912, "swa_start": 1912, "test_input": 1912, "secur": 1913, "unpackag": 1913, "exercis": 1913, "unzip": 1913, "my_packag": 1913, "freeli": 1913, "94304870911616": 1913, "94304900784016": 1913, "extern_modul": 1913, "model_1": 1913, "pkl": 1913, "myzip": 1913, "file_byt": 1913, "writestr": 1913, "new_file_byt": 1913, "vim": 1913, "vimrc": 1913, "bufreadcmd": 1913, "brows": 1913, "amatch": 1913, "vi": 1913, "packageimport": 1913, "queryabl": 1913, "glob": 1913, "packageexport": 1913, "pe": 1913, "save_pickl": 1913, "has_fil": 1913, "importer_file_structur": 1913, "package_a": 1913, "get_rdep": 1913, "all_path": 1913, "dependency_graph_str": 1913, "save_text": 1913, "save_binari": 1913, "my_resourc": 1913, "config_stuff": 1913, "raw_data": 1913, "my_byt": 1913, "complementari": [1913, 1926], "load_pickl": 1913, "load_text": 1913, "load_binari": 1913, "my_tensor": 1913, "__reduce_package__": 1913, "my_str": 1913, "time_import": 1913, "time_export": 1913, "pickler": 1913, "persistent_id": 1913, "persistent_load": 1913, "generated_module_nam": 1913, "get_unique_id": 1913, "clock_gettim": 1913, "unpackage_foo": 1913, "depickl": 1913, "foo_1": 1913, "foo_2": 1913, "foo_packag": 1913, "foo_collect": 1913, "foo1": 1913, "foo2": 1913, "imported_foo": 1913, "9857706": 1913, "650140837": 1913, "652698385": 1913, "__torch_package__": 1913, "is_in_packag": 1913, "userexcept": 1913, "unpackageableexcept": 1913, "loaded_modul": 1913, "import_modul": 1913, "save_source_str": 1913, "save_modul": 1913, "textwrap": 1913, "dedent": 1913, "my_funct": 1913, "is_packag": 1913, "importlib": 1913, "my_pickl": 1913, "get_my_resourc": 1913, "read_text": 1913, "torch_package_import": 1913, "get_my_pickl": 1913, "is_from_packag": 1913, "stdlib": 1913, "my_test": 1913, "f2": [1913, 1914], "sys_import": 1913, "script_model": 1913, "mixed_model": 1913, "python_model_with_scripted_submodul": 1913, "loaded_script": 1913, "loaded_mix": 1913, "convention": 1913, "94286146172688": 1913, "94286146172784": 1913, "essai": 1913, "another_packag": 1913, "pickletool": 1913, "ast": 1913, "deni": 1913, "my_export": 1913, "my_interned_modul": 1913, "package_export": 1913, "my_externed_modul": 1913, "my_mocked_modul": 1913, "unwant": [1913, 1930], "hodg": 1913, "podg": 1913, "bazel": 1913, "buck": 1913, "my_class_inst": 1913, "imported_myclass": 1913, "okai": 1913, "torch_package_0": 1913, "handle_me_this_wai": 1913, "inadvert": 1913, "pun": 1913, "packagingerror": 1913, "dependency_graph": 1913, "emptymatcherror": 1913, "allow_empti": 1913, "_sysimport": 1913, "hermet": 1913, "scan": 1913, "orderedimport": 1913, "add_depend": 1913, "graphviz": 1913, "lang": 1913, "denied_modul": 1913, "my_subpackag": 1913, "digraph": 1913, "externed_modul": 1913, "interned_modul": 1913, "mocked_modul": 1913, "register_extern_hook": 1913, "register_intern_hook": 1913, "register_mock_hook": 1913, "myobject": 1913, "save_source_fil": 1913, "file_or_directori": 1913, "my_subsubpackag": 1913, "file_or_buff": 1913, "module_allow": 1913, "pytorchfileread": 1913, "python_vers": 1913, "is_dir": 1913, "gpipe": 1914, "suffer": 1914, "microbatch": 1914, "bubbl": 1914, "except_last": 1914, "deferred_batch_norm": 1914, "torchgpip": 1914, "withdevic": 1914, "micro": 1914, "fc": [1914, 1916], "init_rpc": [1914, 1921, 1922], "output_rref": 1914, "fed": [1914, 1930], "nochunk": 1914, "resnext": 1914, "till": 1914, "skippabl": 1914, "perfectli": 1914, "1to3": 1914, "layer1": 1914, "f1": 1914, "layer2": 1914, "layer3": 1914, "skip_1to3": 1914, "f3": 1914, "alic": 1914, "bob": 1914, "carol": 1914, "stashstashpop": 1914, "f_alic": 1914, "f_bob": 1914, "verify_skipp": 1914, "unmatch": [1914, 1935], "fairscal": 1914, "_kinetoprofil": 1915, "profileract": 1915, "add_metadata": 1915, "add_metadata_json": 1915, "unaggreg": 1915, "export_memory_timelin": 1915, "gzip": 1915, "export_stack": 1915, "self_cuda_time_tot": 1915, "flamegraph": 1915, "brendangregg": 1915, "pl": 1915, "countnam": 1915, "perf_viz": 1915, "svg": 1915, "on_trace_readi": 1915, "record_and_sav": 1915, "tensorboard_trace_handl": 1915, "dir_nam": 1915, "logdir": [1915, 1930], "code_to_profil": 1915, "row_limit": 1915, "trace_handl": 1915, "test_trace_": 1915, "step_num": 1915, "code_iteration_to_profil": 1915, "mtia": 1915, "skip_first": 1915, "worker_nam": [1915, 1921], "use_gzip": 1915, "range_push": 1915, "range_pop": 1915, "4x": 1916, "broadli": 1916, "domin": 1916, "previous_layer_fp32": 1916, "linear_fp32": 1916, "activation_fp32": 1916, "next_layer_fp32": 1916, "linear_weight_fp32": 1916, "linear_int8_w_fp32_inp": 1916, "linear_weight_int8": 1916, "ptdq": 1916, "model_fp32": 1916, "model_int8": 1916, "quantize_dynam": 1916, "input_fp32": 1916, "previous_layer_int8": 1916, "linear_with_activation_int8": 1916, "next_layer_int8": 1916, "ptsq": 1916, "minmax": 1916, "l2norm": 1916, "model_fp32_fus": 1916, "fuse_modul": [1916, 1917], "model_fp32_prepar": 1916, "fq": 1916, "prepare_qat": 1916, "training_loop": 1916, "requant": 1916, "linear1": 1916, "custom_qconfig": 1916, "fxptq": 1916, "model_fp": 1916, "usermodel": 1916, "model_to_quant": 1916, "default_dynamic_qconfig": 1916, "model_prepar": 1916, "model_quant": 1916, "model_fus": 1916, "per_tensor_symmetr": [1916, 1919], "per_channel_symmetr": [1916, 1919], "per_channel_scal": 1916, "per_channel_zero_point": 1916, "quantized_tensor": 1916, "qengin": 1916, "in4": 1916, "fx2trt": 1916, "float_modul": [1916, 1934], "staticquantcustommodul": 1916, "observed_modul": 1916, "default_qconfig": [1916, 1935], "vnni": 1916, "test_quantized_op": 1916, "testquantizedop": 1916, "test_custom_module_lstm": 1916, "test_quantize_fx": 1916, "testquantizefx": 1916, "test_static_lstm": 1916, "some_oper": 1916, "e2": 1916, "thnn_conv2d_forward": 1916, "quantizedcpu": 1916, "some_qconfig": 1916, "linearpackedparam": 1916, "_modul": 1916, "prepare_orig": 1916, "quantized_orig": 1916, "scripted_quant": 1916, "fp32_op": 1917, "int8_op": 1917, "cooperlak": 1917, "audit": 1917, "op_fp32": 1917, "op_int8": 1917, "_numeric_suit": 1917, "_numeric_suite_fx": 1917, "0x7fd0db7f2b20": 1918, "0x7fd0c74a3160": 1918, "0x7fd0c74a31f0": 1918, "num_tensor_args_to_observation_typ": 1918, "convbn1d": 1918, "0x7fd0c689cca0": 1918, "reference_quantized_module_for_root": 1918, "fuse_convtranspose_bn": 1918, "0x7fd0c689ce50": 1918, "linearbn1d": 1918, "fuse_linear_bn": 1918, "0x7fd0c689cdc0": 1918, "convbn2d": 1918, "convbn3d": 1918, "bnrelu2d": 1918, "bnrelu3d": 1918, "input_type_to_index": 1918, "conv_fus": 1918, "convbnrelu1d": 1918, "convbnrelu2d": 1918, "convbnrelu3d": 1918, "convrelu1d": 1918, "convrelu3d": 1918, "0x7fd0c74a3280": 1918, "0x7fd0c74a38b0": 1918, "quint4x2": [1918, 1927, 1931, 1932], "embedding_op": 1918, "0x7fd0c74a5790": 1918, "00390625": 1918, "0x7fd0c74a50d0": 1918, "0x7fd0c74a5280": 1918, "0x7fd0c74a3790": 1918, "0x7fd0c74a5670": 1918, "0x7fd0c741df70": 1918, "0x7fd0c74a5700": 1918, "0x7fd0c74a3a60": 1918, "linear_fus": 1918, "_sequential_wrapper2": 1918, "0x7fd0e2943430": 1918, "0x7fd0c74a3670": 1918, "0x7fd0c46f2940": 1918, "fuse_conv_bn_relu": 1918, "0x7fd0c689cd30": 1918, "0x7fd0c46f29d0": 1918, "0x7fd0c46f2a60": 1918, "0x7fd0c46f2af0": 1918, "0x7fd0c46f2b80": 1918, "0x7fd0c46f2c10": 1918, "0x7fd0c46f2ca0": 1918, "0x7fd0c471f700": 1918, "0x7fd0c46f2d30": 1918, "0x7fd0c46f2dc0": 1918, "0x7fd0c46f2e50": 1918, "0x7fd0c74a3820": 1918, "0078125": 1918, "customconfig": 1919, "custom_module_config": 1919, "_caller": 1920, "_devices_kw": 1920, "slowli": 1920, "unind": 1920, "deivc": 1920, "privateuse1": 1920, "shortcom": 1921, "stitch": 1921, "rpc_backend_opt": 1921, "trainer3": 1921, "parameterserver2": 1921, "dash": [1921, 1923], "backendtyp": 1921, "rpcbackendopt": 1921, "rpcagent": 1921, "transmit": 1921, "calle": [1921, 1923], "_set_rpc_timeout": 1921, "5678": 1921, "worker0": 1921, "my_script_add": 1921, "wire": 1921, "fut2": 1921, "meth": 1921, "grace": 1921, "userrref": [1921, 1923], "async_execut": 1921, "paus": 1921, "outmost": 1921, "async_add_chain": 1921, "worker2": 1921, "script_add": 1921, "async_add": 1921, "asyncexecutionclass": 1921, "static_async_add": 1921, "class_async_add": 1921, "ret_fut": 1921, "bound_async_add": 1921, "rpc_timeout": 1921, "incid": [1921, 1923], "nvlink": 1921, "multiplex": 1921, "tensorpiperpcbackendopt": 1921, "num_worker_thread": 1921, "device_map": 1921, "_transport": 1921, "tensorpipeag": 1921, "set_device_map": 1921, "intermitt": 1921, "remote_modul": 1921, "forward_async": 1921, "remote_devic": 1921, "workernam": 1921, "trainer0": 1921, "ps0": 1921, "remote_linear_modul": 1921, "get_module_rref": 1921, "remote_paramet": 1921, "my_add": [1922, 1936], "t4": 1922, "t5": 1922, "autograd_message_id": 1922, "autograd_context_id": 1922, "send1": 1922, "kickoff": 1922, "recv2": 1922, "heard": 1922, "send2": 1922, "recv1": 1922, "dist_autograd_simpl": 1922, "random_tensor": 1922, "_run_process": 1922, "dst_rank": 1922, "dst_name": 1922, "run_process": 1922, "rrefid": 1923, "ownerrref": 1923, "transient": 1923, "udf": 1923, "deliveri": 1923, "knowledg": 1923, "danger": 1923, "ancestor": 1923, "trickier": 1923, "forkid": 1923, "ack": 1923, "solid": 1923, "gc": 1923, "followup": 1923, "lil": 1925, "stark": 1925, "9093": 1925, "1411": 1925, "7568": 1925, "9589": 1925, "2794": 1925, "catastroph": 1925, "9900": 1925, "sturctur": 1925, "metadata_mask": 1925, "rce": 1925, "rc": 1925, "62": 1925, "to_sparse_semi_structur": 1925, "1x4": 1925, "16x16": 1925, "a_spars": 1925, "sparsesemistructuredtensor": 1925, "000": 1925, "400": 1925, "s2": 1925, "plain_dim_s": 1925, "lp64": 1925, "280": 1925, "310": 1925, "sp": 1925, "9078": 1925, "conception": 1925, "sparsesemistructur": 1925, "lobpcg": 1925, "geneig": 1925, "pca_lowrank": 1925, "kindli": 1925, "airy_ai": 1926, "airi": 1926, "onward": 1926, "9635": 1926, "entr": 1926, "3466": 1926, "int_": 1926, "8427": 1926, "0561": 1926, "4769": 1926, "9213": 1926, "8858": 1926, "7683": 1926, "7481": 1926, "2920": 1926, "int_0": 1926, "gammaln": 1926, "a1": 1926, "a2": 1926, "3528": 1926, "5665": 1926, "6472": 1926, "4335": 1926, "2650": 1926, "2661": 1926, "2796": 1926, "8808": 1926, "3019": 1926, "4658": 1926, "3085": 1926, "2430": 1926, "2070": 1926, "i1": 1926, "5652": 1926, "9534": 1926, "7595": 1926, "2153": 1926, "log_ndtr": 1926, "_ndtr": 1926, "6077": 1926, "7832": 1926, "841": 1926, "6931": 1926, "1728": 1926, "023": 1926, "9331": 1926, "6486": 1926, "1523": 1926, "6516": 1926, "6352": 1926, "6131": 1926, "7169": 1926, "6261": 1926, "displaystyl": 1926, "undefiend": 1926, "6835": 1926, "8474": 1926, "1929": 1926, "7162": 1926, "4180": 1926, "3928": 1926, "4007": 1926, "7586": 1926, "3901": 1926, "5049": 1926, "ndtr": 1926, "0228": 1926, "1587": 1926, "9772": 1926, "9987": 1926, "2p": 1926, "64493": 1926, "4041": 1926, "8288": 1926, "4939": 1926, "97": 1926, "4091": 1926, "8863": 1926, "771": 1926, "scaled_modified_bessel_k0": 1926, "scaled_modified_bessel_k1": 1926, "2948": 1926, "0267": 1926, "1566": 1926, "9186": 1926, "8631": 1926, "0259": 1926, "1300": 1926, "spheric": 1926, "xlog1pi": 1926, "3863": 1926, "1972": 1926, "6094": 1926, "2189": 1926, "8283": 1926, "7726": 1926, "0986": 1926, "1589": 1926, "hurwitz": 1926, "6449": 1926, "0823": 1926, "untyp": 1927, "wrap_storag": 1927, "complex_doubl": 1927, "from_buff": 1927, "hpu": 1927, "is_hpu": 1927, "pickle_storage_typ": 1927, "byteswap": 1927, "quint2x4": [1927, 1932], "twelv": 1928, "halftensor": [1928, 1931], "bfloat16tensor": [1928, 1931], "chartensor": [1928, 1931], "shorttensor": [1928, 1931], "binary16": [1928, 1931], "significand": [1928, 1931], "float_tensor": 1928, "double_tensor": 1928, "complex_float_tensor": 1928, "complex_double_tensor": 1928, "int_tensor": 1928, "long_tensor": 1928, "uint_tensor": 1928, "bool_tensor": 1928, "long_zerodim": 1928, "int_zerodim": 1928, "set_default_devic": 1928, "cuda1": 1928, "nhwc": [1928, 1930], "channels_last_3d": 1928, "ndhwc": 1928, "blogpost": 1929, "totensor": 1930, "trainset": 1930, "mnist": 1930, "mnist_train": 1930, "trainload": 1930, "grayscal": 1930, "make_grid": 1930, "add_imag": 1930, "add_graph": 1930, "clutter": 1930, "n_iter": 1930, "purge_step": 1930, "max_queu": 1930, "flush_sec": 1930, "filename_suffix": 1930, "current_datetime_hostnam": 1930, "exp1": 1930, "suffix": [1930, 1931], "global_step": 1930, "purg": 1930, "event_file_writ": 1930, "eventfilewrit": 1930, "may04_22": 1930, "54_": 1930, "macbook": 1930, "my_experi": 1930, "lr_0": 1930, "1_batch_16": 1930, "locallr_0": 1930, "scalar_valu": 1930, "walltim": 1930, "new_styl": 1930, "double_precis": 1930, "blobnam": 1930, "simple_valu": 1930, "main_tag": 1930, "tag_scalar_dict": 1930, "run_14h": 1930, "xsinx": 1930, "xcosx": 1930, "tanx": 1930, "add_histogram": 1930, "max_bin": 1930, "fd": 1930, "img_tensor": 1930, "dataformat": 1930, "chw": 1930, "hwc": 1930, "hw": 1930, "wh": 1930, "3xhxw": 1930, "img_hwc": 1930, "my_imag": 1930, "my_image_hwc": 1930, "img_batch": 1930, "my_image_batch": 1930, "add_figur": 1930, "add_video": 1930, "vid_tensor": 1930, "fp": 1930, "moviepi": 1930, "add_audio": 1930, "snd_tensor": 1930, "sample_r": 1930, "44100": 1930, "add_text": 1930, "text_str": 1930, "input_to_model": 1930, "use_strict_trac": 1930, "add_embed": 1930, "label_img": 1930, "metadata_head": 1930, "projector": 1930, "kwlist": 1930, "add_pr_curv": 1930, "num_threshold": 1930, "pr_curv": 1930, "add_custom_scalar": 1930, "chart": 1930, "categorynam": 1930, "chartnam": 1930, "listofproperti": 1930, "multilin": 1930, "taiwan": 1930, "twse": 1930, "0050": 1930, "2330": 1930, "dow": 1930, "aaa": 1930, "bbb": 1930, "ccc": 1930, "nasdaq": 1930, "add_mesh": 1930, "config_dict": 1930, "threej": 1930, "vertex": 1930, "number_of_vertic": 1930, "vertices_tensor": 1930, "colors_tensor": 1930, "faces_tensor": 1930, "my_mesh": 1930, "add_hparam": 1930, "hparam_dict": 1930, "metric_dict": 1930, "hparam_domain_discret": 1930, "run_nam": 1930, "hparam": 1930, "bsize": 1930, "_like": 1931, "allow_subclass": 1932, "check_devic": 1932, "check_layout": 1932, "6e": 1932, "3e": 1932, "assert_equ": 1932, "000000000000001e": 1932, "1e0": 1932, "argh": 1932, "nfooter": 1932, "66": 1932, "footer": 1932, "exclude_zero": 1932, "1205": 1932, "2282": 1932, "6380": 1932, "default_gener": 1933, "data_dependent_output": 1933, "dynamic_output_shap": 1933, "inplace_view": 1933, "nondeterministic_bitwis": 1933, "nondeterministic_seed": 1933, "compare_weight": 1934, "float_dict": 1934, "quantized_dict": 1934, "wt_compare_dict": 1934, "qmodel": 1934, "compute_error": 1934, "weight_dict": 1934, "get_logger_dict": 1934, "shadowlogg": 1934, "outputlogg": [1934, 1935], "target_dict": 1934, "q_modul": 1934, "logger_cl": [1934, 1935], "prepare_model_with_stub": 1934, "module_swap_list": 1934, "q_model": 1934, "ob_dict": 1934, "compare_model_stub": 1934, "quantizablebasicblock": 1934, "get_matching_activ": 1934, "act_dict": 1934, "prepare_model_output": 1934, "compare_model_output": 1934, "act_compare_dict": 1934, "weight_comparison": 1935, "extract_weight": 1935, "sqnr": 1935, "extend_logger_results_with_comparison": 1935, "compute_sqnr": 1935, "mp_n": 1935, "mq_n": 1935, "add_logg": 1935, "act_comparison": 1935, "extract_logger_info": 1935, "mp_shadows_mq": 1935, "add_shadow_logg": 1935, "shadow_act_comparison": 1935, "extract_shadow_logger_info": 1935, "ref_node_nam": 1935, "prev_node_nam": 1935, "model_nam": 1935, "ref_nam": 1935, "prev_node_target_typ": 1935, "ref_node_target_typ": 1935, "results_typ": 1935, "index_within_arg": 1935, "index_of_arg": 1935, "qconfig_str": 1935, "outputcomparisonlogg": 1935, "x_ref": 1935, "nstracer": 1935, "skipped_module_nam": 1935, "skipped_module_class": 1935, "model_name_a": 1935, "model_a": 1935, "model_name_b": 1935, "model_b": 1935, "base_name_to_sets_of_related_op": 1935, "unmatchable_types_map": 1935, "op_to_type_to_weight_extraction_fn": 1935, "nsresultstyp": 1935, "name_a": 1935, "name_b": 1935, "should_log_input": 1935, "model_a_with_logg": 1935, "model_b_with_logg": 1935, "model_name_to_use_for_layer_nam": 1935, "node_type_to_io_type_map": 1935, "model_a_shadows_b": 1935, "model_name_1": 1935, "model_name_2": 1935, "comparison_fn": 1935, "comparison_nam": 1935, "prepare_n_shadows_model": 1935, "qconfig_multi_map": 1935, "custom_prepare_fn": 1935, "custom_prepare_kwarg": 1935, "custom_trac": 1935, "args_kwargs_m": 1935, "op_m": 1935, "output_m": 1935, "op_m_n": 1935, "log_m_n": 1935, "log_m_0": 1935, "qconfig_n": 1935, "args_m": 1935, "op_m_prepared_with_qconfig_n": 1935, "out_m_n": 1935, "kwargs_m": 1935, "docblock": 1935, "loggers_set_en": 1935, "loggers_set_save_activ": 1935, "save_activ": 1935, "convert_n_shadows_model": 1935, "custom_convert_fn": 1935, "custom_convert_kwarg": 1935, "extract_results_n_shadows_model": 1935, "print_comparisons_n_shadows_model": 1935, "compute_normalized_l2_error": 1935, "compute_cosine_similar": 1935, "as_subclass": 1936, "resolve_nam": 1936, "handle_torch_funct": 1936, "public_api": 1936, "relevant_arg": 1936, "has_torch_function_unari": 1936, "is_tensor_lik": 1936, "notatensor": 1936, "tensorlik": 1936, "is_tensor_method_or_properti": 1936, "__get__": 1936, "__module__": 1936, "slot": 1936, "wrap_torch_funct": 1936, "smallest_norm": 1937, "subnorm": 1937, "denormal_numb": 1937}, "objects": {"": [[1933, 0, 0, "-", "torch"], [1868, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1927, 1, 1, "", "BFloat16Storage"], [1927, 1, 1, "", "BoolStorage"], [1927, 1, 1, "", "ByteStorage"], [1927, 1, 1, "", "CharStorage"], [1927, 1, 1, "", "ComplexDoubleStorage"], [1927, 1, 1, "", "ComplexFloatStorage"], [1927, 1, 1, "", "DoubleStorage"], [1927, 1, 1, "", "FloatStorage"], [91, 1, 1, "", "Generator"], [1927, 1, 1, "", "HalfStorage"], [1927, 1, 1, "", "IntStorage"], [1927, 1, 1, "", "LongStorage"], [1927, 1, 1, "", "QInt32Storage"], [1927, 1, 1, "", "QInt8Storage"], [1927, 1, 1, "", "QUInt2x4Storage"], [1927, 1, 1, "", "QUInt4x2Storage"], [1927, 1, 1, "", "QUInt8Storage"], [1927, 1, 1, "", "ShortStorage"], [1933, 1, 1, "", "SymBool"], [1933, 1, 1, "", "SymFloat"], [1933, 1, 1, "", "SymInt"], [1933, 1, 1, "", "Tag"], [1931, 1, 1, "", "Tensor"], [1927, 1, 1, "", "TypedStorage"], [1927, 1, 1, "", "UntypedStorage"], [32, 0, 0, "-", "__config__"], [623, 5, 1, "", "_assert"], [624, 5, 1, "", "_foreach_abs"], [625, 5, 1, "", "_foreach_abs_"], [626, 5, 1, "", "_foreach_acos"], [627, 5, 1, "", "_foreach_acos_"], [628, 5, 1, "", "_foreach_asin"], [629, 5, 1, "", "_foreach_asin_"], [630, 5, 1, "", "_foreach_atan"], [631, 5, 1, "", "_foreach_atan_"], [632, 5, 1, "", "_foreach_ceil"], [633, 5, 1, "", "_foreach_ceil_"], [634, 5, 1, "", "_foreach_cos"], [635, 5, 1, "", "_foreach_cos_"], [636, 5, 1, "", "_foreach_cosh"], [637, 5, 1, "", "_foreach_cosh_"], [638, 5, 1, "", "_foreach_erf"], [639, 5, 1, "", "_foreach_erf_"], [640, 5, 1, "", "_foreach_erfc"], [641, 5, 1, "", "_foreach_erfc_"], [642, 5, 1, "", "_foreach_exp"], [643, 5, 1, "", "_foreach_exp_"], [644, 5, 1, "", "_foreach_expm1"], [645, 5, 1, "", "_foreach_expm1_"], [646, 5, 1, "", "_foreach_floor"], [647, 5, 1, "", "_foreach_floor_"], [648, 5, 1, "", "_foreach_frac"], [649, 5, 1, "", "_foreach_frac_"], [650, 5, 1, "", "_foreach_lgamma"], [651, 5, 1, "", "_foreach_lgamma_"], [652, 5, 1, "", "_foreach_log"], [653, 5, 1, "", "_foreach_log10"], [654, 5, 1, "", "_foreach_log10_"], [655, 5, 1, "", "_foreach_log1p"], [656, 5, 1, "", "_foreach_log1p_"], [657, 5, 1, "", "_foreach_log2"], [658, 5, 1, "", "_foreach_log2_"], [659, 5, 1, "", "_foreach_log_"], [660, 5, 1, "", "_foreach_neg"], [661, 5, 1, "", "_foreach_neg_"], [662, 5, 1, "", "_foreach_reciprocal"], [663, 5, 1, "", "_foreach_reciprocal_"], [664, 5, 1, "", "_foreach_round"], [665, 5, 1, "", "_foreach_round_"], [666, 5, 1, "", "_foreach_sigmoid"], [667, 5, 1, "", "_foreach_sigmoid_"], [668, 5, 1, "", "_foreach_sin"], [669, 5, 1, "", "_foreach_sin_"], [670, 5, 1, "", "_foreach_sinh"], [671, 5, 1, "", "_foreach_sinh_"], [672, 5, 1, "", "_foreach_sqrt"], [673, 5, 1, "", "_foreach_sqrt_"], [674, 5, 1, "", "_foreach_tan"], [675, 5, 1, "", "_foreach_tan_"], [676, 5, 1, "", "_foreach_trunc"], [677, 5, 1, "", "_foreach_trunc_"], [678, 5, 1, "", "_foreach_zero_"], [1877, 0, 0, "-", "_logging"], [680, 5, 1, "", "abs"], [681, 5, 1, "", "absolute"], [682, 5, 1, "", "acos"], [683, 5, 1, "", "acosh"], [684, 5, 1, "", "add"], [685, 5, 1, "", "addbmm"], [686, 5, 1, "", "addcdiv"], [687, 5, 1, "", "addcmul"], [688, 5, 1, "", "addmm"], [689, 5, 1, "", "addmv"], [690, 5, 1, "", "addr"], [691, 5, 1, "", "adjoint"], [692, 5, 1, "", "all"], [693, 5, 1, "", "allclose"], [694, 5, 1, "", "amax"], [695, 5, 1, "", "amin"], [696, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [697, 5, 1, "", "angle"], [698, 5, 1, "", "any"], [1916, 0, 0, "-", "ao"], [864, 5, 1, "", "arange"], [865, 5, 1, "", "arccos"], [866, 5, 1, "", "arccosh"], [867, 5, 1, "", "arcsin"], [868, 5, 1, "", "arcsinh"], [869, 5, 1, "", "arctan"], [870, 5, 1, "", "arctan2"], [871, 5, 1, "", "arctanh"], [872, 5, 1, "", "are_deterministic_algorithms_enabled"], [873, 5, 1, "", "argmax"], [874, 5, 1, "", "argmin"], [875, 5, 1, "", "argsort"], [876, 5, 1, "", "argwhere"], [877, 5, 1, "", "as_strided"], [878, 5, 1, "", "as_tensor"], [879, 5, 1, "", "asarray"], [880, 5, 1, "", "asin"], [881, 5, 1, "", "asinh"], [882, 5, 1, "", "atan"], [883, 5, 1, "", "atan2"], [884, 5, 1, "", "atanh"], [885, 5, 1, "", "atleast_1d"], [886, 5, 1, "", "atleast_2d"], [887, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1933, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [920, 5, 1, "", "baddbmm"], [921, 5, 1, "", "bartlett_window"], [922, 5, 1, "", "bernoulli"], [923, 5, 1, "", "bincount"], [924, 5, 1, "", "bitwise_and"], [925, 5, 1, "", "bitwise_left_shift"], [926, 5, 1, "", "bitwise_not"], [927, 5, 1, "", "bitwise_or"], [928, 5, 1, "", "bitwise_right_shift"], [929, 5, 1, "", "bitwise_xor"], [930, 5, 1, "", "blackman_window"], [931, 5, 1, "", "block_diag"], [932, 5, 1, "", "bmm"], [933, 5, 1, "", "broadcast_shapes"], [934, 5, 1, "", "broadcast_tensors"], [935, 5, 1, "", "broadcast_to"], [936, 5, 1, "", "bucketize"], [937, 5, 1, "", "can_cast"], [938, 5, 1, "", "cartesian_prod"], [939, 5, 1, "", "cat"], [940, 5, 1, "", "cdist"], [941, 5, 1, "", "ceil"], [942, 5, 1, "", "chain_matmul"], [943, 5, 1, "", "cholesky"], [944, 5, 1, "", "cholesky_inverse"], [945, 5, 1, "", "cholesky_solve"], [946, 5, 1, "", "chunk"], [947, 5, 1, "", "clamp"], [948, 5, 1, "", "clip"], [949, 5, 1, "", "clone"], [950, 5, 1, "", "column_stack"], [951, 5, 1, "", "combinations"], [952, 5, 1, "", "compile"], [953, 5, 1, "", "compiled_with_cxx11_abi"], [30, 0, 0, "-", "compiler"], [960, 5, 1, "", "complex"], [961, 5, 1, "", "concat"], [962, 5, 1, "", "concatenate"], [963, 5, 1, "", "conj"], [964, 5, 1, "", "conj_physical"], [1933, 0, 0, "-", "contrib"], [965, 5, 1, "", "copysign"], [966, 5, 1, "", "corrcoef"], [967, 5, 1, "", "cos"], [968, 5, 1, "", "cosh"], [969, 5, 1, "", "count_nonzero"], [970, 5, 1, "", "cov"], [0, 0, 0, "-", "cpu"], [971, 5, 1, "", "cross"], [35, 0, 0, "-", "cuda"], [1050, 5, 1, "", "cummax"], [1051, 5, 1, "", "cummin"], [1052, 5, 1, "", "cumprod"], [1053, 5, 1, "", "cumsum"], [1054, 5, 1, "", "cumulative_trapezoid"], [1055, 5, 1, "", "deg2rad"], [1056, 5, 1, "", "dequantize"], [1057, 5, 1, "", "det"], [1928, 1, 1, "", "device"], [1058, 5, 1, "", "diag"], [1059, 5, 1, "", "diag_embed"], [1060, 5, 1, "", "diagflat"], [1061, 5, 1, "", "diagonal"], [1062, 5, 1, "", "diagonal_scatter"], [1063, 5, 1, "", "diff"], [1064, 5, 1, "", "digamma"], [1065, 5, 1, "", "dist"], [42, 0, 0, "-", "distributed"], [48, 0, 0, "-", "distributions"], [1066, 5, 1, "", "div"], [1067, 5, 1, "", "divide"], [1068, 5, 1, "", "dot"], [1069, 5, 1, "", "dsplit"], [1070, 5, 1, "", "dstack"], [1928, 1, 1, "", "dtype"], [1071, 5, 1, "", "einsum"], [1072, 5, 1, "", "empty"], [1073, 5, 1, "", "empty_like"], [1074, 5, 1, "", "empty_strided"], [1075, 1, 1, "", "enable_grad"], [1076, 5, 1, "", "eq"], [1077, 5, 1, "", "equal"], [1078, 5, 1, "", "erf"], [1079, 5, 1, "", "erfc"], [1080, 5, 1, "", "erfinv"], [1081, 5, 1, "", "exp"], [1082, 5, 1, "", "exp2"], [1083, 5, 1, "", "expm1"], [1084, 5, 1, "", "eye"], [1085, 5, 1, "", "fake_quantize_per_channel_affine"], [1086, 5, 1, "", "fake_quantize_per_tensor_affine"], [63, 0, 0, "-", "fft"], [1109, 5, 1, "", "fix"], [1110, 5, 1, "", "flatten"], [1111, 5, 1, "", "flip"], [1112, 5, 1, "", "fliplr"], [1113, 5, 1, "", "flipud"], [1114, 5, 1, "", "float_power"], [1115, 5, 1, "", "floor"], [1116, 5, 1, "", "floor_divide"], [1117, 5, 1, "", "fmax"], [1118, 5, 1, "", "fmin"], [1119, 5, 1, "", "fmod"], [1120, 5, 1, "", "frac"], [1121, 5, 1, "", "frexp"], [1122, 5, 1, "", "from_dlpack"], [1123, 5, 1, "", "from_numpy"], [1124, 5, 1, "", "frombuffer"], [1125, 5, 1, "", "full"], [1126, 5, 1, "", "full_like"], [66, 0, 0, "-", "func"], [71, 0, 0, "-", "futures"], [72, 0, 0, "-", "fx"], [1140, 5, 1, "", "gather"], [1141, 5, 1, "", "gcd"], [1142, 5, 1, "", "ge"], [1143, 5, 1, "", "geqrf"], [1144, 5, 1, "", "ger"], [1145, 5, 1, "", "get_default_dtype"], [1146, 5, 1, "", "get_deterministic_debug_mode"], [1147, 5, 1, "", "get_float32_matmul_precision"], [1148, 5, 1, "", "get_num_interop_threads"], [1149, 5, 1, "", "get_num_threads"], [1150, 5, 1, "", "get_rng_state"], [1151, 5, 1, "", "gradient"], [1152, 5, 1, "", "greater"], [1153, 5, 1, "", "greater_equal"], [1154, 5, 1, "", "gt"], [1155, 5, 1, "", "hamming_window"], [1156, 5, 1, "", "hann_window"], [1157, 5, 1, "", "heaviside"], [1158, 5, 1, "", "histc"], [1159, 5, 1, "", "histogram"], [1160, 5, 1, "", "histogramdd"], [1161, 5, 1, "", "hsplit"], [1162, 5, 1, "", "hspmm"], [1163, 5, 1, "", "hstack"], [1865, 0, 0, "-", "hub"], [1164, 5, 1, "", "hypot"], [1165, 5, 1, "", "i0"], [1166, 5, 1, "", "igamma"], [1167, 5, 1, "", "igammac"], [1168, 5, 1, "", "imag"], [1169, 5, 1, "", "index_add"], [1170, 5, 1, "", "index_copy"], [1171, 5, 1, "", "index_reduce"], [1172, 5, 1, "", "index_select"], [1173, 1, 1, "", "inference_mode"], [1174, 5, 1, "", "initial_seed"], [1175, 5, 1, "", "inner"], [1176, 5, 1, "", "inverse"], [1177, 5, 1, "", "is_complex"], [1178, 5, 1, "", "is_conj"], [1179, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1180, 5, 1, "", "is_floating_point"], [1181, 5, 1, "", "is_grad_enabled"], [1182, 5, 1, "", "is_inference_mode_enabled"], [1183, 5, 1, "", "is_nonzero"], [1184, 5, 1, "", "is_storage"], [1185, 5, 1, "", "is_tensor"], [1186, 5, 1, "", "is_warn_always_enabled"], [1187, 5, 1, "", "isclose"], [1188, 5, 1, "", "isfinite"], [1189, 5, 1, "", "isin"], [1190, 5, 1, "", "isinf"], [1191, 5, 1, "", "isnan"], [1192, 5, 1, "", "isneginf"], [1193, 5, 1, "", "isposinf"], [1194, 5, 1, "", "isreal"], [1195, 5, 1, "", "istft"], [1868, 0, 0, "-", "jit"], [1217, 5, 1, "", "kaiser_window"], [1218, 5, 1, "", "kron"], [1219, 5, 1, "", "kthvalue"], [1928, 1, 1, "", "layout"], [1220, 5, 1, "", "lcm"], [1221, 5, 1, "", "ldexp"], [1222, 5, 1, "", "le"], [1223, 5, 1, "", "lerp"], [1224, 5, 1, "", "less"], [1225, 5, 1, "", "less_equal"], [1226, 5, 1, "", "lgamma"], [1876, 0, 0, "-", "linalg"], [1268, 5, 1, "", "linspace"], [1269, 5, 1, "", "load"], [1270, 5, 1, "", "lobpcg"], [1271, 5, 1, "", "log"], [1272, 5, 1, "", "log10"], [1273, 5, 1, "", "log1p"], [1274, 5, 1, "", "log2"], [1275, 5, 1, "", "logaddexp"], [1276, 5, 1, "", "logaddexp2"], [1277, 5, 1, "", "logcumsumexp"], [1278, 5, 1, "", "logdet"], [1279, 5, 1, "", "logical_and"], [1280, 5, 1, "", "logical_not"], [1281, 5, 1, "", "logical_or"], [1282, 5, 1, "", "logical_xor"], [1283, 5, 1, "", "logit"], [1284, 5, 1, "", "logspace"], [1285, 5, 1, "", "logsumexp"], [1286, 5, 1, "", "lt"], [1287, 5, 1, "", "lu"], [1288, 5, 1, "", "lu_solve"], [1289, 5, 1, "", "lu_unpack"], [1290, 5, 1, "", "manual_seed"], [1878, 0, 0, "-", "masked"], [1291, 5, 1, "", "masked_select"], [1292, 5, 1, "", "matmul"], [1293, 5, 1, "", "matrix_exp"], [1294, 5, 1, "", "matrix_power"], [1295, 5, 1, "", "max"], [1296, 5, 1, "", "maximum"], [1297, 5, 1, "", "mean"], [1298, 5, 1, "", "median"], [1928, 1, 1, "", "memory_format"], [1299, 5, 1, "", "meshgrid"], [1300, 5, 1, "", "min"], [1301, 5, 1, "", "minimum"], [1302, 5, 1, "", "mm"], [1303, 5, 1, "", "mode"], [1881, 0, 0, "-", "monitor"], [1304, 5, 1, "", "moveaxis"], [1305, 5, 1, "", "movedim"], [1882, 0, 0, "-", "mps"], [1318, 5, 1, "", "msort"], [1319, 5, 1, "", "mul"], [1320, 5, 1, "", "multinomial"], [1321, 5, 1, "", "multiply"], [1883, 0, 0, "-", "multiprocessing"], [1322, 5, 1, "", "mv"], [1323, 5, 1, "", "mvlgamma"], [1324, 5, 1, "", "nan_to_num"], [1325, 5, 1, "", "nanmean"], [1326, 5, 1, "", "nanmedian"], [1327, 5, 1, "", "nanquantile"], [1328, 5, 1, "", "nansum"], [1329, 5, 1, "", "narrow"], [1330, 5, 1, "", "narrow_copy"], [1331, 5, 1, "", "ne"], [1332, 5, 1, "", "neg"], [1333, 5, 1, "", "negative"], [1886, 0, 0, "-", "nested"], [1334, 5, 1, "", "nextafter"], [1887, 0, 0, "-", "nn"], [1655, 1, 1, "", "no_grad"], [1656, 5, 1, "", "nonzero"], [1657, 5, 1, "", "norm"], [1658, 5, 1, "", "normal"], [1659, 5, 1, "", "not_equal"], [1660, 5, 1, "", "numel"], [1661, 5, 1, "", "ones"], [1662, 5, 1, "", "ones_like"], [1909, 0, 0, "-", "onnx"], [1912, 0, 0, "-", "optim"], [1702, 5, 1, "", "orgqr"], [1703, 5, 1, "", "ormqr"], [1704, 5, 1, "", "outer"], [1913, 0, 0, "-", "package"], [1705, 5, 1, "", "pca_lowrank"], [1706, 5, 1, "", "permute"], [1707, 5, 1, "", "pinverse"], [1708, 5, 1, "", "poisson"], [1709, 5, 1, "", "polar"], [1710, 5, 1, "", "polygamma"], [1711, 5, 1, "", "positive"], [1712, 5, 1, "", "pow"], [1713, 5, 1, "", "prod"], [1915, 0, 0, "-", "profiler"], [1714, 5, 1, "", "promote_types"], [1715, 5, 1, "", "qr"], [1716, 5, 1, "", "quantile"], [1919, 0, 0, "-", "quantization"], [1717, 5, 1, "", "quantize_per_channel"], [1718, 5, 1, "", "quantize_per_tensor"], [1719, 5, 1, "", "quantized_batch_norm"], [1720, 5, 1, "", "quantized_max_pool1d"], [1721, 5, 1, "", "quantized_max_pool2d"], [1723, 5, 1, "", "rad2deg"], [1724, 5, 1, "", "rand"], [1725, 5, 1, "", "rand_like"], [1726, 5, 1, "", "randint"], [1727, 5, 1, "", "randint_like"], [1728, 5, 1, "", "randn"], [1729, 5, 1, "", "randn_like"], [1920, 0, 0, "-", "random"], [1730, 5, 1, "", "randperm"], [1731, 5, 1, "", "range"], [1732, 5, 1, "", "ravel"], [1733, 5, 1, "", "real"], [1734, 5, 1, "", "reciprocal"], [1735, 5, 1, "", "remainder"], [1736, 5, 1, "", "renorm"], [1737, 5, 1, "", "repeat_interleave"], [1738, 5, 1, "", "reshape"], [1739, 5, 1, "", "resolve_conj"], [1740, 5, 1, "", "resolve_neg"], [1741, 5, 1, "", "result_type"], [1742, 5, 1, "", "roll"], [1743, 5, 1, "", "rot90"], [1744, 5, 1, "", "round"], [1745, 5, 1, "", "row_stack"], [1746, 5, 1, "", "rsqrt"], [1747, 5, 1, "", "save"], [1748, 5, 1, "", "scatter"], [1749, 5, 1, "", "scatter_add"], [1750, 5, 1, "", "scatter_reduce"], [1751, 5, 1, "", "searchsorted"], [1752, 5, 1, "", "seed"], [1753, 5, 1, "", "select"], [1754, 5, 1, "", "select_scatter"], [1755, 5, 1, "", "set_default_device"], [1756, 5, 1, "", "set_default_dtype"], [1757, 5, 1, "", "set_default_tensor_type"], [1758, 5, 1, "", "set_deterministic_debug_mode"], [1759, 5, 1, "", "set_float32_matmul_precision"], [1760, 5, 1, "", "set_flush_denormal"], [1761, 1, 1, "", "set_grad_enabled"], [1762, 5, 1, "", "set_num_interop_threads"], [1763, 5, 1, "", "set_num_threads"], [1764, 5, 1, "", "set_printoptions"], [1765, 5, 1, "", "set_rng_state"], [1766, 5, 1, "", "set_warn_always"], [1767, 5, 1, "", "sgn"], [1768, 5, 1, "", "sigmoid"], [1769, 5, 1, "", "sign"], [1924, 0, 0, "-", "signal"], [1781, 5, 1, "", "signbit"], [1782, 5, 1, "", "sin"], [1783, 5, 1, "", "sinc"], [1784, 5, 1, "", "sinh"], [1785, 5, 1, "", "slice_scatter"], [1786, 5, 1, "", "slogdet"], [1787, 5, 1, "", "smm"], [1788, 5, 1, "", "softmax"], [1789, 5, 1, "", "sort"], [1925, 0, 0, "-", "sparse"], [1798, 5, 1, "", "sparse_bsc_tensor"], [1799, 5, 1, "", "sparse_bsr_tensor"], [1800, 5, 1, "", "sparse_compressed_tensor"], [1801, 5, 1, "", "sparse_coo_tensor"], [1802, 5, 1, "", "sparse_csc_tensor"], [1803, 5, 1, "", "sparse_csr_tensor"], [1926, 0, 0, "-", "special"], [1804, 5, 1, "", "split"], [1805, 5, 1, "", "sqrt"], [1806, 5, 1, "", "square"], [1807, 5, 1, "", "squeeze"], [1808, 5, 1, "", "sspaddmm"], [1809, 5, 1, "", "stack"], [1810, 5, 1, "", "std"], [1811, 5, 1, "", "std_mean"], [1812, 5, 1, "", "stft"], [1813, 5, 1, "", "sub"], [1814, 5, 1, "", "subtract"], [1815, 5, 1, "", "sum"], [1816, 5, 1, "", "svd"], [1817, 5, 1, "", "svd_lowrank"], [1818, 5, 1, "", "swapaxes"], [1819, 5, 1, "", "swapdims"], [1820, 5, 1, "", "sym_float"], [1821, 5, 1, "", "sym_int"], [1822, 5, 1, "", "sym_max"], [1823, 5, 1, "", "sym_min"], [1824, 5, 1, "", "sym_not"], [1825, 5, 1, "", "t"], [1826, 5, 1, "", "take"], [1827, 5, 1, "", "take_along_dim"], [1828, 5, 1, "", "tan"], [1829, 5, 1, "", "tanh"], [1830, 5, 1, "", "tensor"], [1831, 5, 1, "", "tensor_split"], [1832, 5, 1, "", "tensordot"], [1932, 0, 0, "-", "testing"], [1833, 5, 1, "", "tile"], [1834, 5, 1, "", "topk"], [1835, 5, 1, "", "trace"], [1836, 5, 1, "", "transpose"], [1837, 5, 1, "", "trapezoid"], [1838, 5, 1, "", "trapz"], [1839, 5, 1, "", "triangular_solve"], [1840, 5, 1, "", "tril"], [1841, 5, 1, "", "tril_indices"], [1842, 5, 1, "", "triu"], [1843, 5, 1, "", "triu_indices"], [1844, 5, 1, "", "true_divide"], [1845, 5, 1, "", "trunc"], [1846, 5, 1, "", "unbind"], [1847, 5, 1, "", "unflatten"], [1848, 5, 1, "", "unique"], [1849, 5, 1, "", "unique_consecutive"], [1850, 5, 1, "", "unsqueeze"], [1851, 5, 1, "", "use_deterministic_algorithms"], [1933, 0, 0, "-", "utils"], [1852, 5, 1, "", "vander"], [1853, 5, 1, "", "var"], [1854, 5, 1, "", "var_mean"], [1855, 5, 1, "", "vdot"], [1856, 5, 1, "", "view_as_complex"], [1857, 5, 1, "", "view_as_real"], [1858, 5, 1, "", "vmap"], [1859, 5, 1, "", "vsplit"], [1860, 5, 1, "", "vstack"], [1861, 5, 1, "", "where"], [1862, 5, 1, "", "xlogy"], [1863, 5, 1, "", "zeros"], [1864, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1927, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1927, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1927, 2, 1, "", "dtype"]], "torch.CharStorage": [[1927, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1927, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1927, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1927, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1927, 2, 1, "", "dtype"]], "torch.Generator": [[91, 2, 1, "", "device"], [91, 3, 1, "", "get_state"], [91, 3, 1, "", "initial_seed"], [91, 3, 1, "", "manual_seed"], [91, 3, 1, "", "seed"], [91, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1927, 2, 1, "", "dtype"]], "torch.IntStorage": [[1927, 2, 1, "", "dtype"]], "torch.LongStorage": [[1927, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1927, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1927, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1927, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1927, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1927, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1927, 2, 1, "", "dtype"]], "torch.Tag": [[1933, 4, 1, "", "name"]], "torch.Tensor": [[1931, 2, 1, "", "H"], [1931, 2, 1, "", "T"], [92, 3, 1, "", "abs"], [93, 3, 1, "", "abs_"], [94, 3, 1, "", "absolute"], [95, 3, 1, "", "absolute_"], [96, 3, 1, "", "acos"], [97, 3, 1, "", "acos_"], [98, 3, 1, "", "acosh"], [99, 3, 1, "", "acosh_"], [100, 3, 1, "", "add"], [101, 3, 1, "", "add_"], [102, 3, 1, "", "addbmm"], [103, 3, 1, "", "addbmm_"], [104, 3, 1, "", "addcdiv"], [105, 3, 1, "", "addcdiv_"], [106, 3, 1, "", "addcmul"], [107, 3, 1, "", "addcmul_"], [108, 3, 1, "", "addmm"], [109, 3, 1, "", "addmm_"], [110, 3, 1, "", "addmv"], [111, 3, 1, "", "addmv_"], [112, 3, 1, "", "addr"], [113, 3, 1, "", "addr_"], [114, 3, 1, "", "adjoint"], [1885, 3, 1, "", "align_as"], [1885, 3, 1, "", "align_to"], [115, 3, 1, "", "all"], [116, 3, 1, "", "allclose"], [117, 3, 1, "", "amax"], [118, 3, 1, "", "amin"], [119, 3, 1, "", "aminmax"], [120, 3, 1, "", "angle"], [121, 3, 1, "", "any"], [122, 3, 1, "", "apply_"], [123, 3, 1, "", "arccos"], [124, 3, 1, "", "arccos_"], [125, 3, 1, "", "arccosh"], [126, 3, 1, "", "arccosh_"], [127, 3, 1, "", "arcsin"], [128, 3, 1, "", "arcsin_"], [129, 3, 1, "", "arcsinh"], [130, 3, 1, "", "arcsinh_"], [131, 3, 1, "", "arctan"], [132, 3, 1, "", "arctan2"], [133, 3, 1, "", "arctan2_"], [134, 3, 1, "", "arctan_"], [135, 3, 1, "", "arctanh"], [136, 3, 1, "", "arctanh_"], [137, 3, 1, "", "argmax"], [138, 3, 1, "", "argmin"], [139, 3, 1, "", "argsort"], [140, 3, 1, "", "argwhere"], [141, 3, 1, "", "as_strided"], [142, 3, 1, "", "as_subclass"], [143, 3, 1, "", "asin"], [144, 3, 1, "", "asin_"], [145, 3, 1, "", "asinh"], [146, 3, 1, "", "asinh_"], [147, 3, 1, "", "atan"], [148, 3, 1, "", "atan2"], [149, 3, 1, "", "atan2_"], [150, 3, 1, "", "atan_"], [151, 3, 1, "", "atanh"], [152, 3, 1, "", "atanh_"], [153, 3, 1, "", "backward"], [154, 3, 1, "", "baddbmm"], [155, 3, 1, "", "baddbmm_"], [156, 3, 1, "", "bernoulli"], [157, 3, 1, "", "bernoulli_"], [158, 3, 1, "", "bfloat16"], [159, 3, 1, "", "bincount"], [160, 3, 1, "", "bitwise_and"], [161, 3, 1, "", "bitwise_and_"], [162, 3, 1, "", "bitwise_left_shift"], [163, 3, 1, "", "bitwise_left_shift_"], [164, 3, 1, "", "bitwise_not"], [165, 3, 1, "", "bitwise_not_"], [166, 3, 1, "", "bitwise_or"], [167, 3, 1, "", "bitwise_or_"], [168, 3, 1, "", "bitwise_right_shift"], [169, 3, 1, "", "bitwise_right_shift_"], [170, 3, 1, "", "bitwise_xor"], [171, 3, 1, "", "bitwise_xor_"], [172, 3, 1, "", "bmm"], [173, 3, 1, "", "bool"], [174, 3, 1, "", "broadcast_to"], [175, 3, 1, "", "byte"], [176, 3, 1, "", "cauchy_"], [177, 3, 1, "", "ccol_indices"], [178, 3, 1, "", "cdouble"], [179, 3, 1, "", "ceil"], [180, 3, 1, "", "ceil_"], [181, 3, 1, "", "cfloat"], [182, 3, 1, "", "chalf"], [183, 3, 1, "", "char"], [184, 3, 1, "", "cholesky"], [185, 3, 1, "", "cholesky_inverse"], [186, 3, 1, "", "cholesky_solve"], [187, 3, 1, "", "chunk"], [188, 3, 1, "", "clamp"], [189, 3, 1, "", "clamp_"], [190, 3, 1, "", "clip"], [191, 3, 1, "", "clip_"], [192, 3, 1, "", "clone"], [193, 3, 1, "", "coalesce"], [194, 3, 1, "", "col_indices"], [195, 3, 1, "", "conj"], [196, 3, 1, "", "conj_physical"], [197, 3, 1, "", "conj_physical_"], [198, 3, 1, "", "contiguous"], [199, 3, 1, "", "copy_"], [200, 3, 1, "", "copysign"], [201, 3, 1, "", "copysign_"], [202, 3, 1, "", "corrcoef"], [203, 3, 1, "", "cos"], [204, 3, 1, "", "cos_"], [205, 3, 1, "", "cosh"], [206, 3, 1, "", "cosh_"], [207, 3, 1, "", "count_nonzero"], [208, 3, 1, "", "cov"], [209, 3, 1, "", "cpu"], [210, 3, 1, "", "cross"], [211, 3, 1, "", "crow_indices"], [212, 3, 1, "", "cuda"], [213, 3, 1, "", "cummax"], [214, 3, 1, "", "cummin"], [215, 3, 1, "", "cumprod"], [216, 3, 1, "", "cumprod_"], [217, 3, 1, "", "cumsum"], [218, 3, 1, "", "cumsum_"], [219, 3, 1, "", "data_ptr"], [220, 3, 1, "", "deg2rad"], [221, 3, 1, "", "dense_dim"], [222, 3, 1, "", "dequantize"], [223, 3, 1, "", "det"], [224, 3, 1, "", "detach"], [225, 3, 1, "", "detach_"], [226, 2, 1, "", "device"], [227, 3, 1, "", "diag"], [228, 3, 1, "", "diag_embed"], [229, 3, 1, "", "diagflat"], [230, 3, 1, "", "diagonal"], [231, 3, 1, "", "diagonal_scatter"], [232, 3, 1, "", "diff"], [233, 3, 1, "", "digamma"], [234, 3, 1, "", "digamma_"], [235, 3, 1, "", "dim"], [236, 3, 1, "", "dist"], [237, 3, 1, "", "div"], [238, 3, 1, "", "div_"], [239, 3, 1, "", "divide"], [240, 3, 1, "", "divide_"], [241, 3, 1, "", "dot"], [242, 3, 1, "", "double"], [243, 3, 1, "", "dsplit"], [244, 3, 1, "", "element_size"], [245, 3, 1, "", "eq"], [246, 3, 1, "", "eq_"], [247, 3, 1, "", "equal"], [248, 3, 1, "", "erf"], [249, 3, 1, "", "erf_"], [250, 3, 1, "", "erfc"], [251, 3, 1, "", "erfc_"], [252, 3, 1, "", "erfinv"], [253, 3, 1, "", "erfinv_"], [254, 3, 1, "", "exp"], [255, 3, 1, "", "exp_"], [256, 3, 1, "", "expand"], [257, 3, 1, "", "expand_as"], [258, 3, 1, "", "expm1"], [259, 3, 1, "", "expm1_"], [260, 3, 1, "", "exponential_"], [261, 3, 1, "", "fill_"], [262, 3, 1, "", "fill_diagonal_"], [263, 3, 1, "", "fix"], [264, 3, 1, "", "fix_"], [265, 3, 1, "", "flatten"], [266, 3, 1, "", "flip"], [267, 3, 1, "", "fliplr"], [268, 3, 1, "", "flipud"], [269, 3, 1, "", "float"], [270, 3, 1, "", "float_power"], [271, 3, 1, "", "float_power_"], [272, 3, 1, "", "floor"], [273, 3, 1, "", "floor_"], [274, 3, 1, "", "floor_divide"], [275, 3, 1, "", "floor_divide_"], [276, 3, 1, "", "fmax"], [277, 3, 1, "", "fmin"], [278, 3, 1, "", "fmod"], [279, 3, 1, "", "fmod_"], [280, 3, 1, "", "frac"], [281, 3, 1, "", "frac_"], [282, 3, 1, "", "frexp"], [283, 3, 1, "", "gather"], [284, 3, 1, "", "gcd"], [285, 3, 1, "", "gcd_"], [286, 3, 1, "", "ge"], [287, 3, 1, "", "ge_"], [288, 3, 1, "", "geometric_"], [289, 3, 1, "", "geqrf"], [290, 3, 1, "", "ger"], [291, 3, 1, "", "get_device"], [292, 2, 1, "", "grad"], [293, 3, 1, "", "greater"], [294, 3, 1, "", "greater_"], [295, 3, 1, "", "greater_equal"], [296, 3, 1, "", "greater_equal_"], [297, 3, 1, "", "gt"], [298, 3, 1, "", "gt_"], [299, 3, 1, "", "half"], [300, 3, 1, "", "hardshrink"], [301, 3, 1, "", "heaviside"], [302, 3, 1, "", "histc"], [303, 3, 1, "", "histogram"], [304, 3, 1, "", "hsplit"], [305, 3, 1, "", "hypot"], [306, 3, 1, "", "hypot_"], [307, 3, 1, "", "i0"], [308, 3, 1, "", "i0_"], [309, 3, 1, "", "igamma"], [310, 3, 1, "", "igamma_"], [311, 3, 1, "", "igammac"], [312, 3, 1, "", "igammac_"], [313, 2, 1, "", "imag"], [314, 3, 1, "", "index_add"], [315, 3, 1, "", "index_add_"], [316, 3, 1, "", "index_copy"], [317, 3, 1, "", "index_copy_"], [318, 3, 1, "", "index_fill"], [319, 3, 1, "", "index_fill_"], [320, 3, 1, "", "index_put"], [321, 3, 1, "", "index_put_"], [322, 3, 1, "", "index_reduce"], [323, 3, 1, "", "index_reduce_"], [324, 3, 1, "", "index_select"], [325, 3, 1, "", "indices"], [326, 3, 1, "", "inner"], [327, 3, 1, "", "int"], [328, 3, 1, "", "int_repr"], [329, 3, 1, "", "inverse"], [330, 3, 1, "", "is_coalesced"], [331, 3, 1, "", "is_complex"], [332, 3, 1, "", "is_conj"], [333, 3, 1, "", "is_contiguous"], [334, 2, 1, "", "is_cuda"], [335, 3, 1, "", "is_floating_point"], [336, 3, 1, "", "is_inference"], [337, 2, 1, "", "is_leaf"], [338, 2, 1, "", "is_meta"], [339, 3, 1, "", "is_pinned"], [340, 2, 1, "", "is_quantized"], [341, 3, 1, "", "is_set_to"], [342, 3, 1, "", "is_shared"], [343, 3, 1, "", "is_signed"], [344, 2, 1, "", "is_sparse"], [345, 2, 1, "", "is_sparse_csr"], [346, 3, 1, "", "isclose"], [347, 3, 1, "", "isfinite"], [348, 3, 1, "", "isinf"], [349, 3, 1, "", "isnan"], [350, 3, 1, "", "isneginf"], [351, 3, 1, "", "isposinf"], [352, 3, 1, "", "isreal"], [353, 3, 1, "", "istft"], [354, 3, 1, "", "item"], [355, 2, 1, "", "itemsize"], [356, 3, 1, "", "kthvalue"], [357, 3, 1, "", "lcm"], [358, 3, 1, "", "lcm_"], [359, 3, 1, "", "ldexp"], [360, 3, 1, "", "ldexp_"], [361, 3, 1, "", "le"], [362, 3, 1, "", "le_"], [363, 3, 1, "", "lerp"], [364, 3, 1, "", "lerp_"], [365, 3, 1, "", "less"], [366, 3, 1, "", "less_"], [367, 3, 1, "", "less_equal"], [368, 3, 1, "", "less_equal_"], [369, 3, 1, "", "lgamma"], [370, 3, 1, "", "lgamma_"], [371, 3, 1, "", "log"], [372, 3, 1, "", "log10"], [373, 3, 1, "", "log10_"], [374, 3, 1, "", "log1p"], [375, 3, 1, "", "log1p_"], [376, 3, 1, "", "log2"], [377, 3, 1, "", "log2_"], [378, 3, 1, "", "log_"], [379, 3, 1, "", "log_normal_"], [380, 3, 1, "", "logaddexp"], [381, 3, 1, "", "logaddexp2"], [382, 3, 1, "", "logcumsumexp"], [383, 3, 1, "", "logdet"], [384, 3, 1, "", "logical_and"], [385, 3, 1, "", "logical_and_"], [386, 3, 1, "", "logical_not"], [387, 3, 1, "", "logical_not_"], [388, 3, 1, "", "logical_or"], [389, 3, 1, "", "logical_or_"], [390, 3, 1, "", "logical_xor"], [391, 3, 1, "", "logical_xor_"], [392, 3, 1, "", "logit"], [393, 3, 1, "", "logit_"], [394, 3, 1, "", "logsumexp"], [395, 3, 1, "", "long"], [396, 3, 1, "", "lt"], [397, 3, 1, "", "lt_"], [398, 3, 1, "", "lu"], [399, 3, 1, "", "lu_solve"], [1931, 2, 1, "", "mH"], [1931, 2, 1, "", "mT"], [400, 3, 1, "", "map_"], [401, 3, 1, "", "masked_fill"], [402, 3, 1, "", "masked_fill_"], [403, 3, 1, "", "masked_scatter"], [404, 3, 1, "", "masked_scatter_"], [405, 3, 1, "", "masked_select"], [406, 3, 1, "", "matmul"], [407, 3, 1, "", "matrix_exp"], [408, 3, 1, "", "matrix_power"], [409, 3, 1, "", "max"], [410, 3, 1, "", "maximum"], [411, 3, 1, "", "mean"], [412, 3, 1, "", "median"], [413, 3, 1, "", "min"], [414, 3, 1, "", "minimum"], [415, 3, 1, "", "mm"], [416, 3, 1, "", "mode"], [417, 3, 1, "", "moveaxis"], [418, 3, 1, "", "movedim"], [419, 3, 1, "", "msort"], [420, 3, 1, "", "mul"], [421, 3, 1, "", "mul_"], [422, 3, 1, "", "multinomial"], [423, 3, 1, "", "multiply"], [424, 3, 1, "", "multiply_"], [425, 3, 1, "", "mv"], [426, 3, 1, "", "mvlgamma"], [427, 3, 1, "", "mvlgamma_"], [1885, 2, 1, "", "names"], [428, 3, 1, "", "nan_to_num"], [429, 3, 1, "", "nan_to_num_"], [430, 3, 1, "", "nanmean"], [431, 3, 1, "", "nanmedian"], [432, 3, 1, "", "nanquantile"], [433, 3, 1, "", "nansum"], [434, 3, 1, "", "narrow"], [435, 3, 1, "", "narrow_copy"], [436, 2, 1, "", "nbytes"], [437, 2, 1, "", "ndim"], [438, 3, 1, "", "ndimension"], [439, 3, 1, "", "ne"], [440, 3, 1, "", "ne_"], [441, 3, 1, "", "neg"], [442, 3, 1, "", "neg_"], [443, 3, 1, "", "negative"], [444, 3, 1, "", "negative_"], [445, 3, 1, "", "nelement"], [446, 3, 1, "", "new_empty"], [447, 3, 1, "", "new_full"], [448, 3, 1, "", "new_ones"], [449, 3, 1, "", "new_tensor"], [450, 3, 1, "", "new_zeros"], [451, 3, 1, "", "nextafter"], [452, 3, 1, "", "nextafter_"], [453, 3, 1, "", "nonzero"], [454, 3, 1, "", "norm"], [455, 3, 1, "", "normal_"], [456, 3, 1, "", "not_equal"], [457, 3, 1, "", "not_equal_"], [458, 3, 1, "", "numel"], [459, 3, 1, "", "numpy"], [460, 3, 1, "", "orgqr"], [461, 3, 1, "", "ormqr"], [462, 3, 1, "", "outer"], [463, 3, 1, "", "permute"], [464, 3, 1, "", "pin_memory"], [465, 3, 1, "", "pinverse"], [466, 3, 1, "", "polygamma"], [467, 3, 1, "", "polygamma_"], [468, 3, 1, "", "positive"], [469, 3, 1, "", "pow"], [470, 3, 1, "", "pow_"], [471, 3, 1, "", "prod"], [472, 3, 1, "", "put_"], [473, 3, 1, "", "q_per_channel_axis"], [474, 3, 1, "", "q_per_channel_scales"], [475, 3, 1, "", "q_per_channel_zero_points"], [476, 3, 1, "", "q_scale"], [477, 3, 1, "", "q_zero_point"], [478, 3, 1, "", "qr"], [479, 3, 1, "", "qscheme"], [480, 3, 1, "", "quantile"], [481, 3, 1, "", "rad2deg"], [482, 3, 1, "", "random_"], [483, 3, 1, "", "ravel"], [484, 2, 1, "", "real"], [485, 3, 1, "", "reciprocal"], [486, 3, 1, "", "reciprocal_"], [487, 3, 1, "", "record_stream"], [1885, 3, 1, "", "refine_names"], [488, 3, 1, "", "register_hook"], [489, 3, 1, "", "remainder"], [490, 3, 1, "", "remainder_"], [1885, 3, 1, "", "rename"], [1885, 3, 1, "", "rename_"], [491, 3, 1, "", "renorm"], [492, 3, 1, "", "renorm_"], [493, 3, 1, "", "repeat"], [494, 3, 1, "", "repeat_interleave"], [495, 2, 1, "", "requires_grad"], [496, 3, 1, "", "requires_grad_"], [497, 3, 1, "", "reshape"], [498, 3, 1, "", "reshape_as"], [499, 3, 1, "", "resize_"], [500, 3, 1, "", "resize_as_"], [501, 3, 1, "", "resolve_conj"], [502, 3, 1, "", "resolve_neg"], [503, 3, 1, "", "retain_grad"], [504, 2, 1, "", "retains_grad"], [505, 3, 1, "", "roll"], [506, 3, 1, "", "rot90"], [507, 3, 1, "", "round"], [508, 3, 1, "", "round_"], [509, 3, 1, "", "row_indices"], [510, 3, 1, "", "rsqrt"], [511, 3, 1, "", "rsqrt_"], [512, 3, 1, "", "scatter"], [513, 3, 1, "", "scatter_"], [514, 3, 1, "", "scatter_add"], [515, 3, 1, "", "scatter_add_"], [516, 3, 1, "", "scatter_reduce"], [517, 3, 1, "", "scatter_reduce_"], [518, 3, 1, "", "select"], [519, 3, 1, "", "select_scatter"], [520, 3, 1, "", "set_"], [521, 3, 1, "", "sgn"], [522, 3, 1, "", "sgn_"], [523, 3, 1, "", "share_memory_"], [524, 3, 1, "", "short"], [525, 3, 1, "", "sigmoid"], [526, 3, 1, "", "sigmoid_"], [527, 3, 1, "", "sign"], [528, 3, 1, "", "sign_"], [529, 3, 1, "", "signbit"], [530, 3, 1, "", "sin"], [531, 3, 1, "", "sin_"], [532, 3, 1, "", "sinc"], [533, 3, 1, "", "sinc_"], [534, 3, 1, "", "sinh"], [535, 3, 1, "", "sinh_"], [536, 3, 1, "", "size"], [537, 3, 1, "", "slice_scatter"], [538, 3, 1, "", "slogdet"], [539, 3, 1, "", "smm"], [540, 3, 1, "", "softmax"], [541, 3, 1, "", "sort"], [542, 3, 1, "", "sparse_dim"], [543, 3, 1, "", "sparse_mask"], [544, 3, 1, "", "sparse_resize_"], [545, 3, 1, "", "sparse_resize_and_clear_"], [546, 3, 1, "", "split"], [547, 3, 1, "", "sqrt"], [548, 3, 1, "", "sqrt_"], [549, 3, 1, "", "square"], [550, 3, 1, "", "square_"], [551, 3, 1, "", "squeeze"], [552, 3, 1, "", "squeeze_"], [553, 3, 1, "", "sspaddmm"], [554, 3, 1, "", "std"], [555, 3, 1, "", "stft"], [556, 3, 1, "", "storage"], [557, 3, 1, "", "storage_offset"], [558, 3, 1, "", "storage_type"], [559, 3, 1, "", "stride"], [560, 3, 1, "", "sub"], [561, 3, 1, "", "sub_"], [562, 3, 1, "", "subtract"], [563, 3, 1, "", "subtract_"], [564, 3, 1, "", "sum"], [565, 3, 1, "", "sum_to_size"], [566, 3, 1, "", "svd"], [567, 3, 1, "", "swapaxes"], [568, 3, 1, "", "swapdims"], [569, 3, 1, "", "t"], [570, 3, 1, "", "t_"], [571, 3, 1, "", "take"], [572, 3, 1, "", "take_along_dim"], [573, 3, 1, "", "tan"], [574, 3, 1, "", "tan_"], [575, 3, 1, "", "tanh"], [576, 3, 1, "", "tanh_"], [577, 3, 1, "", "tensor_split"], [578, 3, 1, "", "tile"], [579, 3, 1, "", "to"], [580, 3, 1, "", "to_dense"], [581, 3, 1, "", "to_mkldnn"], [582, 3, 1, "", "to_sparse"], [583, 3, 1, "", "to_sparse_bsc"], [584, 3, 1, "", "to_sparse_bsr"], [585, 3, 1, "", "to_sparse_coo"], [586, 3, 1, "", "to_sparse_csc"], [587, 3, 1, "", "to_sparse_csr"], [588, 3, 1, "", "tolist"], [589, 3, 1, "", "topk"], [590, 3, 1, "", "trace"], [591, 3, 1, "", "transpose"], [592, 3, 1, "", "transpose_"], [593, 3, 1, "", "triangular_solve"], [594, 3, 1, "", "tril"], [595, 3, 1, "", "tril_"], [596, 3, 1, "", "triu"], [597, 3, 1, "", "triu_"], [598, 3, 1, "", "true_divide"], [599, 3, 1, "", "true_divide_"], [600, 3, 1, "", "trunc"], [601, 3, 1, "", "trunc_"], [602, 3, 1, "", "type"], [603, 3, 1, "", "type_as"], [604, 3, 1, "", "unbind"], [605, 3, 1, "", "unflatten"], [606, 3, 1, "", "unfold"], [607, 3, 1, "", "uniform_"], [608, 3, 1, "", "unique"], [609, 3, 1, "", "unique_consecutive"], [610, 3, 1, "", "unsqueeze"], [611, 3, 1, "", "unsqueeze_"], [612, 3, 1, "", "untyped_storage"], [613, 3, 1, "", "values"], [614, 3, 1, "", "var"], [615, 3, 1, "", "vdot"], [616, 3, 1, "", "view"], [617, 3, 1, "", "view_as"], [618, 3, 1, "", "vsplit"], [619, 3, 1, "", "where"], [620, 3, 1, "", "xlogy"], [621, 3, 1, "", "xlogy_"], [622, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1927, 3, 1, "", "bfloat16"], [1927, 3, 1, "", "bool"], [1927, 3, 1, "", "byte"], [1927, 3, 1, "", "char"], [1927, 3, 1, "", "clone"], [1927, 3, 1, "", "complex_double"], [1927, 3, 1, "", "complex_float"], [1927, 3, 1, "", "copy_"], [1927, 3, 1, "", "cpu"], [1927, 3, 1, "", "cuda"], [1927, 3, 1, "", "data_ptr"], [1927, 4, 1, "", "device"], [1927, 3, 1, "", "double"], [1927, 2, 1, "", "dtype"], [1927, 3, 1, "", "element_size"], [1927, 3, 1, "", "fill_"], [1927, 3, 1, "", "float"], [1927, 3, 1, "", "from_buffer"], [1927, 3, 1, "", "from_file"], [1927, 3, 1, "", "get_device"], [1927, 3, 1, "", "half"], [1927, 3, 1, "", "hpu"], [1927, 3, 1, "", "int"], [1927, 4, 1, "", "is_cuda"], [1927, 4, 1, "", "is_hpu"], [1927, 3, 1, "", "is_pinned"], [1927, 3, 1, "", "is_shared"], [1927, 2, 1, "", "is_sparse"], [1927, 3, 1, "", "long"], [1927, 3, 1, "", "nbytes"], [1927, 3, 1, "", "pickle_storage_type"], [1927, 3, 1, "", "pin_memory"], [1927, 3, 1, "", "resize_"], [1927, 3, 1, "", "share_memory_"], [1927, 3, 1, "", "short"], [1927, 3, 1, "", "size"], [1927, 3, 1, "", "tolist"], [1927, 3, 1, "", "type"], [1927, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1927, 3, 1, "", "bfloat16"], [1927, 3, 1, "", "bool"], [1927, 3, 1, "", "byte"], [1927, 3, 1, "", "byteswap"], [1927, 3, 1, "", "char"], [1927, 3, 1, "", "clone"], [1927, 3, 1, "", "complex_double"], [1927, 3, 1, "", "complex_float"], [1927, 3, 1, "", "copy_"], [1927, 3, 1, "", "cpu"], [1927, 3, 1, "", "cuda"], [1927, 3, 1, "", "data_ptr"], [1927, 2, 1, "", "device"], [1927, 3, 1, "", "double"], [1927, 3, 1, "", "element_size"], [1927, 3, 1, "", "fill_"], [1927, 3, 1, "", "float"], [1927, 3, 1, "", "from_buffer"], [1927, 3, 1, "", "from_file"], [1927, 3, 1, "", "get_device"], [1927, 3, 1, "", "half"], [1927, 3, 1, "", "hpu"], [1927, 3, 1, "", "int"], [1927, 4, 1, "", "is_cuda"], [1927, 4, 1, "", "is_hpu"], [1927, 3, 1, "", "is_pinned"], [1927, 3, 1, "", "is_shared"], [1927, 2, 1, "", "is_sparse"], [1927, 2, 1, "", "is_sparse_csr"], [1927, 3, 1, "", "long"], [1927, 3, 1, "", "mps"], [1927, 3, 1, "", "nbytes"], [1927, 3, 1, "", "new"], [1927, 3, 1, "", "pin_memory"], [1927, 3, 1, "", "resize_"], [1927, 3, 1, "", "share_memory_"], [1927, 3, 1, "", "short"], [1927, 3, 1, "", "size"], [1927, 3, 1, "", "tolist"], [1927, 3, 1, "", "type"], [1927, 3, 1, "", "untyped"]], "torch.__config__": [[32, 5, 1, "", "parallel_info"], [32, 5, 1, "", "show"]], "torch._logging": [[679, 5, 1, "", "set_logs"]], "torch.ao": [[1916, 0, 0, "-", "nn"], [1916, 0, 0, "-", "ns"], [1916, 0, 0, "-", "pruning"], [1916, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1919, 0, 0, "-", "intrinsic"], [1919, 0, 0, "-", "qat"], [1916, 0, 0, "-", "quantizable"], [1916, 0, 0, "-", "quantized"], [1916, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[699, 1, 1, "", "BNReLU2d"], [700, 1, 1, "", "BNReLU3d"], [701, 1, 1, "", "ConvBn1d"], [702, 1, 1, "", "ConvBn2d"], [703, 1, 1, "", "ConvBn3d"], [704, 1, 1, "", "ConvBnReLU1d"], [705, 1, 1, "", "ConvBnReLU2d"], [706, 1, 1, "", "ConvBnReLU3d"], [707, 1, 1, "", "ConvReLU1d"], [708, 1, 1, "", "ConvReLU2d"], [709, 1, 1, "", "ConvReLU3d"], [710, 1, 1, "", "LinearReLU"], [1919, 0, 0, "-", "modules"], [1919, 0, 0, "-", "qat"], [1919, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[711, 1, 1, "", "ConvBn1d"], [712, 1, 1, "", "ConvBn2d"], [713, 1, 1, "", "ConvBn3d"], [714, 1, 1, "", "ConvBnReLU1d"], [715, 1, 1, "", "ConvBnReLU2d"], [716, 1, 1, "", "ConvBnReLU3d"], [717, 1, 1, "", "ConvReLU2d"], [718, 1, 1, "", "ConvReLU3d"], [719, 1, 1, "", "LinearReLU"], [720, 1, 1, "", "freeze_bn_stats"], [1919, 0, 0, "-", "modules"], [721, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[722, 1, 1, "", "BNReLU2d"], [723, 1, 1, "", "BNReLU3d"], [724, 1, 1, "", "ConvReLU1d"], [725, 1, 1, "", "ConvReLU2d"], [726, 1, 1, "", "ConvReLU3d"], [727, 1, 1, "", "LinearReLU"], [1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[728, 1, 1, "", "LinearReLU"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[729, 1, 1, "", "Conv2d"], [730, 1, 1, "", "Conv3d"], [731, 1, 1, "", "Linear"], [1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[731, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[732, 1, 1, "", "Linear"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[733, 1, 1, "", "LSTM"], [734, 1, 1, "", "MultiheadAttention"], [1916, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[734, 3, 1, "", "dequantize"], [734, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[735, 1, 1, "", "BatchNorm2d"], [736, 1, 1, "", "BatchNorm3d"], [737, 1, 1, "", "Conv1d"], [738, 1, 1, "", "Conv2d"], [739, 1, 1, "", "Conv3d"], [740, 1, 1, "", "ConvTranspose1d"], [741, 1, 1, "", "ConvTranspose2d"], [742, 1, 1, "", "ConvTranspose3d"], [743, 1, 1, "", "ELU"], [744, 1, 1, "", "Embedding"], [745, 1, 1, "", "EmbeddingBag"], [746, 1, 1, "", "FXFloatFunctional"], [747, 1, 1, "", "FloatFunctional"], [748, 1, 1, "", "GroupNorm"], [749, 1, 1, "", "Hardswish"], [750, 1, 1, "", "InstanceNorm1d"], [751, 1, 1, "", "InstanceNorm2d"], [752, 1, 1, "", "InstanceNorm3d"], [753, 1, 1, "", "LayerNorm"], [754, 1, 1, "", "LeakyReLU"], [755, 1, 1, "", "Linear"], [756, 1, 1, "", "QFunctional"], [757, 1, 1, "", "ReLU6"], [758, 1, 1, "", "Sigmoid"], [1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "functional"], [1919, 0, 0, "-", "modules"], [1916, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[737, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[738, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[739, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[744, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[745, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[755, 3, 1, "", "from_float"], [755, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[759, 1, 1, "", "GRU"], [760, 1, 1, "", "GRUCell"], [761, 1, 1, "", "LSTM"], [762, 1, 1, "", "LSTMCell"], [763, 1, 1, "", "Linear"], [764, 1, 1, "", "RNNCell"], [1919, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[763, 3, 1, "", "from_float"], [763, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[765, 1, 1, "", "adaptive_avg_pool2d"], [766, 1, 1, "", "adaptive_avg_pool3d"], [767, 1, 1, "", "avg_pool2d"], [768, 1, 1, "", "avg_pool3d"], [769, 1, 1, "", "celu"], [770, 1, 1, "", "clamp"], [771, 1, 1, "", "conv1d"], [772, 1, 1, "", "conv2d"], [773, 1, 1, "", "conv3d"], [774, 1, 1, "", "elu"], [775, 1, 1, "", "hardsigmoid"], [776, 1, 1, "", "hardswish"], [777, 1, 1, "", "hardtanh"], [778, 1, 1, "", "interpolate"], [779, 1, 1, "", "leaky_relu"], [780, 1, 1, "", "linear"], [781, 1, 1, "", "max_pool1d"], [782, 1, 1, "", "max_pool2d"], [783, 1, 1, "", "threshold"], [784, 1, 1, "", "upsample"], [785, 1, 1, "", "upsample_bilinear"], [786, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1916, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1916, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1916, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1934, 0, 0, "-", "_numeric_suite"], [1935, 0, 0, "-", "_numeric_suite_fx"], [1916, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1934, 1, 1, "", "Logger"], [1934, 1, 1, "", "OutputLogger"], [1934, 1, 1, "", "Shadow"], [1934, 1, 1, "", "ShadowLogger"], [1934, 5, 1, "", "compare_model_outputs"], [1934, 5, 1, "", "compare_model_stub"], [1934, 5, 1, "", "compare_weights"], [1934, 5, 1, "", "get_logger_dict"], [1934, 5, 1, "", "get_matching_activations"], [1934, 5, 1, "", "prepare_model_outputs"], [1934, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1934, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1934, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1934, 3, 1, "", "add"], [1934, 3, 1, "", "add_relu"], [1934, 3, 1, "", "add_scalar"], [1934, 3, 1, "", "cat"], [1934, 3, 1, "", "forward"], [1934, 3, 1, "", "mul"], [1934, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1934, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1935, 1, 1, "", "NSTracer"], [1935, 1, 1, "", "OutputComparisonLogger"], [1935, 1, 1, "", "OutputLogger"], [1935, 5, 1, "", "add_loggers"], [1935, 5, 1, "", "add_shadow_loggers"], [1935, 5, 1, "", "convert_n_shadows_model"], [1935, 5, 1, "", "extend_logger_results_with_comparison"], [1935, 5, 1, "", "extract_logger_info"], [1935, 5, 1, "", "extract_results_n_shadows_model"], [1935, 5, 1, "", "extract_shadow_logger_info"], [1935, 5, 1, "", "extract_weights"], [1935, 5, 1, "", "loggers_set_enabled"], [1935, 5, 1, "", "loggers_set_save_activations"], [1935, 5, 1, "", "prepare_n_shadows_model"], [1935, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1935, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1935, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1935, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1935, 5, 1, "", "compute_cosine_similarity"], [1935, 5, 1, "", "compute_normalized_l2_error"], [1935, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1916, 0, 0, "-", "scheduler"], [1916, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[787, 1, 1, "", "DeQuantStub"], [788, 1, 1, "", "QuantStub"], [789, 1, 1, "", "QuantWrapper"], [790, 1, 1, "", "add_quant_dequant"], [1916, 0, 0, "-", "backend_config"], [796, 1, 1, "", "convert"], [797, 1, 1, "", "default_eval_fn"], [813, 1, 1, "", "fuse_modules"], [1916, 0, 0, "-", "fx"], [837, 1, 1, "", "prepare"], [838, 1, 1, "", "prepare_qat"], [839, 1, 1, "", "propagate_qconfig_"], [856, 1, 1, "", "quantize"], [857, 1, 1, "", "quantize_dynamic"], [862, 1, 1, "", "quantize_qat"], [863, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[791, 1, 1, "", "BackendConfig"], [792, 1, 1, "", "BackendPatternConfig"], [793, 1, 1, "", "DTypeConfig"], [794, 1, 1, "", "DTypeWithConstraints"], [795, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[791, 4, 1, "", "configs"], [791, 3, 1, "", "from_dict"], [791, 3, 1, "", "set_backend_pattern_config"], [791, 3, 1, "", "set_backend_pattern_configs"], [791, 3, 1, "", "set_name"], [791, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[792, 3, 1, "", "add_dtype_config"], [792, 3, 1, "", "from_dict"], [792, 3, 1, "", "set_dtype_configs"], [792, 3, 1, "", "set_fused_module"], [792, 3, 1, "", "set_fuser_method"], [792, 3, 1, "", "set_observation_type"], [792, 3, 1, "", "set_pattern"], [792, 3, 1, "", "set_qat_module"], [792, 3, 1, "", "set_reference_quantized_module"], [792, 3, 1, "", "set_root_module"], [792, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[793, 3, 1, "", "from_dict"], [793, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[795, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [795, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [795, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[798, 1, 1, "", "FakeQuantize"], [799, 1, 1, "", "FakeQuantizeBase"], [800, 1, 1, "", "FixedQParamsFakeQuantize"], [801, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [802, 2, 1, "", "default_fake_quant"], [803, 2, 1, "", "default_fused_act_fake_quant"], [804, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [805, 2, 1, "", "default_fused_wt_fake_quant"], [806, 2, 1, "", "default_histogram_fake_quant"], [807, 2, 1, "", "default_per_channel_weight_fake_quant"], [808, 2, 1, "", "default_weight_fake_quant"], [809, 1, 1, "", "disable_fake_quant"], [810, 1, 1, "", "disable_observer"], [811, 1, 1, "", "enable_fake_quant"], [812, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[814, 1, 1, "", "ConvertCustomConfig"], [815, 1, 1, "", "FuseCustomConfig"], [816, 1, 1, "", "PrepareCustomConfig"], [817, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[814, 3, 1, "", "from_dict"], [814, 3, 1, "", "set_observed_to_quantized_mapping"], [814, 3, 1, "", "set_preserved_attributes"], [814, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[815, 3, 1, "", "from_dict"], [815, 3, 1, "", "set_preserved_attributes"], [815, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[816, 3, 1, "", "from_dict"], [816, 3, 1, "", "set_float_to_observed_mapping"], [816, 3, 1, "", "set_input_quantized_indexes"], [816, 3, 1, "", "set_non_traceable_module_classes"], [816, 3, 1, "", "set_non_traceable_module_names"], [816, 3, 1, "", "set_output_quantized_indexes"], [816, 3, 1, "", "set_preserved_attributes"], [816, 3, 1, "", "set_standalone_module_class"], [816, 3, 1, "", "set_standalone_module_name"], [816, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[818, 1, 1, "", "HistogramObserver"], [819, 1, 1, "", "MinMaxObserver"], [820, 1, 1, "", "MovingAverageMinMaxObserver"], [821, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [822, 1, 1, "", "NoopObserver"], [823, 1, 1, "", "ObserverBase"], [824, 1, 1, "", "PerChannelMinMaxObserver"], [825, 1, 1, "", "PlaceholderObserver"], [826, 1, 1, "", "RecordingObserver"], [827, 2, 1, "", "default_debug_observer"], [828, 2, 1, "", "default_dynamic_quant_observer"], [829, 2, 1, "", "default_float_qparams_observer"], [830, 2, 1, "", "default_histogram_observer"], [831, 2, 1, "", "default_observer"], [832, 2, 1, "", "default_per_channel_weight_observer"], [833, 2, 1, "", "default_placeholder_observer"], [834, 2, 1, "", "default_weight_observer"], [835, 1, 1, "", "get_observer_state_dict"], [836, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[819, 3, 1, "", "calculate_qparams"], [819, 3, 1, "", "forward"], [819, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[823, 3, 1, "", "with_args"], [823, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[824, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.qconfig": [[840, 1, 1, "", "QConfig"], [841, 2, 1, "", "default_activation_only_qconfig"], [842, 2, 1, "", "default_debug_qconfig"], [843, 2, 1, "", "default_dynamic_qconfig"], [844, 2, 1, "", "default_per_channel_qconfig"], [845, 2, 1, "", "default_qat_qconfig"], [846, 2, 1, "", "default_qat_qconfig_v2"], [847, 2, 1, "", "default_qconfig"], [848, 2, 1, "", "default_weight_only_qconfig"], [849, 2, 1, "", "float16_dynamic_qconfig"], [850, 2, 1, "", "float16_static_qconfig"], [851, 2, 1, "", "float_qparams_weight_only_qconfig"], [852, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[853, 1, 1, "", "QConfigMapping"], [854, 1, 1, "", "get_default_qat_qconfig_mapping"], [855, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[853, 3, 1, "", "from_dict"], [853, 3, 1, "", "set_global"], [853, 3, 1, "", "set_module_name"], [853, 3, 1, "", "set_module_name_object_type_order"], [853, 3, 1, "", "set_module_name_regex"], [853, 3, 1, "", "set_object_type"], [853, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[858, 1, 1, "", "convert_fx"], [859, 1, 1, "", "fuse_fx"], [860, 1, 1, "", "prepare_fx"], [861, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[1, 1, 1, "", "Function"], [892, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [906, 5, 1, "", "grad"], [907, 5, 1, "", "gradcheck"], [908, 5, 1, "", "gradgradcheck"], [1, 1, 1, "", "set_detect_anomaly"], [919, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.Function": [[888, 3, 1, "", "backward"], [889, 3, 1, "", "forward"], [890, 3, 1, "", "jvp"], [891, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[893, 1, 1, "", "dual_level"], [894, 5, 1, "", "make_dual"], [895, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[896, 3, 1, "", "mark_dirty"], [897, 3, 1, "", "mark_non_differentiable"], [898, 3, 1, "", "save_for_backward"], [899, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[900, 5, 1, "", "hessian"], [901, 5, 1, "", "hvp"], [902, 5, 1, "", "jacobian"], [903, 5, 1, "", "jvp"], [904, 5, 1, "", "vhp"], [905, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[909, 3, 1, "", "metadata"], [910, 3, 1, "", "name"], [911, 4, 1, "", "next_functions"], [912, 3, 1, "", "register_hook"], [913, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [914, 5, 1, "", "load_nvprof"], [1, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[915, 3, 1, "", "export_chrome_trace"], [916, 3, 1, "", "key_averages"], [917, 4, 1, "", "self_cpu_time_total"], [918, 3, 1, "", "total_average"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPBackend"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "version"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.compiler": [[954, 5, 1, "", "allow_in_graph"], [955, 5, 1, "", "assume_constant_result"], [956, 5, 1, "", "compile"], [957, 5, 1, "", "disable"], [958, 5, 1, "", "list_backends"], [959, 5, 1, "", "reset"]], "torch.cpu": [[0, 0, 0, "-", "amp"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"]], "torch.cuda": [[972, 1, 1, "", "CUDAGraph"], [973, 1, 1, "", "CUDAPluggableAllocator"], [974, 1, 1, "", "Event"], [975, 1, 1, "", "ExternalStream"], [976, 6, 1, "", "OutOfMemoryError"], [977, 1, 1, "", "Stream"], [978, 1, 1, "", "StreamContext"], [36, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [979, 5, 1, "", "caching_allocator_alloc"], [980, 5, 1, "", "caching_allocator_delete"], [981, 5, 1, "", "can_device_access_peer"], [982, 5, 1, "", "change_current_allocator"], [983, 5, 1, "", "clock_rate"], [989, 5, 1, "", "current_blas_handle"], [990, 5, 1, "", "current_device"], [991, 5, 1, "", "current_stream"], [992, 5, 1, "", "default_stream"], [993, 1, 1, "", "device"], [994, 5, 1, "", "device_count"], [995, 1, 1, "", "device_of"], [996, 5, 1, "", "empty_cache"], [997, 5, 1, "", "get_allocator_backend"], [998, 5, 1, "", "get_arch_list"], [999, 5, 1, "", "get_device_capability"], [1000, 5, 1, "", "get_device_name"], [1001, 5, 1, "", "get_device_properties"], [1002, 5, 1, "", "get_gencode_flags"], [1003, 5, 1, "", "get_rng_state"], [1004, 5, 1, "", "get_rng_state_all"], [1005, 5, 1, "", "get_sync_debug_mode"], [1006, 1, 1, "", "graph"], [1007, 5, 1, "", "graph_pool_handle"], [1008, 5, 1, "", "init"], [1009, 5, 1, "", "initial_seed"], [1010, 5, 1, "", "ipc_collect"], [1011, 5, 1, "", "is_available"], [1012, 5, 1, "", "is_current_stream_capturing"], [1013, 5, 1, "", "is_initialized"], [1016, 5, 1, "", "list_gpu_processes"], [1017, 5, 1, "", "make_graphed_callables"], [1018, 5, 1, "", "manual_seed"], [1019, 5, 1, "", "manual_seed_all"], [1020, 5, 1, "", "max_memory_allocated"], [1021, 5, 1, "", "max_memory_cached"], [1022, 5, 1, "", "max_memory_reserved"], [1023, 5, 1, "", "mem_get_info"], [1024, 5, 1, "", "memory_allocated"], [1025, 5, 1, "", "memory_cached"], [1026, 5, 1, "", "memory_reserved"], [1027, 5, 1, "", "memory_snapshot"], [1028, 5, 1, "", "memory_stats"], [1029, 5, 1, "", "memory_summary"], [1030, 5, 1, "", "memory_usage"], [1034, 5, 1, "", "power_draw"], [1035, 5, 1, "", "reset_max_memory_allocated"], [1036, 5, 1, "", "reset_max_memory_cached"], [1037, 5, 1, "", "reset_peak_memory_stats"], [1038, 5, 1, "", "seed"], [1039, 5, 1, "", "seed_all"], [1040, 5, 1, "", "set_device"], [1041, 5, 1, "", "set_per_process_memory_fraction"], [1042, 5, 1, "", "set_rng_state"], [1043, 5, 1, "", "set_rng_state_all"], [1044, 5, 1, "", "set_stream"], [1045, 5, 1, "", "set_sync_debug_mode"], [1046, 5, 1, "", "stream"], [1047, 5, 1, "", "synchronize"], [1048, 5, 1, "", "temperature"], [1049, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[972, 3, 1, "", "capture_begin"], [972, 3, 1, "", "capture_end"], [972, 3, 1, "", "debug_dump"], [972, 3, 1, "", "enable_debug_mode"], [972, 3, 1, "", "pool"], [972, 3, 1, "", "replay"], [972, 3, 1, "", "reset"]], "torch.cuda.Event": [[974, 3, 1, "", "elapsed_time"], [974, 3, 1, "", "from_ipc_handle"], [974, 3, 1, "", "ipc_handle"], [974, 3, 1, "", "query"], [974, 3, 1, "", "record"], [974, 3, 1, "", "synchronize"], [974, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[975, 3, 1, "", "query"], [975, 3, 1, "", "record_event"], [975, 3, 1, "", "synchronize"], [975, 3, 1, "", "wait_event"], [975, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[977, 3, 1, "", "query"], [977, 3, 1, "", "record_event"], [977, 3, 1, "", "synchronize"], [977, 3, 1, "", "wait_event"], [977, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[36, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[0, 3, 1, "", "get_backoff_factor"], [0, 3, 1, "", "get_growth_factor"], [0, 3, 1, "", "get_growth_interval"], [0, 3, 1, "", "get_scale"], [0, 3, 1, "", "is_enabled"], [0, 3, 1, "", "load_state_dict"], [0, 3, 1, "", "scale"], [0, 3, 1, "", "set_backoff_factor"], [0, 3, 1, "", "set_growth_factor"], [0, 3, 1, "", "set_growth_interval"], [0, 3, 1, "", "state_dict"], [0, 3, 1, "", "step"], [0, 3, 1, "", "unscale_"], [0, 3, 1, "", "update"]], "torch.cuda.comm": [[984, 5, 1, "", "broadcast"], [985, 5, 1, "", "broadcast_coalesced"], [986, 5, 1, "", "gather"], [987, 5, 1, "", "reduce_add"], [988, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1014, 5, 1, "", "_create_jit_fn"], [1015, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.nvtx": [[1031, 5, 1, "", "mark"], [1032, 5, 1, "", "range_pop"], [1033, 5, 1, "", "range_push"]], "torch.distributed": [[42, 1, 1, "", "Backend"], [42, 1, 1, "", "DistBackendError"], [42, 1, 1, "", "FileStore"], [40, 1, 1, "", "GradBucket"], [42, 1, 1, "", "HashStore"], [42, 1, 1, "", "P2POp"], [42, 1, 1, "", "PrefixStore"], [42, 1, 1, "", "ReduceOp"], [42, 1, 1, "", "Store"], [42, 1, 1, "", "TCPStore"], [42, 0, 0, "-", "algorithms"], [42, 5, 1, "", "all_gather"], [42, 5, 1, "", "all_gather_into_tensor"], [42, 5, 1, "", "all_gather_multigpu"], [42, 5, 1, "", "all_gather_object"], [42, 5, 1, "", "all_reduce"], [42, 5, 1, "", "all_reduce_multigpu"], [42, 5, 1, "", "all_to_all"], [42, 5, 1, "", "all_to_all_single"], [1921, 0, 0, "-", "autograd"], [42, 5, 1, "", "barrier"], [42, 5, 1, "", "batch_isend_irecv"], [42, 5, 1, "", "broadcast"], [42, 5, 1, "", "broadcast_multigpu"], [42, 5, 1, "", "broadcast_object_list"], [44, 0, 0, "-", "checkpoint"], [42, 0, 0, "-", "elastic"], [64, 0, 0, "-", "fsdp"], [42, 5, 1, "", "gather"], [42, 5, 1, "", "gather_object"], [42, 5, 1, "", "get_backend"], [42, 5, 1, "", "get_global_rank"], [42, 5, 1, "", "get_group_rank"], [42, 5, 1, "", "get_process_group_ranks"], [42, 5, 1, "", "get_rank"], [42, 5, 1, "", "get_world_size"], [42, 5, 1, "", "init_process_group"], [42, 5, 1, "", "irecv"], [42, 5, 1, "", "is_available"], [42, 5, 1, "", "is_gloo_available"], [42, 5, 1, "", "is_initialized"], [42, 5, 1, "", "is_mpi_available"], [42, 5, 1, "", "is_nccl_available"], [42, 5, 1, "", "is_torchelastic_launched"], [42, 5, 1, "", "isend"], [42, 0, 0, "-", "launch"], [42, 0, 0, "-", "launcher"], [42, 5, 1, "", "monitored_barrier"], [42, 5, 1, "", "new_group"], [42, 0, 0, "-", "nn"], [46, 0, 0, "-", "optim"], [42, 0, 0, "-", "pipeline"], [42, 5, 1, "", "recv"], [42, 5, 1, "", "reduce"], [42, 5, 1, "", "reduce_multigpu"], [42, 1, 1, "", "reduce_op"], [42, 5, 1, "", "reduce_scatter"], [42, 5, 1, "", "reduce_scatter_multigpu"], [42, 5, 1, "", "reduce_scatter_tensor"], [1921, 0, 0, "-", "rpc"], [60, 0, 0, "-", "run"], [42, 5, 1, "", "scatter"], [42, 5, 1, "", "scatter_object_list"], [42, 5, 1, "", "send"], [42, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[42, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[40, 5, 1, "", "buffer"], [40, 5, 1, "", "gradients"], [40, 5, 1, "", "index"], [40, 5, 1, "", "is_last"], [40, 5, 1, "", "parameters"], [40, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[42, 5, 1, "", "add"], [42, 5, 1, "", "compare_set"], [42, 5, 1, "", "delete_key"], [42, 5, 1, "", "get"], [42, 5, 1, "", "num_keys"], [42, 5, 1, "", "set"], [42, 5, 1, "", "set_timeout"], [42, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[43, 1, 1, "", "Join"], [43, 1, 1, "", "JoinHook"], [43, 1, 1, "", "Joinable"], [42, 0, 0, "-", "ddp_comm_hooks"], [42, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[43, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[43, 3, 1, "", "main_hook"], [43, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[43, 4, 1, "", "join_device"], [43, 3, 1, "", "join_hook"], [43, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[40, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[40, 5, 1, "", "allreduce_hook"], [40, 5, 1, "", "bf16_compress_hook"], [40, 5, 1, "", "bf16_compress_wrapper"], [40, 5, 1, "", "fp16_compress_hook"], [40, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[40, 1, 1, "", "PowerSGDState"], [40, 5, 1, "", "batched_powerSGD_hook"], [40, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[40, 3, 1, "", "__getstate__"], [40, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1921, 5, 1, "", "backward"], [1921, 1, 1, "", "context"], [1921, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[44, 1, 1, "", "DefaultLoadPlanner"], [44, 1, 1, "", "DefaultSavePlanner"], [44, 1, 1, "", "FileSystemReader"], [44, 1, 1, "", "FileSystemWriter"], [44, 1, 1, "", "LoadPlan"], [44, 1, 1, "", "LoadPlanner"], [44, 1, 1, "", "ReadItem"], [44, 1, 1, "", "SavePlan"], [44, 1, 1, "", "SavePlanner"], [44, 1, 1, "", "StorageReader"], [44, 1, 1, "", "StorageWriter"], [44, 1, 1, "", "WriteItem"], [44, 5, 1, "", "load_state_dict"], [44, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[44, 3, 1, "", "lookup_tensor"], [44, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[44, 3, 1, "", "lookup_object"], [44, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[44, 3, 1, "", "commit_tensor"], [44, 3, 1, "", "create_global_plan"], [44, 3, 1, "", "create_local_plan"], [44, 3, 1, "", "finish_plan"], [44, 3, 1, "", "load_bytes"], [44, 3, 1, "", "resolve_tensor"], [44, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[44, 3, 1, "", "create_global_plan"], [44, 3, 1, "", "create_local_plan"], [44, 3, 1, "", "finish_plan"], [44, 3, 1, "", "resolve_data"], [44, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[44, 3, 1, "", "prepare_global_plan"], [44, 3, 1, "", "prepare_local_plan"], [44, 3, 1, "", "read_data"], [44, 3, 1, "", "read_metadata"], [44, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[44, 3, 1, "", "finish"], [44, 3, 1, "", "prepare_global_plan"], [44, 3, 1, "", "prepare_local_plan"], [44, 3, 1, "", "set_up_storage_writer"], [44, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[50, 0, 0, "-", "agent"], [53, 0, 0, "-", "events"], [56, 0, 0, "-", "metrics"], [57, 0, 0, "-", "multiprocessing"], [59, 0, 0, "-", "rendezvous"], [61, 0, 0, "-", "timer"], [42, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[50, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[50, 1, 1, "", "ElasticAgent"], [50, 1, 1, "", "SimpleElasticAgent"], [50, 1, 1, "", "Worker"], [50, 1, 1, "", "WorkerGroup"], [50, 1, 1, "", "WorkerSpec"], [50, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[50, 3, 1, "", "get_worker_group"], [50, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[50, 3, 1, "", "_assign_worker_ranks"], [50, 3, 1, "", "_exit_barrier"], [50, 3, 1, "", "_initialize_workers"], [50, 3, 1, "", "_monitor_workers"], [50, 3, 1, "", "_rendezvous"], [50, 3, 1, "", "_restart_workers"], [50, 3, 1, "", "_shutdown"], [50, 3, 1, "", "_start_workers"], [50, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[50, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[50, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[50, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[50, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[53, 1, 1, "", "Event"], [53, 2, 1, "", "EventMetadataValue"], [53, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[53, 5, 1, "", "get_logging_handler"], [53, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[56, 1, 1, "", "ConsoleMetricHandler"], [56, 1, 1, "", "MetricHandler"], [56, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[56, 5, 1, "", "configure"], [56, 5, 1, "", "prof"], [56, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[57, 1, 1, "", "MultiprocessContext"], [57, 1, 1, "", "PContext"], [57, 1, 1, "", "RunProcsResult"], [57, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[52, 0, 0, "-", "errors"], [57, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[52, 1, 1, "", "ChildFailedError"], [52, 1, 1, "", "ErrorHandler"], [52, 1, 1, "", "ProcessFailure"], [52, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[59, 1, 1, "", "RendezvousClosedError"], [59, 1, 1, "", "RendezvousConnectionError"], [59, 1, 1, "", "RendezvousError"], [59, 1, 1, "", "RendezvousHandler"], [59, 1, 1, "", "RendezvousHandlerRegistry"], [59, 1, 1, "", "RendezvousParameters"], [59, 1, 1, "", "RendezvousStateError"], [59, 1, 1, "", "RendezvousTimeoutError"], [59, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[59, 3, 1, "", "get_backend"], [59, 3, 1, "", "get_run_id"], [59, 3, 1, "", "is_closed"], [59, 3, 1, "", "next_rendezvous"], [59, 3, 1, "", "num_nodes_waiting"], [59, 3, 1, "", "set_closed"], [59, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[59, 3, 1, "", "create_handler"], [59, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[59, 3, 1, "", "get"], [59, 3, 1, "", "get_as_bool"], [59, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[59, 1, 1, "", "C10dRendezvousBackend"], [59, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[59, 3, 1, "", "get_state"], [59, 4, 1, "", "name"], [59, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[59, 1, 1, "", "DynamicRendezvousHandler"], [59, 1, 1, "", "RendezvousBackend"], [59, 1, 1, "", "RendezvousTimeout"], [59, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[59, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[59, 3, 1, "", "get_state"], [59, 4, 1, "", "name"], [59, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[59, 4, 1, "", "close"], [59, 4, 1, "", "heartbeat"], [59, 4, 1, "", "join"], [59, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[59, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[59, 1, 1, "", "EtcdRendezvousBackend"], [59, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[59, 3, 1, "", "get_state"], [59, 4, 1, "", "name"], [59, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[59, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[59, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[59, 3, 1, "", "add"], [59, 3, 1, "", "check"], [59, 3, 1, "", "get"], [59, 3, 1, "", "set"], [59, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[61, 1, 1, "", "FileTimerClient"], [61, 1, 1, "", "FileTimerServer"], [61, 1, 1, "", "LocalTimerClient"], [61, 1, 1, "", "LocalTimerServer"], [61, 1, 1, "", "TimerClient"], [61, 1, 1, "", "TimerRequest"], [61, 1, 1, "", "TimerServer"], [61, 5, 1, "", "configure"], [61, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[61, 3, 1, "", "acquire"], [61, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[61, 3, 1, "", "clear_timers"], [61, 3, 1, "", "get_expired_timers"], [61, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[42, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[64, 1, 1, "", "BackwardPrefetch"], [64, 1, 1, "", "CPUOffload"], [64, 1, 1, "", "FullyShardedDataParallel"], [64, 1, 1, "", "MixedPrecision"], [64, 1, 1, "", "ShardingStrategy"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[64, 3, 1, "", "apply"], [64, 3, 1, "", "clip_grad_norm_"], [64, 3, 1, "", "flatten_sharded_optim_state_dict"], [64, 3, 1, "", "forward"], [64, 3, 1, "", "fsdp_modules"], [64, 3, 1, "", "full_optim_state_dict"], [64, 3, 1, "", "get_state_dict_type"], [64, 4, 1, "", "module"], [64, 3, 1, "", "named_buffers"], [64, 3, 1, "", "named_parameters"], [64, 3, 1, "", "no_sync"], [64, 3, 1, "", "optim_state_dict"], [64, 3, 1, "", "optim_state_dict_to_load"], [64, 3, 1, "", "register_comm_hook"], [64, 3, 1, "", "rekey_optim_state_dict"], [64, 3, 1, "", "scatter_full_optim_state_dict"], [64, 3, 1, "", "set_state_dict_type"], [64, 3, 1, "", "shard_full_optim_state_dict"], [64, 3, 1, "", "sharded_optim_state_dict"], [64, 3, 1, "", "state_dict_type"], [64, 3, 1, "", "summon_full_params"]], "torch.distributed.nn": [[42, 0, 0, "-", "api"], [42, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1921, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1921, 3, 1, "", "get_module_rref"], [1921, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[42, 0, 0, "-", "templates"]], "torch.distributed.optim": [[46, 1, 1, "", "DistributedOptimizer"], [46, 1, 1, "", "PostLocalSGDOptimizer"], [46, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[46, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[46, 3, 1, "", "load_state_dict"], [46, 3, 1, "", "state_dict"], [46, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[46, 3, 1, "", "add_param_group"], [46, 3, 1, "", "consolidate_state_dict"], [46, 3, 1, "", "join_hook"], [46, 3, 1, "", "load_state_dict"], [46, 3, 1, "", "state_dict"], [46, 3, 1, "", "step"]], "torch.distributed.pipeline": [[42, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1914, 1, 1, "", "Pipe"], [42, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1914, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1914, 1, 1, "", "pop"], [1914, 5, 1, "", "skippable"], [1914, 1, 1, "", "stash"], [1914, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1921, 1, 1, "", "BackendType"], [1921, 1, 1, "", "RRef"], [1921, 1, 1, "", "RpcBackendOptions"], [1921, 1, 1, "", "TensorPipeRpcBackendOptions"], [1921, 1, 1, "", "WorkerInfo"], [1921, 5, 1, "", "get_worker_info"], [1921, 5, 1, "", "init_rpc"], [1921, 5, 1, "", "remote"], [1921, 5, 1, "", "rpc_async"], [1921, 5, 1, "", "rpc_sync"], [1921, 5, 1, "", "shutdown"]], "torch.distributed.rpc.RpcBackendOptions": [[1921, 4, 1, "", "init_method"], [1921, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1921, 4, 1, "", "device_maps"], [1921, 4, 1, "", "devices"], [1921, 4, 1, "", "init_method"], [1921, 4, 1, "", "num_worker_threads"], [1921, 4, 1, "", "rpc_timeout"], [1921, 3, 1, "", "set_device_map"], [1921, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1921, 4, 1, "", "id"], [1921, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1921, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[47, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.fsdp": [[47, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel.multihead_attention_tp": [[47, 1, 1, "", "TensorParallelMultiheadAttention"]], "torch.distributed.tensor.parallel": [[47, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[47, 1, 1, "", "ColwiseParallel"], [47, 1, 1, "", "PairwiseParallel"], [47, 1, 1, "", "RowwiseParallel"], [47, 1, 1, "", "SequenceParallel"], [47, 5, 1, "", "make_input_replicate_1d"], [47, 5, 1, "", "make_input_reshard_replicate"], [47, 5, 1, "", "make_input_shard_1d"], [47, 5, 1, "", "make_input_shard_1d_last_dim"], [47, 5, 1, "", "make_output_replicate_1d"], [47, 5, 1, "", "make_output_reshard_tensor"], [47, 5, 1, "", "make_output_shard_1d"], [47, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[48, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_enumerate_support"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.beta": [[48, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[48, 2, 1, "", "arg_constraints"], [48, 4, 1, "", "concentration0"], [48, 4, 1, "", "concentration1"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.binomial": [[48, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_enumerate_support"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.categorical": [[48, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_enumerate_support"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[48, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.chi2": [[48, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[48, 2, 1, "", "arg_constraints"], [48, 4, 1, "", "df"], [48, 3, 1, "", "expand"]], "torch.distributions": [[48, 0, 0, "-", "constraint_registry"], [48, 0, 0, "-", "constraints"], [48, 0, 0, "-", "kl"], [48, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[48, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[48, 3, 1, "", "register"]], "torch.distributions.constraints": [[48, 1, 1, "", "Constraint"], [48, 2, 1, "", "cat"], [48, 2, 1, "", "dependent_property"], [48, 2, 1, "", "greater_than"], [48, 2, 1, "", "greater_than_eq"], [48, 2, 1, "", "half_open_interval"], [48, 2, 1, "", "independent"], [48, 2, 1, "", "integer_interval"], [48, 2, 1, "", "interval"], [48, 2, 1, "", "less_than"], [48, 2, 1, "", "multinomial"], [48, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[48, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[48, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "rsample"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "stddev"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[48, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.distribution": [[48, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[48, 4, 1, "", "arg_constraints"], [48, 4, 1, "", "batch_shape"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 4, 1, "", "event_shape"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "perplexity"], [48, 3, 1, "", "rsample"], [48, 3, 1, "", "sample"], [48, 3, 1, "", "sample_n"], [48, 3, 1, "", "set_default_validate_args"], [48, 4, 1, "", "stddev"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[48, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[48, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[48, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "stddev"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[48, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.gamma": [[48, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.geometric": [[48, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[48, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "stddev"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[48, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "scale"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[48, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "scale"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.independent": [[48, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 3, 1, "", "expand"], [48, 4, 1, "", "has_enumerate_support"], [48, 4, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.kl": [[48, 5, 1, "", "kl_divergence"], [48, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[48, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.laplace": [[48, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "stddev"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[48, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"]], "torch.distributions.log_normal": [[48, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 4, 1, "", "loc"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "scale"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[48, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[48, 2, 1, "", "arg_constraints"], [48, 4, 1, "", "covariance_matrix"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "precision_matrix"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "scale_tril"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[48, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 4, 1, "", "component_distribution"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mixture_distribution"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[48, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"], [48, 2, 1, "", "total_count"], [48, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[48, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[48, 2, 1, "", "arg_constraints"], [48, 4, 1, "", "covariance_matrix"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "precision_matrix"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "scale_tril"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[48, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.normal": [[48, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "stddev"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[48, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_enumerate_support"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.pareto": [[48, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.poisson": [[48, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[48, 1, 1, "", "LogitRelaxedBernoulli"], [48, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "probs"], [48, 2, 1, "", "support"], [48, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[48, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "probs"], [48, 2, 1, "", "support"], [48, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[48, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[48, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "expand"], [48, 4, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 3, 1, "", "rsample"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"]], "torch.distributions.transforms": [[48, 1, 1, "", "AbsTransform"], [48, 1, 1, "", "AffineTransform"], [48, 1, 1, "", "CatTransform"], [48, 1, 1, "", "ComposeTransform"], [48, 1, 1, "", "CorrCholeskyTransform"], [48, 1, 1, "", "CumulativeDistributionTransform"], [48, 1, 1, "", "ExpTransform"], [48, 1, 1, "", "IndependentTransform"], [48, 1, 1, "", "LowerCholeskyTransform"], [48, 1, 1, "", "PositiveDefiniteTransform"], [48, 1, 1, "", "PowerTransform"], [48, 1, 1, "", "ReshapeTransform"], [48, 1, 1, "", "SigmoidTransform"], [48, 1, 1, "", "SoftmaxTransform"], [48, 1, 1, "", "SoftplusTransform"], [48, 1, 1, "", "StackTransform"], [48, 1, 1, "", "StickBreakingTransform"], [48, 1, 1, "", "TanhTransform"], [48, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[48, 3, 1, "", "forward_shape"], [48, 4, 1, "", "inv"], [48, 3, 1, "", "inverse_shape"], [48, 3, 1, "", "log_abs_det_jacobian"], [48, 4, 1, "", "sign"]], "torch.distributions.uniform": [[48, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "stddev"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[48, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.weibull": [[48, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.wishart": [[48, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[48, 2, 1, "", "arg_constraints"], [48, 4, 1, "", "covariance_matrix"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "precision_matrix"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "scale_tril"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.fft": [[1087, 5, 1, "", "fft"], [1088, 5, 1, "", "fft2"], [1089, 5, 1, "", "fftfreq"], [1090, 5, 1, "", "fftn"], [1091, 5, 1, "", "fftshift"], [1092, 5, 1, "", "hfft"], [1093, 5, 1, "", "hfft2"], [1094, 5, 1, "", "hfftn"], [1095, 5, 1, "", "ifft"], [1096, 5, 1, "", "ifft2"], [1097, 5, 1, "", "ifftn"], [1098, 5, 1, "", "ifftshift"], [1099, 5, 1, "", "ihfft"], [1100, 5, 1, "", "ihfft2"], [1101, 5, 1, "", "ihfftn"], [1102, 5, 1, "", "irfft"], [1103, 5, 1, "", "irfft2"], [1104, 5, 1, "", "irfftn"], [1105, 5, 1, "", "rfft"], [1106, 5, 1, "", "rfft2"], [1107, 5, 1, "", "rfftfreq"], [1108, 5, 1, "", "rfftn"]], "torch.func": [[1127, 5, 1, "", "functional_call"], [1128, 5, 1, "", "functionalize"], [1129, 5, 1, "", "grad"], [1130, 5, 1, "", "grad_and_value"], [1131, 5, 1, "", "hessian"], [1132, 5, 1, "", "jacfwd"], [1133, 5, 1, "", "jacrev"], [1134, 5, 1, "", "jvp"], [1135, 5, 1, "", "linearize"], [1136, 5, 1, "", "replace_all_batch_norm_modules_"], [1137, 5, 1, "", "stack_module_state"], [1138, 5, 1, "", "vjp"], [1139, 5, 1, "", "vmap"]], "torch.futures": [[71, 1, 1, "", "Future"], [71, 5, 1, "", "collect_all"], [71, 5, 1, "", "wait_all"]], "torch.futures.Future": [[71, 3, 1, "", "add_done_callback"], [71, 3, 1, "", "done"], [71, 3, 1, "", "set_exception"], [71, 3, 1, "", "set_result"], [71, 3, 1, "", "then"], [71, 3, 1, "", "value"], [71, 3, 1, "", "wait"]], "torch.fx": [[72, 1, 1, "", "Graph"], [72, 1, 1, "", "GraphModule"], [72, 1, 1, "", "Interpreter"], [72, 1, 1, "", "Node"], [72, 1, 1, "", "Proxy"], [72, 1, 1, "", "Tracer"], [72, 1, 1, "", "Transformer"], [72, 0, 0, "-", "experimental"], [72, 0, 0, "-", "passes"], [72, 5, 1, "", "replace_pattern"], [72, 5, 1, "", "symbolic_trace"], [72, 5, 1, "", "wrap"]], "torch.fx.Graph": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "call_function"], [72, 3, 1, "", "call_method"], [72, 3, 1, "", "call_module"], [72, 3, 1, "", "create_node"], [72, 3, 1, "", "eliminate_dead_code"], [72, 3, 1, "", "erase_node"], [72, 3, 1, "", "get_attr"], [72, 3, 1, "", "graph_copy"], [72, 3, 1, "", "inserting_after"], [72, 3, 1, "", "inserting_before"], [72, 3, 1, "", "lint"], [72, 3, 1, "", "node_copy"], [72, 4, 1, "", "nodes"], [72, 3, 1, "", "on_generate_code"], [72, 3, 1, "", "output"], [72, 3, 1, "", "placeholder"], [72, 3, 1, "", "print_tabular"], [72, 3, 1, "", "process_inputs"], [72, 3, 1, "", "process_outputs"], [72, 3, 1, "", "python_code"], [72, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "add_submodule"], [72, 4, 1, "", "code"], [72, 3, 1, "", "delete_all_unused_submodules"], [72, 3, 1, "", "delete_submodule"], [72, 4, 1, "", "graph"], [72, 3, 1, "", "print_readable"], [72, 3, 1, "", "recompile"], [72, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[72, 3, 1, "", "boxed_run"], [72, 3, 1, "", "call_function"], [72, 3, 1, "", "call_method"], [72, 3, 1, "", "call_module"], [72, 3, 1, "", "fetch_args_kwargs_from_env"], [72, 3, 1, "", "fetch_attr"], [72, 3, 1, "", "get_attr"], [72, 3, 1, "", "map_nodes_to_values"], [72, 3, 1, "", "output"], [72, 3, 1, "", "placeholder"], [72, 3, 1, "", "run"], [72, 3, 1, "", "run_node"]], "torch.fx.Node": [[72, 4, 1, "", "all_input_nodes"], [72, 3, 1, "", "append"], [72, 4, 1, "", "args"], [72, 3, 1, "", "format_node"], [72, 3, 1, "", "is_impure"], [72, 4, 1, "", "kwargs"], [72, 4, 1, "", "next"], [72, 3, 1, "", "normalized_arguments"], [72, 3, 1, "", "prepend"], [72, 4, 1, "", "prev"], [72, 3, 1, "", "replace_all_uses_with"], [72, 3, 1, "", "replace_input_with"], [72, 4, 1, "", "stack_trace"], [72, 3, 1, "", "update_arg"], [72, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[72, 3, 1, "", "call_module"], [72, 3, 1, "", "create_arg"], [72, 3, 1, "", "create_args_for_root"], [72, 3, 1, "", "create_node"], [72, 3, 1, "", "create_proxy"], [72, 3, 1, "", "getattr"], [72, 3, 1, "", "is_leaf_module"], [72, 3, 1, "", "iter"], [72, 3, 1, "", "keys"], [72, 3, 1, "", "path_of_module"], [72, 3, 1, "", "proxy"], [72, 3, 1, "", "to_bool"], [72, 3, 1, "", "trace"]], "torch.fx.Transformer": [[72, 3, 1, "", "call_function"], [72, 3, 1, "", "call_module"], [72, 3, 1, "", "get_attr"], [72, 3, 1, "", "placeholder"], [72, 3, 1, "", "transform"]], "torch.fx.experimental": [[72, 0, 0, "-", "migrate_gradual_types"], [72, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[72, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[72, 0, 0, "-", "backends"], [72, 0, 0, "-", "dialect"], [72, 0, 0, "-", "infra"], [72, 0, 0, "-", "tests"], [72, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[72, 0, 0, "-", "common"]], "torch.hub": [[1865, 5, 1, "", "download_url_to_file"], [1865, 5, 1, "", "get_dir"], [1865, 5, 1, "", "help"], [1865, 5, 1, "", "list"], [1865, 5, 1, "", "load"], [1865, 5, 1, "", "load_state_dict_from_url"], [1865, 5, 1, "", "set_dir"]], "torch.jit": [[1196, 1, 1, "", "Attribute"], [1197, 1, 1, "", "ScriptFunction"], [1198, 1, 1, "", "ScriptModule"], [1199, 5, 1, "", "annotate"], [1200, 5, 1, "", "enable_onednn_fusion"], [1868, 5, 1, "", "export"], [1201, 5, 1, "", "fork"], [1202, 5, 1, "", "freeze"], [1203, 5, 1, "", "ignore"], [1870, 5, 1, "", "is_scripting"], [1870, 5, 1, "", "is_tracing"], [1204, 5, 1, "", "isinstance"], [1205, 5, 1, "", "load"], [1868, 0, 0, "-", "mobile"], [1206, 5, 1, "", "onednn_fusion_enabled"], [1207, 5, 1, "", "optimize_for_inference"], [1208, 5, 1, "", "save"], [1209, 5, 1, "", "script"], [1210, 5, 1, "", "script_if_tracing"], [1211, 5, 1, "", "set_fusion_strategy"], [1212, 1, 1, "", "strict_fusion"], [1869, 0, 0, "-", "supported_ops"], [1213, 5, 1, "", "trace"], [1214, 5, 1, "", "trace_module"], [1873, 0, 0, "-", "unsupported_tensor_ops"], [1215, 5, 1, "", "unused"], [1216, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1196, 3, 1, "", "count"], [1196, 3, 1, "", "index"], [1196, 2, 1, "", "type"], [1196, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1197, 3, 1, "", "get_debug_state"], [1197, 3, 1, "", "save"], [1197, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1198, 3, 1, "", "add_module"], [1198, 3, 1, "", "apply"], [1198, 3, 1, "", "bfloat16"], [1198, 3, 1, "", "buffers"], [1198, 3, 1, "", "children"], [1198, 4, 1, "", "code"], [1198, 4, 1, "", "code_with_constants"], [1198, 3, 1, "", "compile"], [1198, 3, 1, "", "cpu"], [1198, 3, 1, "", "cuda"], [1198, 3, 1, "", "double"], [1198, 3, 1, "", "eval"], [1198, 3, 1, "", "extra_repr"], [1198, 3, 1, "", "float"], [1198, 3, 1, "", "get_buffer"], [1198, 3, 1, "", "get_extra_state"], [1198, 3, 1, "", "get_parameter"], [1198, 3, 1, "", "get_submodule"], [1198, 4, 1, "", "graph"], [1198, 3, 1, "", "half"], [1198, 4, 1, "", "inlined_graph"], [1198, 3, 1, "", "ipu"], [1198, 3, 1, "", "load_state_dict"], [1198, 3, 1, "", "modules"], [1198, 3, 1, "", "named_buffers"], [1198, 3, 1, "", "named_children"], [1198, 3, 1, "", "named_modules"], [1198, 3, 1, "", "named_parameters"], [1198, 3, 1, "", "parameters"], [1198, 3, 1, "", "register_backward_hook"], [1198, 3, 1, "", "register_buffer"], [1198, 3, 1, "", "register_forward_hook"], [1198, 3, 1, "", "register_forward_pre_hook"], [1198, 3, 1, "", "register_full_backward_hook"], [1198, 3, 1, "", "register_full_backward_pre_hook"], [1198, 3, 1, "", "register_load_state_dict_post_hook"], [1198, 3, 1, "", "register_module"], [1198, 3, 1, "", "register_parameter"], [1198, 3, 1, "", "register_state_dict_pre_hook"], [1198, 3, 1, "", "requires_grad_"], [1198, 3, 1, "", "save"], [1198, 3, 1, "", "set_extra_state"], [1198, 3, 1, "", "share_memory"], [1198, 3, 1, "", "state_dict"], [1198, 3, 1, "", "to"], [1198, 3, 1, "", "to_empty"], [1198, 3, 1, "", "train"], [1198, 3, 1, "", "type"], [1198, 3, 1, "", "xpu"], [1198, 3, 1, "", "zero_grad"]], "torch.library": [[1875, 1, 1, "", "Library"]], "torch.library.Library": [[1875, 3, 1, "", "define"], [1875, 3, 1, "", "impl"]], "torch.linalg": [[1227, 5, 1, "", "cholesky"], [1228, 5, 1, "", "cholesky_ex"], [1229, 5, 1, "", "cond"], [1230, 5, 1, "", "cross"], [1231, 5, 1, "", "det"], [1232, 5, 1, "", "diagonal"], [1233, 5, 1, "", "eig"], [1234, 5, 1, "", "eigh"], [1235, 5, 1, "", "eigvals"], [1236, 5, 1, "", "eigvalsh"], [1237, 5, 1, "", "householder_product"], [1238, 5, 1, "", "inv"], [1239, 5, 1, "", "inv_ex"], [1240, 5, 1, "", "ldl_factor"], [1241, 5, 1, "", "ldl_factor_ex"], [1242, 5, 1, "", "ldl_solve"], [1243, 5, 1, "", "lstsq"], [1244, 5, 1, "", "lu"], [1245, 5, 1, "", "lu_factor"], [1246, 5, 1, "", "lu_factor_ex"], [1247, 5, 1, "", "lu_solve"], [1248, 5, 1, "", "matmul"], [1249, 5, 1, "", "matrix_exp"], [1250, 5, 1, "", "matrix_norm"], [1251, 5, 1, "", "matrix_power"], [1252, 5, 1, "", "matrix_rank"], [1253, 5, 1, "", "multi_dot"], [1254, 5, 1, "", "norm"], [1255, 5, 1, "", "pinv"], [1256, 5, 1, "", "qr"], [1257, 5, 1, "", "slogdet"], [1258, 5, 1, "", "solve"], [1259, 5, 1, "", "solve_ex"], [1260, 5, 1, "", "solve_triangular"], [1261, 5, 1, "", "svd"], [1262, 5, 1, "", "svdvals"], [1263, 5, 1, "", "tensorinv"], [1264, 5, 1, "", "tensorsolve"], [1265, 5, 1, "", "vander"], [1266, 5, 1, "", "vecdot"], [1267, 5, 1, "", "vector_norm"]], "torch.masked": [[1878, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1881, 1, 1, "", "Aggregation"], [1881, 1, 1, "", "Event"], [1881, 1, 1, "", "EventHandlerHandle"], [1881, 1, 1, "", "Stat"], [1881, 1, 1, "", "TensorboardEventHandler"], [1881, 1, 1, "", "data_value_t"], [1881, 5, 1, "", "log_event"], [1881, 5, 1, "", "register_event_handler"], [1881, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1881, 4, 1, "", "name"]], "torch.monitor.Event": [[1881, 3, 1, "", "__init__"], [1881, 4, 1, "", "data"], [1881, 4, 1, "", "name"], [1881, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1881, 3, 1, "", "__init__"], [1881, 3, 1, "", "add"], [1881, 4, 1, "", "count"], [1881, 3, 1, "", "get"], [1881, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1881, 3, 1, "", "__init__"]], "torch.mps": [[1306, 5, 1, "", "current_allocated_memory"], [1307, 5, 1, "", "driver_allocated_memory"], [1308, 5, 1, "", "empty_cache"], [1309, 5, 1, "", "get_rng_state"], [1310, 5, 1, "", "manual_seed"], [1314, 5, 1, "", "seed"], [1315, 5, 1, "", "set_per_process_memory_fraction"], [1316, 5, 1, "", "set_rng_state"], [1317, 5, 1, "", "synchronize"]], "torch.mps.profiler": [[1311, 5, 1, "", "profile"], [1312, 5, 1, "", "start"], [1313, 5, 1, "", "stop"]], "torch.multiprocessing": [[1883, 1, 1, "", "SpawnContext"], [1883, 5, 1, "", "get_all_sharing_strategies"], [1883, 5, 1, "", "get_sharing_strategy"], [1883, 5, 1, "", "set_sharing_strategy"], [1883, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1883, 3, 1, "", "join"]], "torch.nested": [[1886, 5, 1, "", "as_nested_tensor"], [1886, 5, 1, "", "nested_tensor"], [1886, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1335, 1, 1, "", "AdaptiveAvgPool1d"], [1336, 1, 1, "", "AdaptiveAvgPool2d"], [1337, 1, 1, "", "AdaptiveAvgPool3d"], [1338, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1339, 1, 1, "", "AdaptiveMaxPool1d"], [1340, 1, 1, "", "AdaptiveMaxPool2d"], [1341, 1, 1, "", "AdaptiveMaxPool3d"], [1342, 1, 1, "", "AlphaDropout"], [1343, 1, 1, "", "AvgPool1d"], [1344, 1, 1, "", "AvgPool2d"], [1345, 1, 1, "", "AvgPool3d"], [1346, 1, 1, "", "BCELoss"], [1347, 1, 1, "", "BCEWithLogitsLoss"], [1348, 1, 1, "", "BatchNorm1d"], [1349, 1, 1, "", "BatchNorm2d"], [1350, 1, 1, "", "BatchNorm3d"], [1351, 1, 1, "", "Bilinear"], [1352, 1, 1, "", "CELU"], [1353, 1, 1, "", "CTCLoss"], [1354, 1, 1, "", "ChannelShuffle"], [1355, 1, 1, "", "ConstantPad1d"], [1356, 1, 1, "", "ConstantPad2d"], [1357, 1, 1, "", "ConstantPad3d"], [1358, 1, 1, "", "Conv1d"], [1359, 1, 1, "", "Conv2d"], [1360, 1, 1, "", "Conv3d"], [1361, 1, 1, "", "ConvTranspose1d"], [1362, 1, 1, "", "ConvTranspose2d"], [1363, 1, 1, "", "ConvTranspose3d"], [1364, 1, 1, "", "CosineEmbeddingLoss"], [1365, 1, 1, "", "CosineSimilarity"], [1366, 1, 1, "", "CrossEntropyLoss"], [1367, 1, 1, "", "DataParallel"], [1368, 1, 1, "", "Dropout"], [1369, 1, 1, "", "Dropout1d"], [1370, 1, 1, "", "Dropout2d"], [1371, 1, 1, "", "Dropout3d"], [1372, 1, 1, "", "ELU"], [1373, 1, 1, "", "Embedding"], [1374, 1, 1, "", "EmbeddingBag"], [1375, 1, 1, "", "FeatureAlphaDropout"], [1376, 1, 1, "", "Flatten"], [1377, 1, 1, "", "Fold"], [1378, 1, 1, "", "FractionalMaxPool2d"], [1379, 1, 1, "", "FractionalMaxPool3d"], [1380, 1, 1, "", "GELU"], [1381, 1, 1, "", "GLU"], [1382, 1, 1, "", "GRU"], [1383, 1, 1, "", "GRUCell"], [1384, 1, 1, "", "GaussianNLLLoss"], [1385, 1, 1, "", "GroupNorm"], [1386, 1, 1, "", "Hardshrink"], [1387, 1, 1, "", "Hardsigmoid"], [1388, 1, 1, "", "Hardswish"], [1389, 1, 1, "", "Hardtanh"], [1390, 1, 1, "", "HingeEmbeddingLoss"], [1391, 1, 1, "", "HuberLoss"], [1392, 1, 1, "", "Identity"], [1393, 1, 1, "", "InstanceNorm1d"], [1394, 1, 1, "", "InstanceNorm2d"], [1395, 1, 1, "", "InstanceNorm3d"], [1396, 1, 1, "", "KLDivLoss"], [1397, 1, 1, "", "L1Loss"], [1398, 1, 1, "", "LPPool1d"], [1399, 1, 1, "", "LPPool2d"], [1400, 1, 1, "", "LSTM"], [1401, 1, 1, "", "LSTMCell"], [1402, 1, 1, "", "LayerNorm"], [1403, 1, 1, "", "LazyBatchNorm1d"], [1404, 1, 1, "", "LazyBatchNorm2d"], [1405, 1, 1, "", "LazyBatchNorm3d"], [1406, 1, 1, "", "LazyConv1d"], [1407, 1, 1, "", "LazyConv2d"], [1408, 1, 1, "", "LazyConv3d"], [1409, 1, 1, "", "LazyConvTranspose1d"], [1410, 1, 1, "", "LazyConvTranspose2d"], [1411, 1, 1, "", "LazyConvTranspose3d"], [1412, 1, 1, "", "LazyInstanceNorm1d"], [1413, 1, 1, "", "LazyInstanceNorm2d"], [1414, 1, 1, "", "LazyInstanceNorm3d"], [1415, 1, 1, "", "LazyLinear"], [1416, 1, 1, "", "LeakyReLU"], [1417, 1, 1, "", "Linear"], [1418, 1, 1, "", "LocalResponseNorm"], [1419, 1, 1, "", "LogSigmoid"], [1420, 1, 1, "", "LogSoftmax"], [1421, 1, 1, "", "MSELoss"], [1422, 1, 1, "", "MarginRankingLoss"], [1423, 1, 1, "", "MaxPool1d"], [1424, 1, 1, "", "MaxPool2d"], [1425, 1, 1, "", "MaxPool3d"], [1426, 1, 1, "", "MaxUnpool1d"], [1427, 1, 1, "", "MaxUnpool2d"], [1428, 1, 1, "", "MaxUnpool3d"], [1429, 1, 1, "", "Mish"], [1430, 1, 1, "", "Module"], [1431, 1, 1, "", "ModuleDict"], [1432, 1, 1, "", "ModuleList"], [1433, 1, 1, "", "MultiLabelMarginLoss"], [1434, 1, 1, "", "MultiLabelSoftMarginLoss"], [1435, 1, 1, "", "MultiMarginLoss"], [1436, 1, 1, "", "MultiheadAttention"], [1437, 1, 1, "", "NLLLoss"], [1438, 1, 1, "", "PReLU"], [1439, 1, 1, "", "PairwiseDistance"], [1440, 1, 1, "", "ParameterDict"], [1441, 1, 1, "", "ParameterList"], [1442, 1, 1, "", "PixelShuffle"], [1443, 1, 1, "", "PixelUnshuffle"], [1444, 1, 1, "", "PoissonNLLLoss"], [1445, 1, 1, "", "RNN"], [1446, 1, 1, "", "RNNBase"], [1447, 1, 1, "", "RNNCell"], [1448, 1, 1, "", "RReLU"], [1449, 1, 1, "", "ReLU"], [1450, 1, 1, "", "ReLU6"], [1451, 1, 1, "", "ReflectionPad1d"], [1452, 1, 1, "", "ReflectionPad2d"], [1453, 1, 1, "", "ReflectionPad3d"], [1454, 1, 1, "", "ReplicationPad1d"], [1455, 1, 1, "", "ReplicationPad2d"], [1456, 1, 1, "", "ReplicationPad3d"], [1457, 1, 1, "", "SELU"], [1458, 1, 1, "", "Sequential"], [1459, 1, 1, "", "SiLU"], [1460, 1, 1, "", "Sigmoid"], [1461, 1, 1, "", "SmoothL1Loss"], [1462, 1, 1, "", "SoftMarginLoss"], [1463, 1, 1, "", "Softmax"], [1464, 1, 1, "", "Softmax2d"], [1465, 1, 1, "", "Softmin"], [1466, 1, 1, "", "Softplus"], [1467, 1, 1, "", "Softshrink"], [1468, 1, 1, "", "Softsign"], [1469, 1, 1, "", "SyncBatchNorm"], [1470, 1, 1, "", "Tanh"], [1471, 1, 1, "", "Tanhshrink"], [1472, 1, 1, "", "Threshold"], [1473, 1, 1, "", "Transformer"], [1474, 1, 1, "", "TransformerDecoder"], [1475, 1, 1, "", "TransformerDecoderLayer"], [1476, 1, 1, "", "TransformerEncoder"], [1477, 1, 1, "", "TransformerEncoderLayer"], [1478, 1, 1, "", "TripletMarginLoss"], [1479, 1, 1, "", "TripletMarginWithDistanceLoss"], [1480, 1, 1, "", "Unflatten"], [1481, 1, 1, "", "Unfold"], [1482, 1, 1, "", "Upsample"], [1483, 1, 1, "", "UpsamplingBilinear2d"], [1484, 1, 1, "", "UpsamplingNearest2d"], [1485, 1, 1, "", "ZeroPad1d"], [1486, 1, 1, "", "ZeroPad2d"], [1487, 1, 1, "", "ZeroPad3d"], [1887, 0, 0, "-", "backends"], [1919, 0, 0, "-", "intrinsic"], [1887, 0, 0, "-", "modules"], [1887, 0, 0, "-", "parallel"], [1919, 0, 0, "-", "qat"], [1919, 0, 0, "-", "quantizable"], [1919, 0, 0, "-", "quantized"], [1887, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1338, 3, 1, "", "log_prob"], [1338, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1373, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1374, 3, 1, "", "forward"], [1374, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1403, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1404, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1405, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1406, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1407, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1408, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1409, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1410, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1411, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1412, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1413, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1414, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1415, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1430, 3, 1, "", "add_module"], [1430, 3, 1, "", "apply"], [1430, 3, 1, "", "bfloat16"], [1430, 3, 1, "", "buffers"], [1430, 3, 1, "", "children"], [1430, 3, 1, "", "compile"], [1430, 3, 1, "", "cpu"], [1430, 3, 1, "", "cuda"], [1430, 3, 1, "", "double"], [1430, 3, 1, "", "eval"], [1430, 3, 1, "", "extra_repr"], [1430, 3, 1, "", "float"], [1430, 3, 1, "", "forward"], [1430, 3, 1, "", "get_buffer"], [1430, 3, 1, "", "get_extra_state"], [1430, 3, 1, "", "get_parameter"], [1430, 3, 1, "", "get_submodule"], [1430, 3, 1, "", "half"], [1430, 3, 1, "", "ipu"], [1430, 3, 1, "", "load_state_dict"], [1430, 3, 1, "", "modules"], [1430, 3, 1, "", "named_buffers"], [1430, 3, 1, "", "named_children"], [1430, 3, 1, "", "named_modules"], [1430, 3, 1, "", "named_parameters"], [1430, 3, 1, "", "parameters"], [1430, 3, 1, "", "register_backward_hook"], [1430, 3, 1, "", "register_buffer"], [1430, 3, 1, "", "register_forward_hook"], [1430, 3, 1, "", "register_forward_pre_hook"], [1430, 3, 1, "", "register_full_backward_hook"], [1430, 3, 1, "", "register_full_backward_pre_hook"], [1430, 3, 1, "", "register_load_state_dict_post_hook"], [1430, 3, 1, "", "register_module"], [1430, 3, 1, "", "register_parameter"], [1430, 3, 1, "", "register_state_dict_pre_hook"], [1430, 3, 1, "", "requires_grad_"], [1430, 3, 1, "", "set_extra_state"], [1430, 3, 1, "", "share_memory"], [1430, 3, 1, "", "state_dict"], [1430, 3, 1, "", "to"], [1430, 3, 1, "", "to_empty"], [1430, 3, 1, "", "train"], [1430, 3, 1, "", "type"], [1430, 3, 1, "", "xpu"], [1430, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1431, 3, 1, "", "clear"], [1431, 3, 1, "", "items"], [1431, 3, 1, "", "keys"], [1431, 3, 1, "", "pop"], [1431, 3, 1, "", "update"], [1431, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1432, 3, 1, "", "append"], [1432, 3, 1, "", "extend"], [1432, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1436, 3, 1, "", "forward"], [1436, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1440, 3, 1, "", "clear"], [1440, 3, 1, "", "copy"], [1440, 3, 1, "", "fromkeys"], [1440, 3, 1, "", "get"], [1440, 3, 1, "", "items"], [1440, 3, 1, "", "keys"], [1440, 3, 1, "", "pop"], [1440, 3, 1, "", "popitem"], [1440, 3, 1, "", "setdefault"], [1440, 3, 1, "", "update"], [1440, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1441, 3, 1, "", "append"], [1441, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1446, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1458, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1469, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1473, 3, 1, "", "forward"], [1473, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1474, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1475, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1476, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1477, 3, 1, "", "forward"]], "torch.nn.functional": [[1488, 5, 1, "", "adaptive_avg_pool1d"], [1489, 5, 1, "", "adaptive_avg_pool2d"], [1490, 5, 1, "", "adaptive_avg_pool3d"], [1491, 5, 1, "", "adaptive_max_pool1d"], [1492, 5, 1, "", "adaptive_max_pool2d"], [1493, 5, 1, "", "adaptive_max_pool3d"], [1494, 5, 1, "", "affine_grid"], [1495, 5, 1, "", "alpha_dropout"], [1496, 5, 1, "", "avg_pool1d"], [1497, 5, 1, "", "avg_pool2d"], [1498, 5, 1, "", "avg_pool3d"], [1499, 5, 1, "", "batch_norm"], [1500, 5, 1, "", "bilinear"], [1501, 5, 1, "", "binary_cross_entropy"], [1502, 5, 1, "", "binary_cross_entropy_with_logits"], [1503, 5, 1, "", "celu"], [1504, 5, 1, "", "conv1d"], [1505, 5, 1, "", "conv2d"], [1506, 5, 1, "", "conv3d"], [1507, 5, 1, "", "conv_transpose1d"], [1508, 5, 1, "", "conv_transpose2d"], [1509, 5, 1, "", "conv_transpose3d"], [1510, 5, 1, "", "cosine_embedding_loss"], [1511, 5, 1, "", "cosine_similarity"], [1512, 5, 1, "", "cross_entropy"], [1513, 5, 1, "", "ctc_loss"], [1514, 5, 1, "", "dropout"], [1515, 5, 1, "", "dropout1d"], [1516, 5, 1, "", "dropout2d"], [1517, 5, 1, "", "dropout3d"], [1518, 5, 1, "", "elu"], [1519, 5, 1, "", "elu_"], [1520, 5, 1, "", "embedding"], [1521, 5, 1, "", "embedding_bag"], [1522, 5, 1, "", "feature_alpha_dropout"], [1523, 5, 1, "", "fold"], [1524, 5, 1, "", "fractional_max_pool2d"], [1525, 5, 1, "", "fractional_max_pool3d"], [1526, 5, 1, "", "gaussian_nll_loss"], [1527, 5, 1, "", "gelu"], [1528, 5, 1, "", "glu"], [1529, 5, 1, "", "grid_sample"], [1530, 5, 1, "", "group_norm"], [1531, 5, 1, "", "gumbel_softmax"], [1532, 5, 1, "", "hardshrink"], [1533, 5, 1, "", "hardsigmoid"], [1534, 5, 1, "", "hardswish"], [1535, 5, 1, "", "hardtanh"], [1536, 5, 1, "", "hardtanh_"], [1537, 5, 1, "", "hinge_embedding_loss"], [1538, 5, 1, "", "huber_loss"], [1539, 5, 1, "", "instance_norm"], [1540, 5, 1, "", "interpolate"], [1541, 5, 1, "", "kl_div"], [1542, 5, 1, "", "l1_loss"], [1543, 5, 1, "", "layer_norm"], [1544, 5, 1, "", "leaky_relu"], [1545, 5, 1, "", "leaky_relu_"], [1546, 5, 1, "", "linear"], [1547, 5, 1, "", "local_response_norm"], [1548, 5, 1, "", "log_softmax"], [1549, 5, 1, "", "logsigmoid"], [1550, 5, 1, "", "lp_pool1d"], [1551, 5, 1, "", "lp_pool2d"], [1552, 5, 1, "", "margin_ranking_loss"], [1553, 5, 1, "", "max_pool1d"], [1554, 5, 1, "", "max_pool2d"], [1555, 5, 1, "", "max_pool3d"], [1556, 5, 1, "", "max_unpool1d"], [1557, 5, 1, "", "max_unpool2d"], [1558, 5, 1, "", "max_unpool3d"], [1559, 5, 1, "", "mish"], [1560, 5, 1, "", "mse_loss"], [1561, 5, 1, "", "multi_margin_loss"], [1562, 5, 1, "", "multilabel_margin_loss"], [1563, 5, 1, "", "multilabel_soft_margin_loss"], [1564, 5, 1, "", "nll_loss"], [1565, 5, 1, "", "normalize"], [1566, 5, 1, "", "one_hot"], [1567, 5, 1, "", "pad"], [1568, 5, 1, "", "pairwise_distance"], [1569, 5, 1, "", "pdist"], [1570, 5, 1, "", "pixel_shuffle"], [1571, 5, 1, "", "pixel_unshuffle"], [1572, 5, 1, "", "poisson_nll_loss"], [1573, 5, 1, "", "prelu"], [1574, 5, 1, "", "relu"], [1575, 5, 1, "", "relu6"], [1576, 5, 1, "", "relu_"], [1577, 5, 1, "", "rrelu"], [1578, 5, 1, "", "rrelu_"], [1579, 5, 1, "", "scaled_dot_product_attention"], [1580, 5, 1, "", "selu"], [1581, 5, 1, "", "sigmoid"], [1582, 5, 1, "", "silu"], [1583, 5, 1, "", "smooth_l1_loss"], [1584, 5, 1, "", "soft_margin_loss"], [1585, 5, 1, "", "softmax"], [1586, 5, 1, "", "softmin"], [1587, 5, 1, "", "softplus"], [1588, 5, 1, "", "softshrink"], [1589, 5, 1, "", "softsign"], [1590, 5, 1, "", "tanh"], [1591, 5, 1, "", "tanhshrink"], [1592, 5, 1, "", "threshold"], [1593, 5, 1, "", "threshold_"], [1595, 5, 1, "", "triplet_margin_loss"], [1596, 5, 1, "", "triplet_margin_with_distance_loss"], [1597, 5, 1, "", "unfold"], [1598, 5, 1, "", "upsample"], [1599, 5, 1, "", "upsample_bilinear"], [1600, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1889, 5, 1, "", "calculate_gain"], [1889, 5, 1, "", "constant_"], [1889, 5, 1, "", "dirac_"], [1889, 5, 1, "", "eye_"], [1889, 5, 1, "", "kaiming_normal_"], [1889, 5, 1, "", "kaiming_uniform_"], [1889, 5, 1, "", "normal_"], [1889, 5, 1, "", "ones_"], [1889, 5, 1, "", "orthogonal_"], [1889, 5, 1, "", "sparse_"], [1889, 5, 1, "", "trunc_normal_"], [1889, 5, 1, "", "uniform_"], [1889, 5, 1, "", "xavier_normal_"], [1889, 5, 1, "", "xavier_uniform_"], [1889, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1919, 0, 0, "-", "modules"], [1919, 0, 0, "-", "qat"], [1919, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1919, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1919, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1601, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1601, 3, 1, "", "has_uninitialized_params"], [1601, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1602, 5, 1, "", "register_module_backward_hook"], [1603, 5, 1, "", "register_module_buffer_registration_hook"], [1604, 5, 1, "", "register_module_forward_hook"], [1605, 5, 1, "", "register_module_forward_pre_hook"], [1606, 5, 1, "", "register_module_full_backward_hook"], [1607, 5, 1, "", "register_module_full_backward_pre_hook"], [1608, 5, 1, "", "register_module_module_registration_hook"], [1609, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1610, 1, 1, "", "DistributedDataParallel"], [1594, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1610, 3, 1, "", "join"], [1610, 3, 1, "", "join_hook"], [1610, 3, 1, "", "no_sync"], [1610, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1611, 1, 1, "", "Parameter"], [1612, 1, 1, "", "UninitializedBuffer"], [1613, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1613, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1919, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1919, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1919, 0, 0, "-", "dynamic"], [1919, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1919, 0, 0, "-", "modules"]], "torch.nn.utils": [[1614, 5, 1, "", "clip_grad_norm_"], [1615, 5, 1, "", "clip_grad_value_"], [1616, 5, 1, "", "parameters_to_vector"], [1641, 5, 1, "", "remove_spectral_norm"], [1642, 5, 1, "", "remove_weight_norm"], [1650, 5, 1, "", "skip_init"], [1651, 5, 1, "", "spectral_norm"], [1887, 0, 0, "-", "stateless"], [1653, 5, 1, "", "vector_to_parameters"], [1654, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1617, 5, 1, "", "orthogonal"], [1618, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1619, 1, 1, "", "ParametrizationList"], [1620, 5, 1, "", "cached"], [1621, 5, 1, "", "is_parametrized"], [1622, 5, 1, "", "register_parametrization"], [1623, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1619, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1624, 1, 1, "", "BasePruningMethod"], [1625, 1, 1, "", "CustomFromMask"], [1626, 1, 1, "", "Identity"], [1627, 1, 1, "", "L1Unstructured"], [1628, 1, 1, "", "LnStructured"], [1629, 1, 1, "", "PruningContainer"], [1630, 1, 1, "", "RandomStructured"], [1631, 1, 1, "", "RandomUnstructured"], [1632, 5, 1, "", "custom_from_mask"], [1633, 5, 1, "", "global_unstructured"], [1634, 5, 1, "", "identity"], [1635, 5, 1, "", "is_pruned"], [1636, 5, 1, "", "l1_unstructured"], [1637, 5, 1, "", "ln_structured"], [1638, 5, 1, "", "random_structured"], [1639, 5, 1, "", "random_unstructured"], [1640, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1624, 3, 1, "", "apply"], [1624, 3, 1, "", "apply_mask"], [1624, 3, 1, "", "compute_mask"], [1624, 3, 1, "", "prune"], [1624, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1625, 3, 1, "", "apply"], [1625, 3, 1, "", "apply_mask"], [1625, 3, 1, "", "prune"], [1625, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1626, 3, 1, "", "apply"], [1626, 3, 1, "", "apply_mask"], [1626, 3, 1, "", "prune"], [1626, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1627, 3, 1, "", "apply"], [1627, 3, 1, "", "apply_mask"], [1627, 3, 1, "", "prune"], [1627, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1628, 3, 1, "", "apply"], [1628, 3, 1, "", "apply_mask"], [1628, 3, 1, "", "compute_mask"], [1628, 3, 1, "", "prune"], [1628, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1629, 3, 1, "", "add_pruning_method"], [1629, 3, 1, "", "apply"], [1629, 3, 1, "", "apply_mask"], [1629, 3, 1, "", "compute_mask"], [1629, 3, 1, "", "prune"], [1629, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1630, 3, 1, "", "apply"], [1630, 3, 1, "", "apply_mask"], [1630, 3, 1, "", "compute_mask"], [1630, 3, 1, "", "prune"], [1630, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1631, 3, 1, "", "apply"], [1631, 3, 1, "", "apply_mask"], [1631, 3, 1, "", "prune"], [1631, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1643, 1, 1, "", "PackedSequence"], [1644, 5, 1, "", "pack_padded_sequence"], [1645, 5, 1, "", "pack_sequence"], [1646, 5, 1, "", "pad_packed_sequence"], [1647, 5, 1, "", "pad_sequence"], [1648, 5, 1, "", "unpack_sequence"], [1649, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1643, 2, 1, "", "batch_sizes"], [1643, 3, 1, "", "count"], [1643, 2, 1, "", "data"], [1643, 3, 1, "", "index"], [1643, 4, 1, "", "is_cuda"], [1643, 3, 1, "", "is_pinned"], [1643, 2, 1, "", "sorted_indices"], [1643, 3, 1, "", "to"], [1643, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1652, 5, 1, "", "functional_call"]], "torch.onnx": [[1663, 1, 1, "", "ExportOptions"], [1664, 1, 1, "", "ExportOutput"], [1665, 1, 1, "", "ExportOutputSerializer"], [1666, 1, 1, "", "JitScalarType"], [1909, 5, 1, "", "disable_log"], [1909, 5, 1, "", "dynamo_export"], [1909, 5, 1, "", "enable_log"], [1909, 5, 1, "", "export"], [1909, 5, 1, "", "export_to_pretty_string"], [1909, 5, 1, "", "is_in_onnx_export"], [1909, 5, 1, "", "register_custom_op_symbolic"], [1909, 5, 1, "", "select_model_mode_for_export"], [1909, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1664, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1664, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1664, 4, 1, "", "diagnostic_context"], [1664, 4, 1, "", "model_proto"], [1664, 3, 1, "", "save"]], "torch.onnx.ExportOutputSerializer": [[1665, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1666, 3, 1, "", "dtype"], [1666, 3, 1, "", "from_dtype"], [1666, 3, 1, "", "from_value"], [1666, 3, 1, "", "onnx_compatible"], [1666, 3, 1, "", "onnx_type"], [1666, 3, 1, "", "scalar_name"], [1666, 3, 1, "", "torch_name"]], "torch.onnx._internal": [[1910, 0, 0, "-", "diagnostics"]], "torch.onnx._internal.diagnostics": [[1910, 1, 1, "", "ExportDiagnostic"]], "torch.onnx._internal.diagnostics.ExportDiagnostic": [[1910, 3, 1, "", "record_cpp_call_stack"]], "torch.onnx.verification": [[1667, 1, 1, "", "GraphInfo"], [1668, 1, 1, "", "VerificationOptions"], [1909, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1667, 3, 1, "", "all_mismatch_leaf_graph_info"], [1667, 3, 1, "", "clear"], [1667, 3, 1, "", "essential_node_count"], [1667, 3, 1, "", "essential_node_kinds"], [1667, 3, 1, "", "export_repro"], [1667, 3, 1, "", "find_mismatch"], [1667, 3, 1, "", "find_partition"], [1667, 3, 1, "", "has_mismatch"], [1667, 3, 1, "", "pretty_print_mismatch"], [1667, 3, 1, "", "pretty_print_tree"], [1667, 3, 1, "", "verify_export"]], "torch.optim": [[1669, 1, 1, "", "ASGD"], [1670, 1, 1, "", "Adadelta"], [1671, 1, 1, "", "Adagrad"], [1672, 1, 1, "", "Adam"], [1673, 1, 1, "", "AdamW"], [1674, 1, 1, "", "Adamax"], [1675, 1, 1, "", "LBFGS"], [1676, 1, 1, "", "NAdam"], [1912, 1, 1, "", "Optimizer"], [1682, 1, 1, "", "RAdam"], [1683, 1, 1, "", "RMSprop"], [1684, 1, 1, "", "Rprop"], [1685, 1, 1, "", "SGD"], [1686, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1669, 3, 1, "", "add_param_group"], [1669, 3, 1, "", "load_state_dict"], [1669, 3, 1, "", "register_step_post_hook"], [1669, 3, 1, "", "register_step_pre_hook"], [1669, 3, 1, "", "state_dict"], [1669, 3, 1, "", "step"], [1669, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1670, 3, 1, "", "add_param_group"], [1670, 3, 1, "", "load_state_dict"], [1670, 3, 1, "", "register_step_post_hook"], [1670, 3, 1, "", "register_step_pre_hook"], [1670, 3, 1, "", "state_dict"], [1670, 3, 1, "", "step"], [1670, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1671, 3, 1, "", "add_param_group"], [1671, 3, 1, "", "load_state_dict"], [1671, 3, 1, "", "register_step_post_hook"], [1671, 3, 1, "", "register_step_pre_hook"], [1671, 3, 1, "", "state_dict"], [1671, 3, 1, "", "step"], [1671, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1672, 3, 1, "", "add_param_group"], [1672, 3, 1, "", "load_state_dict"], [1672, 3, 1, "", "register_step_post_hook"], [1672, 3, 1, "", "register_step_pre_hook"], [1672, 3, 1, "", "state_dict"], [1672, 3, 1, "", "step"], [1672, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1673, 3, 1, "", "add_param_group"], [1673, 3, 1, "", "load_state_dict"], [1673, 3, 1, "", "register_step_post_hook"], [1673, 3, 1, "", "register_step_pre_hook"], [1673, 3, 1, "", "state_dict"], [1673, 3, 1, "", "step"], [1673, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1674, 3, 1, "", "add_param_group"], [1674, 3, 1, "", "load_state_dict"], [1674, 3, 1, "", "register_step_post_hook"], [1674, 3, 1, "", "register_step_pre_hook"], [1674, 3, 1, "", "state_dict"], [1674, 3, 1, "", "step"], [1674, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1675, 3, 1, "", "add_param_group"], [1675, 3, 1, "", "load_state_dict"], [1675, 3, 1, "", "register_step_post_hook"], [1675, 3, 1, "", "register_step_pre_hook"], [1675, 3, 1, "", "state_dict"], [1675, 3, 1, "", "step"], [1675, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1676, 3, 1, "", "add_param_group"], [1676, 3, 1, "", "load_state_dict"], [1676, 3, 1, "", "register_step_post_hook"], [1676, 3, 1, "", "register_step_pre_hook"], [1676, 3, 1, "", "state_dict"], [1676, 3, 1, "", "step"], [1676, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1677, 3, 1, "", "add_param_group"], [1678, 3, 1, "", "load_state_dict"], [1679, 3, 1, "", "state_dict"], [1680, 3, 1, "", "step"], [1681, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1682, 3, 1, "", "add_param_group"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "register_step_post_hook"], [1682, 3, 1, "", "register_step_pre_hook"], [1682, 3, 1, "", "state_dict"], [1682, 3, 1, "", "step"], [1682, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1683, 3, 1, "", "add_param_group"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "register_step_post_hook"], [1683, 3, 1, "", "register_step_pre_hook"], [1683, 3, 1, "", "state_dict"], [1683, 3, 1, "", "step"], [1683, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1684, 3, 1, "", "add_param_group"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "register_step_post_hook"], [1684, 3, 1, "", "register_step_pre_hook"], [1684, 3, 1, "", "state_dict"], [1684, 3, 1, "", "step"], [1684, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1685, 3, 1, "", "add_param_group"], [1685, 3, 1, "", "load_state_dict"], [1685, 3, 1, "", "register_step_post_hook"], [1685, 3, 1, "", "register_step_pre_hook"], [1685, 3, 1, "", "state_dict"], [1685, 3, 1, "", "step"], [1685, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1686, 3, 1, "", "add_param_group"], [1686, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "register_step_post_hook"], [1686, 3, 1, "", "register_step_pre_hook"], [1686, 3, 1, "", "state_dict"], [1686, 3, 1, "", "step"], [1686, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1687, 1, 1, "", "ChainedScheduler"], [1688, 1, 1, "", "ConstantLR"], [1689, 1, 1, "", "CosineAnnealingLR"], [1690, 1, 1, "", "CosineAnnealingWarmRestarts"], [1691, 1, 1, "", "CyclicLR"], [1692, 1, 1, "", "ExponentialLR"], [1693, 1, 1, "", "LambdaLR"], [1694, 1, 1, "", "LinearLR"], [1695, 1, 1, "", "MultiStepLR"], [1696, 1, 1, "", "MultiplicativeLR"], [1697, 1, 1, "", "OneCycleLR"], [1698, 1, 1, "", "PolynomialLR"], [1699, 1, 1, "", "ReduceLROnPlateau"], [1700, 1, 1, "", "SequentialLR"], [1701, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1687, 3, 1, "", "get_last_lr"], [1687, 3, 1, "", "load_state_dict"], [1687, 3, 1, "", "print_lr"], [1687, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1688, 3, 1, "", "get_last_lr"], [1688, 3, 1, "", "load_state_dict"], [1688, 3, 1, "", "print_lr"], [1688, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1689, 3, 1, "", "get_last_lr"], [1689, 3, 1, "", "load_state_dict"], [1689, 3, 1, "", "print_lr"], [1689, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1690, 3, 1, "", "get_last_lr"], [1690, 3, 1, "", "load_state_dict"], [1690, 3, 1, "", "print_lr"], [1690, 3, 1, "", "state_dict"], [1690, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1691, 3, 1, "", "get_last_lr"], [1691, 3, 1, "", "get_lr"], [1691, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1692, 3, 1, "", "get_last_lr"], [1692, 3, 1, "", "load_state_dict"], [1692, 3, 1, "", "print_lr"], [1692, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1693, 3, 1, "", "get_last_lr"], [1693, 3, 1, "", "load_state_dict"], [1693, 3, 1, "", "print_lr"], [1693, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1694, 3, 1, "", "get_last_lr"], [1694, 3, 1, "", "load_state_dict"], [1694, 3, 1, "", "print_lr"], [1694, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1695, 3, 1, "", "get_last_lr"], [1695, 3, 1, "", "load_state_dict"], [1695, 3, 1, "", "print_lr"], [1695, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1696, 3, 1, "", "get_last_lr"], [1696, 3, 1, "", "load_state_dict"], [1696, 3, 1, "", "print_lr"], [1696, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1697, 3, 1, "", "get_last_lr"], [1697, 3, 1, "", "load_state_dict"], [1697, 3, 1, "", "print_lr"], [1697, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1698, 3, 1, "", "get_last_lr"], [1698, 3, 1, "", "load_state_dict"], [1698, 3, 1, "", "print_lr"], [1698, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1700, 3, 1, "", "get_last_lr"], [1700, 3, 1, "", "load_state_dict"], [1700, 3, 1, "", "print_lr"], [1700, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1701, 3, 1, "", "get_last_lr"], [1701, 3, 1, "", "load_state_dict"], [1701, 3, 1, "", "print_lr"], [1701, 3, 1, "", "state_dict"]], "torch.overrides": [[1936, 5, 1, "", "get_ignored_functions"], [1936, 5, 1, "", "get_overridable_functions"], [1936, 5, 1, "", "get_testing_overrides"], [1936, 5, 1, "", "handle_torch_function"], [1936, 5, 1, "", "has_torch_function"], [1936, 5, 1, "", "is_tensor_like"], [1936, 5, 1, "", "is_tensor_method_or_property"], [1936, 5, 1, "", "resolve_name"], [1936, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1913, 1, 1, "", "Directory"], [1913, 1, 1, "", "EmptyMatchError"], [1913, 1, 1, "", "PackageExporter"], [1913, 1, 1, "", "PackageImporter"], [1913, 1, 1, "", "PackagingError"], [1913, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1913, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1913, 3, 1, "", "__init__"], [1913, 3, 1, "", "add_dependency"], [1913, 3, 1, "", "all_paths"], [1913, 3, 1, "", "close"], [1913, 3, 1, "", "denied_modules"], [1913, 3, 1, "", "deny"], [1913, 3, 1, "", "dependency_graph_string"], [1913, 3, 1, "", "extern"], [1913, 3, 1, "", "externed_modules"], [1913, 3, 1, "", "get_rdeps"], [1913, 3, 1, "", "get_unique_id"], [1913, 3, 1, "", "intern"], [1913, 3, 1, "", "interned_modules"], [1913, 3, 1, "", "mock"], [1913, 3, 1, "", "mocked_modules"], [1913, 3, 1, "", "register_extern_hook"], [1913, 3, 1, "", "register_intern_hook"], [1913, 3, 1, "", "register_mock_hook"], [1913, 3, 1, "", "save_binary"], [1913, 3, 1, "", "save_module"], [1913, 3, 1, "", "save_pickle"], [1913, 3, 1, "", "save_source_file"], [1913, 3, 1, "", "save_source_string"], [1913, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1913, 3, 1, "", "__init__"], [1913, 3, 1, "", "file_structure"], [1913, 3, 1, "", "id"], [1913, 3, 1, "", "import_module"], [1913, 3, 1, "", "load_binary"], [1913, 3, 1, "", "load_pickle"], [1913, 3, 1, "", "load_text"], [1913, 3, 1, "", "python_version"]], "torch.profiler": [[1915, 1, 1, "", "ProfilerAction"], [1915, 1, 1, "", "ProfilerActivity"], [1915, 1, 1, "", "_KinetoProfile"], [1915, 1, 1, "", "profile"], [1915, 5, 1, "", "schedule"], [1915, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1915, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1915, 3, 1, "", "add_metadata"], [1915, 3, 1, "", "add_metadata_json"], [1915, 3, 1, "", "events"], [1915, 3, 1, "", "export_chrome_trace"], [1915, 3, 1, "", "export_memory_timeline"], [1915, 3, 1, "", "export_stacks"], [1915, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1915, 5, 1, "", "is_available"], [1915, 5, 1, "", "mark"], [1915, 5, 1, "", "range_pop"], [1915, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1915, 3, 1, "", "step"]], "torch.quantization": [[1919, 0, 0, "-", "fx"]], "torch.quasirandom": [[1722, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1722, 3, 1, "", "draw"], [1722, 3, 1, "", "draw_base2"], [1722, 3, 1, "", "fast_forward"], [1722, 3, 1, "", "reset"]], "torch.random": [[1920, 5, 1, "", "fork_rng"], [1920, 5, 1, "", "get_rng_state"], [1920, 5, 1, "", "initial_seed"], [1920, 5, 1, "", "manual_seed"], [1920, 5, 1, "", "seed"], [1920, 5, 1, "", "set_rng_state"]], "torch.serialization": [[1907, 5, 1, "", "register_package"]], "torch.signal": [[1924, 0, 0, "-", "windows"]], "torch.signal.windows": [[1770, 5, 1, "", "bartlett"], [1771, 5, 1, "", "blackman"], [1772, 5, 1, "", "cosine"], [1773, 5, 1, "", "exponential"], [1774, 5, 1, "", "gaussian"], [1775, 5, 1, "", "general_cosine"], [1776, 5, 1, "", "general_hamming"], [1777, 5, 1, "", "hamming"], [1778, 5, 1, "", "hann"], [1779, 5, 1, "", "kaiser"], [1780, 5, 1, "", "nuttall"]], "torch.sparse": [[1790, 5, 1, "", "addmm"], [1791, 1, 1, "", "check_sparse_tensor_invariants"], [1792, 5, 1, "", "log_softmax"], [1793, 5, 1, "", "mm"], [1794, 5, 1, "", "sampled_addmm"], [1795, 5, 1, "", "softmax"], [1796, 5, 1, "", "spdiags"], [1797, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1791, 3, 1, "", "disable"], [1791, 3, 1, "", "enable"], [1791, 3, 1, "", "is_enabled"]], "torch.special": [[1926, 5, 1, "", "airy_ai"], [1926, 5, 1, "", "bessel_j0"], [1926, 5, 1, "", "bessel_j1"], [1926, 5, 1, "", "digamma"], [1926, 5, 1, "", "entr"], [1926, 5, 1, "", "erf"], [1926, 5, 1, "", "erfc"], [1926, 5, 1, "", "erfcx"], [1926, 5, 1, "", "erfinv"], [1926, 5, 1, "", "exp2"], [1926, 5, 1, "", "expit"], [1926, 5, 1, "", "expm1"], [1926, 5, 1, "", "gammainc"], [1926, 5, 1, "", "gammaincc"], [1926, 5, 1, "", "gammaln"], [1926, 5, 1, "", "i0"], [1926, 5, 1, "", "i0e"], [1926, 5, 1, "", "i1"], [1926, 5, 1, "", "i1e"], [1926, 5, 1, "", "log1p"], [1926, 5, 1, "", "log_ndtr"], [1926, 5, 1, "", "log_softmax"], [1926, 5, 1, "", "logit"], [1926, 5, 1, "", "logsumexp"], [1926, 5, 1, "", "multigammaln"], [1926, 5, 1, "", "ndtr"], [1926, 5, 1, "", "ndtri"], [1926, 5, 1, "", "polygamma"], [1926, 5, 1, "", "psi"], [1926, 5, 1, "", "round"], [1926, 5, 1, "", "scaled_modified_bessel_k0"], [1926, 5, 1, "", "scaled_modified_bessel_k1"], [1926, 5, 1, "", "sinc"], [1926, 5, 1, "", "softmax"], [1926, 5, 1, "", "spherical_bessel_j0"], [1926, 5, 1, "", "xlog1py"], [1926, 5, 1, "", "xlogy"], [1926, 5, 1, "", "zeta"]], "torch.testing": [[1932, 5, 1, "", "assert_allclose"], [1932, 5, 1, "", "assert_close"], [1932, 5, 1, "", "make_tensor"]], "torch.torch": [[1933, 2, 1, "", "default_generator"], [1937, 1, 1, "", "finfo"], [1937, 1, 1, "", "iinfo"]], "torch.utils": [[1933, 0, 0, "-", "backcompat"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [39, 0, 0, "-", "data"], [1933, 0, 0, "-", "hipify"], [1874, 0, 0, "-", "jit"], [1933, 0, 0, "-", "model_dump"], [1880, 0, 0, "-", "model_zoo"], [1930, 0, 0, "-", "tensorboard"], [1933, 0, 0, "-", "viz"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[33, 5, 1, "", "BuildExtension"], [33, 5, 1, "", "CUDAExtension"], [33, 5, 1, "", "CppExtension"], [33, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [33, 5, 1, "", "include_paths"], [33, 5, 1, "", "is_ninja_available"], [33, 5, 1, "", "load"], [33, 5, 1, "", "load_inline"], [33, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[39, 1, 1, "", "BatchSampler"], [39, 1, 1, "", "ChainDataset"], [39, 1, 1, "", "ConcatDataset"], [39, 1, 1, "", "DataLoader"], [39, 1, 1, "", "Dataset"], [39, 1, 1, "", "IterableDataset"], [39, 1, 1, "", "RandomSampler"], [39, 1, 1, "", "Sampler"], [39, 1, 1, "", "SequentialSampler"], [39, 1, 1, "", "StackDataset"], [39, 1, 1, "", "Subset"], [39, 1, 1, "", "SubsetRandomSampler"], [39, 1, 1, "", "TensorDataset"], [39, 1, 1, "", "WeightedRandomSampler"], [39, 0, 0, "-", "datapipes"], [39, 5, 1, "", "default_collate"], [39, 5, 1, "", "default_convert"], [39, 5, 1, "", "get_worker_info"], [39, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[39, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[39, 0, 0, "-", "dataframe"], [39, 0, 0, "-", "iter"], [39, 0, 0, "-", "map"], [39, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[39, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[49, 5, 1, "", "from_dlpack"], [49, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1879, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1880, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1930, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1930, 3, 1, "", "__init__"], [1930, 3, 1, "", "add_audio"], [1930, 3, 1, "", "add_custom_scalars"], [1930, 3, 1, "", "add_embedding"], [1930, 3, 1, "", "add_figure"], [1930, 3, 1, "", "add_graph"], [1930, 3, 1, "", "add_histogram"], [1930, 3, 1, "", "add_hparams"], [1930, 3, 1, "", "add_image"], [1930, 3, 1, "", "add_images"], [1930, 3, 1, "", "add_mesh"], [1930, 3, 1, "", "add_pr_curve"], [1930, 3, 1, "", "add_scalar"], [1930, 3, 1, "", "add_scalars"], [1930, 3, 1, "", "add_text"], [1930, 3, 1, "", "add_video"], [1930, 3, 1, "", "close"], [1930, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 39, 1868, 1890, 1897], "mix": [0, 1868, 1890], "precis": [0, 1890, 1894, 1905], "packag": [0, 1, 34, 42, 1883, 1908, 1913], "torch": [0, 1, 2, 3, 4, 5, 10, 18, 21, 25, 27, 30, 32, 33, 35, 39, 41, 42, 44, 45, 47, 48, 49, 60, 63, 65, 66, 68, 69, 70, 71, 72, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 976, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1677, 1678, 1679, 1680, 1681, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1887, 1888, 1889, 1894, 1896, 1897, 1900, 1905, 1907, 1909, 1910, 1912, 1913, 1915, 1919, 1920, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937], "amp": [0, 1894], "autocast": [0, 1890], "gradient": [0, 1, 70, 1151, 1890, 1891, 1897, 1933], "scale": [0, 1890, 1901], "op": [0, 86, 1873, 1890, 1909, 1933], "refer": [0, 30, 36, 66, 72, 1868, 1870, 1871, 1872, 1881, 1885, 1900, 1910, 1913, 1915, 1916, 1919, 1923, 1931], "elig": 0, "cuda": [0, 2, 10, 11, 25, 35, 36, 212, 976, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1883, 1890, 1894, 1898, 1900, 1904, 1906, 1908], "specif": [0, 39, 1925], "behavior": [0, 39, 1891, 1899], "can": [0, 24, 1891, 1898], "float16": 0, "float32": 0, "promot": [0, 7], "widest": 0, "input": [0, 1884, 1890, 1899], "type": [0, 39, 602, 1870, 1871, 1896, 1909, 1913, 1931, 1937], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1502], "over": [0, 8, 1870], "binary_cross_entropi": [0, 1501], "cpu": [0, 2, 10, 209, 1891, 1893, 1904, 1916], "bfloat16": [0, 158], "differenti": [1, 1891], "autograd": [1, 10, 31, 34, 69, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 1885, 1890, 1891, 1896, 1897, 1909, 1921, 1922], "forward": [1, 889, 1896, 1922], "mode": [1, 60, 67, 416, 1303, 1891, 1896, 1899, 1909, 1916, 1922], "function": [1, 27, 42, 48, 63, 65, 66, 68, 70, 72, 79, 84, 88, 89, 888, 889, 890, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 1128, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1868, 1869, 1870, 1871, 1873, 1876, 1878, 1884, 1886, 1887, 1888, 1890, 1891, 1897, 1899, 1907, 1909, 1919, 1925, 1926, 1936], "higher": 1, "level": [1, 10, 86, 1919], "api": [1, 10, 14, 15, 17, 30, 34, 36, 45, 53, 66, 69, 72, 1866, 1868, 1871, 1881, 1885, 1893, 1894, 1896, 1900, 1901, 1910, 1913, 1914, 1915, 1916, 1919], "local": [1, 24, 28, 1871, 1891, 1933], "disabl": [1, 39, 957, 1868, 1891, 1933], "comput": [1, 70, 1891, 1905, 1922, 1933], "default": [1, 39, 40, 1870, 1891, 1894, 1899, 1918], "layout": [1, 1928], "manual": 1, "In": [1, 8, 1891, 1892, 1933], "place": [1, 69, 1884, 1891, 1892, 1909, 1933], "oper": [1, 10, 15, 40, 42, 69, 90, 1870, 1871, 1876, 1878, 1884, 1885, 1886, 1891, 1896, 1901, 1908, 1909, 1911, 1916, 1925, 1931, 1933], "tensor": [1, 15, 31, 34, 47, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 1830, 1869, 1873, 1876, 1883, 1884, 1885, 1886, 1891, 1896, 1907, 1909, 1916, 1919, 1925, 1928, 1929, 1931, 1933], "correct": [1, 72, 1891], "check": [1, 24, 72, 1868, 1891, 1900], "variabl": [1, 20, 42, 60, 1868, 1870, 1871, 1894], "deprec": 1, "context": [1, 43, 57, 1922], "method": [1, 52, 53, 56, 61, 1869, 1870, 1873, 1909, 1919, 1925], "mixin": 1, "numer": [1, 1899, 1905, 1917], "profil": [1, 22, 25, 29, 42, 914, 915, 916, 917, 918, 1311, 1312, 1313, 1882, 1901, 1902, 1915], "anomali": 1, "detect": 1, "graph": [1, 11, 16, 25, 28, 29, 35, 72, 909, 910, 911, 912, 913, 1006, 1868, 1891, 1894, 1916], "backend": [2, 12, 19, 29, 42, 59, 60, 1868, 1900, 1903, 1916, 1918, 1921], "cudnn": 2, "mp": [2, 10, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1882, 1903], "mkl": 2, "mkldnn": [2, 10], "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 1906], "util": [3, 4, 5, 10, 28, 33, 39, 42, 49, 66, 68, 1049, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1874, 1879, 1880, 1887, 1907, 1919, 1930, 1933, 1935], "bottleneck": 4, "checkpoint": [5, 40, 44], "pytorch": [6, 7, 8, 9, 10, 11, 19, 23, 24, 29, 34, 41, 42, 69, 1866, 1868, 1869, 1873, 1891, 1894, 1896, 1906, 1907, 1909, 1914], "govern": [6, 9, 10], "build": [6, 7, 10, 1893, 1901, 1902, 1908], "ci": [6, 10], "how": [6, 15, 16, 24, 40, 67, 1865, 1891, 1896, 1912, 1913], "add": [6, 9, 78, 100, 684], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1909], "guid": 7, "process": [7, 9, 39, 57, 1890], "get": [7, 16, 19, 45, 1909], "start": [7, 19, 45, 57, 1312], "propos": 7, "featur": [7, 1901, 1902], "report": [7, 1898], "issu": [7, 25, 29, 1868], "implement": [7, 15, 50, 59, 61, 1865, 1895, 1899, 1909, 1917, 1923], "fix": [7, 60, 67, 263, 1109], "bug": 7, "ad": [7, 1896, 1909], "tutori": [7, 10, 1913, 1914, 1921], "improv": [7, 1902], "document": [7, 45, 1866], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 16, 19, 72, 1868, 1894, 1913], "readabl": 7, "test": [7, 24, 1871, 1896, 1913, 1932], "case": [7, 1868], "make": [7, 9, 11, 20, 82], "codebas": 7, "more": [7, 21, 65, 1921], "robust": 7, "triag": 7, "about": [7, 15, 1891, 1921], "sourc": [7, 1906, 1908, 1913], "develop": [7, 1866, 1909], "common": [7, 42, 72, 1901, 1916], "mistak": 7, "To": 7, "avoid": [7, 1904, 1906, 1909, 1913], "frequent": [7, 16, 1868, 1898, 1909, 1916], "ask": [7, 16, 1868, 1898, 1909, 1916], "question": [7, 16, 1868, 1898, 1909, 1916], "On": [7, 40, 1870], "python": [7, 8, 20, 69, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1896, 1906, 1909], "doc": [7, 10, 1900], "c": [7, 10, 34, 1891, 1896, 1900, 1907, 1909], "overview": [7, 12, 20, 26, 36, 72, 1910, 1913, 1915, 1925], "design": [8, 1871, 1895, 1921, 1922, 1923], "philosophi": 8, "principl": [8, 9], "1": [8, 60, 67, 1868, 1897], "usabl": 8, "perform": [8, 10, 15, 24, 25, 29, 1902, 1907], "2": [8, 23, 24, 27, 29, 67, 1868, 1894, 1897, 1898], "simpl": [8, 1870, 1871, 1902, 1922], "easi": 8, "3": [8, 60, 67], "first": [8, 1913], "best": [8, 1894, 1904, 1916], "class": [8, 52, 72, 1868, 1870, 1871, 1873, 1909, 1912, 1913, 1931], "languag": [8, 1866, 1868, 1870, 1871, 1872], "interoper": 8, "mechan": [9, 1888, 1891, 1899], "summari": [9, 20, 1916], "modul": [9, 10, 23, 66, 68, 72, 1430, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1868, 1869, 1870, 1871, 1873, 1887, 1891, 1896, 1902, 1907, 1913, 1916], "core": [9, 10, 1867], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1871], "confirm": 9, "remov": [9, 1640, 1884], "The": [9, 14, 72, 1871, 1891], "re": [9, 1913], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 16, 60, 67], "controversi": 9, "gener": [9, 35, 43, 69, 72, 91, 1892, 1897, 1906, 1916, 1917, 1933], "polici": [9, 14], "faq": [9, 1908], "respons": 10, "nn": [10, 23, 66, 68, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1870, 1871, 1887, 1888, 1889, 1891, 1894, 1896, 1907, 1919, 1925], "optim": [10, 19, 21, 46, 1677, 1678, 1679, 1680, 1681, 1890, 1891, 1912, 1921, 1922, 1933], "compil": [10, 16, 18, 21, 25, 27, 29, 30, 68, 952, 954, 955, 956, 957, 958, 959, 1866, 1894], "jit": [10, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1868, 1871, 1874], "torchscript": [10, 34, 1868, 1869, 1870, 1871, 1873, 1893, 1901, 1911, 1913], "fx": [10, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 1902, 1916, 1919, 1935], "torchdynamo": [10, 11, 13, 16, 17, 29, 1895, 1909], "distribut": [10, 16, 42, 44, 45, 46, 47, 48, 60, 1887, 1888, 1895, 1900, 1902, 1921, 1922], "rng": 10, "multiprocess": [10, 57, 1883, 1894, 1904, 1908], "dataload": [10, 1906], "linear": [10, 31, 731, 732, 755, 763, 780, 1135, 1417, 1546, 1887, 1888, 1905, 1925], "algebra": [10, 31, 1905, 1925], "linalg": [10, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1876, 1905], "spars": [10, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1887, 1888, 1925], "nestedtensor": 10, "nest": [10, 1886], "maskedtensor": [10, 1878], "mask": [10, 1878], "fast": [10, 63, 1899, 1922], "fourier": [10, 63], "transform": [10, 27, 28, 48, 63, 65, 66, 68, 70, 72, 1473, 1887, 1896, 1902], "fft": [10, 63, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108], "inductor": [10, 16], "gpu": [10, 22, 42, 1887, 1888, 1890, 1898, 1914], "triton": 10, "nvfuser": 10, "amd": [10, 1905], "rocm": [10, 1900], "hip": [10, 1900], "tool": [10, 35, 1917, 1925], "c10": 10, "dispatch": 10, "onnx": [10, 80, 81, 87, 1909, 1910, 1911], "export": [10, 16, 1909, 1913], "mobil": 10, "edg": [10, 1868, 1913], "model": [10, 14, 34, 1865, 1890, 1898, 1901, 1912, 1913, 1914, 1916, 1919], "compress": [10, 1925], "window": [10, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1908, 1924], "appl": 10, "m1": 10, "powerpc": 10, "librari": [10, 1866, 1875, 1906], "xla": 10, "torchserv": 10, "torchvis": [10, 67], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "cudagraph": [11, 972], "tree": 11, "background": [11, 1899, 1922, 1923], "integr": 11, "callabl": 11, "previou": 11, "limit": [11, 23, 69, 72, 1865, 1897, 1909], "comparison": [11, 1868, 1870, 1871, 1933], "custom": [12, 51, 61, 72, 88, 1871, 1890, 1894, 1896, 1897, 1902, 1909, 1912, 1913, 1916], "regist": [12, 1891], "after": 12, "aotautograd": [12, 76], "exampl": [12, 54, 72, 1890, 1895, 1896, 1897, 1909, 1922], "debug": [12, 29, 40, 42, 72, 86, 1868, 1916, 1917], "speedi": 12, "compos": [12, 65, 70], "deeper": 13, "dive": 13, "what": [13, 24, 25, 40, 65, 67, 70, 1878, 1891, 1913], "i": [13, 15, 16, 24, 70, 1878, 1891, 1913], "guard": [13, 14, 20], "dynamo": [13, 16, 82], "do": [13, 16, 19, 1913], "dynam": [14, 15, 59, 69, 72, 1916, 1919], "shape": [14, 15, 69, 87, 1909], "motiv": [14, 15, 1878], "abridg": 14, "public": 14, "overal": [14, 15], "architectur": [14, 15], "intern": [14, 1895, 1909, 1913], "dimdynam": 14, "unback": 14, "symint": 14, "fake": 15, "relat": [15, 1919], "work": [15, 25, 27, 39, 66, 1890, 1898, 1925], "import": [15, 60, 1865, 1908, 1913], "bit": 15, "detail": 15, "subclass": [15, 1896], "each": [15, 1913], "individu": 15, "doe": [15, 40, 1891], "convert": [15, 77, 796], "characterist": 15, "interact": [15, 27], "other": [15, 42, 1887, 1906, 1913, 1925, 1933], "resourc": [15, 1913], "you": [16, 19], "support": [16, 23, 90, 1869, 1871, 1878, 1884, 1885, 1886, 1897, 1909, 1911, 1916, 1925], "still": 16, "need": [16, 19, 1890], "whole": [16, 1894], "why": [16, 19, 65, 70, 1894, 1899, 1913, 1925], "my": [16, 24, 1865, 1891, 1898, 1913], "crash": 16, "error": [16, 29, 52, 1898, 1908, 1916, 1917], "torchinductor": [16, 22, 24, 29], "slow": 16, "excess": [16, 29], "recompil": [16, 29], "ar": [16, 65, 70, 1865, 1891, 1913], "product": [16, 70, 1876], "speed": [16, 1908], "up": [16, 60], "am": 16, "see": [16, 1913], "speedup": 16, "break": [16, 25, 29, 1870, 1871], "identifi": [16, 29, 1871], "caus": [16, 29], "didn": 16, "t": [16, 27, 569, 1825, 1871, 1898], "when": [16, 1871, 1891, 1896, 1909, 1916, 1925], "incorrect": 16, "result": 16, "oom": 16, "control": [17, 69, 72, 1906], "fine": 17, "grain": 17, "trace": [17, 25, 72, 590, 1213, 1835, 1868, 1909, 1915, 1916], "exist": 19, "anoth": [19, 1897], "wai": 19, "cach": [20, 1620, 1865, 1894, 1900], "frame": 20, "evalu": [20, 1891, 1899], "pep": 20, "523": 20, "instructiontransl": 20, "troubleshoot": [21, 29], "gotcha": [21, 1897], "learn": [21, 1912], "0": [23, 24, 27, 29], "nnmodul": 23, "hook": [23, 40, 1891, 1902], "__call__": 23, "usag": [23, 36, 45, 60, 1894, 1897, 1901, 1902, 1908], "state_dict": [23, 1679], "dashboard": 24, "read": [24, 65, 1909], "measur": 24, "pr": 24, "affect": 24, "": [24, 67, 1913], "befor": 24, "merg": 24, "run": [24, 1865], "ani": [24, 121, 698, 1871], "understand": 25, "us": [25, 27, 29, 40, 42, 72, 1870, 1891, 1894, 1896, 1899, 1909, 1912, 1913, 1914, 1916, 1925], "basic": [25, 42, 1871, 1885, 1897, 1921, 1931], "view": [25, 616, 1878, 1907, 1929], "around": 25, "time": [25, 1894], "find": [25, 1913], "launch": [25, 42, 60], "overhead": 25, "technic": 26, "func": [27, 65, 66, 68, 70, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1896, 1897], "appli": 27, "d": 27, "doesn": [27, 1898], "pt": 27, "call": [27, 84, 1870, 1871, 1897], "insid": [27, 1913], "ed": 27, "workaround": 27, "_dynamo": 27, "allow_in_graph": [27, 954], "write": [28, 61, 72, 1891, 1896, 1909], "aten": [28, 1867, 1909], "ir": [28, 78, 1867], "pass": [28, 77, 83, 1871, 1894, 1904, 1916, 1922], "One": [28, 1908], "x": 28, "none": 28, "inform": [28, 1899, 1921], "subgraph": [28, 72], "rewrit": [28, 72], "manag": [28, 35, 43, 1883, 1894, 1900, 1913], "partition": 28, "matcher": 28, "capabl": 28, "base": [28, 1912], "titl": 29, "diagnos": 29, "runtim": [29, 1893, 1898], "minifi": 29, "access": [29, 31, 1870, 1913], "torch_compile_debug": 29, "accuraci": [29, 1905, 1916, 1917], "file": [29, 42, 1883, 1913], "an": [29, 1865, 1909, 1912, 1913], "complex": [31, 960, 1891, 1899], "number": [31, 35, 60, 1891, 1893, 1898, 1906, 1933], "creat": [31, 1868, 1885], "transit": [31, 60], "from": [31, 60, 68, 72, 1865, 1884, 1908, 1909, 1913], "old": 31, "represent": 31, "real": [31, 484, 1733, 1899], "imag": [31, 313, 1168], "angl": [31, 120, 697], "ab": [31, 92, 680], "serial": [31, 1907, 1933], "__config__": 32, "cpp_extens": 33, "extend": [34, 50, 1896, 1897], "extens": [34, 35, 1896, 1901, 1908], "author": [34, 72], "random": [35, 39, 69, 1898, 1906, 1920, 1933], "commun": [35, 40, 42, 1866], "collect": [35, 42], "stream": [35, 36, 977, 1046, 1894], "event": [35, 51, 53, 974], "beta": [35, 48], "memori": [35, 39, 1894, 1898, 1900, 1902], "nvidia": [35, 1905], "nvtx": [35, 1031, 1032, 1033], "jiter": [35, 1014, 1015], "sanit": [35, 36], "prototyp": [35, 1916, 1917], "data": [39, 69, 1871, 1895, 1898, 1909, 1917, 1931], "dataset": 39, "map": [39, 1900], "style": 39, "iter": [39, 1870], "load": [39, 1205, 1269, 1865, 1907, 1913, 1916], "order": [39, 1891], "sampler": 39, "batch": [39, 67, 1905, 1912], "non": [39, 72, 1887, 1888, 1891, 1894, 1905, 1913, 1916], "collate_fn": 39, "singl": [39, 60, 1890], "multi": [39, 42, 60, 1887, 1888], "platform": 39, "pin": [39, 1894], "ddp": 40, "powersgd": 40, "state": [40, 1902, 1913], "acknowledg": [40, 1914], "deploi": 41, "ha": 41, "been": 41, "move": 41, "multipi": 41, "come": [42, 1891], "which": [42, 1891], "environ": [42, 60, 1894, 1901, 1913], "choos": 42, "network": [42, 1894, 1898, 1902], "interfac": [42, 1900], "nccl": [42, 1894], "initi": [42, 1887, 1902, 1931], "tcp": 42, "share": [42, 1883, 1894, 1913, 1923], "system": [42, 1871, 1883, 1897], "post": [42, 1916], "kei": [42, 1908], "valu": [42, 613, 1870, 1871, 1905, 1918, 1923], "store": [42, 59], "group": 42, "point": [42, 1901], "synchron": [42, 1047, 1317], "asynchron": [42, 1871, 1894, 1904], "third": 42, "parti": 42, "spawn": [42, 1883], "applic": 42, "monitor": [42, 1881], "barrier": 42, "torch_distributed_debug": 42, "log": [42, 371, 1271, 1901], "join": [43, 1933], "elast": [45, 50, 60], "advanc": [45, 1902], "plugin": 45, "parallel": [47, 1594, 1894, 1895, 1898, 1914, 1933], "probabl": 48, "score": 48, "pathwis": 48, "deriv": [48, 1891], "exponentialfamili": 48, "bernoulli": [48, 156, 922], "binomi": 48, "categor": 48, "cauchi": 48, "chi2": 48, "continuousbernoulli": 48, "dirichlet": 48, "exponenti": [48, 1773], "fishersnedecor": 48, "gamma": 48, "geometr": 48, "gumbel": 48, "halfcauchi": 48, "halfnorm": 48, "independ": 48, "kumaraswami": 48, "lkjcholeski": 48, "laplac": 48, "lognorm": 48, "lowrankmultivariatenorm": 48, "mixturesamefamili": 48, "multinomi": [48, 422, 1320], "multivariatenorm": 48, "negativebinomi": 48, "normal": [48, 1565, 1658, 1887, 1912], "onehotcategor": 48, "pareto": 48, "poisson": [48, 1708], "relaxedbernoulli": 48, "logitrelaxedbernoulli": 48, "relaxedonehotcategor": 48, "studentt": 48, "transformeddistribut": 48, "uniform": 48, "vonmis": 48, "weibul": 48, "wishart": 48, "kl": 48, "diverg": [48, 1873], "constraint": [48, 1894], "registri": [48, 59], "dlpack": 49, "agent": 50, "server": [50, 59, 61], "concept": 50, "watchdog": 50, "launcher": 51, "rendezv": [51, 59, 60], "handler": [51, 56, 59, 1898], "metric": [51, 56], "propag": [52, 1885], "object": [53, 1913], "torchelast": 55, "kubernet": 55, "multipl": [57, 1890, 1894, 1896, 1914], "worker": [57, 60, 1898], "quickstart": 58, "except": [59, 1898], "c10d": 59, "etcd": 59, "legaci": 59, "torchrun": 60, "node": [60, 78, 81, 85, 87, 909, 910, 911, 912, 913, 1891], "stack": [60, 1809, 1916], "fault": 60, "toler": 60, "size": [60, 536, 1886], "failur": [60, 75], "min": [60, 413, 1300], "max": [60, 409, 1295], "4": [60, 67], "membership": [60, 1871], "note": [60, 1866, 1871, 1894, 1916, 1921], "definit": [60, 1871], "deploy": [60, 1901], "notic": [60, 1865], "expir": 61, "timer": 61, "client": 61, "train": [62, 1890, 1902, 1904, 1916], "script": [62, 1209, 1868, 1908, 1909], "helper": 63, "fullyshardeddataparallel": 64, "patch": [67, 1913], "norm": [67, 454, 1254, 1657], "happen": 67, "option": [67, 1870, 1893, 1908, 1912], "batchnorm": 67, "paramet": [67, 1611, 1870, 1912], "functorch": [67, 68], "eval": [67, 1891], "migrat": [68, 1868], "make_funct": 68, "combine_state_for_ensembl": 68, "ux": 69, "vmap": [69, 70, 891, 1139, 1858, 1896, 1897], "mutat": [69, 1933], "arbitrari": [69, 1913], "structur": [69, 1871, 1925], "out": [69, 1884, 1898], "depend": [69, 1913, 1922], "flow": [69, 72, 1916], "item": [69, 354], "nonzero": [69, 453, 1656], "friend": 69, "whirlwind": 70, "tour": 70, "grad": [70, 292, 906, 1129, 1891, 1894], "auto": 70, "vector": 70, "vjp": [70, 905, 1138], "jacobian": [70, 902], "jvp": [70, 890, 903, 1134, 1897], "jacrev": [70, 1133], "jacfwd": [70, 1132], "hessian": [70, 900, 1131], "futur": 71, "A": [72, 1902], "quick": 72, "primer": 72, "manipul": [72, 1885], "direct": 72, "With": [72, 1873], "replace_pattern": 72, "proxi": 72, "retrac": 72, "interpret": [72, 1868], "pattern": [72, 1870, 1909, 1913], "introduct": [72, 1878, 1886, 1916], "pitfal": [72, 1909], "pdb": 72, "print": [72, 1870, 1871], "to_fold": 72, "graphmodul": 72, "avail": 72, "debugg": 72, "symbol": [72, 79, 84, 88, 89, 1909, 1916, 1933], "static": [72, 1909, 1916], "tracer": [72, 74, 75, 1868], "leaf": 72, "miscellanea": 72, "diagsys0001": 73, "arg": 73, "format": [73, 1913], "too": 73, "verbos": 73, "fxe0001": 74, "success": 74, "fxe0002": 75, "fxe0003": 76, "frontend": [76, 82], "fxe0004": 77, "neg": [77, 441, 443, 1332, 1333], "sigmoid": [77, 525, 758, 1460, 1581, 1768], "fxe0005": 78, "fxe0006": 79, "atenlib": [79, 80], "fxe0007": 80, "fxe0008": 81, "fxe0009": 82, "fxe0010": 83, "fxe0011": 84, "fxe0012": 85, "unsupport": [85, 1870, 1871, 1873, 1909, 1911], "analysi": 85, "fxe0013": 86, "poe0001": 87, "miss": [87, 88, 89], "infer": [87, 1885, 1891, 1893, 1907], "poe0002": 88, "poe0003": 89, "standard": 89, "poe0004": 90, "newer": 90, "opset": 90, "version": [90, 1907], "abs_": 93, "absolut": [94, 681], "absolute_": 95, "aco": [96, 682], "acos_": 97, "acosh": [98, 683], "acosh_": 99, "add_": 101, "addbmm": [102, 685], "addbmm_": 103, "addcdiv": [104, 686], "addcdiv_": 105, "addcmul": [106, 687], "addcmul_": 107, "addmm": [108, 688, 1790], "addmm_": 109, "addmv": [110, 689], "addmv_": 111, "addr": [112, 690], "addr_": 113, "adjoint": [114, 691], "all": [115, 692, 1896, 1909, 1912], "allclos": [116, 693], "amax": [117, 694], "amin": [118, 695], "aminmax": [119, 696], "apply_": 122, "arcco": [123, 865], "arccos_": 124, "arccosh": [125, 866], "arccosh_": 126, "arcsin": [127, 867], "arcsin_": 128, "arcsinh": [129, 868], "arcsinh_": 130, "arctan": [131, 869], "arctan2": [132, 870], "arctan2_": 133, "arctan_": 134, "arctanh": [135, 871], "arctanh_": 136, "argmax": [137, 873], "argmin": [138, 874], "argsort": [139, 875], "argwher": [140, 876], "as_strid": [141, 877], "as_subclass": 142, "asin": [143, 880], "asin_": 144, "asinh": [145, 881], "asinh_": 146, "atan": [147, 882], "atan2": [148, 883], "atan2_": 149, "atan_": 150, "atanh": [151, 884], "atanh_": 152, "backward": [153, 888, 892, 1891, 1892, 1894, 1899, 1922], "baddbmm": [154, 920], "baddbmm_": 155, "bernoulli_": 157, "bincount": [159, 923], "bitwise_and": [160, 924], "bitwise_and_": 161, "bitwise_left_shift": [162, 925], "bitwise_left_shift_": 163, "bitwise_not": [164, 926], "bitwise_not_": 165, "bitwise_or": [166, 927], "bitwise_or_": 167, "bitwise_right_shift": [168, 928], "bitwise_right_shift_": 169, "bitwise_xor": [170, 929], "bitwise_xor_": 171, "bmm": [172, 932], "bool": 173, "broadcast_to": [174, 935], "byte": 175, "cauchy_": 176, "ccol_indic": 177, "cdoubl": 178, "ceil": [179, 941], "ceil_": 180, "cfloat": 181, "chalf": 182, "char": 183, "choleski": [184, 943, 1227], "cholesky_invers": [185, 944], "cholesky_solv": [186, 945], "chunk": [187, 946], "clamp": [188, 770, 947], "clamp_": 189, "clip": [190, 948, 1890], "clip_": 191, "clone": [192, 949], "coalesc": 193, "col_indic": 194, "conj": [195, 963], "conj_phys": [196, 964], "conj_physical_": 197, "contigu": 198, "copy_": 199, "copysign": [200, 965], "copysign_": 201, "corrcoef": [202, 966], "co": [203, 967], "cos_": 204, "cosh": [205, 968], "cosh_": 206, "count_nonzero": [207, 969], "cov": [208, 970], "cross": [210, 971, 1230, 1891], "crow_indic": 211, "cummax": [213, 1050], "cummin": [214, 1051], "cumprod": [215, 1052], "cumprod_": 216, "cumsum": [217, 1053], "cumsum_": 218, "data_ptr": 219, "deg2rad": [220, 1055], "dense_dim": 221, "dequant": [222, 1056, 1916], "det": [223, 1057, 1231], "detach": 224, "detach_": 225, "devic": [226, 993, 1894, 1905, 1928], "diag": [227, 1058], "diag_emb": [228, 1059], "diagflat": [229, 1060], "diagon": [230, 1061, 1232], "diagonal_scatt": [231, 1062], "diff": [232, 1063], "digamma": [233, 1064], "digamma_": 234, "dim": [235, 1884], "dist": [236, 1065], "div": [237, 1066, 1907], "div_": 238, "divid": [239, 1067], "divide_": 240, "dot": [241, 1068], "doubl": 242, "dsplit": [243, 1069], "element_s": 244, "eq": [245, 1076], "eq_": 246, "equal": [247, 1077], "erf": [248, 1078], "erf_": 249, "erfc": [250, 1079], "erfc_": 251, "erfinv": [252, 1080], "erfinv_": 253, "exp": [254, 1081], "exp_": 255, "expand": 256, "expand_a": 257, "expm1": [258, 1083], "expm1_": 259, "exponential_": 260, "fill_": 261, "fill_diagonal_": 262, "fix_": 264, "flatten": [265, 1110, 1376], "flip": [266, 1111], "fliplr": [267, 1112], "flipud": [268, 1113], "float": [269, 1907], "float_pow": [270, 1114], "float_power_": 271, "floor": [272, 1115], "floor_": 273, "floor_divid": [274, 1116], "floor_divide_": 275, "fmax": [276, 1117], "fmin": [277, 1118], "fmod": [278, 1119], "fmod_": 279, "frac": [280, 1120], "frac_": 281, "frexp": [282, 1121], "gather": [283, 986, 1140], "gcd": [284, 1141], "gcd_": 285, "ge": [286, 1142], "ge_": 287, "geometric_": 288, "geqrf": [289, 1143], "ger": [290, 1144], "get_devic": 291, "greater": [293, 1152], "greater_": 294, "greater_equ": [295, 1153], "greater_equal_": 296, "gt": [297, 1154], "gt_": 298, "half": 299, "hardshrink": [300, 1386, 1532], "heavisid": [301, 1157], "histc": [302, 1158], "histogram": [303, 1159], "hsplit": [304, 1161], "hypot": [305, 1164], "hypot_": 306, "i0": [307, 1165], "i0_": 308, "igamma": [309, 1166], "igamma_": 310, "igammac": [311, 1167], "igammac_": 312, "index_add": [314, 1169], "index_add_": 315, "index_copi": [316, 1170], "index_copy_": 317, "index_fil": 318, "index_fill_": 319, "index_put": 320, "index_put_": 321, "index_reduc": [322, 1171], "index_reduce_": 323, "index_select": [324, 1172], "indic": [325, 1866], "inner": [326, 1175], "int": 327, "int_repr": 328, "invers": [329, 1176, 1876], "is_coalesc": 330, "is_complex": [331, 1177], "is_conj": [332, 1178], "is_contigu": 333, "is_cuda": 334, "is_floating_point": [335, 1180], "is_infer": 336, "is_leaf": 337, "is_meta": 338, "is_pin": 339, "is_quant": 340, "is_set_to": 341, "is_shar": 342, "is_sign": 343, "is_spars": 344, "is_sparse_csr": 345, "isclos": [346, 1187], "isfinit": [347, 1188], "isinf": [348, 1190], "isnan": [349, 1191], "isneginf": [350, 1192], "isposinf": [351, 1193], "isreal": [352, 1194], "istft": [353, 1195], "items": 355, "kthvalu": [356, 1219], "lcm": [357, 1220], "lcm_": 358, "ldexp": [359, 1221], "ldexp_": 360, "le": [361, 1222], "le_": 362, "lerp": [363, 1223], "lerp_": 364, "less": [365, 1224], "less_": 366, "less_equ": [367, 1225], "less_equal_": 368, "lgamma": [369, 1226], "lgamma_": 370, "log10": [372, 1272], "log10_": 373, "log1p": [374, 1273], "log1p_": 375, "log2": [376, 1274], "log2_": 377, "log_": 378, "log_normal_": 379, "logaddexp": [380, 1275], "logaddexp2": [381, 1276], "logcumsumexp": [382, 1277], "logdet": [383, 1278], "logical_and": [384, 1279], "logical_and_": 385, "logical_not": [386, 1280], "logical_not_": 387, "logical_or": [388, 1281], "logical_or_": 389, "logical_xor": [390, 1282], "logical_xor_": 391, "logit": [392, 1283], "logit_": 393, "logsumexp": [394, 1285], "long": 395, "lt": [396, 1286], "lt_": 397, "lu": [398, 1244, 1287], "lu_solv": [399, 1247, 1288], "map_": 400, "masked_fil": 401, "masked_fill_": 402, "masked_scatt": 403, "masked_scatter_": 404, "masked_select": [405, 1291], "matmul": [406, 1248, 1292], "matrix_exp": [407, 1249, 1293], "matrix_pow": [408, 1251, 1294], "maximum": [410, 1296], "mean": [411, 1297], "median": [412, 1298], "minimum": [414, 1301], "mm": [415, 1302, 1793], "moveaxi": [417, 1304], "movedim": [418, 1305], "msort": [419, 1318], "mul": [420, 1319], "mul_": 421, "multipli": [423, 1321], "multiply_": 424, "mv": [425, 1322], "mvlgamma": [426, 1323], "mvlgamma_": 427, "nan_to_num": [428, 1324], "nan_to_num_": 429, "nanmean": [430, 1325], "nanmedian": [431, 1326], "nanquantil": [432, 1327], "nansum": [433, 1328], "narrow": [434, 1329], "narrow_copi": [435, 1330], "nbyte": 436, "ndim": 437, "ndimens": 438, "ne": [439, 1331], "ne_": 440, "neg_": 442, "negative_": 444, "nelement": 445, "new_empti": 446, "new_ful": 447, "new_on": 448, "new_tensor": 449, "new_zero": 450, "nextaft": [451, 1334], "nextafter_": 452, "normal_": 455, "not_equ": [456, 1659], "not_equal_": 457, "numel": [458, 1660], "numpi": [459, 1909], "orgqr": [460, 1702], "ormqr": [461, 1703], "outer": [462, 1704], "permut": [463, 1706, 1884], "pin_memori": 464, "pinvers": [465, 1707], "polygamma": [466, 1710], "polygamma_": 467, "posit": [468, 1711], "pow": [469, 1712], "pow_": 470, "prod": [471, 1713], "put_": 472, "q_per_channel_axi": 473, "q_per_channel_scal": 474, "q_per_channel_zero_point": 475, "q_scale": 476, "q_zero_point": 477, "qr": [478, 1256, 1715], "qscheme": 479, "quantil": [480, 1716], "rad2deg": [481, 1723], "random_": 482, "ravel": [483, 1732], "reciproc": [485, 1734], "reciprocal_": 486, "record_stream": 487, "register_hook": [488, 912], "remaind": [489, 1735], "remainder_": 490, "renorm": [491, 1736], "renorm_": 492, "repeat": 493, "repeat_interleav": [494, 1737], "requires_grad": [495, 1891], "requires_grad_": 496, "reshap": [497, 1738], "reshape_a": 498, "resize_": 499, "resize_as_": 500, "resolve_conj": [501, 1739], "resolve_neg": [502, 1740], "retain_grad": 503, "retains_grad": 504, "roll": [505, 1742], "rot90": [506, 1743], "round": [507, 1744], "round_": 508, "row_indic": 509, "rsqrt": [510, 1746], "rsqrt_": 511, "scatter": [512, 988, 1748], "scatter_": 513, "scatter_add": [514, 1749], "scatter_add_": 515, "scatter_reduc": [516, 1750], "scatter_reduce_": 517, "select": [518, 1753, 1878], "select_scatt": [519, 1754], "set_": 520, "sgn": [521, 1767], "sgn_": 522, "share_memory_": 523, "short": 524, "sigmoid_": 526, "sign": [527, 1769], "sign_": 528, "signbit": [529, 1781], "sin": [530, 1782], "sin_": 531, "sinc": [532, 1783], "sinc_": 533, "sinh": [534, 1784], "sinh_": 535, "slice_scatt": [537, 1785], "slogdet": [538, 1257, 1786], "smm": [539, 1787], "softmax": [540, 1463, 1585, 1788, 1795], "sort": [541, 1789], "sparse_dim": 542, "sparse_mask": 543, "sparse_resize_": 544, "sparse_resize_and_clear_": 545, "split": [546, 1804], "sqrt": [547, 1805], "sqrt_": 548, "squar": [549, 1806], "square_": 550, "squeez": [551, 1807], "squeeze_": 552, "sspaddmm": [553, 1808], "std": [554, 1810], "stft": [555, 1812], "storag": [556, 1927], "storage_offset": 557, "storage_typ": 558, "stride": 559, "sub": [560, 1813], "sub_": 561, "subtract": [562, 1814], "subtract_": 563, "sum": [564, 1797, 1815, 1887], "sum_to_s": 565, "svd": [566, 1261, 1816], "swapax": [567, 1818], "swapdim": [568, 1819], "t_": 570, "take": [571, 1826, 1912], "take_along_dim": [572, 1827], "tan": [573, 1828], "tan_": 574, "tanh": [575, 1470, 1590, 1829], "tanh_": 576, "tensor_split": [577, 1831], "tile": [578, 1833], "to_dens": 580, "to_mkldnn": 581, "to_spars": 582, "to_sparse_bsc": 583, "to_sparse_bsr": 584, "to_sparse_coo": 585, "to_sparse_csc": 586, "to_sparse_csr": 587, "tolist": 588, "topk": [589, 1834], "transpos": [591, 1836], "transpose_": 592, "triangular_solv": [593, 1839], "tril": [594, 1840], "tril_": 595, "triu": [596, 1842], "triu_": 597, "true_divid": [598, 1844], "true_divide_": 599, "trunc": [600, 1845], "trunc_": 601, "type_a": 603, "unbind": [604, 1846, 1886], "unflatten": [605, 1480, 1847], "unfold": [606, 1481, 1597], "uniform_": 607, "uniqu": [608, 1848], "unique_consecut": [609, 1849], "unsqueez": [610, 1850], "unsqueeze_": 611, "untyped_storag": 612, "var": [614, 1853], "vdot": [615, 1855], "view_a": 617, "vsplit": [618, 1859], "where": [619, 1861, 1865], "xlogi": [620, 1862], "xlogy_": 621, "zero_": 622, "_assert": 623, "_foreach_ab": 624, "_foreach_abs_": 625, "_foreach_aco": 626, "_foreach_acos_": 627, "_foreach_asin": 628, "_foreach_asin_": 629, "_foreach_atan": 630, "_foreach_atan_": 631, "_foreach_ceil": 632, "_foreach_ceil_": 633, "_foreach_co": 634, "_foreach_cos_": 635, "_foreach_cosh": 636, "_foreach_cosh_": 637, "_foreach_erf": 638, "_foreach_erf_": 639, "_foreach_erfc": 640, "_foreach_erfc_": 641, "_foreach_exp": 642, "_foreach_exp_": 643, "_foreach_expm1": 644, "_foreach_expm1_": 645, "_foreach_floor": 646, "_foreach_floor_": 647, "_foreach_frac": 648, "_foreach_frac_": 649, "_foreach_lgamma": 650, "_foreach_lgamma_": 651, "_foreach_log": 652, "_foreach_log10": 653, "_foreach_log10_": 654, "_foreach_log1p": 655, "_foreach_log1p_": 656, "_foreach_log2": 657, "_foreach_log2_": 658, "_foreach_log_": 659, "_foreach_neg": 660, "_foreach_neg_": 661, "_foreach_reciproc": 662, "_foreach_reciprocal_": 663, "_foreach_round": 664, "_foreach_round_": 665, "_foreach_sigmoid": 666, "_foreach_sigmoid_": 667, "_foreach_sin": 668, "_foreach_sin_": 669, "_foreach_sinh": 670, "_foreach_sinh_": 671, "_foreach_sqrt": 672, "_foreach_sqrt_": 673, "_foreach_tan": 674, "_foreach_tan_": 675, "_foreach_trunc": 676, "_foreach_trunc_": 677, "_foreach_zero_": 678, "_log": [679, 1877], "set_log": 679, "bnrelu2d": [699, 722], "bnrelu3d": [700, 723], "convbn1d": [701, 711], "convbn2d": [702, 712], "convbn3d": [703, 713], "convbnrelu1d": [704, 714], "convbnrelu2d": [705, 715], "convbnrelu3d": [706, 716], "convrelu1d": [707, 724], "convrelu2d": [708, 717, 725], "convrelu3d": [709, 718, 726], "linearrelu": [710, 719, 727, 728], "freeze_bn_stat": 720, "update_bn_stat": 721, "conv2d": [729, 738, 772, 1359, 1505], "conv3d": [730, 739, 773, 1360, 1506], "lstm": [733, 761, 1400, 1906], "multiheadattent": [734, 1436], "batchnorm2d": [735, 1349], "batchnorm3d": [736, 1350], "conv1d": [737, 771, 1358, 1504], "convtranspose1d": [740, 1361], "convtranspose2d": [741, 1362], "convtranspose3d": [742, 1363], "elu": [743, 774, 1372, 1518], "embed": [744, 1373, 1520], "embeddingbag": [745, 1374], "fxfloatfunct": 746, "floatfunct": 747, "groupnorm": [748, 1385], "hardswish": [749, 776, 1388, 1534], "instancenorm1d": [750, 1393], "instancenorm2d": [751, 1394], "instancenorm3d": [752, 1395], "layernorm": [753, 1402], "leakyrelu": [754, 1416], "qfunction": 756, "relu6": [757, 1450, 1575], "gru": [759, 1382], "grucel": [760, 1383], "lstmcell": [762, 1401], "rnncell": [764, 1447], "adaptive_avg_pool2d": [765, 1489], "adaptive_avg_pool3d": [766, 1490], "avg_pool2d": [767, 1497], "avg_pool3d": [768, 1498], "celu": [769, 1352, 1503], "hardsigmoid": [775, 1387, 1533], "hardtanh": [777, 1389, 1535], "interpol": [778, 1540], "leaky_relu": [779, 1544], "max_pool1d": [781, 1553], "max_pool2d": [782, 1554], "threshold": [783, 1472, 1592], "upsampl": [784, 1482, 1598], "upsample_bilinear": [785, 1599], "upsample_nearest": [786, 1600], "dequantstub": 787, "quantstub": 788, "quantwrapp": 789, "add_quant_dequ": 790, "backendconfig": 791, "backendpatternconfig": 792, "dtypeconfig": 793, "dtypewithconstraint": 794, "observationtyp": 795, "default_eval_fn": 797, "fakequant": [798, 1916], "fakequantizebas": 799, "fixedqparamsfakequant": 800, "fusedmovingavgobsfakequant": 801, "default_fake_qu": 802, "default_fused_act_fake_qu": 803, "default_fused_per_channel_wt_fake_qu": 804, "default_fused_wt_fake_qu": 805, "default_histogram_fake_qu": 806, "default_per_channel_weight_fake_qu": 807, "default_weight_fake_qu": 808, "disable_fake_qu": 809, "disable_observ": 810, "enable_fake_qu": 811, "enable_observ": 812, "fuse_modul": 813, "convertcustomconfig": 814, "fusecustomconfig": 815, "preparecustomconfig": 816, "standalonemoduleconfigentri": 817, "histogramobserv": 818, "minmaxobserv": 819, "movingaverageminmaxobserv": 820, "movingaverageperchannelminmaxobserv": 821, "noopobserv": 822, "observerbas": 823, "perchannelminmaxobserv": 824, "placeholderobserv": 825, "recordingobserv": 826, "default_debug_observ": 827, "default_dynamic_quant_observ": 828, "default_float_qparams_observ": 829, "default_histogram_observ": 830, "default_observ": 831, "default_per_channel_weight_observ": 832, "default_placeholder_observ": 833, "default_weight_observ": 834, "get_observer_state_dict": 835, "load_observer_state_dict": 836, "prepar": [837, 1916, 1919], "prepare_qat": 838, "propagate_qconfig": 839, "qconfig": [840, 1916, 1919], "default_activation_only_qconfig": 841, "default_debug_qconfig": 842, "default_dynamic_qconfig": 843, "default_per_channel_qconfig": 844, "default_qat_qconfig": 845, "default_qat_qconfig_v2": 846, "default_qconfig": 847, "default_weight_only_qconfig": 848, "float16_dynamic_qconfig": 849, "float16_static_qconfig": 850, "float_qparams_weight_only_qconfig": 851, "per_channel_dynamic_qconfig": 852, "qconfigmap": 853, "get_default_qat_qconfig_map": 854, "get_default_qconfig_map": 855, "quantiz": [856, 1887, 1902, 1909, 1916, 1917, 1918, 1919], "quantize_dynam": 857, "convert_fx": 858, "fuse_fx": 859, "prepare_fx": 860, "prepare_qat_fx": 861, "quantize_qat": 862, "swap_modul": 863, "arang": 864, "are_deterministic_algorithms_en": 872, "as_tensor": 878, "asarrai": 879, "atleast_1d": 885, "atleast_2d": 886, "atleast_3d": 887, "dual_level": 893, "forward_ad": [894, 895], "make_du": 894, "unpack_du": 895, "functionctx": [896, 897, 898, 899], "mark_dirti": 896, "mark_non_differenti": 897, "save_for_backward": 898, "set_materialize_grad": 899, "hvp": 901, "vhp": 904, "gradcheck": [907, 1899], "gradgradcheck": [908, 1899], "metadata": [909, 1901], "name": [910, 1870, 1884, 1885], "next_funct": 911, "register_prehook": 913, "load_nvprof": 914, "export_chrome_trac": 915, "key_averag": 916, "self_cpu_time_tot": 917, "total_averag": 918, "set_multithreading_en": 919, "bartlett_window": 921, "blackman_window": 930, "block_diag": 931, "broadcast_shap": 933, "broadcast_tensor": 934, "bucket": 936, "can_cast": 937, "cartesian_prod": 938, "cat": 939, "cdist": 940, "chain_matmul": 942, "column_stack": 950, "combin": [951, 1896], "compiled_with_cxx11_abi": 953, "assume_constant_result": 955, "list_backend": 958, "reset": 959, "concat": 961, "concaten": 962, "cudapluggablealloc": 973, "externalstream": 975, "outofmemoryerror": 976, "streamcontext": 978, "caching_allocator_alloc": 979, "caching_allocator_delet": 980, "can_device_access_p": 981, "change_current_alloc": 982, "clock_rat": 983, "comm": [984, 985, 986, 987, 988], "broadcast": [984, 1892], "broadcast_coalesc": 985, "reduce_add": 987, "current_blas_handl": 989, "current_devic": 990, "current_stream": 991, "default_stream": 992, "device_count": 994, "device_of": 995, "empty_cach": [996, 1308], "get_allocator_backend": 997, "get_arch_list": 998, "get_device_cap": 999, "get_device_nam": 1000, "get_device_properti": 1001, "get_gencode_flag": 1002, "get_rng_stat": [1003, 1150, 1309], "get_rng_state_al": 1004, "get_sync_debug_mod": 1005, "graph_pool_handl": 1007, "init": [1008, 1889], "initial_se": [1009, 1174], "ipc_collect": 1010, "is_avail": 1011, "is_current_stream_captur": 1012, "is_initi": 1013, "_create_jit_fn": 1014, "_create_multi_output_jit_fn": 1015, "list_gpu_process": 1016, "make_graphed_cal": 1017, "manual_se": [1018, 1290, 1310], "manual_seed_al": 1019, "max_memory_alloc": 1020, "max_memory_cach": 1021, "max_memory_reserv": 1022, "mem_get_info": 1023, "memory_alloc": 1024, "memory_cach": 1025, "memory_reserv": 1026, "memory_snapshot": 1027, "memory_stat": 1028, "memory_summari": 1029, "memory_usag": 1030, "mark": 1031, "range_pop": 1032, "range_push": 1033, "power_draw": 1034, "reset_max_memory_alloc": 1035, "reset_max_memory_cach": 1036, "reset_peak_memory_stat": 1037, "seed": [1038, 1314, 1752], "seed_al": 1039, "set_devic": 1040, "set_per_process_memory_fract": [1041, 1315], "set_rng_stat": [1042, 1316, 1765], "set_rng_state_al": 1043, "set_stream": 1044, "set_sync_debug_mod": 1045, "temperatur": 1048, "cumulative_trapezoid": 1054, "dstack": 1070, "einsum": 1071, "empti": 1072, "empty_lik": 1073, "empty_strid": 1074, "enable_grad": 1075, "exp2": 1082, "ey": 1084, "fake_quantize_per_channel_affin": 1085, "fake_quantize_per_tensor_affin": 1086, "fft2": 1088, "fftfreq": 1089, "fftn": 1090, "fftshift": 1091, "hfft": 1092, "hfft2": 1093, "hfftn": 1094, "ifft": 1095, "ifft2": 1096, "ifftn": 1097, "ifftshift": 1098, "ihfft": 1099, "ihfft2": 1100, "ihfftn": 1101, "irfft": 1102, "irfft2": 1103, "irfftn": 1104, "rfft": 1105, "rfft2": 1106, "rfftfreq": 1107, "rfftn": 1108, "from_dlpack": 1122, "from_numpi": 1123, "frombuff": 1124, "full": [1125, 1907], "full_lik": 1126, "functional_cal": [1127, 1652], "grad_and_valu": 1130, "replace_all_batch_norm_modules_": 1136, "stack_module_st": 1137, "get_default_dtyp": 1145, "get_deterministic_debug_mod": 1146, "get_float32_matmul_precis": 1147, "get_num_interop_thread": 1148, "get_num_thread": 1149, "hamming_window": 1155, "hann_window": 1156, "histogramdd": 1160, "hspmm": 1162, "hstack": 1163, "inference_mod": 1173, "is_deterministic_algorithms_warn_only_en": 1179, "is_grad_en": 1181, "is_inference_mode_en": 1182, "is_nonzero": 1183, "is_storag": 1184, "is_tensor": 1185, "is_warn_always_en": 1186, "isin": 1189, "attribut": [1196, 1868, 1870, 1871, 1873, 1928], "scriptfunct": 1197, "scriptmodul": [1198, 1907], "annot": [1199, 1871], "enable_onednn_fus": 1200, "fork": 1201, "freez": 1202, "ignor": 1203, "isinst": 1204, "onednn_fusion_en": 1206, "optimize_for_infer": 1207, "save": [1208, 1747, 1865, 1891, 1901, 1907, 1916], "script_if_trac": 1210, "set_fusion_strategi": 1211, "strict_fus": 1212, "trace_modul": 1214, "unus": 1215, "wait": 1216, "kaiser_window": 1217, "kron": 1218, "cholesky_ex": 1228, "cond": 1229, "eig": 1233, "eigh": 1234, "eigval": 1235, "eigvalsh": 1236, "householder_product": 1237, "inv": 1238, "inv_ex": 1239, "ldl_factor": 1240, "ldl_factor_ex": 1241, "ldl_solv": 1242, "lstsq": 1243, "lu_factor": 1245, "lu_factor_ex": 1246, "matrix_norm": 1250, "matrix_rank": 1252, "multi_dot": 1253, "pinv": 1255, "solv": 1258, "solve_ex": 1259, "solve_triangular": 1260, "svdval": 1262, "tensorinv": 1263, "tensorsolv": 1264, "vander": [1265, 1852], "vecdot": 1266, "vector_norm": 1267, "linspac": 1268, "lobpcg": 1270, "logspac": 1284, "lu_unpack": 1289, "meshgrid": 1299, "current_allocated_memori": 1306, "driver_allocated_memori": 1307, "stop": 1313, "adaptiveavgpool1d": 1335, "adaptiveavgpool2d": 1336, "adaptiveavgpool3d": 1337, "adaptivelogsoftmaxwithloss": 1338, "adaptivemaxpool1d": 1339, "adaptivemaxpool2d": 1340, "adaptivemaxpool3d": 1341, "alphadropout": 1342, "avgpool1d": 1343, "avgpool2d": 1344, "avgpool3d": 1345, "bceloss": 1346, "bcewithlogitsloss": 1347, "batchnorm1d": 1348, "bilinear": [1351, 1500], "ctcloss": 1353, "channelshuffl": 1354, "constantpad1d": 1355, "constantpad2d": 1356, "constantpad3d": 1357, "cosineembeddingloss": 1364, "cosinesimilar": 1365, "crossentropyloss": 1366, "dataparallel": [1367, 1887, 1888, 1890, 1894], "dropout": [1368, 1514, 1887, 1888], "dropout1d": [1369, 1515], "dropout2d": [1370, 1516], "dropout3d": [1371, 1517], "featurealphadropout": 1375, "fold": [1377, 1523], "fractionalmaxpool2d": 1378, "fractionalmaxpool3d": 1379, "gelu": [1380, 1527], "glu": [1381, 1528], "gaussiannllloss": 1384, "hingeembeddingloss": 1390, "huberloss": 1391, "ident": [1392, 1626, 1634, 1871, 1898], "kldivloss": 1396, "l1loss": 1397, "lppool1d": 1398, "lppool2d": 1399, "lazybatchnorm1d": 1403, "lazybatchnorm2d": 1404, "lazybatchnorm3d": 1405, "lazyconv1d": 1406, "lazyconv2d": 1407, "lazyconv3d": 1408, "lazyconvtranspose1d": 1409, "lazyconvtranspose2d": 1410, "lazyconvtranspose3d": 1411, "lazyinstancenorm1d": 1412, "lazyinstancenorm2d": 1413, "lazyinstancenorm3d": 1414, "lazylinear": 1415, "localresponsenorm": 1418, "logsigmoid": [1419, 1549], "logsoftmax": 1420, "mseloss": 1421, "marginrankingloss": 1422, "maxpool1d": 1423, "maxpool2d": 1424, "maxpool3d": 1425, "maxunpool1d": 1426, "maxunpool2d": 1427, "maxunpool3d": 1428, "mish": [1429, 1559], "moduledict": [1431, 1871], "modulelist": [1432, 1870, 1871], "multilabelmarginloss": 1433, "multilabelsoftmarginloss": 1434, "multimarginloss": 1435, "nllloss": 1437, "prelu": [1438, 1573], "pairwisedist": 1439, "parameterdict": 1440, "parameterlist": 1441, "pixelshuffl": 1442, "pixelunshuffl": 1443, "poissonnllloss": 1444, "rnn": [1445, 1644, 1645, 1646, 1647, 1648, 1649, 1906], "rnnbase": 1446, "rrelu": [1448, 1577], "relu": [1449, 1574], "reflectionpad1d": 1451, "reflectionpad2d": 1452, "reflectionpad3d": 1453, "replicationpad1d": 1454, "replicationpad2d": 1455, "replicationpad3d": 1456, "selu": [1457, 1580], "sequenti": 1458, "silu": [1459, 1582], "smoothl1loss": 1461, "softmarginloss": 1462, "softmax2d": 1464, "softmin": [1465, 1586], "softplu": [1466, 1587], "softshrink": [1467, 1588], "softsign": [1468, 1589], "syncbatchnorm": 1469, "tanhshrink": [1471, 1591], "transformerdecod": 1474, "transformerdecoderlay": 1475, "transformerencod": 1476, "transformerencoderlay": 1477, "tripletmarginloss": 1478, "tripletmarginwithdistanceloss": 1479, "upsamplingbilinear2d": 1483, "upsamplingnearest2d": 1484, "zeropad1d": 1485, "zeropad2d": 1486, "zeropad3d": 1487, "adaptive_avg_pool1d": 1488, "adaptive_max_pool1d": 1491, "adaptive_max_pool2d": 1492, "adaptive_max_pool3d": 1493, "affine_grid": 1494, "alpha_dropout": 1495, "avg_pool1d": 1496, "batch_norm": 1499, "conv_transpose1d": 1507, "conv_transpose2d": 1508, "conv_transpose3d": 1509, "cosine_embedding_loss": 1510, "cosine_similar": 1511, "cross_entropi": 1512, "ctc_loss": 1513, "elu_": 1519, "embedding_bag": 1521, "feature_alpha_dropout": 1522, "fractional_max_pool2d": 1524, "fractional_max_pool3d": 1525, "gaussian_nll_loss": 1526, "grid_sampl": 1529, "group_norm": 1530, "gumbel_softmax": 1531, "hardtanh_": 1536, "hinge_embedding_loss": 1537, "huber_loss": 1538, "instance_norm": 1539, "kl_div": 1541, "l1_loss": 1542, "layer_norm": 1543, "leaky_relu_": 1545, "local_response_norm": 1547, "log_softmax": [1548, 1792], "lp_pool1d": 1550, "lp_pool2d": 1551, "margin_ranking_loss": 1552, "max_pool3d": 1555, "max_unpool1d": 1556, "max_unpool2d": 1557, "max_unpool3d": 1558, "mse_loss": 1560, "multi_margin_loss": 1561, "multilabel_margin_loss": 1562, "multilabel_soft_margin_loss": 1563, "nll_loss": 1564, "one_hot": 1566, "pad": [1567, 1887], "pairwise_dist": 1568, "pdist": 1569, "pixel_shuffl": 1570, "pixel_unshuffl": 1571, "poisson_nll_loss": 1572, "relu_": 1576, "rrelu_": 1578, "scaled_dot_product_attent": 1579, "smooth_l1_loss": 1583, "soft_margin_loss": 1584, "threshold_": 1593, "data_parallel": [1594, 1888], "triplet_margin_loss": 1595, "triplet_margin_with_distance_loss": 1596, "lazymodulemixin": 1601, "register_module_backward_hook": 1602, "register_module_buffer_registration_hook": 1603, "register_module_forward_hook": 1604, "register_module_forward_pre_hook": 1605, "register_module_full_backward_hook": 1606, "register_module_full_backward_pre_hook": 1607, "register_module_module_registration_hook": 1608, "register_module_parameter_registration_hook": 1609, "distributeddataparallel": [1610, 1890, 1894, 1895], "uninitializedbuff": 1612, "uninitializedparamet": 1613, "clip_grad_norm_": 1614, "clip_grad_value_": 1615, "parameters_to_vector": 1616, "parametr": [1617, 1618, 1620, 1621, 1622, 1623, 1902], "orthogon": 1617, "spectral_norm": [1618, 1651], "parametrizationlist": 1619, "is_parametr": 1621, "register_parametr": 1622, "remove_parametr": 1623, "basepruningmethod": 1624, "customfrommask": 1625, "l1unstructur": 1627, "lnstructur": 1628, "pruningcontain": 1629, "randomstructur": 1630, "randomunstructur": 1631, "prune": [1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1902], "custom_from_mask": 1632, "global_unstructur": 1633, "is_prun": 1635, "l1_unstructur": 1636, "ln_structur": 1637, "random_structur": 1638, "random_unstructur": 1639, "remove_spectral_norm": 1641, "remove_weight_norm": 1642, "packedsequ": 1643, "pack_padded_sequ": 1644, "pack_sequ": 1645, "pad_packed_sequ": 1646, "pad_sequ": 1647, "unpack_sequ": 1648, "unpad_sequ": 1649, "skip_init": 1650, "stateless": 1652, "vector_to_paramet": 1653, "weight_norm": 1654, "no_grad": 1655, "ones": 1661, "ones_lik": 1662, "exportopt": 1663, "exportoutput": 1664, "exportoutputseri": 1665, "jitscalartyp": 1666, "graphinfo": 1667, "verificationopt": 1668, "asgd": 1669, "adadelta": 1670, "adagrad": 1671, "adam": 1672, "adamw": 1673, "adamax": 1674, "lbfg": 1675, "nadam": 1676, "add_param_group": 1677, "load_state_dict": 1678, "step": [1680, 1912], "zero_grad": 1681, "radam": 1682, "rmsprop": 1683, "rprop": 1684, "sgd": 1685, "sparseadam": 1686, "chainedschedul": 1687, "constantlr": 1688, "cosineannealinglr": 1689, "cosineannealingwarmrestart": 1690, "cycliclr": 1691, "exponentiallr": 1692, "lambdalr": 1693, "linearlr": 1694, "multisteplr": 1695, "multiplicativelr": 1696, "onecyclelr": 1697, "polynomiallr": 1698, "reducelronplateau": 1699, "sequentiallr": 1700, "steplr": 1701, "pca_lowrank": 1705, "polar": 1709, "promote_typ": 1714, "quantize_per_channel": 1717, "quantize_per_tensor": 1718, "quantized_batch_norm": 1719, "quantized_max_pool1d": 1720, "quantized_max_pool2d": 1721, "sobolengin": 1722, "rand": 1724, "rand_lik": 1725, "randint": 1726, "randint_lik": 1727, "randn": 1728, "randn_lik": 1729, "randperm": 1730, "rang": [1731, 1870], "result_typ": 1741, "row_stack": 1745, "searchsort": 1751, "set_default_devic": 1755, "set_default_dtyp": 1756, "set_default_tensor_typ": 1757, "set_deterministic_debug_mod": 1758, "set_float32_matmul_precis": 1759, "set_flush_denorm": 1760, "set_grad_en": 1761, "set_num_interop_thread": 1762, "set_num_thread": 1763, "set_printopt": 1764, "set_warn_alwai": 1766, "signal": [1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1924], "bartlett": 1770, "blackman": 1771, "cosin": 1772, "gaussian": 1774, "general_cosin": 1775, "general_ham": 1776, "ham": 1777, "hann": 1778, "kaiser": 1779, "nuttal": 1780, "check_sparse_tensor_invari": 1791, "sampled_addmm": 1794, "spdiag": 1796, "sparse_bsc_tensor": 1798, "sparse_bsr_tensor": 1799, "sparse_compressed_tensor": 1800, "sparse_coo_tensor": 1801, "sparse_csc_tensor": 1802, "sparse_csr_tensor": 1803, "std_mean": 1811, "svd_lowrank": 1817, "sym_float": 1820, "sym_int": 1821, "sym_max": 1822, "sym_min": 1823, "sym_not": 1824, "tensordot": 1832, "trapezoid": 1837, "trapz": 1838, "tril_indic": 1841, "triu_indic": 1843, "use_deterministic_algorithm": 1851, "var_mean": 1854, "view_as_complex": 1856, "view_as_r": 1857, "vstack": 1860, "zero": 1863, "zeros_lik": 1864, "hub": 1865, "publish": 1865, "entrypoint": 1865, "download": 1865, "logic": [1865, 1870], "known": [1865, 1868], "bind": 1866, "tabl": [1866, 1907], "prim": 1867, "built": [1868, 1869, 1871, 1909], "inspect": 1868, "warn": 1868, "appendix": [1868, 1871], "recurs": 1868, "constant": [1868, 1870], "fusion": 1868, "builtin": 1869, "math": [1869, 1933], "construct": [1870, 1871, 1873, 1886, 1912, 1925], "refin": [1870, 1871], "enum": [1870, 1871], "tupl": [1870, 1871], "express": [1870, 1871], "liter": [1870, 1871], "list": [1870, 1871, 1909], "dict": 1870, "arithmet": [1870, 1871], "subscript": [1870, 1871], "slice": [1870, 1871, 1905, 1933], "ternari": [1870, 1871], "cast": 1870, "statement": [1870, 1871], "assign": [1870, 1871], "match": [1870, 1885], "If": 1870, "while": [1870, 1871], "loop": 1870, "For": 1870, "continu": [1870, 1871], "return": [1870, 1871, 1898, 1923], "resolut": [1870, 1871], "lookup": 1870, "defin": [1870, 1896, 1897], "terminologi": 1871, "meta": 1871, "primit": 1871, "special": [1871, 1891, 1926], "instanc": 1871, "signatur": 1871, "expr": 1871, "convers": [1871, 1886], "atom": 1871, "parenthes": 1871, "form": 1871, "dictionari": 1871, "displai": 1871, "primari": 1871, "power": 1871, "unari": [1871, 1878, 1925], "bitwis": 1871, "binari": [1871, 1878], "shift": 1871, "boolean": 1871, "condit": 1871, "augment": 1871, "rais": 1871, "assert": [1871, 1900], "del": 1871, "compound": 1871, "els": 1871, "getattr": 1871, "hasattr": 1871, "zip": [1871, 1913], "enumer": 1871, "rule": [1871, 1885, 1897, 1910], "remot": [1871, 1923], "procedur": 1871, "execut": [1871, 1891, 1894, 1913, 1914], "program": 1871, "coverag": [1872, 1884, 1896], "properti": [1873, 1876], "Not": 1873, "correctli": 1873, "bound": 1873, "schema": 1873, "between": [1873, 1913], "matrix": [1876, 1916], "decomposit": 1876, "solver": 1876, "misc": 1876, "experiment": 1876, "reduct": [1878, 1894, 1905, 1933], "mobile_optim": 1879, "model_zoo": 1880, "strategi": [1883, 1912], "descriptor": 1883, "file_descriptor": 1883, "file_system": 1883, "subprocess": 1883, "keep": [1884, 1913], "dimens": [1884, 1885], "unifi": 1884, "contract": 1884, "awai": 1884, "factori": 1884, "variant": 1884, "semant": [1885, 1892, 1894, 1900, 1907], "explicit": 1885, "align": 1885, "current": 1885, "subsystem": 1885, "constructor": 1886, "contain": 1887, "convolut": [1887, 1888, 1905, 1906], "layer": 1887, "pool": [1887, 1888], "activ": [1887, 1888], "weight": [1887, 1912], "nonlinear": 1887, "recurr": [1887, 1898], "distanc": [1887, 1888], "loss": [1887, 1888, 1890], "vision": [1887, 1888], "shuffl": 1887, "lazi": 1887, "attent": 1888, "typic": 1890, "unscal": 1890, "accumul": 1890, "penalti": 1890, "one": 1890, "per": [1890, 1912], "particular": [1890, 1891], "dtype": [1890, 1907, 1919, 1928], "encod": 1891, "histori": 1891, "set": [1891, 1909], "No": 1891, "multithread": 1891, "concurr": 1891, "determin": [1891, 1906], "retain": 1891, "thread": [1891, 1893], "safeti": 1891, "wirting": 1891, "calculu": 1891, "pictur": 1891, "conjug": 1891, "own": 1891, "formula": 1891, "domain": 1891, "whether": [1891, 1913], "fire": 1891, "differ": [1891, 1909], "modifi": 1891, "compat": 1892, "tune": 1893, "tensorfloat": [1894, 1900, 1905], "32": [1894, 1900, 1905, 1908], "tf32": [1894, 1900, 1905], "amper": [1894, 1905], "reduc": [1894, 1905], "fp16": [1894, 1905], "gemm": [1894, 1905], "bf16": [1894, 1905], "bc": 1894, "alloc": [1894, 1898], "cubla": 1894, "workspac": 1894, "cufft": 1894, "plan": [1894, 1900], "just": 1894, "practic": [1894, 1904, 1916], "agnost": 1894, "buffer": [1894, 1904], "instead": 1894, "captur": 1894, "partial": 1894, "9": 1894, "6": 1894, "across": [1894, 1907], "processgroup": 1895, "ddpoptim": 1895, "separ": 1896, "setup_context": 1896, "like": [1896, 1913], "wrapper": 1896, "__torch_function__": 1896, "overrid": [1896, 1936], "nativ": [1896, 1916, 1918], "specifi": 1897, "staticmethod": 1897, "isn": 1898, "freed": 1898, "properli": 1898, "loader": 1898, "notat": 1899, "analyt": 1899, "output": 1899, "u": 1899, "reus": [1900, 1904], "hipfft": 1900, "rocfft": 1900, "enabl": 1900, "kernel": [1900, 1916], "larg": 1901, "fleet": 1901, "wide": 1901, "attach": 1901, "consider": 1901, "block": 1902, "neural": 1902, "tip": [1904, 1917], "fight": 1904, "deadlock": 1904, "through": 1904, "queue": 1904, "e": 1904, "g": 1904, "hogwild": 1904, "oversubscript": 1904, "extrem": 1905, "finit": 1905, "instinct": 1905, "mi200": 1905, "reproduc": 1906, "nondeterminist": 1906, "algorithm": [1906, 1912, 1922], "content": [1907, 1913], "preserv": 1907, "them": [1907, 1913], "integ": 1907, "divis": 1907, "alwai": 1907, "includ": [1908, 1913], "compon": 1908, "instal": 1908, "cffi": 1908, "cpp": 1908, "found": 1908, "win": 1908, "channel": 1908, "without": 1908, "claus": 1908, "protect": 1908, "broken": 1908, "pipe": [1908, 1914], "driver": 1908, "shut": 1908, "down": 1908, "ipc": 1908, "alexnet": 1909, "v": 1909, "index": [1909, 1933], "inlin": 1909, "discov": 1909, "unconvert": 1909, "onc": 1909, "preview": 1909, "diagnost": 1910, "closur": 1912, "adjust": 1912, "rate": 1912, "averag": 1912, "swa": 1912, "ema": 1912, "schedul": 1912, "care": 1912, "put": 1912, "togeth": 1912, "your": 1913, "treat": 1913, "archiv": 1913, "file_structur": 1913, "given": 1913, "wa": 1913, "later": 1913, "distinguish": 1913, "explan": 1913, "framework": [1913, 1921], "user": [1913, 1923], "analyz": 1913, "extern": 1913, "mock": 1913, "refactor": 1913, "sharp": 1913, "global": 1913, "isol": 1913, "mangl": 1913, "pipelin": 1914, "skip": 1914, "connect": 1914, "intel": 1915, "instrument": 1915, "technologi": 1915, "eager": 1916, "awar": 1916, "engin": [1916, 1933], "observ": [1916, 1919], "hardwar": 1916, "configur": [1916, 1918, 1933], "insensit": 1917, "int8": 1917, "sensit": 1917, "ao": [1919, 1934, 1935], "top": 1919, "quantize_fx": 1919, "qconfig_map": 1919, "backend_config": 1919, "custom_config": 1919, "fake_quant": 1919, "intrins": 1919, "qat": 1919, "scheme": 1919, "rpc": 1921, "tensorpip": 1921, "rref": [1921, 1923], "remotemodul": 1921, "record": 1922, "dure": 1922, "smart": 1922, "end": 1922, "protocol": 1923, "assumpt": 1923, "lifetim": 1923, "reason": 1923, "scenario": 1923, "owner": 1923, "argument": 1923, "sparsiti": 1925, "semi": 1925, "acceler": 1925, "coo": 1925, "hybrid": 1925, "uncoalesc": 1925, "csr": 1925, "csc": 1925, "bsr": 1925, "bsc": 1925, "memory_format": 1928, "tensorboard": 1930, "creation": 1933, "sampl": 1933, "quasi": 1933, "pointwis": 1933, "spectral": 1933, "bla": 1933, "lapack": 1933, "foreach": 1933, "tag": 1933, "n": [1934, 1935], "_numeric_suit": 1934, "_numeric_suite_fx": 1935, "info": 1937, "finfo": 1937, "iinfo": 1937}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.asinh_": [[146, "torch-tensor-asinh"]], "torch.Tensor.arctanh": [[135, "torch-tensor-arctanh"]], "torch.Tensor.addbmm_": [[103, "torch-tensor-addbmm"]], "torch.Tensor.amax": [[117, "torch-tensor-amax"]], "torch.Tensor.asin": [[143, "torch-tensor-asin"]], "torch.Tensor.as_subclass": [[142, "torch-tensor-as-subclass"]], "torch.Tensor.argwhere": [[140, "torch-tensor-argwhere"]], "torch.Tensor.arctan2_": [[133, "torch-tensor-arctan2"]], "torch.Tensor.addmm": [[108, "torch-tensor-addmm"]], "torch.Tensor.arccos": [[123, "torch-tensor-arccos"]], "torch.Tensor.apply_": [[122, "torch-tensor-apply"]], "torch.Tensor.argmin": [[138, "torch-tensor-argmin"]], "torch.Tensor.addcmul_": [[107, "torch-tensor-addcmul"]], "torch.Tensor.add": [[100, "torch-tensor-add"]], "torch.Tensor.arctan": [[131, "torch-tensor-arctan"]], "torch.Tensor.addr_": [[113, "torch-tensor-addr"]], "torch.Tensor.arctan_": [[134, "torch-tensor-arctan"]], "torch.Tensor.all": [[115, "torch-tensor-all"]], "torch.Tensor.asinh": [[145, "torch-tensor-asinh"]], "torch.Tensor.arctan2": [[132, "torch-tensor-arctan2"]], "torch.Tensor.arcsinh": [[129, "torch-tensor-arcsinh"]], "torch.Tensor.acosh": [[98, "torch-tensor-acosh"]], "torch.Tensor.acosh_": [[99, "torch-tensor-acosh"]], "torch.Tensor.arcsin": [[127, "torch-tensor-arcsin"]], "torch.Tensor.argmax": [[137, "torch-tensor-argmax"]], "torch.Tensor.angle": [[120, "torch-tensor-angle"]], "torch.Tensor.aminmax": [[119, "torch-tensor-aminmax"]], "torch.Tensor.arccos_": [[124, "torch-tensor-arccos"]], "torch.Tensor.arcsin_": [[128, "torch-tensor-arcsin"]], "torch.Tensor.addcdiv": [[104, "torch-tensor-addcdiv"]], "torch.Tensor.addbmm": [[102, "torch-tensor-addbmm"]], "torch.Tensor.addmv": [[110, "torch-tensor-addmv"]], "torch.Tensor.asin_": [[144, "torch-tensor-asin"]], "torch.Tensor.addmm_": [[109, "torch-tensor-addmm"]], "torch.Tensor.adjoint": [[114, "torch-tensor-adjoint"]], "torch.Tensor.any": [[121, "torch-tensor-any"]], "torch.Tensor.addmv_": [[111, "torch-tensor-addmv"]], "torch.Tensor.addcmul": [[106, "torch-tensor-addcmul"]], "torch.Tensor.add_": [[101, "torch-tensor-add"]], "torch.Tensor.addr": [[112, "torch-tensor-addr"]], "torch.Tensor.addcdiv_": [[105, "torch-tensor-addcdiv"]], "torch.Tensor.allclose": [[116, "torch-tensor-allclose"]], "torch.Tensor.arccosh_": [[126, "torch-tensor-arccosh"]], "torch.Tensor.as_strided": [[141, "torch-tensor-as-strided"]], "torch.Tensor.argsort": [[139, "torch-tensor-argsort"]], "torch.Tensor.arccosh": [[125, "torch-tensor-arccosh"]], "torch.Tensor.arctanh_": [[136, "torch-tensor-arctanh"]], "torch.Tensor.arcsinh_": [[130, "torch-tensor-arcsinh"]], "torch.Tensor.amin": [[118, "torch-tensor-amin"]], "torch.Tensor.deg2rad": [[220, "torch-tensor-deg2rad"]], "torch.Tensor.cross": [[210, "torch-tensor-cross"]], "torch.Tensor.contiguous": [[198, "torch-tensor-contiguous"]], "torch.Tensor.copysign_": [[201, "torch-tensor-copysign"]], "torch.Tensor.cosh": [[205, "torch-tensor-cosh"]], "torch.Tensor.dot": [[241, "torch-tensor-dot"]], "torch.Tensor.cumsum_": [[218, "torch-tensor-cumsum"]], "torch.Tensor.digamma": [[233, "torch-tensor-digamma"]], "torch.Tensor.diagonal_scatter": [[231, "torch-tensor-diagonal-scatter"]], "torch.Tensor.dequantize": [[222, "torch-tensor-dequantize"]], "torch.Tensor.det": [[223, "torch-tensor-det"]], "torch.Tensor.cuda": [[212, "torch-tensor-cuda"]], "torch.Tensor.divide_": [[240, "torch-tensor-divide"]], "torch.Tensor.cov": [[208, "torch-tensor-cov"]], "torch.Tensor.dist": [[236, "torch-tensor-dist"]], "torch.Tensor.dsplit": [[243, "torch-tensor-dsplit"]], "torch.Tensor.diag_embed": [[228, "torch-tensor-diag-embed"]], "torch.Tensor.cummin": [[214, "torch-tensor-cummin"]], "torch.Tensor.cumprod": [[215, "torch-tensor-cumprod"]], "torch.Tensor.crow_indices": [[211, "torch-tensor-crow-indices"]], "torch.Tensor.diag": [[227, "torch-tensor-diag"]], "torch.Tensor.detach": [[224, "torch-tensor-detach"]], "torch.Tensor.diff": [[232, "torch-tensor-diff"]], "torch.Tensor.dense_dim": [[221, "torch-tensor-dense-dim"]], "torch.Tensor.dim": [[235, "torch-tensor-dim"]], "torch.Tensor.div": [[237, "torch-tensor-div"]], "torch.Tensor.cumprod_": [[216, "torch-tensor-cumprod"]], "torch.Tensor.diagflat": [[229, "torch-tensor-diagflat"]], "torch.Tensor.copysign": [[200, "torch-tensor-copysign"]], "torch.Tensor.data_ptr": [[219, "torch-tensor-data-ptr"]], "torch.Tensor.device": [[226, "torch-tensor-device"]], "torch.Tensor.divide": [[239, "torch-tensor-divide"]], "torch.Tensor.cumsum": [[217, "torch-tensor-cumsum"]], "torch.Tensor.diagonal": [[230, "torch-tensor-diagonal"]], "torch.Tensor.digamma_": [[234, "torch-tensor-digamma"]], "torch.Tensor.conj_physical_": [[197, "torch-tensor-conj-physical"]], "torch.Tensor.copy_": [[199, "torch-tensor-copy"]], "torch.Tensor.div_": [[238, "torch-tensor-div"]], "torch.Tensor.cos_": [[204, "torch-tensor-cos"]], "torch.Tensor.double": [[242, "torch-tensor-double"]], "torch.Tensor.cpu": [[209, "torch-tensor-cpu"]], "torch.Tensor.element_size": [[244, "torch-tensor-element-size"]], "torch.Tensor.corrcoef": [[202, "torch-tensor-corrcoef"]], "torch.Tensor.count_nonzero": [[207, "torch-tensor-count-nonzero"]], "torch.Tensor.cummax": [[213, "torch-tensor-cummax"]], "torch.Tensor.detach_": [[225, "torch-tensor-detach"]], "torch.Tensor.cosh_": [[206, "torch-tensor-cosh"]], "torch.Tensor.conj_physical": [[196, "torch-tensor-conj-physical"]], "torch.Tensor.cos": [[203, "torch-tensor-cos"]], "torch.Tensor.float_power": [[270, "torch-tensor-float-power"]], "torch.Tensor.erfc_": [[251, "torch-tensor-erfc"]], "torch.Tensor.ge": [[286, "torch-tensor-ge"]], "torch.Tensor.geqrf": [[289, "torch-tensor-geqrf"]], "torch.Tensor.ger": [[290, "torch-tensor-ger"]], "torch.Tensor.gather": [[283, "torch-tensor-gather"]], "torch.Tensor.fix": [[263, "torch-tensor-fix"]], "torch.Tensor.get_device": [[291, "torch-tensor-get-device"]], "torch.Tensor.expand": [[256, "torch-tensor-expand"]], "torch.Tensor.exp_": [[255, "torch-tensor-exp"]], "torch.Tensor.expand_as": [[257, "torch-tensor-expand-as"]], "torch.Tensor.frac": [[280, "torch-tensor-frac"]], "torch.Tensor.floor_divide": [[274, "torch-tensor-floor-divide"]], "torch.Tensor.gcd": [[284, "torch-tensor-gcd"]], "torch.Tensor.eq": [[245, "torch-tensor-eq"]], "torch.Tensor.erfinv": [[252, "torch-tensor-erfinv"]], "torch.Tensor.gcd_": [[285, "torch-tensor-gcd"]], "torch.Tensor.fix_": [[264, "torch-tensor-fix"]], "torch.Tensor.ge_": [[287, "torch-tensor-ge"]], "torch.Tensor.erfc": [[250, "torch-tensor-erfc"]], "torch.Tensor.floor_divide_": [[275, "torch-tensor-floor-divide"]], "torch.Tensor.exp": [[254, "torch-tensor-exp"]], "torch.Tensor.fmod_": [[279, "torch-tensor-fmod"]], "torch.Tensor.exponential_": [[260, "torch-tensor-exponential"]], "torch.Tensor.floor_": [[273, "torch-tensor-floor"]], "torch.Tensor.erf_": [[249, "torch-tensor-erf"]], "torch.Tensor.flip": [[266, "torch-tensor-flip"]], "torch.Tensor.floor": [[272, "torch-tensor-floor"]], "torch.Tensor.expm1": [[258, "torch-tensor-expm1"]], "torch.Tensor.flipud": [[268, "torch-tensor-flipud"]], "torch.Tensor.float_power_": [[271, "torch-tensor-float-power"]], "torch.Tensor.erf": [[248, "torch-tensor-erf"]], "torch.Tensor.expm1_": [[259, "torch-tensor-expm1"]], "torch.Tensor.equal": [[247, "torch-tensor-equal"]], "torch.Tensor.fmax": [[276, "torch-tensor-fmax"]], "torch.Tensor.fill_": [[261, "torch-tensor-fill"]], "torch.Tensor.eq_": [[246, "torch-tensor-eq"]], "torch.Tensor.fmin": [[277, "torch-tensor-fmin"]], "torch.Tensor.frexp": [[282, "torch-tensor-frexp"]], "torch.Tensor.fill_diagonal_": [[262, "torch-tensor-fill-diagonal"]], "torch.Tensor.fliplr": [[267, "torch-tensor-fliplr"]], "torch.Tensor.erfinv_": [[253, "torch-tensor-erfinv"]], "torch.Tensor.flatten": [[265, "torch-tensor-flatten"]], "torch.Tensor.float": [[269, "torch-tensor-float"]], "torch.Tensor.frac_": [[281, "torch-tensor-frac"]], "torch.Tensor.greater": [[293, "torch-tensor-greater"]], "torch.Tensor.fmod": [[278, "torch-tensor-fmod"]], "torch.Tensor.grad": [[292, "torch-tensor-grad"]], "torch.Tensor.geometric_": [[288, "torch-tensor-geometric"]], "torch.Tensor.ccol_indices": [[177, "torch-tensor-ccol-indices"]], "torch.Tensor.chalf": [[182, "torch-tensor-chalf"]], "torch.Tensor.baddbmm_": [[155, "torch-tensor-baddbmm"]], "torch.Tensor.ceil_": [[180, "torch-tensor-ceil"]], "torch.Tensor.bitwise_and": [[160, "torch-tensor-bitwise-and"]], "torch.Tensor.atan2_": [[149, "torch-tensor-atan2"]], "torch.Tensor.bitwise_not_": [[165, "torch-tensor-bitwise-not"]], "torch.Tensor.clamp": [[188, "torch-tensor-clamp"]], "torch.Tensor.bitwise_xor_": [[171, "torch-tensor-bitwise-xor"]], "torch.Tensor.clamp_": [[189, "torch-tensor-clamp"]], "torch.Tensor.cholesky": [[184, "torch-tensor-cholesky"]], "torch.Tensor.atanh": [[151, "torch-tensor-atanh"]], "torch.Tensor.cholesky_solve": [[186, "torch-tensor-cholesky-solve"]], "torch.Tensor.bitwise_or_": [[167, "torch-tensor-bitwise-or"]], "torch.Tensor.coalesce": [[193, "torch-tensor-coalesce"]], "torch.Tensor.col_indices": [[194, "torch-tensor-col-indices"]], "torch.Tensor.bincount": [[159, "torch-tensor-bincount"]], "torch.Tensor.char": [[183, "torch-tensor-char"]], "torch.Tensor.cfloat": [[181, "torch-tensor-cfloat"]], "torch.Tensor.bitwise_or": [[166, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_left_shift": [[162, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.baddbmm": [[154, "torch-tensor-baddbmm"]], "torch.Tensor.clip": [[190, "torch-tensor-clip"]], "torch.Tensor.bmm": [[172, "torch-tensor-bmm"]], "torch.Tensor.clip_": [[191, "torch-tensor-clip"]], "torch.Tensor.cdouble": [[178, "torch-tensor-cdouble"]], "torch.Tensor.bfloat16": [[158, "torch-tensor-bfloat16"]], "torch.Tensor.atan2": [[148, "torch-tensor-atan2"]], "torch.Tensor.bitwise_right_shift": [[168, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.clone": [[192, "torch-tensor-clone"]], "torch.Tensor.atanh_": [[152, "torch-tensor-atanh"]], "torch.Tensor.conj": [[195, "torch-tensor-conj"]], "torch.Tensor.bitwise_right_shift_": [[169, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.cholesky_inverse": [[185, "torch-tensor-cholesky-inverse"]], "torch.Tensor.bernoulli_": [[157, "torch-tensor-bernoulli"]], "torch.Tensor.broadcast_to": [[174, "torch-tensor-broadcast-to"]], "torch.Tensor.atan_": [[150, "torch-tensor-atan"]], "torch.Tensor.byte": [[175, "torch-tensor-byte"]], "torch.Tensor.backward": [[153, "torch-tensor-backward"]], "torch.Tensor.ceil": [[179, "torch-tensor-ceil"]], "torch.Tensor.bernoulli": [[156, "torch-tensor-bernoulli"]], "torch.Tensor.bitwise_left_shift_": [[163, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.chunk": [[187, "torch-tensor-chunk"]], "torch.Tensor.bitwise_not": [[164, "torch-tensor-bitwise-not"]], "torch.Tensor.cauchy_": [[176, "torch-tensor-cauchy"]], "torch.Tensor.atan": [[147, "torch-tensor-atan"]], "torch.Tensor.bitwise_xor": [[170, "torch-tensor-bitwise-xor"]], "torch.Tensor.bool": [[173, "torch-tensor-bool"]], "torch.Tensor.bitwise_and_": [[161, "torch-tensor-bitwise-and"]], "torch.Tensor.le": [[361, "torch-tensor-le"]], "torch.Tensor.log_": [[378, "torch-tensor-log"]], "torch.Tensor.lgamma": [[369, "torch-tensor-lgamma"]], "torch.Tensor.isnan": [[349, "torch-tensor-isnan"]], "torch.Tensor.kthvalue": [[356, "torch-tensor-kthvalue"]], "torch.Tensor.logical_not_": [[387, "torch-tensor-logical-not"]], "torch.Tensor.isneginf": [[350, "torch-tensor-isneginf"]], "torch.Tensor.isinf": [[348, "torch-tensor-isinf"]], "torch.Tensor.lgamma_": [[370, "torch-tensor-lgamma"]], "torch.Tensor.log2": [[376, "torch-tensor-log2"]], "torch.Tensor.logical_xor_": [[391, "torch-tensor-logical-xor"]], "torch.Tensor.less_equal": [[367, "torch-tensor-less-equal"]], "torch.Tensor.istft": [[353, "torch-tensor-istft"]], "torch.Tensor.lerp_": [[364, "torch-tensor-lerp"]], "torch.Tensor.isfinite": [[347, "torch-tensor-isfinite"]], "torch.Tensor.le_": [[362, "torch-tensor-le"]], "torch.Tensor.logical_xor": [[390, "torch-tensor-logical-xor"]], "torch.Tensor.logaddexp2": [[381, "torch-tensor-logaddexp2"]], "torch.Tensor.logdet": [[383, "torch-tensor-logdet"]], "torch.Tensor.lcm": [[357, "torch-tensor-lcm"]], "torch.Tensor.log1p": [[374, "torch-tensor-log1p"]], "torch.Tensor.log_normal_": [[379, "torch-tensor-log-normal"]], "torch.Tensor.lcm_": [[358, "torch-tensor-lcm"]], "torch.Tensor.logaddexp": [[380, "torch-tensor-logaddexp"]], "torch.Tensor.log10": [[372, "torch-tensor-log10"]], "torch.Tensor.less": [[365, "torch-tensor-less"]], "torch.Tensor.log1p_": [[375, "torch-tensor-log1p"]], "torch.Tensor.logical_and": [[384, "torch-tensor-logical-and"]], "torch.Tensor.logical_or_": [[389, "torch-tensor-logical-or"]], "torch.Tensor.is_sparse_csr": [[345, "torch-tensor-is-sparse-csr"]], "torch.Tensor.isclose": [[346, "torch-tensor-isclose"]], "torch.Tensor.less_equal_": [[368, "torch-tensor-less-equal"]], "torch.Tensor.logical_or": [[388, "torch-tensor-logical-or"]], "torch.Tensor.isreal": [[352, "torch-tensor-isreal"]], "torch.Tensor.lerp": [[363, "torch-tensor-lerp"]], "torch.Tensor.itemsize": [[355, "torch-tensor-itemsize"]], "torch.Tensor.ldexp_": [[360, "torch-tensor-ldexp"]], "torch.Tensor.is_sparse": [[344, "torch-tensor-is-sparse"]], "torch.Tensor.log10_": [[373, "torch-tensor-log10"]], "torch.Tensor.isposinf": [[351, "torch-tensor-isposinf"]], "torch.Tensor.item": [[354, "torch-tensor-item"]], "torch.Tensor.log2_": [[377, "torch-tensor-log2"]], "torch.Tensor.logcumsumexp": [[382, "torch-tensor-logcumsumexp"]], "torch.Tensor.logical_and_": [[385, "torch-tensor-logical-and"]], "torch.Tensor.less_": [[366, "torch-tensor-less"]], "torch.Tensor.is_signed": [[343, "torch-tensor-is-signed"]], "torch.Tensor.log": [[371, "torch-tensor-log"]], "torch.Tensor.ldexp": [[359, "torch-tensor-ldexp"]], "torch.Tensor.logical_not": [[386, "torch-tensor-logical-not"]], "torch.Tensor.is_complex": [[331, "torch-tensor-is-complex"]], "torch.Tensor.is_shared": [[342, "torch-tensor-is-shared"]], "torch.Tensor.index_put_": [[321, "torch-tensor-index-put"]], "torch.Tensor.igammac_": [[312, "torch-tensor-igammac"]], "torch.Tensor.histogram": [[303, "torch-tensor-histogram"]], "torch.Tensor.is_meta": [[338, "torch-tensor-is-meta"]], "torch.Tensor.is_leaf": [[337, "torch-tensor-is-leaf"]], "torch.Tensor.is_coalesced": [[330, "torch-tensor-is-coalesced"]], "torch.Tensor.half": [[299, "torch-tensor-half"]], "torch.Tensor.gt": [[297, "torch-tensor-gt"]], "torch.Tensor.i0_": [[308, "torch-tensor-i0"]], "torch.Tensor.int": [[327, "torch-tensor-int"]], "torch.Tensor.hsplit": [[304, "torch-tensor-hsplit"]], "torch.Tensor.i0": [[307, "torch-tensor-i0"]], "torch.Tensor.greater_equal_": [[296, "torch-tensor-greater-equal"]], "torch.Tensor.histc": [[302, "torch-tensor-histc"]], "torch.Tensor.index_add_": [[315, "torch-tensor-index-add"]], "torch.Tensor.index_copy_": [[317, "torch-tensor-index-copy"]], "torch.Tensor.index_add": [[314, "torch-tensor-index-add"]], "torch.Tensor.index_reduce": [[322, "torch-tensor-index-reduce"]], "torch.Tensor.index_select": [[324, "torch-tensor-index-select"]], "torch.Tensor.inverse": [[329, "torch-tensor-inverse"]], "torch.Tensor.is_conj": [[332, "torch-tensor-is-conj"]], "torch.Tensor.is_contiguous": [[333, "torch-tensor-is-contiguous"]], "torch.Tensor.greater_equal": [[295, "torch-tensor-greater-equal"]], "torch.Tensor.is_set_to": [[341, "torch-tensor-is-set-to"]], "torch.Tensor.is_quantized": [[340, "torch-tensor-is-quantized"]], "torch.Tensor.gt_": [[298, "torch-tensor-gt"]], "torch.Tensor.igamma": [[309, "torch-tensor-igamma"]], "torch.Tensor.index_copy": [[316, "torch-tensor-index-copy"]], "torch.Tensor.greater_": [[294, "torch-tensor-greater"]], "torch.Tensor.index_reduce_": [[323, "torch-tensor-index-reduce"]], "torch.Tensor.is_floating_point": [[335, "torch-tensor-is-floating-point"]], "torch.Tensor.inner": [[326, "torch-tensor-inner"]], "torch.Tensor.is_cuda": [[334, "torch-tensor-is-cuda"]], "torch.Tensor.is_inference": [[336, "torch-tensor-is-inference"]], "torch.Tensor.imag": [[313, "torch-tensor-imag"]], "torch.Tensor.is_pinned": [[339, "torch-tensor-is-pinned"]], "torch.Tensor.index_put": [[320, "torch-tensor-index-put"]], "torch.Tensor.index_fill": [[318, "torch-tensor-index-fill"]], "torch.Tensor.indices": [[325, "torch-tensor-indices"]], "torch.Tensor.hardshrink": [[300, "torch-tensor-hardshrink"]], "torch.Tensor.hypot": [[305, "torch-tensor-hypot"]], "torch.Tensor.heaviside": [[301, "torch-tensor-heaviside"]], "torch.Tensor.igammac": [[311, "torch-tensor-igammac"]], "torch.Tensor.igamma_": [[310, "torch-tensor-igamma"]], "torch.Tensor.hypot_": [[306, "torch-tensor-hypot"]], "torch.Tensor.int_repr": [[328, "torch-tensor-int-repr"]], "torch.Tensor.index_fill_": [[319, "torch-tensor-index-fill"]], "torch.tensor": [[1830, "torch-tensor"]], "torch.unsqueeze": [[1850, "torch-unsqueeze"]], "torch.sym_max": [[1822, "torch-sym-max"]], "torch.subtract": [[1814, "torch-subtract"]], "torch.sym_min": [[1823, "torch-sym-min"]], "torch.trapz": [[1838, "torch-trapz"]], "torch.tanh": [[1829, "torch-tanh"]], "torch.triangular_solve": [[1839, "torch-triangular-solve"]], "torch.unflatten": [[1847, "torch-unflatten"]], "torch.tril": [[1840, "torch-tril"]], "torch.triu_indices": [[1843, "torch-triu-indices"]], "torch.var_mean": [[1854, "torch-var-mean"]], "torch.take": [[1826, "torch-take"]], "torch.unique": [[1848, "torch-unique"]], "torch.var": [[1853, "torch-var"]], "torch.sym_not": [[1824, "torch-sym-not"]], "torch.tensor_split": [[1831, "torch-tensor-split"]], "torch.unique_consecutive": [[1849, "torch-unique-consecutive"]], "torch.svd_lowrank": [[1817, "torch-svd-lowrank"]], "torch.transpose": [[1836, "torch-transpose"]], "torch.true_divide": [[1844, "torch-true-divide"]], "torch.swapdims": [[1819, "torch-swapdims"]], "torch.tensordot": [[1832, "torch-tensordot"]], "torch.tile": [[1833, "torch-tile"]], "torch.swapaxes": [[1818, "torch-swapaxes"]], "torch.tril_indices": [[1841, "torch-tril-indices"]], "torch.vander": [[1852, "torch-vander"]], "torch.sym_float": [[1820, "torch-sym-float"]], "torch.vmap": [[1858, "torch-vmap"]], "torch.sub": [[1813, "torch-sub"]], "torch.topk": [[1834, "torch-topk"]], "torch.tan": [[1828, "torch-tan"]], "torch.take_along_dim": [[1827, "torch-take-along-dim"]], "torch.unbind": [[1846, "torch-unbind"]], "torch.where": [[1861, "torch-where"]], "torch.sym_int": [[1821, "torch-sym-int"]], "torch.view_as_real": [[1857, "torch-view-as-real"]], "torch.use_deterministic_algorithms": [[1851, "torch-use-deterministic-algorithms"]], "torch.vdot": [[1855, "torch-vdot"]], "torch.triu": [[1842, "torch-triu"]], "torch.view_as_complex": [[1856, "torch-view-as-complex"]], "torch.sum": [[1815, "torch-sum"]], "torch.trapezoid": [[1837, "torch-trapezoid"]], "torch.t": [[1825, "torch-t"]], "torch.vsplit": [[1859, "torch-vsplit"]], "torch.vstack": [[1860, "torch-vstack"]], "torch.trace": [[1835, "torch-trace"]], "torch.svd": [[1816, "torch-svd"]], "torch.trunc": [[1845, "torch-trunc"]], "torch.rsqrt": [[1746, "torch-rsqrt"]], "torch.rand": [[1724, "torch-rand"]], "torch.select": [[1753, "torch-select"]], "torch.searchsorted": [[1751, "torch-searchsorted"]], "torch.randn_like": [[1729, "torch-randn-like"]], "torch.qr": [[1715, "torch-qr"]], "torch.rad2deg": [[1723, "torch-rad2deg"]], "torch.set_float32_matmul_precision": [[1759, "torch-set-float32-matmul-precision"]], "torch.scatter_add": [[1749, "torch-scatter-add"]], "torch.ravel": [[1732, "torch-ravel"]], "torch.scatter": [[1748, "torch-scatter"]], "torch.rand_like": [[1725, "torch-rand-like"]], "torch.rot90": [[1743, "torch-rot90"]], "torch.seed": [[1752, "torch-seed"]], "torch.set_default_dtype": [[1756, "torch-set-default-dtype"]], "torch.round": [[1744, "torch-round"]], "torch.quantize_per_tensor": [[1718, "torch-quantize-per-tensor"]], "torch.randperm": [[1730, "torch-randperm"]], "torch.reciprocal": [[1734, "torch-reciprocal"]], "torch.quantized_max_pool2d": [[1721, "torch-quantized-max-pool2d"]], "set_grad_enabled": [[1761, "set-grad-enabled"]], "torch.resolve_conj": [[1739, "torch-resolve-conj"]], "torch.reshape": [[1738, "torch-reshape"]], "torch.quantile": [[1716, "torch-quantile"]], "torch.range": [[1731, "torch-range"]], "torch.real": [[1733, "torch-real"]], "torch.result_type": [[1741, "torch-result-type"]], "torch.roll": [[1742, "torch-roll"]], "torch.quantize_per_channel": [[1717, "torch-quantize-per-channel"]], "torch.set_default_device": [[1755, "torch-set-default-device"]], "torch.randint": [[1726, "torch-randint"]], "torch.randn": [[1728, "torch-randn"]], "torch.scatter_reduce": [[1750, "torch-scatter-reduce"]], "torch.randint_like": [[1727, "torch-randint-like"]], "torch.set_num_interop_threads": [[1762, "torch-set-num-interop-threads"]], "torch.set_default_tensor_type": [[1757, "torch-set-default-tensor-type"]], "torch.set_num_threads": [[1763, "torch-set-num-threads"]], "torch.repeat_interleave": [[1737, "torch-repeat-interleave"]], "torch.quantized_max_pool1d": [[1720, "torch-quantized-max-pool1d"]], "torch.quantized_batch_norm": [[1719, "torch-quantized-batch-norm"]], "torch.remainder": [[1735, "torch-remainder"]], "torch.select_scatter": [[1754, "torch-select-scatter"]], "torch.renorm": [[1736, "torch-renorm"]], "SobolEngine": [[1722, "sobolengine"]], "torch.resolve_neg": [[1740, "torch-resolve-neg"]], "torch.save": [[1747, "torch-save"]], "torch.set_flush_denormal": [[1760, "torch-set-flush-denormal"]], "torch.row_stack": [[1745, "torch-row-stack"]], "torch.set_deterministic_debug_mode": [[1758, "torch-set-deterministic-debug-mode"]], "torch.std_mean": [[1811, "torch-std-mean"]], "torch.sqrt": [[1805, "torch-sqrt"]], "torch.sparse_bsc_tensor": [[1798, "torch-sparse-bsc-tensor"]], "torch.signal.windows.blackman": [[1771, "torch-signal-windows-blackman"]], "torch.sparse_compressed_tensor": [[1800, "torch-sparse-compressed-tensor"]], "torch.signal.windows.hann": [[1778, "torch-signal-windows-hann"]], "torch.signal.windows.kaiser": [[1779, "torch-signal-windows-kaiser"]], "torch.sparse_csr_tensor": [[1803, "torch-sparse-csr-tensor"]], "torch.split": [[1804, "torch-split"]], "torch.signbit": [[1781, "torch-signbit"]], "torch.signal.windows.general_cosine": [[1775, "torch-signal-windows-general-cosine"]], "torch.sparse.addmm": [[1790, "torch-sparse-addmm"]], "torch.std": [[1810, "torch-std"]], "torch.squeeze": [[1807, "torch-squeeze"]], "torch.signal.windows.general_hamming": [[1776, "torch-signal-windows-general-hamming"]], "torch.set_printoptions": [[1764, "torch-set-printoptions"]], "torch.sparse.spdiags": [[1796, "torch-sparse-spdiags"]], "torch.sgn": [[1767, "torch-sgn"]], "torch.softmax": [[1788, "torch-softmax"]], "torch.signal.windows.cosine": [[1772, "torch-signal-windows-cosine"]], "torch.sparse.softmax": [[1795, "torch-sparse-softmax"]], "torch.sspaddmm": [[1808, "torch-sspaddmm"]], "torch.signal.windows.gaussian": [[1774, "torch-signal-windows-gaussian"]], "torch.sinc": [[1783, "torch-sinc"]], "torch.sigmoid": [[1768, "torch-sigmoid"]], "torch.signal.windows.nuttall": [[1780, "torch-signal-windows-nuttall"]], "torch.sin": [[1782, "torch-sin"]], "torch.sign": [[1769, "torch-sign"]], "torch.sparse_bsr_tensor": [[1799, "torch-sparse-bsr-tensor"]], "torch.stack": [[1809, "torch-stack"]], "torch.signal.windows.bartlett": [[1770, "torch-signal-windows-bartlett"]], "check_sparse_tensor_invariants": [[1791, "check-sparse-tensor-invariants"]], "torch.set_warn_always": [[1766, "torch-set-warn-always"]], "torch.sparse.mm": [[1793, "torch-sparse-mm"]], "torch.sinh": [[1784, "torch-sinh"]], "torch.slogdet": [[1786, "torch-slogdet"]], "torch.square": [[1806, "torch-square"]], "torch.sort": [[1789, "torch-sort"]], "torch.stft": [[1812, "torch-stft"]], "torch.signal.windows.hamming": [[1777, "torch-signal-windows-hamming"]], "torch.sparse_coo_tensor": [[1801, "torch-sparse-coo-tensor"]], "torch.slice_scatter": [[1785, "torch-slice-scatter"]], "torch.sparse_csc_tensor": [[1802, "torch-sparse-csc-tensor"]], "torch.sparse.sum": [[1797, "torch-sparse-sum"]], "torch.set_rng_state": [[1765, "torch-set-rng-state"]], "torch.sparse.log_softmax": [[1792, "torch-sparse-log-softmax"]], "torch.smm": [[1787, "torch-smm"]], "torch.signal.windows.exponential": [[1773, "torch-signal-windows-exponential"]], "torch.sparse.sampled_addmm": [[1794, "torch-sparse-sampled-addmm"]], "JitScalarType": [[1666, "jitscalartype"]], "CyclicLR": [[1691, "cycliclr"]], "Adagrad": [[1671, "adagrad"]], "StepLR": [[1701, "steplr"]], "torch.orgqr": [[1702, "torch-orgqr"]], "torch.optim.Optimizer.zero_grad": [[1681, "torch-optim-optimizer-zero-grad"]], "torch.optim.Optimizer.step": [[1680, "torch-optim-optimizer-step"]], "torch.optim.Optimizer.state_dict": [[1679, "torch-optim-optimizer-state-dict"]], "torch.pinverse": [[1707, "torch-pinverse"]], "Adam": [[1672, "adam"]], "SGD": [[1685, "sgd"]], "RAdam": [[1682, "radam"]], "torch.optim.Optimizer.add_param_group": [[1677, "torch-optim-optimizer-add-param-group"]], "MultiStepLR": [[1695, "multisteplr"]], "torch.poisson": [[1708, "torch-poisson"]], "OneCycleLR": [[1697, "onecyclelr"]], "ConstantLR": [[1688, "constantlr"]], "torch.ormqr": [[1703, "torch-ormqr"]], "torch.polygamma": [[1710, "torch-polygamma"]], "SparseAdam": [[1686, "sparseadam"]], "Adamax": [[1674, "adamax"]], "Adadelta": [[1670, "adadelta"]], "RMSprop": [[1683, "rmsprop"]], "ChainedScheduler": [[1687, "chainedscheduler"]], "CosineAnnealingLR": [[1689, "cosineannealinglr"]], "VerificationOptions": [[1668, "verificationoptions"]], "torch.polar": [[1709, "torch-polar"]], "torch.pow": [[1712, "torch-pow"]], "ReduceLROnPlateau": [[1699, "reducelronplateau"]], "LBFGS": [[1675, "lbfgs"]], "ASGD": [[1669, "asgd"]], "NAdam": [[1676, "nadam"]], "torch.promote_types": [[1714, "torch-promote-types"]], "LinearLR": [[1694, "linearlr"]], "GraphInfo": [[1667, "graphinfo"]], "MultiplicativeLR": [[1696, "multiplicativelr"]], "PolynomialLR": [[1698, "polynomiallr"]], "torch.optim.Optimizer.load_state_dict": [[1678, "torch-optim-optimizer-load-state-dict"]], "CosineAnnealingWarmRestarts": [[1690, "cosineannealingwarmrestarts"]], "ExponentialLR": [[1692, "exponentiallr"]], "torch.pca_lowrank": [[1705, "torch-pca-lowrank"]], "torch.outer": [[1704, "torch-outer"]], "LambdaLR": [[1693, "lambdalr"]], "SequentialLR": [[1700, "sequentiallr"]], "torch.permute": [[1706, "torch-permute"]], "torch.prod": [[1713, "torch-prod"]], "AdamW": [[1673, "adamw"]], "Rprop": [[1684, "rprop"]], "torch.positive": [[1711, "torch-positive"]], "torch.nn.functional.linear": [[1546, "torch-nn-functional-linear"]], "torch.nn.functional.margin_ranking_loss": [[1552, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.lp_pool1d": [[1550, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1563, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.gelu": [[1527, "torch-nn-functional-gelu"]], "torch.nn.functional.gumbel_softmax": [[1531, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.hinge_embedding_loss": [[1537, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.hardswish": [[1534, "torch-nn-functional-hardswish"]], "torch.nn.functional.fold": [[1523, "torch-nn-functional-fold"]], "torch.nn.functional.fractional_max_pool3d": [[1525, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.instance_norm": [[1539, "torch-nn-functional-instance-norm"]], "torch.nn.functional.embedding": [[1520, "torch-nn-functional-embedding"]], "torch.nn.functional.mse_loss": [[1560, "torch-nn-functional-mse-loss"]], "torch.nn.functional.glu": [[1528, "torch-nn-functional-glu"]], "torch.nn.functional.max_pool1d": [[1553, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.interpolate": [[1540, "torch-nn-functional-interpolate"]], "torch.nn.functional.one_hot": [[1566, "torch-nn-functional-one-hot"]], "torch.nn.functional.logsigmoid": [[1549, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.leaky_relu": [[1544, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.pad": [[1567, "torch-nn-functional-pad"]], "torch.nn.functional.max_pool3d": [[1555, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.gaussian_nll_loss": [[1526, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.mish": [[1559, "torch-nn-functional-mish"]], "torch.nn.functional.max_unpool2d": [[1557, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.log_softmax": [[1548, "torch-nn-functional-log-softmax"]], "torch.nn.functional.normalize": [[1565, "torch-nn-functional-normalize"]], "torch.nn.functional.leaky_relu_": [[1545, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.multi_margin_loss": [[1561, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.max_pool2d": [[1554, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.huber_loss": [[1538, "torch-nn-functional-huber-loss"]], "torch.nn.functional.embedding_bag": [[1521, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.nll_loss": [[1564, "torch-nn-functional-nll-loss"]], "torch.nn.functional.lp_pool2d": [[1551, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.hardsigmoid": [[1533, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.kl_div": [[1541, "torch-nn-functional-kl-div"]], "torch.nn.functional.hardtanh": [[1535, "torch-nn-functional-hardtanh"]], "torch.nn.functional.l1_loss": [[1542, "torch-nn-functional-l1-loss"]], "torch.nn.functional.elu_": [[1519, "torch-nn-functional-elu"]], "torch.nn.functional.grid_sample": [[1529, "torch-nn-functional-grid-sample"]], "torch.nn.functional.hardtanh_": [[1536, "torch-nn-functional-hardtanh"]], "torch.nn.functional.max_unpool1d": [[1556, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.group_norm": [[1530, "torch-nn-functional-group-norm"]], "torch.nn.functional.layer_norm": [[1543, "torch-nn-functional-layer-norm"]], "torch.nn.functional.hardshrink": [[1532, "torch-nn-functional-hardshrink"]], "torch.nn.functional.fractional_max_pool2d": [[1524, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.multilabel_margin_loss": [[1562, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.feature_alpha_dropout": [[1522, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.max_unpool3d": [[1558, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.local_response_norm": [[1547, "torch-nn-functional-local-response-norm"]], "torch.nn.utils.parametrizations.spectral_norm": [[1618, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.utils.skip_init": [[1650, "torch-nn-utils-skip-init"]], "torch.nn.utils.rnn.pad_sequence": [[1647, "torch-nn-utils-rnn-pad-sequence"]], "BasePruningMethod": [[1624, "basepruningmethod"]], "torch.not_equal": [[1659, "torch-not-equal"]], "torch.nn.utils.prune.custom_from_mask": [[1632, "torch-nn-utils-prune-custom-from-mask"]], "L1Unstructured": [[1627, "l1unstructured"]], "torch.nn.utils.prune.global_unstructured": [[1633, "torch-nn-utils-prune-global-unstructured"]], "torch.norm": [[1657, "torch-norm"]], "torch.numel": [[1660, "torch-numel"]], "torch.normal": [[1658, "torch-normal"]], "torch.nonzero": [[1656, "torch-nonzero"]], "CustomFromMask": [[1625, "customfrommask"]], "torch.nn.utils.parametrize.is_parametrized": [[1621, "torch-nn-utils-parametrize-is-parametrized"]], "RandomStructured": [[1630, "randomstructured"]], "torch.nn.utils.remove_weight_norm": [[1642, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.rnn.unpad_sequence": [[1649, "torch-nn-utils-rnn-unpad-sequence"]], "torch.nn.utils.prune.random_structured": [[1638, "torch-nn-utils-prune-random-structured"]], "torch.ones_like": [[1662, "torch-ones-like"]], "torch.nn.utils.stateless.functional_call": [[1652, "torch-nn-utils-stateless-functional-call"]], "torch.nn.utils.prune.l1_unstructured": [[1636, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.remove_spectral_norm": [[1641, "torch-nn-utils-remove-spectral-norm"]], "ExportOptions": [[1663, "exportoptions"]], "torch.nn.utils.spectral_norm": [[1651, "torch-nn-utils-spectral-norm"]], "torch.nn.utils.weight_norm": [[1654, "torch-nn-utils-weight-norm"]], "torch.nn.utils.parametrizations.orthogonal": [[1617, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.utils.prune.random_unstructured": [[1639, "torch-nn-utils-prune-random-unstructured"]], "Identity": [[1626, "identity"], [1392, "identity"]], "PruningContainer": [[1629, "pruningcontainer"]], "torch.ones": [[1661, "torch-ones"]], "no_grad": [[1655, "no-grad"]], "torch.nn.utils.parametrize.cached": [[1620, "torch-nn-utils-parametrize-cached"]], "ParametrizationList": [[1619, "parametrizationlist"]], "torch.nn.utils.rnn.pack_sequence": [[1645, "torch-nn-utils-rnn-pack-sequence"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1644, "torch-nn-utils-rnn-pack-padded-sequence"]], "ExportOutput": [[1664, "exportoutput"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1623, "torch-nn-utils-parametrize-remove-parametrizations"]], "ExportOutputSerializer": [[1665, "exportoutputserializer"]], "RandomUnstructured": [[1631, "randomunstructured"]], "torch.nn.utils.parametrize.register_parametrization": [[1622, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.utils.prune.is_pruned": [[1635, "torch-nn-utils-prune-is-pruned"]], "torch.nn.utils.prune.ln_structured": [[1637, "torch-nn-utils-prune-ln-structured"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1646, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.nn.utils.rnn.unpack_sequence": [[1648, "torch-nn-utils-rnn-unpack-sequence"]], "PackedSequence": [[1643, "packedsequence"]], "torch.nn.utils.prune.identity": [[1634, "torch-nn-utils-prune-identity"]], "torch.nn.utils.vector_to_parameters": [[1653, "torch-nn-utils-vector-to-parameters"]], "LnStructured": [[1628, "lnstructured"]], "torch.nn.utils.prune.remove": [[1640, "torch-nn-utils-prune-remove"]], "UninitializedBuffer": [[1612, "uninitializedbuffer"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1609, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.functional.triplet_margin_loss": [[1595, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.functional.sigmoid": [[1581, "torch-nn-functional-sigmoid"]], "torch.nn.functional.soft_margin_loss": [[1584, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.relu": [[1574, "torch-nn-functional-relu"]], "torch.nn.functional.relu_": [[1576, "torch-nn-functional-relu"]], "torch.nn.functional.pixel_unshuffle": [[1571, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1608, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.utils.clip_grad_norm_": [[1614, "torch-nn-utils-clip-grad-norm"]], "torch.nn.modules.module.register_module_backward_hook": [[1602, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.functional.prelu": [[1573, "torch-nn-functional-prelu"]], "torch.nn.utils.clip_grad_value_": [[1615, "torch-nn-utils-clip-grad-value"]], "torch.nn.functional.softshrink": [[1588, "torch-nn-functional-softshrink"]], "torch.nn.functional.softsign": [[1589, "torch-nn-functional-softsign"]], "torch.nn.functional.upsample": [[1598, "torch-nn-functional-upsample"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1605, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1607, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.functional.silu": [[1582, "torch-nn-functional-silu"]], "UninitializedParameter": [[1613, "uninitializedparameter"]], "torch.nn.functional.upsample_nearest": [[1600, "torch-nn-functional-upsample-nearest"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1594, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.functional.pdist": [[1569, "torch-nn-functional-pdist"]], "DistributedDataParallel": [[1610, "distributeddataparallel"], [1895, "distributeddataparallel"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1606, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.softmin": [[1586, "torch-nn-functional-softmin"]], "torch.nn.functional.pairwise_distance": [[1568, "torch-nn-functional-pairwise-distance"]], "torch.nn.utils.parameters_to_vector": [[1616, "torch-nn-utils-parameters-to-vector"]], "Parameter": [[1611, "parameter"]], "torch.nn.functional.threshold_": [[1593, "torch-nn-functional-threshold"]], "torch.nn.functional.tanh": [[1590, "torch-nn-functional-tanh"]], "torch.nn.functional.pixel_shuffle": [[1570, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.softplus": [[1587, "torch-nn-functional-softplus"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1596, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.functional.selu": [[1580, "torch-nn-functional-selu"]], "torch.nn.functional.upsample_bilinear": [[1599, "torch-nn-functional-upsample-bilinear"]], "torch.nn.functional.rrelu": [[1577, "torch-nn-functional-rrelu"]], "torch.nn.functional.rrelu_": [[1578, "torch-nn-functional-rrelu"]], "torch.nn.functional.tanhshrink": [[1591, "torch-nn-functional-tanhshrink"]], "torch.nn.functional.poisson_nll_loss": [[1572, "torch-nn-functional-poisson-nll-loss"]], "LazyModuleMixin": [[1601, "lazymodulemixin"]], "torch.nn.functional.relu6": [[1575, "torch-nn-functional-relu6"]], "torch.nn.functional.threshold": [[1592, "torch-nn-functional-threshold"]], "torch.nn.functional.smooth_l1_loss": [[1583, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.modules.module.register_module_forward_hook": [[1604, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1603, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.functional.unfold": [[1597, "torch-nn-functional-unfold"]], "torch.nn.functional.scaled_dot_product_attention": [[1579, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.softmax": [[1585, "torch-nn-functional-softmax"]], "POE0004:operator-supported-in-newer-opset-version": [[90, "poe0004-operator-supported-in-newer-opset-version"]], "torch.Tensor.abs": [[92, "torch-tensor-abs"]], "FXE0008:fx-node-to-onnx": [[81, "fxe0008-fx-node-to-onnx"]], "Quickstart": [[58, "quickstart"]], "torch.func Whirlwind Tour": [[70, "torch-func-whirlwind-tour"]], "What is torch.func?": [[70, "what-is-torch-func"]], "Why composable function transforms?": [[70, "why-composable-function-transforms"], [65, "why-composable-function-transforms"]], "What are the transforms?": [[70, "what-are-the-transforms"]], "grad() (gradient computation)": [[70, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[70, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[70, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[70, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[70, "jacrev-jacfwd-and-hessian"]], "Migrating from functorch to torch.func": [[68, "migrating-from-functorch-to-torch-func"]], "function transforms": [[68, "function-transforms"]], "NN module utilities": [[68, "nn-module-utilities"]], "functorch.make_functional": [[68, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[68, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[68, "functorch-compile"]], "Events": [[53, "module-torch.distributed.elastic.events"]], "API Methods": [[53, "api-methods"]], "Event Objects": [[53, "event-objects"]], "FXE0004:fx-pass-convert-neg-to-sigmoid": [[77, "fxe0004-fx-pass-convert-neg-to-sigmoid"]], "torch.fx": [[72, "torch-fx"]], "Overview": [[72, "module-torch.fx"], [1910, "overview"], [12, "overview"], [36, "module-torch.cuda._sanitizer"], [1915, "module-torch.profiler"]], "Writing Transformations": [[72, "writing-transformations"]], "A Quick Primer on Graphs": [[72, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[72, "graph-manipulation"]], "Direct Graph Manipulation": [[72, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[72, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[72, "graph-manipulation-examples"]], "Proxy/Retracing": [[72, "proxy-retracing"]], "The Interpreter Pattern": [[72, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[72, "examples-of-the-interpreter-pattern"]], "Debugging": [[72, "debugging"], [1868, "debugging"]], "Introduction": [[72, "introduction"], [1878, "introduction"], [1886, "introduction"]], "Common Pitfalls in Transform Authoring": [[72, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[72, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[72, "debugging-the-generated-code"]], "Use pdb": [[72, "use-pdb"]], "Print the Generated Code": [[72, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[72, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[72, "debugging-the-transformation"]], "Available Debuggers": [[72, "available-debuggers"]], "Limitations of Symbolic Tracing": [[72, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[72, "dynamic-control-flow"]], "Static Control Flow": [[72, "static-control-flow"]], "Non-torch Functions": [[72, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[72, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[72, "leaf-modules"]], "Miscellanea": [[72, "miscellanea"]], "API Reference": [[72, "api-reference"], [1881, "module-torch.monitor"], [1910, "api-reference"], [36, "api-reference"], [1915, "api-reference"], [1913, "api-reference"]], "FXE0010:fx-pass": [[83, "fxe0010-fx-pass"]], "Train script": [[62, "train-script"]], "Generator": [[91, "generator"]], "POE0003:missing-standard-symbolic-function": [[89, "poe0003-missing-standard-symbolic-function"]], "Rendezvous": [[59, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[59, "registry"]], "Handler": [[59, "handler"]], "Exceptions": [[59, "exceptions"]], "Implementations": [[59, "implementations"], [50, "implementations"]], "Dynamic Rendezvous": [[59, "dynamic-rendezvous"]], "C10d Backend": [[59, "c10d-backend"]], "Etcd Backend": [[59, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[59, "etcd-rendezvous-legacy"]], "Etcd Store": [[59, "etcd-store"]], "Etcd Server": [[59, "etcd-server"]], "Patching Batch Norm": [[67, "patching-batch-norm"]], "What\u2019s happening?": [[67, "what-s-happening"]], "How to fix": [[67, "how-to-fix"]], "Option 1: Change the BatchNorm": [[67, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[67, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[67, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[67, "option-4-eval-mode"]], "DIAGSYS0001:arg-format-too-verbose": [[73, "diagsys0001-arg-format-too-verbose"]], "Customization": [[51, "customization"]], "Launcher": [[51, "launcher"]], "Rendezvous Handler": [[51, "rendezvous-handler"]], "Metric Handler": [[51, "metric-handler"]], "Events Handler": [[51, "events-handler"]], "UX Limitations": [[69, "ux-limitations"]], "General limitations": [[69, "general-limitations"]], "torch.autograd APIs": [[69, "torch-autograd-apis"]], "vmap limitations": [[69, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[69, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[69, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[69, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[69, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[69, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[69, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[69, "randomness"]], "TorchElastic Kubernetes": [[55, "torchelastic-kubernetes"]], "torch.Tensor.absolute_": [[95, "torch-tensor-absolute"]], "FXE0002:fx-tracer-failure": [[75, "fxe0002-fx-tracer-failure"]], "torch.utils.dlpack": [[49, "torch-utils-dlpack"]], "FXE0013:op-level-debugging": [[86, "fxe0013-op-level-debugging"]], "torch.Tensor.absolute": [[94, "torch-tensor-absolute"]], "FXE0012:unsupported-fx-node-analysis": [[85, "fxe0012-unsupported-fx-node-analysis"]], "Metrics": [[56, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[56, "metric-handlers"]], "Methods": [[56, "methods"]], "POE0001:node-missing-onnx-shape-inference": [[87, "poe0001-node-missing-onnx-shape-inference"]], "Multiprocessing": [[57, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[57, "starting-multiple-workers"]], "Process Context": [[57, "process-context"]], "POE0002:missing-custom-symbolic-function": [[88, "poe0002-missing-custom-symbolic-function"]], "FXE0003:fx-frontend-aotautograd": [[76, "fxe0003-fx-frontend-aotautograd"]], "torch.Tensor.acos_": [[97, "torch-tensor-acos"]], "FXE0009:fx-frontend-dynamo-make-fx": [[82, "fxe0009-fx-frontend-dynamo-make-fx"]], "Examples": [[54, "examples"], [12, "examples"]], "FXE0011:no-symbolic-function-for-call-function": [[84, "fxe0011-no-symbolic-function-for-call-function"]], "Elastic Agent": [[50, "module-torch.distributed.elastic.agent"]], "Server": [[50, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[50, "concepts"]], "Extending the Agent": [[50, "extending-the-agent"]], "Watchdog in the Agent": [[50, "watchdog-in-the-agent"]], "torch.Tensor.abs_": [[93, "torch-tensor-abs"]], "torch.Tensor.acos": [[96, "torch-tensor-acos"]], "FXE0007:atenlib-fx-to-onnx": [[80, "fxe0007-atenlib-fx-to-onnx"]], "torch.func": [[65, "torch-func"]], "What are composable function transforms?": [[65, "what-are-composable-function-transforms"]], "Read More": [[65, "read-more"]], "Error Propagation": [[52, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[52, "methods-and-classes"]], "torchrun (Elastic Launch)": [[60, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[60, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Usage": [[60, "usage"], [45, null], [36, "usage"]], "Single-node multi-worker": [[60, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[60, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[60, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[60, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[60, "note-on-rendezvous-backend"]], "Definitions": [[60, "definitions"]], "Environment Variables": [[60, "environment-variables"]], "Deployment": [[60, "deployment"]], "Failure Modes": [[60, "failure-modes"]], "Membership Changes": [[60, "membership-changes"]], "Important Notices": [[60, "important-notices"]], "torch.func API Reference": [[66, "module-torch.func"]], "Function Transforms": [[66, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[66, "utilities-for-working-with-torch-nn-modules"]], "FXE0001:fx-tracer-success": [[74, "fxe0001-fx-tracer-success"]], "FXE0006:atenlib-symbolic-function": [[79, "fxe0006-atenlib-symbolic-function"]], "torch.fft": [[63, "torch-fft"]], "Fast Fourier Transforms": [[63, "fast-fourier-transforms"]], "Helper Functions": [[63, "helper-functions"]], "FXE0005:fx-ir-add-node": [[78, "fxe0005-fx-ir-add-node"]], "torch.futures": [[71, "torch-futures"]], "Expiration Timers": [[61, "module-torch.distributed.elastic.timer"]], "Client Methods": [[61, "client-methods"]], "Server/Client Implementations": [[61, "server-client-implementations"]], "Writing a custom timer server/client": [[61, "writing-a-custom-timer-server-client"]], "FullyShardedDataParallel": [[64, "module-torch.distributed.fsdp"]], "torch.nn.functional.adaptive_avg_pool2d": [[1489, "torch-nn-functional-adaptive-avg-pool2d"]], "Tanh": [[1470, "tanh"]], "UpsamplingBilinear2d": [[1483, "upsamplingbilinear2d"]], "torch.nn.functional.dropout3d": [[1517, "torch-nn-functional-dropout3d"]], "TransformerEncoderLayer": [[1477, "transformerencoderlayer"]], "torch.nn.functional.binary_cross_entropy": [[1501, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.affine_grid": [[1494, "torch-nn-functional-affine-grid"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1502, "torch-nn-functional-binary-cross-entropy-with-logits"]], "Transformer": [[1473, "transformer"], [28, "transformer"]], "TripletMarginLoss": [[1478, "tripletmarginloss"]], "ZeroPad1d": [[1485, "zeropad1d"]], "torch.nn.functional.conv3d": [[1506, "torch-nn-functional-conv3d"]], "torch.nn.functional.avg_pool2d": [[1497, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.alpha_dropout": [[1495, "torch-nn-functional-alpha-dropout"]], "TransformerDecoderLayer": [[1475, "transformerdecoderlayer"]], "TransformerDecoder": [[1474, "transformerdecoder"]], "torch.nn.functional.conv2d": [[1505, "torch-nn-functional-conv2d"]], "UpsamplingNearest2d": [[1484, "upsamplingnearest2d"]], "torch.nn.functional.adaptive_max_pool1d": [[1491, "torch-nn-functional-adaptive-max-pool1d"]], "ZeroPad3d": [[1487, "zeropad3d"]], "torch.nn.functional.conv_transpose2d": [[1508, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.avg_pool3d": [[1498, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.cosine_similarity": [[1511, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.adaptive_max_pool2d": [[1492, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.dropout1d": [[1515, "torch-nn-functional-dropout1d"]], "torch.nn.functional.conv1d": [[1504, "torch-nn-functional-conv1d"]], "torch.nn.functional.adaptive_avg_pool3d": [[1490, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.conv_transpose1d": [[1507, "torch-nn-functional-conv-transpose1d"]], "Unfold": [[1481, "unfold"]], "TransformerEncoder": [[1476, "transformerencoder"]], "torch.nn.functional.avg_pool1d": [[1496, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.batch_norm": [[1499, "torch-nn-functional-batch-norm"]], "torch.nn.functional.cosine_embedding_loss": [[1510, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.conv_transpose3d": [[1509, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.celu": [[1503, "torch-nn-functional-celu"]], "Tanhshrink": [[1471, "tanhshrink"]], "TripletMarginWithDistanceLoss": [[1479, "tripletmarginwithdistanceloss"]], "Upsample": [[1482, "upsample"]], "torch.nn.functional.ctc_loss": [[1513, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.adaptive_max_pool3d": [[1493, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.cross_entropy": [[1512, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.dropout": [[1514, "torch-nn-functional-dropout"]], "Unflatten": [[1480, "unflatten"]], "Threshold": [[1472, "threshold"]], "torch.nn.functional.elu": [[1518, "torch-nn-functional-elu"]], "torch.nn.functional.bilinear": [[1500, "torch-nn-functional-bilinear"]], "torch.nn.functional.dropout2d": [[1516, "torch-nn-functional-dropout2d"]], "ZeroPad2d": [[1486, "zeropad2d"]], "torch.nn.functional.adaptive_avg_pool1d": [[1488, "torch-nn-functional-adaptive-avg-pool1d"]], "AdaptiveAvgPool2d": [[1336, "adaptiveavgpool2d"]], "AdaptiveAvgPool1d": [[1335, "adaptiveavgpool1d"]], "CosineEmbeddingLoss": [[1364, "cosineembeddingloss"]], "DataParallel": [[1367, "dataparallel"]], "ConvTranspose2d": [[1362, "convtranspose2d"], [741, "convtranspose2d"]], "torch.ne": [[1331, "torch-ne"]], "CrossEntropyLoss": [[1366, "crossentropyloss"]], "Dropout1d": [[1369, "dropout1d"]], "BatchNorm1d": [[1348, "batchnorm1d"]], "AdaptiveMaxPool3d": [[1341, "adaptivemaxpool3d"]], "ChannelShuffle": [[1354, "channelshuffle"]], "CTCLoss": [[1353, "ctcloss"]], "CosineSimilarity": [[1365, "cosinesimilarity"]], "AdaptiveAvgPool3d": [[1337, "adaptiveavgpool3d"]], "Conv3d": [[1360, "conv3d"], [739, "conv3d"], [730, "conv3d"]], "torch.nextafter": [[1334, "torch-nextafter"]], "BatchNorm3d": [[1350, "batchnorm3d"], [736, "batchnorm3d"]], "AdaptiveLogSoftmaxWithLoss": [[1338, "adaptivelogsoftmaxwithloss"]], "torch.mvlgamma": [[1323, "torch-mvlgamma"]], "BCELoss": [[1346, "bceloss"]], "AvgPool3d": [[1345, "avgpool3d"]], "torch.narrow_copy": [[1330, "torch-narrow-copy"]], "AlphaDropout": [[1342, "alphadropout"]], "torch.nansum": [[1328, "torch-nansum"]], "Conv2d": [[1359, "conv2d"], [738, "conv2d"], [729, "conv2d"]], "AdaptiveMaxPool1d": [[1339, "adaptivemaxpool1d"]], "BatchNorm2d": [[1349, "batchnorm2d"], [735, "batchnorm2d"]], "AdaptiveMaxPool2d": [[1340, "adaptivemaxpool2d"]], "Dropout": [[1368, "dropout"]], "torch.negative": [[1333, "torch-negative"]], "AvgPool1d": [[1343, "avgpool1d"]], "torch.neg": [[1332, "torch-neg"]], "AvgPool2d": [[1344, "avgpool2d"]], "BCEWithLogitsLoss": [[1347, "bcewithlogitsloss"]], "ConstantPad1d": [[1355, "constantpad1d"]], "CELU": [[1352, "celu"]], "torch.narrow": [[1329, "torch-narrow"]], "Dropout2d": [[1370, "dropout2d"]], "torch.nan_to_num": [[1324, "torch-nan-to-num"]], "Bilinear": [[1351, "bilinear"]], "ConvTranspose1d": [[1361, "convtranspose1d"], [740, "convtranspose1d"]], "Conv1d": [[1358, "conv1d"], [737, "conv1d"]], "ConvTranspose3d": [[1363, "convtranspose3d"], [742, "convtranspose3d"]], "ConstantPad3d": [[1357, "constantpad3d"]], "Dropout3d": [[1371, "dropout3d"]], "torch.nanquantile": [[1327, "torch-nanquantile"]], "ConstantPad2d": [[1356, "constantpad2d"]], "torch.nanmean": [[1325, "torch-nanmean"]], "torch.nanmedian": [[1326, "torch-nanmedian"]], "Sequential": [[1458, "sequential"]], "SyncBatchNorm": [[1469, "syncbatchnorm"]], "ModuleList": [[1432, "modulelist"]], "ParameterList": [[1441, "parameterlist"]], "PixelShuffle": [[1442, "pixelshuffle"]], "Softmax": [[1463, "softmax"]], "MSELoss": [[1421, "mseloss"]], "ReplicationPad2d": [[1455, "replicationpad2d"]], "MultiheadAttention": [[1436, "multiheadattention"], [734, "multiheadattention"]], "NLLLoss": [[1437, "nllloss"]], "MaxPool2d": [[1424, "maxpool2d"]], "ReLU6": [[1450, "relu6"], [757, "relu6"]], "PixelUnshuffle": [[1443, "pixelunshuffle"]], "MultiLabelSoftMarginLoss": [[1434, "multilabelsoftmarginloss"]], "RReLU": [[1448, "rrelu"]], "ParameterDict": [[1440, "parameterdict"]], "ReflectionPad3d": [[1453, "reflectionpad3d"]], "MarginRankingLoss": [[1422, "marginrankingloss"]], "PairwiseDistance": [[1439, "pairwisedistance"]], "PReLU": [[1438, "prelu"]], "Sigmoid": [[1460, "sigmoid"], [758, "sigmoid"]], "MaxUnpool2d": [[1427, "maxunpool2d"]], "ReflectionPad1d": [[1451, "reflectionpad1d"]], "ReplicationPad3d": [[1456, "replicationpad3d"]], "MaxPool3d": [[1425, "maxpool3d"]], "PoissonNLLLoss": [[1444, "poissonnllloss"]], "MaxUnpool3d": [[1428, "maxunpool3d"]], "ModuleDict": [[1431, "moduledict"]], "Softshrink": [[1467, "softshrink"]], "RNN": [[1445, "rnn"]], "MaxPool1d": [[1423, "maxpool1d"]], "Mish": [[1429, "mish"]], "SmoothL1Loss": [[1461, "smoothl1loss"]], "RNNCell": [[1447, "rnncell"], [764, "rnncell"]], "Softplus": [[1466, "softplus"]], "SiLU": [[1459, "silu"]], "MultiMarginLoss": [[1435, "multimarginloss"]], "SELU": [[1457, "selu"]], "RNNBase": [[1446, "rnnbase"]], "Softsign": [[1468, "softsign"]], "ReplicationPad1d": [[1454, "replicationpad1d"]], "ReLU": [[1449, "relu"]], "MaxUnpool1d": [[1426, "maxunpool1d"]], "ReflectionPad2d": [[1452, "reflectionpad2d"]], "Softmin": [[1465, "softmin"]], "MultiLabelMarginLoss": [[1433, "multilabelmarginloss"]], "Softmax2d": [[1464, "softmax2d"]], "SoftMarginLoss": [[1462, "softmarginloss"]], "Module": [[1430, "module"]], "LayerNorm": [[1402, "layernorm"], [753, "layernorm"]], "LazyInstanceNorm3d": [[1414, "lazyinstancenorm3d"]], "Embedding": [[1373, "embedding"], [744, "embedding"]], "HingeEmbeddingLoss": [[1390, "hingeembeddingloss"]], "GroupNorm": [[1385, "groupnorm"], [748, "groupnorm"]], "LazyBatchNorm1d": [[1403, "lazybatchnorm1d"]], "ELU": [[1372, "elu"], [743, "elu"]], "FeatureAlphaDropout": [[1375, "featurealphadropout"]], "GRU": [[1382, "gru"], [759, "gru"]], "FractionalMaxPool3d": [[1379, "fractionalmaxpool3d"]], "Hardtanh": [[1389, "hardtanh"]], "GLU": [[1381, "glu"]], "Hardshrink": [[1386, "hardshrink"]], "LazyConvTranspose3d": [[1411, "lazyconvtranspose3d"]], "LazyConv3d": [[1408, "lazyconv3d"]], "FractionalMaxPool2d": [[1378, "fractionalmaxpool2d"]], "Linear": [[1417, "linear"], [763, "linear"], [755, "linear"], [732, "linear"], [731, "linear"]], "LPPool1d": [[1398, "lppool1d"]], "LazyConvTranspose1d": [[1409, "lazyconvtranspose1d"]], "KLDivLoss": [[1396, "kldivloss"]], "GELU": [[1380, "gelu"]], "EmbeddingBag": [[1374, "embeddingbag"], [745, "embeddingbag"]], "InstanceNorm3d": [[1395, "instancenorm3d"], [752, "instancenorm3d"]], "Hardsigmoid": [[1387, "hardsigmoid"]], "GRUCell": [[1383, "grucell"], [760, "grucell"]], "LazyInstanceNorm2d": [[1413, "lazyinstancenorm2d"]], "LeakyReLU": [[1416, "leakyrelu"], [754, "leakyrelu"]], "LPPool2d": [[1399, "lppool2d"]], "InstanceNorm2d": [[1394, "instancenorm2d"], [751, "instancenorm2d"]], "LazyBatchNorm2d": [[1404, "lazybatchnorm2d"]], "LazyLinear": [[1415, "lazylinear"]], "LazyBatchNorm3d": [[1405, "lazybatchnorm3d"]], "GaussianNLLLoss": [[1384, "gaussiannllloss"]], "LocalResponseNorm": [[1418, "localresponsenorm"]], "LogSigmoid": [[1419, "logsigmoid"]], "LazyConv2d": [[1407, "lazyconv2d"]], "LogSoftmax": [[1420, "logsoftmax"]], "InstanceNorm1d": [[1393, "instancenorm1d"], [750, "instancenorm1d"]], "Flatten": [[1376, "flatten"]], "HuberLoss": [[1391, "huberloss"]], "Fold": [[1377, "fold"]], "L1Loss": [[1397, "l1loss"]], "LazyConvTranspose2d": [[1410, "lazyconvtranspose2d"]], "LSTMCell": [[1401, "lstmcell"], [762, "lstmcell"]], "LazyInstanceNorm1d": [[1412, "lazyinstancenorm1d"]], "Hardswish": [[1388, "hardswish"], [749, "hardswish"]], "LSTM": [[1400, "lstm"], [761, "lstm"], [733, "lstm"]], "LazyConv1d": [[1406, "lazyconv1d"]], "torch.matrix_exp": [[1293, "torch-matrix-exp"]], "torch.lt": [[1286, "torch-lt"]], "torch.matrix_power": [[1294, "torch-matrix-power"]], "torch.max": [[1295, "torch-max"]], "torch.mps.get_rng_state": [[1309, "torch-mps-get-rng-state"]], "torch.logaddexp2": [[1276, "torch-logaddexp2"]], "torch.mean": [[1297, "torch-mean"]], "torch.mps.seed": [[1314, "torch-mps-seed"]], "torch.lu": [[1287, "torch-lu"]], "torch.maximum": [[1296, "torch-maximum"]], "torch.logical_or": [[1281, "torch-logical-or"]], "torch.min": [[1300, "torch-min"]], "torch.meshgrid": [[1299, "torch-meshgrid"]], "torch.mps.set_per_process_memory_fraction": [[1315, "torch-mps-set-per-process-memory-fraction"]], "torch.logcumsumexp": [[1277, "torch-logcumsumexp"]], "torch.mps.profiler.profile": [[1311, "torch-mps-profiler-profile"]], "torch.msort": [[1318, "torch-msort"]], "torch.mps.profiler.stop": [[1313, "torch-mps-profiler-stop"]], "torch.mps.empty_cache": [[1308, "torch-mps-empty-cache"]], "torch.manual_seed": [[1290, "torch-manual-seed"]], "torch.logdet": [[1278, "torch-logdet"]], "torch.mps.manual_seed": [[1310, "torch-mps-manual-seed"]], "torch.mps.driver_allocated_memory": [[1307, "torch-mps-driver-allocated-memory"]], "torch.logical_and": [[1279, "torch-logical-and"]], "torch.logspace": [[1284, "torch-logspace"]], "torch.mul": [[1319, "torch-mul"]], "torch.log2": [[1274, "torch-log2"]], "torch.mode": [[1303, "torch-mode"]], "torch.mps.set_rng_state": [[1316, "torch-mps-set-rng-state"]], "torch.mps.synchronize": [[1317, "torch-mps-synchronize"]], "torch.lu_unpack": [[1289, "torch-lu-unpack"]], "torch.masked_select": [[1291, "torch-masked-select"]], "torch.mm": [[1302, "torch-mm"]], "torch.logical_xor": [[1282, "torch-logical-xor"]], "torch.multinomial": [[1320, "torch-multinomial"]], "torch.multiply": [[1321, "torch-multiply"]], "torch.mps.current_allocated_memory": [[1306, "torch-mps-current-allocated-memory"]], "torch.matmul": [[1292, "torch-matmul"]], "torch.moveaxis": [[1304, "torch-moveaxis"]], "torch.movedim": [[1305, "torch-movedim"]], "torch.logaddexp": [[1275, "torch-logaddexp"]], "torch.logit": [[1283, "torch-logit"]], "torch.minimum": [[1301, "torch-minimum"]], "torch.mv": [[1322, "torch-mv"]], "torch.median": [[1298, "torch-median"]], "torch.logical_not": [[1280, "torch-logical-not"]], "torch.lu_solve": [[1288, "torch-lu-solve"]], "torch.mps.profiler.start": [[1312, "torch-mps-profiler-start"]], "torch.logsumexp": [[1285, "torch-logsumexp"]], "torch.linspace": [[1268, "torch-linspace"]], "torch.linalg.ldl_factor": [[1240, "torch-linalg-ldl-factor"]], "torch.linalg.slogdet": [[1257, "torch-linalg-slogdet"]], "torch.linalg.solve": [[1258, "torch-linalg-solve"]], "torch.log1p": [[1273, "torch-log1p"]], "torch.linalg.matrix_norm": [[1250, "torch-linalg-matrix-norm"]], "torch.load": [[1269, "torch-load"]], "torch.linalg.diagonal": [[1232, "torch-linalg-diagonal"]], "torch.linalg.ldl_solve": [[1242, "torch-linalg-ldl-solve"]], "torch.linalg.lstsq": [[1243, "torch-linalg-lstsq"]], "torch.linalg.multi_dot": [[1253, "torch-linalg-multi-dot"]], "torch.log10": [[1272, "torch-log10"]], "torch.linalg.pinv": [[1255, "torch-linalg-pinv"]], "torch.linalg.matrix_rank": [[1252, "torch-linalg-matrix-rank"]], "torch.linalg.solve_ex": [[1259, "torch-linalg-solve-ex"]], "torch.linalg.vector_norm": [[1267, "torch-linalg-vector-norm"]], "torch.linalg.eigvals": [[1235, "torch-linalg-eigvals"]], "torch.linalg.lu": [[1244, "torch-linalg-lu"]], "torch.linalg.qr": [[1256, "torch-linalg-qr"]], "torch.linalg.svdvals": [[1262, "torch-linalg-svdvals"]], "torch.linalg.cross": [[1230, "torch-linalg-cross"]], "torch.linalg.tensorsolve": [[1264, "torch-linalg-tensorsolve"]], "torch.linalg.lu_solve": [[1247, "torch-linalg-lu-solve"]], "torch.linalg.householder_product": [[1237, "torch-linalg-householder-product"]], "torch.linalg.solve_triangular": [[1260, "torch-linalg-solve-triangular"]], "torch.linalg.lu_factor": [[1245, "torch-linalg-lu-factor"]], "torch.linalg.cholesky": [[1227, "torch-linalg-cholesky"]], "torch.linalg.eigvalsh": [[1236, "torch-linalg-eigvalsh"]], "torch.linalg.vecdot": [[1266, "torch-linalg-vecdot"]], "torch.lobpcg": [[1270, "torch-lobpcg"]], "torch.lgamma": [[1226, "torch-lgamma"]], "torch.linalg.lu_factor_ex": [[1246, "torch-linalg-lu-factor-ex"]], "torch.linalg.inv": [[1238, "torch-linalg-inv"]], "torch.linalg.tensorinv": [[1263, "torch-linalg-tensorinv"]], "torch.linalg.eig": [[1233, "torch-linalg-eig"]], "torch.linalg.det": [[1231, "torch-linalg-det"]], "torch.linalg.matmul": [[1248, "torch-linalg-matmul"]], "torch.linalg.cholesky_ex": [[1228, "torch-linalg-cholesky-ex"]], "torch.linalg.ldl_factor_ex": [[1241, "torch-linalg-ldl-factor-ex"]], "torch.log": [[1271, "torch-log"]], "torch.linalg.inv_ex": [[1239, "torch-linalg-inv-ex"]], "torch.linalg.vander": [[1265, "torch-linalg-vander"]], "torch.linalg.eigh": [[1234, "torch-linalg-eigh"]], "torch.linalg.cond": [[1229, "torch-linalg-cond"]], "torch.linalg.svd": [[1261, "torch-linalg-svd"]], "torch.linalg.matrix_power": [[1251, "torch-linalg-matrix-power"]], "torch.less_equal": [[1225, "torch-less-equal"]], "torch.linalg.matrix_exp": [[1249, "torch-linalg-matrix-exp"]], "torch.linalg.norm": [[1254, "torch-linalg-norm"]], "torch.igamma": [[1166, "torch-igamma"]], "torch.func.grad": [[1129, "torch-func-grad"]], "torch.index_add": [[1169, "torch-index-add"]], "torch.func.functional_call": [[1127, "torch-func-functional-call"]], "torch.histc": [[1158, "torch-histc"]], "torch.geqrf": [[1143, "torch-geqrf"]], "torch.func.vmap": [[1139, "torch-func-vmap"]], "torch.func.jvp": [[1134, "torch-func-jvp"]], "torch.gradient": [[1151, "torch-gradient"]], "torch.hamming_window": [[1155, "torch-hamming-window"]], "torch.ger": [[1144, "torch-ger"]], "torch.func.vjp": [[1138, "torch-func-vjp"]], "torch.i0": [[1165, "torch-i0"]], "torch.gather": [[1140, "torch-gather"]], "torch.get_float32_matmul_precision": [[1147, "torch-get-float32-matmul-precision"]], "torch.hspmm": [[1162, "torch-hspmm"]], "torch.get_default_dtype": [[1145, "torch-get-default-dtype"]], "torch.index_reduce": [[1171, "torch-index-reduce"]], "torch.func.replace_all_batch_norm_modules_": [[1136, "torch-func-replace-all-batch-norm-modules"]], "torch.func.linearize": [[1135, "torch-func-linearize"]], "torch.func.grad_and_value": [[1130, "torch-func-grad-and-value"]], "inference_mode": [[1173, "inference-mode"]], "torch.hstack": [[1163, "torch-hstack"]], "torch.ge": [[1142, "torch-ge"]], "torch.func.functionalize": [[1128, "torch-func-functionalize"]], "torch.func.jacrev": [[1133, "torch-func-jacrev"]], "torch.func.stack_module_state": [[1137, "torch-func-stack-module-state"]], "torch.hann_window": [[1156, "torch-hann-window"]], "torch.get_num_interop_threads": [[1148, "torch-get-num-interop-threads"]], "torch.histogramdd": [[1160, "torch-histogramdd"]], "torch.hsplit": [[1161, "torch-hsplit"]], "torch.igammac": [[1167, "torch-igammac"]], "torch.get_rng_state": [[1150, "torch-get-rng-state"]], "torch.index_select": [[1172, "torch-index-select"]], "torch.gcd": [[1141, "torch-gcd"]], "torch.inner": [[1175, "torch-inner"]], "torch.get_deterministic_debug_mode": [[1146, "torch-get-deterministic-debug-mode"]], "torch.hypot": [[1164, "torch-hypot"]], "torch.func.jacfwd": [[1132, "torch-func-jacfwd"]], "torch.get_num_threads": [[1149, "torch-get-num-threads"]], "torch.greater": [[1152, "torch-greater"]], "torch.initial_seed": [[1174, "torch-initial-seed"]], "torch.heaviside": [[1157, "torch-heaviside"]], "torch.func.hessian": [[1131, "torch-func-hessian"]], "torch.histogram": [[1159, "torch-histogram"]], "torch.index_copy": [[1170, "torch-index-copy"]], "torch.imag": [[1168, "torch-imag"]], "torch.gt": [[1154, "torch-gt"]], "torch.greater_equal": [[1153, "torch-greater-equal"]], "torch.isneginf": [[1192, "torch-isneginf"]], "torch.jit.optimize_for_inference": [[1207, "torch-jit-optimize-for-inference"]], "torch.isclose": [[1187, "torch-isclose"]], "torch.jit.script": [[1209, "torch-jit-script"]], "torch.kaiser_window": [[1217, "torch-kaiser-window"]], "torch.is_nonzero": [[1183, "torch-is-nonzero"]], "torch.jit.isinstance": [[1204, "torch-jit-isinstance"]], "torch.is_complex": [[1177, "torch-is-complex"]], "torch.kron": [[1218, "torch-kron"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1179, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.less": [[1224, "torch-less"]], "torch.jit.onednn_fusion_enabled": [[1206, "torch-jit-onednn-fusion-enabled"]], "torch.is_storage": [[1184, "torch-is-storage"]], "torch.jit.trace": [[1213, "torch-jit-trace"]], "torch.jit.annotate": [[1199, "torch-jit-annotate"]], "torch.jit.load": [[1205, "torch-jit-load"]], "torch.ldexp": [[1221, "torch-ldexp"]], "torch.inverse": [[1176, "torch-inverse"]], "ScriptModule": [[1198, "scriptmodule"]], "torch.isfinite": [[1188, "torch-isfinite"]], "torch.is_conj": [[1178, "torch-is-conj"]], "torch.is_inference_mode_enabled": [[1182, "torch-is-inference-mode-enabled"]], "torch.jit.save": [[1208, "torch-jit-save"]], "torch.jit.fork": [[1201, "torch-jit-fork"]], "torch.jit.unused": [[1215, "torch-jit-unused"]], "torch.lcm": [[1220, "torch-lcm"]], "torch.jit.wait": [[1216, "torch-jit-wait"]], "torch.isinf": [[1190, "torch-isinf"]], "torch.jit.set_fusion_strategy": [[1211, "torch-jit-set-fusion-strategy"]], "torch.lerp": [[1223, "torch-lerp"]], "torch.jit.freeze": [[1202, "torch-jit-freeze"]], "torch.isnan": [[1191, "torch-isnan"]], "torch.isreal": [[1194, "torch-isreal"]], "torch.le": [[1222, "torch-le"]], "strict_fusion": [[1212, "strict-fusion"]], "torch.jit.trace_module": [[1214, "torch-jit-trace-module"]], "ScriptFunction": [[1197, "scriptfunction"]], "torch.kthvalue": [[1219, "torch-kthvalue"]], "torch.istft": [[1195, "torch-istft"]], "Attribute": [[1196, "attribute"]], "torch.is_tensor": [[1185, "torch-is-tensor"]], "torch.jit.enable_onednn_fusion": [[1200, "torch-jit-enable-onednn-fusion"]], "torch.jit.ignore": [[1203, "torch-jit-ignore"]], "torch.jit.script_if_tracing": [[1210, "torch-jit-script-if-tracing"]], "torch.isposinf": [[1193, "torch-isposinf"]], "torch.is_warn_always_enabled": [[1186, "torch-is-warn-always-enabled"]], "torch.is_floating_point": [[1180, "torch-is-floating-point"]], "torch.is_grad_enabled": [[1181, "torch-is-grad-enabled"]], "torch.isin": [[1189, "torch-isin"]], "torch.fmod": [[1119, "torch-fmod"]], "torch.fft.rfftn": [[1108, "torch-fft-rfftn"]], "torch.flipud": [[1113, "torch-flipud"]], "torch.fft.fft": [[1087, "torch-fft-fft"]], "torch.fft.hfftn": [[1094, "torch-fft-hfftn"]], "torch.fix": [[1109, "torch-fix"]], "torch.fft.hfft2": [[1093, "torch-fft-hfft2"]], "torch.full": [[1125, "torch-full"]], "torch.eye": [[1084, "torch-eye"]], "torch.expm1": [[1083, "torch-expm1"]], "torch.fft.irfft": [[1102, "torch-fft-irfft"]], "torch.exp": [[1081, "torch-exp"]], "torch.frexp": [[1121, "torch-frexp"]], "torch.full_like": [[1126, "torch-full-like"]], "torch.flatten": [[1110, "torch-flatten"]], "torch.fmin": [[1118, "torch-fmin"]], "torch.frac": [[1120, "torch-frac"]], "torch.fft.ifftshift": [[1098, "torch-fft-ifftshift"]], "torch.fft.irfftn": [[1104, "torch-fft-irfftn"]], "torch.fft.rfftfreq": [[1107, "torch-fft-rfftfreq"]], "torch.erfinv": [[1080, "torch-erfinv"]], "torch.fake_quantize_per_tensor_affine": [[1086, "torch-fake-quantize-per-tensor-affine"]], "torch.fliplr": [[1112, "torch-fliplr"]], "torch.frombuffer": [[1124, "torch-frombuffer"]], "torch.from_dlpack": [[1122, "torch-from-dlpack"]], "torch.erf": [[1078, "torch-erf"]], "torch.fft.ihfft2": [[1100, "torch-fft-ihfft2"]], "torch.fft.ifft": [[1095, "torch-fft-ifft"]], "torch.fft.rfft2": [[1106, "torch-fft-rfft2"]], "torch.floor_divide": [[1116, "torch-floor-divide"]], "torch.fft.ifftn": [[1097, "torch-fft-ifftn"]], "torch.fft.fftn": [[1090, "torch-fft-fftn"]], "torch.fft.ifft2": [[1096, "torch-fft-ifft2"]], "torch.erfc": [[1079, "torch-erfc"]], "torch.from_numpy": [[1123, "torch-from-numpy"]], "torch.floor": [[1115, "torch-floor"]], "torch.fmax": [[1117, "torch-fmax"]], "torch.fake_quantize_per_channel_affine": [[1085, "torch-fake-quantize-per-channel-affine"]], "torch.flip": [[1111, "torch-flip"]], "torch.fft.rfft": [[1105, "torch-fft-rfft"]], "torch.fft.fftshift": [[1091, "torch-fft-fftshift"]], "torch.fft.ihfftn": [[1101, "torch-fft-ihfftn"]], "torch.fft.ihfft": [[1099, "torch-fft-ihfft"]], "torch.float_power": [[1114, "torch-float-power"]], "torch.fft.fft2": [[1088, "torch-fft-fft2"]], "torch.exp2": [[1082, "torch-exp2"]], "torch.fft.irfft2": [[1103, "torch-fft-irfft2"]], "torch.fft.fftfreq": [[1089, "torch-fft-fftfreq"]], "torch.fft.hfft": [[1092, "torch-fft-hfft"]], "IRs": [[1867, "irs"]], "Core Aten IR": [[1867, "core-aten-ir"]], "Prims IR": [[1867, "prims-ir"]], "torch.zeros": [[1863, "torch-zeros"]], "torch.hub": [[1865, "torch-hub"]], "Publishing models": [[1865, "publishing-models"]], "How to implement an entrypoint?": [[1865, "how-to-implement-an-entrypoint"]], "Important Notice": [[1865, "important-notice"]], "Loading models from Hub": [[1865, "loading-models-from-hub"]], "Running a loaded model:": [[1865, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1865, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1865, "caching-logic"]], "Known limitations:": [[1865, "known-limitations"]], "TorchScript": [[1868, "torchscript"]], "Creating TorchScript Code": [[1868, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1868, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1868, "torchscript-language"]], "Built-in Functions and Modules": [[1868, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1868, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1868, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1868, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1868, "disable-jit-for-debugging"]], "Inspecting Code": [[1868, "inspecting-code"]], "Interpreting Graphs": [[1868, "interpreting-graphs"]], "Tracer": [[1868, "tracer"]], "Tracing Edge Cases": [[1868, "tracing-edge-cases"]], "Automatic Trace Checking": [[1868, "automatic-trace-checking"]], "Tracer Warnings": [[1868, "tracer-warnings"]], "Frequently Asked Questions": [[1868, "frequently-asked-questions"], [1898, "frequently-asked-questions"], [1909, "frequently-asked-questions"], [16, "frequently-asked-questions"], [7, "frequently-asked-questions"], [1916, "frequently-asked-questions"]], "Known Issues": [[1868, "known-issues"]], "Appendix": [[1868, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1868, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1868, "modules"], [1902, "modules"]], "Functions": [[1868, "functions"], [1870, "functions"], [1909, "functions"], [1926, "functions"], [1936, "functions"]], "TorchScript Classes": [[1868, "torchscript-classes"], [1870, "id2"]], "Attributes": [[1868, "attributes"]], "Constants": [[1868, "constants"]], "Variables": [[1868, "variables"], [1870, "variables"], [20, "variables"]], "Fusion Backends": [[1868, "fusion-backends"]], "References": [[1868, "references"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1898, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1898, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1898, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1898, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1898, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "Serialization semantics": [[1907, "serialization-semantics"]], "Table of Contents": [[1907, "table-of-contents"]], "Saving and loading tensors": [[1907, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1907, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1907, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1907, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1907, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1907, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1907, "torch-full-always-inferring-a-float-dtype"]], "Utility functions": [[1907, "utility-functions"], [1919, "utility-functions"]], "Broadcasting semantics": [[1892, "broadcasting-semantics"]], "General semantics": [[1892, "general-semantics"]], "In-place semantics": [[1892, "in-place-semantics"]], "Backwards compatibility": [[1892, "backwards-compatibility"]], "Python Language Reference Coverage": [[1872, "python-language-reference-coverage"]], "Distributed Data Parallel": [[1895, "distributed-data-parallel"]], "Example": [[1895, "example"], [1896, "example"]], "Internal Design": [[1895, "internal-design"]], "Implementation": [[1895, "implementation"], [1923, "implementation"]], "ProcessGroup": [[1895, "processgroup"]], "TorchDynamo DDPOptimizer": [[1895, "id1"]], "Extending torch.func with autograd.Function": [[1897, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1897, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1897, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1897, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1897, "limitations-and-gotchas"]], "torch.vmap() Support": [[1897, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1897, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1897, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1897, "torch-func-jvp-support"]], "torch.nn.init": [[1889, "torch-nn-init"]], "CUDA semantics": [[1894, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1894, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1894, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1894, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1894, "asynchronous-execution"]], "CUDA streams": [[1894, "cuda-streams"]], "Stream semantics of backward passes": [[1894, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1894, "bc-note-using-grads-on-the-default-stream"]], "Memory management": [[1894, "memory-management"], [1900, "memory-management"], [35, "memory-management"]], "Environment variables": [[1894, "environment-variables"]], "Using custom memory allocators for CUDA": [[1894, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1894, "cublas-workspaces"]], "cuFFT plan cache": [[1894, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1894, "just-in-time-compilation"]], "Best practices": [[1894, "best-practices"]], "Device-agnostic code": [[1894, "device-agnostic-code"]], "Use pinned memory buffers": [[1894, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1894, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1894, "cuda-graphs"]], "Why CUDA Graphs?": [[1894, "why-cuda-graphs"]], "PyTorch API": [[1894, "pytorch-api"]], "Constraints": [[1894, "constraints"], [48, "module-torch.distributions.constraints"]], "Non-constraints": [[1894, "non-constraints"]], "Whole-network capture": [[1894, "whole-network-capture"]], "Partial-network capture": [[1894, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1894, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1894, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1894, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1894, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1894, "id5"]], "Graph memory management": [[1894, "graph-memory-management"]], "Sharing memory across captures": [[1894, "sharing-memory-across-captures"]], "torch.nn": [[1887, "module-torch.nn"], [1887, "id1"]], "Containers": [[1887, "containers"]], "Convolution Layers": [[1887, "convolution-layers"]], "Pooling layers": [[1887, "pooling-layers"]], "Padding Layers": [[1887, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1887, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1887, "non-linear-activations-other"]], "Normalization Layers": [[1887, "normalization-layers"]], "Recurrent Layers": [[1887, "recurrent-layers"]], "Transformer Layers": [[1887, "transformer-layers"]], "Linear Layers": [[1887, "linear-layers"]], "Dropout Layers": [[1887, "dropout-layers"]], "Sparse Layers": [[1887, "sparse-layers"]], "Distance Functions": [[1887, "distance-functions"]], "Loss Functions": [[1887, "loss-functions"]], "Vision Layers": [[1887, "vision-layers"]], "Shuffle Layers": [[1887, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1887, "module-torch.nn.parallel"]], "Utilities": [[1887, "module-torch.nn.utils"], [1933, "utilities"]], "Quantized Functions": [[1887, "quantized-functions"]], "Lazy Modules Initialization": [[1887, "lazy-modules-initialization"]], "Extending PyTorch": [[1896, "extending-pytorch"]], "Extending torch.autograd": [[1896, "extending-torch-autograd"]], "When to use": [[1896, "when-to-use"]], "When not to use": [[1896, "when-not-to-use"]], "How to use": [[1896, "how-to-use"]], "Combined or separate forward() and setup_context()": [[1896, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1896, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1896, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1896, "extending-torch-nn"]], "Adding a Module": [[1896, "adding-a-module"]], "Extending torch Python API": [[1896, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1896, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1896, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1896, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1896, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1896, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1896, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1896, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1896, "writing-custom-c-extensions"]], "Multiprocessing best practices": [[1904, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1904, "cuda-in-multiprocessing"]], "Best practices and tips": [[1904, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1904, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1904, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1904, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1904, "hogwild"]], "CPU in multiprocessing": [[1904, "cpu-in-multiprocessing"]], "CPU oversubscription": [[1904, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[1904, "avoid-cpu-oversubscription"]], "Named Tensors": [[1885, "named-tensors"]], "Creating named tensors": [[1885, "creating-named-tensors"]], "Named dimensions": [[1885, "named-dimensions"]], "Name propagation semantics": [[1885, "name-propagation-semantics"]], "match semantics": [[1885, "match-semantics"]], "Basic name inference rules": [[1885, "basic-name-inference-rules"]], "Explicit alignment by names": [[1885, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1885, "manipulating-dimensions"]], "Autograd support": [[1885, "autograd-support"]], "Currently supported operations and subsystems": [[1885, "currently-supported-operations-and-subsystems"]], "Operators": [[1885, "operators"]], "Subsystems": [[1885, "subsystems"]], "Named tensor API reference": [[1885, "named-tensor-api-reference"]], "Features for large-scale deployments": [[1901, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1901, "fleet-wide-operator-profiling"]], "API usage logging": [[1901, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1901, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1901, "build-environment-considerations"]], "Common extension points": [[1901, "common-extension-points"]], "Reproducibility": [[1906, "reproducibility"]], "Controlling sources of randomness": [[1906, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1906, "pytorch-random-number-generator"]], "Python": [[1906, "python"]], "Random number generators in other libraries": [[1906, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1906, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1906, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1906, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1906, "cuda-rnn-and-lstm"]], "DataLoader": [[1906, "dataloader"]], "Named Tensors operator coverage": [[1884, "named-tensors-operator-coverage"]], "Supported Operations": [[1884, "id1"]], "Keeps input names": [[1884, "keeps-input-names"]], "Removes dimensions": [[1884, "removes-dimensions"]], "Unifies names from inputs": [[1884, "unifies-names-from-inputs"]], "Permutes dimensions": [[1884, "permutes-dimensions"]], "Contracts away dims": [[1884, "contracts-away-dims"]], "Factory functions": [[1884, "factory-functions"]], "out function and in-place variants": [[1884, "out-function-and-in-place-variants"]], "MPS backend": [[1903, "mps-backend"]], "torch.zeros_like": [[1864, "torch-zeros-like"]], "JIT Utils - torch.utils.jit": [[1874, "module-torch.utils.jit"]], "HIP (ROCm) semantics": [[1900, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1900, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1900, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1900, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[1900, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1900, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1900, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1900, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1900, "enabling-kernel-asserts"]], "torch.utils.mobile_optimizer": [[1879, "torch-utils-mobile-optimizer"]], "TorchScript Language Reference": [[1870, "torchscript-language-reference"], [1871, "torchscript-language-reference"]], "Types": [[1870, "supported-type"], [1909, "types"]], "Unsupported Typing Constructs": [[1870, "unsupported-typing-constructs"], [1871, "unsupported-typing-constructs"]], "Default Types": [[1870, "default-types"]], "Optional Type Refinement": [[1870, "optional-type-refinement"]], "TorchScript Enums": [[1870, "id4"]], "Named Tuples": [[1870, "named-tuples"]], "Iterables": [[1870, "iterables"]], "Expressions": [[1870, "expressions"], [1871, "expressions"]], "Literals": [[1870, "literals"], [1871, "literals"]], "List Construction": [[1870, "list-construction"]], "Tuple Construction": [[1870, "tuple-construction"]], "Dict Construction": [[1870, "dict-construction"]], "Arithmetic Operators": [[1870, "arithmetic-operators"]], "Comparison Operators": [[1870, "comparison-operators"]], "Logical Operators": [[1870, "logical-operators"]], "Subscripts and Slicing": [[1870, "subscripts-and-slicing"]], "Function Calls": [[1870, "function-calls"]], "Method Calls": [[1870, "method-calls"]], "Ternary Expressions": [[1870, "ternary-expressions"]], "Casts": [[1870, "casts"]], "Accessing Module Parameters": [[1870, "accessing-module-parameters"]], "Statements": [[1870, "statements"]], "Simple Assignments": [[1870, "simple-assignments"]], "Pattern Matching Assignments": [[1870, "pattern-matching-assignments"]], "Print Statements": [[1870, "print-statements"]], "If Statements": [[1870, "if-statements"]], "While Loops": [[1870, "while-loops"]], "For loops with range": [[1870, "for-loops-with-range"]], "For loops over tuples": [[1870, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1870, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1870, "break-and-continue"]], "Return": [[1870, "return"]], "Variable Resolution": [[1870, "variable-resolution"]], "Use of Python Values": [[1870, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[1870, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1870, "python-defined-constants"]], "Module Attributes": [[1870, "module-attributes"]], "torch.linalg": [[1876, "torch-linalg"]], "Matrix Properties": [[1876, "matrix-properties"]], "Decompositions": [[1876, "decompositions"]], "Solvers": [[1876, "solvers"]], "Inverses": [[1876, "inverses"]], "Matrix Functions": [[1876, "matrix-functions"]], "Matrix Products": [[1876, "matrix-products"]], "Tensor Operations": [[1876, "tensor-operations"]], "Misc": [[1876, "misc"]], "Experimental Functions": [[1876, "experimental-functions"]], "torch.utils.model_zoo": [[1880, "torch-utils-model-zoo"]], "torch.masked": [[1878, "torch-masked"]], "Motivation": [[1878, "motivation"], [15, "motivation"], [14, "motivation"]], "What is a MaskedTensor?": [[1878, "what-is-a-maskedtensor"]], "Supported Operators": [[1878, "supported-operators"]], "Unary Operators": [[1878, "unary-operators"]], "Binary Operators": [[1878, "binary-operators"]], "Reductions": [[1878, "reductions"]], "View and select functions": [[1878, "view-and-select-functions"]], "torch.library": [[1875, "torch-library"]], "Terminology": [[1871, "terminology"]], "Type System": [[1871, "id1"]], "TorchScript Types": [[1871, "torchscript-types"]], "Meta Types": [[1871, "meta-types"]], "Any Type": [[1871, "any-type"]], "Operators Supported for Any Type": [[1871, "operators-supported-for-any-type"]], "Design Notes": [[1871, "design-notes"], [1921, "design-notes"]], "Primitive Types": [[1871, "primitive-types"]], "Structural Types": [[1871, "structural-types"]], "Nominal Types": [[1871, "nominal-types"]], "Built-in Class": [[1871, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1871, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1871, "custom-class"]], "Enum Type": [[1871, "enum-type"]], "TorchScript Module Class": [[1871, "torchscript-module-class"]], "Module Instance Class": [[1871, "module-instance-class"]], "Type Annotation": [[1871, "type-annotation"]], "When to Annotate Types": [[1871, "when-to-annotate-types"]], "Annotate Function Signature": [[1871, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1871, "annotate-variables-and-data-attributes"]], "Local Variables": [[1871, "local-variables"]], "Instance Data Attributes": [[1871, "instance-data-attributes"]], "Type Annotation APIs": [[1871, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1871, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1871, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1871, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[1871, "arithmetic-conversions"]], "Atoms": [[1871, "atoms"]], "Identifiers": [[1871, "identifiers"]], "Parenthesized Forms": [[1871, "parenthesized-forms"]], "List and Dictionary Displays": [[1871, "list-and-dictionary-displays"]], "Primaries": [[1871, "primaries"]], "Attribute References": [[1871, "attribute-references"]], "Subscriptions": [[1871, "subscriptions"]], "Slicings": [[1871, "slicings"]], "Calls": [[1871, "calls"]], "Power Operator": [[1871, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1871, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1871, "binary-arithmetic-operations"]], "Shifting Operations": [[1871, "shifting-operations"]], "Binary Bitwise Operations": [[1871, "binary-bitwise-operations"]], "Comparisons": [[1871, "comparisons"], [11, "comparisons"]], "Value Comparisons": [[1871, "value-comparisons"]], "Membership Test Operations": [[1871, "membership-test-operations"]], "Identity Comparisons": [[1871, "identity-comparisons"]], "Boolean Operations": [[1871, "boolean-operations"]], "Conditional Expressions": [[1871, "conditional-expressions"]], "Expression Lists": [[1871, "expression-lists"]], "Simple Statements": [[1871, "simple-statements"]], "Expression Statements": [[1871, "expression-statements"]], "Assignment Statements": [[1871, "assignment-statements"]], "Augmented Assignment Statements": [[1871, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1871, "annotated-assignment-statements"]], "The raise Statement": [[1871, "the-raise-statement"]], "The assert Statement": [[1871, "the-assert-statement"]], "The return Statement": [[1871, "the-return-statement"]], "The del Statement": [[1871, "the-del-statement"]], "The pass Statement": [[1871, "the-pass-statement"]], "The print Statement": [[1871, "the-print-statement"]], "The break Statement": [[1871, "the-break-statement"]], "The continue Statement:": [[1871, "the-continue-statement"]], "Compound Statements": [[1871, "compound-statements"]], "The if Statement": [[1871, "the-if-statement"]], "Basic if/else Statement": [[1871, "basic-if-else-statement"]], "Ternary if/else Statement": [[1871, "ternary-if-else-statement"]], "The while Statement": [[1871, "the-while-statement"]], "The for-in Statement": [[1871, "the-for-in-statement"]], "The with Statement": [[1871, "the-with-statement"]], "The tuple Statement": [[1871, "the-tuple-statement"]], "The getattr Statement": [[1871, "the-getattr-statement"]], "The hasattr Statement": [[1871, "the-hasattr-statement"]], "The zip Statement": [[1871, "the-zip-statement"]], "The enumerate Statement": [[1871, "the-enumerate-statement"]], "Python Values": [[1871, "python-values"]], "Resolution Rules": [[1871, "resolution-rules"]], "Python Built-in Functions Support": [[1871, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1871, "id5"]], "Python Built-in Values Support": [[1871, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1871, "id6"]], "torch.* APIs": [[1871, "torch-apis"]], "Remote Procedure Calls": [[1871, "remote-procedure-calls"]], "Asynchronous Execution": [[1871, "asynchronous-execution"]], "Type Annotations": [[1871, "type-annotations"]], "Meta Programming": [[1871, "meta-programming"]], "Type Refinement": [[1871, "type-refinement"]], "torch.monitor": [[1881, "torch-monitor"]], "A Simple Custom Module": [[1902, "a-simple-custom-module"]], "Modules as Building Blocks": [[1902, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1902, "neural-network-training-with-modules"]], "Module State": [[1902, "module-state"]], "Module Initialization": [[1902, "module-initialization"]], "Module Hooks": [[1902, "module-hooks"]], "Advanced Features": [[1902, "advanced-features"]], "Distributed Training": [[1902, "distributed-training"]], "Profiling Performance": [[1902, "profiling-performance"]], "Improving Performance with Quantization": [[1902, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1902, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1902, "parametrizations"]], "Transforming Modules with FX": [[1902, "transforming-modules-with-fx"]], "Autograd mechanics": [[1891, "autograd-mechanics"]], "How autograd encodes the history": [[1891, "how-autograd-encodes-the-history"]], "Saved tensors": [[1891, "saved-tensors"]], "Gradients for non-differentiable functions": [[1891, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[1891, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [1933, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[1891, "setting-requires-grad"]], "Grad Modes": [[1891, "grad-modes"]], "Default Mode (Grad Mode)": [[1891, "default-mode-grad-mode"]], "No-grad Mode": [[1891, "no-grad-mode"]], "Inference Mode": [[1891, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1891, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1891, "in-place-operations-with-autograd"]], "In-place correctness checks": [[1891, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[1891, "multithreaded-autograd"]], "Concurrency on CPU": [[1891, "concurrency-on-cpu"]], "Non-determinism": [[1891, "non-determinism"]], "Graph retaining": [[1891, "graph-retaining"]], "Thread Safety on Autograd Node": [[1891, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1891, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1891, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1891, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1891, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1891, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1891, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1891, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1891, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1891, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1891, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1891, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1891, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1891, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1891, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1891, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1891, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "Windows FAQ": [[1908, "windows-faq"]], "Building from source": [[1908, "building-from-source"]], "Include optional components": [[1908, "include-optional-components"]], "Speeding CUDA build for Windows": [[1908, "speeding-cuda-build-for-windows"]], "One key install script": [[1908, "one-key-install-script"]], "Extension": [[1908, "extension"]], "CFFI Extension": [[1908, "cffi-extension"]], "Cpp Extension": [[1908, "cpp-extension"]], "Installation": [[1908, "installation"]], "Package not found in win-32 channel.": [[1908, "package-not-found-in-win-32-channel"]], "Import error": [[1908, "import-error"]], "Usage (multiprocessing)": [[1908, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1908, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1908, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1908, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1908, "cuda-ipc-operations"]], "torch._logging": [[1877, "torch-logging"]], "TorchScript Builtins": [[1869, "torchscript-builtins"]], "Supported Tensor Methods": [[1869, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1869, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1869, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1869, "python-built-in-functions"]], "math Module": [[1869, "math-module"]], "torch.mps": [[1882, "module-torch.mps"]], "MPS Profiler": [[1882, "mps-profiler"]], "torch.nn.functional": [[1888, "torch-nn-functional"]], "Convolution functions": [[1888, "convolution-functions"]], "Pooling functions": [[1888, "pooling-functions"]], "Attention Mechanisms": [[1888, "attention-mechanisms"]], "Non-linear activation functions": [[1888, "non-linear-activation-functions"]], "Linear functions": [[1888, "linear-functions"]], "Dropout functions": [[1888, "dropout-functions"]], "Sparse functions": [[1888, "sparse-functions"]], "Distance functions": [[1888, "distance-functions"]], "Loss functions": [[1888, "loss-functions"]], "Vision functions": [[1888, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1888, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1888, "data-parallel"]], "CUDA Automatic Mixed Precision examples": [[1890, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1890, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1890, "working-with-unscaled-gradients"]], "Gradient clipping": [[1890, "gradient-clipping"]], "Working with Scaled Gradients": [[1890, "working-with-scaled-gradients"]], "Gradient accumulation": [[1890, "gradient-accumulation"]], "Gradient penalty": [[1890, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1890, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1890, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1890, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1890, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1890, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1890, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1890, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1890, "functions-that-need-a-particular-dtype"]], "CPU threading and TorchScript inference": [[1893, "cpu-threading-and-torchscript-inference"]], "Build options": [[1893, "build-options"]], "Runtime API": [[1893, "runtime-api"]], "Tuning the number of threads": [[1893, "tuning-the-number-of-threads"]], "Gradcheck mechanics": [[1899, "gradcheck-mechanics"]], "Notations and background information": [[1899, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1899, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1899, "real-to-real-functions"]], "Default real input numerical evaluation": [[1899, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1899, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1899, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1899, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1899, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1899, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1899, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1899, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1899, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1899, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1899, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1899, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1899, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1899, "gradgradcheck-implementation"]], "TorchScript Unsupported PyTorch Constructs": [[1873, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1873, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1873, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1873, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1873, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1873, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1873, "pytorch-unsupported-modules-and-classes"]], "Numerical accuracy": [[1905, "numerical-accuracy"]], "Batched computations or slice computations": [[1905, "batched-computations-or-slice-computations"]], "Extremal values": [[1905, "extremal-values"]], "Linear algebra (torch.linalg)": [[1905, "linear-algebra-torch-linalg"]], "Non-finite values": [[1905, "non-finite-values"]], "Extremal values in linalg": [[1905, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1905, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1905, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1905, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "torch.onnx diagnostics": [[1910, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1910, "diagnostic-rules"]], "torch.onnx": [[1909, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1909, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1909, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1909, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1909, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1909, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1909, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Limitations": [[1909, "limitations"], [11, "limitations"]], "Differences in Operator Implementations": [[1909, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1909, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1909, "reads-gets"]], "Writes / Sets": [[1909, "writes-sets"]], "Adding support for operators": [[1909, "adding-support-for-operators"]], "ONNX exporter internals": [[1909, "onnx-exporter-internals"]], "ATen operators": [[1909, "aten-operators"]], "List of supported operators": [[1909, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1909, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1909, "torch-autograd-functions"]], "Static Symbolic Method": [[1909, "static-symbolic-method"]], "Inline Autograd Function": [[1909, "inline-autograd-function"]], "Custom operators": [[1909, "custom-operators"]], "ONNX-script functions": [[1909, "onnx-script-functions"]], "C++ Operators": [[1909, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1909, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1909, "contributing-developing"]], "Classes": [[1909, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1909, "preview-torch-onnx-torchdynamo-exporter"]], "Multiprocessing package - torch.multiprocessing": [[1883, "module-torch.multiprocessing"]], "Strategy management": [[1883, "strategy-management"]], "Sharing CUDA tensors": [[1883, "sharing-cuda-tensors"]], "Sharing strategies": [[1883, "sharing-strategies"]], "File descriptor - file_descriptor": [[1883, "file-descriptor-file-descriptor"]], "File system - file_system": [[1883, "file-system-file-system"]], "Spawning subprocesses": [[1883, "spawning-subprocesses"]], "torch.xlogy": [[1862, "torch-xlogy"]], "torch.nested": [[1886, "module-torch.nested"]], "Construction": [[1886, "construction"], [1925, "construction"]], "size": [[1886, "size"]], "unbind": [[1886, "unbind"]], "Nested tensor constructor and conversion functions": [[1886, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1886, "supported-operations"], [1925, "supported-operations"]], "PyTorch documentation": [[1866, "pytorch-documentation"]], "Community": [[1866, null]], "Developer Notes": [[1866, null]], "torch.compile": [[1866, null], [18, "torch-compile"], [21, "torch-compile"], [952, "torch-compile"]], "Language Bindings": [[1866, null]], "Python API": [[1866, null]], "Libraries": [[1866, null]], "Indices and tables": [[1866, "indices-and-tables"]], "torch.cuda.utilization": [[1049, "torch-cuda-utilization"]], "torch.cummin": [[1051, "torch-cummin"]], "torch.deg2rad": [[1055, "torch-deg2rad"]], "torch.digamma": [[1064, "torch-digamma"]], "torch.diag": [[1058, "torch-diag"]], "torch.diagonal": [[1061, "torch-diagonal"]], "torch.diagonal_scatter": [[1062, "torch-diagonal-scatter"]], "torch.cuda.seed": [[1038, "torch-cuda-seed"]], "torch.cuda.nvtx.mark": [[1031, "torch-cuda-nvtx-mark"]], "torch.cuda.memory_usage": [[1030, "torch-cuda-memory-usage"]], "torch.div": [[1066, "torch-div"]], "torch.cuda.synchronize": [[1047, "torch-cuda-synchronize"]], "enable_grad": [[1075, "enable-grad"]], "torch.dsplit": [[1069, "torch-dsplit"]], "torch.dist": [[1065, "torch-dist"]], "torch.cuda.reset_max_memory_allocated": [[1035, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.set_sync_debug_mode": [[1045, "torch-cuda-set-sync-debug-mode"]], "torch.diag_embed": [[1059, "torch-diag-embed"]], "torch.cuda.set_per_process_memory_fraction": [[1041, "torch-cuda-set-per-process-memory-fraction"]], "torch.eq": [[1076, "torch-eq"]], "torch.divide": [[1067, "torch-divide"]], "torch.cummax": [[1050, "torch-cummax"]], "torch.cuda.set_stream": [[1044, "torch-cuda-set-stream"]], "torch.cuda.temperature": [[1048, "torch-cuda-temperature"]], "torch.cuda.set_rng_state_all": [[1043, "torch-cuda-set-rng-state-all"]], "torch.diagflat": [[1060, "torch-diagflat"]], "torch.cumprod": [[1052, "torch-cumprod"]], "torch.diff": [[1063, "torch-diff"]], "torch.cuda.reset_peak_memory_stats": [[1037, "torch-cuda-reset-peak-memory-stats"]], "torch.empty_like": [[1073, "torch-empty-like"]], "torch.det": [[1057, "torch-det"]], "torch.cuda.stream": [[1046, "torch-cuda-stream"]], "torch.einsum": [[1071, "torch-einsum"]], "torch.cuda.nvtx.range_pop": [[1032, "torch-cuda-nvtx-range-pop"]], "torch.cuda.power_draw": [[1034, "torch-cuda-power-draw"]], "torch.cuda.memory_summary": [[1029, "torch-cuda-memory-summary"]], "torch.cuda.set_rng_state": [[1042, "torch-cuda-set-rng-state"]], "torch.dstack": [[1070, "torch-dstack"]], "torch.dot": [[1068, "torch-dot"]], "torch.cumsum": [[1053, "torch-cumsum"]], "torch.cuda.reset_max_memory_cached": [[1036, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.nvtx.range_push": [[1033, "torch-cuda-nvtx-range-push"]], "torch.cuda.seed_all": [[1039, "torch-cuda-seed-all"]], "torch.cumulative_trapezoid": [[1054, "torch-cumulative-trapezoid"]], "torch.dequantize": [[1056, "torch-dequantize"]], "torch.empty_strided": [[1074, "torch-empty-strided"]], "torch.empty": [[1072, "torch-empty"]], "torch.cuda.set_device": [[1040, "torch-cuda-set-device"]], "torch.equal": [[1077, "torch-equal"]], "torch.cuda.get_device_properties": [[1001, "torch-cuda-get-device-properties"]], "torch.cuda.get_rng_state": [[1003, "torch-cuda-get-rng-state"]], "torch.cuda.comm.scatter": [[988, "torch-cuda-comm-scatter"]], "torch.cuda.current_stream": [[991, "torch-cuda-current-stream"]], "torch.cuda.memory_cached": [[1025, "torch-cuda-memory-cached"]], "device": [[993, "device"]], "torch.cuda.clock_rate": [[983, "torch-cuda-clock-rate"]], "torch.cuda.can_device_access_peer": [[981, "torch-cuda-can-device-access-peer"]], "torch.cuda.max_memory_reserved": [[1022, "torch-cuda-max-memory-reserved"]], "torch.cuda.current_device": [[990, "torch-cuda-current-device"]], "graph": [[1006, "graph"]], "torch.cuda.memory_snapshot": [[1027, "torch-cuda-memory-snapshot"]], "device_of": [[995, "device-of"]], "torch.cuda.initial_seed": [[1009, "torch-cuda-initial-seed"]], "torch.cuda.default_stream": [[992, "torch-cuda-default-stream"]], "torch.cuda.get_device_name": [[1000, "torch-cuda-get-device-name"]], "torch.cuda.get_sync_debug_mode": [[1005, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.get_device_capability": [[999, "torch-cuda-get-device-capability"]], "torch.cuda.get_gencode_flags": [[1002, "torch-cuda-get-gencode-flags"]], "torch.cuda.manual_seed_all": [[1019, "torch-cuda-manual-seed-all"]], "torch.cuda.comm.broadcast": [[984, "torch-cuda-comm-broadcast"]], "torch.cuda.list_gpu_processes": [[1016, "torch-cuda-list-gpu-processes"]], "torch.cuda.make_graphed_callables": [[1017, "torch-cuda-make-graphed-callables"]], "torch.cuda.manual_seed": [[1018, "torch-cuda-manual-seed"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1015, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.max_memory_cached": [[1021, "torch-cuda-max-memory-cached"]], "torch.cuda.jiterator._create_jit_fn": [[1014, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.comm.broadcast_coalesced": [[985, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.init": [[1008, "torch-cuda-init"]], "torch.cuda.is_available": [[1011, "torch-cuda-is-available"]], "torch.cuda.get_rng_state_all": [[1004, "torch-cuda-get-rng-state-all"]], "torch.cuda.comm.reduce_add": [[987, "torch-cuda-comm-reduce-add"]], "torch.cuda.get_arch_list": [[998, "torch-cuda-get-arch-list"]], "torch.cuda.ipc_collect": [[1010, "torch-cuda-ipc-collect"]], "torch.cuda.get_allocator_backend": [[997, "torch-cuda-get-allocator-backend"]], "torch.cuda.is_initialized": [[1013, "torch-cuda-is-initialized"]], "torch.cuda.memory_allocated": [[1024, "torch-cuda-memory-allocated"]], "torch.cuda.memory_stats": [[1028, "torch-cuda-memory-stats"]], "torch.cuda.is_current_stream_capturing": [[1012, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.memory_reserved": [[1026, "torch-cuda-memory-reserved"]], "torch.cuda.comm.gather": [[986, "torch-cuda-comm-gather"]], "torch.cuda.change_current_allocator": [[982, "torch-cuda-change-current-allocator"]], "torch.cuda.mem_get_info": [[1023, "torch-cuda-mem-get-info"]], "torch.cuda.device_count": [[994, "torch-cuda-device-count"]], "torch.cuda.empty_cache": [[996, "torch-cuda-empty-cache"]], "torch.cuda.caching_allocator_delete": [[980, "torch-cuda-caching-allocator-delete"]], "torch.cuda.current_blas_handle": [[989, "torch-cuda-current-blas-handle"]], "torch.cuda.max_memory_allocated": [[1020, "torch-cuda-max-memory-allocated"]], "torch.cuda.graph_pool_handle": [[1007, "torch-cuda-graph-pool-handle"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[44, "distributed-checkpoint-torch-distributed-checkpoint"]], "TorchDynamo Deeper Dive": [[13, "torchdynamo-deeper-dive"]], "What is a guard?": [[13, "what-is-a-guard"]], "What is Dynamo doing?": [[13, "what-is-dynamo-doing"]], "torch.utils.data": [[39, "module-torch.utils.data"]], "Dataset Types": [[39, "dataset-types"]], "Map-style datasets": [[39, "map-style-datasets"]], "Iterable-style datasets": [[39, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[39, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[39, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[39, "automatic-batching-default"]], "Disable automatic batching": [[39, "disable-automatic-batching"]], "Working with collate_fn": [[39, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[39, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[39, "single-process-data-loading-default"]], "Multi-process data loading": [[39, "multi-process-data-loading"]], "Platform-specific behaviors": [[39, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[39, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[39, "memory-pinning"]], "TorchDynamo APIs to control fine-grained tracing": [[17, "torchdynamo-apis-to-control-fine-grained-tracing"], [17, "id1"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Lead Core Maintainer (BDFL)": [[10, "lead-core-maintainer-bdfl"], [9, "lead-core-maintainer-bdfl"]], "Core Maintainers": [[10, "core-maintainers"], [9, "core-maintainers"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[47, "tensor-parallelism-torch-distributed-tensor-parallel"]], "Getting Started": [[19, "getting-started"], [7, "getting-started"]], "Existing Backends": [[19, "existing-backends"]], "Why do you need another way of optimizing PyTorch code?": [[19, "why-do-you-need-another-way-of-optimizing-pytorch-code"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "Guards Overview": [[20, "guards-overview"]], "Caching and Guards Overview": [[20, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[20, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[20, "instructiontranslator"]], "Making Guards": [[20, "making-guards"]], "Summary": [[20, "summary"], [9, "summary"]], "Fake tensor": [[15, "fake-tensor"]], "Related work": [[15, "related-work"]], "Overall architecture": [[15, "overall-architecture"], [14, "overall-architecture"]], "API: the important bits": [[15, "api-the-important-bits"]], "Details": [[15, "details"]], "About the tensor subclass": [[15, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[15, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[15, "how-does-the-converter-work"]], "Performance characteristics": [[15, "performance-characteristics"]], "Fake tensor of fake tensor?": [[15, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[15, "interaction-with-dynamic-shapes"]], "Other resources": [[15, "other-resources"]], "Technical Overview": [[26, "technical-overview"]], "Torch Distributed Elastic": [[45, "torch-distributed-elastic"]], "Get Started": [[45, "get-started"]], "Documentation": [[45, "documentation"]], "API": [[45, null]], "Advanced": [[45, null]], "Plugins": [[45, null]], "PyTorch 2.0 NNModule Support": [[23, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[23, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[23, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[23, "state-dict-hooks"]], "Do you support Distributed code?": [[16, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[16, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[16, "why-is-my-code-crashing"]], "TorchDynamo Errors": [[16, "torchdynamo-errors"]], "TorchInductor Errors": [[16, "torchinductor-errors"], [29, "torchinductor-errors"]], "Why is compilation slow?": [[16, "why-is-compilation-slow"]], "Dynamo Compilation": [[16, "dynamo-compilation"]], "Inductor Compilation": [[16, "inductor-compilation"]], "Excessive Recompilation": [[16, "excessive-recompilation"], [29, "excessive-recompilation"]], "Why are you recompiling in production?": [[16, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[16, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[16, "why-am-i-not-seeing-speedups"]], "Graph Breaks": [[16, "graph-breaks"], [29, "graph-breaks"]], "Identifying the cause of a graph break": [[16, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[16, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[16, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[16, "why-am-i-getting-ooms"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Numerical gradient checking": [[1, "numerical-gradient-checking"]], "Profiler": [[1, "profiler"]], "Anomaly detection": [[1, "anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "Distributed Optimizers": [[46, "distributed-optimizers"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [1914, "tutorials"], [1913, "tutorials"], [1921, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "Distributed communication package - torch.distributed": [[42, "distributed-communication-package-torch-distributed"]], "Backends": [[42, "backends"], [1921, "backends"]], "Backends that come with PyTorch": [[42, "backends-that-come-with-pytorch"]], "Which backend to use?": [[42, "which-backend-to-use"]], "Common environment variables": [[42, "common-environment-variables"]], "Choosing the network interface to use": [[42, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[42, "other-nccl-environment-variables"]], "Basics": [[42, "basics"], [1921, "basics"]], "Initialization": [[42, "initialization"]], "TCP initialization": [[42, "tcp-initialization"]], "Shared file-system initialization": [[42, "shared-file-system-initialization"]], "Environment variable initialization": [[42, "environment-variable-initialization"]], "Post-Initialization": [[42, "post-initialization"]], "Distributed Key-Value Store": [[42, "distributed-key-value-store"]], "Groups": [[42, "groups"]], "Point-to-point communication": [[42, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[42, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[42, "collective-functions"]], "Profiling Collective Communication": [[42, "profiling-collective-communication"]], "Multi-GPU collective functions": [[42, "multi-gpu-collective-functions"]], "Third-party backends": [[42, "third-party-backends"]], "Launch utility": [[42, "launch-utility"]], "Spawn utility": [[42, "spawn-utility"]], "Debugging torch.distributed applications": [[42, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[42, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[42, "torch-distributed-debug"]], "Logging": [[42, "logging"]], "DDP Communication Hooks": [[40, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[40, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[40, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[40, "default-communication-hooks"]], "PowerSGD Communication Hook": [[40, "powersgd-communication-hook"]], "PowerSGD State": [[40, "powersgd-state"]], "PowerSGD Hooks": [[40, "powersgd-hooks"]], "Debugging Communication Hooks": [[40, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[40, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[40, "acknowledgements"], [1914, "acknowledgements"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "Probability distributions - torch.distributions": [[48, "module-torch.distributions"]], "Score function": [[48, "score-function"]], "Pathwise derivative": [[48, "pathwise-derivative"]], "Distribution": [[48, "distribution"]], "ExponentialFamily": [[48, "exponentialfamily"]], "Bernoulli": [[48, "bernoulli"]], "Beta": [[48, "beta"]], "Binomial": [[48, "binomial"]], "Categorical": [[48, "categorical"]], "Cauchy": [[48, "cauchy"]], "Chi2": [[48, "chi2"]], "ContinuousBernoulli": [[48, "continuousbernoulli"]], "Dirichlet": [[48, "dirichlet"]], "Exponential": [[48, "exponential"]], "FisherSnedecor": [[48, "fishersnedecor"]], "Gamma": [[48, "gamma"]], "Geometric": [[48, "geometric"]], "Gumbel": [[48, "gumbel"]], "HalfCauchy": [[48, "halfcauchy"]], "HalfNormal": [[48, "halfnormal"]], "Independent": [[48, "independent"]], "Kumaraswamy": [[48, "kumaraswamy"]], "LKJCholesky": [[48, "lkjcholesky"]], "Laplace": [[48, "laplace"]], "LogNormal": [[48, "lognormal"]], "LowRankMultivariateNormal": [[48, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[48, "mixturesamefamily"]], "Multinomial": [[48, "multinomial"]], "MultivariateNormal": [[48, "multivariatenormal"]], "NegativeBinomial": [[48, "negativebinomial"]], "Normal": [[48, "normal"]], "OneHotCategorical": [[48, "onehotcategorical"]], "Pareto": [[48, "pareto"]], "Poisson": [[48, "poisson"]], "RelaxedBernoulli": [[48, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[48, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[48, "relaxedonehotcategorical"]], "StudentT": [[48, "studentt"]], "TransformedDistribution": [[48, "transformeddistribution"]], "Uniform": [[48, "uniform"]], "VonMises": [[48, "vonmises"]], "Weibull": [[48, "weibull"]], "Wishart": [[48, "wishart"]], "KL Divergence": [[48, "module-torch.distributions.kl"]], "Transforms": [[48, "module-torch.distributions.transforms"]], "Constraint Registry": [[48, "module-torch.distributions.constraint_registry"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "Dynamic shapes": [[14, "dynamic-shapes"]], "Abridged public API": [[14, "abridged-public-api"]], "The Guard Model": [[14, "the-guard-model"]], "Abridged internal API": [[14, "abridged-internal-api"]], "DimDynamic policy": [[14, "dimdynamic-policy"]], "Unbacked SymInts": [[14, "unbacked-symints"]], "torch.compiler": [[30, "module-torch.compiler"]], "torch.compiler API reference": [[30, "torch-compiler-api-reference"]], "torch.func interaction with torch.compile": [[27, "torch-func-interaction-with-torch-compile"]], "Applying a torch.func transform to a torch.compile\u2019d function": [[27, "applying-a-torch-func-transform-to-a-torch-compile-d-function"]], "Doesn\u2019t work (PT 2.0): calling a torch.func transform inside of a torch.compile\u2019ed function": [[27, "doesn-t-work-pt-2-0-calling-a-torch-func-transform-inside-of-a-torch-compile-ed-function"]], "Workaround: use torch._dynamo.allow_in_graph": [[27, "workaround-use-torch-dynamo-allow-in-graph"]], "torch::deploy has been moved to pytorch/multipy": [[41, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "TorchInductor GPU Profiling": [[22, "torchinductor-gpu-profiling"]], "PyTorch 2.0 Performance Dashboard": [[24, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[24, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[24, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[24, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[24, "how-can-i-run-any-performance-test-locally"]], "Profiling to understand torch.compile performance": [[25, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[25, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[25, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[25, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[25, "understanding-compilation-time"]], "Finding graph breaks": [[25, "finding-graph-breaks"]], "Launch overhead": [[25, "launch-overhead"]], "PyTorch 2.0 Troubleshooting": [[29, "pytorch-2-0-troubleshooting"]], "Title": [[29, "id1"]], "Diagnosing Runtime Errors": [[29, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[29, "torchdynamo-errors"]], "Minifying TorchInductor Errors": [[29, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[29, "minifying-backend-compiler-errors"]], "Performance Profiling": [[29, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[29, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[29, "torchinductor-debugging-using-torch-compile-debug"]], "Identifying the Cause of a Graph Break": [[29, "identifying-the-cause-of-a-graph-break"]], "Accuracy Debugging": [[29, "accuracy-debugging"]], "File an Issue": [[29, "file-an-issue"]], "Generic Join Context Manager": [[43, "generic-join-context-manager"]], "Custom Backends": [[12, "custom-backends"]], "Registering Custom Backends": [[12, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[12, "custom-backends-after-aotautograd"]], "Debugging Backend": [[12, "debugging-backend"]], "Speedy Backend": [[12, "speedy-backend"]], "Composable Backends": [[12, "composable-backends"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Module Maintainers": [[9, "module-maintainers"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "Complex Numbers": [[31, "complex-numbers"]], "Creating Complex Tensors": [[31, "creating-complex-tensors"]], "Transition from the old representation": [[31, "transition-from-the-old-representation"]], "Accessing real and imag": [[31, "accessing-real-and-imag"]], "Angle and abs": [[31, "angle-and-abs"]], "Linear Algebra": [[31, "linear-algebra"]], "Serialization": [[31, "serialization"], [1933, "serialization"]], "Autograd": [[31, "autograd"]], "CUDAGraph Trees": [[11, "cudagraph-trees"]], "CUDAGraph Background": [[11, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[11, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[11, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[11, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[11, "cudagraph-trees-integration"]], "torch.__config__": [[32, "module-torch.__config__"]], "torch.cuda": [[35, "module-torch.cuda"]], "Random Number Generator": [[35, "random-number-generator"]], "Communication collectives": [[35, "communication-collectives"]], "Streams and events": [[35, "streams-and-events"]], "Graphs (beta)": [[35, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[35, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[35, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[35, "stream-sanitizer-prototype"]], "Optimizations": [[21, "optimizations"], [1933, "optimizations"]], "Troubleshooting and Gotchas": [[21, "troubleshooting-and-gotchas"]], "Learn more": [[21, "learn-more"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "C++": [[34, "c"]], "TorchScript C++ API": [[34, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[34, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[34, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[34, "authoring-models-in-c"]], "Packaging for C++": [[34, "packaging-for-c"]], "Writing Graph Transformations on ATen IR": [[28, "writing-graph-transformations-on-aten-ir"]], "Passes": [[28, "passes"]], "One-to-One Pass": [[28, "one-to-one-pass"]], "One-to-X Pass": [[28, "one-to-x-pass"]], "One-to-None Pass": [[28, "one-to-none-pass"]], "Utilizing Local Information": [[28, "utilizing-local-information"]], "Subgraph Rewriter": [[28, "subgraph-rewriter"]], "Pass Manager": [[28, "pass-manager"]], "Partitioner": [[28, "partitioner"]], "Subgraph Matcher": [[28, "subgraph-matcher"]], "Capability Based Partitioner": [[28, "capability-based-partitioner"]], "torch.utils.cpp_extension": [[33, "torch-utils-cpp-extension"]], "CUDA Stream Sanitizer": [[36, "cuda-stream-sanitizer"]], "torch.ceil": [[941, "torch-ceil"]], "torch.broadcast_tensors": [[934, "torch-broadcast-tensors"]], "torch.cdist": [[940, "torch-cdist"]], "torch.compiler.disable": [[957, "torch-compiler-disable"]], "torch.complex": [[960, "torch-complex"]], "torch.conj": [[963, "torch-conj"]], "torch.cross": [[971, "torch-cross"]], "torch.chain_matmul": [[942, "torch-chain-matmul"]], "torch.bucketize": [[936, "torch-bucketize"]], "Stream": [[977, "stream"]], "torch.chunk": [[946, "torch-chunk"]], "torch.clip": [[948, "torch-clip"]], "torch.broadcast_to": [[935, "torch-broadcast-to"]], "torch.bmm": [[932, "torch-bmm"]], "Event": [[974, "event"]], "torch.can_cast": [[937, "torch-can-cast"]], "torch.clamp": [[947, "torch-clamp"]], "CUDAPluggableAllocator": [[973, "cudapluggableallocator"]], "torch.cartesian_prod": [[938, "torch-cartesian-prod"]], "torch.conj_physical": [[964, "torch-conj-physical"]], "torch.combinations": [[951, "torch-combinations"]], "torch.cov": [[970, "torch-cov"]], "torch.concat": [[961, "torch-concat"]], "torch.compiler.allow_in_graph": [[954, "torch-compiler-allow-in-graph"]], "torch.cos": [[967, "torch-cos"]], "torch.broadcast_shapes": [[933, "torch-broadcast-shapes"]], "torch.block_diag": [[931, "torch-block-diag"]], "torch.compiler.reset": [[959, "torch-compiler-reset"]], "torch.column_stack": [[950, "torch-column-stack"]], "torch.cat": [[939, "torch-cat"]], "CUDAGraph": [[972, "cudagraph"]], "torch.cuda.caching_allocator_alloc": [[979, "torch-cuda-caching-allocator-alloc"]], "torch.cholesky": [[943, "torch-cholesky"]], "torch.cholesky_inverse": [[944, "torch-cholesky-inverse"]], "torch.compiled_with_cxx11_abi": [[953, "torch-compiled-with-cxx11-abi"]], "torch.cuda.OutOfMemoryError": [[976, "torch-cuda-outofmemoryerror"]], "torch.compiler.assume_constant_result": [[955, "torch-compiler-assume-constant-result"]], "torch.corrcoef": [[966, "torch-corrcoef"]], "torch.cholesky_solve": [[945, "torch-cholesky-solve"]], "torch.compiler.compile": [[956, "torch-compiler-compile"]], "torch.concatenate": [[962, "torch-concatenate"]], "torch.copysign": [[965, "torch-copysign"]], "torch.count_nonzero": [[969, "torch-count-nonzero"]], "StreamContext": [[978, "streamcontext"]], "torch.cosh": [[968, "torch-cosh"]], "ExternalStream": [[975, "externalstream"]], "torch.compiler.list_backends": [[958, "torch-compiler-list-backends"]], "torch.clone": [[949, "torch-clone"]], "torch.bernoulli": [[922, "torch-bernoulli"]], "set_multithreading_enabled": [[919, "set-multithreading-enabled"]], "torch.autograd.functional.jacobian": [[902, "torch-autograd-functional-jacobian"]], "torch.autograd.functional.vhp": [[904, "torch-autograd-functional-vhp"]], "torch.autograd.graph.Node.name": [[910, "torch-autograd-graph-node-name"]], "torch.autograd.profiler.profile.export_chrome_trace": [[915, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.autograd.Function.jvp": [[890, "torch-autograd-function-jvp"]], "torch.autograd.profiler.load_nvprof": [[914, "torch-autograd-profiler-load-nvprof"]], "torch.autograd.gradcheck": [[907, "torch-autograd-gradcheck"]], "torch.blackman_window": [[930, "torch-blackman-window"]], "torch.autograd.graph.Node.metadata": [[909, "torch-autograd-graph-node-metadata"]], "torch.autograd.backward": [[892, "torch-autograd-backward"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[899, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[917, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.autograd.Function.backward": [[888, "torch-autograd-function-backward"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[898, "torch-autograd-function-functionctx-save-for-backward"]], "torch.atanh": [[884, "torch-atanh"]], "torch.autograd.graph.Node.next_functions": [[911, "torch-autograd-graph-node-next-functions"]], "torch.bitwise_right_shift": [[928, "torch-bitwise-right-shift"]], "torch.autograd.functional.jvp": [[903, "torch-autograd-functional-jvp"]], "torch.bitwise_not": [[926, "torch-bitwise-not"]], "torch.atleast_3d": [[887, "torch-atleast-3d"]], "dual_level": [[893, "dual-level"]], "torch.autograd.functional.vjp": [[905, "torch-autograd-functional-vjp"]], "torch.autograd.profiler.profile.key_averages": [[916, "torch-autograd-profiler-profile-key-averages"]], "torch.autograd.forward_ad.make_dual": [[894, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.Function.vmap": [[891, "torch-autograd-function-vmap"]], "torch.baddbmm": [[920, "torch-baddbmm"]], "torch.autograd.graph.Node.register_hook": [[912, "torch-autograd-graph-node-register-hook"]], "torch.autograd.functional.hessian": [[900, "torch-autograd-functional-hessian"]], "torch.atan": [[882, "torch-atan"]], "torch.autograd.profiler.profile.total_average": [[918, "torch-autograd-profiler-profile-total-average"]], "torch.bitwise_and": [[924, "torch-bitwise-and"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[897, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.atan2": [[883, "torch-atan2"]], "torch.bartlett_window": [[921, "torch-bartlett-window"]], "torch.bitwise_or": [[927, "torch-bitwise-or"]], "torch.autograd.gradgradcheck": [[908, "torch-autograd-gradgradcheck"]], "torch.autograd.grad": [[906, "torch-autograd-grad"]], "torch.autograd.functional.hvp": [[901, "torch-autograd-functional-hvp"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[896, "torch-autograd-function-functionctx-mark-dirty"]], "torch.autograd.forward_ad.unpack_dual": [[895, "torch-autograd-forward-ad-unpack-dual"]], "torch.bitwise_xor": [[929, "torch-bitwise-xor"]], "torch.atleast_2d": [[886, "torch-atleast-2d"]], "torch.atleast_1d": [[885, "torch-atleast-1d"]], "torch.bitwise_left_shift": [[925, "torch-bitwise-left-shift"]], "torch.autograd.graph.Node.register_prehook": [[913, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.Function.forward": [[889, "torch-autograd-function-forward"]], "torch.bincount": [[923, "torch-bincount"]], "get_observer_state_dict": [[835, "get-observer-state-dict"]], "default_debug_qconfig": [[842, "default-debug-qconfig"]], "quantize_dynamic": [[857, "quantize-dynamic"]], "default_qconfig": [[847, "default-qconfig"]], "float16_dynamic_qconfig": [[849, "float16-dynamic-qconfig"]], "QConfigMapping": [[853, "qconfigmapping"]], "fuse_fx": [[859, "fuse-fx"]], "quantize": [[856, "quantize"]], "torch.are_deterministic_algorithms_enabled": [[872, "torch-are-deterministic-algorithms-enabled"]], "torch.arange": [[864, "torch-arange"]], "prepare_fx": [[860, "prepare-fx"]], "default_qat_qconfig": [[845, "default-qat-qconfig"]], "per_channel_dynamic_qconfig": [[852, "per-channel-dynamic-qconfig"]], "get_default_qat_qconfig_mapping": [[854, "get-default-qat-qconfig-mapping"]], "torch.as_tensor": [[878, "torch-as-tensor"]], "prepare": [[837, "prepare"]], "default_qat_qconfig_v2": [[846, "default-qat-qconfig-v2"]], "torch.asin": [[880, "torch-asin"]], "float16_static_qconfig": [[850, "float16-static-qconfig"]], "default_activation_only_qconfig": [[841, "default-activation-only-qconfig"]], "torch.as_strided": [[877, "torch-as-strided"]], "torch.asarray": [[879, "torch-asarray"]], "quantize_qat": [[862, "quantize-qat"]], "load_observer_state_dict": [[836, "load-observer-state-dict"]], "convert_fx": [[858, "convert-fx"]], "torch.arctan2": [[870, "torch-arctan2"]], "torch.arcsinh": [[868, "torch-arcsinh"]], "default_dynamic_qconfig": [[843, "default-dynamic-qconfig"]], "torch.arccos": [[865, "torch-arccos"]], "torch.arctanh": [[871, "torch-arctanh"]], "prepare_qat": [[838, "prepare-qat"]], "QConfig": [[840, "qconfig"], [1916, "qconfig"]], "torch.argwhere": [[876, "torch-argwhere"]], "get_default_qconfig_mapping": [[855, "get-default-qconfig-mapping"]], "torch.arctan": [[869, "torch-arctan"]], "propagate_qconfig": [[839, "propagate-qconfig"]], "default_weight_only_qconfig": [[848, "default-weight-only-qconfig"]], "torch.argsort": [[875, "torch-argsort"]], "prepare_qat_fx": [[861, "prepare-qat-fx"]], "default_placeholder_observer": [[833, "default-placeholder-observer"]], "swap_module": [[863, "swap-module"]], "default_per_channel_qconfig": [[844, "default-per-channel-qconfig"]], "torch.asinh": [[881, "torch-asinh"]], "torch.argmax": [[873, "torch-argmax"]], "default_weight_observer": [[834, "default-weight-observer"]], "torch.arcsin": [[867, "torch-arcsin"]], "float_qparams_weight_only_qconfig": [[851, "float-qparams-weight-only-qconfig"]], "torch.arccosh": [[866, "torch-arccosh"]], "torch.argmin": [[874, "torch-argmin"]], "default_eval_fn": [[797, "default-eval-fn"]], "MovingAverageMinMaxObserver": [[820, "movingaverageminmaxobserver"]], "add_quant_dequant": [[790, "add-quant-dequant"]], "default_fused_wt_fake_quant": [[805, "default-fused-wt-fake-quant"]], "default_per_channel_weight_fake_quant": [[807, "default-per-channel-weight-fake-quant"]], "ConvertCustomConfig": [[814, "convertcustomconfig"]], "PlaceholderObserver": [[825, "placeholderobserver"]], "RecordingObserver": [[826, "recordingobserver"]], "default_histogram_observer": [[830, "default-histogram-observer"]], "HistogramObserver": [[818, "histogramobserver"]], "FakeQuantize": [[798, "fakequantize"]], "default_weight_fake_quant": [[808, "default-weight-fake-quant"]], "default_per_channel_weight_observer": [[832, "default-per-channel-weight-observer"]], "default_observer": [[831, "default-observer"]], "upsample_nearest": [[786, "upsample-nearest"]], "ObserverBase": [[823, "observerbase"]], "FuseCustomConfig": [[815, "fusecustomconfig"]], "upsample_bilinear": [[785, "upsample-bilinear"]], "PerChannelMinMaxObserver": [[824, "perchannelminmaxobserver"]], "default_fused_act_fake_quant": [[803, "default-fused-act-fake-quant"]], "ObservationType": [[795, "observationtype"]], "disable_observer": [[810, "disable-observer"]], "default_dynamic_quant_observer": [[828, "default-dynamic-quant-observer"]], "BackendPatternConfig": [[792, "backendpatternconfig"]], "FusedMovingAvgObsFakeQuantize": [[801, "fusedmovingavgobsfakequantize"]], "default_float_qparams_observer": [[829, "default-float-qparams-observer"]], "DTypeWithConstraints": [[794, "dtypewithconstraints"]], "QuantWrapper": [[789, "quantwrapper"]], "default_histogram_fake_quant": [[806, "default-histogram-fake-quant"]], "MovingAveragePerChannelMinMaxObserver": [[821, "movingaverageperchannelminmaxobserver"]], "DeQuantStub": [[787, "dequantstub"]], "convert": [[796, "convert"]], "PrepareCustomConfig": [[816, "preparecustomconfig"]], "default_fused_per_channel_wt_fake_quant": [[804, "default-fused-per-channel-wt-fake-quant"]], "enable_observer": [[812, "enable-observer"]], "BackendConfig": [[791, "backendconfig"]], "disable_fake_quant": [[809, "disable-fake-quant"]], "QuantStub": [[788, "quantstub"]], "DTypeConfig": [[793, "dtypeconfig"]], "NoopObserver": [[822, "noopobserver"]], "FixedQParamsFakeQuantize": [[800, "fixedqparamsfakequantize"]], "fuse_modules": [[813, "fuse-modules"]], "enable_fake_quant": [[811, "enable-fake-quant"]], "MinMaxObserver": [[819, "minmaxobserver"]], "default_debug_observer": [[827, "default-debug-observer"]], "StandaloneModuleConfigEntry": [[817, "standalonemoduleconfigentry"]], "upsample": [[784, "upsample"]], "default_fake_quant": [[802, "default-fake-quant"]], "FakeQuantizeBase": [[799, "fakequantizebase"]], "Type Info": [[1937, "type-info"]], "torch.finfo": [[1937, "torch-finfo"]], "torch.iinfo": [[1937, "torch-iinfo"]], "Quantization API Reference": [[1919, "quantization-api-reference"], [1916, "quantization-api-reference"]], "torch.ao.quantization": [[1919, "torch-ao-quantization"]], "Top level APIs": [[1919, "top-level-apis"]], "Preparing model for quantization": [[1919, "preparing-model-for-quantization"]], "torch.ao.quantization.quantize_fx": [[1919, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1919, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1919, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1919, "torch-ao-quantization-fx-custom-config"]], "torch (quantization related functions)": [[1919, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1919, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1919, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1919, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1919, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1919, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1919, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1919, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1919, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1919, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1919, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1919, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1919, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1919, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1919, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1919, "quantized-dtypes-and-quantization-schemes"]], "Tensor Views": [[1929, "tensor-views"]], "torch.signal": [[1924, "module-torch.signal"]], "torch.signal.windows": [[1924, "module-torch.signal.windows"]], "torch.profiler": [[1915, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1915, "intel-instrumentation-and-tracing-technology-apis"]], "torch.random": [[1920, "module-torch.random"]], "Quantization Backend Configuration": [[1918, "quantization-backend-configuration"], [1916, "quantization-backend-configuration"]], "Default values for native configurations": [[1918, "default-values-for-native-configurations"]], "torch": [[1933, "module-torch"]], "Tensors": [[1933, "tensors"]], "Creation Ops": [[1933, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1933, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1933, "generators"]], "Random sampling": [[1933, "random-sampling"]], "In-place random sampling": [[1933, "in-place-random-sampling"]], "Quasi-random sampling": [[1933, "quasi-random-sampling"]], "Parallelism": [[1933, "parallelism"]], "Math operations": [[1933, "math-operations"]], "Pointwise Ops": [[1933, "pointwise-ops"]], "Reduction Ops": [[1933, "reduction-ops"]], "Comparison Ops": [[1933, "comparison-ops"]], "Spectral Ops": [[1933, "spectral-ops"]], "Other Operations": [[1933, "other-operations"]], "BLAS and LAPACK Operations": [[1933, "blas-and-lapack-operations"]], "Foreach Operations": [[1933, "foreach-operations"]], "Symbolic Numbers": [[1933, "symbolic-numbers"]], "Operator Tags": [[1933, "operator-tags"]], "Engine Configuration": [[1933, "engine-configuration"]], "torch.optim": [[1912, "module-torch.optim"]], "How to use an optimizer": [[1912, "how-to-use-an-optimizer"]], "Constructing it": [[1912, "constructing-it"]], "Per-parameter options": [[1912, "per-parameter-options"]], "Taking an optimization step": [[1912, "taking-an-optimization-step"]], "optimizer.step()": [[1912, "optimizer-step"]], "optimizer.step(closure)": [[1912, "optimizer-step-closure"]], "Base class": [[1912, "base-class"]], "Algorithms": [[1912, "algorithms"]], "How to adjust learning rate": [[1912, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1912, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1912, "constructing-averaged-models"]], "Custom averaging strategies": [[1912, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1912, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1912, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1912, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1912, "putting-it-all-together-ema"]], "Tensor Attributes": [[1928, "tensor-attributes"]], "torch.dtype": [[1928, "torch-dtype"]], "torch.device": [[1928, "torch-device"]], "torch.layout": [[1928, "torch-layout"]], "torch.memory_format": [[1928, "torch-memory-format"]], "Quantization Accuracy Debugging": [[1917, "quantization-accuracy-debugging"], [1916, "quantization-accuracy-debugging"]], "Data insensitive error": [[1917, "data-insensitive-error"]], "General tips": [[1917, "general-tips"]], "Int8 quantization tips": [[1917, "int8-quantization-tips"]], "Data sensitive error": [[1917, "data-sensitive-error"]], "Implementation error": [[1917, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1917, "numerical-debugging-tooling-prototype"]], "torch.sparse": [[1925, "torch-sparse"]], "Why and when to use sparsity": [[1925, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1925, "functionality-overview"]], "Operator overview": [[1925, "operator-overview"]], "Sparse Semi-Structured Tensors": [[1925, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[1925, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[1925, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[1925, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[1925, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[1925, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1925, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1925, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1925, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1925, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1925, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1925, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1925, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1925, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1925, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1925, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1925, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1925, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1925, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1925, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[1925, "linear-algebra-operations"]], "Tensor methods and sparse": [[1925, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1925, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1925, "other-functions"]], "Unary functions": [[1925, "unary-functions"]], "Pipeline Parallelism": [[1914, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1914, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1914, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1914, "pipe-apis-in-pytorch"]], "Skip connections": [[1914, "skip-connections"]], "torch.package": [[1913, "torch-package"]], "Packaging your first model": [[1913, "packaging-your-first-model"]], "How do I\u2026": [[1913, "how-do-i"]], "See what is inside a package?": [[1913, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1913, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1913, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1913, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1913, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1913, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1913, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1913, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1913, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1913, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1913, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1913, "package-a-torchscript-module"]], "Explanation": [[1913, "explanation"]], "torch.package Format Overview": [[1913, "torch-package-format-overview"]], "Framework files": [[1913, "framework-files"]], "User files": [[1913, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1913, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1913, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1913, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1913, "dependency-management"]], "intern": [[1913, "intern"]], "extern": [[1913, "extern"]], "mock": [[1913, "mock"]], "Refactoring": [[1913, "refactoring"]], "Patterns": [[1913, "patterns"]], "torch.package sharp edges": [[1913, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1913, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1913, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1913, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1913, "mangling"]], "ONNX supported TorchScript operators": [[1911, "onnx-supported-torchscript-operators"]], "Supported operators": [[1911, "supported-operators"]], "ONNX support for TorchScript operators": [[1911, "id1"]], "Unsupported operators": [[1911, "unsupported-operators"], [1911, "id2"]], "torch.Tensor": [[1931, "torch-tensor"]], "Data types": [[1931, "data-types"]], "Initializing and basic operations": [[1931, "initializing-and-basic-operations"]], "Tensor class reference": [[1931, "tensor-class-reference"]], "torch.Storage": [[1927, "torch-storage"]], "Distributed RPC Framework": [[1921, "distributed-rpc-framework"]], "RPC": [[1921, "rpc"]], "TensorPipe Backend": [[1921, "tensorpipe-backend"]], "RRef": [[1921, "rref"]], "More Information about RRef": [[1921, null]], "RemoteModule": [[1921, "remotemodule"]], "Distributed Autograd Framework": [[1921, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1921, null]], "Distributed Optimizer": [[1921, "distributed-optimizer"], [1922, "distributed-optimizer"]], "torch.utils.tensorboard": [[1930, "module-torch.utils.tensorboard"]], "torch.ao.ns._numeric_suite": [[1934, "torch-ao-ns-numeric-suite"]], "Remote Reference Protocol": [[1923, "remote-reference-protocol"]], "Background": [[1923, "background"], [1922, "background"]], "Assumptions": [[1923, "assumptions"]], "RRef Lifetime": [[1923, "rref-lifetime"]], "Design Reasoning": [[1923, "design-reasoning"]], "Protocol Scenarios": [[1923, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1923, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1923, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1923, "owner-share-rref-with-user"]], "User Share RRef with User": [[1923, "user-share-rref-with-user"]], "torch.special": [[1926, "torch-special"]], "torch.testing": [[1932, "module-torch.testing"]], "Distributed Autograd Design": [[1922, "distributed-autograd-design"]], "Autograd recording during the forward pass": [[1922, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1922, "distributed-autograd-context"]], "Distributed Backward Pass": [[1922, "distributed-backward-pass"]], "Computing dependencies": [[1922, "computing-dependencies"]], "FAST mode algorithm": [[1922, "fast-mode-algorithm"]], "SMART mode algorithm": [[1922, "smart-mode-algorithm"]], "Simple end to end example": [[1922, "simple-end-to-end-example"]], "Quantization": [[1916, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1916, "introduction-to-quantization"]], "Quantization API Summary": [[1916, "quantization-api-summary"]], "Eager Mode Quantization": [[1916, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1916, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1916, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1916, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1916, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1916, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1916, "quantization-stack"]], "Quantized Model": [[1916, "quantized-model"]], "Quantized Tensor": [[1916, "quantized-tensor"]], "Quantize and Dequantize": [[1916, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1916, "quantized-operators-modules"]], "Quantized Engine": [[1916, "quantized-engine"]], "Quantization Flow": [[1916, "quantization-flow"]], "Observer and FakeQuantize": [[1916, "observer-and-fakequantize"]], "General Quantization Flow": [[1916, "general-quantization-flow"]], "Quantization Support Matrix": [[1916, "quantization-support-matrix"]], "Quantization Mode Support": [[1916, "quantization-mode-support"]], "Quantization Flow Support": [[1916, "quantization-flow-support"]], "Backend/Hardware Support": [[1916, "backend-hardware-support"]], "Note for native CPU backends": [[1916, "note-for-native-cpu-backends"]], "Operator Support": [[1916, "operator-support"]], "Quantization Customizations": [[1916, "quantization-customizations"]], "Quantization Custom Module API": [[1916, "quantization-custom-module-api"]], "Best Practices": [[1916, "best-practices"]], "Common Errors": [[1916, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1916, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1916, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1916, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1916, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "torch.ao.ns._numeric_suite_fx": [[1935, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1935, "torch-ao-ns-fx-utils"]], "torch.overrides": [[1936, "torch-overrides"]], "QFunctional": [[756, "qfunctional"]], "threshold": [[783, "threshold"]], "hardtanh": [[777, "hardtanh"]], "avg_pool3d": [[768, "avg-pool3d"]], "max_pool1d": [[781, "max-pool1d"]], "leaky_relu": [[779, "leaky-relu"]], "FXFloatFunctional": [[746, "fxfloatfunctional"]], "adaptive_avg_pool3d": [[766, "adaptive-avg-pool3d"]], "celu": [[769, "celu"]], "conv3d": [[773, "conv3d"]], "avg_pool2d": [[767, "avg-pool2d"]], "elu": [[774, "elu"]], "hardswish": [[776, "hardswish"]], "max_pool2d": [[782, "max-pool2d"]], "hardsigmoid": [[775, "hardsigmoid"]], "FloatFunctional": [[747, "floatfunctional"]], "conv1d": [[771, "conv1d"]], "adaptive_avg_pool2d": [[765, "adaptive-avg-pool2d"]], "conv2d": [[772, "conv2d"]], "interpolate": [[778, "interpolate"]], "clamp": [[770, "clamp"]], "linear": [[780, "linear"]], "torch.addr": [[690, "torch-addr"]], "ConvBnReLU3d": [[706, "convbnrelu3d"], [716, "convbnrelu3d"]], "BNReLU3d": [[700, "bnrelu3d"], [723, "bnrelu3d"]], "ConvBn3d": [[713, "convbn3d"], [703, "convbn3d"]], "update_bn_stats": [[721, "update-bn-stats"]], "torch.addcmul": [[687, "torch-addcmul"]], "ConvReLU1d": [[707, "convrelu1d"], [724, "convrelu1d"]], "ConvBn2d": [[712, "convbn2d"], [702, "convbn2d"]], "ConvBnReLU1d": [[714, "convbnrelu1d"], [704, "convbnrelu1d"]], "ConvReLU3d": [[718, "convrelu3d"], [726, "convrelu3d"], [709, "convrelu3d"]], "torch.aminmax": [[696, "torch-aminmax"]], "ConvBn1d": [[701, "convbn1d"], [711, "convbn1d"]], "ConvReLU2d": [[708, "convrelu2d"], [725, "convrelu2d"], [717, "convrelu2d"]], "torch.angle": [[697, "torch-angle"]], "BNReLU2d": [[722, "bnrelu2d"], [699, "bnrelu2d"]], "LinearReLU": [[728, "linearrelu"], [727, "linearrelu"], [719, "linearrelu"], [710, "linearrelu"]], "torch.amax": [[694, "torch-amax"]], "torch.addmv": [[689, "torch-addmv"]], "torch.any": [[698, "torch-any"]], "torch.all": [[692, "torch-all"]], "ConvBnReLU2d": [[715, "convbnrelu2d"], [705, "convbnrelu2d"]], "torch.adjoint": [[691, "torch-adjoint"]], "torch.allclose": [[693, "torch-allclose"]], "torch.addmm": [[688, "torch-addmm"]], "torch.addcdiv": [[686, "torch-addcdiv"]], "torch.amin": [[695, "torch-amin"]], "freeze_bn_stats": [[720, "freeze-bn-stats"]], "torch._foreach_expm1": [[644, "torch-foreach-expm1"]], "torch._foreach_sinh_": [[671, "torch-foreach-sinh"]], "torch._foreach_reciprocal": [[662, "torch-foreach-reciprocal"]], "torch._foreach_log2_": [[658, "torch-foreach-log2"]], "torch._foreach_floor_": [[647, "torch-foreach-floor"]], "torch._foreach_sin": [[668, "torch-foreach-sin"]], "torch._foreach_lgamma": [[650, "torch-foreach-lgamma"]], "torch._foreach_tan_": [[675, "torch-foreach-tan"]], "torch._foreach_round": [[664, "torch-foreach-round"]], "torch.abs": [[680, "torch-abs"]], "torch._foreach_erfc": [[640, "torch-foreach-erfc"]], "torch._foreach_exp": [[642, "torch-foreach-exp"]], "torch._foreach_frac": [[648, "torch-foreach-frac"]], "torch._foreach_log10_": [[654, "torch-foreach-log10"]], "torch._foreach_trunc": [[676, "torch-foreach-trunc"]], "torch._foreach_log1p": [[655, "torch-foreach-log1p"]], "torch._foreach_floor": [[646, "torch-foreach-floor"]], "torch._foreach_sqrt_": [[673, "torch-foreach-sqrt"]], "torch.addbmm": [[685, "torch-addbmm"]], "torch._foreach_sin_": [[669, "torch-foreach-sin"]], "torch._foreach_trunc_": [[677, "torch-foreach-trunc"]], "torch._foreach_frac_": [[649, "torch-foreach-frac"]], "torch._foreach_lgamma_": [[651, "torch-foreach-lgamma"]], "torch._foreach_log10": [[653, "torch-foreach-log10"]], "torch._foreach_log": [[652, "torch-foreach-log"]], "torch._foreach_log2": [[657, "torch-foreach-log2"]], "torch._foreach_sigmoid": [[666, "torch-foreach-sigmoid"]], "torch._foreach_sigmoid_": [[667, "torch-foreach-sigmoid"]], "torch._foreach_neg_": [[661, "torch-foreach-neg"]], "torch._foreach_neg": [[660, "torch-foreach-neg"]], "torch._logging.set_logs": [[679, "torch-logging-set-logs"]], "torch._foreach_sqrt": [[672, "torch-foreach-sqrt"]], "torch._foreach_reciprocal_": [[663, "torch-foreach-reciprocal"]], "torch._foreach_erf_": [[639, "torch-foreach-erf"]], "torch.add": [[684, "torch-add"]], "torch._foreach_tan": [[674, "torch-foreach-tan"]], "torch._foreach_cosh_": [[637, "torch-foreach-cosh"]], "torch._foreach_zero_": [[678, "torch-foreach-zero"]], "torch._foreach_expm1_": [[645, "torch-foreach-expm1"]], "torch._foreach_erf": [[638, "torch-foreach-erf"]], "torch.acos": [[682, "torch-acos"]], "torch._foreach_exp_": [[643, "torch-foreach-exp"]], "torch._foreach_sinh": [[670, "torch-foreach-sinh"]], "torch._foreach_log1p_": [[656, "torch-foreach-log1p"]], "torch._foreach_round_": [[665, "torch-foreach-round"]], "torch._foreach_log_": [[659, "torch-foreach-log"]], "torch.acosh": [[683, "torch-acosh"]], "torch._foreach_erfc_": [[641, "torch-foreach-erfc"]], "torch.absolute": [[681, "torch-absolute"]], "torch.Tensor.vsplit": [[618, "torch-tensor-vsplit"]], "torch.Tensor.vdot": [[615, "torch-tensor-vdot"]], "torch.Tensor.tril": [[594, "torch-tensor-tril"]], "torch.Tensor.xlogy": [[620, "torch-tensor-xlogy"]], "torch._foreach_asin": [[628, "torch-foreach-asin"]], "torch.Tensor.triu_": [[597, "torch-tensor-triu"]], "torch.Tensor.type": [[602, "torch-tensor-type"]], "torch._foreach_acos": [[626, "torch-foreach-acos"]], "torch.Tensor.xlogy_": [[621, "torch-tensor-xlogy"]], "torch._assert": [[623, "torch-assert"]], "torch._foreach_abs": [[624, "torch-foreach-abs"]], "torch.Tensor.unflatten": [[605, "torch-tensor-unflatten"]], "torch._foreach_acos_": [[627, "torch-foreach-acos"]], "torch._foreach_atan": [[630, "torch-foreach-atan"]], "torch.Tensor.where": [[619, "torch-tensor-where"]], "torch.Tensor.unique": [[608, "torch-tensor-unique"]], "torch.Tensor.tril_": [[595, "torch-tensor-tril"]], "torch.Tensor.true_divide_": [[599, "torch-tensor-true-divide"]], "torch.Tensor.view_as": [[617, "torch-tensor-view-as"]], "torch._foreach_cos": [[634, "torch-foreach-cos"]], "torch.Tensor.unfold": [[606, "torch-tensor-unfold"]], "torch.Tensor.triangular_solve": [[593, "torch-tensor-triangular-solve"]], "torch.Tensor.untyped_storage": [[612, "torch-tensor-untyped-storage"]], "torch.Tensor.unsqueeze": [[610, "torch-tensor-unsqueeze"]], "torch.Tensor.view": [[616, "torch-tensor-view"]], "torch.Tensor.topk": [[589, "torch-tensor-topk"]], "torch._foreach_ceil_": [[633, "torch-foreach-ceil"]], "torch.Tensor.transpose": [[591, "torch-tensor-transpose"]], "torch._foreach_atan_": [[631, "torch-foreach-atan"]], "torch.Tensor.var": [[614, "torch-tensor-var"]], "torch.Tensor.unbind": [[604, "torch-tensor-unbind"]], "torch.Tensor.unique_consecutive": [[609, "torch-tensor-unique-consecutive"]], "torch.Tensor.tolist": [[588, "torch-tensor-tolist"]], "torch.Tensor.trunc": [[600, "torch-tensor-trunc"]], "torch._foreach_cos_": [[635, "torch-foreach-cos"]], "torch.Tensor.uniform_": [[607, "torch-tensor-uniform"]], "torch.Tensor.true_divide": [[598, "torch-tensor-true-divide"]], "torch._foreach_ceil": [[632, "torch-foreach-ceil"]], "torch.Tensor.transpose_": [[592, "torch-tensor-transpose"]], "torch.Tensor.unsqueeze_": [[611, "torch-tensor-unsqueeze"]], "torch._foreach_cosh": [[636, "torch-foreach-cosh"]], "torch._foreach_asin_": [[629, "torch-foreach-asin"]], "torch.Tensor.zero_": [[622, "torch-tensor-zero"]], "torch.Tensor.values": [[613, "torch-tensor-values"]], "torch.Tensor.trunc_": [[601, "torch-tensor-trunc"]], "torch.Tensor.type_as": [[603, "torch-tensor-type-as"]], "torch.Tensor.trace": [[590, "torch-tensor-trace"]], "torch._foreach_abs_": [[625, "torch-foreach-abs"]], "torch.Tensor.triu": [[596, "torch-tensor-triu"]], "torch.Tensor.sqrt": [[547, "torch-tensor-sqrt"]], "torch.Tensor.square_": [[550, "torch-tensor-square"]], "torch.Tensor.sub_": [[561, "torch-tensor-sub"]], "torch.Tensor.swapaxes": [[567, "torch-tensor-swapaxes"]], "torch.Tensor.storage_offset": [[557, "torch-tensor-storage-offset"]], "torch.Tensor.stride": [[559, "torch-tensor-stride"]], "torch.Tensor.tan_": [[574, "torch-tensor-tan"]], "torch.Tensor.squeeze": [[551, "torch-tensor-squeeze"]], "torch.Tensor.square": [[549, "torch-tensor-square"]], "torch.Tensor.sum_to_size": [[565, "torch-tensor-sum-to-size"]], "torch.Tensor.sparse_dim": [[542, "torch-tensor-sparse-dim"]], "torch.Tensor.to_sparse_bsc": [[583, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.to_sparse_csr": [[587, "torch-tensor-to-sparse-csr"]], "torch.Tensor.subtract": [[562, "torch-tensor-subtract"]], "torch.Tensor.sqrt_": [[548, "torch-tensor-sqrt"]], "torch.Tensor.to_sparse_csc": [[586, "torch-tensor-to-sparse-csc"]], "torch.Tensor.to_sparse_coo": [[585, "torch-tensor-to-sparse-coo"]], "torch.Tensor.softmax": [[540, "torch-tensor-softmax"]], "torch.Tensor.sort": [[541, "torch-tensor-sort"]], "torch.Tensor.sspaddmm": [[553, "torch-tensor-sspaddmm"]], "torch.Tensor.storage": [[556, "torch-tensor-storage"]], "torch.Tensor.swapdims": [[568, "torch-tensor-swapdims"]], "torch.Tensor.sparse_resize_and_clear_": [[545, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.sparse_resize_": [[544, "torch-tensor-sparse-resize"]], "torch.Tensor.to_dense": [[580, "torch-tensor-to-dense"]], "torch.Tensor.take_along_dim": [[572, "torch-tensor-take-along-dim"]], "torch.Tensor.sparse_mask": [[543, "torch-tensor-sparse-mask"]], "torch.Tensor.smm": [[539, "torch-tensor-smm"]], "torch.Tensor.subtract_": [[563, "torch-tensor-subtract"]], "torch.Tensor.tile": [[578, "torch-tensor-tile"]], "torch.Tensor.split": [[546, "torch-tensor-split"]], "torch.Tensor.storage_type": [[558, "torch-tensor-storage-type"]], "torch.Tensor.tanh_": [[576, "torch-tensor-tanh"]], "torch.Tensor.tensor_split": [[577, "torch-tensor-tensor-split"]], "torch.Tensor.take": [[571, "torch-tensor-take"]], "torch.Tensor.sub": [[560, "torch-tensor-sub"]], "torch.Tensor.svd": [[566, "torch-tensor-svd"]], "torch.Tensor.tan": [[573, "torch-tensor-tan"]], "torch.Tensor.to_mkldnn": [[581, "torch-tensor-to-mkldnn"]], "torch.Tensor.squeeze_": [[552, "torch-tensor-squeeze"]], "torch.Tensor.to_sparse": [[582, "torch-tensor-to-sparse"]], "torch.Tensor.std": [[554, "torch-tensor-std"]], "torch.Tensor.sum": [[564, "torch-tensor-sum"]], "torch.Tensor.tanh": [[575, "torch-tensor-tanh"]], "torch.Tensor.to": [[579, "torch-tensor-to"]], "torch.Tensor.stft": [[555, "torch-tensor-stft"]], "torch.Tensor.to_sparse_bsr": [[584, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.t": [[569, "torch-tensor-t"]], "torch.Tensor.t_": [[570, "torch-tensor-t"]], "torch.Tensor.sigmoid": [[525, "torch-tensor-sigmoid"]], "torch.Tensor.requires_grad": [[495, "torch-tensor-requires-grad"]], "torch.Tensor.retains_grad": [[504, "torch-tensor-retains-grad"]], "torch.Tensor.sign": [[527, "torch-tensor-sign"]], "torch.Tensor.repeat": [[493, "torch-tensor-repeat"]], "torch.Tensor.resize_as_": [[500, "torch-tensor-resize-as"]], "torch.Tensor.resolve_conj": [[501, "torch-tensor-resolve-conj"]], "torch.Tensor.share_memory_": [[523, "torch-tensor-share-memory"]], "torch.Tensor.scatter_reduce_": [[517, "torch-tensor-scatter-reduce"]], "torch.Tensor.scatter_add": [[514, "torch-tensor-scatter-add"]], "torch.Tensor.rsqrt": [[510, "torch-tensor-rsqrt"]], "torch.Tensor.requires_grad_": [[496, "torch-tensor-requires-grad"]], "torch.Tensor.row_indices": [[509, "torch-tensor-row-indices"]], "torch.Tensor.sigmoid_": [[526, "torch-tensor-sigmoid"]], "torch.Tensor.slice_scatter": [[537, "torch-tensor-slice-scatter"]], "torch.Tensor.sign_": [[528, "torch-tensor-sign"]], "torch.Tensor.sin": [[530, "torch-tensor-sin"]], "torch.Tensor.sinh_": [[535, "torch-tensor-sinh"]], "torch.Tensor.size": [[536, "torch-tensor-size"]], "torch.Tensor.resize_": [[499, "torch-tensor-resize"]], "torch.Tensor.set_": [[520, "torch-tensor-set"]], "torch.Tensor.select": [[518, "torch-tensor-select"]], "torch.Tensor.sgn": [[521, "torch-tensor-sgn"]], "torch.Tensor.sin_": [[531, "torch-tensor-sin"]], "torch.Tensor.renorm_": [[492, "torch-tensor-renorm"]], "torch.Tensor.rot90": [[506, "torch-tensor-rot90"]], "torch.Tensor.round_": [[508, "torch-tensor-round"]], "torch.Tensor.sinh": [[534, "torch-tensor-sinh"]], "torch.Tensor.round": [[507, "torch-tensor-round"]], "torch.Tensor.select_scatter": [[519, "torch-tensor-select-scatter"]], "torch.Tensor.scatter": [[512, "torch-tensor-scatter"]], "torch.Tensor.repeat_interleave": [[494, "torch-tensor-repeat-interleave"]], "torch.Tensor.scatter_": [[513, "torch-tensor-scatter"]], "torch.Tensor.renorm": [[491, "torch-tensor-renorm"]], "torch.Tensor.resolve_neg": [[502, "torch-tensor-resolve-neg"]], "torch.Tensor.scatter_add_": [[515, "torch-tensor-scatter-add"]], "torch.Tensor.sinc_": [[533, "torch-tensor-sinc"]], "torch.Tensor.reshape": [[497, "torch-tensor-reshape"]], "torch.Tensor.sinc": [[532, "torch-tensor-sinc"]], "torch.Tensor.rsqrt_": [[511, "torch-tensor-rsqrt"]], "torch.Tensor.short": [[524, "torch-tensor-short"]], "torch.Tensor.remainder_": [[490, "torch-tensor-remainder"]], "torch.Tensor.slogdet": [[538, "torch-tensor-slogdet"]], "torch.Tensor.scatter_reduce": [[516, "torch-tensor-scatter-reduce"]], "torch.Tensor.sgn_": [[522, "torch-tensor-sgn"]], "torch.Tensor.signbit": [[529, "torch-tensor-signbit"]], "torch.Tensor.roll": [[505, "torch-tensor-roll"]], "torch.Tensor.reshape_as": [[498, "torch-tensor-reshape-as"]], "torch.Tensor.retain_grad": [[503, "torch-tensor-retain-grad"]], "torch.Tensor.new_full": [[447, "torch-tensor-new-full"]], "torch.Tensor.ormqr": [[461, "torch-tensor-ormqr"]], "torch.Tensor.q_per_channel_scales": [[474, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.new_ones": [[448, "torch-tensor-new-ones"]], "torch.Tensor.nextafter": [[451, "torch-tensor-nextafter"]], "torch.Tensor.put_": [[472, "torch-tensor-put"]], "torch.Tensor.remainder": [[489, "torch-tensor-remainder"]], "torch.Tensor.normal_": [[455, "torch-tensor-normal"]], "torch.Tensor.q_per_channel_zero_points": [[475, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.polygamma": [[466, "torch-tensor-polygamma"]], "torch.Tensor.q_scale": [[476, "torch-tensor-q-scale"]], "torch.Tensor.neg_": [[442, "torch-tensor-neg"]], "torch.Tensor.pin_memory": [[464, "torch-tensor-pin-memory"]], "torch.Tensor.permute": [[463, "torch-tensor-permute"]], "torch.Tensor.positive": [[468, "torch-tensor-positive"]], "torch.Tensor.qr": [[478, "torch-tensor-qr"]], "torch.Tensor.reciprocal_": [[486, "torch-tensor-reciprocal"]], "torch.Tensor.q_per_channel_axis": [[473, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.new_zeros": [[450, "torch-tensor-new-zeros"]], "torch.Tensor.ravel": [[483, "torch-tensor-ravel"]], "torch.Tensor.outer": [[462, "torch-tensor-outer"]], "torch.Tensor.numel": [[458, "torch-tensor-numel"]], "torch.Tensor.nextafter_": [[452, "torch-tensor-nextafter"]], "torch.Tensor.not_equal": [[456, "torch-tensor-not-equal"]], "torch.Tensor.qscheme": [[479, "torch-tensor-qscheme"]], "torch.Tensor.reciprocal": [[485, "torch-tensor-reciprocal"]], "torch.Tensor.record_stream": [[487, "torch-tensor-record-stream"]], "torch.Tensor.pow_": [[470, "torch-tensor-pow"]], "torch.Tensor.random_": [[482, "torch-tensor-random"]], "torch.Tensor.real": [[484, "torch-tensor-real"]], "torch.Tensor.nelement": [[445, "torch-tensor-nelement"]], "torch.Tensor.polygamma_": [[467, "torch-tensor-polygamma"]], "torch.Tensor.orgqr": [[460, "torch-tensor-orgqr"]], "torch.Tensor.not_equal_": [[457, "torch-tensor-not-equal"]], "torch.Tensor.negative_": [[444, "torch-tensor-negative"]], "torch.Tensor.rad2deg": [[481, "torch-tensor-rad2deg"]], "torch.Tensor.new_empty": [[446, "torch-tensor-new-empty"]], "torch.Tensor.norm": [[454, "torch-tensor-norm"]], "torch.Tensor.numpy": [[459, "torch-tensor-numpy"]], "torch.Tensor.pow": [[469, "torch-tensor-pow"]], "torch.Tensor.prod": [[471, "torch-tensor-prod"]], "torch.Tensor.register_hook": [[488, "torch-tensor-register-hook"]], "torch.Tensor.pinverse": [[465, "torch-tensor-pinverse"]], "torch.Tensor.quantile": [[480, "torch-tensor-quantile"]], "torch.Tensor.negative": [[443, "torch-tensor-negative"]], "torch.Tensor.nonzero": [[453, "torch-tensor-nonzero"]], "torch.Tensor.neg": [[441, "torch-tensor-neg"]], "torch.Tensor.new_tensor": [[449, "torch-tensor-new-tensor"]], "torch.Tensor.q_zero_point": [[477, "torch-tensor-q-zero-point"]], "torch.Tensor.min": [[413, "torch-tensor-min"]], "torch.Tensor.mul": [[420, "torch-tensor-mul"]], "torch.Tensor.masked_fill": [[401, "torch-tensor-masked-fill"]], "torch.Tensor.maximum": [[410, "torch-tensor-maximum"]], "torch.Tensor.narrow_copy": [[435, "torch-tensor-narrow-copy"]], "torch.Tensor.logsumexp": [[394, "torch-tensor-logsumexp"]], "torch.Tensor.nanquantile": [[432, "torch-tensor-nanquantile"]], "torch.Tensor.mvlgamma": [[426, "torch-tensor-mvlgamma"]], "torch.Tensor.masked_select": [[405, "torch-tensor-masked-select"]], "torch.Tensor.lt": [[396, "torch-tensor-lt"]], "torch.Tensor.lu": [[398, "torch-tensor-lu"]], "torch.Tensor.median": [[412, "torch-tensor-median"]], "torch.Tensor.lt_": [[397, "torch-tensor-lt"]], "torch.Tensor.nanmedian": [[431, "torch-tensor-nanmedian"]], "torch.Tensor.mode": [[416, "torch-tensor-mode"]], "torch.Tensor.logit": [[392, "torch-tensor-logit"]], "torch.Tensor.masked_fill_": [[402, "torch-tensor-masked-fill"]], "torch.Tensor.ndim": [[437, "torch-tensor-ndim"]], "torch.Tensor.nanmean": [[430, "torch-tensor-nanmean"]], "torch.Tensor.multinomial": [[422, "torch-tensor-multinomial"]], "torch.Tensor.matmul": [[406, "torch-tensor-matmul"]], "torch.Tensor.mm": [[415, "torch-tensor-mm"]], "torch.Tensor.ndimension": [[438, "torch-tensor-ndimension"]], "torch.Tensor.multiply_": [[424, "torch-tensor-multiply"]], "torch.Tensor.logit_": [[393, "torch-tensor-logit"]], "torch.Tensor.max": [[409, "torch-tensor-max"]], "torch.Tensor.mvlgamma_": [[427, "torch-tensor-mvlgamma"]], "torch.Tensor.matrix_power": [[408, "torch-tensor-matrix-power"]], "torch.Tensor.long": [[395, "torch-tensor-long"]], "torch.Tensor.nansum": [[433, "torch-tensor-nansum"]], "torch.Tensor.ne": [[439, "torch-tensor-ne"]], "torch.Tensor.nan_to_num": [[428, "torch-tensor-nan-to-num"]], "torch.Tensor.nan_to_num_": [[429, "torch-tensor-nan-to-num"]], "torch.Tensor.ne_": [[440, "torch-tensor-ne"]], "torch.Tensor.masked_scatter": [[403, "torch-tensor-masked-scatter"]], "torch.Tensor.multiply": [[423, "torch-tensor-multiply"]], "torch.Tensor.nbytes": [[436, "torch-tensor-nbytes"]], "torch.Tensor.lu_solve": [[399, "torch-tensor-lu-solve"]], "torch.Tensor.movedim": [[418, "torch-tensor-movedim"]], "torch.Tensor.narrow": [[434, "torch-tensor-narrow"]], "torch.Tensor.msort": [[419, "torch-tensor-msort"]], "torch.Tensor.mul_": [[421, "torch-tensor-mul"]], "torch.Tensor.mean": [[411, "torch-tensor-mean"]], "torch.Tensor.mv": [[425, "torch-tensor-mv"]], "torch.Tensor.matrix_exp": [[407, "torch-tensor-matrix-exp"]], "torch.Tensor.moveaxis": [[417, "torch-tensor-moveaxis"]], "torch.Tensor.masked_scatter_": [[404, "torch-tensor-masked-scatter"]], "torch.Tensor.minimum": [[414, "torch-tensor-minimum"]], "torch.Tensor.map_": [[400, "torch-tensor-map"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.load_state_dict"]], "module": [[0, "module-torch.amp"], [0, "module-torch.cpu"], [0, "module-torch.cpu.amp"], [0, "module-torch.cuda.amp"], [1, "module-torch.autograd"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [30, "module-torch.compiler"], [32, "module-torch.__config__"], [35, "module-torch.cuda"], [36, "module-torch.cuda._sanitizer"], [39, "module-torch.utils.data"], [39, "module-torch.utils.data.datapipes"], [39, "module-torch.utils.data.datapipes.dataframe"], [39, "module-torch.utils.data.datapipes.iter"], [39, "module-torch.utils.data.datapipes.map"], [39, "module-torch.utils.data.datapipes.utils"], [42, "module-torch.distributed"], [42, "module-torch.distributed.algorithms"], [42, "module-torch.distributed.algorithms.ddp_comm_hooks"], [42, "module-torch.distributed.algorithms.model_averaging"], [42, "module-torch.distributed.elastic"], [42, "module-torch.distributed.elastic.utils"], [42, "module-torch.distributed.elastic.utils.data"], [42, "module-torch.distributed.launch"], [42, "module-torch.distributed.launcher"], [42, "module-torch.distributed.nn"], [42, "module-torch.distributed.nn.api"], [42, "module-torch.distributed.nn.jit"], [42, "module-torch.distributed.nn.jit.templates"], [42, "module-torch.distributed.pipeline"], [42, "module-torch.distributed.pipeline.sync"], [42, "module-torch.distributed.pipeline.sync.skip"], [42, "module-torch.distributed.tensor"], [44, "module-torch.distributed.checkpoint"], [46, "module-torch.distributed.optim"], [47, "module-torch.distributed.tensor.parallel"], [48, "module-torch.distributions"], [48, "module-torch.distributions.constraint_registry"], [48, "module-torch.distributions.constraints"], [48, "module-torch.distributions.kl"], [48, "module-torch.distributions.transforms"], [50, "module-torch.distributed.elastic.agent"], [50, "module-torch.distributed.elastic.agent.server"], [52, "module-torch.distributed.elastic.multiprocessing.errors"], [53, "module-torch.distributed.elastic.events"], [56, "module-torch.distributed.elastic.metrics"], [57, "module-torch.distributed.elastic.multiprocessing"], [59, "module-torch.distributed.elastic.rendezvous"], [59, "module-torch.distributed.elastic.rendezvous.registry"], [60, "module-torch.distributed.run"], [61, "module-torch.distributed.elastic.timer"], [63, "module-torch.fft"], [64, "module-torch.distributed.fsdp"], [66, "module-torch.func"], [71, "module-torch.futures"], [72, "module-torch.fx"], [72, "module-torch.fx.experimental"], [72, "module-torch.fx.experimental.migrate_gradual_types"], [72, "module-torch.fx.experimental.unification"], [72, "module-torch.fx.experimental.unification.multipledispatch"], [72, "module-torch.fx.passes"], [72, "module-torch.fx.passes.backends"], [72, "module-torch.fx.passes.dialect"], [72, "module-torch.fx.passes.dialect.common"], [72, "module-torch.fx.passes.infra"], [72, "module-torch.fx.passes.tests"], [72, "module-torch.fx.passes.utils"], [1865, "module-torch.hub"], [1868, "module-torch.jit"], [1868, "module-torch.jit.mobile"], [1869, "module-torch.jit.supported_ops"], [1873, "module-torch.jit.unsupported_tensor_ops"], [1874, "module-torch.utils.jit"], [1876, "module-torch.linalg"], [1877, "module-torch._logging"], [1878, "module-torch.masked"], [1878, "module-torch.masked.maskedtensor"], [1880, "module-torch.utils.model_zoo"], [1881, "module-torch.monitor"], [1882, "module-torch.mps"], [1883, "module-torch.multiprocessing"], [1886, "module-torch.nested"], [1887, "module-torch.nn"], [1887, "module-torch.nn.backends"], [1887, "module-torch.nn.modules"], [1887, "module-torch.nn.parallel"], [1887, "module-torch.nn.utils"], [1887, "module-torch.nn.utils.stateless"], [1909, "module-torch.onnx"], [1910, "module-torch.onnx._internal.diagnostics"], [1912, "module-torch.optim"], [1913, "module-torch.package"], [1913, "module-torch.package.analyze"], [1915, "module-torch.profiler"], [1916, "module-torch.ao"], [1916, "module-torch.ao.nn"], [1916, "module-torch.ao.nn.quantizable"], [1916, "module-torch.ao.nn.quantizable.modules"], [1916, "module-torch.ao.nn.quantized"], [1916, "module-torch.ao.nn.quantized.reference"], [1916, "module-torch.ao.nn.quantized.reference.modules"], [1916, "module-torch.ao.nn.sparse"], [1916, "module-torch.ao.nn.sparse.quantized"], [1916, "module-torch.ao.nn.sparse.quantized.dynamic"], [1916, "module-torch.ao.ns"], [1916, "module-torch.ao.ns.fx"], [1916, "module-torch.ao.pruning"], [1916, "module-torch.ao.pruning.scheduler"], [1916, "module-torch.ao.pruning.sparsifier"], [1916, "module-torch.ao.quantization"], [1916, "module-torch.ao.quantization.backend_config"], [1916, "module-torch.ao.quantization.fx"], [1919, "module-torch.ao.nn.intrinsic"], [1919, "module-torch.ao.nn.intrinsic.modules"], [1919, "module-torch.ao.nn.intrinsic.qat"], [1919, "module-torch.ao.nn.intrinsic.qat.modules"], [1919, "module-torch.ao.nn.intrinsic.quantized"], [1919, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1919, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1919, "module-torch.ao.nn.intrinsic.quantized.modules"], [1919, "module-torch.ao.nn.qat"], [1919, "module-torch.ao.nn.qat.dynamic"], [1919, "module-torch.ao.nn.qat.dynamic.modules"], [1919, "module-torch.ao.nn.qat.modules"], [1919, "module-torch.ao.nn.quantized.dynamic"], [1919, "module-torch.ao.nn.quantized.dynamic.modules"], [1919, "module-torch.ao.nn.quantized.functional"], [1919, "module-torch.ao.nn.quantized.modules"], [1919, "module-torch.nn.intrinsic"], [1919, "module-torch.nn.intrinsic.modules"], [1919, "module-torch.nn.intrinsic.qat"], [1919, "module-torch.nn.intrinsic.qat.modules"], [1919, "module-torch.nn.intrinsic.quantized"], [1919, "module-torch.nn.intrinsic.quantized.dynamic"], [1919, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1919, "module-torch.nn.intrinsic.quantized.modules"], [1919, "module-torch.nn.qat"], [1919, "module-torch.nn.qat.dynamic"], [1919, "module-torch.nn.qat.dynamic.modules"], [1919, "module-torch.nn.qat.modules"], [1919, "module-torch.nn.quantizable"], [1919, "module-torch.nn.quantizable.modules"], [1919, "module-torch.nn.quantized"], [1919, "module-torch.nn.quantized.dynamic"], [1919, "module-torch.nn.quantized.dynamic.modules"], [1919, "module-torch.nn.quantized.modules"], [1919, "module-torch.quantization"], [1919, "module-torch.quantization.fx"], [1920, "module-torch.random"], [1921, "module-torch.distributed.autograd"], [1921, "module-torch.distributed.rpc"], [1924, "module-torch.signal"], [1924, "module-torch.signal.windows"], [1925, "module-torch.sparse"], [1926, "module-torch.special"], [1930, "module-torch.utils.tensorboard"], [1932, "module-torch.testing"], [1933, "module-torch"], [1933, "module-torch.autograd"], [1933, "module-torch.contrib"], [1933, "module-torch.utils"], [1933, "module-torch.utils.backcompat"], [1933, "module-torch.utils.hipify"], [1933, "module-torch.utils.model_dump"], [1933, "module-torch.utils.viz"], [1934, "module-torch.ao.ns._numeric_suite"], [1935, "module-torch.ao.ns._numeric_suite_fx"]], "scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[0, "module-torch.amp"]], "torch.cpu": [[0, "module-torch.cpu"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"], [1933, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "compile() (in module torch)": [[18, "torch.compile"], [952, "torch.compile"]], "torch.compiler": [[30, "module-torch.compiler"]], "parallel_info() (in module torch.__config__)": [[32, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[32, "torch.__config__.show"]], "torch.__config__": [[32, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cuda": [[35, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[36, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[36, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[39, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[39, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[39, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[39, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[39, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[39, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[39, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[39, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[39, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[39, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[39, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[39, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[39, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[39, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[39, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[39, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[39, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[39, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[39, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[39, "torch.utils.data.random_split"]], "torch.utils.data": [[39, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[39, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[39, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[39, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[39, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[39, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[40, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[42, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[42, "torch.distributed.DistBackendError"]], "filestore (class in torch.distributed)": [[42, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[42, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[42, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[42, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[42, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[42, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[42, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[42, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[42, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[42, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[42, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[42, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[42, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[42, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[42, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[42, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[42, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[42, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[42, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[42, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[42, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[42, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[42, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[42, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[42, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[42, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[42, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[42, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[42, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[42, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[42, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[42, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[42, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[42, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[42, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[42, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[42, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[42, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[42, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[42, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[42, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[42, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[42, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[42, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[42, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[42, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[42, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[42, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[42, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[42, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[42, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[42, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[42, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[42, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[42, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[42, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[42, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[42, "module-torch.distributed"]], "torch.distributed.algorithms": [[42, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[42, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[42, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[42, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[42, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[42, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[42, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[42, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[42, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[42, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[42, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[42, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[42, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[42, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[42, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[42, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[42, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[43, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[43, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[43, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[43, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[43, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[43, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[43, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[43, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[43, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[44, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[44, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[44, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[44, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[44, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[44, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[44, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[44, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[44, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[44, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[44, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[44, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[44, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[44, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[44, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[44, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[44, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[44, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[44, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[44, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[46, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[46, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[46, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[46, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[46, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[46, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[46, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "tensorparallelmultiheadattention (class in torch.distributed.tensor.parallel.multihead_attention_tp)": [[47, "torch.distributed.tensor.parallel.multihead_attention_tp.TensorParallelMultiheadAttention"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[47, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[47, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[47, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[48, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[48, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[48, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[48, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[48, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[48, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[48, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[48, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[48, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[48, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[48, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[48, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[48, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[48, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[48, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[48, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[48, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[48, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[48, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[48, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[48, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[48, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[48, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[48, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[48, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[48, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[48, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[48, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[48, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[48, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[48, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[48, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[48, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[48, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[48, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[48, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[48, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[48, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[48, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[48, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[48, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[48, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[48, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[48, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[48, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[48, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[48, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[48, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[48, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[48, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[48, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[48, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[48, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[48, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[48, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[48, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[48, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[48, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[48, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[48, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[48, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[48, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[48, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[48, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[48, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[48, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[48, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[48, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[48, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[48, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[48, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[48, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[48, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[48, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[48, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[48, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[48, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[48, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[48, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[48, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[48, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[48, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[48, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[48, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[48, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[48, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[48, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[48, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[48, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[48, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[48, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[48, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[48, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[48, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[48, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[48, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[48, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[48, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[48, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[48, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[48, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[48, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[48, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[48, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[48, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[48, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[48, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[48, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[48, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[48, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[48, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[48, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[48, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[48, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[48, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[48, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[48, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[48, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[48, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[48, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[48, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[48, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[48, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[48, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[48, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[48, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[48, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[48, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[48, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[48, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[48, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[48, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[48, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[48, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[48, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[48, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[48, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[48, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[48, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[48, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[48, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[48, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[48, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[48, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[48, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[48, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[48, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[48, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[48, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[48, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[48, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[48, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[48, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[48, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[48, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[48, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[48, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[48, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[48, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[48, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[48, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[48, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[48, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[48, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[48, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[48, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[48, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[48, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[48, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[48, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[48, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[48, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[48, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[48, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[48, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[48, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[48, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[48, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[48, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[48, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[48, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[48, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[48, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[48, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[48, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[48, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[48, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[48, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[48, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[48, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[48, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[48, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[48, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[48, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[48, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[48, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[48, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[48, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[48, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[48, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[48, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[48, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[48, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[48, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[48, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[48, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[48, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[48, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[48, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[48, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[48, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[48, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[48, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[48, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[48, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[48, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[48, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[48, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[48, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[48, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[48, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[48, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[48, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[48, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[48, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[48, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[48, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[48, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[48, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[48, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[48, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[48, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[48, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[48, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[48, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[48, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[48, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[48, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[48, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[48, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[48, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[48, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[48, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[48, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[48, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[48, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[48, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[49, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[49, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[50, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[50, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[50, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[50, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[50, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[50, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[50, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[50, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[52, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[52, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[52, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[52, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[52, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[53, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[53, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[53, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[53, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[53, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[53, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[56, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[56, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[56, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[56, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[56, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[56, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[56, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[57, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[57, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[57, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[57, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[57, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[57, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[59, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[59, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[59, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[59, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[59, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[59, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[60, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[61, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[61, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[61, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[61, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[61, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[61, "module-torch.distributed.elastic.timer"]], "torch.fft": [[63, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[64, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[64, "torch.distributed.fsdp.CPUOffload"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel"]], "mixedprecision (class in torch.distributed.fsdp)": [[64, "torch.distributed.fsdp.MixedPrecision"]], "shardingstrategy (class in torch.distributed.fsdp)": [[64, "torch.distributed.fsdp.ShardingStrategy"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[64, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[64, "module-torch.distributed.fsdp"]], "torch.func": [[66, "module-torch.func"]], "future (class in torch.futures)": [[71, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[71, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[71, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[71, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[71, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[71, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[71, "torch.futures.Future.then"]], "torch.futures": [[71, "module-torch.futures"]], "value() (torch.futures.future method)": [[71, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[71, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[71, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[72, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[72, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[72, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[72, "torch.fx.Node"]], "proxy (class in torch.fx)": [[72, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[72, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[72, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[72, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[72, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[72, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[72, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[72, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[72, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[72, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[72, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[72, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[72, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[72, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[72, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[72, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[72, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[72, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[72, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[72, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[72, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[72, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[72, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[72, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[72, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[72, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[72, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[72, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[72, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[72, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[72, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[72, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[72, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[72, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[72, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[72, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[72, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[72, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[72, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[72, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[72, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[72, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[72, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[72, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[72, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[72, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[72, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[72, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[72, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[72, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[72, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[72, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[72, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[72, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[72, "module-torch.fx"]], "torch.fx.experimental": [[72, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[72, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[72, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[72, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[72, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[72, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[72, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[72, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[72, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[72, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[72, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[72, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[72, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[72, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[72, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[72, "torch.fx.wrap"]], "generator (class in torch)": [[91, "torch.Generator"]], "device (torch.generator attribute)": [[91, "torch.Generator.device"]], "get_state() (torch.generator method)": [[91, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[91, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[91, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[91, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[91, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[92, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[93, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[94, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[95, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[96, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[97, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[98, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[99, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[100, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[101, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[102, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[103, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[104, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[105, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[106, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[107, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[108, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[109, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[110, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[111, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[112, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[113, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[114, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[115, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[116, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[117, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[118, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[119, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[120, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[121, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[122, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[123, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[124, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[125, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[126, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[127, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[128, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[129, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[130, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[131, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[132, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[133, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[134, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[135, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[136, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[137, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[138, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[139, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[140, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[141, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[142, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[143, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[144, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[145, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[146, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[147, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[148, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[149, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[150, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[151, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[152, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[153, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[154, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[155, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[156, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[157, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[158, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[159, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[160, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[161, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[162, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[163, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[164, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[165, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[166, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[167, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[168, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[169, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[170, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[171, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[172, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[173, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[174, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[175, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[176, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[177, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[178, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[179, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[180, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[181, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[182, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[183, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[184, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[185, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[186, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[187, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[188, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[189, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[190, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[191, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[192, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[193, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[194, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[195, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[196, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[197, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[198, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[199, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[200, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[201, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[202, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[203, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[204, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[205, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[206, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[207, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[208, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[209, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[210, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[211, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[212, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[213, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[214, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[215, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[216, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[217, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[218, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[219, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[220, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[221, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[222, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[223, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[224, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[225, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[226, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[227, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[228, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[229, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[230, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[231, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[232, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[233, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[234, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[235, "torch.Tensor.dim"]], "dist() (torch.tensor method)": [[236, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[237, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[238, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[239, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[240, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[241, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[242, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[243, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[244, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[245, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[246, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[247, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[248, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[249, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[250, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[251, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[252, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[253, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[254, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[255, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[256, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[257, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[258, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[259, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[260, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[261, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[262, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[263, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[264, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[265, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[266, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[267, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[268, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[269, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[270, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[271, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[272, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[273, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[274, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[275, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[276, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[277, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[278, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[279, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[280, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[281, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[282, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[283, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[284, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[285, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[286, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[287, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[288, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[289, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[290, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[291, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[292, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[293, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[294, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[295, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[296, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[297, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[298, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[299, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[300, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[301, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[302, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[303, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[304, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[305, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[306, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[307, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[308, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[309, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[310, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[311, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[312, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[313, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[314, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[315, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[316, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[317, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[318, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[319, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[320, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[321, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[322, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[323, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[324, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[325, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[326, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[327, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[328, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[329, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[330, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[331, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[332, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[333, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[334, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[335, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[336, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[337, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[338, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[339, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[340, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[341, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[342, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[343, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[344, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[345, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[346, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[347, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[348, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[349, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[350, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[351, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[352, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[353, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[354, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[355, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[356, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[357, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[358, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[359, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[360, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[361, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[362, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[363, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[364, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[365, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[366, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[367, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[368, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[369, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[370, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[371, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[372, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[373, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[374, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[375, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[376, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[377, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[378, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[379, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[380, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[381, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[382, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[383, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[384, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[385, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[386, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[387, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[388, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[389, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[390, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[391, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[392, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[393, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[394, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[395, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[396, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[397, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[398, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[399, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[400, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[401, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[402, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[403, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[404, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[405, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[406, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[407, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[408, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[409, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[410, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[411, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[412, "torch.Tensor.median"]], "min() (torch.tensor method)": [[413, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[414, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[415, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[416, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[417, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[418, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[419, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[420, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[421, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[422, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[423, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[424, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[425, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[426, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[427, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[428, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[429, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[430, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[431, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[432, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[433, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[434, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[435, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[436, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[437, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[438, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[439, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[440, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[441, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[442, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[443, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[444, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[445, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[446, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[447, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[448, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[449, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[450, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[451, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[452, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[453, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[454, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[455, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[456, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[457, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[458, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[459, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[460, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[461, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[462, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[463, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[464, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[465, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[466, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[467, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[468, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[469, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[470, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[471, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[472, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[473, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[474, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[475, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[476, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[477, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[478, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[479, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[480, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[481, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[482, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[483, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[484, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[485, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[486, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[487, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[488, "torch.Tensor.register_hook"]], "remainder() (torch.tensor method)": [[489, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[490, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[491, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[492, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[493, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[494, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[495, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[496, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[497, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[498, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[499, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[500, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[501, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[502, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[503, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[504, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[505, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[506, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[507, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[508, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[509, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[510, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[511, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[512, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[513, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[514, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[515, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[516, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[517, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[518, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[519, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[520, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[521, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[522, "torch.Tensor.sgn_"]], "share_memory_() (torch.tensor method)": [[523, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[524, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[525, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[526, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[527, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[528, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[529, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[530, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[531, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[532, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[533, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[534, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[535, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[536, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[537, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[538, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[539, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[540, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[541, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[542, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[543, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[544, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[545, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[546, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[547, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[548, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[549, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[550, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[551, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[552, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[553, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[554, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[555, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[556, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[557, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[558, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[559, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[560, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[561, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[562, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[563, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[564, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[565, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[566, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[567, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[568, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[569, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[570, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[571, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[572, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[573, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[574, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[575, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[576, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[577, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[578, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[579, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[580, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[581, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[582, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[583, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[584, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[585, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[586, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[587, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[588, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[589, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[590, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[591, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[592, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[593, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[594, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[595, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[596, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[597, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[598, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[599, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[600, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[601, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[602, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[603, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[604, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[605, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[606, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[607, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[608, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[609, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[610, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[611, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[612, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[613, "torch.Tensor.values"]], "var() (torch.tensor method)": [[614, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[615, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[616, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[617, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[618, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[619, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[620, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[621, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[622, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[623, "torch._assert"]], "_foreach_abs() (in module torch)": [[624, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[625, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[626, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[627, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[628, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[629, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[630, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[631, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[632, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[633, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[634, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[635, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[636, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[637, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[638, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[639, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[640, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[641, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[642, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[643, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[644, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[645, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[646, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[647, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[648, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[649, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[650, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[651, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[652, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[653, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[654, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[655, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[656, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[657, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[658, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[659, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[660, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[661, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[662, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[663, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[664, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[665, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[666, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[667, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[668, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[669, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[670, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[671, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[672, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[673, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[674, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[675, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[676, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[677, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[678, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[679, "torch._logging.set_logs"]], "abs() (in module torch)": [[680, "torch.abs"]], "absolute() (in module torch)": [[681, "torch.absolute"]], "acos() (in module torch)": [[682, "torch.acos"]], "acosh() (in module torch)": [[683, "torch.acosh"]], "add() (in module torch)": [[684, "torch.add"]], "addbmm() (in module torch)": [[685, "torch.addbmm"]], "addcdiv() (in module torch)": [[686, "torch.addcdiv"]], "addcmul() (in module torch)": [[687, "torch.addcmul"]], "addmm() (in module torch)": [[688, "torch.addmm"]], "addmv() (in module torch)": [[689, "torch.addmv"]], "addr() (in module torch)": [[690, "torch.addr"]], "adjoint() (in module torch)": [[691, "torch.adjoint"]], "all() (in module torch)": [[692, "torch.all"]], "allclose() (in module torch)": [[693, "torch.allclose"]], "amax() (in module torch)": [[694, "torch.amax"]], "amin() (in module torch)": [[695, "torch.amin"]], "aminmax() (in module torch)": [[696, "torch.aminmax"]], "angle() (in module torch)": [[697, "torch.angle"]], "any() (in module torch)": [[698, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[702, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[703, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[704, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[705, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[706, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[707, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[708, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[709, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[710, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[713, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[714, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[715, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[716, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[717, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[718, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[719, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[720, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[721, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[722, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[723, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[724, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[725, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[726, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[727, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[728, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[729, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[730, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[731, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[731, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[732, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[733, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[734, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[734, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[734, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[737, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[738, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[739, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[744, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[745, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[755, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[755, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[755, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[756, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[757, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[758, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[759, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[760, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[761, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[762, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[763, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[763, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[763, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[764, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[783, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[784, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[785, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[786, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[787, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[788, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[789, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[790, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[791, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[791, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[791, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[791, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[791, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[791, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[791, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[793, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[793, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[793, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[794, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[795, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[795, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[795, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[795, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[796, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[797, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[804, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[805, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[806, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[807, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[808, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[809, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[810, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[811, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[812, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[813, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[814, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[814, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[815, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[815, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[815, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[815, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[817, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[819, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[819, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[819, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[823, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[823, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[824, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[829, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[830, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[831, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[832, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[833, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[834, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[835, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[836, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[837, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[838, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[839, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[844, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[845, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[846, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[847, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[848, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[849, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[850, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[851, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[852, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[853, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[853, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[853, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[853, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[853, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[853, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[853, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[853, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[854, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[855, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[856, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[857, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[858, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[859, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[860, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[861, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[862, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[863, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[864, "torch.arange"]], "arccos() (in module torch)": [[865, "torch.arccos"]], "arccosh() (in module torch)": [[866, "torch.arccosh"]], "arcsin() (in module torch)": [[867, "torch.arcsin"]], "arcsinh() (in module torch)": [[868, "torch.arcsinh"]], "arctan() (in module torch)": [[869, "torch.arctan"]], "arctan2() (in module torch)": [[870, "torch.arctan2"]], "arctanh() (in module torch)": [[871, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[872, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[873, "torch.argmax"]], "argmin() (in module torch)": [[874, "torch.argmin"]], "argsort() (in module torch)": [[875, "torch.argsort"]], "argwhere() (in module torch)": [[876, "torch.argwhere"]], "as_strided() (in module torch)": [[877, "torch.as_strided"]], "as_tensor() (in module torch)": [[878, "torch.as_tensor"]], "asarray() (in module torch)": [[879, "torch.asarray"]], "asin() (in module torch)": [[880, "torch.asin"]], "asinh() (in module torch)": [[881, "torch.asinh"]], "atan() (in module torch)": [[882, "torch.atan"]], "atan2() (in module torch)": [[883, "torch.atan2"]], "atanh() (in module torch)": [[884, "torch.atanh"]], "atleast_1d() (in module torch)": [[885, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[886, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[887, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[888, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[889, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[890, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[891, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[892, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[893, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[894, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[895, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[896, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[897, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[898, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[899, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[900, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[901, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[902, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[903, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[904, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[905, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[906, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[907, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[908, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[909, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[910, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[911, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[912, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[913, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[914, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[915, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[916, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[917, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[918, "torch.autograd.profiler.profile.total_average"]], "set_multithreading_enabled (class in torch.autograd)": [[919, "torch.autograd.set_multithreading_enabled"]], "baddbmm() (in module torch)": [[920, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[921, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[922, "torch.bernoulli"]], "bincount() (in module torch)": [[923, "torch.bincount"]], "bitwise_and() (in module torch)": [[924, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[925, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[926, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[927, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[928, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[929, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[930, "torch.blackman_window"]], "block_diag() (in module torch)": [[931, "torch.block_diag"]], "bmm() (in module torch)": [[932, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[933, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[934, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[935, "torch.broadcast_to"]], "bucketize() (in module torch)": [[936, "torch.bucketize"]], "can_cast() (in module torch)": [[937, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[938, "torch.cartesian_prod"]], "cat() (in module torch)": [[939, "torch.cat"]], "cdist() (in module torch)": [[940, "torch.cdist"]], "ceil() (in module torch)": [[941, "torch.ceil"]], "chain_matmul() (in module torch)": [[942, "torch.chain_matmul"]], "cholesky() (in module torch)": [[943, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[944, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[945, "torch.cholesky_solve"]], "chunk() (in module torch)": [[946, "torch.chunk"]], "clamp() (in module torch)": [[947, "torch.clamp"]], "clip() (in module torch)": [[948, "torch.clip"]], "clone() (in module torch)": [[949, "torch.clone"]], "column_stack() (in module torch)": [[950, "torch.column_stack"]], "combinations() (in module torch)": [[951, "torch.combinations"]], "compiled_with_cxx11_abi() (in module torch)": [[953, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[954, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[955, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[956, "torch.compiler.compile"]], "disable() (in module torch.compiler)": [[957, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[958, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[959, "torch.compiler.reset"]], "complex() (in module torch)": [[960, "torch.complex"]], "concat() (in module torch)": [[961, "torch.concat"]], "concatenate() (in module torch)": [[962, "torch.concatenate"]], "conj() (in module torch)": [[963, "torch.conj"]], "conj_physical() (in module torch)": [[964, "torch.conj_physical"]], "copysign() (in module torch)": [[965, "torch.copysign"]], "corrcoef() (in module torch)": [[966, "torch.corrcoef"]], "cos() (in module torch)": [[967, "torch.cos"]], "cosh() (in module torch)": [[968, "torch.cosh"]], "count_nonzero() (in module torch)": [[969, "torch.count_nonzero"]], "cov() (in module torch)": [[970, "torch.cov"]], "cross() (in module torch)": [[971, "torch.cross"]], "cudagraph (class in torch.cuda)": [[972, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[972, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[972, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[972, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[972, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[972, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[972, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[972, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[973, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[974, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[974, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[974, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[974, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[974, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[974, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[974, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[974, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[975, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[975, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[975, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[975, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[975, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[975, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[976, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[977, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[977, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[977, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[977, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[977, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[977, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[978, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[979, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[980, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[981, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[982, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[983, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[984, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[985, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[986, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[987, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[988, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[989, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[990, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[991, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[992, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[993, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[994, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[995, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[996, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[997, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[998, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[999, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[1000, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[1001, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1002, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1003, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1004, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1005, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1006, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1007, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1008, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1009, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1010, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1011, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1012, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1013, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1014, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1015, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1016, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1017, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1018, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1019, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1020, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1021, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1022, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1023, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1024, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1025, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1026, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1027, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1028, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1029, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1030, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1031, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1032, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1033, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1034, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1035, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1036, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1037, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1038, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1039, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1040, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1041, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1042, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1043, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1044, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1045, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1046, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1047, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1048, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1049, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1050, "torch.cummax"]], "cummin() (in module torch)": [[1051, "torch.cummin"]], "cumprod() (in module torch)": [[1052, "torch.cumprod"]], "cumsum() (in module torch)": [[1053, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1054, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1055, "torch.deg2rad"]], "dequantize() (in module torch)": [[1056, "torch.dequantize"]], "det() (in module torch)": [[1057, "torch.det"]], "diag() (in module torch)": [[1058, "torch.diag"]], "diag_embed() (in module torch)": [[1059, "torch.diag_embed"]], "diagflat() (in module torch)": [[1060, "torch.diagflat"]], "diagonal() (in module torch)": [[1061, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1062, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1063, "torch.diff"]], "digamma() (in module torch)": [[1064, "torch.digamma"]], "dist() (in module torch)": [[1065, "torch.dist"]], "div() (in module torch)": [[1066, "torch.div"]], "divide() (in module torch)": [[1067, "torch.divide"]], "dot() (in module torch)": [[1068, "torch.dot"]], "dsplit() (in module torch)": [[1069, "torch.dsplit"]], "dstack() (in module torch)": [[1070, "torch.dstack"]], "einsum() (in module torch)": [[1071, "torch.einsum"]], "empty() (in module torch)": [[1072, "torch.empty"]], "empty_like() (in module torch)": [[1073, "torch.empty_like"]], "empty_strided() (in module torch)": [[1074, "torch.empty_strided"]], "enable_grad (class in torch)": [[1075, "torch.enable_grad"]], "eq() (in module torch)": [[1076, "torch.eq"]], "equal() (in module torch)": [[1077, "torch.equal"]], "erf() (in module torch)": [[1078, "torch.erf"]], "erfc() (in module torch)": [[1079, "torch.erfc"]], "erfinv() (in module torch)": [[1080, "torch.erfinv"]], "exp() (in module torch)": [[1081, "torch.exp"]], "exp2() (in module torch)": [[1082, "torch.exp2"]], "expm1() (in module torch)": [[1083, "torch.expm1"]], "eye() (in module torch)": [[1084, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1085, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1086, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1087, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1088, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1089, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1090, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1091, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1092, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1093, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1094, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1095, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1096, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1097, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1098, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1099, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1100, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1101, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1102, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1103, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1104, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1105, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1106, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1107, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1108, "torch.fft.rfftn"]], "fix() (in module torch)": [[1109, "torch.fix"]], "flatten() (in module torch)": [[1110, "torch.flatten"]], "flip() (in module torch)": [[1111, "torch.flip"]], "fliplr() (in module torch)": [[1112, "torch.fliplr"]], "flipud() (in module torch)": [[1113, "torch.flipud"]], "float_power() (in module torch)": [[1114, "torch.float_power"]], "floor() (in module torch)": [[1115, "torch.floor"]], "floor_divide() (in module torch)": [[1116, "torch.floor_divide"]], "fmax() (in module torch)": [[1117, "torch.fmax"]], "fmin() (in module torch)": [[1118, "torch.fmin"]], "fmod() (in module torch)": [[1119, "torch.fmod"]], "frac() (in module torch)": [[1120, "torch.frac"]], "frexp() (in module torch)": [[1121, "torch.frexp"]], "from_dlpack() (in module torch)": [[1122, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1123, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1124, "torch.frombuffer"]], "full() (in module torch)": [[1125, "torch.full"]], "full_like() (in module torch)": [[1126, "torch.full_like"]], "functional_call() (in module torch.func)": [[1127, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1128, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1129, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1130, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1131, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1132, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1133, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1134, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1135, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1136, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1137, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1138, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1139, "torch.func.vmap"]], "gather() (in module torch)": [[1140, "torch.gather"]], "gcd() (in module torch)": [[1141, "torch.gcd"]], "ge() (in module torch)": [[1142, "torch.ge"]], "geqrf() (in module torch)": [[1143, "torch.geqrf"]], "ger() (in module torch)": [[1144, "torch.ger"]], "get_default_dtype() (in module torch)": [[1145, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1146, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1147, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1148, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1149, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1150, "torch.get_rng_state"]], "gradient() (in module torch)": [[1151, "torch.gradient"]], "greater() (in module torch)": [[1152, "torch.greater"]], "greater_equal() (in module torch)": [[1153, "torch.greater_equal"]], "gt() (in module torch)": [[1154, "torch.gt"]], "hamming_window() (in module torch)": [[1155, "torch.hamming_window"]], "hann_window() (in module torch)": [[1156, "torch.hann_window"]], "heaviside() (in module torch)": [[1157, "torch.heaviside"]], "histc() (in module torch)": [[1158, "torch.histc"]], "histogram() (in module torch)": [[1159, "torch.histogram"]], "histogramdd() (in module torch)": [[1160, "torch.histogramdd"]], "hsplit() (in module torch)": [[1161, "torch.hsplit"]], "hspmm() (in module torch)": [[1162, "torch.hspmm"]], "hstack() (in module torch)": [[1163, "torch.hstack"]], "hypot() (in module torch)": [[1164, "torch.hypot"]], "i0() (in module torch)": [[1165, "torch.i0"]], "igamma() (in module torch)": [[1166, "torch.igamma"]], "igammac() (in module torch)": [[1167, "torch.igammac"]], "imag() (in module torch)": [[1168, "torch.imag"]], "index_add() (in module torch)": [[1169, "torch.index_add"]], "index_copy() (in module torch)": [[1170, "torch.index_copy"]], "index_reduce() (in module torch)": [[1171, "torch.index_reduce"]], "index_select() (in module torch)": [[1172, "torch.index_select"]], "inference_mode (class in torch)": [[1173, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1174, "torch.initial_seed"]], "inner() (in module torch)": [[1175, "torch.inner"]], "inverse() (in module torch)": [[1176, "torch.inverse"]], "is_complex() (in module torch)": [[1177, "torch.is_complex"]], "is_conj() (in module torch)": [[1178, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1179, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1180, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1181, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1182, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1183, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1184, "torch.is_storage"]], "is_tensor() (in module torch)": [[1185, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1186, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1187, "torch.isclose"]], "isfinite() (in module torch)": [[1188, "torch.isfinite"]], "isin() (in module torch)": [[1189, "torch.isin"]], "isinf() (in module torch)": [[1190, "torch.isinf"]], "isnan() (in module torch)": [[1191, "torch.isnan"]], "isneginf() (in module torch)": [[1192, "torch.isneginf"]], "isposinf() (in module torch)": [[1193, "torch.isposinf"]], "isreal() (in module torch)": [[1194, "torch.isreal"]], "istft() (in module torch)": [[1195, "torch.istft"]], "attribute (class in torch.jit)": [[1196, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1196, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1196, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1196, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1196, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1197, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1197, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1197, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1197, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1198, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1198, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1198, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1198, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1198, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1198, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1199, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1200, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1201, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1202, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1203, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1204, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1205, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1206, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1207, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1208, "torch.jit.save"]], "script() (in module torch.jit)": [[1209, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1210, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1211, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1212, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1213, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1214, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1215, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1216, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1217, "torch.kaiser_window"]], "kron() (in module torch)": [[1218, "torch.kron"]], "kthvalue() (in module torch)": [[1219, "torch.kthvalue"]], "lcm() (in module torch)": [[1220, "torch.lcm"]], "ldexp() (in module torch)": [[1221, "torch.ldexp"]], "le() (in module torch)": [[1222, "torch.le"]], "lerp() (in module torch)": [[1223, "torch.lerp"]], "less() (in module torch)": [[1224, "torch.less"]], "less_equal() (in module torch)": [[1225, "torch.less_equal"]], "lgamma() (in module torch)": [[1226, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1227, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1228, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1229, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1230, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1231, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1232, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1233, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1234, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1235, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1236, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1237, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1238, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1239, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1240, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1241, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1242, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1243, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1244, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1245, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1246, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1247, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1248, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1249, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1250, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1251, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1252, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1253, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1254, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1255, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1256, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1257, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1258, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1259, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1260, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1261, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1262, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1263, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1264, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1265, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1266, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1267, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1268, "torch.linspace"]], "load() (in module torch)": [[1269, "torch.load"]], "lobpcg() (in module torch)": [[1270, "torch.lobpcg"]], "log() (in module torch)": [[1271, "torch.log"]], "log10() (in module torch)": [[1272, "torch.log10"]], "log1p() (in module torch)": [[1273, "torch.log1p"]], "log2() (in module torch)": [[1274, "torch.log2"]], "logaddexp() (in module torch)": [[1275, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1276, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1277, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1278, "torch.logdet"]], "logical_and() (in module torch)": [[1279, "torch.logical_and"]], "logical_not() (in module torch)": [[1280, "torch.logical_not"]], "logical_or() (in module torch)": [[1281, "torch.logical_or"]], "logical_xor() (in module torch)": [[1282, "torch.logical_xor"]], "logit() (in module torch)": [[1283, "torch.logit"]], "logspace() (in module torch)": [[1284, "torch.logspace"]], "logsumexp() (in module torch)": [[1285, "torch.logsumexp"]], "lt() (in module torch)": [[1286, "torch.lt"]], "lu() (in module torch)": [[1287, "torch.lu"]], "lu_solve() (in module torch)": [[1288, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1289, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1290, "torch.manual_seed"]], "masked_select() (in module torch)": [[1291, "torch.masked_select"]], "matmul() (in module torch)": [[1292, "torch.matmul"]], "matrix_exp() (in module torch)": [[1293, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1294, "torch.matrix_power"]], "max() (in module torch)": [[1295, "torch.max"]], "maximum() (in module torch)": [[1296, "torch.maximum"]], "mean() (in module torch)": [[1297, "torch.mean"]], "median() (in module torch)": [[1298, "torch.median"]], "meshgrid() (in module torch)": [[1299, "torch.meshgrid"]], "min() (in module torch)": [[1300, "torch.min"]], "minimum() (in module torch)": [[1301, "torch.minimum"]], "mm() (in module torch)": [[1302, "torch.mm"]], "mode() (in module torch)": [[1303, "torch.mode"]], "moveaxis() (in module torch)": [[1304, "torch.moveaxis"]], "movedim() (in module torch)": [[1305, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1306, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1307, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1308, "torch.mps.empty_cache"]], "get_rng_state() (in module torch.mps)": [[1309, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1310, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1311, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1312, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1313, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1314, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1315, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1316, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1317, "torch.mps.synchronize"]], "msort() (in module torch)": [[1318, "torch.msort"]], "mul() (in module torch)": [[1319, "torch.mul"]], "multinomial() (in module torch)": [[1320, "torch.multinomial"]], "multiply() (in module torch)": [[1321, "torch.multiply"]], "mv() (in module torch)": [[1322, "torch.mv"]], "mvlgamma() (in module torch)": [[1323, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1324, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1325, "torch.nanmean"]], "nanmedian() (in module torch)": [[1326, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1327, "torch.nanquantile"]], "nansum() (in module torch)": [[1328, "torch.nansum"]], "narrow() (in module torch)": [[1329, "torch.narrow"]], "narrow_copy() (in module torch)": [[1330, "torch.narrow_copy"]], "ne() (in module torch)": [[1331, "torch.ne"]], "neg() (in module torch)": [[1332, "torch.neg"]], "negative() (in module torch)": [[1333, "torch.negative"]], "nextafter() (in module torch)": [[1334, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1335, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1336, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1337, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1338, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1338, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1338, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1339, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1340, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1341, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1342, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1343, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1344, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1345, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1346, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1347, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1348, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1349, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1350, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1351, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1352, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1353, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1354, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1355, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1356, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1357, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1358, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1359, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1360, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1361, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1362, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1363, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1364, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1365, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1366, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1367, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1368, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1369, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1370, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1371, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1372, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1373, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1373, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1374, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1374, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1374, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1375, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1376, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1377, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1378, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1379, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1380, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1381, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1382, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1383, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1384, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1385, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1386, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1387, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1388, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1389, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1390, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1391, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1392, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1393, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1394, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1395, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1396, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1397, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1398, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1399, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1400, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1401, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1402, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1403, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1403, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1404, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1404, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1405, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1405, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1406, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1406, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1407, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1407, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1408, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1408, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1409, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1409, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1410, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1410, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1411, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1411, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1412, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1412, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1413, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1413, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1414, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1414, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1415, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1415, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1416, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1417, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1418, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1419, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1420, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1421, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1422, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1423, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1424, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1425, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1426, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1427, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1428, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1429, "torch.nn.Mish"]], "module (class in torch.nn)": [[1430, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1430, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1430, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1430, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1430, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1430, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1430, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1430, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1430, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1430, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1430, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1430, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1430, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1430, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1430, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1430, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1430, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1430, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1430, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1430, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1430, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1430, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1430, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1430, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1430, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1430, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1430, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1430, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1430, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1430, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1430, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1430, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1430, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1430, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1430, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1430, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1430, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1430, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1430, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1430, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1430, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1430, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1430, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1430, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1430, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1430, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1430, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1431, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1431, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1431, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1431, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1431, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1431, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1431, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1432, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1432, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1432, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1432, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1433, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1434, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1435, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1436, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1436, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1436, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1437, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1438, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1439, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1440, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1440, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1441, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1441, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1441, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1442, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1443, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1444, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1445, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1446, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1446, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1447, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1448, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1449, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1450, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1451, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1452, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1453, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1454, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1455, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1456, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1457, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1458, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1458, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1459, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1460, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1461, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1462, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1463, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1464, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1465, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1466, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1467, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1468, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1469, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1469, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1470, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1471, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1472, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1473, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1473, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1473, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1474, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1474, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1475, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1475, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1476, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1476, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1477, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1477, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1478, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1479, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1480, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1481, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1482, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1483, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1484, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1485, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1486, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1487, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1488, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1489, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1490, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1491, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1492, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1493, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1494, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1495, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1496, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1497, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1498, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1499, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1500, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1501, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1502, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1503, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1504, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1505, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1506, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1507, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1508, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1509, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1510, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1511, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1512, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1513, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1514, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1515, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1516, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1517, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1518, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1519, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1520, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1521, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1522, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1523, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1524, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1525, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1526, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1527, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1528, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1529, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1530, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1531, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1532, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1533, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1534, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1535, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1536, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1537, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1538, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1539, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1540, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1541, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1542, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1543, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1544, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1545, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1546, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1547, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1548, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1549, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1550, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1551, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1552, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1553, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1554, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1555, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1556, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1557, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1558, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1559, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1560, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1561, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1562, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1563, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1564, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1565, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1566, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1567, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1568, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1569, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1570, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1571, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1572, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1573, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1574, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1575, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1576, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1577, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1578, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1579, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1580, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1581, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1582, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1583, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1584, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1585, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1586, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1587, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1588, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1589, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1590, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1591, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1592, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1593, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1594, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1595, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1596, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1597, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1598, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1599, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1600, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1601, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1601, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1601, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1602, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1603, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1604, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1605, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1606, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1607, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1608, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1609, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1610, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1610, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1610, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1610, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1610, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1611, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1612, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1613, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1613, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1614, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1615, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1616, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1617, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1618, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1619, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1619, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1620, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1621, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1622, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1623, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1624, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1624, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1624, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1624, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1624, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1624, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1625, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1625, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1625, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1625, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1625, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1626, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1626, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1626, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1626, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1626, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1627, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1627, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1627, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1627, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1627, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1628, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1628, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1628, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1628, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1628, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1628, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1629, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1629, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1629, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1629, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1629, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1629, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1629, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1630, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1630, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1630, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1630, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1630, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1630, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1631, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1631, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1631, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1631, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1631, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1632, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1633, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1634, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1635, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1636, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1637, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1638, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1639, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1640, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1641, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1642, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1643, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1643, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1643, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1643, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1643, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1643, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1643, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1643, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1643, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1643, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1644, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1645, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1646, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1647, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1648, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1649, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1650, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1651, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1652, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1653, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1654, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1655, "torch.no_grad"]], "nonzero() (in module torch)": [[1656, "torch.nonzero"]], "norm() (in module torch)": [[1657, "torch.norm"]], "normal() (in module torch)": [[1658, "torch.normal"]], "not_equal() (in module torch)": [[1659, "torch.not_equal"]], "numel() (in module torch)": [[1660, "torch.numel"]], "ones() (in module torch)": [[1661, "torch.ones"]], "ones_like() (in module torch)": [[1662, "torch.ones_like"]], "exportoptions (class in torch.onnx)": [[1663, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1664, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1664, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1664, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1664, "torch.onnx.ExportOutput.diagnostic_context"]], "model_proto (torch.onnx.exportoutput property)": [[1664, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1664, "torch.onnx.ExportOutput.save"]], "exportoutputserializer (class in torch.onnx)": [[1665, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1665, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1666, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1666, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1666, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1666, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1666, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1666, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1666, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1666, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1667, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1667, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1668, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1669, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.load_state_dict"]], "register_step_post_hook() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1669, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1670, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.load_state_dict"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1670, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1671, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.load_state_dict"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1671, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1672, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1672, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1672, "torch.optim.Adam.load_state_dict"]], "register_step_post_hook() (torch.optim.adam method)": [[1672, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1672, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1672, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1672, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1672, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1673, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.load_state_dict"]], "register_step_post_hook() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1673, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1674, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.load_state_dict"]], "register_step_post_hook() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1674, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1675, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.load_state_dict"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1675, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1676, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1676, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1677, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1678, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1679, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1680, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1681, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1682, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1682, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1683, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1683, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1684, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1684, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1685, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.load_state_dict"]], "register_step_post_hook() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1685, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1686, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1686, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1687, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1687, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1687, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1687, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1687, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1688, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1688, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1688, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1688, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1688, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1689, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1689, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1689, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1689, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1689, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1690, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1691, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1691, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1691, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1691, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1692, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1692, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1692, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1692, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1692, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1693, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1693, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1693, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1693, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1693, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1694, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1694, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1694, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1694, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1694, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1695, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1695, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1695, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1695, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1695, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1696, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1696, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1696, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1696, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1696, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1697, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1697, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1697, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1697, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1697, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1698, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1698, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1698, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1698, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1698, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1699, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1700, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1700, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1700, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1700, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1700, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1701, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1701, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1701, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1701, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1701, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1702, "torch.orgqr"]], "ormqr() (in module torch)": [[1703, "torch.ormqr"]], "outer() (in module torch)": [[1704, "torch.outer"]], "pca_lowrank() (in module torch)": [[1705, "torch.pca_lowrank"]], "permute() (in module torch)": [[1706, "torch.permute"]], "pinverse() (in module torch)": [[1707, "torch.pinverse"]], "poisson() (in module torch)": [[1708, "torch.poisson"]], "polar() (in module torch)": [[1709, "torch.polar"]], "polygamma() (in module torch)": [[1710, "torch.polygamma"]], "positive() (in module torch)": [[1711, "torch.positive"]], "pow() (in module torch)": [[1712, "torch.pow"]], "prod() (in module torch)": [[1713, "torch.prod"]], "promote_types() (in module torch)": [[1714, "torch.promote_types"]], "qr() (in module torch)": [[1715, "torch.qr"]], "quantile() (in module torch)": [[1716, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1717, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1718, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1719, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1720, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1721, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1722, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1722, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1722, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1722, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1722, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1723, "torch.rad2deg"]], "rand() (in module torch)": [[1724, "torch.rand"]], "rand_like() (in module torch)": [[1725, "torch.rand_like"]], "randint() (in module torch)": [[1726, "torch.randint"]], "randint_like() (in module torch)": [[1727, "torch.randint_like"]], "randn() (in module torch)": [[1728, "torch.randn"]], "randn_like() (in module torch)": [[1729, "torch.randn_like"]], "randperm() (in module torch)": [[1730, "torch.randperm"]], "range() (in module torch)": [[1731, "torch.range"]], "ravel() (in module torch)": [[1732, "torch.ravel"]], "real() (in module torch)": [[1733, "torch.real"]], "reciprocal() (in module torch)": [[1734, "torch.reciprocal"]], "remainder() (in module torch)": [[1735, "torch.remainder"]], "renorm() (in module torch)": [[1736, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1737, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1738, "torch.reshape"]], "resolve_conj() (in module torch)": [[1739, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1740, "torch.resolve_neg"]], "result_type() (in module torch)": [[1741, "torch.result_type"]], "roll() (in module torch)": [[1742, "torch.roll"]], "rot90() (in module torch)": [[1743, "torch.rot90"]], "round() (in module torch)": [[1744, "torch.round"]], "row_stack() (in module torch)": [[1745, "torch.row_stack"]], "rsqrt() (in module torch)": [[1746, "torch.rsqrt"]], "save() (in module torch)": [[1747, "torch.save"]], "scatter() (in module torch)": [[1748, "torch.scatter"]], "scatter_add() (in module torch)": [[1749, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1750, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1751, "torch.searchsorted"]], "seed() (in module torch)": [[1752, "torch.seed"]], "select() (in module torch)": [[1753, "torch.select"]], "select_scatter() (in module torch)": [[1754, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1755, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1756, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1757, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1758, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1759, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1760, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1761, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1762, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1763, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1764, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1765, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1766, "torch.set_warn_always"]], "sgn() (in module torch)": [[1767, "torch.sgn"]], "sigmoid() (in module torch)": [[1768, "torch.sigmoid"]], "sign() (in module torch)": [[1769, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1770, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1771, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1772, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1773, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1774, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1775, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1776, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1777, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1778, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1779, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1780, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1781, "torch.signbit"]], "sin() (in module torch)": [[1782, "torch.sin"]], "sinc() (in module torch)": [[1783, "torch.sinc"]], "sinh() (in module torch)": [[1784, "torch.sinh"]], "slice_scatter() (in module torch)": [[1785, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1786, "torch.slogdet"]], "smm() (in module torch)": [[1787, "torch.smm"]], "softmax() (in module torch)": [[1788, "torch.softmax"]], "sort() (in module torch)": [[1789, "torch.sort"]], "addmm() (in module torch.sparse)": [[1790, "torch.sparse.addmm"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1791, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1791, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1791, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1791, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1792, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1793, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1794, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1795, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1796, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1797, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1798, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1799, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1800, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1801, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1802, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1803, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1804, "torch.split"]], "sqrt() (in module torch)": [[1805, "torch.sqrt"]], "square() (in module torch)": [[1806, "torch.square"]], "squeeze() (in module torch)": [[1807, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1808, "torch.sspaddmm"]], "stack() (in module torch)": [[1809, "torch.stack"]], "std() (in module torch)": [[1810, "torch.std"]], "std_mean() (in module torch)": [[1811, "torch.std_mean"]], "stft() (in module torch)": [[1812, "torch.stft"]], "sub() (in module torch)": [[1813, "torch.sub"]], "subtract() (in module torch)": [[1814, "torch.subtract"]], "sum() (in module torch)": [[1815, "torch.sum"]], "svd() (in module torch)": [[1816, "torch.svd"]], "svd_lowrank() (in module torch)": [[1817, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1818, "torch.swapaxes"]], "swapdims() (in module torch)": [[1819, "torch.swapdims"]], "sym_float() (in module torch)": [[1820, "torch.sym_float"]], "sym_int() (in module torch)": [[1821, "torch.sym_int"]], "sym_max() (in module torch)": [[1822, "torch.sym_max"]], "sym_min() (in module torch)": [[1823, "torch.sym_min"]], "sym_not() (in module torch)": [[1824, "torch.sym_not"]], "t() (in module torch)": [[1825, "torch.t"]], "take() (in module torch)": [[1826, "torch.take"]], "take_along_dim() (in module torch)": [[1827, "torch.take_along_dim"]], "tan() (in module torch)": [[1828, "torch.tan"]], "tanh() (in module torch)": [[1829, "torch.tanh"]], "tensor() (in module torch)": [[1830, "torch.tensor"]], "tensor_split() (in module torch)": [[1831, "torch.tensor_split"]], "tensordot() (in module torch)": [[1832, "torch.tensordot"]], "tile() (in module torch)": [[1833, "torch.tile"]], "topk() (in module torch)": [[1834, "torch.topk"]], "trace() (in module torch)": [[1835, "torch.trace"]], "transpose() (in module torch)": [[1836, "torch.transpose"]], "trapezoid() (in module torch)": [[1837, "torch.trapezoid"]], "trapz() (in module torch)": [[1838, "torch.trapz"]], "triangular_solve() (in module torch)": [[1839, "torch.triangular_solve"]], "tril() (in module torch)": [[1840, "torch.tril"]], "tril_indices() (in module torch)": [[1841, "torch.tril_indices"]], "triu() (in module torch)": [[1842, "torch.triu"]], "triu_indices() (in module torch)": [[1843, "torch.triu_indices"]], "true_divide() (in module torch)": [[1844, "torch.true_divide"]], "trunc() (in module torch)": [[1845, "torch.trunc"]], "unbind() (in module torch)": [[1846, "torch.unbind"]], "unflatten() (in module torch)": [[1847, "torch.unflatten"]], "unique() (in module torch)": [[1848, "torch.unique"]], "unique_consecutive() (in module torch)": [[1849, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1850, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1851, "torch.use_deterministic_algorithms"]], "vander() (in module torch)": [[1852, "torch.vander"]], "var() (in module torch)": [[1853, "torch.var"]], "var_mean() (in module torch)": [[1854, "torch.var_mean"]], "vdot() (in module torch)": [[1855, "torch.vdot"]], "view_as_complex() (in module torch)": [[1856, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1857, "torch.view_as_real"]], "vmap() (in module torch)": [[1858, "torch.vmap"]], "vsplit() (in module torch)": [[1859, "torch.vsplit"]], "vstack() (in module torch)": [[1860, "torch.vstack"]], "where() (in module torch)": [[1861, "torch.where"]], "xlogy() (in module torch)": [[1862, "torch.xlogy"]], "zeros() (in module torch)": [[1863, "torch.zeros"]], "zeros_like() (in module torch)": [[1864, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1865, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1865, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1865, "torch.hub.help"]], "list() (in module torch.hub)": [[1865, "torch.hub.list"]], "load() (in module torch.hub)": [[1865, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1865, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1865, "torch.hub.set_dir"]], "torch.hub": [[1865, "module-torch.hub"]], "pytorch_jit": [[1868, "envvar-PYTORCH_JIT"]], "environment variable": [[1868, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1868, "torch.jit.export"]], "torch.jit": [[1868, "module-torch.jit"]], "torch.jit.mobile": [[1868, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1869, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1870, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1870, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1873, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1874, "module-torch.utils.jit"]], "library (class in torch.library)": [[1875, "torch.library.Library"]], "define() (torch.library.library method)": [[1875, "torch.library.Library.define"]], "impl() (torch.library.library method)": [[1875, "torch.library.Library.impl"]], "torch.linalg": [[1876, "module-torch.linalg"]], "torch._logging": [[1877, "module-torch._logging"]], "torch.masked": [[1878, "module-torch.masked"]], "torch.masked.maskedtensor": [[1878, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1879, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1880, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1880, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1881, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1881, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1881, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1881, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1881, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1881, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1881, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1881, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1881, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1881, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1881, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1881, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1881, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1881, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1881, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1881, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1881, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1881, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1881, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1881, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1881, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1882, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1883, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1883, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1883, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1883, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1883, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1883, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1883, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1885, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1885, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1885, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1885, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1885, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1885, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1886, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1886, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1886, "torch.nested.to_padded_tensor"]], "torch.nested": [[1886, "module-torch.nested"]], "torch.nn": [[1887, "module-torch.nn"]], "torch.nn.backends": [[1887, "module-torch.nn.backends"]], "torch.nn.modules": [[1887, "module-torch.nn.modules"]], "torch.nn.parallel": [[1887, "module-torch.nn.parallel"]], "torch.nn.utils": [[1887, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1887, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1889, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1889, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1889, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1889, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1889, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1889, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1889, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1889, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1889, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1889, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1889, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1889, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1889, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1889, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1889, "torch.nn.init.zeros_"]], "register_package() (in module torch.serialization)": [[1907, "torch.serialization.register_package"]], "disable_log() (in module torch.onnx)": [[1909, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1909, "torch.onnx.dynamo_export"]], "enable_log() (in module torch.onnx)": [[1909, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1909, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1909, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1909, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1909, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1909, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1909, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1909, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1909, "torch.onnx.unregister_custom_op_symbolic"]], "exportdiagnostic (class in torch.onnx._internal.diagnostics)": [[1910, "torch.onnx._internal.diagnostics.ExportDiagnostic"]], "record_cpp_call_stack() (torch.onnx._internal.diagnostics.exportdiagnostic method)": [[1910, "torch.onnx._internal.diagnostics.ExportDiagnostic.record_cpp_call_stack"]], "torch.onnx._internal.diagnostics": [[1910, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1912, "torch.optim.Optimizer"]], "torch.optim": [[1912, "module-torch.optim"]], "directory (class in torch.package)": [[1913, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1913, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1913, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1913, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1913, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1913, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1913, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1913, "torch.package.PackageExporter.save_text"]], "torch.package": [[1913, "module-torch.package"]], "torch.package.analyze": [[1913, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1914, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1914, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1914, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1914, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1914, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1914, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1915, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1915, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1915, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1915, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1915, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1915, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1915, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1915, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1915, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1915, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1915, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1915, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1915, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1915, "module-torch.profiler"]], "torch.ao": [[1916, "module-torch.ao"]], "torch.ao.nn": [[1916, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1916, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1916, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1916, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1916, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1916, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1916, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1916, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1916, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1916, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1916, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1916, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1916, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1916, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1916, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1916, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1916, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1919, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1919, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1919, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1919, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1919, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1919, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1919, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1919, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1919, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1919, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1919, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1919, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1919, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1919, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1919, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1919, "module-torch.ao.nn.quantized.modules"]], "torch.nn.intrinsic": [[1919, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1919, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1919, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1919, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1919, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1919, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1919, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1919, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1919, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1919, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1919, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1919, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1919, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1919, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1919, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1919, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1919, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1919, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1919, "module-torch.quantization"]], "torch.quantization.fx": [[1919, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1920, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1920, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1920, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1920, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1920, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1920, "torch.random.set_rng_state"]], "torch.random": [[1920, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1921, "torch.distributed.rpc.BackendType"]], "rref (class in torch.distributed.rpc)": [[1921, "torch.distributed.rpc.RRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1921, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1921, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1921, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1921, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1921, "torch.distributed.autograd.backward"]], "context (class in torch.distributed.autograd)": [[1921, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1921, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1921, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1921, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1921, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.init_rpc"]], "name (torch.distributed.rpc.workerinfo property)": [[1921, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "remote() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1921, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1921, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1921, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1921, "torch.distributed.rpc.shutdown"]], "torch.distributed.autograd": [[1921, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1921, "module-torch.distributed.rpc"]], "torch.signal": [[1924, "module-torch.signal"]], "torch.signal.windows": [[1924, "module-torch.signal.windows"]], "torch.sparse": [[1925, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1926, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1926, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1926, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1926, "torch.special.digamma"]], "entr() (in module torch.special)": [[1926, "torch.special.entr"]], "erf() (in module torch.special)": [[1926, "torch.special.erf"]], "erfc() (in module torch.special)": [[1926, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1926, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1926, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1926, "torch.special.exp2"]], "expit() (in module torch.special)": [[1926, "torch.special.expit"]], "expm1() (in module torch.special)": [[1926, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1926, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1926, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1926, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1926, "torch.special.i0"]], "i0e() (in module torch.special)": [[1926, "torch.special.i0e"]], "i1() (in module torch.special)": [[1926, "torch.special.i1"]], "i1e() (in module torch.special)": [[1926, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1926, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1926, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1926, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1926, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1926, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1926, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1926, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1926, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1926, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1926, "torch.special.psi"]], "round() (in module torch.special)": [[1926, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1926, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1926, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1926, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1926, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1926, "torch.special.spherical_bessel_j0"]], "torch.special": [[1926, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1926, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1926, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1926, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1927, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1927, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1927, "torch.ByteStorage"]], "charstorage (class in torch)": [[1927, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1927, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1927, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1927, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1927, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1927, "torch.HalfStorage"]], "intstorage (class in torch)": [[1927, "torch.IntStorage"]], "longstorage (class in torch)": [[1927, "torch.LongStorage"]], "qint32storage (class in torch)": [[1927, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1927, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1927, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1927, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1927, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1927, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1927, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1927, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1927, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1927, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1927, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1927, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1927, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1927, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1927, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1927, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1927, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1927, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1927, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1927, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1927, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1927, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1927, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1927, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1927, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1927, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1927, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1927, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1927, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1927, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1927, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1927, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1927, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1927, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1927, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1927, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1927, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1927, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1927, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1927, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1927, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1927, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1927, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1927, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1927, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1927, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1927, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1927, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1927, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[1927, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[1927, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1927, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1927, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[1927, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[1927, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[1927, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1927, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1927, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1927, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1927, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1927, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1927, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1927, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1927, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1927, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1927, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1927, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1927, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1927, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1927, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1927, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1927, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1928, "torch.device"]], "dtype (class in torch)": [[1928, "torch.dtype"]], "layout (class in torch)": [[1928, "torch.layout"]], "memory_format (class in torch)": [[1928, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1930, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1930, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1931, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1931, "torch.Tensor.T"]], "tensor (class in torch)": [[1931, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1931, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1931, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1932, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1932, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1932, "torch.testing.make_tensor"]], "torch.testing": [[1932, "module-torch.testing"]], "symbool (class in torch)": [[1933, "torch.SymBool"]], "symfloat (class in torch)": [[1933, "torch.SymFloat"]], "symint (class in torch)": [[1933, "torch.SymInt"]], "tag (class in torch)": [[1933, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1933, "torch.torch.default_generator"]], "name (torch.tag property)": [[1933, "torch.Tag.name"]], "torch": [[1933, "module-torch"]], "torch.contrib": [[1933, "module-torch.contrib"]], "torch.utils": [[1933, "module-torch.utils"]], "torch.utils.backcompat": [[1933, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1933, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1933, "module-torch.utils.model_dump"]], "torch.utils.viz": [[1933, "module-torch.utils.viz"]], "logger (class in torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1934, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1934, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1934, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1934, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1934, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1934, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1935, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1935, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1935, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1935, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1935, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1935, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1935, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1935, "module-torch.ao.ns._numeric_suite_fx"]], "get_ignored_functions() (in module torch.overrides)": [[1936, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1936, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1936, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1936, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1936, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1936, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1936, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1936, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1936, "torch.overrides.wrap_torch_function"]], "torch.finfo (class in torch)": [[1937, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1937, "torch.torch.iinfo"]]}})