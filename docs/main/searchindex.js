Search.setIndex({"docnames": ["_dynamo", "amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "compile/custom-backends", "compile/deep-dive", "compile/dynamic-shapes", "compile/fake-tensor", "compile/faq", "compile/generated/torch.compile", "compile/get-started", "compile/guards-overview", "compile/index", "compile/nn-module", "compile/performance-dashboard", "compile/technical-overview", "compile/torchfunc-and-torchcompile", "compile/transformations", "compile/troubleshooting", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.set_multithreading_enabled", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "ir", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "type_info"], "filenames": ["_dynamo.rst", "amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "compile/custom-backends.rst", "compile/deep-dive.rst", "compile/dynamic-shapes.rst", "compile/fake-tensor.rst", "compile/faq.rst", "compile/generated/torch.compile.rst", "compile/get-started.rst", "compile/guards-overview.rst", "compile/index.rst", "compile/nn-module.rst", "compile/performance-dashboard.rst", "compile/technical-overview.rst", "compile/torchfunc-and-torchcompile.rst", "compile/transformations.rst", "compile/troubleshooting.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose.md", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success.md", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure.md", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd.md", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid.md", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node.md", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference.md", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.set_multithreading_enabled.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "ir.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.overrides.rst", "type_info.rst"], "titles": ["torch._dynamo", "Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Custom Backends", "TorchDynamo Deeper Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "torch.compile", "Getting Started", "Guards Overview", "torch.compile", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Technical Overview", "torch.func interaction with torch.compile", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "DIAGSYS0001:arg-format-too-verbose", "FXE0001:fx-tracer-success", "FXE0002:fx-tracer-failure", "FXE0003:fx-frontend-aotautograd", "FXE0004:fx-pass-convert-neg-to-sigmoid", "FXE0005:fx-ir-add-node", "FXE0006:atenlib-symbolic-function", "FXE0007:atenlib-fx-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0009:fx-frontend-dynamo-make-fx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "POE0001:node-missing-onnx-shape-inference", "POE0002:missing-custom-symbolic-function", "POE0003:missing-standard-symbolic-function", "POE0004:operator-supported-in-newer-opset-version", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "set_multithreading_enabled", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "IRs", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "Type Info"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 80, 81, 82, 117, 148, 152, 193, 194, 204, 207, 219, 220, 221, 252, 257, 286, 287, 310, 318, 320, 332, 334, 337, 349, 441, 442, 443, 444, 445, 454, 482, 483, 488, 490, 491, 492, 493, 494, 495, 498, 499, 508, 510, 512, 518, 550, 560, 577, 578, 579, 581, 582, 583, 597, 598, 608, 611, 612, 674, 678, 680, 683, 687, 688, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 729, 730, 731, 738, 742, 743, 744, 745, 746, 747, 748, 749, 751, 753, 754, 769, 770, 771, 772, 773, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 793, 794, 796, 804, 805, 806, 807, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 848, 853, 855, 856, 868, 869, 870, 871, 872, 879, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 907, 908, 911, 914, 915, 918, 920, 923, 927, 928, 935, 937, 938, 941, 942, 944, 952, 953, 955, 960, 961, 962, 963, 964, 966, 967, 968, 971, 982, 984, 987, 988, 989, 991, 992, 995, 996, 997, 998, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1013, 1016, 1017, 1018, 1024, 1025, 1027, 1028, 1029, 1033, 1034, 1035, 1041, 1042, 1043, 1048, 1050, 1051, 1055, 1058, 1059, 1060, 1064, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1111, 1113, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1130, 1132, 1133, 1134, 1140, 1144, 1150, 1152, 1162, 1174, 1184, 1185, 1187, 1188, 1190, 1192, 1193, 1194, 1196, 1197, 1198, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1262, 1264, 1267, 1276, 1277, 1281, 1284, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1300, 1301, 1311, 1314, 1315, 1316, 1317, 1319, 1327, 1331, 1335, 1336, 1337, 1338, 1339, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1371, 1372, 1374, 1379, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1406, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1422, 1425, 1426, 1429, 1431, 1434, 1435, 1447, 1450, 1452, 1455, 1458, 1464, 1465, 1466, 1467, 1470, 1471, 1472, 1473, 1483, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1513, 1514, 1518, 1520, 1522, 1529, 1535, 1537, 1542, 1543, 1544, 1554, 1556, 1558, 1568, 1574, 1575, 1583, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1632, 1633, 1634, 1635, 1636, 1639, 1640, 1641, 1643, 1644, 1646, 1647, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1683, 1684, 1686, 1688, 1690, 1692, 1693, 1694, 1698, 1702, 1704, 1711, 1715, 1720, 1724, 1726, 1733, 1740, 1742, 1743, 1744, 1746, 1747, 1748, 1750, 1753, 1755, 1756, 1774, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1797, 1799, 1800, 1801, 1804, 1805, 1807, 1808, 1814, 1816, 1820, 1822, 1826, 1828, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926], "modul": [0, 1, 2, 4, 6, 7, 9, 12, 15, 16, 17, 20, 24, 25, 26, 27, 29, 32, 36, 38, 40, 42, 43, 47, 49, 52, 55, 56, 60, 61, 63, 483, 674, 680, 683, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 732, 733, 734, 739, 740, 741, 750, 755, 756, 757, 758, 759, 782, 783, 784, 785, 786, 787, 791, 793, 794, 796, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 832, 833, 834, 848, 851, 852, 853, 854, 855, 856, 858, 907, 908, 915, 927, 947, 1006, 1116, 1125, 1126, 1128, 1162, 1185, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1202, 1203, 1204, 1258, 1281, 1291, 1327, 1331, 1337, 1338, 1339, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1372, 1374, 1382, 1383, 1384, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1420, 1421, 1429, 1430, 1435, 1447, 1452, 1458, 1462, 1509, 1510, 1583, 1590, 1599, 1600, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1635, 1639, 1640, 1641, 1643, 1675, 1736, 1780, 1847, 1854, 1855, 1861, 1866, 1868, 1870, 1872, 1874, 1875, 1878, 1882, 1883, 1884, 1887, 1890, 1892, 1893, 1895, 1897, 1898, 1901, 1903, 1904, 1907, 1908, 1910, 1913, 1914, 1915, 1919, 1922, 1923, 1924, 1925], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 80, 81, 82, 85, 86, 95, 148, 151, 152, 153, 168, 170, 173, 176, 177, 178, 188, 189, 193, 194, 204, 206, 207, 216, 221, 237, 251, 252, 264, 287, 294, 308, 310, 312, 316, 318, 320, 322, 325, 326, 327, 328, 329, 330, 332, 333, 335, 337, 338, 339, 340, 349, 390, 397, 399, 403, 444, 454, 467, 468, 477, 479, 482, 483, 488, 490, 491, 492, 493, 494, 495, 498, 499, 508, 510, 512, 515, 518, 519, 531, 537, 538, 539, 551, 554, 574, 575, 577, 578, 579, 581, 582, 583, 597, 598, 601, 608, 611, 612, 614, 618, 674, 675, 677, 678, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 717, 718, 719, 720, 721, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 762, 763, 766, 767, 768, 769, 770, 771, 772, 773, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 793, 795, 796, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 818, 820, 821, 827, 832, 833, 834, 851, 852, 853, 855, 856, 859, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 907, 908, 911, 914, 915, 916, 917, 918, 920, 923, 925, 927, 928, 931, 932, 933, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 972, 973, 975, 977, 980, 981, 982, 984, 988, 989, 992, 995, 996, 997, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1047, 1048, 1049, 1050, 1051, 1052, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1070, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1140, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1161, 1162, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1206, 1207, 1208, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1269, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1307, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1450, 1451, 1452, 1454, 1455, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1483, 1486, 1487, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1529, 1530, 1535, 1537, 1539, 1540, 1542, 1543, 1544, 1553, 1554, 1556, 1558, 1559, 1560, 1561, 1562, 1568, 1571, 1574, 1575, 1583, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1632, 1633, 1634, 1635, 1636, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1697, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1711, 1713, 1714, 1715, 1717, 1718, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1735, 1736, 1740, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1799, 1800, 1801, 1804, 1805, 1806, 1807, 1808, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1866, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926], "an": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 29, 30, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 81, 86, 148, 152, 188, 219, 239, 251, 310, 312, 318, 320, 325, 332, 508, 510, 512, 531, 539, 554, 601, 608, 611, 674, 681, 682, 729, 735, 736, 737, 750, 754, 759, 773, 779, 781, 783, 786, 790, 809, 811, 817, 820, 848, 855, 856, 858, 872, 873, 874, 883, 885, 886, 887, 889, 891, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 909, 910, 911, 918, 934, 944, 947, 952, 953, 955, 961, 963, 964, 966, 973, 974, 975, 976, 977, 995, 996, 1003, 1004, 1006, 1018, 1020, 1030, 1034, 1035, 1045, 1058, 1060, 1062, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1100, 1103, 1111, 1113, 1116, 1117, 1120, 1121, 1122, 1124, 1126, 1128, 1129, 1132, 1140, 1148, 1149, 1150, 1184, 1185, 1187, 1190, 1191, 1194, 1197, 1198, 1200, 1202, 1203, 1204, 1205, 1216, 1217, 1222, 1223, 1228, 1230, 1232, 1235, 1236, 1240, 1243, 1245, 1248, 1249, 1256, 1258, 1259, 1276, 1278, 1281, 1287, 1304, 1309, 1318, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1371, 1379, 1383, 1384, 1387, 1388, 1389, 1391, 1401, 1402, 1403, 1404, 1406, 1407, 1409, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1438, 1447, 1450, 1452, 1453, 1454, 1458, 1463, 1465, 1466, 1467, 1470, 1472, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1493, 1494, 1495, 1496, 1497, 1498, 1503, 1509, 1510, 1512, 1513, 1514, 1518, 1529, 1536, 1537, 1539, 1540, 1542, 1543, 1544, 1568, 1572, 1587, 1589, 1590, 1593, 1599, 1603, 1604, 1605, 1606, 1609, 1610, 1611, 1618, 1635, 1642, 1644, 1646, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1704, 1709, 1710, 1711, 1730, 1732, 1736, 1744, 1747, 1756, 1762, 1782, 1785, 1786, 1790, 1793, 1801, 1805, 1819, 1820, 1836, 1837, 1838, 1840, 1845, 1846, 1847, 1848, 1853, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926], "earli": [0, 15, 19, 32, 36, 46, 67, 1358, 1359, 1360, 1364, 1855, 1905, 1906, 1923, 1924], "prototyp": [0, 32, 38, 674, 895, 897, 901, 902, 903, 1196, 1855, 1866, 1867, 1870, 1874, 1875, 1891, 1896, 1908, 1910, 1917, 1923, 1924], "subject": [0, 3, 4, 14, 20, 22, 27, 32, 38, 42, 43, 60, 67, 68, 859, 1568, 1599, 1860, 1873, 1874, 1880, 1885, 1898, 1899, 1903, 1904, 1905, 1906, 1910, 1917, 1922, 1923, 1924], "chang": [0, 1, 2, 3, 4, 8, 14, 15, 18, 19, 20, 21, 22, 26, 27, 32, 36, 38, 40, 42, 43, 44, 46, 54, 60, 61, 64, 65, 67, 68, 137, 219, 251, 318, 454, 491, 494, 512, 515, 550, 611, 674, 813, 871, 902, 903, 952, 953, 960, 961, 962, 971, 982, 984, 995, 996, 1003, 1004, 1006, 1048, 1096, 1116, 1134, 1140, 1161, 1184, 1187, 1197, 1198, 1217, 1228, 1230, 1231, 1232, 1235, 1248, 1288, 1359, 1362, 1380, 1389, 1419, 1450, 1471, 1483, 1518, 1542, 1543, 1544, 1568, 1590, 1591, 1599, 1601, 1602, 1608, 1611, 1612, 1641, 1645, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1680, 1683, 1684, 1686, 1688, 1690, 1704, 1744, 1748, 1785, 1796, 1799, 1800, 1801, 1825, 1842, 1843, 1854, 1855, 1857, 1866, 1867, 1868, 1870, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1889, 1891, 1894, 1896, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1910, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924], "allow_in_graph": [0, 1855], "fn": [0, 2, 12, 18, 19, 20, 25, 26, 46, 47, 48, 52, 57, 60, 68, 907, 908, 1118, 1124, 1128, 1187, 1188, 1199, 1204, 1419, 1847, 1857, 1859, 1860, 1864, 1872, 1880, 1890, 1910], "sourc": [0, 1, 2, 3, 4, 5, 6, 10, 16, 17, 19, 26, 28, 29, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 57, 60, 67, 68, 148, 194, 207, 309, 310, 318, 337, 348, 393, 398, 399, 412, 413, 449, 467, 483, 508, 510, 512, 515, 518, 541, 550, 551, 553, 580, 597, 600, 603, 604, 618, 674, 689, 690, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 867, 880, 881, 882, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 913, 914, 926, 928, 929, 933, 935, 937, 947, 948, 961, 962, 963, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1060, 1064, 1111, 1113, 1129, 1135, 1136, 1139, 1158, 1159, 1160, 1162, 1163, 1168, 1173, 1174, 1175, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1258, 1259, 1279, 1288, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1483, 1484, 1488, 1490, 1491, 1492, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1515, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1536, 1537, 1539, 1540, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1561, 1563, 1564, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1578, 1579, 1580, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1711, 1736, 1741, 1744, 1745, 1746, 1747, 1748, 1750, 1753, 1754, 1755, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1780, 1786, 1793, 1801, 1806, 1809, 1810, 1811, 1812, 1813, 1821, 1840, 1854, 1857, 1858, 1859, 1864, 1866, 1867, 1868, 1869, 1870, 1872, 1874, 1875, 1878, 1887, 1889, 1890, 1894, 1898, 1899, 1901, 1903, 1904, 1905, 1909, 1910, 1911, 1916, 1919, 1921, 1922, 1923, 1924, 1925], "custom": [0, 1, 2, 4, 6, 15, 17, 19, 23, 29, 30, 35, 38, 39, 40, 41, 42, 43, 48, 51, 52, 54, 60, 80, 81, 494, 787, 791, 808, 809, 810, 811, 832, 834, 853, 854, 855, 856, 893, 947, 962, 971, 1035, 1187, 1419, 1462, 1467, 1468, 1613, 1622, 1639, 1680, 1855, 1861, 1864, 1866, 1872, 1873, 1880, 1890, 1895, 1896, 1897, 1899, 1908, 1909, 1923], "which": [0, 1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 35, 36, 39, 40, 42, 43, 44, 45, 46, 48, 53, 54, 55, 56, 57, 60, 64, 65, 67, 68, 86, 148, 286, 310, 312, 314, 316, 318, 332, 468, 482, 483, 494, 508, 510, 512, 531, 554, 598, 601, 611, 618, 678, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 754, 758, 775, 784, 785, 791, 793, 813, 817, 820, 832, 848, 851, 852, 853, 855, 870, 874, 879, 886, 887, 888, 889, 895, 896, 897, 898, 899, 900, 901, 907, 908, 911, 918, 931, 934, 937, 941, 947, 957, 958, 959, 960, 961, 966, 973, 974, 975, 976, 977, 988, 989, 990, 1017, 1019, 1024, 1025, 1036, 1038, 1043, 1047, 1048, 1049, 1050, 1051, 1060, 1076, 1081, 1084, 1088, 1091, 1094, 1099, 1100, 1101, 1102, 1103, 1108, 1111, 1116, 1117, 1120, 1121, 1122, 1123, 1124, 1128, 1129, 1132, 1149, 1161, 1172, 1178, 1184, 1185, 1187, 1188, 1190, 1196, 1197, 1198, 1202, 1219, 1222, 1223, 1232, 1236, 1238, 1239, 1242, 1243, 1247, 1249, 1250, 1252, 1255, 1256, 1258, 1264, 1280, 1287, 1292, 1309, 1315, 1318, 1319, 1325, 1326, 1327, 1329, 1330, 1331, 1333, 1334, 1337, 1338, 1339, 1342, 1348, 1349, 1351, 1352, 1355, 1356, 1363, 1370, 1371, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1405, 1409, 1413, 1414, 1415, 1416, 1417, 1419, 1422, 1424, 1425, 1447, 1450, 1452, 1454, 1458, 1467, 1468, 1500, 1517, 1518, 1520, 1530, 1537, 1555, 1556, 1574, 1575, 1583, 1590, 1599, 1606, 1608, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1641, 1643, 1646, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1706, 1720, 1724, 1726, 1727, 1731, 1733, 1740, 1744, 1753, 1755, 1773, 1778, 1781, 1782, 1784, 1785, 1793, 1796, 1820, 1825, 1826, 1829, 1830, 1831, 1832, 1836, 1837, 1839, 1840, 1847, 1854, 1857, 1859, 1860, 1862, 1866, 1867, 1868, 1869, 1870, 1872, 1874, 1875, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1895, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926], "function": [0, 1, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 45, 46, 48, 52, 53, 55, 56, 60, 63, 65, 67, 81, 86, 117, 148, 193, 257, 286, 295, 318, 483, 488, 491, 512, 535, 550, 674, 683, 687, 688, 692, 693, 742, 751, 752, 754, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 784, 785, 786, 787, 791, 792, 794, 808, 809, 810, 811, 818, 820, 832, 835, 848, 851, 853, 855, 856, 857, 871, 872, 887, 888, 889, 890, 901, 902, 903, 907, 908, 911, 914, 916, 925, 927, 935, 937, 941, 944, 947, 952, 953, 960, 961, 962, 964, 966, 968, 971, 988, 989, 992, 997, 998, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1016, 1017, 1024, 1025, 1027, 1028, 1029, 1033, 1043, 1048, 1050, 1051, 1058, 1060, 1064, 1076, 1077, 1079, 1099, 1103, 1106, 1107, 1108, 1111, 1113, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1132, 1133, 1140, 1144, 1145, 1146, 1148, 1150, 1158, 1159, 1160, 1162, 1174, 1184, 1185, 1186, 1187, 1188, 1190, 1192, 1193, 1197, 1198, 1199, 1200, 1202, 1204, 1206, 1207, 1208, 1210, 1215, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1238, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1262, 1264, 1273, 1276, 1277, 1281, 1284, 1287, 1289, 1291, 1292, 1293, 1311, 1314, 1315, 1331, 1335, 1341, 1342, 1344, 1345, 1346, 1353, 1357, 1361, 1364, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1379, 1385, 1387, 1388, 1389, 1390, 1405, 1408, 1409, 1411, 1418, 1419, 1424, 1425, 1427, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1464, 1466, 1467, 1468, 1470, 1472, 1474, 1475, 1476, 1591, 1595, 1596, 1599, 1606, 1607, 1611, 1622, 1632, 1633, 1634, 1636, 1639, 1640, 1641, 1644, 1646, 1647, 1651, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1669, 1671, 1672, 1673, 1674, 1676, 1679, 1680, 1682, 1685, 1686, 1687, 1692, 1693, 1694, 1698, 1704, 1711, 1715, 1720, 1733, 1742, 1743, 1744, 1747, 1750, 1756, 1764, 1768, 1769, 1774, 1777, 1779, 1780, 1781, 1782, 1784, 1790, 1797, 1801, 1807, 1808, 1816, 1820, 1822, 1826, 1836, 1837, 1838, 1840, 1844, 1845, 1846, 1847, 1848, 1853, 1854, 1855, 1856, 1861, 1864, 1866, 1869, 1870, 1872, 1874, 1878, 1881, 1883, 1884, 1885, 1887, 1890, 1891, 1894, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1917, 1919, 1921, 1922, 1923, 1924], "torchdynamo": [0, 9, 12, 14, 17, 18, 19, 23, 674, 947, 1652, 1855, 1866], "includ": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 15, 16, 18, 21, 22, 26, 29, 30, 35, 36, 38, 40, 52, 55, 56, 60, 68, 81, 318, 512, 577, 762, 763, 853, 855, 1088, 1090, 1148, 1185, 1187, 1188, 1216, 1295, 1296, 1332, 1333, 1334, 1340, 1342, 1356, 1365, 1373, 1406, 1415, 1416, 1417, 1419, 1425, 1463, 1464, 1465, 1466, 1469, 1485, 1486, 1487, 1502, 1515, 1535, 1599, 1633, 1634, 1636, 1769, 1829, 1830, 1831, 1832, 1854, 1857, 1859, 1860, 1867, 1868, 1870, 1872, 1880, 1882, 1883, 1887, 1890, 1891, 1896, 1898, 1904, 1905, 1910, 1912, 1919, 1922, 1925], "gener": [0, 2, 3, 4, 8, 9, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 29, 35, 36, 38, 44, 48, 49, 56, 60, 61, 62, 151, 152, 171, 255, 283, 374, 417, 450, 477, 602, 674, 903, 917, 992, 995, 1003, 1004, 1007, 1008, 1027, 1028, 1030, 1031, 1032, 1060, 1082, 1083, 1117, 1128, 1139, 1144, 1163, 1191, 1196, 1207, 1218, 1223, 1232, 1249, 1250, 1254, 1259, 1279, 1287, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1309, 1355, 1366, 1380, 1462, 1470, 1471, 1483, 1590, 1607, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1640, 1647, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1692, 1694, 1697, 1711, 1713, 1715, 1716, 1717, 1719, 1741, 1754, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1806, 1821, 1825, 1841, 1847, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1866, 1868, 1873, 1878, 1880, 1883, 1885, 1887, 1888, 1890, 1891, 1897, 1898, 1901, 1902, 1904, 1909, 1910, 1911, 1914, 1917, 1919, 1921, 1923, 1925], "graph": [0, 6, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 38, 40, 44, 60, 80, 81, 137, 148, 219, 220, 674, 741, 786, 787, 809, 810, 811, 817, 820, 887, 893, 901, 947, 961, 996, 1001, 1006, 1117, 1187, 1190, 1191, 1196, 1198, 1202, 1599, 1654, 1656, 1661, 1662, 1855, 1860, 1866, 1868, 1876, 1879, 1884, 1885, 1888, 1891, 1892, 1898, 1902, 1906, 1907, 1908, 1910, 1911, 1912, 1914, 1919, 1924], "similar": [0, 8, 10, 14, 15, 16, 19, 21, 26, 35, 38, 44, 52, 60, 65, 67, 68, 488, 510, 706, 707, 708, 709, 710, 711, 714, 724, 725, 726, 727, 739, 740, 750, 758, 796, 871, 886, 928, 933, 946, 1106, 1107, 1187, 1353, 1354, 1366, 1379, 1382, 1383, 1384, 1419, 1467, 1500, 1632, 1646, 1647, 1675, 1698, 1726, 1733, 1782, 1816, 1822, 1838, 1859, 1860, 1872, 1873, 1875, 1880, 1882, 1883, 1885, 1886, 1888, 1894, 1898, 1902, 1903, 1905, 1910, 1911, 1914, 1915, 1920, 1926], "fx": [0, 9, 12, 13, 14, 15, 16, 18, 19, 23, 25, 26, 80, 741, 809, 810, 811, 812, 854, 1117, 1855, 1899, 1906, 1907], "wrap": [0, 1, 2, 12, 16, 19, 23, 26, 30, 35, 36, 38, 42, 48, 57, 60, 64, 65, 68, 257, 784, 785, 964, 1117, 1187, 1202, 1356, 1419, 1458, 1594, 1599, 1609, 1635, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1857, 1858, 1860, 1867, 1879, 1880, 1883, 1884, 1885, 1886, 1891, 1897, 1898, 1903, 1904, 1905, 1910, 1911, 1922, 1924, 1925], "my_custom_funct": [0, 68], "optim": [0, 1, 2, 3, 8, 9, 12, 14, 16, 17, 19, 23, 26, 27, 29, 30, 36, 38, 39, 40, 44, 60, 68, 813, 902, 911, 947, 1060, 1126, 1187, 1191, 1196, 1198, 1202, 1203, 1242, 1259, 1337, 1338, 1339, 1355, 1362, 1382, 1383, 1384, 1419, 1422, 1423, 1424, 1425, 1451, 1458, 1466, 1568, 1590, 1599, 1606, 1611, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1855, 1857, 1859, 1868, 1874, 1878, 1882, 1883, 1884, 1885, 1887, 1888, 1891, 1893, 1898, 1904, 1905, 1914], "def": [0, 1, 2, 12, 14, 16, 17, 18, 19, 20, 24, 25, 26, 35, 36, 38, 39, 40, 44, 46, 47, 48, 52, 53, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 395, 786, 787, 855, 856, 884, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 947, 1064, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1126, 1127, 1128, 1162, 1185, 1187, 1188, 1190, 1191, 1192, 1193, 1197, 1198, 1201, 1202, 1203, 1204, 1419, 1420, 1421, 1429, 1430, 1468, 1590, 1599, 1611, 1644, 1653, 1654, 1780, 1847, 1854, 1857, 1859, 1860, 1864, 1874, 1879, 1880, 1882, 1884, 1885, 1886, 1887, 1891, 1893, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1910, 1911, 1912, 1925], "x": [0, 1, 2, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 29, 35, 36, 38, 44, 46, 52, 60, 62, 63, 65, 66, 67, 68, 171, 251, 255, 283, 286, 308, 310, 312, 314, 318, 349, 374, 444, 479, 488, 494, 552, 554, 577, 601, 602, 611, 686, 752, 754, 764, 773, 774, 778, 779, 790, 793, 796, 814, 815, 855, 856, 872, 878, 880, 881, 882, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 929, 930, 931, 934, 935, 947, 952, 955, 958, 959, 1003, 1004, 1043, 1050, 1054, 1055, 1060, 1064, 1074, 1075, 1076, 1077, 1079, 1080, 1085, 1086, 1088, 1090, 1094, 1095, 1097, 1100, 1101, 1102, 1110, 1116, 1118, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1140, 1157, 1161, 1162, 1174, 1192, 1193, 1197, 1198, 1201, 1202, 1203, 1204, 1208, 1218, 1231, 1232, 1236, 1239, 1243, 1247, 1249, 1252, 1253, 1254, 1255, 1256, 1259, 1264, 1265, 1266, 1274, 1277, 1280, 1281, 1288, 1313, 1314, 1318, 1319, 1325, 1326, 1335, 1336, 1337, 1338, 1339, 1341, 1353, 1355, 1361, 1367, 1368, 1369, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1405, 1408, 1409, 1410, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1430, 1434, 1436, 1437, 1438, 1439, 1446, 1448, 1449, 1450, 1451, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1467, 1468, 1471, 1492, 1516, 1518, 1522, 1523, 1529, 1533, 1537, 1548, 1553, 1558, 1562, 1564, 1569, 1570, 1571, 1575, 1576, 1578, 1579, 1580, 1587, 1590, 1607, 1609, 1611, 1632, 1633, 1634, 1635, 1636, 1641, 1644, 1645, 1646, 1653, 1656, 1659, 1680, 1694, 1695, 1706, 1708, 1722, 1725, 1726, 1728, 1729, 1731, 1732, 1736, 1740, 1750, 1778, 1782, 1796, 1799, 1800, 1801, 1807, 1808, 1814, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1838, 1839, 1841, 1842, 1843, 1845, 1846, 1847, 1850, 1854, 1857, 1858, 1859, 1860, 1861, 1872, 1873, 1874, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1897, 1898, 1902, 1905, 1910, 1914, 1915, 1917, 1919, 1920, 1922, 1923, 1924], "add": [0, 1, 2, 4, 8, 12, 13, 14, 25, 26, 30, 31, 35, 38, 40, 42, 52, 55, 60, 66, 67, 68, 80, 96, 287, 310, 508, 510, 680, 681, 682, 685, 741, 742, 751, 784, 787, 832, 853, 855, 856, 976, 1006, 1017, 1060, 1117, 1187, 1198, 1327, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1395, 1396, 1397, 1398, 1399, 1400, 1419, 1421, 1425, 1426, 1430, 1433, 1520, 1561, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1797, 1854, 1856, 1857, 1858, 1859, 1860, 1864, 1868, 1870, 1873, 1875, 1879, 1881, 1882, 1885, 1886, 1889, 1890, 1891, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1914, 1917, 1918, 1919, 1923, 1924, 1925], "1": [0, 1, 2, 4, 12, 13, 14, 16, 18, 19, 25, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 58, 60, 64, 65, 66, 67, 68, 86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 134, 149, 150, 171, 189, 203, 206, 223, 225, 226, 227, 239, 251, 255, 260, 283, 286, 308, 309, 310, 312, 314, 318, 349, 374, 398, 399, 441, 443, 444, 450, 467, 477, 479, 483, 488, 491, 494, 508, 510, 512, 531, 532, 536, 538, 548, 549, 550, 552, 554, 555, 556, 557, 558, 575, 577, 578, 579, 581, 582, 601, 602, 609, 611, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 706, 707, 708, 709, 710, 711, 712, 713, 717, 718, 719, 720, 721, 724, 725, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 745, 746, 747, 750, 751, 752, 754, 764, 766, 767, 768, 769, 772, 776, 777, 779, 790, 802, 803, 813, 814, 815, 816, 819, 821, 849, 855, 856, 859, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 888, 891, 893, 894, 895, 896, 897, 898, 899, 900, 907, 908, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 945, 946, 948, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 966, 972, 1003, 1004, 1019, 1023, 1030, 1034, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1066, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1157, 1158, 1161, 1162, 1164, 1172, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1191, 1197, 1198, 1202, 1203, 1206, 1207, 1208, 1210, 1211, 1212, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1232, 1233, 1234, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1280, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1304, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1461, 1462, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1483, 1485, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1516, 1517, 1518, 1520, 1522, 1524, 1525, 1526, 1527, 1528, 1536, 1538, 1542, 1543, 1544, 1550, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1562, 1566, 1567, 1568, 1569, 1570, 1572, 1574, 1575, 1576, 1578, 1583, 1584, 1585, 1586, 1587, 1590, 1599, 1606, 1607, 1611, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1697, 1698, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1735, 1736, 1740, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1753, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1773, 1774, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1856, 1858, 1859, 1860, 1861, 1864, 1867, 1868, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1891, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1907, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926], "return": [0, 1, 2, 3, 4, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 53, 55, 57, 60, 61, 62, 64, 65, 66, 67, 68, 86, 117, 151, 153, 168, 170, 173, 176, 177, 178, 188, 189, 193, 194, 204, 206, 207, 214, 216, 217, 219, 230, 237, 239, 251, 257, 264, 286, 294, 308, 316, 320, 322, 323, 325, 326, 327, 328, 330, 334, 336, 338, 349, 374, 390, 431, 441, 442, 443, 444, 445, 454, 468, 469, 470, 471, 472, 474, 479, 483, 491, 492, 493, 508, 510, 519, 531, 537, 538, 550, 551, 552, 553, 554, 574, 575, 576, 577, 583, 597, 598, 601, 603, 607, 608, 611, 678, 686, 687, 689, 690, 691, 692, 693, 729, 760, 761, 764, 765, 769, 770, 771, 772, 775, 778, 785, 786, 787, 788, 808, 809, 810, 811, 830, 834, 835, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 867, 868, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 911, 912, 913, 916, 917, 918, 925, 926, 928, 931, 933, 935, 936, 937, 938, 939, 940, 941, 942, 944, 946, 947, 948, 952, 953, 955, 956, 957, 959, 960, 961, 963, 964, 966, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1054, 1060, 1061, 1062, 1063, 1064, 1065, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1096, 1099, 1100, 1101, 1102, 1103, 1104, 1108, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1143, 1144, 1145, 1147, 1148, 1149, 1153, 1157, 1161, 1162, 1163, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1211, 1212, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1295, 1296, 1298, 1304, 1309, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1323, 1327, 1328, 1329, 1330, 1335, 1336, 1353, 1354, 1355, 1356, 1363, 1367, 1368, 1379, 1385, 1386, 1409, 1410, 1411, 1412, 1413, 1414, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1429, 1430, 1433, 1447, 1450, 1451, 1452, 1453, 1454, 1458, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1488, 1490, 1491, 1492, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1536, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1561, 1563, 1564, 1566, 1568, 1569, 1571, 1572, 1573, 1574, 1575, 1581, 1583, 1584, 1585, 1586, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1603, 1605, 1606, 1607, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1653, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1694, 1695, 1697, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1733, 1735, 1740, 1741, 1742, 1743, 1749, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1778, 1780, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1800, 1801, 1804, 1805, 1806, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1823, 1824, 1825, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1843, 1845, 1846, 1847, 1850, 1852, 1853, 1854, 1857, 1861, 1864, 1868, 1869, 1870, 1872, 1874, 1875, 1878, 1879, 1880, 1882, 1883, 1885, 1886, 1888, 1889, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1926], "Will": [0, 11, 21, 38, 60, 68, 1790, 1859, 1874, 1898], "captur": [0, 2, 13, 14, 16, 19, 24, 26, 30, 68, 674, 961, 963, 995, 1001, 1006, 1190, 1661, 1662, 1857, 1861, 1866, 1885, 1886, 1889, 1898, 1902, 1905, 1924], "singl": [0, 3, 4, 6, 14, 15, 16, 18, 19, 20, 23, 25, 26, 29, 36, 38, 40, 42, 43, 44, 46, 48, 54, 55, 60, 61, 63, 64, 65, 66, 67, 68, 251, 674, 689, 690, 760, 761, 762, 763, 766, 767, 768, 808, 888, 895, 896, 897, 898, 899, 900, 901, 916, 925, 929, 955, 959, 1003, 1006, 1116, 1118, 1119, 1122, 1124, 1128, 1144, 1145, 1149, 1172, 1186, 1187, 1202, 1203, 1206, 1264, 1288, 1300, 1301, 1325, 1326, 1329, 1330, 1333, 1334, 1336, 1347, 1348, 1349, 1351, 1352, 1355, 1356, 1367, 1368, 1374, 1387, 1388, 1391, 1413, 1414, 1419, 1427, 1431, 1432, 1447, 1458, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1513, 1514, 1515, 1542, 1543, 1544, 1586, 1592, 1594, 1597, 1598, 1599, 1603, 1604, 1605, 1641, 1642, 1661, 1662, 1664, 1669, 1675, 1680, 1701, 1727, 1793, 1799, 1800, 1837, 1838, 1840, 1842, 1843, 1847, 1855, 1857, 1859, 1860, 1867, 1868, 1872, 1874, 1875, 1880, 1882, 1883, 1885, 1886, 1888, 1891, 1893, 1894, 1895, 1896, 1898, 1901, 1902, 1903, 1904, 1905, 1911, 1912, 1914, 1917, 1920, 1921, 1924], "contain": [0, 1, 2, 3, 4, 6, 12, 15, 19, 22, 25, 26, 27, 29, 30, 35, 38, 39, 42, 43, 44, 46, 48, 49, 53, 56, 60, 67, 68, 81, 86, 148, 152, 189, 193, 206, 287, 308, 310, 312, 316, 318, 467, 479, 538, 597, 601, 680, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 754, 808, 831, 835, 871, 886, 887, 895, 896, 897, 898, 899, 900, 901, 911, 915, 916, 917, 925, 927, 931, 954, 955, 959, 962, 973, 974, 975, 976, 977, 1006, 1060, 1094, 1095, 1097, 1103, 1123, 1124, 1127, 1128, 1144, 1145, 1148, 1149, 1157, 1161, 1178, 1185, 1187, 1188, 1193, 1194, 1197, 1202, 1203, 1206, 1217, 1223, 1224, 1225, 1226, 1228, 1230, 1232, 1233, 1249, 1258, 1276, 1280, 1287, 1309, 1315, 1327, 1336, 1355, 1356, 1362, 1363, 1366, 1371, 1372, 1374, 1379, 1389, 1390, 1411, 1419, 1420, 1421, 1426, 1429, 1434, 1436, 1447, 1451, 1458, 1470, 1501, 1509, 1510, 1512, 1583, 1590, 1593, 1594, 1599, 1607, 1608, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1639, 1640, 1643, 1645, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1694, 1697, 1722, 1736, 1740, 1800, 1801, 1805, 1821, 1828, 1830, 1832, 1837, 1838, 1843, 1847, 1855, 1857, 1859, 1860, 1861, 1867, 1870, 1874, 1875, 1879, 1880, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1894, 1896, 1898, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1912, 1914, 1916, 1917, 1919, 1920, 1922, 1923, 1924, 1925], "disallow_in_graph": [0, 1855], "exclud": [0, 6, 10, 13, 36, 55, 68, 1149, 1363, 1510, 1558, 1656, 1829, 1830, 1831, 1832, 1889, 1902, 1911], "forc": [0, 1, 2, 13, 29, 32, 60, 454, 874, 999, 1190, 1201, 1205, 1755, 1854, 1857, 1860, 1879, 1883, 1919, 1922], "break": [0, 8, 13, 14, 17, 19, 21, 44, 63, 68, 674, 887, 947, 1187, 1232, 1419, 1733, 1753, 1855, 1861, 1866, 1884, 1901], "sub": [0, 25, 48, 60, 67, 556, 808, 855, 856, 1198, 1202, 1203, 1284, 1287, 1289, 1431, 1432, 1462, 1463, 1465, 1725, 1803, 1820, 1854, 1856, 1857, 1858, 1873, 1875, 1880, 1898, 1900, 1914, 1917], "give": [0, 1, 4, 5, 8, 10, 14, 15, 18, 20, 22, 26, 32, 35, 36, 40, 42, 54, 60, 68, 902, 903, 959, 1078, 1080, 1081, 1083, 1087, 1096, 1120, 1121, 1122, 1200, 1216, 1223, 1347, 1348, 1349, 1424, 1470, 1471, 1606, 1645, 1661, 1662, 1801, 1840, 1854, 1857, 1872, 1874, 1878, 1880, 1883, 1885, 1886, 1888, 1889, 1891, 1895, 1898, 1901, 1903, 1914, 1925], "two": [0, 1, 2, 4, 5, 6, 7, 9, 12, 14, 15, 18, 26, 27, 29, 30, 32, 35, 36, 38, 39, 40, 42, 44, 46, 52, 53, 55, 56, 60, 64, 65, 68, 577, 578, 579, 581, 582, 601, 611, 674, 686, 688, 754, 787, 881, 884, 897, 902, 935, 937, 966, 970, 1009, 1011, 1039, 1040, 1048, 1057, 1060, 1066, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1106, 1107, 1116, 1126, 1148, 1150, 1176, 1185, 1187, 1197, 1200, 1207, 1210, 1212, 1217, 1219, 1222, 1223, 1228, 1229, 1234, 1239, 1242, 1243, 1245, 1246, 1248, 1250, 1255, 1258, 1281, 1284, 1287, 1289, 1292, 1316, 1333, 1335, 1336, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1366, 1371, 1379, 1380, 1386, 1388, 1389, 1410, 1411, 1413, 1419, 1422, 1423, 1424, 1426, 1427, 1433, 1434, 1450, 1451, 1466, 1467, 1468, 1470, 1490, 1491, 1501, 1520, 1530, 1537, 1553, 1561, 1568, 1606, 1611, 1633, 1643, 1645, 1646, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1682, 1686, 1705, 1720, 1733, 1785, 1790, 1805, 1821, 1825, 1826, 1828, 1844, 1848, 1854, 1856, 1857, 1859, 1860, 1864, 1866, 1867, 1873, 1874, 1875, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1891, 1896, 1897, 1898, 1901, 1902, 1903, 1905, 1906, 1910, 1911, 1912, 1914, 1915, 1919, 1920, 1921, 1923, 1924], "each": [0, 1, 2, 3, 6, 10, 13, 16, 17, 18, 19, 21, 22, 25, 26, 29, 35, 36, 38, 39, 40, 42, 43, 44, 46, 48, 53, 56, 57, 58, 60, 61, 63, 65, 66, 68, 81, 95, 117, 151, 152, 395, 399, 488, 508, 510, 512, 539, 601, 611, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 680, 687, 689, 690, 693, 729, 754, 786, 834, 835, 853, 855, 856, 859, 871, 880, 881, 882, 883, 885, 886, 887, 892, 901, 915, 918, 927, 931, 935, 936, 938, 941, 945, 947, 959, 972, 973, 977, 1006, 1009, 1011, 1017, 1019, 1023, 1026, 1032, 1037, 1038, 1039, 1040, 1043, 1044, 1055, 1058, 1060, 1077, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1089, 1090, 1091, 1092, 1093, 1095, 1097, 1101, 1102, 1104, 1109, 1113, 1118, 1119, 1123, 1127, 1128, 1129, 1140, 1146, 1148, 1149, 1150, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1187, 1202, 1203, 1208, 1240, 1258, 1259, 1274, 1276, 1284, 1286, 1287, 1288, 1289, 1292, 1294, 1300, 1301, 1309, 1315, 1317, 1327, 1332, 1335, 1336, 1340, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1371, 1372, 1374, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1399, 1400, 1404, 1406, 1410, 1411, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1433, 1434, 1436, 1447, 1450, 1451, 1453, 1458, 1461, 1467, 1468, 1470, 1488, 1490, 1491, 1496, 1497, 1498, 1501, 1502, 1504, 1505, 1506, 1509, 1510, 1511, 1515, 1518, 1528, 1530, 1553, 1554, 1556, 1558, 1561, 1568, 1581, 1590, 1595, 1596, 1599, 1632, 1633, 1635, 1645, 1646, 1647, 1653, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1697, 1701, 1702, 1705, 1712, 1720, 1725, 1726, 1731, 1735, 1740, 1753, 1764, 1770, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1804, 1805, 1820, 1822, 1823, 1826, 1837, 1838, 1841, 1847, 1848, 1854, 1859, 1860, 1866, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1901, 1903, 1904, 1905, 1910, 1911, 1912, 1914, 1915, 1917, 1919, 1920, 1921, 1923, 1924], "op": [0, 2, 5, 12, 15, 16, 17, 18, 19, 25, 26, 38, 68, 80, 148, 498, 518, 598, 751, 786, 787, 788, 817, 820, 848, 855, 856, 887, 893, 901, 937, 947, 967, 982, 984, 988, 989, 1003, 1004, 1029, 1033, 1035, 1117, 1137, 1188, 1200, 1202, 1203, 1264, 1435, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1692, 1751, 1828, 1855, 1856, 1860, 1864, 1866, 1867, 1868, 1870, 1873, 1874, 1882, 1883, 1884, 1885, 1893, 1902, 1904, 1905, 1906, 1907, 1908, 1916, 1918, 1920, 1924], "forbid_in_graph": [0, 1855], "assert": [0, 14, 25, 26, 35, 36, 44, 62, 64, 65, 66, 68, 618, 905, 907, 908, 1118, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1185, 1190, 1191, 1196, 1655, 1847, 1859, 1861, 1885, 1886, 1891, 1902, 1905, 1921], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 80, 86, 95, 148, 251, 316, 318, 332, 333, 336, 374, 399, 444, 467, 477, 482, 494, 508, 512, 538, 574, 583, 611, 674, 683, 684, 685, 691, 729, 750, 754, 755, 757, 758, 759, 773, 776, 777, 779, 780, 781, 786, 787, 788, 789, 790, 793, 808, 809, 810, 811, 813, 814, 815, 816, 819, 834, 848, 852, 853, 854, 855, 856, 859, 868, 869, 880, 881, 882, 884, 887, 893, 895, 896, 897, 898, 899, 900, 902, 903, 916, 925, 926, 928, 929, 931, 934, 940, 947, 949, 954, 955, 958, 959, 962, 963, 964, 966, 967, 969, 974, 986, 997, 1003, 1006, 1007, 1017, 1027, 1034, 1043, 1048, 1052, 1055, 1060, 1076, 1077, 1078, 1079, 1081, 1083, 1088, 1090, 1096, 1099, 1101, 1102, 1106, 1107, 1108, 1116, 1117, 1122, 1124, 1126, 1127, 1128, 1132, 1140, 1144, 1145, 1147, 1149, 1162, 1164, 1176, 1177, 1179, 1180, 1183, 1184, 1185, 1187, 1188, 1191, 1193, 1194, 1197, 1200, 1202, 1203, 1208, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1239, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1253, 1256, 1257, 1258, 1259, 1268, 1269, 1270, 1271, 1273, 1274, 1276, 1278, 1279, 1281, 1284, 1287, 1288, 1289, 1292, 1294, 1309, 1313, 1314, 1315, 1316, 1317, 1327, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1366, 1371, 1372, 1373, 1374, 1379, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1436, 1447, 1450, 1451, 1452, 1458, 1462, 1464, 1466, 1467, 1468, 1470, 1471, 1483, 1489, 1490, 1491, 1501, 1502, 1509, 1510, 1511, 1512, 1518, 1529, 1530, 1553, 1556, 1558, 1561, 1568, 1586, 1587, 1588, 1589, 1590, 1595, 1596, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1611, 1618, 1632, 1636, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1653, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1682, 1685, 1686, 1698, 1704, 1705, 1711, 1720, 1723, 1724, 1731, 1733, 1744, 1745, 1748, 1778, 1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1797, 1800, 1801, 1804, 1805, 1814, 1816, 1820, 1822, 1823, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1840, 1841, 1842, 1843, 1847, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1866, 1867, 1868, 1870, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926], "present": [0, 4, 10, 21, 35, 38, 55, 60, 1185, 1276, 1327, 1389, 1429, 1632, 1655, 1801, 1854, 1869, 1872, 1873, 1874, 1879, 1880, 1883, 1885, 1888, 1891, 1898, 1902, 1911, 1914, 1917], "while": [0, 1, 3, 4, 6, 8, 9, 15, 16, 18, 19, 26, 27, 29, 35, 36, 38, 39, 40, 44, 57, 60, 65, 67, 68, 689, 690, 729, 848, 878, 886, 964, 1035, 1117, 1149, 1187, 1190, 1202, 1203, 1259, 1315, 1327, 1343, 1380, 1382, 1383, 1384, 1389, 1419, 1425, 1437, 1450, 1458, 1462, 1537, 1599, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1646, 1740, 1861, 1866, 1867, 1874, 1875, 1879, 1880, 1883, 1886, 1887, 1888, 1891, 1893, 1895, 1898, 1901, 1903, 1905, 1908, 1910, 1912, 1914, 1915, 1918, 1919, 1920], "trace": [0, 1, 2, 12, 14, 15, 16, 17, 18, 19, 21, 24, 26, 30, 32, 35, 36, 38, 48, 70, 71, 72, 909, 910, 911, 947, 1060, 1190, 1198, 1199, 1203, 1259, 1300, 1301, 1302, 1657, 1855, 1858, 1859, 1860, 1862, 1880, 1883, 1884, 1896, 1900, 1902, 1919], "If": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 27, 29, 30, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 80, 81, 95, 148, 152, 193, 204, 207, 251, 312, 316, 318, 441, 442, 443, 444, 445, 454, 467, 477, 491, 494, 512, 515, 531, 539, 574, 575, 577, 578, 579, 581, 582, 597, 601, 611, 674, 680, 683, 684, 685, 687, 689, 690, 691, 693, 729, 750, 754, 758, 773, 775, 779, 788, 789, 811, 814, 815, 816, 819, 848, 852, 855, 859, 868, 869, 870, 871, 872, 873, 874, 883, 885, 886, 887, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 915, 916, 918, 925, 927, 928, 929, 931, 935, 937, 938, 939, 940, 941, 942, 949, 952, 953, 954, 958, 959, 960, 963, 964, 966, 968, 971, 973, 975, 977, 984, 995, 1001, 1006, 1007, 1027, 1030, 1041, 1042, 1043, 1047, 1048, 1049, 1050, 1051, 1060, 1061, 1062, 1063, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1103, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1127, 1128, 1129, 1140, 1144, 1145, 1147, 1148, 1149, 1150, 1161, 1164, 1178, 1184, 1187, 1190, 1191, 1192, 1194, 1196, 1198, 1199, 1202, 1203, 1206, 1207, 1208, 1212, 1216, 1217, 1222, 1223, 1225, 1226, 1228, 1229, 1230, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1249, 1250, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1269, 1273, 1274, 1276, 1278, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1304, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1327, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1371, 1372, 1373, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1404, 1406, 1410, 1411, 1412, 1413, 1414, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1450, 1451, 1458, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1474, 1475, 1476, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1513, 1514, 1518, 1520, 1522, 1529, 1530, 1535, 1537, 1539, 1540, 1542, 1543, 1544, 1553, 1554, 1555, 1558, 1561, 1562, 1568, 1574, 1575, 1586, 1587, 1599, 1600, 1603, 1604, 1606, 1607, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1632, 1633, 1634, 1635, 1639, 1640, 1641, 1644, 1645, 1646, 1650, 1651, 1653, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1692, 1693, 1698, 1702, 1704, 1705, 1709, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1725, 1726, 1731, 1733, 1736, 1740, 1742, 1744, 1747, 1748, 1753, 1755, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1778, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1796, 1799, 1800, 1801, 1804, 1805, 1819, 1820, 1822, 1823, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1837, 1838, 1840, 1841, 1842, 1843, 1847, 1852, 1853, 1854, 1857, 1860, 1862, 1864, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1925], "you": [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 38, 42, 43, 44, 46, 47, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 80, 81, 148, 251, 332, 444, 494, 674, 683, 728, 729, 742, 751, 775, 883, 884, 885, 886, 887, 892, 893, 895, 896, 897, 901, 929, 947, 961, 984, 995, 997, 1006, 1007, 1027, 1060, 1116, 1117, 1120, 1121, 1122, 1123, 1128, 1162, 1187, 1191, 1192, 1199, 1202, 1203, 1204, 1232, 1250, 1258, 1281, 1288, 1291, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1389, 1415, 1416, 1417, 1419, 1424, 1425, 1426, 1434, 1453, 1462, 1464, 1466, 1471, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1529, 1535, 1568, 1586, 1587, 1590, 1599, 1607, 1633, 1641, 1644, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1686, 1704, 1727, 1736, 1744, 1787, 1788, 1789, 1791, 1792, 1796, 1847, 1854, 1857, 1859, 1860, 1862, 1864, 1867, 1868, 1870, 1872, 1873, 1875, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1925], "want": [0, 1, 2, 8, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 29, 35, 38, 43, 44, 52, 60, 62, 63, 64, 65, 67, 68, 444, 491, 494, 775, 785, 832, 999, 1116, 1117, 1199, 1202, 1203, 1288, 1367, 1368, 1471, 1513, 1514, 1529, 1587, 1599, 1600, 1641, 1644, 1661, 1662, 1675, 1736, 1854, 1864, 1867, 1879, 1880, 1882, 1883, 1885, 1886, 1888, 1891, 1898, 1901, 1902, 1905, 1914, 1919, 1920, 1923], "instead": [0, 1, 2, 4, 6, 9, 10, 12, 14, 15, 16, 19, 21, 25, 26, 29, 35, 36, 38, 40, 43, 44, 46, 52, 55, 56, 60, 63, 64, 65, 68, 219, 403, 454, 494, 508, 742, 751, 762, 763, 787, 811, 820, 874, 884, 895, 896, 897, 898, 901, 902, 931, 937, 1095, 1097, 1121, 1122, 1123, 1124, 1127, 1128, 1133, 1174, 1185, 1187, 1188, 1192, 1216, 1217, 1223, 1225, 1241, 1244, 1250, 1256, 1287, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1353, 1355, 1356, 1358, 1359, 1360, 1364, 1371, 1379, 1385, 1386, 1387, 1388, 1389, 1410, 1411, 1412, 1413, 1414, 1419, 1422, 1423, 1424, 1426, 1433, 1434, 1446, 1450, 1451, 1452, 1458, 1467, 1485, 1486, 1487, 1490, 1491, 1501, 1511, 1518, 1530, 1542, 1543, 1544, 1553, 1561, 1574, 1599, 1641, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1686, 1709, 1710, 1720, 1740, 1744, 1786, 1801, 1805, 1840, 1847, 1857, 1859, 1860, 1867, 1874, 1878, 1879, 1880, 1884, 1885, 1886, 1887, 1888, 1889, 1893, 1895, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1908, 1911, 1914, 1921, 1922, 1924, 1925], "us": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 30, 31, 33, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 80, 81, 86, 95, 117, 148, 152, 189, 206, 316, 318, 332, 339, 340, 403, 431, 444, 454, 482, 483, 491, 494, 508, 512, 515, 538, 551, 577, 578, 579, 581, 582, 611, 674, 680, 683, 706, 707, 708, 709, 710, 711, 714, 723, 724, 725, 726, 727, 729, 742, 751, 754, 762, 763, 766, 767, 768, 773, 775, 779, 780, 781, 784, 787, 788, 789, 790, 793, 796, 801, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 825, 826, 827, 828, 831, 848, 852, 853, 855, 856, 859, 872, 873, 874, 883, 884, 885, 887, 888, 889, 890, 892, 893, 895, 896, 897, 898, 901, 902, 903, 907, 908, 911, 914, 915, 916, 917, 925, 927, 928, 935, 937, 939, 947, 952, 955, 957, 960, 961, 962, 963, 964, 966, 968, 969, 971, 974, 984, 985, 988, 989, 995, 999, 1003, 1005, 1006, 1007, 1009, 1011, 1012, 1017, 1018, 1027, 1029, 1030, 1036, 1041, 1042, 1043, 1052, 1060, 1061, 1063, 1073, 1074, 1075, 1078, 1080, 1088, 1090, 1094, 1096, 1103, 1105, 1108, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1132, 1133, 1137, 1138, 1140, 1144, 1145, 1146, 1147, 1161, 1162, 1174, 1184, 1185, 1187, 1188, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1206, 1208, 1210, 1218, 1222, 1223, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1239, 1240, 1241, 1243, 1244, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1264, 1267, 1273, 1276, 1277, 1280, 1281, 1286, 1287, 1288, 1291, 1297, 1309, 1314, 1316, 1317, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1379, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1405, 1406, 1407, 1412, 1413, 1414, 1415, 1416, 1419, 1421, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1450, 1452, 1455, 1458, 1466, 1467, 1468, 1469, 1471, 1474, 1475, 1476, 1483, 1485, 1486, 1487, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1513, 1514, 1518, 1520, 1527, 1529, 1530, 1537, 1542, 1543, 1544, 1554, 1556, 1562, 1568, 1572, 1574, 1575, 1583, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1633, 1634, 1635, 1639, 1640, 1641, 1643, 1644, 1646, 1647, 1650, 1653, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1683, 1684, 1686, 1687, 1689, 1690, 1692, 1702, 1704, 1705, 1706, 1709, 1710, 1711, 1713, 1715, 1717, 1719, 1720, 1726, 1733, 1736, 1741, 1742, 1744, 1745, 1746, 1748, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1773, 1778, 1780, 1781, 1783, 1784, 1787, 1788, 1789, 1790, 1791, 1792, 1801, 1804, 1805, 1806, 1819, 1823, 1826, 1830, 1832, 1837, 1839, 1840, 1844, 1847, 1852, 1854, 1855, 1856, 1857, 1858, 1860, 1861, 1862, 1864, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1882, 1884, 1886, 1887, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1904, 1906, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1925], "todo": [0, 15, 21, 69, 74, 75, 76, 77, 78, 79, 80, 81, 820, 853, 855, 856, 1924], "voz": 0, "we": [0, 1, 2, 3, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 36, 38, 40, 42, 43, 44, 45, 46, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 491, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 739, 740, 750, 755, 756, 757, 758, 759, 773, 779, 782, 783, 785, 787, 788, 832, 851, 853, 855, 856, 859, 887, 888, 891, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 916, 925, 960, 966, 1017, 1060, 1078, 1080, 1081, 1082, 1083, 1090, 1095, 1096, 1097, 1111, 1120, 1121, 1123, 1128, 1140, 1144, 1145, 1161, 1185, 1187, 1190, 1191, 1198, 1200, 1202, 1242, 1245, 1250, 1258, 1259, 1278, 1309, 1327, 1335, 1336, 1385, 1419, 1471, 1518, 1520, 1529, 1587, 1594, 1599, 1606, 1608, 1617, 1619, 1622, 1626, 1627, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1677, 1683, 1688, 1705, 1847, 1854, 1855, 1857, 1859, 1860, 1862, 1864, 1867, 1868, 1872, 1873, 1874, 1875, 1880, 1883, 1885, 1886, 1887, 1888, 1889, 1891, 1893, 1894, 1897, 1898, 1901, 1902, 1903, 1905, 1906, 1908, 1910, 1911, 1912, 1914, 1917, 1919, 1922, 1923, 1924], "now": [0, 1, 2, 14, 15, 18, 19, 24, 25, 26, 38, 43, 45, 52, 56, 57, 60, 65, 68, 219, 491, 894, 901, 975, 1003, 1024, 1025, 1111, 1134, 1184, 1185, 1191, 1202, 1236, 1416, 1435, 1471, 1590, 1611, 1622, 1664, 1745, 1796, 1801, 1857, 1867, 1873, 1874, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1891, 1892, 1898, 1902, 1905, 1911, 1912, 1914, 1922, 1925], "have": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 35, 38, 39, 40, 42, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 68, 86, 151, 152, 219, 220, 310, 312, 318, 332, 395, 399, 444, 454, 467, 482, 483, 498, 508, 510, 512, 515, 538, 611, 674, 683, 687, 689, 690, 691, 693, 809, 811, 835, 874, 883, 887, 895, 897, 907, 908, 916, 917, 925, 934, 935, 959, 966, 975, 976, 1006, 1017, 1051, 1059, 1066, 1080, 1090, 1095, 1097, 1111, 1116, 1117, 1128, 1129, 1130, 1144, 1145, 1148, 1149, 1161, 1162, 1184, 1186, 1187, 1190, 1191, 1194, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1208, 1209, 1218, 1222, 1223, 1239, 1246, 1247, 1250, 1252, 1258, 1267, 1269, 1274, 1281, 1284, 1286, 1287, 1288, 1289, 1291, 1292, 1309, 1314, 1315, 1317, 1319, 1327, 1331, 1335, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1362, 1363, 1367, 1368, 1373, 1378, 1382, 1383, 1384, 1411, 1419, 1422, 1423, 1424, 1425, 1426, 1466, 1468, 1500, 1509, 1510, 1513, 1514, 1518, 1535, 1553, 1555, 1558, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1603, 1604, 1606, 1608, 1611, 1635, 1639, 1644, 1646, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1702, 1728, 1729, 1743, 1756, 1779, 1782, 1786, 1787, 1788, 1789, 1791, 1792, 1799, 1800, 1801, 1804, 1805, 1816, 1820, 1826, 1828, 1840, 1842, 1843, 1845, 1847, 1849, 1854, 1857, 1858, 1859, 1860, 1862, 1864, 1866, 1867, 1868, 1870, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1905, 1906, 1909, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1925], "some": [0, 1, 2, 4, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 29, 34, 35, 36, 38, 40, 43, 44, 46, 48, 56, 57, 60, 63, 65, 66, 67, 68, 473, 491, 561, 683, 742, 947, 1013, 1017, 1020, 1060, 1081, 1083, 1091, 1092, 1093, 1108, 1117, 1128, 1162, 1184, 1185, 1187, 1188, 1197, 1200, 1202, 1232, 1250, 1256, 1281, 1288, 1291, 1327, 1331, 1335, 1336, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1379, 1382, 1383, 1384, 1385, 1386, 1389, 1410, 1411, 1419, 1422, 1423, 1424, 1426, 1433, 1434, 1450, 1451, 1467, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1503, 1530, 1535, 1553, 1556, 1561, 1568, 1590, 1599, 1600, 1601, 1602, 1606, 1639, 1674, 1680, 1686, 1704, 1724, 1748, 1755, 1769, 1805, 1847, 1854, 1857, 1858, 1859, 1860, 1861, 1864, 1865, 1866, 1867, 1868, 1872, 1873, 1874, 1879, 1880, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1914, 1919], "more": [0, 1, 2, 3, 4, 5, 9, 10, 12, 14, 15, 16, 18, 19, 23, 26, 27, 29, 30, 31, 34, 35, 36, 38, 39, 44, 45, 46, 47, 51, 54, 55, 56, 57, 60, 63, 64, 65, 66, 68, 81, 148, 251, 252, 310, 318, 483, 488, 490, 493, 508, 510, 512, 539, 612, 674, 729, 765, 774, 778, 787, 848, 853, 854, 855, 867, 880, 881, 882, 884, 886, 887, 893, 895, 897, 901, 902, 903, 907, 908, 918, 926, 929, 931, 937, 938, 939, 940, 963, 964, 966, 968, 969, 985, 1004, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1024, 1025, 1026, 1030, 1038, 1043, 1049, 1058, 1060, 1064, 1076, 1077, 1079, 1081, 1100, 1101, 1102, 1103, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1135, 1136, 1140, 1149, 1150, 1162, 1168, 1172, 1174, 1175, 1187, 1200, 1203, 1216, 1217, 1218, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1256, 1259, 1262, 1265, 1267, 1277, 1278, 1300, 1301, 1304, 1315, 1327, 1331, 1336, 1341, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1362, 1363, 1364, 1380, 1389, 1415, 1416, 1417, 1419, 1425, 1431, 1432, 1433, 1434, 1446, 1458, 1466, 1483, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1507, 1509, 1510, 1518, 1521, 1522, 1523, 1524, 1529, 1533, 1537, 1538, 1548, 1555, 1562, 1563, 1564, 1566, 1568, 1569, 1570, 1571, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1586, 1587, 1588, 1589, 1590, 1599, 1600, 1606, 1608, 1609, 1644, 1645, 1646, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1692, 1703, 1704, 1730, 1736, 1740, 1750, 1780, 1781, 1805, 1826, 1828, 1840, 1847, 1848, 1854, 1855, 1856, 1857, 1859, 1860, 1866, 1867, 1869, 1870, 1872, 1873, 1874, 1875, 1876, 1878, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1894, 1896, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1911, 1912, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1925, 1926], "robust": [0, 4, 1259, 1872, 1891], "document": [0, 9, 10, 11, 12, 16, 19, 21, 25, 31, 35, 38, 60, 61, 68, 674, 724, 725, 726, 727, 739, 740, 750, 755, 756, 757, 758, 759, 867, 868, 869, 870, 932, 963, 964, 966, 1017, 1060, 1132, 1135, 1136, 1168, 1175, 1187, 1300, 1301, 1316, 1327, 1362, 1363, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1419, 1608, 1617, 1626, 1646, 1703, 1730, 1747, 1840, 1854, 1857, 1859, 1860, 1872, 1873, 1874, 1876, 1879, 1885, 1887, 1891, 1895, 1896, 1898, 1901, 1902, 1905, 1906, 1907, 1910, 1914, 1918, 1922], "would": [0, 3, 4, 6, 9, 10, 12, 14, 15, 16, 18, 21, 25, 26, 27, 29, 35, 38, 44, 46, 48, 55, 56, 60, 62, 65, 68, 148, 441, 442, 443, 444, 445, 692, 754, 788, 848, 887, 891, 901, 937, 1061, 1063, 1081, 1121, 1122, 1185, 1187, 1188, 1192, 1194, 1202, 1203, 1300, 1301, 1332, 1333, 1334, 1335, 1336, 1371, 1385, 1389, 1412, 1413, 1414, 1419, 1429, 1434, 1518, 1529, 1590, 1599, 1600, 1632, 1644, 1675, 1713, 1717, 1719, 1730, 1740, 1819, 1820, 1825, 1857, 1859, 1860, 1873, 1874, 1875, 1876, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1896, 1898, 1901, 1902, 1903, 1905, 1910, 1911, 1912, 1914], "amiss": 0, "graph_break": [0, 1855], "mark_dynam": [0, 14, 1855], "t": [0, 1, 2, 3, 4, 5, 8, 9, 10, 14, 15, 18, 19, 20, 26, 27, 35, 36, 38, 40, 44, 45, 48, 52, 54, 55, 61, 63, 65, 66, 67, 68, 148, 310, 312, 318, 454, 531, 565, 681, 682, 691, 754, 775, 779, 789, 817, 820, 871, 872, 873, 874, 883, 885, 887, 888, 891, 893, 896, 901, 938, 939, 940, 945, 959, 961, 964, 985, 1003, 1004, 1034, 1058, 1076, 1081, 1082, 1083, 1084, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1111, 1112, 1113, 1116, 1117, 1118, 1128, 1129, 1140, 1150, 1184, 1185, 1187, 1188, 1190, 1193, 1194, 1198, 1200, 1202, 1205, 1207, 1216, 1217, 1223, 1225, 1226, 1229, 1236, 1244, 1245, 1250, 1258, 1259, 1267, 1280, 1293, 1294, 1307, 1316, 1336, 1340, 1342, 1347, 1348, 1349, 1356, 1362, 1363, 1371, 1380, 1382, 1383, 1384, 1385, 1389, 1406, 1419, 1434, 1450, 1452, 1462, 1470, 1471, 1489, 1493, 1494, 1495, 1502, 1509, 1510, 1530, 1535, 1554, 1574, 1587, 1590, 1593, 1594, 1599, 1600, 1606, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1633, 1635, 1636, 1647, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1678, 1688, 1694, 1700, 1704, 1721, 1746, 1747, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1779, 1782, 1801, 1805, 1806, 1816, 1819, 1825, 1828, 1847, 1848, 1854, 1856, 1857, 1858, 1859, 1861, 1870, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1890, 1891, 1893, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1925], "index": [0, 4, 15, 26, 30, 35, 36, 40, 44, 53, 68, 189, 206, 278, 309, 310, 311, 312, 313, 314, 316, 318, 319, 467, 468, 507, 508, 509, 510, 511, 512, 513, 514, 689, 690, 811, 848, 871, 886, 931, 979, 982, 1039, 1040, 1080, 1120, 1121, 1122, 1126, 1128, 1129, 1158, 1159, 1160, 1161, 1185, 1203, 1208, 1216, 1234, 1252, 1266, 1274, 1276, 1280, 1284, 1287, 1288, 1289, 1292, 1309, 1315, 1318, 1319, 1327, 1342, 1355, 1362, 1363, 1420, 1421, 1426, 1429, 1430, 1468, 1470, 1509, 1510, 1555, 1617, 1619, 1626, 1627, 1632, 1645, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1690, 1705, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1774, 1784, 1785, 1787, 1788, 1789, 1791, 1792, 1801, 1815, 1836, 1839, 1840, 1847, 1855, 1856, 1857, 1858, 1860, 1867, 1872, 1873, 1874, 1875, 1880, 1883, 1884, 1886, 1889, 1895, 1900, 1912, 1914, 1917, 1918, 1919, 1920, 1921], "mark": [0, 16, 40, 55, 67, 68, 820, 891, 892, 1300, 1301, 1599, 1656, 1857, 1859, 1880, 1884, 1885, 1891, 1902, 1904, 1911, 1920], "tensor": [0, 1, 3, 6, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 29, 31, 32, 35, 36, 38, 39, 40, 42, 44, 45, 60, 63, 64, 65, 66, 67, 68, 86, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 714, 726, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 744, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 781, 782, 783, 784, 788, 792, 793, 794, 795, 796, 813, 814, 815, 816, 818, 819, 821, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 907, 908, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 973, 974, 975, 976, 977, 984, 992, 993, 999, 1003, 1006, 1009, 1013, 1024, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1169, 1172, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1191, 1193, 1194, 1197, 1198, 1200, 1202, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1327, 1331, 1332, 1335, 1336, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1371, 1372, 1373, 1379, 1385, 1386, 1389, 1390, 1406, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1453, 1454, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1595, 1596, 1599, 1600, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1653, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1670, 1671, 1672, 1673, 1674, 1675, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1745, 1746, 1749, 1750, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1814, 1815, 1816, 1817, 1818, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1855, 1856, 1857, 1859, 1860, 1864, 1867, 1876, 1878, 1879, 1881, 1882, 1883, 1884, 1886, 1887, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1900, 1901, 1902, 1903, 1904, 1906, 1909, 1910, 1911, 1915, 1916, 1919, 1921, 1923, 1924, 1925], "dynam": [0, 1, 13, 16, 17, 20, 22, 23, 26, 29, 30, 35, 674, 723, 727, 754, 755, 756, 757, 758, 759, 788, 809, 820, 823, 838, 844, 845, 846, 847, 852, 853, 947, 962, 1194, 1200, 1202, 1258, 1606, 1855, 1859, 1860, 1861, 1878, 1883, 1891, 1894, 1898, 1901, 1902, 1906], "dim": [0, 14, 38, 43, 44, 65, 66, 68, 110, 112, 113, 114, 116, 132, 133, 134, 182, 202, 205, 208, 209, 210, 211, 212, 213, 227, 257, 261, 278, 309, 310, 311, 312, 313, 314, 318, 319, 351, 377, 389, 404, 406, 407, 408, 411, 425, 426, 427, 428, 432, 433, 449, 458, 466, 475, 486, 487, 489, 500, 501, 507, 508, 509, 510, 511, 512, 513, 514, 531, 532, 535, 536, 538, 541, 546, 547, 549, 554, 559, 567, 572, 577, 578, 579, 581, 582, 584, 599, 600, 603, 604, 605, 606, 609, 611, 687, 689, 690, 691, 693, 868, 869, 870, 897, 898, 900, 934, 941, 950, 958, 960, 975, 977, 1039, 1040, 1041, 1042, 1043, 1052, 1058, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1100, 1118, 1128, 1129, 1140, 1150, 1158, 1159, 1160, 1161, 1164, 1208, 1218, 1219, 1239, 1243, 1253, 1255, 1256, 1266, 1274, 1284, 1286, 1287, 1289, 1292, 1294, 1307, 1314, 1315, 1316, 1317, 1318, 1319, 1327, 1354, 1355, 1356, 1359, 1363, 1365, 1370, 1385, 1390, 1409, 1425, 1426, 1427, 1452, 1454, 1466, 1468, 1469, 1500, 1501, 1517, 1520, 1529, 1537, 1542, 1543, 1544, 1553, 1554, 1556, 1558, 1562, 1568, 1574, 1575, 1583, 1599, 1607, 1613, 1617, 1619, 1626, 1627, 1640, 1643, 1646, 1695, 1702, 1705, 1725, 1726, 1731, 1732, 1737, 1738, 1739, 1742, 1743, 1774, 1777, 1778, 1781, 1784, 1786, 1793, 1796, 1798, 1799, 1800, 1801, 1804, 1816, 1820, 1821, 1822, 1823, 1826, 1827, 1835, 1836, 1837, 1838, 1839, 1842, 1843, 1847, 1848, 1855, 1856, 1857, 1858, 1874, 1875, 1886, 1887, 1896, 1898, 1900, 1914, 1915, 1917, 1923], "note": [0, 2, 3, 4, 6, 9, 14, 16, 18, 25, 26, 27, 29, 30, 32, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 53, 55, 57, 60, 64, 66, 67, 68, 148, 219, 374, 494, 495, 508, 510, 512, 729, 735, 736, 737, 785, 787, 788, 789, 793, 835, 855, 859, 878, 887, 893, 895, 896, 897, 898, 899, 900, 901, 903, 937, 960, 1035, 1043, 1048, 1060, 1081, 1111, 1113, 1128, 1129, 1140, 1162, 1174, 1184, 1185, 1187, 1188, 1193, 1259, 1281, 1300, 1301, 1335, 1336, 1342, 1350, 1351, 1352, 1353, 1355, 1362, 1363, 1371, 1373, 1379, 1385, 1386, 1389, 1410, 1411, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1429, 1430, 1433, 1434, 1450, 1451, 1458, 1462, 1467, 1471, 1490, 1491, 1501, 1509, 1510, 1518, 1529, 1530, 1553, 1556, 1561, 1562, 1575, 1590, 1599, 1600, 1646, 1654, 1655, 1672, 1678, 1680, 1686, 1688, 1704, 1711, 1786, 1787, 1788, 1789, 1791, 1792, 1797, 1801, 1805, 1826, 1840, 1847, 1854, 1857, 1858, 1861, 1867, 1872, 1875, 1876, 1880, 1881, 1882, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1901, 1902, 1904, 1906, 1908, 1909, 1911, 1912, 1914, 1918, 1919, 1926], "state": [0, 1, 2, 3, 6, 10, 13, 14, 15, 16, 21, 24, 35, 38, 40, 42, 44, 46, 48, 55, 58, 60, 68, 86, 742, 754, 830, 992, 993, 997, 1002, 1006, 1016, 1031, 1032, 1117, 1126, 1139, 1187, 1190, 1202, 1259, 1298, 1305, 1371, 1372, 1389, 1390, 1419, 1434, 1436, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1711, 1754, 1780, 1868, 1879, 1880, 1883, 1884, 1885, 1889, 1893, 1896, 1898, 1901, 1909, 1923], "The": [0, 1, 2, 3, 4, 6, 8, 9, 12, 13, 15, 16, 18, 19, 20, 22, 25, 26, 27, 29, 30, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 64, 65, 66, 67, 70, 71, 72, 80, 81, 86, 148, 189, 194, 206, 207, 219, 252, 287, 308, 310, 312, 316, 318, 395, 397, 398, 399, 444, 454, 479, 482, 483, 488, 490, 493, 494, 508, 510, 512, 531, 538, 577, 597, 611, 612, 674, 678, 681, 682, 683, 684, 688, 689, 690, 691, 729, 742, 751, 754, 760, 761, 762, 763, 766, 767, 768, 773, 774, 776, 777, 779, 780, 781, 786, 787, 788, 789, 793, 796, 809, 811, 813, 814, 815, 816, 819, 821, 831, 832, 848, 853, 858, 871, 872, 874, 878, 879, 883, 884, 886, 887, 888, 889, 890, 895, 896, 898, 899, 900, 901, 902, 903, 907, 908, 910, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 932, 933, 939, 946, 949, 955, 959, 962, 963, 969, 976, 992, 1003, 1004, 1006, 1007, 1008, 1017, 1030, 1031, 1032, 1043, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1060, 1061, 1065, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1108, 1110, 1111, 1112, 1113, 1114, 1117, 1120, 1123, 1126, 1127, 1128, 1131, 1132, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1153, 1157, 1161, 1164, 1184, 1187, 1190, 1192, 1194, 1197, 1198, 1200, 1202, 1203, 1206, 1207, 1211, 1212, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1232, 1233, 1234, 1236, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1253, 1256, 1258, 1259, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1287, 1295, 1296, 1299, 1300, 1301, 1304, 1305, 1309, 1315, 1318, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1362, 1363, 1364, 1366, 1367, 1368, 1371, 1372, 1373, 1374, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1419, 1422, 1424, 1426, 1433, 1434, 1436, 1437, 1447, 1448, 1450, 1458, 1461, 1462, 1467, 1468, 1470, 1471, 1483, 1486, 1487, 1501, 1502, 1509, 1510, 1511, 1513, 1514, 1517, 1518, 1520, 1529, 1530, 1542, 1543, 1544, 1553, 1556, 1568, 1571, 1587, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1625, 1626, 1629, 1635, 1639, 1640, 1643, 1645, 1646, 1647, 1653, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1694, 1695, 1698, 1701, 1704, 1709, 1710, 1711, 1713, 1715, 1717, 1722, 1724, 1726, 1728, 1729, 1731, 1736, 1743, 1744, 1745, 1746, 1753, 1754, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1774, 1780, 1782, 1783, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1796, 1799, 1800, 1801, 1805, 1806, 1815, 1821, 1822, 1823, 1825, 1826, 1829, 1830, 1831, 1832, 1839, 1840, 1841, 1842, 1843, 1845, 1847, 1850, 1854, 1857, 1858, 1859, 1861, 1862, 1866, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1926], "behavior": [0, 2, 3, 8, 15, 19, 26, 29, 34, 36, 38, 39, 40, 42, 44, 45, 48, 53, 56, 60, 64, 65, 67, 68, 251, 316, 467, 508, 538, 611, 681, 779, 787, 820, 872, 886, 929, 933, 946, 1055, 1060, 1063, 1105, 1112, 1113, 1117, 1187, 1197, 1200, 1202, 1232, 1239, 1243, 1256, 1257, 1258, 1273, 1281, 1288, 1356, 1359, 1380, 1389, 1419, 1434, 1458, 1471, 1483, 1518, 1586, 1587, 1590, 1591, 1599, 1600, 1645, 1646, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1698, 1704, 1720, 1727, 1769, 1805, 1826, 1840, 1854, 1857, 1861, 1862, 1864, 1866, 1873, 1875, 1881, 1883, 1885, 1886, 1894, 1895, 1896, 1898, 1901, 1902, 1903, 1906, 1907, 1910, 1915, 1918], "dimens": [0, 2, 14, 27, 35, 38, 43, 44, 60, 65, 66, 68, 216, 230, 251, 257, 310, 312, 314, 318, 429, 430, 468, 469, 470, 488, 508, 510, 512, 531, 537, 539, 540, 554, 577, 578, 579, 581, 582, 601, 611, 680, 686, 687, 689, 690, 691, 693, 729, 752, 773, 775, 779, 868, 869, 870, 871, 880, 881, 882, 886, 901, 926, 934, 937, 938, 939, 940, 941, 960, 975, 977, 1039, 1040, 1041, 1042, 1043, 1048, 1049, 1050, 1051, 1052, 1058, 1060, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1128, 1129, 1140, 1149, 1150, 1161, 1164, 1184, 1207, 1208, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1266, 1267, 1274, 1277, 1281, 1284, 1286, 1287, 1288, 1289, 1292, 1294, 1307, 1314, 1315, 1316, 1317, 1318, 1319, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1356, 1359, 1361, 1362, 1363, 1365, 1366, 1369, 1370, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1391, 1399, 1400, 1405, 1406, 1407, 1408, 1409, 1410, 1413, 1414, 1418, 1425, 1426, 1427, 1428, 1431, 1432, 1433, 1437, 1438, 1439, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1466, 1467, 1468, 1469, 1470, 1483, 1489, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1517, 1518, 1519, 1520, 1529, 1532, 1535, 1536, 1537, 1554, 1555, 1556, 1568, 1574, 1575, 1587, 1606, 1607, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1633, 1634, 1636, 1638, 1640, 1643, 1645, 1646, 1692, 1695, 1702, 1704, 1705, 1706, 1711, 1725, 1726, 1727, 1731, 1740, 1742, 1743, 1753, 1774, 1778, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1796, 1798, 1799, 1800, 1801, 1804, 1805, 1814, 1816, 1820, 1821, 1822, 1823, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1835, 1836, 1837, 1838, 1839, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1855, 1856, 1858, 1859, 1860, 1875, 1878, 1881, 1883, 1886, 1887, 1888, 1894, 1903, 1905, 1914, 1915, 1917, 1919, 1920], "govern": [0, 8, 9, 1855, 1905], "few": [0, 2, 8, 9, 14, 16, 18, 19, 20, 26, 36, 40, 46, 1060, 1117, 1363, 1599, 1854, 1860, 1880, 1883, 1885, 1887, 1889, 1894, 1897, 1898, 1901, 1903, 1905, 1908, 1918, 1920, 1922], "factor": [0, 1, 4, 16, 36, 44, 68, 683, 684, 685, 793, 813, 915, 938, 939, 940, 1229, 1230, 1231, 1234, 1236, 1276, 1277, 1278, 1357, 1380, 1407, 1431, 1432, 1559, 1560, 1568, 1672, 1673, 1674, 1676, 1677, 1679, 1681, 1682, 1683, 1684, 1685, 1688, 1689, 1690, 1704, 1762, 1783, 1805, 1878, 1879, 1905], "config": [0, 13, 14, 16, 17, 18, 19, 21, 26, 36, 60, 68, 786, 787, 788, 789, 853, 855, 947, 1884, 1897, 1908], "dynamic_shap": [0, 13, 14, 22, 1652], "true": [0, 1, 2, 3, 4, 6, 13, 14, 16, 17, 18, 19, 20, 21, 25, 26, 29, 35, 36, 38, 39, 40, 42, 43, 44, 46, 57, 60, 65, 66, 67, 68, 148, 194, 207, 257, 316, 318, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 348, 393, 397, 399, 444, 454, 456, 467, 473, 483, 490, 491, 499, 511, 512, 550, 561, 574, 575, 584, 588, 597, 603, 611, 674, 681, 686, 687, 688, 689, 690, 691, 693, 712, 713, 714, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 736, 737, 740, 743, 748, 750, 754, 755, 758, 759, 762, 763, 773, 779, 780, 791, 808, 820, 853, 867, 869, 870, 874, 883, 886, 887, 888, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 907, 908, 914, 916, 919, 922, 924, 925, 931, 932, 938, 939, 940, 946, 947, 952, 963, 1001, 1055, 1064, 1065, 1066, 1082, 1083, 1089, 1090, 1113, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1127, 1128, 1129, 1131, 1143, 1144, 1145, 1148, 1149, 1160, 1162, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1191, 1192, 1193, 1196, 1202, 1203, 1204, 1206, 1208, 1211, 1216, 1217, 1228, 1229, 1230, 1233, 1234, 1235, 1236, 1239, 1241, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1256, 1258, 1259, 1268, 1269, 1270, 1271, 1274, 1275, 1276, 1278, 1280, 1284, 1286, 1287, 1288, 1289, 1292, 1309, 1314, 1317, 1320, 1323, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1367, 1368, 1371, 1372, 1373, 1374, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1428, 1433, 1434, 1435, 1436, 1450, 1451, 1458, 1462, 1464, 1465, 1466, 1467, 1468, 1471, 1472, 1483, 1485, 1486, 1487, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1513, 1514, 1518, 1520, 1522, 1528, 1529, 1530, 1542, 1543, 1544, 1553, 1561, 1568, 1587, 1588, 1590, 1599, 1600, 1602, 1603, 1606, 1607, 1610, 1611, 1612, 1624, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1692, 1694, 1702, 1704, 1705, 1709, 1710, 1711, 1728, 1729, 1736, 1739, 1740, 1748, 1749, 1750, 1753, 1755, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1778, 1780, 1782, 1799, 1800, 1801, 1804, 1805, 1819, 1823, 1828, 1837, 1838, 1840, 1841, 1842, 1843, 1847, 1850, 1854, 1856, 1858, 1859, 1860, 1867, 1869, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1894, 1895, 1896, 1898, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1925], "fals": [0, 1, 2, 4, 6, 14, 16, 17, 19, 21, 25, 26, 29, 35, 36, 38, 39, 40, 42, 43, 44, 46, 60, 63, 68, 110, 111, 112, 113, 114, 116, 132, 133, 134, 148, 179, 180, 181, 194, 207, 257, 298, 315, 316, 318, 325, 329, 332, 333, 335, 339, 340, 341, 348, 351, 389, 393, 404, 406, 407, 408, 411, 417, 425, 426, 427, 428, 441, 442, 443, 444, 445, 449, 454, 456, 466, 467, 475, 490, 491, 499, 512, 536, 549, 550, 559, 574, 588, 597, 603, 604, 609, 611, 674, 687, 688, 689, 690, 691, 693, 706, 707, 708, 709, 710, 711, 728, 729, 739, 740, 745, 746, 747, 749, 752, 754, 762, 763, 770, 772, 773, 774, 776, 777, 779, 791, 808, 813, 814, 815, 816, 818, 819, 820, 832, 833, 851, 852, 857, 859, 868, 869, 870, 874, 887, 888, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 911, 914, 916, 919, 922, 924, 925, 931, 932, 938, 939, 940, 946, 947, 952, 963, 1001, 1006, 1018, 1060, 1061, 1062, 1063, 1065, 1066, 1073, 1077, 1078, 1079, 1080, 1085, 1086, 1091, 1092, 1093, 1095, 1096, 1097, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1122, 1123, 1125, 1127, 1129, 1131, 1143, 1144, 1145, 1148, 1149, 1162, 1172, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1192, 1193, 1194, 1202, 1203, 1204, 1206, 1208, 1211, 1216, 1217, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1239, 1241, 1243, 1244, 1247, 1248, 1249, 1250, 1251, 1256, 1257, 1258, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1278, 1280, 1284, 1286, 1287, 1289, 1292, 1300, 1301, 1309, 1314, 1315, 1316, 1317, 1320, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1353, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1368, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1428, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1446, 1448, 1450, 1451, 1458, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1471, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1514, 1515, 1518, 1520, 1522, 1523, 1524, 1529, 1530, 1533, 1539, 1540, 1542, 1543, 1544, 1548, 1553, 1557, 1561, 1563, 1564, 1566, 1567, 1568, 1569, 1571, 1581, 1584, 1585, 1587, 1599, 1601, 1603, 1606, 1608, 1611, 1612, 1624, 1633, 1634, 1635, 1636, 1638, 1641, 1644, 1645, 1646, 1650, 1651, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1702, 1704, 1705, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1728, 1729, 1736, 1740, 1748, 1749, 1750, 1753, 1755, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1778, 1787, 1788, 1789, 1790, 1791, 1792, 1799, 1800, 1801, 1804, 1805, 1819, 1823, 1828, 1837, 1840, 1841, 1842, 1843, 1850, 1852, 1853, 1854, 1856, 1857, 1858, 1859, 1860, 1866, 1867, 1868, 1869, 1872, 1874, 1875, 1879, 1880, 1883, 1884, 1885, 1887, 1891, 1894, 1895, 1898, 1899, 1902, 1903, 1904, 1906, 1909, 1910, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1924, 1925], "must": [0, 1, 4, 6, 7, 10, 12, 14, 19, 25, 26, 29, 35, 38, 40, 42, 44, 45, 46, 53, 56, 57, 60, 63, 65, 67, 68, 86, 95, 137, 151, 152, 194, 257, 310, 312, 318, 395, 397, 399, 508, 538, 539, 560, 577, 578, 579, 581, 582, 611, 680, 681, 682, 683, 684, 685, 691, 742, 751, 766, 767, 768, 787, 809, 811, 853, 854, 872, 878, 883, 884, 885, 886, 888, 894, 896, 898, 899, 900, 902, 903, 915, 917, 919, 920, 921, 922, 923, 924, 927, 931, 934, 949, 959, 962, 963, 973, 974, 975, 977, 1003, 1004, 1006, 1048, 1050, 1051, 1052, 1054, 1057, 1058, 1060, 1081, 1082, 1083, 1088, 1090, 1091, 1092, 1093, 1094, 1101, 1102, 1111, 1113, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1140, 1149, 1150, 1153, 1164, 1184, 1187, 1197, 1202, 1209, 1212, 1241, 1242, 1243, 1244, 1250, 1252, 1253, 1256, 1259, 1277, 1279, 1280, 1281, 1287, 1294, 1309, 1315, 1318, 1319, 1323, 1336, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1362, 1363, 1366, 1373, 1374, 1380, 1412, 1419, 1422, 1425, 1450, 1456, 1471, 1491, 1500, 1502, 1510, 1529, 1542, 1543, 1544, 1562, 1599, 1622, 1632, 1633, 1639, 1641, 1646, 1654, 1684, 1686, 1693, 1694, 1697, 1698, 1701, 1709, 1710, 1731, 1740, 1743, 1752, 1768, 1779, 1782, 1783, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1801, 1806, 1816, 1820, 1821, 1825, 1830, 1832, 1836, 1840, 1844, 1845, 1847, 1848, 1850, 1857, 1858, 1859, 1860, 1867, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1889, 1893, 1896, 1897, 1898, 1901, 1902, 1903, 1905, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1921, 1925], "work": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 38, 39, 40, 42, 43, 44, 45, 46, 55, 56, 57, 58, 60, 61, 65, 68, 117, 148, 349, 441, 442, 443, 444, 445, 482, 581, 582, 815, 855, 856, 887, 901, 961, 963, 964, 966, 995, 1006, 1007, 1027, 1061, 1063, 1080, 1100, 1101, 1102, 1117, 1187, 1191, 1198, 1199, 1222, 1223, 1250, 1251, 1259, 1356, 1416, 1419, 1435, 1452, 1556, 1574, 1599, 1656, 1686, 1713, 1717, 1719, 1745, 1751, 1816, 1819, 1854, 1857, 1860, 1861, 1872, 1873, 1874, 1875, 1878, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1891, 1893, 1896, 1897, 1898, 1902, 1903, 1905, 1908, 1910, 1911, 1920, 1922, 1925], "rais": [0, 1, 2, 6, 8, 15, 19, 24, 25, 26, 29, 38, 42, 44, 46, 48, 55, 60, 65, 67, 68, 86, 310, 312, 318, 691, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 928, 937, 965, 1030, 1103, 1108, 1185, 1187, 1192, 1194, 1202, 1204, 1216, 1218, 1226, 1227, 1230, 1234, 1235, 1240, 1247, 1248, 1252, 1253, 1258, 1279, 1304, 1419, 1568, 1611, 1612, 1617, 1619, 1622, 1632, 1655, 1656, 1742, 1840, 1854, 1861, 1867, 1872, 1880, 1883, 1885, 1887, 1894, 1898, 1902, 1903, 1909, 1910, 1921, 1925], "except": [0, 4, 6, 8, 10, 12, 15, 25, 29, 38, 39, 43, 44, 46, 47, 48, 52, 56, 60, 67, 68, 577, 581, 582, 611, 678, 687, 689, 690, 693, 754, 879, 902, 903, 934, 941, 945, 965, 975, 977, 1005, 1018, 1052, 1058, 1060, 1106, 1107, 1126, 1128, 1150, 1194, 1202, 1204, 1208, 1242, 1258, 1274, 1284, 1286, 1287, 1289, 1292, 1314, 1317, 1319, 1371, 1389, 1434, 1471, 1555, 1599, 1607, 1632, 1639, 1640, 1644, 1646, 1702, 1726, 1742, 1779, 1797, 1799, 1800, 1804, 1826, 1842, 1843, 1847, 1848, 1855, 1857, 1859, 1860, 1861, 1862, 1867, 1872, 1875, 1883, 1885, 1891, 1894, 1897, 1902, 1903, 1910, 1912, 1914, 1916, 1917, 1921], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 21, 25, 26, 29, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 60, 63, 65, 66, 67, 68, 80, 82, 95, 148, 189, 206, 257, 310, 318, 444, 483, 492, 493, 508, 510, 512, 538, 554, 574, 611, 680, 683, 729, 762, 763, 773, 779, 785, 787, 818, 834, 852, 859, 871, 874, 887, 895, 896, 897, 898, 899, 900, 901, 902, 903, 907, 908, 915, 918, 927, 935, 938, 946, 947, 952, 953, 957, 963, 965, 975, 977, 999, 1005, 1006, 1018, 1043, 1060, 1099, 1103, 1108, 1113, 1117, 1118, 1123, 1126, 1127, 1128, 1140, 1162, 1176, 1177, 1179, 1180, 1183, 1187, 1188, 1190, 1198, 1199, 1200, 1202, 1203, 1207, 1208, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1267, 1273, 1276, 1281, 1287, 1288, 1291, 1309, 1314, 1315, 1316, 1327, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1362, 1363, 1366, 1369, 1371, 1372, 1374, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1433, 1434, 1446, 1447, 1450, 1451, 1452, 1453, 1455, 1458, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1483, 1485, 1486, 1487, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1510, 1516, 1518, 1529, 1530, 1553, 1556, 1558, 1561, 1562, 1568, 1576, 1587, 1588, 1589, 1590, 1595, 1596, 1599, 1600, 1601, 1602, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1635, 1640, 1644, 1645, 1646, 1647, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1692, 1694, 1701, 1704, 1705, 1727, 1733, 1740, 1745, 1748, 1755, 1773, 1779, 1782, 1784, 1785, 1786, 1796, 1801, 1805, 1814, 1819, 1821, 1826, 1830, 1832, 1837, 1840, 1847, 1850, 1854, 1855, 1857, 1859, 1866, 1868, 1870, 1872, 1873, 1874, 1878, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1901, 1902, 1903, 1904, 1909, 1910, 1911, 1912, 1915, 1917, 1918, 1919, 1920, 1921], "conjunct": [0, 4, 35, 38, 42, 60, 818, 1483, 1518, 1599, 1908, 1910], "mark_dyam": 0, "eventu": [0, 2, 8, 14, 15, 55, 60, 1854, 1903], "support": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 38, 40, 42, 43, 44, 45, 47, 48, 55, 56, 60, 63, 64, 65, 67, 68, 80, 81, 308, 318, 454, 577, 611, 679, 680, 681, 683, 687, 689, 690, 693, 723, 732, 733, 734, 766, 767, 768, 773, 779, 780, 781, 786, 787, 788, 789, 795, 811, 827, 853, 855, 856, 886, 888, 893, 902, 903, 915, 916, 920, 923, 925, 927, 939, 940, 947, 954, 960, 962, 966, 1003, 1004, 1006, 1023, 1055, 1057, 1060, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1123, 1127, 1144, 1145, 1157, 1184, 1191, 1198, 1202, 1206, 1207, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1259, 1277, 1281, 1285, 1290, 1291, 1308, 1347, 1348, 1349, 1350, 1351, 1352, 1359, 1362, 1363, 1366, 1386, 1406, 1424, 1425, 1458, 1468, 1470, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1510, 1512, 1518, 1529, 1535, 1568, 1586, 1587, 1589, 1599, 1646, 1651, 1653, 1661, 1662, 1664, 1692, 1704, 1723, 1724, 1745, 1748, 1749, 1779, 1782, 1785, 1802, 1805, 1828, 1830, 1832, 1844, 1845, 1846, 1853, 1854, 1855, 1857, 1859, 1861, 1862, 1864, 1868, 1870, 1872, 1876, 1880, 1881, 1882, 1883, 1884, 1885, 1889, 1891, 1893, 1894, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1908, 1909, 1910, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925], "2": [0, 1, 2, 4, 12, 13, 14, 15, 16, 18, 19, 20, 25, 27, 29, 32, 33, 34, 35, 36, 38, 39, 42, 44, 45, 46, 48, 53, 55, 60, 64, 65, 66, 67, 68, 171, 189, 206, 223, 231, 251, 257, 310, 312, 314, 318, 332, 374, 398, 399, 441, 442, 443, 444, 445, 477, 483, 488, 491, 494, 508, 510, 512, 538, 552, 554, 574, 575, 577, 578, 579, 581, 582, 583, 601, 611, 674, 675, 677, 678, 679, 680, 683, 684, 685, 686, 687, 689, 691, 692, 693, 728, 732, 733, 734, 735, 736, 737, 739, 740, 749, 752, 754, 756, 787, 790, 814, 859, 868, 869, 870, 871, 872, 873, 874, 878, 880, 881, 882, 884, 893, 895, 896, 897, 898, 899, 900, 907, 908, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 933, 934, 935, 937, 938, 939, 940, 941, 945, 946, 949, 952, 953, 954, 955, 958, 959, 960, 1034, 1039, 1042, 1043, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1121, 1122, 1123, 1127, 1128, 1129, 1130, 1131, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1161, 1162, 1164, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1190, 1191, 1196, 1198, 1200, 1202, 1206, 1207, 1208, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1264, 1265, 1266, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1284, 1285, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1304, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1326, 1331, 1332, 1333, 1334, 1335, 1336, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1371, 1373, 1375, 1376, 1377, 1378, 1380, 1387, 1388, 1389, 1390, 1391, 1405, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1424, 1425, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1483, 1485, 1490, 1491, 1502, 1509, 1510, 1516, 1518, 1520, 1522, 1529, 1535, 1542, 1543, 1544, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1568, 1584, 1590, 1599, 1603, 1606, 1607, 1611, 1623, 1624, 1625, 1626, 1628, 1629, 1632, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1653, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1683, 1687, 1688, 1689, 1693, 1694, 1695, 1697, 1698, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1715, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1736, 1740, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1753, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1778, 1779, 1780, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1800, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1814, 1815, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1855, 1856, 1858, 1859, 1860, 1861, 1867, 1868, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1884, 1885, 1888, 1889, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1924], "fulli": [0, 14, 19, 27, 29, 35, 38, 42, 43, 64, 68, 674, 1023, 1187, 1415, 1416, 1417, 1419, 1856, 1860, 1866, 1885, 1902, 1905], "constrain": [0, 44, 1455, 1860, 1891], "doe": [0, 1, 2, 4, 5, 6, 8, 9, 10, 18, 19, 24, 26, 29, 38, 42, 44, 46, 48, 52, 54, 55, 57, 60, 63, 64, 65, 67, 68, 148, 251, 332, 431, 454, 577, 611, 674, 689, 690, 742, 751, 754, 784, 788, 855, 874, 914, 927, 997, 1001, 1051, 1060, 1064, 1113, 1116, 1128, 1161, 1186, 1188, 1191, 1197, 1202, 1212, 1217, 1229, 1230, 1234, 1235, 1242, 1248, 1250, 1256, 1259, 1276, 1280, 1281, 1287, 1291, 1295, 1311, 1337, 1338, 1339, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1359, 1362, 1363, 1366, 1371, 1372, 1382, 1383, 1384, 1389, 1390, 1392, 1393, 1394, 1401, 1402, 1403, 1413, 1414, 1420, 1426, 1429, 1434, 1436, 1458, 1470, 1501, 1553, 1599, 1600, 1608, 1611, 1615, 1641, 1644, 1646, 1651, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1689, 1693, 1698, 1740, 1743, 1744, 1748, 1750, 1774, 1779, 1805, 1825, 1828, 1840, 1847, 1853, 1854, 1855, 1857, 1859, 1860, 1862, 1868, 1872, 1873, 1874, 1875, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1891, 1893, 1894, 1895, 1898, 1902, 1903, 1905, 1910, 1912, 1914, 1917, 1921], "allow": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 29, 30, 35, 36, 38, 39, 44, 46, 47, 55, 56, 60, 61, 63, 64, 65, 66, 68, 148, 508, 674, 729, 787, 791, 793, 818, 887, 889, 901, 902, 932, 946, 1003, 1006, 1030, 1060, 1121, 1187, 1192, 1204, 1242, 1264, 1304, 1318, 1332, 1333, 1334, 1355, 1356, 1373, 1412, 1413, 1414, 1419, 1422, 1425, 1447, 1462, 1599, 1604, 1645, 1653, 1657, 1673, 1782, 1840, 1854, 1859, 1860, 1867, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1896, 1898, 1901, 1902, 1903, 1904, 1905, 1907, 1910, 1914, 1917, 1918, 1919, 1921], "than": [0, 1, 4, 5, 6, 7, 9, 10, 12, 15, 16, 18, 21, 26, 27, 29, 35, 36, 38, 39, 40, 44, 45, 46, 48, 52, 55, 56, 57, 60, 65, 68, 148, 251, 494, 539, 611, 674, 687, 693, 773, 779, 887, 896, 897, 911, 918, 929, 936, 937, 941, 942, 966, 975, 1013, 1017, 1030, 1048, 1049, 1100, 1101, 1102, 1104, 1108, 1113, 1124, 1131, 1143, 1147, 1161, 1172, 1184, 1185, 1188, 1198, 1207, 1208, 1211, 1216, 1217, 1223, 1227, 1232, 1240, 1241, 1243, 1244, 1247, 1252, 1262, 1275, 1278, 1284, 1287, 1289, 1292, 1304, 1309, 1319, 1335, 1336, 1347, 1348, 1349, 1356, 1362, 1363, 1380, 1411, 1425, 1433, 1450, 1456, 1466, 1467, 1468, 1483, 1493, 1494, 1495, 1509, 1510, 1518, 1529, 1555, 1568, 1586, 1587, 1590, 1599, 1606, 1607, 1608, 1609, 1635, 1640, 1646, 1661, 1662, 1686, 1688, 1702, 1703, 1724, 1725, 1753, 1786, 1787, 1788, 1789, 1791, 1792, 1822, 1830, 1832, 1840, 1854, 1856, 1857, 1859, 1860, 1862, 1874, 1875, 1876, 1878, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1891, 1893, 1894, 1895, 1896, 1898, 1901, 1902, 1903, 1905, 1906, 1910, 1914, 1915, 1917, 1919, 1920, 1921], "valu": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 16, 19, 25, 26, 27, 29, 32, 35, 36, 39, 40, 42, 44, 46, 47, 49, 52, 53, 55, 56, 60, 62, 65, 67, 68, 86, 99, 100, 101, 102, 117, 148, 152, 219, 232, 233, 234, 235, 251, 256, 257, 269, 270, 296, 308, 310, 312, 313, 314, 315, 316, 318, 320, 323, 349, 396, 397, 415, 416, 418, 419, 467, 477, 479, 508, 510, 512, 531, 538, 554, 577, 578, 579, 581, 582, 593, 594, 674, 675, 678, 681, 682, 685, 689, 690, 691, 729, 750, 758, 764, 765, 773, 778, 779, 781, 787, 789, 790, 793, 796, 813, 814, 815, 816, 819, 820, 821, 848, 853, 859, 868, 869, 870, 874, 879, 883, 885, 887, 889, 890, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 916, 917, 918, 925, 931, 935, 940, 942, 954, 955, 958, 964, 994, 1003, 1004, 1017, 1030, 1039, 1040, 1043, 1051, 1052, 1065, 1074, 1075, 1077, 1079, 1081, 1082, 1083, 1088, 1090, 1091, 1092, 1093, 1094, 1103, 1108, 1114, 1116, 1117, 1118, 1119, 1123, 1124, 1126, 1127, 1129, 1131, 1135, 1136, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1157, 1172, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1187, 1188, 1190, 1193, 1194, 1202, 1205, 1207, 1208, 1211, 1215, 1216, 1218, 1220, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1236, 1239, 1241, 1243, 1244, 1246, 1250, 1251, 1256, 1257, 1258, 1259, 1262, 1267, 1273, 1275, 1276, 1279, 1284, 1286, 1287, 1289, 1292, 1304, 1307, 1309, 1313, 1314, 1315, 1316, 1319, 1320, 1323, 1327, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1361, 1362, 1363, 1364, 1366, 1373, 1374, 1375, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1405, 1406, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1447, 1450, 1452, 1453, 1454, 1455, 1456, 1458, 1461, 1462, 1464, 1466, 1467, 1468, 1470, 1471, 1490, 1491, 1493, 1494, 1495, 1500, 1501, 1510, 1511, 1515, 1518, 1520, 1529, 1530, 1531, 1542, 1543, 1544, 1553, 1554, 1555, 1556, 1558, 1561, 1568, 1581, 1582, 1587, 1589, 1590, 1592, 1594, 1597, 1598, 1599, 1604, 1606, 1607, 1608, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1625, 1626, 1632, 1635, 1636, 1639, 1641, 1645, 1646, 1650, 1651, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1680, 1686, 1694, 1698, 1701, 1705, 1707, 1708, 1720, 1722, 1724, 1725, 1726, 1731, 1732, 1733, 1740, 1743, 1753, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1774, 1778, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1801, 1805, 1806, 1816, 1820, 1823, 1826, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1839, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1861, 1867, 1869, 1870, 1872, 1875, 1878, 1879, 1880, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1891, 1895, 1896, 1898, 1900, 1901, 1902, 1904, 1905, 1908, 1909, 1910, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1924], "both": [0, 2, 3, 4, 13, 14, 15, 16, 18, 19, 20, 22, 23, 26, 29, 35, 36, 38, 39, 40, 43, 44, 48, 53, 54, 55, 56, 60, 67, 68, 95, 336, 723, 762, 763, 766, 767, 768, 787, 845, 886, 890, 896, 897, 898, 899, 900, 915, 959, 984, 1055, 1076, 1106, 1107, 1108, 1116, 1130, 1132, 1140, 1147, 1164, 1177, 1178, 1184, 1187, 1200, 1208, 1209, 1257, 1273, 1281, 1287, 1300, 1301, 1332, 1333, 1337, 1338, 1339, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1374, 1380, 1382, 1383, 1384, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1412, 1413, 1414, 1419, 1425, 1458, 1470, 1471, 1474, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1542, 1543, 1544, 1568, 1599, 1611, 1641, 1661, 1662, 1686, 1709, 1710, 1779, 1780, 1782, 1801, 1805, 1825, 1826, 1857, 1859, 1860, 1867, 1873, 1874, 1876, 1879, 1880, 1881, 1885, 1886, 1888, 1891, 1894, 1895, 1896, 1898, 1902, 1903, 1905, 1908, 1910, 1912, 1914, 1915, 1921, 1923, 1924], "eager": [0, 2, 9, 14, 16, 18, 22, 26, 1035, 1185, 1188, 1198, 1752, 1860, 1883, 1904, 1906, 1908], "compil": [0, 12, 13, 14, 15, 18, 21, 22, 23, 29, 30, 60, 61, 68, 674, 962, 987, 991, 1003, 1004, 1117, 1185, 1187, 1188, 1191, 1192, 1198, 1199, 1200, 1202, 1203, 1204, 1419, 1856, 1857, 1859, 1860, 1861, 1862, 1866, 1879, 1882, 1884, 1890, 1897, 1898, 1922], "mode": [0, 5, 9, 13, 14, 15, 16, 17, 18, 20, 26, 35, 36, 38, 40, 44, 55, 57, 65, 66, 68, 219, 220, 740, 741, 766, 767, 768, 773, 779, 780, 781, 809, 811, 817, 820, 853, 854, 883, 885, 888, 889, 890, 895, 896, 897, 898, 902, 914, 947, 961, 994, 1034, 1035, 1064, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1117, 1120, 1121, 1122, 1123, 1126, 1127, 1135, 1162, 1170, 1171, 1185, 1187, 1188, 1191, 1202, 1204, 1245, 1258, 1288, 1300, 1301, 1337, 1338, 1339, 1347, 1348, 1349, 1363, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1419, 1435, 1458, 1471, 1472, 1493, 1494, 1495, 1510, 1518, 1529, 1556, 1587, 1588, 1589, 1600, 1607, 1611, 1644, 1680, 1688, 1704, 1747, 1749, 1750, 1840, 1855, 1858, 1868, 1873, 1878, 1883, 1884, 1886, 1887, 1891, 1900, 1904, 1906, 1907, 1908, 1910, 1922, 1925], "export": [0, 14, 20, 25, 30, 32, 38, 45, 58, 85, 910, 963, 1190, 1192, 1198, 1204, 1633, 1634, 1652, 1653, 1654, 1656, 1657, 1855, 1857, 1859, 1860, 1885, 1899, 1900, 1904, 1905, 1910], "error": [0, 1, 2, 6, 9, 15, 18, 24, 29, 31, 32, 35, 36, 38, 39, 41, 44, 53, 55, 56, 60, 63, 65, 67, 68, 80, 81, 188, 219, 310, 312, 318, 320, 325, 539, 550, 608, 611, 674, 813, 859, 872, 874, 893, 895, 896, 897, 898, 899, 900, 901, 971, 1006, 1017, 1030, 1034, 1058, 1116, 1120, 1121, 1123, 1128, 1150, 1187, 1192, 1201, 1216, 1217, 1226, 1228, 1230, 1233, 1234, 1235, 1245, 1248, 1258, 1276, 1304, 1309, 1335, 1336, 1369, 1380, 1386, 1410, 1419, 1448, 1450, 1516, 1527, 1549, 1568, 1571, 1572, 1599, 1601, 1602, 1603, 1641, 1646, 1656, 1657, 1700, 1740, 1747, 1796, 1801, 1840, 1847, 1848, 1854, 1855, 1857, 1859, 1860, 1866, 1867, 1872, 1873, 1874, 1875, 1879, 1880, 1883, 1885, 1886, 1888, 1889, 1895, 1898, 1902, 1908, 1910, 1915, 1920, 1921, 1923, 1924], "3": [0, 1, 2, 4, 5, 7, 10, 13, 16, 18, 19, 22, 24, 25, 26, 27, 32, 33, 35, 36, 38, 40, 42, 44, 45, 46, 48, 53, 55, 60, 62, 64, 65, 66, 67, 68, 189, 206, 251, 257, 286, 310, 312, 314, 318, 398, 399, 441, 442, 443, 444, 445, 467, 483, 488, 491, 494, 508, 510, 512, 531, 538, 552, 554, 575, 577, 578, 579, 581, 582, 601, 611, 674, 675, 679, 680, 681, 682, 683, 684, 685, 686, 687, 691, 692, 693, 728, 732, 733, 734, 735, 736, 737, 740, 742, 751, 754, 755, 756, 757, 759, 766, 767, 768, 779, 787, 818, 855, 856, 859, 869, 870, 872, 873, 874, 881, 882, 895, 896, 897, 898, 899, 900, 915, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 933, 934, 935, 937, 938, 939, 940, 941, 945, 946, 949, 952, 953, 958, 959, 960, 1003, 1004, 1006, 1042, 1043, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1073, 1076, 1081, 1084, 1088, 1094, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1118, 1123, 1124, 1126, 1128, 1129, 1130, 1131, 1140, 1143, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1161, 1162, 1164, 1172, 1174, 1176, 1178, 1187, 1191, 1193, 1196, 1198, 1202, 1203, 1207, 1208, 1209, 1210, 1211, 1212, 1216, 1218, 1219, 1220, 1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1264, 1267, 1269, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1332, 1333, 1334, 1335, 1336, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1355, 1362, 1363, 1366, 1367, 1368, 1369, 1371, 1372, 1374, 1376, 1377, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1422, 1424, 1426, 1431, 1432, 1434, 1436, 1437, 1440, 1441, 1442, 1443, 1444, 1445, 1452, 1453, 1454, 1458, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1483, 1485, 1490, 1491, 1494, 1495, 1497, 1498, 1501, 1509, 1510, 1513, 1514, 1516, 1518, 1522, 1523, 1529, 1537, 1553, 1555, 1556, 1559, 1560, 1566, 1567, 1574, 1575, 1587, 1599, 1607, 1621, 1623, 1625, 1626, 1627, 1628, 1632, 1634, 1635, 1636, 1637, 1640, 1645, 1646, 1647, 1649, 1650, 1651, 1653, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1683, 1686, 1687, 1689, 1693, 1695, 1697, 1701, 1702, 1704, 1705, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1719, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1736, 1740, 1744, 1745, 1746, 1753, 1756, 1758, 1760, 1762, 1763, 1764, 1768, 1769, 1770, 1778, 1780, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1796, 1804, 1805, 1807, 1808, 1814, 1815, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1844, 1847, 1848, 1849, 1850, 1852, 1853, 1856, 1857, 1858, 1859, 1860, 1861, 1867, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1891, 1892, 1896, 1897, 1898, 1901, 1902, 1905, 1907, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922], "partial": [0, 18, 21, 44, 46, 55, 60, 63, 68, 835, 1006, 1050, 1127, 1140, 1233, 1234, 1235, 1277, 1415, 1416, 1417, 1545, 1546, 1547, 1599, 1618, 1785, 1860, 1861, 1874, 1880, 1885, 1888, 1898, 1912, 1921], "least": [0, 2, 6, 7, 9, 16, 26, 36, 40, 44, 54, 55, 60, 257, 399, 691, 918, 1048, 1050, 1051, 1060, 1101, 1102, 1140, 1148, 1149, 1184, 1209, 1232, 1259, 1281, 1313, 1327, 1599, 1633, 1854, 1860, 1874, 1878, 1880, 1881, 1883, 1887, 1903, 1906, 1912, 1914, 1915, 1916, 1921], "full": [0, 4, 8, 9, 13, 16, 17, 19, 20, 26, 30, 35, 36, 38, 42, 44, 55, 58, 60, 61, 65, 68, 508, 894, 916, 925, 947, 1088, 1089, 1090, 1094, 1095, 1097, 1115, 1127, 1128, 1144, 1145, 1191, 1224, 1225, 1232, 1233, 1234, 1245, 1250, 1251, 1259, 1276, 1336, 1342, 1373, 1433, 1462, 1493, 1494, 1495, 1502, 1515, 1561, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1753, 1805, 1806, 1847, 1854, 1856, 1857, 1858, 1859, 1860, 1862, 1874, 1879, 1883, 1884, 1885, 1888, 1891, 1894, 1895, 1900, 1902, 1905, 1908, 1911, 1918, 1921], "unbound": 0, "rang": [0, 1, 2, 4, 12, 14, 19, 26, 35, 38, 39, 42, 44, 55, 56, 58, 64, 68, 86, 298, 477, 678, 755, 757, 759, 789, 813, 814, 815, 816, 817, 819, 820, 821, 879, 917, 942, 1021, 1022, 1030, 1060, 1110, 1126, 1147, 1148, 1149, 1253, 1264, 1279, 1288, 1304, 1316, 1327, 1355, 1365, 1367, 1368, 1372, 1378, 1390, 1409, 1421, 1426, 1430, 1436, 1452, 1453, 1454, 1458, 1513, 1514, 1518, 1574, 1599, 1604, 1676, 1677, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1705, 1784, 1839, 1857, 1858, 1860, 1880, 1882, 1883, 1887, 1891, 1893, 1894, 1898, 1900, 1901, 1904, 1905, 1908, 1909, 1915, 1917, 1919, 1920, 1921, 1922], "shape": [0, 2, 9, 13, 16, 17, 20, 25, 26, 27, 36, 38, 44, 60, 62, 64, 66, 68, 95, 169, 189, 206, 216, 397, 399, 441, 443, 445, 467, 492, 493, 508, 510, 512, 538, 560, 611, 674, 679, 681, 682, 691, 729, 739, 740, 750, 752, 754, 758, 760, 761, 762, 763, 766, 767, 768, 775, 790, 872, 878, 892, 896, 898, 899, 900, 911, 917, 918, 920, 923, 928, 930, 934, 935, 947, 954, 976, 1050, 1051, 1052, 1054, 1055, 1060, 1061, 1063, 1065, 1080, 1081, 1082, 1083, 1091, 1092, 1093, 1099, 1105, 1106, 1107, 1108, 1114, 1121, 1122, 1126, 1127, 1128, 1129, 1131, 1143, 1148, 1149, 1153, 1161, 1164, 1178, 1184, 1200, 1202, 1203, 1206, 1211, 1212, 1216, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1275, 1276, 1280, 1288, 1293, 1294, 1308, 1309, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1509, 1510, 1514, 1518, 1520, 1529, 1530, 1535, 1542, 1543, 1544, 1554, 1555, 1558, 1559, 1560, 1562, 1568, 1587, 1590, 1599, 1601, 1602, 1606, 1608, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1647, 1650, 1655, 1657, 1692, 1701, 1705, 1709, 1710, 1713, 1715, 1716, 1717, 1724, 1726, 1727, 1731, 1740, 1743, 1768, 1782, 1783, 1785, 1788, 1790, 1796, 1801, 1802, 1805, 1815, 1822, 1826, 1836, 1837, 1838, 1847, 1850, 1852, 1855, 1856, 1857, 1858, 1860, 1873, 1874, 1875, 1880, 1881, 1883, 1885, 1886, 1887, 1899, 1900, 1904, 1907, 1910, 1914, 1915, 1919, 1920, 1921, 1922], "pass": [0, 1, 2, 4, 6, 7, 8, 12, 15, 16, 17, 19, 20, 22, 26, 29, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 67, 68, 148, 251, 444, 508, 510, 512, 538, 554, 787, 788, 817, 820, 853, 855, 874, 883, 884, 885, 886, 887, 893, 901, 931, 947, 961, 995, 1006, 1050, 1081, 1082, 1083, 1091, 1092, 1093, 1099, 1113, 1116, 1117, 1121, 1122, 1123, 1126, 1127, 1149, 1185, 1187, 1188, 1191, 1196, 1198, 1202, 1203, 1231, 1247, 1249, 1258, 1304, 1327, 1328, 1329, 1330, 1338, 1356, 1362, 1363, 1367, 1368, 1419, 1424, 1425, 1447, 1463, 1464, 1465, 1466, 1471, 1483, 1513, 1514, 1518, 1529, 1530, 1556, 1568, 1590, 1593, 1594, 1595, 1596, 1599, 1609, 1611, 1613, 1618, 1632, 1635, 1639, 1641, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1736, 1740, 1744, 1805, 1854, 1857, 1861, 1864, 1868, 1870, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1882, 1884, 1885, 1886, 1888, 1890, 1891, 1894, 1898, 1899, 1901, 1902, 1903, 1910, 1912, 1914, 1915, 1917, 1919, 1920, 1921, 1924, 1925], "through": [0, 1, 6, 8, 10, 12, 14, 15, 16, 19, 23, 25, 26, 30, 35, 38, 40, 44, 48, 60, 65, 67, 68, 491, 786, 834, 848, 855, 856, 893, 902, 903, 968, 1006, 1087, 1120, 1128, 1185, 1188, 1190, 1202, 1203, 1205, 1222, 1223, 1244, 1250, 1267, 1426, 1463, 1464, 1465, 1466, 1520, 1590, 1599, 1611, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1704, 1847, 1854, 1855, 1859, 1860, 1864, 1866, 1870, 1872, 1873, 1874, 1880, 1883, 1885, 1887, 1888, 1890, 1891, 1897, 1898, 1902, 1903, 1905, 1908, 1910, 1911, 1912, 1914, 1918, 1922, 1924, 1926], "4": [0, 2, 4, 13, 14, 16, 19, 26, 27, 32, 33, 35, 36, 38, 40, 42, 44, 45, 46, 53, 55, 65, 68, 189, 206, 239, 251, 286, 308, 310, 312, 314, 318, 398, 399, 441, 442, 467, 479, 483, 488, 491, 494, 508, 512, 531, 538, 550, 552, 554, 578, 579, 601, 611, 677, 678, 679, 680, 683, 685, 686, 687, 689, 690, 691, 693, 733, 735, 736, 737, 740, 742, 751, 754, 767, 768, 818, 859, 868, 869, 870, 874, 875, 876, 877, 878, 879, 881, 882, 893, 895, 898, 899, 900, 915, 918, 921, 925, 926, 927, 931, 933, 936, 937, 940, 941, 942, 945, 949, 954, 955, 956, 957, 960, 1040, 1043, 1050, 1052, 1054, 1055, 1058, 1059, 1060, 1063, 1065, 1075, 1076, 1078, 1080, 1088, 1094, 1096, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1110, 1111, 1113, 1116, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1140, 1143, 1147, 1148, 1149, 1150, 1152, 1153, 1157, 1161, 1164, 1176, 1178, 1184, 1193, 1198, 1200, 1207, 1208, 1209, 1210, 1211, 1212, 1216, 1218, 1219, 1225, 1227, 1229, 1230, 1231, 1234, 1236, 1239, 1241, 1243, 1245, 1247, 1249, 1252, 1253, 1254, 1256, 1257, 1260, 1262, 1263, 1268, 1270, 1271, 1273, 1275, 1280, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1307, 1308, 1309, 1317, 1318, 1319, 1320, 1327, 1332, 1343, 1344, 1345, 1348, 1349, 1351, 1352, 1360, 1362, 1363, 1364, 1366, 1370, 1371, 1389, 1390, 1415, 1416, 1422, 1424, 1426, 1431, 1432, 1434, 1440, 1441, 1442, 1443, 1444, 1458, 1470, 1471, 1472, 1473, 1474, 1475, 1483, 1485, 1494, 1497, 1509, 1510, 1518, 1529, 1553, 1556, 1559, 1560, 1586, 1587, 1588, 1589, 1590, 1599, 1606, 1611, 1622, 1634, 1635, 1637, 1639, 1645, 1646, 1647, 1649, 1651, 1653, 1658, 1671, 1676, 1677, 1683, 1687, 1688, 1689, 1693, 1697, 1698, 1701, 1702, 1704, 1705, 1707, 1711, 1713, 1715, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1731, 1732, 1733, 1735, 1736, 1740, 1753, 1760, 1762, 1763, 1768, 1769, 1771, 1773, 1778, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1801, 1804, 1807, 1808, 1815, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1826, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1844, 1845, 1846, 1847, 1848, 1849, 1853, 1856, 1857, 1858, 1859, 1860, 1861, 1867, 1872, 1874, 1875, 1878, 1880, 1881, 1883, 1884, 1885, 1891, 1893, 1896, 1897, 1898, 1902, 1903, 1905, 1907, 1910, 1914, 1915, 1917, 1918, 1919, 1920, 1921], "attempt": [0, 1, 2, 9, 14, 15, 16, 26, 29, 38, 55, 56, 65, 941, 955, 1191, 1197, 1276, 1568, 1601, 1602, 1661, 1662, 1840, 1857, 1860, 1873, 1874, 1879, 1883, 1885, 1897, 1901, 1902, 1910], "explicitli": [0, 1, 9, 14, 29, 38, 43, 48, 60, 997, 1048, 1050, 1060, 1149, 1227, 1240, 1244, 1252, 1294, 1529, 1587, 1686, 1801, 1857, 1859, 1860, 1861, 1866, 1883, 1885, 1888, 1890, 1896, 1898, 1902, 1903, 1909, 1910, 1914], "As": [0, 1, 2, 9, 12, 19, 24, 26, 36, 38, 40, 44, 60, 63, 64, 68, 251, 929, 1060, 1191, 1218, 1222, 1223, 1233, 1234, 1245, 1250, 1358, 1359, 1360, 1364, 1385, 1419, 1450, 1586, 1645, 1651, 1853, 1857, 1859, 1860, 1867, 1875, 1880, 1883, 1885, 1887, 1891, 1894, 1897, 1898, 1902, 1903, 1909, 1910, 1911, 1912, 1914, 1922], "all": [0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 32, 35, 36, 38, 39, 40, 42, 44, 46, 48, 52, 53, 54, 55, 56, 57, 58, 60, 63, 65, 66, 67, 68, 73, 86, 148, 257, 310, 312, 318, 332, 482, 508, 510, 512, 540, 554, 601, 604, 611, 674, 680, 681, 686, 688, 692, 693, 729, 754, 785, 787, 788, 808, 834, 848, 852, 855, 868, 871, 883, 884, 885, 887, 888, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 911, 912, 913, 917, 926, 928, 933, 934, 938, 941, 942, 946, 958, 963, 964, 966, 967, 975, 976, 985, 993, 997, 1003, 1007, 1008, 1016, 1017, 1024, 1025, 1027, 1028, 1032, 1034, 1036, 1077, 1078, 1079, 1080, 1083, 1086, 1087, 1090, 1093, 1095, 1097, 1113, 1116, 1117, 1123, 1124, 1126, 1127, 1129, 1149, 1152, 1183, 1184, 1187, 1194, 1197, 1198, 1201, 1202, 1222, 1249, 1258, 1274, 1276, 1284, 1286, 1289, 1297, 1306, 1314, 1315, 1316, 1317, 1327, 1334, 1336, 1340, 1342, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1362, 1363, 1366, 1371, 1372, 1373, 1374, 1379, 1385, 1386, 1389, 1390, 1406, 1410, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1434, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1458, 1462, 1464, 1466, 1467, 1470, 1475, 1476, 1483, 1489, 1491, 1509, 1510, 1515, 1520, 1539, 1540, 1568, 1574, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1603, 1606, 1611, 1618, 1622, 1632, 1636, 1644, 1645, 1646, 1647, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1683, 1684, 1687, 1688, 1689, 1690, 1702, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1796, 1798, 1799, 1800, 1801, 1804, 1820, 1822, 1829, 1830, 1831, 1832, 1835, 1838, 1842, 1843, 1845, 1849, 1854, 1857, 1858, 1859, 1860, 1866, 1867, 1868, 1870, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1924, 1925], "call": [0, 1, 2, 3, 4, 9, 12, 14, 15, 16, 17, 19, 21, 25, 26, 27, 29, 30, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 55, 57, 60, 61, 62, 64, 65, 66, 67, 68, 73, 148, 287, 320, 332, 454, 482, 483, 550, 574, 608, 611, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 775, 784, 791, 818, 851, 855, 856, 887, 891, 892, 893, 894, 895, 897, 898, 901, 907, 908, 930, 947, 961, 964, 966, 995, 997, 1007, 1008, 1017, 1024, 1025, 1027, 1028, 1058, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1116, 1117, 1128, 1132, 1150, 1162, 1172, 1187, 1190, 1192, 1197, 1198, 1199, 1206, 1242, 1250, 1254, 1256, 1258, 1259, 1288, 1331, 1337, 1338, 1339, 1356, 1357, 1358, 1359, 1360, 1362, 1364, 1366, 1404, 1415, 1416, 1417, 1419, 1426, 1427, 1447, 1458, 1470, 1496, 1497, 1498, 1504, 1505, 1506, 1511, 1529, 1568, 1587, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1608, 1611, 1618, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1634, 1640, 1641, 1643, 1644, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1717, 1744, 1751, 1752, 1780, 1799, 1800, 1801, 1821, 1840, 1842, 1843, 1847, 1848, 1854, 1857, 1861, 1864, 1870, 1872, 1874, 1875, 1876, 1879, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1926], "made": [0, 10, 14, 19, 26, 40, 42, 43, 56, 68, 893, 903, 1187, 1419, 1464, 1466, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1721, 1859, 1867, 1880, 1897, 1902, 1919, 1921, 1925], "befor": [0, 1, 2, 4, 7, 8, 12, 14, 15, 19, 21, 23, 26, 29, 32, 35, 36, 38, 39, 40, 42, 43, 44, 47, 52, 54, 55, 56, 57, 60, 68, 95, 148, 741, 754, 782, 783, 784, 887, 891, 893, 945, 963, 1041, 1042, 1043, 1052, 1060, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1101, 1102, 1105, 1113, 1116, 1187, 1198, 1200, 1239, 1243, 1256, 1286, 1314, 1317, 1356, 1362, 1363, 1366, 1371, 1419, 1420, 1421, 1458, 1462, 1470, 1518, 1537, 1574, 1575, 1590, 1593, 1594, 1595, 1596, 1599, 1607, 1640, 1643, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1688, 1702, 1705, 1731, 1740, 1751, 1752, 1781, 1784, 1787, 1788, 1789, 1791, 1792, 1801, 1804, 1826, 1837, 1857, 1859, 1860, 1872, 1879, 1880, 1883, 1884, 1885, 1888, 1890, 1891, 1894, 1896, 1897, 1901, 1902, 1903, 1905, 1910, 1911, 1912, 1914, 1915, 1919, 1921], "mark_stat": [0, 1855], "none": [0, 1, 2, 3, 4, 6, 12, 17, 19, 26, 29, 32, 35, 36, 38, 39, 40, 42, 43, 44, 46, 48, 52, 53, 55, 57, 60, 64, 65, 66, 67, 68, 110, 112, 113, 114, 116, 132, 133, 136, 148, 151, 152, 154, 171, 183, 184, 185, 186, 202, 203, 205, 207, 210, 211, 212, 213, 227, 232, 233, 234, 235, 255, 283, 287, 298, 332, 348, 351, 374, 404, 406, 407, 408, 411, 417, 423, 424, 425, 426, 427, 428, 441, 442, 443, 444, 445, 449, 450, 466, 475, 477, 483, 489, 498, 508, 515, 531, 532, 546, 547, 549, 550, 559, 574, 575, 577, 582, 584, 597, 602, 603, 604, 609, 620, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 644, 646, 649, 651, 653, 654, 656, 658, 660, 662, 664, 666, 668, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 743, 744, 745, 746, 747, 748, 749, 760, 761, 762, 763, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 787, 788, 789, 791, 793, 808, 811, 813, 814, 815, 816, 819, 820, 832, 833, 834, 851, 852, 853, 854, 855, 856, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 883, 884, 885, 886, 887, 888, 889, 890, 893, 894, 896, 898, 899, 900, 901, 902, 903, 907, 908, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 931, 934, 936, 937, 938, 939, 940, 942, 943, 945, 947, 949, 950, 951, 953, 954, 956, 957, 958, 959, 960, 961, 963, 964, 966, 967, 968, 972, 973, 975, 976, 977, 980, 981, 982, 988, 989, 995, 1005, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1030, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1052, 1053, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1114, 1115, 1116, 1117, 1118, 1122, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1164, 1165, 1181, 1182, 1184, 1186, 1187, 1191, 1194, 1196, 1197, 1198, 1200, 1202, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1362, 1363, 1365, 1367, 1368, 1369, 1372, 1373, 1374, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1433, 1435, 1436, 1450, 1451, 1452, 1453, 1454, 1458, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1478, 1479, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1509, 1510, 1513, 1514, 1515, 1516, 1518, 1519, 1526, 1528, 1529, 1530, 1531, 1532, 1535, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1556, 1558, 1561, 1568, 1572, 1573, 1574, 1575, 1583, 1584, 1585, 1587, 1588, 1589, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1610, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1632, 1634, 1635, 1636, 1637, 1640, 1641, 1643, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1692, 1693, 1694, 1697, 1698, 1699, 1701, 1702, 1704, 1705, 1708, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1725, 1726, 1731, 1733, 1734, 1735, 1740, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1777, 1778, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1816, 1817, 1818, 1819, 1821, 1823, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1837, 1838, 1841, 1842, 1843, 1844, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1878, 1880, 1883, 1885, 1886, 1891, 1893, 1896, 1898, 1902, 1903, 1904, 1905, 1907, 1909, 1910, 1915, 1916, 1917, 1919, 1921, 1923, 1924, 1925], "static": [0, 2, 4, 9, 13, 14, 19, 29, 39, 44, 46, 60, 788, 809, 811, 820, 826, 851, 853, 855, 883, 884, 885, 886, 1200, 1462, 1599, 1780, 1857, 1858, 1859, 1860, 1883, 1890, 1899, 1903, 1906, 1910, 1916], "prevent": [0, 1, 8, 9, 15, 19, 35, 36, 38, 39, 46, 60, 68, 729, 893, 963, 1041, 1042, 1184, 1286, 1314, 1317, 1357, 1425, 1450, 1537, 1574, 1575, 1590, 1599, 1702, 1781, 1784, 1804, 1830, 1832, 1840, 1872, 1879, 1880, 1883, 1884, 1887, 1891, 1902, 1904, 1912, 1914, 1915], "u": [0, 8, 9, 14, 16, 19, 26, 61, 66, 68, 754, 895, 938, 939, 940, 1223, 1225, 1229, 1233, 1234, 1250, 1276, 1278, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1371, 1372, 1389, 1390, 1404, 1406, 1434, 1436, 1437, 1458, 1469, 1611, 1694, 1805, 1806, 1856, 1857, 1858, 1867, 1874, 1878, 1880, 1883, 1884, 1885, 1886, 1891, 1902, 1904, 1914, 1918, 1919], "from": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 52, 53, 55, 57, 58, 60, 61, 63, 65, 66, 67, 86, 151, 152, 171, 194, 219, 220, 255, 283, 310, 312, 316, 318, 374, 399, 444, 450, 467, 469, 470, 477, 482, 483, 488, 508, 510, 512, 538, 540, 554, 574, 601, 602, 604, 611, 674, 706, 707, 708, 709, 710, 711, 714, 722, 723, 726, 729, 732, 733, 734, 735, 736, 737, 739, 740, 750, 754, 758, 766, 767, 768, 775, 782, 783, 786, 787, 788, 791, 794, 809, 810, 811, 818, 820, 834, 848, 852, 854, 855, 856, 858, 859, 873, 874, 885, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 907, 908, 916, 917, 925, 926, 931, 932, 944, 962, 963, 966, 975, 976, 977, 995, 999, 1017, 1044, 1060, 1080, 1082, 1083, 1088, 1089, 1090, 1094, 1095, 1096, 1097, 1100, 1101, 1102, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1144, 1145, 1149, 1164, 1184, 1185, 1187, 1188, 1190, 1192, 1193, 1194, 1197, 1198, 1210, 1226, 1230, 1239, 1242, 1243, 1256, 1257, 1258, 1259, 1273, 1277, 1278, 1291, 1296, 1300, 1301, 1302, 1304, 1309, 1318, 1319, 1327, 1331, 1337, 1338, 1339, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1371, 1372, 1373, 1374, 1380, 1382, 1383, 1384, 1385, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1419, 1420, 1421, 1425, 1429, 1430, 1434, 1436, 1437, 1458, 1463, 1464, 1468, 1470, 1471, 1483, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1515, 1518, 1520, 1529, 1542, 1543, 1544, 1556, 1586, 1590, 1599, 1603, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1626, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1643, 1647, 1653, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1694, 1697, 1705, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1726, 1727, 1730, 1732, 1733, 1740, 1753, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1801, 1802, 1806, 1816, 1819, 1828, 1830, 1832, 1837, 1838, 1840, 1841, 1850, 1855, 1857, 1858, 1859, 1860, 1862, 1864, 1866, 1867, 1868, 1869, 1870, 1872, 1874, 1875, 1876, 1878, 1880, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1901, 1903, 1904, 1905, 1906, 1910, 1911, 1912, 1914, 1915, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1925], "can": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 148, 152, 251, 320, 332, 454, 483, 508, 510, 539, 608, 611, 674, 681, 723, 735, 736, 737, 742, 751, 752, 754, 762, 763, 766, 767, 768, 779, 785, 786, 787, 788, 791, 793, 808, 814, 817, 818, 820, 831, 835, 848, 852, 853, 855, 856, 857, 873, 874, 883, 884, 885, 887, 888, 889, 890, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 907, 908, 910, 914, 917, 934, 940, 947, 952, 961, 963, 966, 973, 975, 977, 984, 985, 1003, 1005, 1009, 1011, 1013, 1017, 1018, 1043, 1060, 1061, 1064, 1065, 1078, 1080, 1081, 1082, 1083, 1096, 1099, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1140, 1143, 1148, 1149, 1162, 1178, 1184, 1185, 1187, 1188, 1190, 1191, 1193, 1197, 1198, 1200, 1202, 1203, 1208, 1211, 1218, 1226, 1229, 1233, 1234, 1239, 1242, 1245, 1246, 1250, 1256, 1258, 1275, 1276, 1278, 1288, 1297, 1316, 1318, 1319, 1320, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1361, 1362, 1363, 1364, 1367, 1368, 1371, 1376, 1377, 1378, 1380, 1386, 1388, 1389, 1392, 1393, 1394, 1405, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1424, 1425, 1426, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1446, 1447, 1450, 1455, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1513, 1514, 1529, 1542, 1543, 1544, 1562, 1568, 1587, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1611, 1632, 1633, 1639, 1644, 1646, 1650, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1683, 1684, 1686, 1690, 1692, 1701, 1705, 1713, 1717, 1727, 1733, 1736, 1748, 1750, 1751, 1753, 1778, 1780, 1787, 1788, 1789, 1790, 1791, 1792, 1796, 1799, 1800, 1801, 1805, 1819, 1823, 1826, 1828, 1836, 1839, 1842, 1843, 1847, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1864, 1866, 1867, 1868, 1870, 1872, 1873, 1874, 1875, 1876, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926], "improv": [0, 1, 2, 4, 10, 21, 26, 29, 33, 36, 38, 60, 68, 754, 798, 799, 800, 895, 897, 901, 955, 1140, 1357, 1371, 1389, 1434, 1465, 1568, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1688, 1855, 1857, 1879, 1884, 1885, 1886, 1894, 1895, 1899, 1905, 1906, 1910], "time": [0, 2, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 19, 21, 22, 23, 25, 26, 29, 35, 36, 38, 39, 40, 42, 44, 45, 46, 52, 55, 56, 57, 65, 67, 68, 86, 287, 310, 483, 488, 611, 674, 679, 680, 681, 682, 683, 684, 685, 688, 739, 740, 750, 754, 758, 762, 763, 793, 795, 818, 835, 871, 901, 907, 908, 912, 915, 927, 935, 937, 952, 959, 963, 964, 966, 1006, 1019, 1038, 1041, 1052, 1081, 1082, 1083, 1089, 1100, 1101, 1102, 1110, 1113, 1122, 1123, 1124, 1127, 1128, 1176, 1184, 1187, 1194, 1199, 1202, 1203, 1207, 1212, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1231, 1232, 1233, 1236, 1238, 1242, 1245, 1247, 1249, 1250, 1258, 1259, 1281, 1291, 1308, 1309, 1311, 1321, 1329, 1330, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1363, 1366, 1367, 1368, 1371, 1382, 1383, 1384, 1389, 1391, 1405, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1431, 1432, 1434, 1455, 1458, 1470, 1471, 1472, 1473, 1483, 1486, 1487, 1513, 1514, 1558, 1559, 1560, 1576, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1606, 1607, 1609, 1611, 1645, 1661, 1662, 1682, 1692, 1693, 1704, 1726, 1732, 1782, 1796, 1801, 1802, 1821, 1847, 1855, 1859, 1860, 1861, 1866, 1868, 1872, 1878, 1880, 1882, 1884, 1885, 1887, 1888, 1890, 1891, 1893, 1895, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1910, 1911, 1912, 1914, 1919, 1924], "perform": [0, 1, 2, 3, 4, 5, 6, 12, 14, 16, 17, 18, 19, 20, 21, 23, 27, 29, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 55, 56, 60, 64, 67, 68, 117, 204, 207, 454, 574, 597, 611, 680, 681, 682, 683, 684, 685, 754, 775, 798, 799, 800, 841, 852, 855, 888, 893, 895, 897, 898, 901, 902, 915, 927, 947, 952, 953, 962, 968, 1017, 1041, 1042, 1055, 1080, 1103, 1105, 1116, 1117, 1120, 1151, 1162, 1187, 1196, 1197, 1202, 1230, 1232, 1235, 1239, 1242, 1243, 1247, 1248, 1256, 1257, 1259, 1264, 1273, 1286, 1291, 1300, 1301, 1311, 1314, 1317, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1359, 1362, 1363, 1371, 1389, 1419, 1425, 1427, 1434, 1447, 1462, 1465, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1537, 1554, 1568, 1574, 1575, 1590, 1599, 1601, 1602, 1607, 1611, 1632, 1639, 1641, 1646, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1694, 1702, 1730, 1744, 1748, 1776, 1781, 1782, 1783, 1784, 1804, 1806, 1840, 1855, 1857, 1860, 1870, 1872, 1873, 1874, 1876, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1892, 1894, 1895, 1898, 1901, 1902, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1925], "ha": [0, 1, 2, 6, 7, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 26, 27, 29, 30, 31, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 86, 148, 194, 207, 252, 257, 332, 441, 442, 443, 444, 445, 469, 470, 491, 493, 538, 574, 575, 597, 598, 612, 674, 683, 687, 689, 690, 691, 693, 729, 754, 773, 775, 779, 781, 785, 791, 832, 834, 841, 852, 858, 868, 869, 871, 883, 886, 887, 889, 891, 897, 902, 903, 917, 935, 938, 939, 952, 953, 954, 960, 963, 964, 966, 971, 999, 1002, 1003, 1048, 1050, 1064, 1096, 1108, 1116, 1117, 1120, 1121, 1124, 1128, 1140, 1149, 1150, 1161, 1184, 1187, 1191, 1194, 1197, 1198, 1199, 1202, 1207, 1208, 1216, 1217, 1218, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1238, 1240, 1241, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1253, 1254, 1258, 1267, 1274, 1276, 1281, 1284, 1286, 1287, 1288, 1289, 1291, 1292, 1314, 1315, 1316, 1317, 1335, 1336, 1337, 1338, 1339, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1363, 1366, 1367, 1368, 1371, 1374, 1379, 1382, 1383, 1384, 1389, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1423, 1424, 1425, 1426, 1427, 1434, 1450, 1452, 1458, 1466, 1470, 1471, 1483, 1493, 1494, 1495, 1501, 1510, 1513, 1514, 1518, 1529, 1553, 1555, 1556, 1558, 1562, 1568, 1574, 1587, 1589, 1590, 1593, 1594, 1599, 1606, 1608, 1610, 1613, 1617, 1619, 1622, 1632, 1633, 1640, 1641, 1645, 1647, 1653, 1656, 1658, 1661, 1662, 1678, 1679, 1680, 1682, 1686, 1688, 1692, 1702, 1704, 1705, 1706, 1707, 1724, 1726, 1736, 1748, 1770, 1783, 1784, 1785, 1796, 1798, 1799, 1800, 1801, 1804, 1805, 1822, 1828, 1842, 1843, 1847, 1857, 1859, 1860, 1866, 1867, 1870, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1909, 1910, 1911, 1912, 1914, 1916, 1917, 1919, 1920, 1921, 1922], "lower": [0, 1, 2, 9, 16, 26, 36, 38, 44, 60, 787, 789, 853, 926, 931, 938, 939, 940, 942, 1074, 1075, 1147, 1148, 1216, 1223, 1225, 1233, 1234, 1241, 1244, 1249, 1287, 1309, 1316, 1327, 1437, 1493, 1494, 1495, 1566, 1567, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1686, 1688, 1703, 1705, 1725, 1740, 1748, 1785, 1828, 1829, 1830, 1856, 1857, 1858, 1860, 1876, 1878, 1880, 1891, 1900, 1905, 1915, 1921], "preced": [0, 42, 46, 60, 674, 1594, 1686, 1825, 1861, 1882, 1901, 1905], "backend": [0, 2, 13, 16, 17, 19, 20, 22, 23, 29, 54, 58, 60, 735, 736, 737, 786, 787, 827, 849, 850, 853, 855, 856, 895, 901, 947, 986, 1017, 1060, 1117, 1200, 1230, 1232, 1250, 1300, 1301, 1302, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1518, 1556, 1568, 1599, 1656, 1657, 1748, 1855, 1856, 1858, 1859, 1864, 1868, 1871, 1882, 1883, 1894, 1895, 1898, 1906, 1908, 1914], "inductor": [0, 12, 14, 17, 18, 20, 22, 26, 674, 947, 1866], "nopython": [0, 16, 18, 19, 26], "guard_export_fn": 0, "guard_fail_fn": 0, "disabl": [0, 1, 3, 6, 13, 15, 16, 17, 22, 26, 39, 44, 60, 68, 804, 805, 914, 947, 1006, 1060, 1064, 1116, 1162, 1187, 1189, 1202, 1203, 1419, 1425, 1458, 1466, 1568, 1599, 1600, 1641, 1644, 1749, 1750, 1753, 1780, 1855, 1859, 1866, 1879, 1882, 1883, 1884, 1885, 1889, 1894, 1895, 1898, 1903, 1909, 1914, 1921], "main": [0, 4, 8, 12, 16, 19, 25, 35, 36, 38, 39, 44, 46, 47, 48, 53, 55, 56, 57, 58, 68, 257, 491, 1047, 1048, 1049, 1050, 1051, 1249, 1520, 1785, 1829, 1830, 1831, 1832, 1854, 1857, 1870, 1872, 1874, 1875, 1879, 1880, 1883, 1884, 1885, 1886, 1891, 1897, 1910, 1911, 1919, 1920], "entrypoint": [0, 40, 43, 46, 48, 53, 56, 1872], "do": [0, 1, 2, 5, 8, 9, 10, 14, 15, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 35, 36, 38, 42, 43, 45, 46, 48, 55, 56, 57, 60, 61, 62, 65, 66, 67, 68, 490, 508, 510, 512, 752, 817, 820, 857, 886, 888, 893, 902, 933, 946, 1006, 1039, 1040, 1041, 1042, 1111, 1113, 1122, 1129, 1149, 1162, 1174, 1184, 1190, 1198, 1202, 1232, 1250, 1259, 1266, 1276, 1278, 1287, 1309, 1319, 1331, 1341, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1376, 1377, 1378, 1405, 1437, 1438, 1439, 1446, 1461, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1520, 1522, 1537, 1590, 1599, 1647, 1655, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1692, 1698, 1840, 1854, 1855, 1857, 1858, 1860, 1862, 1864, 1872, 1873, 1874, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1904, 1905, 1906, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1921], "extract": [0, 12, 23, 24, 32, 68, 830, 1362, 1366, 1470, 1509, 1586, 1904, 1910, 1924], "paramet": [0, 1, 2, 3, 4, 6, 13, 16, 17, 20, 24, 25, 27, 29, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 49, 53, 55, 57, 60, 62, 64, 67, 68, 86, 148, 153, 168, 170, 173, 176, 177, 178, 193, 194, 204, 207, 237, 251, 252, 257, 264, 294, 310, 312, 314, 316, 318, 322, 328, 390, 397, 399, 441, 442, 443, 444, 445, 454, 467, 488, 491, 492, 493, 494, 495, 508, 510, 512, 515, 519, 531, 538, 539, 540, 554, 560, 577, 578, 579, 581, 582, 597, 598, 601, 611, 612, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 749, 750, 752, 753, 754, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 785, 787, 789, 791, 793, 794, 795, 808, 813, 814, 815, 816, 817, 818, 819, 820, 821, 832, 833, 834, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 887, 895, 896, 897, 898, 899, 900, 901, 902, 903, 909, 910, 911, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 984, 988, 989, 990, 992, 995, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1161, 1162, 1164, 1166, 1167, 1169, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1197, 1198, 1199, 1200, 1202, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1299, 1300, 1301, 1304, 1305, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1450, 1451, 1452, 1454, 1455, 1456, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1513, 1514, 1515, 1517, 1518, 1520, 1522, 1529, 1530, 1537, 1542, 1543, 1544, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1568, 1574, 1575, 1583, 1587, 1588, 1589, 1590, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1697, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1735, 1736, 1740, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1776, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1809, 1810, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1854, 1855, 1857, 1860, 1862, 1864, 1868, 1869, 1872, 1874, 1875, 1876, 1878, 1879, 1880, 1883, 1884, 1885, 1889, 1890, 1891, 1893, 1895, 1896, 1898, 1902, 1903, 1904, 1905, 1909, 1910, 1911, 1914, 1915, 1916, 1919, 1921, 1923, 1924, 1925], "One": [0, 4, 9, 12, 14, 15, 29, 38, 40, 60, 63, 65, 68, 577, 926, 1117, 1128, 1178, 1471, 1555, 1606, 1609, 1675, 1680, 1688, 1715, 1716, 1836, 1847, 1857, 1859, 1860, 1874, 1875, 1881, 1882, 1883, 1885, 1890, 1903, 1912, 1919], "thing": [0, 2, 4, 8, 9, 15, 16, 19, 24, 26, 38, 65, 68, 1117, 1196, 1288, 1335, 1520, 1779, 1859, 1880, 1883, 1885, 1886, 1887, 1888, 1893, 1898, 1902, 1905, 1906, 1912], "either": [0, 2, 9, 10, 14, 16, 17, 18, 20, 29, 32, 35, 36, 38, 42, 43, 44, 46, 48, 53, 55, 56, 57, 60, 65, 67, 68, 152, 219, 310, 318, 508, 510, 611, 674, 726, 732, 733, 734, 739, 740, 750, 758, 773, 779, 785, 852, 884, 886, 893, 902, 903, 934, 947, 966, 974, 1060, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1113, 1117, 1140, 1164, 1180, 1187, 1202, 1242, 1257, 1258, 1273, 1288, 1325, 1326, 1329, 1330, 1333, 1334, 1335, 1336, 1347, 1348, 1349, 1351, 1352, 1353, 1355, 1363, 1373, 1379, 1386, 1388, 1410, 1411, 1413, 1414, 1419, 1422, 1423, 1424, 1425, 1426, 1433, 1434, 1436, 1450, 1451, 1466, 1467, 1469, 1471, 1472, 1473, 1490, 1491, 1501, 1529, 1530, 1553, 1561, 1587, 1594, 1599, 1624, 1646, 1661, 1662, 1664, 1686, 1701, 1703, 1745, 1801, 1805, 1850, 1854, 1857, 1859, 1860, 1862, 1866, 1874, 1878, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1895, 1898, 1901, 1902, 1903, 1905, 1911, 1912, 1914, 1915, 1918, 1921, 1926], "callabl": [0, 4, 6, 12, 17, 19, 25, 35, 36, 38, 42, 44, 46, 48, 53, 55, 57, 60, 67, 68, 70, 71, 72, 117, 395, 835, 947, 1003, 1004, 1006, 1117, 1118, 1119, 1124, 1127, 1128, 1187, 1190, 1198, 1202, 1258, 1259, 1419, 1462, 1464, 1466, 1468, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1669, 1671, 1672, 1673, 1674, 1675, 1682, 1685, 1847, 1854, 1857, 1859, 1860, 1861, 1870, 1883, 1891, 1898, 1902, 1903, 1904, 1910, 1921, 1923, 1924, 1925], "take": [0, 1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15, 16, 19, 25, 29, 35, 36, 38, 40, 42, 44, 46, 54, 55, 56, 57, 60, 62, 63, 65, 66, 67, 68, 754, 787, 792, 808, 814, 820, 856, 895, 896, 897, 898, 899, 900, 902, 903, 940, 960, 997, 1048, 1050, 1051, 1076, 1078, 1081, 1084, 1088, 1089, 1091, 1094, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1219, 1241, 1244, 1327, 1336, 1363, 1367, 1368, 1371, 1389, 1413, 1414, 1415, 1416, 1417, 1419, 1427, 1434, 1462, 1472, 1473, 1513, 1514, 1531, 1555, 1568, 1599, 1644, 1672, 1676, 1701, 1828, 1847, 1854, 1857, 1858, 1860, 1867, 1868, 1872, 1873, 1874, 1875, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1895, 1897, 1898, 1900, 1902, 1904, 1905, 1910, 1911, 1912, 1914, 1917, 1918, 1919, 1923], "graphmodul": [0, 12, 15, 19, 25, 26, 70, 71, 72, 73, 853, 854, 855, 856, 1924], "example_input": [0, 12, 15, 19, 811, 812, 855, 856, 1198, 1202, 1905, 1924], "python": [0, 1, 2, 4, 5, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 29, 30, 32, 35, 38, 42, 44, 45, 46, 48, 49, 52, 53, 55, 56, 60, 68, 349, 583, 618, 674, 775, 874, 895, 896, 897, 898, 899, 900, 902, 903, 933, 934, 946, 947, 997, 1003, 1004, 1006, 1055, 1060, 1078, 1080, 1108, 1113, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1163, 1185, 1187, 1188, 1190, 1191, 1192, 1197, 1198, 1202, 1258, 1420, 1421, 1429, 1430, 1568, 1599, 1698, 1720, 1724, 1744, 1745, 1780, 1847, 1854, 1864, 1866, 1871, 1872, 1874, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1893, 1896, 1897, 1902, 1905, 1909, 1910, 1911, 1912, 1917, 1920, 1921], "run": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 25, 26, 29, 30, 32, 35, 36, 38, 39, 42, 44, 46, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 148, 786, 792, 811, 813, 814, 815, 816, 819, 851, 855, 856, 857, 887, 901, 902, 903, 1005, 1006, 1117, 1122, 1128, 1162, 1187, 1188, 1190, 1191, 1194, 1196, 1198, 1200, 1202, 1203, 1232, 1258, 1259, 1287, 1337, 1338, 1339, 1356, 1382, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1419, 1447, 1458, 1568, 1590, 1599, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1748, 1752, 1784, 1830, 1832, 1840, 1847, 1855, 1857, 1860, 1868, 1870, 1872, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1905, 1908, 1909, 1910, 1911, 1912, 1914, 1919, 1922, 1923, 1924], "faster": [0, 1, 3, 9, 16, 18, 21, 23, 27, 35, 36, 38, 60, 896, 902, 903, 1116, 1216, 1217, 1222, 1223, 1227, 1232, 1240, 1242, 1244, 1247, 1250, 1252, 1256, 1259, 1435, 1452, 1558, 1574, 1599, 1603, 1604, 1606, 1661, 1662, 1673, 1787, 1788, 1789, 1791, 1792, 1868, 1880, 1883, 1888, 1901, 1905, 1914, 1919], "also": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 16, 17, 21, 22, 25, 26, 27, 29, 30, 32, 35, 36, 38, 42, 43, 44, 45, 52, 55, 60, 64, 65, 66, 67, 68, 152, 216, 219, 220, 251, 320, 508, 510, 512, 537, 608, 735, 736, 737, 754, 794, 808, 855, 874, 883, 884, 893, 916, 925, 939, 947, 960, 1003, 1006, 1017, 1041, 1042, 1060, 1064, 1080, 1111, 1117, 1123, 1127, 1128, 1129, 1132, 1134, 1144, 1145, 1149, 1162, 1187, 1190, 1191, 1193, 1196, 1200, 1202, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1288, 1294, 1307, 1315, 1327, 1335, 1337, 1338, 1339, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1363, 1366, 1371, 1385, 1389, 1419, 1426, 1434, 1448, 1450, 1458, 1467, 1468, 1470, 1496, 1497, 1498, 1518, 1555, 1571, 1590, 1599, 1609, 1611, 1621, 1623, 1625, 1626, 1627, 1628, 1644, 1676, 1682, 1686, 1689, 1692, 1717, 1724, 1736, 1746, 1761, 1762, 1779, 1782, 1796, 1805, 1814, 1816, 1819, 1825, 1826, 1837, 1838, 1847, 1850, 1854, 1855, 1857, 1859, 1860, 1864, 1866, 1867, 1868, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1905, 1910, 1911, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1925], "provid": [0, 1, 2, 4, 8, 9, 10, 12, 14, 16, 19, 20, 23, 25, 26, 27, 29, 30, 35, 36, 38, 39, 40, 42, 43, 44, 46, 48, 53, 55, 56, 57, 58, 60, 64, 67, 68, 148, 597, 674, 683, 729, 732, 733, 734, 739, 740, 742, 750, 751, 754, 758, 782, 783, 793, 794, 808, 818, 835, 852, 887, 896, 898, 899, 900, 926, 931, 934, 939, 940, 959, 971, 1017, 1060, 1080, 1116, 1128, 1140, 1148, 1149, 1184, 1187, 1193, 1194, 1198, 1200, 1202, 1217, 1234, 1259, 1291, 1350, 1351, 1352, 1355, 1371, 1372, 1380, 1385, 1389, 1390, 1415, 1416, 1417, 1419, 1425, 1426, 1429, 1434, 1436, 1447, 1462, 1463, 1464, 1465, 1466, 1490, 1491, 1568, 1599, 1613, 1633, 1641, 1656, 1657, 1686, 1689, 1694, 1730, 1740, 1787, 1788, 1789, 1790, 1791, 1792, 1830, 1832, 1847, 1854, 1857, 1859, 1860, 1864, 1866, 1867, 1868, 1870, 1872, 1873, 1874, 1883, 1884, 1885, 1886, 1888, 1891, 1892, 1894, 1898, 1901, 1902, 1903, 1905, 1906, 1908, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1926], "addit": [0, 1, 2, 4, 6, 8, 10, 14, 16, 21, 22, 26, 29, 30, 35, 38, 39, 40, 44, 49, 55, 56, 60, 67, 68, 332, 508, 601, 743, 745, 746, 747, 748, 752, 754, 775, 789, 808, 853, 1017, 1184, 1187, 1191, 1196, 1201, 1327, 1338, 1339, 1340, 1350, 1351, 1352, 1363, 1370, 1371, 1373, 1380, 1383, 1384, 1398, 1399, 1400, 1404, 1405, 1406, 1407, 1409, 1415, 1416, 1417, 1419, 1425, 1427, 1452, 1454, 1458, 1462, 1466, 1468, 1489, 1496, 1497, 1498, 1535, 1599, 1664, 1837, 1838, 1845, 1857, 1859, 1860, 1866, 1870, 1873, 1874, 1875, 1880, 1882, 1883, 1885, 1886, 1890, 1893, 1894, 1897, 1898, 1899, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1914, 1918, 1921], "context": [0, 1, 3, 6, 14, 15, 19, 35, 42, 46, 55, 56, 60, 68, 148, 786, 883, 884, 885, 887, 888, 901, 902, 914, 967, 982, 984, 995, 1001, 1006, 1013, 1033, 1035, 1064, 1118, 1122, 1127, 1162, 1187, 1300, 1419, 1568, 1590, 1599, 1600, 1609, 1611, 1644, 1653, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1750, 1780, 1855, 1860, 1861, 1872, 1879, 1880, 1883, 1885, 1889, 1890, 1893, 1898, 1902, 1904, 1909, 1910, 1912, 1914, 1917, 1922], "like": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 35, 36, 38, 43, 44, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 68, 333, 583, 611, 754, 787, 835, 854, 872, 893, 902, 903, 916, 925, 1003, 1004, 1013, 1055, 1060, 1061, 1081, 1103, 1106, 1107, 1113, 1117, 1120, 1121, 1122, 1128, 1144, 1145, 1185, 1187, 1188, 1194, 1197, 1202, 1206, 1233, 1234, 1245, 1258, 1327, 1335, 1363, 1366, 1382, 1383, 1384, 1419, 1420, 1421, 1429, 1430, 1447, 1470, 1512, 1530, 1586, 1590, 1599, 1600, 1601, 1602, 1607, 1632, 1650, 1675, 1698, 1713, 1717, 1736, 1745, 1748, 1805, 1816, 1847, 1852, 1854, 1855, 1857, 1859, 1860, 1867, 1872, 1873, 1874, 1879, 1880, 1883, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1901, 1903, 1904, 1905, 1908, 1910, 1911, 1914, 1916, 1917, 1921, 1922, 1924, 1925], "jit": [0, 1, 12, 14, 18, 23, 24, 27, 29, 1003, 1004, 1035, 1137, 1185, 1186, 1187, 1201, 1655, 1656, 1751, 1752, 1855, 1859, 1862, 1868, 1874, 1882, 1890, 1896, 1898, 1905, 1910, 1919], "fuser": [0, 787, 1200, 1857], "fuser2": 0, "set": [0, 1, 2, 3, 4, 6, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 25, 26, 28, 29, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 53, 55, 56, 57, 58, 60, 63, 64, 67, 68, 86, 148, 152, 251, 327, 441, 442, 443, 444, 445, 454, 491, 515, 574, 575, 674, 729, 735, 737, 754, 773, 779, 786, 787, 788, 791, 809, 810, 811, 814, 815, 816, 819, 820, 835, 848, 852, 853, 855, 856, 859, 872, 884, 886, 887, 894, 895, 896, 897, 898, 899, 900, 901, 914, 926, 931, 942, 946, 947, 953, 971, 986, 995, 1007, 1008, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1061, 1063, 1116, 1125, 1134, 1149, 1167, 1168, 1187, 1191, 1194, 1196, 1198, 1200, 1202, 1203, 1222, 1223, 1226, 1232, 1239, 1241, 1243, 1244, 1256, 1257, 1258, 1259, 1273, 1276, 1279, 1299, 1303, 1304, 1305, 1327, 1331, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1371, 1374, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1404, 1406, 1410, 1411, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1429, 1433, 1434, 1450, 1451, 1458, 1467, 1468, 1483, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1505, 1506, 1511, 1518, 1522, 1529, 1530, 1539, 1540, 1553, 1555, 1561, 1568, 1587, 1599, 1601, 1602, 1607, 1612, 1641, 1653, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1690, 1704, 1711, 1713, 1717, 1719, 1720, 1728, 1729, 1740, 1741, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1770, 1785, 1799, 1800, 1819, 1829, 1830, 1831, 1832, 1840, 1842, 1843, 1854, 1856, 1857, 1859, 1860, 1861, 1864, 1866, 1868, 1869, 1870, 1872, 1875, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1897, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1919, 1921, 1923, 1924, 1925], "backend_ctx_ctor": 0, "attribut": [0, 1, 2, 19, 25, 27, 35, 36, 38, 39, 45, 68, 148, 287, 490, 491, 721, 732, 733, 734, 735, 736, 737, 739, 740, 750, 758, 785, 796, 809, 810, 811, 832, 833, 834, 852, 853, 883, 887, 889, 893, 1111, 1186, 1187, 1188, 1190, 1191, 1197, 1198, 1259, 1356, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1419, 1462, 1599, 1600, 1610, 1611, 1612, 1633, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1855, 1858, 1861, 1875, 1879, 1880, 1883, 1885, 1886, 1891, 1896, 1898, 1902, 1905, 1910, 1920, 1921, 1925, 1926], "see": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 17, 18, 19, 24, 25, 26, 29, 30, 31, 34, 35, 38, 39, 44, 47, 55, 56, 58, 60, 65, 66, 67, 68, 87, 91, 93, 95, 97, 99, 101, 103, 105, 107, 110, 111, 112, 113, 114, 115, 116, 118, 120, 122, 124, 126, 127, 130, 132, 133, 134, 135, 136, 138, 140, 142, 143, 146, 148, 149, 151, 152, 153, 154, 155, 157, 159, 161, 163, 165, 167, 168, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 187, 190, 191, 195, 197, 198, 200, 202, 203, 205, 208, 209, 210, 212, 215, 216, 218, 222, 223, 224, 225, 226, 227, 228, 231, 232, 234, 236, 237, 238, 240, 242, 243, 245, 247, 249, 252, 253, 258, 260, 261, 262, 263, 264, 265, 267, 269, 271, 272, 273, 275, 277, 278, 279, 281, 284, 285, 288, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 304, 306, 310, 318, 319, 320, 321, 322, 324, 325, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 356, 358, 360, 362, 364, 366, 367, 369, 371, 375, 376, 377, 378, 379, 381, 383, 385, 387, 389, 390, 391, 393, 394, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 423, 425, 426, 427, 428, 429, 430, 434, 436, 438, 446, 448, 449, 451, 453, 455, 456, 457, 458, 460, 461, 463, 464, 466, 473, 475, 476, 478, 480, 483, 484, 486, 488, 489, 490, 492, 493, 494, 496, 497, 500, 501, 502, 505, 510, 512, 513, 514, 516, 519, 520, 522, 524, 525, 527, 529, 532, 533, 534, 536, 537, 541, 542, 544, 546, 548, 549, 550, 555, 557, 559, 561, 562, 563, 564, 566, 567, 568, 570, 572, 573, 584, 585, 586, 588, 589, 591, 593, 595, 599, 600, 603, 604, 605, 608, 609, 610, 612, 613, 614, 615, 674, 687, 689, 690, 693, 724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 736, 737, 739, 740, 742, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 765, 766, 767, 768, 773, 774, 775, 776, 777, 778, 779, 787, 834, 853, 854, 855, 856, 859, 868, 869, 870, 873, 884, 886, 887, 888, 889, 890, 892, 893, 897, 901, 902, 907, 908, 911, 916, 918, 925, 927, 930, 944, 947, 957, 961, 962, 963, 964, 966, 968, 969, 971, 985, 986, 995, 996, 1006, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1024, 1025, 1026, 1055, 1058, 1060, 1061, 1063, 1064, 1073, 1078, 1096, 1099, 1114, 1119, 1120, 1121, 1123, 1132, 1140, 1144, 1145, 1149, 1150, 1158, 1159, 1160, 1162, 1187, 1191, 1198, 1202, 1203, 1205, 1206, 1208, 1218, 1226, 1229, 1232, 1234, 1241, 1243, 1244, 1252, 1256, 1257, 1259, 1265, 1267, 1273, 1274, 1276, 1284, 1286, 1287, 1288, 1289, 1291, 1292, 1300, 1301, 1307, 1314, 1316, 1317, 1327, 1335, 1336, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1362, 1363, 1365, 1371, 1373, 1379, 1380, 1385, 1386, 1389, 1410, 1411, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1431, 1432, 1433, 1434, 1437, 1446, 1448, 1450, 1451, 1463, 1464, 1465, 1466, 1467, 1468, 1471, 1477, 1478, 1479, 1480, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1587, 1588, 1589, 1599, 1600, 1606, 1607, 1608, 1611, 1617, 1626, 1635, 1640, 1643, 1644, 1645, 1646, 1650, 1692, 1702, 1703, 1713, 1715, 1717, 1719, 1720, 1724, 1727, 1730, 1736, 1745, 1748, 1750, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1773, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1799, 1800, 1801, 1804, 1814, 1816, 1819, 1825, 1826, 1830, 1832, 1840, 1842, 1843, 1848, 1850, 1852, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1865, 1866, 1867, 1869, 1872, 1873, 1874, 1875, 1876, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1903, 1904, 1905, 1906, 1909, 1910, 1911, 1914, 1915, 1917, 1918, 1920, 1921, 1922, 1925, 1926], "aotautogradmemoryefficientfusionwithcontext": 0, "usag": [0, 1, 2, 5, 8, 10, 14, 15, 16, 26, 30, 35, 38, 42, 44, 45, 46, 49, 52, 53, 55, 57, 60, 68, 742, 751, 786, 787, 788, 804, 805, 806, 807, 809, 810, 811, 848, 852, 884, 1009, 1029, 1033, 1060, 1111, 1116, 1120, 1121, 1122, 1200, 1259, 1599, 1654, 1857, 1860, 1870, 1874, 1879, 1880, 1885, 1887, 1898, 1904, 1912, 1919, 1920, 1922, 1923, 1924], "Or": [0, 8, 19, 46, 68, 942, 1889, 1892, 1898, 1914], "string": [0, 3, 4, 12, 16, 19, 26, 28, 29, 35, 38, 46, 52, 53, 55, 68, 597, 808, 848, 986, 1003, 1004, 1060, 1117, 1187, 1194, 1197, 1258, 1347, 1348, 1349, 1419, 1420, 1429, 1462, 1464, 1466, 1493, 1494, 1495, 1622, 1704, 1736, 1744, 1746, 1854, 1858, 1859, 1860, 1861, 1874, 1880, 1885, 1890, 1891, 1898, 1902, 1904, 1910, 1916, 1917, 1919, 1924, 1925], "name": [0, 2, 3, 4, 12, 13, 16, 19, 22, 25, 26, 29, 36, 38, 43, 44, 46, 48, 49, 52, 53, 55, 57, 60, 68, 674, 691, 741, 742, 751, 786, 808, 809, 810, 811, 818, 834, 848, 852, 911, 962, 989, 1116, 1126, 1185, 1187, 1188, 1194, 1197, 1202, 1203, 1217, 1222, 1223, 1229, 1230, 1232, 1233, 1234, 1235, 1245, 1246, 1248, 1250, 1251, 1258, 1419, 1469, 1592, 1597, 1598, 1599, 1606, 1607, 1608, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1641, 1643, 1655, 1656, 1736, 1746, 1841, 1854, 1855, 1857, 1858, 1860, 1861, 1864, 1866, 1869, 1870, 1872, 1878, 1880, 1883, 1884, 1885, 1888, 1890, 1891, 1898, 1900, 1902, 1903, 1904, 1910, 1911, 1916, 1919, 1921, 1922, 1923, 1924, 1925, 1926], "list_backend": [0, 12, 17, 18, 20, 947, 1855], "whole": [0, 15, 19, 21, 22, 35, 38, 40, 1128, 1187, 1419, 1447, 1458, 1599, 1847, 1880, 1884, 1893, 1894, 1902], "program": [0, 2, 4, 5, 9, 14, 15, 16, 18, 20, 21, 23, 26, 32, 35, 38, 47, 56, 58, 60, 68, 611, 952, 953, 1009, 1011, 1117, 1748, 1857, 1859, 1861, 1880, 1883, 1887, 1890, 1892, 1893, 1896, 1897, 1919], "turn": [0, 15, 17, 18, 19, 29, 35, 65, 68, 674, 867, 947, 1175, 1202, 1463, 1465, 1787, 1788, 1789, 1790, 1791, 1792, 1867, 1880, 1883, 1894, 1895, 1898, 1904, 1905, 1911, 1914], "decor": [0, 1, 2, 12, 23, 44, 48, 52, 56, 68, 893, 1064, 1162, 1192, 1198, 1204, 1644, 1780, 1857, 1859, 1860, 1864, 1879, 1880, 1885, 1903, 1910, 1925], "exampl": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 29, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 85, 86, 189, 206, 239, 251, 257, 286, 308, 310, 312, 314, 318, 332, 349, 398, 399, 441, 442, 443, 444, 445, 467, 477, 479, 483, 488, 491, 494, 508, 510, 512, 531, 538, 552, 554, 574, 575, 577, 578, 579, 580, 581, 582, 583, 601, 611, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 714, 722, 723, 728, 732, 733, 734, 735, 736, 737, 739, 740, 742, 750, 751, 752, 754, 755, 756, 757, 758, 759, 766, 767, 768, 779, 786, 787, 788, 790, 791, 804, 805, 806, 807, 808, 809, 810, 811, 818, 832, 848, 853, 854, 855, 856, 859, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 905, 907, 908, 915, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 945, 946, 947, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 1003, 1004, 1009, 1011, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1124, 1126, 1128, 1129, 1130, 1131, 1134, 1140, 1143, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1157, 1161, 1162, 1164, 1172, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1483, 1485, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1509, 1510, 1513, 1514, 1518, 1520, 1553, 1555, 1556, 1559, 1560, 1568, 1587, 1590, 1599, 1606, 1607, 1609, 1611, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1695, 1697, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1735, 1736, 1740, 1742, 1743, 1744, 1745, 1746, 1749, 1750, 1753, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1778, 1780, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1800, 1802, 1804, 1805, 1807, 1808, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1854, 1855, 1857, 1859, 1860, 1861, 1864, 1866, 1867, 1869, 1870, 1873, 1874, 1875, 1878, 1880, 1881, 1882, 1883, 1887, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1901, 1902, 1903, 1904, 1905, 1906, 1910, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925], "toy_exampl": [0, 12, 13, 16, 19, 26], "b": [0, 1, 2, 4, 12, 13, 16, 18, 19, 25, 26, 27, 35, 38, 40, 44, 53, 68, 257, 332, 395, 611, 679, 680, 742, 751, 775, 818, 874, 891, 893, 894, 905, 907, 908, 915, 926, 927, 929, 933, 935, 937, 940, 945, 954, 960, 1003, 1004, 1052, 1055, 1059, 1060, 1105, 1106, 1107, 1108, 1113, 1117, 1130, 1152, 1164, 1184, 1190, 1197, 1198, 1206, 1207, 1209, 1218, 1219, 1227, 1231, 1232, 1236, 1239, 1240, 1241, 1242, 1243, 1244, 1247, 1248, 1249, 1252, 1253, 1256, 1259, 1268, 1270, 1271, 1277, 1285, 1290, 1292, 1308, 1336, 1340, 1362, 1363, 1370, 1406, 1489, 1491, 1510, 1517, 1535, 1606, 1633, 1634, 1635, 1636, 1637, 1638, 1646, 1653, 1672, 1674, 1705, 1711, 1724, 1727, 1743, 1755, 1774, 1782, 1787, 1788, 1789, 1791, 1792, 1796, 1801, 1802, 1804, 1811, 1812, 1821, 1828, 1829, 1831, 1844, 1849, 1856, 1857, 1858, 1859, 1860, 1873, 1874, 1875, 1878, 1879, 1881, 1883, 1887, 1888, 1889, 1894, 1896, 1904, 1905, 1911, 1912, 1914, 1915, 1918, 1919, 1924], "optimize_assert": [0, 1855], "hook": [0, 2, 15, 16, 19, 23, 39, 42, 60, 483, 742, 751, 893, 907, 908, 1006, 1187, 1356, 1419, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629, 1640, 1643, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1855, 1876, 1884, 1885, 1890, 1902, 1905], "export_constraint": 0, "same": [0, 1, 2, 4, 8, 12, 14, 15, 16, 19, 21, 25, 26, 29, 30, 31, 32, 35, 36, 38, 39, 40, 42, 44, 46, 52, 53, 55, 56, 57, 58, 60, 63, 65, 67, 68, 137, 151, 193, 219, 252, 308, 310, 312, 316, 318, 336, 441, 442, 443, 444, 445, 467, 479, 492, 493, 495, 508, 510, 512, 515, 538, 574, 611, 612, 680, 683, 687, 689, 690, 691, 693, 714, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 739, 740, 750, 752, 755, 756, 757, 758, 759, 773, 779, 782, 783, 787, 788, 790, 794, 796, 808, 813, 816, 818, 819, 853, 855, 872, 873, 874, 886, 889, 892, 895, 896, 897, 898, 899, 900, 902, 903, 915, 917, 918, 927, 929, 931, 934, 939, 941, 949, 960, 961, 963, 974, 976, 995, 1006, 1043, 1048, 1050, 1051, 1057, 1060, 1062, 1063, 1066, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1108, 1112, 1113, 1115, 1116, 1117, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1132, 1140, 1148, 1149, 1157, 1161, 1178, 1184, 1187, 1197, 1198, 1202, 1203, 1207, 1208, 1216, 1217, 1218, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1254, 1274, 1278, 1280, 1281, 1284, 1286, 1287, 1288, 1289, 1292, 1314, 1317, 1318, 1319, 1325, 1326, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1366, 1369, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1391, 1401, 1402, 1403, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1427, 1428, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1470, 1471, 1474, 1475, 1476, 1483, 1489, 1490, 1491, 1493, 1494, 1495, 1501, 1510, 1518, 1520, 1529, 1530, 1568, 1587, 1599, 1606, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1632, 1636, 1641, 1646, 1647, 1651, 1653, 1657, 1671, 1692, 1697, 1698, 1701, 1702, 1714, 1716, 1718, 1722, 1724, 1726, 1727, 1731, 1740, 1743, 1756, 1779, 1787, 1788, 1789, 1791, 1792, 1798, 1799, 1800, 1804, 1805, 1815, 1826, 1837, 1838, 1839, 1840, 1842, 1843, 1844, 1847, 1853, 1854, 1857, 1859, 1860, 1870, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1893, 1894, 1895, 1896, 1898, 1901, 1902, 1903, 1905, 1908, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925], "f": [0, 2, 11, 12, 14, 19, 24, 25, 36, 38, 44, 46, 47, 52, 53, 61, 62, 65, 66, 67, 68, 171, 255, 283, 332, 374, 889, 890, 1078, 1080, 1087, 1096, 1117, 1118, 1120, 1121, 1122, 1123, 1127, 1128, 1140, 1187, 1194, 1197, 1198, 1258, 1385, 1387, 1388, 1390, 1419, 1468, 1485, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1509, 1510, 1513, 1514, 1520, 1553, 1555, 1556, 1568, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1736, 1847, 1857, 1859, 1860, 1873, 1874, 1880, 1883, 1885, 1887, 1888, 1889, 1891, 1897, 1898, 1902, 1903, 1914, 1919, 1921, 1925], "arg": [0, 1, 2, 4, 5, 6, 12, 13, 15, 19, 25, 26, 29, 35, 36, 38, 42, 43, 44, 46, 47, 53, 54, 56, 57, 58, 60, 67, 68, 85, 574, 597, 674, 726, 741, 743, 745, 746, 747, 748, 754, 756, 757, 818, 855, 884, 886, 891, 892, 1006, 1116, 1120, 1121, 1122, 1128, 1187, 1190, 1276, 1335, 1336, 1353, 1355, 1371, 1379, 1381, 1386, 1389, 1408, 1410, 1411, 1419, 1422, 1423, 1424, 1426, 1433, 1434, 1447, 1449, 1450, 1451, 1453, 1457, 1458, 1459, 1460, 1467, 1490, 1491, 1501, 1530, 1553, 1561, 1590, 1599, 1613, 1618, 1632, 1639, 1641, 1654, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1806, 1838, 1844, 1847, 1854, 1858, 1860, 1861, 1872, 1874, 1880, 1883, 1884, 1885, 1886, 1893, 1898, 1899, 1902, 1903, 1910, 1911, 1912, 1916, 1924, 1925], "aten_graph": 0, "pre_autograd": 0, "decomposition_t": 0, "tracing_mod": 0, "symbol": [0, 14, 15, 24, 29, 34, 81, 618, 811, 1201, 1255, 1389, 1434, 1828, 1844, 1855, 1860, 1899], "constraint": [0, 14, 38, 43, 788, 789, 896, 995, 1006, 1122, 1599, 1607, 1632, 1675, 1855, 1860, 1875, 1886, 1888, 1891, 1914], "assume_static_by_default": [0, 14], "kwarg": [0, 1, 2, 6, 12, 13, 25, 26, 29, 38, 39, 42, 55, 60, 68, 574, 597, 741, 754, 756, 757, 815, 816, 818, 821, 884, 964, 966, 1003, 1004, 1116, 1127, 1128, 1187, 1190, 1192, 1250, 1276, 1371, 1381, 1389, 1408, 1419, 1434, 1449, 1453, 1457, 1459, 1460, 1590, 1595, 1599, 1613, 1618, 1622, 1632, 1639, 1641, 1644, 1654, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1736, 1838, 1847, 1854, 1860, 1861, 1885, 1886, 1891, 1899, 1901, 1910, 1916, 1924, 1925], "input": [0, 2, 3, 4, 6, 10, 14, 15, 24, 25, 26, 27, 30, 33, 35, 36, 38, 39, 42, 43, 44, 45, 48, 60, 61, 62, 63, 64, 65, 66, 68, 80, 86, 148, 257, 277, 298, 398, 479, 512, 603, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 714, 722, 723, 728, 729, 732, 733, 734, 735, 736, 737, 739, 740, 750, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 796, 808, 811, 813, 831, 832, 833, 834, 851, 852, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 891, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 911, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 935, 936, 938, 939, 940, 941, 942, 943, 944, 946, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 976, 1003, 1004, 1006, 1039, 1040, 1041, 1042, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1062, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1167, 1169, 1172, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1190, 1191, 1193, 1194, 1198, 1200, 1202, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1277, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1625, 1626, 1627, 1628, 1632, 1633, 1634, 1636, 1641, 1644, 1645, 1646, 1648, 1649, 1651, 1653, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1679, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1714, 1716, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1735, 1737, 1738, 1739, 1742, 1743, 1745, 1756, 1757, 1758, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1814, 1815, 1816, 1817, 1818, 1820, 1822, 1823, 1824, 1825, 1828, 1829, 1831, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1867, 1868, 1874, 1875, 1876, 1878, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1891, 1894, 1895, 1896, 1898, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1914, 1915, 1917, 1918, 1921, 1923, 1924, 1925], "format": [0, 2, 26, 33, 36, 38, 40, 48, 57, 68, 153, 168, 170, 173, 176, 177, 178, 193, 204, 207, 237, 264, 294, 322, 328, 390, 494, 495, 519, 574, 577, 578, 579, 580, 581, 582, 674, 729, 754, 786, 787, 944, 1006, 1060, 1061, 1062, 1115, 1184, 1187, 1200, 1229, 1342, 1363, 1371, 1389, 1419, 1434, 1599, 1633, 1635, 1651, 1653, 1654, 1656, 1714, 1716, 1718, 1736, 1779, 1782, 1787, 1788, 1789, 1790, 1791, 1792, 1801, 1853, 1854, 1857, 1860, 1861, 1866, 1883, 1885, 1891, 1896, 1898, 1899, 1900, 1904, 1905, 1910, 1911, 1914, 1917, 1919, 1921], "execut": [0, 1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 16, 19, 21, 23, 25, 26, 29, 30, 35, 38, 40, 42, 46, 47, 49, 56, 60, 65, 67, 68, 483, 907, 908, 966, 977, 1038, 1117, 1187, 1188, 1190, 1202, 1203, 1258, 1300, 1301, 1356, 1419, 1425, 1463, 1464, 1465, 1466, 1593, 1595, 1599, 1751, 1855, 1857, 1859, 1861, 1868, 1879, 1881, 1882, 1887, 1890, 1891, 1893, 1895, 1897, 1898, 1904, 1905, 1910, 1911, 1914], "outsid": [0, 1, 6, 10, 21, 24, 35, 48, 60, 65, 678, 789, 879, 1116, 1118, 1122, 1127, 1188, 1518, 1599, 1677, 1678, 1683, 1684, 1690, 1859, 1860, 1878, 1880, 1883, 1886, 1887, 1921], "pytorch": [0, 1, 2, 3, 4, 5, 6, 12, 14, 15, 16, 17, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 48, 55, 56, 60, 61, 64, 66, 68, 80, 81, 83, 84, 148, 508, 577, 674, 692, 724, 725, 726, 727, 739, 740, 750, 754, 755, 756, 757, 758, 759, 786, 787, 804, 805, 806, 807, 874, 887, 932, 937, 938, 947, 948, 960, 966, 985, 986, 997, 1002, 1060, 1105, 1111, 1117, 1118, 1122, 1127, 1128, 1133, 1173, 1174, 1197, 1217, 1228, 1230, 1231, 1232, 1235, 1248, 1257, 1273, 1276, 1277, 1288, 1335, 1336, 1342, 1371, 1385, 1415, 1416, 1417, 1462, 1491, 1568, 1599, 1632, 1640, 1641, 1646, 1653, 1657, 1704, 1736, 1744, 1745, 1755, 1801, 1805, 1828, 1840, 1847, 1854, 1856, 1859, 1860, 1864, 1866, 1867, 1869, 1870, 1874, 1875, 1876, 1881, 1882, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1897, 1901, 1902, 1904, 1905, 1906, 1907, 1910, 1911, 1914, 1915, 1917, 1918, 1919, 1925, 1926], "A": [0, 2, 3, 4, 6, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 24, 25, 26, 29, 32, 35, 36, 38, 39, 40, 42, 43, 44, 46, 52, 55, 56, 57, 60, 61, 66, 67, 73, 86, 554, 574, 577, 578, 579, 588, 618, 674, 686, 691, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 739, 740, 750, 755, 756, 757, 758, 759, 784, 786, 808, 852, 853, 855, 856, 913, 916, 925, 926, 928, 933, 938, 939, 946, 947, 955, 959, 963, 964, 966, 974, 976, 977, 1045, 1060, 1065, 1073, 1074, 1075, 1087, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1131, 1140, 1143, 1144, 1145, 1149, 1177, 1178, 1179, 1180, 1183, 1185, 1187, 1190, 1194, 1197, 1199, 1202, 1203, 1207, 1211, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1259, 1267, 1275, 1276, 1277, 1278, 1282, 1320, 1336, 1340, 1342, 1355, 1362, 1363, 1372, 1373, 1381, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1409, 1418, 1419, 1425, 1447, 1452, 1454, 1462, 1467, 1468, 1483, 1489, 1501, 1509, 1520, 1530, 1537, 1548, 1568, 1574, 1575, 1590, 1599, 1600, 1601, 1602, 1606, 1608, 1611, 1633, 1634, 1637, 1653, 1654, 1655, 1656, 1661, 1663, 1664, 1669, 1673, 1675, 1679, 1680, 1682, 1685, 1686, 1688, 1694, 1704, 1706, 1707, 1708, 1709, 1710, 1721, 1727, 1733, 1736, 1769, 1778, 1780, 1781, 1784, 1796, 1800, 1801, 1805, 1806, 1823, 1828, 1829, 1830, 1831, 1832, 1836, 1837, 1838, 1839, 1840, 1843, 1847, 1850, 1854, 1856, 1857, 1858, 1859, 1860, 1864, 1867, 1868, 1873, 1874, 1878, 1879, 1882, 1883, 1885, 1886, 1887, 1893, 1894, 1896, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1924, 1925, 1926], "variabl": [0, 3, 4, 6, 14, 16, 18, 26, 29, 32, 34, 36, 44, 46, 48, 53, 58, 60, 65, 68, 444, 674, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 718, 719, 720, 722, 723, 724, 725, 726, 728, 732, 733, 734, 735, 736, 737, 739, 740, 750, 754, 758, 793, 891, 955, 959, 1029, 1061, 1128, 1200, 1202, 1259, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1362, 1363, 1371, 1372, 1389, 1390, 1391, 1404, 1406, 1419, 1422, 1427, 1434, 1436, 1599, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1650, 1657, 1659, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1713, 1715, 1717, 1840, 1847, 1852, 1854, 1855, 1866, 1867, 1874, 1875, 1880, 1882, 1884, 1887, 1888, 1894, 1895, 1897, 1898, 1901, 1905, 1910, 1916, 1919], "length": [0, 14, 16, 26, 35, 36, 38, 40, 44, 257, 310, 312, 318, 348, 429, 430, 577, 578, 579, 729, 754, 808, 887, 901, 946, 977, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1113, 1128, 1161, 1184, 1202, 1206, 1318, 1319, 1337, 1342, 1347, 1356, 1363, 1366, 1371, 1387, 1389, 1425, 1434, 1462, 1470, 1493, 1494, 1495, 1502, 1510, 1529, 1568, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1711, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1785, 1787, 1788, 1789, 1791, 1792, 1801, 1826, 1847, 1856, 1858, 1860, 1867, 1874, 1875, 1881, 1887, 1914, 1921], "argument": [0, 1, 2, 4, 5, 6, 9, 10, 15, 25, 29, 32, 35, 38, 39, 40, 42, 44, 46, 53, 56, 58, 60, 64, 65, 67, 68, 86, 148, 194, 207, 310, 318, 441, 442, 443, 444, 445, 483, 508, 512, 554, 574, 575, 577, 578, 579, 581, 582, 597, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 728, 732, 733, 734, 735, 736, 737, 787, 788, 793, 813, 814, 815, 818, 819, 820, 835, 851, 852, 855, 857, 859, 874, 875, 876, 877, 878, 879, 883, 884, 885, 886, 887, 891, 892, 893, 896, 898, 899, 900, 901, 902, 907, 908, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 927, 931, 934, 936, 937, 938, 939, 940, 942, 944, 945, 949, 953, 954, 956, 957, 959, 960, 982, 984, 988, 989, 995, 1003, 1004, 1006, 1029, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1057, 1058, 1059, 1061, 1062, 1063, 1065, 1070, 1073, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1161, 1164, 1181, 1182, 1184, 1187, 1190, 1198, 1202, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1277, 1278, 1280, 1281, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1323, 1337, 1338, 1339, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1363, 1366, 1369, 1371, 1378, 1381, 1382, 1383, 1384, 1385, 1389, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1415, 1416, 1417, 1419, 1420, 1425, 1426, 1427, 1434, 1458, 1466, 1470, 1472, 1473, 1516, 1518, 1554, 1590, 1593, 1594, 1595, 1596, 1599, 1610, 1611, 1613, 1617, 1618, 1622, 1626, 1632, 1641, 1645, 1647, 1650, 1651, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1680, 1692, 1693, 1697, 1698, 1701, 1702, 1704, 1705, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1725, 1726, 1733, 1735, 1740, 1744, 1750, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1778, 1780, 1782, 1783, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1816, 1817, 1818, 1819, 1821, 1822, 1823, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1840, 1842, 1843, 1847, 1848, 1849, 1850, 1852, 1853, 1854, 1858, 1859, 1860, 1862, 1864, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1895, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1914, 1915, 1916, 1917, 1919, 1921, 1925, 1926], "list": [0, 1, 2, 4, 6, 7, 8, 10, 12, 14, 15, 17, 18, 19, 20, 25, 26, 29, 30, 32, 35, 36, 38, 39, 40, 42, 44, 46, 55, 57, 60, 65, 67, 68, 81, 182, 238, 299, 441, 443, 445, 572, 577, 578, 579, 583, 613, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 786, 787, 792, 808, 809, 810, 811, 832, 848, 855, 873, 880, 881, 882, 929, 930, 933, 937, 941, 946, 947, 987, 993, 1045, 1058, 1060, 1061, 1100, 1114, 1126, 1140, 1150, 1187, 1191, 1193, 1198, 1200, 1202, 1203, 1286, 1288, 1317, 1356, 1362, 1391, 1419, 1421, 1430, 1447, 1458, 1469, 1509, 1583, 1599, 1600, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1646, 1650, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1680, 1682, 1684, 1685, 1686, 1688, 1689, 1707, 1709, 1710, 1713, 1717, 1732, 1769, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1799, 1800, 1804, 1819, 1820, 1821, 1837, 1838, 1840, 1842, 1843, 1848, 1852, 1854, 1857, 1858, 1861, 1862, 1866, 1868, 1870, 1873, 1874, 1875, 1885, 1889, 1891, 1894, 1895, 1896, 1900, 1901, 1902, 1903, 1904, 1905, 1910, 1911, 1914, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925], "bool": [0, 1, 2, 3, 4, 6, 14, 17, 25, 29, 35, 36, 38, 39, 40, 42, 43, 44, 46, 49, 55, 57, 60, 67, 68, 148, 194, 207, 242, 257, 316, 318, 325, 326, 327, 328, 330, 331, 336, 338, 441, 442, 443, 444, 445, 454, 467, 491, 512, 575, 597, 674, 687, 688, 689, 690, 691, 693, 729, 752, 773, 774, 779, 788, 808, 859, 868, 869, 870, 874, 887, 895, 896, 897, 898, 899, 900, 901, 902, 903, 914, 916, 919, 921, 922, 924, 925, 931, 932, 938, 939, 940, 946, 947, 963, 970, 1000, 1006, 1018, 1061, 1062, 1063, 1066, 1073, 1078, 1096, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1122, 1123, 1127, 1129, 1144, 1145, 1148, 1149, 1162, 1172, 1176, 1178, 1184, 1187, 1191, 1193, 1194, 1202, 1203, 1206, 1208, 1216, 1217, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1239, 1241, 1243, 1244, 1247, 1248, 1249, 1250, 1256, 1257, 1258, 1259, 1268, 1269, 1270, 1271, 1273, 1274, 1276, 1278, 1284, 1286, 1287, 1289, 1292, 1300, 1301, 1309, 1314, 1315, 1316, 1317, 1318, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1368, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1419, 1422, 1423, 1424, 1425, 1426, 1428, 1433, 1436, 1437, 1438, 1439, 1446, 1450, 1451, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1471, 1483, 1490, 1491, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1515, 1518, 1520, 1522, 1529, 1530, 1553, 1561, 1568, 1587, 1599, 1600, 1603, 1604, 1606, 1608, 1610, 1611, 1612, 1633, 1634, 1635, 1636, 1638, 1641, 1646, 1650, 1651, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1694, 1700, 1702, 1704, 1705, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1740, 1745, 1749, 1750, 1755, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1778, 1787, 1788, 1789, 1790, 1791, 1792, 1799, 1800, 1801, 1804, 1805, 1813, 1819, 1823, 1828, 1837, 1838, 1840, 1841, 1842, 1843, 1852, 1853, 1854, 1856, 1857, 1858, 1859, 1860, 1869, 1870, 1872, 1873, 1874, 1875, 1889, 1896, 1898, 1900, 1902, 1903, 1904, 1909, 1910, 1916, 1917, 1919, 1920, 1921, 1922, 1924, 1925], "aten": [0, 2, 3, 4, 12, 20, 26, 29, 32, 80, 1003, 1117, 1309, 1655, 1656, 1780, 1855, 1857, 1858, 1864, 1882, 1897, 1900, 1904, 1905], "oper": [0, 1, 3, 5, 6, 8, 9, 13, 14, 16, 18, 19, 23, 24, 25, 26, 27, 30, 32, 35, 40, 44, 45, 52, 53, 55, 56, 61, 66, 67, 68, 80, 81, 82, 83, 84, 251, 310, 318, 332, 349, 399, 441, 442, 443, 444, 445, 488, 491, 508, 510, 512, 583, 680, 683, 735, 736, 737, 741, 742, 751, 752, 762, 763, 773, 779, 786, 787, 789, 790, 793, 817, 820, 853, 855, 856, 859, 883, 885, 891, 893, 915, 916, 918, 920, 923, 925, 927, 929, 934, 937, 940, 944, 953, 964, 966, 994, 1003, 1034, 1039, 1040, 1041, 1042, 1055, 1060, 1061, 1062, 1063, 1073, 1078, 1096, 1108, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1128, 1135, 1138, 1144, 1145, 1162, 1187, 1197, 1198, 1202, 1203, 1206, 1216, 1229, 1239, 1242, 1243, 1256, 1257, 1266, 1273, 1281, 1286, 1291, 1300, 1301, 1314, 1317, 1331, 1336, 1341, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1376, 1377, 1378, 1379, 1381, 1386, 1405, 1410, 1415, 1416, 1417, 1419, 1432, 1437, 1438, 1439, 1446, 1461, 1462, 1464, 1466, 1470, 1486, 1487, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1503, 1504, 1505, 1506, 1510, 1511, 1513, 1514, 1518, 1522, 1529, 1535, 1537, 1543, 1544, 1554, 1556, 1560, 1568, 1574, 1575, 1586, 1587, 1588, 1589, 1599, 1601, 1602, 1635, 1641, 1646, 1650, 1651, 1672, 1678, 1688, 1692, 1701, 1702, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1724, 1730, 1747, 1748, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1781, 1782, 1783, 1784, 1787, 1788, 1789, 1790, 1791, 1792, 1796, 1804, 1819, 1840, 1847, 1850, 1852, 1853, 1855, 1856, 1857, 1861, 1864, 1879, 1881, 1882, 1883, 1884, 1886, 1887, 1891, 1892, 1893, 1894, 1895, 1899, 1901, 1904, 1906, 1908, 1909, 1910, 1911, 1915, 1917, 1918, 1921], "default": [0, 1, 3, 4, 6, 10, 12, 14, 15, 16, 17, 20, 21, 22, 25, 26, 27, 29, 32, 38, 39, 40, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 68, 148, 153, 168, 170, 173, 176, 177, 178, 193, 204, 207, 237, 264, 287, 294, 322, 328, 390, 441, 442, 443, 444, 445, 454, 491, 494, 495, 515, 519, 574, 575, 577, 674, 688, 691, 706, 707, 708, 709, 710, 711, 714, 724, 725, 726, 727, 729, 749, 752, 754, 762, 763, 764, 766, 767, 768, 773, 779, 787, 792, 797, 802, 803, 808, 811, 813, 814, 815, 816, 819, 822, 823, 824, 825, 826, 827, 828, 829, 835, 836, 837, 838, 839, 840, 842, 843, 848, 849, 850, 852, 859, 873, 874, 887, 888, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 916, 925, 931, 935, 938, 939, 940, 944, 947, 959, 960, 963, 966, 968, 972, 975, 976, 977, 980, 981, 988, 989, 992, 1003, 1005, 1006, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1030, 1031, 1034, 1036, 1037, 1038, 1041, 1042, 1043, 1048, 1049, 1050, 1051, 1052, 1055, 1060, 1061, 1062, 1063, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1127, 1128, 1132, 1134, 1140, 1144, 1145, 1148, 1149, 1176, 1178, 1184, 1187, 1188, 1191, 1198, 1202, 1203, 1206, 1207, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1273, 1276, 1278, 1284, 1286, 1287, 1288, 1292, 1313, 1314, 1316, 1317, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1436, 1437, 1438, 1439, 1446, 1450, 1451, 1455, 1456, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1515, 1517, 1518, 1520, 1522, 1529, 1530, 1537, 1542, 1543, 1544, 1553, 1554, 1556, 1561, 1568, 1574, 1575, 1583, 1587, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1633, 1634, 1636, 1638, 1639, 1640, 1641, 1643, 1645, 1646, 1650, 1651, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1694, 1702, 1704, 1705, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1726, 1732, 1733, 1736, 1740, 1744, 1745, 1746, 1747, 1748, 1753, 1755, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1799, 1800, 1801, 1804, 1805, 1806, 1819, 1820, 1826, 1828, 1830, 1832, 1837, 1838, 1840, 1841, 1842, 1843, 1847, 1852, 1853, 1854, 1855, 1857, 1860, 1864, 1866, 1868, 1869, 1872, 1875, 1878, 1879, 1882, 1884, 1885, 1886, 1887, 1889, 1891, 1894, 1896, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1909, 1910, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1926], "tranform": 0, "autograd": [0, 1, 5, 6, 8, 9, 16, 21, 26, 38, 42, 44, 60, 61, 64, 137, 332, 441, 442, 443, 444, 445, 491, 683, 859, 873, 874, 888, 914, 916, 925, 944, 1006, 1061, 1062, 1063, 1073, 1078, 1096, 1113, 1114, 1115, 1116, 1117, 1126, 1128, 1144, 1145, 1162, 1187, 1206, 1226, 1257, 1273, 1281, 1291, 1373, 1419, 1425, 1466, 1520, 1535, 1599, 1650, 1651, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1787, 1788, 1789, 1790, 1791, 1792, 1819, 1847, 1852, 1853, 1855, 1858, 1862, 1867, 1875, 1878, 1883, 1884, 1887, 1888, 1890, 1891, 1904, 1920, 1921, 1922, 1925], "appli": [0, 1, 2, 4, 6, 9, 13, 25, 36, 40, 42, 43, 44, 46, 48, 55, 60, 64, 65, 66, 68, 80, 81, 117, 318, 395, 468, 508, 512, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 729, 732, 733, 734, 735, 736, 737, 752, 754, 760, 761, 762, 763, 764, 765, 766, 767, 768, 774, 775, 776, 777, 778, 804, 805, 806, 807, 834, 852, 891, 893, 894, 902, 914, 920, 923, 954, 1048, 1050, 1055, 1064, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1108, 1116, 1117, 1124, 1127, 1128, 1187, 1191, 1236, 1259, 1276, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1361, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1433, 1434, 1437, 1438, 1439, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1472, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1513, 1514, 1515, 1516, 1519, 1521, 1522, 1523, 1524, 1528, 1529, 1530, 1532, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1548, 1553, 1561, 1562, 1563, 1564, 1568, 1569, 1570, 1571, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1590, 1595, 1596, 1599, 1606, 1607, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1632, 1633, 1640, 1641, 1643, 1644, 1646, 1659, 1671, 1675, 1688, 1701, 1706, 1707, 1708, 1709, 1710, 1750, 1781, 1782, 1784, 1801, 1837, 1838, 1839, 1847, 1857, 1860, 1867, 1872, 1874, 1879, 1880, 1883, 1884, 1885, 1886, 1888, 1891, 1894, 1898, 1901, 1902, 1903, 1905, 1908, 1911, 1914, 1915], "further": [0, 1, 2, 5, 10, 14, 26, 29, 36, 38, 60, 67, 1132, 1191, 1226, 1327, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1599, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1692, 1856, 1860, 1867, 1891, 1893, 1902, 1904, 1912, 1919, 1924], "flag": [0, 2, 3, 16, 17, 25, 26, 29, 38, 39, 45, 56, 58, 60, 63, 65, 68, 729, 867, 895, 897, 914, 916, 925, 938, 939, 947, 991, 1111, 1116, 1118, 1119, 1121, 1122, 1123, 1127, 1128, 1144, 1145, 1162, 1168, 1175, 1278, 1425, 1529, 1530, 1599, 1608, 1611, 1641, 1661, 1662, 1748, 1750, 1755, 1780, 1828, 1840, 1847, 1855, 1857, 1860, 1872, 1880, 1883, 1885, 1894, 1895, 1898, 1902, 1905, 1919, 1920], "onli": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 18, 19, 21, 24, 25, 26, 29, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 53, 55, 56, 60, 64, 65, 67, 68, 80, 81, 117, 251, 308, 318, 320, 332, 349, 441, 442, 443, 444, 445, 454, 477, 482, 508, 510, 512, 551, 577, 578, 579, 581, 582, 608, 611, 689, 690, 729, 732, 733, 734, 735, 737, 766, 767, 768, 773, 779, 780, 781, 785, 787, 795, 808, 811, 814, 815, 818, 822, 836, 843, 852, 872, 888, 891, 892, 893, 894, 895, 897, 902, 916, 917, 925, 962, 963, 964, 966, 973, 975, 977, 1003, 1004, 1006, 1027, 1057, 1061, 1063, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1106, 1107, 1111, 1112, 1117, 1128, 1140, 1144, 1145, 1149, 1157, 1168, 1176, 1185, 1187, 1190, 1191, 1198, 1202, 1203, 1206, 1217, 1222, 1223, 1225, 1226, 1227, 1228, 1230, 1232, 1233, 1234, 1235, 1245, 1247, 1248, 1250, 1251, 1258, 1259, 1276, 1281, 1327, 1350, 1351, 1352, 1355, 1356, 1362, 1363, 1366, 1389, 1419, 1422, 1424, 1425, 1427, 1435, 1458, 1470, 1471, 1501, 1510, 1512, 1518, 1529, 1556, 1586, 1587, 1590, 1593, 1594, 1595, 1596, 1599, 1601, 1602, 1612, 1632, 1633, 1634, 1646, 1653, 1657, 1661, 1662, 1664, 1675, 1678, 1682, 1685, 1686, 1688, 1692, 1704, 1713, 1717, 1719, 1721, 1744, 1748, 1749, 1751, 1755, 1782, 1786, 1796, 1801, 1805, 1819, 1830, 1832, 1837, 1838, 1840, 1844, 1845, 1846, 1847, 1854, 1858, 1859, 1860, 1864, 1866, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1908, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922], "valid": [0, 2, 14, 19, 21, 26, 38, 44, 53, 55, 68, 82, 741, 742, 751, 785, 938, 1003, 1060, 1185, 1187, 1188, 1208, 1222, 1223, 1232, 1233, 1234, 1245, 1250, 1281, 1347, 1348, 1349, 1493, 1494, 1495, 1518, 1590, 1617, 1622, 1626, 1655, 1656, 1676, 1677, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1690, 1704, 1857, 1858, 1859, 1860, 1874, 1875, 1880, 1883, 1885, 1889, 1898, 1901, 1904, 1910, 1911], "dict": [0, 1, 4, 6, 17, 21, 25, 35, 36, 38, 39, 40, 42, 43, 44, 46, 49, 53, 57, 60, 62, 64, 68, 674, 786, 787, 788, 809, 810, 811, 830, 848, 904, 947, 1003, 1004, 1017, 1026, 1116, 1126, 1128, 1185, 1186, 1187, 1188, 1193, 1198, 1202, 1203, 1258, 1259, 1356, 1366, 1419, 1420, 1429, 1470, 1590, 1599, 1622, 1641, 1653, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1847, 1854, 1857, 1858, 1860, 1861, 1869, 1870, 1885, 1891, 1896, 1898, 1900, 1901, 1910, 1911, 1919, 1923, 1924, 1925], "dictionari": [0, 4, 17, 21, 29, 35, 36, 44, 64, 68, 674, 786, 787, 788, 791, 809, 810, 811, 832, 833, 834, 848, 852, 858, 947, 1017, 1116, 1126, 1187, 1188, 1194, 1198, 1202, 1203, 1258, 1259, 1362, 1363, 1419, 1420, 1429, 1509, 1622, 1859, 1861, 1885, 1891, 1898, 1901, 1910, 1919, 1923, 1925], "map": [0, 4, 15, 19, 25, 29, 38, 44, 46, 52, 53, 55, 56, 60, 65, 66, 68, 678, 729, 786, 787, 791, 793, 808, 809, 811, 833, 834, 848, 849, 850, 851, 852, 858, 879, 928, 1117, 1128, 1140, 1149, 1194, 1197, 1258, 1259, 1350, 1351, 1352, 1358, 1359, 1360, 1364, 1366, 1415, 1416, 1417, 1420, 1429, 1504, 1505, 1506, 1511, 1606, 1622, 1705, 1707, 1837, 1838, 1847, 1861, 1874, 1876, 1880, 1884, 1885, 1886, 1892, 1897, 1902, 1905, 1908, 1910, 1911, 1912, 1916, 1921, 1925], "decomposit": [0, 14, 15, 25, 44, 68, 938, 1132, 1216, 1217, 1222, 1223, 1224, 1225, 1226, 1228, 1233, 1234, 1235, 1236, 1241, 1245, 1246, 1250, 1251, 1276, 1278, 1606, 1692, 1694, 1698, 1704, 1805, 1806, 1855, 1894], "requir": [0, 1, 2, 6, 9, 10, 12, 13, 15, 16, 17, 18, 21, 29, 30, 35, 36, 38, 39, 40, 42, 44, 46, 54, 55, 60, 63, 65, 67, 68, 117, 148, 219, 332, 454, 491, 508, 510, 512, 554, 787, 789, 817, 820, 874, 883, 887, 892, 895, 896, 897, 898, 899, 900, 901, 947, 960, 961, 1016, 1060, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1101, 1102, 1128, 1129, 1200, 1226, 1257, 1259, 1273, 1355, 1362, 1363, 1462, 1463, 1464, 1465, 1466, 1468, 1510, 1568, 1590, 1599, 1600, 1609, 1611, 1613, 1653, 1664, 1674, 1692, 1789, 1801, 1840, 1847, 1854, 1857, 1860, 1862, 1867, 1868, 1872, 1874, 1875, 1879, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1893, 1896, 1898, 1902, 1903, 1905, 1906, 1910, 1911, 1912, 1914, 1919, 1921, 1922, 1924, 1925], "specifi": [0, 2, 3, 4, 6, 9, 12, 14, 17, 25, 29, 35, 36, 38, 42, 43, 44, 46, 48, 53, 54, 55, 56, 60, 68, 95, 148, 193, 256, 316, 328, 467, 477, 488, 492, 494, 495, 508, 510, 512, 531, 539, 540, 554, 574, 577, 578, 579, 581, 582, 597, 674, 729, 735, 736, 737, 762, 763, 787, 788, 789, 793, 808, 817, 820, 834, 848, 852, 853, 855, 872, 874, 886, 887, 901, 918, 941, 947, 958, 959, 960, 963, 964, 973, 974, 975, 977, 992, 995, 1006, 1031, 1041, 1042, 1043, 1047, 1048, 1050, 1060, 1063, 1074, 1077, 1079, 1080, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1093, 1095, 1097, 1118, 1119, 1122, 1128, 1129, 1140, 1148, 1149, 1187, 1191, 1202, 1203, 1229, 1239, 1241, 1243, 1244, 1253, 1256, 1258, 1259, 1269, 1286, 1288, 1294, 1313, 1314, 1317, 1333, 1334, 1335, 1336, 1342, 1351, 1353, 1355, 1356, 1362, 1363, 1366, 1373, 1379, 1380, 1385, 1386, 1389, 1410, 1411, 1416, 1419, 1422, 1423, 1424, 1425, 1426, 1433, 1450, 1451, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1486, 1487, 1490, 1491, 1501, 1502, 1509, 1510, 1515, 1518, 1530, 1537, 1553, 1554, 1561, 1568, 1574, 1575, 1599, 1604, 1606, 1607, 1610, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1643, 1646, 1653, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1669, 1671, 1672, 1673, 1674, 1675, 1680, 1685, 1686, 1694, 1702, 1711, 1727, 1732, 1733, 1736, 1753, 1781, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1796, 1799, 1800, 1804, 1820, 1822, 1826, 1836, 1837, 1838, 1839, 1841, 1842, 1843, 1847, 1854, 1857, 1859, 1860, 1864, 1866, 1867, 1869, 1870, 1873, 1874, 1880, 1883, 1885, 1889, 1891, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1909, 1910, 1914, 1915, 1916, 1917, 1919, 1921], "str": [0, 1, 2, 3, 4, 16, 17, 19, 25, 26, 29, 35, 36, 38, 40, 42, 43, 44, 46, 49, 53, 55, 57, 60, 68, 318, 508, 512, 597, 773, 779, 786, 787, 788, 809, 810, 811, 848, 895, 897, 905, 909, 910, 935, 947, 962, 973, 974, 975, 977, 986, 987, 989, 990, 991, 1003, 1004, 1005, 1017, 1018, 1020, 1022, 1034, 1055, 1060, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1116, 1117, 1121, 1126, 1128, 1136, 1185, 1186, 1187, 1188, 1190, 1191, 1193, 1196, 1232, 1245, 1250, 1251, 1258, 1259, 1288, 1300, 1301, 1316, 1335, 1336, 1342, 1347, 1348, 1349, 1353, 1355, 1363, 1369, 1373, 1379, 1380, 1385, 1386, 1395, 1396, 1397, 1410, 1411, 1419, 1420, 1422, 1423, 1424, 1426, 1429, 1433, 1436, 1447, 1450, 1451, 1462, 1464, 1466, 1467, 1468, 1469, 1471, 1490, 1491, 1501, 1502, 1510, 1515, 1518, 1529, 1530, 1553, 1561, 1587, 1599, 1606, 1607, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1640, 1641, 1643, 1653, 1656, 1664, 1680, 1686, 1688, 1705, 1736, 1740, 1747, 1748, 1782, 1801, 1847, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1868, 1869, 1870, 1872, 1874, 1878, 1880, 1898, 1900, 1902, 1903, 1904, 1909, 1910, 1916, 1919, 1921, 1923, 1924, 1925], "result": [0, 2, 4, 5, 6, 8, 9, 10, 12, 15, 19, 20, 22, 25, 26, 29, 32, 35, 36, 38, 40, 44, 46, 48, 53, 56, 60, 65, 66, 67, 68, 151, 219, 220, 251, 252, 312, 332, 395, 491, 493, 550, 577, 578, 579, 581, 582, 612, 680, 681, 682, 683, 684, 687, 689, 690, 691, 693, 754, 787, 871, 873, 889, 890, 895, 896, 897, 898, 899, 900, 902, 903, 915, 918, 929, 933, 938, 944, 946, 955, 957, 973, 975, 977, 1003, 1004, 1017, 1039, 1040, 1041, 1042, 1043, 1055, 1060, 1078, 1081, 1087, 1096, 1103, 1105, 1108, 1112, 1113, 1116, 1117, 1118, 1121, 1122, 1127, 1128, 1132, 1148, 1149, 1151, 1164, 1178, 1187, 1190, 1191, 1198, 1202, 1203, 1205, 1207, 1208, 1212, 1226, 1228, 1230, 1231, 1239, 1243, 1245, 1247, 1248, 1249, 1256, 1266, 1267, 1274, 1284, 1286, 1287, 1288, 1289, 1291, 1292, 1314, 1317, 1356, 1358, 1359, 1360, 1364, 1366, 1371, 1385, 1389, 1419, 1425, 1434, 1463, 1464, 1465, 1466, 1470, 1500, 1518, 1529, 1583, 1586, 1587, 1599, 1606, 1608, 1641, 1644, 1645, 1646, 1647, 1656, 1686, 1692, 1694, 1701, 1702, 1705, 1711, 1724, 1730, 1745, 1773, 1783, 1785, 1786, 1797, 1799, 1800, 1801, 1804, 1805, 1806, 1815, 1819, 1820, 1825, 1826, 1828, 1829, 1831, 1842, 1843, 1847, 1857, 1858, 1859, 1860, 1867, 1868, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1894, 1895, 1898, 1899, 1901, 1903, 1904, 1906, 1907, 1910, 1911, 1914, 1917, 1919, 1920, 1921, 1924, 1925], "need": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 19, 21, 26, 29, 30, 35, 36, 38, 39, 40, 42, 43, 44, 47, 48, 53, 55, 56, 58, 60, 62, 63, 65, 68, 148, 251, 467, 490, 494, 577, 674, 728, 729, 813, 814, 815, 818, 819, 820, 835, 852, 883, 887, 891, 892, 901, 928, 929, 937, 997, 1006, 1013, 1048, 1050, 1060, 1081, 1083, 1103, 1116, 1187, 1280, 1309, 1355, 1362, 1415, 1416, 1417, 1419, 1425, 1462, 1464, 1466, 1493, 1494, 1495, 1586, 1599, 1611, 1613, 1617, 1619, 1647, 1675, 1721, 1726, 1740, 1798, 1826, 1855, 1857, 1859, 1860, 1867, 1868, 1872, 1874, 1875, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1905, 1908, 1910, 1911, 1912, 1914, 1916, 1917, 1921, 1922, 1924, 1925], "effect": [0, 1, 4, 8, 29, 35, 36, 38, 44, 57, 65, 68, 194, 207, 597, 729, 773, 779, 995, 1043, 1128, 1187, 1229, 1230, 1231, 1232, 1288, 1327, 1342, 1350, 1351, 1352, 1357, 1358, 1359, 1360, 1364, 1419, 1425, 1471, 1529, 1556, 1587, 1593, 1599, 1600, 1618, 1672, 1680, 1780, 1785, 1805, 1826, 1847, 1854, 1857, 1868, 1878, 1879, 1880, 1883, 1885, 1905, 1908, 1916, 1917, 1919], "By": [0, 2, 3, 4, 6, 13, 16, 21, 24, 26, 29, 35, 38, 47, 52, 68, 441, 442, 443, 444, 445, 874, 959, 966, 1009, 1011, 1043, 1055, 1078, 1080, 1081, 1082, 1083, 1091, 1092, 1093, 1118, 1119, 1121, 1122, 1128, 1140, 1148, 1149, 1191, 1239, 1250, 1258, 1287, 1292, 1313, 1335, 1336, 1337, 1338, 1339, 1353, 1355, 1373, 1379, 1382, 1383, 1384, 1385, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1458, 1467, 1490, 1491, 1501, 1530, 1553, 1561, 1643, 1694, 1705, 1726, 1780, 1826, 1847, 1854, 1859, 1864, 1867, 1880, 1883, 1885, 1887, 1891, 1894, 1896, 1898, 1901, 1909, 1910, 1914, 1921], "arbitrari": [0, 2, 4, 16, 21, 26, 38, 42, 251, 884, 1043, 1250, 1258, 1356, 1362, 1386, 1410, 1470, 1490, 1491, 1509, 1530, 1556, 1632, 1805, 1826, 1860, 1866, 1880, 1886, 1890, 1891, 1901, 1903, 1905, 1914, 1922, 1925], "keyword": [0, 1, 2, 6, 35, 38, 39, 42, 60, 65, 68, 86, 310, 318, 441, 442, 443, 444, 445, 575, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 855, 859, 874, 875, 876, 877, 878, 879, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 927, 931, 934, 936, 938, 939, 940, 942, 944, 945, 949, 953, 954, 956, 957, 959, 960, 973, 975, 977, 1003, 1004, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1052, 1055, 1057, 1059, 1061, 1062, 1063, 1065, 1070, 1073, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1113, 1114, 1115, 1116, 1129, 1130, 1131, 1132, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1161, 1164, 1181, 1182, 1187, 1190, 1202, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1277, 1278, 1280, 1281, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1323, 1356, 1378, 1381, 1419, 1593, 1594, 1599, 1611, 1613, 1618, 1622, 1641, 1645, 1647, 1650, 1651, 1653, 1692, 1693, 1697, 1698, 1701, 1702, 1704, 1705, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1725, 1726, 1733, 1735, 1740, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1778, 1780, 1783, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1797, 1798, 1799, 1800, 1802, 1804, 1805, 1816, 1817, 1818, 1819, 1823, 1826, 1828, 1829, 1830, 1831, 1832, 1834, 1840, 1842, 1843, 1844, 1849, 1850, 1852, 1853, 1854, 1860, 1861, 1874, 1875, 1885, 1894, 1898, 1901, 1910, 1914, 1915, 1919, 1922, 1925], "tupl": [0, 4, 6, 19, 25, 29, 35, 40, 46, 52, 53, 55, 60, 68, 316, 441, 443, 445, 492, 515, 531, 554, 577, 578, 579, 689, 690, 691, 729, 760, 761, 762, 763, 766, 767, 768, 773, 779, 780, 781, 787, 811, 812, 848, 855, 856, 872, 873, 880, 881, 882, 883, 884, 886, 895, 896, 897, 898, 899, 900, 901, 902, 903, 906, 907, 908, 930, 958, 973, 974, 977, 988, 1006, 1012, 1039, 1040, 1058, 1061, 1063, 1077, 1079, 1080, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1092, 1093, 1095, 1097, 1100, 1110, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1132, 1148, 1150, 1187, 1193, 1198, 1202, 1203, 1208, 1217, 1222, 1223, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1239, 1243, 1245, 1246, 1248, 1250, 1253, 1256, 1274, 1276, 1278, 1284, 1286, 1288, 1289, 1292, 1294, 1314, 1317, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1366, 1367, 1368, 1387, 1388, 1395, 1396, 1397, 1398, 1399, 1400, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1425, 1429, 1440, 1441, 1442, 1443, 1444, 1445, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1481, 1482, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1513, 1514, 1529, 1542, 1543, 1544, 1554, 1556, 1587, 1588, 1589, 1594, 1595, 1596, 1599, 1611, 1622, 1635, 1641, 1645, 1646, 1650, 1653, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1694, 1695, 1704, 1713, 1715, 1717, 1727, 1731, 1732, 1778, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1796, 1799, 1800, 1804, 1805, 1806, 1819, 1820, 1821, 1822, 1823, 1828, 1835, 1836, 1837, 1838, 1842, 1843, 1847, 1848, 1850, 1852, 1857, 1858, 1861, 1872, 1875, 1880, 1883, 1885, 1886, 1891, 1896, 1898, 1901, 1902, 1905, 1910, 1914, 1919, 1921, 1924, 1925], "guard": [0, 16, 21, 23, 26, 46, 674, 1855, 1866, 1893, 1900, 1902, 1922, 1925], "repres": [0, 2, 9, 14, 15, 19, 27, 35, 36, 44, 45, 46, 48, 49, 55, 57, 60, 68, 80, 754, 786, 787, 790, 883, 955, 959, 961, 993, 996, 1060, 1081, 1083, 1088, 1090, 1091, 1092, 1093, 1117, 1140, 1147, 1176, 1177, 1180, 1183, 1186, 1202, 1203, 1234, 1276, 1327, 1342, 1419, 1425, 1466, 1468, 1470, 1599, 1605, 1608, 1613, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1632, 1642, 1654, 1656, 1680, 1686, 1692, 1694, 1705, 1787, 1788, 1789, 1791, 1792, 1801, 1805, 1837, 1838, 1845, 1846, 1857, 1859, 1860, 1867, 1870, 1875, 1880, 1885, 1886, 1888, 1890, 1891, 1894, 1898, 1899, 1903, 1905, 1906, 1908, 1910, 1914, 1917, 1926], "option": [0, 1, 2, 4, 6, 13, 16, 17, 18, 19, 20, 22, 25, 26, 29, 35, 38, 42, 43, 44, 46, 49, 53, 54, 55, 57, 58, 60, 68, 81, 86, 148, 153, 168, 170, 173, 176, 177, 178, 193, 204, 207, 237, 264, 294, 322, 328, 390, 441, 442, 443, 444, 445, 483, 494, 495, 508, 515, 519, 531, 554, 574, 575, 577, 578, 579, 581, 582, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 729, 752, 773, 774, 779, 786, 788, 793, 812, 848, 853, 856, 859, 870, 872, 873, 874, 875, 876, 877, 878, 879, 886, 887, 895, 896, 897, 898, 899, 900, 901, 902, 903, 906, 907, 908, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 931, 934, 936, 937, 938, 939, 940, 942, 944, 945, 946, 947, 953, 954, 956, 957, 958, 959, 960, 961, 963, 964, 966, 968, 972, 973, 975, 976, 977, 980, 981, 988, 989, 992, 995, 1003, 1004, 1005, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1030, 1031, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1057, 1059, 1060, 1061, 1062, 1063, 1065, 1070, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1129, 1130, 1131, 1132, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1151, 1152, 1153, 1161, 1164, 1176, 1178, 1181, 1182, 1184, 1185, 1187, 1188, 1191, 1193, 1200, 1202, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1300, 1301, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1341, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1373, 1376, 1377, 1378, 1379, 1380, 1385, 1386, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1405, 1410, 1411, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1433, 1437, 1438, 1439, 1446, 1450, 1451, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1483, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1509, 1510, 1513, 1514, 1515, 1518, 1520, 1529, 1530, 1537, 1542, 1543, 1544, 1553, 1554, 1561, 1568, 1574, 1575, 1587, 1595, 1596, 1599, 1600, 1606, 1607, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1643, 1645, 1646, 1647, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1669, 1671, 1672, 1673, 1674, 1675, 1679, 1692, 1693, 1694, 1697, 1701, 1702, 1704, 1705, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1725, 1726, 1733, 1735, 1740, 1753, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1806, 1816, 1817, 1818, 1819, 1820, 1823, 1825, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1840, 1841, 1842, 1843, 1844, 1849, 1850, 1852, 1853, 1854, 1857, 1858, 1860, 1862, 1864, 1866, 1868, 1869, 1870, 1875, 1878, 1883, 1885, 1886, 1887, 1890, 1891, 1895, 1898, 1902, 1904, 1905, 1910, 1914, 1915, 1917, 1919, 1921, 1924], "accumul": [0, 1, 2, 3, 14, 16, 26, 60, 148, 287, 310, 315, 316, 318, 467, 680, 887, 901, 1256, 1599, 1659, 1660, 1840, 1857, 1858, 1870, 1880, 1883, 1884, 1887, 1894, 1901, 1906, 1910, 1911, 1914], "dure": [0, 1, 2, 6, 12, 16, 18, 19, 22, 25, 26, 29, 32, 36, 38, 40, 46, 47, 49, 55, 60, 67, 68, 81, 332, 498, 499, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 787, 821, 883, 884, 893, 1005, 1006, 1018, 1019, 1038, 1197, 1199, 1200, 1202, 1258, 1331, 1337, 1338, 1339, 1356, 1357, 1362, 1363, 1382, 1383, 1384, 1437, 1458, 1464, 1466, 1503, 1509, 1510, 1590, 1599, 1601, 1602, 1639, 1653, 1656, 1689, 1786, 1830, 1832, 1859, 1867, 1868, 1870, 1873, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1894, 1895, 1898, 1902, 1904, 1905, 1908, 1910, 1912, 1921], "abov": [0, 1, 2, 4, 12, 13, 14, 16, 18, 19, 20, 26, 30, 38, 44, 48, 55, 57, 60, 61, 66, 68, 80, 611, 674, 786, 787, 874, 916, 925, 940, 1017, 1043, 1047, 1048, 1049, 1050, 1051, 1060, 1132, 1144, 1145, 1187, 1188, 1207, 1218, 1222, 1223, 1241, 1243, 1244, 1247, 1250, 1253, 1256, 1259, 1335, 1366, 1419, 1447, 1455, 1470, 1568, 1590, 1647, 1680, 1704, 1715, 1716, 1748, 1753, 1766, 1785, 1826, 1829, 1830, 1831, 1832, 1854, 1857, 1859, 1860, 1867, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1891, 1895, 1896, 1898, 1902, 1905, 1910, 1911, 1912, 1914, 1915, 1921], "assertionerror": [0, 26, 68, 728, 1656, 1921], "without": [0, 1, 2, 4, 6, 8, 9, 10, 14, 15, 16, 18, 26, 29, 32, 35, 36, 38, 39, 40, 42, 44, 48, 55, 60, 61, 66, 67, 68, 251, 611, 944, 964, 966, 1001, 1081, 1082, 1083, 1091, 1092, 1093, 1184, 1185, 1187, 1188, 1233, 1234, 1249, 1256, 1309, 1337, 1338, 1339, 1359, 1363, 1382, 1383, 1384, 1416, 1419, 1427, 1458, 1466, 1510, 1590, 1599, 1623, 1639, 1680, 1711, 1727, 1744, 1745, 1835, 1854, 1859, 1860, 1867, 1868, 1870, 1872, 1874, 1879, 1880, 1881, 1883, 1884, 1885, 1888, 1889, 1891, 1893, 1895, 1896, 1898, 1902, 1903, 1905, 1909, 1910, 1914, 1919, 1924, 1926], "dynamo": [0, 12, 14, 15, 17, 18, 19, 21, 22, 26, 68, 674, 947, 1866, 1899], "output": [0, 1, 2, 5, 6, 8, 12, 13, 14, 15, 16, 18, 19, 24, 25, 26, 32, 35, 36, 38, 42, 43, 44, 46, 52, 53, 64, 65, 66, 68, 137, 310, 318, 441, 442, 443, 445, 508, 512, 560, 611, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 714, 722, 723, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 766, 767, 768, 769, 771, 773, 774, 775, 776, 777, 779, 780, 781, 786, 787, 788, 790, 793, 796, 808, 811, 852, 855, 856, 857, 859, 868, 869, 872, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 915, 917, 918, 919, 920, 921, 922, 923, 924, 927, 931, 934, 935, 936, 937, 938, 939, 940, 942, 945, 953, 954, 956, 957, 960, 973, 975, 976, 977, 1003, 1004, 1006, 1016, 1017, 1039, 1040, 1041, 1042, 1044, 1047, 1048, 1050, 1052, 1055, 1057, 1059, 1060, 1061, 1062, 1063, 1065, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1114, 1115, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1140, 1143, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1161, 1164, 1181, 1182, 1184, 1187, 1191, 1198, 1202, 1203, 1207, 1208, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1509, 1510, 1512, 1513, 1514, 1515, 1518, 1520, 1529, 1530, 1535, 1537, 1542, 1543, 1544, 1553, 1554, 1558, 1559, 1560, 1561, 1568, 1583, 1587, 1588, 1589, 1593, 1595, 1596, 1599, 1607, 1608, 1609, 1612, 1633, 1635, 1636, 1640, 1643, 1645, 1646, 1647, 1650, 1651, 1653, 1656, 1657, 1675, 1679, 1692, 1693, 1701, 1702, 1705, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1725, 1726, 1728, 1729, 1733, 1735, 1740, 1748, 1753, 1756, 1758, 1770, 1771, 1773, 1778, 1782, 1783, 1785, 1786, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1816, 1817, 1818, 1823, 1826, 1828, 1829, 1831, 1834, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1844, 1847, 1849, 1850, 1852, 1853, 1854, 1857, 1858, 1860, 1866, 1868, 1873, 1874, 1875, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1891, 1894, 1898, 1901, 1902, 1903, 1904, 1905, 1907, 1911, 1914, 1915, 1917, 1918, 1919, 1921, 1923, 1924], "consist": [0, 12, 16, 26, 35, 38, 40, 43, 44, 55, 56, 68, 902, 938, 939, 1187, 1216, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1254, 1256, 1419, 1466, 1608, 1611, 1657, 1704, 1805, 1857, 1860, 1867, 1874, 1875, 1886, 1891, 1895, 1898, 1901, 1904, 1914], "type": [0, 2, 3, 4, 6, 12, 13, 14, 17, 18, 19, 25, 29, 30, 31, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 53, 55, 56, 57, 60, 65, 67, 68, 86, 148, 189, 194, 206, 323, 326, 330, 338, 441, 442, 443, 444, 445, 477, 553, 598, 674, 679, 680, 681, 682, 683, 684, 728, 729, 732, 733, 734, 743, 745, 746, 747, 748, 750, 758, 760, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 775, 778, 786, 787, 788, 791, 809, 810, 811, 813, 814, 815, 816, 817, 819, 821, 834, 848, 849, 850, 851, 852, 853, 854, 855, 856, 859, 873, 883, 884, 885, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 915, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 931, 932, 933, 934, 935, 937, 946, 947, 970, 972, 979, 980, 981, 983, 986, 987, 988, 989, 990, 991, 992, 993, 994, 998, 1000, 1003, 1004, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1023, 1035, 1037, 1038, 1041, 1042, 1055, 1060, 1061, 1062, 1063, 1073, 1074, 1075, 1078, 1096, 1103, 1105, 1106, 1107, 1108, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1124, 1125, 1126, 1128, 1130, 1134, 1135, 1136, 1139, 1144, 1145, 1147, 1148, 1149, 1163, 1166, 1169, 1172, 1183, 1184, 1185, 1187, 1188, 1190, 1193, 1196, 1198, 1200, 1202, 1203, 1205, 1206, 1209, 1218, 1222, 1239, 1243, 1250, 1256, 1257, 1258, 1259, 1273, 1276, 1279, 1286, 1288, 1295, 1296, 1298, 1308, 1314, 1317, 1327, 1331, 1347, 1348, 1349, 1356, 1363, 1409, 1419, 1420, 1421, 1425, 1429, 1430, 1447, 1452, 1453, 1454, 1462, 1463, 1464, 1465, 1466, 1478, 1479, 1483, 1484, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1515, 1517, 1518, 1519, 1520, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1536, 1537, 1539, 1540, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1561, 1563, 1564, 1566, 1568, 1569, 1571, 1572, 1573, 1574, 1575, 1581, 1584, 1585, 1586, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1603, 1604, 1605, 1606, 1607, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1643, 1645, 1646, 1650, 1651, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1694, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1726, 1729, 1730, 1740, 1741, 1744, 1745, 1746, 1748, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1801, 1802, 1804, 1805, 1806, 1819, 1828, 1830, 1832, 1837, 1838, 1840, 1841, 1847, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1861, 1868, 1869, 1870, 1873, 1875, 1878, 1879, 1880, 1882, 1883, 1888, 1889, 1890, 1891, 1894, 1897, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1914, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1924, 1925], "headerdoc": 0, "wa": [0, 1, 2, 4, 8, 15, 19, 20, 25, 32, 36, 38, 43, 53, 54, 55, 56, 60, 67, 68, 332, 482, 491, 674, 779, 786, 848, 937, 948, 963, 964, 987, 991, 1006, 1019, 1038, 1080, 1128, 1184, 1193, 1202, 1217, 1228, 1230, 1234, 1258, 1276, 1309, 1389, 1415, 1416, 1417, 1448, 1471, 1483, 1518, 1571, 1587, 1599, 1600, 1635, 1680, 1686, 1799, 1800, 1837, 1838, 1842, 1843, 1847, 1854, 1857, 1859, 1860, 1861, 1864, 1866, 1867, 1870, 1872, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1890, 1892, 1898, 1901, 1903, 1905, 1909, 1910, 1921], "author": [0, 13, 16, 18, 21, 22, 26, 36, 55, 56, 60, 1128, 1671, 1711, 1847, 1879], "chatgpt": 0, "slight": [0, 1744, 1914, 1917], "modif": [0, 16, 18, 30, 60, 68, 219, 774, 891, 1112, 1113, 1187, 1419, 1599, 1880, 1885, 1891, 1902, 1905], "don": [0, 1, 2, 5, 8, 10, 14, 15, 16, 19, 20, 27, 38, 54, 61, 63, 65, 68, 148, 779, 789, 887, 888, 901, 1034, 1116, 1202, 1280, 1382, 1383, 1384, 1471, 1587, 1590, 1599, 1647, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1747, 1854, 1857, 1861, 1872, 1873, 1874, 1880, 1883, 1885, 1887, 1891, 1893, 1897, 1898, 1901, 1902, 1903, 1905, 1910, 1911, 1914, 1925], "ani": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 15, 16, 18, 19, 21, 24, 25, 26, 27, 29, 32, 35, 36, 38, 39, 40, 42, 44, 46, 48, 49, 53, 54, 55, 56, 58, 60, 65, 67, 68, 148, 251, 494, 539, 611, 691, 752, 775, 786, 787, 788, 794, 804, 805, 806, 807, 809, 810, 811, 812, 817, 818, 820, 848, 859, 883, 884, 885, 887, 893, 895, 901, 902, 903, 929, 933, 934, 952, 963, 999, 1006, 1017, 1076, 1077, 1079, 1080, 1081, 1083, 1087, 1091, 1092, 1093, 1108, 1116, 1117, 1124, 1125, 1126, 1128, 1149, 1186, 1187, 1191, 1193, 1197, 1198, 1200, 1202, 1208, 1216, 1218, 1222, 1223, 1227, 1232, 1233, 1234, 1239, 1240, 1243, 1247, 1250, 1256, 1258, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1335, 1336, 1340, 1341, 1347, 1348, 1349, 1356, 1357, 1361, 1365, 1366, 1369, 1370, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1385, 1386, 1405, 1406, 1408, 1409, 1410, 1418, 1419, 1427, 1429, 1430, 1433, 1437, 1438, 1439, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1468, 1469, 1470, 1489, 1493, 1494, 1495, 1535, 1554, 1555, 1568, 1590, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1623, 1633, 1634, 1636, 1639, 1641, 1646, 1653, 1656, 1675, 1680, 1720, 1736, 1751, 1753, 1805, 1847, 1854, 1857, 1858, 1859, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1879, 1880, 1882, 1883, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1898, 1900, 1901, 1902, 1903, 1905, 1910, 1911, 1912, 1914, 1916, 1919, 1921, 1923, 1924, 1925], "just": [0, 2, 3, 8, 12, 13, 14, 15, 16, 19, 23, 25, 29, 36, 38, 43, 44, 46, 53, 68, 583, 681, 691, 784, 817, 820, 883, 885, 911, 952, 953, 1202, 1203, 1241, 1244, 1249, 1250, 1276, 1358, 1359, 1360, 1364, 1599, 1611, 1612, 1676, 1744, 1829, 1830, 1831, 1832, 1854, 1857, 1872, 1879, 1880, 1885, 1886, 1888, 1890, 1891, 1892, 1896, 1902, 1903, 1910, 1911, 1917, 1918, 1920, 1924], "prior": [0, 10, 16, 36, 38, 40, 46, 894, 1259, 1464, 1466, 1568, 1622, 1881, 1883, 1885, 1901, 1905], "recurs": [0, 2, 13, 19, 44, 60, 68, 1052, 1187, 1198, 1200, 1419, 1678, 1859, 1885, 1891, 1902, 1910], "manag": [0, 1, 2, 3, 6, 8, 14, 15, 16, 19, 38, 42, 44, 46, 53, 55, 56, 57, 60, 68, 86, 482, 888, 914, 961, 962, 964, 967, 968, 969, 971, 982, 984, 985, 986, 995, 996, 1006, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1024, 1025, 1026, 1033, 1035, 1064, 1118, 1122, 1127, 1162, 1300, 1568, 1599, 1608, 1609, 1611, 1644, 1750, 1780, 1855, 1860, 1861, 1880, 1887, 1890, 1898, 1903, 1904, 1909, 1910, 1911, 1914, 1917, 1922], "complet": [0, 8, 19, 22, 24, 29, 35, 38, 40, 46, 47, 53, 55, 57, 65, 67, 482, 674, 855, 963, 964, 966, 1036, 1116, 1117, 1190, 1198, 1200, 1205, 1217, 1245, 1300, 1301, 1306, 1483, 1599, 1608, 1641, 1704, 1855, 1859, 1860, 1861, 1866, 1872, 1879, 1880, 1883, 1886, 1889, 1895, 1902, 1903, 1910, 1911], "skip": [0, 1, 14, 19, 55, 853, 1060, 1113, 1216, 1217, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1774, 1857, 1879, 1880, 1883, 1884, 1885, 1891, 1901, 1904], "frame": [0, 9, 13, 14, 16, 23, 26, 68, 1184, 1801, 1887, 1919], "well": [0, 2, 4, 8, 10, 12, 15, 20, 21, 29, 36, 38, 55, 60, 65, 66, 68, 611, 785, 816, 819, 855, 1003, 1121, 1122, 1187, 1191, 1197, 1202, 1222, 1223, 1224, 1226, 1232, 1245, 1250, 1296, 1337, 1338, 1339, 1355, 1389, 1419, 1458, 1539, 1540, 1599, 1656, 1704, 1857, 1860, 1867, 1873, 1875, 1879, 1880, 1883, 1885, 1886, 1888, 1891, 1893, 1895, 1898, 1902, 1905, 1908, 1910, 1912, 1914, 1918, 1919, 1922], "invok": [0, 1, 3, 9, 15, 19, 24, 30, 32, 35, 38, 53, 55, 56, 67, 68, 895, 897, 1003, 1004, 1187, 1190, 1196, 1356, 1419, 1592, 1594, 1597, 1598, 1680, 1686, 1857, 1860, 1861, 1868, 1879, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1902, 1910, 1911], "associ": [0, 2, 9, 10, 15, 16, 19, 26, 38, 40, 49, 889, 969, 1020, 1022, 1148, 1149, 1187, 1236, 1247, 1249, 1258, 1342, 1419, 1429, 1502, 1599, 1607, 1653, 1762, 1764, 1857, 1860, 1866, 1873, 1874, 1880, 1888, 1891, 1894, 1902, 1903, 1904, 1910, 1911, 1917, 1920], "code": [0, 2, 4, 5, 9, 10, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 35, 36, 38, 44, 46, 56, 57, 65, 66, 67, 117, 674, 1003, 1004, 1017, 1117, 1162, 1187, 1191, 1192, 1197, 1198, 1199, 1202, 1203, 1204, 1217, 1228, 1230, 1258, 1435, 1447, 1599, 1752, 1854, 1855, 1859, 1860, 1866, 1874, 1880, 1881, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1896, 1897, 1898, 1901, 1909, 1910, 1911, 1912, 1917, 1918, 1922, 1925], "still": [0, 1, 2, 3, 8, 9, 15, 18, 19, 20, 21, 26, 35, 38, 43, 44, 46, 55, 67, 68, 788, 793, 892, 897, 1191, 1196, 1204, 1386, 1410, 1599, 1600, 1601, 1602, 1688, 1736, 1856, 1857, 1860, 1872, 1873, 1874, 1875, 1879, 1880, 1883, 1884, 1885, 1887, 1889, 1896, 1897, 1898, 1901, 1902, 1903, 1905, 1910, 1911, 1912, 1914], "process": [0, 1, 2, 4, 14, 16, 19, 26, 27, 29, 36, 38, 39, 40, 44, 46, 47, 48, 49, 55, 56, 57, 58, 60, 68, 963, 999, 1005, 1030, 1187, 1197, 1259, 1296, 1304, 1335, 1336, 1353, 1355, 1362, 1363, 1379, 1386, 1410, 1411, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1458, 1462, 1464, 1466, 1467, 1490, 1491, 1501, 1530, 1553, 1561, 1599, 1683, 1689, 1755, 1769, 1854, 1855, 1857, 1870, 1872, 1873, 1874, 1880, 1882, 1883, 1884, 1885, 1890, 1891, 1893, 1895, 1897, 1898, 1902, 1903, 1904, 1905, 1908, 1910, 1912, 1914, 1916, 1923], "reset": [0, 2, 754, 814, 819, 887, 961, 1009, 1011, 1024, 1025, 1026, 1187, 1371, 1419, 1435, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1694, 1711, 1806, 1855, 1870, 1898, 1909], "clear": [0, 2, 3, 9, 10, 57, 68, 1187, 1419, 1420, 1429, 1656, 1854, 1880, 1883, 1891, 1896, 1900, 1901], "cach": [0, 1, 3, 4, 16, 26, 44, 68, 482, 985, 986, 1003, 1006, 1011, 1013, 1015, 1017, 1025, 1030, 1295, 1296, 1297, 1600, 1611, 1872, 1887], "restor": [0, 3, 6, 13, 42, 68, 86, 1105, 1257, 1273, 1731, 1753, 1891, 1896], "initi": [0, 2, 4, 5, 9, 19, 25, 31, 32, 35, 36, 40, 42, 46, 48, 55, 56, 58, 60, 86, 491, 574, 706, 707, 708, 709, 710, 711, 714, 724, 725, 726, 727, 739, 740, 750, 754, 758, 855, 856, 873, 963, 971, 992, 997, 998, 1001, 1002, 1027, 1134, 1163, 1185, 1187, 1199, 1200, 1258, 1259, 1276, 1337, 1338, 1339, 1340, 1342, 1350, 1351, 1352, 1356, 1362, 1363, 1371, 1372, 1374, 1382, 1383, 1384, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1419, 1427, 1434, 1436, 1458, 1468, 1509, 1590, 1599, 1601, 1602, 1606, 1608, 1611, 1639, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1690, 1744, 1745, 1746, 1787, 1788, 1789, 1790, 1791, 1792, 1819, 1855, 1858, 1859, 1860, 1870, 1875, 1878, 1880, 1883, 1884, 1885, 1890, 1897, 1898, 1901, 1902, 1903, 1909, 1910, 1911], "class": [0, 1, 2, 3, 4, 12, 13, 14, 19, 21, 25, 26, 30, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 49, 52, 53, 55, 57, 60, 65, 67, 86, 551, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 888, 891, 892, 893, 894, 914, 961, 962, 963, 964, 966, 967, 982, 984, 995, 1035, 1064, 1126, 1162, 1185, 1186, 1187, 1190, 1192, 1193, 1197, 1198, 1201, 1202, 1203, 1204, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1491, 1501, 1509, 1553, 1555, 1590, 1599, 1600, 1601, 1602, 1608, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1632, 1639, 1644, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1711, 1750, 1780, 1855, 1858, 1861, 1864, 1867, 1870, 1872, 1874, 1879, 1880, 1883, 1885, 1886, 1887, 1891, 1893, 1896, 1899, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1924, 1925, 1926], "optimizedmodul": [0, 1855], "mod": [0, 12, 26, 68, 715, 716, 726, 732, 733, 734, 739, 740, 750, 758, 804, 805, 806, 807, 830, 831, 858, 1116, 1190, 1191, 1196, 1203, 1641, 1859, 1860, 1902, 1923], "dynamo_ctx": 0, "origin": [0, 2, 12, 13, 15, 16, 19, 25, 26, 27, 32, 35, 36, 38, 40, 48, 60, 63, 67, 68, 204, 207, 219, 482, 539, 597, 601, 611, 674, 754, 791, 832, 833, 848, 851, 852, 932, 937, 964, 1080, 1081, 1083, 1087, 1091, 1092, 1093, 1099, 1116, 1126, 1161, 1184, 1194, 1198, 1199, 1202, 1203, 1280, 1294, 1327, 1331, 1343, 1355, 1356, 1371, 1448, 1458, 1501, 1571, 1606, 1607, 1608, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1632, 1635, 1638, 1640, 1641, 1643, 1656, 1686, 1695, 1731, 1742, 1778, 1793, 1826, 1837, 1838, 1857, 1860, 1866, 1872, 1874, 1880, 1883, 1885, 1887, 1890, 1893, 1894, 1896, 1898, 1902, 1903, 1905, 1906, 1916, 1923, 1924, 1925], "nn": [0, 1, 4, 6, 12, 15, 19, 24, 25, 26, 30, 35, 36, 38, 39, 42, 43, 56, 60, 61, 68, 295, 535, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 786, 787, 808, 848, 853, 854, 855, 856, 858, 1003, 1006, 1060, 1116, 1125, 1126, 1185, 1187, 1188, 1190, 1191, 1192, 1193, 1196, 1197, 1198, 1202, 1203, 1204, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1590, 1599, 1600, 1601, 1602, 1608, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1632, 1644, 1675, 1777, 1801, 1840, 1854, 1855, 1857, 1858, 1862, 1874, 1875, 1879, 1884, 1887, 1891, 1893, 1894, 1895, 1898, 1901, 1902, 1903, 1905, 1907, 1910, 1919, 1921, 1924], "object": [0, 1, 2, 4, 6, 7, 9, 12, 13, 15, 19, 21, 25, 29, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 55, 57, 60, 67, 68, 73, 86, 204, 207, 597, 787, 788, 848, 855, 874, 884, 885, 886, 911, 913, 984, 995, 1035, 1060, 1099, 1111, 1113, 1118, 1119, 1121, 1122, 1123, 1127, 1173, 1174, 1187, 1193, 1194, 1197, 1198, 1202, 1203, 1218, 1239, 1243, 1256, 1258, 1259, 1279, 1356, 1358, 1359, 1360, 1364, 1382, 1383, 1384, 1419, 1429, 1458, 1599, 1609, 1624, 1633, 1634, 1637, 1638, 1639, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1736, 1809, 1810, 1813, 1854, 1859, 1860, 1861, 1864, 1868, 1869, 1872, 1876, 1880, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1893, 1895, 1896, 1897, 1898, 1901, 1905, 1907, 1908, 1909, 1910, 1912, 1916, 1917, 1919, 1921, 1925, 1926], "later": [0, 1, 2, 4, 8, 19, 21, 34, 36, 38, 60, 67, 68, 739, 740, 750, 758, 910, 995, 1258, 1389, 1412, 1413, 1414, 1434, 1448, 1542, 1543, 1544, 1571, 1599, 1805, 1857, 1880, 1882, 1883, 1884, 1891, 1896, 1911, 1912], "patch": [0, 8, 62, 1366, 1470], "its": [0, 1, 2, 5, 6, 8, 9, 10, 13, 14, 15, 16, 18, 19, 21, 29, 30, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 55, 56, 57, 60, 67, 68, 80, 81, 148, 454, 483, 499, 508, 510, 512, 577, 578, 579, 611, 674, 817, 820, 868, 869, 870, 872, 873, 874, 887, 890, 902, 907, 908, 914, 939, 940, 949, 955, 959, 967, 995, 997, 1006, 1043, 1047, 1050, 1060, 1063, 1108, 1113, 1117, 1118, 1119, 1122, 1127, 1148, 1149, 1153, 1167, 1187, 1197, 1222, 1223, 1227, 1232, 1239, 1241, 1244, 1245, 1250, 1256, 1281, 1307, 1335, 1337, 1338, 1339, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1382, 1383, 1384, 1419, 1420, 1429, 1450, 1458, 1518, 1529, 1556, 1562, 1590, 1595, 1596, 1600, 1601, 1602, 1607, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1633, 1639, 1643, 1647, 1656, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1695, 1720, 1724, 1728, 1729, 1745, 1746, 1750, 1770, 1806, 1825, 1826, 1828, 1836, 1845, 1857, 1859, 1860, 1864, 1868, 1870, 1872, 1879, 1880, 1881, 1883, 1884, 1885, 1887, 1888, 1891, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1910, 1911, 1912, 1914, 1917, 1918, 1920, 1923, 1924], "forward": [0, 1, 6, 8, 9, 12, 16, 19, 21, 25, 26, 29, 36, 38, 39, 42, 44, 60, 61, 62, 64, 66, 68, 148, 219, 220, 674, 729, 742, 751, 754, 794, 809, 810, 811, 814, 818, 855, 856, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 901, 902, 914, 1006, 1052, 1064, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1117, 1119, 1120, 1121, 1123, 1126, 1162, 1187, 1190, 1191, 1192, 1193, 1197, 1198, 1202, 1203, 1204, 1331, 1335, 1338, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1371, 1389, 1404, 1415, 1416, 1417, 1419, 1420, 1421, 1425, 1426, 1429, 1430, 1434, 1447, 1462, 1463, 1464, 1465, 1466, 1504, 1505, 1506, 1511, 1556, 1590, 1593, 1594, 1595, 1596, 1599, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629, 1640, 1643, 1644, 1711, 1750, 1779, 1840, 1855, 1856, 1857, 1859, 1860, 1866, 1868, 1872, 1874, 1878, 1879, 1880, 1882, 1883, 1884, 1886, 1887, 1888, 1890, 1891, 1894, 1896, 1898, 1901, 1902, 1903, 1904, 1905, 1910, 1922, 1923, 1924], "method": [0, 1, 4, 8, 10, 12, 13, 18, 19, 26, 29, 30, 32, 35, 38, 39, 40, 42, 44, 45, 46, 47, 53, 55, 60, 67, 68, 219, 220, 320, 482, 483, 492, 493, 494, 515, 608, 787, 791, 793, 809, 810, 811, 832, 835, 848, 868, 869, 870, 887, 891, 892, 893, 894, 907, 908, 997, 1111, 1140, 1185, 1187, 1188, 1190, 1191, 1192, 1197, 1198, 1202, 1203, 1204, 1232, 1250, 1251, 1258, 1259, 1316, 1319, 1327, 1335, 1362, 1419, 1420, 1421, 1429, 1430, 1447, 1518, 1590, 1599, 1607, 1608, 1611, 1613, 1615, 1618, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1635, 1640, 1653, 1654, 1659, 1660, 1661, 1663, 1673, 1705, 1786, 1801, 1805, 1854, 1855, 1857, 1860, 1861, 1868, 1870, 1872, 1873, 1874, 1878, 1879, 1880, 1883, 1885, 1886, 1887, 1888, 1891, 1893, 1896, 1899, 1901, 1902, 1905, 1907, 1910, 1912, 1916, 1917, 1919, 1920, 1922, 1925], "self": [0, 1, 2, 10, 12, 19, 25, 26, 32, 35, 36, 38, 40, 43, 46, 47, 52, 57, 60, 65, 68, 95, 137, 148, 151, 152, 153, 168, 170, 173, 176, 177, 178, 188, 189, 193, 194, 206, 214, 216, 230, 237, 251, 252, 255, 256, 264, 283, 287, 294, 308, 310, 312, 314, 316, 318, 320, 322, 323, 325, 326, 327, 328, 330, 338, 374, 390, 395, 397, 398, 399, 450, 467, 477, 479, 492, 493, 494, 495, 508, 510, 512, 515, 519, 531, 537, 538, 539, 540, 552, 554, 574, 575, 577, 578, 579, 581, 582, 598, 601, 602, 608, 611, 612, 614, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 855, 856, 912, 1116, 1117, 1126, 1157, 1185, 1186, 1187, 1190, 1191, 1192, 1193, 1197, 1198, 1202, 1203, 1204, 1327, 1331, 1364, 1418, 1419, 1420, 1421, 1425, 1429, 1430, 1446, 1448, 1458, 1464, 1466, 1548, 1571, 1590, 1608, 1609, 1611, 1617, 1619, 1632, 1641, 1654, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1701, 1722, 1856, 1857, 1858, 1859, 1860, 1864, 1870, 1873, 1874, 1878, 1880, 1881, 1882, 1885, 1887, 1891, 1896, 1898, 1902, 1903, 1905, 1910, 1916], "register_backend": [0, 12, 38, 1855, 1910], "compiler_fn": [0, 19], "tag": [0, 2, 4, 8, 38, 1258, 1854, 1855, 1890, 1902, 1919], "given": [0, 1, 2, 3, 4, 8, 10, 15, 16, 17, 19, 25, 26, 29, 35, 36, 38, 39, 40, 42, 43, 44, 46, 53, 55, 57, 60, 66, 67, 68, 73, 148, 217, 310, 312, 314, 318, 323, 374, 395, 399, 468, 469, 470, 471, 472, 474, 508, 510, 512, 578, 579, 598, 601, 674, 687, 689, 690, 692, 693, 729, 754, 773, 779, 786, 787, 788, 789, 793, 794, 796, 814, 818, 831, 834, 848, 852, 859, 870, 883, 885, 887, 889, 891, 893, 895, 896, 897, 898, 899, 900, 903, 917, 918, 921, 929, 933, 934, 940, 941, 946, 947, 953, 955, 958, 959, 960, 963, 964, 966, 967, 968, 972, 980, 981, 984, 988, 989, 1005, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1035, 1036, 1037, 1038, 1045, 1047, 1052, 1060, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1100, 1116, 1126, 1127, 1153, 1184, 1187, 1194, 1202, 1203, 1208, 1212, 1222, 1224, 1225, 1234, 1236, 1242, 1250, 1259, 1266, 1268, 1269, 1270, 1271, 1274, 1284, 1286, 1288, 1289, 1292, 1317, 1327, 1335, 1336, 1342, 1347, 1348, 1349, 1351, 1352, 1353, 1355, 1356, 1362, 1363, 1367, 1368, 1371, 1379, 1389, 1411, 1415, 1416, 1417, 1419, 1421, 1423, 1424, 1426, 1428, 1430, 1434, 1447, 1453, 1467, 1468, 1471, 1472, 1473, 1483, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1509, 1510, 1513, 1514, 1518, 1529, 1553, 1568, 1583, 1587, 1588, 1589, 1593, 1594, 1595, 1607, 1632, 1639, 1640, 1643, 1646, 1647, 1656, 1682, 1685, 1687, 1689, 1692, 1697, 1702, 1705, 1706, 1707, 1720, 1726, 1731, 1742, 1743, 1774, 1778, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1796, 1801, 1804, 1806, 1815, 1816, 1821, 1823, 1825, 1835, 1840, 1854, 1855, 1857, 1860, 1864, 1866, 1867, 1869, 1872, 1875, 1876, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1895, 1896, 1898, 1901, 1904, 1905, 1910, 1911, 1914, 1915, 1916, 1919, 1921, 1924, 1925], "registri": [0, 35, 1855, 1898], "shorthand": [0, 454, 1206], "project": [0, 8, 25, 40, 1288, 1389, 1425, 1611, 1694, 1854, 1889], "import": [0, 2, 3, 4, 6, 8, 10, 12, 13, 14, 16, 18, 19, 20, 24, 25, 26, 29, 31, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 47, 49, 52, 53, 57, 60, 63, 64, 65, 66, 67, 68, 219, 674, 728, 735, 736, 737, 766, 767, 768, 786, 854, 855, 856, 905, 907, 926, 933, 959, 1111, 1113, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1126, 1162, 1184, 1185, 1188, 1190, 1192, 1193, 1194, 1196, 1197, 1198, 1202, 1203, 1204, 1238, 1239, 1242, 1243, 1256, 1288, 1385, 1419, 1599, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1634, 1635, 1636, 1637, 1638, 1639, 1646, 1653, 1674, 1675, 1698, 1857, 1859, 1860, 1861, 1870, 1872, 1875, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1905, 1908, 1910, 1911, 1912, 1914, 1917, 1919, 1920, 1921, 1924, 1925], "might": [0, 2, 4, 5, 10, 14, 15, 16, 18, 19, 25, 26, 29, 30, 32, 38, 40, 42, 44, 55, 65, 67, 68, 148, 482, 538, 887, 960, 1202, 1203, 1518, 1599, 1600, 1854, 1857, 1870, 1875, 1880, 1882, 1883, 1884, 1885, 1888, 1890, 1895, 1898, 1902, 1903, 1905, 1910, 1911, 1912, 1914, 1918, 1920, 1921], "easier": [0, 3, 8, 16, 26, 35, 68, 1857, 1859, 1875, 1880, 1881, 1885, 1886], "directli": [0, 1, 2, 4, 8, 10, 14, 15, 16, 18, 25, 26, 29, 30, 35, 36, 38, 40, 44, 45, 46, 54, 60, 64, 68, 551, 726, 741, 884, 893, 1043, 1111, 1117, 1124, 1126, 1132, 1217, 1425, 1452, 1471, 1529, 1574, 1633, 1826, 1857, 1859, 1860, 1870, 1880, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1893, 1896, 1902, 1904, 1905, 1910, 1914, 1919, 1921], "compiledfn": 0, "fake": [0, 68, 706, 707, 708, 709, 710, 711, 712, 713, 714, 724, 725, 726, 787, 793, 794, 804, 806, 832, 855, 856, 1074, 1075, 1855, 1902, 1905, 1908], "__name__": [0, 35, 36, 38, 47, 48, 56, 1884, 1885, 1893, 1897, 1902, 1911], "sequenc": [0, 2, 14, 16, 23, 25, 26, 35, 40, 42, 43, 44, 148, 560, 729, 754, 808, 874, 887, 901, 931, 933, 934, 937, 945, 966, 973, 974, 977, 1045, 1059, 1061, 1128, 1148, 1149, 1152, 1202, 1242, 1288, 1327, 1337, 1342, 1347, 1356, 1363, 1371, 1389, 1425, 1434, 1447, 1462, 1463, 1464, 1465, 1466, 1510, 1568, 1608, 1611, 1618, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1647, 1650, 1653, 1657, 1672, 1711, 1713, 1717, 1740, 1798, 1801, 1847, 1849, 1852, 1857, 1858, 1859, 1875, 1883, 1887, 1898, 1902, 1903, 1910, 1920, 1921], "categor": [0, 8, 25, 48, 1520, 1855, 1861, 1906, 1910], "exclude_tag": 0, "debug": [0, 2, 3, 5, 9, 14, 16, 17, 21, 35, 52, 674, 821, 822, 826, 837, 902, 903, 947, 961, 994, 1034, 1135, 1216, 1593, 1594, 1595, 1596, 1747, 1755, 1855, 1859, 1866, 1880, 1882, 1883, 1884, 1889, 1890, 1891, 1895, 1897, 1898, 1899, 1902, 1923], "experiment": [0, 2, 3, 14, 15, 17, 20, 26, 36, 38, 42, 43, 60, 68, 895, 897, 901, 947, 1034, 1117, 1217, 1228, 1230, 1231, 1235, 1248, 1599, 1653, 1675, 1855, 1857, 1859, 1873, 1874, 1884, 1895, 1897, 1898, 1902, 1903, 1904], "conveni": [1, 4, 8, 14, 19, 23, 29, 52, 55, 56, 66, 1128, 1244, 1590, 1847, 1854, 1859, 1864, 1879, 1880, 1883, 1885, 1890, 1891, 1902, 1909], "where": [1, 2, 3, 4, 5, 8, 9, 10, 14, 15, 16, 18, 19, 26, 27, 29, 30, 35, 36, 38, 42, 43, 44, 46, 48, 55, 56, 57, 58, 60, 62, 63, 65, 68, 151, 221, 251, 397, 399, 482, 674, 687, 689, 690, 693, 729, 752, 754, 775, 814, 815, 827, 871, 890, 895, 897, 910, 916, 925, 931, 938, 939, 940, 955, 959, 964, 975, 977, 1039, 1040, 1043, 1047, 1065, 1076, 1077, 1079, 1082, 1083, 1085, 1086, 1088, 1089, 1090, 1092, 1093, 1095, 1097, 1121, 1122, 1123, 1127, 1128, 1131, 1143, 1144, 1145, 1146, 1176, 1177, 1179, 1180, 1183, 1184, 1185, 1188, 1200, 1206, 1207, 1208, 1211, 1216, 1217, 1218, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1258, 1259, 1264, 1267, 1274, 1275, 1276, 1277, 1281, 1284, 1286, 1287, 1288, 1289, 1292, 1309, 1314, 1315, 1317, 1320, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1489, 1491, 1501, 1502, 1509, 1514, 1516, 1517, 1535, 1536, 1553, 1555, 1556, 1559, 1560, 1562, 1568, 1571, 1599, 1601, 1602, 1606, 1633, 1634, 1635, 1636, 1645, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1678, 1679, 1680, 1692, 1702, 1704, 1705, 1725, 1726, 1762, 1768, 1769, 1774, 1778, 1782, 1783, 1784, 1787, 1788, 1789, 1790, 1791, 1792, 1799, 1800, 1801, 1804, 1805, 1819, 1828, 1829, 1830, 1831, 1832, 1837, 1838, 1842, 1843, 1844, 1845, 1846, 1847, 1856, 1857, 1858, 1860, 1861, 1866, 1867, 1869, 1872, 1875, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1891, 1894, 1895, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1908, 1910, 1912, 1914, 1915, 1917, 1919, 1924, 1925], "float": [1, 2, 4, 14, 18, 25, 27, 35, 36, 38, 42, 44, 46, 49, 57, 60, 68, 151, 152, 217, 310, 312, 314, 318, 330, 397, 471, 477, 508, 679, 681, 686, 688, 692, 726, 729, 732, 733, 734, 738, 739, 740, 742, 749, 750, 755, 756, 757, 758, 759, 764, 765, 766, 767, 768, 769, 771, 773, 774, 775, 779, 786, 787, 788, 793, 811, 813, 824, 832, 833, 846, 851, 852, 855, 856, 859, 874, 902, 903, 916, 917, 925, 932, 935, 939, 949, 954, 955, 959, 960, 1030, 1043, 1054, 1055, 1065, 1078, 1096, 1105, 1106, 1107, 1108, 1110, 1131, 1134, 1143, 1144, 1145, 1148, 1149, 1169, 1176, 1177, 1179, 1180, 1181, 1182, 1185, 1187, 1202, 1203, 1206, 1210, 1212, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1264, 1273, 1275, 1277, 1304, 1308, 1309, 1313, 1315, 1316, 1317, 1320, 1323, 1327, 1331, 1337, 1338, 1339, 1341, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1368, 1373, 1374, 1375, 1378, 1379, 1380, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1405, 1407, 1411, 1419, 1424, 1425, 1427, 1428, 1433, 1437, 1440, 1441, 1442, 1443, 1444, 1450, 1456, 1458, 1461, 1462, 1464, 1466, 1467, 1468, 1471, 1472, 1473, 1500, 1501, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1515, 1520, 1529, 1554, 1561, 1568, 1587, 1599, 1603, 1604, 1607, 1616, 1617, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1635, 1636, 1640, 1646, 1647, 1653, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1686, 1688, 1690, 1692, 1698, 1701, 1705, 1706, 1707, 1708, 1720, 1724, 1725, 1745, 1746, 1749, 1753, 1762, 1763, 1765, 1766, 1768, 1802, 1805, 1809, 1826, 1828, 1840, 1856, 1857, 1858, 1859, 1860, 1861, 1867, 1870, 1872, 1873, 1875, 1876, 1878, 1879, 1883, 1885, 1887, 1891, 1894, 1898, 1900, 1902, 1904, 1905, 1906, 1910, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1926], "datatyp": [1, 68, 874, 1184, 1187, 1419, 1601, 1602, 1748, 1894, 1898], "other": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 16, 18, 19, 20, 25, 26, 29, 30, 32, 35, 36, 39, 42, 44, 45, 46, 48, 52, 53, 55, 56, 60, 61, 63, 65, 66, 67, 68, 95, 96, 111, 127, 128, 131, 143, 144, 147, 148, 157, 158, 163, 164, 194, 195, 196, 205, 231, 236, 240, 241, 242, 252, 271, 272, 279, 280, 281, 282, 288, 289, 290, 291, 292, 293, 300, 301, 304, 305, 306, 307, 310, 312, 318, 321, 341, 349, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 375, 376, 391, 392, 405, 409, 434, 435, 446, 447, 451, 452, 483, 493, 515, 555, 556, 557, 558, 574, 577, 610, 611, 612, 615, 616, 679, 688, 732, 733, 734, 735, 736, 737, 754, 808, 820, 855, 859, 865, 872, 873, 878, 884, 887, 888, 901, 902, 903, 907, 908, 914, 919, 920, 922, 923, 924, 926, 931, 954, 960, 961, 964, 966, 968, 975, 985, 1006, 1048, 1054, 1055, 1056, 1057, 1064, 1065, 1066, 1080, 1087, 1105, 1106, 1107, 1108, 1111, 1117, 1118, 1119, 1120, 1123, 1127, 1129, 1130, 1131, 1141, 1142, 1143, 1152, 1153, 1155, 1156, 1161, 1162, 1164, 1176, 1185, 1187, 1191, 1198, 1207, 1209, 1210, 1211, 1213, 1214, 1219, 1237, 1239, 1242, 1243, 1256, 1264, 1265, 1266, 1268, 1270, 1271, 1274, 1275, 1281, 1284, 1285, 1289, 1290, 1294, 1297, 1308, 1310, 1320, 1323, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1356, 1366, 1371, 1373, 1385, 1419, 1420, 1429, 1447, 1462, 1466, 1470, 1493, 1494, 1495, 1520, 1529, 1568, 1587, 1590, 1599, 1603, 1604, 1622, 1644, 1648, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1683, 1684, 1690, 1692, 1720, 1724, 1740, 1745, 1748, 1750, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1787, 1788, 1789, 1790, 1791, 1792, 1796, 1802, 1803, 1819, 1825, 1829, 1831, 1844, 1845, 1850, 1851, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1868, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1896, 1898, 1901, 1905, 1906, 1910, 1911, 1912, 1915, 1919, 1920, 1921, 1925], "point": [1, 2, 8, 9, 10, 12, 13, 16, 18, 19, 21, 25, 27, 35, 36, 39, 42, 46, 52, 55, 56, 60, 68, 86, 151, 152, 318, 330, 336, 477, 692, 732, 733, 734, 735, 736, 737, 738, 743, 744, 745, 746, 747, 748, 749, 750, 753, 755, 756, 757, 758, 759, 769, 771, 773, 774, 775, 779, 789, 793, 813, 814, 815, 816, 819, 824, 846, 855, 856, 859, 874, 896, 898, 899, 900, 902, 903, 916, 917, 925, 954, 955, 959, 1009, 1011, 1020, 1024, 1025, 1106, 1107, 1108, 1134, 1140, 1144, 1145, 1149, 1169, 1184, 1187, 1202, 1203, 1210, 1212, 1233, 1234, 1257, 1259, 1264, 1273, 1316, 1323, 1332, 1333, 1334, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1412, 1413, 1414, 1419, 1470, 1471, 1483, 1509, 1518, 1529, 1568, 1587, 1599, 1646, 1658, 1689, 1705, 1706, 1707, 1711, 1720, 1733, 1745, 1746, 1753, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1840, 1855, 1857, 1859, 1860, 1861, 1864, 1870, 1876, 1878, 1879, 1880, 1884, 1888, 1891, 1894, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1914, 1917, 1919, 1920, 1921, 1922, 1923, 1926], "lower_precision_fp": 1, "half": [1, 2, 11, 36, 44, 611, 949, 1074, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1187, 1249, 1255, 1347, 1348, 1349, 1350, 1351, 1352, 1367, 1368, 1370, 1419, 1513, 1514, 1517, 1655, 1680, 1733, 1801, 1873, 1891, 1894, 1916, 1917, 1920, 1922], "linear": [1, 3, 10, 26, 36, 38, 39, 42, 44, 60, 62, 64, 66, 68, 427, 468, 469, 470, 471, 472, 475, 705, 714, 722, 723, 759, 786, 787, 788, 790, 808, 848, 852, 853, 855, 856, 897, 940, 966, 1060, 1116, 1118, 1126, 1128, 1140, 1187, 1191, 1198, 1212, 1218, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1247, 1249, 1277, 1316, 1335, 1341, 1361, 1369, 1370, 1378, 1404, 1419, 1421, 1434, 1436, 1438, 1446, 1448, 1455, 1458, 1469, 1471, 1507, 1516, 1517, 1529, 1563, 1571, 1576, 1587, 1590, 1599, 1606, 1607, 1611, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1639, 1640, 1643, 1683, 1686, 1694, 1705, 1840, 1847, 1855, 1858, 1859, 1865, 1868, 1875, 1878, 1883, 1884, 1885, 1887, 1891, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1910], "layer": [1, 9, 16, 36, 38, 40, 42, 43, 60, 63, 728, 729, 754, 835, 852, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1358, 1359, 1360, 1364, 1371, 1372, 1374, 1382, 1383, 1384, 1389, 1390, 1391, 1404, 1406, 1412, 1413, 1414, 1425, 1426, 1434, 1436, 1447, 1458, 1462, 1463, 1464, 1465, 1466, 1532, 1599, 1606, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1855, 1878, 1883, 1885, 1887, 1890, 1891, 1896, 1898, 1901, 1903, 1905, 1906, 1908, 1924], "convolut": [1, 2, 3, 17, 732, 733, 734, 735, 736, 737, 766, 767, 768, 947, 1196, 1347, 1348, 1349, 1350, 1351, 1352, 1358, 1359, 1360, 1364, 1395, 1396, 1397, 1398, 1399, 1400, 1431, 1432, 1437, 1467, 1468, 1470, 1493, 1494, 1495, 1496, 1497, 1498, 1517, 1518, 1748, 1855, 1856, 1858, 1868, 1878, 1882, 1883, 1888, 1891, 1900, 1904, 1905, 1908], "much": [1, 5, 8, 10, 14, 16, 19, 20, 30, 35, 36, 148, 887, 896, 901, 1017, 1222, 1223, 1250, 1259, 1363, 1599, 1622, 1686, 1857, 1880, 1883, 1888, 1891, 1896, 1902, 1903, 1910, 1911, 1914], "reduct": [1, 3, 26, 38, 60, 318, 508, 512, 1232, 1264, 1316, 1335, 1336, 1342, 1353, 1355, 1363, 1373, 1379, 1380, 1385, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1468, 1490, 1491, 1499, 1501, 1502, 1510, 1515, 1526, 1527, 1530, 1531, 1541, 1549, 1550, 1551, 1552, 1553, 1561, 1572, 1573, 1584, 1585, 1599, 1705, 1782, 1858, 1873, 1884, 1888, 1902, 1905], "often": [1, 3, 5, 8, 9, 15, 16, 20, 26, 29, 35, 38, 44, 56, 63, 68, 148, 887, 901, 1202, 1233, 1234, 1243, 1292, 1362, 1382, 1383, 1384, 1483, 1491, 1509, 1518, 1590, 1606, 1653, 1688, 1860, 1880, 1883, 1887, 1890, 1891, 1894, 1895, 1902, 1910, 1919], "tri": [1, 3, 4, 8, 15, 16, 35, 44, 48, 68, 574, 1187, 1419, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1859, 1860, 1872, 1887, 1898, 1902], "match": [1, 2, 4, 16, 19, 25, 38, 40, 42, 44, 55, 68, 148, 310, 312, 318, 469, 470, 494, 495, 574, 577, 687, 693, 773, 787, 788, 789, 848, 872, 887, 901, 902, 903, 960, 963, 975, 976, 977, 1006, 1052, 1060, 1116, 1128, 1164, 1187, 1200, 1202, 1219, 1258, 1280, 1354, 1363, 1419, 1425, 1471, 1490, 1491, 1529, 1555, 1562, 1568, 1587, 1599, 1611, 1641, 1647, 1706, 1740, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1821, 1847, 1857, 1860, 1867, 1873, 1875, 1880, 1881, 1883, 1885, 1891, 1896, 1898, 1901, 1902, 1903, 1905, 1906, 1907, 1910, 1917, 1921, 1923], "appropri": [1, 8, 9, 10, 16, 19, 21, 38, 39, 44, 60, 67, 68, 888, 1006, 1202, 1860, 1861, 1864, 1874, 1888, 1903, 1905, 1908, 1910, 1911, 1912, 1916, 1925], "ordinarili": [1, 1879], "train": [1, 2, 12, 16, 18, 20, 22, 23, 26, 30, 35, 36, 38, 39, 41, 42, 46, 53, 54, 55, 56, 60, 63, 64, 68, 706, 707, 708, 709, 710, 711, 712, 713, 714, 724, 725, 726, 727, 793, 795, 832, 833, 849, 850, 851, 853, 855, 856, 857, 1005, 1006, 1009, 1011, 1018, 1126, 1162, 1187, 1192, 1198, 1201, 1202, 1327, 1331, 1337, 1338, 1339, 1355, 1356, 1357, 1362, 1363, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1419, 1425, 1426, 1437, 1458, 1466, 1484, 1488, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1566, 1567, 1599, 1607, 1609, 1611, 1640, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1854, 1856, 1857, 1858, 1868, 1870, 1878, 1880, 1883, 1884, 1887, 1892, 1894, 1896, 1898, 1901, 1902, 1903, 1904, 1908, 1910, 1912, 1919], "gradscal": [1, 1879, 1883], "togeth": [1, 4, 10, 12, 15, 16, 21, 35, 38, 43, 44, 61, 66, 68, 754, 1003, 1060, 1116, 1118, 1122, 1126, 1127, 1132, 1226, 1371, 1389, 1434, 1529, 1599, 1603, 1826, 1868, 1879, 1885, 1886, 1887, 1890, 1891, 1905, 1910, 1911, 1912, 1919], "shown": [1, 12, 36, 47, 56, 1003, 1013, 1391, 1611, 1656, 1686, 1753, 1857, 1860, 1879, 1883, 1885, 1887, 1891, 1903, 1905, 1914], "recip": [1, 4, 15, 42, 1419, 1599, 1613, 1879, 1891], "howev": [1, 3, 4, 5, 6, 8, 10, 14, 15, 16, 29, 30, 35, 36, 38, 42, 44, 46, 52, 60, 61, 62, 64, 65, 67, 68, 477, 539, 888, 895, 963, 985, 1006, 1048, 1050, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1116, 1117, 1121, 1122, 1124, 1127, 1128, 1187, 1190, 1191, 1197, 1199, 1226, 1241, 1242, 1244, 1258, 1259, 1276, 1335, 1338, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1363, 1419, 1493, 1494, 1495, 1518, 1590, 1599, 1632, 1646, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1787, 1788, 1789, 1790, 1791, 1792, 1847, 1855, 1860, 1875, 1879, 1880, 1883, 1885, 1889, 1891, 1893, 1895, 1896, 1897, 1898, 1902, 1903, 1910, 1912, 1914], "modular": [1, 1879], "mai": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 19, 24, 26, 29, 34, 35, 36, 38, 42, 44, 45, 46, 48, 52, 54, 55, 60, 61, 65, 67, 68, 194, 219, 251, 310, 318, 454, 510, 512, 550, 597, 611, 674, 683, 809, 810, 811, 855, 886, 893, 895, 897, 901, 902, 911, 918, 929, 941, 952, 953, 955, 957, 960, 961, 963, 964, 972, 985, 995, 996, 997, 1003, 1004, 1006, 1017, 1019, 1023, 1037, 1038, 1060, 1099, 1103, 1108, 1111, 1113, 1120, 1121, 1123, 1149, 1184, 1187, 1190, 1191, 1196, 1197, 1199, 1200, 1202, 1208, 1217, 1218, 1222, 1223, 1224, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1242, 1244, 1245, 1248, 1249, 1250, 1256, 1258, 1259, 1264, 1281, 1291, 1304, 1327, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1385, 1389, 1415, 1416, 1417, 1419, 1426, 1434, 1464, 1466, 1471, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1510, 1518, 1520, 1529, 1535, 1556, 1568, 1586, 1587, 1588, 1589, 1590, 1599, 1606, 1608, 1609, 1611, 1646, 1675, 1680, 1704, 1724, 1727, 1745, 1748, 1755, 1773, 1785, 1801, 1805, 1828, 1840, 1854, 1855, 1857, 1859, 1860, 1864, 1866, 1867, 1868, 1870, 1874, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1891, 1894, 1895, 1896, 1897, 1898, 1902, 1904, 1905, 1906, 1908, 1910, 1912, 1914, 1916, 1922, 1925], "separ": [1, 2, 4, 10, 26, 29, 35, 38, 42, 55, 56, 60, 61, 63, 66, 67, 68, 729, 754, 884, 1060, 1077, 1079, 1085, 1086, 1089, 1090, 1095, 1097, 1116, 1197, 1232, 1247, 1374, 1382, 1383, 1384, 1425, 1427, 1537, 1647, 1854, 1858, 1860, 1866, 1879, 1880, 1882, 1883, 1886, 1896, 1901, 1902, 1911, 1914, 1915, 1919], "desir": [1, 2, 4, 26, 35, 38, 44, 60, 68, 86, 153, 168, 170, 173, 176, 177, 178, 193, 204, 207, 237, 251, 264, 294, 322, 390, 441, 442, 443, 444, 445, 492, 494, 495, 515, 519, 538, 539, 540, 554, 574, 577, 597, 598, 611, 787, 859, 873, 916, 925, 944, 1007, 1008, 1031, 1032, 1041, 1042, 1061, 1062, 1063, 1073, 1078, 1096, 1113, 1114, 1115, 1144, 1145, 1187, 1206, 1257, 1273, 1279, 1286, 1299, 1305, 1314, 1316, 1317, 1335, 1336, 1419, 1469, 1491, 1537, 1574, 1575, 1590, 1632, 1646, 1650, 1651, 1695, 1702, 1705, 1706, 1707, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1754, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1804, 1819, 1830, 1832, 1852, 1853, 1873, 1874, 1875, 1879, 1880, 1883, 1886, 1889, 1891, 1896, 1903, 1909, 1910, 1915, 1916, 1917], "section": [1, 2, 8, 12, 19, 24, 26, 35, 44, 46, 47, 64, 68, 117, 1017, 1060, 1140, 1356, 1371, 1389, 1417, 1434, 1501, 1635, 1820, 1857, 1858, 1859, 1860, 1861, 1872, 1874, 1875, 1879, 1880, 1883, 1884, 1885, 1886, 1888, 1889, 1891, 1893, 1911, 1919], "infer": [1, 2, 3, 4, 6, 14, 16, 18, 20, 22, 27, 30, 44, 55, 574, 611, 855, 856, 859, 873, 874, 977, 1113, 1114, 1149, 1162, 1171, 1185, 1188, 1196, 1201, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1425, 1471, 1529, 1555, 1590, 1644, 1675, 1686, 1720, 1727, 1745, 1746, 1787, 1788, 1789, 1790, 1791, 1792, 1819, 1836, 1855, 1857, 1859, 1860, 1864, 1873, 1875, 1891, 1898, 1899, 1904, 1905, 1906, 1908, 1914], "For": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 25, 26, 27, 29, 30, 32, 35, 36, 38, 39, 40, 44, 46, 52, 53, 55, 56, 58, 60, 61, 62, 64, 65, 66, 67, 68, 194, 219, 251, 286, 310, 312, 318, 332, 349, 467, 477, 488, 494, 508, 510, 512, 577, 583, 597, 611, 680, 681, 682, 683, 684, 687, 693, 728, 732, 733, 734, 735, 736, 737, 754, 786, 787, 788, 808, 852, 853, 886, 902, 915, 919, 921, 922, 924, 927, 936, 940, 947, 995, 1009, 1011, 1017, 1041, 1042, 1043, 1060, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1104, 1126, 1128, 1129, 1140, 1149, 1164, 1187, 1197, 1198, 1200, 1202, 1203, 1218, 1222, 1223, 1226, 1229, 1230, 1231, 1232, 1234, 1243, 1244, 1246, 1250, 1259, 1266, 1274, 1281, 1287, 1291, 1327, 1331, 1335, 1336, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1362, 1363, 1365, 1366, 1371, 1373, 1380, 1385, 1389, 1391, 1419, 1422, 1423, 1424, 1425, 1433, 1434, 1440, 1441, 1442, 1443, 1444, 1445, 1450, 1455, 1469, 1470, 1474, 1475, 1476, 1491, 1493, 1494, 1495, 1518, 1554, 1556, 1568, 1576, 1590, 1595, 1596, 1599, 1609, 1632, 1633, 1634, 1636, 1646, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1688, 1733, 1742, 1780, 1790, 1796, 1805, 1820, 1822, 1826, 1834, 1845, 1846, 1847, 1854, 1855, 1857, 1860, 1862, 1864, 1866, 1867, 1868, 1870, 1873, 1874, 1875, 1876, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1891, 1893, 1894, 1895, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1925], "api": [1, 3, 4, 6, 9, 10, 20, 23, 36, 38, 39, 43, 46, 47, 48, 52, 53, 54, 55, 56, 60, 61, 64, 67, 794, 818, 855, 888, 889, 890, 898, 914, 936, 961, 995, 996, 997, 1003, 1004, 1006, 1033, 1064, 1104, 1117, 1120, 1121, 1123, 1128, 1197, 1198, 1200, 1304, 1599, 1641, 1644, 1653, 1655, 1733, 1744, 1750, 1834, 1847, 1854, 1864, 1866, 1867, 1868, 1872, 1873, 1875, 1880, 1884, 1896, 1898, 1906, 1910, 1911, 1914, 1917, 1919, 1922, 1925], "equival": [1, 4, 6, 12, 19, 35, 36, 42, 43, 44, 48, 55, 56, 64, 65, 68, 80, 153, 168, 170, 173, 176, 177, 178, 237, 252, 264, 294, 316, 322, 390, 444, 454, 493, 495, 519, 598, 604, 611, 612, 614, 686, 738, 742, 749, 751, 753, 779, 780, 781, 870, 884, 928, 930, 933, 935, 938, 945, 946, 1048, 1052, 1055, 1058, 1059, 1060, 1062, 1077, 1079, 1082, 1085, 1086, 1089, 1090, 1092, 1095, 1097, 1115, 1117, 1120, 1122, 1128, 1150, 1152, 1164, 1186, 1187, 1197, 1202, 1203, 1206, 1218, 1239, 1243, 1251, 1256, 1288, 1293, 1307, 1314, 1327, 1337, 1338, 1339, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1362, 1363, 1374, 1380, 1382, 1383, 1384, 1385, 1389, 1391, 1419, 1450, 1458, 1470, 1472, 1537, 1558, 1568, 1587, 1588, 1589, 1599, 1651, 1675, 1711, 1714, 1718, 1742, 1748, 1756, 1778, 1784, 1797, 1807, 1808, 1814, 1819, 1838, 1847, 1848, 1849, 1853, 1857, 1859, 1860, 1880, 1898, 1902, 1906, 1914, 1915, 1917, 1920, 1921, 1925, 1926], "device_typ": [1, 38, 1879, 1909], "dtype": [1, 2, 13, 15, 26, 27, 32, 33, 35, 38, 40, 43, 60, 68, 151, 152, 189, 206, 210, 211, 212, 213, 239, 308, 310, 312, 314, 316, 318, 406, 425, 428, 441, 442, 443, 444, 445, 449, 454, 466, 477, 479, 508, 510, 559, 574, 575, 597, 611, 681, 683, 686, 687, 691, 693, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 752, 754, 755, 758, 759, 766, 767, 768, 788, 789, 793, 813, 814, 815, 816, 817, 818, 819, 820, 821, 835, 852, 853, 855, 856, 859, 873, 874, 891, 893, 895, 897, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 932, 939, 949, 952, 953, 959, 960, 976, 1041, 1042, 1061, 1062, 1063, 1073, 1077, 1078, 1079, 1085, 1086, 1096, 1103, 1108, 1110, 1112, 1113, 1114, 1115, 1134, 1144, 1145, 1157, 1187, 1191, 1200, 1206, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1268, 1269, 1270, 1271, 1273, 1276, 1277, 1281, 1285, 1286, 1287, 1290, 1291, 1309, 1313, 1314, 1315, 1317, 1327, 1336, 1337, 1338, 1339, 1340, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1362, 1363, 1366, 1371, 1372, 1374, 1382, 1383, 1384, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1419, 1425, 1426, 1427, 1434, 1435, 1436, 1440, 1441, 1442, 1443, 1444, 1458, 1462, 1464, 1466, 1470, 1471, 1472, 1473, 1485, 1501, 1502, 1535, 1537, 1568, 1574, 1575, 1590, 1601, 1602, 1608, 1611, 1612, 1632, 1646, 1650, 1651, 1655, 1657, 1692, 1698, 1702, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1730, 1733, 1745, 1746, 1748, 1749, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1777, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1804, 1805, 1816, 1819, 1830, 1832, 1837, 1840, 1845, 1846, 1850, 1852, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1867, 1874, 1875, 1883, 1885, 1891, 1894, 1898, 1900, 1905, 1906, 1907, 1914, 1915, 1916, 1919, 1920, 1921, 1926], "enabl": [1, 2, 3, 6, 9, 12, 14, 15, 16, 17, 19, 20, 26, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 46, 56, 60, 498, 499, 674, 754, 806, 807, 888, 893, 914, 947, 961, 1006, 1060, 1064, 1162, 1170, 1171, 1189, 1195, 1300, 1301, 1371, 1389, 1434, 1435, 1465, 1568, 1599, 1608, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1644, 1674, 1749, 1750, 1753, 1780, 1840, 1860, 1866, 1867, 1868, 1871, 1875, 1879, 1880, 1881, 1882, 1883, 1890, 1892, 1894, 1895, 1898, 1903, 1904, 1909, 1910, 1911, 1914, 1922, 1924, 1925], "cache_en": [1, 1006], "instanc": [1, 4, 19, 25, 35, 38, 39, 40, 42, 44, 45, 46, 52, 55, 56, 57, 60, 65, 68, 137, 611, 674, 728, 742, 751, 787, 790, 818, 820, 835, 852, 961, 1060, 1111, 1185, 1187, 1198, 1202, 1259, 1362, 1363, 1366, 1382, 1383, 1384, 1391, 1419, 1429, 1463, 1465, 1466, 1470, 1528, 1599, 1607, 1618, 1632, 1640, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1790, 1820, 1857, 1859, 1861, 1866, 1868, 1872, 1874, 1879, 1880, 1883, 1884, 1885, 1887, 1891, 1895, 1902, 1905, 1910, 1911, 1912, 1914, 1916, 1921, 1925], "serv": [1, 8, 9, 12, 16, 30, 38, 1856, 1867, 1899, 1901, 1910, 1911], "region": [1, 4, 6, 15, 16, 44, 52, 762, 763, 1332, 1333, 1334, 1367, 1368, 1378, 1380, 1412, 1413, 1414, 1486, 1487, 1513, 1514, 1543, 1544, 1857, 1872, 1879, 1883], "your": [1, 2, 3, 5, 8, 9, 10, 12, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 29, 30, 31, 35, 38, 42, 43, 44, 47, 48, 52, 54, 55, 56, 57, 58, 60, 64, 65, 67, 68, 887, 893, 895, 896, 901, 947, 1162, 1187, 1191, 1192, 1196, 1199, 1202, 1203, 1204, 1419, 1426, 1599, 1608, 1611, 1644, 1675, 1749, 1837, 1857, 1859, 1860, 1864, 1866, 1872, 1873, 1874, 1876, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1889, 1890, 1891, 1892, 1894, 1895, 1897, 1898, 1901, 1903, 1906, 1909, 1911, 1914, 1919, 1920, 1922, 1925], "script": [1, 5, 12, 18, 22, 26, 32, 35, 38, 41, 46, 48, 54, 56, 57, 1188, 1190, 1191, 1192, 1193, 1196, 1197, 1199, 1201, 1202, 1204, 1854, 1855, 1859, 1860, 1868, 1882, 1890, 1892, 1896, 1902, 1905, 1910], "In": [1, 3, 4, 5, 8, 10, 12, 13, 14, 15, 16, 19, 22, 25, 26, 30, 32, 35, 38, 40, 42, 44, 48, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 119, 121, 123, 125, 128, 129, 131, 139, 141, 144, 145, 147, 150, 152, 156, 158, 160, 162, 164, 166, 175, 184, 192, 196, 199, 201, 211, 213, 219, 229, 233, 235, 241, 244, 246, 248, 250, 254, 259, 266, 268, 270, 274, 276, 280, 282, 289, 291, 293, 301, 303, 305, 307, 353, 355, 357, 359, 361, 363, 365, 368, 370, 372, 373, 380, 382, 384, 386, 388, 392, 416, 419, 422, 424, 435, 437, 439, 447, 452, 462, 465, 481, 485, 487, 503, 506, 517, 521, 523, 526, 528, 530, 543, 545, 547, 556, 558, 565, 569, 571, 587, 590, 592, 594, 596, 606, 616, 674, 754, 794, 818, 848, 893, 931, 952, 953, 960, 1006, 1017, 1029, 1030, 1034, 1035, 1060, 1081, 1083, 1091, 1092, 1093, 1108, 1118, 1122, 1125, 1127, 1185, 1187, 1196, 1199, 1200, 1202, 1218, 1227, 1232, 1233, 1234, 1242, 1245, 1250, 1255, 1259, 1264, 1267, 1276, 1281, 1287, 1288, 1314, 1332, 1333, 1334, 1336, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1358, 1359, 1360, 1364, 1366, 1371, 1380, 1389, 1404, 1412, 1413, 1414, 1419, 1425, 1462, 1464, 1466, 1470, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1508, 1518, 1525, 1534, 1562, 1565, 1567, 1568, 1582, 1599, 1606, 1611, 1612, 1644, 1675, 1686, 1688, 1724, 1740, 1742, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1828, 1840, 1844, 1845, 1854, 1855, 1856, 1857, 1859, 1860, 1866, 1867, 1872, 1873, 1874, 1875, 1878, 1879, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1901, 1902, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1919, 1921], "chosen": [1, 16, 26, 65, 1048, 1208, 1568, 1753, 1778, 1823, 1875, 1879, 1883, 1885, 1898, 1905], "maintain": [1, 8, 9, 14, 15, 19, 20, 35, 36, 38, 44, 60, 64, 68, 1331, 1359, 1364, 1511, 1599, 1632, 1646, 1855, 1875, 1879, 1880, 1883, 1885, 1891, 1905], "accuraci": [1, 16, 17, 36, 947, 1250, 1568, 1855, 1870, 1879, 1891, 1919, 1923], "detail": [1, 2, 3, 4, 8, 9, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 44, 46, 56, 60, 66, 68, 148, 320, 490, 608, 729, 732, 733, 734, 735, 736, 737, 754, 760, 761, 762, 765, 766, 767, 768, 773, 774, 776, 777, 778, 779, 787, 853, 854, 855, 856, 867, 884, 886, 887, 888, 889, 890, 893, 902, 930, 957, 962, 966, 968, 969, 971, 985, 986, 995, 1006, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1024, 1025, 1026, 1043, 1060, 1099, 1121, 1132, 1135, 1136, 1140, 1168, 1175, 1187, 1191, 1202, 1226, 1244, 1251, 1259, 1265, 1267, 1287, 1327, 1331, 1341, 1350, 1351, 1352, 1356, 1362, 1363, 1364, 1365, 1367, 1368, 1371, 1389, 1419, 1425, 1431, 1432, 1434, 1446, 1467, 1477, 1478, 1479, 1480, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1519, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1530, 1531, 1532, 1533, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1590, 1599, 1600, 1635, 1645, 1656, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1675, 1680, 1692, 1704, 1736, 1747, 1773, 1781, 1826, 1840, 1854, 1857, 1858, 1859, 1860, 1867, 1869, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1894, 1895, 1896, 1898, 1902, 1903, 1905, 1907, 1909, 1910, 1911, 1912, 1914, 1918, 1919, 1921, 1922, 1925], "enter": [1, 38, 888, 1162], "should": [1, 2, 4, 5, 6, 10, 12, 15, 16, 18, 19, 21, 25, 26, 29, 30, 32, 35, 36, 38, 39, 40, 42, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 60, 64, 65, 67, 68, 117, 148, 152, 310, 318, 395, 399, 441, 442, 443, 444, 445, 483, 491, 508, 510, 512, 577, 578, 579, 581, 582, 680, 683, 684, 729, 754, 766, 767, 768, 787, 790, 794, 811, 818, 832, 833, 848, 849, 850, 853, 859, 883, 884, 885, 886, 887, 891, 892, 893, 894, 895, 896, 897, 901, 907, 908, 915, 916, 917, 918, 925, 938, 959, 963, 976, 977, 995, 997, 1006, 1051, 1061, 1062, 1063, 1073, 1078, 1081, 1082, 1083, 1091, 1092, 1093, 1096, 1111, 1113, 1114, 1115, 1117, 1118, 1122, 1126, 1127, 1128, 1144, 1145, 1148, 1149, 1184, 1185, 1187, 1188, 1192, 1196, 1198, 1199, 1202, 1203, 1204, 1206, 1231, 1256, 1257, 1258, 1264, 1273, 1276, 1277, 1278, 1327, 1335, 1336, 1340, 1353, 1355, 1356, 1358, 1359, 1360, 1363, 1364, 1385, 1411, 1419, 1425, 1426, 1427, 1446, 1467, 1471, 1483, 1489, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1510, 1518, 1568, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1632, 1633, 1634, 1637, 1639, 1650, 1651, 1654, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1704, 1706, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1727, 1743, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1787, 1788, 1789, 1790, 1791, 1792, 1805, 1819, 1828, 1847, 1852, 1853, 1854, 1855, 1857, 1859, 1860, 1864, 1866, 1867, 1869, 1870, 1872, 1874, 1875, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1891, 1893, 1894, 1895, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1910, 1912, 1914, 1918, 1919, 1921, 1922, 1925], "model": [1, 2, 3, 4, 5, 6, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 26, 36, 38, 39, 40, 42, 43, 44, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 68, 80, 81, 85, 786, 787, 788, 791, 792, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 818, 819, 820, 830, 831, 832, 833, 848, 851, 852, 853, 854, 855, 856, 857, 947, 1007, 1027, 1116, 1117, 1118, 1126, 1128, 1162, 1187, 1191, 1192, 1196, 1198, 1202, 1204, 1258, 1327, 1356, 1373, 1384, 1385, 1419, 1425, 1447, 1458, 1462, 1464, 1465, 1466, 1517, 1599, 1600, 1605, 1607, 1609, 1622, 1641, 1642, 1653, 1654, 1656, 1657, 1664, 1669, 1674, 1675, 1680, 1686, 1688, 1801, 1847, 1855, 1857, 1859, 1860, 1861, 1868, 1869, 1875, 1880, 1882, 1883, 1884, 1885, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1904, 1906, 1910, 1911, 1913, 1914, 1915, 1919, 1923, 1924], "": [1, 2, 3, 4, 5, 8, 9, 10, 12, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 29, 30, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 51, 52, 53, 55, 56, 60, 62, 64, 65, 67, 68, 459, 477, 488, 491, 508, 538, 552, 575, 618, 674, 683, 688, 689, 690, 729, 754, 787, 788, 789, 809, 810, 811, 814, 817, 820, 848, 855, 856, 869, 871, 872, 873, 874, 890, 891, 892, 896, 897, 899, 903, 931, 933, 946, 952, 953, 954, 959, 961, 963, 967, 982, 986, 995, 997, 1002, 1003, 1006, 1007, 1008, 1027, 1028, 1029, 1035, 1052, 1055, 1057, 1058, 1060, 1074, 1075, 1077, 1078, 1079, 1082, 1083, 1085, 1086, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1128, 1132, 1140, 1148, 1149, 1150, 1174, 1176, 1184, 1185, 1187, 1191, 1197, 1198, 1202, 1217, 1218, 1228, 1229, 1230, 1232, 1235, 1239, 1241, 1243, 1244, 1248, 1249, 1250, 1251, 1256, 1258, 1259, 1274, 1281, 1286, 1288, 1291, 1293, 1294, 1300, 1301, 1304, 1313, 1314, 1317, 1319, 1325, 1326, 1327, 1335, 1336, 1337, 1338, 1339, 1342, 1356, 1362, 1373, 1419, 1420, 1425, 1429, 1435, 1447, 1450, 1452, 1458, 1462, 1464, 1466, 1472, 1473, 1490, 1491, 1502, 1515, 1518, 1529, 1530, 1535, 1568, 1574, 1587, 1590, 1595, 1596, 1599, 1600, 1611, 1622, 1635, 1639, 1646, 1647, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1692, 1694, 1698, 1705, 1720, 1723, 1724, 1727, 1728, 1729, 1731, 1733, 1740, 1747, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1796, 1799, 1800, 1801, 1804, 1805, 1806, 1807, 1808, 1816, 1820, 1822, 1828, 1842, 1843, 1844, 1847, 1848, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1864, 1866, 1867, 1869, 1870, 1872, 1873, 1874, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1898, 1900, 1901, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1925], "e": [1, 2, 3, 4, 6, 8, 14, 15, 19, 26, 27, 29, 30, 35, 36, 38, 39, 42, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 58, 60, 63, 65, 67, 68, 86, 148, 255, 332, 374, 574, 611, 729, 742, 751, 754, 787, 788, 809, 811, 848, 852, 853, 855, 856, 874, 883, 887, 892, 902, 903, 926, 928, 931, 992, 1006, 1031, 1060, 1070, 1111, 1117, 1122, 1126, 1137, 1162, 1166, 1167, 1169, 1172, 1184, 1187, 1193, 1194, 1202, 1222, 1223, 1238, 1250, 1258, 1259, 1260, 1262, 1264, 1281, 1292, 1335, 1336, 1337, 1338, 1339, 1342, 1347, 1348, 1349, 1355, 1356, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1371, 1374, 1379, 1382, 1383, 1384, 1385, 1386, 1389, 1391, 1392, 1393, 1394, 1410, 1419, 1420, 1425, 1426, 1428, 1429, 1433, 1434, 1450, 1458, 1462, 1466, 1467, 1468, 1470, 1493, 1494, 1495, 1502, 1504, 1505, 1506, 1509, 1510, 1511, 1518, 1529, 1561, 1568, 1587, 1589, 1590, 1595, 1599, 1600, 1601, 1602, 1607, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1632, 1633, 1639, 1643, 1646, 1653, 1654, 1661, 1662, 1697, 1708, 1726, 1733, 1740, 1744, 1751, 1756, 1801, 1805, 1854, 1857, 1859, 1860, 1861, 1864, 1867, 1868, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1889, 1890, 1891, 1894, 1896, 1898, 1901, 1902, 1904, 1905, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1921, 1925, 1926], "network": [1, 2, 8, 9, 14, 30, 42, 44, 55, 835, 1006, 1187, 1202, 1203, 1331, 1337, 1338, 1339, 1342, 1350, 1351, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1373, 1385, 1389, 1419, 1426, 1431, 1432, 1437, 1446, 1448, 1458, 1462, 1464, 1466, 1483, 1517, 1518, 1571, 1590, 1607, 1609, 1635, 1640, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1680, 1686, 1857, 1859, 1860, 1878, 1879, 1894, 1895, 1898, 1901, 1905, 1910, 1911, 1912], "loss": [1, 2, 36, 38, 39, 42, 44, 60, 1118, 1184, 1222, 1223, 1232, 1250, 1327, 1335, 1336, 1342, 1353, 1355, 1362, 1373, 1379, 1380, 1385, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1468, 1490, 1491, 1501, 1502, 1515, 1530, 1553, 1561, 1599, 1633, 1664, 1669, 1675, 1679, 1688, 1748, 1854, 1855, 1870, 1874, 1880, 1883, 1884, 1887, 1888, 1891, 1901, 1905, 1906, 1910, 1911, 1919], "comput": [1, 4, 6, 8, 9, 14, 15, 16, 18, 25, 27, 29, 31, 35, 36, 38, 40, 44, 46, 48, 60, 61, 62, 64, 148, 287, 483, 490, 675, 677, 691, 692, 754, 762, 763, 794, 796, 813, 814, 815, 816, 818, 819, 883, 887, 888, 889, 891, 892, 895, 896, 897, 898, 899, 900, 901, 902, 903, 907, 908, 914, 919, 920, 921, 922, 923, 924, 935, 937, 938, 939, 946, 953, 955, 960, 1003, 1006, 1043, 1052, 1054, 1057, 1060, 1064, 1065, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1103, 1105, 1106, 1107, 1109, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1130, 1131, 1132, 1140, 1143, 1146, 1147, 1148, 1149, 1162, 1164, 1187, 1190, 1198, 1206, 1207, 1209, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1259, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1285, 1286, 1287, 1290, 1314, 1316, 1320, 1327, 1331, 1332, 1333, 1334, 1337, 1338, 1339, 1350, 1351, 1352, 1354, 1355, 1357, 1362, 1363, 1371, 1374, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1409, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1425, 1426, 1428, 1433, 1434, 1452, 1454, 1458, 1467, 1468, 1471, 1485, 1486, 1487, 1500, 1501, 1509, 1510, 1517, 1518, 1520, 1529, 1537, 1542, 1543, 1544, 1545, 1546, 1547, 1558, 1561, 1568, 1574, 1575, 1590, 1593, 1595, 1596, 1599, 1600, 1603, 1606, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1625, 1626, 1633, 1639, 1643, 1644, 1646, 1659, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1692, 1698, 1704, 1705, 1709, 1710, 1724, 1725, 1748, 1750, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1779, 1781, 1782, 1783, 1784, 1801, 1805, 1806, 1821, 1826, 1844, 1847, 1855, 1857, 1860, 1867, 1870, 1873, 1874, 1876, 1879, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1898, 1901, 1905, 1908, 1910, 1914, 1915, 1920, 1923], "backward": [1, 2, 6, 10, 12, 16, 21, 25, 26, 38, 39, 40, 42, 44, 60, 64, 65, 68, 287, 332, 483, 491, 498, 499, 508, 510, 512, 575, 674, 680, 683, 754, 809, 810, 811, 884, 889, 890, 891, 892, 893, 894, 896, 898, 901, 902, 907, 908, 914, 915, 927, 1006, 1064, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1116, 1117, 1187, 1259, 1267, 1281, 1291, 1335, 1336, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1362, 1371, 1372, 1373, 1386, 1389, 1390, 1406, 1410, 1411, 1419, 1425, 1426, 1433, 1434, 1463, 1464, 1465, 1466, 1467, 1468, 1490, 1491, 1501, 1502, 1518, 1529, 1553, 1556, 1591, 1595, 1596, 1599, 1611, 1644, 1653, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1692, 1704, 1779, 1782, 1786, 1805, 1840, 1854, 1855, 1858, 1860, 1866, 1874, 1875, 1878, 1879, 1884, 1885, 1886, 1887, 1890, 1891, 1893, 1894, 1901, 1902, 1904, 1905, 1910, 1914, 1915, 1920], "under": [1, 2, 4, 5, 6, 10, 14, 15, 16, 19, 26, 35, 38, 55, 60, 61, 63, 65, 67, 82, 902, 910, 932, 1162, 1187, 1342, 1419, 1483, 1509, 1510, 1606, 1608, 1611, 1656, 1725, 1856, 1872, 1879, 1880, 1883, 1884, 1886, 1888, 1893, 1898, 1902, 1903, 1905, 1908, 1909, 1912, 1915, 1919, 1922, 1924], "recommend": [1, 2, 6, 16, 35, 36, 38, 40, 44, 46, 55, 56, 60, 64, 67, 68, 86, 444, 887, 952, 953, 960, 1081, 1082, 1083, 1091, 1092, 1093, 1174, 1190, 1232, 1259, 1304, 1327, 1356, 1530, 1599, 1711, 1837, 1854, 1857, 1869, 1872, 1874, 1878, 1879, 1880, 1882, 1883, 1885, 1886, 1891, 1893, 1894, 1896, 1898, 1902, 1905], "correspond": [1, 2, 8, 22, 26, 32, 35, 36, 38, 42, 43, 44, 55, 60, 68, 80, 469, 470, 508, 510, 512, 538, 539, 674, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 729, 787, 791, 830, 832, 851, 852, 853, 858, 874, 883, 885, 886, 887, 892, 895, 897, 902, 939, 954, 1006, 1026, 1055, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1140, 1149, 1176, 1187, 1203, 1217, 1222, 1223, 1228, 1231, 1250, 1257, 1259, 1273, 1288, 1309, 1356, 1362, 1389, 1419, 1425, 1465, 1509, 1518, 1555, 1595, 1599, 1607, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1640, 1646, 1675, 1680, 1697, 1698, 1708, 1731, 1740, 1756, 1799, 1800, 1805, 1836, 1839, 1842, 1843, 1854, 1857, 1858, 1860, 1864, 1870, 1873, 1874, 1879, 1880, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1895, 1898, 1902, 1904, 1905, 1910, 1911, 1914, 1915, 1916, 1919, 1921, 1923, 1924], "devic": [1, 2, 3, 6, 9, 13, 15, 18, 22, 26, 29, 32, 35, 36, 38, 39, 40, 43, 56, 57, 60, 64, 67, 68, 86, 194, 204, 207, 286, 310, 318, 332, 441, 442, 443, 444, 445, 510, 512, 574, 680, 683, 717, 718, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 743, 744, 745, 746, 747, 748, 749, 859, 871, 873, 874, 895, 897, 915, 916, 918, 925, 927, 962, 963, 964, 966, 967, 968, 969, 970, 972, 973, 974, 975, 976, 977, 979, 980, 981, 984, 988, 989, 990, 992, 993, 1001, 1003, 1004, 1005, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1029, 1030, 1031, 1032, 1036, 1037, 1038, 1061, 1062, 1063, 1073, 1078, 1096, 1114, 1115, 1144, 1145, 1187, 1191, 1194, 1197, 1200, 1206, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1241, 1244, 1245, 1247, 1248, 1250, 1251, 1257, 1258, 1273, 1276, 1281, 1287, 1291, 1304, 1306, 1327, 1337, 1338, 1339, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1362, 1363, 1372, 1374, 1382, 1383, 1384, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1419, 1425, 1427, 1435, 1436, 1458, 1462, 1464, 1466, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1510, 1529, 1535, 1568, 1583, 1587, 1588, 1589, 1590, 1599, 1601, 1602, 1603, 1604, 1632, 1639, 1645, 1647, 1650, 1651, 1664, 1704, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1744, 1748, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1782, 1783, 1787, 1788, 1789, 1790, 1791, 1792, 1805, 1819, 1821, 1830, 1832, 1840, 1852, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1868, 1873, 1875, 1879, 1884, 1886, 1887, 1889, 1891, 1892, 1895, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1909, 1910, 1914, 1916, 1920, 1921], "creat": [1, 2, 4, 6, 7, 8, 10, 12, 14, 15, 16, 19, 23, 25, 26, 29, 35, 36, 38, 40, 42, 44, 46, 47, 53, 55, 56, 57, 58, 60, 67, 68, 86, 148, 220, 251, 332, 574, 575, 577, 578, 579, 581, 582, 726, 732, 733, 734, 739, 740, 750, 758, 786, 787, 788, 808, 809, 810, 811, 813, 818, 848, 872, 873, 874, 887, 889, 901, 926, 928, 944, 945, 954, 962, 971, 1003, 1004, 1013, 1048, 1063, 1112, 1113, 1114, 1184, 1187, 1190, 1199, 1205, 1210, 1216, 1217, 1223, 1225, 1244, 1257, 1273, 1288, 1309, 1335, 1353, 1362, 1363, 1366, 1380, 1386, 1410, 1411, 1419, 1422, 1423, 1424, 1447, 1450, 1451, 1458, 1467, 1468, 1470, 1599, 1611, 1632, 1639, 1644, 1655, 1656, 1675, 1743, 1774, 1785, 1790, 1819, 1826, 1855, 1860, 1861, 1864, 1868, 1872, 1879, 1880, 1883, 1884, 1885, 1886, 1888, 1891, 1892, 1893, 1896, 1898, 1901, 1902, 1904, 1905, 1910, 1911, 1912, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1926], "net": [1, 7, 30, 46, 63, 68, 1187, 1202, 1203, 1356, 1419, 1599, 1622, 1679, 1859, 1860, 1879, 1880, 1883, 1891, 1919], "sgd": [1, 35, 36, 42, 1362, 1590, 1599, 1680, 1686, 1688, 1879, 1883, 1884, 1891, 1901, 1910, 1911], "target": [1, 12, 13, 14, 19, 25, 26, 29, 42, 60, 64, 66, 67, 68, 494, 729, 760, 761, 786, 791, 853, 855, 856, 932, 1118, 1187, 1196, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1335, 1336, 1342, 1353, 1355, 1367, 1368, 1373, 1379, 1380, 1385, 1386, 1410, 1411, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1433, 1450, 1451, 1462, 1471, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1490, 1491, 1499, 1501, 1502, 1513, 1514, 1515, 1526, 1527, 1530, 1531, 1541, 1549, 1550, 1551, 1552, 1553, 1561, 1568, 1572, 1573, 1599, 1674, 1840, 1858, 1860, 1879, 1880, 1883, 1893, 1898, 1901, 1902, 1905, 1906, 1910, 1919, 1923], "data": [1, 2, 3, 4, 8, 14, 15, 16, 18, 19, 24, 27, 32, 33, 36, 38, 40, 42, 44, 45, 46, 49, 52, 55, 57, 60, 64, 68, 137, 148, 193, 194, 323, 326, 330, 333, 338, 441, 444, 477, 488, 492, 494, 611, 732, 733, 734, 754, 766, 767, 768, 775, 786, 787, 788, 792, 813, 814, 815, 816, 817, 819, 821, 859, 873, 874, 884, 887, 916, 925, 931, 964, 1041, 1042, 1061, 1062, 1063, 1073, 1074, 1075, 1078, 1080, 1081, 1083, 1091, 1092, 1093, 1096, 1099, 1100, 1101, 1102, 1111, 1113, 1114, 1115, 1117, 1126, 1144, 1145, 1147, 1166, 1169, 1194, 1198, 1202, 1206, 1257, 1258, 1259, 1273, 1278, 1286, 1288, 1300, 1301, 1314, 1316, 1317, 1340, 1342, 1347, 1348, 1349, 1356, 1371, 1374, 1382, 1383, 1384, 1389, 1391, 1406, 1426, 1434, 1435, 1471, 1483, 1488, 1489, 1493, 1494, 1495, 1528, 1535, 1537, 1574, 1575, 1599, 1600, 1601, 1602, 1632, 1633, 1634, 1635, 1637, 1646, 1650, 1651, 1655, 1656, 1680, 1686, 1694, 1702, 1705, 1706, 1707, 1711, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1727, 1740, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1804, 1805, 1819, 1828, 1830, 1832, 1839, 1840, 1852, 1853, 1855, 1857, 1858, 1861, 1867, 1868, 1870, 1872, 1875, 1879, 1880, 1881, 1883, 1885, 1886, 1890, 1893, 1895, 1896, 1897, 1900, 1901, 1902, 1903, 1905, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924], "zero_grad": [1, 2, 42, 1187, 1419, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1679, 1879, 1883, 1887, 1891, 1893, 1901], "loss_fn": [1, 42, 1674, 1879, 1883, 1884, 1893, 1901], "exit": [1, 2, 3, 5, 19, 32, 38, 46, 55, 60, 67, 68, 888, 1599, 1860, 1872, 1880, 1893, 1898, 1912], "step": [1, 2, 3, 5, 10, 16, 19, 26, 29, 35, 36, 38, 39, 40, 42, 44, 56, 60, 64, 68, 532, 601, 680, 762, 763, 851, 859, 888, 889, 890, 918, 942, 1146, 1234, 1257, 1259, 1273, 1276, 1288, 1367, 1368, 1389, 1486, 1487, 1513, 1514, 1599, 1632, 1653, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1711, 1720, 1774, 1856, 1857, 1858, 1874, 1879, 1880, 1883, 1884, 1885, 1887, 1891, 1893, 1895, 1897, 1898, 1902, 1904, 1905, 1910, 1911, 1914, 1919], "along": [1, 29, 32, 35, 38, 44, 48, 55, 310, 312, 314, 318, 488, 508, 510, 512, 680, 691, 813, 869, 870, 941, 958, 960, 975, 977, 1043, 1051, 1052, 1059, 1060, 1076, 1081, 1084, 1088, 1091, 1094, 1100, 1128, 1129, 1152, 1161, 1164, 1208, 1219, 1255, 1307, 1314, 1318, 1319, 1328, 1329, 1330, 1336, 1354, 1367, 1368, 1409, 1412, 1413, 1414, 1452, 1454, 1483, 1491, 1500, 1513, 1514, 1517, 1520, 1537, 1542, 1543, 1544, 1554, 1574, 1575, 1617, 1619, 1626, 1627, 1636, 1645, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1686, 1705, 1725, 1726, 1731, 1742, 1778, 1781, 1784, 1785, 1793, 1798, 1816, 1820, 1823, 1826, 1835, 1844, 1847, 1849, 1854, 1859, 1864, 1875, 1881, 1885, 1887, 1890, 1891, 1902, 1905, 1915], "complex": [1, 2, 4, 8, 9, 18, 36, 38, 68, 308, 326, 479, 679, 686, 902, 903, 940, 952, 953, 1055, 1081, 1103, 1108, 1140, 1157, 1166, 1177, 1179, 1180, 1183, 1184, 1187, 1207, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1236, 1239, 1241, 1243, 1244, 1245, 1246, 1250, 1251, 1255, 1256, 1257, 1259, 1267, 1273, 1285, 1290, 1308, 1347, 1348, 1349, 1386, 1419, 1493, 1494, 1495, 1606, 1646, 1698, 1711, 1724, 1745, 1756, 1801, 1802, 1805, 1840, 1844, 1845, 1846, 1854, 1855, 1858, 1860, 1861, 1869, 1893, 1900, 1916, 1917, 1920, 1921, 1922], "scenario": [1, 16, 35, 38, 55, 1654, 1655, 1883, 1888, 1898, 1904, 1910], "g": [1, 2, 3, 4, 6, 8, 12, 14, 15, 24, 26, 27, 29, 30, 35, 36, 38, 42, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 58, 60, 63, 65, 67, 68, 574, 611, 742, 751, 754, 787, 788, 809, 811, 848, 853, 855, 856, 883, 892, 902, 903, 928, 1006, 1060, 1111, 1117, 1121, 1122, 1137, 1140, 1162, 1184, 1187, 1193, 1194, 1202, 1258, 1342, 1343, 1356, 1358, 1359, 1360, 1364, 1366, 1371, 1379, 1385, 1389, 1390, 1419, 1420, 1429, 1434, 1450, 1502, 1504, 1505, 1506, 1511, 1518, 1599, 1600, 1601, 1602, 1643, 1646, 1653, 1654, 1659, 1660, 1661, 1662, 1665, 1671, 1672, 1673, 1674, 1726, 1733, 1744, 1751, 1769, 1801, 1854, 1857, 1859, 1860, 1861, 1864, 1867, 1872, 1879, 1880, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1894, 1895, 1898, 1901, 1902, 1904, 1905, 1910, 1914, 1917, 1918, 1919, 1925], "penalti": [1, 21, 775, 1017, 1658, 1659, 1660, 1661, 1663, 1665, 1671, 1672, 1674, 1906], "multipl": [1, 2, 3, 4, 6, 15, 16, 17, 25, 35, 36, 38, 39, 40, 44, 45, 48, 55, 56, 57, 60, 65, 67, 68, 189, 206, 312, 508, 680, 682, 683, 689, 690, 754, 835, 868, 869, 872, 901, 935, 937, 947, 955, 959, 975, 976, 977, 1003, 1058, 1060, 1063, 1113, 1121, 1122, 1123, 1124, 1127, 1128, 1132, 1136, 1150, 1151, 1200, 1203, 1208, 1209, 1224, 1225, 1226, 1242, 1247, 1252, 1253, 1281, 1284, 1289, 1291, 1335, 1336, 1350, 1351, 1352, 1353, 1355, 1363, 1366, 1371, 1379, 1385, 1386, 1407, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1470, 1490, 1491, 1501, 1510, 1530, 1553, 1561, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1673, 1681, 1682, 1683, 1684, 1685, 1690, 1692, 1748, 1776, 1782, 1783, 1787, 1788, 1789, 1791, 1792, 1820, 1821, 1828, 1836, 1840, 1847, 1848, 1854, 1855, 1859, 1860, 1872, 1873, 1874, 1875, 1880, 1882, 1884, 1886, 1888, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1904, 1905, 1906, 1910, 1911, 1912, 1914, 1924], "autocastmodel": 1, "produc": [1, 8, 12, 14, 16, 18, 19, 21, 26, 29, 35, 38, 40, 45, 47, 49, 52, 57, 65, 66, 67, 68, 86, 726, 732, 733, 734, 739, 740, 750, 758, 786, 787, 918, 938, 999, 1091, 1092, 1093, 1111, 1121, 1122, 1128, 1140, 1198, 1202, 1203, 1206, 1222, 1223, 1226, 1233, 1234, 1245, 1250, 1284, 1287, 1288, 1289, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1395, 1396, 1397, 1398, 1399, 1400, 1425, 1502, 1510, 1518, 1529, 1587, 1588, 1589, 1646, 1675, 1704, 1711, 1720, 1805, 1840, 1847, 1857, 1859, 1860, 1872, 1873, 1879, 1880, 1881, 1883, 1885, 1889, 1890, 1891, 1894, 1895, 1896, 1897, 1898, 1914, 1918], "after": [1, 2, 8, 10, 13, 16, 17, 19, 21, 25, 26, 29, 35, 36, 38, 39, 40, 42, 43, 55, 57, 60, 67, 68, 257, 754, 784, 851, 853, 855, 856, 887, 888, 891, 947, 961, 963, 999, 1006, 1059, 1117, 1172, 1187, 1191, 1242, 1281, 1323, 1356, 1371, 1404, 1419, 1422, 1462, 1464, 1466, 1483, 1518, 1590, 1593, 1599, 1611, 1613, 1617, 1619, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1686, 1688, 1744, 1801, 1826, 1849, 1854, 1859, 1860, 1870, 1872, 1878, 1879, 1880, 1883, 1884, 1885, 1887, 1888, 1890, 1891, 1893, 1894, 1898, 1901, 1902, 1904, 1905, 1910, 1911, 1912, 1913, 1915, 1917, 1919], "them": [1, 2, 4, 6, 8, 9, 10, 14, 15, 16, 18, 19, 21, 22, 25, 26, 27, 29, 30, 35, 38, 40, 46, 47, 52, 55, 57, 60, 64, 65, 67, 68, 148, 219, 251, 728, 887, 893, 897, 929, 1006, 1045, 1048, 1060, 1208, 1217, 1228, 1242, 1254, 1258, 1286, 1317, 1343, 1362, 1419, 1452, 1454, 1574, 1618, 1633, 1636, 1676, 1784, 1786, 1804, 1854, 1859, 1860, 1867, 1868, 1870, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1889, 1890, 1891, 1895, 1897, 1901, 1903, 1904, 1905, 1906, 1910, 1911, 1912, 1914, 1915, 1919, 1920, 1923], "differ": [1, 2, 4, 6, 9, 15, 16, 18, 19, 21, 22, 23, 26, 29, 32, 35, 38, 40, 42, 43, 44, 46, 47, 48, 52, 53, 55, 56, 58, 60, 61, 64, 65, 66, 68, 194, 482, 488, 611, 674, 680, 683, 689, 690, 729, 754, 787, 790, 791, 816, 818, 819, 855, 856, 859, 873, 874, 902, 903, 915, 927, 928, 959, 1043, 1048, 1050, 1052, 1060, 1100, 1101, 1102, 1106, 1107, 1113, 1116, 1121, 1122, 1128, 1140, 1161, 1187, 1197, 1202, 1216, 1222, 1223, 1233, 1234, 1242, 1245, 1250, 1254, 1281, 1291, 1327, 1336, 1337, 1338, 1339, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1371, 1372, 1380, 1382, 1383, 1384, 1385, 1389, 1390, 1406, 1419, 1422, 1425, 1440, 1441, 1443, 1444, 1445, 1447, 1450, 1458, 1464, 1466, 1468, 1471, 1474, 1475, 1476, 1483, 1491, 1509, 1518, 1529, 1531, 1542, 1543, 1544, 1568, 1590, 1599, 1601, 1602, 1606, 1641, 1646, 1653, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1688, 1694, 1704, 1726, 1799, 1800, 1805, 1826, 1837, 1838, 1840, 1842, 1843, 1847, 1854, 1857, 1859, 1860, 1862, 1866, 1867, 1872, 1873, 1875, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1891, 1893, 1894, 1895, 1897, 1901, 1902, 1903, 1904, 1905, 1906, 1910, 1912, 1914, 1917, 1919, 1920, 1921, 1924], "caus": [1, 2, 3, 4, 6, 15, 29, 32, 35, 38, 42, 48, 54, 55, 56, 65, 68, 550, 611, 871, 874, 887, 1113, 1198, 1202, 1222, 1223, 1250, 1304, 1529, 1530, 1587, 1590, 1599, 1645, 1657, 1744, 1755, 1801, 1840, 1857, 1860, 1872, 1881, 1883, 1885, 1887, 1893, 1895, 1897, 1898, 1902, 1905, 1906, 1912, 1914, 1917], "mismatch": [1, 38, 68, 874, 1188, 1656, 1657, 1859, 1879, 1884, 1885, 1887, 1898, 1921], "so": [1, 2, 3, 4, 8, 10, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 29, 31, 35, 36, 38, 39, 40, 42, 43, 44, 45, 47, 48, 55, 56, 58, 60, 63, 64, 65, 67, 68, 332, 454, 491, 674, 853, 888, 893, 895, 896, 901, 944, 962, 985, 1048, 1050, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1111, 1113, 1116, 1120, 1121, 1123, 1124, 1174, 1184, 1187, 1190, 1191, 1196, 1198, 1200, 1242, 1244, 1254, 1259, 1264, 1276, 1297, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1363, 1366, 1373, 1419, 1435, 1452, 1454, 1470, 1483, 1493, 1494, 1495, 1518, 1574, 1575, 1590, 1599, 1645, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1770, 1784, 1796, 1801, 1805, 1825, 1837, 1841, 1857, 1859, 1860, 1866, 1868, 1870, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1905, 1909, 1910, 1914, 1915, 1917, 1919, 1920, 1922], "cast": [1, 7, 36, 53, 60, 332, 597, 598, 932, 1041, 1042, 1187, 1239, 1243, 1256, 1286, 1314, 1317, 1419, 1537, 1574, 1575, 1646, 1702, 1781, 1784, 1790, 1804, 1809, 1810, 1857, 1879, 1894, 1898, 1915, 1916, 1917], "back": [1, 2, 3, 18, 19, 29, 35, 36, 38, 40, 44, 55, 60, 65, 68, 729, 831, 902, 944, 1080, 1117, 1188, 1200, 1252, 1258, 1465, 1603, 1604, 1786, 1854, 1857, 1860, 1880, 1885, 1886, 1893, 1894, 1895, 1898, 1901, 1902, 1905, 1910, 1914, 1925], "alreadi": [1, 2, 15, 27, 35, 36, 38, 39, 55, 56, 60, 67, 68, 193, 204, 207, 459, 482, 518, 574, 597, 598, 786, 834, 848, 852, 873, 971, 997, 1187, 1196, 1258, 1419, 1594, 1599, 1632, 1675, 1835, 1837, 1854, 1857, 1867, 1869, 1873, 1874, 1879, 1880, 1883, 1885, 1888, 1893, 1898, 1901, 1902, 1905, 1911, 1912, 1916, 1918], "incur": [1, 6, 36, 38, 60, 937, 1893, 1910], "overhead": [1, 2, 4, 5, 9, 15, 16, 17, 18, 19, 36, 38, 60, 775, 947, 1017, 1198, 1599, 1882, 1883, 1884, 1889, 1890, 1903, 1904, 1911, 1914, 1920], "here": [1, 2, 8, 9, 10, 14, 15, 16, 18, 19, 20, 22, 24, 26, 30, 32, 35, 36, 38, 39, 44, 54, 56, 62, 63, 64, 65, 67, 68, 574, 787, 788, 957, 969, 1060, 1077, 1079, 1080, 1085, 1086, 1087, 1089, 1090, 1095, 1097, 1116, 1126, 1185, 1198, 1337, 1338, 1339, 1350, 1351, 1352, 1382, 1383, 1384, 1427, 1458, 1518, 1520, 1608, 1672, 1675, 1686, 1773, 1854, 1857, 1859, 1860, 1862, 1873, 1874, 1875, 1879, 1880, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1897, 1898, 1901, 1902, 1903, 1905, 1908, 1914, 1918, 1919, 1921], "assum": [1, 13, 14, 21, 27, 35, 38, 43, 44, 46, 48, 55, 56, 60, 63, 66, 68, 811, 1043, 1078, 1081, 1083, 1091, 1092, 1093, 1096, 1178, 1184, 1185, 1188, 1202, 1222, 1223, 1225, 1232, 1241, 1244, 1247, 1249, 1259, 1342, 1411, 1471, 1502, 1568, 1599, 1608, 1611, 1636, 1676, 1677, 1682, 1683, 1684, 1687, 1689, 1690, 1694, 1806, 1826, 1828, 1854, 1857, 1859, 1860, 1873, 1880, 1883, 1885, 1886, 1888, 1890, 1894, 1898, 1901, 1902, 1903, 1910, 1911, 1912, 1914], "a_float32": 1, "rand": [1, 2, 32, 44, 68, 332, 687, 693, 895, 896, 897, 898, 899, 900, 959, 1003, 1004, 1077, 1079, 1082, 1083, 1085, 1086, 1089, 1090, 1092, 1093, 1095, 1097, 1118, 1193, 1198, 1202, 1203, 1204, 1260, 1261, 1263, 1335, 1385, 1462, 1463, 1464, 1465, 1466, 1490, 1509, 1510, 1568, 1599, 1611, 1644, 1697, 1708, 1709, 1710, 1714, 1856, 1857, 1858, 1859, 1860, 1862, 1873, 1874, 1898, 1900, 1903, 1905, 1910, 1911, 1915, 1918, 1919, 1922], "8": [1, 2, 13, 19, 26, 29, 34, 35, 36, 38, 44, 46, 310, 312, 314, 318, 398, 399, 467, 508, 512, 554, 601, 611, 679, 680, 691, 692, 739, 740, 755, 757, 759, 767, 768, 814, 815, 816, 819, 898, 918, 926, 937, 940, 941, 945, 1003, 1004, 1039, 1043, 1058, 1063, 1076, 1092, 1093, 1099, 1100, 1103, 1110, 1140, 1149, 1150, 1210, 1239, 1242, 1243, 1244, 1252, 1254, 1257, 1258, 1318, 1319, 1324, 1325, 1326, 1328, 1329, 1330, 1343, 1354, 1389, 1415, 1416, 1422, 1424, 1426, 1433, 1434, 1437, 1440, 1441, 1442, 1443, 1444, 1445, 1458, 1462, 1463, 1464, 1465, 1466, 1470, 1494, 1497, 1500, 1556, 1561, 1566, 1567, 1568, 1646, 1647, 1653, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1680, 1688, 1693, 1697, 1701, 1721, 1731, 1732, 1733, 1740, 1753, 1760, 1763, 1768, 1774, 1778, 1785, 1787, 1788, 1793, 1801, 1805, 1815, 1820, 1821, 1822, 1824, 1826, 1835, 1840, 1841, 1848, 1857, 1861, 1867, 1883, 1885, 1896, 1898, 1900, 1902, 1903, 1904, 1905, 1908, 1910, 1914, 1915, 1917, 1918, 1920], "b_float32": 1, "c_float32": 1, "d_float32": 1, "mm": [1, 939, 940, 1191, 1242, 1281, 1429, 1430, 1704, 1805, 1840, 1856, 1858, 1859, 1873, 1879, 1882, 1885, 1894, 1900, 1914], "No": [1, 10, 58, 67, 894, 1599, 1644, 1859, 1883, 1898, 1908, 1918, 1921], "manual": [1, 14, 22, 35, 38, 53, 55, 56, 58, 60, 68, 791, 832, 872, 901, 1149, 1191, 1335, 1336, 1355, 1423, 1424, 1426, 1447, 1466, 1490, 1491, 1501, 1553, 1611, 1632, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1857, 1860, 1872, 1879, 1883, 1885, 1886, 1887, 1888, 1891, 1897, 1898, 1905, 1906, 1919], "e_float16": 1, "handl": [1, 2, 6, 10, 15, 16, 18, 19, 21, 27, 29, 35, 36, 38, 39, 40, 42, 46, 47, 48, 55, 56, 60, 67, 68, 483, 834, 884, 894, 907, 908, 954, 963, 978, 1005, 1018, 1060, 1106, 1107, 1128, 1187, 1217, 1356, 1419, 1468, 1518, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1724, 1770, 1806, 1847, 1854, 1870, 1872, 1874, 1883, 1885, 1886, 1887, 1888, 1893, 1898, 1902, 1905, 1910, 1912, 1921, 1922], "f_float16": 1, "g_float32": 1, "epoch": [1, 35, 48, 58, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1870, 1879, 1901, 1919], "eval": [1, 68, 808, 854, 855, 1126, 1187, 1191, 1196, 1202, 1337, 1338, 1339, 1382, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1419, 1425, 1458, 1466, 1607, 1860, 1868, 1891, 1898, 1905, 1924, 1925], "testmodel": 1, "__init__": [1, 2, 12, 14, 25, 26, 35, 36, 38, 44, 60, 68, 855, 856, 1126, 1185, 1188, 1190, 1193, 1198, 1202, 1203, 1204, 1419, 1420, 1421, 1429, 1430, 1590, 1857, 1859, 1860, 1870, 1880, 1885, 1887, 1891, 1896, 1898, 1902, 1905, 1919], "input_s": [1, 728, 754, 755, 759, 1371, 1372, 1389, 1390, 1434, 1435, 1436, 1858], "num_class": [1, 18, 1555, 1858], "super": [1, 10, 12, 25, 26, 35, 36, 38, 40, 68, 855, 856, 1126, 1185, 1190, 1193, 1198, 1202, 1203, 1204, 1419, 1420, 1421, 1429, 1430, 1431, 1432, 1590, 1686, 1857, 1859, 1860, 1861, 1880, 1885, 1891, 1896, 1898, 1902, 1905], "fc1": [1, 36, 1590, 1903], "suggest": [1, 10, 26, 36, 61, 80, 81, 1353, 1854, 1862, 1879, 1880, 1887, 1914], "issu": [1, 3, 4, 6, 10, 11, 16, 17, 20, 24, 27, 29, 34, 35, 38, 45, 60, 61, 63, 65, 68, 895, 901, 947, 1111, 1122, 1124, 1128, 1232, 1276, 1288, 1385, 1389, 1415, 1416, 1417, 1434, 1471, 1529, 1530, 1744, 1847, 1854, 1855, 1860, 1862, 1867, 1872, 1873, 1874, 1875, 1879, 1880, 1883, 1885, 1893, 1894, 1895, 1897, 1898, 1902, 1905, 1906, 1910, 1914, 1915, 1917], "http": [1, 3, 4, 5, 8, 10, 17, 18, 24, 25, 29, 30, 36, 37, 38, 43, 44, 55, 56, 60, 148, 674, 724, 725, 726, 727, 739, 740, 750, 755, 756, 757, 758, 759, 786, 787, 887, 947, 1060, 1117, 1259, 1288, 1342, 1389, 1415, 1416, 1417, 1437, 1438, 1462, 1465, 1468, 1643, 1694, 1711, 1744, 1769, 1840, 1854, 1861, 1869, 1880, 1881, 1888, 1889, 1891, 1895, 1897, 1898, 1902, 1904, 1917, 1919, 1926], "github": [1, 8, 10, 16, 24, 25, 26, 29, 37, 38, 51, 60, 61, 65, 148, 786, 787, 887, 901, 1117, 1288, 1415, 1416, 1417, 1462, 1680, 1744, 1854, 1862, 1867, 1885, 1888, 1895, 1898, 1904, 1905, 1914, 1915, 1917], "com": [1, 8, 24, 25, 29, 37, 38, 54, 56, 60, 148, 786, 787, 887, 1117, 1288, 1415, 1416, 1417, 1462, 1744, 1840, 1854, 1869, 1888, 1889, 1895, 1897, 1898, 1904, 1917], "75956": 1, "_c": [1, 35, 36, 38, 67, 895, 901, 1186, 1198, 1655, 1858, 1860, 1870, 1883, 1890, 1894, 1897, 1898], "_jit_set_autocast_mod": 1, "randn": [1, 2, 12, 16, 18, 19, 20, 24, 26, 27, 38, 44, 62, 64, 65, 66, 68, 286, 308, 479, 538, 574, 578, 579, 580, 581, 582, 583, 611, 677, 678, 679, 680, 681, 682, 683, 684, 689, 690, 693, 714, 722, 723, 728, 732, 733, 734, 735, 736, 737, 750, 752, 754, 755, 756, 757, 758, 759, 766, 767, 768, 855, 856, 868, 869, 870, 872, 875, 876, 877, 878, 879, 915, 927, 934, 936, 937, 938, 939, 940, 942, 954, 955, 956, 957, 958, 960, 1039, 1040, 1041, 1042, 1047, 1048, 1049, 1050, 1054, 1060, 1074, 1075, 1104, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1157, 1161, 1164, 1198, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1240, 1241, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1262, 1266, 1267, 1274, 1276, 1277, 1278, 1280, 1281, 1284, 1286, 1287, 1289, 1291, 1292, 1293, 1294, 1307, 1308, 1311, 1321, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1417, 1418, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1445, 1446, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1467, 1469, 1470, 1474, 1475, 1476, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1513, 1514, 1520, 1553, 1559, 1560, 1649, 1653, 1695, 1700, 1701, 1702, 1704, 1705, 1718, 1722, 1723, 1735, 1771, 1773, 1778, 1783, 1786, 1794, 1795, 1804, 1805, 1814, 1817, 1818, 1821, 1825, 1828, 1829, 1831, 1834, 1836, 1840, 1845, 1846, 1847, 1850, 1856, 1858, 1859, 1860, 1862, 1873, 1874, 1875, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1891, 1895, 1896, 1898, 1900, 1902, 1905, 1910, 1914, 1915, 1917, 1919, 1922, 1924], "freez": [1, 1187, 1196, 1362, 1363, 1419, 1880], "_": [1, 2, 4, 12, 19, 26, 35, 36, 38, 39, 42, 48, 66, 68, 675, 677, 678, 692, 859, 875, 876, 877, 878, 879, 888, 894, 917, 936, 953, 954, 956, 957, 959, 1104, 1109, 1123, 1127, 1153, 1207, 1215, 1266, 1274, 1337, 1338, 1339, 1382, 1383, 1384, 1458, 1599, 1607, 1640, 1672, 1674, 1694, 1717, 1720, 1723, 1735, 1750, 1756, 1758, 1764, 1771, 1773, 1794, 1805, 1817, 1818, 1880, 1883, 1886, 1887, 1891, 1897, 1901, 1902, 1904, 1915], "bug": [1, 16, 26, 29, 32, 38, 68, 1120, 1121, 1123, 1276, 1879, 1893, 1914], "what": [1, 2, 4, 6, 8, 9, 10, 12, 14, 15, 16, 19, 20, 24, 26, 38, 43, 44, 48, 52, 53, 60, 62, 64, 65, 68, 886, 1121, 1202, 1203, 1276, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1413, 1414, 1447, 1470, 1542, 1543, 1544, 1568, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1705, 1854, 1855, 1857, 1859, 1860, 1873, 1885, 1886, 1888, 1891, 1898, 1901, 1904, 1905, 1910, 1911, 1914], "observ": [1, 16, 26, 36, 46, 55, 750, 783, 784, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 802, 803, 805, 807, 809, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 853, 855, 856, 858, 955, 959, 1200, 1288, 1335, 1336, 1337, 1338, 1339, 1353, 1355, 1379, 1382, 1383, 1384, 1385, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1458, 1467, 1490, 1491, 1501, 1530, 1553, 1561, 1879, 1880, 1883, 1884, 1890, 1906, 1924], "pleas": [1, 2, 5, 6, 7, 8, 9, 10, 12, 15, 20, 22, 24, 26, 27, 30, 36, 38, 44, 47, 50, 51, 55, 56, 60, 61, 62, 63, 64, 65, 66, 68, 251, 252, 493, 508, 612, 683, 724, 725, 726, 727, 728, 729, 735, 736, 737, 739, 740, 750, 755, 756, 757, 758, 759, 855, 856, 886, 888, 889, 890, 895, 897, 898, 901, 929, 1043, 1116, 1120, 1121, 1122, 1123, 1124, 1128, 1187, 1250, 1281, 1291, 1342, 1350, 1385, 1419, 1518, 1530, 1535, 1556, 1568, 1586, 1599, 1640, 1641, 1682, 1744, 1847, 1862, 1867, 1873, 1874, 1875, 1876, 1879, 1880, 1885, 1886, 1889, 1894, 1895, 1897, 1898, 1901, 1902, 1905, 1908, 1910, 1911, 1914, 1915, 1917, 1918, 1919, 1921], "file": [1, 2, 4, 7, 8, 10, 12, 14, 16, 22, 27, 29, 32, 35, 40, 46, 48, 53, 55, 57, 63, 65, 68, 895, 901, 909, 910, 962, 999, 1120, 1121, 1123, 1124, 1162, 1194, 1197, 1258, 1656, 1736, 1780, 1854, 1857, 1860, 1861, 1862, 1869, 1873, 1874, 1875, 1880, 1883, 1885, 1890, 1895, 1896, 1897, 1898, 1904, 1908, 1911, 1914, 1916, 1919], "subregion": 1, "nest": [1, 2, 6, 29, 40, 60, 68, 583, 787, 809, 811, 888, 897, 1021, 1022, 1118, 1128, 1187, 1190, 1202, 1419, 1425, 1465, 1653, 1657, 1847, 1855, 1886, 1898, 1904, 1910], "local": [1, 13, 16, 19, 26, 38, 40, 42, 43, 46, 53, 55, 56, 57, 58, 60, 68, 914, 1003, 1064, 1117, 1162, 1187, 1259, 1358, 1359, 1360, 1364, 1366, 1407, 1419, 1470, 1512, 1536, 1586, 1599, 1600, 1644, 1750, 1780, 1854, 1855, 1859, 1872, 1879, 1883, 1884, 1887, 1898, 1902, 1903, 1907, 1910, 1911, 1912, 1919], "particular": [1, 4, 8, 15, 16, 26, 35, 40, 46, 52, 55, 56, 60, 68, 554, 674, 855, 856, 1034, 1128, 1187, 1281, 1356, 1419, 1653, 1847, 1857, 1859, 1867, 1875, 1883, 1885, 1887, 1890, 1891, 1894, 1898, 1901, 1914, 1916, 1922, 1925], "explicit": [1, 9, 38, 60, 64, 68, 995, 1140, 1174, 1530, 1744, 1821, 1854, 1855, 1856, 1860, 1861, 1873, 1879, 1883, 1885, 1902, 1917, 1918], "control": [1, 2, 3, 12, 14, 18, 19, 29, 35, 36, 38, 39, 40, 44, 46, 51, 54, 55, 749, 793, 852, 855, 870, 874, 888, 916, 925, 1047, 1048, 1049, 1050, 1051, 1144, 1145, 1198, 1199, 1200, 1202, 1217, 1223, 1225, 1228, 1230, 1233, 1235, 1239, 1245, 1248, 1250, 1256, 1276, 1327, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1405, 1413, 1414, 1470, 1568, 1599, 1692, 1748, 1749, 1763, 1778, 1780, 1785, 1801, 1805, 1823, 1829, 1830, 1831, 1832, 1857, 1866, 1880, 1882, 1883, 1884, 1891, 1893, 1894, 1896, 1898, 1901, 1905, 1912, 1914], "surround": [1, 68, 784, 1859, 1879, 1883], "ensur": [1, 2, 5, 7, 8, 10, 15, 16, 26, 35, 38, 39, 40, 42, 46, 55, 56, 58, 60, 67, 68, 477, 482, 729, 813, 891, 893, 1117, 1187, 1331, 1412, 1419, 1422, 1423, 1462, 1518, 1542, 1543, 1544, 1568, 1599, 1752, 1854, 1857, 1859, 1867, 1869, 1872, 1879, 1880, 1883, 1885, 1886, 1888, 1893, 1895, 1902, 1905, 1906, 1910, 1911], "necessari": [1, 2, 4, 10, 16, 26, 29, 35, 40, 46, 55, 56, 60, 67, 86, 189, 206, 554, 583, 894, 1117, 1161, 1198, 1425, 1633, 1634, 1857, 1860, 1874, 1878, 1880, 1881, 1883, 1884, 1889, 1891, 1894, 1897, 1902, 1905, 1910, 1911, 1912, 1917], "becaus": [1, 2, 4, 5, 6, 8, 9, 14, 15, 16, 18, 19, 24, 26, 29, 35, 36, 38, 42, 44, 48, 60, 64, 65, 67, 68, 491, 897, 902, 903, 1081, 1082, 1083, 1091, 1092, 1093, 1118, 1122, 1127, 1128, 1184, 1188, 1191, 1194, 1233, 1234, 1258, 1276, 1337, 1338, 1339, 1356, 1458, 1590, 1599, 1600, 1678, 1720, 1801, 1847, 1855, 1857, 1860, 1862, 1872, 1873, 1874, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1898, 1902, 1905, 1906, 1910, 1912, 1914, 1919, 1921, 1924, 1925], "f_float32": 1, "re": [1, 2, 5, 6, 8, 14, 15, 16, 18, 20, 25, 26, 29, 35, 38, 42, 45, 52, 55, 60, 61, 62, 63, 64, 65, 67, 68, 927, 1111, 1187, 1191, 1419, 1574, 1600, 1635, 1731, 1784, 1857, 1860, 1867, 1872, 1879, 1880, 1883, 1885, 1886, 1888, 1893, 1905, 1911, 1912, 1915, 1925], "again": [1, 14, 15, 19, 32, 35, 38, 42, 46, 63, 1309, 1880, 1886, 1891], "regardless": [1, 16, 35, 54, 60, 953, 1191, 1196, 1837, 1879, 1883, 1896, 1910, 1921], "g_float16": 1, "thread": [1, 2, 4, 13, 35, 38, 40, 46, 57, 60, 67, 914, 963, 1064, 1137, 1138, 1162, 1356, 1644, 1750, 1751, 1752, 1855, 1857, 1870, 1879, 1883, 1890, 1893, 1910, 1912, 1922], "new": [1, 2, 6, 9, 13, 14, 16, 19, 25, 26, 29, 32, 35, 37, 38, 40, 44, 46, 55, 56, 60, 61, 64, 65, 66, 67, 68, 219, 251, 308, 444, 479, 483, 491, 494, 538, 574, 577, 611, 674, 678, 754, 785, 808, 813, 848, 873, 875, 876, 877, 878, 879, 889, 907, 908, 930, 931, 936, 945, 954, 956, 957, 964, 966, 1044, 1048, 1070, 1074, 1075, 1101, 1102, 1104, 1117, 1126, 1128, 1157, 1161, 1162, 1176, 1177, 1180, 1183, 1187, 1193, 1198, 1200, 1260, 1261, 1262, 1263, 1280, 1318, 1321, 1337, 1338, 1339, 1371, 1382, 1383, 1384, 1419, 1420, 1425, 1429, 1458, 1469, 1471, 1529, 1592, 1595, 1596, 1597, 1598, 1599, 1607, 1611, 1613, 1617, 1618, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1636, 1640, 1644, 1661, 1662, 1688, 1712, 1722, 1723, 1727, 1728, 1729, 1735, 1736, 1740, 1745, 1746, 1756, 1758, 1769, 1771, 1773, 1794, 1795, 1798, 1815, 1817, 1818, 1834, 1836, 1839, 1845, 1846, 1847, 1854, 1857, 1859, 1860, 1864, 1867, 1868, 1872, 1873, 1874, 1875, 1876, 1880, 1883, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1908, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1924], "affect": [1, 2, 3, 8, 10, 21, 32, 34, 45, 60, 219, 220, 779, 914, 964, 966, 1064, 1111, 1134, 1162, 1187, 1300, 1301, 1389, 1419, 1434, 1471, 1587, 1600, 1644, 1744, 1747, 1748, 1750, 1879, 1880, 1883, 1888, 1891, 1894, 1895, 1916], "dataparallel": [1, 38, 1583, 1599, 1635, 1855, 1880, 1887, 1893, 1910], "parallel": [1, 16, 28, 29, 35, 36, 38, 39, 40, 42, 55, 56, 60, 1137, 1138, 1190, 1356, 1425, 1458, 1518, 1599, 1751, 1752, 1855, 1860, 1879, 1880, 1882, 1893, 1897, 1910, 1912], "distributeddataparallel": [1, 35, 36, 38, 39, 42, 56, 60, 1356, 1458, 1893, 1903, 1910], "one": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 18, 19, 22, 23, 25, 26, 27, 29, 30, 32, 35, 36, 38, 39, 40, 42, 43, 44, 46, 48, 52, 55, 57, 58, 60, 64, 65, 66, 67, 68, 70, 72, 80, 81, 148, 219, 251, 349, 399, 482, 508, 515, 539, 554, 691, 742, 751, 787, 848, 849, 850, 874, 880, 886, 887, 888, 889, 891, 897, 918, 929, 931, 941, 945, 964, 966, 971, 973, 977, 1004, 1027, 1038, 1049, 1060, 1064, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1096, 1099, 1103, 1106, 1107, 1108, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1140, 1149, 1150, 1162, 1166, 1169, 1172, 1191, 1196, 1200, 1206, 1207, 1217, 1218, 1228, 1229, 1230, 1231, 1232, 1234, 1239, 1243, 1245, 1247, 1250, 1256, 1257, 1273, 1281, 1285, 1290, 1309, 1315, 1327, 1332, 1335, 1336, 1337, 1338, 1339, 1342, 1347, 1350, 1351, 1352, 1363, 1367, 1368, 1373, 1382, 1383, 1384, 1386, 1387, 1388, 1398, 1399, 1400, 1410, 1419, 1423, 1425, 1458, 1466, 1471, 1483, 1493, 1496, 1497, 1498, 1513, 1514, 1515, 1520, 1555, 1568, 1586, 1590, 1599, 1600, 1605, 1607, 1608, 1612, 1622, 1633, 1642, 1643, 1644, 1645, 1646, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1682, 1684, 1685, 1686, 1706, 1707, 1724, 1740, 1748, 1750, 1753, 1756, 1796, 1805, 1820, 1825, 1826, 1828, 1836, 1839, 1840, 1847, 1855, 1857, 1860, 1864, 1866, 1868, 1870, 1872, 1873, 1874, 1875, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1893, 1895, 1897, 1898, 1901, 1902, 1903, 1905, 1906, 1910, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921], "gpu": [1, 2, 3, 4, 5, 8, 15, 16, 17, 18, 20, 22, 23, 26, 29, 31, 33, 35, 36, 40, 46, 56, 57, 60, 67, 194, 207, 286, 329, 597, 754, 947, 968, 969, 972, 973, 974, 975, 976, 977, 983, 984, 985, 992, 998, 999, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1037, 1038, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1108, 1187, 1196, 1233, 1258, 1287, 1295, 1296, 1297, 1300, 1301, 1327, 1356, 1371, 1389, 1419, 1434, 1435, 1458, 1583, 1599, 1632, 1805, 1855, 1857, 1868, 1883, 1889, 1891, 1892, 1894, 1895, 1897, 1905, 1910, 1914, 1916, 1920, 1922], "per": [1, 14, 29, 35, 36, 38, 39, 40, 42, 43, 45, 46, 48, 54, 56, 57, 60, 61, 66, 468, 469, 470, 728, 729, 795, 802, 813, 816, 819, 827, 839, 847, 886, 895, 897, 967, 1043, 1074, 1118, 1128, 1259, 1335, 1336, 1337, 1338, 1339, 1353, 1355, 1356, 1363, 1374, 1379, 1382, 1383, 1384, 1385, 1386, 1391, 1410, 1411, 1419, 1422, 1423, 1424, 1425, 1426, 1433, 1450, 1451, 1458, 1462, 1463, 1464, 1465, 1466, 1467, 1490, 1491, 1501, 1530, 1553, 1561, 1599, 1643, 1647, 1664, 1680, 1686, 1694, 1706, 1753, 1755, 1806, 1822, 1826, 1847, 1870, 1874, 1876, 1882, 1883, 1884, 1886, 1890, 1903, 1905, 1906, 1908, 1911, 1914, 1919], "whether": [1, 2, 3, 8, 16, 17, 19, 26, 29, 35, 36, 38, 39, 40, 43, 44, 46, 54, 55, 60, 68, 316, 318, 467, 512, 611, 674, 687, 689, 690, 693, 868, 869, 874, 883, 891, 894, 895, 897, 902, 903, 914, 916, 925, 938, 939, 940, 946, 947, 948, 1002, 1018, 1116, 1128, 1144, 1145, 1162, 1184, 1187, 1194, 1195, 1203, 1208, 1216, 1217, 1223, 1225, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1241, 1243, 1244, 1247, 1248, 1249, 1250, 1258, 1274, 1276, 1284, 1286, 1287, 1289, 1292, 1309, 1314, 1315, 1316, 1317, 1342, 1353, 1379, 1385, 1419, 1428, 1433, 1468, 1480, 1481, 1482, 1502, 1530, 1561, 1599, 1606, 1608, 1611, 1624, 1638, 1641, 1646, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1680, 1692, 1702, 1705, 1749, 1750, 1799, 1800, 1801, 1804, 1805, 1823, 1828, 1837, 1838, 1840, 1842, 1843, 1847, 1854, 1860, 1866, 1867, 1869, 1875, 1879, 1883, 1885, 1889, 1898, 1903, 1905, 1910, 1914, 1916, 1918, 1919, 1924], "torch_dtyp": 1, "weight": [1, 16, 35, 38, 44, 60, 66, 68, 154, 298, 358, 359, 491, 706, 707, 708, 709, 710, 711, 712, 713, 714, 724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 736, 737, 739, 740, 743, 745, 746, 747, 748, 750, 754, 755, 757, 758, 759, 766, 767, 768, 775, 786, 787, 788, 802, 803, 827, 829, 835, 839, 843, 844, 845, 846, 847, 852, 853, 855, 856, 918, 959, 1116, 1118, 1126, 1128, 1148, 1149, 1187, 1191, 1196, 1198, 1203, 1212, 1309, 1335, 1336, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1362, 1363, 1371, 1372, 1374, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1419, 1423, 1424, 1425, 1426, 1427, 1434, 1436, 1448, 1462, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1509, 1510, 1519, 1528, 1532, 1535, 1550, 1552, 1553, 1562, 1571, 1590, 1599, 1606, 1607, 1609, 1611, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1639, 1640, 1641, 1643, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1674, 1708, 1847, 1854, 1855, 1856, 1858, 1859, 1860, 1868, 1869, 1874, 1875, 1878, 1885, 1887, 1891, 1896, 1905, 1906, 1907, 1908, 1914, 1919, 1923, 1924], "insid": [1, 2, 8, 15, 19, 26, 35, 55, 60, 65, 67, 68, 891, 892, 893, 894, 969, 1006, 1118, 1122, 1127, 1198, 1599, 1857, 1859, 1860, 1868, 1879, 1883, 1885, 1886, 1890, 1898, 1923], "custom_fwd": [1, 1879], "fwd": 1, "cast_input": [1, 1879], "helper": [1, 4, 6, 25, 38, 64, 68, 1458, 1854, 1855, 1859, 1883, 1884, 1898, 1902, 1910, 1925], "subclass": [1, 2, 13, 19, 29, 35, 40, 44, 48, 65, 68, 137, 531, 883, 884, 885, 1185, 1188, 1197, 1419, 1600, 1613, 1618, 1639, 1857, 1860, 1861, 1867, 1879, 1891, 1898, 1899, 1910, 1925], "page": [1, 7, 8, 10, 22, 35, 39, 56, 58, 1259, 1462, 1464, 1466, 1883, 1884, 1891, 1900, 1910], "incom": [1, 38, 57, 775, 813, 814, 815, 816, 819, 1340, 1406, 1489, 1535, 1872, 1880], "non": [1, 2, 4, 6, 14, 15, 16, 17, 18, 25, 29, 34, 36, 38, 39, 40, 43, 44, 46, 48, 55, 57, 58, 60, 67, 86, 148, 332, 499, 508, 512, 539, 692, 728, 733, 734, 735, 736, 737, 739, 740, 750, 754, 758, 759, 766, 767, 768, 832, 859, 871, 883, 885, 887, 892, 894, 902, 903, 918, 931, 934, 947, 952, 953, 958, 1017, 1106, 1107, 1113, 1117, 1122, 1128, 1164, 1187, 1190, 1199, 1202, 1203, 1222, 1223, 1230, 1234, 1235, 1248, 1250, 1259, 1269, 1276, 1281, 1286, 1309, 1314, 1315, 1319, 1332, 1333, 1334, 1348, 1349, 1351, 1352, 1355, 1365, 1371, 1388, 1389, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1424, 1426, 1434, 1436, 1450, 1501, 1520, 1548, 1553, 1595, 1596, 1599, 1645, 1675, 1697, 1740, 1741, 1756, 1768, 1782, 1783, 1787, 1788, 1789, 1790, 1791, 1792, 1821, 1837, 1847, 1854, 1855, 1857, 1859, 1860, 1862, 1872, 1875, 1878, 1881, 1885, 1886, 1887, 1891, 1895, 1898, 1903, 1904, 1909, 1910, 1912, 1914, 1915, 1917, 1918, 1919, 1921, 1925], "intern": [1, 4, 9, 10, 16, 19, 20, 26, 29, 35, 36, 38, 40, 44, 46, 52, 60, 65, 68, 961, 995, 1016, 1117, 1187, 1223, 1225, 1241, 1244, 1267, 1337, 1338, 1339, 1373, 1458, 1493, 1494, 1495, 1518, 1608, 1655, 1748, 1790, 1840, 1861, 1879, 1880, 1882, 1883, 1888, 1894, 1895, 1911, 1912, 1916, 1918], "current": [1, 2, 3, 4, 6, 7, 8, 10, 14, 15, 16, 19, 21, 22, 26, 27, 29, 35, 38, 40, 42, 43, 44, 46, 48, 55, 56, 60, 61, 67, 68, 86, 148, 207, 219, 482, 492, 493, 494, 735, 737, 775, 787, 789, 811, 853, 855, 856, 859, 873, 884, 887, 888, 895, 896, 897, 902, 916, 925, 961, 962, 963, 964, 966, 971, 972, 975, 976, 978, 979, 980, 981, 984, 985, 986, 988, 989, 992, 994, 995, 998, 1000, 1001, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1027, 1029, 1031, 1033, 1036, 1037, 1038, 1061, 1063, 1073, 1078, 1096, 1112, 1114, 1134, 1135, 1136, 1144, 1145, 1170, 1171, 1187, 1191, 1202, 1206, 1257, 1259, 1273, 1288, 1295, 1297, 1359, 1362, 1366, 1419, 1458, 1470, 1512, 1518, 1529, 1568, 1586, 1587, 1589, 1599, 1612, 1616, 1617, 1618, 1619, 1620, 1625, 1626, 1627, 1628, 1650, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1704, 1713, 1715, 1717, 1719, 1720, 1744, 1748, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1780, 1787, 1788, 1789, 1790, 1791, 1792, 1819, 1830, 1832, 1837, 1852, 1855, 1857, 1859, 1860, 1861, 1862, 1864, 1867, 1870, 1872, 1875, 1879, 1880, 1883, 1884, 1889, 1890, 1891, 1892, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1905, 1908, 1910, 1911, 1914, 1916, 1917, 1919, 1920, 1923, 1925], "custom_bwd": [1, 1879], "bwd": 1, "small": [1, 4, 8, 10, 15, 17, 26, 35, 36, 38, 44, 55, 859, 902, 903, 947, 974, 1017, 1249, 1250, 1262, 1264, 1327, 1354, 1428, 1433, 1447, 1471, 1500, 1554, 1561, 1599, 1677, 1683, 1692, 1805, 1857, 1859, 1860, 1883, 1885, 1887, 1891, 1894, 1896, 1898, 1902, 1905, 1906, 1915, 1921], "magnitud": [1, 954, 1643, 1756, 1878, 1879, 1883], "represent": [1, 4, 14, 16, 26, 29, 35, 38, 40, 53, 68, 477, 752, 820, 964, 1076, 1077, 1079, 1103, 1132, 1187, 1226, 1229, 1231, 1234, 1313, 1419, 1425, 1653, 1692, 1855, 1857, 1860, 1875, 1885, 1894, 1898, 1902, 1905, 1914, 1921, 1926], "These": [1, 2, 3, 4, 9, 14, 16, 19, 21, 26, 29, 30, 35, 38, 39, 44, 61, 63, 66, 68, 788, 874, 959, 1060, 1124, 1184, 1187, 1229, 1294, 1327, 1419, 1590, 1607, 1855, 1857, 1858, 1859, 1860, 1870, 1873, 1874, 1876, 1879, 1880, 1883, 1884, 1885, 1891, 1894, 1896, 1898, 1902, 1908, 1910, 1911, 1917, 1922, 1925], "flush": [1, 2, 40, 1017, 1197, 1736, 1749, 1894, 1919], "zero": [1, 2, 3, 15, 18, 36, 38, 39, 42, 44, 57, 60, 65, 68, 148, 257, 312, 508, 510, 538, 539, 578, 579, 581, 582, 617, 673, 685, 692, 706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 721, 724, 725, 732, 733, 734, 735, 736, 737, 738, 743, 744, 745, 746, 747, 748, 749, 750, 753, 754, 758, 762, 763, 766, 767, 768, 769, 771, 774, 775, 789, 793, 813, 814, 815, 816, 819, 824, 871, 880, 881, 882, 887, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 917, 918, 938, 939, 940, 945, 954, 958, 1006, 1017, 1021, 1022, 1051, 1055, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1108, 1113, 1116, 1124, 1146, 1147, 1150, 1172, 1184, 1187, 1198, 1216, 1217, 1218, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1259, 1267, 1268, 1269, 1270, 1271, 1276, 1277, 1309, 1313, 1317, 1331, 1332, 1333, 1334, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1371, 1372, 1374, 1387, 1388, 1389, 1390, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1425, 1428, 1431, 1432, 1433, 1434, 1436, 1456, 1470, 1471, 1474, 1475, 1476, 1485, 1486, 1487, 1496, 1497, 1498, 1500, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1518, 1539, 1540, 1554, 1555, 1556, 1616, 1617, 1618, 1619, 1634, 1641, 1645, 1649, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1692, 1704, 1706, 1707, 1708, 1724, 1733, 1743, 1770, 1774, 1783, 1787, 1788, 1789, 1790, 1791, 1792, 1796, 1805, 1819, 1820, 1822, 1828, 1853, 1857, 1858, 1860, 1862, 1870, 1872, 1873, 1874, 1875, 1878, 1880, 1883, 1885, 1891, 1894, 1897, 1898, 1900, 1902, 1904, 1905, 1908, 1914, 1915, 1917, 1919, 1920, 1921, 1922], "underflow": [1, 1385, 1879], "updat": [1, 10, 25, 27, 35, 36, 40, 42, 46, 55, 60, 63, 64, 68, 219, 508, 510, 754, 793, 794, 818, 1116, 1125, 1187, 1337, 1338, 1339, 1356, 1362, 1363, 1371, 1382, 1383, 1384, 1419, 1420, 1429, 1458, 1509, 1510, 1607, 1611, 1641, 1658, 1664, 1669, 1671, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1854, 1857, 1868, 1879, 1880, 1883, 1884, 1885, 1891, 1893, 1896, 1897, 1898, 1900, 1901, 1903, 1905, 1910, 1911, 1912, 1919], "lost": [1, 46, 56, 58, 1356, 1415, 1416, 1417], "To": [1, 2, 3, 4, 5, 6, 7, 10, 12, 14, 15, 16, 17, 19, 20, 24, 25, 26, 29, 30, 35, 36, 38, 39, 42, 43, 44, 46, 47, 53, 54, 56, 57, 60, 65, 68, 80, 81, 332, 494, 551, 728, 888, 901, 944, 947, 962, 1007, 1027, 1048, 1050, 1060, 1088, 1090, 1094, 1105, 1187, 1188, 1190, 1191, 1197, 1198, 1232, 1254, 1259, 1287, 1327, 1336, 1359, 1385, 1415, 1416, 1417, 1419, 1472, 1473, 1491, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1643, 1686, 1694, 1705, 1744, 1752, 1806, 1854, 1857, 1859, 1860, 1864, 1872, 1873, 1874, 1876, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1896, 1898, 1901, 1902, 1903, 1904, 1905, 1910, 1911, 1912, 1914, 1917, 1918, 1919, 1920], "multipli": [1, 16, 38, 310, 318, 419, 508, 679, 680, 681, 682, 683, 684, 685, 754, 773, 779, 780, 781, 915, 927, 1030, 1043, 1060, 1140, 1151, 1210, 1222, 1223, 1227, 1240, 1242, 1244, 1250, 1252, 1281, 1291, 1304, 1308, 1311, 1335, 1347, 1348, 1349, 1352, 1371, 1389, 1471, 1472, 1473, 1529, 1587, 1588, 1589, 1611, 1677, 1683, 1685, 1692, 1776, 1779, 1782, 1783, 1797, 1801, 1802, 1805, 1826, 1858, 1873, 1883, 1888, 1891, 1894, 1900, 1914, 1915], "flow": [1, 12, 14, 18, 19, 944, 1199, 1202, 1483, 1518, 1599, 1857, 1878, 1880, 1883, 1885, 1896, 1898, 1912], "word": [1, 2, 9, 38, 55, 56, 63, 67, 68, 931, 1327, 1347, 1348, 1349, 1362, 1363, 1462, 1509, 1510, 1529, 1587, 1599, 1606, 1740, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1859, 1880, 1887, 1902, 1911], "larger": [1, 10, 19, 22, 25, 38, 44, 68, 251, 494, 903, 918, 1017, 1117, 1241, 1244, 1327, 1356, 1362, 1363, 1411, 1468, 1471, 1509, 1510, 1880, 1883, 1887, 1888, 1890, 1894, 1896, 1914, 1919], "thei": [1, 2, 4, 6, 8, 10, 14, 15, 16, 18, 21, 24, 26, 27, 31, 32, 35, 38, 40, 44, 45, 55, 60, 63, 64, 67, 68, 318, 332, 333, 680, 683, 684, 691, 794, 809, 810, 811, 818, 835, 848, 853, 884, 893, 903, 915, 1006, 1064, 1111, 1116, 1126, 1162, 1176, 1177, 1184, 1187, 1194, 1199, 1208, 1222, 1223, 1229, 1250, 1258, 1280, 1284, 1287, 1289, 1292, 1309, 1332, 1333, 1334, 1350, 1351, 1352, 1366, 1404, 1412, 1413, 1414, 1419, 1425, 1435, 1447, 1470, 1518, 1520, 1590, 1599, 1600, 1603, 1606, 1608, 1609, 1632, 1635, 1644, 1682, 1685, 1744, 1750, 1801, 1805, 1840, 1841, 1854, 1857, 1859, 1860, 1862, 1864, 1866, 1867, 1868, 1870, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1883, 1884, 1885, 1886, 1889, 1891, 1893, 1894, 1896, 1897, 1898, 1901, 1902, 1903, 1905, 1910, 1914, 1919, 1921, 1922, 1923, 1925], "grad": [1, 2, 6, 21, 24, 38, 44, 61, 64, 65, 68, 148, 332, 454, 483, 490, 491, 498, 499, 575, 874, 883, 887, 888, 894, 895, 897, 902, 903, 907, 908, 1006, 1064, 1116, 1117, 1119, 1123, 1127, 1128, 1162, 1170, 1187, 1259, 1419, 1599, 1644, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1750, 1782, 1840, 1847, 1855, 1857, 1858, 1873, 1874, 1875, 1879, 1884, 1885, 1886, 1888, 1891, 1893, 1900, 1910, 1911, 1914, 1920], "unscal": 1, "interfer": [1, 16, 1870, 1883, 1898], "learn": [1, 8, 9, 12, 14, 19, 30, 44, 54, 68, 1340, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1379, 1404, 1406, 1427, 1448, 1467, 1468, 1571, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1855, 1864, 1876, 1878, 1889, 1891, 1892, 1898, 1902, 1905, 1910, 1912], "rate": [1, 9, 22, 36, 44, 1358, 1359, 1360, 1364, 1465, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1697, 1855, 1890, 1919], "fp16": [1, 3, 723, 1599, 1905, 1906], "everi": [1, 2, 3, 9, 10, 14, 15, 16, 19, 22, 25, 26, 35, 36, 38, 40, 42, 44, 46, 60, 65, 68, 477, 483, 604, 674, 775, 813, 891, 907, 908, 1043, 1060, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1117, 1140, 1149, 1187, 1218, 1232, 1242, 1245, 1276, 1331, 1357, 1358, 1359, 1360, 1364, 1412, 1419, 1452, 1454, 1458, 1504, 1505, 1506, 1511, 1542, 1543, 1544, 1558, 1575, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1607, 1640, 1643, 1644, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1744, 1805, 1838, 1860, 1866, 1870, 1879, 1880, 1883, 1884, 1885, 1886, 1888, 1892, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1910, 1911, 1912, 1916, 1917, 1919, 1921], "most": [1, 2, 4, 5, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 35, 38, 40, 42, 44, 45, 46, 47, 54, 55, 57, 58, 65, 66, 67, 68, 494, 787, 891, 892, 893, 898, 902, 911, 947, 1029, 1043, 1060, 1117, 1162, 1172, 1185, 1188, 1292, 1327, 1466, 1518, 1568, 1599, 1611, 1669, 1780, 1826, 1854, 1857, 1859, 1860, 1862, 1867, 1872, 1874, 1875, 1880, 1883, 1885, 1893, 1894, 1895, 1901, 1904, 1905, 1911, 1912, 1914, 1917, 1919, 1921], "bf16": [1, 3], "pretrain": [1, 18, 856, 1362, 1363, 1854, 1880, 1898], "cannot": [1, 4, 9, 10, 18, 35, 36, 38, 44, 45, 48, 55, 60, 61, 65, 66, 67, 68, 83, 84, 220, 251, 518, 539, 874, 1081, 1083, 1091, 1092, 1093, 1099, 1116, 1184, 1192, 1309, 1342, 1362, 1471, 1502, 1568, 1599, 1655, 1806, 1854, 1857, 1858, 1859, 1860, 1861, 1862, 1870, 1874, 1875, 1880, 1884, 1885, 1896, 1897, 1898, 1905, 1910, 1912, 1914, 1916, 1917, 1925], "numer": [1, 16, 26, 35, 44, 61, 66, 681, 787, 902, 903, 931, 1191, 1202, 1203, 1218, 1222, 1223, 1227, 1232, 1240, 1241, 1244, 1247, 1250, 1252, 1274, 1276, 1336, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1452, 1455, 1458, 1509, 1530, 1537, 1568, 1574, 1576, 1607, 1640, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1708, 1740, 1805, 1855, 1860, 1861, 1865, 1868, 1883, 1885, 1886, 1898, 1905, 1915, 1920, 1926], "max": [1, 15, 17, 20, 35, 38, 46, 48, 54, 55, 57, 60, 68, 114, 183, 184, 185, 186, 297, 689, 690, 691, 752, 764, 765, 774, 776, 777, 796, 813, 814, 815, 816, 819, 868, 918, 935, 942, 943, 947, 1039, 1074, 1075, 1147, 1198, 1218, 1232, 1239, 1241, 1243, 1244, 1256, 1328, 1329, 1330, 1341, 1342, 1353, 1354, 1363, 1367, 1368, 1373, 1378, 1379, 1387, 1388, 1405, 1407, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1422, 1423, 1424, 1427, 1438, 1439, 1446, 1467, 1468, 1470, 1480, 1481, 1482, 1492, 1500, 1510, 1513, 1514, 1529, 1533, 1542, 1543, 1544, 1554, 1558, 1562, 1564, 1569, 1587, 1603, 1635, 1661, 1662, 1663, 1673, 1678, 1679, 1688, 1709, 1710, 1782, 1811, 1812, 1840, 1856, 1857, 1858, 1867, 1870, 1875, 1881, 1883, 1887, 1900, 1905, 1908, 1926], "65504": 1, "overflow": [1, 1041, 1042, 1286, 1314, 1317, 1537, 1574, 1575, 1702, 1733, 1781, 1784, 1804, 1830, 1832, 1883, 1894, 1915], "case": [1, 2, 4, 5, 9, 10, 14, 15, 16, 19, 21, 25, 26, 27, 29, 30, 35, 36, 38, 40, 42, 43, 44, 46, 47, 48, 55, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 148, 152, 194, 349, 491, 494, 674, 754, 778, 785, 788, 814, 815, 817, 820, 852, 859, 887, 895, 897, 901, 916, 918, 954, 960, 985, 1007, 1008, 1027, 1028, 1029, 1060, 1081, 1083, 1091, 1092, 1093, 1108, 1118, 1122, 1127, 1146, 1172, 1185, 1188, 1196, 1199, 1200, 1202, 1216, 1218, 1222, 1223, 1227, 1232, 1233, 1234, 1236, 1242, 1245, 1250, 1252, 1256, 1258, 1259, 1264, 1267, 1276, 1287, 1309, 1327, 1332, 1333, 1334, 1335, 1336, 1347, 1348, 1349, 1351, 1352, 1353, 1355, 1358, 1359, 1360, 1361, 1363, 1364, 1366, 1375, 1376, 1377, 1378, 1379, 1380, 1386, 1387, 1388, 1405, 1410, 1412, 1413, 1414, 1425, 1426, 1427, 1437, 1450, 1456, 1461, 1466, 1468, 1470, 1483, 1501, 1510, 1518, 1522, 1523, 1553, 1555, 1562, 1599, 1601, 1602, 1606, 1608, 1611, 1612, 1645, 1646, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1686, 1724, 1727, 1740, 1742, 1756, 1759, 1805, 1806, 1836, 1840, 1850, 1854, 1860, 1865, 1872, 1873, 1874, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1891, 1893, 1894, 1896, 1898, 1901, 1902, 1903, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1925, 1926], "decreas": [1, 44, 1017, 1232, 1358, 1359, 1360, 1364, 1432, 1633, 1634, 1673, 1680, 1688, 1866, 1868, 1895, 1914, 1917], "bring": [1, 22, 61, 68, 1081, 1483, 1518, 1903], "number": [1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 18, 22, 26, 29, 35, 36, 38, 42, 43, 44, 46, 53, 54, 55, 58, 60, 61, 63, 66, 68, 86, 152, 171, 216, 230, 251, 310, 349, 374, 395, 399, 431, 442, 467, 469, 470, 477, 488, 492, 494, 508, 510, 512, 537, 539, 540, 552, 577, 578, 579, 581, 582, 583, 602, 611, 679, 680, 681, 682, 683, 684, 685, 692, 752, 754, 762, 763, 766, 767, 768, 775, 813, 859, 871, 884, 902, 915, 917, 918, 927, 929, 933, 941, 942, 946, 954, 958, 959, 968, 974, 983, 992, 993, 1004, 1006, 1007, 1008, 1017, 1027, 1028, 1031, 1032, 1052, 1055, 1057, 1060, 1061, 1065, 1073, 1103, 1105, 1108, 1113, 1115, 1129, 1131, 1137, 1138, 1139, 1143, 1147, 1148, 1149, 1161, 1163, 1184, 1185, 1187, 1200, 1207, 1210, 1211, 1218, 1232, 1241, 1250, 1254, 1259, 1264, 1275, 1279, 1287, 1298, 1299, 1303, 1305, 1308, 1309, 1313, 1317, 1320, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1361, 1362, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1385, 1386, 1389, 1390, 1395, 1396, 1397, 1398, 1399, 1400, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1433, 1434, 1436, 1437, 1438, 1439, 1446, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1485, 1486, 1487, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1509, 1510, 1513, 1514, 1519, 1529, 1530, 1532, 1535, 1542, 1543, 1544, 1553, 1555, 1561, 1562, 1568, 1590, 1599, 1607, 1611, 1616, 1617, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1632, 1633, 1634, 1636, 1640, 1645, 1646, 1647, 1649, 1650, 1656, 1664, 1677, 1678, 1679, 1680, 1683, 1684, 1686, 1687, 1688, 1694, 1697, 1701, 1711, 1713, 1714, 1715, 1717, 1718, 1719, 1724, 1726, 1727, 1730, 1731, 1732, 1733, 1741, 1745, 1749, 1751, 1752, 1753, 1754, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1779, 1783, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1797, 1798, 1799, 1800, 1801, 1802, 1806, 1820, 1821, 1822, 1830, 1832, 1837, 1838, 1841, 1842, 1843, 1844, 1845, 1846, 1852, 1855, 1858, 1859, 1860, 1861, 1862, 1867, 1870, 1872, 1875, 1878, 1881, 1883, 1885, 1888, 1891, 1894, 1896, 1898, 1901, 1902, 1903, 1904, 1906, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1926], "expect": [1, 2, 4, 6, 8, 10, 12, 15, 16, 21, 26, 35, 36, 38, 40, 42, 46, 53, 55, 57, 60, 65, 66, 68, 674, 691, 754, 848, 895, 896, 897, 898, 899, 900, 1006, 1081, 1083, 1100, 1101, 1102, 1121, 1122, 1161, 1184, 1187, 1202, 1203, 1231, 1252, 1253, 1287, 1338, 1339, 1355, 1371, 1372, 1373, 1374, 1383, 1384, 1385, 1389, 1390, 1391, 1401, 1402, 1403, 1419, 1425, 1426, 1434, 1436, 1452, 1458, 1462, 1464, 1466, 1471, 1509, 1515, 1529, 1553, 1561, 1562, 1574, 1587, 1588, 1589, 1590, 1599, 1633, 1689, 1745, 1814, 1845, 1854, 1855, 1862, 1880, 1883, 1884, 1887, 1888, 1891, 1898, 1901, 1902, 1905, 1906, 1907, 1914, 1919, 1921], "alwai": [1, 6, 8, 14, 15, 29, 31, 35, 36, 38, 53, 57, 60, 64, 68, 337, 444, 454, 788, 874, 892, 895, 901, 916, 925, 935, 941, 1006, 1017, 1047, 1055, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1091, 1092, 1093, 1094, 1096, 1099, 1103, 1144, 1145, 1187, 1197, 1202, 1217, 1222, 1223, 1224, 1225, 1227, 1228, 1240, 1243, 1244, 1245, 1246, 1250, 1252, 1315, 1335, 1337, 1338, 1339, 1356, 1382, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1419, 1455, 1458, 1590, 1599, 1632, 1728, 1729, 1755, 1801, 1805, 1837, 1840, 1860, 1861, 1872, 1875, 1880, 1881, 1882, 1883, 1884, 1885, 1888, 1890, 1891, 1902, 1903, 1909, 1910, 1912, 1914, 1917, 1920, 1921], "our": [1, 4, 8, 9, 14, 15, 16, 18, 19, 20, 25, 26, 38, 51, 54, 55, 56, 58, 64, 65, 66, 68, 891, 1080, 1117, 1335, 1880, 1885, 1888, 1893, 1898, 1901, 1905, 1911, 1914], "NOT": [1, 35, 38, 46, 55, 56, 57, 68, 921, 1269, 1359, 1599, 1600, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629, 1644, 1653, 1655, 1661, 1662, 1675, 1880, 1912, 1914], "make": [1, 2, 3, 4, 5, 6, 9, 14, 15, 16, 18, 20, 21, 23, 25, 26, 29, 30, 35, 36, 38, 40, 41, 43, 44, 46, 47, 52, 55, 56, 57, 58, 64, 65, 68, 137, 220, 491, 773, 779, 855, 856, 887, 938, 939, 940, 963, 964, 966, 1048, 1064, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1100, 1101, 1102, 1162, 1187, 1191, 1196, 1197, 1216, 1217, 1229, 1230, 1231, 1259, 1335, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1380, 1419, 1429, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1518, 1520, 1529, 1568, 1587, 1599, 1606, 1622, 1639, 1644, 1682, 1745, 1778, 1787, 1788, 1789, 1791, 1792, 1823, 1840, 1854, 1857, 1859, 1860, 1864, 1870, 1872, 1873, 1875, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1893, 1895, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1910, 1911, 1912, 1914, 1917, 1919, 1923, 1925], "guarante": [1, 2, 6, 10, 14, 35, 38, 40, 42, 44, 55, 57, 65, 67, 68, 870, 1187, 1196, 1356, 1419, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1778, 1840, 1880, 1882, 1883, 1894, 1895, 1902, 1904, 1906, 1910, 1912], "encount": [1, 6, 12, 16, 19, 21, 26, 38, 65, 67, 68, 1599, 1857, 1860, 1862, 1882, 1894, 1902, 1905], "nan": [1, 2, 44, 423, 424, 678, 680, 683, 684, 685, 688, 691, 692, 875, 879, 915, 931, 1106, 1107, 1108, 1147, 1176, 1177, 1179, 1180, 1226, 1233, 1246, 1249, 1262, 1267, 1285, 1286, 1290, 1313, 1314, 1315, 1316, 1317, 1518, 1603, 1698, 1735, 1740, 1794, 1828, 1858, 1867, 1879, 1880, 1886, 1894, 1915, 1921], "verifi": [1, 18, 24, 38, 68, 902, 1043, 1656, 1657, 1675, 1826, 1854, 1857, 1869, 1885, 1888, 1898, 1903], "compat": [1, 2, 29, 35, 40, 44, 46, 60, 64, 65, 68, 492, 493, 597, 611, 674, 809, 810, 811, 884, 928, 952, 953, 1187, 1192, 1204, 1217, 1228, 1241, 1244, 1419, 1425, 1463, 1464, 1465, 1466, 1529, 1653, 1655, 1727, 1854, 1855, 1859, 1860, 1866, 1872, 1873, 1879, 1885, 1896, 1902, 1904, 1905, 1908, 1910, 1916], "init_scal": 1, "65536": 1, "0": [1, 2, 4, 12, 13, 14, 16, 18, 19, 20, 25, 27, 29, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 53, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 86, 152, 154, 171, 182, 189, 206, 222, 223, 224, 225, 226, 251, 257, 260, 286, 295, 297, 308, 310, 312, 314, 318, 349, 398, 399, 423, 424, 441, 444, 445, 450, 477, 479, 483, 491, 502, 503, 508, 510, 512, 515, 532, 537, 538, 541, 550, 552, 554, 572, 574, 575, 577, 578, 579, 581, 582, 583, 589, 590, 591, 592, 599, 601, 602, 611, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 706, 707, 708, 709, 710, 711, 712, 713, 717, 718, 719, 720, 721, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 745, 746, 747, 749, 750, 751, 752, 754, 762, 763, 764, 766, 767, 768, 769, 772, 774, 776, 777, 779, 788, 790, 793, 796, 811, 814, 815, 816, 819, 848, 850, 859, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 892, 895, 896, 897, 899, 902, 903, 905, 907, 908, 911, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 931, 934, 935, 936, 937, 938, 939, 940, 941, 942, 945, 950, 951, 954, 955, 956, 957, 958, 959, 960, 966, 975, 977, 1003, 1004, 1030, 1034, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1058, 1060, 1062, 1063, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1116, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1140, 1144, 1146, 1147, 1148, 1149, 1150, 1153, 1157, 1161, 1164, 1172, 1183, 1184, 1185, 1187, 1191, 1193, 1194, 1198, 1206, 1207, 1208, 1209, 1210, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1248, 1253, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1276, 1280, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1304, 1307, 1308, 1309, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1323, 1325, 1326, 1327, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1407, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1450, 1452, 1453, 1454, 1456, 1458, 1461, 1462, 1464, 1466, 1467, 1468, 1470, 1471, 1474, 1475, 1476, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1518, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1533, 1534, 1536, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1553, 1554, 1555, 1556, 1557, 1558, 1561, 1562, 1564, 1568, 1569, 1572, 1574, 1577, 1583, 1584, 1585, 1586, 1587, 1590, 1599, 1603, 1606, 1607, 1611, 1616, 1617, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1632, 1633, 1635, 1636, 1638, 1639, 1640, 1641, 1643, 1645, 1646, 1647, 1651, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1697, 1698, 1700, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731, 1732, 1733, 1735, 1736, 1740, 1742, 1743, 1744, 1747, 1749, 1753, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1778, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1807, 1808, 1814, 1815, 1817, 1818, 1819, 1820, 1821, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1867, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926], "growth_factor": 1, "backoff_factor": 1, "5": [1, 2, 11, 13, 16, 25, 26, 27, 29, 32, 33, 35, 36, 38, 44, 53, 64, 65, 66, 67, 68, 152, 189, 206, 257, 286, 295, 310, 312, 314, 318, 398, 399, 441, 467, 494, 508, 510, 512, 531, 538, 552, 554, 578, 579, 580, 581, 582, 601, 679, 680, 684, 691, 728, 733, 734, 735, 736, 737, 739, 740, 754, 756, 767, 768, 855, 856, 859, 874, 880, 881, 882, 895, 898, 900, 915, 918, 925, 926, 927, 931, 933, 937, 940, 941, 942, 945, 954, 958, 1039, 1041, 1043, 1050, 1052, 1054, 1055, 1058, 1059, 1060, 1063, 1076, 1078, 1080, 1081, 1087, 1088, 1091, 1096, 1099, 1100, 1103, 1106, 1108, 1109, 1110, 1118, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1130, 1140, 1146, 1148, 1150, 1152, 1153, 1164, 1172, 1176, 1193, 1197, 1198, 1207, 1208, 1209, 1212, 1215, 1216, 1233, 1236, 1239, 1242, 1243, 1244, 1245, 1250, 1251, 1254, 1256, 1257, 1259, 1260, 1261, 1262, 1263, 1269, 1273, 1280, 1281, 1287, 1288, 1292, 1316, 1318, 1319, 1321, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1336, 1337, 1338, 1339, 1343, 1344, 1345, 1346, 1348, 1349, 1351, 1352, 1353, 1355, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1373, 1374, 1375, 1380, 1382, 1383, 1384, 1385, 1386, 1389, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1407, 1410, 1415, 1416, 1419, 1426, 1429, 1433, 1434, 1440, 1441, 1442, 1443, 1444, 1447, 1450, 1456, 1458, 1462, 1464, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1484, 1485, 1493, 1494, 1496, 1497, 1501, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1513, 1514, 1516, 1518, 1521, 1529, 1553, 1555, 1561, 1577, 1587, 1588, 1589, 1599, 1611, 1621, 1624, 1626, 1627, 1629, 1634, 1635, 1637, 1639, 1645, 1646, 1647, 1649, 1650, 1653, 1656, 1671, 1673, 1675, 1677, 1683, 1687, 1693, 1695, 1697, 1698, 1700, 1701, 1704, 1705, 1708, 1709, 1710, 1711, 1715, 1720, 1721, 1724, 1725, 1731, 1732, 1733, 1740, 1753, 1760, 1762, 1763, 1764, 1765, 1768, 1769, 1778, 1783, 1785, 1786, 1787, 1788, 1790, 1793, 1801, 1804, 1805, 1806, 1807, 1808, 1815, 1817, 1819, 1820, 1821, 1823, 1824, 1826, 1835, 1836, 1840, 1841, 1847, 1848, 1849, 1852, 1857, 1858, 1859, 1860, 1861, 1867, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1885, 1887, 1888, 1891, 1892, 1896, 1897, 1898, 1901, 1903, 1905, 1910, 1914, 1915, 1917, 1919, 1920, 1921], "growth_interv": 1, "2000": [1, 38, 42, 1078, 1080, 1087, 1096, 1109, 1264, 1471, 1680, 1708, 1758, 1759, 1819], "get_backoff_factor": 1, "backoff": [1, 1910], "get_growth_factor": 1, "growth": [1, 9], "get_growth_interv": 1, "int": [1, 3, 4, 14, 19, 25, 32, 35, 36, 38, 40, 42, 43, 44, 46, 49, 52, 53, 55, 56, 58, 60, 68, 86, 214, 216, 230, 239, 251, 310, 312, 314, 318, 433, 440, 441, 443, 445, 453, 468, 472, 488, 492, 494, 508, 510, 512, 515, 531, 537, 539, 540, 552, 554, 560, 577, 578, 579, 581, 582, 601, 611, 674, 687, 689, 690, 691, 693, 749, 750, 769, 771, 773, 774, 779, 780, 781, 813, 868, 869, 870, 872, 886, 893, 906, 916, 918, 925, 932, 934, 941, 946, 958, 959, 960, 962, 964, 966, 968, 969, 972, 973, 974, 975, 976, 977, 979, 980, 981, 982, 983, 988, 989, 990, 992, 994, 998, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1029, 1030, 1031, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1047, 1048, 1049, 1050, 1051, 1052, 1058, 1061, 1063, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1113, 1114, 1118, 1119, 1120, 1121, 1122, 1128, 1129, 1135, 1137, 1138, 1140, 1144, 1145, 1147, 1148, 1149, 1150, 1161, 1163, 1184, 1185, 1187, 1188, 1190, 1193, 1198, 1206, 1208, 1218, 1219, 1239, 1240, 1243, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1266, 1273, 1274, 1279, 1284, 1286, 1287, 1289, 1292, 1294, 1295, 1296, 1299, 1309, 1314, 1315, 1316, 1317, 1318, 1319, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1356, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1372, 1374, 1382, 1383, 1384, 1387, 1388, 1390, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1404, 1406, 1407, 1409, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1421, 1424, 1426, 1427, 1430, 1431, 1432, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1452, 1454, 1455, 1458, 1462, 1464, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1500, 1501, 1502, 1509, 1510, 1517, 1520, 1529, 1537, 1553, 1554, 1555, 1559, 1560, 1574, 1575, 1583, 1587, 1588, 1589, 1599, 1607, 1616, 1617, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1633, 1635, 1640, 1643, 1646, 1647, 1649, 1650, 1653, 1655, 1656, 1657, 1664, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1695, 1702, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1715, 1716, 1717, 1719, 1725, 1726, 1727, 1730, 1731, 1732, 1733, 1736, 1741, 1742, 1743, 1747, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1774, 1778, 1781, 1784, 1785, 1786, 1793, 1796, 1798, 1799, 1800, 1801, 1804, 1806, 1810, 1816, 1820, 1821, 1823, 1825, 1826, 1829, 1830, 1831, 1832, 1835, 1836, 1837, 1838, 1839, 1841, 1842, 1843, 1847, 1848, 1852, 1856, 1857, 1858, 1859, 1860, 1861, 1870, 1872, 1873, 1875, 1878, 1883, 1886, 1898, 1900, 1903, 1904, 1905, 1909, 1910, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1926], "interv": [1, 44, 57, 859, 955, 1110, 1300, 1301, 1689, 1713, 1714, 1762, 1870, 1883, 1904], "get_scal": [1, 1879], "sync": [1, 15, 38, 42, 60, 67, 68, 1599, 1883, 1884, 1903], "is_en": [1, 1780, 1787, 1788, 1789, 1790, 1791, 1792], "indic": [1, 2, 3, 4, 19, 26, 35, 36, 38, 39, 43, 44, 55, 81, 189, 206, 219, 310, 312, 314, 315, 316, 318, 467, 508, 510, 512, 538, 566, 567, 577, 608, 689, 690, 729, 739, 740, 868, 869, 870, 871, 872, 892, 902, 903, 931, 938, 939, 961, 963, 964, 966, 1000, 1039, 1040, 1063, 1118, 1119, 1121, 1122, 1123, 1127, 1128, 1129, 1140, 1161, 1185, 1187, 1192, 1200, 1203, 1204, 1208, 1217, 1228, 1230, 1241, 1244, 1258, 1266, 1274, 1276, 1278, 1284, 1287, 1289, 1292, 1309, 1315, 1319, 1327, 1328, 1329, 1330, 1355, 1362, 1363, 1367, 1368, 1413, 1414, 1415, 1416, 1417, 1422, 1424, 1425, 1480, 1481, 1482, 1501, 1509, 1510, 1513, 1514, 1530, 1545, 1546, 1547, 1555, 1568, 1583, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1625, 1626, 1645, 1646, 1684, 1686, 1705, 1740, 1778, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1815, 1816, 1820, 1823, 1829, 1830, 1831, 1832, 1837, 1838, 1840, 1847, 1850, 1856, 1857, 1858, 1860, 1864, 1873, 1874, 1885, 1898, 1900, 1910, 1914, 1918, 1919, 1921], "load_state_dict": [1, 36, 40, 42, 60, 1187, 1258, 1419, 1590, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1854, 1855, 1891, 1896, 1905], "state_dict": [1, 36, 40, 42, 60, 830, 831, 1187, 1419, 1590, 1625, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1854, 1869, 1884, 1891, 1893, 1896, 1898, 1905, 1923], "load": [1, 2, 17, 18, 26, 27, 29, 30, 36, 40, 42, 60, 831, 856, 910, 947, 962, 1191, 1197, 1202, 1363, 1590, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1736, 1855, 1857, 1868, 1869, 1874, 1880, 1883, 1890, 1891, 1895, 1897, 1898, 1919], "scaler": [1, 1879, 1883], "unmodifi": [1, 23, 38], "iter": [1, 2, 3, 4, 8, 16, 19, 25, 26, 36, 38, 39, 40, 42, 44, 56, 58, 60, 68, 973, 974, 975, 976, 977, 1006, 1009, 1011, 1032, 1187, 1259, 1419, 1420, 1421, 1429, 1430, 1599, 1600, 1603, 1604, 1605, 1607, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1640, 1642, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1678, 1679, 1680, 1683, 1694, 1764, 1806, 1858, 1860, 1861, 1872, 1874, 1879, 1880, 1881, 1883, 1884, 1885, 1888, 1891, 1901, 1904, 1909, 1919, 1925], "set_backoff_factor": 1, "new_factor": 1, "new_scal": 1, "set_growth_factor": 1, "set_growth_interv": 1, "new_interv": 1, "It": [1, 2, 4, 5, 6, 8, 9, 12, 14, 15, 16, 18, 19, 23, 25, 26, 31, 32, 35, 36, 38, 39, 40, 43, 44, 46, 48, 52, 53, 54, 55, 56, 57, 60, 62, 64, 65, 66, 67, 68, 86, 148, 194, 469, 470, 508, 510, 512, 538, 551, 883, 884, 885, 886, 887, 891, 914, 952, 953, 977, 982, 988, 989, 1007, 1008, 1027, 1028, 1036, 1083, 1112, 1117, 1120, 1128, 1129, 1148, 1184, 1187, 1188, 1193, 1197, 1219, 1223, 1227, 1230, 1232, 1234, 1235, 1240, 1244, 1245, 1247, 1248, 1250, 1252, 1255, 1256, 1258, 1259, 1267, 1327, 1336, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1366, 1413, 1414, 1415, 1416, 1417, 1419, 1426, 1447, 1450, 1470, 1472, 1520, 1530, 1574, 1592, 1593, 1594, 1597, 1598, 1599, 1607, 1608, 1611, 1632, 1635, 1636, 1644, 1653, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1692, 1711, 1724, 1740, 1750, 1756, 1763, 1784, 1836, 1847, 1854, 1859, 1860, 1870, 1872, 1874, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1905, 1910, 1911, 1912, 1915, 1916, 1918, 1922], "five": [1, 1860, 1896], "entri": [1, 4, 12, 14, 19, 38, 39, 42, 44, 53, 55, 56, 312, 729, 852, 853, 911, 1003, 1004, 1050, 1101, 1102, 1161, 1187, 1207, 1362, 1363, 1419, 1425, 1509, 1510, 1595, 1596, 1617, 1618, 1626, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1784, 1857, 1860, 1861, 1867, 1875, 1880, 1884, 1885, 1888, 1891, 1908, 1914, 1919, 1923], "_growth_track": 1, "recent": [1, 2, 8, 9, 22, 26, 58, 67, 1162, 1172, 1780, 1859, 1860, 1875, 1885, 1894, 1895, 1914, 1921], "consecut": [1, 38, 604, 1634, 1676, 1826, 1837, 1838, 1874, 1898], "unskip": 1, "empti": [1, 4, 14, 15, 38, 40, 46, 53, 60, 65, 68, 318, 508, 510, 531, 539, 811, 917, 918, 928, 934, 1060, 1062, 1185, 1188, 1212, 1232, 1233, 1238, 1245, 1268, 1269, 1270, 1271, 1278, 1336, 1355, 1363, 1426, 1491, 1510, 1556, 1639, 1651, 1655, 1790, 1805, 1819, 1853, 1856, 1857, 1858, 1859, 1860, 1862, 1868, 1873, 1874, 1875, 1878, 1881, 1883, 1885, 1898, 1900, 1902, 1914, 1915, 1922], "wish": [1, 1123, 1796, 1879, 1883, 1885, 1886], "checkpoint": [1, 42, 56, 58, 60, 910, 1258, 1599, 1854, 1855, 1869, 1887, 1903, 1912], "carri": [1, 64, 333, 791, 832, 833, 851, 852, 1881, 1905], "out": [1, 2, 3, 4, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 25, 27, 30, 32, 35, 38, 40, 43, 44, 52, 53, 56, 61, 64, 68, 309, 311, 313, 315, 396, 398, 444, 491, 507, 509, 511, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 750, 754, 758, 766, 767, 768, 773, 775, 779, 791, 830, 832, 833, 851, 852, 859, 860, 861, 862, 863, 864, 865, 866, 871, 875, 876, 877, 878, 879, 888, 889, 890, 893, 902, 915, 917, 918, 919, 920, 921, 922, 923, 924, 927, 931, 934, 936, 937, 938, 939, 940, 942, 943, 945, 947, 949, 950, 951, 953, 954, 956, 957, 960, 965, 973, 975, 977, 1004, 1005, 1017, 1018, 1030, 1034, 1039, 1040, 1041, 1042, 1044, 1047, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1117, 1118, 1120, 1121, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1141, 1142, 1143, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1181, 1182, 1187, 1198, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1304, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1319, 1320, 1321, 1322, 1323, 1324, 1328, 1329, 1330, 1332, 1333, 1334, 1340, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1357, 1358, 1359, 1360, 1362, 1364, 1367, 1368, 1371, 1372, 1387, 1388, 1389, 1404, 1406, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1431, 1432, 1434, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1462, 1463, 1464, 1465, 1466, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1489, 1493, 1494, 1495, 1496, 1497, 1498, 1504, 1505, 1506, 1511, 1514, 1518, 1529, 1535, 1554, 1556, 1587, 1599, 1616, 1617, 1618, 1619, 1645, 1646, 1647, 1648, 1650, 1651, 1675, 1692, 1693, 1697, 1698, 1699, 1701, 1704, 1705, 1711, 1712, 1713, 1715, 1717, 1719, 1720, 1723, 1724, 1725, 1729, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1756, 1757, 1758, 1770, 1771, 1772, 1773, 1778, 1782, 1783, 1794, 1795, 1797, 1798, 1799, 1800, 1802, 1803, 1805, 1816, 1817, 1818, 1821, 1823, 1825, 1828, 1829, 1831, 1833, 1834, 1840, 1842, 1843, 1844, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1858, 1860, 1867, 1870, 1872, 1874, 1875, 1880, 1881, 1883, 1884, 1885, 1886, 1891, 1893, 1898, 1901, 1902, 1905, 1906, 1908, 1910, 1911, 1912, 1915, 1917, 1919, 1920, 1924, 1925], "follow": [1, 2, 3, 4, 6, 8, 10, 12, 13, 14, 15, 16, 19, 20, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 46, 52, 53, 54, 55, 56, 60, 62, 64, 65, 68, 80, 81, 483, 611, 674, 754, 773, 779, 786, 787, 788, 794, 808, 809, 810, 811, 813, 814, 815, 816, 818, 819, 848, 855, 856, 883, 884, 885, 889, 907, 908, 931, 936, 1003, 1017, 1060, 1078, 1080, 1104, 1113, 1126, 1140, 1187, 1188, 1196, 1200, 1207, 1218, 1229, 1239, 1242, 1243, 1256, 1259, 1278, 1281, 1327, 1336, 1342, 1355, 1363, 1366, 1371, 1389, 1419, 1434, 1450, 1466, 1470, 1537, 1568, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1606, 1646, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1683, 1686, 1694, 1705, 1733, 1740, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1780, 1781, 1782, 1783, 1790, 1801, 1826, 1834, 1840, 1854, 1857, 1858, 1859, 1860, 1861, 1862, 1866, 1867, 1868, 1869, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1905, 1906, 1908, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1920, 1921, 1925, 1926], "unscale_": [1, 1879], "unless": [1, 2, 5, 8, 14, 36, 38, 57, 60, 61, 68, 148, 494, 834, 852, 891, 918, 1116, 1187, 1230, 1235, 1248, 1258, 1287, 1373, 1419, 1466, 1594, 1622, 1641, 1669, 1675, 1740, 1840, 1860, 1866, 1880, 1883, 1895, 1898, 1902, 1906], "earlier": [1, 2, 7, 1805, 1880, 1883, 1887, 1890, 1896, 1898, 1904], "part": [1, 2, 4, 5, 6, 7, 8, 10, 12, 15, 16, 25, 26, 29, 30, 32, 36, 38, 40, 44, 55, 56, 60, 64, 65, 68, 80, 81, 835, 901, 949, 1060, 1177, 1179, 1180, 1183, 1187, 1197, 1199, 1202, 1203, 1217, 1223, 1225, 1234, 1241, 1244, 1419, 1458, 1568, 1599, 1609, 1678, 1705, 1786, 1826, 1829, 1830, 1831, 1832, 1854, 1855, 1857, 1859, 1860, 1868, 1869, 1879, 1880, 1883, 1885, 1887, 1888, 1891, 1896, 1898, 1902, 1903, 1905, 1910, 1911, 1912, 1914, 1919, 1921], "check": [1, 5, 13, 14, 15, 16, 19, 20, 25, 26, 27, 29, 35, 38, 39, 44, 46, 55, 60, 219, 337, 494, 688, 855, 891, 893, 894, 902, 903, 963, 964, 966, 970, 999, 1017, 1174, 1184, 1187, 1202, 1203, 1216, 1217, 1222, 1223, 1225, 1228, 1230, 1235, 1241, 1244, 1248, 1250, 1251, 1276, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1419, 1590, 1599, 1608, 1611, 1624, 1634, 1656, 1657, 1780, 1787, 1788, 1789, 1790, 1791, 1792, 1854, 1855, 1859, 1860, 1861, 1873, 1874, 1879, 1883, 1885, 1886, 1887, 1890, 1891, 1892, 1895, 1898, 1901, 1902, 1903, 1904, 1910, 1914, 1919, 1921, 1925], "inf": [1, 26, 44, 60, 678, 680, 683, 684, 685, 879, 915, 931, 1176, 1177, 1179, 1181, 1182, 1218, 1233, 1239, 1243, 1246, 1256, 1267, 1313, 1409, 1452, 1462, 1568, 1603, 1617, 1626, 1646, 1733, 1740, 1879, 1880, 1886, 1894, 1915, 1921], "found": [1, 8, 12, 15, 18, 22, 25, 30, 32, 55, 68, 81, 931, 960, 1039, 1040, 1187, 1191, 1208, 1284, 1287, 1289, 1292, 1315, 1331, 1341, 1364, 1419, 1446, 1740, 1854, 1857, 1860, 1875, 1879, 1885, 1888, 1891, 1893, 1898, 1902, 1904, 1905, 1910, 1919, 1925], "otherwis": [1, 2, 4, 6, 8, 10, 27, 29, 35, 38, 39, 45, 48, 60, 61, 65, 68, 86, 207, 318, 325, 329, 333, 335, 339, 340, 490, 499, 554, 574, 575, 577, 597, 611, 674, 680, 681, 682, 683, 684, 687, 689, 690, 691, 693, 729, 754, 762, 763, 778, 788, 811, 814, 815, 855, 856, 859, 886, 889, 897, 902, 915, 931, 1001, 1060, 1066, 1099, 1111, 1178, 1184, 1187, 1190, 1193, 1199, 1208, 1232, 1247, 1256, 1258, 1259, 1274, 1279, 1284, 1286, 1287, 1289, 1291, 1292, 1314, 1317, 1333, 1334, 1353, 1355, 1358, 1359, 1360, 1364, 1371, 1375, 1376, 1377, 1378, 1380, 1389, 1405, 1419, 1423, 1424, 1425, 1426, 1427, 1429, 1434, 1435, 1437, 1450, 1456, 1458, 1461, 1462, 1464, 1466, 1467, 1468, 1486, 1487, 1520, 1522, 1523, 1527, 1562, 1572, 1599, 1606, 1611, 1632, 1636, 1644, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1669, 1671, 1672, 1673, 1674, 1692, 1694, 1702, 1704, 1711, 1720, 1727, 1740, 1748, 1756, 1799, 1800, 1801, 1804, 1836, 1837, 1838, 1842, 1843, 1850, 1854, 1857, 1859, 1860, 1867, 1868, 1873, 1879, 1885, 1886, 1893, 1898, 1906, 1908, 1909, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1921, 1925], "avoid": [1, 6, 9, 10, 14, 15, 16, 19, 35, 38, 44, 53, 56, 60, 68, 86, 189, 206, 444, 775, 859, 887, 928, 1017, 1187, 1232, 1258, 1354, 1385, 1386, 1410, 1419, 1428, 1433, 1470, 1500, 1530, 1554, 1561, 1599, 1607, 1675, 1726, 1755, 1801, 1819, 1837, 1855, 1870, 1874, 1880, 1882, 1883, 1887, 1888, 1891, 1903, 1910, 1911, 1918, 1919, 1920], "corrupt": [1, 38, 55, 1356, 1883, 1893], "param": [1, 2, 42, 44, 47, 55, 60, 62, 64, 68, 758, 789, 1116, 1126, 1187, 1205, 1419, 1425, 1429, 1430, 1598, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1670, 1671, 1672, 1673, 1674, 1675, 1688, 1729, 1858, 1868, 1878, 1879, 1883, 1884, 1901, 1925], "closur": [1, 42, 1664, 1669, 1675], "divid": [1, 6, 36, 38, 42, 235, 577, 578, 579, 977, 1055, 1058, 1078, 1096, 1105, 1149, 1150, 1197, 1335, 1336, 1342, 1343, 1353, 1379, 1380, 1386, 1410, 1411, 1422, 1423, 1424, 1433, 1450, 1451, 1467, 1468, 1490, 1491, 1501, 1502, 1530, 1553, 1561, 1599, 1805, 1848, 1858, 1900], "modifi": [1, 2, 13, 14, 15, 16, 21, 23, 26, 32, 35, 36, 38, 39, 40, 42, 60, 68, 257, 483, 785, 832, 833, 834, 891, 893, 894, 907, 908, 952, 953, 1140, 1184, 1187, 1190, 1191, 1206, 1362, 1419, 1462, 1464, 1466, 1509, 1510, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1603, 1604, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1669, 1671, 1672, 1673, 1674, 1675, 1678, 1686, 1768, 1857, 1860, 1873, 1879, 1883, 1885, 1886, 1891, 1896, 1902, 1903, 1905, 1910, 1915, 1918, 1920, 1924], "inspect": [1, 2, 16, 18, 38, 60, 68, 910, 1187, 1198, 1879, 1885, 1890, 1902, 1906, 1917, 1925], "between": [1, 2, 3, 4, 8, 16, 17, 19, 26, 31, 32, 36, 38, 44, 45, 55, 56, 57, 60, 67, 68, 194, 508, 577, 578, 579, 581, 582, 601, 611, 683, 684, 685, 689, 690, 754, 766, 767, 768, 796, 851, 859, 878, 887, 889, 896, 898, 899, 900, 902, 903, 935, 947, 959, 963, 970, 972, 1019, 1023, 1037, 1038, 1043, 1060, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1111, 1140, 1147, 1184, 1187, 1198, 1222, 1223, 1245, 1250, 1316, 1335, 1336, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1355, 1358, 1359, 1360, 1364, 1366, 1371, 1380, 1386, 1395, 1396, 1397, 1398, 1399, 1400, 1410, 1412, 1413, 1414, 1419, 1422, 1423, 1424, 1428, 1447, 1450, 1451, 1452, 1467, 1468, 1470, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1517, 1542, 1543, 1544, 1558, 1574, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1653, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1686, 1688, 1697, 1705, 1709, 1710, 1715, 1716, 1720, 1745, 1798, 1799, 1800, 1801, 1805, 1825, 1826, 1842, 1843, 1857, 1859, 1860, 1861, 1867, 1872, 1875, 1879, 1880, 1882, 1883, 1884, 1888, 1889, 1891, 1893, 1895, 1896, 1898, 1901, 1903, 1905, 1906, 1910, 1912, 1914, 1916, 1919, 1923], "simpl": [1, 15, 18, 19, 30, 32, 36, 48, 55, 64, 66, 68, 959, 1017, 1118, 1126, 1127, 1128, 1187, 1191, 1198, 1337, 1338, 1339, 1362, 1392, 1393, 1394, 1419, 1458, 1509, 1654, 1761, 1847, 1854, 1857, 1861, 1875, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1898, 1902, 1910, 1914], "clip": [1, 60, 955, 1603, 1604, 1858, 1886, 1898, 1900], "util": [1, 8, 14, 16, 20, 26, 31, 56, 60, 61, 67, 68, 726, 729, 732, 733, 734, 739, 740, 750, 754, 758, 784, 792, 977, 1111, 1187, 1371, 1389, 1419, 1434, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1608, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1632, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1680, 1686, 1809, 1810, 1811, 1812, 1813, 1855, 1860, 1870, 1879, 1881, 1882, 1883, 1885, 1887, 1888, 1890, 1891, 1898, 1901, 1902, 1903], "clip_grad_norm_": [1, 60, 1879], "max_norm": [1, 60, 739, 740, 1362, 1363, 1509, 1510, 1603, 1858, 1879], "own": [1, 8, 10, 15, 18, 38, 39, 42, 44, 47, 55, 57, 60, 68, 674, 995, 1094, 1113, 1149, 1187, 1258, 1347, 1348, 1349, 1350, 1351, 1352, 1419, 1608, 1611, 1860, 1876, 1879, 1883, 1902, 1905, 1906, 1910, 1912, 1914], "onc": [1, 2, 8, 10, 13, 16, 19, 22, 30, 35, 36, 38, 39, 40, 42, 44, 45, 47, 48, 55, 60, 63, 65, 67, 68, 80, 891, 892, 893, 895, 897, 1060, 1187, 1191, 1258, 1356, 1419, 1599, 1609, 1611, 1684, 1688, 1704, 1751, 1755, 1857, 1860, 1868, 1870, 1872, 1879, 1880, 1882, 1883, 1885, 1888, 1890, 1891, 1901, 1902, 1919], "assign": [1, 2, 8, 10, 11, 35, 38, 46, 55, 56, 65, 68, 674, 832, 833, 834, 1185, 1188, 1327, 1355, 1419, 1426, 1429, 1430, 1600, 1611, 1857, 1861, 1879, 1885, 1886, 1887, 1898, 1905, 1911, 1912, 1918, 1919], "been": [1, 2, 6, 10, 12, 16, 21, 26, 27, 35, 36, 38, 39, 42, 43, 44, 46, 48, 55, 58, 60, 63, 64, 68, 674, 754, 891, 964, 966, 971, 999, 1002, 1059, 1064, 1117, 1190, 1191, 1196, 1201, 1258, 1371, 1378, 1389, 1434, 1483, 1518, 1599, 1608, 1613, 1617, 1619, 1639, 1640, 1653, 1658, 1678, 1679, 1680, 1686, 1688, 1704, 1801, 1849, 1866, 1870, 1872, 1873, 1874, 1879, 1880, 1882, 1883, 1888, 1889, 1891, 1893, 1895, 1897, 1898, 1901, 1902, 1910, 1912, 1914, 1919], "twice": [1, 15, 67, 611, 896, 1124, 1879, 1880, 1887, 1888], "trigger": [1, 8, 10, 13, 16, 21, 22, 26, 38, 55, 60, 67, 219, 1034, 1753, 1879, 1883, 1884, 1890, 1896, 1910], "runtimeerror": [1, 2, 29, 38, 42, 65, 68, 86, 577, 691, 891, 928, 1108, 1162, 1172, 1187, 1216, 1217, 1218, 1226, 1227, 1228, 1230, 1234, 1240, 1247, 1252, 1253, 1279, 1309, 1419, 1655, 1742, 1780, 1840, 1857, 1859, 1860, 1873, 1875, 1879, 1881, 1887, 1895, 1897, 1898, 1905, 1909, 1914, 1917], "spars": [1, 2, 14, 27, 188, 189, 206, 216, 219, 320, 325, 339, 340, 431, 537, 538, 539, 540, 575, 577, 578, 579, 580, 581, 582, 608, 683, 739, 740, 902, 903, 1034, 1129, 1151, 1172, 1259, 1281, 1291, 1319, 1362, 1363, 1452, 1509, 1510, 1535, 1675, 1694, 1742, 1776, 1780, 1787, 1788, 1789, 1790, 1791, 1792, 1797, 1806, 1825, 1840, 1855, 1858, 1862, 1867, 1878, 1894, 1895, 1900, 1907, 1917, 1918, 1921], "place": [1, 4, 8, 14, 15, 19, 22, 24, 25, 27, 35, 36, 38, 40, 45, 46, 60, 63, 64, 68, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 119, 121, 123, 125, 128, 129, 131, 139, 141, 144, 145, 147, 150, 156, 158, 160, 162, 164, 166, 175, 184, 192, 196, 199, 201, 211, 213, 219, 220, 229, 233, 235, 241, 244, 246, 248, 250, 251, 254, 257, 259, 266, 268, 270, 274, 276, 280, 282, 289, 291, 293, 301, 303, 305, 307, 309, 311, 313, 315, 353, 355, 357, 359, 361, 363, 365, 368, 370, 372, 373, 380, 382, 384, 386, 388, 392, 396, 398, 416, 419, 422, 424, 435, 437, 439, 447, 452, 462, 465, 481, 483, 485, 487, 491, 494, 503, 506, 507, 509, 511, 517, 521, 523, 526, 528, 530, 543, 545, 547, 556, 558, 565, 569, 571, 587, 590, 592, 594, 596, 597, 606, 616, 752, 787, 791, 808, 832, 833, 851, 852, 891, 893, 907, 908, 929, 973, 974, 976, 977, 997, 1060, 1111, 1116, 1117, 1125, 1187, 1231, 1249, 1309, 1331, 1341, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1376, 1377, 1378, 1405, 1419, 1436, 1437, 1438, 1439, 1446, 1461, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1522, 1525, 1534, 1565, 1567, 1582, 1586, 1590, 1595, 1596, 1599, 1603, 1604, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1641, 1675, 1731, 1733, 1737, 1738, 1739, 1785, 1821, 1855, 1857, 1859, 1860, 1867, 1874, 1879, 1883, 1885, 1890, 1901, 1902, 1903, 1910, 1911, 1916, 1918, 1920], "replac": [1, 2, 12, 14, 18, 25, 29, 35, 36, 38, 40, 54, 56, 60, 62, 63, 64, 65, 66, 68, 80, 117, 417, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 741, 808, 833, 852, 938, 1006, 1060, 1116, 1117, 1192, 1194, 1204, 1276, 1277, 1309, 1313, 1450, 1461, 1590, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1641, 1643, 1704, 1801, 1805, 1828, 1857, 1858, 1860, 1868, 1883, 1886, 1888, 1890, 1893, 1897, 1898, 1900, 1902, 1905, 1921], "were": [1, 2, 3, 4, 15, 16, 21, 25, 26, 32, 38, 46, 55, 58, 60, 65, 67, 68, 148, 318, 332, 467, 848, 883, 885, 887, 901, 1006, 1117, 1128, 1194, 1258, 1483, 1599, 1603, 1608, 1618, 1635, 1671, 1740, 1744, 1815, 1822, 1847, 1859, 1867, 1879, 1883, 1885, 1896, 1898, 1902], "reduc": [1, 3, 4, 14, 16, 17, 21, 26, 29, 36, 38, 39, 40, 42, 60, 318, 508, 511, 512, 680, 687, 689, 690, 691, 693, 813, 814, 815, 816, 819, 821, 868, 869, 947, 974, 985, 1017, 1160, 1239, 1243, 1245, 1250, 1256, 1274, 1284, 1286, 1287, 1289, 1292, 1314, 1315, 1316, 1317, 1335, 1336, 1337, 1338, 1339, 1353, 1355, 1363, 1379, 1385, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1458, 1467, 1490, 1491, 1499, 1501, 1510, 1526, 1529, 1530, 1531, 1541, 1549, 1550, 1551, 1552, 1553, 1554, 1561, 1572, 1573, 1584, 1587, 1599, 1607, 1644, 1664, 1688, 1702, 1704, 1705, 1739, 1782, 1786, 1799, 1800, 1804, 1805, 1826, 1840, 1842, 1843, 1856, 1858, 1872, 1873, 1880, 1882, 1884, 1885, 1891, 1895, 1896, 1897, 1900, 1901, 1902, 1903, 1905, 1914, 1925], "occur": [1, 14, 16, 18, 21, 26, 27, 35, 38, 48, 49, 55, 60, 65, 80, 194, 312, 1020, 1060, 1184, 1190, 1200, 1230, 1342, 1458, 1502, 1646, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1859, 1870, 1874, 1879, 1880, 1883, 1887, 1894, 1898, 1904, 1910, 1912, 1918, 1921, 1925], "increas": [1, 2, 4, 8, 16, 36, 38, 44, 52, 60, 674, 848, 892, 931, 985, 1017, 1060, 1148, 1149, 1327, 1336, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1431, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1559, 1560, 1568, 1673, 1679, 1680, 1684, 1686, 1688, 1740, 1748, 1826, 1841, 1858, 1866, 1882, 1883, 1889, 1906, 1914], "fill": [1, 15, 19, 38, 152, 171, 255, 256, 257, 283, 314, 318, 374, 397, 441, 442, 443, 445, 450, 477, 602, 617, 918, 1048, 1061, 1063, 1114, 1115, 1217, 1228, 1230, 1363, 1462, 1510, 1556, 1650, 1651, 1713, 1714, 1715, 1716, 1717, 1718, 1805, 1852, 1853, 1856, 1858, 1864, 1874, 1875, 1878, 1883, 1885, 1896, 1900, 1914, 1921], "floattensor": [1, 38, 318, 483, 680, 681, 682, 683, 684, 729, 902, 903, 915, 1134, 1362, 1363, 1422, 1462, 1746, 1917, 1920], "end": [1, 8, 9, 10, 15, 26, 35, 36, 38, 44, 48, 52, 63, 68, 358, 359, 532, 754, 778, 791, 814, 815, 859, 916, 954, 961, 1021, 1050, 1060, 1099, 1113, 1140, 1146, 1147, 1184, 1187, 1207, 1212, 1242, 1252, 1254, 1257, 1259, 1273, 1318, 1319, 1334, 1335, 1336, 1353, 1355, 1361, 1365, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1386, 1389, 1390, 1405, 1410, 1413, 1414, 1419, 1421, 1426, 1427, 1430, 1434, 1437, 1447, 1450, 1456, 1461, 1468, 1501, 1510, 1522, 1523, 1599, 1606, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1678, 1683, 1720, 1753, 1756, 1759, 1774, 1826, 1837, 1838, 1850, 1856, 1857, 1858, 1859, 1860, 1872, 1879, 1880, 1883, 1884, 1885, 1887, 1888, 1894, 1897, 1898, 1901, 1904, 1905, 1908, 1910, 1915], "reason": [1, 4, 9, 10, 12, 14, 15, 16, 19, 26, 35, 38, 40, 60, 65, 674, 835, 1081, 1083, 1187, 1202, 1203, 1222, 1223, 1250, 1287, 1335, 1359, 1419, 1520, 1568, 1595, 1596, 1611, 1736, 1857, 1859, 1860, 1866, 1880, 1884, 1886, 1894, 1896, 1898, 1910, 1917, 1925], "synchron": [1, 4, 5, 16, 31, 32, 36, 40, 42, 46, 55, 60, 67, 871, 963, 964, 966, 974, 994, 1034, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1234, 1235, 1241, 1244, 1247, 1248, 1250, 1251, 1259, 1458, 1599, 1645, 1647, 1726, 1855, 1882, 1883, 1884, 1889, 1893, 1903, 1910], "fall": [1, 3, 8, 29, 35, 789, 902, 1149, 1200, 1258, 1380, 1450, 1527, 1572, 1603, 1604, 1854, 1898, 1905], "below": [1, 2, 6, 10, 12, 14, 16, 18, 19, 20, 21, 26, 29, 35, 36, 38, 44, 46, 47, 52, 55, 56, 57, 58, 68, 674, 728, 742, 751, 789, 808, 1003, 1047, 1048, 1049, 1050, 1051, 1060, 1088, 1090, 1094, 1132, 1140, 1187, 1203, 1243, 1244, 1249, 1256, 1288, 1350, 1351, 1352, 1371, 1373, 1380, 1389, 1391, 1415, 1416, 1417, 1419, 1434, 1450, 1471, 1501, 1527, 1572, 1599, 1611, 1645, 1675, 1745, 1785, 1816, 1826, 1829, 1830, 1831, 1832, 1857, 1859, 1860, 1862, 1866, 1867, 1872, 1873, 1879, 1880, 1883, 1884, 1885, 1888, 1889, 1891, 1893, 1895, 1896, 1898, 1901, 1902, 1903, 1905, 1907, 1910, 1911, 1912, 1915, 1918, 1921], "someth": [1, 4, 8, 12, 14, 16, 18, 19, 25, 26, 62, 68, 895, 897, 1060, 1187, 1202, 1419, 1862, 1870, 1872, 1873, 1880, 1889, 1897, 1898, 1910, 1925], "wrong": [1, 18, 38, 68, 891, 1185, 1188, 1884, 1893, 1897, 1898, 1901], "incompat": [1, 10, 29, 65, 928, 1184, 1881, 1902], "due": [1, 4, 5, 6, 8, 16, 19, 21, 26, 36, 38, 44, 54, 60, 65, 68, 482, 874, 895, 896, 901, 955, 1199, 1222, 1223, 1250, 1276, 1359, 1373, 1462, 1471, 1529, 1568, 1639, 1653, 1675, 1806, 1857, 1875, 1883, 1884, 1888, 1889, 1895, 1898, 1905, 1906, 1910, 1912], "float64": [1, 27, 237, 442, 445, 574, 874, 949, 1103, 1112, 1134, 1169, 1187, 1216, 1222, 1223, 1225, 1227, 1243, 1419, 1568, 1661, 1662, 1698, 1706, 1745, 1746, 1749, 1787, 1788, 1789, 1790, 1791, 1792, 1819, 1845, 1850, 1891, 1894, 1914, 1916, 1917, 1920, 1921, 1926], "variant": [1, 6, 21, 25, 36, 852, 1217, 1228, 1241, 1244, 1316, 1319, 1661, 1662, 1663, 1675, 1828, 1855, 1856, 1890, 1908, 1920], "suppli": [1, 6, 8, 16, 26, 29, 30, 38, 995, 1425, 1657, 1860, 1883, 1914], "won": [1, 9, 15, 16, 19, 26, 36, 40, 55, 63, 454, 1187, 1198, 1419, 1554, 1593, 1594, 1854, 1880, 1885, 1910, 1922], "go": [1, 2, 8, 12, 14, 15, 16, 19, 20, 30, 35, 38, 52, 57, 64, 68, 494, 495, 554, 892, 907, 1259, 1332, 1333, 1334, 1412, 1413, 1414, 1859, 1860, 1867, 1872, 1873, 1874, 1880, 1882, 1883, 1885, 1886, 1890, 1891, 1893, 1897, 1898, 1902, 1917, 1919], "addmm": [1, 25, 104, 1797, 1856, 1858, 1873, 1894, 1900, 1914], "c": [1, 2, 4, 9, 10, 14, 15, 16, 18, 19, 23, 25, 26, 29, 35, 38, 44, 53, 63, 68, 257, 332, 494, 515, 611, 679, 815, 871, 874, 893, 926, 937, 940, 955, 997, 1003, 1037, 1052, 1055, 1060, 1106, 1107, 1108, 1117, 1118, 1122, 1127, 1130, 1140, 1187, 1197, 1209, 1216, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1232, 1233, 1236, 1238, 1242, 1243, 1245, 1247, 1249, 1250, 1308, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1355, 1358, 1359, 1360, 1364, 1366, 1367, 1368, 1374, 1382, 1383, 1384, 1387, 1388, 1390, 1391, 1401, 1402, 1403, 1407, 1412, 1413, 1414, 1415, 1416, 1417, 1422, 1423, 1424, 1426, 1431, 1432, 1440, 1441, 1442, 1443, 1444, 1445, 1453, 1458, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1483, 1491, 1501, 1502, 1514, 1518, 1553, 1559, 1560, 1568, 1606, 1634, 1636, 1637, 1638, 1645, 1646, 1692, 1708, 1724, 1762, 1782, 1796, 1801, 1821, 1838, 1855, 1856, 1857, 1858, 1859, 1860, 1864, 1873, 1874, 1882, 1883, 1884, 1886, 1888, 1890, 1897, 1899, 1902, 1911, 1912, 1914, 1915, 1918, 1919, 1925], "addmm_": [1, 1858, 1873, 1914], "d": [1, 2, 15, 16, 18, 26, 27, 35, 36, 38, 43, 44, 61, 68, 310, 318, 332, 467, 508, 510, 512, 538, 577, 611, 680, 684, 859, 874, 893, 915, 916, 918, 925, 926, 927, 931, 937, 1047, 1049, 1059, 1060, 1073, 1077, 1078, 1079, 1080, 1085, 1086, 1089, 1090, 1095, 1096, 1097, 1100, 1101, 1102, 1128, 1129, 1144, 1145, 1152, 1161, 1184, 1188, 1192, 1229, 1230, 1280, 1291, 1311, 1326, 1334, 1335, 1339, 1349, 1353, 1354, 1358, 1359, 1360, 1362, 1364, 1366, 1371, 1373, 1384, 1389, 1391, 1403, 1414, 1428, 1434, 1458, 1467, 1468, 1470, 1483, 1518, 1529, 1535, 1562, 1586, 1587, 1607, 1640, 1645, 1646, 1673, 1693, 1711, 1720, 1732, 1740, 1745, 1796, 1801, 1814, 1815, 1821, 1824, 1829, 1830, 1831, 1832, 1841, 1847, 1849, 1854, 1858, 1867, 1873, 1874, 1875, 1878, 1880, 1883, 1885, 1886, 1888, 1889, 1896, 1898, 1910, 1911, 1914, 1915, 1919, 1920], "best": [1, 2, 8, 16, 17, 23, 30, 32, 35, 38, 44, 56, 60, 63, 855, 856, 911, 934, 947, 1202, 1203, 1232, 1425, 1675, 1688, 1855, 1857, 1859, 1872, 1878, 1879, 1880, 1885, 1887, 1902, 1910, 1914], "stabil": [1, 16, 26, 1218, 1274, 1336, 1337, 1338, 1339, 1373, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1455, 1458, 1515, 1576, 1607, 1640, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1708, 1886], "respect": [1, 2, 6, 9, 15, 38, 39, 42, 44, 53, 55, 60, 66, 67, 68, 194, 207, 483, 574, 597, 683, 684, 685, 754, 789, 813, 835, 879, 885, 887, 901, 903, 907, 908, 942, 959, 1048, 1050, 1051, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1127, 1140, 1187, 1218, 1222, 1223, 1232, 1242, 1245, 1247, 1250, 1259, 1291, 1313, 1335, 1342, 1350, 1351, 1352, 1356, 1371, 1373, 1389, 1419, 1420, 1434, 1464, 1466, 1467, 1468, 1469, 1471, 1509, 1518, 1595, 1596, 1613, 1617, 1619, 1641, 1674, 1688, 1779, 1782, 1805, 1821, 1874, 1879, 1880, 1883, 1885, 1888, 1891, 1892, 1903, 1908, 1914, 1915, 1916, 1921], "describ": [1, 6, 8, 9, 10, 21, 35, 36, 40, 42, 43, 46, 47, 53, 55, 60, 68, 508, 786, 787, 788, 809, 810, 811, 835, 853, 932, 986, 1003, 1020, 1060, 1140, 1207, 1247, 1327, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1357, 1358, 1359, 1360, 1361, 1364, 1366, 1367, 1368, 1374, 1377, 1380, 1382, 1383, 1384, 1386, 1391, 1410, 1412, 1413, 1414, 1425, 1426, 1433, 1437, 1450, 1458, 1466, 1467, 1468, 1470, 1501, 1513, 1514, 1523, 1556, 1686, 1826, 1855, 1857, 1859, 1860, 1878, 1879, 1880, 1883, 1884, 1887, 1888, 1890, 1891, 1896, 1898, 1902, 1904, 1905, 1908, 1911, 1912, 1921], "expos": [1, 2, 9, 20, 38, 42, 60, 67, 68, 789, 1113, 1880, 1883, 1890, 1902, 1905, 1925], "namespac": [1, 68, 1034, 1857, 1861, 1864, 1885, 1891, 1898, 1903, 1908, 1925], "defin": [1, 2, 3, 4, 6, 10, 12, 15, 19, 22, 29, 30, 35, 36, 38, 39, 40, 43, 44, 46, 47, 53, 55, 56, 60, 65, 68, 431, 441, 443, 445, 512, 560, 786, 791, 793, 832, 853, 854, 855, 856, 883, 884, 885, 886, 1017, 1043, 1060, 1061, 1080, 1108, 1114, 1130, 1132, 1146, 1148, 1149, 1176, 1187, 1209, 1216, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1232, 1233, 1236, 1238, 1239, 1243, 1244, 1245, 1247, 1249, 1250, 1256, 1292, 1356, 1361, 1375, 1376, 1377, 1378, 1385, 1387, 1388, 1419, 1425, 1437, 1452, 1454, 1459, 1461, 1483, 1518, 1568, 1574, 1590, 1599, 1617, 1619, 1626, 1627, 1647, 1650, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1680, 1683, 1686, 1704, 1713, 1715, 1717, 1724, 1753, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1782, 1784, 1826, 1829, 1830, 1831, 1832, 1850, 1852, 1854, 1857, 1860, 1862, 1864, 1872, 1873, 1875, 1880, 1883, 1884, 1888, 1889, 1891, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1908, 1910, 1914, 1915, 1920, 1921, 1922, 1925], "unlist": 1, "downstream": [1, 4, 16, 19, 26, 1870], "stabl": [1, 2, 3, 38, 44, 55, 56, 724, 725, 726, 727, 739, 740, 750, 755, 756, 757, 758, 759, 870, 1060, 1222, 1223, 1227, 1232, 1240, 1244, 1247, 1250, 1252, 1259, 1336, 1778, 1855, 1858, 1878, 1881, 1895, 1910], "believ": [1, 9, 24], "unstabl": [1, 44, 1222, 1223, 1250, 1267, 1276, 1537, 1805, 1915], "__matmul__": 1, "addbmm": [1, 98, 915, 1858, 1894, 1900], "addmv": [1, 106, 1858, 1873, 1900], "addr": [1, 38, 108, 1858, 1900], "baddbmm": [1, 150, 1858, 1894, 1900], "bmm": [1, 1840, 1856, 1858, 1873, 1875, 1894, 1895, 1900, 1914], "chain_matmul": [1, 1858, 1900], "multi_dot": [1, 937], "conv1d": [1, 702, 706, 709, 719, 735, 1350, 1358, 1395, 1840, 1858, 1900, 1905, 1907], "conv2d": [1, 703, 707, 710, 712, 720, 736, 786, 808, 1187, 1196, 1198, 1202, 1203, 1351, 1359, 1396, 1419, 1420, 1426, 1447, 1470, 1626, 1840, 1857, 1858, 1868, 1898, 1900, 1905, 1907, 1908, 1919, 1924], "conv3d": [1, 704, 708, 711, 713, 721, 737, 1352, 1360, 1397, 1840, 1858, 1900, 1905, 1907], "conv_transpose1d": [1, 1858, 1900, 1907], "conv_transpose2d": [1, 1858, 1900, 1907], "conv_transpose3d": [1, 1858, 1900, 1907], "grucel": [1, 1894, 1905, 1907, 1908], "lstmcell": [1, 1894, 1905, 1907, 1908], "matmul": [1, 3, 17, 27, 927, 947, 1127, 1291, 1470, 1694, 1704, 1748, 1805, 1858, 1873, 1875, 1883, 1894, 1900, 1907, 1914], "mv": [1, 27, 1198, 1840, 1858, 1873, 1900, 1914], "prelu": [1, 1420, 1858, 1900, 1907], "rnncell": [1, 1905, 1907, 1908], "__pow__": 1, "__rdiv__": 1, "__rpow__": 1, "__rtruediv__": 1, "aco": [1, 92, 621, 622, 860, 1856, 1858, 1873, 1900, 1921], "asin": [1, 139, 623, 624, 862, 1856, 1858, 1873, 1900, 1914], "cosh": [1, 201, 631, 632, 678, 1856, 1858, 1873, 1900], "cosine_embedding_loss": [1, 1858, 1900], "cdist": [1, 1883, 1900], "cosine_similar": [1, 1468, 1858, 1900], "cross_entropi": [1, 1858], "cumprod": [1, 211, 1858, 1873, 1900], "cumsum": [1, 213, 1043, 1840, 1858, 1873, 1900], "dist": [1, 36, 38, 39, 42, 44, 56, 60, 938, 939, 1216, 1222, 1223, 1224, 1226, 1227, 1228, 1232, 1233, 1244, 1245, 1248, 1250, 1251, 1274, 1277, 1428, 1458, 1599, 1606, 1805, 1858, 1884, 1900, 1910, 1912], "erfinv": [1, 248, 1858, 1873, 1900, 1914, 1915], "exp": [1, 2, 44, 250, 637, 638, 764, 897, 898, 900, 1103, 1246, 1266, 1274, 1336, 1341, 1355, 1361, 1385, 1408, 1409, 1423, 1433, 1446, 1449, 1451, 1452, 1454, 1455, 1459, 1492, 1538, 1561, 1569, 1570, 1574, 1576, 1579, 1606, 1701, 1762, 1763, 1784, 1801, 1856, 1858, 1873, 1880, 1898, 1900, 1915], "expm1": [1, 254, 639, 640, 1856, 1858, 1873, 1900, 1914, 1915], "group_norm": [1, 1858, 1900, 1907], "hinge_embedding_loss": [1, 1858, 1900], "kl_div": [1, 1858, 1900], "l1_loss": [1, 1858, 1900], "layer_norm": [1, 1391, 1858, 1900, 1907], "log": [1, 13, 16, 19, 22, 26, 29, 35, 36, 44, 46, 48, 49, 52, 53, 57, 373, 374, 647, 654, 674, 1070, 1262, 1264, 1266, 1267, 1274, 1301, 1327, 1335, 1336, 1355, 1373, 1385, 1408, 1409, 1423, 1426, 1433, 1451, 1452, 1455, 1515, 1520, 1530, 1537, 1538, 1553, 1561, 1574, 1576, 1599, 1855, 1856, 1858, 1866, 1870, 1873, 1880, 1883, 1885, 1898, 1900, 1904, 1915, 1919, 1922, 1923, 1924], "log_softmax": [1, 1342, 1385, 1502, 1553, 1574, 1858, 1874, 1900, 1915], "log10": [1, 368, 648, 649, 1856, 1858, 1873, 1900], "log1p": [1, 370, 650, 651, 1856, 1858, 1873, 1900, 1914, 1915], "log2": [1, 372, 652, 653, 1856, 1858, 1873, 1900, 1915], "margin_ranking_loss": [1, 1858, 1900], "mse_loss": [1, 64, 1116, 1858, 1900], "multilabel_margin_loss": [1, 1858, 1900], "multi_margin_loss": [1, 1858, 1900], "nll_loss": [1, 1858, 1900], "norm": [1, 44, 60, 62, 68, 696, 697, 698, 699, 700, 701, 935, 1054, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1218, 1222, 1231, 1232, 1239, 1244, 1256, 1362, 1363, 1410, 1428, 1463, 1464, 1465, 1466, 1467, 1509, 1510, 1554, 1558, 1603, 1607, 1616, 1617, 1622, 1625, 1626, 1640, 1643, 1663, 1725, 1858, 1862, 1879, 1880, 1888, 1891, 1894, 1900], "normal": [1, 2, 36, 42, 55, 60, 68, 80, 333, 348, 374, 450, 550, 959, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1148, 1184, 1187, 1192, 1222, 1264, 1331, 1337, 1338, 1339, 1358, 1359, 1360, 1364, 1374, 1382, 1383, 1384, 1391, 1401, 1402, 1403, 1407, 1446, 1458, 1462, 1463, 1464, 1465, 1466, 1488, 1518, 1519, 1528, 1532, 1536, 1562, 1603, 1604, 1607, 1622, 1630, 1631, 1640, 1643, 1672, 1688, 1708, 1717, 1718, 1725, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1801, 1840, 1854, 1855, 1856, 1857, 1858, 1862, 1873, 1875, 1878, 1880, 1883, 1886, 1898, 1900, 1902, 1907, 1910, 1915, 1919, 1921, 1922, 1926], "pdist": [1, 1428, 1858, 1900], "poisson_nll_loss": [1, 1858, 1900], "pow": [1, 2, 465, 491, 895, 896, 899, 1103, 1856, 1858, 1860, 1873, 1879, 1880, 1900, 1914, 1920], "prod": [1, 52, 318, 512, 1077, 1079, 1082, 1083, 1085, 1086, 1089, 1090, 1092, 1093, 1095, 1097, 1252, 1253, 1362, 1366, 1470, 1840, 1856, 1858, 1873, 1900, 1914], "reciproc": [1, 481, 657, 658, 1735, 1856, 1858, 1873, 1900], "rsqrt": [1, 506, 1856, 1858, 1873, 1900], "sinh": [1, 530, 665, 666, 876, 1856, 1858, 1873, 1900, 1914], "smooth_l1_loss": [1, 1858, 1900], "soft_margin_loss": [1, 1858, 1900], "softmax": [1, 44, 790, 1327, 1355, 1385, 1409, 1453, 1501, 1520, 1530, 1537, 1568, 1575, 1781, 1858, 1873, 1874, 1875, 1883, 1900, 1907, 1914, 1915], "softmin": [1, 1858], "softplu": [1, 44, 1418, 1548, 1858, 1900], "sum": [1, 2, 12, 13, 16, 19, 24, 26, 35, 38, 39, 42, 44, 46, 60, 65, 66, 68, 491, 512, 560, 740, 887, 895, 896, 897, 898, 899, 900, 901, 907, 908, 912, 959, 975, 976, 977, 1042, 1043, 1060, 1120, 1121, 1122, 1127, 1164, 1218, 1239, 1243, 1256, 1264, 1265, 1266, 1274, 1309, 1317, 1335, 1336, 1342, 1352, 1353, 1355, 1356, 1363, 1366, 1373, 1379, 1380, 1385, 1386, 1387, 1388, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1452, 1454, 1467, 1468, 1470, 1490, 1491, 1501, 1502, 1510, 1515, 1520, 1530, 1539, 1540, 1553, 1561, 1574, 1575, 1599, 1622, 1627, 1628, 1646, 1680, 1726, 1764, 1782, 1784, 1824, 1826, 1840, 1855, 1856, 1858, 1860, 1864, 1870, 1873, 1879, 1880, 1883, 1884, 1885, 1886, 1891, 1894, 1898, 1900, 1910, 1911, 1914, 1915, 1920], "renorm": [1, 487, 1362, 1363, 1509, 1510, 1858, 1900], "tan": [1, 569, 669, 670, 877, 1856, 1858, 1873, 1900, 1914, 1919], "triplet_margin_loss": [1, 1858, 1900], "addcdiv": [1, 100, 1858, 1900], "addcmul": [1, 102, 1858, 1900], "atan2": [1, 144, 865, 1856, 1858, 1873, 1900], "bilinear": [1, 773, 779, 780, 1060, 1471, 1472, 1518, 1529, 1587, 1588, 1840, 1858, 1900], "cross": [1, 8, 9, 19, 40, 44, 46, 1335, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1490, 1491, 1501, 1858, 1883, 1897, 1900], "dot": [1, 3, 29, 65, 66, 611, 896, 898, 899, 900, 1039, 1040, 1041, 1042, 1118, 1128, 1164, 1207, 1254, 1255, 1281, 1335, 1336, 1355, 1366, 1379, 1386, 1410, 1425, 1426, 1468, 1568, 1801, 1844, 1845, 1846, 1847, 1858, 1873, 1888, 1900, 1902], "grid_sampl": [1, 1483, 1840, 1858, 1900], "index_put": [1, 1840, 1858, 1900], "scatter_add": [1, 1856, 1858, 1900], "tensordot": [1, 1164, 1252, 1253, 1862, 1883, 1900], "binari": [1, 3, 29, 30, 36, 44, 46, 48, 53, 55, 68, 152, 729, 917, 1280, 1335, 1336, 1425, 1490, 1491, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1654, 1656, 1855, 1861, 1873, 1874, 1890, 1898, 1902, 1919], "nativ": [1, 3, 27, 36, 43, 60, 68, 986, 1117, 1197, 1603, 1604, 1748, 1857, 1860, 1872, 1883, 1885, 1901, 1902, 1910], "intervent": [1, 9, 1910], "mixtur": [1, 44, 1355, 1501], "bceloss": [1, 1336, 1490], "aren": [1, 9, 65, 68, 1117, 1873, 1880, 1911, 1925], "mean": [1, 3, 4, 6, 8, 9, 14, 15, 16, 19, 21, 22, 30, 32, 35, 36, 38, 40, 42, 44, 55, 57, 60, 61, 63, 66, 67, 68, 251, 318, 332, 374, 450, 490, 512, 752, 754, 775, 788, 790, 855, 856, 915, 928, 959, 1116, 1118, 1197, 1287, 1304, 1309, 1314, 1318, 1319, 1325, 1326, 1327, 1329, 1330, 1331, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1353, 1355, 1357, 1361, 1363, 1364, 1365, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1405, 1406, 1408, 1409, 1410, 1411, 1418, 1422, 1423, 1424, 1426, 1427, 1433, 1434, 1437, 1438, 1439, 1446, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1467, 1468, 1469, 1489, 1490, 1491, 1499, 1501, 1502, 1510, 1511, 1515, 1526, 1527, 1530, 1531, 1535, 1541, 1549, 1550, 1551, 1552, 1553, 1561, 1572, 1573, 1584, 1585, 1599, 1647, 1675, 1708, 1717, 1718, 1762, 1782, 1799, 1800, 1806, 1840, 1842, 1843, 1854, 1856, 1857, 1858, 1859, 1870, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1883, 1884, 1885, 1887, 1888, 1891, 1897, 1898, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1914], "doesn": [1, 2, 3, 8, 9, 14, 15, 26, 27, 35, 38, 40, 63, 65, 67, 68, 817, 820, 874, 891, 901, 964, 985, 1117, 1128, 1194, 1200, 1226, 1250, 1258, 1267, 1347, 1348, 1349, 1356, 1385, 1452, 1493, 1494, 1495, 1530, 1574, 1599, 1600, 1622, 1664, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1779, 1782, 1847, 1856, 1857, 1860, 1861, 1873, 1875, 1880, 1881, 1883, 1885, 1886, 1890, 1893, 1897, 1901, 1903, 1911, 1914], "help": [1, 2, 5, 8, 9, 15, 18, 19, 26, 27, 29, 35, 36, 38, 52, 55, 60, 65, 68, 902, 903, 911, 985, 1017, 1117, 1118, 1128, 1187, 1188, 1206, 1288, 1300, 1301, 1358, 1359, 1360, 1364, 1419, 1606, 1755, 1847, 1854, 1860, 1867, 1873, 1874, 1879, 1880, 1881, 1883, 1884, 1886, 1889, 1891, 1894, 1898, 1899, 1902, 1910, 1911, 1914, 1922], "revers": [1, 44, 66, 68, 508, 728, 787, 895, 897, 1078, 1080, 1100, 1120, 1122, 1127, 1254, 1389, 1432, 1560, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629, 1828, 1841, 1858, 1859, 1860, 1880, 1884, 1886, 1900, 1920], "therefor": [1, 4, 6, 19, 35, 36, 38, 44, 45, 53, 60, 63, 444, 538, 901, 916, 925, 1006, 1094, 1111, 1113, 1116, 1144, 1145, 1199, 1202, 1232, 1245, 1362, 1363, 1470, 1509, 1510, 1518, 1641, 1680, 1860, 1879, 1880, 1883, 1885, 1887, 1890, 1898, 1912], "mani": [1, 4, 8, 12, 14, 15, 16, 18, 19, 21, 25, 26, 27, 29, 35, 36, 38, 44, 55, 60, 64, 65, 68, 86, 399, 674, 883, 885, 895, 897, 1060, 1199, 1342, 1675, 1774, 1822, 1829, 1830, 1831, 1832, 1857, 1859, 1873, 1878, 1880, 1881, 1882, 1883, 1885, 1886, 1890, 1891, 1894, 1898, 1901, 1905, 1912, 1914, 1917, 1919, 1920, 1922], "sigmoid": [1, 44, 68, 521, 661, 662, 754, 789, 1335, 1336, 1362, 1371, 1372, 1389, 1390, 1448, 1490, 1517, 1571, 1856, 1858, 1873, 1874, 1878, 1899, 1900, 1907, 1915], "right": [1, 3, 8, 10, 15, 16, 20, 23, 38, 40, 44, 60, 68, 814, 859, 916, 923, 925, 926, 931, 936, 1054, 1060, 1101, 1104, 1105, 1109, 1140, 1144, 1145, 1149, 1153, 1184, 1206, 1231, 1236, 1247, 1249, 1250, 1258, 1264, 1265, 1309, 1327, 1332, 1333, 1334, 1335, 1336, 1347, 1348, 1349, 1366, 1373, 1386, 1387, 1388, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1422, 1423, 1424, 1428, 1429, 1435, 1467, 1470, 1471, 1472, 1473, 1518, 1538, 1556, 1604, 1611, 1664, 1678, 1679, 1720, 1740, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1801, 1821, 1826, 1828, 1841, 1854, 1858, 1860, 1872, 1873, 1874, 1880, 1885, 1888, 1898, 1901, 1908, 1912, 1915], "entropi": [1, 44, 1335, 1355, 1423, 1490, 1491, 1501, 1915], "combin": [1, 4, 12, 19, 35, 36, 38, 55, 66, 67, 611, 683, 706, 707, 708, 709, 710, 711, 712, 713, 787, 848, 884, 1017, 1089, 1090, 1095, 1097, 1149, 1281, 1291, 1336, 1366, 1380, 1425, 1470, 1512, 1535, 1618, 1857, 1858, 1859, 1879, 1883, 1886, 1898, 1900, 1901, 1903, 1905, 1908, 1910], "bcewithlogitsloss": [1, 1491], "bcewithlogit": 1, "safe": [1, 16, 19, 26, 38, 55, 67, 68, 1007, 1008, 1027, 1028, 1599, 1661, 1662, 1857, 1860, 1879, 1880, 1883, 1886, 1890, 1910], "_convolut": [1, 1900], "avg_pool3d": [1, 1858, 1900, 1907], "grid_sampler_2d": [1, 1856, 1858, 1900], "_grid_sampler_2d_cpu_fallback": [1, 1900], "grid_sampler_3d": [1, 1858, 1900], "polar": [1, 44, 1246, 1858, 1900], "quantil": [1, 1287, 1316, 1858, 1900, 1915], "nanquantil": [1, 1858, 1900], "stft": [1, 916, 925, 1144, 1145, 1184, 1206, 1858, 1900], "view_as_complex": [1, 27, 1858, 1900], "choleski": [1, 3, 44, 939, 940, 1217, 1223, 1259, 1858, 1900], "cholesky_invers": [1, 3, 1858, 1900], "cholesky_solv": [1, 3, 1858, 1900], "invers": [1, 44, 677, 678, 876, 879, 934, 939, 940, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1184, 1227, 1228, 1240, 1244, 1247, 1252, 1253, 1350, 1351, 1352, 1362, 1363, 1366, 1415, 1416, 1417, 1470, 1509, 1510, 1545, 1546, 1547, 1608, 1611, 1635, 1680, 1686, 1836, 1855, 1858, 1860, 1894, 1900, 1915], "lu_solv": [1, 3, 1234, 1858, 1900], "orgqr": [1, 1858, 1900], "ormqr": [1, 1132, 1226, 1858, 1900], "pinvers": [1, 1232, 1858, 1900], "max_pool3d": [1, 1858, 1900, 1907], "max_unpool2d": [1, 1513, 1543, 1858, 1900], "max_unpool3d": [1, 1514, 1544, 1858, 1900], "adaptive_avg_pool3d": [1, 1858, 1885, 1900, 1907], "reflection_pad1d": [1, 1858, 1900], "reflection_pad2d": [1, 1856, 1858, 1900], "replication_pad1d": [1, 1858, 1900], "replication_pad2d": [1, 1856, 1858, 1900], "replication_pad3d": [1, 1856, 1858, 1900], "ctc_loss": [1, 1342, 1858, 1900], "fft_fft": [1, 1858, 1900], "fft_ifft": [1, 1858, 1900], "fft_fft2": [1, 1858, 1900], "fft_ifft2": [1, 1858, 1900], "fft_fftn": [1, 1858, 1900], "fft_ifftn": [1, 1858, 1900], "fft_rfft": [1, 1858, 1900], "fft_irfft": [1, 1858, 1900], "fft_rfft2": [1, 1858, 1900], "fft_irfft2": [1, 1858, 1900], "fft_rfftn": [1, 1858, 1900], "fft_irfftn": [1, 1858, 1900], "fft_hfft": [1, 1858, 1900], "fft_ihfft": [1, 1858, 1900], "linalg_matrix_norm": [1, 1858, 1900], "linalg_cond": [1, 1858, 1900], "linalg_matrix_rank": [1, 1858, 1900], "linalg_solv": [1, 1858, 1900], "linalg_choleski": [1, 1858, 1900], "linalg_svdv": [1, 1858, 1900], "linalg_eigv": [1, 1858, 1900], "linalg_eigvalsh": [1, 1858, 1900], "linalg_inv": [1, 1858, 1900], "linalg_householder_product": [1, 1858, 1900], "linalg_tensorinv": [1, 1858, 1900], "linalg_tensorsolv": [1, 1858, 1900], "fake_quantize_per_tensor_affin": [1, 1858, 1900], "eig": [1, 1223, 1224, 1250, 1894], "geqrf": [1, 1226, 1692, 1858, 1900], "lstsq": [1, 1132, 1218, 1244], "_lu_with_info": [1, 1900], "qr": [1, 3, 1132, 1222, 1223, 1226, 1232, 1250, 1606, 1692, 1858, 1900], "solv": [1, 8, 16, 20, 27, 940, 1132, 1140, 1218, 1227, 1229, 1230, 1233, 1234, 1236, 1240, 1248, 1249, 1253, 1259, 1277, 1828, 1880, 1888, 1894, 1897], "svd": [1, 3, 27, 1222, 1223, 1232, 1244, 1251, 1267, 1611, 1694, 1806, 1856, 1858, 1894, 1900, 1914], "symeig": 1, "triangular_solv": [1, 1858, 1900], "fractional_max_pool2d": [1, 1858, 1900], "fractional_max_pool3d": [1, 1858, 1900], "adaptive_max_pool3d": [1, 1858, 1900], "multilabel_margin_loss_forward": [1, 1900], "linalg_qr": [1, 1858, 1900], "linalg_cholesky_ex": [1, 1858, 1900], "linalg_svd": [1, 1858, 1900], "linalg_eig": [1, 1858, 1900], "linalg_eigh": [1, 1858, 1900], "linalg_lstsq": [1, 1858, 1900], "linalg_inv_ex": [1, 1858, 1900], "cat": [1, 14, 38, 44, 68, 538, 741, 742, 751, 787, 790, 950, 951, 1288, 1438, 1786, 1856, 1857, 1858, 1873, 1898, 1900, 1902, 1905, 1907, 1914, 1923], "stack": [1, 9, 13, 15, 16, 19, 20, 26, 32, 35, 36, 38, 44, 48, 64, 65, 68, 754, 911, 945, 1021, 1022, 1059, 1126, 1128, 1152, 1288, 1342, 1371, 1389, 1390, 1434, 1463, 1465, 1636, 1847, 1849, 1855, 1858, 1875, 1883, 1884, 1887, 1899, 1900, 1902, 1904, 1907, 1914], "index_copi": [1, 1840, 1858, 1900], "implement": [2, 3, 6, 9, 14, 19, 21, 31, 35, 36, 38, 39, 40, 42, 43, 44, 47, 52, 53, 56, 60, 65, 68, 148, 508, 510, 512, 681, 732, 733, 734, 735, 736, 737, 754, 773, 775, 779, 787, 794, 813, 814, 815, 818, 819, 820, 872, 874, 887, 896, 902, 903, 957, 1060, 1103, 1108, 1113, 1120, 1121, 1123, 1124, 1187, 1194, 1196, 1197, 1200, 1242, 1245, 1258, 1259, 1287, 1327, 1342, 1356, 1371, 1387, 1388, 1419, 1425, 1431, 1438, 1455, 1464, 1466, 1518, 1556, 1568, 1576, 1599, 1603, 1604, 1606, 1607, 1611, 1622, 1635, 1639, 1640, 1643, 1654, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1678, 1680, 1686, 1704, 1711, 1724, 1733, 1736, 1773, 1782, 1805, 1806, 1821, 1837, 1840, 1859, 1860, 1861, 1864, 1867, 1872, 1875, 1876, 1878, 1879, 1880, 1882, 1883, 1885, 1886, 1887, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1901, 1902, 1903, 1905, 1908, 1910, 1911, 1914, 1915, 1918, 1920, 1922, 1925], "scalar": [2, 15, 25, 38, 44, 95, 148, 152, 257, 310, 442, 583, 681, 682, 732, 733, 734, 735, 736, 737, 873, 874, 887, 895, 896, 899, 901, 920, 923, 931, 955, 959, 1055, 1060, 1075, 1108, 1114, 1140, 1147, 1164, 1178, 1211, 1212, 1281, 1288, 1316, 1327, 1335, 1336, 1342, 1353, 1355, 1356, 1373, 1379, 1380, 1385, 1386, 1391, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1468, 1520, 1562, 1645, 1650, 1651, 1655, 1688, 1701, 1703, 1705, 1723, 1724, 1740, 1788, 1789, 1790, 1791, 1792, 1819, 1837, 1838, 1850, 1852, 1853, 1856, 1858, 1859, 1860, 1870, 1875, 1878, 1880, 1885, 1888, 1898, 1910, 1914, 1917, 1919, 1921, 1922], "minim": [2, 8, 9, 16, 26, 813, 869, 1289, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1672, 1673, 1674, 1675, 1688, 1854, 1870, 1879, 1883, 1891, 1893, 1896, 1898, 1903, 1905, 1922], "exist": [2, 8, 9, 10, 12, 15, 27, 29, 35, 38, 39, 40, 44, 46, 48, 53, 55, 56, 60, 64, 68, 80, 81, 251, 494, 786, 848, 872, 895, 896, 897, 898, 899, 900, 901, 902, 1001, 1187, 1191, 1202, 1222, 1227, 1233, 1234, 1259, 1316, 1419, 1420, 1429, 1780, 1854, 1856, 1857, 1864, 1867, 1872, 1873, 1875, 1876, 1880, 1881, 1883, 1885, 1886, 1889, 1890, 1891, 1892, 1894, 1898, 1902, 1903, 1904, 1905, 1910, 1912, 1914, 1918, 1920, 1922], "declar": [2, 10, 29, 35, 56, 1859, 1860, 1861, 1885, 1898, 1902, 1903, 1922], "requires_grad": [2, 6, 13, 15, 44, 66, 332, 441, 442, 443, 444, 445, 483, 491, 859, 874, 891, 893, 894, 902, 903, 905, 907, 908, 916, 925, 1006, 1061, 1062, 1063, 1064, 1073, 1078, 1096, 1113, 1114, 1115, 1118, 1128, 1144, 1145, 1162, 1187, 1206, 1257, 1273, 1335, 1336, 1355, 1362, 1363, 1373, 1385, 1386, 1410, 1411, 1419, 1425, 1426, 1433, 1466, 1467, 1490, 1491, 1501, 1553, 1599, 1600, 1601, 1602, 1639, 1644, 1650, 1651, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1750, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1782, 1787, 1788, 1789, 1790, 1791, 1792, 1819, 1840, 1847, 1852, 1853, 1856, 1858, 1862, 1873, 1874, 1875, 1883, 1885, 1886, 1891, 1896, 1898, 1900, 1910, 1911, 1920, 1921, 1922], "doubl": [2, 4, 46, 477, 483, 611, 743, 745, 746, 747, 748, 750, 760, 761, 775, 891, 893, 898, 902, 903, 932, 939, 949, 960, 1006, 1075, 1103, 1140, 1187, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1267, 1268, 1269, 1270, 1271, 1277, 1363, 1419, 1478, 1481, 1510, 1590, 1655, 1692, 1698, 1787, 1788, 1789, 1791, 1792, 1805, 1819, 1828, 1850, 1860, 1873, 1883, 1885, 1886, 1894, 1898, 1902, 1916, 1917, 1920, 1922], "bfloat16": [2, 36, 60, 1169, 1187, 1238, 1255, 1419, 1655, 1661, 1662, 1748, 1873, 1883, 1916, 1917, 1920, 1921, 1922, 1926], "cfloat": [2, 27, 38, 308, 479, 611, 939, 960, 1157, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1277, 1692, 1722, 1805, 1828, 1846, 1917, 1920, 1922], "cdoubl": [2, 27, 939, 960, 1187, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1277, 1419, 1692, 1805, 1828, 1917, 1920, 1922], "beta": [2, 3, 27, 61, 67, 97, 98, 103, 104, 105, 106, 107, 108, 149, 150, 318, 512, 548, 680, 683, 684, 685, 915, 961, 995, 996, 1003, 1004, 1006, 1144, 1206, 1281, 1291, 1337, 1338, 1339, 1374, 1380, 1382, 1383, 1384, 1391, 1407, 1450, 1455, 1458, 1535, 1536, 1568, 1572, 1576, 1661, 1662, 1663, 1665, 1671, 1675, 1708, 1766, 1768, 1779, 1783, 1797, 1855, 1856, 1858, 1868, 1883, 1898, 1905, 1910, 1914, 1917, 1922], "even": [2, 9, 14, 15, 18, 19, 35, 36, 38, 43, 46, 60, 67, 68, 538, 574, 809, 810, 811, 887, 959, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1091, 1092, 1093, 1096, 1127, 1172, 1199, 1216, 1218, 1222, 1223, 1224, 1225, 1239, 1243, 1245, 1246, 1250, 1251, 1256, 1281, 1287, 1356, 1458, 1493, 1494, 1495, 1556, 1599, 1606, 1644, 1646, 1686, 1733, 1744, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1845, 1857, 1860, 1861, 1870, 1875, 1879, 1880, 1883, 1885, 1887, 1889, 1891, 1893, 1894, 1895, 1896, 1901, 1902, 1903, 1912, 1917], "though": [2, 15, 38, 68, 148, 788, 884, 887, 897, 1076, 1077, 1079, 1185, 1188, 1281, 1646, 1857, 1861, 1874, 1875, 1880, 1886, 1893, 1894, 1901, 1905], "signatur": [2, 18, 19, 35, 48, 60, 68, 395, 483, 550, 907, 908, 962, 1187, 1419, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1611, 1632, 1646, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1801, 1883, 1885, 1886, 1898, 1902, 1903, 1910, 1914, 1925], "veri": [2, 5, 8, 9, 15, 16, 18, 19, 20, 25, 26, 32, 35, 36, 38, 64, 66, 68, 957, 1118, 1126, 1128, 1249, 1382, 1383, 1384, 1599, 1600, 1606, 1664, 1686, 1692, 1769, 1773, 1828, 1847, 1859, 1872, 1880, 1885, 1887, 1888, 1889, 1891, 1893, 1894, 1897, 1901, 1902, 1909, 1910, 1911, 1914], "unlik": [2, 4, 8, 14, 44, 60, 66, 488, 1057, 1096, 1099, 1103, 1162, 1222, 1223, 1242, 1245, 1250, 1254, 1284, 1287, 1289, 1391, 1601, 1602, 1723, 1745, 1844, 1859, 1860, 1872, 1875, 1883, 1893, 1895, 1917, 1922], "coverag": [2, 8, 18, 61, 68, 1120, 1121, 1855, 1857, 1862, 1874, 1905, 1914, 1925], "plan": [2, 3, 8, 10, 14, 25, 26, 38, 40, 43, 888, 1599, 1704, 1875, 1880, 1885, 1902, 1914], "consid": [2, 6, 9, 14, 25, 36, 38, 46, 55, 60, 65, 67, 68, 688, 773, 779, 788, 895, 897, 898, 902, 940, 959, 1047, 1048, 1049, 1050, 1051, 1081, 1116, 1176, 1180, 1183, 1187, 1227, 1229, 1230, 1231, 1232, 1240, 1241, 1244, 1249, 1252, 1355, 1366, 1419, 1422, 1470, 1483, 1518, 1529, 1587, 1600, 1606, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1641, 1674, 1742, 1762, 1796, 1829, 1830, 1831, 1832, 1854, 1857, 1860, 1864, 1867, 1879, 1880, 1881, 1885, 1887, 1888, 1891, 1894, 1902, 1904, 1906, 1911, 1912, 1914, 1917, 1920, 1921, 1925], "ad": [2, 4, 10, 12, 15, 16, 18, 21, 25, 29, 35, 36, 38, 42, 44, 52, 60, 63, 65, 66, 67, 68, 219, 220, 310, 316, 467, 510, 674, 680, 681, 682, 683, 684, 685, 729, 888, 889, 890, 895, 896, 897, 898, 902, 914, 915, 1060, 1064, 1120, 1121, 1123, 1162, 1187, 1200, 1264, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1425, 1426, 1428, 1433, 1447, 1458, 1462, 1470, 1496, 1497, 1498, 1515, 1542, 1543, 1544, 1568, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1611, 1618, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1644, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1708, 1709, 1710, 1750, 1779, 1783, 1797, 1854, 1855, 1856, 1857, 1859, 1864, 1870, 1874, 1879, 1886, 1888, 1890, 1891, 1902, 1905, 1908, 1914, 1919, 1922], "tutori": [2, 4, 10, 15, 18, 20, 30, 38, 39, 42, 68, 888, 889, 890, 893, 1855, 1857, 1864, 1867, 1876, 1885, 1890, 1891, 1896, 1898, 1905], "how": [2, 4, 6, 8, 9, 10, 14, 18, 19, 20, 24, 30, 31, 35, 38, 40, 43, 47, 55, 56, 57, 60, 61, 62, 64, 65, 68, 483, 779, 786, 787, 790, 835, 853, 855, 856, 888, 889, 890, 893, 907, 908, 1043, 1064, 1117, 1126, 1140, 1162, 1187, 1197, 1258, 1366, 1419, 1470, 1471, 1556, 1587, 1599, 1632, 1644, 1724, 1748, 1750, 1763, 1774, 1855, 1857, 1859, 1860, 1864, 1867, 1869, 1872, 1873, 1874, 1876, 1879, 1882, 1884, 1886, 1887, 1888, 1891, 1893, 1895, 1896, 1898, 1903, 1905, 1908, 1910, 1911, 1912, 1919], "major": [2, 7, 8, 9, 10, 14, 16, 18, 988, 1805, 1855, 1860, 1901], "build": [2, 9, 10, 18, 26, 29, 30, 38, 44, 68, 1187, 1196, 1419, 1465, 1483, 1518, 1855, 1857, 1867, 1876, 1880, 1898, 1903, 1905, 1911, 1919, 1920], "basic": [2, 4, 8, 10, 16, 19, 40, 55, 68, 1120, 1121, 1122, 1193, 1259, 1599, 1680, 1855, 1861, 1876, 1881, 1883, 1884, 1888, 1902, 1911, 1918, 1919], "jacobian": [2, 44, 61, 62, 64, 65, 887, 889, 895, 898, 900, 901, 902, 903, 1121, 1122, 1123, 1127, 1128, 1847, 1880, 1885, 1888], "hessian": [2, 61, 64, 65, 896, 899, 1121, 1122, 1878, 1886], "etc": [2, 4, 6, 13, 19, 24, 27, 35, 36, 38, 44, 46, 55, 56, 60, 853, 854, 855, 1184, 1187, 1355, 1419, 1599, 1653, 1726, 1854, 1859, 1860, 1867, 1885, 1886, 1887, 1891, 1893, 1898, 1901, 1902, 1905, 1910, 1914, 1916, 1919, 1922], "user": [2, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 26, 27, 30, 35, 36, 38, 39, 40, 43, 44, 45, 46, 48, 52, 55, 56, 58, 60, 61, 64, 65, 67, 68, 148, 332, 726, 732, 733, 734, 739, 740, 750, 758, 788, 791, 793, 832, 848, 855, 856, 887, 893, 901, 964, 997, 1111, 1116, 1117, 1187, 1258, 1419, 1462, 1464, 1465, 1466, 1568, 1594, 1599, 1608, 1622, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1854, 1855, 1857, 1859, 1860, 1864, 1867, 1872, 1874, 1875, 1879, 1880, 1881, 1883, 1885, 1888, 1889, 1890, 1891, 1893, 1898, 1899, 1901, 1903, 1904, 1905, 1907, 1910, 1911, 1914, 1918, 1919, 1921, 1925], "lambda": [2, 35, 40, 44, 63, 66, 67, 68, 255, 483, 907, 908, 935, 1118, 1123, 1127, 1128, 1222, 1223, 1224, 1225, 1258, 1375, 1456, 1468, 1558, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1674, 1680, 1682, 1685, 1847, 1861, 1880, 1885, 1886, 1901, 1902, 1910, 1921, 1925], "three": [2, 3, 7, 10, 22, 38, 42, 43, 60, 62, 65, 68, 882, 1058, 1060, 1140, 1149, 1230, 1233, 1234, 1235, 1250, 1278, 1334, 1349, 1352, 1391, 1414, 1568, 1606, 1646, 1680, 1748, 1860, 1880, 1883, 1884, 1885, 1898, 1902, 1903, 1905, 1910, 1912, 1914, 1919], "anoth": [2, 6, 8, 12, 16, 19, 21, 25, 35, 36, 38, 40, 44, 45, 46, 57, 60, 68, 482, 961, 963, 964, 966, 1111, 1196, 1222, 1223, 1226, 1250, 1362, 1363, 1420, 1429, 1590, 1607, 1744, 1857, 1859, 1860, 1866, 1879, 1880, 1882, 1883, 1885, 1891, 1893, 1897, 1902, 1903, 1911, 1912, 1914, 1920, 1922], "constant": [2, 15, 18, 19, 35, 68, 738, 769, 815, 816, 1043, 1100, 1101, 1102, 1184, 1187, 1191, 1202, 1234, 1259, 1344, 1345, 1346, 1363, 1366, 1373, 1428, 1450, 1470, 1515, 1518, 1556, 1607, 1656, 1672, 1677, 1680, 1826, 1858, 1860, 1879, 1885, 1891, 1895, 1898, 1901, 1914], "boolean": [2, 29, 44, 55, 68, 397, 399, 883, 919, 921, 922, 924, 963, 964, 966, 1065, 1131, 1143, 1176, 1177, 1178, 1179, 1180, 1183, 1211, 1259, 1275, 1280, 1320, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1419, 1458, 1568, 1608, 1611, 1704, 1799, 1800, 1823, 1842, 1843, 1859, 1861, 1885, 1916, 1917, 1919, 1920, 1921, 1922], "inform": [2, 3, 4, 5, 8, 9, 10, 14, 15, 19, 26, 31, 32, 34, 35, 36, 38, 39, 42, 46, 47, 48, 51, 55, 56, 60, 62, 68, 189, 206, 252, 310, 318, 483, 493, 510, 512, 612, 674, 729, 897, 902, 903, 907, 908, 918, 1064, 1095, 1097, 1117, 1162, 1184, 1187, 1203, 1216, 1223, 1232, 1347, 1348, 1349, 1350, 1351, 1352, 1380, 1389, 1415, 1416, 1417, 1419, 1425, 1434, 1446, 1462, 1464, 1466, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1510, 1529, 1568, 1587, 1588, 1589, 1599, 1632, 1644, 1656, 1703, 1730, 1750, 1755, 1780, 1840, 1857, 1860, 1866, 1867, 1875, 1876, 1880, 1882, 1883, 1884, 1885, 1890, 1891, 1894, 1898, 1899, 1902, 1904, 1905, 1917, 1919, 1920, 1921, 1924, 1926], "relat": [2, 7, 8, 10, 35, 38, 46, 59, 60, 65, 674, 1140, 1226, 1366, 1450, 1470, 1599, 1694, 1875, 1880, 1902, 1910, 1914, 1915, 1921, 1925], "mechan": [2, 9, 38, 49, 53, 55, 68, 873, 1064, 1162, 1187, 1419, 1568, 1644, 1750, 1819, 1855, 1872, 1875, 1884, 1885, 1890, 1891, 1908, 1910, 1911], "confus": [2, 9, 19, 1187, 1419, 1880, 1883, 1902, 1914], "receiv": [2, 8, 10, 14, 19, 26, 35, 38, 42, 44, 65, 67, 1017, 1187, 1419, 1595, 1596, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1689, 1860, 1870, 1872, 1879, 1880, 1893, 1903, 1910, 1911, 1912, 1914], "memori": [2, 3, 4, 6, 15, 16, 18, 20, 22, 25, 27, 36, 40, 42, 44, 45, 60, 64, 68, 148, 153, 168, 170, 173, 176, 177, 178, 193, 204, 207, 237, 251, 264, 294, 322, 328, 334, 336, 337, 390, 441, 442, 443, 444, 445, 454, 459, 482, 494, 495, 518, 519, 574, 597, 611, 728, 757, 872, 874, 887, 893, 902, 903, 929, 944, 961, 962, 965, 968, 969, 971, 985, 986, 995, 996, 999, 1003, 1005, 1006, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1024, 1025, 1026, 1030, 1060, 1061, 1062, 1063, 1111, 1112, 1113, 1115, 1116, 1117, 1122, 1124, 1128, 1187, 1204, 1232, 1295, 1296, 1297, 1304, 1363, 1389, 1390, 1419, 1462, 1463, 1464, 1466, 1568, 1586, 1599, 1606, 1632, 1644, 1651, 1653, 1654, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1713, 1714, 1716, 1717, 1718, 1719, 1819, 1840, 1847, 1853, 1855, 1857, 1868, 1872, 1874, 1875, 1880, 1885, 1893, 1898, 1903, 1904, 1905, 1910, 1914, 1916, 1917, 1918, 1920, 1921], "overlap": [2, 14, 16, 25, 35, 36, 38, 42, 60, 68, 872, 902, 903, 1063, 1117, 1184, 1366, 1470, 1599, 1801, 1840, 1883, 1884, 1917], "dens": [2, 14, 42, 216, 539, 540, 577, 578, 579, 580, 581, 582, 916, 925, 1144, 1145, 1206, 1259, 1675, 1776, 1779, 1782, 1783, 1786, 1787, 1788, 1789, 1791, 1792, 1797, 1806, 1840, 1875, 1895, 1914, 1917], "stride": [2, 13, 14, 15, 26, 27, 136, 219, 251, 336, 441, 442, 443, 444, 445, 494, 515, 538, 575, 577, 578, 579, 581, 582, 611, 706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 721, 724, 725, 732, 733, 734, 735, 736, 737, 762, 763, 766, 767, 768, 776, 777, 859, 872, 916, 925, 1061, 1063, 1073, 1078, 1096, 1114, 1115, 1144, 1145, 1151, 1187, 1196, 1200, 1206, 1257, 1273, 1291, 1332, 1333, 1334, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1387, 1388, 1395, 1396, 1397, 1398, 1399, 1400, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1431, 1470, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1512, 1539, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1586, 1599, 1650, 1709, 1710, 1713, 1715, 1716, 1717, 1719, 1720, 1727, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1782, 1825, 1830, 1832, 1845, 1852, 1856, 1858, 1861, 1873, 1898, 1900, 1910, 1914, 1916, 1917, 1919, 1920, 1921], "thu": [2, 27, 35, 38, 44, 56, 60, 68, 779, 816, 819, 848, 1060, 1081, 1250, 1281, 1359, 1471, 1587, 1599, 1661, 1662, 1672, 1790, 1857, 1860, 1867, 1868, 1880, 1882, 1887, 1888, 1890, 1891, 1898, 1905, 1910, 1914, 1918, 1920, 1921], "rowmajor": [2, 1599], "contigu": [2, 27, 36, 40, 328, 494, 515, 611, 1365, 1422, 1558, 1599, 1721, 1727, 1805, 1858, 1874, 1875, 1900, 1907, 1914, 1916, 1918], "create_graph": [2, 148, 887, 895, 896, 897, 898, 899, 900, 901, 1858, 1879], "preserv": [2, 15, 35, 44, 60, 68, 494, 773, 779, 848, 870, 873, 1101, 1102, 1117, 1191, 1197, 1420, 1429, 1471, 1529, 1587, 1657, 1736, 1740, 1778, 1819, 1857, 1868, 1873, 1875, 1878, 1883, 1886, 1895, 1898, 1910, 1914, 1917], "preexist": [2, 14, 15], "let": [2, 8, 9, 12, 15, 18, 19, 25, 26, 35, 36, 43, 44, 56, 65, 68, 482, 491, 942, 1140, 1187, 1206, 1216, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1232, 1233, 1236, 1238, 1245, 1247, 1249, 1250, 1419, 1599, 1606, 1819, 1864, 1873, 1874, 1880, 1883, 1884, 1885, 1886, 1891, 1893, 1894, 1895, 1896, 1897, 1902, 1911, 1912, 1914, 1919], "first": [2, 5, 6, 8, 10, 12, 13, 14, 15, 16, 19, 25, 26, 29, 32, 35, 36, 38, 39, 40, 42, 43, 44, 46, 48, 52, 55, 56, 60, 66, 68, 214, 251, 287, 583, 604, 680, 683, 685, 688, 754, 787, 788, 808, 848, 851, 853, 868, 869, 878, 883, 884, 885, 886, 901, 902, 915, 919, 920, 922, 923, 924, 927, 929, 931, 945, 960, 963, 974, 1048, 1050, 1051, 1052, 1057, 1060, 1065, 1078, 1080, 1099, 1113, 1118, 1119, 1121, 1122, 1123, 1127, 1128, 1131, 1140, 1143, 1151, 1152, 1153, 1164, 1176, 1185, 1194, 1199, 1200, 1206, 1211, 1216, 1219, 1226, 1242, 1245, 1252, 1253, 1255, 1258, 1259, 1275, 1281, 1284, 1287, 1288, 1289, 1291, 1307, 1309, 1315, 1320, 1323, 1327, 1333, 1334, 1340, 1348, 1349, 1351, 1352, 1362, 1363, 1365, 1370, 1371, 1385, 1388, 1389, 1404, 1411, 1413, 1414, 1434, 1447, 1500, 1586, 1590, 1599, 1608, 1609, 1611, 1622, 1632, 1638, 1661, 1662, 1663, 1664, 1665, 1671, 1674, 1675, 1679, 1683, 1686, 1688, 1694, 1704, 1705, 1731, 1732, 1740, 1768, 1782, 1785, 1790, 1820, 1821, 1825, 1830, 1832, 1838, 1841, 1844, 1847, 1849, 1854, 1857, 1859, 1860, 1867, 1869, 1872, 1873, 1875, 1879, 1880, 1883, 1885, 1887, 1888, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1903, 1904, 1905, 1910, 1911, 1912, 1914, 1915, 1919, 1923, 1925], "accord": [2, 10, 26, 46, 791, 855, 856, 874, 917, 929, 1058, 1150, 1247, 1280, 1309, 1327, 1363, 1590, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1680, 1686, 1705, 1769, 1793, 1820, 1848, 1860, 1870, 1874, 1875, 1878, 1891, 1895, 1897, 1902, 1912, 1921], "retain": [2, 10, 38, 687, 689, 690, 693, 868, 869, 874, 1191, 1208, 1239, 1243, 1256, 1274, 1284, 1286, 1287, 1289, 1292, 1314, 1315, 1316, 1317, 1646, 1702, 1705, 1736, 1799, 1800, 1804, 1829, 1830, 1831, 1832, 1842, 1843, 1872, 1893], "over": [2, 10, 14, 15, 16, 19, 20, 26, 35, 36, 38, 39, 43, 44, 46, 53, 56, 60, 61, 62, 63, 64, 65, 66, 68, 477, 674, 691, 732, 733, 734, 735, 736, 737, 760, 761, 766, 767, 768, 776, 777, 886, 911, 934, 972, 1017, 1019, 1023, 1037, 1038, 1039, 1040, 1041, 1042, 1060, 1116, 1120, 1122, 1126, 1128, 1140, 1148, 1187, 1202, 1219, 1239, 1243, 1255, 1256, 1258, 1266, 1286, 1288, 1317, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1363, 1366, 1367, 1368, 1374, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1391, 1407, 1410, 1411, 1412, 1413, 1414, 1419, 1422, 1423, 1424, 1426, 1433, 1447, 1450, 1451, 1453, 1458, 1467, 1470, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1502, 1513, 1514, 1530, 1536, 1539, 1540, 1542, 1543, 1544, 1553, 1554, 1561, 1568, 1594, 1603, 1643, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1709, 1710, 1725, 1784, 1786, 1799, 1800, 1801, 1804, 1821, 1836, 1842, 1843, 1847, 1860, 1870, 1872, 1873, 1874, 1879, 1881, 1882, 1884, 1885, 1886, 1888, 1891, 1893, 1894, 1901, 1910, 1911, 1914, 1922], "fact": [2, 4, 9, 15, 60, 490, 916, 925, 953, 1140, 1144, 1145, 1222, 1223, 1250, 1857, 1885, 1888, 1898, 1911, 1914], "phase": [2, 16, 26, 36, 787, 1222, 1223, 1686, 1805, 1858, 1897], "recreat": [2, 25, 1880], "altern": [2, 10, 16, 35, 38, 68, 674, 808, 1120, 1121, 1149, 1194, 1258, 1447, 1464, 1466, 1537, 1599, 1651, 1675, 1747, 1840, 1853, 1854, 1861, 1880, 1889, 1891, 1894, 1895, 1897], "never": [2, 6, 8, 14, 36, 38, 55, 56, 219, 220, 790, 873, 935, 1184, 1233, 1234, 1245, 1258, 1599, 1632, 1880, 1883, 1885, 1902, 1903, 1910, 1921], "long": [2, 8, 10, 16, 26, 35, 55, 67, 728, 743, 745, 746, 747, 748, 750, 757, 775, 1117, 1163, 1287, 1292, 1315, 1342, 1355, 1363, 1389, 1390, 1426, 1502, 1655, 1703, 1816, 1820, 1830, 1832, 1837, 1855, 1860, 1867, 1872, 1873, 1874, 1880, 1881, 1883, 1885, 1887, 1893, 1895, 1898, 1902, 1904, 1909, 1916, 1917, 1919, 1920], "hard": [2, 8, 9, 16, 18, 38, 43, 56, 1060, 1259, 1375, 1520, 1521, 1857, 1858, 1859, 1880, 1898, 1902], "matter": [2, 5, 38, 60, 891, 1048, 1060, 1194, 1197, 1202, 1599, 1875, 1880, 1902], "discourag": [2, 1029, 1033, 1880, 1910], "aggress": [2, 16, 1184, 1880, 1910], "buffer": [2, 5, 16, 35, 36, 38, 60, 64, 874, 974, 1006, 1113, 1116, 1126, 1187, 1194, 1197, 1208, 1258, 1337, 1338, 1339, 1356, 1392, 1393, 1394, 1419, 1458, 1592, 1599, 1601, 1608, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1639, 1641, 1654, 1672, 1674, 1736, 1778, 1823, 1859, 1876, 1880, 1884, 1885, 1891, 1896, 1898, 1903], "free": [2, 8, 14, 38, 40, 44, 46, 55, 56, 60, 68, 1012, 1030, 1190, 1202, 1259, 1868, 1878, 1880, 1883, 1885, 1887, 1893, 1897, 1898], "reus": [2, 14, 16, 26, 38, 43, 68, 482, 1856, 1880, 1883, 1910], "effici": [2, 3, 4, 9, 27, 35, 44, 60, 61, 66, 148, 754, 887, 892, 901, 937, 1124, 1132, 1204, 1242, 1259, 1278, 1327, 1358, 1359, 1360, 1363, 1364, 1371, 1425, 1431, 1432, 1466, 1568, 1868, 1875, 1880, 1884, 1885, 1888, 1892, 1894, 1901, 1903, 1905, 1910, 1911, 1914, 1917, 1918, 1922], "occas": [2, 8, 1880], "actual": [2, 9, 14, 15, 16, 18, 19, 20, 24, 40, 46, 48, 60, 65, 68, 784, 952, 1078, 1096, 1198, 1202, 1350, 1351, 1352, 1518, 1599, 1623, 1653, 1675, 1680, 1854, 1859, 1860, 1873, 1880, 1883, 1884, 1885, 1888, 1893, 1897, 1905, 1910, 1916, 1921], "signific": [2, 4, 18, 21, 40, 1688, 1880, 1883, 1914], "amount": [2, 3, 4, 5, 8, 14, 26, 35, 38, 40, 46, 55, 68, 903, 985, 1011, 1013, 1017, 1184, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1366, 1407, 1422, 1470, 1501, 1616, 1617, 1619, 1620, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1874, 1880, 1882, 1883, 1886, 1887, 1889, 1910, 1914], "heavi": [2, 15, 38, 1880, 1897], "pressur": [2, 1880], "keep": [2, 4, 8, 14, 15, 19, 35, 36, 40, 42, 46, 55, 60, 964, 1258, 1337, 1338, 1339, 1343, 1362, 1382, 1383, 1384, 1428, 1458, 1518, 1529, 1599, 1618, 1657, 1725, 1854, 1855, 1857, 1872, 1874, 1875, 1880, 1883, 1884, 1886, 1887, 1888, 1893, 1899, 1901, 1905, 1910, 1911, 1912], "track": [2, 14, 15, 16, 19, 22, 24, 46, 332, 969, 1009, 1011, 1024, 1025, 1026, 1116, 1117, 1162, 1288, 1337, 1338, 1339, 1382, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1458, 1599, 1618, 1870, 1872, 1874, 1875, 1880, 1883, 1885, 1886, 1887, 1890, 1891, 1899, 1901, 1903, 1904, 1911, 1912, 1914], "save": [2, 6, 8, 16, 27, 30, 36, 38, 40, 42, 60, 491, 831, 883, 884, 893, 1124, 1186, 1187, 1192, 1194, 1202, 1204, 1258, 1419, 1599, 1653, 1654, 1676, 1682, 1685, 1689, 1857, 1858, 1869, 1874, 1885, 1886, 1891, 1893, 1895, 1898, 1900, 1901, 1902, 1904, 1914, 1919, 1923], "afterward": [2, 1419, 1590, 1599], "start": [2, 4, 5, 9, 10, 14, 16, 20, 22, 35, 36, 38, 40, 46, 52, 54, 55, 56, 57, 60, 64, 67, 68, 399, 429, 430, 491, 532, 692, 859, 1009, 1011, 1022, 1024, 1025, 1082, 1083, 1099, 1113, 1185, 1199, 1212, 1257, 1273, 1318, 1319, 1327, 1332, 1333, 1334, 1363, 1365, 1412, 1413, 1414, 1420, 1422, 1510, 1556, 1599, 1613, 1617, 1619, 1632, 1658, 1680, 1686, 1720, 1751, 1774, 1787, 1788, 1789, 1791, 1792, 1854, 1855, 1856, 1858, 1859, 1864, 1867, 1872, 1874, 1880, 1881, 1883, 1884, 1887, 1891, 1892, 1893, 1897, 1898, 1901, 1904, 1910, 1911, 1912, 1914], "sure": [2, 8, 10, 16, 18, 26, 35, 38, 40, 45, 47, 56, 58, 63, 68, 855, 856, 887, 1064, 1111, 1162, 1191, 1202, 1203, 1259, 1599, 1644, 1682, 1823, 1860, 1873, 1880, 1884, 1887, 1888, 1897, 1898, 1904, 1905, 1910, 1911, 1912, 1914, 1919], "longer": [2, 26, 38, 57, 64, 65, 681, 884, 902, 903, 1184, 1191, 1599, 1646, 1870, 1880, 1883, 1910, 1912], "find": [2, 8, 14, 15, 16, 19, 20, 25, 26, 29, 38, 55, 65, 68, 80, 1060, 1140, 1208, 1259, 1350, 1351, 1352, 1389, 1656, 1694, 1705, 1740, 1806, 1854, 1868, 1872, 1874, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1893, 1895, 1898, 1900, 1905, 1910, 1914, 1917, 1919, 1921, 1923, 1925], "quick": [2, 8, 63, 1867, 1891], "guid": [2, 9, 10, 19, 20, 24, 35, 80, 81, 1198, 1855, 1883, 1886, 1902, 1905], "var": [2, 14, 19, 26, 48, 53, 55, 58, 1337, 1338, 1339, 1373, 1374, 1382, 1383, 1384, 1391, 1458, 1515, 1708, 1843, 1856, 1858, 1860, 1873, 1900], "detach": [2, 6, 25, 220, 444, 454, 944, 1116, 1187, 1342, 1419, 1502, 1520, 1782, 1819, 1857, 1858, 1873, 1875, 1887, 1898, 1900, 1907, 1914, 1918, 1920], "register_hook": [2, 1873, 1880], "factori": [2, 3, 15, 27, 44, 46, 49, 53, 65, 818, 1060, 1644, 1656, 1744, 1855, 1858, 1874, 1883, 1900, 1917], "ones": [2, 16, 17, 25, 26, 35, 38, 42, 44, 60, 65, 66, 67, 68, 148, 251, 310, 399, 441, 442, 444, 510, 788, 853, 887, 896, 898, 899, 900, 901, 902, 917, 929, 947, 1043, 1051, 1073, 1116, 1123, 1124, 1127, 1162, 1184, 1187, 1198, 1207, 1233, 1249, 1258, 1336, 1362, 1366, 1373, 1374, 1391, 1419, 1423, 1424, 1426, 1428, 1470, 1509, 1568, 1586, 1590, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1636, 1638, 1641, 1651, 1655, 1708, 1725, 1743, 1774, 1822, 1826, 1850, 1858, 1860, 1862, 1873, 1874, 1880, 1881, 1883, 1885, 1892, 1894, 1895, 1898, 1900, 1901, 1902, 1905, 1910, 1912, 1915, 1917, 1920], "autograd_tensor": 2, "base": [2, 4, 8, 10, 13, 14, 16, 17, 18, 19, 29, 30, 35, 38, 39, 40, 42, 43, 44, 46, 48, 53, 55, 56, 57, 60, 65, 68, 73, 785, 790, 794, 796, 814, 815, 816, 818, 819, 855, 856, 893, 914, 947, 959, 1021, 1022, 1058, 1060, 1103, 1140, 1150, 1189, 1200, 1212, 1250, 1261, 1263, 1265, 1273, 1356, 1419, 1422, 1423, 1424, 1428, 1462, 1464, 1466, 1535, 1568, 1599, 1603, 1604, 1606, 1613, 1617, 1619, 1658, 1659, 1660, 1661, 1662, 1663, 1672, 1673, 1674, 1675, 1701, 1711, 1736, 1750, 1805, 1806, 1820, 1830, 1832, 1848, 1855, 1858, 1860, 1882, 1883, 1884, 1885, 1891, 1899, 1903, 1904, 1905, 1910, 1911, 1914, 1915, 1918, 1919, 1921, 1923, 1924], "Then": [2, 38, 56, 68, 1366, 1470, 1608, 1656, 1880, 1881, 1884, 1885, 1886, 1894, 1895, 1898, 1901, 1902, 1910, 1911, 1923], "ctx": [2, 53, 883, 884, 885, 891, 892, 893, 894, 1879, 1885, 1886, 1898], "gradcheck": [2, 903, 1855, 1885], "extend": [2, 35, 38, 40, 44, 47, 57, 68, 855, 884, 886, 893, 1421, 1430, 1855, 1864, 1875, 1880, 1890, 1892, 1893, 1898, 1900, 1902, 1908, 1914, 1925], "staticmethod": [2, 884, 886, 891, 892, 893, 894, 1860, 1879, 1885, 1898, 1910], "save_for_backward": [2, 884, 892, 894, 1879, 1880, 1885, 1886, 1898], "grad_output": [2, 883, 891, 901, 903, 907, 908, 1187, 1419, 1595, 1596, 1856, 1858, 1880, 1883, 1885, 1886, 1891], "saved_tensor": [2, 892, 893, 894, 1879, 1880, 1885, 1886], "avail": [2, 3, 6, 9, 10, 16, 18, 20, 26, 29, 30, 35, 38, 46, 55, 56, 80, 81, 983, 985, 986, 997, 1000, 1007, 1008, 1027, 1028, 1030, 1060, 1193, 1250, 1251, 1276, 1462, 1471, 1529, 1568, 1587, 1694, 1748, 1801, 1806, 1840, 1854, 1855, 1857, 1859, 1860, 1864, 1867, 1872, 1880, 1883, 1885, 1889, 1891, 1892, 1895, 1897, 1901, 1902, 1904, 1905, 1906, 1910, 1924, 1925], "cost": [2, 4, 5, 9, 10, 21, 26, 36, 60, 937, 1242, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1568, 1744, 1883, 1895, 1906, 1911, 1917], "cpu": [2, 5, 6, 15, 18, 22, 23, 26, 29, 31, 35, 38, 40, 60, 86, 117, 194, 286, 323, 332, 441, 442, 443, 444, 445, 454, 574, 583, 859, 874, 912, 916, 925, 957, 963, 973, 974, 975, 977, 1061, 1063, 1073, 1078, 1096, 1108, 1113, 1114, 1137, 1138, 1144, 1145, 1187, 1194, 1196, 1197, 1206, 1216, 1218, 1222, 1223, 1224, 1225, 1227, 1229, 1232, 1234, 1235, 1241, 1244, 1247, 1250, 1251, 1257, 1258, 1273, 1276, 1287, 1356, 1362, 1419, 1462, 1583, 1599, 1603, 1604, 1632, 1633, 1647, 1650, 1704, 1713, 1715, 1717, 1719, 1720, 1744, 1749, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1773, 1782, 1787, 1788, 1789, 1790, 1791, 1792, 1805, 1819, 1820, 1821, 1830, 1832, 1837, 1840, 1852, 1855, 1857, 1858, 1860, 1864, 1868, 1872, 1873, 1875, 1883, 1886, 1889, 1891, 1893, 1894, 1895, 1897, 1898, 1900, 1903, 1904, 1906, 1909, 1910, 1914, 1916, 1917, 1920, 1921, 1922], "There": [2, 6, 7, 8, 10, 14, 15, 16, 19, 20, 25, 26, 29, 34, 38, 40, 55, 61, 65, 66, 68, 674, 728, 787, 884, 1117, 1356, 1389, 1434, 1568, 1599, 1639, 1644, 1854, 1857, 1859, 1860, 1866, 1867, 1874, 1880, 1883, 1885, 1886, 1887, 1890, 1893, 1897, 1898, 1902, 1905, 1906, 1910, 1912, 1920, 1922], "moment": [2, 19, 22, 766, 767, 768, 955, 1661, 1662, 1663, 1665, 1671, 1675, 1868, 1872, 1875, 1904, 1910], "nvprof": [2, 5, 909, 1883], "regist": [2, 15, 17, 18, 21, 30, 36, 38, 42, 43, 44, 55, 57, 60, 68, 80, 81, 483, 674, 786, 787, 848, 907, 908, 947, 1006, 1187, 1258, 1419, 1420, 1421, 1429, 1430, 1447, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1606, 1607, 1608, 1609, 1611, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1864, 1870, 1872, 1884, 1885, 1890, 1891, 1898, 1902, 1910], "activ": [2, 6, 8, 10, 15, 26, 57, 60, 66, 786, 788, 790, 797, 801, 835, 836, 845, 855, 856, 962, 971, 986, 999, 1017, 1116, 1118, 1128, 1259, 1331, 1358, 1359, 1360, 1364, 1374, 1391, 1418, 1420, 1437, 1448, 1462, 1464, 1466, 1511, 1548, 1571, 1599, 1609, 1610, 1611, 1641, 1646, 1847, 1855, 1856, 1868, 1872, 1883, 1885, 1886, 1891, 1898, 1901, 1903, 1904, 1905, 1906, 1907, 1910, 1914, 1923, 1924], "emit_nvtx": [2, 5], "vtune": [2, 5], "emit_itt": [2, 5], "use_cuda": [2, 1904], "record_shap": [2, 1904], "with_flop": [2, 1904], "profile_memori": [2, 1904], "with_stack": [2, 1904], "with_modul": [2, 1904], "use_kineto": 2, "use_cpu": 2, "experimental_config": [2, 1904], "hold": [2, 14, 19, 38, 53, 55, 57, 58, 60, 64, 67, 68, 531, 1259, 1366, 1420, 1421, 1429, 1430, 1470, 1590, 1599, 1601, 1602, 1608, 1618, 1632, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1787, 1788, 1789, 1790, 1791, 1792, 1881, 1883, 1885, 1887, 1890, 1893, 1901, 1904, 1910, 1911, 1912, 1914, 1916, 1917, 1919, 1920], "summari": [2, 4, 26, 56, 1018, 1753, 1855, 1870, 1919, 1924], "hood": [2, 15, 19, 67, 1872, 1880, 1883, 1884, 1893, 1902, 1912], "record": [2, 6, 14, 16, 26, 42, 47, 48, 49, 53, 56, 67, 68, 441, 442, 443, 444, 445, 491, 813, 814, 815, 816, 819, 821, 859, 916, 925, 963, 964, 966, 1061, 1062, 1063, 1073, 1078, 1096, 1113, 1114, 1115, 1144, 1145, 1187, 1202, 1206, 1257, 1273, 1300, 1301, 1356, 1419, 1650, 1651, 1653, 1656, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1787, 1788, 1789, 1790, 1791, 1792, 1819, 1852, 1853, 1857, 1859, 1875, 1879, 1880, 1883, 1885, 1898, 1899, 1904, 1910, 1919, 1920, 1921, 1922, 1923, 1924], "event": [2, 41, 44, 46, 54, 57, 67, 911, 912, 913, 964, 966, 1017, 1020, 1202, 1203, 1264, 1300, 1301, 1568, 1855, 1870, 1872, 1883, 1904, 1919], "being": [2, 4, 6, 10, 14, 15, 16, 18, 19, 24, 26, 35, 38, 40, 42, 44, 46, 48, 55, 56, 57, 60, 64, 65, 67, 68, 95, 399, 754, 787, 793, 886, 895, 901, 945, 964, 972, 1019, 1023, 1037, 1038, 1073, 1106, 1107, 1117, 1126, 1127, 1176, 1187, 1191, 1276, 1285, 1290, 1335, 1336, 1353, 1355, 1362, 1363, 1367, 1368, 1373, 1379, 1386, 1410, 1411, 1419, 1422, 1423, 1424, 1425, 1426, 1433, 1450, 1451, 1467, 1483, 1490, 1491, 1501, 1513, 1514, 1518, 1530, 1553, 1561, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1625, 1626, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1704, 1705, 1799, 1800, 1801, 1842, 1843, 1857, 1860, 1867, 1870, 1873, 1874, 1875, 1879, 1880, 1883, 1885, 1886, 1887, 1888, 1891, 1893, 1894, 1898, 1902, 1905, 1908, 1910, 1911, 1914, 1921, 1923, 1925], "those": [2, 3, 5, 13, 15, 16, 18, 19, 22, 26, 29, 35, 36, 38, 40, 42, 44, 60, 65, 67, 68, 818, 902, 975, 985, 1048, 1050, 1128, 1202, 1244, 1250, 1258, 1297, 1327, 1335, 1336, 1353, 1355, 1363, 1379, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1471, 1490, 1491, 1501, 1510, 1530, 1553, 1561, 1656, 1675, 1748, 1805, 1826, 1847, 1859, 1873, 1874, 1879, 1880, 1883, 1885, 1886, 1889, 1891, 1895, 1896, 1898, 1901, 1908, 1910, 1912], "report": [2, 4, 5, 16, 22, 26, 32, 38, 48, 56, 67, 68, 1017, 1120, 1121, 1123, 1879, 1883, 1903, 1914], "runtim": [2, 4, 6, 16, 21, 29, 38, 68, 821, 872, 911, 1058, 1060, 1150, 1187, 1202, 1419, 1601, 1602, 1657, 1700, 1840, 1848, 1860, 1873, 1874, 1880, 1883, 1885, 1893, 1898], "propag": [2, 14, 15, 19, 25, 40, 41, 44, 46, 55, 68, 508, 680, 683, 684, 685, 689, 690, 691, 692, 760, 761, 762, 763, 773, 776, 777, 779, 780, 781, 832, 834, 915, 1106, 1107, 1314, 1786, 1855, 1872, 1873, 1879, 1883, 1885, 1888, 1890, 1910, 1923, 1924], "async": [2, 38, 39, 67, 597, 1599, 1861, 1883, 1890, 1916], "task": [2, 4, 8, 36, 61, 66, 1190, 1205, 1382, 1383, 1384, 1860, 1882, 1890, 1891, 1897], "cuda": [2, 4, 5, 6, 15, 16, 17, 18, 20, 22, 26, 29, 34, 35, 36, 38, 40, 42, 60, 86, 148, 286, 310, 318, 332, 337, 510, 512, 518, 574, 859, 871, 873, 887, 901, 916, 918, 925, 947, 961, 962, 963, 964, 966, 967, 982, 984, 995, 1061, 1062, 1063, 1073, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1114, 1144, 1145, 1187, 1206, 1208, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1241, 1244, 1247, 1248, 1250, 1251, 1257, 1258, 1273, 1276, 1292, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1356, 1362, 1389, 1419, 1434, 1458, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1510, 1518, 1529, 1556, 1568, 1587, 1588, 1589, 1590, 1599, 1601, 1602, 1603, 1604, 1645, 1647, 1650, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1704, 1713, 1715, 1717, 1719, 1720, 1744, 1748, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1783, 1787, 1788, 1789, 1790, 1791, 1792, 1805, 1819, 1821, 1830, 1832, 1837, 1840, 1852, 1855, 1858, 1864, 1873, 1875, 1885, 1886, 1891, 1894, 1898, 1900, 1901, 1903, 1904, 1909, 1910, 1916, 1917, 1920, 1921, 1922], "cudaev": 2, "approxim": [2, 4, 36, 42, 55, 68, 1124, 1140, 1250, 1259, 1327, 1369, 1433, 1448, 1455, 1516, 1561, 1571, 1607, 1658, 1675, 1694, 1806, 1826, 1856, 1858, 1860, 1883, 1884, 1885, 1888, 1898, 1926], "4u": 2, "about": [2, 9, 10, 12, 14, 16, 19, 20, 21, 26, 31, 35, 38, 39, 42, 46, 48, 52, 54, 56, 61, 65, 68, 252, 493, 612, 902, 903, 968, 969, 985, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1024, 1025, 1026, 1117, 1216, 1223, 1363, 1632, 1675, 1686, 1747, 1854, 1857, 1859, 1860, 1864, 1867, 1882, 1883, 1884, 1885, 1887, 1890, 1893, 1894, 1896, 1902, 1904, 1905, 1908, 1911, 1912, 1914, 1918, 1920], "collect": [2, 4, 8, 16, 19, 22, 25, 26, 35, 39, 40, 42, 46, 55, 60, 67, 68, 793, 794, 818, 855, 856, 935, 999, 1061, 1149, 1288, 1599, 1622, 1650, 1713, 1717, 1852, 1855, 1858, 1859, 1860, 1870, 1883, 1884, 1886, 1901, 1904, 1905, 1908, 1912, 1914, 1919, 1921], "group": [2, 4, 10, 12, 16, 26, 35, 36, 39, 40, 42, 46, 52, 55, 56, 57, 58, 60, 63, 68, 604, 674, 706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 721, 724, 725, 732, 733, 734, 735, 736, 737, 766, 767, 768, 874, 911, 1343, 1347, 1348, 1349, 1350, 1351, 1352, 1374, 1395, 1396, 1397, 1398, 1399, 1400, 1458, 1493, 1494, 1495, 1496, 1497, 1498, 1519, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1838, 1854, 1855, 1856, 1858, 1860, 1872, 1878, 1883, 1884, 1898, 1901, 1902, 1904, 1910, 1919], "prof": [2, 16, 26, 52, 1904], "key_averag": [2, 1904], "group_by_input_shap": [2, 911, 1904], "skew": [2, 4, 5, 1238, 1606], "neglig": [2, 1199, 1748], "bottom": [2, 1518, 1867], "But": [2, 8, 15, 19, 60, 67, 482, 1202, 1232, 1599, 1880, 1885, 1887, 1888, 1902, 1903, 1914, 1918, 1925], "total": [2, 4, 5, 8, 35, 36, 38, 52, 54, 55, 56, 60, 871, 912, 977, 1012, 1017, 1030, 1113, 1148, 1149, 1296, 1342, 1366, 1379, 1386, 1410, 1425, 1470, 1555, 1599, 1603, 1645, 1647, 1649, 1680, 1686, 1726, 1753, 1801, 1854, 1859, 1870, 1883, 1889, 1901], "artifici": [2, 1914], "estim": [2, 4, 35, 44, 955, 959, 1140, 1184, 1337, 1338, 1339, 1369, 1373, 1374, 1382, 1383, 1384, 1391, 1458, 1516, 1607, 1672, 1769, 1904], "flop": [2, 1904], "hardwar": [2, 9, 16, 26, 853, 855, 856, 1222, 1223, 1250, 1840, 1883, 1895, 1906], "matrix": [2, 3, 16, 17, 36, 38, 44, 189, 206, 680, 683, 684, 685, 754, 915, 917, 926, 927, 935, 937, 938, 939, 940, 947, 955, 959, 1043, 1047, 1048, 1050, 1060, 1128, 1132, 1136, 1151, 1207, 1216, 1217, 1218, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1254, 1256, 1259, 1267, 1276, 1278, 1281, 1291, 1309, 1311, 1362, 1363, 1371, 1389, 1470, 1509, 1510, 1606, 1611, 1640, 1646, 1692, 1693, 1694, 1704, 1748, 1776, 1779, 1782, 1783, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1797, 1805, 1806, 1821, 1824, 1826, 1828, 1829, 1830, 1831, 1832, 1841, 1847, 1855, 1860, 1873, 1874, 1875, 1878, 1882, 1883, 1885, 1888, 1891, 1894, 1904, 1914, 1919, 1920], "2d": [2, 40, 43, 44, 581, 582, 694, 697, 700, 729, 733, 736, 760, 762, 767, 773, 777, 779, 780, 781, 940, 955, 959, 1048, 1060, 1242, 1243, 1325, 1329, 1333, 1336, 1337, 1338, 1348, 1351, 1355, 1359, 1363, 1367, 1382, 1383, 1388, 1413, 1422, 1424, 1425, 1426, 1471, 1472, 1473, 1478, 1481, 1483, 1486, 1491, 1494, 1497, 1505, 1510, 1513, 1540, 1543, 1553, 1556, 1607, 1640, 1710, 1785, 1790, 1828, 1868, 1878, 1885, 1904, 1905, 1914], "alloc": [2, 5, 14, 15, 27, 32, 36, 40, 44, 46, 55, 251, 328, 441, 442, 443, 444, 445, 482, 962, 964, 966, 968, 969, 971, 984, 985, 986, 1009, 1011, 1013, 1015, 1016, 1017, 1018, 1025, 1026, 1030, 1061, 1063, 1295, 1296, 1297, 1304, 1654, 1713, 1717, 1719, 1744, 1819, 1872, 1875, 1880, 1884, 1889, 1904, 1917], "dealloc": [2, 68, 1113, 1872, 1883, 1887, 1889, 1904], "line": [2, 5, 16, 18, 19, 20, 22, 23, 26, 32, 38, 68, 911, 1060, 1117, 1162, 1187, 1197, 1419, 1483, 1518, 1753, 1780, 1857, 1860, 1861, 1875, 1881, 1885, 1888, 1889, 1895, 1897, 1898, 1904, 1914], "hierarchi": [2, 14, 68, 834, 1191, 1661, 1662, 1861, 1885, 1904, 1905], "callstack": [2, 38, 1904], "torchscript": [2, 4, 9, 18, 42, 68, 611, 1185, 1188, 1190, 1191, 1192, 1193, 1198, 1202, 1204, 1656, 1855, 1861, 1896, 1898, 1904, 1910], "kineto": [2, 1904], "_experimentalconfig": [2, 1904], "librari": [2, 3, 4, 5, 9, 10, 16, 18, 20, 27, 29, 30, 35, 38, 45, 53, 57, 61, 64, 65, 66, 68, 674, 957, 964, 987, 991, 1003, 1111, 1199, 1230, 1276, 1773, 1870, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1891, 1893, 1894, 1897, 1898, 1902, 1904, 1905, 1910, 1925], "100": [2, 12, 19, 35, 38, 42, 44, 68, 297, 732, 733, 736, 737, 1147, 1187, 1198, 1204, 1242, 1257, 1264, 1273, 1288, 1308, 1327, 1335, 1336, 1337, 1338, 1339, 1348, 1349, 1351, 1352, 1354, 1355, 1382, 1383, 1384, 1419, 1426, 1428, 1458, 1467, 1500, 1501, 1553, 1664, 1676, 1677, 1682, 1683, 1684, 1685, 1687, 1689, 1690, 1706, 1762, 1858, 1860, 1872, 1882, 1883, 1898, 1901, 1906, 1912, 1914, 1919], "realli": [2, 8, 15, 68, 1860, 1880, 1902], "y": [2, 12, 14, 18, 19, 25, 26, 27, 29, 35, 44, 52, 60, 65, 66, 68, 611, 614, 775, 878, 880, 881, 882, 889, 890, 893, 895, 896, 897, 898, 899, 900, 929, 935, 952, 959, 1003, 1004, 1043, 1054, 1060, 1064, 1116, 1118, 1121, 1122, 1123, 1127, 1128, 1162, 1193, 1198, 1202, 1255, 1264, 1265, 1288, 1335, 1336, 1337, 1338, 1339, 1340, 1353, 1355, 1374, 1379, 1380, 1382, 1383, 1384, 1386, 1391, 1406, 1410, 1411, 1422, 1423, 1424, 1426, 1428, 1450, 1451, 1458, 1461, 1467, 1468, 1489, 1518, 1535, 1558, 1590, 1611, 1644, 1653, 1708, 1726, 1728, 1729, 1750, 1782, 1796, 1822, 1826, 1827, 1847, 1850, 1857, 1858, 1859, 1860, 1873, 1874, 1878, 1880, 1881, 1882, 1883, 1886, 1888, 1889, 1892, 1898, 1902, 1905, 1910, 1912, 1915, 1919, 1922, 1923, 1924], "column": [2, 4, 36, 43, 189, 257, 578, 581, 945, 955, 959, 1043, 1073, 1101, 1102, 1152, 1222, 1223, 1226, 1242, 1245, 1250, 1254, 1259, 1309, 1428, 1470, 1509, 1510, 1606, 1694, 1704, 1785, 1787, 1788, 1789, 1791, 1792, 1805, 1826, 1830, 1832, 1841, 1878, 1888, 1914], "remov": [2, 4, 16, 18, 21, 25, 35, 36, 38, 40, 44, 56, 58, 60, 68, 483, 508, 540, 551, 691, 791, 809, 810, 811, 853, 907, 908, 937, 938, 1006, 1117, 1133, 1184, 1187, 1191, 1276, 1277, 1281, 1419, 1420, 1429, 1520, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1607, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1625, 1626, 1627, 1628, 1630, 1631, 1641, 1646, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1704, 1720, 1742, 1796, 1805, 1828, 1835, 1854, 1855, 1868, 1880, 1891, 1896, 1898, 1900, 1902, 1912, 1916, 1921], "breviti": [2, 68, 1898], "print": [2, 4, 12, 16, 19, 26, 32, 35, 38, 46, 47, 52, 53, 56, 60, 65, 67, 714, 722, 723, 728, 739, 740, 750, 758, 905, 907, 908, 1116, 1117, 1126, 1187, 1191, 1193, 1194, 1198, 1276, 1340, 1343, 1381, 1406, 1419, 1431, 1432, 1500, 1556, 1559, 1560, 1611, 1621, 1622, 1623, 1624, 1627, 1637, 1641, 1653, 1656, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1753, 1854, 1857, 1858, 1880, 1882, 1883, 1885, 1891, 1892, 1898, 1900, 1902, 1904, 1910, 1919, 1920, 1923, 1924], "tabl": [2, 4, 15, 22, 26, 38, 68, 1362, 1509, 1858, 1860, 1885, 1901, 1902, 1904, 1905, 1910, 1914, 1921], "sort_bi": [2, 1904], "self_cpu_time_tot": [2, 1904], "avg": [2, 38, 1659], "mul": [2, 12, 14, 25, 32, 68, 416, 741, 742, 751, 1164, 1310, 1856, 1857, 1858, 1860, 1873, 1875, 1885, 1898, 1900, 1907, 1911, 1914, 1917, 1923], "32": [2, 3, 13, 19, 36, 38, 740, 1113, 1184, 1196, 1276, 1333, 1358, 1359, 1360, 1364, 1365, 1367, 1368, 1388, 1407, 1413, 1424, 1462, 1463, 1464, 1465, 1466, 1483, 1513, 1514, 1520, 1568, 1874, 1875, 1891, 1895, 1898, 1908, 1914, 1917, 1919, 1920], "048m": 2, "200": [2, 26, 42, 1187, 1264, 1419, 1706, 1860, 1914], "27": [2, 611, 1254, 1679, 1701, 1841, 1898], "041m": 2, "powbackward0": 2, "9": [2, 8, 13, 35, 36, 38, 45, 68, 85, 310, 312, 314, 318, 398, 399, 467, 508, 554, 575, 577, 691, 739, 740, 848, 931, 937, 941, 945, 959, 1043, 1058, 1061, 1082, 1083, 1092, 1093, 1103, 1106, 1107, 1110, 1111, 1140, 1150, 1216, 1218, 1239, 1241, 1243, 1254, 1256, 1318, 1319, 1325, 1326, 1329, 1330, 1343, 1362, 1363, 1415, 1416, 1431, 1432, 1441, 1444, 1509, 1510, 1556, 1559, 1560, 1646, 1647, 1659, 1661, 1662, 1663, 1664, 1665, 1671, 1674, 1675, 1676, 1680, 1686, 1688, 1689, 1693, 1697, 1733, 1740, 1749, 1753, 1763, 1768, 1778, 1785, 1793, 1819, 1820, 1824, 1826, 1835, 1841, 1848, 1857, 1861, 1867, 1887, 1891, 1896, 1897, 1898, 1900, 1901, 1902, 1910, 1914, 1915, 1917, 1921], "727m": 2, "55": [2, 1373, 1898], "483m": 2, "accumulategrad": [2, 1880], "148m": 2, "graphroot": 2, "691": 2, "816u": 2, "emit": [2, 29, 47, 52, 68, 674, 1202, 1755, 1860, 1866, 1899, 1909, 1914], "nvtx": [2, 5, 1855], "off": [2, 8, 9, 15, 19, 22, 29, 38, 46, 60, 68, 914, 916, 925, 1021, 1117, 1144, 1145, 1184, 1202, 1250, 1332, 1333, 1334, 1336, 1412, 1413, 1414, 1518, 1556, 1750, 1882, 1883, 1884, 1887, 1890, 1894, 1904, 1905, 1906, 1910, 1911], "o": [2, 26, 36, 38, 39, 44, 56, 57, 58, 68, 1187, 1258, 1300, 1301, 1302, 1390, 1419, 1425, 1599, 1736, 1854, 1861, 1872, 1880, 1883, 1884, 1887, 1897, 1902, 1903, 1910], "trace_nam": 2, "regular": [2, 4, 5, 19, 38, 46, 56, 60, 63, 68, 1003, 1004, 1116, 1234, 1235, 1342, 1357, 1358, 1359, 1360, 1364, 1404, 1418, 1419, 1420, 1421, 1429, 1430, 1511, 1548, 1590, 1601, 1602, 1641, 1662, 1860, 1874, 1875, 1885, 1886, 1890, 1891, 1898, 1902, 1905, 1908, 1910, 1914, 1915, 1922, 1924], "command": [2, 5, 22, 38, 46, 53, 56, 68, 1883, 1889, 1897, 1903, 1904, 1911], "unfortun": [2, 10, 13, 15, 35, 1599, 1880], "wai": [2, 4, 6, 8, 9, 10, 12, 14, 15, 16, 19, 25, 26, 29, 35, 36, 38, 40, 42, 44, 48, 52, 60, 62, 63, 67, 68, 148, 574, 674, 790, 813, 816, 819, 855, 856, 884, 887, 896, 898, 899, 900, 901, 902, 1081, 1083, 1117, 1140, 1187, 1216, 1217, 1232, 1247, 1335, 1363, 1382, 1383, 1384, 1389, 1401, 1402, 1403, 1419, 1447, 1464, 1466, 1510, 1562, 1599, 1609, 1639, 1675, 1679, 1686, 1857, 1859, 1860, 1864, 1866, 1867, 1870, 1872, 1873, 1874, 1880, 1882, 1885, 1886, 1887, 1888, 1891, 1893, 1894, 1897, 1898, 1899, 1901, 1902, 1905, 1910, 1911, 1914, 1918, 1920, 1924], "disk": [2, 35, 1736, 1880, 1891, 1902, 1919], "annot": [2, 18, 19, 24, 48, 53, 68, 909, 1185, 1198, 1857, 1859, 1861, 1898, 1910], "wait": [2, 16, 20, 32, 38, 46, 53, 55, 67, 818, 963, 964, 966, 1036, 1190, 1300, 1301, 1306, 1688, 1858, 1860, 1872, 1882, 1883, 1884, 1900, 1904, 1910], "nvidia": [2, 22, 26, 29, 38, 972, 985, 1013, 1019, 1023, 1037, 1038, 1840, 1855, 1883, 1887, 1889, 1895, 1897, 1905, 1922], "visual": [2, 16, 26, 68, 1288, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1412, 1413, 1414, 1470, 1891, 1897, 1904, 1919], "nvvp": 2, "timelin": [2, 5, 1300, 1301, 1904], "load_nvprof": 2, "repl": [2, 18], "append": [2, 19, 25, 38, 67, 68, 227, 251, 601, 755, 757, 759, 1006, 1050, 1052, 1281, 1372, 1390, 1421, 1430, 1436, 1447, 1599, 1858, 1859, 1860, 1880, 1882, 1893, 1897, 1898, 1900, 1919], "size": [2, 3, 4, 8, 13, 14, 15, 16, 26, 32, 35, 36, 38, 40, 44, 46, 55, 60, 63, 68, 136, 206, 219, 239, 251, 252, 310, 312, 318, 336, 441, 442, 443, 445, 483, 488, 493, 494, 495, 508, 510, 512, 515, 538, 539, 540, 560, 575, 577, 578, 579, 581, 582, 600, 601, 611, 612, 684, 685, 687, 689, 690, 691, 693, 714, 722, 723, 729, 735, 736, 737, 739, 740, 750, 758, 760, 761, 762, 763, 773, 779, 780, 781, 790, 852, 859, 871, 872, 874, 886, 895, 896, 897, 898, 899, 900, 911, 915, 916, 918, 925, 927, 928, 929, 930, 931, 938, 939, 940, 941, 959, 960, 962, 968, 974, 975, 977, 1017, 1041, 1042, 1048, 1051, 1058, 1060, 1061, 1062, 1063, 1066, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1113, 1114, 1115, 1122, 1123, 1128, 1129, 1144, 1145, 1149, 1150, 1161, 1164, 1184, 1187, 1208, 1217, 1226, 1231, 1239, 1243, 1247, 1250, 1252, 1253, 1254, 1256, 1257, 1259, 1267, 1273, 1274, 1276, 1277, 1281, 1284, 1286, 1287, 1288, 1289, 1292, 1293, 1294, 1295, 1296, 1309, 1311, 1314, 1317, 1319, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1362, 1363, 1365, 1366, 1367, 1368, 1371, 1373, 1374, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1431, 1432, 1434, 1440, 1441, 1442, 1443, 1444, 1445, 1450, 1458, 1462, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1491, 1496, 1497, 1498, 1501, 1502, 1509, 1510, 1513, 1514, 1518, 1529, 1536, 1542, 1543, 1544, 1553, 1554, 1556, 1559, 1560, 1562, 1568, 1587, 1588, 1589, 1590, 1599, 1622, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1643, 1645, 1647, 1650, 1651, 1664, 1673, 1692, 1693, 1694, 1695, 1697, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1726, 1731, 1740, 1743, 1762, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1796, 1798, 1799, 1800, 1801, 1804, 1805, 1806, 1819, 1820, 1821, 1826, 1828, 1836, 1837, 1838, 1839, 1842, 1843, 1845, 1846, 1847, 1848, 1852, 1853, 1855, 1856, 1857, 1858, 1860, 1868, 1870, 1873, 1874, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1895, 1896, 1898, 1900, 1903, 1904, 1905, 1907, 1914, 1916, 1917, 1919, 1920], "arg0": [2, 38], "arg1": [2, 38, 53, 54, 56], "order": [2, 4, 6, 12, 14, 16, 23, 26, 38, 39, 40, 42, 44, 56, 60, 61, 66, 67, 68, 148, 189, 206, 310, 312, 314, 318, 328, 399, 483, 674, 786, 787, 796, 848, 870, 887, 888, 901, 907, 908, 926, 937, 964, 1006, 1017, 1048, 1051, 1052, 1060, 1078, 1080, 1081, 1087, 1099, 1100, 1101, 1102, 1118, 1128, 1140, 1187, 1206, 1217, 1223, 1225, 1232, 1239, 1242, 1243, 1250, 1251, 1254, 1256, 1259, 1288, 1294, 1307, 1309, 1327, 1336, 1342, 1356, 1419, 1420, 1429, 1446, 1447, 1483, 1491, 1518, 1542, 1543, 1544, 1568, 1590, 1599, 1608, 1618, 1632, 1633, 1634, 1635, 1646, 1664, 1686, 1692, 1695, 1705, 1740, 1743, 1768, 1778, 1805, 1823, 1830, 1832, 1837, 1840, 1841, 1847, 1854, 1855, 1857, 1858, 1860, 1861, 1872, 1873, 1874, 1875, 1878, 1881, 1883, 1884, 1885, 1886, 1888, 1891, 1894, 1898, 1901, 1902, 1903, 1905, 1907, 1910, 1911, 1912, 1914, 1915, 1917, 1921, 1924], "side": [2, 19, 29, 38, 55, 57, 65, 68, 762, 763, 766, 767, 768, 995, 1054, 1076, 1077, 1079, 1082, 1083, 1088, 1090, 1091, 1092, 1093, 1096, 1184, 1185, 1231, 1236, 1247, 1249, 1332, 1333, 1334, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1395, 1396, 1397, 1398, 1399, 1400, 1412, 1413, 1414, 1440, 1441, 1443, 1444, 1445, 1470, 1474, 1475, 1476, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1542, 1543, 1544, 1556, 1680, 1709, 1710, 1740, 1801, 1828, 1854, 1857, 1858, 1860, 1879, 1880, 1883, 1885, 1888, 1910], "creation": [2, 3, 14, 19, 35, 38, 40, 68, 739, 740, 750, 758, 818, 963, 1117, 1599, 1600, 1613, 1857, 1861, 1870, 1872, 1880, 1883, 1910, 1912, 1914, 1920], "warmup": [2, 4, 16, 1006, 1883, 1904], "correl": [2, 44, 56, 955, 1347, 1348, 1349, 1350, 1351, 1352, 1358, 1359, 1360, 1364], "view": [2, 8, 9, 14, 15, 22, 25, 26, 27, 32, 35, 36, 40, 42, 46, 60, 68, 220, 251, 431, 492, 493, 494, 601, 612, 686, 691, 754, 872, 880, 881, 882, 890, 929, 941, 952, 953, 1050, 1051, 1058, 1099, 1100, 1101, 1102, 1117, 1150, 1162, 1187, 1242, 1253, 1301, 1363, 1371, 1389, 1419, 1434, 1470, 1471, 1472, 1473, 1510, 1555, 1595, 1596, 1599, 1603, 1695, 1727, 1731, 1732, 1736, 1742, 1743, 1774, 1793, 1804, 1815, 1820, 1824, 1836, 1845, 1846, 1848, 1855, 1856, 1857, 1858, 1872, 1874, 1875, 1881, 1885, 1900, 1907, 1912, 1914, 1916, 1917, 1920], "difficult": [2, 8, 10, 15, 16, 21, 26, 65, 1128, 1847], "eas": [2, 14, 25, 68, 1882, 1885, 1889], "seq": [2, 599, 754, 934, 946, 1288, 1371, 1389, 1425, 1434, 1462, 1464, 1466, 1635, 1835], "n": [2, 4, 19, 38, 40, 43, 44, 46, 48, 53, 56, 68, 227, 257, 403, 461, 462, 680, 683, 684, 685, 729, 752, 754, 775, 871, 911, 915, 916, 918, 925, 927, 931, 937, 938, 939, 959, 1041, 1042, 1052, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1120, 1123, 1128, 1140, 1144, 1145, 1149, 1184, 1187, 1198, 1202, 1203, 1206, 1207, 1216, 1217, 1218, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1259, 1267, 1276, 1281, 1283, 1288, 1291, 1311, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1391, 1401, 1402, 1403, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1422, 1423, 1424, 1425, 1426, 1428, 1434, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1450, 1452, 1453, 1454, 1458, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1483, 1489, 1501, 1502, 1510, 1514, 1518, 1553, 1556, 1558, 1568, 1599, 1606, 1617, 1626, 1645, 1692, 1693, 1694, 1699, 1704, 1705, 1711, 1717, 1719, 1732, 1740, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1782, 1783, 1799, 1800, 1801, 1805, 1806, 1820, 1821, 1826, 1830, 1832, 1841, 1842, 1843, 1844, 1847, 1856, 1858, 1860, 1864, 1873, 1874, 1878, 1880, 1883, 1885, 1887, 1888, 1902, 1904, 1905, 1906, 1914, 1915, 1919, 1920, 1921], "counter": [2, 38, 999, 1017, 1162, 1356, 1870, 1872, 1880], "increment": [2, 38, 55, 1113, 1149, 1191, 1356, 1857, 1859, 1880, 1910], "stash": [2, 6, 1883, 1885, 1903], "tell": [2, 8, 68, 491, 1188, 1194, 1258, 1657, 1857, 1867, 1880, 1885, 1886, 1902], "top": [2, 4, 8, 9, 13, 22, 35, 40, 43, 44, 48, 60, 64, 68, 741, 911, 1335, 1336, 1355, 1379, 1386, 1410, 1426, 1468, 1471, 1518, 1613, 1617, 1619, 1769, 1823, 1861, 1867, 1872, 1885, 1901], "m": [2, 5, 9, 18, 36, 38, 43, 44, 52, 56, 68, 680, 683, 684, 685, 714, 722, 723, 732, 733, 734, 735, 736, 737, 739, 740, 750, 752, 758, 808, 854, 855, 856, 915, 927, 931, 935, 940, 1073, 1126, 1149, 1185, 1187, 1192, 1193, 1197, 1198, 1204, 1207, 1218, 1226, 1232, 1233, 1234, 1235, 1239, 1240, 1241, 1243, 1244, 1245, 1250, 1251, 1252, 1253, 1259, 1276, 1277, 1281, 1291, 1309, 1311, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1367, 1368, 1369, 1370, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1383, 1384, 1387, 1388, 1405, 1406, 1408, 1409, 1412, 1413, 1414, 1418, 1419, 1426, 1427, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1469, 1471, 1472, 1473, 1474, 1475, 1476, 1556, 1558, 1599, 1606, 1611, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1639, 1640, 1643, 1692, 1693, 1694, 1704, 1711, 1740, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1782, 1783, 1801, 1805, 1806, 1821, 1828, 1857, 1858, 1859, 1860, 1883, 1885, 1887, 1888, 1891, 1896, 1905, 1914, 1924], "compar": [2, 4, 6, 22, 29, 35, 60, 68, 688, 859, 870, 901, 1017, 1064, 1065, 1088, 1089, 1090, 1094, 1095, 1096, 1097, 1106, 1107, 1131, 1143, 1162, 1176, 1211, 1275, 1285, 1290, 1320, 1425, 1599, 1644, 1750, 1860, 1870, 1883, 1885, 1888, 1894, 1897, 1905, 1906, 1910, 1914, 1919, 1921, 1923, 1924], "down": [2, 8, 26, 29, 35, 44, 46, 53, 54, 56, 60, 68, 773, 1017, 1055, 1102, 1108, 1196, 1232, 1529, 1705, 1733, 1890, 1893, 1898, 1910, 1912, 1919], "irrelev": [2, 4, 1861], "simpli": [2, 4, 14, 16, 21, 29, 35, 44, 48, 56, 67, 68, 857, 1117, 1174, 1185, 1331, 1357, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1857, 1859, 1880, 1886, 1888, 1891, 1892, 1904, 1914], "hand": [2, 5, 15, 19, 38, 60, 65, 68, 1054, 1060, 1185, 1231, 1236, 1247, 1249, 1331, 1429, 1447, 1828, 1840, 1857, 1859, 1860, 1880, 1888, 1891, 1896, 1902, 1914], "underwai": [2, 1001, 1883], "up": [2, 7, 8, 9, 10, 13, 15, 18, 19, 20, 21, 26, 29, 35, 36, 38, 42, 44, 46, 48, 52, 54, 55, 57, 58, 63, 68, 773, 779, 884, 1003, 1004, 1006, 1043, 1060, 1089, 1090, 1095, 1097, 1102, 1117, 1178, 1191, 1196, 1199, 1200, 1245, 1327, 1342, 1366, 1425, 1464, 1466, 1470, 1471, 1483, 1509, 1518, 1529, 1587, 1599, 1675, 1711, 1733, 1837, 1838, 1854, 1857, 1859, 1864, 1867, 1870, 1872, 1873, 1874, 1880, 1881, 1882, 1883, 1887, 1888, 1889, 1891, 1894, 1898, 1902, 1904, 1905, 1910, 1911, 1921], "nonzero": [2, 14, 15, 60, 1184, 1268, 1270, 1271, 1276, 1850, 1856, 1858, 1900], "themselv": [2, 10, 44, 55, 60, 787, 835, 1823, 1883, 1902, 1925], "did": [2, 8, 9, 18, 19, 38, 55, 1316, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1859, 1860, 1888, 1896, 1902], "relationship": [2, 10, 15, 19, 52, 68, 944, 1140, 1468, 1880, 1883, 1896, 1902], "conceptu": [2, 4, 1880, 1886, 1912], "itt": [2, 1904], "intel": [2, 5, 22, 1855, 1897], "r": [2, 19, 26, 44, 66, 148, 883, 885, 887, 901, 902, 935, 946, 955, 1060, 1118, 1120, 1123, 1128, 1129, 1132, 1140, 1198, 1216, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1232, 1233, 1236, 1238, 1245, 1247, 1249, 1250, 1259, 1362, 1363, 1372, 1431, 1432, 1450, 1509, 1510, 1559, 1560, 1606, 1673, 1704, 1847, 1857, 1858, 1859, 1880, 1882, 1885, 1888, 1897, 1917, 1919], "instrument": [2, 4, 36, 1301, 1855, 1890, 1924], "technologi": [2, 1855], "applic": [2, 3, 10, 16, 44, 55, 793, 804, 805, 806, 807, 893, 985, 1122, 1297, 1355, 1356, 1464, 1466, 1501, 1599, 1840, 1855, 1867, 1875, 1880, 1882, 1883, 1884, 1885, 1889, 1890, 1891, 1895, 1898, 1901, 1905, 1910, 1911, 1912, 1914, 1920], "across": [2, 9, 14, 16, 19, 26, 29, 35, 36, 38, 40, 42, 46, 56, 60, 65, 68, 611, 729, 813, 868, 912, 977, 1016, 1017, 1060, 1074, 1128, 1197, 1202, 1288, 1336, 1356, 1366, 1407, 1425, 1427, 1458, 1470, 1488, 1491, 1520, 1536, 1583, 1599, 1618, 1622, 1646, 1736, 1847, 1855, 1857, 1870, 1873, 1875, 1880, 1884, 1887, 1890, 1891, 1893, 1894, 1895, 1901, 1903, 1906, 1910, 1911, 1916, 1919, 1924], "tool": [2, 5, 9, 10, 16, 18, 20, 26, 32, 38, 56, 68, 855, 910, 1301, 1780, 1854, 1855, 1857, 1859, 1882, 1883, 1897, 1898, 1902, 1904, 1924], "With": [2, 16, 19, 22, 26, 32, 35, 38, 44, 60, 67, 733, 734, 735, 736, 737, 779, 1017, 1081, 1082, 1083, 1091, 1092, 1093, 1203, 1337, 1338, 1339, 1348, 1349, 1351, 1352, 1365, 1382, 1383, 1384, 1458, 1469, 1471, 1494, 1497, 1529, 1554, 1587, 1672, 1715, 1861, 1880, 1883, 1885, 1910, 1914, 1919], "abl": [2, 3, 8, 9, 12, 14, 15, 16, 21, 26, 32, 38, 40, 55, 65, 1117, 1185, 1197, 1462, 1599, 1857, 1864, 1873, 1880, 1885, 1886, 1896, 1898, 1902, 1905, 1910, 1914, 1921], "labl": 2, "gui": 2, "detect_anomali": 2, "check_nan": 2, "engin": [2, 9, 10, 16, 27, 30, 332, 735, 736, 737, 891, 901, 1128, 1711, 1847, 1855, 1880, 1883, 1884, 1885, 1910, 1911], "traceback": [2, 26, 32, 48, 56, 67, 68, 1162, 1172, 1780, 1859, 1860, 1861, 1872, 1875, 1885, 1895, 1914, 1921], "fail": [2, 8, 12, 13, 14, 16, 19, 20, 26, 38, 44, 46, 47, 48, 53, 54, 55, 56, 58, 67, 68, 71, 902, 903, 964, 1017, 1188, 1194, 1197, 1216, 1245, 1250, 1258, 1259, 1276, 1655, 1860, 1862, 1872, 1880, 1883, 1885, 1893, 1894, 1897, 1898, 1902, 1910], "test": [2, 4, 15, 16, 17, 26, 29, 32, 38, 43, 53, 55, 56, 68, 687, 693, 947, 1077, 1079, 1080, 1085, 1086, 1091, 1092, 1093, 1095, 1097, 1173, 1174, 1178, 1179, 1181, 1182, 1656, 1770, 1855, 1857, 1861, 1870, 1872, 1880, 1888, 1895, 1898, 1901, 1919, 1924, 1925], "slow": [2, 15, 902, 1196, 1200, 1216, 1217, 1603, 1604, 1639, 1837, 1888, 1893, 1919], "myfunc": [2, 1886], "inp": [2, 35, 38, 68, 888, 889, 890, 1470, 1599, 1856, 1925], "clone": [2, 30, 35, 60, 251, 444, 891, 894, 905, 907, 908, 929, 1191, 1362, 1586, 1819, 1828, 1856, 1858, 1872, 1875, 1896, 1900, 1904, 1914, 1916, 1917, 1921], "run_fn": [2, 6, 851, 857], "10": [2, 12, 13, 16, 18, 19, 20, 26, 34, 35, 36, 38, 39, 44, 45, 55, 57, 310, 318, 332, 467, 508, 554, 575, 577, 578, 579, 679, 680, 691, 728, 739, 740, 754, 755, 756, 757, 759, 915, 927, 937, 939, 940, 941, 945, 959, 1039, 1040, 1041, 1042, 1043, 1058, 1060, 1077, 1079, 1082, 1083, 1085, 1086, 1089, 1090, 1092, 1093, 1095, 1097, 1103, 1111, 1130, 1140, 1150, 1176, 1192, 1197, 1198, 1204, 1209, 1212, 1239, 1241, 1242, 1257, 1259, 1261, 1266, 1268, 1269, 1270, 1271, 1273, 1281, 1292, 1309, 1325, 1326, 1327, 1329, 1330, 1336, 1339, 1342, 1343, 1346, 1349, 1352, 1362, 1363, 1371, 1372, 1373, 1374, 1384, 1389, 1390, 1391, 1416, 1420, 1421, 1426, 1429, 1430, 1434, 1436, 1458, 1462, 1463, 1464, 1465, 1466, 1470, 1476, 1495, 1498, 1502, 1509, 1510, 1520, 1590, 1599, 1622, 1630, 1644, 1647, 1656, 1660, 1680, 1686, 1688, 1706, 1707, 1715, 1740, 1753, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1778, 1793, 1805, 1806, 1816, 1820, 1821, 1824, 1826, 1840, 1848, 1854, 1857, 1858, 1859, 1860, 1861, 1867, 1880, 1883, 1884, 1891, 1894, 1895, 1896, 1897, 1898, 1900, 1914, 1915, 1917, 1919, 1920, 1921, 1926], "last": [2, 6, 7, 12, 26, 27, 35, 36, 39, 42, 43, 44, 55, 67, 68, 312, 611, 686, 754, 871, 916, 925, 931, 941, 1003, 1043, 1048, 1052, 1077, 1079, 1082, 1083, 1085, 1086, 1089, 1090, 1092, 1093, 1095, 1097, 1099, 1144, 1145, 1149, 1162, 1164, 1172, 1184, 1208, 1242, 1245, 1250, 1287, 1292, 1327, 1340, 1355, 1363, 1365, 1371, 1389, 1391, 1406, 1426, 1429, 1433, 1434, 1447, 1463, 1464, 1470, 1489, 1510, 1519, 1532, 1555, 1556, 1599, 1600, 1645, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1731, 1740, 1778, 1780, 1787, 1788, 1789, 1791, 1792, 1793, 1801, 1805, 1821, 1823, 1826, 1845, 1846, 1859, 1860, 1870, 1873, 1875, 1880, 1883, 1885, 1888, 1895, 1898, 1902, 1903, 1914, 1920, 1921], "stdin": [2, 1162, 1780, 1875, 1885, 1895, 1914], "instal": [2, 4, 12, 14, 19, 21, 29, 30, 38, 68, 1854, 1891, 1892, 1898, 1902, 1910, 1919], "_tensor": [2, 152], "py": [2, 5, 12, 13, 14, 15, 16, 18, 19, 22, 25, 26, 29, 32, 38, 42, 44, 47, 54, 56, 60, 68, 854, 1599, 1854, 1857, 1860, 1866, 1884, 1888, 1890, 1898, 1902, 1905, 1911], "93": [2, 611], "retain_graph": [2, 148, 887, 901, 907, 908, 1128, 1847, 1858, 1879, 1880, 1910], "90": [2, 1044, 1690, 1732], "allow_unreach": 2, "76": 2, "_forward_cl": 2, "tmp": [2, 4, 29, 38, 53, 55, 1854, 1883, 1904], "53": [2, 477], "44": [2, 13, 318, 441, 1063, 1334, 1414, 1639], "set_detect_anomali": 2, "behaviour": [2, 687, 688, 693, 960, 1518, 1556, 1686, 1755, 1854, 1894], "interpos": 2, "grad_fn": [2, 148, 332, 874, 887, 895, 896, 897, 898, 899, 900, 905, 907, 908, 1116, 1607, 1782, 1880, 1891, 1896], "node": [2, 14, 15, 16, 22, 25, 26, 38, 42, 46, 48, 54, 55, 60, 68, 80, 83, 84, 813, 814, 815, 818, 819, 820, 1006, 1126, 1201, 1342, 1356, 1599, 1656, 1868, 1883, 1898, 1899, 1902, 1903, 1910, 1911, 1912, 1922, 1924], "grad_mod": [2, 1858], "intermediari": [2, 29, 44, 893, 1880, 1888], "access": [2, 10, 14, 15, 16, 18, 21, 32, 35, 38, 40, 60, 67, 551, 728, 893, 970, 1187, 1190, 1202, 1249, 1327, 1419, 1590, 1601, 1602, 1607, 1611, 1633, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1855, 1857, 1858, 1860, 1861, 1864, 1868, 1871, 1872, 1874, 1875, 1880, 1883, 1887, 1888, 1890, 1891, 1910, 1914, 1917, 1918, 1920, 1926], "isinst": [2, 25, 26, 35, 44, 68, 905, 907, 908, 1174, 1185, 1858, 1860, 1880, 1885, 1891, 1902, 1914], "dir": [2, 1003, 1656, 1854, 1860, 1902], "__call__": [2, 1187, 1419], "__class__": 2, "__delattr__": 2, "__dir__": 2, "__doc__": 2, "__eq__": 2, "__format__": [2, 1861], "__ge__": 2, "__getattribute__": 2, "__gt__": 2, "__hash__": [2, 1861], "__init_subclass__": 2, "__le__": 2, "__lt__": [2, 1860], "__ne__": 2, "__new__": [2, 1859, 1861], "__reduce__": [2, 1902], "__reduce_ex__": 2, "__repr__": [2, 4, 1885], "__setattr__": 2, "__sizeof__": 2, "__str__": [2, 68, 1858, 1860], "__subclasshook__": 2, "_raw_saved_result": 2, "_register_hook_dict": 2, "_saved_result": [2, 1880], "metadata": [2, 4, 15, 25, 40, 48, 49, 1258, 1736, 1875, 1880, 1885, 1886, 1896, 1902, 1904, 1910, 1911, 1919], "next_funct": 2, "register_prehook": [2, 1880], "allclos": [2, 65, 66, 68, 902, 903, 1003, 1082, 1083, 1089, 1090, 1117, 1118, 1120, 1121, 1122, 1123, 1127, 1128, 1234, 1236, 1247, 1249, 1252, 1253, 1278, 1611, 1638, 1704, 1847, 1858, 1886, 1900], "pack": [2, 42, 732, 733, 734, 735, 736, 737, 739, 740, 754, 775, 1202, 1203, 1278, 1356, 1371, 1389, 1434, 1632, 1633, 1634, 1635, 1858, 1868, 1875, 1880, 1887, 1897, 1905], "unpack": [2, 754, 890, 1202, 1234, 1278, 1356, 1635, 1637, 1644, 1657, 1860, 1861, 1880, 1885, 1887], "common": [2, 4, 9, 14, 19, 21, 24, 25, 26, 35, 46, 55, 65, 679, 787, 859, 920, 923, 928, 954, 1055, 1060, 1105, 1106, 1107, 1108, 1130, 1209, 1258, 1308, 1337, 1338, 1339, 1342, 1458, 1500, 1591, 1592, 1594, 1595, 1596, 1597, 1598, 1724, 1736, 1802, 1855, 1860, 1865, 1874, 1880, 1883, 1885, 1886, 1887, 1891, 1893, 1896, 1898, 1902, 1914, 1915, 1918, 1921], "trade": [2, 6, 9, 60, 1250, 1336, 1882, 1887, 1906], "leav": [2, 9, 19, 46, 56, 148, 887, 1192, 1204, 1609, 1612, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1796, 1857, 1859, 1860, 1880, 1902, 1906], "especi": [2, 10, 15, 16, 17, 18, 19, 27, 35, 38, 68, 251, 929, 947, 1586, 1859, 1880, 1885, 1886, 1894, 1896, 1905, 1910, 1914], "notic": [2, 21, 38, 683, 1080, 1094, 1281, 1291, 1335, 1471, 1535, 1677, 1678, 1683, 1684, 1690, 1855, 1857, 1880, 1914], "fit": [2, 10, 26, 47, 64, 65, 494, 911, 1184, 1664, 1726, 1903, 1921], "evalu": [2, 5, 9, 10, 14, 15, 23, 42, 43, 44, 63, 68, 687, 693, 792, 857, 902, 1017, 1123, 1124, 1187, 1327, 1331, 1337, 1338, 1339, 1357, 1374, 1382, 1383, 1384, 1391, 1419, 1433, 1437, 1458, 1561, 1583, 1609, 1664, 1680, 1711, 1860, 1861, 1885, 1891, 1914, 1922], "saved_tensors_hook": [2, 893, 1880], "pack_hook": [2, 1880], "unpack_hook": [2, 1880], "pair": [2, 16, 38, 40, 43, 44, 55, 57, 611, 729, 859, 935, 959, 1094, 1200, 1250, 1288, 1411, 1420, 1425, 1429, 1558, 1673, 1720, 1859, 1860, 1866, 1873, 1880, 1883, 1903, 1910, 1911, 1912, 1919, 1921, 1924], "retriev": [2, 19, 35, 36, 38, 42, 46, 55, 68, 531, 883, 884, 1362, 1366, 1470, 1509, 1599, 1633, 1656, 1780, 1875, 1880, 1890, 1898, 1902, 1903, 1910, 1911, 1912], "everytim": 2, "store": [2, 4, 6, 15, 18, 19, 29, 32, 36, 40, 46, 56, 60, 68, 323, 329, 395, 680, 816, 819, 884, 927, 973, 975, 977, 1132, 1187, 1194, 1197, 1217, 1228, 1229, 1230, 1259, 1264, 1276, 1338, 1362, 1419, 1447, 1599, 1606, 1608, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1632, 1785, 1854, 1855, 1857, 1874, 1875, 1876, 1884, 1885, 1886, 1887, 1890, 1902, 1905, 1910, 1911, 1912, 1914, 1916, 1919, 1920, 1924], "content": [2, 4, 8, 21, 26, 40, 48, 68, 893, 1194, 1197, 1217, 1228, 1230, 1235, 1248, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1796, 1825, 1854, 1860, 1869, 1872, 1880, 1910, 1918, 1919, 1920], "equal": [2, 25, 36, 38, 44, 55, 56, 57, 68, 257, 494, 539, 611, 674, 688, 689, 690, 733, 734, 735, 736, 737, 754, 762, 763, 814, 815, 816, 819, 855, 870, 916, 925, 936, 937, 949, 959, 975, 977, 1030, 1049, 1065, 1104, 1118, 1119, 1131, 1144, 1145, 1147, 1148, 1149, 1172, 1176, 1211, 1232, 1245, 1249, 1252, 1253, 1276, 1277, 1288, 1304, 1320, 1324, 1325, 1326, 1328, 1329, 1330, 1335, 1336, 1342, 1348, 1349, 1351, 1352, 1356, 1363, 1366, 1367, 1368, 1371, 1373, 1389, 1424, 1425, 1433, 1434, 1470, 1486, 1487, 1491, 1494, 1497, 1509, 1510, 1513, 1514, 1520, 1599, 1633, 1636, 1692, 1705, 1762, 1763, 1768, 1793, 1801, 1820, 1836, 1850, 1858, 1861, 1867, 1873, 1874, 1875, 1880, 1881, 1888, 1894, 1900, 1901, 1903, 1915, 1919, 1921], "term": [2, 9, 10, 14, 44, 55, 68, 552, 728, 757, 786, 937, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1091, 1092, 1093, 1096, 1108, 1218, 1327, 1335, 1373, 1380, 1389, 1390, 1424, 1433, 1450, 1515, 1527, 1561, 1572, 1599, 1606, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1724, 1769, 1855, 1860, 1879, 1880, 1885, 1886, 1887, 1888, 1898, 1902, 1905, 1911, 1914], "mulbackward0": [2, 896, 899, 900], "inplac": [2, 25, 63, 65, 68, 749, 752, 770, 772, 774, 785, 791, 808, 832, 833, 834, 851, 852, 857, 891, 1117, 1187, 1331, 1341, 1357, 1358, 1359, 1360, 1361, 1364, 1376, 1377, 1378, 1405, 1418, 1419, 1437, 1438, 1439, 1446, 1448, 1461, 1484, 1492, 1503, 1504, 1505, 1506, 1507, 1511, 1522, 1523, 1524, 1533, 1548, 1563, 1564, 1566, 1569, 1571, 1581, 1593, 1840, 1856, 1858, 1867, 1880, 1885, 1898, 1924], "lead": [2, 6, 8, 34, 38, 45, 60, 66, 68, 891, 895, 897, 901, 903, 1111, 1128, 1217, 1389, 1434, 1450, 1796, 1847, 1860, 1874, 1875, 1880, 1882, 1884, 1885, 1886, 1894, 1897, 1901, 1902, 1905, 1914, 1919, 1920], "undefin": [2, 38, 45, 48, 60, 316, 467, 611, 872, 894, 902, 903, 931, 1063, 1112, 1113, 1335, 1655, 1698, 1880, 1883, 1885, 1886], "inner": [2, 4, 60, 61, 66, 809, 811, 895, 1043, 1118, 1122, 1127, 1826, 1858, 1900, 1910, 1924], "save_on_cpu": 2, "pin_memori": [2, 35, 441, 442, 443, 444, 445, 1061, 1063, 1713, 1717, 1719, 1819, 1856, 1857, 1858, 1875, 1883, 1900, 1916], "within": [2, 6, 10, 14, 16, 18, 25, 26, 35, 36, 38, 42, 43, 44, 55, 56, 57, 60, 67, 68, 86, 872, 902, 903, 967, 1043, 1187, 1191, 1279, 1332, 1333, 1334, 1342, 1358, 1359, 1360, 1364, 1366, 1412, 1413, 1414, 1419, 1425, 1458, 1470, 1518, 1542, 1543, 1544, 1599, 1609, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1625, 1626, 1627, 1628, 1629, 1709, 1710, 1740, 1762, 1839, 1857, 1859, 1860, 1870, 1875, 1878, 1882, 1883, 1885, 1889, 1890, 1891, 1894, 1898, 1901, 1902, 1905, 1908, 1909, 1910, 1911, 1919], "move": [2, 6, 8, 9, 10, 19, 26, 29, 38, 40, 60, 68, 518, 583, 815, 1080, 1187, 1194, 1253, 1258, 1294, 1337, 1338, 1339, 1392, 1393, 1394, 1419, 1458, 1556, 1601, 1602, 1672, 1859, 1868, 1869, 1872, 1874, 1883, 1886, 1887, 1891, 1892, 1893, 1901, 1902, 1903, 1910, 1916, 1921], "copi": [2, 8, 15, 18, 25, 27, 35, 36, 38, 40, 46, 53, 60, 64, 65, 68, 188, 194, 204, 207, 312, 399, 444, 454, 459, 467, 488, 494, 574, 575, 576, 577, 597, 611, 786, 808, 832, 833, 873, 874, 889, 936, 944, 973, 974, 1099, 1100, 1101, 1102, 1104, 1117, 1187, 1198, 1259, 1319, 1356, 1366, 1419, 1429, 1470, 1599, 1632, 1721, 1727, 1733, 1819, 1828, 1834, 1857, 1858, 1872, 1875, 1880, 1881, 1883, 1885, 1893, 1900, 1902, 1903, 1904, 1905, 1910, 1914, 1916, 1917, 1918, 1920, 1924], "pin": [2, 207, 334, 441, 442, 443, 444, 445, 459, 574, 597, 1061, 1063, 1187, 1419, 1632, 1713, 1717, 1719, 1819, 1855, 1875, 1916], "asynchron": [2, 4, 5, 67, 194, 207, 574, 597, 986, 1187, 1190, 1205, 1419, 1855, 1861, 1882, 1884, 1910, 1916, 1919], "prod_1": 2, "prod_2": 2, "del": [2, 1861, 1872, 1885, 1887], "illustr": [2, 19, 1860, 1879, 1885, 1914], "aliv": [2, 35, 46, 55, 964, 1880, 1883, 1887, 1893, 1910, 1911, 1912], "live": [2, 15, 42, 1003, 1006, 1187, 1419, 1857, 1883, 1887, 1910, 1912], "releas": [2, 8, 26, 34, 38, 55, 57, 64, 68, 508, 681, 937, 938, 960, 961, 962, 968, 985, 995, 996, 999, 1003, 1004, 1006, 1017, 1133, 1187, 1217, 1228, 1230, 1231, 1232, 1235, 1248, 1276, 1277, 1297, 1359, 1389, 1419, 1434, 1542, 1543, 1544, 1646, 1704, 1720, 1736, 1801, 1805, 1828, 1854, 1855, 1859, 1870, 1872, 1880, 1882, 1883, 1889, 1894, 1895, 1896, 1897, 1898, 1905, 1910, 1920, 1921], "delet": [2, 25, 38, 68, 888, 961, 969, 1854, 1868, 1872, 1880, 1900, 1909, 1910, 1912], "disable_saved_tensors_hook": 2, "error_messag": 2, "featur": [2, 6, 9, 10, 18, 20, 27, 30, 32, 38, 40, 42, 56, 61, 67, 674, 683, 754, 762, 763, 895, 897, 901, 1034, 1198, 1281, 1291, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1337, 1352, 1357, 1358, 1359, 1360, 1364, 1367, 1368, 1371, 1372, 1382, 1389, 1390, 1425, 1434, 1436, 1453, 1462, 1464, 1466, 1467, 1468, 1469, 1486, 1487, 1504, 1505, 1506, 1511, 1513, 1514, 1535, 1599, 1694, 1840, 1855, 1857, 1859, 1860, 1861, 1864, 1866, 1874, 1875, 1880, 1885, 1887, 1888, 1895, 1898, 1899, 1904, 1905, 1910, 1914, 1919], "messag": [2, 3, 26, 32, 38, 48, 57, 65, 68, 81, 618, 674, 1020, 1022, 1216, 1217, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1854, 1857, 1858, 1860, 1861, 1866, 1887, 1898, 1903, 1904, 1910, 1912, 1921], "get": [2, 9, 14, 15, 19, 20, 23, 24, 26, 29, 35, 38, 39, 40, 55, 56, 57, 58, 60, 65, 67, 68, 86, 148, 332, 680, 728, 782, 783, 855, 856, 887, 890, 931, 988, 989, 990, 1007, 1047, 1117, 1120, 1121, 1122, 1134, 1162, 1202, 1254, 1362, 1363, 1387, 1388, 1415, 1416, 1417, 1429, 1446, 1599, 1600, 1607, 1633, 1640, 1725, 1740, 1854, 1855, 1857, 1860, 1870, 1872, 1873, 1880, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1900, 1902, 1905, 1910, 1912, 1914, 1918, 1919, 1920, 1925], "register_multi_grad_hook": [2, 1880], "multi": [2, 5, 43, 46, 55, 754, 964, 1007, 1027, 1060, 1080, 1149, 1187, 1336, 1356, 1371, 1389, 1419, 1422, 1423, 1424, 1425, 1434, 1462, 1464, 1471, 1491, 1599, 1855, 1857, 1860, 1880, 1882, 1883, 1891, 1895, 1901, 1910, 1914, 1917, 1920, 1922], "ignor": [2, 6, 8, 21, 25, 38, 42, 47, 53, 60, 68, 148, 494, 538, 680, 683, 684, 685, 729, 788, 789, 852, 855, 856, 868, 887, 901, 902, 903, 915, 937, 959, 1007, 1008, 1027, 1028, 1081, 1083, 1091, 1092, 1093, 1132, 1147, 1187, 1198, 1204, 1207, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1278, 1314, 1315, 1316, 1332, 1333, 1334, 1335, 1336, 1353, 1355, 1363, 1371, 1373, 1379, 1385, 1386, 1389, 1410, 1411, 1412, 1413, 1414, 1419, 1422, 1423, 1424, 1425, 1426, 1433, 1434, 1450, 1451, 1462, 1467, 1490, 1491, 1501, 1510, 1530, 1553, 1561, 1599, 1646, 1657, 1680, 1688, 1692, 1753, 1783, 1784, 1801, 1805, 1828, 1857, 1860, 1861, 1867, 1874, 1880, 1883, 1885, 1898, 1914, 1921], "rel": [2, 9, 10, 19, 29, 36, 38, 44, 60, 68, 483, 688, 870, 902, 903, 907, 908, 959, 1176, 1241, 1244, 1467, 1468, 1483, 1518, 1657, 1661, 1662, 1688, 1867, 1870, 1882, 1883, 1890, 1898, 1902, 1921], "allow_mutation_on_saved_tensor": 2, "mutat": [2, 15, 16, 24, 68, 791, 832, 833, 851, 852, 1117, 1191, 1902, 1920], "version": [2, 3, 6, 9, 26, 29, 34, 36, 38, 40, 44, 56, 60, 63, 64, 68, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 119, 121, 123, 125, 128, 129, 131, 139, 141, 144, 145, 147, 150, 156, 158, 160, 162, 164, 166, 175, 184, 192, 196, 199, 201, 211, 213, 229, 233, 235, 241, 244, 246, 248, 250, 254, 259, 266, 268, 270, 274, 276, 280, 282, 289, 291, 293, 301, 303, 305, 307, 309, 311, 313, 315, 353, 355, 357, 359, 361, 363, 365, 368, 370, 372, 373, 380, 382, 384, 386, 388, 392, 396, 398, 416, 419, 422, 424, 435, 437, 439, 447, 452, 462, 465, 481, 485, 487, 503, 506, 507, 509, 511, 517, 521, 523, 526, 528, 530, 543, 545, 547, 550, 556, 558, 565, 569, 571, 587, 590, 592, 594, 596, 606, 616, 729, 730, 731, 743, 744, 745, 746, 747, 748, 769, 770, 771, 772, 774, 778, 779, 798, 799, 800, 833, 841, 849, 850, 852, 966, 1006, 1116, 1144, 1162, 1184, 1187, 1190, 1191, 1194, 1197, 1216, 1229, 1230, 1234, 1235, 1248, 1281, 1318, 1336, 1389, 1419, 1420, 1434, 1471, 1483, 1508, 1518, 1525, 1534, 1565, 1567, 1582, 1583, 1587, 1591, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1640, 1641, 1672, 1674, 1675, 1737, 1738, 1739, 1796, 1799, 1800, 1801, 1805, 1825, 1840, 1842, 1843, 1854, 1873, 1874, 1880, 1881, 1883, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1895, 1897, 1898, 1899, 1901, 1902, 1904, 1908, 1914, 1921, 1922], "_allowmutationonsavedcontext": 2, "purpos": [2, 12, 18, 19, 26, 36, 38, 68, 467, 494, 754, 902, 1196, 1281, 1342, 1371, 1425, 1593, 1594, 1595, 1596, 1753, 1870, 1875, 1880, 1902, 1911], "upon": [2, 3, 35, 39, 46, 48, 68, 1599, 1608, 1611, 1872, 1880, 1883, 1898, 1905, 1912], "sin_": [2, 1858, 1873], "8415": [2, 1914], "sinbackward0": 2, "variou": [3, 6, 15, 29, 35, 38, 68, 1259, 1864, 1867, 1872, 1875, 1885, 1891, 1893, 1901, 1905, 1907, 1914, 1925], "get_cpu_cap": 3, "capabl": [3, 9, 29, 30, 38, 988, 1711, 1864, 1883, 1889, 1890, 1892, 1922], "possibl": [3, 10, 12, 14, 15, 16, 19, 20, 21, 26, 29, 30, 32, 38, 40, 44, 64, 65, 68, 492, 493, 574, 611, 852, 873, 874, 941, 970, 1108, 1120, 1187, 1200, 1227, 1240, 1243, 1244, 1247, 1252, 1258, 1336, 1342, 1419, 1425, 1509, 1510, 1529, 1562, 1587, 1611, 1612, 1724, 1727, 1742, 1793, 1801, 1819, 1857, 1859, 1860, 1872, 1873, 1878, 1880, 1882, 1883, 1884, 1885, 1888, 1893, 1894, 1895, 1897, 1902, 1905, 1910, 1912, 1917, 1921], "vsx": 3, "z": [3, 4, 11, 14, 25, 26, 44, 60, 65, 611, 814, 871, 893, 938, 939, 949, 1060, 1064, 1288, 1372, 1518, 1611, 1644, 1645, 1653, 1698, 1728, 1729, 1857, 1858, 1859, 1874, 1880, 1882, 1883, 1888, 1889, 1898, 1902, 1908, 1910, 1912], "vector": [3, 18, 27, 36, 44, 60, 61, 65, 251, 310, 312, 318, 683, 684, 685, 878, 887, 889, 895, 896, 897, 898, 899, 900, 901, 928, 929, 935, 946, 955, 959, 960, 1041, 1042, 1047, 1049, 1123, 1127, 1128, 1132, 1219, 1226, 1234, 1242, 1243, 1247, 1250, 1254, 1255, 1256, 1276, 1281, 1288, 1309, 1311, 1337, 1338, 1339, 1342, 1356, 1362, 1363, 1366, 1374, 1382, 1383, 1384, 1428, 1458, 1467, 1470, 1509, 1510, 1518, 1520, 1554, 1558, 1586, 1603, 1605, 1607, 1611, 1642, 1646, 1693, 1694, 1785, 1805, 1841, 1844, 1847, 1880, 1888, 1905, 1914, 1919], "NO": 3, "avx": 3, "avx2": [3, 1905], "avx512": 3, "is_built": [3, 1892], "built": [3, 4, 8, 9, 12, 13, 19, 26, 29, 36, 38, 43, 48, 63, 68, 948, 986, 1196, 1468, 1680, 1855, 1875, 1880, 1882, 1883, 1885, 1889, 1891, 1892, 1893, 1907, 1925], "necessarili": [3, 36, 38, 44, 46, 55, 467, 902, 1223, 1245, 1256, 1287, 1355, 1426, 1883, 1885], "machin": [3, 38, 46, 55, 60, 61, 66, 1191, 1196, 1232, 1455, 1889, 1890, 1891, 1892, 1895, 1898, 1899, 1902, 1909, 1910, 1911], "driver": [3, 26, 1132, 1232, 1250, 1251, 1296, 1858, 1883, 1894, 1910], "allow_tf32": [3, 1748, 1858, 1883, 1894], "tensorfloat": 3, "core": [3, 4, 8, 9, 14, 17, 19, 20, 22, 64, 947, 1017, 1655, 1860, 1864, 1882, 1883, 1884, 1894, 1902, 1922], "amper": [3, 20], "newer": [3, 18, 29, 1023, 1640, 1882, 1883, 1896, 1899, 1901, 1902, 1906], "tf32": 3, "allow_fp16_reduced_precision_reduct": [3, 1883, 1894], "precis": [3, 4, 9, 22, 27, 29, 36, 44, 60, 680, 683, 902, 903, 915, 927, 1006, 1103, 1136, 1232, 1250, 1256, 1281, 1291, 1332, 1333, 1334, 1336, 1347, 1348, 1349, 1350, 1351, 1352, 1372, 1390, 1406, 1412, 1413, 1414, 1471, 1529, 1568, 1599, 1733, 1748, 1753, 1855, 1860, 1870, 1876, 1880, 1891, 1902, 1905, 1906, 1908, 1915, 1917, 1919, 1920, 1926], "gemm": [3, 16, 1882, 1898], "allow_bf16_reduced_precision_reduct": [3, 1883, 1894], "cufft_plan_cach": [3, 1883], "cufft": 3, "queri": [3, 14, 15, 19, 38, 55, 68, 729, 963, 964, 966, 972, 1019, 1023, 1037, 1038, 1187, 1419, 1425, 1568, 1610, 1858, 1883, 1902], "specif": [3, 4, 8, 9, 10, 14, 15, 18, 19, 22, 25, 26, 29, 38, 40, 42, 44, 46, 53, 55, 57, 60, 65, 68, 86, 508, 848, 855, 911, 966, 1051, 1080, 1149, 1184, 1191, 1196, 1200, 1202, 1203, 1287, 1366, 1391, 1568, 1593, 1594, 1613, 1654, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1743, 1782, 1854, 1857, 1859, 1860, 1862, 1864, 1866, 1870, 1874, 1876, 1880, 1883, 1889, 1893, 1895, 1898, 1901, 1902, 1904, 1905, 1906, 1908, 1910, 1912, 1919, 1920], "via": [3, 8, 12, 14, 15, 16, 19, 21, 24, 29, 30, 35, 38, 40, 44, 53, 60, 64, 68, 512, 611, 902, 903, 934, 961, 997, 1017, 1064, 1120, 1259, 1337, 1338, 1339, 1356, 1374, 1382, 1383, 1384, 1391, 1458, 1606, 1640, 1643, 1686, 1857, 1859, 1860, 1870, 1872, 1875, 1878, 1880, 1883, 1885, 1886, 1887, 1889, 1891, 1893, 1894, 1898, 1902, 1905, 1910, 1911, 1914, 1917, 1918, 1925], "readonli": 3, "show": [3, 5, 8, 17, 20, 22, 26, 28, 32, 35, 36, 38, 40, 45, 60, 68, 895, 901, 947, 1111, 1187, 1288, 1419, 1590, 1656, 1854, 1855, 1860, 1873, 1882, 1883, 1884, 1888, 1889, 1891, 1898, 1901, 1902, 1910, 1912], "max_siz": [3, 54, 56, 1883], "capac": [3, 1030, 1883], "preferred_linalg_librari": 3, "algebra": [3, 10, 1060, 1244, 1855, 1865], "cusolv": [3, 1250, 1251, 1805], "magma": [3, 939, 1232, 1276, 1704, 1805, 1897, 1914], "decid": [3, 5, 8, 15, 16, 38, 55, 64, 1622, 1867, 1898, 1914], "heurist": [3, 16, 26, 29, 35, 55, 56, 68, 1060], "overrid": [3, 25, 29, 36, 38, 39, 44, 48, 56, 60, 65, 68, 786, 787, 848, 884, 886, 1003, 1335, 1336, 1353, 1355, 1379, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1490, 1491, 1501, 1530, 1553, 1561, 1613, 1675, 1736, 1753, 1855, 1860, 1864, 1901, 1902, 1905, 1910, 1919, 1924], "wherev": [3, 10, 19, 1873], "pick": [3, 13, 14, 17, 38, 54, 56, 508, 947, 1880, 1910], "prefer": [3, 10, 35, 40, 46, 60, 856, 872, 897, 1185, 1227, 1240, 1244, 1252, 1259, 1426, 1568, 1740, 1801, 1819, 1857, 1880, 1883, 1902, 1914], "achiev": [3, 26, 35, 36, 38, 44, 56, 60, 1060, 1124, 1187, 1336, 1342, 1419, 1425, 1426, 1491, 1520, 1599, 1883, 1890, 1902, 1910, 1912], "better": [3, 4, 8, 9, 10, 12, 13, 16, 17, 19, 22, 26, 29, 35, 38, 46, 64, 947, 1029, 1116, 1120, 1121, 1162, 1174, 1202, 1355, 1452, 1574, 1599, 1686, 1711, 1860, 1879, 1880, 1882, 1883, 1888, 1897, 1898, 1901, 1904, 1906, 1914, 1919, 1924], "select": [3, 6, 19, 22, 30, 33, 35, 38, 44, 46, 310, 312, 314, 318, 754, 937, 967, 968, 972, 979, 980, 981, 982, 984, 1005, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1029, 1030, 1033, 1035, 1037, 1038, 1080, 1259, 1288, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1371, 1389, 1434, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1568, 1627, 1628, 1743, 1816, 1850, 1856, 1857, 1858, 1860, 1872, 1873, 1874, 1875, 1880, 1882, 1883, 1888, 1895, 1900, 1905, 1914, 1918, 1921], "incorrect": [3, 5, 6, 60, 68, 251, 508, 550, 893, 902, 929, 1202, 1245, 1258, 1425, 1463, 1464, 1465, 1466, 1586, 1646, 1801, 1857, 1860, 1883, 1894, 1898], "linalg": [3, 403, 937, 938, 939, 940, 960, 1046, 1132, 1165, 1267, 1276, 1277, 1278, 1282, 1283, 1606, 1607, 1611, 1646, 1691, 1696, 1698, 1704, 1775, 1805, 1806, 1828, 1844, 1855], "inv": [3, 44, 939, 1165, 1218, 1222, 1228, 1244, 1248, 1252], "inv_ex": 3, "cholesky_ex": [3, 1216], "lu_factor": [3, 1235, 1236, 1276, 1277, 1278], "lu": [3, 11, 1228, 1234, 1235, 1236, 1277, 1278, 1858], "eigh": [3, 1216, 1222, 1225, 1244, 1250, 1894], "eighval": 3, "svdval": [3, 1218, 1232, 1241, 1250, 1805, 1894], "_linalgbackend": 3, "sdpbackend": 3, "enum": [3, 19, 38, 790, 1898, 1905, 1910], "scale": [3, 8, 16, 35, 44, 46, 54, 56, 95, 469, 471, 611, 679, 683, 684, 685, 732, 733, 734, 735, 736, 737, 738, 743, 744, 745, 746, 747, 748, 749, 750, 753, 764, 766, 767, 768, 769, 771, 774, 775, 789, 793, 796, 813, 814, 815, 816, 819, 915, 1074, 1075, 1078, 1096, 1127, 1128, 1273, 1331, 1357, 1362, 1363, 1364, 1380, 1391, 1446, 1471, 1472, 1473, 1509, 1510, 1511, 1527, 1529, 1568, 1569, 1574, 1659, 1680, 1706, 1707, 1708, 1709, 1710, 1783, 1784, 1802, 1847, 1855, 1858, 1874, 1878, 1883, 1887, 1891, 1905, 1906, 1908, 1915], "product": [3, 20, 30, 38, 44, 55, 148, 680, 683, 684, 685, 754, 887, 889, 896, 898, 899, 900, 901, 915, 927, 933, 937, 955, 960, 972, 1019, 1023, 1037, 1038, 1041, 1057, 1060, 1123, 1127, 1128, 1164, 1207, 1219, 1226, 1252, 1253, 1255, 1281, 1288, 1291, 1311, 1371, 1372, 1389, 1390, 1517, 1568, 1606, 1692, 1693, 1702, 1821, 1836, 1844, 1847, 1855, 1857, 1873, 1880, 1888, 1890, 1894, 1902, 1914], "attent": [3, 8, 43, 729, 1336, 1425, 1462, 1464, 1466, 1491, 1568, 1855, 1897, 1918], "stai": [3, 8, 42, 137, 1356, 1883, 1893, 1905, 1910, 1914], "align": [3, 10, 17, 36, 754, 773, 779, 814, 820, 947, 1060, 1140, 1242, 1334, 1342, 1355, 1371, 1385, 1389, 1413, 1414, 1434, 1471, 1501, 1502, 1529, 1530, 1587, 1606, 1646, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1678, 1826, 1855, 1873, 1880, 1888, 1898, 1908, 1915], "src": [3, 4, 38, 68, 194, 226, 310, 318, 467, 507, 508, 509, 510, 511, 512, 514, 532, 1051, 1117, 1309, 1462, 1465, 1466, 1655, 1737, 1738, 1739, 1743, 1774, 1815, 1840, 1856, 1858, 1902], "transform": [3, 4, 18, 19, 20, 35, 40, 43, 60, 65, 775, 791, 832, 833, 851, 852, 938, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1116, 1117, 1118, 1122, 1127, 1184, 1196, 1340, 1374, 1382, 1383, 1384, 1391, 1406, 1447, 1463, 1464, 1465, 1466, 1483, 1489, 1518, 1535, 1554, 1590, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1769, 1801, 1855, 1886, 1903, 1905, 1919, 1924], "sdp_utils_cpp": 3, "h": [3, 5, 11, 14, 22, 29, 44, 483, 735, 736, 737, 754, 1216, 1223, 1226, 1236, 1250, 1325, 1326, 1333, 1334, 1336, 1338, 1339, 1343, 1348, 1349, 1351, 1359, 1360, 1362, 1364, 1371, 1372, 1383, 1384, 1389, 1390, 1391, 1402, 1403, 1413, 1414, 1431, 1432, 1434, 1436, 1453, 1469, 1472, 1473, 1483, 1491, 1518, 1553, 1559, 1560, 1606, 1607, 1640, 1655, 1805, 1858, 1873, 1874, 1880, 1883, 1884, 1887, 1888, 1898, 1918, 1919, 1920], "flash_sdp_en": 3, "flash": 3, "enable_mem_efficient_sdp": [3, 1568], "mem_efficient_sdp_en": 3, "enable_flash_sdp": [3, 1568], "math_sdp_en": 3, "math": [3, 26, 35, 68, 1070, 1236, 1238, 1530, 1568, 1694, 1711, 1806, 1855, 1857, 1859, 1860, 1894, 1914, 1915, 1921], "enable_math_sdp": [3, 1568], "sdp_kernel": [3, 1568], "enable_flash": 3, "enable_math": [3, 1568], "enable_mem_effici": 3, "temporarili": [3, 46, 1744, 1880, 1898, 1904], "previou": [3, 16, 32, 38, 55, 60, 68, 550, 754, 995, 1105, 1140, 1197, 1257, 1273, 1371, 1389, 1434, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1656, 1711, 1801, 1868, 1880, 1883, 1885, 1891, 1897, 1905, 1912], "is_avail": [3, 31, 38, 1855, 1883, 1889, 1892, 1904], "determinist": [3, 4, 6, 34, 38, 44, 68, 86, 508, 867, 1135, 1168, 1190, 1202, 1203, 1284, 1287, 1289, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1389, 1434, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1568, 1741, 1747, 1840, 1858, 1880, 1895, 1901, 1909], "algorithm": [3, 4, 8, 27, 33, 36, 39, 42, 44, 46, 60, 86, 754, 773, 779, 937, 1184, 1227, 1234, 1240, 1244, 1250, 1259, 1276, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1369, 1371, 1389, 1434, 1470, 1471, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1518, 1529, 1568, 1587, 1599, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1675, 1694, 1733, 1748, 1805, 1806, 1840, 1855, 1880, 1883, 1894, 1910, 1914], "are_deterministic_algorithms_en": 3, "use_deterministic_algorithm": [3, 867, 1168, 1747, 1895], "benchmark": [3, 16, 20, 22, 1855, 1858, 1883, 1889], "fastest": [3, 871, 1599, 1645, 1661, 1662, 1888, 1895, 1901], "benchmark_limit": 3, "maximum": [3, 14, 44, 55, 56, 689, 691, 765, 789, 814, 815, 816, 819, 820, 868, 974, 1009, 1011, 1017, 1024, 1025, 1039, 1040, 1106, 1122, 1147, 1148, 1149, 1259, 1284, 1304, 1378, 1509, 1510, 1604, 1678, 1686, 1711, 1725, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1856, 1858, 1866, 1878, 1879, 1883, 1900, 1908, 1921], "try": [3, 4, 5, 8, 9, 12, 14, 15, 16, 17, 18, 26, 38, 40, 47, 48, 52, 55, 60, 64, 65, 80, 81, 947, 1030, 1113, 1122, 1128, 1192, 1193, 1202, 1304, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1463, 1465, 1471, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1568, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1847, 1854, 1857, 1860, 1861, 1880, 1883, 1885, 1887, 1888, 1893, 1898, 1901, 1902, 1905, 1906, 1910, 1914], "dispatch": [3, 16, 38, 60, 68, 1192, 1300, 1301, 1860, 1864, 1883, 1885, 1898, 1925], "v8": 3, "verbos": [3, 16, 26, 29, 38, 68, 674, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1854, 1866, 1874, 1898, 1899, 1919], "On": [3, 14, 15, 29, 34, 35, 38, 39, 44, 56, 60, 65, 68, 680, 683, 915, 927, 1234, 1281, 1291, 1347, 1348, 1349, 1350, 1351, 1352, 1372, 1387, 1388, 1389, 1390, 1406, 1429, 1434, 1447, 1599, 1661, 1662, 1671, 1674, 1855, 1857, 1867, 1880, 1882, 1883, 1894, 1902, 1910, 1911, 1912, 1914], "demand": [3, 35, 997, 1859, 1890, 1910], "onemkl": 3, "dump": [3, 16, 19, 26, 68, 961, 1884, 1897], "durat": [3, 16, 26, 38, 52, 55, 1300, 1301, 1870, 1904], "kernel": [3, 4, 5, 15, 16, 18, 26, 27, 29, 32, 38, 60, 67, 733, 734, 735, 736, 737, 766, 767, 768, 964, 966, 967, 1003, 1004, 1036, 1038, 1306, 1332, 1333, 1334, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1367, 1368, 1387, 1388, 1395, 1396, 1397, 1398, 1399, 1400, 1412, 1413, 1414, 1415, 1416, 1417, 1470, 1493, 1494, 1495, 1496, 1497, 1498, 1513, 1514, 1568, 1609, 1857, 1864, 1868, 1875, 1883, 1885, 1886, 1892, 1894, 1898, 1901, 1904, 1906, 1914], "environ": [3, 4, 8, 12, 16, 26, 29, 30, 32, 34, 36, 44, 46, 48, 53, 58, 68, 674, 1196, 1202, 1389, 1434, 1840, 1854, 1857, 1866, 1880, 1882, 1884, 1889, 1894, 1895, 1897, 1903, 1910], "mkl_verbos": 3, "methodologi": 3, "larg": [3, 4, 8, 9, 16, 26, 35, 38, 68, 86, 674, 852, 957, 959, 1017, 1232, 1250, 1327, 1366, 1470, 1512, 1599, 1686, 1773, 1785, 1855, 1872, 1874, 1875, 1882, 1883, 1887, 1891, 1894, 1896, 1898, 1902, 1903, 1906, 1910, 1914, 1917, 1920], "moreov": [3, 60, 508, 1599, 1674], "investig": [3, 8, 38, 65], "enough": [3, 9, 36, 68, 1198, 1309, 1468, 1787, 1788, 1789, 1790, 1791, 1792, 1840, 1859, 1872, 1875, 1885, 1888, 1901, 1902, 1917, 1925], "scope": [3, 8, 15, 25, 57, 68, 1113, 1458, 1622, 1857, 1859, 1860, 1883, 1887, 1898, 1902, 1912], "second": [3, 6, 19, 29, 32, 38, 42, 46, 48, 55, 57, 66, 68, 680, 683, 685, 688, 754, 788, 868, 869, 870, 878, 886, 902, 903, 915, 919, 920, 922, 923, 924, 927, 960, 972, 1019, 1023, 1037, 1038, 1048, 1050, 1051, 1057, 1065, 1106, 1107, 1118, 1121, 1122, 1123, 1127, 1128, 1130, 1131, 1140, 1143, 1151, 1152, 1153, 1164, 1176, 1209, 1211, 1219, 1255, 1258, 1264, 1265, 1275, 1281, 1285, 1287, 1288, 1290, 1291, 1315, 1320, 1323, 1327, 1333, 1334, 1340, 1348, 1349, 1351, 1352, 1362, 1363, 1370, 1371, 1385, 1388, 1389, 1407, 1411, 1413, 1414, 1434, 1447, 1500, 1502, 1536, 1590, 1622, 1661, 1662, 1665, 1671, 1675, 1686, 1732, 1782, 1790, 1825, 1830, 1832, 1841, 1844, 1847, 1859, 1860, 1880, 1883, 1885, 1886, 1887, 1888, 1891, 1895, 1898, 1904, 1910, 1915, 1919], "verbose_on": 3, "level": [3, 4, 8, 9, 10, 14, 16, 19, 23, 25, 26, 30, 32, 35, 38, 46, 47, 48, 52, 60, 64, 68, 494, 674, 741, 888, 889, 890, 898, 966, 1117, 1132, 1356, 1599, 1855, 1856, 1857, 1860, 1861, 1866, 1870, 1872, 1875, 1878, 1880, 1882, 1885, 1888, 1902, 1904, 1905, 1906, 1910, 1914, 1919, 1923, 1924, 1925], "verbose_off": 3, "dnn": [3, 1882], "onednn": [3, 849, 850, 853, 1189, 1195, 1905], "former": [3, 60, 1389, 1419, 1880], "dnnl_verbos": 3, "verbose_on_cr": 3, "get_opt_einsum": 3, "packag": [3, 8, 9, 12, 31, 36, 44, 64, 67, 1518, 1599, 1854, 1855, 1871, 1885, 1891, 1901, 1908, 1910, 1919, 1922], "els": [3, 8, 12, 14, 25, 35, 38, 40, 44, 46, 47, 55, 68, 597, 754, 918, 1198, 1204, 1385, 1458, 1555, 1568, 1599, 1653, 1661, 1662, 1671, 1672, 1673, 1674, 1728, 1729, 1762, 1768, 1857, 1859, 1861, 1862, 1867, 1872, 1875, 1883, 1885, 1886, 1891, 1892, 1898, 1901, 1902, 1916], "einsum": [3, 1858, 1900], "readthedoc": [3, 1060], "io": [3, 8, 35, 40, 1060, 1194, 1197, 1258, 1389, 1390, 1466, 1568, 1654, 1736, 1897, 1905], "en": [3, 36, 1060, 1889, 1919, 1926], "path_find": [3, 1060], "html": [3, 4, 5, 8, 17, 30, 56, 674, 724, 725, 726, 727, 739, 740, 750, 755, 756, 757, 758, 759, 947, 1060, 1468, 1840, 1881, 1889, 1891, 1895, 1902, 1919], "calcul": [3, 35, 38, 52, 754, 762, 763, 793, 796, 813, 814, 818, 935, 959, 1048, 1052, 1060, 1064, 1178, 1184, 1242, 1264, 1265, 1267, 1332, 1333, 1334, 1337, 1338, 1339, 1342, 1350, 1351, 1352, 1366, 1371, 1373, 1374, 1382, 1383, 1384, 1391, 1458, 1470, 1471, 1485, 1486, 1487, 1515, 1518, 1529, 1558, 1607, 1618, 1640, 1644, 1646, 1680, 1726, 1750, 1799, 1800, 1830, 1832, 1842, 1843, 1880, 1881, 1884, 1888, 1894, 1897, 1905, 1924], "path": [3, 4, 5, 9, 16, 19, 29, 38, 40, 53, 55, 57, 58, 60, 68, 728, 909, 910, 961, 962, 1060, 1187, 1419, 1435, 1466, 1656, 1854, 1858, 1859, 1880, 1883, 1885, 1889, 1896, 1902, 1904, 1914, 1923], "contract": [3, 12, 19, 1060, 1821, 1855, 1874, 1902], "left": [3, 35, 68, 456, 494, 808, 814, 859, 916, 920, 925, 926, 931, 936, 1060, 1080, 1087, 1101, 1104, 1105, 1109, 1140, 1144, 1145, 1149, 1184, 1185, 1192, 1206, 1227, 1236, 1240, 1244, 1247, 1248, 1249, 1250, 1252, 1264, 1265, 1309, 1327, 1332, 1333, 1334, 1335, 1336, 1347, 1348, 1349, 1366, 1373, 1386, 1387, 1388, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1422, 1423, 1424, 1428, 1429, 1467, 1470, 1471, 1472, 1473, 1518, 1538, 1556, 1604, 1678, 1679, 1692, 1720, 1733, 1740, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1801, 1821, 1826, 1841, 1857, 1858, 1860, 1880, 1885, 1891, 1908, 1915], "strategi": [3, 4, 8, 16, 35, 36, 38, 42, 48, 60, 895, 897, 1060, 1120, 1200, 1327, 1599, 1686, 1859, 1886, 1888, 1906], "auto": [3, 15, 38, 61, 80, 81, 1060, 1335, 1336, 1860, 1898, 1919], "greedi": [3, 42, 1060], "doc": [3, 4, 5, 10, 17, 21, 30, 55, 56, 80, 674, 724, 725, 726, 727, 739, 740, 750, 755, 756, 757, 758, 759, 834, 947, 1128, 1205, 1463, 1464, 1465, 1466, 1840, 1847, 1861, 1872, 1881, 1884, 1885, 1891, 1895, 1898, 1902, 1919], "timer": [4, 41, 1855], "stmt": [4, 1882], "setup": [4, 12, 29, 36, 55, 56, 814, 815, 816, 819, 1128, 1599, 1847, 1882, 1883, 1892, 1910, 1911], "global_setup": 4, "perf_count": 4, "global": [4, 6, 9, 13, 15, 16, 24, 25, 26, 35, 38, 40, 42, 43, 44, 46, 56, 60, 65, 67, 68, 848, 855, 859, 867, 916, 925, 1012, 1019, 1061, 1063, 1073, 1078, 1096, 1114, 1117, 1144, 1145, 1168, 1175, 1187, 1190, 1202, 1206, 1257, 1273, 1419, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1618, 1622, 1650, 1713, 1715, 1717, 1720, 1744, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1852, 1857, 1860, 1861, 1876, 1879, 1885, 1890, 1891, 1893, 1895, 1905, 1910, 1911, 1912, 1914, 1917, 1919], "label": [4, 7, 8, 35, 42, 1060, 1327, 1336, 1342, 1353, 1355, 1379, 1411, 1422, 1423, 1502, 1633, 1679, 1884, 1893, 1895, 1919], "sub_label": 4, "descript": [4, 8, 26, 28, 29, 35, 48, 55, 68, 728, 1158, 1159, 1160, 1232, 1259, 1483, 1704, 1859, 1860, 1883, 1885, 1888, 1890, 1891, 1898, 1926], "env": [4, 16, 26, 38, 44, 48, 53, 55, 56, 58, 68, 1017, 1653, 1884, 1894, 1910], "num_thread": 4, "languag": [4, 29, 48, 1198, 1327, 1462, 1517, 1887], "measur": [4, 44, 52, 963, 1009, 1011, 1218, 1335, 1336, 1353, 1379, 1386, 1410, 1411, 1467, 1468, 1490, 1491, 1549, 1688, 1855, 1883, 1890, 1891, 1901, 1914], "statement": [4, 12, 19, 44, 65, 68, 1188, 1202, 1861, 1880, 1885, 1893, 1896, 1898, 1902, 1908, 1910], "org": [4, 5, 8, 10, 11, 17, 30, 36, 43, 44, 56, 674, 724, 725, 726, 727, 739, 740, 750, 755, 756, 757, 758, 759, 947, 1259, 1389, 1437, 1438, 1465, 1468, 1643, 1694, 1769, 1854, 1861, 1880, 1881, 1891, 1895, 1897, 1898, 1902, 1919, 1926], "timeit": [4, 1882], "sever": [4, 17, 30, 35, 38, 43, 44, 60, 68, 732, 733, 734, 735, 736, 737, 760, 761, 766, 767, 768, 776, 777, 947, 1006, 1064, 1162, 1187, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1347, 1348, 1349, 1350, 1351, 1352, 1367, 1368, 1387, 1388, 1407, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1472, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1493, 1494, 1495, 1496, 1497, 1498, 1513, 1514, 1536, 1539, 1540, 1542, 1543, 1544, 1599, 1608, 1609, 1611, 1612, 1644, 1655, 1709, 1710, 1750, 1836, 1857, 1879, 1880, 1882, 1883, 1890, 1891, 1898, 1901, 1905, 1910], "kei": [4, 18, 19, 22, 25, 35, 40, 46, 53, 55, 56, 60, 68, 597, 674, 729, 848, 853, 911, 1026, 1116, 1126, 1187, 1202, 1203, 1258, 1419, 1420, 1425, 1429, 1462, 1463, 1464, 1465, 1466, 1568, 1625, 1641, 1855, 1858, 1859, 1860, 1864, 1883, 1885, 1890, 1891, 1896, 1898, 1900, 1901, 1904, 1905, 1908, 1910, 1911, 1916, 1919, 1921, 1923], "awar": [4, 8, 22, 482, 706, 707, 708, 709, 710, 711, 712, 713, 714, 724, 725, 726, 727, 832, 833, 849, 856, 857, 1466, 1568, 1599, 1809, 1810, 1811, 1812, 1813, 1874, 1880, 1883, 1902, 1908, 1911, 1914], "element": [4, 15, 18, 35, 38, 44, 65, 66, 68, 95, 117, 148, 152, 194, 214, 239, 251, 255, 283, 310, 312, 314, 316, 318, 349, 395, 397, 399, 431, 450, 467, 469, 470, 492, 494, 508, 510, 512, 515, 539, 540, 552, 554, 603, 604, 611, 675, 677, 678, 681, 682, 687, 688, 692, 693, 729, 752, 754, 764, 765, 766, 767, 768, 774, 778, 787, 868, 870, 871, 872, 875, 876, 877, 878, 879, 887, 895, 896, 898, 899, 900, 902, 903, 917, 926, 929, 936, 942, 946, 953, 955, 956, 957, 1003, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1049, 1050, 1051, 1055, 1057, 1060, 1063, 1065, 1066, 1070, 1090, 1094, 1095, 1097, 1099, 1104, 1106, 1107, 1109, 1113, 1118, 1119, 1121, 1122, 1123, 1127, 1128, 1129, 1130, 1131, 1132, 1140, 1143, 1146, 1147, 1148, 1149, 1164, 1172, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1206, 1208, 1209, 1211, 1228, 1230, 1234, 1245, 1249, 1260, 1261, 1263, 1266, 1268, 1269, 1270, 1271, 1275, 1276, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1307, 1309, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1331, 1332, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1366, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1385, 1386, 1389, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1405, 1408, 1410, 1411, 1412, 1413, 1414, 1418, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1446, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1467, 1468, 1470, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1503, 1507, 1510, 1511, 1516, 1517, 1521, 1522, 1523, 1524, 1527, 1530, 1531, 1533, 1538, 1542, 1543, 1544, 1548, 1549, 1553, 1554, 1556, 1559, 1560, 1561, 1562, 1563, 1564, 1568, 1569, 1570, 1571, 1572, 1574, 1576, 1578, 1579, 1580, 1581, 1586, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1625, 1626, 1632, 1633, 1635, 1636, 1645, 1646, 1647, 1649, 1657, 1697, 1698, 1701, 1702, 1709, 1710, 1712, 1723, 1726, 1727, 1731, 1733, 1735, 1753, 1756, 1758, 1770, 1771, 1773, 1774, 1778, 1784, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1799, 1800, 1804, 1815, 1817, 1818, 1822, 1823, 1824, 1826, 1828, 1829, 1830, 1831, 1832, 1834, 1836, 1837, 1838, 1842, 1843, 1844, 1847, 1850, 1858, 1860, 1867, 1875, 1878, 1881, 1882, 1885, 1888, 1894, 1896, 1898, 1901, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1925], "lazili": [4, 31, 40, 963, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1590, 1857], "threadpool": 4, "comparison": [4, 23, 36, 38, 68, 1187, 1202, 1203, 1419, 1657, 1861, 1885, 1921, 1924], "appl": 4, "focu": [4, 16, 19, 1688], "replic": [4, 35, 43, 60, 1140, 1197, 1347, 1348, 1349, 1356, 1366, 1395, 1396, 1397, 1443, 1444, 1445, 1470, 1556, 1583, 1903], "particularli": [4, 14, 35, 36, 57, 1355, 1356, 1426, 1857, 1883], "variat": [4, 26, 44, 1860, 1885, 1901, 1906], "confound": 4, "quantifi": [4, 1468], "nois": [4, 26, 1858, 1895], "median": [4, 44, 171, 1315, 1840, 1858, 1873, 1900], "deviat": [4, 44, 374, 1331, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1391, 1458, 1647, 1763, 1768, 1799, 1800, 1878], "merg": [4, 7, 8, 10, 35, 38, 40, 56, 1420, 1425, 1429], "repeat": [4, 44, 65, 489, 959, 1060, 1250, 1276, 1415, 1416, 1417, 1490, 1491, 1694, 1726, 1785, 1805, 1806, 1822, 1856, 1858, 1860, 1900, 1904, 1907, 1914], "autorang": 4, "exact": [4, 15, 16, 17, 22, 26, 29, 35, 46, 57, 336, 735, 736, 737, 789, 868, 869, 870, 902, 903, 947, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1287, 1351, 1389, 1466, 1529, 1568, 1599, 1689, 1779, 1878, 1884, 1893, 1914, 1925], "discuss": [4, 6, 9, 10, 11, 16, 23, 44, 68, 1380, 1867, 1880, 1885, 1891, 1895, 1910, 1912, 1914], "docstr": [4, 29, 68, 855, 856, 1187, 1419, 1854, 1883], "adapt": [4, 14, 760, 761, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1357, 1477, 1478, 1479, 1480, 1481, 1482, 1653, 1659, 1660, 1671, 1673, 1680, 1883], "field": [4, 8, 19, 25, 26, 38, 42, 46, 48, 52, 53, 68, 820, 887, 1185, 1187, 1327, 1335, 1336, 1353, 1355, 1379, 1385, 1386, 1410, 1411, 1419, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1483, 1490, 1491, 1501, 1518, 1530, 1553, 1561, 1632, 1669, 1675, 1870, 1880, 1884, 1893, 1898, 1910, 1911, 1919], "displai": [4, 16, 26, 32, 1005, 1018, 1529, 1587, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1854, 1861, 1866, 1869, 1898, 1919, 1921], "instruct": [4, 5, 15, 16, 19, 26, 27, 29, 57, 67, 1857, 1860, 1894, 1898, 1921], "count": [4, 19, 35, 44, 52, 68, 918, 958, 999, 1113, 1148, 1149, 1185, 1224, 1225, 1632, 1837, 1838, 1858, 1870, 1883, 1900, 1904, 1910, 1912, 1914], "wall": 4, "callgrind": 4, "analog": [4, 14, 19, 68, 688, 1043, 1081, 1083, 1162, 1236, 1389, 1674, 1805, 1822, 1875, 1891], "constructor": [4, 29, 35, 36, 42, 60, 68, 818, 855, 856, 1327, 1424, 1429, 1430, 1447, 1472, 1473, 1599, 1639, 1780, 1855, 1857, 1860, 1861, 1883, 1884, 1891, 1910, 1914, 1916, 1917, 1920, 1926], "snippet": [4, 19, 56, 1854, 1891, 1896], "loop": [4, 15, 19, 20, 25, 36, 57, 61, 65, 66, 68, 856, 857, 901, 1006, 1009, 1011, 1122, 1128, 1202, 1599, 1609, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1847, 1857, 1858, 1860, 1870, 1882, 1883, 1887, 1888, 1891, 1894, 1898, 1901, 1904, 1905, 1919], "default_tim": 4, "summar": [4, 5, 19, 26, 56, 1753, 1860, 1875, 1914], "relu": [4, 12, 18, 25, 26, 36, 65, 66, 68, 694, 695, 699, 700, 701, 702, 703, 704, 705, 709, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 759, 786, 787, 808, 848, 854, 1003, 1118, 1128, 1198, 1419, 1434, 1436, 1447, 1455, 1462, 1464, 1466, 1565, 1566, 1590, 1656, 1847, 1856, 1857, 1858, 1868, 1874, 1875, 1878, 1880, 1891, 1896, 1898, 1900, 1905, 1907, 1908], "readabl": [4, 26, 28, 35, 53, 68, 1005, 1018, 1819, 1898, 1901, 1925], "supplement": 4, "disambigu": [4, 26, 53, 68, 1264], "ident": [4, 15, 26, 29, 35, 38, 44, 60, 68, 782, 808, 902, 903, 1048, 1224, 1225, 1226, 1227, 1240, 1252, 1255, 1259, 1276, 1314, 1315, 1331, 1357, 1558, 1606, 1608, 1844, 1850, 1861, 1878, 1894, 1895, 1902, 1907, 1914], "easi": [4, 12, 19, 23, 26, 35, 40, 55, 1857, 1880, 1887, 1890, 1891, 1893, 1902, 1905, 1910, 1911, 1914], "differenti": [4, 44, 61, 66, 148, 349, 583, 796, 883, 885, 887, 889, 890, 892, 895, 896, 897, 898, 899, 900, 901, 902, 903, 944, 1006, 1121, 1122, 1123, 1127, 1201, 1233, 1234, 1245, 1276, 1341, 1342, 1362, 1520, 1554, 1599, 1611, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1840, 1855, 1867, 1885, 1887, 1888, 1898, 1901, 1910, 1920, 1922], "distinguish": [4, 1905, 1914], "princip": [4, 1233, 1694], "signal": [4, 27, 40, 46, 55, 57, 732, 733, 734, 760, 761, 776, 777, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1184, 1249, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1347, 1348, 1349, 1367, 1368, 1387, 1388, 1407, 1412, 1413, 1414, 1472, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1493, 1496, 1513, 1514, 1536, 1539, 1540, 1542, 1543, 1544, 1801, 1855, 1872, 1893, 1904, 1910], "form": [4, 8, 10, 13, 25, 27, 35, 38, 44, 54, 55, 56, 60, 65, 68, 754, 773, 779, 938, 1048, 1088, 1090, 1187, 1226, 1229, 1234, 1245, 1250, 1325, 1326, 1329, 1330, 1342, 1367, 1368, 1371, 1389, 1419, 1434, 1470, 1471, 1502, 1513, 1514, 1517, 1529, 1556, 1587, 1611, 1674, 1692, 1821, 1854, 1857, 1861, 1875, 1880, 1885, 1891, 1898, 1902, 1905, 1919], "treat": [4, 21, 25, 44, 54, 63, 68, 318, 467, 787, 902, 903, 1003, 1116, 1239, 1242, 1244, 1256, 1258, 1268, 1269, 1270, 1271, 1288, 1317, 1363, 1373, 1391, 1423, 1424, 1425, 1426, 1429, 1447, 1452, 1510, 1599, 1641, 1645, 1680, 1733, 1801, 1815, 1822, 1859, 1860, 1873, 1880, 1910, 1914, 1917, 1924], "distinct": [4, 1116, 1222, 1223, 1267, 1860, 1885, 1896, 1910, 1911], "workload": [4, 9, 35, 38, 60, 1006, 1883, 1890, 1894, 1910], "good": [4, 8, 9, 15, 17, 19, 22, 29, 60, 68, 86, 947, 1120, 1427, 1769, 1854, 1864, 1872, 1885, 1890, 1891, 1898, 1902, 1903, 1905], "intrins": [4, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 786, 787, 1906, 1907], "contrast": [4, 44, 46, 754, 1371, 1674, 1856, 1878, 1880, 1886, 1914], "blocked_autorang": 4, "callback": [4, 36, 55, 57, 67, 68, 1599, 1870, 1890, 1904, 1910], "min_run_tim": 4, "minimum": [4, 29, 36, 46, 55, 56, 690, 691, 765, 789, 814, 815, 816, 819, 820, 869, 918, 1040, 1107, 1147, 1148, 1149, 1289, 1342, 1378, 1468, 1678, 1679, 1686, 1769, 1787, 1788, 1789, 1790, 1791, 1792, 1856, 1858, 1878, 1880, 1888, 1900, 1908, 1917], "At": [4, 6, 7, 8, 13, 16, 19, 26, 30, 35, 1094, 1338, 1347, 1348, 1349, 1350, 1351, 1352, 1387, 1388, 1868, 1875, 1882, 1888, 1905, 1910, 1915], "high": [4, 5, 8, 9, 10, 11, 16, 19, 20, 26, 30, 36, 38, 44, 46, 52, 54, 56, 68, 117, 966, 1342, 1465, 1715, 1716, 1748, 1856, 1858, 1870, 1872, 1888, 1889, 1891, 1892, 1901, 1905, 1906, 1910, 1914, 1919, 1920, 1921, 1924], "pseudo": [4, 86], "total_tim": 4, "block_siz": 4, "choic": [4, 9, 10, 14, 16, 26, 38, 1202, 1250, 1420, 1429, 1711, 1882, 1898, 1908, 1914], "block": [4, 8, 9, 35, 38, 42, 43, 55, 57, 67, 68, 577, 578, 579, 926, 963, 1017, 1207, 1259, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1395, 1396, 1397, 1398, 1399, 1400, 1422, 1470, 1512, 1586, 1599, 1787, 1788, 1789, 1857, 1859, 1860, 1870, 1872, 1876, 1880, 1883, 1884, 1888, 1898, 1905, 1910, 1914], "qualiti": [4, 8, 36], "balanc": [4, 17, 86, 947], "compet": 4, "statist": [4, 16, 26, 36, 38, 44, 793, 794, 814, 815, 816, 818, 819, 972, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1037, 1038, 1264, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1458, 1870, 1880, 1887, 1901, 1903, 1905, 1908], "amort": 4, "invoc": [4, 6, 19, 68, 835, 1190, 1202, 1857, 1860, 1883, 1885, 1890, 1898, 1910, 1912], "less": [4, 7, 8, 16, 29, 35, 36, 38, 44, 46, 57, 361, 674, 895, 897, 902, 903, 959, 1013, 1030, 1060, 1104, 1108, 1113, 1116, 1211, 1223, 1259, 1275, 1276, 1327, 1380, 1433, 1450, 1456, 1635, 1724, 1830, 1832, 1854, 1858, 1860, 1875, 1883, 1885, 1893, 1894, 1900, 1903, 1905], "bias": [4, 36, 728, 754, 788, 1337, 1338, 1339, 1371, 1372, 1374, 1382, 1383, 1384, 1389, 1390, 1391, 1434, 1436, 1458], "trivial": [4, 15, 46, 48, 729, 937, 1606, 1898, 1912], "low": [4, 8, 32, 36, 44, 60, 494, 898, 966, 1132, 1342, 1694, 1711, 1715, 1716, 1733, 1806, 1856, 1858, 1870, 1872, 1883, 1904, 1921, 1925], "digit": [4, 1753, 1854, 1869, 1890, 1894], "microsecond": [4, 1883], "bia": [4, 10, 38, 43, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 736, 737, 743, 745, 746, 747, 748, 750, 754, 755, 758, 759, 766, 767, 768, 775, 786, 1126, 1187, 1196, 1327, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1371, 1372, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1419, 1425, 1434, 1435, 1436, 1488, 1489, 1493, 1494, 1495, 1496, 1497, 1498, 1519, 1528, 1532, 1535, 1590, 1599, 1606, 1607, 1621, 1623, 1625, 1640, 1643, 1708, 1856, 1858, 1868, 1885, 1891, 1896, 1905, 1907, 1919], "period": [4, 10, 42, 55, 916, 925, 972, 1005, 1018, 1019, 1023, 1037, 1038, 1080, 1144, 1145, 1206, 1690, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1858, 1870, 1893], "until": [4, 8, 16, 35, 36, 38, 42, 46, 55, 60, 67, 68, 482, 963, 964, 966, 997, 1113, 1207, 1259, 1300, 1301, 1518, 1590, 1599, 1677, 1683, 1822, 1872, 1878, 1883, 1887, 1898, 1904, 1910, 1912], "overal": [4, 10, 35, 38, 55, 902, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1465, 1880, 1882, 1883, 1893, 1906], "repetit": [4, 1726, 1822], "collect_callgrind": 4, "collect_baselin": 4, "retain_out_fil": 4, "callgrindstat": [4, 1855], "modulo": [4, 44, 1108, 1724], "determin": [4, 6, 9, 14, 15, 16, 25, 26, 27, 29, 31, 32, 34, 35, 36, 38, 44, 46, 53, 55, 60, 65, 68, 817, 820, 895, 897, 902, 903, 916, 925, 932, 937, 1007, 1062, 1081, 1091, 1115, 1116, 1144, 1145, 1148, 1149, 1200, 1220, 1232, 1243, 1246, 1267, 1281, 1363, 1367, 1368, 1389, 1425, 1428, 1434, 1510, 1513, 1514, 1529, 1562, 1587, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1641, 1651, 1686, 1714, 1716, 1718, 1745, 1787, 1788, 1789, 1790, 1791, 1792, 1801, 1853, 1860, 1861, 1874, 1883, 1884, 1885, 1891, 1898, 1902, 1905, 1910, 1912, 1916, 1917, 1919, 1921], "itself": [4, 6, 8, 9, 12, 15, 19, 26, 38, 39, 60, 66, 68, 687, 693, 873, 959, 1121, 1122, 1187, 1198, 1202, 1419, 1452, 1574, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629, 1857, 1872, 1891, 1895, 1898, 1902, 1910, 1914, 1918], "jitter": 4, "interpret": [4, 19, 35, 38, 42, 44, 46, 55, 57, 73, 773, 779, 874, 901, 1016, 1081, 1082, 1083, 1088, 1090, 1091, 1092, 1093, 1113, 1137, 1149, 1187, 1192, 1198, 1202, 1239, 1259, 1359, 1518, 1529, 1530, 1587, 1745, 1751, 1854, 1859, 1860, 1872, 1882, 1883, 1898, 1914, 1916, 1918], "ideal": [4, 16, 54, 56, 1202, 1675, 1874], "analysi": [4, 12, 15, 23, 36, 44, 68, 1206, 1694, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1861, 1891, 1899, 1924], "valgrind": 4, "degrad": [4, 29, 1882, 1884, 1885, 1914], "amelior": 4, "suffici": [4, 16, 26, 29, 36, 44, 47, 55, 60, 1661, 1662, 1854, 1914, 1917], "obtain": [4, 35, 38, 44, 48, 67, 68, 491, 912, 1132, 1304, 1342, 1426, 1502, 1599, 1694, 1711, 1806, 1860, 1872, 1873, 1882, 1895, 1898, 1901, 1904, 1905], "callgrind_control": 4, "callgrind_annot": 4, "boundari": [4, 16, 68, 773, 779, 931, 1140, 1344, 1345, 1346, 1440, 1441, 1442, 1443, 1444, 1445, 1471, 1474, 1475, 1476, 1529, 1587, 1680, 1686, 1740, 1858, 1884, 1902, 1903, 1910], "caller": [4, 46, 55, 68, 848, 1187, 1419, 1466, 1595, 1596, 1880, 1883, 1910, 1912], "structur": [4, 6, 10, 14, 21, 35, 36, 38, 45, 46, 48, 56, 60, 68, 886, 1111, 1123, 1128, 1202, 1419, 1618, 1622, 1657, 1694, 1806, 1847, 1859, 1861, 1867, 1870, 1875, 1883, 1884, 1885, 1886, 1893, 1896, 1897, 1898, 1899, 1901, 1902, 1910, 1914, 1919, 1920, 1921, 1922, 1924], "restrict": [4, 9, 14, 35, 44, 60, 65, 66, 1258, 1281, 1355, 1859, 1860, 1861, 1874, 1875, 1880, 1883, 1888, 1903, 1905], "builtin": [4, 16, 26, 38, 68, 1199, 1258, 1720, 1857, 1859, 1861, 1910, 1912], "surpris": [4, 9, 15, 60, 1854, 1888, 1894], "serial": [4, 30, 35, 38, 40, 42, 55, 1187, 1196, 1197, 1258, 1419, 1590, 1653, 1654, 1736, 1854, 1855, 1858, 1869, 1874, 1880, 1883, 1890, 1891, 1893, 1902, 1905, 1911], "subsequ": [4, 8, 16, 19, 29, 30, 38, 68, 964, 1187, 1198, 1202, 1347, 1348, 1349, 1350, 1351, 1352, 1419, 1447, 1595, 1596, 1883, 1895, 1898, 1910, 1914], "deseri": [4, 40, 1258, 1590, 1854, 1869], "globalsbridg": 4, "care": [4, 8, 15, 16, 26, 29, 38, 44, 60, 67, 68, 1081, 1083, 1419, 1872, 1882, 1883, 1884, 1885, 1887, 1891, 1893, 1896, 1898, 1910, 1914], "reli": [4, 10, 15, 16, 29, 35, 36, 46, 48, 60, 68, 148, 887, 902, 1060, 1356, 1675, 1880, 1882, 1884, 1885, 1895, 1896, 1914, 1918], "pickl": [4, 35, 36, 38, 1187, 1258, 1419, 1736, 1854, 1869, 1872, 1896, 1902], "transfer": [4, 35, 38, 1868, 1872, 1883, 1889, 1891, 1902, 1910], "properli": [4, 8, 35, 36, 40, 42, 46, 55, 60, 67, 1081, 1082, 1083, 1091, 1092, 1093, 1288, 1420, 1421, 1429, 1430, 1599, 1854, 1867, 1885, 1888, 1891, 1893, 1896, 1910, 1911, 1917], "profil": [4, 5, 16, 17, 52, 68, 947, 1200, 1593, 1594, 1595, 1596, 1753, 1855, 1900, 1910], "drive": [4, 10, 19, 38, 1880], "facil": [4, 1258, 1872], "analyz": [4, 5, 26, 32, 68, 1884, 1885, 1894], "manipul": [4, 25, 60, 67, 1191, 1855, 1879, 1887, 1891, 1903, 1908], "1000000": [4, 1658], "mirror": [4, 137], "semant": [4, 10, 31, 38, 55, 56, 60, 68, 148, 788, 868, 869, 870, 887, 901, 929, 966, 1017, 1117, 1128, 1191, 1197, 1256, 1336, 1491, 1562, 1675, 1838, 1847, 1855, 1859, 1860, 1864, 1867, 1875, 1886, 1891, 1898, 1914], "number_per_run": 4, "raw_tim": 4, "task_spec": 4, "serializ": [4, 36, 1857], "consum": [4, 19, 35, 40, 45, 57, 67, 431, 1060, 1872, 1883, 1893, 1898, 1899, 1919], "extrapol": 4, "sinc": [4, 8, 16, 19, 21, 25, 26, 35, 36, 38, 43, 44, 48, 57, 60, 68, 312, 528, 741, 779, 787, 802, 803, 937, 1009, 1011, 1013, 1060, 1100, 1101, 1102, 1116, 1184, 1187, 1192, 1197, 1200, 1276, 1335, 1362, 1415, 1416, 1417, 1419, 1471, 1483, 1518, 1520, 1587, 1590, 1593, 1622, 1641, 1646, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1678, 1679, 1680, 1686, 1801, 1857, 1858, 1859, 1860, 1866, 1868, 1870, 1875, 1879, 1880, 1883, 1885, 1886, 1887, 1888, 1890, 1891, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1909, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1920, 1921], "properti": [4, 13, 14, 15, 35, 38, 39, 40, 44, 47, 52, 55, 60, 68, 786, 874, 906, 912, 990, 1076, 1077, 1079, 1081, 1082, 1083, 1091, 1092, 1093, 1187, 1331, 1452, 1574, 1590, 1600, 1601, 1602, 1632, 1653, 1855, 1860, 1864, 1870, 1880, 1883, 1888, 1901, 1904, 1910, 1914, 1916, 1917, 1920, 1922, 1925, 1926], "significant_figur": 4, "figur": [4, 8, 9, 16, 40, 68, 1882, 1884, 1898, 1903, 1912, 1919, 1924], "intend": [4, 55, 60, 68, 884, 893, 968, 1206, 1483, 1593, 1594, 1595, 1596, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1675, 1860, 1875, 1878, 1880, 1891, 1902], "interquartil": 4, "mitig": 4, "tail": [4, 35, 53], "645": 4, "trim_sigfig": 4, "human": [4, 28, 53, 1005, 1018, 1878, 1898, 1925], "raw": [4, 68, 1113, 1245, 1883, 1902], "built_with_debug_symbol": 4, "baseline_inclusive_stat": 4, "baseline_exclusive_stat": 4, "stmt_inclusive_stat": 4, "stmt_exclusive_stat": 4, "stmt_callgrind_out": 4, "done": [4, 12, 14, 15, 19, 22, 25, 30, 35, 38, 40, 43, 44, 46, 53, 60, 67, 68, 491, 674, 754, 902, 1077, 1079, 1082, 1083, 1085, 1086, 1089, 1090, 1092, 1093, 1095, 1097, 1202, 1276, 1337, 1338, 1339, 1356, 1359, 1371, 1382, 1383, 1384, 1401, 1402, 1403, 1404, 1429, 1458, 1464, 1466, 1599, 1796, 1860, 1864, 1868, 1872, 1880, 1882, 1883, 1884, 1886, 1887, 1891, 1894, 1898, 1901, 1903, 1905, 1906, 1910, 1912], "functioncount": [4, 1855], "stat": [4, 16, 26, 63, 820, 830, 831, 1017, 1024, 1025, 1026, 1458, 1599, 1870, 1883, 1923], "as_standard": 4, "strip": [4, 1520, 1599, 1857, 1900], "prefix": [4, 38, 40, 55, 60, 742, 751, 1187, 1419, 1599, 1854, 1866, 1880, 1898, 1902, 1923], "stumbl": 4, "filepath": 4, "dif": 4, "compon": [4, 8, 10, 12, 19, 26, 30, 32, 38, 44, 68, 674, 902, 1080, 1081, 1083, 1091, 1092, 1093, 1226, 1462, 1463, 1464, 1465, 1466, 1590, 1694, 1801, 1845, 1846, 1861, 1866, 1880, 1884, 1890, 1891, 1903, 1914], "locat": [4, 10, 15, 16, 29, 38, 44, 52, 148, 152, 251, 508, 929, 931, 975, 1039, 1040, 1208, 1258, 1284, 1289, 1292, 1309, 1356, 1366, 1453, 1470, 1483, 1518, 1583, 1586, 1599, 1611, 1705, 1740, 1762, 1783, 1786, 1840, 1854, 1857, 1869, 1883, 1898, 1902, 1904, 1910, 1912, 1914, 1919, 1923], "resembl": [4, 30], "23234231": 4, "first_build_dir": 4, "foo": [4, 17, 29, 38, 52, 53, 67, 68, 818, 848, 853, 947, 1116, 1117, 1126, 1185, 1190, 1194, 1197, 1198, 1201, 1202, 1641, 1854, 1857, 1859, 1860, 1864, 1885, 1891, 1898, 1902, 1921], "9823794": 4, "bar": [4, 8, 19, 52, 68, 848, 853, 959, 1116, 1190, 1197, 1799, 1800, 1842, 1843, 1854, 1857, 1859, 1869, 1891, 1898, 1902, 1921], "53453": 4, "function_that_actually_chang": 4, "second_build_dir": 4, "cancel": [4, 1184], "site": [4, 8], "denois": 4, "explan": [4, 10, 16, 22, 26, 48, 856, 1187, 1419, 1855, 1884, 1885, 1891], "delta": [4, 44, 754, 1371, 1380, 1389, 1450, 1527, 1659, 1799, 1800, 1826, 1842, 1843, 1858, 1878], "inclus": [4, 44, 86, 508, 1147, 1149, 1257, 1273, 1279, 1715, 1716, 1798, 1909, 1921], "diff": [4, 8, 1857, 1858, 1900], "unit": [4, 27, 29, 44, 46, 56, 60, 68, 754, 755, 1078, 1096, 1331, 1341, 1361, 1364, 1369, 1370, 1371, 1372, 1437, 1438, 1448, 1483, 1507, 1511, 1516, 1517, 1563, 1571, 1615, 1616, 1620, 1623, 1625, 1628, 1828, 1880, 1882, 1888, 1902], "next": [4, 13, 16, 18, 19, 24, 35, 38, 44, 55, 60, 68, 554, 754, 1191, 1323, 1372, 1390, 1436, 1599, 1634, 1872, 1879, 1880, 1882, 1886, 1891, 1893, 1903, 1904, 1910, 1911, 1914, 1917, 1919], "logic": [4, 6, 19, 29, 35, 43, 58, 60, 68, 919, 921, 922, 924, 1077, 1079, 1082, 1083, 1085, 1086, 1089, 1090, 1092, 1093, 1095, 1097, 1117, 1191, 1268, 1269, 1270, 1271, 1281, 1425, 1599, 1703, 1730, 1813, 1860, 1861, 1883, 1884, 1885, 1886, 1888, 1905], "question": [4, 11, 15, 20, 35, 68, 1855, 1880], "why": [4, 8, 15, 35, 60, 65, 68, 1060, 1191, 1568, 1855, 1867, 1886], "involv": [4, 6, 8, 10, 14, 15, 20, 27, 35, 38, 60, 63, 65, 68, 1599, 1860, 1873, 1875, 1880, 1883, 1884, 1887, 1891, 1898, 1910, 1911, 1912, 1914], "look": [4, 5, 8, 9, 10, 12, 14, 16, 19, 22, 25, 26, 30, 38, 44, 54, 55, 62, 65, 68, 856, 895, 897, 1187, 1281, 1327, 1419, 1509, 1624, 1675, 1787, 1788, 1789, 1791, 1792, 1857, 1859, 1873, 1879, 1880, 1883, 1886, 1890, 1891, 1893, 1897, 1898, 1902, 1905, 1910, 1911, 1924], "autom": [4, 9, 16, 26, 68, 1857, 1905], "easili": [4, 8, 9, 18, 25, 26, 27, 36, 38, 1117, 1426, 1518, 1556, 1675, 1733, 1886, 1888, 1891, 1896, 1901, 1909, 1912, 1919], "exclus": [4, 35, 38, 44, 46, 55, 68, 729, 1149, 1599, 1715, 1716, 1719, 1880, 1921], "basi": [4, 10, 11, 44, 1259, 1680, 1883, 1890, 1905, 1910], "thought": [4, 52, 68, 1078, 1080, 1096], "path_and_function_nam": 4, "children": [4, 48, 60, 68, 785, 1187, 1419, 1872, 1891, 1902, 1912], "identifi": [4, 8, 10, 14, 19, 38, 46, 49, 52, 55, 56, 57, 68, 811, 1149, 1258, 1458, 1861, 1872, 1881, 1890, 1891, 1902, 1910, 1911, 1912, 1919], "hot": [4, 19, 44, 1520, 1555, 1888], "spot": 4, "_data": 4, "truncate_row": 4, "_linewidth": 4, "subtract": [4, 310, 558, 859, 1113, 1520, 1787, 1788, 1789, 1791, 1792, 1802, 1858, 1875, 1900, 1914], "cpython": [4, 23, 68], "known": [4, 8, 10, 14, 26, 34, 38, 42, 49, 61, 64, 66, 1123, 1124, 1202, 1203, 1258, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1389, 1434, 1448, 1450, 1470, 1529, 1571, 1590, 1761, 1762, 1819, 1855, 1858, 1862, 1870, 1872, 1875, 1878, 1880, 1882, 1895, 1898, 1901, 1912, 1915], "quit": [4, 8, 68, 1860, 1885, 1887, 1902, 1910], "noisi": 4, "higher": [4, 8, 9, 14, 36, 38, 60, 61, 66, 148, 887, 888, 901, 1006, 1017, 1052, 1118, 1124, 1128, 1147, 1164, 1316, 1355, 1411, 1426, 1568, 1705, 1806, 1847, 1855, 1883, 1885, 1886, 1888, 1890, 1905, 1906, 1910, 1917], "filter": [4, 26, 538, 766, 767, 768, 1184, 1206, 1347, 1348, 1349, 1350, 1351, 1352, 1493, 1494, 1495, 1496, 1497, 1498, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1801, 1860, 1902], "rather": [4, 9, 10, 12, 15, 18, 19, 29, 38, 46, 48, 57, 68, 773, 779, 911, 937, 1185, 1188, 1319, 1483, 1518, 1529, 1587, 1607, 1753, 1857, 1860, 1874, 1875, 1881, 1883, 1885, 1886, 1898, 1902, 1905, 1910, 1914, 1919], "unicod": [4, 1861], "lookup": [4, 19, 40, 44, 1362, 1509, 1857, 1861, 1882, 1911], "agnost": [4, 55, 1518, 1874], "reliabl": [4, 20], "warrant": 4, "filter_fn": 4, "map_fn": 4, "coalesc": [4, 16, 19, 320, 325, 538, 608, 974, 1786, 1836, 1858, 1884, 1900, 1914], "finit": [5, 44, 902, 903, 1176, 1177, 1222, 1223, 1233, 1234, 1250, 1276, 1309, 1313, 1335, 1805, 1885, 1888, 1921], "natur": [5, 8, 9, 27, 38, 44, 60, 902, 903, 1215, 1220, 1246, 1260, 1262, 1267, 1327, 1466, 1568, 1888, 1914, 1915], "against": [5, 22, 29, 38, 46, 55, 788, 859, 902, 903, 1088, 1089, 1090, 1094, 1095, 1097, 1129, 1178, 1187, 1202, 1203, 1419, 1425, 1656, 1854, 1860, 1902, 1924], "cprofil": 5, "correct": [5, 7, 8, 25, 36, 38, 39, 40, 44, 55, 203, 204, 207, 219, 549, 574, 597, 598, 609, 891, 903, 959, 1081, 1083, 1091, 1092, 1093, 1161, 1185, 1188, 1202, 1203, 1222, 1356, 1373, 1385, 1590, 1599, 1632, 1752, 1799, 1800, 1842, 1843, 1856, 1857, 1858, 1859, 1873, 1874, 1883, 1885, 1888, 1916], "launch": [5, 18, 29, 35, 41, 46, 47, 48, 53, 54, 55, 58, 67, 964, 1599, 1855, 1880, 1882, 1883, 1884, 1910], "spent": [5, 16, 26, 38, 912, 1686, 1882, 1891], "appear": [5, 24, 36, 38, 44, 68, 848, 1006, 1060, 1101, 1102, 1128, 1258, 1292, 1294, 1595, 1600, 1726, 1755, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1847, 1857, 1860, 1873, 1874, 1885, 1886, 1891, 1898, 1902], "extrem": [5, 15, 19, 1599, 1880, 1898], "expens": [5, 14, 16, 22, 26, 35, 44, 60, 1606, 1883, 1888, 1890, 1904, 1910, 1920], "bound": [5, 14, 15, 26, 30, 36, 60, 477, 789, 931, 942, 1074, 1075, 1187, 1332, 1333, 1334, 1412, 1413, 1414, 1419, 1437, 1518, 1688, 1719, 1740, 1860, 1861, 1878, 1880, 1902, 1905, 1915], "greater": [5, 38, 55, 289, 611, 674, 936, 937, 942, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1131, 1143, 1241, 1304, 1335, 1467, 1518, 1529, 1555, 1568, 1587, 1607, 1640, 1840, 1858, 1880, 1883, 1895, 1900, 1915], "spend": [5, 8, 1259], "sens": [5, 44, 55, 68, 1622, 1837, 1838, 1860, 1880], "respons": [5, 8, 10, 15, 38, 40, 42, 44, 46, 52, 57, 60, 67, 964, 1407, 1536, 1599, 1880, 1883, 1885, 1886, 1891, 1910], "Of": [5, 1645, 1854, 1884, 1885], "cours": [5, 16, 19, 68, 1854, 1884, 1885, 1910], "realiti": 5, "complic": [5, 15, 36, 68, 787, 1864, 1874, 1881, 1902, 1910, 1912], "depend": [5, 6, 12, 14, 15, 16, 18, 19, 21, 24, 25, 29, 35, 38, 42, 44, 46, 55, 56, 57, 60, 68, 312, 779, 872, 972, 1019, 1023, 1037, 1038, 1081, 1083, 1091, 1092, 1093, 1118, 1122, 1127, 1198, 1202, 1222, 1223, 1250, 1276, 1281, 1335, 1336, 1353, 1355, 1363, 1366, 1379, 1385, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1470, 1471, 1483, 1490, 1491, 1501, 1510, 1518, 1530, 1553, 1561, 1568, 1587, 1590, 1599, 1611, 1612, 1618, 1653, 1680, 1692, 1694, 1711, 1727, 1787, 1788, 1789, 1791, 1792, 1805, 1828, 1850, 1854, 1857, 1859, 1860, 1867, 1872, 1880, 1882, 1883, 1885, 1886, 1888, 1891, 1898, 1904, 1905, 1910, 1914, 1920, 1921], "could": [5, 6, 8, 9, 12, 16, 21, 26, 35, 38, 44, 46, 55, 60, 65, 67, 68, 577, 578, 579, 581, 582, 999, 1081, 1083, 1091, 1092, 1093, 1184, 1217, 1258, 1276, 1300, 1301, 1679, 1782, 1837, 1859, 1860, 1867, 1872, 1880, 1883, 1884, 1897, 1898, 1902, 1905, 1906, 1910, 1911, 1912, 1914, 1918, 1919], "account": [5, 53, 68, 1599, 1878, 1882, 1914], "heavili": [5, 1664, 1882, 1885, 1902], "similarli": [5, 8, 15, 18, 67, 68, 754, 784, 788, 852, 938, 1080, 1187, 1242, 1419, 1595, 1596, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629, 1829, 1830, 1831, 1832, 1859, 1880, 1885, 1887, 1888, 1894, 1914], "platform": [5, 9, 10, 29, 38, 47, 48, 52, 1233, 1234, 1245, 1704, 1805, 1868, 1889, 1894, 1895, 1905], "startup": 5, "slower": [5, 15, 29, 38, 870, 896, 1100, 1101, 1102, 1216, 1223, 1537, 1606, 1885, 1895, 1901, 1915], "rerun": [6, 38, 1883], "segment": [6, 16, 21, 1017, 1113, 1450, 1902], "persist": [6, 15, 33, 40, 60, 754, 809, 810, 811, 1187, 1371, 1389, 1419, 1434, 1883, 1891, 1896, 1897], "rng": [6, 35, 992, 1031, 1741, 1883, 1895, 1909], "advanc": [6, 16, 30, 35, 36, 46, 1462, 1464, 1466, 1645, 1654, 1864, 1867, 1874, 1883, 1889, 1893, 1918, 1919], "juggl": 6, "dropout": [6, 43, 68, 728, 729, 754, 1187, 1331, 1358, 1359, 1360, 1364, 1371, 1389, 1419, 1425, 1434, 1435, 1462, 1464, 1466, 1484, 1504, 1505, 1506, 1511, 1568, 1855, 1858, 1868, 1874, 1875, 1880, 1883, 1900, 1907], "moder": 6, "hit": [6, 9, 16, 26, 29, 1599, 1854, 1883], "preserve_rng_st": 6, "checkpoint_sequenti": [6, 1855], "omit": [6, 29, 38, 56, 1094, 1095, 1097, 1373, 1433, 1897, 1898, 1910, 1921], "_infer_device_typ": 6, "remain": [6, 9, 44, 55, 68, 1294, 1362, 1363, 1509, 1510, 1590, 1599, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629, 1705, 1727, 1870, 1872, 1879, 1887, 1891], "consequ": [6, 65, 1250, 1389, 1805, 1860, 1880, 1883, 1895], "random": [6, 16, 26, 44, 46, 55, 56, 61, 68, 86, 152, 754, 886, 917, 992, 993, 998, 1007, 1008, 1027, 1028, 1031, 1032, 1121, 1128, 1139, 1163, 1259, 1279, 1298, 1299, 1303, 1305, 1331, 1342, 1364, 1371, 1389, 1437, 1511, 1561, 1566, 1590, 1607, 1613, 1619, 1620, 1627, 1628, 1647, 1694, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1741, 1754, 1806, 1847, 1854, 1855, 1858, 1866, 1878, 1886, 1888, 1894, 1898, 1900, 1919], "gradient": [6, 16, 27, 35, 36, 38, 42, 44, 60, 61, 64, 148, 219, 220, 287, 332, 483, 490, 508, 689, 690, 874, 883, 885, 887, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 907, 908, 918, 944, 1064, 1116, 1117, 1118, 1119, 1123, 1128, 1129, 1162, 1187, 1222, 1223, 1226, 1233, 1234, 1250, 1259, 1276, 1278, 1284, 1287, 1289, 1335, 1342, 1350, 1351, 1352, 1355, 1356, 1362, 1363, 1373, 1387, 1388, 1419, 1426, 1450, 1501, 1502, 1509, 1510, 1520, 1529, 1537, 1539, 1540, 1553, 1587, 1588, 1589, 1595, 1596, 1599, 1600, 1603, 1604, 1606, 1611, 1644, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1679, 1692, 1750, 1786, 1805, 1847, 1855, 1857, 1858, 1867, 1874, 1875, 1878, 1883, 1884, 1885, 1887, 1888, 1891, 1894, 1900, 1901, 1910, 1911, 1914], "among": [6, 15, 35, 36, 38, 42, 44, 55, 973, 974, 977, 1149, 1356, 1647, 1860], "detect": [6, 14, 16, 26, 29, 31, 32, 35, 38, 39, 46, 48, 60, 895, 896, 897, 898, 899, 900, 1117, 1191, 1463, 1465, 1599, 1840, 1855, 1872, 1875, 1883, 1888, 1894, 1898, 1902, 1910], "priorit": [6, 1120, 1121, 1123, 1661, 1662, 1914], "defaultdevicetyp": 6, "anticip": 6, "belong": [6, 19, 25, 38, 40, 42, 44, 52, 68, 931, 966, 1676, 1854, 1883, 1901, 1925], "use_reentr": 6, "context_fn": 6, "noop_context_fn": 6, "techniqu": [6, 19, 26, 68, 1357, 1613, 1826, 1876, 1891, 1901, 1903, 1905], "intermedi": [6, 14, 15, 29, 45, 65, 68, 928, 1111, 1117, 1124, 1276, 1363, 1462, 1464, 1466, 1510, 1857, 1860, 1883, 1885, 1886, 1887, 1894, 1924], "entir": [6, 8, 12, 13, 14, 15, 16, 19, 20, 26, 29, 35, 38, 46, 56, 68, 691, 902, 903, 1117, 1140, 1358, 1359, 1360, 1364, 1382, 1383, 1384, 1391, 1504, 1505, 1506, 1511, 1599, 1617, 1619, 1643, 1860, 1875, 1880, 1883, 1885, 1886, 1887, 1890, 1891, 1898, 1902, 1905, 1910, 1912, 1914], "recomput": [6, 14, 893, 1471, 1529, 1643, 1901], "refer": [6, 12, 19, 20, 21, 26, 29, 35, 36, 38, 39, 40, 42, 44, 47, 50, 51, 55, 56, 60, 61, 67, 251, 728, 729, 750, 758, 786, 787, 788, 813, 814, 815, 818, 819, 820, 853, 867, 872, 887, 929, 999, 1004, 1063, 1113, 1135, 1136, 1168, 1175, 1187, 1190, 1198, 1205, 1218, 1239, 1243, 1256, 1259, 1342, 1373, 1419, 1468, 1483, 1491, 1500, 1518, 1586, 1599, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1694, 1711, 1747, 1769, 1806, 1840, 1854, 1855, 1858, 1872, 1873, 1875, 1876, 1879, 1880, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1893, 1895, 1901, 1906, 1907, 1910, 1911, 1914, 1917, 1918, 1919, 1922], "potenti": [6, 9, 14, 16, 19, 38, 55, 57, 189, 206, 1196, 1232, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1568, 1599, 1840, 1859, 1867, 1872, 1880, 1883, 1902, 1914, 1918], "silent": [6, 18, 1007, 1008, 1027, 1028, 1161, 1202, 1419, 1603, 1604, 1883, 1894, 1898], "consider": [6, 8, 878, 1184, 1363, 1599, 1860, 1882], "limit": [6, 9, 10, 14, 15, 16, 18, 19, 22, 26, 35, 43, 60, 61, 66, 1030, 1117, 1200, 1304, 1342, 1362, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1568, 1599, 1622, 1753, 1855, 1860, 1864, 1872, 1874, 1875, 1880, 1883, 1884, 1891, 1894, 1895, 1896, 1902, 1905, 1908, 1910, 1911, 1921], "reentrant": [6, 1599], "stop": [6, 44, 46, 55, 56, 57, 859, 999, 1185, 1259, 1342, 1632, 1688, 1720, 1857, 1860, 1910], "soon": [6, 19, 26, 55, 60, 787, 1880, 1905, 1910, 1912], "set_checkpoint_early_stop": 6, "entireti": 6, "no_grad": [6, 855, 1064, 1118, 1122, 1127, 1162, 1187, 1362, 1419, 1425, 1466, 1600, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1878, 1880, 1891, 1922], "condit": [6, 14, 15, 33, 35, 65, 68, 611, 614, 618, 688, 754, 896, 902, 903, 1184, 1202, 1216, 1218, 1226, 1232, 1233, 1234, 1245, 1250, 1371, 1389, 1434, 1466, 1634, 1639, 1828, 1850, 1856, 1857, 1858, 1859, 1861, 1875, 1880, 1885, 1894, 1903, 1919], "unmet": 6, "particip": [6, 10, 14, 35, 38, 39, 42, 55, 56, 1599, 1911], "wherea": [6, 15, 1242, 1300, 1301, 1314, 1675, 1805, 1860, 1921], "know": [6, 8, 9, 14, 15, 16, 19, 29, 39, 45, 68, 482, 891, 896, 1111, 1117, 1197, 1599, 1857, 1860, 1867, 1879, 1880, 1883, 1888, 1898, 1902, 1910, 1911, 1912, 1914], "lstm": [6, 757, 1390, 1858, 1883, 1898, 1900, 1905, 1907, 1908, 1919], "hidden": [6, 754, 1126, 1371, 1372, 1389, 1390, 1434, 1436, 1600, 1883, 1919], "correctli": [6, 18, 35, 38, 55, 60, 482, 1117, 1187, 1202, 1419, 1537, 1857, 1859, 1860, 1870, 1874, 1879, 1880, 1884, 1885, 1886, 1893, 1895, 1905, 1910], "entrant": 6, "futur": [6, 9, 10, 14, 16, 36, 38, 40, 46, 55, 56, 65, 68, 287, 318, 508, 512, 551, 674, 681, 787, 809, 810, 811, 820, 855, 893, 937, 938, 952, 953, 960, 961, 963, 964, 966, 995, 996, 1003, 1004, 1006, 1133, 1187, 1190, 1196, 1197, 1200, 1205, 1217, 1228, 1230, 1231, 1232, 1235, 1248, 1276, 1277, 1288, 1359, 1419, 1520, 1542, 1543, 1544, 1591, 1599, 1603, 1640, 1641, 1646, 1664, 1704, 1720, 1801, 1805, 1828, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1866, 1867, 1868, 1870, 1874, 1875, 1882, 1883, 1885, 1896, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1907, 1910, 1914, 1916, 1920, 1921, 1922, 1924], "sequenti": [6, 16, 26, 35, 42, 60, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 787, 1128, 1187, 1196, 1365, 1419, 1458, 1469, 1608, 1622, 1689, 1847, 1857, 1872, 1875, 1883, 1891, 1898, 1901, 1903, 1905, 1924], "func": [6, 38, 43, 63, 65, 68, 856, 886, 888, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 1162, 1190, 1202, 1203, 1518, 1641, 1847, 1855, 1860, 1879, 1910, 1912, 1925], "compris": [6, 56], "chunk": [6, 35, 38, 40, 60, 934, 977, 1122, 1356, 1599, 1793, 1857, 1858, 1873, 1900, 1901, 1903, 1910, 1918], "input_var": [6, 1356], "person": [7, 8, 10], "land": [7, 10, 11, 22], "six": [7, 1349], "commit": [7, 8, 10, 22, 29, 61, 1854, 1855, 1894, 1895], "repositori": [7, 10, 64, 68, 1854, 1885, 1893], "submit": [7, 10, 22, 963, 964, 966, 1883, 1895], "month": [7, 10], "qualifi": [7, 38, 43, 52, 68, 674, 1187, 1419, 1866, 1902], "pr": [7, 8, 14, 1694, 1806, 1924], "interest": [7, 8, 10, 13, 15, 18, 20, 1880, 1886, 1888, 1891], "merge_rul": 7, "vote": [7, 10], "decis": [7, 14, 40, 46, 55, 57, 68, 1202, 1867, 1879], "criteria": [7, 10, 1259], "approv": [7, 10], "Not": [7, 19, 56, 1317, 1857, 1859, 1860, 1861, 1885, 1900, 1905, 1910], "busi": [7, 10], "dai": [7, 8, 15, 22], "contributor": [7, 8, 9, 10], "seen": [7, 17, 19, 32, 44, 68, 219, 934, 947, 1288, 1350, 1351, 1352, 1450, 1542, 1543, 1544, 1688, 1857, 1867, 1880, 1883, 1898, 1914], "thumb": [7, 38], "acceler": [8, 16, 36, 1337, 1338, 1339, 1458, 1658, 1889], "deep": [8, 10, 14, 16, 23, 26, 68, 1337, 1338, 1339, 1361, 1458, 1674, 1855, 1878, 1891, 1905], "neural": [8, 9, 14, 30, 68, 1331, 1342, 1357, 1364, 1373, 1385, 1418, 1419, 1426, 1431, 1432, 1446, 1448, 1462, 1464, 1466, 1548, 1571, 1609, 1672, 1680, 1686, 1857, 1859, 1860, 1878, 1883, 1894, 1898], "tape": 8, "system": [8, 9, 14, 29, 30, 31, 35, 56, 65, 68, 940, 1140, 1194, 1218, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1247, 1248, 1249, 1253, 1258, 1277, 1304, 1462, 1464, 1466, 1599, 1609, 1611, 1749, 1828, 1861, 1866, 1870, 1880, 1882, 1883, 1890, 1891, 1897, 1902, 1910], "organ": [8, 16, 19, 1884, 1890, 1902], "technic": [8, 10, 14, 20, 55, 68, 1187, 1419, 1595, 1596, 1855, 1880, 1887, 1902], "md": [8, 68, 786, 1902], "healthi": [8, 46, 55], "team": [8, 38, 61, 1896, 1903], "commun": [8, 9, 10, 16, 18, 20, 39, 40, 42, 46, 55, 57, 60, 1599, 1880, 1884, 1910, 1911], "ve": [8, 15, 16, 19, 20, 63, 64, 65, 68, 1191, 1867, 1872, 1880, 1886, 1911, 1919], "come": [8, 9, 10, 19, 21, 35, 43, 44, 45, 52, 55, 61, 65, 1060, 1111, 1117, 1258, 1358, 1359, 1360, 1364, 1385, 1655, 1864, 1868, 1884, 1886, 1890, 1902, 1910, 1912, 1914], "peopl": [8, 18, 1880, 1905], "scratch": [8, 26, 1880], "itch": 8, "acquaint": 8, "tip": [8, 16, 1883], "tracker": [8, 1259], "confirm": [8, 16, 21, 1854, 1857, 1885, 1898, 1910, 1912], "tend": [8, 897, 1840], "bootcamp": 8, "1hr": 8, "although": [8, 9, 25, 43, 44, 65, 68, 966, 1350, 1351, 1352, 1419, 1427, 1599, 1855, 1860, 1879, 1885, 1894, 1903, 1905], "join": [8, 36, 38, 42, 55, 56, 67, 68, 1599, 1854, 1855, 1861, 1872, 1880, 1884, 1893, 1900, 1920], "dev": [8, 11, 23, 26, 47, 52], "happi": 8, "research": [8, 9, 10, 1599, 1854, 1880, 1888, 1896], "partner": 8, "speed": [8, 9, 19, 20, 29, 42, 972, 1060, 1116, 1178, 1191, 1196, 1250, 1327, 1425, 1805, 1880, 1882, 1883, 1884, 1885, 1887, 1889, 1894, 1905, 1910], "reach": [8, 9, 10, 13, 35, 36, 38, 39, 46, 55, 61, 1259, 1599, 1677, 1680, 1683, 1684, 1880, 1893, 1903, 1905, 1906, 1910], "design": [8, 10, 14, 16, 18, 23, 26, 35, 44, 52, 55, 61, 64, 65, 66, 902, 903, 1187, 1206, 1419, 1653, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1816, 1854, 1855, 1856, 1870, 1883, 1885, 1889, 1891, 1902], "comment": [8, 68, 1744, 1860, 1861, 1885, 1917, 1919], "crack": 8, "usual": [8, 15, 29, 35, 36, 40, 55, 56, 68, 82, 477, 825, 826, 827, 828, 835, 887, 895, 897, 901, 1128, 1358, 1359, 1360, 1364, 1379, 1382, 1383, 1384, 1385, 1590, 1599, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1847, 1857, 1860, 1875, 1879, 1880, 1882, 1883, 1887, 1890, 1901, 1906, 1908, 1910, 1919, 1925], "idea": [8, 16, 26, 61, 1060, 1327, 1599, 1883, 1890, 1898, 1911], "rfc": [8, 1880, 1905, 1911], "big": [8, 15, 1661, 1662, 1665, 1671, 1672, 1787, 1788, 1789, 1790, 1791, 1792, 1901, 1905], "post": [8, 9, 15, 23, 26, 39, 40, 42, 60, 850, 851, 855, 1187, 1419, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1855, 1864, 1880, 1884, 1887, 1897], "standard": [8, 29, 32, 36, 44, 48, 49, 53, 65, 68, 82, 349, 374, 583, 1080, 1331, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1385, 1391, 1458, 1464, 1466, 1647, 1694, 1717, 1763, 1768, 1799, 1800, 1859, 1861, 1875, 1878, 1882, 1883, 1893, 1894, 1898, 1899, 1902, 1915], "lot": [8, 14, 15, 18, 19, 20, 29, 35, 1872, 1880, 1883, 1888, 1893, 1902, 1903, 1909, 1911, 1919], "boil": 8, "mostli": [8, 44, 1185, 1599, 1883, 1914, 1925], "evid": 8, "peer": [8, 38, 42, 55, 60, 970, 1599, 1883, 1910], "paper": [8, 10, 36, 44, 754, 1327, 1331, 1337, 1338, 1339, 1341, 1350, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1364, 1367, 1368, 1371, 1374, 1377, 1382, 1383, 1384, 1391, 1425, 1431, 1432, 1437, 1446, 1450, 1458, 1462, 1464, 1466, 1467, 1468, 1513, 1514, 1523, 1661, 1662, 1673, 1680, 1686, 1888, 1903], "framework": [8, 9, 10, 44, 52, 61, 67, 754, 968, 1296, 1371, 1599, 1606, 1674, 1753, 1855, 1892, 1903, 1905, 1911, 1912], "bit": [8, 18, 19, 68, 86, 327, 454, 755, 757, 759, 813, 814, 815, 816, 819, 821, 852, 920, 923, 952, 953, 1113, 1167, 1728, 1729, 1741, 1770, 1883, 1891, 1894, 1897, 1905, 1908, 1909, 1914, 1917, 1920, 1926], "accept": [8, 10, 26, 35, 38, 40, 43, 61, 62, 64, 66, 148, 508, 796, 883, 884, 885, 886, 887, 892, 901, 937, 1003, 1006, 1112, 1128, 1149, 1187, 1191, 1355, 1419, 1426, 1447, 1618, 1632, 1633, 1639, 1657, 1745, 1782, 1796, 1847, 1860, 1874, 1883, 1885, 1886, 1898, 1901, 1910, 1917, 1919], "overwhelm": [8, 16, 26, 1910], "newli": [8, 19, 60, 68, 1074, 1075, 1362, 1363, 1706, 1707, 1864], "publish": [8, 10, 47, 52, 55, 1259, 1855], "ground": [8, 10, 1355, 1501, 1919], "becom": [8, 9, 10, 16, 19, 26, 35, 38, 44, 68, 287, 754, 870, 1140, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1371, 1389, 1404, 1424, 1434, 1447, 1501, 1518, 1590, 1678, 1778, 1826, 1867, 1868, 1880, 1884, 1898, 1902, 1904, 1910], "refactor": [8, 68, 1897, 1905], "coordin": [8, 16, 26, 38, 40, 44, 46, 577, 580, 878, 1140, 1149, 1288, 1698, 1790, 1830, 1832, 1880, 1914, 1919], "pace": 8, "branch": [8, 14, 22, 68, 1854, 1859, 1860, 1883], "fast": [8, 9, 15, 18, 35, 38, 902, 1361, 1382, 1383, 1384, 1450, 1466, 1568, 1686, 1692, 1711, 1733, 1748, 1855, 1882, 1883, 1885, 1889, 1901, 1910, 1914, 1917, 1918], "definit": [8, 9, 19, 35, 38, 39, 44, 51, 68, 938, 939, 940, 959, 1003, 1108, 1207, 1216, 1217, 1259, 1385, 1530, 1575, 1646, 1724, 1826, 1854, 1857, 1859, 1861, 1879, 1880, 1885, 1888, 1902, 1905, 1919, 1921], "fundament": [8, 15, 65, 1859, 1891, 1910, 1914], "cut": [8, 16], "guidanc": [8, 10, 14, 30, 62, 1903], "stage": [8, 26, 32, 36, 42, 52, 60, 67, 1855, 1867, 1875, 1903, 1912], "piec": [8, 19, 1866, 1875, 1911], "advic": 8, "readi": [8, 20, 29, 67, 855, 856, 916, 925, 1144, 1145, 1599, 1857, 1884, 1910, 1911], "draft": 8, "convert": [8, 19, 25, 26, 35, 38, 43, 44, 45, 60, 64, 68, 80, 148, 574, 578, 579, 580, 581, 582, 729, 782, 783, 784, 786, 787, 788, 809, 810, 811, 832, 833, 848, 851, 852, 853, 873, 874, 933, 946, 1044, 1080, 1111, 1187, 1256, 1419, 1429, 1430, 1458, 1465, 1590, 1601, 1602, 1605, 1642, 1653, 1655, 1656, 1675, 1706, 1707, 1712, 1787, 1788, 1789, 1790, 1791, 1792, 1857, 1858, 1859, 1860, 1875, 1885, 1889, 1898, 1899, 1905, 1908, 1914, 1919, 1921, 1924], "press": [8, 68], "button": [8, 22], "prepend": [8, 29, 35, 38, 42, 68, 227, 1052, 1187, 1281, 1419, 1822, 1858, 1881], "titl": [8, 1900, 1904], "wip": 8, "progress": [8, 38, 42, 46, 56, 58, 963, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1841, 1854, 1869], "ci": [8, 22, 1855], "folk": 8, "who": [8, 9, 10, 19, 20, 27, 55, 1902], "regularli": 8, "queue": [8, 46, 57, 1872, 1919], "everyth": [8, 14, 16, 19, 26, 35, 44, 64, 1857, 1872, 1902], "happen": [8, 10, 19, 20, 38, 40, 42, 44, 46, 48, 55, 60, 65, 68, 82, 601, 785, 808, 1117, 1458, 1599, 1606, 1677, 1683, 1684, 1690, 1805, 1855, 1870, 1872, 1880, 1883, 1884, 1885, 1886, 1887, 1892, 1893, 1897, 1898, 1905, 1910, 1918], "subsystem": [8, 27, 61, 66, 1855, 1885], "feel": [8, 1875, 1898, 1914], "ll": [8, 12, 15, 65, 68, 754, 814, 815, 855, 856, 938, 1006, 1216, 1371, 1372, 1389, 1390, 1867, 1880, 1883, 1885, 1886, 1893, 1898, 1905, 1911], "round": [8, 35, 38, 503, 659, 660, 793, 796, 814, 859, 955, 957, 1017, 1055, 1081, 1082, 1083, 1087, 1091, 1092, 1093, 1108, 1232, 1245, 1471, 1529, 1704, 1705, 1724, 1773, 1856, 1858, 1860, 1873, 1883, 1900, 1905, 1908, 1914, 1915], "trip": [8, 68, 1081, 1082, 1083, 1087, 1091, 1092, 1093], "noth": [8, 29, 46, 68, 674, 997, 1611, 1661, 1662, 1689, 1857, 1859, 1912], "accompani": [8, 81], "solut": [8, 9, 65, 1231, 1232, 1236, 1244, 1247, 1249, 1253, 1335, 1599, 1828, 1857, 1858, 1878, 1879, 1887, 1893], "think": [8, 10, 15, 16, 68, 1675, 1857, 1859, 1880, 1901, 1902, 1912], "confid": [8, 1919], "ahead": [8, 14, 16, 1855, 1905], "search": [8, 12, 15, 22, 26, 27, 36, 813, 931, 1377, 1523, 1599, 1656, 1711, 1740, 1857, 1873, 1874, 1898, 1902, 1914], "repo": [8, 1680, 1854, 1897], "unabl": [8, 24, 26, 65, 80, 1898, 1901], "reproduc": [8, 16, 26, 35, 65, 310, 318, 510, 512, 918, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1415, 1416, 1417, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1510, 1518, 1529, 1556, 1568, 1587, 1588, 1589, 1590, 1840, 1854, 1855, 1901, 1902], "problemat": [8, 35, 68, 1857, 1894, 1906], "insight": [8, 32], "individu": [8, 10, 18, 22, 29, 35, 36, 38, 40, 42, 60, 68, 81, 239, 674, 786, 832, 833, 938, 1026, 1078, 1096, 1187, 1342, 1419, 1458, 1599, 1653, 1860, 1873, 1879, 1880, 1883, 1885, 1890, 1894, 1895, 1898, 1908, 1910, 1921], "intent": [8, 21, 53, 55, 65, 1745, 1867, 1902], "lock": [8, 35, 38, 42, 44, 1880, 1883, 1893, 1902, 1911], "strike": 8, "convers": [8, 15, 25, 454, 574, 577, 787, 932, 1172, 1632, 1855, 1861, 1889, 1898, 1905, 1906, 1914], "medium": [8, 60, 1748], "prioriti": [8, 10, 11, 38, 674, 848, 966, 1859], "entranc": [8, 1883], "great": [8, 14, 1880, 1888], "deal": [8, 9, 14, 15, 19, 35, 46, 57, 1821, 1872, 1887, 1910], "welcom": [8, 1875, 1901, 1914], "aim": [8, 1886, 1914], "rare": [8, 14, 1879, 1898, 1925], "typo": 8, "send": [8, 15, 18, 35, 38, 46, 57, 999, 1590, 1599, 1872, 1884, 1893, 1897, 1900, 1904, 1910, 1911, 1912, 1922, 1924], "forum": [8, 10, 1887, 1893], "share": [8, 11, 29, 35, 39, 42, 44, 45, 55, 56, 60, 65, 219, 308, 337, 454, 479, 515, 518, 611, 853, 873, 874, 891, 902, 903, 961, 963, 995, 999, 1111, 1112, 1113, 1157, 1234, 1318, 1319, 1356, 1599, 1609, 1647, 1722, 1736, 1796, 1819, 1825, 1839, 1858, 1879, 1880, 1882, 1893, 1896, 1897, 1898, 1910, 1914, 1916, 1918, 1923], "resolv": [8, 9, 10, 14, 40, 44, 68, 80, 81, 1187, 1350, 1351, 1352, 1366, 1416, 1419, 1859, 1860, 1861, 1897, 1902, 1916, 1925], "challeng": [8, 16, 38, 1911], "feedback": [8, 26, 32, 36, 60, 61, 1599, 1855], "direct": [8, 10, 19, 25, 27, 38, 754, 786, 1101, 1102, 1187, 1371, 1389, 1419, 1434, 1643, 1673, 1694, 1711, 1732, 1880, 1883, 1885, 1891, 1910], "yourself": [8, 16, 63, 961, 1885, 1891, 1893, 1925], "problem": [8, 14, 16, 20, 26, 35, 38, 55, 65, 1060, 1202, 1232, 1244, 1259, 1355, 1426, 1483, 1744, 1872, 1880, 1883, 1887, 1888, 1893, 1897, 1903, 1905, 1906, 1912, 1917], "area": [8, 10, 1529, 1891, 1905, 1915], "appreci": 8, "strive": 8, "respond": [8, 38], "quickli": [8, 9, 18, 36, 55], "ey": [8, 44, 189, 206, 939, 1128, 1207, 1216, 1227, 1238, 1241, 1244, 1245, 1252, 1253, 1606, 1704, 1783, 1847, 1858, 1862, 1885, 1900], "everyon": [8, 46, 55], "touch": [8, 53, 68], "versu": [8, 1423], "write": [8, 9, 10, 14, 16, 18, 20, 26, 32, 35, 38, 40, 43, 46, 48, 52, 53, 54, 55, 60, 65, 66, 80, 81, 251, 508, 691, 929, 1112, 1128, 1164, 1197, 1217, 1228, 1229, 1230, 1234, 1235, 1248, 1586, 1654, 1736, 1828, 1840, 1847, 1855, 1859, 1870, 1874, 1883, 1886, 1887, 1888, 1901, 1902, 1914, 1919], "blog": [8, 9, 1864, 1884, 1905], "around": [8, 10, 19, 24, 26, 27, 38, 44, 64, 65, 67, 68, 148, 618, 887, 901, 961, 963, 964, 966, 1035, 1106, 1107, 1117, 1187, 1599, 1733, 1857, 1872, 1880, 1883, 1898, 1910], "internet": 8, "grow": [8, 9, 18, 68, 1914], "market": [8, 10], "benefit": [8, 9, 26, 38, 68, 841, 1688, 1872, 1883, 1905, 1914], "opinion": [8, 9, 1914], "isn": [8, 15, 35, 68, 454, 1184, 1880, 1883, 1885, 1910, 1921], "aspect": [8, 38, 68, 1885, 1891], "seem": [8, 1898], "unusu": [8, 15], "claim": [8, 1686, 1888], "wast": [8, 1883], "someon": [8, 10, 1185, 1874], "too": [8, 10, 14, 15, 20, 26, 29, 36, 40, 55, 60, 65, 68, 1017, 1116, 1232, 1250, 1315, 1342, 1355, 1419, 1502, 1600, 1641, 1860, 1882, 1887, 1888, 1893, 1894, 1895, 1897, 1899, 1902, 1903, 1912, 1914], "advisori": 8, "fashion": [8, 35, 38, 57, 510, 1264, 1622, 1857], "rough": [8, 10], "consensu": [8, 10], "corpor": [8, 26], "wrote": [8, 9], "implicitli": [8, 38, 48, 60, 68, 1043, 1132, 1140, 1202, 1203, 1258, 1332, 1333, 1334, 1412, 1413, 1414, 1745, 1826, 1857, 1859, 1860, 1880, 1889], "lifetim": [8, 15, 1883, 1910], "immedi": [8, 9, 10, 14, 15, 55, 56, 60, 67, 1187, 1190, 1419, 1860, 1891, 1896, 1901, 1910, 1912], "sai": [8, 14, 19, 25, 68, 491, 1120, 1121, 1122, 1187, 1419, 1857, 1879, 1880, 1887, 1902, 1911, 1912, 1914], "bugfix": 8, "motiv": [8, 9, 16, 26, 68, 729, 1891, 1911], "ye": [8, 1898, 1901, 1914], "knuth": 8, "bewar": 8, "mere": 8, "proven": [8, 1357, 1599], "ok": [8, 17, 48, 53, 64, 947, 1192, 1912], "sometim": [8, 14, 15, 68, 898, 1017, 1202, 1366, 1470, 1496, 1497, 1498, 1611, 1855, 1860, 1872, 1880, 1883, 1886, 1887, 1891, 1893, 1902, 1917, 1920, 1925], "obvious": [8, 15, 18], "broken": [8, 14, 35, 1017, 1898, 1902], "contrari": [8, 1882], "accident": 8, "put": [8, 10, 15, 24, 35, 38, 46, 64, 67, 68, 316, 1080, 1258, 1374, 1680, 1854, 1858, 1872, 1883, 1893, 1900, 1902, 1911, 1912], "difficulti": [8, 1878], "nonlinearli": 8, "sign": [8, 44, 338, 523, 878, 954, 1048, 1096, 1108, 1113, 1220, 1245, 1246, 1267, 1411, 1673, 1724, 1756, 1770, 1856, 1858, 1873, 1900, 1908, 1914, 1917, 1920, 1921], "split": [8, 35, 38, 68, 611, 766, 767, 768, 853, 855, 856, 934, 941, 1017, 1058, 1150, 1356, 1370, 1371, 1389, 1425, 1434, 1493, 1494, 1495, 1496, 1497, 1498, 1517, 1820, 1848, 1857, 1858, 1873, 1883, 1900, 1902, 1903, 1905, 1910, 1914, 1918], "shippabl": 8, "subtl": [8, 15, 16, 26, 1382, 1383, 1384, 1885], "nuanc": [8, 19, 20], "extra": [8, 15, 19, 29, 35, 36, 38, 42, 44, 60, 68, 1060, 1117, 1128, 1187, 1194, 1197, 1232, 1258, 1419, 1426, 1606, 1801, 1847, 1859, 1874, 1880, 1882, 1884, 1885, 1887, 1890, 1902, 1904, 1914, 1921, 1922], "understand": [8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 26, 38, 40, 46, 47, 1117, 1244, 1864, 1878, 1880, 1883, 1889, 1896, 1904, 1919], "hack": 8, "answer": [8, 11, 15, 68, 818, 1336, 1624], "regress": [8, 21, 1335, 1895], "scrutini": 8, "undertak": 8, "rest": [8, 19, 35, 36, 56, 68, 787, 808, 1113, 1252, 1253, 1820, 1874, 1891, 1895, 1902, 1903, 1905, 1910], "chanc": [8, 15, 40, 44], "unrel": [8, 1126, 1879, 1885, 1902], "aid": [8, 26, 68, 1880], "troubleshoot": [8, 38, 1855], "mayb": [8, 15, 1124], "bracnh": 8, "rebas": 8, "latest": [8, 38, 42, 44, 1618, 1854, 1889, 1898], "statu": [8, 10, 46, 1276, 1855, 1861, 1872, 1905], "hud": 8, "risk": [8, 9, 60, 1608, 1611], "anyth": [8, 14, 45, 48, 67, 817, 820, 1198, 1675, 1857, 1864, 1875, 1891, 1902], "configur": [8, 14, 16, 17, 22, 26, 28, 35, 36, 38, 46, 47, 52, 55, 56, 57, 60, 782, 783, 786, 787, 791, 808, 809, 810, 811, 817, 820, 832, 833, 834, 837, 839, 842, 852, 853, 854, 855, 856, 947, 1017, 1599, 1632, 1749, 1840, 1855, 1866, 1870, 1883, 1884, 1895, 1897, 1902, 1908, 1910, 1919, 1921], "riski": 8, "had": [8, 14, 18, 21, 68, 1202, 1590, 1822, 1880, 1886], "beforehand": [8, 16, 67], "hei": 8, "my": [8, 35, 1356, 1890, 1898, 1905], "member": [8, 10, 35, 38, 46, 55, 56, 68, 1187, 1373, 1419, 1515, 1857, 1859, 1860, 1870, 1887, 1904, 1910, 1921, 1922], "sphinx": 8, "folder": [8, 10, 18, 26, 29, 35, 68, 1656, 1854, 1919], "tree": [8, 17, 48, 64, 947, 1419, 1462, 1656, 1898, 1902, 1904, 1912], "master": [8, 17, 38, 58, 786, 947, 1117, 1462, 1854, 1910], "doxygen": 8, "special": [8, 13, 14, 15, 19, 21, 27, 48, 57, 65, 68, 735, 736, 737, 817, 820, 902, 1053, 1067, 1068, 1069, 1071, 1072, 1081, 1083, 1154, 1155, 1156, 1200, 1258, 1272, 1312, 1356, 1466, 1600, 1601, 1602, 1645, 1675, 1699, 1757, 1768, 1772, 1851, 1855, 1861, 1866, 1874, 1883, 1885, 1888, 1890, 1898, 1902, 1905, 1918, 1919], "server": [8, 35, 38, 56, 1191, 1883, 1902, 1905, 1910], "cppdoc": [8, 30], "cpp": [8, 14, 29, 38, 1309, 1884], "accomplish": [8, 16, 40, 1891], "holist": 8, "concept": [8, 65, 68, 1864, 1886, 1891, 1917], "galleri": 8, "restructur": [8, 1902], "text": [8, 18, 44, 69, 74, 75, 76, 77, 78, 79, 151, 152, 171, 602, 611, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 688, 692, 739, 740, 750, 752, 754, 758, 762, 763, 764, 766, 767, 768, 774, 778, 814, 815, 859, 875, 876, 877, 878, 879, 915, 916, 917, 920, 923, 925, 927, 936, 942, 953, 954, 956, 957, 959, 1055, 1074, 1075, 1104, 1105, 1109, 1110, 1131, 1143, 1144, 1145, 1146, 1153, 1176, 1184, 1207, 1210, 1211, 1212, 1215, 1216, 1223, 1226, 1232, 1236, 1241, 1244, 1250, 1257, 1266, 1273, 1274, 1275, 1276, 1308, 1309, 1320, 1321, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1422, 1423, 1424, 1425, 1426, 1427, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1485, 1486, 1487, 1489, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1504, 1505, 1506, 1511, 1514, 1516, 1517, 1518, 1522, 1523, 1533, 1538, 1542, 1543, 1544, 1548, 1553, 1556, 1561, 1562, 1564, 1568, 1569, 1570, 1571, 1574, 1575, 1576, 1578, 1579, 1580, 1604, 1606, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1680, 1697, 1698, 1701, 1704, 1717, 1720, 1723, 1735, 1756, 1758, 1759, 1771, 1773, 1783, 1784, 1794, 1801, 1802, 1805, 1817, 1818, 1850, 1875, 1878, 1888, 1898, 1902, 1908, 1915, 1919, 1921], "rst": 8, "rebuild": [8, 36], "circleci": 8, "shard": [8, 16, 35, 40, 42, 43, 60, 1599], "worker": [8, 29, 35, 36, 38, 39, 42, 46, 47, 48, 49, 55, 57, 58, 60, 1599, 1860, 1895, 1903, 1904, 1910, 1911, 1912], "40": [8, 13, 1140, 1259, 1340, 1382, 1606, 1607, 1630, 1631, 1640, 1643, 1816], "minut": [8, 11, 38, 1919], "netlifi": 8, "noplot": 8, "render": [8, 38, 1919], "notebook": 8, "rebuilt": [8, 36, 42], "deploi": [8, 46, 55, 1855, 1890, 1896, 1902], "action": [8, 38, 44, 46, 49, 68, 1883, 1902, 1904, 1912], "develop": [9, 10, 11, 20, 26, 29, 36, 38, 68, 1856, 1859, 1860, 1867, 1880, 1885, 1890, 1891, 1895, 1902, 1905, 1906, 1910, 1914], "meant": [9, 39, 55, 57, 1632, 1879, 1910], "rule": [9, 10, 15, 29, 38, 44, 68, 148, 854, 886, 887, 931, 932, 1043, 1236, 1247, 1337, 1338, 1339, 1382, 1383, 1384, 1458, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1740, 1826, 1855, 1857, 1859, 1873, 1875, 1880, 1881, 1885, 1888, 1917, 1921], "concern": [9, 35, 1872, 1883, 1898], "disagr": 9, "contribut": [9, 10, 40, 911, 1148, 1149, 1355, 1362, 1363, 1426, 1501, 1509, 1510, 1553, 1599, 1855, 1875, 1885, 1886, 1903], "maintainership": [9, 10], "escal": [9, 10], "hacker": 9, "poster": 9, "amaz": 9, "ml": [9, 18], "obsess": 9, "soumith": [9, 11], "goe": [9, 19, 68, 1113, 1331, 1661, 1662, 1887], "depth": [9, 10, 773, 779, 1021, 1022, 1200, 1334, 1349, 1352, 1414, 1471, 1529, 1587, 1867, 1884, 1891, 1904], "primari": [9, 10, 15, 38, 68, 1196, 1861, 1867, 1914], "goal": [9, 18, 52, 64, 68, 1288, 1867, 1880, 1884, 1888, 1899, 1912], "secondari": 9, "abil": [9, 1736, 1867, 1890, 1902], "flexibl": [9, 19, 36, 60, 64, 1243, 1599, 1867, 1883, 1885, 1891], "abstract": [9, 19, 35, 36, 39, 40, 44, 46, 55, 57, 904, 905, 906, 907, 908, 1613, 1860, 1884, 1905, 1910], "critic": [9, 16, 19, 55, 674, 1607, 1640, 1870, 1882, 1883], "concret": [9, 14, 15, 19, 44, 58, 64, 68, 779, 794, 818, 835, 1471, 1556, 1587, 1857, 1860, 1883, 1885, 1893], "manner": [9, 46, 508, 895, 897, 1874, 1876, 1881], "jump": [9, 554, 1917], "regim": 9, "ei": 9, "tradeoff": [9, 16, 21, 36, 1905, 1911], "temptat": 9, "impos": [9, 57, 66, 1744, 1872, 1879, 1917], "strict": [9, 895, 896, 897, 898, 899, 900, 1116, 1123, 1187, 1202, 1203, 1419, 1641, 1902, 1919, 1921], "upfront": [9, 14], "simplifi": [9, 14, 36, 67, 1194, 1409, 1607, 1675, 1867, 1880, 1888, 1891, 1901, 1911], "worth": [9, 10, 19, 35, 36, 58, 1117, 1854, 1918], "friction": 9, "compel": 9, "narrow": [9, 16, 26, 1256, 1319, 1675, 1763, 1858, 1860, 1873, 1900, 1907, 1918], "subproblem": 9, "fragment": [9, 26, 985, 1017, 1864, 1883], "ecosystem": [9, 18, 1890, 1892], "incomprehens": 9, "seamlessli": [9, 1875], "softwar": [9, 1222, 1223, 1250, 1840, 1883, 1889], "experi": [9, 10, 20, 23, 26, 27, 36, 66, 69, 74, 75, 76, 77, 78, 79, 1128, 1448, 1571, 1599, 1847, 1867, 1885, 1919], "rich": [9, 1860], "denomin": [9, 681, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1458, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1708], "subset": [9, 35, 38, 42, 56, 1198, 1675, 1856, 1857, 1859, 1860, 1885, 1898, 1908], "borrow": 9, "zen": 9, "implicit": [9, 762, 763, 766, 767, 768, 1132, 1140, 1332, 1333, 1334, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1412, 1413, 1414, 1470, 1485, 1486, 1487, 1493, 1494, 1495, 1542, 1543, 1544, 1692, 1856, 1858, 1860, 1861, 1898, 1902, 1918], "concis": [9, 48, 1910], "interchang": [9, 44, 1672, 1825, 1859, 1889, 1899], "everydai": 9, "english": 9, "movement": [9, 1918], "worri": [9, 1910], "placement": [9, 16, 43, 46, 853, 1590, 1905, 1910], "favor": [9, 19, 38, 779, 780, 781, 938, 1029, 1033, 1187, 1241, 1244, 1276, 1277, 1378, 1419, 1472, 1473, 1587, 1588, 1589, 1591, 1704, 1805, 1828], "practition": 9, "debugg": [9, 16, 26, 1192, 1888], "plug": 9, "ir": [9, 14, 15, 16, 20, 26, 68, 754, 1190, 1191, 1371, 1372, 1656, 1855, 1857, 1860, 1898, 1899], "classic": [9, 1880], "sort": [9, 14, 19, 42, 46, 68, 584, 603, 870, 871, 892, 1060, 1147, 1307, 1327, 1633, 1634, 1645, 1705, 1740, 1823, 1837, 1856, 1858, 1860, 1885, 1887, 1900, 1914], "distribut": [9, 20, 27, 35, 36, 39, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 60, 67, 171, 255, 283, 374, 450, 477, 602, 689, 690, 813, 917, 1034, 1309, 1327, 1331, 1355, 1356, 1357, 1358, 1359, 1360, 1364, 1369, 1373, 1385, 1433, 1437, 1458, 1501, 1503, 1504, 1505, 1506, 1511, 1515, 1516, 1520, 1530, 1561, 1599, 1647, 1697, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1855, 1860, 1874, 1875, 1878, 1879, 1883, 1903, 1904, 1906, 1912, 1915, 1919, 1922], "tldr": 9, "resourc": [9, 16, 22, 29, 35, 46, 51, 55, 68, 1860, 1872, 1914], "characterist": [9, 1806, 1886, 1891], "uniformli": [9, 44, 1715, 1716, 1921], "leak": [9, 887, 893, 1860, 1872, 1880], "smart": [9, 1885, 1902, 1910], "anywai": [9, 1880], "obviou": [9, 15, 1887, 1912], "extens": [9, 15, 16, 26, 29, 32, 38, 40, 43, 44, 1258, 1259, 1736, 1756, 1855, 1867, 1875, 1879, 1896, 1902, 1914], "unavoid": 9, "latenc": [9, 16, 22, 52, 1882, 1883], "caveat": [9, 12, 21, 26, 60, 1590, 1639, 1867, 1872, 1883, 1891, 1896], "valuabl": 9, "certainli": [9, 1867], "heterogen": [9, 1859], "cluster": [9, 38, 40, 54, 55, 56, 1327, 1919], "focus": [9, 26, 1859, 1860, 1885], "beaten": 9, "space": [9, 10, 35, 44, 766, 767, 768, 1043, 1078, 1080, 1082, 1083, 1089, 1096, 1140, 1149, 1202, 1203, 1257, 1273, 1327, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1385, 1395, 1396, 1397, 1398, 1399, 1400, 1413, 1414, 1470, 1493, 1494, 1495, 1496, 1497, 1498, 1530, 1826, 1858, 1876, 1880, 1888, 1891, 1896], "innov": 9, "ultim": [9, 10, 29, 48, 57, 1884], "evidenc": 9, "began": 9, "bind": [9, 29, 68, 997, 1860, 1861, 1902], "monolith": 9, "deepli": 9, "integr": [9, 12, 35, 43, 49, 64, 152, 917, 919, 920, 921, 922, 923, 924, 959, 1043, 1148, 1187, 1210, 1254, 1255, 1318, 1419, 1711, 1723, 1826, 1875, 1885, 1890, 1891, 1901, 1903, 1905, 1915, 1917, 1921], "numpi": [9, 35, 65, 444, 488, 687, 688, 693, 871, 873, 874, 891, 1055, 1057, 1058, 1060, 1078, 1099, 1100, 1101, 1102, 1106, 1107, 1112, 1128, 1150, 1217, 1218, 1228, 1239, 1241, 1242, 1243, 1244, 1245, 1250, 1251, 1254, 1256, 1288, 1293, 1698, 1723, 1726, 1733, 1745, 1753, 1787, 1788, 1789, 1790, 1791, 1792, 1805, 1807, 1808, 1816, 1819, 1820, 1822, 1844, 1847, 1848, 1867, 1881, 1885, 1886, 1894, 1895, 1897, 1902, 1917, 1918, 1919, 1920, 1921, 1926], "scipi": [9, 935, 1233, 1234, 1558, 1698, 1902, 1913, 1915, 1919], "scikit": [9, 1529], "favorit": 9, "cython": 9, "numba": 9, "reinvent": 9, "wheel": [9, 1897], "year": [9, 1914], "rewrot": 9, "frontend": [9, 16, 30, 64, 68, 1899], "familiar": [9, 16, 25, 30, 68, 1016, 1857, 1880, 1886, 1902, 1905, 1911, 1912], "perhap": [9, 19, 1886], "importantli": [9, 19], "huge": [9, 1806, 1870], "scientif": [9, 1753], "pareto": [9, 1855], "close": [9, 30, 38, 55, 68, 931, 999, 1176, 1222, 1223, 1249, 1250, 1276, 1336, 1450, 1468, 1491, 1740, 1805, 1828, 1870, 1880, 1885, 1894, 1898, 1902, 1905, 1910, 1919, 1921], "curv": [9, 1919], "torch_funct": [9, 1885], "torch_dispatch": 9, "torch": [9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 23, 25, 26, 27, 30, 32, 33, 36, 39, 42, 46, 47, 48, 49, 52, 53, 55, 57, 58, 60, 63, 70, 71, 72, 73, 80, 85, 86, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 888, 914, 961, 962, 963, 964, 966, 967, 982, 984, 995, 1064, 1162, 1185, 1186, 1187, 1201, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1590, 1599, 1600, 1601, 1602, 1608, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1632, 1644, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1711, 1750, 1780, 1857, 1858, 1859, 1873, 1874, 1879, 1880, 1881, 1882, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1897, 1903, 1905, 1906, 1907, 1910, 1911, 1912, 1918], "tracer": [9, 19, 72, 1202, 1898, 1899, 1919, 1924], "functorch": [9, 12, 24, 61, 66], "anchor": [9, 25, 68, 1467, 1468, 1584, 1585, 1858], "hackabl": 9, "todai": [9, 14, 24, 61, 66, 1905], "open": [9, 10, 16, 29, 35, 44, 55, 61, 683, 909, 1110, 1194, 1258, 1281, 1291, 1535, 1857, 1867, 1872, 1875, 1889, 1897, 1898, 1902, 1905, 1910, 1914, 1915], "evolv": [9, 1884], "ai": [9, 1898, 1915], "adopt": [10, 38, 714, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 739, 740, 750, 755, 756, 757, 758, 759], "hierarch": [10, 1919], "pull": [10, 11, 15, 30, 68, 148, 887, 1902], "request": [10, 11, 14, 27, 38, 40, 57, 683, 855, 873, 874, 1017, 1259, 1281, 1291, 1535, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1854, 1875, 1879, 1880, 1882, 1883, 1898, 1902, 1910, 1911, 1912, 1914, 1915], "overseen": 10, "catch": [10, 48, 1857, 1880, 1886, 1888], "maker": 10, "strong": 10, "toward": [10, 1055, 1148, 1149, 1259, 1323, 1599, 1683, 1724, 1732, 1733, 1903], "philosophi": [10, 64, 1855], "beyond": [10, 36, 1304, 1355, 1661, 1662, 1671, 1731, 1887, 1891], "encourag": [10, 46, 1875, 1905, 1914, 1921], "propos": [10, 1658, 1678, 1679, 1867, 1888, 1901, 1911], "review": [10, 11, 19, 36, 1902], "willing": 10, "invest": 10, "anyon": 10, "ownership": [10, 68], "codebas": 10, "strictli": [10, 35, 148, 189, 206, 887, 931, 1149, 1187, 1191, 1419, 1880, 1915], "compani": 10, "bui": 10, "addition": [10, 35, 36, 38, 44, 60, 148, 508, 611, 887, 1117, 1121, 1122, 1191, 1250, 1327, 1382, 1383, 1384, 1782, 1887, 1922], "membership": [10, 46, 54, 55, 1861], "That": [10, 24, 46, 53, 56, 62, 68, 1184, 1257, 1273, 1840, 1868, 1885, 1886, 1887, 1896, 1902, 1910], "seat": 10, "reserv": [10, 52, 1017, 1861, 1883, 1891], "emploi": [10, 1674, 1891, 1902, 1903], "directori": [10, 16, 26, 29, 38, 40, 53, 1656, 1854, 1869, 1890, 1902, 1904, 1919], "procedur": [10, 26, 44, 853, 1202, 1203, 1259, 1780, 1910], "disput": 10, "public": [10, 11, 1117, 1885, 1925], "relev": [10, 18, 19, 39, 46, 55, 67, 674, 1250, 1861, 1879, 1880, 1902, 1905], "resolut": [10, 1431, 1432, 1483, 1518, 1559, 1560, 1826, 1861, 1902, 1926], "conclus": 10, "publicli": [10, 1925], "vision": [10, 18, 1196, 1355, 1501, 1854, 1855], "roadmap": [10, 11], "parti": [10, 55, 1854, 1855, 1857, 1883, 1886, 1891, 1902], "triag": [10, 11], "meet": [10, 11, 54, 1216, 1883], "Their": [10, 15, 1052], "articul": 10, "cohes": 10, "negoti": [10, 1910], "contenti": 10, "broad": [10, 1891], "stakehold": 10, "power": [10, 20, 54, 1023, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1103, 1210, 1240, 1254, 1387, 1388, 1539, 1540, 1607, 1640, 1658, 1687, 1701, 1725, 1841, 1861, 1883, 1914], "veto": 10, "admin": 10, "amongst": 10, "commonli": [10, 14, 18, 44, 60, 1288, 1860, 1862, 1879, 1880, 1901, 1905, 1917], "merit": 10, "demonstr": [10, 18, 56, 68, 1342, 1857, 1891, 1896, 1903, 1910], "expertis": 10, "continu": [10, 12, 13, 19, 35, 38, 44, 58, 60, 68, 399, 602, 813, 896, 1140, 1222, 1223, 1250, 1341, 1342, 1599, 1861, 1867, 1880, 1896, 1904, 1922], "light": [10, 1919], "mainten": [10, 55, 56], "emeritu": [10, 11], "inact": [10, 1017, 1883], "contact": 10, "item": [10, 14, 15, 19, 35, 40, 577, 578, 579, 583, 786, 787, 788, 808, 809, 810, 811, 1355, 1420, 1429, 1611, 1753, 1854, 1856, 1857, 1858, 1859, 1860, 1873, 1883, 1898, 1900, 1902, 1910, 1919, 1920], "nomine": 10, "breadth": 10, "testimoni": 10, "posit": [10, 35, 44, 68, 86, 399, 467, 539, 729, 851, 855, 857, 902, 916, 918, 925, 938, 939, 940, 1076, 1077, 1078, 1079, 1080, 1088, 1090, 1094, 1096, 1113, 1123, 1124, 1127, 1144, 1145, 1179, 1182, 1187, 1190, 1216, 1217, 1228, 1230, 1241, 1244, 1245, 1259, 1279, 1294, 1313, 1318, 1319, 1336, 1347, 1348, 1349, 1354, 1355, 1356, 1363, 1373, 1380, 1419, 1425, 1455, 1462, 1467, 1468, 1483, 1491, 1510, 1515, 1518, 1584, 1585, 1593, 1594, 1595, 1731, 1733, 1783, 1785, 1829, 1830, 1831, 1832, 1839, 1854, 1858, 1873, 1874, 1885, 1886, 1888, 1898, 1900, 1903, 1909, 1914, 1915, 1921, 1925, 1926], "neg": [10, 14, 27, 29, 35, 38, 44, 57, 68, 86, 437, 439, 454, 655, 656, 692, 749, 774, 918, 954, 957, 966, 982, 988, 989, 1017, 1029, 1076, 1077, 1078, 1079, 1080, 1081, 1095, 1096, 1097, 1103, 1113, 1177, 1179, 1181, 1240, 1267, 1279, 1300, 1301, 1309, 1313, 1318, 1319, 1327, 1336, 1364, 1373, 1405, 1412, 1413, 1414, 1422, 1426, 1428, 1433, 1450, 1467, 1468, 1511, 1515, 1518, 1520, 1529, 1533, 1542, 1543, 1544, 1553, 1561, 1584, 1585, 1587, 1697, 1698, 1729, 1733, 1768, 1770, 1773, 1784, 1821, 1829, 1830, 1831, 1832, 1839, 1856, 1857, 1858, 1873, 1875, 1878, 1880, 1886, 1898, 1899, 1900, 1909, 1914, 1915], "interact": [10, 16, 30, 35, 43, 68, 856, 964, 997, 1162, 1855, 1861, 1884, 1902, 1919], "final": [10, 13, 14, 26, 38, 40, 42, 44, 46, 55, 64, 65, 680, 683, 684, 754, 915, 933, 946, 1060, 1099, 1117, 1140, 1258, 1276, 1281, 1371, 1373, 1389, 1434, 1447, 1590, 1783, 1826, 1857, 1859, 1860, 1861, 1873, 1885, 1888, 1891, 1894, 1896, 1898, 1902, 1911, 1912], "declin": 10, "conflict": [10, 36, 56, 1902], "lack": [10, 27, 1222, 1223, 1250], "unfit": 10, "conduct": [10, 1599, 1694, 1806, 1910], "filial": 10, "romant": 10, "strength": 10, "candid": [10, 911, 1858, 1902], "letter": [10, 1060], "befit": 10, "candidaci": 10, "behind": [10, 15, 1855, 1896, 1911], "75": [10, 1148, 1407, 1518, 1536, 1658, 1705, 1858, 1915], "choos": [10, 30, 68, 886, 911, 986, 1232, 1245, 1250, 1335, 1878, 1879, 1882, 1902, 1906, 1919], "unforeseen": 10, "circumst": [10, 55, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1568, 1883], "perman": [10, 68, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629, 1880, 1912], "unavail": [10, 1859], "rank": [10, 14, 26, 35, 36, 38, 39, 40, 42, 43, 44, 46, 53, 55, 56, 58, 60, 1232, 1233, 1234, 1241, 1276, 1411, 1458, 1599, 1611, 1694, 1806, 1858, 1884, 1893, 1898, 1903, 1910, 1911], "elect": 10, "invit": [10, 1854], "convinc": 10, "approach": [10, 16, 24, 36, 38, 68, 935, 1128, 1780, 1847, 1857, 1872, 1875, 1883, 1885, 1888, 1905, 1910], "interview": 10, "talk": [10, 57, 1890], "gather": [10, 38, 55, 60, 508, 1816, 1840, 1856, 1858, 1885, 1887, 1890, 1900, 1902], "read": [10, 16, 18, 19, 23, 26, 32, 35, 38, 40, 45, 46, 48, 55, 56, 60, 64, 68, 444, 1019, 1043, 1111, 1112, 1113, 1194, 1258, 1688, 1855, 1873, 1874, 1880, 1881, 1883, 1884, 1886, 1890, 1894, 1902, 1905, 1910], "attend": [10, 729, 1425, 1462], "confer": [10, 1373], "pipelin": [10, 16, 68, 1855, 1910], "world": [10, 14, 20, 23, 38, 42, 46, 53, 55, 56, 60, 1458, 1599, 1880, 1902, 1905], "cover": [10, 13, 19, 61, 68, 1034, 1060, 1412, 1542, 1543, 1544, 1860, 1862, 1874, 1880, 1885, 1888, 1890, 1891, 1910], "push": [10, 19, 47, 1022, 1128, 1252, 1847, 1904], "codeown": 10, "notifi": [10, 39, 56, 1912], "expert": 10, "strongli": [10, 38, 46, 56, 1358, 1359, 1360, 1364, 1801, 1854], "failur": [10, 16, 19, 26, 38, 44, 46, 47, 48, 52, 53, 54, 55, 58, 674, 902, 903, 1117, 1202, 1203, 1304, 1860, 1866, 1872, 1899, 1903, 1910, 1912, 1921], "revert": [10, 44, 60, 1455, 1576, 1912], "substanti": [10, 36, 1883], "syntact": [10, 48, 68], "establish": [10, 38, 55, 1880], "seri": [10, 21, 68, 1342, 1382, 1895, 1898, 1925], "lf": 10, "llc": 10, "guidelin": [10, 1622, 1902, 1905, 1906], "trademark": 10, "www": [10, 1342, 1468, 1919], "lfproject": 10, "acknowledg": [10, 38, 1855, 1912, 1914], "copyright": [10, 26], "holder": 10, "independ": [10, 35, 38, 55, 60, 67, 151, 152, 773, 779, 895, 896, 897, 898, 899, 900, 966, 1140, 1149, 1245, 1357, 1358, 1359, 1360, 1364, 1504, 1505, 1506, 1511, 1529, 1587, 1643, 1704, 1855, 1857, 1879, 1880, 1883, 1896, 1902], "authorship": 10, "claus": [10, 1887], "bsd": 10, "licens": 10, "opensourc": 10, "outbound": 10, "inbound": 10, "q": [10, 15, 36, 44, 427, 475, 752, 1132, 1207, 1223, 1226, 1245, 1287, 1316, 1385, 1425, 1568, 1606, 1692, 1694, 1704, 1705, 1806, 1857, 1858, 1888, 1895, 1898, 1914, 1915], "partli": [10, 1860], "domain": [10, 44, 48, 678, 820, 879, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1090, 1091, 1092, 1093, 1140, 1875, 1898, 1905], "absolut": [10, 27, 29, 68, 90, 675, 688, 902, 903, 1108, 1176, 1215, 1220, 1241, 1244, 1246, 1267, 1380, 1386, 1450, 1527, 1531, 1572, 1616, 1617, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1646, 1657, 1698, 1724, 1756, 1858, 1891, 1898, 1900, 1915, 1920, 1921], "health": 10, "success": [10, 26, 40, 44, 46, 52, 68, 1217, 1228, 1230, 1276, 1618, 1787, 1788, 1789, 1791, 1792, 1883, 1891, 1898, 1899, 1914], "am": 10, "grant": 10, "purchas": 10, "board": 10, "driven": [10, 1898], "clearli": [10, 1867, 1902], "sponsorship": 10, "foundat": [10, 1899], "ptf": 10, "minor": [10, 988, 1217, 1233], "committ": 10, "facebook": 10, "infrastructur": [10, 14, 47, 1902], "employe": 10, "expand": [10, 44, 252, 488, 872, 894, 902, 903, 930, 1239, 1240, 1288, 1425, 1469, 1562, 1836, 1854, 1856, 1858, 1866, 1873, 1874, 1881, 1886, 1898, 1900, 1902, 1903, 1918], "deliv": [10, 1904], "offici": [10, 38, 1327, 1905], "showcas": [10, 1415, 1883, 1893], "whenev": [10, 15, 19, 874, 1606, 1607, 1870, 1872, 1908, 1911, 1912, 1925], "fix": [11, 16, 26, 32, 35, 38, 43, 44, 46, 55, 60, 62, 65, 68, 80, 81, 259, 789, 795, 1117, 1200, 1232, 1362, 1363, 1437, 1509, 1510, 1529, 1599, 1857, 1858, 1870, 1878, 1879, 1883, 1884, 1887, 1893, 1897, 1898, 1900, 1901], "plu": [11, 29, 40, 895, 1113, 1233, 1914], "quarterli": 11, "chintala": 11, "edward": 11, "yang": [11, 1259], "ezyang": [11, 1918], "greg": 11, "chanan": 11, "gchanan": 11, "dmytro": 11, "dzhulgakov": 11, "nikita": 11, "shulga": 11, "malfet": 11, "joel": [11, 1694, 1806], "schlosser": 11, "jbschlosser": 11, "alban": 11, "desmaison": 11, "alband": 11, "sam": 11, "gross": 11, "colesburi": 11, "adam": [11, 39, 42, 44, 60, 1662, 1663, 1665, 1671, 1675, 1901], "paszk": 11, "apaszk": 11, "ilqar": 11, "ramazanli": 11, "iramazanli": 11, "vincent": 11, "quennevil": 11, "belair": 11, "vincentqb": 11, "jeffrei": 11, "wan": 11, "soulitz": 11, "elia": 11, "ellison": 11, "eellison": 11, "michael": [11, 26], "suo": 11, "yanan": 11, "cao": 11, "gmagogsfm": 11, "jame": 11, "reed": 11, "jamesr66a": 11, "jason": [11, 13], "ansel": [11, 13], "jansel": 11, "jiong": 11, "gong": 11, "jgong5": 11, "zach": 11, "devito": 11, "zdevito": 11, "fritz": 11, "obermey": 11, "fritzo": 11, "neeraj": 11, "pradhan": 11, "neerajprad": 11, "alican": 11, "bozkurt": 11, "alicanb": 11, "vishwak": 11, "srinivasan": 11, "vishwakftw": 11, "shen": 11, "li": [11, 1316, 1705, 1883], "mrshenli": 11, "pritam": 11, "damania": 11, "pritamdamania87": 11, "yanli": 11, "zhao": 11, "zhaojuanmao": 11, "rohan": 11, "varma": 11, "wanchao": 11, "liang": 11, "wanchaol": 11, "junji": 11, "wang": [11, 44], "fduwjj": 11, "howard": 11, "huang": 11, "tristan": 11, "rice": 11, "d4l3k": 11, "alisson": 11, "azzolini": 11, "aazzolini": 11, "ke": 11, "wen": 11, "kwen2501": 11, "kiuk": 11, "chung": 11, "kiukchung": 11, "pieter": 11, "noordhui": 11, "pietern": 11, "mingzh": 11, "mingzhe09088": 11, "omkar": 11, "salpekar": 11, "osalpekar": 11, "simon": 11, "ssnl": 11, "vitali": 11, "fedyunin": 11, "vitalyfedyunin": 11, "mike": 11, "ruberri": 11, "mruberri": 11, "mario": 11, "lezcano": 11, "ivan": 11, "yashchuk": 11, "ivanyashchuk": 11, "pearu": 11, "peterson": 11, "vedeneev": 11, "nikitav": 11, "christian": 11, "puhrsch": 11, "cpuhrsch": 11, "andrew": [11, 1259], "amjam": 11, "driss": 11, "guessou": 11, "drisspg": 11, "mikayla": 11, "gawarecki": 11, "mikaylagawarecki": 11, "natalia": 11, "gimelshein": 11, "ngimel": 11, "georg": 11, "qi": 11, "peter": 11, "bell": 11, "peterbell10": 11, "mingfei": 11, "ma": 11, "mingfeima": 11, "xiaob": 11, "zhang": 11, "xiaobingsup": 11, "xiaoqiang": 11, "zheng": 11, "xq": 11, "ilia": 11, "cherniavskii": 11, "cher": 11, "bai": 11, "bddppq": 11, "yinghai": 11, "jianhui": 11, "piotr": 11, "bialecki": 11, "ptrblck": 11, "sarofeen": 11, "csarofeen": 11, "tulloch": 11, "ajtulloch": 11, "alex": 11, "jann": 11, "jjsjann123": 11, "peng": 11, "sun": 11, "sunway513": 11, "jithun": 11, "nair": 11, "jithunnair": 11, "jeff": 11, "daili": 11, "jeffdaili": 11, "eli": 11, "uriega": 11, "seemether": 11, "mikei": 11, "dagits": 11, "zain": 11, "rizvi": 11, "zainrizvi": 11, "nirav": 11, "mehta": 11, "mehtanirav": 11, "andrei": 11, "talman": 11, "atalman": 11, "zhuoji": 11, "zhou": 11, "zhouzhuoji": 11, "karl": 11, "ostmo": 11, "kostmo": 11, "adnan": 11, "aziz": 11, "adnanaziz": 11, "ck": 11, "luk": 11, "ckluk": 11, "taylor": [11, 1140], "robi": 11, "robieta": 11, "xu": [11, 60], "xuzhao9": 11, "geeta": 11, "chauhan": 11, "chauhang": 11, "victor": 11, "bittorf": 11, "bitfort": 11, "gisl": 11, "dankel": 11, "gdankel": 11, "feng": 11, "yf225": 11, "brian": 11, "hirsh": 11, "bdhirsh": 11, "sebastian": 11, "messmer": 11, "smessmer": 11, "bowen": 11, "bao": [11, 22], "bowenbao": 11, "aaron": 11, "bockov": 11, "abock": 11, "gari": 11, "miguel": 11, "garymm": 11, "lara": 11, "haidar": 11, "hdr": 11, "fang": 11, "houseroad": 11, "negin": 11, "raoof": 11, "neginraoof": 11, "spandan": 11, "tiwari": 11, "spandantiwari": 11, "david": [11, 1327], "reiss": 11, "dreiss": 11, "raziel": 11, "guevara": 11, "linbin": 11, "yu": 11, "linbinyu": 11, "kobzarev": 11, "ivankobzarev": 11, "tao": 11, "xta0": 11, "vasilii": 11, "kuznetsov": 11, "vkuzo": 11, "jerri": 11, "jerryzh168": [11, 787], "zafar": 11, "takhirov": 11, "supriya": 11, "rao": 11, "supriyar": 11, "raghuraman": 11, "krishnamoorthi": 11, "raghuramank100": 11, "guoliang": 11, "hua": 11, "nbcsm": 11, "teng": 11, "gao": 11, "gaoteng": 11, "git": [11, 16, 26, 1904], "johnson": 11, "peterjc123": [11, 1897], "kulin": 11, "seth": 11, "kulinseth": 11, "ramin": 11, "azarmehr": 11, "razarmehr": 11, "alfredo": 11, "mendoza": 11, "avmgithub": 11, "svetlana": 11, "karslioglu": 11, "svekar": 11, "jack": 11, "jackcaog": 11, "daniel": [11, 44], "sohn": 11, "jysohn23": 11, "cain": 11, "zcain117": 11, "hirsch": 11, "gregori": 11, "ail": 11, "ailzhang": 11, "libenzi": 11, "dlibenzi": 11, "suhan": 11, "asuhan": 11, "manoj": 11, "mycpuorg": 11, "vamshi": 11, "dantu": 11, "vdantu": 11, "dhanasekar": 11, "karuppasami": 11, "dhanainm": 11, "francisco": 11, "massa": 11, "fmassa": 11, "vasili": 11, "vrynioti": 11, "datumbox": 11, "nicola": 11, "hug": 11, "nicolashug": 11, "yosua": 11, "maranatha": 11, "yosuamichael": 11, "joao": 11, "gome": 11, "jdsgome": 11, "philip": 11, "meier": 11, "pmeier": 11, "fomin": 11, "vfdev": 11, "nayef": 11, "ahm": 11, "nayef211": 11, "parmeet": 11, "singh": 11, "bhatia": 11, "guanheng": 11, "zhangguanheng66": 11, "moto": 11, "hira": 11, "mthrok": 11, "hwang": 11, "hwangjeff": 11, "carolin": 11, "chen": 11, "carolineechen": 11, "xiaohui": 11, "zhaoheng": 11, "ni": 11, "nateanl": 11, "qb": 11, "ivchenko": 11, "divchenko": 11, "colin": 11, "colin2328": 11, "wenlei": 11, "xie": 11, "wenleix": 11, "straightforward": [12, 19, 68, 1867, 1875, 1891, 1901, 1914], "gm": [12, 15, 19, 25, 26, 68], "my_custom_backend": 12, "f_opt": 12, "_dynamo": [12, 13, 14, 16, 17, 18, 19, 21, 23, 26, 947, 1855, 1884], "my_compil": [12, 13, 19], "besid": [12, 36, 38, 1883, 1884, 1919], "plugin": [12, 1904, 1919], "entry_point": [12, 56], "torch_dynamo_backend": 12, "your_modul": 12, "submodul": [12, 25, 30, 60, 68, 785, 791, 808, 832, 833, 834, 852, 855, 856, 1126, 1187, 1191, 1197, 1198, 1356, 1419, 1420, 1421, 1447, 1597, 1857, 1859, 1860, 1868, 1891, 1896, 1902, 1905, 1910, 1924], "registr": [12, 42, 43, 67, 80, 1003, 1592, 1597, 1598, 1599, 1608, 1611, 1864, 1902], "minifi": [12, 16], "typic": [12, 14, 15, 26, 29, 35, 36, 38, 44, 45, 46, 48, 55, 56, 57, 60, 68, 81, 959, 961, 1103, 1111, 1187, 1207, 1210, 1353, 1379, 1419, 1590, 1599, 1661, 1662, 1787, 1788, 1789, 1791, 1792, 1854, 1855, 1857, 1860, 1866, 1880, 1882, 1883, 1894, 1895, 1896, 1898, 1901, 1903, 1905, 1910, 1918, 1926], "canon": [12, 15, 46, 48, 1857], "opset": [12, 1856, 1898, 1899, 1900], "significantli": [12, 38, 896, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1748, 1914], "smaller": [12, 35, 68, 494, 539, 959, 1599, 1688, 1703, 1793, 1883, 1896, 1902, 1926], "aot_autograd": 12, "fw_compil": 12, "bw_compil": 12, "box": [12, 14, 18, 27, 38, 43, 56, 68, 1128, 1847, 1874, 1880, 1884], "make_boxed_func": 12, "my_backend": [12, 786], "model_opt": 12, "pretti": [12, 15, 19, 1187, 1656, 1753, 1857], "bytecod": [12, 13, 16, 19, 23, 24, 26, 35, 674, 1866, 1902], "print_tabular": [12, 19, 68], "co": [12, 17, 18, 20, 66, 199, 629, 630, 677, 925, 947, 1003, 1118, 1121, 1122, 1127, 1144, 1145, 1238, 1353, 1354, 1357, 1678, 1679, 1686, 1698, 1760, 1761, 1764, 1765, 1766, 1767, 1769, 1787, 1788, 1789, 1791, 1792, 1856, 1858, 1873, 1900, 1901, 1914, 1919, 1921], "sin": [12, 17, 18, 20, 24, 29, 65, 66, 526, 663, 664, 875, 947, 1003, 1118, 1120, 1121, 1122, 1124, 1127, 1145, 1238, 1288, 1698, 1761, 1767, 1856, 1858, 1873, 1880, 1900, 1914, 1915, 1919], "opcod": [12, 13, 19, 68, 1902], "placehold": [12, 13, 25, 68, 69, 74, 75, 76, 77, 78, 79, 828, 1381, 1883], "call_funct": [12, 13, 16, 19, 25, 26, 68, 80, 81], "0x7f1a894649a8": 12, "mockmodul": 12, "optimized_mod": 12, "ab": [12, 13, 16, 19, 26, 43, 44, 88, 89, 619, 620, 676, 935, 1060, 1218, 1239, 1240, 1242, 1243, 1256, 1259, 1389, 1438, 1465, 1468, 1470, 1558, 1643, 1646, 1688, 1694, 1698, 1855, 1856, 1858, 1860, 1873, 1874, 1875, 1883, 1891, 1900, 1914, 1920], "abs_1": [12, 13], "0x7f8d259298a0": 12, "truediv": [12, 13, 68], "call_method": [12, 13, 19, 68], "sum_1": [12, 13, 68], "lt": [12, 13, 360, 392, 1213, 1856, 1857, 1858, 1873, 1900], "mul_1": 12, "nondeterminist": [12, 68, 310, 312, 318, 510, 512, 918, 1208, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1415, 1416, 1417, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1510, 1518, 1529, 1556, 1568, 1587, 1588, 1589, 1747, 1840], "offer": [12, 16, 38, 60, 63, 1599, 1840, 1856, 1883, 1889, 1902, 1914], "superior": 12, "real": [12, 14, 15, 18, 19, 20, 35, 44, 68, 680, 681, 682, 683, 684, 686, 692, 902, 915, 940, 949, 955, 1006, 1076, 1077, 1079, 1081, 1082, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1177, 1179, 1180, 1183, 1184, 1207, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1236, 1239, 1241, 1243, 1244, 1245, 1246, 1250, 1251, 1255, 1256, 1257, 1267, 1273, 1386, 1428, 1431, 1432, 1468, 1606, 1801, 1805, 1844, 1845, 1846, 1854, 1855, 1856, 1858, 1860, 1880, 1883, 1900, 1902, 1905, 1910, 1912, 1918, 1920, 1921, 1925], "optimize_for_infer": [12, 1191], "optimize_for_inference_compil": 12, "And": [12, 18, 19, 64, 791, 818, 1039, 1040, 1116, 1187, 1208, 1284, 1289, 1342, 1419, 1880, 1885, 1886, 1897, 1898, 1905, 1924], "code_to_acceler": 12, "trt_compil": 12, "tensorrt": [12, 16, 18, 1905], "inductor_compil": 12, "tensor_match": 13, "function_match": 13, "recaptur": 13, "recompil": [13, 14, 19, 20, 21, 29, 68, 674, 1200, 1866, 1889], "dispatch_kei": [13, 1864], "ndim": [13, 1252, 1253, 1873, 1875, 1914, 1920], "log_level": [13, 16, 26, 1884], "info": [13, 14, 15, 16, 26, 38, 46, 49, 53, 674, 886, 963, 964, 966, 1217, 1228, 1230, 1231, 1235, 1248, 1276, 1300, 1301, 1655, 1855, 1858, 1866, 1884, 1885, 1886, 1898, 1902], "output_cod": [13, 26, 674, 1866], "spammi": [13, 1866], "printout": [13, 68, 1005, 1018], "__compiled_fn_0": 13, "eval_with_kei": 13, "0x7f9ca082f8a0": 13, "load_fast": [13, 19], "load_glob": 13, "load_method": 13, "6": [13, 16, 22, 26, 29, 32, 35, 36, 38, 44, 53, 68, 310, 312, 314, 318, 398, 399, 467, 483, 494, 508, 512, 554, 601, 679, 680, 685, 691, 735, 736, 737, 739, 740, 752, 755, 757, 759, 895, 896, 898, 899, 900, 918, 926, 931, 937, 940, 941, 945, 959, 972, 1019, 1023, 1037, 1038, 1039, 1043, 1044, 1055, 1058, 1059, 1076, 1084, 1089, 1090, 1094, 1095, 1097, 1099, 1100, 1103, 1110, 1140, 1150, 1152, 1153, 1176, 1197, 1208, 1212, 1223, 1239, 1243, 1244, 1245, 1252, 1253, 1257, 1259, 1288, 1292, 1317, 1318, 1319, 1332, 1343, 1346, 1351, 1354, 1362, 1363, 1372, 1373, 1374, 1376, 1377, 1415, 1416, 1420, 1428, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1462, 1463, 1465, 1470, 1476, 1485, 1515, 1522, 1523, 1555, 1557, 1564, 1590, 1634, 1635, 1637, 1639, 1645, 1646, 1647, 1659, 1673, 1693, 1694, 1697, 1704, 1705, 1711, 1712, 1715, 1721, 1731, 1732, 1736, 1740, 1753, 1774, 1778, 1782, 1785, 1787, 1788, 1793, 1804, 1806, 1807, 1808, 1815, 1820, 1821, 1822, 1823, 1824, 1826, 1829, 1831, 1835, 1840, 1848, 1849, 1856, 1857, 1860, 1861, 1867, 1875, 1878, 1880, 1885, 1886, 1891, 1896, 1898, 1910, 1911, 1914, 1915, 1917, 1920, 1921, 1925], "load_const": [13, 19], "12": [13, 22, 35, 36, 38, 60, 318, 512, 611, 680, 735, 736, 737, 739, 740, 937, 941, 1058, 1076, 1150, 1191, 1206, 1245, 1327, 1343, 1351, 1366, 1367, 1368, 1416, 1431, 1432, 1453, 1462, 1470, 1513, 1514, 1554, 1559, 1560, 1607, 1640, 1693, 1704, 1753, 1768, 1778, 1820, 1836, 1848, 1854, 1857, 1858, 1861, 1867, 1883, 1892, 1896, 1898, 1900, 1914, 1921], "binary_add": 13, "14": [13, 38, 318, 512, 940, 1003, 1004, 1043, 1058, 1150, 1239, 1245, 1313, 1343, 1416, 1704, 1711, 1778, 1820, 1821, 1826, 1848, 1857, 1861, 1898, 1900, 1914, 1918, 1919], "binary_true_divid": 13, "16": [13, 16, 26, 34, 38, 318, 611, 732, 733, 734, 735, 736, 737, 766, 1058, 1076, 1103, 1140, 1150, 1187, 1198, 1210, 1216, 1222, 1223, 1227, 1243, 1319, 1331, 1333, 1334, 1342, 1343, 1346, 1347, 1348, 1349, 1351, 1352, 1357, 1358, 1359, 1360, 1364, 1367, 1368, 1387, 1388, 1389, 1407, 1412, 1413, 1414, 1416, 1417, 1419, 1426, 1434, 1445, 1462, 1476, 1493, 1495, 1496, 1498, 1502, 1513, 1514, 1649, 1701, 1778, 1840, 1844, 1848, 1857, 1861, 1878, 1883, 1891, 1894, 1896, 1898, 1900, 1903, 1910, 1914, 1915, 1917, 1919, 1920], "store_fast": 13, "11": [13, 26, 29, 38, 318, 508, 937, 941, 966, 1006, 1058, 1150, 1207, 1243, 1257, 1273, 1327, 1343, 1368, 1416, 1514, 1646, 1647, 1656, 1778, 1820, 1848, 1857, 1861, 1867, 1874, 1883, 1897, 1898, 1900, 1914, 1915], "18": [13, 38, 318, 441, 679, 1061, 1140, 1184, 1259, 1416, 1857, 1898, 1900, 1914], "20": [13, 15, 19, 38, 42, 44, 318, 679, 714, 722, 723, 728, 732, 733, 734, 735, 736, 737, 740, 750, 754, 755, 756, 757, 758, 759, 766, 1140, 1185, 1188, 1198, 1209, 1243, 1308, 1331, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1342, 1346, 1347, 1348, 1349, 1351, 1352, 1357, 1358, 1359, 1360, 1364, 1367, 1368, 1371, 1372, 1374, 1381, 1382, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1406, 1412, 1413, 1414, 1416, 1417, 1419, 1434, 1436, 1447, 1455, 1458, 1461, 1462, 1463, 1464, 1476, 1493, 1495, 1496, 1498, 1502, 1513, 1514, 1520, 1576, 1606, 1607, 1631, 1640, 1643, 1664, 1679, 1707, 1816, 1857, 1858, 1875, 1884, 1885, 1894, 1901, 1910, 1914], "22": [13, 38, 44, 318, 611, 1259, 1590, 1636, 1638, 1857, 1895, 1914], "24": [13, 36, 38, 44, 920, 1245, 1407, 1483, 1639, 1704, 1821, 1857, 1878, 1882, 1915], "26": [13, 26, 1242, 1679], "compare_op": 13, "28": [13, 611, 740, 1043, 1826, 1898], "pop_jump_if_fals": 13, "38": [13, 1313], "30": [13, 20, 35, 38, 44, 46, 55, 441, 611, 714, 722, 723, 750, 758, 1140, 1209, 1340, 1342, 1346, 1406, 1470, 1476, 1493, 1502, 1590, 1682, 1684, 1690, 1707, 1816, 1885, 1898, 1901, 1910], "34": [13, 19, 26, 38], "binary_multipli": [13, 19], "36": [13, 19, 38, 318, 1103, 1140], "13": [13, 26, 38, 869, 941, 1058, 1061, 1105, 1140, 1150, 1191, 1276, 1343, 1367, 1368, 1416, 1453, 1513, 1514, 1778, 1820, 1848, 1857, 1861, 1900, 1914], "42": [13, 35, 818, 925, 1308, 1760, 1883, 1891], "return_valu": [13, 46, 47, 53], "unpack_sequ": 13, "__resume_at_30_1": 13, "__resume_at_38_2": 13, "offset": [13, 19, 42, 46, 223, 224, 225, 226, 336, 515, 552, 740, 872, 1048, 1049, 1050, 1051, 1113, 1221, 1363, 1510, 1599, 1706, 1707, 1785, 1830, 1832, 1858, 1860], "__resume_at_": 13, "jump_absolut": 13, "resume_at": 13, "remaind": [13, 35, 485, 1108, 1140, 1856, 1858, 1900], "restart": [13, 36, 46, 54, 56, 58, 1678, 1679, 1872, 1919], "symbolic_shap": 14, "assumpt": [14, 16, 21, 26, 40, 52, 56, 902, 1342, 1373, 1880, 1884, 1888, 1910, 1911, 1914], "situat": [14, 15, 16, 18, 35, 44, 57, 68, 955, 1611, 1872, 1885, 1886, 1893, 1894, 1902, 1905, 1912, 1925], "insuffici": [14, 26, 1007], "batch": [14, 15, 16, 17, 26, 36, 38, 44, 56, 58, 61, 62, 65, 66, 68, 577, 578, 579, 581, 582, 680, 696, 697, 698, 699, 700, 701, 729, 754, 773, 779, 901, 902, 903, 915, 927, 928, 935, 938, 939, 940, 947, 960, 1048, 1050, 1060, 1121, 1122, 1128, 1184, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1259, 1267, 1276, 1277, 1281, 1335, 1336, 1337, 1338, 1339, 1342, 1347, 1348, 1353, 1355, 1356, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1371, 1372, 1373, 1374, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1410, 1411, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1436, 1450, 1451, 1458, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1483, 1488, 1490, 1491, 1501, 1502, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1515, 1528, 1529, 1530, 1553, 1561, 1568, 1586, 1587, 1590, 1599, 1606, 1632, 1633, 1635, 1636, 1638, 1679, 1680, 1686, 1692, 1694, 1704, 1708, 1787, 1788, 1789, 1791, 1792, 1796, 1801, 1805, 1806, 1825, 1828, 1829, 1831, 1844, 1847, 1855, 1873, 1874, 1875, 1879, 1883, 1886, 1887, 1891, 1893, 1903, 1905, 1910, 1914, 1919, 1920], "vari": [14, 15, 16, 26, 813, 1450, 1632, 1762, 1870, 1894, 1901, 1905, 1906, 1914], "servic": [14, 47, 1884], "window": [14, 29, 35, 38, 68, 348, 550, 916, 925, 1144, 1145, 1184, 1206, 1332, 1333, 1334, 1367, 1368, 1387, 1388, 1412, 1413, 1414, 1415, 1416, 1417, 1485, 1513, 1514, 1542, 1543, 1544, 1709, 1710, 1801, 1855, 1858, 1870, 1883], "pad": [14, 17, 35, 36, 706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 721, 724, 725, 729, 732, 733, 734, 735, 736, 737, 762, 763, 766, 767, 768, 773, 776, 777, 779, 947, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1184, 1332, 1333, 1334, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1362, 1363, 1366, 1395, 1396, 1397, 1398, 1399, 1400, 1412, 1413, 1414, 1415, 1416, 1417, 1422, 1423, 1425, 1440, 1441, 1442, 1443, 1444, 1445, 1465, 1466, 1470, 1474, 1475, 1476, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1509, 1510, 1512, 1518, 1529, 1542, 1543, 1544, 1545, 1546, 1547, 1586, 1587, 1633, 1635, 1636, 1638, 1709, 1710, 1801, 1855, 1856, 1858, 1875, 1887, 1898, 1900, 1905, 1919], "exhibit": [14, 26, 1656, 1898], "imag": [14, 16, 26, 29, 35, 735, 736, 737, 855, 856, 949, 1325, 1329, 1330, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1366, 1367, 1368, 1383, 1391, 1426, 1431, 1432, 1453, 1470, 1472, 1473, 1483, 1494, 1495, 1497, 1498, 1512, 1513, 1518, 1529, 1586, 1587, 1729, 1855, 1856, 1858, 1875, 1888, 1900, 1903, 1918, 1919], "recognit": 14, "jag": 14, "chose": [14, 46, 1879], "whose": [14, 26, 38, 44, 60, 68, 538, 853, 889, 937, 954, 1048, 1060, 1065, 1113, 1131, 1140, 1143, 1149, 1187, 1203, 1211, 1257, 1273, 1275, 1320, 1419, 1599, 1647, 1698, 1756, 1822, 1860, 1880, 1885, 1888, 1902, 1914, 1919, 1921], "dimension": [14, 44, 508, 510, 874, 880, 881, 882, 926, 933, 945, 1048, 1050, 1051, 1060, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1094, 1095, 1097, 1099, 1101, 1102, 1113, 1140, 1149, 1150, 1151, 1219, 1224, 1225, 1226, 1227, 1252, 1257, 1273, 1281, 1288, 1327, 1344, 1345, 1346, 1355, 1356, 1362, 1363, 1391, 1409, 1426, 1440, 1441, 1442, 1443, 1444, 1445, 1452, 1454, 1458, 1474, 1475, 1476, 1501, 1553, 1556, 1588, 1589, 1606, 1645, 1711, 1787, 1788, 1789, 1790, 1791, 1792, 1801, 1816, 1819, 1820, 1826, 1860, 1875, 1878, 1881, 1888, 1894, 1914, 1916, 1917, 1920, 1922], "pattern": [14, 15, 25, 38, 40, 786, 787, 788, 790, 848, 855, 1003, 1356, 1635, 1783, 1857, 1860, 1880, 1883, 1885, 1887, 1889, 1896, 1906, 1907], "induct": 14, "pt2": [14, 15], "integ": [14, 35, 38, 44, 55, 286, 441, 443, 445, 539, 554, 560, 679, 680, 681, 682, 683, 684, 760, 761, 779, 781, 859, 886, 915, 916, 925, 936, 954, 964, 966, 982, 988, 989, 1017, 1055, 1058, 1060, 1061, 1103, 1104, 1105, 1106, 1107, 1108, 1113, 1114, 1118, 1119, 1120, 1121, 1122, 1130, 1144, 1145, 1148, 1149, 1150, 1197, 1200, 1209, 1210, 1217, 1228, 1230, 1240, 1259, 1308, 1327, 1342, 1347, 1348, 1349, 1391, 1477, 1478, 1479, 1480, 1481, 1482, 1589, 1632, 1647, 1650, 1682, 1685, 1689, 1694, 1706, 1707, 1713, 1715, 1716, 1717, 1719, 1724, 1733, 1745, 1793, 1802, 1806, 1820, 1821, 1834, 1848, 1852, 1859, 1860, 1861, 1873, 1886, 1888, 1903, 1906, 1908, 1914, 1915, 1917, 1920, 1921, 1926], "opt": [14, 38, 42, 1198, 1676, 1677, 1683, 1687, 1689, 1857, 1888], "yolo": 14, "automat": [14, 15, 16, 18, 26, 29, 36, 38, 43, 55, 56, 68, 148, 583, 883, 885, 997, 1006, 1149, 1196, 1202, 1288, 1465, 1568, 1600, 1723, 1753, 1854, 1855, 1859, 1860, 1868, 1869, 1873, 1874, 1880, 1881, 1883, 1885, 1891, 1893, 1898, 1902, 1903, 1905, 1906, 1910, 1919, 1920, 1922], "torch_log": [14, 674, 1866], "torchinductor": [14, 18, 23, 674, 1866], "written": [14, 18, 25, 26, 38, 48, 65, 910, 1019, 1356, 1654, 1674, 1857, 1859, 1867, 1868, 1880, 1884, 1885, 1886, 1891, 1896, 1898, 1902, 1904, 1916, 1919], "hint": [14, 19, 961, 995, 1188, 1425, 1463, 1464, 1465, 1466, 1857, 1859, 1860, 1883], "consult": [14, 1902], "greatli": [14, 29, 68, 1883], "formula": [14, 44, 86, 762, 763, 883, 885, 916, 925, 1144, 1145, 1212, 1278, 1279, 1433, 1486, 1487, 1575, 1674, 1707, 1885, 1888, 1904, 1909], "flatten": [14, 36, 60, 68, 868, 869, 1049, 1149, 1243, 1256, 1470, 1646, 1653, 1657, 1705, 1721, 1726, 1731, 1836, 1837, 1838, 1858, 1873, 1874, 1878, 1898, 1900, 1907, 1918], "awai": [14, 36, 68, 1518, 1855, 1874, 1880, 1886], "bailout": [14, 1900], "express": [14, 16, 26, 27, 40, 61, 65, 66, 68, 316, 1185, 1188, 1801, 1861, 1868, 1875, 1880, 1885, 1925], "meta": [14, 15, 18, 25, 60, 64, 68, 333, 1864, 1910, 1919, 1921], "workflow": [14, 15, 21, 22, 30, 1854, 1885, 1905, 1906, 1922], "shapeenv": [14, 15], "attach": [14, 63, 67, 68, 137, 706, 707, 708, 709, 710, 711, 712, 713, 714, 724, 725, 726, 727, 787, 832, 834, 858, 1590, 1854, 1857, 1859, 1873, 1880, 1885, 1905, 1911, 1923], "faketensormod": [14, 15], "knob": [14, 1883], "faithfulli": 14, "sympi": 14, "induc": [14, 894, 1518, 1556, 1878], "simplif": [14, 40], "s0": [14, 26], "occurr": [14, 60, 399, 1185, 1287, 1632, 1837, 1838], "reusabl": 14, "c10": [14, 55, 1890], "symfloat": [14, 1809, 1810, 1922], "symbool": [14, 1813, 1922], "plumb": 14, "symnodeimpl": 14, "csrc": [14, 1897], "python_symnod": 14, "init": [14, 38, 46, 48, 60, 1187, 1419, 1427, 1446, 1639, 1855, 1862, 1880, 1885, 1890, 1891], "_subclass": [14, 15], "fake_tensor": [14, 15], "_meta_registr": 14, "decomp": [14, 15], "primtorch": [14, 15, 18], "ref": [14, 19, 26, 1854], "visibl": [14, 29, 38, 40, 52, 985, 1030, 1420, 1421, 1429, 1430], "simul": [14, 44, 793, 795, 1905, 1908], "counterpart": [14, 851, 858, 1256, 1599, 1860, 1868, 1922, 1923], "symnod": 14, "eras": [14, 68], "mix": [14, 23, 29, 36, 44, 60, 1006, 1599, 1855, 1880, 1882, 1905, 1914], "xla": [14, 1855], "far": [14, 56, 1196, 1518], "vice": [14, 68, 454, 597, 1112, 1113, 1411, 1880, 1908, 1916], "versa": [14, 68, 454, 597, 1112, 1113, 1411, 1880, 1908, 1916], "fairli": [14, 1903], "apparatu": 14, "traceabl": [14, 18, 68, 618, 811, 1857, 1905], "make_fx": [14, 26, 1117], "aka": [14, 38, 911, 1380, 1880, 1917], "aris": [14, 44, 68, 1880], "emerg": [14, 1897], "illeg": [14, 60, 1883], "naiv": [14, 16, 35, 1903], "enhanc": [14, 38, 60, 1599], "precomput": 14, "empty_strid": [14, 1856, 1858, 1862, 1900], "eagerli": [14, 992, 998, 1883], "needlessli": [14, 1883], "nontrivi": [14, 38, 1883], "lazi": [14, 952, 1199, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1590, 1855], "constrain_rang": 14, "wherebi": 14, "trash": 15, "bad": [15, 68, 1872, 1898, 1902, 1905], "accur": [15, 20, 48, 963, 1140, 1262, 1361, 1711, 1826, 1883, 1911], "suppos": [15, 38, 68, 1184, 1689, 1867, 1914], "val": [15, 19, 1003, 1193, 1858, 1860, 1878], "stuff": [15, 68], "probabl": [15, 16, 21, 35, 152, 754, 917, 1148, 1264, 1309, 1327, 1331, 1335, 1342, 1355, 1357, 1358, 1359, 1360, 1364, 1371, 1373, 1389, 1425, 1426, 1434, 1490, 1501, 1502, 1503, 1504, 1505, 1506, 1511, 1520, 1530, 1553, 1568, 1704, 1872, 1885, 1897, 1898, 1915, 1919], "wouldn": [15, 1912], "alias": [15, 60, 889, 1117, 1128, 1529, 1847, 1859, 1860, 1864, 1885], "almost": [15, 1233, 1234, 1897], "subclass_zoo": 15, "subgraph": [15, 17, 26, 947, 1656, 1880, 1884, 1898, 1902, 1924], "possibli": [15, 35, 55, 60, 1187, 1202, 1229, 1234, 1419, 1599, 1857, 1864, 1895, 1902], "bunch": 15, "from_real_tensor": 15, "memo": [15, 1187, 1419], "storag": [15, 40, 60, 219, 308, 336, 339, 340, 431, 454, 479, 494, 515, 518, 552, 553, 578, 579, 581, 582, 872, 889, 891, 984, 1051, 1157, 1161, 1173, 1187, 1194, 1258, 1280, 1318, 1319, 1356, 1419, 1722, 1736, 1743, 1774, 1779, 1782, 1796, 1819, 1825, 1854, 1855, 1858, 1869, 1872, 1880, 1883, 1893, 1896, 1902, 1910, 1914, 1917, 1918, 1920], "fakeifi": 15, "alia": [15, 40, 44, 49, 89, 90, 109, 185, 186, 350, 403, 432, 433, 440, 535, 676, 860, 861, 862, 863, 864, 865, 866, 883, 943, 950, 951, 1046, 1053, 1056, 1067, 1068, 1069, 1071, 1072, 1098, 1133, 1141, 1142, 1154, 1155, 1156, 1165, 1185, 1187, 1213, 1214, 1221, 1237, 1241, 1244, 1272, 1282, 1283, 1293, 1310, 1312, 1322, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1419, 1529, 1602, 1632, 1648, 1691, 1696, 1699, 1734, 1757, 1772, 1775, 1777, 1803, 1807, 1808, 1827, 1833, 1851, 1856, 1860, 1885, 1900, 1915, 1916, 1920], "faketensor": 15, "__torch_dispatch__": 15, "dispatch_devic": 15, "lie": [15, 1452, 1454, 1574, 1784, 1915, 1919], "prone": [15, 1872, 1893], "ly": 15, "whatev": [15, 16, 57, 68, 444, 1599, 1744, 1828, 1860, 1886], "derefer": 15, "pointer": [15, 32, 137, 978, 1435, 1883, 1884, 1890, 1910, 1912], "segfault": [15, 1872, 1894], "backtrac": 15, "unexpect": [15, 16, 19, 38, 45, 68, 960, 1111, 1113, 1116, 1187, 1419, 1641, 1657, 1796, 1857, 1880, 1885, 1894], "reinterpret": [15, 44, 494], "magic": [15, 1858, 1861, 1922], "in_kernel_invocation_manag": 15, "underli": [15, 19, 38, 40, 42, 44, 46, 60, 65, 68, 95, 308, 323, 374, 397, 399, 469, 470, 471, 472, 479, 494, 515, 518, 551, 552, 553, 607, 742, 751, 872, 963, 1157, 1161, 1187, 1258, 1318, 1561, 1722, 1825, 1839, 1857, 1860, 1875, 1883, 1887, 1889, 1903, 1910, 1916, 1918], "unwrap": 15, "promot": [15, 60, 679, 920, 923, 932, 1003, 1055, 1103, 1105, 1106, 1107, 1108, 1308, 1358, 1359, 1360, 1364, 1500, 1703, 1723, 1724, 1730, 1745, 1802, 1856, 1860, 1917, 1921], "test_fake_tensor": 15, "fake_mod": 15, "fake_x": 15, "fake_i": 15, "fake_z": 15, "pre": [15, 21, 26, 30, 38, 42, 60, 68, 901, 908, 1187, 1419, 1594, 1596, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1654, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1677, 1683, 1854, 1857, 1860, 1868, 1880, 1882, 1891, 1898, 1903, 1920], "aotautograd": [15, 16, 18, 26, 64, 674, 1866, 1884, 1899], "_guard": 15, "detect_fake_mod": 15, "fake_arg": 15, "lifecycl": [15, 19], "proxy_tensor": [15, 26, 1117], "maybe_disable_fake_tensor_mod": 15, "nich": 15, "faketensorprop": 15, "fake_tensor_prop": 15, "real_input": [15, 1883], "popul": [15, 25, 38, 44, 53, 60, 67, 68, 332, 490, 498, 499, 1287, 1315, 1883], "propagate_dont_convert_input": 15, "fake_input": 15, "footgun": 15, "real_tensor": 15, "t_": [15, 1288, 1368, 1514, 1678, 1679, 1858, 1914], "opportun": [15, 16, 1217, 1857, 1911], "conserv": [15, 1864, 1867, 1883], "yet": [15, 16, 19, 20, 21, 24, 26, 39, 46, 60, 65, 67, 68, 80, 81, 963, 1034, 1190, 1192, 1204, 1292, 1599, 1613, 1617, 1619, 1855, 1859, 1860, 1866, 1874, 1875, 1883, 1898, 1900, 1905, 1910, 1912, 1914, 1915, 1917], "annoi": 15, "practic": [15, 16, 35, 38, 44, 60, 1855, 1857, 1867, 1872, 1874, 1880, 1885, 1888, 1891, 1896, 1902, 1910], "feed": [15, 68, 1857, 1887, 1891, 1923], "somehow": 15, "fakecopymod": 15, "gave": 15, "fakeif": 15, "face": [15, 1885, 1902, 1919], "invalid": [15, 19, 48, 53, 1187, 1309, 1419, 1879, 1880, 1898, 1902, 1903], "old": [15, 19, 38, 45, 68, 848, 1111, 1359, 1651, 1688, 1736, 1853, 1855, 1857, 1880, 1883, 1885, 1897, 1905, 1919], "tension": 15, "seriou": [15, 1872, 1883], "analys": 15, "occasion": [15, 1883, 1914], "mistak": [15, 1860, 1887], "redispatch": 15, "lift": [15, 66, 1128, 1847, 1874, 1900], "recogn": [15, 35, 1860, 1910, 1914], "notimpl": [15, 1860, 1861, 1885], "hopefulli": 15, "desugar": [15, 1860], "plain": [15, 29, 1336, 1420, 1429, 1606, 1789, 1885, 1914], "infinit": [15, 35, 1179, 1259, 1335, 1342, 1502, 1698, 1885, 1894, 1910], "fastpath": [15, 1425], "certain": [15, 16, 19, 26, 35, 36, 38, 52, 53, 65, 67, 68, 680, 683, 729, 915, 927, 985, 1048, 1162, 1184, 1187, 1194, 1258, 1281, 1291, 1347, 1348, 1349, 1350, 1351, 1352, 1372, 1390, 1406, 1419, 1425, 1470, 1519, 1530, 1532, 1645, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1860, 1867, 1874, 1880, 1881, 1883, 1885, 1890, 1891, 1894, 1898, 1903, 1904, 1910, 1911, 1914], "custom_op": [15, 1898], "impl_abstract": 15, "hardcod": 15, "nor": [15, 35, 38, 46, 60, 789, 893, 1222, 1223, 1250, 1425, 1466, 1599, 1646, 1703, 1805, 1885, 1898], "sensit": [15, 36, 1380, 1450, 1898, 1902, 1911], "carefulli": [15, 64, 67, 1886, 1902], "leaf": [15, 52, 148, 220, 332, 444, 498, 499, 785, 832, 834, 873, 887, 1126, 1656, 1819, 1875, 1879, 1880, 1898, 1924], "ness": [15, 56], "host": [15, 35, 38, 46, 48, 54, 55, 56, 57, 194, 207, 574, 597, 871, 1187, 1419, 1599, 1611, 1645, 1883, 1903, 1910, 1911, 1916], "bulk": [15, 35], "metaconvert": 15, "pointwis": [15, 17, 18, 44, 947, 1121, 1122, 1264, 1265, 1385, 1873, 1881], "impli": [15, 36, 55, 1872, 1880, 1898, 1903, 1908, 1910], "ti": [15, 1116, 1641, 1733], "die": 15, "unback": 15, "symint": [15, 1809, 1810, 1811, 1812, 1813, 1856, 1922], "memoiz": [15, 44], "colab": [15, 1864, 1902], "saroufim": 16, "evalfram": 16, "min": [16, 35, 38, 48, 55, 68, 114, 183, 184, 185, 186, 297, 689, 690, 691, 752, 764, 765, 774, 796, 813, 814, 815, 816, 819, 869, 942, 943, 1003, 1040, 1074, 1075, 1147, 1218, 1232, 1233, 1239, 1243, 1245, 1250, 1256, 1276, 1309, 1341, 1378, 1405, 1407, 1427, 1439, 1446, 1492, 1529, 1533, 1562, 1564, 1569, 1587, 1673, 1678, 1679, 1688, 1692, 1694, 1704, 1805, 1829, 1830, 1831, 1832, 1856, 1858, 1870, 1873, 1898, 1900, 1905, 1908, 1910, 1926], "partit": [16, 25, 42, 43, 1327, 1826, 1898, 1900, 1903, 1911, 1912], "usercod": 16, "ddp": [16, 38, 39, 40, 42, 60, 1458, 1599, 1855, 1883, 1884, 1910], "unrol": [16, 1859, 1860, 1898], "fsdp": [16, 40, 43, 60, 1855], "delai": [16, 1599, 1912], "outlin": [16, 39, 1903, 1911], "bucket": [16, 26, 36, 42, 1327, 1599, 1858, 1884, 1900], "broadcast": [16, 38, 42, 44, 60, 65, 95, 194, 395, 397, 398, 399, 508, 510, 512, 560, 679, 680, 681, 682, 683, 684, 685, 691, 729, 878, 915, 920, 923, 927, 928, 929, 930, 954, 974, 1003, 1054, 1055, 1060, 1065, 1105, 1106, 1107, 1108, 1129, 1131, 1143, 1153, 1211, 1212, 1219, 1232, 1236, 1241, 1242, 1244, 1247, 1255, 1275, 1280, 1281, 1291, 1308, 1311, 1320, 1323, 1336, 1354, 1373, 1425, 1491, 1500, 1562, 1599, 1657, 1693, 1701, 1724, 1726, 1802, 1821, 1826, 1850, 1855, 1856, 1860, 1873, 1874, 1875, 1884, 1898, 1900, 1915], "fraction": [16, 35, 44, 1030, 1103, 1109, 1304, 1350, 1351, 1352, 1367, 1368, 1425, 1466, 1513, 1514, 1616, 1617, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1705, 1878], "rob": 16, "fusion": [16, 17, 18, 25, 26, 68, 786, 808, 854, 855, 947, 1189, 1195, 1200, 1201, 1202, 1203, 1868, 1891, 1905], "diminish": 16, "vast": 16, "250k": 16, "aitempl": 16, "fuse": [16, 17, 18, 25, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 786, 787, 796, 798, 799, 800, 808, 841, 853, 854, 947, 1200, 1201, 1568, 1661, 1662, 1868, 1873, 1898, 1901, 1905, 1906, 1907, 1908], "mobil": [16, 1868, 1905], "ran": [16, 21, 26, 32, 60], "fine": [16, 29, 38, 40, 42, 45, 852, 855, 1111, 1202, 1568, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1854, 1872, 1880, 1883, 1885, 1898, 1902, 1903, 1905], "succeed": [16, 46, 55, 70, 72, 1276], "aot_eag": [16, 26], "warn": [16, 19, 20, 26, 29, 32, 36, 38, 42, 60, 674, 895, 901, 937, 972, 1019, 1023, 1034, 1037, 1038, 1128, 1168, 1202, 1244, 1288, 1425, 1463, 1464, 1465, 1466, 1608, 1611, 1747, 1755, 1840, 1847, 1854, 1866, 1870, 1881, 1885, 1900, 1902, 1909], "torchdynamo_debug_funct": [16, 26], "desired_function_nam": 16, "replay_record_en": [16, 26], "replai": [16, 26, 961, 995, 1653, 1883], "hundr": [16, 26, 1879, 1890], "thousand": [16, 26], "highli": [16, 55, 1327, 1599, 1854, 1892, 1898, 1914, 1921], "tini": [16, 1920, 1921, 1926], "torchdynamo_repro_aft": [16, 26], "aot": [16, 26, 674, 1866], "your_model": 16, "quickest": 16, "repro": [16, 26, 1656], "torchdynamo_repro_dir": 16, "nvfuser": [16, 18, 26, 1857], "leverag": [16, 17, 947, 1910], "compile_tim": [16, 26], "torch_compile_debug": [16, 18], "_inductor": [16, 17, 20, 26, 947], "diagram": [16, 26, 46, 55, 1187, 1419, 1905, 1912], "cache_size_limit": [16, 19, 26], "troubl": [16, 26], "compileprofil": [16, 26], "my_model": [16, 26, 40, 1599, 1857, 1898], "profiler_model": [16, 26], "upcom": [16, 26, 38, 60, 1879], "tune": [16, 26, 36, 38, 42, 1017, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1880, 1883, 1892, 1905], "warm": [16, 36, 42, 1006, 1678, 1679, 1883, 1904], "traffic": 16, "frozen_toy_exampl": 16, "vertic": [16, 1848, 1849, 1901, 1903, 1919], "cosin": [16, 677, 678, 956, 957, 1353, 1354, 1500, 1678, 1679, 1686, 1764, 1901], "horizont": [16, 945, 1150, 1152, 1901, 1903], "simplest": [16, 19, 20, 35, 40, 46, 68, 852, 1332, 1333, 1334, 1347, 1348, 1349, 1412, 1413, 1414, 1609, 1884, 1885, 1891, 1905, 1912, 1914], "schedul": [16, 40, 46, 48, 54, 60, 67, 674, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1866, 1884, 1890, 1904], "physic": [16, 56, 1078, 1096, 1861, 1882, 1914], "principl": [16, 1883], "triton": [16, 17, 18, 23, 26, 947, 1886], "stream": [16, 35, 38, 46, 53, 60, 67, 148, 482, 887, 901, 961, 962, 963, 964, 967, 968, 969, 977, 980, 981, 995, 1001, 1033, 1036, 1300, 1301, 1306, 1654, 1726, 1855, 1858, 1860, 1910], "multiprocessor": 16, "tile": [16, 488, 1858, 1900], "some_fun": [16, 26], "insurmount": [16, 26], "invis": [16, 26, 1883], "introduc": [16, 20, 21, 26, 32, 44, 65, 754, 1259, 1371, 1389, 1434, 1529, 1731, 1854, 1860, 1881, 1884, 1892, 1898, 1902, 1903, 1904, 1910, 1920], "maxim": [16, 26, 868, 1284, 1415, 1416, 1417, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1672, 1673, 1674, 1675, 1914], "explain": [16, 26, 30, 38, 1675, 1854, 1860, 1879, 1883, 1886], "aggreg": [16, 26, 36, 38, 40, 48, 60, 1363, 1510, 1599, 1622, 1870, 1903], "woo": [16, 26], "out_guard": [16, 26], "ops_per_graph": [16, 26], "builtinvari": [16, 26], "constantvari": [16, 19, 26], "t2": [16, 26, 45, 681, 682, 874, 1111, 1140, 1599, 1910, 1911], "generic_jump": [16, 26], "17": [16, 26, 29, 38, 679, 1184, 1239, 1416, 1778, 1857, 1898, 1900, 1914], "throw": [16, 18, 26, 38, 39, 43, 60, 67, 68, 188, 320, 325, 539, 608, 1172, 1187, 1227, 1276, 1419, 1599, 1601, 1602, 1635, 1646, 1700, 1840, 1875, 1880, 1895, 1910, 1920], "fallback": [16, 26, 29, 38, 55, 63, 1200, 1250, 1879, 1883], "fullgraph": [16, 17, 26, 947], "went": [16, 38, 68], "torchdynamo_dynamic_shap": 16, "cv": 16, "nlp": [16, 36, 1382, 1383, 1384, 1391], "client": [16, 38, 42, 55, 1017, 1902], "app": 16, "unnecessarili": 16, "cold": [16, 22], "metric": [16, 22, 41, 1009, 1011, 1017, 1688, 1870, 1891, 1904, 1919], "visibli": 16, "torchdynamo_repro_level": [16, 26], "bisect": [16, 26], "codegen": [16, 26, 68], "dramat": [16, 26], "impact": [16, 21, 26, 36, 38, 1017, 1748, 1868, 1870, 1880, 1905, 1918], "fallback_random": [16, 17, 26, 947], "alpha": [16, 44, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 149, 150, 309, 310, 548, 555, 556, 557, 558, 679, 680, 683, 684, 685, 738, 764, 769, 915, 1003, 1004, 1144, 1158, 1331, 1341, 1361, 1407, 1446, 1484, 1492, 1507, 1508, 1518, 1536, 1569, 1658, 1672, 1765, 1766, 1779, 1783, 1797, 1802, 1803, 1856, 1858, 1880, 1885, 1898, 1901], "root": [16, 38, 40, 48, 55, 56, 60, 68, 787, 1125, 1224, 1225, 1672, 1735, 1794, 1868, 1880, 1902, 1910, 1911, 1914], "allevi": [16, 1903], "cudagraph": [16, 17, 18, 22, 947, 995, 1883], "autotun": [17, 20, 947], "list_mode_opt": [17, 20, 947], "notabl": [17, 947, 1860], "epilogue_fus": [17, 947], "templat": [17, 947, 1003, 1004, 1901], "max_autotun": [17, 947], "shape_pad": [17, 947], "graph_diagram": [17, 947], "pictur": [17, 947], "list_opt": [17, 20, 947], "speedup": [18, 19, 20, 22, 35, 36, 1425, 1466], "checkout": [18, 1898], "new_fn": 18, "input_tensor": [18, 38], "10000": [18, 32, 36, 688, 1686, 1733, 1887, 1891, 1914, 1919], "Its": [18, 38, 68, 959, 975, 1187, 1234, 1252, 1253, 1278, 1419, 1646, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1671, 1672, 1673, 1674, 1675, 1844, 1860, 1884], "famou": 18, "suboptim": [18, 36], "crucial": [18, 19, 20, 30, 1864], "bottleneck": [18, 36, 1855, 1891], "bandwidth": [18, 36, 38, 54, 56, 1905, 1910], "crunch": 18, "elimin": [18, 25, 38, 68, 604, 1837, 1838, 1895], "trig": 18, "size_hint": 18, "16384": [18, 1883], "filenam": [18, 29, 35, 68, 1186, 1194, 1197, 1854, 1858, 1869, 1880, 1902, 1916, 1919], "__file__": [18, 1854, 1897, 1902], "fp32": [18, 60, 775, 788, 811, 1045, 1599, 1883, 1894, 1905, 1906, 1908], "i32": 18, "instance_descriptor": 18, "divisible_by_16": 18, "equal_to_1": 18, "in_ptr0": 18, "out_ptr0": 18, "xnumel": 18, "xblock": 18, "tl": 18, "constexpr": 18, "xoffset": 18, "program_id": 18, "xindex": 18, "reshap": [18, 30, 38, 44, 493, 494, 508, 538, 611, 686, 945, 1043, 1058, 1059, 1099, 1150, 1207, 1239, 1243, 1252, 1253, 1256, 1319, 1366, 1440, 1441, 1442, 1443, 1444, 1470, 1607, 1640, 1646, 1785, 1786, 1793, 1820, 1821, 1826, 1848, 1849, 1856, 1858, 1867, 1874, 1875, 1898, 1900, 1907, 1918, 1919], "arang": [18, 27, 35, 38, 45, 508, 601, 685, 686, 687, 691, 693, 880, 881, 882, 929, 941, 945, 1043, 1058, 1076, 1080, 1088, 1094, 1096, 1100, 1101, 1102, 1103, 1110, 1111, 1150, 1207, 1208, 1212, 1215, 1239, 1242, 1243, 1256, 1319, 1440, 1441, 1442, 1443, 1444, 1471, 1472, 1473, 1555, 1646, 1647, 1693, 1701, 1705, 1720, 1727, 1732, 1753, 1785, 1793, 1804, 1820, 1821, 1823, 1824, 1826, 1848, 1856, 1858, 1867, 1875, 1896, 1900, 1915, 1919, 1920], "xmask": 18, "x0": [18, 44], "tmp0": 18, "tmp1": 18, "tmp2": 18, "int32": [18, 189, 206, 310, 318, 322, 443, 611, 931, 1062, 1074, 1075, 1110, 1112, 1113, 1217, 1228, 1229, 1230, 1248, 1276, 1342, 1703, 1740, 1905, 1914, 1916, 1917, 1920, 1926], "temporari": [18, 29, 68, 817, 820, 1600, 1880, 1887], "held": [18, 67, 961, 985, 1013, 1297, 1879], "resnet50": [18, 1854, 1919], "hub": [18, 1855, 1869], "v0": 18, "resnet18": [18, 63, 68, 1854, 1857, 1859, 1869, 1902], "opt_model": 18, "64": [18, 63, 64, 66, 1121, 1122, 1126, 1324, 1325, 1326, 1328, 1329, 1330, 1336, 1447, 1568, 1741, 1875, 1897, 1898, 1905, 1909, 1914, 1917, 1919, 1920], "inspir": [18, 60, 1664, 1885], "frequent": [18, 20, 27, 40, 1327, 1855, 1894, 1896], "timm": [18, 20, 22], "download": [18, 1869, 1897, 1919], "huggingfac": [18, 20, 22], "berttoken": 18, "bertmodel": 18, "past": [18, 22, 38, 68, 972, 1019, 1023, 1037, 1038, 1599, 1887], "bert": [18, 1465], "uncas": 18, "token": [18, 55, 961, 995, 996, 1854, 1861], "from_pretrain": [18, 1362, 1363], "me": 18, "encoded_input": 18, "return_tensor": 18, "pt": [18, 27, 36, 1192, 1194, 1197, 1204, 1258, 1736, 1857, 1891, 1896, 1902], "trigonometri": 18, "skim": 18, "create_model": 18, "resnext101_32x8d": 18, "7": [18, 22, 29, 35, 36, 38, 44, 68, 257, 310, 312, 314, 318, 398, 399, 467, 508, 554, 601, 611, 679, 691, 739, 740, 898, 900, 923, 926, 931, 937, 941, 945, 1043, 1055, 1057, 1058, 1061, 1076, 1099, 1100, 1103, 1106, 1110, 1140, 1150, 1164, 1208, 1212, 1222, 1227, 1229, 1230, 1233, 1234, 1238, 1239, 1243, 1250, 1317, 1318, 1319, 1325, 1326, 1329, 1330, 1332, 1343, 1362, 1407, 1415, 1416, 1440, 1441, 1442, 1443, 1444, 1470, 1485, 1556, 1624, 1629, 1639, 1646, 1664, 1711, 1715, 1721, 1731, 1732, 1733, 1740, 1753, 1756, 1758, 1769, 1770, 1778, 1785, 1787, 1788, 1793, 1805, 1807, 1808, 1815, 1820, 1821, 1824, 1826, 1835, 1844, 1848, 1857, 1861, 1867, 1874, 1875, 1881, 1883, 1885, 1894, 1896, 1898, 1900, 1905, 1914, 1917, 1918, 1919, 1920, 1921], "highest": [18, 674, 1327, 1715, 1716, 1748, 1906, 1921], "aot_ts_nvfus": 18, "nvprims_nvfus": 18, "onnxrt": 18, "ipex": 18, "tvm": 18, "apach": 18, "symbolic_trac": [18, 68], "smoother": [18, 1854, 1867], "transit": [18, 19, 1187, 1288, 1419, 1801, 1855, 1857], "ux": [19, 61, 66], "perspect": [19, 1884, 1894, 1911], "fn_foo": 19, "grab": 19, "dig": 19, "hole": 19, "perf": [19, 29, 1905], "neutral": 19, "referenc": [19, 68, 964, 1187, 1419, 1828, 1859, 1880, 1898, 1910], "previous": [19, 21, 55, 60, 61, 64, 65, 66, 68, 219, 692, 786, 787, 1128, 1194, 1799, 1800, 1842, 1843, 1847, 1857, 1881, 1883, 1891, 1902, 1903, 1909, 1910, 1915], "translat": [19, 38, 83, 84, 1140, 1880, 1912], "check_fn": 19, "thrown": [19, 38, 43, 60, 67, 611, 872, 874, 1017, 1058, 1150, 1187, 1217, 1226, 1228, 1230, 1233, 1234, 1245, 1419, 1603, 1848, 1902], "_pyinterpreterstate_setevalframefunc": 19, "convert_fram": [19, 26], "convert_frame_assert": 19, "gloss": 19, "proxi": [19, 38, 40, 1905], "one_graph": 19, "_convert_frame_assert": 19, "frametyp": 19, "cache_s": [19, 44], "f_code": 19, "unsupport": [19, 21, 65, 80, 1857, 1861, 1874, 1899, 1910, 1914], "drop": [19, 35, 64, 66, 68, 1006, 1192, 1245, 1250, 1331, 1641, 1801, 1857, 1874, 1893], "needless": 19, "evict": 19, "alongsid": [19, 29, 1187, 1419], "transform_code_object": 19, "output_instruct": 19, "rememb": [19, 1887, 1893], "guardedcod": 19, "symbolic_loc": 19, "f_local": 19, "travers": [19, 60, 830, 1599, 1884, 1885, 1911, 1923, 1924], "ordereddict": [19, 1187, 1419, 1420, 1429, 1447, 1590, 1622, 1858, 1891, 1896, 1921], "k": [19, 26, 35, 38, 40, 44, 56, 68, 283, 351, 501, 508, 510, 512, 584, 611, 754, 940, 1047, 1060, 1116, 1129, 1149, 1208, 1216, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1231, 1232, 1233, 1236, 1238, 1245, 1247, 1249, 1250, 1259, 1277, 1281, 1332, 1334, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1367, 1368, 1371, 1372, 1389, 1390, 1404, 1406, 1407, 1412, 1414, 1425, 1426, 1434, 1436, 1501, 1513, 1514, 1536, 1553, 1568, 1606, 1692, 1694, 1704, 1732, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1791, 1792, 1801, 1823, 1828, 1856, 1858, 1859, 1878, 1883, 1885, 1897, 1914, 1915, 1917], "variablebuild": 19, "localsourc": 19, "_wrap": 19, "construct": [19, 29, 30, 35, 38, 40, 42, 43, 44, 55, 60, 62, 64, 65, 68, 148, 444, 786, 787, 818, 872, 873, 887, 901, 949, 1047, 1063, 1128, 1149, 1187, 1198, 1202, 1203, 1210, 1217, 1257, 1258, 1273, 1288, 1362, 1363, 1419, 1509, 1590, 1599, 1601, 1602, 1632, 1639, 1653, 1694, 1698, 1745, 1780, 1787, 1788, 1789, 1790, 1791, 1792, 1806, 1819, 1822, 1847, 1855, 1857, 1870, 1883, 1884, 1891, 1893, 1896, 1902, 1905, 1910, 1912, 1917, 1919, 1920, 1921], "variabletrack": 19, "make_guard": 19, "outputgraph": [19, 68], "mention": [19, 26, 38, 60, 1854, 1859, 1860, 1874, 1880, 1883, 1891, 1898, 1914, 1918], "recal": [19, 1336, 1885, 1919], "heart": [19, 35], "pump": 19, "exactli": [19, 29, 36, 38, 44, 57, 902, 903, 941, 973, 977, 1060, 1106, 1107, 1184, 1187, 1228, 1363, 1366, 1419, 1447, 1450, 1510, 1520, 1599, 1646, 1657, 1867, 1873, 1880, 1883, 1884, 1885, 1888, 1889, 1898, 1902, 1903], "cool": 19, "di": [19, 1872], "get_instruct": 19, "124": 19, "opnam": 19, "argval": 19, "starts_lin": 19, "is_jump_target": 19, "littl": [19, 38, 1885, 1912], "hasattr": [19, 68, 1858, 1885, 1905], "inst": 19, "unimpl": 19, "miss": [19, 53, 60, 683, 1116, 1187, 1281, 1291, 1353, 1382, 1383, 1384, 1419, 1535, 1641, 1897, 1898, 1899, 1914], "getattr": [19, 68, 1858, 1885], "inde": [19, 21, 45, 1857, 1867, 1902, 1912], "onto": [19, 25, 38, 60, 68, 1022, 1194, 1197, 1258, 1611, 1854, 1872, 1883, 1886, 1887, 1891, 1904], "dozen": 19, "symbolic_convert": [19, 26], "spoken": 19, "quiet": 19, "closer": [19, 1140, 1468, 1705, 1885, 1891], "mind": [19, 20, 1232, 1250, 1362, 1880, 1886, 1888], "replace_guard": 19, "add_guard": 19, "visit": [19, 58, 1898], "act": [19, 40, 44, 46, 53, 65, 852, 1336, 1420, 1421, 1430, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1625, 1626, 1627, 1628, 1629, 1840, 1883, 1891, 1895, 1901], "behalf": 19, "python_typ": 19, "as_proxi": 19, "as_python_proxi": 19, "bookkeep": 19, "came": 19, "somewher": [19, 1874, 1890], "flesh": 19, "notimplementederror": [19, 44, 1902], "relianc": 19, "fulfil": [19, 1880, 1886, 1902], "build_tupl": 19, "gist": [19, 64, 787, 1888], "notion": [19, 35, 902, 1337, 1338, 1339, 1382, 1383, 1384, 1458], "popn": 19, "tuplevari": 19, "pydoc": 19, "tensorvari": 19, "instructiontranslatorbas": 19, "pop": [19, 65, 1021, 1420, 1429, 1900, 1903, 1904], "dataclass": [19, 25, 40], "ctor": 19, "guardsourc": 19, "create_fn": 19, "kind": [19, 38, 49, 68, 674, 1206, 1600, 1656, 1703, 1768, 1854, 1864, 1885, 1893, 1898, 1902, 1905, 1915, 1917], "guard_sourc": 19, "elif": [19, 25, 68, 1193, 1385, 1653, 1859, 1860, 1889], "istyp": 19, "guardbuild": 19, "equals_match": 19, "rangevari": 19, "appar": 19, "checkfunctionmanag": 19, "compile_check_fn": 19, "cacheentri": 19, "create_cache_entri": 19, "pyobject": 19, "guarded_cod": 19, "malloc": [19, 60], "sizeof": [19, 1916], "debug_null_check": 19, "pyobject_getattrstr": 19, "null_check": 19, "pycodeobject": 19, "compos": [19, 21, 44, 64, 68, 732, 733, 734, 735, 736, 737, 760, 761, 766, 767, 768, 776, 777, 938, 940, 1118, 1120, 1121, 1122, 1128, 1187, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1347, 1348, 1349, 1350, 1351, 1352, 1367, 1368, 1387, 1388, 1407, 1412, 1413, 1414, 1419, 1467, 1472, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1493, 1494, 1495, 1496, 1497, 1498, 1513, 1514, 1536, 1539, 1540, 1542, 1543, 1544, 1709, 1710, 1847, 1855, 1856, 1857, 1860, 1873, 1885, 1886, 1891, 1898, 1902, 1919], "sort_kei": 19, "guard_nn_modul": 19, "is_nn_modul": 19, "local_build": 19, "global_build": 19, "___guarded_cod": 19, "___check_type_id": 19, "94367738391392": 19, "___check_tensor": 19, "id": [19, 22, 26, 32, 35, 38, 42, 46, 54, 55, 56, 60, 68, 768, 818, 961, 996, 1458, 1544, 1583, 1599, 1656, 1860, 1890, 1898, 1900, 1902, 1909, 1910, 1911, 1916], "deeper": [19, 23, 1855, 1891, 1902], "dive": [19, 23, 1855, 1884, 1888, 1902], "_eval_fram": 19, "anew": 19, "massiv": 19, "role": [19, 40, 46, 47, 55, 56], "weak": 19, "moduleinvalid": 19, "2x": [20, 1919], "compress": [20, 22, 36, 60, 206, 581, 582, 1082, 1083, 1092, 1093, 1599, 1787, 1788, 1789, 1791, 1792, 1825, 1855], "varieti": [20, 1883, 1911], "announc": [20, 55], "compiled_fn": 20, "set_float32_matmul_precis": [20, 1136], "simpler": [20, 66, 1128, 1847, 1857, 1880, 1885, 1888, 1891], "bench_al": 20, "IF": 20, "odd": [20, 44, 1081, 1082, 1083, 1091, 1092, 1093, 1493, 1494, 1495], "quirk": 20, "ask": [20, 38, 64, 65, 1854, 1855, 1886, 1888], "overview": [20, 30, 38, 52, 1599, 1855, 1867, 1872, 1880, 1888, 1891, 1903, 1905, 1910], "nnmodul": 20, "constabl": 21, "edg": [21, 773, 779, 1140, 1148, 1149, 1529, 1587, 1865, 1886, 1911], "orchestr": 21, "_forward_pre_hook": 21, "forward_hook": [21, 1891], "_backward_pre_hook": 21, "_backward_hook": 21, "categori": [21, 44, 48, 1309, 1860, 1862, 1898, 1901, 1904, 1906, 1917], "_state_dict_hook": 21, "load_": 21, "alter": [21, 1879, 1885], "backward_hook": [21, 1891], "avoiabl": 21, "fire": [21, 1187, 1419, 1884, 1890], "presenc": [21, 65, 68, 1196, 1314, 1902, 1914], "conv": [21, 68, 696, 697, 698, 699, 700, 701, 702, 703, 704, 786, 787, 790, 808, 848, 854, 1187, 1196, 1202, 1203, 1347, 1348, 1349, 1350, 1351, 1352, 1419, 1420, 1426, 1868, 1878, 1883, 1894, 1898, 1905, 1906, 1907, 1908], "opaqu": [21, 38, 45, 961, 995, 996, 1111], "skip_nnmodule_hook_guard": 21, "react": [21, 46], "pre_backward": 21, "accordingli": [21, 44, 68, 1196, 1389, 1611, 1875, 1910], "warn_onc": 21, "bin": [22, 46, 53, 55, 297, 298, 813, 918, 1147, 1148, 1149, 1858, 1860, 1900, 1919], "hui": 22, "nightli": 22, "gcp": [22, 38], "a100": [22, 26], "night": 22, "40gb": [22, 26], "2ghz": 22, "xeon": [22, 1855, 1882], "suit": [22, 38, 1857, 1859, 1860, 1898, 1906, 1910], "torchbench": 22, "amp": [22, 26, 1006, 1855, 1879], "trend": 22, "droplist": 22, "geometr": [22, 283, 773, 779, 1518, 1529, 1587, 1841, 1855, 1900, 1922], "peak": [22, 40, 42, 60, 1009, 1011, 1017, 1024, 1025, 1026, 1599, 1680, 1686, 1903], "footprint": [22, 36, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1883], "ratio": [22, 44, 46, 611, 1367, 1368, 1513, 1514, 1858], "click": [22, 1922], "with_cudagraph": 22, "kick": [22, 1884, 1910, 1911], "ui": [22, 1888, 1919], "Be": [22, 1898], "wise": [22, 36, 38, 44, 681, 682, 692, 752, 764, 765, 774, 778, 878, 953, 1060, 1065, 1106, 1107, 1130, 1131, 1143, 1152, 1209, 1211, 1268, 1269, 1270, 1271, 1275, 1285, 1288, 1290, 1320, 1341, 1352, 1359, 1361, 1375, 1376, 1377, 1378, 1380, 1405, 1408, 1418, 1427, 1437, 1438, 1439, 1446, 1448, 1449, 1450, 1455, 1457, 1459, 1460, 1492, 1507, 1516, 1517, 1521, 1522, 1523, 1524, 1527, 1531, 1533, 1538, 1548, 1549, 1562, 1563, 1564, 1569, 1570, 1571, 1572, 1576, 1578, 1579, 1580, 1785, 1849, 1882, 1885, 1914, 1915, 1918], "pep": [23, 1857, 1859, 1898], "523": 23, "rewrit": [23, 40, 65, 80, 81, 1868, 1880, 1888, 1898], "customiz": [23, 1861, 1923], "usabl": [23, 26, 67, 1860, 1898], "openmp": [23, 1855, 1882, 1897], "dashboard": [23, 1855], "video": [23, 1431, 1432, 1874, 1919], "topic": [23, 27, 1890, 1891], "vmap": [24, 61, 63, 64, 68, 895, 897, 901, 902, 903, 1118, 1121, 1122, 1124, 1126], "jacrev": [24, 62, 64, 65, 897, 1120, 1121, 1886], "100320": 24, "escap": 24, "hatch": 24, "introspect": [24, 68], "jax": [24, 61, 64, 65, 66, 1880, 1886], "promis": 24, "coupl": [24, 25, 64, 1857, 1890, 1911], "pure": [24, 29, 30, 65, 1190, 1857], "relax": [24, 44, 1202, 1203, 1611, 1905], "pitfal": [24, 1855], "functional_cal": [24, 62, 64, 1126], "sit": 25, "replace_add_with_mul": 25, "insert": [25, 35, 38, 44, 60, 67, 68, 741, 786, 787, 855, 856, 1420, 1421, 1429, 1599, 1740, 1743, 1753, 1774, 1798, 1839, 1857, 1868, 1883, 1900, 1905], "insert_relu_after_add": 25, "inserting_aft": [25, 68], "new_relu_nod": 25, "replace_all_uses_with": [25, 68], "roughli": [25, 35, 1385, 1884], "axi": [25, 508, 510, 512, 816, 819, 951, 1059, 1074, 1100, 1129, 1152, 1706, 1726, 1731, 1732, 1849, 1856, 1858, 1886, 1898, 1903, 1905], "eg": [25, 931, 1733, 1740], "dead": [25, 68], "frequenc": [25, 56, 918, 959, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1184, 1327, 1362, 1363, 1509, 1510, 1680, 1801], "replaceaddwithmul": 25, "transformed_graph_modul": 25, "graph_modul": [25, 853], "replaceaddwithmulsub": 25, "mul_r": 25, "removedetachpass": 25, "detach_copi": [25, 1858, 1900], "len": [25, 35, 38, 40, 68, 216, 539, 689, 690, 1079, 1083, 1086, 1090, 1093, 1097, 1127, 1191, 1253, 1274, 1286, 1314, 1317, 1356, 1556, 1617, 1619, 1635, 1679, 1686, 1790, 1793, 1799, 1800, 1804, 1841, 1842, 1843, 1857, 1858, 1860, 1885, 1900, 1914, 1919], "args_map": 25, "schema": [25, 32, 38, 40, 1856, 1857, 1858, 1860, 1864, 1898], "enumer": [25, 35, 44, 68, 1187, 1419, 1421, 1430, 1679, 1858, 1859, 1879, 1883, 1897, 1919], "_schema": 25, "kwarg_onli": 25, "scalartotensorpass": 25, "breakpoint": [25, 68, 1860], "try_coerc": 25, "tensortyp": [25, 1860], "wildcard": [25, 1874, 1902], "subgraph_rewrit": [25, 68], "replace_pattern": 25, "replaced_pattern": 25, "replace_pattern_with_filt": 25, "traced_modul": [25, 68, 1896], "replacedpattern": 25, "nodes_map": [25, 68], "passmanag": 25, "blob": [25, 786, 1117, 1888, 1890, 1919], "infra": [25, 26, 48, 1899], "pass_manag": 25, "__": [25, 1861], "pm": 25, "replace_add_with_div": 25, "replace_div_with_mul": 25, "run_checks_after_each_pass": 25, "suppress_check_failur": 25, "graph_module_out": 25, "set_check": 25, "check_div_target": 25, "div": [25, 36, 233, 1056, 1105, 1108, 1327, 1431, 1432, 1724, 1833, 1856, 1858, 1864, 1873, 1900, 1914, 1917], "valueerror": [25, 67, 1185, 1611, 1612, 1632, 1635, 1885, 1903, 1921], "add_check": 25, "subgraphmatch": 25, "matcher_util": 25, "match_output": 25, "match_placehold": 25, "remove_overlapping_match": 25, "ignore_liter": 25, "liter": [25, 1655, 1858, 1861, 1874, 1902], "largemodel": 25, "_weight": [25, 739, 740, 1362, 1363], "_bia": 25, "large_model_graph": 25, "patternmodel": 25, "_weight_1": 25, "_bias_1": 25, "pattern_graph": 25, "subgraph_match": 25, "match_result": 25, "internalmatch": 25, "default_factori": 25, "placeholder_nod": 25, "returning_nod": 25, "largest": [25, 60, 584, 918, 1104, 1218, 1239, 1241, 1243, 1244, 1259, 1555, 1607, 1823, 1856, 1858, 1859, 1860, 1926], "invari": [25, 44, 1632, 1780, 1787, 1788, 1789, 1790, 1791, 1792, 1912, 1914], "capabilitybasedpartition": 25, "l34": 25, "operator_support": 25, "operatorsupportbas": 25, "allows_single_node_partit": 25, "non_compute_op": 25, "ex": [25, 47, 1599, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1870], "_oper": 25, "getitem": 25, "allowed_single_node_partition_op": 25, "ll28c1": 25, "l28c1": 25, "is_node_support": 25, "chain": [25, 35, 36, 44, 67, 68, 148, 887, 937, 1242, 1363, 1447, 1676, 1689, 1860, 1880, 1883, 1885, 1888, 1891, 1901], "operatorsuppportbas": 25, "l150": 25, "any_chain": 25, "l164": 25, "addmuloperatorsupport": 25, "capability_partition": 25, "op_support": 25, "partition_list": 25, "propose_partit": 25, "call_modul": [25, 68], "fused_graph_modul": 25, "fuse_partit": 25, "lazo": 26, "meantim": [26, 1335, 1336, 1353, 1355, 1379, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1490, 1491, 1501, 1530, 1553, 1561], "smallest": [26, 48, 936, 1208, 1218, 1239, 1243, 1259, 1703, 1823, 1921, 1926], "suspect": [26, 32, 1675, 1883], "taken": [26, 38, 44, 60, 67, 68, 859, 1081, 1083, 1106, 1107, 1342, 1355, 1363, 1426, 1502, 1510, 1753, 1785, 1878, 1880, 1882, 1883, 1885, 1887, 1890, 1896, 1898, 1902, 1904], "begin": [26, 32, 35, 36, 38, 39, 47, 55, 60, 68, 491, 754, 778, 814, 815, 859, 916, 954, 961, 1009, 1011, 1080, 1140, 1146, 1207, 1242, 1254, 1334, 1335, 1336, 1353, 1355, 1361, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1380, 1386, 1389, 1390, 1405, 1410, 1413, 1414, 1426, 1427, 1434, 1437, 1450, 1456, 1461, 1468, 1501, 1522, 1523, 1599, 1606, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1678, 1680, 1686, 1753, 1756, 1759, 1801, 1826, 1837, 1850, 1860, 1879, 1880, 1883, 1885, 1888, 1890, 1895, 1898, 1901, 1908, 1915], "proce": [26, 1879, 1883, 1910], "sampl": [26, 35, 40, 44, 61, 66, 68, 86, 151, 152, 374, 450, 477, 602, 773, 917, 959, 972, 1006, 1019, 1023, 1037, 1038, 1078, 1096, 1118, 1128, 1140, 1184, 1203, 1276, 1309, 1331, 1335, 1336, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1373, 1379, 1382, 1383, 1384, 1385, 1386, 1404, 1406, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1437, 1450, 1451, 1458, 1467, 1483, 1490, 1491, 1501, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1515, 1518, 1520, 1528, 1529, 1530, 1553, 1561, 1599, 1607, 1647, 1679, 1694, 1697, 1711, 1713, 1715, 1717, 1719, 1783, 1799, 1800, 1801, 1842, 1843, 1847, 1855, 1870, 1878, 1879, 1883, 1890, 1891, 1902, 1905, 1906, 1919], "test_assertion_error": 26, "compiled_test_assertion_error": 26, "mlazo": 26, "837": 26, "build_map": 26, "portion": [26, 60, 1109, 1356, 1450, 1558, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1906], "fortun": [26, 1887], "isol": [26, 68, 1590, 1872, 1903], "test_backend_error": 26, "_foobar": [26, 1900], "dummi": [26, 35, 42, 1880, 1885, 1925], "compiled_test_backend_error": 26, "246": [26, 611], "185": [26, 611], "decomp_fn": 26, "810": 26, "repro_aft": 26, "nearli": [26, 148, 887, 901, 1694, 1893, 1910], "minifier_launch": 26, "base_dir": 26, "successfulli": [26, 38, 46, 52, 70, 71, 72, 1193, 1749, 1872, 1891, 1896, 1910], "runnabl": [26, 68, 1879, 1898, 1919], "rand_strid": 26, "0a0": 26, "gitfddfc44": 26, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 26, "nvcc": [26, 29, 991], "2005": [26, 677, 1843], "2022": 26, "thu_feb_10_18": 26, "23": [26, 38, 508, 1259, 1764, 1857, 1914], "41_pst_2022": 26, "v11": 26, "112": [26, 611], "cuda_11": 26, "r11": 26, "30978841_0": 26, "sxm4": 26, "float32": [26, 35, 36, 264, 574, 611, 813, 814, 815, 816, 819, 820, 874, 949, 1074, 1075, 1112, 1134, 1136, 1169, 1323, 1336, 1471, 1472, 1473, 1485, 1661, 1662, 1698, 1703, 1711, 1715, 1730, 1745, 1746, 1748, 1790, 1845, 1875, 1879, 1883, 1894, 1898, 1907, 1915, 1916, 1917, 1920, 1921, 1926], "compile_fx": 26, "compile_fx_inn": 26, "walk": [26, 30, 68, 1864, 1885, 1902, 1911, 1912, 1918], "toi": [26, 52], "toy_compil": 26, "debug_util": 26, "run_fwd_maybe_bwd": 26, "opt_mod": 26, "sh": [26, 762, 763, 767, 768, 1486, 1487, 1494, 1495, 1497, 1498, 1543, 1544], "st": [26, 1487, 1495, 1498, 1544], "dt": [26, 1495, 1498, 1915], "requires_grad_": [26, 332, 444, 1187, 1342, 1419, 1502, 1782, 1819, 1858, 1873, 1880, 1920], "rg": 26, "autocast": [26, 1006, 1425, 1855, 1883], "test_model": 26, "layernorm": [26, 1374, 1382, 1383, 1384, 1462, 1466, 1532, 1875, 1907], "overridden": [26, 29, 68, 883, 884, 885, 1003, 1419, 1780, 1860, 1880, 1885, 1894, 1903, 1925], "debug_dir_root": 26, "torch_compile_debug_dir": 26, "timestamp": [26, 48, 49, 52, 56, 1870, 1904, 1919], "cd": [26, 1897, 1902, 1904], "l": [26, 44, 729, 754, 916, 925, 931, 938, 939, 1060, 1144, 1145, 1187, 1206, 1216, 1217, 1222, 1223, 1224, 1225, 1229, 1233, 1234, 1276, 1278, 1332, 1335, 1336, 1337, 1347, 1355, 1358, 1359, 1366, 1371, 1379, 1380, 1382, 1385, 1386, 1389, 1401, 1410, 1412, 1419, 1421, 1425, 1426, 1434, 1450, 1467, 1468, 1470, 1568, 1617, 1626, 1634, 1636, 1664, 1740, 1801, 1858, 1860, 1880, 1919], "run_2023_03_01_08_20_52_143510": 26, "pid_180167": 26, "subfold": [26, 29], "artifact": [26, 674, 1866, 1890, 1902], "model__0_forward_1": 26, "aot_model___0_debug": 26, "fx_graph_read": 26, "fx_graph_runn": 26, "fx_graph_transform": 26, "ir_post_fus": 26, "txt": [26, 1194, 1197, 1902], "ir_pre_fus": 26, "fx_graph": 26, "buf1": 26, "schedulernod": 26, "computedbuff": 26, "memorydep": 26, "unmet_depend": 26, "buf0": 26, "c0": [26, 728, 756, 1389], "met_depend": 26, "primals_2": 26, "buf1_loop_bodi": 26, "var_rang": 26, "z0": 26, "index0": 26, "index1": 26, "bodi": [26, 68, 1198, 1857, 1859, 1860, 1861], "get_index": 26, "get_index_1": 26, "load_1": 26, "get_index_2": 26, "compiled_fun": 26, "hinder": 26, "sublist": [26, 1060], "succe": [26, 38, 43, 55, 65, 1883, 1885, 1897], "compiled_toi": 26, "outweigh": [26, 1675], "readm": [26, 50, 51, 786, 1875], "verify_instal": 26, "log_fil": 26, "bj": 27, "j": [27, 38, 44, 310, 312, 318, 508, 510, 512, 686, 889, 895, 897, 949, 1060, 1076, 1077, 1084, 1090, 1094, 1095, 1129, 1184, 1187, 1222, 1223, 1234, 1250, 1259, 1266, 1274, 1276, 1281, 1358, 1359, 1360, 1364, 1419, 1422, 1504, 1505, 1506, 1511, 1698, 1705, 1784, 1801, 1805, 1844, 1859, 1878, 1880, 1885, 1888, 1896, 1919], "imaginari": [27, 308, 902, 949, 955, 1081, 1083, 1091, 1092, 1093, 1157, 1177, 1179, 1180, 1183, 1801, 1845, 1846, 1861, 1880, 1888, 1921], "satisfi": [27, 33, 36, 44, 611, 688, 754, 788, 896, 902, 903, 931, 1076, 1077, 1079, 1081, 1083, 1091, 1092, 1093, 1108, 1200, 1226, 1252, 1253, 1327, 1342, 1366, 1371, 1389, 1434, 1622, 1639, 1724, 1740, 1780, 1801, 1860, 1880, 1883, 1888, 1901, 1903, 1914, 1917], "equat": [27, 940, 1060, 1132, 1144, 1230, 1231, 1232, 1233, 1234, 1236, 1247, 1249, 1335, 1766, 1828, 1858, 1880, 1888, 1901, 1915], "mathemat": [27, 43, 68, 895, 896, 897, 898, 899, 900, 1108, 1140, 1335, 1337, 1338, 1339, 1382, 1383, 1384, 1385, 1458, 1537, 1575, 1599, 1646, 1724, 1782, 1783, 1860, 1880, 1894, 1915, 1922], "tradition": 27, "torchaudio": [27, 1855], "mimick": 27, "assembli": 27, "lapack": [27, 939, 1132, 1217, 1228, 1229, 1230, 1232, 1235, 1248, 1704, 1805], "cubla": [27, 978, 1840, 1895], "spectral": [27, 1206, 1222, 1250, 1607, 1630, 1640, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1894], "fft": [27, 1855, 1883], "4621": 27, "0303j": 27, "2438": [27, 1232, 1509], "5874j": 27, "7706": 27, "1421j": 27, "2110": 27, "1918j": 27, "complex128": [27, 173, 949, 1103, 1112, 1166, 1187, 1216, 1217, 1222, 1223, 1224, 1225, 1226, 1227, 1347, 1348, 1349, 1419, 1493, 1494, 1495, 1655, 1698, 1745, 1916, 1917, 1920, 1921], "complex64": [27, 176, 949, 1077, 1079, 1080, 1085, 1086, 1112, 1166, 1218, 1241, 1244, 1347, 1348, 1349, 1493, 1494, 1495, 1655, 1698, 1745, 1916, 1917, 1920, 1921], "apart": [27, 1860, 1880], "linspac": [27, 918, 942, 1081, 1091, 1288, 1858, 1862, 1900], "logspac": [27, 1858, 1862, 1900], "switch": [27, 35, 63, 67, 68, 1229, 1230, 1231, 1359, 1518, 1556, 1603, 1736, 1840, 1872, 1880, 1883, 1891, 1901], "view_as_r": [27, 1801, 1858, 1900, 1918], "6125": 27, "1681": 27, "3773": 27, "3487": 27, "0861": 27, "7981": 27, "1681j": 27, "3487j": 27, "7981j": 27, "mul_": [27, 1858, 1873, 1875, 1914], "2250": [27, 1243, 1646], "7546": [27, 940], "1722": 27, "x1": [27, 935, 1234, 1354, 1411, 1467, 1468, 1500, 1557, 1858], "3j": [27, 38, 692, 952, 953, 1728, 1729, 1745], "4j": [27, 38, 1756], "0000": [27, 44, 508, 859, 895, 897, 918, 938, 942, 955, 1041, 1047, 1048, 1049, 1074, 1075, 1078, 1080, 1081, 1087, 1088, 1091, 1096, 1108, 1109, 1110, 1140, 1146, 1149, 1153, 1212, 1215, 1216, 1217, 1229, 1230, 1233, 1238, 1239, 1243, 1245, 1257, 1273, 1314, 1362, 1363, 1471, 1472, 1474, 1475, 1509, 1510, 1646, 1698, 1704, 1709, 1710, 1711, 1720, 1724, 1725, 1749, 1756, 1758, 1759, 1761, 1764, 1765, 1766, 1767, 1783, 1828, 1829, 1831, 1850, 1867, 1875, 1883, 1914, 1915, 1920], "6569": [27, 1153], "5708": [27, 1044], "7854": 27, "complex_tensor": 27, "conjug": [27, 327, 454, 686, 902, 940, 952, 953, 1167, 1216, 1217, 1223, 1226, 1229, 1236, 1250, 1255, 1259, 1606, 1692, 1728, 1801, 1805, 1844, 1888, 1901, 1920], "wirting": [27, 902, 1888], "deriv": [27, 38, 60, 148, 732, 733, 734, 735, 736, 737, 775, 794, 818, 887, 901, 902, 903, 1123, 1127, 1140, 1184, 1244, 1276, 1590, 1855, 1859, 1885, 1886, 1888, 1910, 1914, 1915], "steepest": [27, 1880], "descent": [27, 44, 1658, 1674, 1678, 1679, 1880, 1891], "quantiz": [27, 68, 217, 323, 335, 468, 469, 470, 471, 472, 474, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 857, 858, 911, 1045, 1074, 1075, 1706, 1707, 1708, 1709, 1710, 1855, 1900, 1917, 1920, 1921, 1923, 1924], "parallel_info": [28, 1855, 1882], "cppextens": [29, 1855], "setuptool": 29, "bare": 29, "buildextens": [29, 1855], "ext_modul": 29, "extra_compile_arg": [29, 1897], "cmdclass": 29, "build_ext": 29, "cudaextens": [29, 1855], "cuda_extens": 29, "extension_kernel": 29, "cu": 29, "cxx": 29, "o2": 29, "arch": 29, "card": [29, 1897], "ptx": 29, "road": 29, "cc": [29, 38, 1883], "newest": [29, 64], "torch_cuda_arch_list": 29, "build_my_extens": 29, "older": [29, 1883, 1896, 1902], "modestli": [29, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675], "pars": [29, 38, 58, 909, 1860, 1902, 1910], "workaround": [29, 35, 68, 1191, 1854, 1895, 1898, 1905], "sigmoidalphablendforwardcuda": 29, "69460": 29, "facebookresearch": 29, "pytorch3d": 29, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 29, "relocat": 29, "link": [29, 30, 44, 68, 80, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1412, 1413, 1414, 1470, 1520, 1874, 1890, 1891, 1914], "rdc": 29, "dc": 29, "anymor": [29, 38, 60, 219], "dlto": 29, "dlink": 29, "protent": 29, "lib": [29, 1897], "nvshmem": 29, "ninja": [29, 1897], "dlink_librari": 29, "dlink_lib": 29, "std": [29, 46, 53, 86, 374, 450, 1074, 1075, 1106, 1107, 1108, 1647, 1698, 1724, 1763, 1768, 1800, 1838, 1856, 1858, 1873, 1878, 1883, 1890, 1897, 1900], "use_ninja": 29, "distutil": 29, "max_job": 29, "extra_cflag": 29, "extra_cuda_cflag": 29, "extra_ldflag": 29, "extra_include_path": 29, "build_directori": 29, "with_cuda": [29, 1897], "is_python_modul": 29, "is_standalon": 29, "keep_intermedi": 29, "torch_extens": 29, "torch_extensions_dir": 29, "o3": 29, "cuh": 29, "Such": [29, 35, 36, 67, 1841, 1914], "lib64": 29, "cudart": [29, 1897], "cuda_hom": 29, "safest": 29, "pybind11": [29, 30, 1859], "union": [29, 35, 40, 43, 46, 49, 53, 56, 60, 68, 1198, 1258, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1367, 1368, 1387, 1388, 1412, 1413, 1414, 1419, 1462, 1464, 1466, 1469, 1611, 1653, 1655, 1736, 1858, 1859, 1860, 1898, 1902, 1916, 1921, 1924], "linker": 29, "workspac": 29, "header": [29, 53, 1897, 1921], "standalon": [29, 54, 55, 56, 811, 1198, 1202, 1857], "torch_lib_path": 29, "load_inlin": [29, 1855], "cpp_sourc": 29, "cuda_sourc": 29, "with_pytorch_error_handl": 29, "behav": [29, 30, 38, 67, 68, 310, 318, 488, 510, 512, 835, 1127, 1202, 1415, 1416, 1417, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1859, 1860, 1867, 1880, 1886, 1891, 1895, 1902, 1910, 1914], "inlin": [29, 67, 1003, 1187, 1191, 1202, 1882], "concaten": [29, 35, 38, 43, 897, 934, 945, 975, 1059, 1152, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1363, 1389, 1502, 1510, 1603, 1611, 1798, 1849, 1858, 1861, 1898, 1900, 1914], "furthermor": [29, 53, 64, 1222, 1223, 1250, 1276, 1357, 1873, 1874, 1880, 1895, 1908, 1910], "cuda_runtim": 29, "se": 29, "macro": [29, 1889], "pybind": 29, "_safe_foo": 29, "redirect": [29, 46, 53, 1922], "obscur": 29, "sin_add": 29, "inline_extens": 29, "include_path": [29, 1855], "get_compiler_abi_compatibility_and_vers": [29, 1855], "abi": [29, 30], "shell": 29, "torchvers": 29, "verify_ninja_avail": [29, 1855], "is_ninja_avail": [29, 1855], "embed": [30, 68, 729, 740, 889, 1051, 1327, 1353, 1363, 1379, 1391, 1425, 1468, 1510, 1568, 1675, 1743, 1858, 1882, 1900, 1905, 1907, 1910, 1914, 1919], "preprocess": [30, 491, 1187], "augment": [30, 1861, 1921], "interfac": [30, 36, 40, 45, 47, 52, 55, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 739, 740, 750, 755, 756, 757, 758, 759, 788, 1113, 1590, 1747, 1801, 1840, 1856, 1860, 1870, 1871, 1885, 1890, 1901, 1908, 1914, 1919], "opencv": [30, 1518, 1529], "struct": [30, 1127, 1128, 1847, 1868, 1890], "classat_1_1_tensor": 30, "tensor_index": 30, "cpp_autograd": 30, "undesir": [30, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1568, 1885], "cpp_frontend": 30, "library_root": 30, "libtorch": 30, "linux": [30, 38, 1854], "gcc": 30, "cxx11": 30, "race": [32, 1880], "enable_cuda_sanit": 32, "torch_cuda_sanit": 32, "concurr": [32, 38, 42, 1882, 1883, 1910, 1911], "uniniti": [32, 441, 494, 1061, 1062, 1590, 1601, 1602, 1639, 1875, 1900], "overwrit": [32, 35, 38, 68, 1420, 1429, 1860, 1880], "commandlin": 32, "example_error": 32, "csan": 32, "139719969079296": 32, "94646435460352": 32, "_sanit": 32, "364": 32, "_handle_kernel_launch": 32, "stack_trac": [32, 68], "stacksummari": 32, "420": 32, "_handle_memory_alloc": 32, "incorrectli": [32, 60, 964, 1105], "faulti": [32, 38], "current_stream": [32, 963, 1855, 1883], "wait_stream": [32, 38, 964, 966, 1883], "default_stream": [32, 38, 1855], "cudnn": [33, 34, 754, 1196, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1371, 1389, 1434, 1435, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1568, 1748, 1855, 1858, 1883, 1894, 1895], "float16": [33, 36, 40, 60, 294, 680, 683, 754, 817, 820, 828, 844, 845, 852, 915, 927, 1112, 1169, 1187, 1281, 1291, 1347, 1348, 1349, 1350, 1351, 1352, 1371, 1372, 1389, 1390, 1406, 1419, 1434, 1568, 1661, 1662, 1733, 1879, 1891, 1905, 1907, 1916, 1917, 1920, 1921, 1926], "v100": [33, 754, 1371, 1389, 1434, 1883], "packedsequ": [33, 754, 1371, 1389, 1434, 1633, 1634, 1635, 1637], "rnn": [34, 728, 754, 755, 756, 757, 759, 852, 1371, 1372, 1389, 1390, 1436, 1600, 1609, 1632, 1862, 1887, 1891, 1907, 1919], "enforc": [34, 36, 67, 789, 884, 1187, 1389, 1419, 1434, 1860, 1891, 1918], "cuda_launch_block": [34, 1389, 1434, 1883], "colon": [34, 1389, 1434, 1910], "cublas_workspace_config": [34, 1389, 1434, 1840, 1883, 1895], "4096": [34, 1389, 1434, 1840, 1883, 1898], "dataload": [35, 491, 1599, 1679, 1680, 1686, 1883, 1887, 1897, 1901, 1919], "batch_siz": [35, 44, 64, 66, 886, 1118, 1126, 1128, 1425, 1632, 1634, 1635, 1637, 1847, 1858, 1886, 1887, 1895, 1898, 1919], "shuffl": [35, 1855, 1919], "batch_sampl": 35, "num_work": [35, 46, 1895, 1897], "drop_last": 35, "timeout": [35, 38, 55, 1872, 1910], "worker_init_fn": [35, 1887, 1895], "prefetch_factor": 35, "persistent_work": 35, "__getitem__": [35, 1840], "__len__": [35, 68, 1858], "protocol": [35, 40, 45, 55, 57, 874, 1111, 1113, 1654, 1736, 1885, 1897, 1898, 1910, 1925], "idx": [35, 68, 892, 1187, 1327, 1362, 1419, 1607, 1858, 1874], "th": [35, 152, 310, 312, 318, 754, 895, 897, 917, 937, 1047, 1052, 1161, 1184, 1208, 1226, 1234, 1240, 1276, 1309, 1358, 1359, 1360, 1364, 1371, 1379, 1389, 1434, 1504, 1505, 1506, 1511, 1705, 1801, 1885, 1897, 1915, 1917], "iterabledataset": [35, 1890], "__iter__": [35, 1861], "suitabl": [35, 44, 931, 1206, 1675, 1740, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1894, 1904, 1906, 1919], "improb": 35, "fetch": [35, 67, 68, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1655, 1910], "databas": 35, "remot": [35, 38, 42, 46, 1599, 1903, 1910, 1911], "replica": [35, 36, 38, 42, 53, 1356, 1599, 1884], "duplic": [35, 312, 316, 467, 538, 916, 925, 946, 1144, 1145, 1187, 1419, 1837, 1838, 1914], "yield": [35, 36, 60, 68, 1048, 1050, 1187, 1233, 1234, 1419, 1850, 1860, 1861, 1867, 1903, 1905, 1915], "stochast": [35, 44, 1367, 1368, 1513, 1514, 1658, 1660, 1661, 1663, 1674, 1678, 1679, 1891, 1901], "decent": 35, "randomli": [35, 739, 740, 750, 758, 903, 1331, 1357, 1358, 1359, 1360, 1364, 1437, 1503, 1504, 1505, 1506, 1511, 1619, 1875, 1890, 1891], "permut": [35, 1060, 1233, 1234, 1253, 1276, 1278, 1719, 1855, 1856, 1858, 1874, 1900, 1907, 1918, 1920], "mini": [35, 773, 779, 1337, 1338, 1339, 1362, 1363, 1374, 1379, 1382, 1383, 1384, 1391, 1411, 1422, 1424, 1458, 1467, 1509, 1510, 1529, 1587, 1903], "neither": [35, 38, 789, 890, 893, 1043, 1103, 1425, 1466, 1646, 1826, 1885, 1894, 1910], "collat": 35, "minibatch": [35, 762, 763, 766, 767, 768, 1276, 1327, 1335, 1336, 1353, 1355, 1379, 1385, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1471, 1485, 1486, 1487, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1501, 1530, 1542, 1543, 1544, 1553, 1561, 1903], "loader": [35, 1901], "essenti": [35, 38, 43, 46, 68, 1276, 1874, 1883, 1897, 1914], "dataset_it": 35, "cheaper": [35, 67], "arrai": [35, 46, 444, 754, 814, 815, 873, 874, 918, 936, 955, 959, 1060, 1104, 1112, 1113, 1121, 1122, 1258, 1288, 1366, 1371, 1372, 1389, 1390, 1512, 1726, 1733, 1753, 1787, 1788, 1789, 1791, 1792, 1819, 1826, 1834, 1841, 1857, 1861, 1883, 1891, 1914, 1916, 1920, 1921], "untouch": 35, "slightli": [35, 38, 44, 60, 1646, 1694, 1806, 1854, 1883, 1888, 1894, 1902], "default_col": 35, "channel": [35, 63, 468, 469, 470, 773, 779, 802, 816, 819, 827, 839, 847, 1074, 1337, 1338, 1339, 1343, 1347, 1348, 1349, 1350, 1351, 1352, 1357, 1358, 1359, 1360, 1364, 1366, 1374, 1382, 1383, 1384, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1407, 1427, 1453, 1458, 1470, 1471, 1472, 1473, 1488, 1504, 1505, 1506, 1511, 1528, 1529, 1536, 1562, 1587, 1617, 1618, 1619, 1626, 1627, 1643, 1706, 1874, 1876, 1878, 1880, 1905, 1906, 1908, 1919], "class_index": 35, "namedtupl": [35, 68, 890, 1039, 1040, 1132, 1187, 1198, 1208, 1228, 1278, 1284, 1287, 1289, 1292, 1315, 1327, 1419, 1694, 1704, 1778, 1805, 1823, 1828, 1857, 1859, 1860, 1905], "gil": [35, 38, 42, 1880, 1883, 1910], "descriptor": [35, 1467, 1468, 1861, 1898], "parent": [35, 48, 53, 57, 60, 674, 782, 783, 811, 1419, 1872, 1897, 1902, 1912, 1919], "refcount": [35, 1872, 1893], "panda": 35, "pyarrow": 35, "13246": 35, "get_worker_info": [35, 1910], "seed": [35, 86, 998, 1007, 1008, 1028, 1163, 1279, 1299, 1694, 1711, 1806, 1855, 1858, 1887, 1895, 1909], "shut": [35, 1910], "garbag": [35, 1912], "subtleti": [35, 1356, 1885, 1887], "multiprocess": [35, 38, 39, 41, 46, 48, 56, 57, 1356, 1599, 1855, 1874, 1884, 1911], "unix": [35, 53, 962, 1872], "fork": [35, 53, 1205, 1599, 1860, 1882, 1883, 1887, 1890, 1893, 1897, 1909, 1910, 1912], "child": [35, 46, 48, 60, 785, 1187, 1419, 1618, 1872, 1891, 1897, 1912], "address": [35, 38, 55, 58, 65, 214, 902, 903, 969, 1867, 1872, 1883, 1910, 1911], "maco": [35, 38, 1872, 1892], "spawn": [35, 36, 39, 46, 47, 53, 57, 1190, 1599, 1855, 1879, 1884, 1893, 1897, 1911], "__main__": [35, 36, 38, 47, 48, 56, 1881, 1884, 1893, 1897, 1911], "base_se": 35, "worker_id": [35, 57, 1895], "therebi": [35, 44, 1901, 1905], "mandatorili": 35, "faq": [35, 1356, 1635, 1855], "initial_se": [35, 86, 1855, 1895, 1909], "simplecustombatch": 35, "transposed_data": 35, "zip": [35, 40, 1854, 1858, 1859, 1869, 1883, 1890, 1914], "tgt": [35, 1462, 1463, 1464], "collate_wrapp": 35, "tensordataset": 35, "batch_ndx": 35, "is_pin": [35, 1632, 1858, 1873, 1900, 1916], "multiprocessing_context": 35, "pin_memory_devic": 35, "reshuffl": 35, "draw": [35, 152, 917, 1023, 1309, 1711, 1919], "mutual": [35, 38, 46, 729, 1921], "subprocess": [35, 38, 53, 55, 57, 1887, 1893], "incomplet": [35, 895, 1862, 1915], "divis": [35, 577, 611, 681, 766, 767, 768, 941, 1055, 1105, 1108, 1197, 1230, 1347, 1348, 1349, 1350, 1351, 1352, 1354, 1374, 1386, 1410, 1428, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1554, 1724, 1793, 1820, 1860, 1879, 1883], "basecontext": 35, "randomsampl": 35, "prefetch": [35, 60], "unpickl": [35, 38, 1258, 1902], "proper": [35, 46, 67, 68, 1051, 1743, 1859, 1880, 1883, 1885, 1897], "guess": 35, "trust": [35, 38, 1258, 1854, 1902], "inaccur": [35, 36], "kwd": 35, "__getitems__": 35, "myiterabledataset": 35, "worker_info": 35, "iter_start": 35, "iter_end": 35, "per_work": 35, "ceil": [35, 175, 627, 628, 762, 763, 1332, 1333, 1334, 1387, 1388, 1412, 1413, 1414, 1485, 1486, 1487, 1542, 1543, 1544, 1709, 1710, 1733, 1856, 1858, 1873, 1883, 1900, 1914], "mult": 35, "overall_start": 35, "overall_end": 35, "concatdataset": 35, "assembl": 35, "chaindataset": 35, "fly": [35, 1003, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1880], "_util": 35, "collate_fn_map": 35, "default_collate_fn_map": 35, "collate_tensor_fn": 35, "custom_col": 35, "collate_map": 35, "outer": [35, 685, 895, 1060, 1118, 1122, 1127, 1133, 1858, 1860, 1900], "unchang": [35, 494, 508, 510, 729, 808, 1099, 1187, 1419, 1462, 1725, 1796, 1879, 1894, 1905], "byte": [35, 38, 44, 55, 239, 431, 552, 874, 968, 1009, 1011, 1013, 1015, 1113, 1186, 1258, 1295, 1296, 1655, 1664, 1736, 1859, 1860, 1861, 1873, 1902, 1914, 1916], "v_i": [35, 1226], "v_1": 35, "v_2": 35, "v1_i": 35, "v2_i": 35, "v1_1": 35, "v1_2": 35, "v2_1": 35, "v2_2": 35, "elem": [35, 1858], "customtyp": 35, "collate_customtype_fn": 35, "custotyp": 35, "default_convert": 35, "np": [35, 935, 1055, 1060, 1100, 1101, 1102, 1558, 1698, 1886, 1895, 1898, 1919, 1920, 1921], "workerinfo": [35, 1910], "random_split": 35, "floor": [35, 268, 641, 642, 762, 763, 1055, 1105, 1197, 1332, 1333, 1334, 1387, 1388, 1412, 1413, 1414, 1485, 1486, 1487, 1542, 1543, 1544, 1709, 1710, 1724, 1733, 1801, 1856, 1858, 1860, 1873, 1896, 1900, 1914], "frac": [35, 44, 276, 374, 643, 644, 681, 754, 766, 767, 768, 859, 916, 925, 955, 959, 1055, 1105, 1140, 1144, 1145, 1206, 1218, 1222, 1223, 1226, 1238, 1250, 1257, 1273, 1327, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1343, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1357, 1366, 1371, 1372, 1373, 1374, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1404, 1406, 1407, 1408, 1409, 1412, 1413, 1414, 1422, 1423, 1424, 1426, 1434, 1436, 1437, 1449, 1451, 1452, 1454, 1455, 1457, 1458, 1459, 1470, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1538, 1554, 1556, 1558, 1568, 1570, 1574, 1576, 1578, 1579, 1659, 1660, 1663, 1665, 1671, 1678, 1679, 1708, 1720, 1723, 1735, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1784, 1799, 1800, 1801, 1805, 1826, 1842, 1843, 1858, 1873, 1878, 1880, 1888, 1900, 1915], "robin": [35, 38], "generator1": 35, "manual_se": [35, 65, 86, 1855, 1858, 1873, 1891, 1895, 1898, 1900, 1909], "generator2": 35, "data_sourc": 35, "accedingsequencelengthsampl": 35, "argsort": [35, 1816, 1858, 1886, 1900], "tolist": [35, 349, 1860, 1900, 1916], "accedingsequencelengthbatchsampl": 35, "sequentialsampl": 35, "num_sampl": [35, 417, 1309, 1858], "drawn": [35, 171, 255, 283, 1309, 1647, 1711, 1715, 1716, 1878, 1921, 1922], "subsetrandomsampl": 35, "weightedrandomsampl": 35, "row": [35, 36, 43, 44, 206, 310, 312, 318, 579, 582, 687, 693, 871, 895, 897, 935, 955, 959, 1043, 1073, 1101, 1102, 1122, 1128, 1149, 1208, 1234, 1242, 1245, 1250, 1274, 1276, 1284, 1286, 1287, 1289, 1292, 1309, 1315, 1316, 1317, 1509, 1510, 1558, 1606, 1645, 1702, 1705, 1725, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1804, 1823, 1826, 1830, 1832, 1841, 1847, 1849, 1858, 1888, 1914, 1919], "05": [35, 42, 68, 111, 341, 688, 706, 707, 708, 709, 710, 711, 717, 718, 730, 731, 743, 745, 746, 747, 748, 902, 903, 939, 1074, 1176, 1202, 1203, 1273, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1458, 1462, 1464, 1466, 1488, 1519, 1528, 1532, 1599, 1677, 1683, 1684, 1690, 1762, 1763, 1768, 1857, 1858, 1901, 1911, 1921], "batchsampl": 35, "distributedsampl": [35, 1599], "num_replica": 35, "world_siz": [35, 36, 38, 39, 42, 46, 55, 56, 58, 60, 1599, 1884, 1903, 1910, 1911], "evenli": [35, 577, 578, 579, 689, 690, 1058, 1150, 1257, 1273, 1848], "set_epoch": 35, "is_distribut": [35, 1858, 1900], "start_epoch": 35, "n_epoch": 35, "vanilla": [36, 1867], "allreduc": [36, 38, 1599, 1883, 1884, 1900], "register_comm_hook": [36, 42, 60, 1599], "mainli": [36, 44, 821, 1342, 1502, 1923], "gradbucket": [36, 1599], "decompos": [36, 68, 1110, 1117, 1231, 1856, 1880, 1898], "get_per_parameter_tensor": 36, "_distributed_c10d": [36, 38], "1d": [36, 43, 44, 60, 696, 699, 732, 735, 766, 776, 946, 955, 959, 1043, 1057, 1148, 1149, 1164, 1184, 1242, 1243, 1288, 1316, 1324, 1328, 1332, 1342, 1347, 1350, 1355, 1358, 1359, 1363, 1387, 1411, 1412, 1424, 1426, 1471, 1477, 1480, 1483, 1485, 1493, 1496, 1504, 1510, 1539, 1542, 1705, 1706, 1709, 1801, 1826, 1844], "is_last": 36, "set_buff": 36, "stateless": [36, 65, 1876, 1891], "ddp_comm_hook": [36, 42], "default_hook": 36, "allreduce_hook": 36, "process_group": [36, 39, 40, 42, 60, 1458, 1599], "henc": [36, 42, 46, 54, 55, 58, 60, 67, 917, 1113, 1415, 1416, 1417, 1471, 1790, 1875, 1880, 1883, 1884, 1910, 1912], "unaffect": [36, 494, 495, 1373], "ddp_model": [36, 38, 1599, 1884], "fp16_compress_hook": 36, "decompress": [36, 1854, 1869], "bf16_compress_hook": 36, "nccl": [36, 39, 40, 56, 60, 1599, 1889], "brain": [36, 1917, 1920], "wrapper": [36, 38, 43, 44, 60, 67, 68, 618, 751, 784, 818, 961, 963, 964, 966, 1033, 1035, 1106, 1107, 1126, 1187, 1356, 1857, 1859, 1860, 1870, 1872, 1883, 1884, 1898, 1903], "fp16_compress_wrapp": 36, "powersgdst": 36, "matrix_approximation_rank": 36, "start_powersgd_it": 36, "powersgd_hook": 36, "bf16_compress_wrapp": 36, "wikipedia": [36, 1555, 1880, 1888, 1926], "wiki": [36, 1926], "bfloat16_float": 36, "point_format": 36, "vogel": 36, "et": [36, 44, 60, 1342, 1431, 1432, 1467, 1468, 1674, 1769, 1806, 1878], "al": [36, 44, 60, 1342, 1431, 1432, 1467, 1468, 1674, 1769, 1806, 1878], "neurip": [36, 44], "2019": [36, 44, 1017], "hyperparamet": [36, 60, 68, 1919], "1000": [36, 1075, 1080, 1106, 1107, 1327, 1362, 1468, 1706, 1733, 1753, 1819, 1880, 1896, 1898, 1919], "min_compression_r": 36, "use_error_feedback": 36, "warm_start": 36, "orthogonalization_epsilon": 36, "random_se": 36, "compression_stats_logging_frequ": 36, "batch_tensors_with_same_shap": 36, "stronger": 36, "threshold": [36, 68, 1241, 1244, 1380, 1450, 1455, 1576, 1582, 1688, 1753, 1858, 1879, 1883, 1900, 1919], "exponenti": [36, 255, 1070, 1238, 1264, 1265, 1266, 1274, 1341, 1361, 1507, 1855, 1860, 1900, 1901, 1915, 1922], "grid": [36, 1080, 1288, 1483, 1518, 1856, 1858, 1883, 1919], "satisfactori": 36, "appendix": [36, 1855], "defer": [36, 60, 1883, 1903], "hybrid": [36, 60, 216, 537, 577, 578, 579, 581, 582, 1151], "scheme": [36, 55, 474, 796, 813, 814, 815, 816, 819, 821, 1891], "trajectori": 36, "irrecover": 36, "num_row": 36, "num_col": 36, "1e": [36, 68, 111, 341, 688, 706, 707, 708, 709, 710, 711, 717, 718, 730, 731, 743, 745, 746, 747, 748, 749, 902, 903, 938, 939, 1176, 1202, 1203, 1253, 1337, 1338, 1339, 1354, 1373, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1405, 1428, 1433, 1458, 1462, 1464, 1466, 1467, 1488, 1500, 1515, 1519, 1520, 1528, 1532, 1554, 1557, 1561, 1584, 1607, 1640, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1675, 1688, 1696, 1749, 1857, 1858, 1885, 1891, 1898, 1901, 1915, 1921], "orthogon": [36, 1223, 1226, 1245, 1250, 1259, 1692, 1704, 1878, 1880, 1891, 1914], "epsilon": [36, 68, 813, 814, 815, 816, 819, 859, 1241, 1244, 1337, 1338, 1339, 1354, 1374, 1382, 1383, 1384, 1391, 1428, 1458, 1500, 1554, 1607, 1640, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1708, 1858, 1915], "bucket_cap_mb": [36, 1599, 1884], "memor": 36, "compens": 36, "apex": 36, "uncompress": [36, 1914], "p": [36, 40, 44, 60, 68, 152, 231, 283, 421, 422, 449, 486, 487, 602, 680, 683, 915, 917, 927, 935, 1054, 1207, 1218, 1224, 1225, 1233, 1234, 1276, 1278, 1281, 1291, 1312, 1331, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1385, 1387, 1388, 1424, 1428, 1430, 1467, 1468, 1484, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1539, 1540, 1550, 1554, 1557, 1558, 1584, 1603, 1609, 1611, 1617, 1626, 1646, 1674, 1725, 1782, 1856, 1858, 1859, 1879, 1880, 1883, 1887, 1888, 1893, 1904, 1914, 1915], "pq": 36, "mq": [36, 1905, 1924], "tp": [36, 43], "comm": [36, 38, 1884], "handler": [36, 38, 48, 49, 1618, 1870, 1890, 1902, 1925], "batched_powersgd_hook": 36, "destroi": [36, 55, 1356, 1880, 1910], "squar": [36, 44, 545, 733, 734, 735, 736, 773, 779, 788, 959, 1047, 1049, 1184, 1218, 1220, 1222, 1223, 1224, 1227, 1228, 1232, 1234, 1236, 1238, 1240, 1244, 1246, 1247, 1249, 1250, 1254, 1267, 1276, 1325, 1329, 1333, 1334, 1348, 1349, 1351, 1352, 1367, 1368, 1380, 1388, 1410, 1413, 1414, 1417, 1450, 1462, 1485, 1494, 1497, 1513, 1514, 1518, 1527, 1529, 1549, 1572, 1587, 1606, 1659, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1735, 1794, 1828, 1841, 1858, 1900, 1914], "truncat": [36, 1105, 1834, 1875, 1878, 1887, 1894], "debugging_hook": 36, "noop_hook": 36, "noop": [36, 1599], "headroom": 36, "desynchron": [36, 38], "trainer": [36, 46, 48, 53, 56, 57, 1599, 1910], "__setstate__": 36, "__getstate__": 36, "reload": [36, 42, 1854], "sy": [36, 47, 56, 58, 1854, 1883, 1902], "tempfil": 36, "simplemodel": 36, "fc2": [36, 1590, 1903], "master_addr": [36, 38, 46, 56, 58, 1884, 1903, 1910, 1911], "localhost": [36, 38, 55, 56, 1884, 1903, 1910, 1911], "master_port": [36, 38, 46, 56, 58, 1884, 1903, 1910, 1911], "12355": 36, "init_process_group": [36, 38, 39, 42, 46, 56, 58, 1599, 1883, 1884, 1910], "cleanup": 36, "destroy_process_group": 36, "run_demo": 36, "demo_fn": 36, "mp": [36, 38, 39, 57, 1599, 1855, 1884, 1893, 1905, 1911, 1916, 1917, 1924], "nproc": [36, 38, 53, 54, 56, 1872, 1884, 1911], "demo_seri": 36, "gettempdir": 36, "device_id": [36, 38, 39, 42, 56, 60, 1258, 1356, 1458, 1583, 1599, 1884], "powersgd_st": 36, "lr": [36, 39, 42, 60, 1590, 1599, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1883, 1884, 1891, 1901, 1911, 1919], "001": [36, 902, 903, 1196, 1657, 1661, 1662, 1671, 1675, 1687, 1884, 1898], "comm_hook": 36, "comm_hook_st": 36, "hook_stat": 36, "barrier": [36, 46, 55, 1900], "map_loc": [36, 1191, 1194, 1258, 1599, 1854, 1869, 1902], "n_gpu": 36, "device_count": [36, 38, 1855], "got": [36, 38, 885, 1885, 1921], "thank": [36, 44, 1885, 1903], "thij": 36, "par": 36, "home": [37, 1883], "brief": [38, 1599, 1872, 1910], "introduct": [38, 44, 995, 1599, 1855, 1857, 1861, 1873, 1881, 1891, 1898, 1910, 1914, 1919], "mpi": [38, 1599], "gloo": [38, 56, 1599, 1884, 1889, 1910], "recv": [38, 1599, 1900, 1911], "all_reduc": [38, 57, 1599], "all_gath": 38, "scatter": [38, 42, 60, 508, 510, 512, 1356, 1840, 1858, 1887, 1900, 1910], "reduce_scatt": [38, 1900], "all_to_al": 38, "v1": [38, 60, 1255, 1693, 1854, 1884, 1910], "init_method": [38, 1599, 1910], "adher": [38, 1860], "some_fil": 38, "machine_nam": 38, "share_folder_nam": 38, "tcpstore": [38, 55], "infiniband": [38, 1599, 1910], "interconnect": 38, "gpudirect": 38, "ethernet": 38, "ip": [38, 55], "ib": 38, "nccl_socket_ifnam": 38, "eth0": 38, "gloo_socket_ifnam": 38, "comma": [38, 1060, 1860, 1866], "eth1": 38, "eth2": 38, "eth3": 38, "imper": 38, "nccl_debug": 38, "nccl_debug_subsi": 38, "coll": 38, "hang": [38, 39, 42, 1599, 1884], "topologi": [38, 40, 43, 46], "effort": [38, 1910], "socket": [38, 1872, 1910], "nccl_socket_nthread": 38, "nccl_nsocks_perthread": 38, "cloud": [38, 1914, 1919], "aw": [38, 47, 959], "primit": [38, 42, 55, 1258, 1856, 1857, 1859, 1861, 1882, 1892, 1898, 1910], "connect": [38, 46, 55, 1347, 1348, 1349, 1350, 1351, 1352, 1395, 1396, 1397, 1398, 1399, 1400, 1447, 1872, 1910], "advantag": [38, 55, 56, 1336, 1380, 1884, 1887, 1910, 1914], "redund": [38, 60, 1076, 1077, 1079, 1081, 1095, 1097, 1801], "averag": [38, 42, 729, 760, 761, 762, 763, 815, 816, 911, 913, 959, 1023, 1037, 1187, 1324, 1325, 1326, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1353, 1355, 1363, 1373, 1379, 1385, 1386, 1387, 1388, 1392, 1393, 1394, 1410, 1411, 1419, 1422, 1423, 1424, 1425, 1426, 1433, 1450, 1451, 1458, 1467, 1477, 1478, 1479, 1485, 1486, 1487, 1490, 1491, 1501, 1515, 1530, 1539, 1540, 1553, 1561, 1599, 1658, 1659, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1826, 1855, 1884, 1904], "thrash": 38, "recurr": [38, 754, 755, 1202, 1342, 1356, 1371, 1372, 1389, 1434, 1609, 1635, 1672, 1855, 1883], "use_distribut": 38, "datetim": [38, 1870], "timedelta": [38, 55, 1870], "1800": 38, "group_nam": [38, 52], "pg_option": 38, "url": [38, 55, 910, 1854, 1869, 1910], "discov": [38, 1910], "encod": [38, 46, 52, 55, 68, 1234, 1258, 1300, 1301, 1335, 1336, 1462, 1463, 1464, 1465, 1466, 1599, 1787, 1788, 1789, 1791, 1792, 1857, 1860, 1861, 1885, 1896, 1902, 1911, 1914], "ucc": 38, "lowercas": 38, "deadlock": [38, 1599], "job": [38, 46, 48, 49, 51, 52, 54, 55, 56, 57, 1599, 1680, 1686, 1890, 1904, 1919], "exchang": [38, 55, 964, 1048, 1883, 1898], "nccl_blocking_wait": 38, "nccl_async_error_handl": [38, 1883], "abort": [38, 1883], "crash": [38, 48, 55, 1872, 1880, 1910, 1912, 1919], "caught": [38, 1599, 1872], "watch": 38, "dog": 38, "deprec": [38, 46, 55, 56, 60, 64, 403, 508, 551, 597, 779, 780, 781, 787, 820, 901, 902, 937, 938, 1010, 1014, 1133, 1187, 1241, 1244, 1276, 1277, 1335, 1336, 1353, 1355, 1378, 1379, 1385, 1386, 1410, 1411, 1419, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1472, 1473, 1490, 1491, 1501, 1530, 1553, 1561, 1587, 1588, 1589, 1591, 1599, 1640, 1641, 1646, 1704, 1720, 1801, 1805, 1828, 1855, 1857, 1862, 1872, 1881, 1904, 1908, 1916, 1920, 1921], "processgroupopt": 38, "processgroupnccl": [38, 1884], "is_high_priority_stream": 38, "backend_nam": 38, "custom_backend": 38, "is_initi": [38, 1855], "is_mpi_avail": 38, "is_nccl_avail": 38, "is_gloo_avail": 38, "is_torchelastic_launch": 38, "elast": [38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 1855], "torchelast": [38, 41, 46, 47, 48, 49, 52, 54, 55, 56, 57, 58], "torchelastic_run_id": [38, 56], "rendezv": [38, 41, 46, 52, 54, 58, 1884, 1910], "null": [38, 47, 49, 52], "discoveri": [38, 55, 1883, 1902], "reachabl": 38, "multicast": 38, "23456": 38, "clean": [38, 46, 68, 999, 1854, 1872, 1902], "fcntl": 38, "nf": 38, "brand": 38, "unsuccess": 38, "mnt": 38, "sharedfil": 38, "port": [38, 46, 54, 55, 56, 1889], "backend_str": 38, "uppercas": 38, "classmethod": [38, 55, 726, 732, 733, 734, 739, 740, 750, 758, 786, 787, 788, 809, 810, 811, 818, 848, 963, 1362, 1363, 1458, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1655, 1860, 1861, 1885, 1905, 1910, 1916, 1925], "extended_api": 38, "instanti": [38, 42, 54, 55, 56, 68, 835, 1064, 1162, 1363, 1510, 1608, 1632, 1639, 1644, 1854, 1857, 1859, 1860, 1883, 1885, 1891, 1916], "3rd": [38, 44, 55, 611, 1688, 1881], "processgroup": [38, 40, 42, 60, 1599], "four": [38, 1232, 1348, 1885, 1888, 1910, 1912], "c10d": [38, 46, 54, 56, 58, 1599, 1884, 1900], "distributedbackendopt": 38, "get_backend": [38, 55], "get_rank": [38, 1458], "uniqu": [38, 46, 52, 55, 56, 57, 508, 512, 1178, 1222, 1223, 1227, 1233, 1234, 1236, 1245, 1247, 1249, 1250, 1287, 1294, 1782, 1805, 1838, 1854, 1857, 1869, 1885, 1902, 1904, 1910, 1911, 1912, 1914, 1919], "get_world_s": 38, "filestor": [38, 55], "hashstor": 38, "host_nam": 38, "hostnam": [38, 46, 55, 1904], "listen": 38, "is_mast": 38, "300": [38, 46, 1264, 1336, 1636, 1638, 1901], "wait_for_work": 38, "server_stor": 38, "127": [38, 788, 1874, 1905, 1919], "1234": [38, 55, 1164], "client_stor": 38, "first_kei": 38, "first_valu": 38, "hashmap": 38, "file_nam": [38, 1854, 1869, 1902], "store1": 38, "store2": 38, "prefixstor": 38, "quantiti": [38, 61, 66, 1222, 1223, 1250, 1385, 1616, 1617, 1619, 1620, 1622, 1625, 1626, 1627, 1628, 1688, 1886, 1888], "compare_set": 38, "arg2": 38, "expected_valu": 38, "desired_valu": 38, "second_valu": 38, "overload": [38, 68, 611, 1859, 1860, 1864], "bad_kei": 38, "num_kei": 38, "destruct": [38, 1870, 1910, 1912], "delete_kei": 38, "set_timeout": 38, "grain": [38, 852, 855, 1568, 1880, 1898], "plai": 38, "new_group": [38, 60, 1458], "use_local_synchron": 38, "enqueu": [38, 67, 964, 966, 967, 1883, 1911], "get_group_rank": 38, "global_rank": [38, 46], "get_global_rank": 38, "group_rank": [38, 46, 56], "get_process_group_rank": 38, "dst": [38, 1854, 1902], "destin": [38, 40, 49, 52, 60, 207, 412, 413, 597, 975, 976, 1129, 1187, 1293, 1294, 1419, 1653, 1654, 1858, 1910, 1911, 1916], "unspecifi": [38, 477, 814, 815, 816, 819, 902, 903, 1452, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1784, 1867, 1914, 1919], "sender": [38, 1912], "isend": 38, "irecv": 38, "is_complet": 38, "finish": [38, 40, 46, 52, 53, 55, 57, 67, 1117, 1883, 1884, 1897, 1904, 1910, 1912], "batch_isend_irecv": 38, "p2p_op_list": 38, "p2pop": 38, "op_list": 38, "send_tensor": 38, "recv_tensor": 38, "send_op": 38, "recv_op": 38, "req": 38, "pg": [38, 1599], "set_devic": [38, 40, 60, 1599, 1744, 1855, 1910, 1917], "p2p": [38, 55], "async_op": 38, "get_futur": [38, 1599], "regard": [38, 1350, 1351, 1352, 1362, 1363, 1509, 1510, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1857, 1912, 1914], "add_": [38, 63, 65, 219, 1117, 1858, 1873, 1881, 1914], "101": [38, 1327], "overwrot": 38, "sent": [38, 40, 999, 1860, 1872, 1893, 1910, 1911, 1912], "broadcast_object_list": 38, "object_list": 38, "picklabl": [38, 1187, 1419, 1902], "current_devic": [38, 40, 972, 980, 981, 988, 989, 1005, 1009, 1011, 1012, 1013, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1036, 1037, 1038, 1855, 1917], "insecur": [38, 1258], "malici": [38, 1258, 1902], "ineffici": [38, 1883, 1905], "redoptyp": 38, "bitwis": [38, 919, 921, 922, 924, 1861, 1894, 1906, 1922], "reduceop": 38, "int64": [38, 189, 206, 310, 318, 390, 859, 918, 931, 1061, 1074, 1075, 1112, 1501, 1632, 1715, 1719, 1720, 1740, 1787, 1788, 1789, 1791, 1792, 1883, 1914, 1916, 1917, 1920, 1926], "1j": [38, 692, 952, 953, 1183, 1728, 1729, 1844, 1880, 1888, 1896], "2j": [38, 692, 952, 953, 1728, 1729, 1756, 1844, 1880], "tensor_list": [38, 1875], "all_gather_into_tensor": 38, "output_tensor": 38, "accommod": [38, 1415, 1416, 1417], "ii": [38, 955, 1060, 1389, 1390], "tensor_in": 38, "tensor_out": 38, "tensor_out2": 38, "all_gather_object": 38, "obj": [38, 68, 874, 984, 1173, 1174, 1193, 1198, 1736, 1858, 1897, 1902], "pickabl": 38, "responsibl": 38, "gather_object": 38, "gather_list": 38, "object_gather_list": 38, "scatter_list": 38, "tensor_s": 38, "t_one": 38, "t_five": 38, "scatter_object_list": 38, "scatter_object_output_list": 38, "scatter_object_input_list": 38, "output_list": 38, "input_list": 38, "reduce_scatter_tensor": 38, "all_to_all_singl": 38, "output_split_s": 38, "input_split_s": 38, "15": [38, 68, 611, 1058, 1130, 1140, 1150, 1209, 1223, 1343, 1416, 1417, 1636, 1638, 1696, 1769, 1778, 1824, 1848, 1857, 1858, 1861, 1898, 1914], "uneven": [38, 39, 42, 1599], "21": [38, 44, 679, 937, 1043, 1245, 1704, 1826, 1857, 1914], "31": [38, 923, 1334, 1414, 1590, 1764, 1898], "33": [38, 732, 733, 734, 735, 736, 737, 766, 1187, 1347, 1348, 1349, 1351, 1352, 1417, 1419, 1493, 1495, 1496, 1498, 1857, 1898], "35": [38, 1245, 1338, 1339, 1383, 1384, 1458, 1704], "input_split": 38, "output_split": 38, "5j": 38, "6j": 38, "7j": 38, "8j": 38, "9j": 38, "10j": 38, "11j": 38, "12j": 38, "13j": 38, "14j": 38, "15j": 38, "16j": 38, "output_tensor_list": 38, "input_tensor_list": 38, "monitored_barri": [38, 1900], "wait_all_rank": 38, "band": 38, "bor": 38, "bxor": 38, "premul_sum": 38, "_make_nccl_premul_sum": 38, "all_reduce_multigpu": 38, "__members__": 38, "reduce_op": 38, "revisit": 38, "broadcast_multigpu": 38, "reduce_multigpu": 38, "all_gather_multigpu": 38, "reduce_scatter_multigpu": 38, "distributed_test": 38, "dev_idx": 38, "src_tensor": 38, "resid": [38, 60, 67, 194, 286, 334, 1258, 1599, 1883, 1903, 1910], "dst_tensor": 38, "cpp_extens": [38, 1855, 1885], "cpp_c10d_extens": 38, "torchrun": [38, 41, 47, 54, 58], "benefici": [38, 1891], "nproc_per_nod": [38, 47], "num_gpus_you_hav": 38, "your_training_script": [38, 54, 56], "arg3": 38, "192": [38, 611, 1898], "168": 38, "nnode": [38, 54, 56], "local_process_rank": 38, "local_rank": [38, 46, 48, 53, 56, 58, 1458], "argpars": [38, 56, 1883], "parser": [38, 56, 1883], "argumentpars": [38, 56, 1883], "add_argu": [38, 56, 1883], "parse_arg": [38, 47, 56, 58, 1883, 1898], "output_devic": [38, 42, 56, 1356, 1458, 1583, 1599], "adjust": [38, 40, 42, 44, 60, 1855, 1882, 1906], "launcher": [38, 56], "filesystem": [38, 40, 962, 1854, 1902], "12042": 38, "imagenet": [38, 1878], "inconsist": [38, 60, 859, 1720, 1885], "group_gloo": 38, "29501": 38, "monitoredbarri": 38, "transport": [38, 1910], "598": 38, "2401": 38, "db00": 38, "eef0": 38, "1100": 38, "3560": 38, "1c05": 38, "25d": 38, "8594": 38, "torch_cpp_log_level": 38, "twolinlayernet": 38, "i0607": 38, "739390": 38, "515217": 38, "logger": [38, 1652, 1923, 1924], "173": 38, "broadcast_buff": [38, 1599], "bucket_cap_byt": 38, "26214400": 38, "find_unused_paramet": [38, 1599, 1884], "gradient_as_bucket_view": [38, 1599], "is_multi_device_modul": 38, "num_parameter_tensor": 38, "total_parameter_size_byt": 38, "440": 38, "bucket_s": 38, "cuda_visible_devic": [38, 1029, 1599, 1883], "module_nam": [38, 68, 811, 848, 1902], "nccl_ib_timeout": 38, "nccl_nthread": 38, "58": 38, "085681": 38, "544067": 38, "344": 38, "unused_parameter_s": 38, "40838608": 38, "5983335": 38, "4326421": 38, "comp": [38, 44], "4207652": 38, "085693": 38, "544066": 38, "42850427": 38, "3885553": 38, "2357981": 38, "2234674": 38, "unus": [38, 42, 68, 901, 999, 1013, 1192, 1198, 1381, 1599, 1657, 1857, 1859, 1860, 1883, 1884, 1889, 1902], "wasn": [38, 1258, 1857], "va": 38, "lue": 38, "indirectli": 38, "outstand": [38, 1910], "stuck": [38, 46, 57], "uninform": 38, "reveal": [38, 1884], "default_pg": 38, "longtensor": [38, 132, 133, 134, 312, 314, 316, 448, 467, 508, 510, 512, 868, 869, 1129, 1161, 1208, 1309, 1362, 1363, 1422, 1509, 1510, 1555, 1645, 1740, 1778, 1790, 1815, 1823, 1850, 1917, 1920], "set_debug_level": 38, "set_debug_level_from_env": 38, "get_debug_level": 38, "torch_show_cpp_stacktrac": 38, "distbackenderror": 38, "facilit": [39, 44, 65, 964, 1048, 1745, 1854, 1857, 1860, 1895], "joinabl": [39, 42, 1599, 1855], "joinhook": [39, 1855], "throw_on_early_termin": [39, 1599], "shadow": [39, 42, 1599, 1923, 1924], "notify_join_context": 39, "zeroredundancyoptim": [39, 42, 1599, 1855], "01": [39, 42, 57, 749, 774, 815, 816, 1061, 1103, 1405, 1533, 1534, 1590, 1656, 1658, 1660, 1662, 1672, 1673, 1680, 1686, 1706, 1760, 1762, 1763, 1768, 1769, 1856, 1858, 1878, 1890, 1898, 1901], "vacuou": 39, "inherit": [39, 1624, 1857, 1859, 1875, 1885, 1891, 1893], "join_hook": [39, 42, 1599], "join_devic": 39, "join_process_group": 39, "repeatedli": [39, 1883, 1914], "main_hook": 39, "post_hook": 39, "is_last_join": 39, "dcp": 40, "reshard": [40, 43, 60], "storage_read": 40, "coordinator_rank": 40, "no_dist": 40, "planner": 40, "spmd": 40, "style": [40, 43, 45, 68, 871, 1055, 1111, 1645, 1857, 1859, 1860, 1898, 1902, 1919], "fullfil": 40, "shardedtensor": [40, 60], "po": [40, 1898], "storageread": [40, 1855], "rank0": [40, 60], "mymodul": [40, 60, 68, 1191, 1192, 1193, 1197, 1198, 1204, 1420, 1421, 1429, 1430, 1857, 1859, 1860, 1887, 1896, 1910], "adagrad": [40, 1362, 1867, 1901, 1910], "model_state_dict": 40, "fs_storage_load": 40, "filesystemload": 40, "save_state_dict": [40, 1855], "storage_writ": 40, "storagewrit": [40, 1855], "fs_storage_writ": 40, "filesystemwrit": [40, 1855], "told": [40, 1859], "read_metadata": 40, "set_up_storage_read": 40, "prepare_local_plan": 40, "prepare_global_plan": 40, "read_data": 40, "central": [40, 1140, 1888, 1890], "loadplan": [40, 1855], "storage_data": 40, "loadplann": [40, 1855], "load_byt": 40, "bytesio": [40, 1194, 1197, 1258, 1736, 1898, 1905], "resolve_tensor": 40, "storagelay": 40, "is_coordin": 40, "set_up_storage_writ": 40, "write_data": 40, "recover": 40, "writeresult": 40, "saveplan": [40, 1855], "saveplann": [40, 1855], "resolve_data": 40, "writeitem": [40, 1855], "tensor_data": 40, "set_up_plann": 40, "create_local_plan": 40, "create_global_plan": 40, "commit_tensor": 40, "defaultloadplann": [40, 1855], "requit": 40, "intrincaci": 40, "renameplann": 40, "original_state_dict": 40, "foo_": [40, 1117], "v": [40, 52, 64, 68, 483, 538, 889, 896, 898, 899, 900, 931, 1116, 1126, 1128, 1184, 1200, 1222, 1226, 1250, 1254, 1259, 1425, 1467, 1468, 1509, 1554, 1568, 1638, 1643, 1672, 1674, 1694, 1727, 1786, 1790, 1805, 1806, 1847, 1855, 1857, 1858, 1859, 1860, 1870, 1880, 1888, 1897, 1902, 1914, 1919], "read_item": 40, "dest_index": 40, "fqn": [40, 43, 1924], "metamodelmateri": 40, "defaultsaveplann": [40, 1855], "empty_lik": [40, 1858, 1862, 1873, 1875, 1900, 1914], "global_plan": 40, "finish_plan": 40, "central_plan": 40, "readitem": [40, 1855], "planner_data": 40, "loaditemtyp": 40, "metadataindex": 40, "dest_offset": 40, "storage_index": 40, "storage_offset": [40, 136, 515, 611, 872, 1856, 1858, 1900], "tandem": 40, "fp16planner": 40, "write_item": 40, "writeitemtyp": 40, "byte_io": 40, "itertool": [40, 44, 933, 946], "islic": 40, "ddploadbalancingplann": 40, "all_plan": 40, "saveextradataplann": 40, "merged_data": 40, "new_plan": 40, "idempot": [40, 1910, 1912], "hi": [40, 1389, 1390, 1857, 1859, 1888], "late": [40, 55], "tensorwritedata": 40, "nonetyp": [40, 1858, 1860], "filesystemread": [40, 1855], "single_file_per_rank": 40, "sync_fil": 40, "thread_count": 40, "per_thread_copy_ahead": 40, "10000000": 40, "atom": [40, 55, 68, 1861], "distributedtensor": [40, 43], "flatten_state_dict": 40, "flatten_sharded_tensor": 40, "dedup_replicated_tensor": 40, "lookup_object": 40, "transform_object": 40, "lookup_tensor": 40, "transform_tensor": 40, "fault": [41, 46, 54, 55, 1113], "toler": [41, 46, 54, 55, 68, 688, 902, 903, 1176, 1202, 1203, 1241, 1244, 1259, 1657, 1664, 1857, 1921], "quickstart": 41, "agent": [41, 47, 48, 49, 52, 54, 56, 57, 1910], "expir": 41, "kubernet": 41, "distributedoptim": [42, 1599, 1855, 1910, 1911], "rref": [42, 1599, 1855, 1860, 1903, 1911], "optimizer_class": 42, "params_rref": 42, "get_gradi": [42, 1900, 1910, 1911], "multithread": [42, 914, 1883], "dist_autograd": [42, 1599, 1910, 1911], "rpc": [42, 67, 1599, 1855, 1860, 1903, 1911, 1912], "context_id": [42, 1599, 1910, 1911], "rref1": [42, 1910, 1911], "worker1": [42, 67, 1599, 1910, 1911], "rref2": [42, 1910, 1911], "to_her": [42, 1599, 1900, 1910, 1911, 1912], "dist_optim": [42, 1599, 1911], "postlocalsgdoptim": [42, 1855], "afer": 42, "modelaverag": 42, "localsgd": 42, "model_averag": 42, "post_localsgd_hook": 42, "postlocalsgdst": 42, "subgroup": 42, "start_localsgd_it": 42, "warmup_step": 42, "local_optim": 42, "periodicmodelaverag": 42, "intra": [42, 1882, 1884, 1903], "unnecessari": [42, 1639, 1860, 1880, 1883, 1885, 1896, 1902, 1918], "parameters_as_bucket_view": 42, "overlap_with_ddp": 42, "consumpt": [42, 64, 1644, 1914, 1919], "intact": [42, 1910], "ddp_zero_hook": 42, "disjointli": 42, "trail": [42, 1634, 1636, 1875, 1878, 1881, 1885], "wari": 42, "static_graph": [42, 1599, 1884], "third": [42, 44, 1059, 1060, 1276, 1327, 1334, 1349, 1352, 1414, 1686, 1855, 1857, 1883, 1886, 1891, 1902, 1904], "add_param_group": [42, 1611, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675], "param_group": [42, 60, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1671, 1672, 1673, 1674, 1675, 1682, 1685], "frozen": [42, 1191, 1196, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1861, 1897], "trainabl": [42, 1006, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1673, 1674, 1675, 1885], "consolidate_state_dict": 42, "consolid": [42, 60, 1903], "pertain": 42, "dtensor": 43, "rowwis": 43, "colwis": 43, "pairwis": [43, 44, 1379, 1428, 1467], "parallelize_modul": [43, 1855], "device_mesh": 43, "parallelize_plan": 43, "tp_mesh_dim": 43, "sub_modul": 43, "parallelstyl": 43, "devicemesh": 43, "mesh": [43, 1919], "prepar": [43, 68, 791, 833, 835, 851, 853, 855, 856, 857, 1126, 1196, 1861, 1898, 1923, 1924], "pairwiseparallel": [43, 1855], "finer": 43, "granular": [43, 60, 1200, 1879], "rowwiseparallel": [43, 1855], "_prepare_input": 43, "make_input_shard_1d_last_dim": [43, 1855], "_prepare_output": 43, "make_output_tensor": [43, 1855], "colwiseparallel": [43, 1855], "make_input_replicate_1d": [43, 1855], "make_sharded_output_tensor": 43, "megatron": 43, "lm": 43, "arxiv": [43, 44, 1389, 1437, 1438, 1465, 1643, 1694, 1806, 1880], "1909": [43, 872], "08053": 43, "multihead": [43, 1425, 1464], "mlp": [43, 1590, 1905], "sequenceparallel": [43, 1855], "pdf": [43, 1342, 1437, 1769, 1880], "2205": 43, "05198": 43, "expectedli": 43, "make_input_reshard_repl": [43, 1855], "make_input_shard_1d": [43, 1855], "make_output_replicate_1d": [43, 1855], "make_output_reshard_tensor": [43, 1855], "make_output_shard_1d": [43, 1855], "multiheadattent": [43, 1462, 1464, 1466, 1905], "multihead_attent": 43, "swap": [43, 68, 611, 782, 783, 784, 787, 791, 858, 1276, 1467, 1468, 1584, 1585, 1825, 1858, 1861, 1883, 1905, 1914, 1916, 1923], "multihead_attention_tp": 43, "tensorparallelmultiheadattent": [43, 1855], "embed_dim": [43, 729, 1425], "num_head": [43, 729, 1425, 1858], "add_bias_kv": [43, 729, 1425], "add_zero_attn": [43, 729, 1425, 1858], "kdim": [43, 729, 1425], "vdim": [43, 729, 1425], "batch_first": [43, 728, 729, 754, 1371, 1389, 1425, 1434, 1435, 1462, 1464, 1466, 1633, 1635, 1636, 1638, 1858, 1887], "tp_size": 43, "self_attent": 43, "head": [43, 729, 1327, 1425, 1462, 1464, 1466], "fullyshardeddataparallel": [43, 1855], "enable_2d_with_fsdp": [43, 1855], "parameteriz": 44, "tensorflow": [44, 1672, 1880, 1919], "backpropag": [44, 903, 1673, 1704, 1887], "surrog": 44, "likelihood": [44, 1327, 1373, 1426, 1433, 1515, 1553, 1561], "reinforc": [44, 1448, 1571], "polici": [44, 46, 48, 60, 1680, 1686], "reparameter": [44, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629, 1630, 1631, 1643], "trick": [44, 898, 1336, 1520, 1880, 1888, 1890], "autoencod": 44, "whilst": [44, 1883], "densiti": [44, 298, 1148, 1149, 1769, 1858, 1915], "log_prob": [44, 1327, 1342, 1502, 1858], "theta": [44, 1483, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1858], "pi": [44, 171, 374, 692, 925, 1144, 1145, 1238, 1369, 1433, 1516, 1561, 1678, 1679, 1698, 1760, 1761, 1764, 1765, 1766, 1767, 1801, 1859, 1860, 1902, 1915], "reward": 44, "ascent": 44, "prob": [44, 1858], "policy_network": 44, "next_stat": 44, "rsampl": 44, "parameter": [44, 374, 450, 1193, 1876, 1914], "has_rsampl": 44, "batch_shap": 44, "event_shap": 44, "validate_arg": 44, "arg_constraint": 44, "cdf": 44, "cumul": [44, 1039, 1040, 1041, 1042, 1043, 1266, 1337, 1338, 1339, 1369, 1392, 1393, 1394, 1458, 1516], "mass": 44, "enumerate_support": 44, "discret": [44, 59, 477, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1089, 1090, 1095, 1097, 1520, 1769, 1919, 1922], "cardin": [44, 1288], "univari": 44, "singleton": [44, 251, 1391, 1839, 1881], "cartesian": [44, 933, 1288, 1698], "_instanc": 44, "icdf": 44, "perplex": 44, "sample_shap": 44, "sample_n": 44, "set_default_validate_arg": 44, "mimic": [44, 1686], "stddev": 44, "varianc": [44, 959, 1337, 1338, 1339, 1364, 1373, 1382, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1458, 1511, 1515, 1671, 1672, 1708, 1717, 1718, 1842, 1843, 1878, 1891], "exp_famili": 44, "famili": 44, "p_": [44, 937, 1278, 1674], "langl": 44, "rangl": 44, "denot": [44, 68, 959, 1207, 1226, 1232, 1245, 1255, 1347, 1348, 1385, 1608, 1611, 1674, 1787, 1788, 1789, 1791, 1792, 1844, 1888, 1908, 1911, 1914], "carrier": 44, "analyt": [44, 902, 903, 1509, 1914], "bregman": 44, "courtesi": 44, "frank": 44, "nielsen": 44, "richard": 44, "nock": 44, "logit": [44, 388, 1336, 1355, 1491, 1501, 1520, 1858, 1900, 1915], "70": [44, 1245, 1704, 1875], "lower_bound": 44, "upper_bound": 44, "has_enumerate_support": 44, "param_shap": 44, "concentration1": 44, "concentration0": 44, "concentr": 44, "1046": 44, "1st": [44, 1881], "2nd": [44, 611, 1427, 1453, 1556, 1881], "greaterthan": 44, "total_count": 44, "71": 44, "trial": 44, "integergreaterthan": 44, "ldot": [44, 1218, 1226, 1257, 1273, 1288, 1391, 1412, 1413, 1414, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "unnorm": [44, 1355, 1491, 1501, 1520], "likewis": [44, 1825], "25": [44, 491, 580, 581, 582, 935, 1148, 1254, 1259, 1365, 1422, 1424, 1427, 1590, 1599, 1636, 1638, 1664, 1686, 1705, 1841, 1857, 1915], "independentconstraint": 44, "simplex": 44, "loc": [44, 1258], "lorentz": 44, "3214": 44, "width": [44, 773, 779, 852, 1147, 1148, 1149, 1333, 1334, 1348, 1349, 1351, 1352, 1388, 1413, 1414, 1426, 1453, 1471, 1529, 1587, 1874], "df": 44, "chi": 44, "continuous_bernoulli": 44, "lim": [44, 1184], "499": 44, "501": 44, "2538": [44, 1218], "pervas": 44, "loaiza": 44, "ganem": 44, "cunningham": 44, "jp": 44, "1907": 44, "06845": 44, "8954": 44, "greaterthaneq": 44, "df1": 44, "df2": 44, "fisher": 44, "snedecor": 44, "2453": 44, "degre": [44, 959, 1037, 1044, 1187, 1224, 1225, 1419, 1428, 1467, 1599, 1712, 1732, 1799, 1800, 1842, 1843, 1858, 1888, 1900, 1914], "freedom": [44, 959, 1799, 1800, 1842, 1843, 1888], "0124": 44, "half_cauchi": 44, "half_norm": 44, "base_distribut": 44, "reinterpreted_batch_ndim": 44, "diagon": [44, 65, 222, 257, 589, 590, 591, 592, 926, 955, 959, 1047, 1048, 1049, 1051, 1060, 1073, 1121, 1122, 1132, 1216, 1228, 1230, 1233, 1245, 1249, 1558, 1568, 1785, 1824, 1828, 1829, 1830, 1831, 1832, 1858, 1885, 1900, 1918], "multivari": [44, 1915], "multivariate_norm": 44, "mvn": 44, "scale_tril": 44, "diag": [44, 66, 1120, 1121, 1122, 1222, 1223, 1250, 1694, 1785, 1805, 1806, 1858, 1900], "diagn": 44, "1729": [44, 1891], "lkj_choleski": 44, "lkj": 44, "matric": [44, 257, 680, 683, 915, 927, 928, 937, 938, 939, 940, 1048, 1132, 1207, 1216, 1217, 1218, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1259, 1267, 1276, 1278, 1291, 1370, 1428, 1483, 1517, 1606, 1611, 1692, 1694, 1704, 1753, 1779, 1782, 1783, 1805, 1806, 1828, 1829, 1831, 1858, 1873, 1888, 1894, 1914, 1920], "eta": [44, 1658, 1660, 1673], "proport": [44, 1387, 1388, 1425, 1466], "det": [44, 1224, 1225, 1246, 1267, 1858, 1900], "lkjcorr": 44, "onion": 44, "3x3": [44, 1043, 1826], "3516": 44, "9361": 44, "1899": [44, 1289], "4748": 44, "8593": 44, "vine": 44, "2009": [44, 1694, 1806], "lewandowski": 44, "dorota": 44, "kurowicka": 44, "harri": [44, 1769], "joe": 44, "journal": [44, 1711], "1016": 44, "jmva": 44, "04": [44, 1103, 1264, 1762, 1769], "008": 44, "corrcholeski": 44, "log_norm": [44, 1900], "lowrank_multivariate_norm": 44, "cov_factor": 44, "cov_diag": 44, "covari": [44, 928, 955, 959, 1337, 1338, 1339, 1458, 1694], "covariance_matrix": 44, "2102": 44, "5429": [44, 1828], "woodburi": 44, "lemma": 44, "capacit": 44, "precision_matrix": 44, "mixture_same_famili": 44, "mixture_distribut": 44, "component_distribut": 44, "rightmost": [44, 928, 1148, 1149, 1860], "gaussian": [44, 1369, 1373, 1448, 1515, 1516, 1571, 1768, 1915], "gmm": 44, "bivari": 44, "innermost": [44, 68, 1140, 1149, 1740], "1338": 44, "mathbf": [44, 1207, 1607, 1640, 1643, 1673], "sigma": [44, 171, 374, 754, 1336, 1370, 1371, 1372, 1389, 1390, 1448, 1449, 1517, 1571, 1607, 1640, 1763, 1799, 1800, 1842, 1843, 1858], "triangular": [44, 938, 939, 940, 1216, 1217, 1223, 1225, 1233, 1234, 1241, 1244, 1245, 1247, 1249, 1558, 1680, 1704, 1828, 1829, 1830, 1831, 1832], "positivedefinit": 44, "lowercholeski": 44, "negative_binomi": 44, "halfopeninterv": 44, "mu": [44, 374, 1672, 1674], "one_hot_categor": 44, "onehot": 44, "5623": 44, "nonneg": [44, 1468, 1694, 1806, 1915], "pmf": 44, "mathrm": [44, 917, 1224, 1225, 1226, 1227, 1238, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1391, 1428, 1433, 1458, 1606, 1661, 1662, 1663, 1673, 1708, 1880, 1915], "relaxed_bernoulli": 44, "temperatur": [44, 1520, 1855], "parametr": [44, 1116, 1608, 1615, 1640, 1641, 1876, 1885], "reparametriz": 44, "99": [44, 1198, 1672, 1857], "2951": [44, 1286], "3442": 44, "8918": 44, "9021": 44, "maddison": 44, "2017": [44, 1462, 1464, 1466, 1786, 1897], "reparametr": [44, 1520, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1623], "jang": 44, "relaxed_categor": 44, "1294": [44, 938], "2324": [44, 1187, 1419], "3859": 44, "2523": 44, "student": 44, "transformed_distribut": 44, "composit": [44, 65, 1120, 1234, 1606, 1857, 1860, 1886, 1891, 1898], "basedistribut": 44, "dx": [44, 1043, 1335, 1826, 1858, 1885, 1886, 1915], "dy": 44, "logist": [44, 1448, 1451, 1571, 1915], "sigmoidtransform": 44, "affinetransform": 44, "invert": [44, 68, 940, 1178, 1218, 1227, 1228, 1234, 1240, 1247, 1249, 1252, 1253, 1267, 1415, 1416, 1417, 1828, 1858, 1894, 1910], "3418": 44, "upper": [44, 179, 180, 181, 588, 789, 926, 931, 938, 939, 940, 942, 1074, 1075, 1147, 1148, 1216, 1217, 1223, 1225, 1233, 1234, 1245, 1249, 1437, 1558, 1566, 1567, 1680, 1686, 1704, 1719, 1740, 1828, 1831, 1832, 1858, 1878, 1900, 1915, 1921], "von_mis": 44, "circular": [44, 1347, 1348, 1349, 1395, 1396, 1397, 1556], "von": 44, "mise": 44, "unconstrain": [44, 1611], "angl": [44, 749, 878, 1044, 1267, 1405, 1698, 1712, 1756, 1855, 1858, 1900, 1914], "9777": 44, "radian": [44, 692, 878, 1044, 1712, 1858, 1900], "nichola": 44, "1979": 44, "152": [44, 611], "157": 44, "4784": [44, 1291], "symmetr": [44, 796, 814, 916, 925, 938, 939, 940, 1081, 1082, 1083, 1088, 1090, 1094, 1095, 1097, 1144, 1145, 1206, 1216, 1217, 1222, 1223, 1225, 1229, 1230, 1231, 1238, 1241, 1244, 1250, 1259, 1606, 1611, 1686, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1905, 1908], "x_ij": 44, "wu": [44, 1259], "chu": 44, "2018": [44, 1259, 1702], "sawyer": 44, "2007": 44, "anderson": 44, "w": [44, 66, 148, 754, 883, 885, 887, 893, 901, 916, 925, 959, 1118, 1129, 1144, 1145, 1184, 1226, 1325, 1326, 1333, 1334, 1336, 1338, 1339, 1343, 1348, 1349, 1355, 1359, 1360, 1362, 1363, 1364, 1371, 1383, 1384, 1391, 1402, 1403, 1413, 1414, 1424, 1425, 1426, 1431, 1432, 1453, 1469, 1470, 1472, 1473, 1483, 1491, 1509, 1510, 1518, 1553, 1559, 1560, 1607, 1640, 1643, 1858, 1873, 1874, 1878, 1880, 1885, 1888, 1901, 1902, 1919], "2003": 44, "ed": [44, 65, 1358, 1359, 1880, 1902, 1925], "odel": 44, "feiveson": 44, "1966": 44, "samplecovari": 44, "jasa": 44, "61": 44, "313": 44, "199": 44, "203": [44, 611], "ku": 44, "bloomfield": 44, "2010": [44, 1878], "ox": 44, "max_try_correct": 44, "bartlett": [44, 916], "singular": [44, 1218, 1232, 1233, 1239, 1241, 1243, 1244, 1250, 1251, 1259, 1267, 1276, 1607, 1611, 1694, 1805, 1806, 1894], "kl_diverg": 44, "kullback": [44, 1385, 1530], "leibler": [44, 1385, 1530], "register_kl": 44, "type_p": 44, "type_q": 44, "kl_normal_norm": 44, "ambigu": [44, 68, 1172, 1350, 1351, 1352, 1366, 1415, 1416, 1417, 1471, 1860], "runtimewarn": 44, "basep": 44, "derivedq": 44, "kl_version1": 44, "derivedp": 44, "baseq": 44, "kl_version2": 44, "tie": 44, "abstransform": 44, "event_dim": 44, "affin": [44, 468, 469, 470, 471, 472, 743, 745, 746, 747, 796, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1458, 1483, 1883, 1891], "cattransform": 44, "tseq": 44, "functor": [44, 1003, 1004], "submatrix": 44, "t0": [44, 1140, 1658, 1859], "exptransform": 44, "identity_transform": 44, "composetransform": 44, "corrcholeskytransform": 44, "uncontrain": 44, "euclidean": [44, 935, 1554], "x_i": [44, 65, 942, 1039, 1040, 1041, 1042, 1255, 1262, 1409, 1428, 1452, 1454, 1467, 1538, 1574, 1701, 1784, 1799, 1800, 1826, 1842, 1843, 1844, 1915], "stickbreakingtransform": 44, "r_i": 44, "tanh": [44, 571, 754, 759, 789, 879, 1369, 1371, 1372, 1389, 1390, 1418, 1434, 1436, 1460, 1516, 1548, 1580, 1856, 1858, 1873, 1874, 1878, 1900, 1907, 1914], "unsign": [44, 1908, 1917, 1920, 1921], "z_i": 44, "s_i": 44, "y_i": [44, 942, 1039, 1040, 1041, 1042, 1255, 1262, 1467, 1826, 1844, 1888], "sqrt": [44, 68, 374, 543, 667, 668, 754, 955, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1153, 1206, 1288, 1337, 1338, 1339, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1369, 1371, 1372, 1374, 1382, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1404, 1406, 1434, 1436, 1458, 1516, 1568, 1611, 1659, 1660, 1661, 1662, 1665, 1671, 1672, 1708, 1735, 1768, 1799, 1800, 1856, 1858, 1873, 1878, 1879, 1880, 1900, 1914, 1915, 1921], "cumulativedistributiontransform": 44, "copula": 44, "base_dist": 44, "independenttransform": 44, "base_transform": 44, "log_abs_det_jacobian": 44, "lowercholeskytransform": 44, "positivedefinitetransform": 44, "powertransform": 44, "expon": [44, 265, 266, 277, 464, 465, 1103, 1110, 1210, 1240, 1327, 1407, 1554, 1701, 1711, 1856, 1858, 1917, 1920], "reshapetransform": 44, "in_shap": 44, "out_shap": 44, "softplustransform": 44, "tanhtransform": 44, "softmaxtransform": 44, "biject": 44, "hmc": 44, "stacktransform": 44, "stick": 44, "primarili": [44, 67, 809, 810, 811, 817, 1319, 1870, 1905], "_call": 44, "_invers": 44, "codomain": [44, 1880], "iff": [44, 1425], "weaker": [44, 1883], "pseudoinvers": [44, 1227, 1244, 1252], "monoton": [44, 1418, 1548, 1740], "forward_shap": 44, "inverse_shap": 44, "corr_choleski": 44, "greater_than": 44, "greater_than_eq": 44, "integer_interv": 44, "less_than": 44, "lower_choleski": 44, "lower_triangular": 44, "nonnegative_integ": 44, "one_hot": [44, 1858, 1900], "positive_integ": 44, "positive_semidefinit": 44, "positive_definit": 44, "real_vector": 44, "unit_interv": 44, "is_discret": 44, "_cat": 44, "dependent_properti": 44, "_dependentproperti": 44, "_greaterthan": 44, "_greaterthaneq": 44, "_independentconstraint": 44, "_integerinterv": 44, "_interv": 44, "half_open_interv": 44, "_halfopeninterv": 44, "_lessthan": 44, "_multinomi": 44, "_stack": [44, 1900], "constraintregistri": 44, "biject_to": 44, "transform_to": 44, "overparameter": 44, "rotat": [44, 1732, 1805], "hamiltonian": 44, "mont": 44, "carlo": 44, "potential_energi": 44, "cheap": [44, 1327], "svi": 44, "fewer": [44, 65, 687, 689, 690, 693, 941, 1207, 1208, 1274, 1284, 1286, 1287, 1289, 1292, 1314, 1317, 1373, 1500, 1702, 1786, 1799, 1800, 1804, 1822, 1842, 1843, 1866, 1881, 1896, 1921], "my_constraint": 44, "my_transform": 44, "myconstraintclass": 44, "my_factori": 44, "mytransform": 44, "param1": [44, 1891], "param2": [44, 1891], "constraint_registri": 44, "my_registri": 44, "construct_transform": 44, "myconstraint": 44, "from_dlpack": [45, 874, 1855], "ext_tensor": [45, 1111], "extern": [45, 964, 1111, 1202, 1870, 1882, 1883, 1894, 1898], "immut": [45, 1111, 1860], "__dlpack__": [45, 1111], "capsul": [45, 874, 1111], "ndarrai": [45, 454, 873, 1111, 1112, 1787, 1788, 1789, 1790, 1791, 1792, 1819, 1898, 1919, 1921], "pycapsul": [45, 1111], "to_dlpack": [45, 1111, 1855], "dltensor": [45, 1111], "t3": [45, 1111, 1911], "legaci": [45, 56, 1520, 1904, 1917], "idiomat": 45, "plane": [46, 55, 732, 733, 734, 735, 736, 737, 760, 761, 762, 763, 766, 767, 768, 776, 777, 1048, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1347, 1348, 1349, 1350, 1351, 1352, 1367, 1368, 1387, 1388, 1391, 1407, 1412, 1413, 1414, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1513, 1514, 1536, 1539, 1540, 1542, 1543, 1544, 1643, 1709, 1710, 1732], "monitor": [46, 56, 57, 963, 1688, 1855, 1883, 1889], "unhealthi": 46, "tear": 46, "decentr": 46, "elasticag": 46, "deploy": [46, 55, 1855], "quad": [46, 1335, 1336, 1355, 1386, 1410, 1426, 1468], "group_result": 46, "is_fail": [46, 47], "exit_cod": 46, "get_worker_group": 46, "workergroup": [46, 56], "mutabl": [46, 1202, 1857, 1902, 1919], "implementor": 46, "defens": 46, "retri": [46, 48, 57, 60, 1017, 1910, 1912], "max_restart": [46, 47, 56], "runresult": 46, "workerspec": [46, 47, 56, 57], "local_world_s": [46, 47, 56], "rdzv_handler": [46, 47, 55], "monitor_interv": [46, 47], "local_addr": [46, 55], "tee": [46, 53], "blueprint": 46, "spec": [46, 47, 57, 82, 787, 788, 813, 814, 815, 818, 819, 820, 1907], "homogen": [46, 56], "rendezvoushandl": [46, 47, 55, 56], "rdzv": [46, 54, 56], "consol": [46, 49, 52, 53, 56, 1919], "get_entrypoint_nam": 46, "__qualname__": 46, "workerst": 46, "unknown": [46, 1601, 1602, 1912], "unrecover": 46, "interrupt": [46, 1872], "termin": [46, 55, 57, 68, 1664, 1872, 1910], "uncaught": [46, 48], "unhandl": 46, "recov": [46, 889, 1081, 1246, 1278, 1599, 1632, 1801, 1879, 1887, 1888, 1906], "is_run": 46, "role_rank": [46, 56], "role_world_s": [46, 56], "pid": [46, 48, 56, 57, 1458, 1887, 1904], "local_elastic_ag": 46, "localelasticag": [46, 47, 57], "start_method": [46, 47, 53, 57, 1872], "exit_barrier_timeout": 46, "log_dir": [46, 53, 1870, 1919], "inter": [46, 48, 1137, 1751, 1882, 1884, 1903, 1910], "safeti": [46, 68, 1857, 1860, 1874], "advis": [46, 538, 611, 859, 1893], "pipe": [46, 57, 1855, 1910], "torchelastic_enable_file_tim": 46, "torchelastic_timer_fil": 46, "shared_queu": 46, "get_context": [46, 57, 1893], "nproc_per_process": 46, "foobar": [46, 48, 52, 53], "other_param": [46, 57], "usr": [46, 53, 55, 1883], "simpleelasticag": 46, "scaffold": 46, "_assign_worker_rank": 46, "group_world_s": 46, "_exit_barri": 46, "_initialize_work": 46, "worker_group": 46, "fresh": [46, 1051, 1743, 1774, 1854], "start_work": 46, "_stop_work": 46, "optimist": 46, "deleg": 46, "_monitor_work": 46, "_rendezv": 46, "_restart_work": 46, "_shutdown": 46, "death_sig": 46, "sigterm": 46, "_start_work": 46, "gracefulli": [46, 56, 65, 1217, 1886], "meaning": [46, 48, 49, 1017, 1883], "meaningless": 46, "intention": [46, 1057, 1844, 1889, 1910], "ship": [47, 1117, 1882, 1910], "programmat": [47, 68, 1891], "my_launch": 47, "argv": [47, 58], "trainer_entrypoint_fn": 47, "fn_arg": 47, "run_result": 47, "tricki": [47, 61, 66, 1880, 1891, 1912], "myrendezvoushandl": 47, "elastic_ag": 47, "metrichandl": [47, 52], "mymetrichandl": 47, "metric_data": [47, 52], "metricdata": 47, "sink": [47, 52, 1870], "eventhandl": 47, "cloudwatch": 47, "nulleventhandl": 47, "myeventhandl": 47, "start_process": [48, 53, 1872], "torchelastic_error_fil": 48, "error_handl": 48, "sugar": [48, 1859], "get_error_handl": 48, "childfailederror": 48, "get_first_failur": 48, "dump_error_fil": 48, "error_fil": [48, 53], "exitcod": [48, 56], "nanni": 48, "diagnost": [48, 69, 74, 75, 76, 77, 78, 79, 80, 81, 1653, 1855, 1857], "torchelastic_ag": 48, "trainer_0": 48, "trainer_1": 48, "json": [48, 53, 57, 1890, 1904], "trainer_n": 48, "errorhandl": 48, "record_except": 48, "processfailur": 48, "test_ev": 49, "eventsourc": 49, "get_logging_handl": 49, "millisecond": [49, 52, 963, 1870], "eventmetadatavalu": 49, "telemetri": 52, "timeseri": 52, "metric_group": 52, "metric_nam": 52, "sensibl": 52, "my_modul": [52, 60, 68, 1857, 1902], "nullmetricshandl": 52, "consolemetricshandl": 52, "my_method": 52, "put_metr": 52, "calculate_lat": 52, "succinctli": 52, "baz": [52, 68, 848, 1902, 1921], "leaf_modul": 52, "classnam": [52, 1860], "threw": 52, "my_app": 52, "consolemetrichandl": 52, "stdout": [52, 53, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1898], "stdoutmetrichandl": 52, "1574213883": 52, "4182858": 52, "my_metr": 52, "1574213940": 52, "5237644": 52, "nullmetrichandl": 52, "class_nam": [52, 68], "def_nam": 52, "metric_valu": 52, "metric_group_nam": 52, "popen": 53, "stderr": [53, 1854, 1869], "err": 53, "echo": 53, "hello": [53, 65, 1859, 1898, 1902], "pcontext": 53, "multiprocesscontext": 53, "subprocesscontext": 53, "keyset": 53, "bitmask": 53, "mask": [53, 396, 397, 398, 399, 400, 538, 729, 902, 903, 1280, 1331, 1342, 1364, 1425, 1462, 1463, 1464, 1465, 1466, 1511, 1568, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1675, 1855, 1858, 1873, 1874, 1914], "bar0": 53, "bar1": 53, "file1": 53, "file2": 53, "caution": 53, "short": [53, 68, 728, 757, 1060, 1184, 1342, 1389, 1390, 1502, 1655, 1753, 1801, 1859, 1873, 1880, 1881, 1891, 1910, 1916, 1917, 1920], "ing": 53, "cmd": [53, 56], "forkserv": [53, 1599, 1872, 1893], "tee_stdout": 53, "tee_stderr": 53, "processcontext": [53, 1872], "superset": [53, 56], "runprocsresult": 53, "num_nod": [54, 56], "trainers_per_nod": 54, "num_allowed_failur": 54, "job_id": [54, 55, 56], "endpoint": [54, 55, 56], "host_node_addr": [54, 56], "min_siz": [54, 56], "num_allowed_failures_or_membership_chang": 54, "node1": [54, 56], "29400": [54, 56], "sidecar": [54, 55], "agre": [55, 1245, 1912], "resum": [55, 1680, 1686, 1688, 1910, 1912, 1919], "retryabl": 55, "lose": [55, 58, 60, 189, 206, 1874], "train_loop": [55, 856], "arriv": [55, 56, 1910, 1912], "dynamicrendezvoushandl": 55, "rendezvousbackend": 55, "c10drendezvousbackend": 55, "etcdrendezvousbackend": 55, "supersed": 55, "etcdrendezvoushandl": 55, "my_run_id": 55, "from_backend": 55, "run_id": [55, 56], "min_nod": 55, "max_nod": 55, "rendezvousparamet": 55, "admit": [55, 56, 1883], "get_as_bool": 55, "get_as_int": 55, "rendezvoushandlerregistri": 55, "create_handl": 55, "creator": [55, 1880, 1910, 1912], "get_run_id": 55, "is_clos": 55, "set_clos": 55, "next_rendezv": 55, "rendezvousclosederror": 55, "rendezvousconnectionerror": 55, "rendezvousstateerror": 55, "rendezvoustimeouterror": 55, "num_nodes_wait": 55, "shutdown": [55, 1910, 1911], "rendezvouserror": 55, "dynamic_rendezv": 55, "join_timeout": 55, "600": 55, "last_call_timeout": 55, "close_timeout": 55, "rendezvoustimeout": 55, "get_stat": [55, 86], "fenc": 55, "set_stat": [55, 86], "condition": [55, 1750], "last_cal": 55, "heartbeat": 55, "keep_al": 55, "c10d_rendezvous_backend": 55, "create_backend": 55, "store_typ": 55, "tcp": [55, 56, 1910], "read_timeout": 55, "60": [55, 57, 1373, 1690, 1816, 1821, 1870, 1910], "is_host": 55, "cname": 55, "fqdn": [55, 56], "etcd_rendezvous_backend": 55, "ssl_cert": 55, "ssl": 55, "certif": 55, "ssl_cert_kei": 55, "privat": [55, 1883, 1885, 1902], "ca_cert": 55, "rool": 55, "key_prefix": 55, "ttl": 55, "hour": 55, "etcd_rendezv": 55, "rdzv_impl": 55, "etcdrendezv": 55, "etcd_address": 55, "min_work": 55, "max_work": 55, "noqa": 55, "w605": 55, "2379": [55, 1284], "etcd_prefix": 55, "etcdstor": 55, "etcd_stor": 55, "etcd_client": 55, "etcd_store_prefix": 55, "piggyback": 55, "num": [55, 739, 740, 754, 1309, 1371, 1374, 1389, 1425, 1434, 1462], "lookuperror": 55, "override_timeout": 55, "etcdserv": 55, "cumbersom": [55, 1860], "etcd_serv": 55, "data_dir": 55, "v3": [55, 56], "substitut": [55, 68, 1199, 1880, 1917], "torchelastic_etcd_binary_path": 55, "get_client": 55, "etcd_binary_path": 55, "migrat": [56, 61, 1288, 1908], "train_script": 56, "aforment": 56, "suffic": [56, 68], "compliant": [56, 58], "num_train": 56, "wors": [56, 1840], "port_k": 56, "etcd": 56, "v2": [56, 1255, 1693, 1854], "revis": 56, "localworkergroup": 56, "rdzv_id": 56, "rdzv_backend": [56, 58], "rdzv_endpoint": [56, 58], "max_nnod": 56, "torchelastic_restart_count": 56, "torchelastic_max_restart": 56, "python_exec": 56, "gang": 56, "departur": 56, "surviv": 56, "kill": [56, 57, 1872, 1887], "load_checkpoint": [56, 58], "checkpoint_path": [56, 58], "dataset": [56, 58, 792, 1327, 1336, 1385, 1855, 1887, 1890, 1897, 1901, 1905, 1906, 1919], "train_step": 56, "should_checkpoint": 56, "save_checkpoint": [56, 58], "acquir": [57, 68, 1891, 1912, 1914], "deadlin": 57, "message_queu": 57, "localtimerserv": 57, "max_interv": 57, "trainer_func": 57, "localtimercli": 57, "expiri": 57, "timer_cli": 57, "countdown": 57, "timefram": [57, 1910], "elig": [57, 1912], "reap": 57, "timerserv": 57, "mp_queue": 57, "daemon": [57, 1872], "filetimerserv": 57, "file_path": 57, "log_ev": [57, 1870], "filetimercli": 57, "fifo": 57, "watchdog": 57, "filetimerrequest": 57, "sigkil": 57, "named_pip": 57, "mkfifo": 57, "timercli": 57, "timerrequest": 57, "scope_id": 57, "expiration_tim": 57, "acquisit": 57, "request_queu": 57, "entiti": [57, 68], "clear_tim": 57, "get_expired_tim": 57, "register_tim": 57, "timer_request": 57, "use_env": 58, "expositori": 58, "worst": [58, 1885], "total_num_epoch": 58, "sharding_strategi": 60, "cpu_offload": 60, "auto_wrap_polici": 60, "backward_prefetch": 60, "backwardprefetch": [60, 1855], "backward_pr": [60, 1187, 1419], "mixed_precis": [60, 1599], "ignored_modul": 60, "param_init_fn": 60, "sync_module_st": 60, "forward_prefetch": 60, "limit_all_gath": 60, "use_orig_param": 60, "ignored_paramet": 60, "deepspe": 60, "shorten": 60, "sharded_modul": 60, "0001": [60, 68, 1041, 1231, 1407, 1536, 1658, 1688, 1858, 1901], "stale": 60, "dev_id": 60, "no_sync": [60, 1599], "offload": 60, "ping": 60, "77724": 60, "summon_full_param": 60, "shardingstrategi": [60, 1855], "shard_grad_op": 60, "unshard": 60, "full_shard": 60, "with_grad": 60, "reacquir": 60, "hybrid_shard": 60, "cpuoffload": [60, 1855], "_fsdppolici": 60, "modulewrappolici": 60, "nonwrapped_numel": 60, "subtre": 60, "size_based_auto_wrap_polici": 60, "exce": [60, 1264, 1883], "100m": 60, "numel": [60, 431, 440, 945, 959, 1091, 1172, 1858, 1873, 1880, 1900, 1914], "custom_auto_wrap_polici": 60, "min_num_param": 60, "1e8": 60, "my_auto_wrap_polici": 60, "functool": [60, 63, 835, 1885, 1921], "1e5": 60, "mixedprecis": [60, 1855], "is_meta": [60, 1900], "reset_paramet": 60, "torchdistx": 60, "deferred_init": 60, "materialize_modul": 60, "my_init_fn": 60, "fsdp_model": 60, "fullstatedictconfig": 60, "flight": 60, "named_paramet": [60, 62, 64, 1116, 1187, 1191, 1419, 1891, 1896], "flatparamet": 60, "norm_typ": [60, 739, 740, 1362, 1363, 1387, 1388, 1509, 1510, 1539, 1540, 1603, 1858], "infin": [60, 957, 1177, 1179, 1181, 1182, 1313, 1335, 1412, 1413, 1414, 1542, 1543, 1544, 1603, 1663, 1773, 1784, 1914, 1915], "no_shard": 60, "flatten_sharded_optim_state_dict": 60, "sharded_optim_state_dict": 60, "shard_full_optim_state_dict": 60, "unflatten": [60, 1858, 1873, 1874, 1900, 1918], "fsdp_modul": 60, "root_onli": 60, "full_optim_state_dict": 60, "optim_input": 60, "rank0_onli": 60, "convent": [60, 68, 332, 936, 1060, 1078, 1080, 1104, 1126, 1337, 1338, 1339, 1382, 1383, 1384, 1458, 1733, 1736, 1834, 1854, 1869, 1875, 1880, 1888, 1891, 1896], "load_optim_state_dict_pre_hook": 60, "optim_state_dict": 60, "namedoptim": 60, "optim_state_dict_to_load": 60, "named_buff": [60, 1187, 1419, 1891, 1896], "intercept": [60, 68], "state_dict_typ": 60, "oom": [60, 1887], "unflattend": 60, "statedicttyp": 60, "fulloptimstatedictconfig": 60, "set_state_dict_typ": 60, "full_state_dict": 60, "save_a_checkpoint": 60, "load_a_checkpoint": 60, "optim_state_dict_post_hook": 60, "is_named_optim": 60, "load_directli": 60, "original_osd": 60, "keyedoptim": 60, "torchrec": [60, 1855], "gossipgrad": [60, 1599], "latter": [60, 681, 785, 1187, 1389, 1419, 1426, 1886, 1891, 1893, 1895], "rekey_optim_state_dict": 60, "optim_state_key_typ": 60, "loadabl": [60, 1854], "wrapped_model": 60, "wrapped_optim": 60, "full_osd": 60, "nonwrapped_model": 60, "nonwrapped_optim": 60, "rekeyed_osd": 60, "optimstatekeytyp": 60, "param_id": 60, "osd": 60, "param_nam": 60, "sharded_osd": 60, "scatter_full_optim_state_dict": 60, "new_model": 60, "new_optim": 60, "remap": [60, 86, 1191, 1194, 1258, 1279, 1854, 1869, 1909], "state_dict_config": 60, "optim_state_dict_config": 60, "descend": [60, 68, 134, 536, 870, 1187, 1250, 1251, 1419, 1778, 1805, 1858], "transpar": [60, 1884, 1903, 1910, 1912], "sharded_state_dict": 60, "shardedstatedictconfig": 60, "offload_to_cpu": 60, "optimstatedictconfig": 60, "param_state_dict": 60, "statedictconfig": 60, "statedictset": 60, "writeback": 60, "summon": 60, "discard": [60, 1184, 1244, 1609, 1854, 1859, 1870], "redundantli": [60, 1879], "materi": [60, 894, 952, 1601, 1602, 1675, 1728, 1729, 1885], "throughput": [60, 1857, 1882], "contend": 60, "backward_post": 60, "reorder": [60, 1080, 1242], "volum": [60, 1149], "_hybrid_shard_zero2": 60, "freed": [60, 148, 887, 901, 969, 1017, 1872, 1883, 1889, 1910], "param_dtyp": 60, "reduce_dtyp": 60, "buffer_dtyp": 60, "keep_low_precision_grad": 60, "cast_forward_input": 60, "cast_root_forward_input": 60, "permit": [60, 1914], "thereaft": 60, "upcast": 60, "batchnorm": [60, 694, 695, 1125, 1187, 1196, 1419, 1458, 1599, 1868, 1880, 1891, 1901, 1903, 1905, 1907, 1908], "offload_param": 60, "love": 61, "hear": 61, "arbitrarili": [61, 66, 508, 1190, 1483, 1860, 1880, 1886], "stock": [61, 66], "ensembl": [61, 64, 66, 1126], "maml": [61, 66], "vjp": [61, 64, 65, 883, 884, 1122, 1128, 1847, 1885, 1886], "whirlwind": 61, "tour": 61, "running_mean": [63, 1125, 1187, 1337, 1338, 1339, 1382, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1419, 1458, 1488, 1528, 1856, 1858, 1891, 1896], "running_var": [63, 1125, 1187, 1337, 1338, 1339, 1382, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1419, 1458, 1488, 1528, 1856, 1858, 1896], "groupnorm": [63, 1519], "anywher": [63, 1879], "batchnorm2d": [63, 707, 710, 712, 717, 808, 1196, 1356, 1393, 1488, 1868, 1880, 1891, 1905, 1907], "track_running_stat": [63, 745, 746, 747, 1125, 1337, 1338, 1339, 1382, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1458, 1896], "resnet": [63, 1854, 1857, 1859, 1891, 1902, 1919, 1923], "regnet": 63, "norm_lay": 63, "num_group": [63, 743, 1374, 1519, 1858], "fragil": 63, "replace_all_batch_norm_modules_": 63, "upstream": [64, 1897], "reflect": [64, 454, 515, 550, 1112, 1113, 1116, 1184, 1347, 1348, 1349, 1395, 1396, 1397, 1440, 1441, 1442, 1518, 1556, 1641, 1689, 1801, 1857, 1858, 1887, 1918], "kept": [64, 68, 691, 773, 779, 1337, 1338, 1339, 1382, 1383, 1384, 1458, 1529, 1587, 1860, 1872, 1908], "jvp": [64, 65, 884, 888, 889, 890, 894, 1124, 1885], "jacfwd": [64, 65, 897, 1120, 1886], "make_functional_with_buff": 64, "hurri": 64, "emul": [64, 793, 1861, 1885], "fmodel": 64, "compute_loss": [64, 66, 1116, 1118], "predict": [64, 1327, 1336, 1373, 1501, 1901, 1919], "argnum": [64, 1118, 1119, 1120, 1121, 1122], "stack_module_st": 64, "num_model": [64, 1126], "in_featur": [64, 714, 722, 723, 726, 727, 750, 758, 1126, 1187, 1327, 1404, 1406, 1419, 1590, 1606, 1607, 1639, 1640, 1643, 1891], "out_featur": [64, 714, 722, 723, 726, 727, 750, 758, 1126, 1187, 1340, 1404, 1406, 1419, 1590, 1606, 1607, 1639, 1640, 1643, 1891], "base_model": 64, "deepcopi": [64, 1905, 1924], "clearer": [64, 1243, 1675, 1885, 1899], "call_single_model": 64, "stori": [64, 1888], "grad_x": [65, 1886], "has_aux": [65, 1118, 1119, 1121, 1122, 1123, 1127], "mental": [65, 1117], "absenc": 65, "unbind": [65, 1128, 1847, 1855, 1858, 1873, 1900, 1918], "lst": 65, "in_dim": [65, 66, 886, 1118, 1128, 1847, 1886], "batchedtensor": 65, "batched_tensor_input": 65, "new_": [65, 1883, 1920], "new_zero": [65, 1858, 1900], "new_empti": [65, 1858, 1900], "diag_emb": [65, 1050, 1222, 1223, 1250, 1805, 1858, 1900], "vec": [65, 105, 106, 420, 684, 1311, 1642, 1856, 1858, 1914], "copy_": [65, 219, 1117, 1471, 1857, 1858, 1873, 1883, 1916], "arithmet": [65, 920, 923, 937, 1242, 1730, 1861, 1870, 1873, 1874, 1894, 1905, 1917], "extra_arg": 65, "theoret": 65, "custom_dot": 65, "lax": 65, "cond": [65, 1894], "while_loop": 65, "is_nonzero": [65, 1858, 1900, 1914], "rag": 65, "unclear": [65, 611], "add_nois": 65, "prng": 65, "cos_x": [66, 1118], "neg_sin_x": [66, 1118], "hide": [66, 1128, 1847, 1886], "feature_s": [66, 1118, 1128, 1847], "feature_vec": [66, 1118, 1128, 1847], "mseloss": [66, 1118, 1380, 1450, 1549, 1883, 1884], "grad_weight_per_exampl": [66, 1118], "cotang": [66, 1127], "vjp_fn": [66, 1127], "out_tang": 66, "hessian0": 66, "hessian1": 66, "hess": [66, 1120], "encapsul": [67, 68, 1910], "rpc_async": [67, 1860, 1900, 1910, 1912], "add_done_callback": 67, "fut": [67, 1190, 1599, 1882, 1910], "set_result": [67, 1599, 1910], "haven": [67, 1891], "set_except": 67, "baseexcept": 67, "slow_set_futur": 67, "sleep": 67, "cb1": 67, "cb2": 67, "dedic": [67, 1883], "pool": [67, 760, 761, 762, 763, 776, 777, 961, 995, 996, 1006, 1017, 1295, 1296, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1367, 1368, 1387, 1388, 1412, 1413, 1414, 1415, 1416, 1417, 1420, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1486, 1487, 1513, 1514, 1539, 1540, 1542, 1543, 1544, 1709, 1710, 1855, 1882, 1883, 1885, 1891, 1893, 1907, 1910], "didn": [67, 1885, 1897, 1901], "cb_fut": 67, "chain_cb_fut": 67, "cb": [67, 1910], "collect_al": [67, 1855], "fut0": 67, "fut1": [67, 1910], "fut_list": 67, "wait_al": [67, 1855], "toolkit": 68, "clamp": [68, 184, 185, 793, 796, 943, 1193, 1335, 1373, 1518, 1529, 1587, 1856, 1858, 1868, 1873, 1898, 1900, 1905, 1907, 1908, 1915, 1921], "get_attr": 68, "theses": 68, "callsit": 68, "constitut": 68, "tracer_class": 68, "treatment": 68, "topk": [68, 1856, 1858, 1873, 1900], "linear_weight": 68, "add_1": [68, 1117], "linear_1": 68, "relu_1": 68, "topk_1": 68, "pose": [68, 1911], "explor": [68, 1854, 1880, 1891, 1902], "edit": [68, 1902, 1918], "lint": 68, "new_nod": 68, "tediou": 68, "unwieldi": 68, "machineri": [68, 1885], "imagin": [68, 1910], "requisit": 68, "relu_decomposit": 68, "decomposition_rul": 68, "constitu": [68, 1875], "new_graph": 68, "graphappendingtrac": 68, "proxy_arg": 68, "output_proxi": 68, "node_copi": 68, "ari": [68, 1898], "unari": [68, 1121, 1122, 1462, 1464, 1466, 1861, 1873], "organiz": 68, "shapeprop": 68, "named_modul": [68, 1187, 1419, 1891], "args_it": 68, "load_arg": 68, "map_arg": 68, "fetch_attr": 68, "target_atom": 68, "attr_itr": 68, "nonexist": [68, 1859, 1860], "self_obj": 68, "encompass": 68, "prove": [68, 1872], "disprov": 68, "led": 68, "auxiliari": [68, 1118, 1119, 1121, 1122, 1123, 1127, 1854, 1890], "unord": [68, 1420, 1429], "nondetermin": [68, 903, 1895], "dedupl": 68, "torchvis": [68, 1854, 1855, 1857, 1859, 1898, 1902, 1905, 1919, 1923], "transformed_resnet18": 68, "input_imag": 68, "224": [68, 855, 856, 1857, 1859, 1898], "margin": [68, 1353, 1379, 1411, 1422, 1424, 1467, 1468, 1499, 1526, 1541, 1550, 1584, 1585, 1858, 1919], "commut": 68, "toolbox": 68, "tradit": 68, "luckili": 68, "my_pass": 68, "my_module_transform": 68, "input_valu": 68, "prompt": [68, 1854, 1897], "set_trac": [68, 1192, 1198, 1204, 1857], "examin": [68, 1891, 1898, 1904], "undergon": 68, "subclassm": 68, "untrac": 68, "pre_trac": 68, "post_trac": 68, "sake": 68, "tabular": [68, 674, 1866], "transform_graph": 68, "session": 68, "luck": 68, "input_nod": 68, "stepwis": 68, "excel": 68, "onlin": [68, 1660], "realpython": 68, "pycharm": 68, "vscode": 68, "graphic": [68, 1897], "parlanc": 68, "func_to_trac": 68, "dyn": 68, "155": 68, "__bool__": [68, 1858, 1860], "to_bool": 68, "85": [68, 1422, 1686], "traceerror": [68, 1905], "architectur": [68, 987, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1355, 1462, 1501, 1749, 1883, 1894, 1905], "hyper": [68, 1450, 1859, 1919], "do_activ": 68, "512": [68, 1462, 1463, 1464, 1465, 1466, 1883], "without_activ": 68, "with_activ": 68, "traced_without_activ": 68, "traced_with_activ": 68, "concrete_arg": 68, "truli": [68, 1898], "__torch_function__": [68, 1925], "161": 68, "len_1": 68, "sqrt_1": 68, "mycustomtrac": 68, "traced_graph": 68, "myspecialsubmodul": 68, "submod": 68, "neg_1": 68, "is_leaf_modul": [68, 1924], "sparse_coo_tensor": [68, 538, 575, 1786, 1858, 1862, 1900, 1914], "ones_lik": [68, 1121, 1122, 1127, 1858, 1875, 1883, 1886, 1891, 1900], "zeros_lik": [68, 892, 894, 1858, 1862, 1875, 1883, 1900, 1914], "viabl": [68, 1883], "torch_randn": 68, "gotcha": 68, "bake": [68, 1191, 1196, 1661, 1662, 1901], "dropoutrepro": 68, "assert_clos": [68, 1077, 1079, 1080, 1085, 1086, 1091, 1092, 1093, 1095, 1097, 1855, 1857, 1921], "greatest": [68, 1130, 1313, 1898, 1921], "6207983493804932": 68, "dropoutrepro2": 68, "pytre": [68, 1886], "overspeci": 68, "ph": 68, "shouldn": [68, 961, 1902, 1914, 1918], "fn_or_nam": 68, "callfunct": 68, "fn_to_be_trac": 68, "reassign": [68, 1883], "regener": 68, "unset": [68, 1894], "add_submodul": 68, "subpath": 68, "get_submodul": [68, 1187, 1419], "delete_all_unused_submodul": 68, "delete_submodul": 68, "print_read": 68, "print_output": 68, "date": [68, 1902], "pythoncod": 68, "fxmodul": 68, "pathlik": [68, 1258, 1736, 1902], "owning_modul": 68, "tracer_cl": 68, "tracer_extra": 68, "the_funct": 68, "type_expr": 68, "create_nod": 68, "method_nam": 68, "0th": [68, 1128, 1847], "inserting_befor": 68, "influenc": [68, 1652, 1898, 1914], "eliminate_dead_cod": 68, "topolog": [68, 1898], "attr_1": 68, "is_impur": 68, "sound": [68, 1447, 1864, 1919], "erase_nod": 68, "to_eras": 68, "qualified_nam": 68, "graph_copi": 68, "val_map": 68, "return_output_nod": 68, "slice": [68, 601, 689, 690, 1337, 1338, 1339, 1452, 1454, 1458, 1574, 1575, 1725, 1742, 1743, 1774, 1784, 1835, 1856, 1857, 1861, 1875, 1898, 1900, 1914, 1915, 1918, 1920], "memory_format": [68, 153, 168, 170, 173, 176, 177, 178, 187, 193, 204, 207, 237, 264, 294, 322, 328, 390, 494, 495, 519, 574, 944, 1061, 1062, 1115, 1187, 1419, 1599, 1651, 1714, 1716, 1718, 1853, 1855, 1856, 1858, 1921], "layout": [68, 148, 189, 206, 339, 340, 431, 441, 442, 443, 444, 445, 454, 538, 575, 576, 577, 578, 579, 581, 582, 611, 683, 859, 887, 889, 916, 925, 976, 1061, 1062, 1063, 1073, 1078, 1096, 1114, 1115, 1144, 1145, 1206, 1257, 1273, 1281, 1291, 1319, 1535, 1650, 1651, 1675, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1825, 1830, 1832, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1862, 1875, 1883, 1900, 1902, 1914, 1919, 1920, 1921], "companion": 68, "__exit__": [68, 1860, 1861, 1902], "arg_transform": 68, "value_remap": 68, "_node_list": 68, "doubli": 68, "on_generate_cod": 68, "make_transform": 68, "transformcodefunc": 68, "insert_pdb": 68, "current_tran": 68, "default_valu": 68, "_not_": 68, "tabul": 68, "process_input": 68, "process_output": 68, "python_cod": 68, "root_modul": [68, 787, 1907], "set_codegen": 68, "return_typ": [68, 691, 1039, 1040, 1149, 1208, 1246, 1284, 1287, 1289, 1292, 1315, 1778, 1823, 1828], "all_input_nod": 68, "format_nod": 68, "placeholder_nam": 68, "maybe_return_typenam": 68, "autogener": [68, 1886], "impur": 68, "normalized_argu": 68, "arg_typ": 68, "kwarg_typ": 68, "normalize_to_only_use_kwarg": 68, "vararg": 68, "argskwargspair": 68, "bx": 68, "ax": [68, 1218, 1232, 1236, 1247, 1248, 1249, 1277, 1288, 1427, 1437, 1828, 1898], "prev": [68, 1673], "replace_with": 68, "delete_user_cb": 68, "propagate_meta": 68, "replace_input_with": 68, "old_input": 68, "new_input": 68, "create_proxi": 68, "record_stack_trac": 68, "update_arg": 68, "update_kwarg": 68, "autowrap_modul": 68, "autowrap_funct": 68, "create_arg": 68, "create_args_for_root": 68, "root_fn": 68, "is_modul": 68, "disallow": [68, 1902, 1910, 1917], "proxy_factory_fn": 68, "attr": [68, 148, 887, 1288, 1733], "attr_val": 68, "parameter_proxy_cach": 68, "module_qualified_nam": [68, 1924], "path_of_modul": 68, "some_hyperparamet": 68, "indexed_item": 68, "proxied_valu": 68, "garbage_collect_valu": 68, "run_nod": 68, "negsigmswapinterpret": 68, "call_self": 68, "args_tail": 68, "boxed_run": 68, "args_list": 68, "promptli": [68, 1259], "fetch_args_kwargs_from_env": 68, "map_nodes_to_valu": 68, "initial_env": 68, "enable_io_process": 68, "negsigmswapxform": 68, "w1": 68, "w2": 68, "m1": [68, 1845, 1846], "m2": [68, 1639, 1845, 1846, 1905], "despit": [68, 1202, 1203, 1888], "stack_1": 68, "stack_2": 68, "sum_2": 68, "max_1": 68, "max_2": 68, "add_2": 68, "onnx": [80, 83, 84, 85, 1633, 1634, 1652, 1653, 1654, 1655, 1656, 1657, 1855, 1874, 1905], "dynamo_export": [80, 1653, 1654, 1898], "opset_vers": [85, 1652, 1898, 1900], "g_cpu": 86, "g_cuda": 86, "bytetensor": [86, 992, 993, 1031, 1032, 1139, 1298, 1305, 1754, 1909, 1917, 1920], "2147483647": 86, "0x8000_0000_0000_0000": [86, 1279, 1909], "0xffff_ffff_ffff_ffff": [86, 1279, 1909], "random_devic": 86, "1516516984916": 86, "new_stat": [86, 1031, 1032, 1305, 1754, 1909], "void": [86, 962, 1004, 1883, 1890], "g_cpu_oth": 86, "abs_": [90, 1858, 1873, 1920], "acosh": [94, 120, 861, 1856, 1858, 1873, 1900], "batch1": [97, 98, 149, 150, 680, 915, 1858], "batch2": [97, 98, 149, 150, 167, 680, 915, 1858], "tensor1": [99, 100, 101, 102, 681, 682, 1281, 1730, 1858], "tensor2": [99, 100, 101, 102, 311, 401, 681, 682, 1281, 1730, 1858], "mat1": [103, 104, 548, 683, 1151, 1207, 1291, 1779, 1782, 1783, 1797, 1856, 1858], "mat2": [103, 104, 410, 548, 683, 927, 1151, 1207, 1291, 1779, 1782, 1783, 1797, 1856, 1858], "mat": [105, 106, 534, 684, 1311, 1711, 1776, 1779, 1797, 1858, 1919], "vec1": [107, 108, 685, 1858], "vec2": [107, 108, 285, 457, 685, 1133, 1693, 1858], "keepdim": [110, 112, 113, 114, 116, 132, 133, 351, 389, 404, 406, 407, 408, 411, 425, 426, 427, 428, 449, 466, 475, 549, 559, 609, 687, 689, 690, 691, 693, 868, 869, 1208, 1239, 1243, 1256, 1274, 1284, 1286, 1287, 1289, 1292, 1314, 1315, 1316, 1317, 1428, 1557, 1646, 1702, 1705, 1799, 1800, 1804, 1842, 1843, 1856, 1858, 1873, 1915], "rtol": [111, 341, 688, 902, 903, 1176, 1241, 1244, 1657, 1857, 1858, 1921], "atol": [111, 341, 688, 902, 903, 1176, 1241, 1244, 1253, 1657, 1857, 1858, 1885, 1921], "08": [111, 341, 688, 925, 1176, 1233, 1354, 1433, 1561, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1688, 1760, 1858], "equal_nan": [111, 341, 688, 1176, 1858, 1921], "arcco": [119, 1858, 1900, 1921], "acosh_": [121, 1858, 1873], "arccosh": [121, 1858, 1900], "arcsin": [123, 875, 1858, 1900, 1914], "arcsinh": [125, 1858, 1900], "atan2_": [128, 1858, 1873], "arctan2": [128, 1858, 1900], "arctan": [129, 1858, 1900], "arctanh": [131, 1858, 1900], "cl": [137, 1885, 1905, 1910, 1925], "asinh": [141, 863, 1856, 1858, 1873, 1900, 1914], "atan": [145, 625, 626, 864, 1856, 1858, 1873, 1900, 1914], "atanh": [147, 866, 1856, 1858, 1873, 1900, 1914], "wrt": [148, 902, 903], "60521": [148, 887], "issuecom": [148, 887], "867061780": [148, 887], "texttt": [151, 152, 688, 1176, 1327, 1921], "bernoulli": [152, 754, 1331, 1357, 1358, 1359, 1360, 1364, 1371, 1389, 1503, 1504, 1505, 1506, 1511, 1855, 1858, 1873, 1900, 1922], "preserve_format": [153, 168, 170, 173, 176, 177, 178, 187, 204, 207, 237, 264, 294, 322, 390, 519, 574, 944, 1062, 1115, 1651, 1714, 1716, 1718, 1853, 1917], "minlength": [154, 918, 1858], "bitwise_and": [156, 1856, 1858, 1900], "bitwise_left_shift": [158, 1858, 1900], "bitwise_not": [160, 1856, 1858, 1873, 1900], "bitwise_or": [162, 1856, 1858, 1900], "bitwise_right_shift": [164, 1858, 1900], "bitwise_xor": [166, 1856, 1858, 1900], "uint8": [170, 239, 611, 687, 693, 1112, 1703, 1706, 1707, 1730, 1905, 1916, 1917, 1919, 1920, 1926], "cauchi": [171, 1855, 1880, 1888, 1900, 1922], "dfrac": [171, 374, 602, 1354, 1500, 1607, 1640, 1643], "complex32": [177, 1347, 1348, 1349, 1493, 1494, 1495, 1655, 1920, 1921], "int8": [178, 444, 723, 919, 920, 921, 922, 923, 924, 1112, 1268, 1269, 1270, 1271, 1905, 1908, 1916, 1917, 1920, 1926], "input2": [181, 455, 456, 512, 754, 940, 1340, 1353, 1354, 1411, 1428, 1489, 1499, 1500, 1541, 1858, 1879, 1898], "clamp_": [186, 1858, 1873], "uncoalesc": [188, 325, 1790], "coo": [188, 320, 325, 339, 608, 1151, 1779, 1782, 1787, 1788, 1789, 1790, 1791, 1792, 1855, 1867, 1917, 1921], "inttensor": [189, 206, 1161, 1276, 1277, 1362, 1917, 1920], "csr": [189, 206, 340, 577, 582, 1363, 1779, 1782, 1783, 1789, 1792, 1867, 1921], "sparse_csr": [189, 206, 577, 582, 1782, 1783, 1785, 1789, 1792, 1914], "nnz": [189, 538, 577, 578, 579, 581, 582, 902, 1319, 1780, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1914], "mkl": [189, 206, 1855, 1882, 1897, 1900, 1914], "routin": [189, 206, 870, 939, 1259, 1778, 1805, 1914], "downcast": [189, 206], "to_sparse_csr": [189, 206, 578, 579, 1782, 1783, 1858, 1900, 1914], "conj_phys": [192, 952, 1856, 1858, 1900, 1914], "contiguous_format": [193, 328, 494, 495, 1061, 1599, 1917], "non_block": [194, 207, 574, 597, 1187, 1419, 1632, 1856, 1858, 1883, 1916], "copysign": [196, 1858, 1900], "fweight": [203, 959, 1858], "aweight": [203, 959, 1858], "sparse_dim": [216, 539, 540, 1779, 1782, 1786, 1790, 1858, 1900, 1914], "resize_": [219, 495, 1117, 1208, 1857, 1858, 1859, 1873, 1907, 1916], "resize_as_": [219, 1858, 1873, 1914], "set_": [219, 494, 1858], "transpose_": [219, 1858, 1914], "zero_": [219, 1232, 1509, 1858, 1873, 1874, 1891, 1914], "dim1": [223, 225, 226, 563, 586, 587, 1048, 1050, 1051, 1221, 1808, 1825, 1858], "dim2": [223, 225, 226, 1048, 1050, 1051, 1221, 1858], "digamma": [229, 1856, 1858, 1873, 1900, 1915], "rounding_mod": [232, 233, 234, 235, 1055, 1056, 1105, 1108, 1724, 1833, 1858], "split_size_or_sect": [238, 299, 613, 1793], "eq": [241, 1856, 1858, 1873, 1900], "erf": [244, 633, 634, 1856, 1858, 1873, 1900, 1914, 1915], "erfc": [246, 635, 636, 1856, 1858, 1873, 1900, 1915], "front": [251, 1259, 1422, 1874, 1886], "lambd": [255, 295, 1375, 1456, 1521, 1577, 1658, 1858], "fill_valu": [257, 442, 1114, 1115, 1342, 1856, 1858, 1883], "tall": [257, 1245, 1250, 1885], "start_dim": [260, 1099, 1365, 1858], "end_dim": [260, 1099, 1365, 1858], "float_pow": [266, 1858, 1900], "floor_divid": [270, 1055, 1858, 1900, 1914], "divisor": [273, 274, 484, 485, 762, 763, 1055, 1105, 1108, 1130, 1333, 1334, 1366, 1470, 1486, 1487, 1724, 1833], "fmod": [274, 1724, 1856, 1858, 1900], "mantissa": [277, 477, 1110, 1210, 1858, 1883, 1894], "gcd": [280, 1856, 1858, 1900], "ge": [282, 1142, 1280, 1376, 1377, 1522, 1523, 1856, 1858, 1873, 1900], "ordin": [286, 1787, 1788, 1789, 1791, 1792, 1917], "greater_equ": [291, 1858, 1900], "gt": [293, 1141, 1856, 1858, 1873, 1888, 1900], "hypot": [301, 1856, 1858, 1900], "i0": [303, 1206, 1768, 1858, 1900, 1915], "igamma": [305, 1856, 1858, 1900], "igammac": [307, 1856, 1858, 1900], "3100": [308, 479, 1157, 1722], "3553j": [308, 479, 1157, 1722], "5445": [308, 479, 1157, 1722], "7896j": [308, 479, 1157, 1722], "6492": [308, 479, 1157, 1722], "0633j": [308, 479, 1157, 1722], "0638": [308, 479, 1157, 1722], "8119j": [308, 479, 1157, 1722], "3553": [308, 1157], "7896": [308, 1157], "0633": [308, 1157, 1233, 1875], "8119": [308, 1157], "index_add_": [309, 892, 1158, 1159, 1858, 1895], "index_copy_": [311, 1858], "index_fill_": [313, 1858, 1873], "index_put_": [315, 1858], "include_self": [318, 511, 512, 1160, 1739, 1856, 1858], "identit": 318, "amax": [318, 512, 690, 691, 1782, 1856, 1858, 1900], "amin": [318, 512, 689, 691, 1782, 1856, 1858, 1900], "fill_": [318, 1187, 1212, 1419, 1725, 1858, 1873, 1891, 1916], "72": [318, 611, 1140], "uint8_t": [323, 1655], "retain_grad": [332, 1858, 1880, 1900], "n_fft": [348, 550, 1184, 1801, 1858], "hop_length": [348, 550, 1184, 1801, 1858], "win_length": [348, 550, 1184, 1801, 1858], "center": [348, 550, 773, 779, 1080, 1184, 1483, 1518, 1529, 1587, 1672, 1694, 1762, 1801, 1858, 1880, 1900, 1919], "onesid": [348, 550, 1184, 1801, 1856, 1858], "return_complex": [348, 550, 1184, 1801, 1858], "element_s": [350, 431, 1858, 1873, 1900, 1916], "lcm": [353, 1858, 1900], "ldexp": [355, 1110, 1858, 1900], "le": [357, 1214, 1376, 1377, 1522, 1523, 1856, 1858, 1873, 1900, 1921], "lerp": [359, 1858, 1900], "less_equ": [363, 1858, 1900], "lgamma": [365, 645, 646, 1856, 1858, 1900], "ln": [374, 1215, 1915], "logical_and": [380, 1856, 1858, 1900], "logical_not": [382, 1856, 1858, 1873, 1875, 1900], "logical_or": [384, 1856, 1858, 1900], "logical_xor": [386, 1858, 1900], "pivot": [393, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1276, 1277, 1278, 1704, 1858], "get_info": [393, 1276], "lu_data": [394, 1277, 1278, 1858], "lu_pivot": [394, 1277, 1278, 1858], "masked_fill_": [396, 1858, 1873, 1874], "booltensor": [397, 399, 729, 1280, 1462, 1850, 1917, 1920], "masked_scatter_": [398, 1858], "mvlgamma": [422, 1858, 1900], "posinf": [423, 424, 1313, 1858], "neginf": [423, 424, 1313, 1858], "nan_to_num": [424, 1858, 1900], "interpol": [427, 475, 779, 780, 781, 813, 1212, 1316, 1471, 1472, 1473, 1483, 1518, 1587, 1588, 1589, 1705, 1840, 1858, 1907], "ne": [435, 1607, 1640, 1648, 1856, 1858, 1873, 1900], "8182e": 441, "5765e": 441, "41": [441, 1063, 1245, 1590, 1639, 1704], "0545e": 441, "0949e": 441, "4842e": [441, 1063], "0000e": [441, 1063, 1103, 1264, 1273, 1313, 1639, 1760, 1762, 1763, 1768, 1769], "00": [441, 1063, 1103, 1264, 1273, 1313, 1639, 1656, 1760, 1762, 1763, 1768, 1769, 1857, 1898], "141592": [442, 1114], "1416": [442, 1044, 1114, 1819], "from_numpi": [444, 873, 874, 1819], "array_lik": [444, 873, 1787, 1788, 1789, 1790, 1791, 1792, 1819, 1875], "nextaft": [447, 1856, 1858, 1900], "fro": [449, 1218, 1239, 1243, 1256, 1617, 1626, 1646, 1858], "not_equ": [452, 1858, 1900], "resolve_conj": [454, 952, 1858, 1900], "resolve_neg": [454, 1858, 1900], "input3": [456, 1858], "transpos": [456, 587, 588, 611, 686, 735, 736, 737, 940, 1060, 1127, 1216, 1217, 1223, 1226, 1229, 1236, 1247, 1250, 1350, 1351, 1352, 1470, 1496, 1497, 1498, 1568, 1606, 1635, 1692, 1805, 1807, 1808, 1814, 1828, 1856, 1858, 1873, 1875, 1880, 1894, 1898, 1900, 1907, 1914, 1918, 1920], "polygamma": [462, 1858, 1900, 1915], "q_per_channel_axi": [469, 470, 1858, 1900], "zero_point": [470, 472, 732, 733, 734, 735, 736, 737, 738, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 764, 766, 767, 768, 769, 771, 774, 775, 793, 796, 813, 814, 815, 816, 819, 846, 1074, 1075, 1706, 1707, 1708, 1709, 1710, 1858, 1905, 1906], "qtensor": [474, 1858], "uniform": [477, 602, 917, 1355, 1437, 1501, 1713, 1714, 1762, 1855, 1856, 1878, 1900, 1922], "queu": [482, 967, 1883], "life": [482, 964], "cycl": [482, 887, 964, 1680, 1686, 1880, 1904], "unexpectedli": [482, 1920], "maxnorm": [486, 487, 1725, 1858], "repeat_interleav": [488, 1840, 1858, 1900, 1907], "output_s": [489, 735, 736, 737, 760, 761, 1324, 1325, 1326, 1328, 1329, 1330, 1351, 1366, 1367, 1368, 1415, 1416, 1417, 1470, 1477, 1478, 1479, 1480, 1481, 1482, 1512, 1513, 1514, 1545, 1546, 1547, 1726, 1856, 1858, 1875], "is_leaf": [490, 1858, 1873, 1875, 1900], "saved_weight": 491, "loaded_weight": 491, "5503": 491, "4926": [491, 1891], "1158": 491, "8303": 491, "1007": 491, "9853": 491, "2316": 491, "6606": 491, "resiz": [494, 495, 518, 539, 540, 1112, 1113, 1117, 1471, 1518, 1529, 1856, 1858, 1873, 1900, 1916], "shift": [500, 920, 923, 1080, 1087, 1331, 1337, 1338, 1339, 1364, 1458, 1511, 1731, 1858, 1861], "decim": [502, 503, 1733, 1858, 1894, 1926], "scatter_": [507, 510, 1737, 1858], "scatter_add_": [508, 509, 1738, 1840, 1858], "scatter_reduce_": [508, 511, 1739, 1858], "4600": 508, "2300": 508, "scatter_reduc": [512, 1840, 1856, 1858, 1900], "sgn": [517, 1109, 1758, 1858, 1873, 1875, 1900, 1914], "int16": [519, 1112, 1269, 1916, 1917, 1920, 1926], "dense_dim": [537, 539, 540, 577, 578, 579, 581, 582, 1790, 1858, 1900, 1914], "nse": [538, 1914], "randint": [538, 918, 959, 1103, 1292, 1342, 1468, 1501, 1502, 1786, 1858, 1862, 1874, 1900, 1919, 1922], "6550": 538, "2397": 538, "1611": 538, "0779": [538, 1223, 1701, 1850], "2326": 538, "0558": 538, "4711": 538, "9678": 538, "5138": 538, "0411": 538, "9417": 538, "5158": 538, "0793": 538, "0036": [538, 1284], "2569": 538, "1055": 538, "sparse_coo": [538, 577, 1319, 1782, 1785, 1786, 1790, 1914, 1917], "split_siz": [541, 1793, 1858], "squeez": [547, 687, 689, 690, 691, 693, 1208, 1274, 1284, 1286, 1287, 1289, 1292, 1314, 1317, 1500, 1702, 1786, 1799, 1800, 1804, 1842, 1843, 1856, 1858, 1873, 1898, 1900, 1907, 1918], "pad_mod": [550, 1801, 1858], "typedstorag": [551, 1855, 1916], "untypedstorag": [551, 607, 1855, 1916], "untyped_storag": 551, "compute_uv": [561, 1250, 1251, 1805, 1858], "axis0": [562, 1807, 1858], "axis1": [562, 1807, 1858], "dim0": [563, 586, 587, 1808, 1825, 1858], "indices_or_sect": [572, 1058, 1150, 1820, 1848], "rep": 573, "5044": 574, "0005": [574, 1684, 1690], "3310": 574, "0584": [574, 1805], "cuda0": [574, 1883, 1889, 1920], "masked_grad": [575, 1858], "sparse_mask": [575, 1858, 1900], "mkldnn": [576, 1196, 1855, 1900], "sparsedim": 577, "blocksiz": [577, 578, 579, 1787, 1788, 1789, 1858, 1914], "sparse_csc": [577, 581, 1785, 1789, 1791, 1914], "sparse_bsr": [577, 579, 1788, 1789, 1914], "sparse_bsc": [577, 578, 1787, 1789, 1914], "bsr": [577, 579, 1788, 1789, 1921], "bsc": [577, 578, 1787, 1789, 1921], "csc": [577, 581, 1789, 1791, 1921], "minu": [577, 578, 579, 581, 582, 1915], "crow_indic": [577, 579, 582, 1780, 1782, 1783, 1785, 1788, 1789, 1792, 1858, 1900, 1914, 1921], "col_indic": [577, 579, 582, 1782, 1783, 1785, 1788, 1789, 1792, 1858, 1900, 1914, 1921], "sparsecsr": [577, 1825, 1914], "row_indic": [578, 581, 1787, 1791, 1858, 1900, 1914, 1921], "ccol_indic": [578, 581, 1787, 1791, 1858, 1900, 1914, 1921], "_nnz": [580, 581, 582, 1900], "012766935862600803": 583, "5415473580360413": 583, "08909505605697632": 583, "7729271650314331": 583, "unitriangular": [588, 1249, 1828, 1858], "tril": [590, 1568, 1858, 1900], "triu": [592, 1611, 1828, 1858, 1898, 1900], "trunc": [596, 671, 672, 681, 1055, 1098, 1105, 1108, 1733, 1856, 1858, 1873, 1900, 1914], "sizedim": 601, "return_invers": [603, 604, 1837, 1838, 1858], "return_count": [603, 604, 1837, 1838, 1858], "unsqueez": [606, 1080, 1207, 1247, 1362, 1438, 1611, 1822, 1856, 1858, 1885, 1900, 1907, 1914, 1918, 1919], "subspac": [611, 1250, 1425, 1694, 1805, 1806], "span": [611, 1021, 1022, 1355, 1805, 1904, 1910], "foral": 611, "proportion": [611, 779, 1471, 1587], "met": [611, 1226, 1233, 1234, 1245, 1259, 1466], "9482": [611, 1164], "0310": 611, "4999": 611, "5316": 611, "1520": 611, "7472": 611, "5617": 611, "8649": 611, "4724": [611, 1891], "0334": 611, "2976": 611, "8499": 611, "2109": 611, "9913": 611, "9607": 611, "6123": 611, "1064483442": 611, "1124191867": 611, "1069546515": 611, "1089989247": 611, "1105482831": 611, "1061112040": 611, "1057999968": 611, "1084397505": 611, "1071760287": 611, "1123489973": 611, "1097310419": 611, "1084649136": 611, "1101533110": 611, "1073668768": 611, "1082790149": 611, "1088634448": 611, "1000000000": 611, "0047": 611, "0310j": 611, "5316j": 611, "7472j": 611, "8649j": 611, "0334j": 611, "8499j": 611, "9913j": 611, "6123j": 611, "202": 611, "154": [611, 1897], "59": [611, 1830, 1832], "182": 611, "243": [611, 1184, 1805], "253": 611, "188": 611, "252": [611, 1897], "191": 611, "63": [611, 1897, 1905], "240": 611, "227": 611, "165": 611, "190": 611, "128": [611, 714, 722, 723, 750, 758, 788, 813, 814, 1340, 1354, 1381, 1406, 1428, 1467, 1468, 1500, 1568, 1874, 1875, 1905, 1907, 1908, 1910, 1917, 1920], "146": 611, "106": 611, "205": 611, "206": 611, "189": 611, "95": [611, 1682, 1685, 1686], "147": 611, "89": [611, 1712], "43": 611, "87": 611, "235": 611, "226": 611, "254": [611, 1897], "111": [611, 1656, 1898], "117": 611, "177": 611, "xlogi": [616, 1858, 1900, 1915], "aot_graph": [674, 1866], "aot_joint_graph": [674, 1866], "ddp_graph": [674, 1866], "graph_cod": [674, 1866], "toggl": [674, 1883], "supress": 674, "silenc": 674, "lowest": [674, 937, 1313, 1616, 1617, 1625, 1626, 1715, 1716, 1885, 1921], "notset": 674, "joint": [674, 1866], "ddpoptim": [674, 1866], "unregist": [674, 1866, 1870, 1898], "3348": 677, "5889": 677, "1584": 677, "2294": [677, 1286], "2004": 677, "3690": 677, "7298": [677, 1723], "hyperbol": [678, 876, 879, 957, 1459, 1773, 1818], "uniform_": [678, 879, 917, 1855, 1858, 1873, 1878, 1885, 1915, 1922], "3192": 678, "9915": 678, "9674": 678, "7151": 678, "7791": 678, "3120": [678, 954], "2979": 678, "1341": 678, "_i": [679, 680, 681, 682, 683, 915, 917, 920, 923, 927, 942, 1055, 1105, 1210, 1212, 1308, 1467, 1697, 1701, 1720, 1756, 1802, 1850, 1915], "0202": 679, "0985": 679, "3506": [679, 1276], "6056": 679, "19": [679, 740, 940, 1416, 1857, 1898, 1914], "3944": 679, "9732": 679, "3497": 679, "6245": [679, 1218], "4022": [679, 1042, 1805], "3743": 679, "7724": 679, "5811": 679, "8017": 679, "7695": 679, "3930": 679, "3672": [679, 960, 1219], "1450": [679, 1786], "6971": 679, "0736": [679, 1891], "0994": 679, "3216": 679, "7845": 679, "1610": 679, "1868": 679, "4090": 679, "9902": [679, 960, 1219], "3667": [679, 954], "3925": 679, "6147": 679, "sum_": [680, 1184, 1238, 1255, 1332, 1333, 1334, 1347, 1348, 1349, 1355, 1387, 1388, 1407, 1422, 1426, 1428, 1799, 1800, 1801, 1821, 1826, 1842, 1843, 1844, 1915], "mathbin": [680, 683, 684, 915, 927, 1783], "doubletensor": [680, 681, 682, 683, 684, 915, 1746, 1917, 1920], "tensorfloat32": [680, 683, 915, 927, 1281, 1291, 1347, 1348, 1349, 1350, 1351, 1352, 1406, 1493, 1494, 1495, 1496, 1497, 1498, 1535, 1748, 1883, 1894], "rocm": [680, 683, 915, 927, 1281, 1291, 1347, 1348, 1349, 1350, 1351, 1352, 1372, 1390, 1406, 1855], "6311": 680, "0503": 680, "9768": [680, 1891], "0362": 680, "1653": 680, "8185": 680, "4255": [680, 1308], "6760": 680, "9453": 680, "5743": 680, "8202": 680, "3691": 680, "0943": 680, "1109": [680, 1373, 1769], "4730": [680, 1821], "histor": [681, 1017, 1359, 1882, 1891, 1896], "t1": [681, 682, 874, 1140, 1599, 1859, 1910, 1911], "2312": [681, 1786], "6496": 681, "1312": 681, "0428": 681, "4292": 681, "1030": 681, "5369": 681, "9829": 681, "0430": 681, "8635": 682, "6391": 682, "6174": 682, "7617": 682, "5879": 682, "7388": 682, "8353": 682, "6249": 682, "6511": 682, "8716": 683, "4671": 683, "3746": 683, "7573": 683, "9555": 683, "8681": 683, "3768": 684, "5565": 684, "otim": [685, 1207, 1370, 1517], "conj": [686, 953, 1076, 1077, 1079, 1081, 1088, 1090, 1094, 1095, 1097, 1216, 1217, 1223, 1225, 1244, 1728, 1729, 1856, 1858, 1888, 1900, 1920], "mh": [686, 938, 1223, 1805, 1858, 1900, 1918, 1920], "lvert": [688, 1176, 1467, 1554, 1921], "rvert": [688, 1176, 1921], "leq": [688, 916, 917, 954, 1078, 1080, 1176, 1207, 1211, 1226, 1232, 1342, 1361, 1422, 1424, 1426, 1502, 1553, 1556, 1759, 1801, 1878, 1915], "elementwis": [688, 954, 976, 1003, 1004, 1103, 1105, 1323, 1382, 1383, 1384, 1456, 1577, 1841, 1860, 1875, 1888, 1915], "07": [688, 813, 814, 815, 816, 819, 938, 939, 1063, 1224, 1227, 1232, 1244, 1245, 1251, 1274, 1277, 1606, 1657, 1664, 1763, 1768, 1805, 1898], "09": [688, 1664, 1676, 1921], "8177": 689, "4878": 689, "2491": 689, "9130": 689, "7158": 689, "1775": 689, "0992": 689, "4817": 689, "0053": 689, "0164": 689, "3738": 689, "0507": [689, 1898], "9700": 689, "1106": 689, "0318": 689, "0816": [689, 1276], "6451": 690, "4866": 690, "2987": 690, "3312": 690, "5744": 690, "2980": [690, 1875], "8397": 690, "2713": 690, "9128": 690, "9214": 690, "7268": 690, "2995": 690, "9023": [690, 1217], "4853": 690, "9075": 690, "6165": 690, "180": [692, 1044, 1712], "14159": [692, 1819], "135": 692, "45": [692, 1338, 1339, 1383, 1384, 1458, 1639, 1898], "ao": [694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 1905, 1906, 1907], "batch_norm": [694, 695, 1196, 1858, 1900], "3d": [695, 698, 701, 729, 734, 737, 761, 763, 768, 773, 1288, 1326, 1330, 1334, 1337, 1339, 1349, 1352, 1359, 1360, 1366, 1368, 1382, 1384, 1414, 1425, 1471, 1479, 1482, 1483, 1487, 1495, 1498, 1506, 1512, 1514, 1529, 1544, 1556, 1587, 1875, 1894, 1905, 1914, 1919], "bn": [696, 697, 698, 699, 700, 701, 808, 854, 1060, 1196, 1896, 1901, 1905, 1906], "qat": [706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 725, 726, 727, 786, 787, 840, 1905, 1906, 1907], "in_channel": [706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 721, 724, 725, 732, 733, 734, 735, 736, 737, 1196, 1347, 1348, 1349, 1350, 1351, 1352, 1395, 1396, 1397, 1398, 1399, 1400], "out_channel": [706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 721, 724, 725, 732, 733, 734, 735, 736, 737, 1196, 1347, 1348, 1349, 1350, 1351, 1352, 1395, 1396, 1397, 1398, 1399, 1400], "kernel_s": [706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 721, 724, 725, 732, 733, 734, 735, 736, 737, 762, 763, 776, 777, 1187, 1196, 1332, 1333, 1334, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1367, 1368, 1387, 1388, 1395, 1396, 1397, 1398, 1399, 1400, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1470, 1485, 1486, 1487, 1496, 1497, 1498, 1512, 1513, 1514, 1539, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1586, 1709, 1710, 1856, 1858, 1919], "dilat": [706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 721, 724, 725, 732, 733, 734, 735, 736, 737, 766, 767, 768, 776, 777, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1395, 1396, 1397, 1398, 1399, 1400, 1412, 1413, 1414, 1470, 1493, 1494, 1495, 1496, 1497, 1498, 1512, 1542, 1543, 1544, 1586, 1709, 1710, 1856, 1858, 1898], "padding_mod": [706, 707, 708, 709, 710, 711, 712, 713, 719, 720, 721, 724, 725, 732, 733, 734, 735, 736, 737, 766, 767, 768, 1347, 1348, 1349, 1350, 1351, 1352, 1395, 1396, 1397, 1398, 1399, 1400, 1518, 1856, 1858], "ep": [706, 707, 708, 709, 710, 711, 717, 718, 730, 731, 743, 745, 746, 747, 748, 789, 813, 814, 815, 816, 819, 820, 902, 903, 1196, 1272, 1323, 1337, 1338, 1339, 1354, 1373, 1374, 1382, 1383, 1384, 1391, 1392, 1393, 1394, 1401, 1402, 1403, 1428, 1433, 1458, 1462, 1464, 1466, 1467, 1488, 1500, 1515, 1519, 1520, 1528, 1532, 1554, 1557, 1561, 1584, 1607, 1640, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1675, 1688, 1708, 1856, 1858, 1885, 1888, 1915, 1926], "momentum": [706, 707, 708, 709, 710, 711, 717, 718, 730, 731, 745, 746, 747, 1337, 1338, 1339, 1382, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1458, 1488, 1528, 1665, 1672, 1674, 1680, 1686, 1688, 1856, 1858, 1891, 1901], "freeze_bn": [706, 707, 708, 709, 710, 711], "qconfig": [706, 707, 708, 709, 710, 711, 712, 713, 714, 724, 725, 726, 727, 782, 783, 785, 788, 789, 790, 791, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 1924], "batchnorm1d": [706, 709, 1392, 1458, 1488, 1896, 1907], "fakequant": [706, 707, 708, 709, 710, 711, 712, 713, 714, 724, 725, 726, 727, 796, 856], "weight_fake_qu": [706, 707, 708, 709, 710, 711, 712, 713, 724, 725], "quant": [706, 707, 708, 709, 710, 711, 712, 713, 714, 724, 725, 726, 784, 786, 787, 832, 855, 856, 1074, 1075, 1905, 1906], "batchnorm3d": [708, 711, 713, 718, 1394, 1458, 1488, 1907], "num_featur": [717, 718, 730, 731, 745, 746, 747, 1187, 1337, 1338, 1339, 1382, 1383, 1384, 1392, 1393, 1394, 1401, 1402, 1403, 1419, 1458, 1520, 1891], "qint8": [722, 723, 750, 755, 758, 759, 766, 767, 768, 775, 786, 788, 793, 814, 835, 852, 853, 855, 856, 1655, 1706, 1707, 1905, 1907, 1908, 1916, 1920, 1921], "highlight": [724, 725, 1860], "from_float": [726, 732, 733, 734, 739, 740, 750, 758, 791, 811, 817, 820, 832, 1905], "qparams_dict": [726, 732, 733, 734, 758], "hidden_s": [728, 754, 755, 759, 1371, 1372, 1389, 1390, 1434, 1435, 1436, 1858], "num_lay": [728, 754, 1371, 1389, 1434, 1435, 1463, 1465, 1858, 1891], "bidirect": [728, 754, 1371, 1389, 1434, 1435, 1858], "_lstmlayer": 728, "nnqa": 728, "h0": [728, 754, 756, 1371, 1389, 1434], "hn": [728, 754, 756, 1371, 1372, 1389, 1434], "cn": [728, 756, 1187, 1389], "weight_ih": [728, 1372, 1390, 1436], "weight_hh": [728, 1372, 1390, 1436], "dequant": [729, 782, 784, 786, 787, 793, 795, 855, 1858, 1900, 1906, 1908, 1921, 1923], "mha": [729, 1425], "conver": 729, "key_padding_mask": [729, 1425, 1858], "need_weight": [729, 1425, 1858], "attn_mask": [729, 1425, 1568, 1858], "average_attn_weight": [729, 1425, 1858], "is_caus": [729, 1425, 1465, 1466, 1568, 1858], "attn_output_weight": [729, 1425], "unmask": [729, 1462], "causal": [729, 1425, 1463, 1464, 1465, 1466, 1568], "attn_weight": [729, 1425, 1568], "attn_output": [729, 1425], "quint8": [732, 733, 734, 735, 736, 737, 739, 740, 750, 766, 767, 768, 775, 786, 788, 793, 813, 814, 815, 816, 819, 821, 853, 855, 1655, 1706, 1707, 1708, 1709, 1710, 1905, 1907, 1908, 1916, 1920, 1921], "learnabl": [732, 733, 734, 735, 736, 737, 739, 740, 750, 754, 758, 1337, 1338, 1339, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1362, 1363, 1371, 1372, 1374, 1382, 1383, 1384, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1427, 1434, 1436, 1458, 1510, 1562, 1891], "q_input": [732, 733, 734, 735, 736, 737, 766, 767, 768], "quantize_per_tensor": [732, 733, 734, 735, 736, 737, 750, 751, 752, 766, 767, 768, 1708, 1709, 1710, 1858, 1900, 1905], "unequ": [733, 734, 735, 736, 737, 1348, 1349, 1351, 1352], "50": [733, 735, 736, 737, 766, 818, 1242, 1292, 1333, 1334, 1342, 1347, 1348, 1349, 1351, 1352, 1367, 1368, 1387, 1388, 1412, 1413, 1414, 1469, 1495, 1496, 1498, 1502, 1513, 1514, 1673, 1816, 1875], "56": 734, "output_pad": [735, 736, 737, 1350, 1351, 1352, 1398, 1399, 1400, 1496, 1497, 1498, 1856, 1858], "qnnpack": [735, 736, 750, 758, 849, 850, 853, 855, 856, 1905, 1907], "convtranspose2d": [735, 1399, 1497, 1840, 1907], "nnq": [735, 736, 737, 782, 783, 784, 858, 1905], "downsampl": [735, 736, 737, 1351, 1471, 1483, 1518, 1529], "upsampl": [735, 736, 737, 773, 780, 781, 813, 1351, 1472, 1473, 1483, 1518, 1529, 1588, 1589], "fbgemm": [736, 737, 750, 758, 827, 849, 850, 853, 855, 856, 1905, 1906], "cubic": [737, 1368, 1514, 1518], "num_embed": [739, 740, 1362, 1363, 1510], "embedding_dim": [739, 740, 1362, 1363, 1391, 1509, 1510], "padding_idx": [739, 1362, 1363, 1509, 1510, 1856, 1858], "scale_grad_by_freq": [739, 740, 1362, 1363, 1509, 1510, 1856, 1858], "overwritten": [739, 740, 750, 758, 791, 835, 855, 1880, 1921], "_embed": [739, 740], "_dim": [739, 740, 1362], "include_last_offset": [740, 1363, 1510, 1858], "embedding_bag": [740, 1858, 1900], "floatfunct": [741, 1905], "activation_post_process": [741, 793, 1905], "add_relu": [741, 742, 751, 1868, 1900, 1923], "add_scalar": [741, 742, 751, 1900, 1919, 1923], "mul_scalar": [741, 742, 751, 1900, 1923], "collector": 742, "f_add": 742, "num_channel": [743, 1374, 1874], "normalized_shap": [748, 1391, 1532, 1856, 1858, 1875], "elementwise_affin": [748, 1391], "negative_slop": [749, 774, 1405, 1533, 1534, 1856, 1858, 1878], "slope": [749, 774, 1405, 1450, 1878], "bias_": [750, 758], "_featur": [750, 758, 775, 1327, 1340, 1404, 1406, 1489, 1535], "from_refer": [750, 758], "ref_qlinear": [750, 758], "output_scal": [750, 753, 1708, 1858], "output_zero_point": [750, 753, 1708, 1858], "q_add": 751, "qint32": [751, 752, 1655, 1706, 1707, 1905, 1908, 1916, 1920, 1921], "x_0": [752, 1826], "gate": [754, 755, 1370, 1371, 1372, 1389, 1448, 1517, 1571], "r_t": [754, 1371, 1671], "w_": [754, 1325, 1326, 1329, 1330, 1333, 1334, 1336, 1344, 1345, 1346, 1348, 1349, 1351, 1352, 1355, 1367, 1368, 1371, 1372, 1388, 1389, 1390, 1413, 1414, 1416, 1417, 1426, 1431, 1432, 1434, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1471, 1472, 1473, 1474, 1475, 1476, 1514, 1518], "x_t": [754, 888, 890, 1337, 1338, 1339, 1371, 1382, 1383, 1384, 1389, 1434, 1458, 1659], "b_": [754, 1371, 1372, 1389, 1390, 1407, 1434, 1436, 1821, 1914], "hr": [754, 1371, 1372, 1389, 1888], "h_": [754, 1325, 1326, 1329, 1330, 1333, 1334, 1340, 1345, 1346, 1348, 1349, 1351, 1352, 1367, 1368, 1371, 1372, 1388, 1389, 1406, 1413, 1414, 1415, 1416, 1417, 1431, 1432, 1434, 1436, 1441, 1442, 1444, 1445, 1471, 1472, 1473, 1475, 1476, 1489, 1514, 1518], "z_t": [754, 1371], "iz": [754, 1371, 1372], "hz": [754, 972, 1371, 1372, 1919], "n_t": [754, 1371], "h_t": [754, 1371, 1389, 1434], "hadamard": [754, 1371, 1372, 1389, 1390], "multilay": [754, 1371, 1389], "_t": [754, 1371, 1389, 1672, 1674, 1885, 1901], "b_ih": [754, 1371, 1372, 1389, 1390, 1434, 1436, 1858], "b_hh": [754, 1371, 1372, 1389, 1390, 1434, 1436, 1858], "h_0": [754, 1371, 1389, 1390, 1434], "seq_len": [754, 1371, 1389, 1425, 1434], "pack_padded_sequ": [754, 1371, 1389, 1434, 1632, 1634, 1635, 1887], "num_direct": [754, 1371, 1389, 1434], "h_n": [754, 1371, 1389, 1434], "input1": [754, 1340, 1353, 1354, 1411, 1428, 1489, 1499, 1500, 1541, 1858, 1879, 1898], "_size": [754, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1347, 1348, 1349, 1350, 1351, 1352, 1366, 1367, 1368, 1371, 1372, 1387, 1388, 1389, 1390, 1412, 1413, 1414, 1415, 1416, 1417, 1434, 1436, 1470, 1514], "_layer": [754, 1371, 1389, 1434], "_direct": 754, "output1": [754, 1327, 1879, 1898], "output2": [754, 1327], "weight_ih_l": [754, 1371, 1389, 1434], "w_ir": [754, 1371], "w_iz": [754, 1371], "w_in": [754, 1371], "weight_hh_l": [754, 1371, 1389, 1434], "w_hr": [754, 1371], "w_hz": [754, 1371], "w_hn": [754, 1371], "bias_ih_l": [754, 1371, 1389, 1434], "b_ir": [754, 1371], "b_iz": [754, 1371], "b_in": [754, 1371], "bias_hh_l": [754, 1371, 1389, 1434], "b_hr": [754, 1371], "b_hz": [754, 1371], "b_hn": [754, 1371], "mathcal": [754, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1362, 1363, 1371, 1372, 1389, 1390, 1404, 1406, 1434, 1436, 1437, 1458, 1717, 1878, 1888], "subtli": [754, 1371, 1674], "gru": [755, 1372, 1858, 1883, 1900, 1905, 1907], "cell": [755, 757, 759, 1371, 1372, 1389, 1390, 1434, 1436], "hx": [755, 757, 759, 1372, 1390, 1436, 1858], "cx": [757, 1390, 1858], "nonlinear": [759, 1335, 1353, 1379, 1434, 1436, 1446, 1855, 1878, 1914], "elman": [759, 1434, 1436], "adaptiveavgpool2d": [760, 1478, 1840, 1907], "adaptiveavgpool3d": [761, 1479, 1840, 1907], "ceil_mod": [762, 763, 776, 777, 1332, 1333, 1334, 1387, 1388, 1412, 1413, 1414, 1485, 1486, 1487, 1539, 1540, 1542, 1543, 1544, 1709, 1710, 1856, 1858], "count_include_pad": [762, 763, 1332, 1333, 1334, 1485, 1486, 1487, 1856, 1858], "divisor_overrid": [762, 763, 1333, 1334, 1486, 1487, 1856, 1858], "kh": [762, 763, 767, 768, 1333, 1334, 1367, 1368, 1413, 1414, 1486, 1487, 1494, 1495, 1497, 1498, 1513, 1514, 1543, 1544], "kw": [762, 763, 767, 768, 1333, 1334, 1367, 1368, 1413, 1414, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1513, 1514, 1542, 1543, 1544], "sw": [762, 763, 766, 767, 768, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1542, 1543, 1544], "avgpool2d": [762, 1486, 1907], "_channel": [762, 763, 766, 767, 768, 1347, 1348, 1349, 1350, 1351, 1352, 1374, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1542, 1543, 1544, 1910], "ih": [762, 763, 767, 768, 1434, 1436, 1486, 1487, 1494, 1495, 1497, 1498, 1543, 1544], "iw": [762, 763, 766, 767, 768, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1542, 1543, 1544], "padh": [762, 763, 767, 768, 1486, 1487, 1494, 1495, 1497, 1498], "padw": [762, 763, 766, 767, 768, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498], "kd": [763, 768, 1334, 1414], "sd": [763, 768], "padd": [763, 768], "formul": [764, 1341, 1361, 1375, 1409, 1455, 1456, 1537, 1554, 1568, 1888, 1914], "min_": [765, 1222, 1223, 1232, 1250, 1805], "max_": [765, 1412, 1413, 1414, 1607, 1640], "convolv": [766, 767, 768, 1347, 1348, 1349, 1350, 1351, 1352, 1395, 1396, 1397, 1398, 1399, 1400, 1493, 1494, 1495, 1496, 1497, 1498], "dw": [766, 767, 768, 1493, 1494, 1495, 1496, 1497, 1498], "qf": [766, 767, 768], "dtype_input": [766, 767, 768], "dtype_filt": [766, 767, 768], "q_filter": [766, 767, 768], "dh": [767, 768, 1494, 1495, 1497, 1498], "dd": 768, "min_val": [772, 1378, 1524, 1525, 1856, 1858], "max_val": [772, 1378, 1524, 1525, 1856, 1858], "scale_factor": [773, 779, 780, 781, 1471, 1472, 1473, 1529, 1568, 1587, 1588, 1589, 1856, 1858], "nearest": [773, 779, 781, 1316, 1471, 1473, 1518, 1529, 1587, 1589, 1705, 1733, 1883], "align_corn": [773, 779, 780, 1471, 1472, 1483, 1518, 1529, 1587, 1588, 1856, 1858], "height": [773, 779, 1333, 1334, 1348, 1349, 1351, 1352, 1388, 1413, 1414, 1426, 1453, 1471, 1529, 1587, 1874], "spatial": [773, 779, 780, 781, 935, 1080, 1338, 1366, 1391, 1431, 1432, 1453, 1470, 1471, 1472, 1473, 1483, 1518, 1529, 1558, 1559, 1560, 1587, 1588, 1589], "pixel": [773, 779, 781, 1348, 1355, 1358, 1359, 1360, 1364, 1426, 1431, 1432, 1471, 1483, 1518, 1529, 1587, 1589], "corner": [773, 779, 926, 1471, 1483, 1518, 1529, 1587], "leakyrelu": [774, 1420, 1533, 1891, 1907], "_slope": [774, 1405, 1533, 1878], "xa": [775, 1236, 1247, 1248, 1249, 1406, 1535], "return_indic": [776, 777, 1328, 1329, 1330, 1367, 1368, 1412, 1413, 1414, 1415, 1416, 1417, 1480, 1481, 1482, 1513, 1514, 1542, 1543, 1544, 1858], "maxpool1d": [776, 1415, 1542, 1545, 1907], "maxpool2d": [777, 1416, 1420, 1543, 1546, 1898, 1907], "linearli": [779, 1124, 1245, 1471, 1587, 1683, 1704, 1887, 1901, 1908], "neighbour": [781, 1407, 1529, 1589], "stub": [782, 783, 1902], "calibr": [782, 783, 791, 832, 833, 851, 853, 855, 1879, 1905, 1906, 1908, 1924], "quantstub": [784, 1905], "dequantstub": [784, 1905], "quantwrapp": 785, "backend_config": [786, 787, 788, 789, 790, 811, 812, 853, 854, 855, 856, 1924], "acycl": [786, 1880], "backendpatternconfig": [786, 855], "dtypeconfig": [786, 787, 789, 855], "observationtyp": [786, 787, 855, 1907], "weighted_int8_dtype_config": [786, 855], "input_dtyp": [786, 788, 855, 1907], "output_dtyp": [786, 788, 855, 1856, 1907], "weight_dtyp": [786, 788, 855, 1907], "bias_dtyp": [786, 788, 1907], "fuse_conv2d_relu": 786, "is_qat": [786, 787], "convrelu2d": [786, 1907], "linear_config": 786, "set_observation_typ": [786, 787, 855], "output_use_different_observer_as_input": [786, 787, 790, 855, 1907], "add_dtype_config": [786, 787, 855], "set_root_modul": [786, 787], "set_qat_modul": [786, 787], "set_reference_quantized_modul": [786, 787], "conv_relu_config": 786, "set_fused_modul": [786, 787], "set_fuser_method": [786, 787], "fused_conv_relu_config": 786, "set_backend_pattern_config": [786, 855], "from_dict": [786, 787, 788, 809, 810, 811, 848], "backend_config_dict": [786, 1905], "set_nam": 786, "to_dict": [786, 787, 788, 809, 810, 811, 848], "backendconfig": [787, 812, 853, 855, 1908], "dtype_config": [787, 1907], "backend_pattern_config_dict": 787, "observation_typ": [787, 1907], "qat_modul": [787, 1907], "reference_quantized_modul": 787, "fused_modul": [787, 1907], "fuser_method": [787, 808, 1907], "pattern_complex_format": 787, "set_dtype_config": 787, "fuse_linear_relu": 787, "linearrelu": [787, 1907], "8bea7180a8ba3c279f2c9b050f2a69a6": 787, "understood": [787, 934], "output_share_observer_with_input": [787, 790, 1907], "renam": [787, 1858, 1873, 1874, 1900], "quantdequantstub": 787, "set_pattern": 787, "is_dynam": [788, 820, 1907], "quant1": 788, "dequant1": 788, "fp32_linear": 788, "quant2": 788, "dequant2": 788, "bracket": [788, 1911], "dtype_config1": 788, "dtype_config2": 788, "dtypewithconstraint": [788, 1907], "quant_min_lower_bound": [788, 789, 1907], "quant_max_upper_bound": [788, 789, 1907], "255": [788, 796, 1074, 1075, 1113, 1518, 1529, 1587, 1905, 1907, 1919], "input_dtype_with_constraint": 788, "scale_min_lower_bound": [788, 789, 1907], "scale_max_upper_bound": [788, 789, 1907], "dtype_config_dict": 788, "bias_typ": [788, 855], "scale_exact_match": [789, 1907], "zero_point_exact_match": [789, 1907], "quant_min": [789, 793, 796, 813, 814, 815, 816, 819, 820, 1074, 1075, 1858, 1905], "quant_max": [789, 793, 796, 813, 814, 815, 816, 819, 820, 1074, 1075, 1858, 1905], "fixedqparamsobserv": 789, "fixedqparamsfakequant": 789, "input_output_not_observ": [790, 1907], "maxpool": [790, 1367, 1368, 1513, 1514, 1898], "remove_qconfig": 791, "is_refer": 791, "convert_custom_config_dict": [791, 809, 1905], "from_observ": [791, 809, 1905], "observed_to_quantized_custom_module_class": [791, 809, 1905], "observedcustommodul": [791, 809, 811, 832, 1905], "quantizedcustommodul": [791, 809], "calib_data": 792, "fake_quant": [793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 856, 1074, 1075, 1924], "movingaverageminmaxobserv": [793, 796, 816], "observer_kwarg": [793, 796], "x_out": [793, 796], "fake_quant_en": 793, "observer_en": 793, "calculate_qparam": [794, 813, 814, 818], "qscheme": [796, 813, 814, 815, 816, 819, 820, 821, 1858, 1900, 1905, 1908, 1921], "fake_qu": [797, 801, 802, 803, 1905], "default_fake_qu": 798, "default_per_channel_weight_fake_qu": 799, "default_weight_fake_qu": 800, "histogram": [801, 813, 825, 1147, 1149, 1858, 1900, 1919], "memoryless": [802, 803], "averaging_const": [802, 803, 815, 816, 1858], "modules_to_fus": 808, "fuser_func": 808, "fuse_known_modul": 808, "fuse_custom_config_dict": [808, 810], "convmodul": 808, "bnmodul": 808, "convbnmodul": 808, "additional_fuser_method_map": 808, "fuse_conv_bn": [808, 1907], "conv1": [808, 1198, 1419, 1447, 1857, 1905, 1919], "bn1": 808, "relu1": [808, 1447, 1590], "fused_m": 808, "custom_config": [809, 810, 811, 812], "convert_fx": [809, 1905, 1924], "convert_custom_config": [809, 853, 1905], "set_observed_to_quantized_map": 809, "set_preserved_attribut": [809, 810, 811], "attr1": [809, 810, 811, 1898], "attr2": [809, 810, 811, 1898], "floatcustommodul": [809, 811], "weight_onli": [809, 853, 1905], "preserved_attribut": [809, 810, 811], "observed_class": [809, 811], "quantized_class": 809, "quant_typ": [809, 811], "quanttyp": [809, 811], "fuse_fx": [810, 1905], "fuse_custom_config": [810, 854], "convertcustomconfig": [810, 853], "prepare_fx": [811, 834, 853, 856, 1905, 1924], "prepare_qat_fx": [811, 853, 1905], "prepare_custom_config": [811, 812, 855, 856, 1905], "set_standalone_module_nam": 811, "module1": [811, 848, 1883], "qconfig_map": [811, 812, 848, 849, 850, 853, 855, 856, 1905], "child_prepare_custom_config": 811, "set_standalone_module_class": 811, "mystandalonemodul": 811, "set_float_to_observed_map": 811, "set_non_traceable_module_nam": 811, "module2": [811, 848, 1883], "module3": [811, 1883], "set_non_traceable_module_class": 811, "nontraceablemodule1": 811, "nontraceablemodule2": 811, "set_input_quantized_index": 811, "set_output_quantized_index": 811, "prepare_custom_config_dict": [811, 832, 834, 1905], "standalone_module_nam": 811, "standalone_module_class": 811, "module_class": 811, "float_to_observed_custom_module_class": [811, 832, 1905], "non_traceable_module_nam": 811, "non_traceable_module_class": 811, "input_quantized_idx": 811, "output_quantized_idx": 811, "float_class": 811, "qconfigmap": [812, 849, 850, 853, 855, 1905, 1908], "preparecustomconfig": [812, 855], "2048": [813, 1462, 1464, 1466, 1883], "upsample_r": 813, "per_tensor_affin": [813, 814, 815, 1707, 1708, 1709, 1710, 1905, 1908], "reduce_rang": [813, 814, 815, 816, 819, 821, 1858, 1905, 1906], "factory_kwarg": [813, 814, 819], "1920928955078125e": [813, 814, 815, 816, 819], "finfo": [813, 814, 815, 816, 819, 1241, 1244, 1323, 1855, 1921], "minmaxobserv": [813, 815, 819, 835, 855, 856, 1908], "x_": [814, 815, 959, 1070, 1260, 1261, 1263, 1266, 1274, 1336, 1355, 1409, 1426, 1452, 1454, 1574, 1782, 1784, 1826, 1880, 1908, 1915], "q_": [814, 1908], "x_orig": 814, "reset_min_max_v": [814, 819], "ch_axi": [816, 819, 1858], "per_channel_affin": [816, 819, 1706, 1905, 1908], "custom_op_nam": [817, 820], "with_arg": [818, 835, 855, 856], "_callable_arg": 818, "_with_arg": 818, "foo_build": 818, "foo_instance1": 818, "foo_instance2": 818, "with_callable_arg": 818, "_with_callable_arg": 818, "cur_tim": 818, "get_time_func": 818, "dan": 818, "creation_tim": 818, "compute_dtyp": 820, "ptq": [825, 1905, 1906, 1908], "obs_dict": 831, "get_observer_state_dict": 831, "allow_list": [832, 1923], "observer_non_leaf_module_list": 832, "preemptiv": [832, 833, 1599], "custommodul": [832, 1905], "propagate_qconfig_": 834, "qconfig_dict": [834, 848], "my_qconfig": 835, "default_observ": 835, "default_qat_config": 841, "set_glob": [848, 853, 855, 1905], "set_object_typ": [848, 853, 855], "set_module_name_regex": 848, "regex": 848, "set_module_nam": [848, 853, 855], "set_module_name_object_type_ord": 848, "global_qconfig": 848, "qconfig1": 848, "qconfig2": 848, "qconfig3": 848, "object_typ": 848, "module_name_regex": 848, "module_name_object_type_ord": 848, "conv0": 848, "x86": [849, 850, 1749, 1905, 1907], "run_arg": [851, 857], "qconfig_spec": 852, "quantize_fx": [853, 854, 855, 856, 1905, 1924], "_remove_qconfig": 853, "qconfig_from_prepar": 853, "prepared_model": [853, 855, 856], "xnnpack": [853, 1868, 1905], "get_default_backend_config": [853, 855, 856], "quantized_model": 853, "fusion_pattern": 854, "fusecustomconfig": 854, "_equalization_config": 855, "get_default_qconfig_map": [855, 1905], "float_model": [855, 856, 1923], "data_load": [855, 856, 1680, 1686, 1893], "get_default_qconfig": [855, 856, 1905], "linear_pattern_config": 855, "suer": 855, "sample_inference_data": 855, "get_default_qat_qconfig_map": [856, 1905], "load_weight": 856, "train_data": 856, "get_default_qat_qconfig": [856, 1905], "custom_module_class_map": 858, "lceil": [859, 936], "rceil": [859, 936], "gap": [859, 1720, 1855, 1905], "adjac": [859, 926, 1358, 1359, 1360, 1364, 1720, 1914], "set_default_tensor_typ": [859, 916, 925, 1061, 1063, 1073, 1078, 1096, 1114, 1134, 1144, 1145, 1206, 1257, 1273, 1650, 1713, 1715, 1717, 1719, 1720, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1787, 1788, 1789, 1790, 1791, 1792, 1830, 1832, 1852], "get_default_dtyp": [859, 1257, 1273, 1655, 1720, 1916, 1917, 1926], "5000": [859, 874, 880, 881, 882, 918, 942, 1078, 1080, 1081, 1088, 1091, 1096, 1106, 1108, 1109, 1110, 1140, 1146, 1149, 1212, 1238, 1257, 1314, 1316, 1344, 1345, 1363, 1471, 1705, 1709, 1710, 1711, 1720, 1724, 1915, 1920], "3398": 868, "2663": [868, 1883], "2686": 868, "2450": 868, "7401": 868, "8805": 868, "3402": 868, "1936": 868, "4907": [868, 1274], "3948": [868, 954], "0691": 868, "3132": 868, "6092": 868, "5419": 868, "2993": [868, 1804], "3195": 868, "1139": 869, "2254": 869, "1381": [869, 1804], "3687": 869, "0100": [869, 1240, 1706], "1975": [869, 1875], "0102": 869, "4732": 869, "9240": 869, "1207": [869, 1308], "7506": 869, "0213": 869, "7809": 869, "2960": 869, "9384": 869, "1438": 869, "ascend": [870, 1080, 1223, 1225, 1254, 1307, 1740, 1778, 1837], "0785": 870, "5267": 870, "8521": 870, "4065": 870, "1598": 870, "0788": 870, "0745": 870, "2700": 870, "2208": 870, "0722": 870, "7064": 870, "2564": 870, "0669": 870, "2318": 870, "8229": 870, "9280": 870, "lexicograph": [871, 1645, 1860, 1914], "9039": 872, "6291": 872, "0795": [872, 1705, 1891], "1586": 872, "1939": 872, "4900": 872, "7503": 872, "9355": 872, "histori": [873, 874, 1126, 1664, 1819, 1867, 1875, 1885, 1887, 1911], "dlpack": [874, 1111, 1855], "frombuff": 874, "data_ptr": [874, 1873, 1916, 1918], "addbackward0": [874, 1891, 1896], "__array_interface__": 874, "5962": 875, "4985": 875, "4396": 875, "4525": [875, 1875], "6387": 875, "4552": 875, "sine": [876, 1761, 1771, 1773], "1606": 876, "4267": 876, "0899": 876, "0250": 876, "1599": 876, "1534": 876, "9435": 876, "8990": [876, 1055], "arctang": [877, 878], "2341": 877, "2539": 877, "6256": 877, "6448": 877, "2299": 877, "2487": 877, "5591": [877, 899], "5727": 877, "quadrant": 878, "9041": [878, 935], "0196": [878, 935], "3108": [878, 935], "4423": [878, 935], "9833": 878, "0811": 878, "9743": 878, "4151": 878, "tangent": [879, 889, 890, 1123, 1124, 1459, 1817, 1818], "9385": 879, "2968": 879, "8591": 879, "1871": 879, "7253": 879, "3060": 879, "2899": 879, "1893": 879, "needs_input_grad": [883, 1885], "setup_context": [884, 1886], "save_for_forward": [884, 1886], "grad_input": [885, 892, 894, 907, 1187, 1419, 1595, 1885, 1891], "underneath": 886, "generate_vmap_rul": [886, 1886], "out_dim": [886, 1128, 1847, 1858, 1874, 1886], "grad_tensor": [887, 901, 1858, 1883], "grad_vari": 887, "forward_ad": 888, "dual": [888, 889, 890, 1644, 1886], "make_du": [888, 890], "your_fn": 888, "unpack_du": [888, 889], "grad_aft": 888, "dual_level": [889, 890], "primal": [890, 1119, 1123, 1124, 1127], "x_npy": 891, "once_differenti": [891, 892, 893, 894, 1885], "g1": [892, 894, 1883, 1912], "g2": [892, 894, 1883, 1912], "oppos": [893, 1886], "weren": 893, "grad_out": [893, 1856, 1858, 1888], "gx": 893, "gy": 893, "gz": 893, "simplefunc": 894, "outer_jacobian_strategi": 895, "disconnect": [895, 896, 897, 898, 899, 900], "said": [895, 896, 897, 898, 899, 900, 1867, 1894], "cliff": [895, 897, 901], "_debug_only_display_vmap_fallback_warn": [895, 901], "pow_reduc": [895, 896, 899], "2265": 895, "8221": 895, "9456": [895, 917], "2550": 895, "viewbackward": [895, 897], "pow_adder_reduc": [895, 896, 899], "func_output": [896, 898, 899, 900], "1448": 896, "0239": 896, "6456": 896, "4988": 896, "4310": 896, "sumbackward0": [896, 899], "3030": 896, "vhp": 896, "batched_grad": 897, "exp_reduc": [897, 898, 900], "4917": 897, "4352": 897, "4369": 897, "3799": 897, "exp_add": 897, "8052": 897, "3963": 897, "3090": 898, "6742": 898, "9114": 898, "2106": 898, "sumbackward1": [898, 900], "squeezebackward1": 898, "adder": [898, 900], "2399": 898, "5005": 898, "0689": 899, "2431": 899, "0989": 899, "4456": 899, "8053": [899, 1735], "7817": 900, "2458": 900, "7830": 900, "7782": 900, "4458": 900, "3962": 900, "3042": [900, 1244], "6354": 900, "1288": [900, 1764], "0652": 900, "5483": 900, "5035": 900, "2046": [900, 954], "1292": 900, "1432": 900, "3059": 900, "3225": 900, "6652": 900, "7753": 900, "0152": 900, "4225": 900, "3340": 900, "only_input": 901, "allow_unus": [901, 1858], "is_grads_batch": 901, "materialize_grad": 901, "require_grad": [901, 1860, 1880], "06": [902, 903, 1227, 1232, 1233, 1244, 1245, 1250, 1373, 1428, 1467, 1470, 1515, 1584, 1659, 1673, 1805, 1858, 1921], "raise_except": [902, 903], "check_sparse_nnz": 902, "nondet_tol": [902, 903], "check_undefined_grad": [902, 903], "check_grad_dtyp": [902, 903], "check_batched_grad": [902, 903], "check_batched_forward_grad": 902, "check_forward_ad": 902, "check_backward_ad": 902, "fast_mod": [902, 903, 1888], "differenc": [902, 1885], "perturb": [902, 903, 1888], "sparsetensor": [902, 1790], "gradgradcheck": [902, 1885], "gen_non_contig_grad_output": 903, "check_fwd_over_rev": 903, "check_rev_over_rev": 903, "noncontigu": [903, 1003, 1921], "inaccuraci": 903, "clonebackward0": 905, "gi": [907, 908, 1891], "removablehandl": [907, 908, 1187, 1419, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1902], "eventlist": [910, 911], "chrome": [910, 1904], "group_by_stack_n": [911, 1904], "roof": 911, "functioneventavg": [911, 913], "window_length": [916, 925, 1144, 1145, 1206, 1858], "2n": [916, 1759], "trim": [916, 925, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1144, 1145, 1184], "_length": [916, 925, 1144, 1145, 1184, 1342, 1801], "sim": [917, 1433, 1561, 1697, 1717], "pseudorandom": [917, 1309, 1647, 1694, 1697, 1713, 1715, 1717, 1719, 1806], "1737": 917, "0950": [917, 1783], "3609": 917, "7148": 917, "0289": [917, 1829], "2676": 917, "8937": 917, "7202": 917, "2500": [918, 1078, 1080, 1081, 1091, 1096, 1257, 1471, 1711], "7500": [918, 1081, 1091, 1110, 1140, 1242, 1257, 1471, 1711, 1767], "AND": [919, 1268, 1860, 1880], "OR": [922, 1270, 1860], "xor": [924, 1271, 1860], "blackman": [925, 1769], "arrang": 926, "broadcast_tensor": [928, 1858, 1900], "out_int32": [931, 1740, 1858], "formal": [931, 1740, 1867, 1874], "tensor_a": [933, 946], "tensor_b": 933, "6580": 934, "0969": 934, "4614": 934, "1034": [934, 1060], "5790": 934, "1497": 934, "x2": [935, 1234, 1411, 1467, 1468, 1500, 1557, 1858], "compute_mod": 935, "use_mm_for_euclid_dist_if_necessari": 935, "distanc": [935, 1184, 1222, 1223, 1250, 1379, 1428, 1467, 1468, 1558, 1680, 1801, 1805, 1855], "infti": [935, 1184, 1238, 1335, 1387, 1388, 1450, 1558, 1671, 1915], "use_mm_for_euclid_dist": 935, "donot_use_mm_for_euclid_dist": 935, "minkowski": [935, 1558], "ham": [935, 1144, 1558, 1765], "closest": [935, 1558], "xn": [935, 1558], "4821": [935, 938], "059": 935, "0590": 935, "1763": [935, 1723], "4713": [935, 1723], "6986": [935, 1723], "3702": [935, 1723], "1193": [935, 1276], "0959": 935, "7138": 935, "8322": 935, "2830": [935, 1831], "3791": 935, "6341": 936, "4208": 936, "0900": 936, "5826": 936, "clr": [937, 1680], "3375": 937, "9790": 937, "1119": 937, "6577": 937, "5609": [937, 1509], "5095": 937, "2614": 937, "4038": 937, "3378": [937, 1831], "4982": 937, "2457": [937, 1289], "2561": 937, "4684": 937, "7163": 937, "9647": 937, "8917": [937, 1267], "3213": [937, 1263], "2284": [937, 1040], "8615": 937, "2816": 937, "tu": 938, "mt": [938, 939, 1216, 1223, 1225, 1229, 1230, 1231, 1236, 1245, 1704, 1805, 1858, 1867, 1900, 1918, 1920], "4112": 938, "7486": 938, "4551": 938, "3544": 938, "6724": 938, "5528": 938, "0592": [938, 1891], "9371": 938, "5487": 938, "7023": 938, "03": [938, 939, 1264, 1762, 1763, 1768], "3842e": [938, 1232], "dpotri": 939, "spotri": 939, "uu": 939, "9935": 939, "6353": 939, "5806": 939, "8769": 939, "7183": [939, 1238, 1891], "6618": 939, "9314": 939, "2251": [939, 960, 1219, 1261], "0889": 939, "4439": 939, "2122": 939, "1412": 939, "5894e": 939, "semidefinit": 940, "7747": 940, "9549": 940, "3086": 940, "4114": 940, "8733": 940, "6355": 940, "9891": 940, "1974": 940, "4706": 940, "4115": 940, "6225": 940, "1625": 940, "6097": 940, "8398": 940, "2387": [940, 955], "3771": [940, 1233], "4173": 940, "1626": [940, 960, 1219], "tensor_split": [941, 1058, 1150, 1848, 1858, 1900, 1918], "min_valu": [942, 1378], "max_valu": [942, 1378, 1858], "_valu": [942, 1327, 1604, 1790, 1885, 1900, 1914], "7120": 942, "1734": [942, 1161], "0478": [942, 1850], "0922": 942, "3333": [942, 1140, 1149, 1471, 1472, 1819], "hstack": [945, 1858, 1900, 1914], "with_replac": [946, 1858], "combinations_with_replac": 946, "_glibcxx_use_cxx11_abi": 948, "flip": [952, 1101, 1102, 1254, 1856, 1858, 1900, 1901], "writeabl": [952, 953], "is_conj": [952, 1728, 1858, 1900], "geq": [954, 1131, 1218, 1226, 1355, 1405, 1426, 1427, 1437, 1501, 1553, 1606, 1878, 1915], "signbit": [954, 1856, 1858, 1900, 1914], "2557": 954, "0026": 954, "5387": 954, "4740": 954, "9244": 954, "7079": 954, "2778": 954, "0249": [954, 1262], "5719": 954, "0059": 954, "2600": 954, "4475": 954, "9567": [954, 1222, 1804], "5757": 954, "1751": 954, "0742": 954, "2998": 954, "1054": 954, "2373": 954, "3190": [954, 1883], "1128": [954, 1244, 1389], "pearson": 955, "coeffici": [955, 1144, 1659, 1661, 1662, 1663, 1665, 1671, 1675, 1764, 1765, 1766, 1828], "r_": [955, 1821], "ij": [955, 1060, 1266, 1274, 1288, 1422, 1782], "c_": [955, 1347, 1348, 1349, 1350, 1351, 1352, 1389, 1431, 1432], "jj": 955, "hermitian": [955, 1076, 1077, 1079, 1081, 1082, 1083, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1216, 1217, 1222, 1223, 1225, 1229, 1230, 1231, 1241, 1244, 1250, 1858], "cov": [955, 1858, 1900], "2678": [955, 1362], "0908": 955, "3766": 955, "2780": 955, "5812": 955, "1535": [955, 1362], "2350": 955, "3582": 955, "4309": 956, "2706": 956, "8562": 956, "9796": [956, 1232], "1395": 956, "2957": 956, "6553": 956, "5574": 956, "1632": 957, "1835": 957, "6979": 957, "7325": [957, 1050], "0133": 957, "7860": 957, "2536": 957, "2805": 957, "sleef": [957, 1773], "unbias": [959, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1391, 1458, 1799, 1800, 1842, 1843, 1856, 1858], "_w": 959, "y_": [959, 1070, 1260, 1261, 1263, 1336, 1355, 1385, 1782, 1826, 1880, 1915], "w_i": [959, 1226], "mu_x": 959, "mu_i": [959, 1665], "whichev": [959, 1128, 1518, 1705, 1847, 1883], "w_ix_": 959, "bessel": [959, 1206, 1768, 1799, 1800, 1842, 1843, 1915], "corrcoef": [959, 1858, 1900], "6667": [959, 1149, 1471, 1472, 1725, 1759, 1896], "fw": 959, "4282": 959, "0255": [959, 1047], "4144": [959, 1883], "4169": 959, "3956": [960, 1219], "1455": [960, 1219, 1897], "6895": [960, 1219], "5849": [960, 1219], "3599": [960, 1219], "7180": [960, 1219], "0521": [960, 1219], "1339": [960, 1219], "0225": [960, 1219, 1232], "0257": [960, 1219], "4725": [960, 1219], "1479": [960, 1219], "7005": [960, 1219], "9757": [960, 1219], "3904": [960, 1219], "3726": [960, 1219], "1836": [960, 1219], "9688": [960, 1219], "7153": [960, 1219, 1915], "2159": [960, 1219], "0844": [960, 1219], "5281": [960, 1219], "6120": [960, 1219], "4490": [960, 1219], "5687": [960, 1219], "9792": [960, 1041, 1219], "8304": [960, 1219], "3037": [960, 1219, 1891], "5650": [960, 1219], "2329": [960, 1219], "9883": [960, 1219], "0551": [960, 1219], "capture_begin": [961, 1883], "make_graphed_cal": [961, 1883], "graph_pool_handl": [961, 995], "other_graph_inst": [961, 995], "capture_end": [961, 1883], "debug_dump": 961, "debug_path": 961, "enable_debug_mod": 961, "path_to_so_fil": 962, "alloc_fn_nam": 962, "free_fn_nam": 962, "ctype": 962, "change_current_alloc": [962, 1883], "ssize_t": [962, 1883], "cudastream_t": [962, 964, 1883], "ptr": [962, 1883], "size_t": 962, "oss": 962, "enable_tim": [963, 1883], "interprocess": 963, "marker": 963, "elapsed_tim": [963, 1883], "end_ev": [963, 1883], "elaps": [963, 1870], "from_ipc_handl": 963, "reconstruct": [963, 1276, 1335, 1336, 1888, 1896, 1902], "ipc": [963, 999], "ipc_handl": 963, "proceed": [963, 1373, 1911, 1912], "cudaeventsynchron": 963, "cudastreamwaitev": [963, 964, 966], "stream_ptr": 964, "record_ev": [964, 966], "cudastreamsynchron": [964, 966], "wait_ev": [964, 966], "interoper": 968, "caching_allocator_delet": 968, "mem_ptr": 969, "caching_allocator_alloc": 969, "peer_devic": 970, "_cudaalloc": 971, "clock": 972, "sm": 972, "hertz": 972, "smi": [972, 985, 1013, 1019, 1023, 1037, 1038, 1883, 1887, 1889], "buffer_s": 974, "10485760": 974, "chunk_siz": [977, 1122, 1128, 1847], "cublashandle_t": 978, "unoccupi": [985, 1297], "pytorch_cuda_alloc_conf": [986, 1883], "cudamallocasync": [986, 1017, 1883], "_cudadeviceproperti": 990, "gencod": 991, "cuda_graph": 995, "ordinari": [997, 1599, 1879], "code_str": [1003, 1004], "temp": 1003, "typenam": [1003, 1004], "my_kernel": [1003, 1004], "jitted_fn": [1003, 1004], "create_jit_fn": [1003, 1004], "util_fn": 1003, "gelu": [1003, 1448, 1462, 1464, 1466, 1571, 1856, 1858, 1875, 1900], "my_gelu": 1003, "my_lib": [1003, 1864, 1897], "impl": [1003, 1864], "num_output": 1004, "sample_arg": 1006, "num_warmup_it": 1006, "allow_unused_input": 1006, "datadistributedparallel": 1006, "manual_seed_al": 1007, "occupi": [1009, 1013, 1024, 1295, 1407, 1536, 1883, 1889, 1926], "reset_peak_memory_stat": [1009, 1011, 1024, 1025], "max_memory_reserv": [1010, 1883, 1889], "cudamemgetinfo": 1012, "memory_reserv": [1014, 1883, 1889], "snapshot": [1016, 1860, 1883, 1889], "large_pool": 1017, "small_pool": 1017, "allocated_byt": 1017, "cudamalloc": [1017, 1883], "reserved_byt": 1017, "active_byt": 1017, "inactive_split": 1017, "inactive_split_byt": 1017, "octob": 1017, "1mb": 1017, "num_alloc_retri": 1017, "num_oom": 1017, "assist": [1017, 1884], "max_split_s": 1017, "oversize_alloc": 1017, "oversize_seg": 1017, "requested_byt": 1017, "abbrevi": 1018, "percent": [1019, 1038], "msg": [1020, 1022, 1904, 1921], "instantan": [1020, 1904], "ascii": [1020, 1022, 1258, 1860, 1904], "sensor": [1023, 1037], "mw": 1023, "milliwatt": 1023, "fermi": 1023, "max_memory_alloc": [1024, 1883, 1889], "max_memory_cach": 1025, "memory_stat": [1026, 1883, 1889], "seed_al": 1027, "environment": 1029, "total_memori": [1030, 1304], "debug_mod": [1034, 1747], "streamcontext": [1035, 1855], "centigrad": 1037, "x_1": [1039, 1040, 1041, 1042, 1254, 1340, 1353, 1354, 1489, 1500, 1826], "x_2": [1039, 1040, 1041, 1042, 1254, 1340, 1353, 1354, 1489, 1500], "x_3": [1039, 1040, 1041, 1042, 1254], "3449": 1039, "5447": 1039, "0685": 1039, "5104": [1039, 1883], "1706": 1039, "2259": 1039, "4696": 1039, "3284": 1039, "9946": 1039, "8209": [1039, 1042], "6628": 1040, "0975": 1040, "2680": [1040, 1882], "3298": [1040, 1047], "4220": 1040, "3885": 1040, "1762": 1040, "9165": 1040, "6684": [1040, 1164], "6001": 1041, "2069": 1041, "1919": 1041, "6727": [1041, 1054], "0062": 1041, "4126": 1041, "2129": 1041, "4206": 1041, "1968": [1041, 1915], "1241": 1041, "0238": 1041, "0233": [1041, 1712], "0157": 1041, "0158": [1041, 1805], "0065": 1041, "0014": [1041, 1915], "0006": 1041, "8286": 1042, "4890": 1042, "5155": 1042, "8443": 1042, "1865": 1042, "1752": [1042, 1050], "0595": 1042, "1850": 1042, "1571": [1042, 1891, 1896], "4243": 1042, "3175": 1042, "8020": [1042, 1702], "0423": 1042, "2289": 1042, "0537": 1042, "0058": 1042, "9780": 1042, "trapezoid": [1043, 1827, 1858, 1900], "360": 1044, "2832": 1044, "diagflat": [1047, 1858, 1900], "5950": 1047, "0872": 1047, "4264": 1047, "1064": [1047, 1891], "8795": 1047, "2429": 1047, "1374": 1047, "1029": 1047, "6482": 1047, "6300": 1047, "5410": 1048, "2934": 1048, "1788": [1048, 1915], "5684": 1048, "0845": [1048, 1773, 1891], "3986": 1048, "2956": [1049, 1219], "9068": 1049, "1695": 1049, "2094": [1049, 1883], "3018": 1049, "1516": 1049, "9342": 1049, "0854": 1050, "1431": 1050, "8536": 1050, "0905": 1050, "0360": [1050, 1308], "6927": 1050, "3735": 1050, "4945": 1050, "2631": [1050, 1307, 1883], "3755": 1050, "5977": 1050, "8172": 1050, "1065": [1050, 1891], "0401": 1050, "2235": [1050, 1804], "7938": 1050, "3081": 1050, "6166": 1050, "2335": 1050, "0500": 1050, "7336": 1050, "3836": 1050, "1015": 1050, "emb": [1051, 1743, 1774], "5393": 1054, "8675": 1054, "5916": 1054, "6321": 1054, "0967": 1054, "0511": 1054, "6295": 1054, "8360": 1054, "6973": 1054, "6537": 1054, "dividend": [1055, 1105, 1108, 1724, 1833], "true_divid": [1055, 1858, 1900], "3810": [1055, 1148], "2774": 1055, "2972": 1055, "3719": 1055, "4637": 1055, "7620": 1055, "5548": 1055, "5944": 1055, "7438": 1055, "9274": 1055, "3711": 1055, "9353": 1055, "4605": 1055, "2917": 1055, "1815": [1055, 1267], "0111": [1055, 1762], "9805": 1055, "5923": 1055, "1062": 1055, "4581": [1055, 1226], "7759": 1055, "2344": 1055, "1830": 1055, "0313": 1055, "1908": 1055, "4757": 1055, "8032": 1055, "2930": 1055, "8113": 1055, "2308": 1055, "4620": [1055, 1850], "6051": 1055, "5676": 1055, "2639": 1055, "2260": 1055, "4509": [1055, 1240], "2086": 1055, "1322": 1055, "9764": 1055, "9564": 1055, "3484": 1055, "2278": 1055, "1068": [1055, 1161], "4678": 1055, "3938": [1055, 1814], "depthwis": [1058, 1059, 1347, 1348, 1349], "atleast_3d": [1059, 1858, 1900], "operand": [1060, 1860, 1861, 1885, 1914, 1917], "notat": [1060, 1385, 1753, 1861, 1891, 1920], "einstein": 1060, "summat": [1060, 1184, 1266, 1274, 1914], "subscript": [1060, 1861], "jk": 1060, "ik": [1060, 1259, 1782], "za": 1060, "alphabet": [1060, 1502, 1910], "arrow": [1060, 1912], "ki": 1060, "ellipsi": [1060, 1860, 1861, 1874], "fourth": 1060, "whitespac": [1060, 1861], "opt_einsum": [1060, 1855], "_the_": 1060, "bypass": [1060, 1864, 1875, 1883], "disclaim": 1060, "52": 1060, "op1": [1060, 1860], "sublist1": 1060, "op2": [1060, 1860], "sublist2": 1060, "subslist_out": 1060, "2104": 1060, "7952": 1060, "2433": 1060, "4545": 1060, "1156": 1060, "2897": [1060, 1891], "3918": 1060, "4963": 1060, "3744": 1060, "9381": 1060, "2685": 1060, "6070": 1060, "7208": 1060, "8058": 1060, "4419": 1060, "0936": 1060, "1713": 1060, "4291": 1060, "5802": 1060, "7350": [1060, 1915], "5704": 1060, "4290": 1060, "9323": 1060, "4480": 1060, "bij": 1060, "bjk": 1060, "bik": 1060, "0564": 1060, "5904": 1060, "2023": 1060, "1271": 1060, "6706": [1060, 1705], "8097": 1060, "8025": 1060, "1183": 1060, "2239": [1060, 1246], "3107": 1060, "5756": 1060, "2354": 1060, "4558": 1060, "3460": 1060, "5087": 1060, "8530": [1060, 1344, 1474], "8153": 1060, "8787": 1060, "3839": [1060, 1846], "2112": [1060, 1829], "3728": 1060, "1131": [1060, 1702], "0921": 1060, "8305": 1060, "ji": 1060, "anm": 1060, "bm": 1060, "ba": 1060, "3430": [1060, 1267], "2405": 1060, "4494": 1060, "3311": 1060, "5201": 1060, "0356": 1060, "4064e": 1061, "8000e": 1061, "3493e": 1061, "5751e": 1061, "1428e": 1061, "5955e": 1061, "9683e": 1063, "1239e": 1063, "0705e": 1063, "set_grad_en": [1064, 1858, 1900, 1922], "parenthesi": [1064, 1162, 1644], "doubler": [1064, 1644], "elsewher": [1065, 1073, 1131, 1143, 1177, 1179, 1180, 1183, 1211, 1275, 1320, 1783, 1854], "_max": [1074, 1075, 1905], "_min": [1074, 1075, 1905], "nearbi": [1074, 1075], "_int": [1074, 1075], "_point": [1074, 1075], "2525": 1074, "0466": 1074, "3491": [1074, 1240], "2168": [1074, 1821], "5906": [1074, 1915], "6258": 1074, "6444": 1074, "0542": 1074, "0475": [1074, 1915], "0486": 1074, "3405": 1074, "6134": [1074, 1289], "6323": 1074, "0552": 1075, "9730": 1075, "3973": 1075, "0780": 1075, "4000": [1075, 1078, 1087, 1096, 1471, 1708, 1759], "6000": [1075, 1462, 1464, 1466, 1471, 1708, 1756, 1759], "fourier": [1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1184, 1769, 1801, 1855], "rfft": [1076, 1081, 1091, 1095, 1096, 1097], "compact": [1076, 1077, 1079, 1229, 1231, 1234, 1885, 1898, 1905], "chalf": [1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1091, 1092, 1093, 1858, 1900, 1920], "sm53": [1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097], "ortho": [1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1259], "orthonorm": [1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1250, 1606, 1805], "ifft": [1076, 1080, 1081, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093], "fftn": [1077, 1080, 1086, 1089, 1097], "rfft2": [1077, 1092], "ifft2": [1077, 1089], "two_fft": [1077, 1079, 1089, 1095, 1097], "check_strid": [1077, 1079, 1080, 1085, 1086, 1091, 1092, 1093, 1095, 1097, 1921], "nyquist": [1078, 1080, 1088, 1090, 1094, 1095, 1096, 1097], "i_1": [1079, 1097, 1207], "i_n": [1079, 1097, 1128, 1207, 1821, 1847], "rfftn": [1079, 1083, 1089, 1093, 1095], "ifftn": [1079, 1085, 1090], "rearrang": [1080, 1087, 1343, 1431, 1432, 1559, 1560, 1874], "fftfreq": [1080, 1087, 1096], "9000": [1080, 1819], "8000": [1080, 1314, 1471, 1705, 1759], "uncent": 1080, "ifftshift": 1080, "x_center": 1080, "x_uncent": 1080, "fft_uncent": 1080, "fft_center": 1080, "x_centered_2": 1080, "ihfft": [1081, 1089, 1090], "irfft": [1081, 1093, 1094], "symmetri": [1081, 1083, 1801], "opposit": [1081, 1083, 1805, 1825], "transformed_dim_s": [1081, 1091], "0000j": [1081, 1088, 1091, 1216, 1217, 1222, 1223, 1225, 1698, 1756], "1250": [1081, 1307], "1720j": 1081, "0406j": 1081, "2809": 1081, "6250": [1081, 1091, 1110, 1471], "9691": 1081, "hfftn": [1082, 1090], "last_dim_s": [1082, 1083, 1092, 1093, 1856], "ihfft2": 1082, "roundtrip": [1082, 1083, 1091, 1092, 1093], "ihfftn": [1083, 1089], "irfftn": [1083, 1092, 1097], "fft2": [1085, 1095], "two_ifft": [1085, 1086, 1090], "fftshift": 1087, "hfft": 1088, "6882j": 1088, "1625j": 1088, "hfft2": 1089, "8602j": 1091, "2031j": 1091, "1562": 1091, "3511": 1091, "7812": 1091, "2114": 1091, "irfft2": 1095, "wider": [1103, 1857, 1860, 1901, 1914], "49": [1103, 1242, 1882], "2500e": 1103, "1000e": 1103, "7656e": 1103, "lfloor": [1104, 1109, 1327, 1332, 1333, 1334, 1347, 1348, 1349, 1366, 1387, 1388, 1412, 1413, 1414, 1470, 1471, 1472, 1473, 1487, 1556, 1720, 1801], "rfloor": [1104, 1109, 1327, 1332, 1333, 1334, 1347, 1348, 1349, 1366, 1387, 1388, 1412, 1413, 1414, 1470, 1471, 1472, 1473, 1487, 1556, 1720, 1801], "8166": 1104, "5308": 1104, "2530": 1104, "2091": 1104, "7000": [1106, 1363, 1758], "3000": [1107, 1362, 1758, 1883], "entrywis": [1108, 1724], "modulu": [1108, 1246, 1724], "operatornam": [1109, 1222, 1223, 1224, 1225, 1242, 1250, 1335, 1336, 1342, 1379, 1380, 1386, 1410, 1450, 1468, 1758], "8750": [1110, 1471], "char": [1113, 1655, 1873, 1916], "parameter_and_buffer_dict": 1116, "tie_weight": [1116, 1641], "submodule_nam": [1116, 1641], "parameter_nam": [1116, 1641], "ty": [1116, 1641], "foo_ti": [1116, 1641], "new_a": [1116, 1641], "mutlipl": 1116, "grad_weight": [1116, 1885], "detached_param": 1116, "parameters_and_buffer_dict": 1116, "reparamater": [1116, 1641], "paramat": 1116, "intermediate_upd": 1117, "mutations_and_view": 1117, "intermeid": 1117, "inpt": 1117, "out1": [1117, 1858], "out2": [1117, 1858], "f_trace": 1117, "f_no_mutations_trac": 1117, "f_no_mutations_and_views_trac": 1117, "a_1": [1117, 1207], "view_1": 1117, "view_copi": [1117, 1858, 1900, 1922], "view_copy_1": 1117, "as_strid": [1117, 1856, 1858, 1900, 1918], "writ": 1117, "native_funct": [1117, 1856], "yaml": [1117, 1856], "aux": [1118, 1119, 1121, 1122, 1123, 1127], "my_loss_func": 1118, "y_pred": [1118, 1883], "loss_per_sampl": 1118, "y_true": 1118, "autodiff": [1121, 1122, 1123, 1245], "jacobian_f": [1121, 1122], "f_x": [1121, 1122], "jacboian": [1121, 1122], "expectedx": [1121, 1122], "expectedi": [1121, 1122], "_preallocate_and_copi": 1122, "stand": [1123, 1127, 1859, 1902, 1912], "jvp_out": 1123, "jvp_fn": 1124, "requr": 1124, "optimiz": [1126, 1857], "l1": [1126, 1379, 1380, 1450, 1527, 1572, 1616, 1625, 1891, 1896], "l2": [1126, 1380, 1410, 1450, 1658, 1659, 1660, 1661, 1663, 1665, 1671, 1672, 1674, 1879], "vjpfunc": 1127, "unsuccessfulli": [1128, 1847], "rummag": [1128, 1847], "batched_dot": [1128, 1847], "imposs": [1128, 1847, 1879], "jacobian_row": [1128, 1847], "get_vjp": [1128, 1847], "n1": [1128, 1726, 1847], "n0": [1128, 1847], "batched_pow": [1128, 1847], "autobatch": [1128, 1847], "sparse_grad": [1129, 1856, 1858], "tau": [1132, 1226, 1520, 1660, 1674, 1691, 1692, 1762, 1858], "elementari": [1132, 1880, 1888], "reflector": [1132, 1606, 1692], "household": [1132, 1226, 1606, 1692], "householder_product": [1132, 1606, 1691], "gel": [1132, 1232], "set_default_dtyp": 1134, "set_deterministic_debug_mod": [1135, 1840], "edge_ord": [1140, 1858], "mathbb": [1140, 1216, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1232, 1233, 1236, 1238, 1245, 1247, 1249, 1250, 1355, 1426, 1606], "rightarrow": 1140, "interior": 1140, "theorem": 1140, "h_l": 1140, "h_r": 1140, "neighbor": [1140, 1184, 1471, 1473, 1801], "xi_1": 1140, "xi_2": 1140, "approx": [1140, 1806, 1888], "outermost": 1140, "80": [1140, 1242, 1684, 1753, 1883, 1901], "halv": 1140, "coord": 1140, "54": [1144, 1381, 1765], "46": [1144, 1764], "hann_window": [1144, 1801, 1858, 1862, 1900], "hann": [1145, 1765], "hist": [1148, 1149, 1858], "bin_edg": [1148, 1149, 1858], "9524": 1148, "leftmost": [1149, 1875], "leg": 1153, "triangl": [1153, 1919], "hypotenus": 1153, "4031": 1153, "gammainc": [1155, 1915], "gammaincc": [1156, 1915], "index_reduce_": [1160, 1858], "realloc": 1161, "1427": 1161, "0231": 1161, "5414": 1161, "0009": 1161, "4664": [1161, 1821], "2647": 1161, "1228": 1161, "6571": 1161, "7230": 1161, "6004": 1161, "inferencemod": [1162, 1880], "bump": 1162, "_version": [1162, 1900], "multidimension": [1164, 1256, 1382], "8173": 1164, "0874": 1164, "1784": 1164, "3279": 1164, "7894": 1164, "4682": 1164, "7159": 1164, "1506": 1164, "4034": 1164, "3657": 1164, "0387": 1164, "9892": 1164, "1774": 1164, "3261": 1164, "3917": 1164, "4537": [1164, 1590], "7493": 1164, "1724": 1164, "2291": 1164, "5749": 1164, "2267": 1164, "7920": 1164, "3607": 1164, "3701": 1164, "3666": 1164, "5850": [1164, 1217], "7242": 1164, "9837": 1164, "1560": 1164, "2907": 1164, "6785": 1164, "5671": [1164, 1218], "5452": 1164, "6912": 1164, "5509": 1164, "1782": 1164, "9843": 1164, "7366": 1164, "5672": [1164, 1647], "5115": 1164, "4864": 1164, "2476": 1164, "4337": 1164, "6347": 1164, "1748": 1164, "3567": [1164, 1217], "6558": 1164, "2469": [1164, 1891], "5787": [1164, 1267], "typecheck": [1174, 1900], "mypi": [1174, 1859, 1860], "warn_alwai": 1175, "set_warn_alwai": 1175, "nonfinit": 1176, "test_el": [1178, 1858], "assume_uniqu": [1178, 1858], "0j": [1183, 1844], "nola": 1184, "envelop": 1184, "hop": [1184, 1801], "shorter": [1184, 1898, 1910], "griffin": 1184, "ieee": [1184, 1373, 1769, 1894], "tran": 1184, "assp": 1184, "vol": [1184, 1373, 1769], "pp": [1184, 1373, 1769], "236": 1184, "apr": 1184, "1984": 1184, "slide": [1184, 1332, 1333, 1334, 1366, 1412, 1413, 1414, 1470, 1512, 1542, 1543, 1544, 1586, 1709, 1710, 1801], "fft_size": 1184, "scriptmodul": [1185, 1186, 1191, 1194, 1196, 1197, 1198, 1202, 1203, 1657, 1857, 1859, 1868, 1898], "implic": [1185, 1202, 1910, 1914], "attributemodul": 1185, "names_ag": 1185, "9223372036854775807": [1185, 1632, 1870], "get_debug_st": 1186, "graphexecutorst": 1186, "_extra_fil": [1186, 1187, 1194, 1197, 1890], "save_to_buff": 1186, "add_modul": [1187, 1419], "init_weight": [1187, 1419, 1891], "buf": [1187, 1419], "20l": [1187, 1419], "1l": [1187, 1419], "5l": [1187, 1419], "syntax": [1187, 1857, 1860, 1902], "code_with_const": 1187, "constmap": 1187, "extra_repr": [1187, 1419, 1885], "get_buff": [1187, 1419], "attributeerror": [1187, 1419, 1885, 1905], "get_extra_st": [1187, 1419], "set_extra_st": [1187, 1419], "get_paramet": [1187, 1419], "net_b": [1187, 1419], "net_c": [1187, 1419], "inlined_graph": 1187, "ipu": [1187, 1419], "missing_kei": [1187, 1419], "unexpected_kei": [1187, 1419], "remove_dupl": [1187, 1419], "named_children": [1187, 1419, 1891], "conv4": [1187, 1419], "conv5": [1187, 1419], "register_backward_hook": [1187, 1419, 1595], "register_full_backward_hook": [1187, 1419, 1891], "register_buff": [1187, 1419, 1592, 1857, 1859, 1885, 1891], "register_forward_hook": [1187, 1419, 1593, 1891], "with_kwarg": [1187, 1419], "register_module_forward_hook": [1187, 1419, 1891], "register_forward_pre_hook": [1187, 1356, 1419, 1594, 1891], "forward_pr": [1187, 1419], "register_module_forward_pre_hook": [1187, 1419, 1891], "register_module_full_backward_hook": [1187, 1419, 1591, 1880, 1891], "register_full_backward_pre_hook": [1187, 1419, 1891], "register_module_full_backward_pre_hook": [1187, 1419, 1891], "register_load_state_dict_post_hook": [1187, 1419], "incompatible_kei": [1187, 1419], "register_modul": [1187, 1419, 1597], "register_paramet": [1187, 1419, 1598, 1885, 1891], "register_state_dict_pre_hook": [1187, 1419], "keep_var": [1187, 1419], "finetun": [1187, 1419], "gan": [1187, 1419, 1607, 1640], "share_memori": [1187, 1419, 1893], "share_memory_": [1187, 1419, 1872, 1916], "shallow": [1187, 1356, 1419, 1467, 1468], "channels_last": [1187, 1419, 1599, 1917], "4d": [1187, 1338, 1366, 1383, 1419, 1471, 1512, 1529, 1556, 1587, 1708], "1913": [1187, 1419], "3420": [1187, 1419], "5113": [1187, 1419, 1821], "2325": [1187, 1219, 1419], "gpu1": [1187, 1419], "1914": [1187, 1419], "5112": [1187, 1419, 1883], "3741": [1187, 1419], "2382": [1187, 1308, 1419], "5593": [1187, 1419], "4443": [1187, 1419], "6122": [1187, 1419], "1150": [1187, 1419], "to_empti": [1187, 1419], "dst_type": [1187, 1419], "xpu": [1187, 1419, 1904], "set_to_non": [1187, 1419, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675, 1883], "the_typ": 1188, "the_valu": 1188, "script_bar": 1190, "addmod": 1190, "preserved_attr": 1191, "optimize_numer": 1191, "run_frozen_optim": 1191, "scripted_modul": [1191, 1198, 1896], "frozen_modul": 1191, "modified_tensor": 1191, "mymodule2": 1191, "dump_alias_db": 1191, "pdb": [1192, 1198, 1204, 1857, 1859], "training_method": 1192, "target_typ": 1193, "refin": [1193, 1874], "testcod": [1193, 1859], "key1": 1193, "val1": 1193, "key2": 1193, "val2": 1193, "_restore_shap": 1194, "scriptfunct": [1194, 1198, 1199, 1202, 1898], "readlin": [1194, 1258, 1902], "seek": [1194, 1258, 1902, 1905], "retrac": 1194, "rb": [1194, 1258], "extra_fil": [1194, 1197], "other_method": 1196, "lesser": [1196, 1880, 1882], "extent": [1196, 1882, 1914], "frozen_mod": 1196, "offlin": 1197, "_frames_up": 1198, "_rcb": 1198, "scriptdict": 1198, "scriptlist": 1198, "test_sum": 1198, "scripted_fn": [1198, 1857], "conv2": [1198, 1419, 1447, 1857, 1905], "some_entry_point": 1198, "python_only_fn": 1198, "testnnmodul": 1198, "pdt_model": 1198, "scripted_model": [1198, 1902], "un": [1200, 1342, 1905], "unfus": 1200, "nb": 1200, "check_trac": [1202, 1203], "check_input": [1202, 1203, 1857], "check_toler": [1202, 1203], "_force_outplac": [1202, 1203], "_module_class": [1202, 1203], "_compilation_unit": [1202, 1203], "compilationunit": [1202, 1203], "example_kwarg_input": 1202, "_store_input": [1202, 1203], "trace_modul": [1202, 1857, 1860], "untrack": 1202, "checker": [1202, 1203, 1860, 1898], "diverg": [1202, 1203, 1385, 1530, 1855, 1860], "traced_foo": [1202, 1857], "example_weight": [1202, 1203], "example_forward_input": [1202, 1203], "example_inputs_is_kwarg": 1203, "method2": 1203, "example_method2_input": 1203, "weighted_kernel_sum": 1203, "use_memory_effici": 1204, "memory_effici": 1204, "scriptabl": 1204, "kaiser": [1206, 1462, 1464, 1466], "i_0": [1206, 1207, 1768, 1821, 1915], "zeroth": [1206, 1768, 1915], "out_i": 1206, "kroneck": 1207, "a_0": 1207, "a_n": 1207, "b_0": 1207, "b_1": 1207, "b_n": 1207, "k_0": [1207, 1821], "k_1": 1207, "k_n": 1207, "j_0": 1207, "j_1": 1207, "j_n": 1207, "k_t": 1207, "i_t": [1207, 1389, 1673], "b_t": 1207, "j_t": 1207, "bmatrix": 1207, "a_": [1207, 1278, 1407, 1821], "cdot": [1207, 1232, 1244, 1335, 1336, 1354, 1355, 1377, 1385, 1422, 1423, 1424, 1425, 1426, 1462, 1500, 1523, 1698, 1801, 1915, 1921], "vdot": [1207, 1254, 1255, 1858, 1900], "ddot": [1207, 1254], "kth": 1208, "full_lik": [1212, 1858, 1862, 1900], "logarithm": [1215, 1220, 1246, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1342, 1502, 1537, 1781, 1915], "gamma": [1215, 1337, 1338, 1339, 1374, 1382, 1383, 1384, 1391, 1458, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1674, 1676, 1680, 1681, 1684, 1689, 1690, 1708, 1855, 1858, 1898, 1900, 1901, 1915], "5724": [1215, 1915], "1208": [1215, 1915], "mathrlap": [1216, 1222, 1223, 1224, 1225, 1233, 1236, 1245, 1247, 1249, 1250, 1606], "qquad": [1216, 1218, 1222, 1223, 1224, 1225, 1226, 1233, 1236, 1245, 1247, 1249, 1250, 1606], "eigenvalu": [1216, 1222, 1223, 1224, 1225, 1238, 1241, 1244, 1249, 1250, 1259, 1694, 1858], "resp": [1216, 1223, 1225, 1249, 1250, 1267], "5266": 1216, "9586": 1216, "0626j": 1216, "4160": 1216, "5895": 1216, "2322": 1216, "2976j": 1216, "4928": [1216, 1821], "4692e": 1216, "8747e": 1216, "check_error": [1217, 1228, 1230, 1235, 1248, 1858], "performantli": 1217, "3792": 1217, "9831j": 1217, "8757": 1217, "5425": 1217, "6374j": 1217, "kappa": 1218, "_p": [1218, 1428], "frobeniu": [1218, 1232, 1239, 1243, 1646], "nuc": [1218, 1239, 1243, 1256, 1617, 1626, 1646], "nuclear": [1218, 1239, 1243, 1646], "sigma_1": [1218, 1232, 1241, 1244], "sigma_n": 1218, "kappa_2": 1218, "kappa_": 1218, "4142": [1218, 1243, 1646, 1698], "1623": [1218, 1239], "2426": [1218, 1243, 1646], "7071": [1218, 1761], "5917": 1218, "9941": 1219, "5132": 1219, "5681": 1219, "4653": 1219, "4507": 1219, "4119": 1219, "6163": 1219, "1073": 1219, "3957": 1219, "9666": [1219, 1509], "0840": 1219, "3357": 1219, "2139": 1219, "slogdet": [1220, 1267, 1858, 1900], "0934": 1220, "1990": [1220, 1267], "4099": [1220, 1267], "7386": [1220, 1267], "diagonaliz": [1222, 1224], "eigenvector": [1222, 1223, 1259, 1858], "neq": [1222, 1223, 1226, 1250, 1320, 1422, 1424, 1659, 1660, 1661, 1663, 1665, 1671, 1672, 1674, 1678, 1805], "phi": [1222, 1223, 1250, 1369, 1516, 1805], "shall": [1222, 1223, 1250, 1608, 1612], "lambda_i": [1222, 1223, 1238], "lambda_j": [1222, 1223], "eigval": [1222, 1858], "9828": [1222, 1829, 1891], "3889j": 1222, "4617": 1222, "3010j": 1222, "1662": 1222, "7435j": 1222, "6139": 1222, "0562j": 1222, "1226": [1222, 1224], "5738j": [1222, 1224], "7537": [1222, 1224], "1286j": [1222, 1224], "9218": 1222, "1882": 1222, "2220j": 1222, "0270": 1222, "3867j": 1222, "7119e": 1222, "2841e": 1222, "uplo": [1223, 1225, 1858], "unitari": [1223, 1226, 1245, 1250, 1606, 1692], "eigvalsh": [1223, 1241], "9228": [1223, 1225], "2029": [1223, 1225], "0862j": [1223, 1225], "3464": [1223, 1225], "3277": [1223, 1225], "9415": [1223, 1225], "0846": 1223, "9964": 1223, "9170": 1223, "3898j": 1223, "0331j": 1223, "1062e": 1223, "5423e": 1223, "polynomi": [1224, 1225, 1687], "_n": [1224, 1225, 1227, 1606, 1885], "4576e": [1224, 1251], "5797": 1225, "4629": 1225, "1605": 1225, "3780": 1225, "1113": [1225, 1891], "7381": 1225, "h_1h_2": 1226, "h_k": 1226, "h_i": [1226, 1453], "_m": [1226, 1606], "tau_i": 1226, "8034": 1226, "4184j": 1226, "2588": 1226, "0174j": 1226, "6853": 1226, "7953j": 1226, "0790": 1226, "5620j": 1226, "6989j": 1226, "5360": 1226, "1193j": 1226, "3877": 1226, "6691j": 1226, "3512": 1226, "3024j": 1226, "4766": 1226, "5783j": 1226, "0361": [1226, 1891], "6587j": 1226, "6396": [1226, 1891], "1612j": 1226, "3693": 1226, "4481j": 1226, "aa": 1227, "pinv": [1227, 1232, 1696], "moor": [1227, 1244], "penros": [1227, 1244], "ainv": [1227, 1228, 1248, 1252], "1921e": 1227, "9073e": [1227, 1470], "5107e": 1227, "ldl": [1229, 1231], "indefinit": 1229, "ld": [1229, 1230, 1231, 1858], "sytrf": [1229, 1230], "ldl_solv": 1229, "ldl_factor_ex": [1229, 1231], "2079": [1229, 1230, 1915], "2414": [1229, 1230], "9428": [1229, 1230], "4554": [1229, 1230], "3264": [1229, 1230], "3823": [1229, 1230], "5884": [1229, 1230], "9595": [1229, 1230, 1761], "2695": [1229, 1230], "8513": [1229, 1230], "1633": [1229, 1230], "ldl_factor": 1230, "rcond": [1232, 1244, 1696, 1858], "_f": 1232, "gelsi": 1232, "gelsd": 1232, "gelss": 1232, "tridiagon": 1232, "sigma_i": [1232, 1250, 1805], "residu": [1232, 1259, 1858, 1891], "singular_valu": [1232, 1858], "lh": 1232, "rh": [1232, 1277], "0838": [1232, 1891], "2275": [1232, 1307], "3844": 1232, "5499": 1232, "1175": 1232, "9102": 1232, "0870": 1232, "6772": 1232, "7758": 1232, "5109": 1232, "4382": 1232, "3769": 1232, "1818": 1232, "3450": 1232, "0806": [1232, 1891], "3967": 1232, "3994": 1232, "1521": 1232, "1473": 1232, "9194": 1232, "0458": 1232, "6705": [1232, 1291], "1802": 1232, "4086": 1232, "5152e": 1232, "5007": 1233, "9755": 1233, "0489": 1233, "9644": [1233, 1286], "9605e": 1233, "0376e": 1233, "lu_factor_ex": [1234, 1276], "lu_unpack": [1234, 1276, 1858, 1900], "b1": 1234, "b2": [1234, 1883, 1889], "a_factor": 1234, "getrf": [1235, 1248], "adjoint": [1236, 1858, 1900, 1918, 1920], "_exp": 1238, "3891": 1238, "8660": 1238, "ord": [1239, 1243, 1256, 1646, 1858, 1860, 1900], "la": [1239, 1243, 1256, 1891], "2829": 1239, "2627": 1239, "0756": 1240, "4980": 1240, "6617": 1240, "4994": 1240, "9980": 1240, "2731": 1240, "8001": 1240, "2640": 1240, "4571": 1240, "5511": 1240, "0163": [1240, 1286], "5292": 1240, "4899": 1240, "0822": 1240, "2773": [1240, 1875], "varepsilon": [1241, 1244], "tol": [1241, 1259, 1858], "fewest": 1242, "nd": [1242, 1894], "bc": [1242, 1901], "75000": 1242, "148": 1242, "vector_norm": [1243, 1646], "matrix_norm": [1243, 1256, 1607, 1646], "7460": [1243, 1646], "3485": 1243, "8570e": 1243, "8480": 1243, "2361": [1243, 1646, 1647], "7417": [1243, 1646], "computation": [1244, 1888], "5495": [1244, 1307], "0979": 1244, "4092": 1244, "4132": [1244, 1767], "1143": 1244, "3662": 1244, "6374": 1244, "9294": 1244, "3269": [1244, 1891], "5745": [1244, 1799, 1800, 1842, 1843], "0382": [1244, 1308], "5922": 1244, "6759": 1244, "0600": 1244, "1933": 1244, "2090": 1244, "0903": 1244, "0817": 1244, "4752": [1244, 1804], "7124": 1244, "1631": 1244, "2272": 1244, "1356": 1244, "3933": 1244, "5023": 1244, "0308": 1244, "1725": 1244, "5216": 1244, "apinv": 1244, "5633e": 1244, "0830e": 1244, "wide": [1245, 1250, 1606, 1763, 1882, 1885, 1891, 1901], "51": [1245, 1417, 1704], "167": [1245, 1704], "68": [1245, 1704, 1857, 1859], "8571": [1245, 1704], "3943": [1245, 1704], "3314": [1245, 1704], "4286": [1245, 1704], "9029": [1245, 1704], "0343": [1245, 1704], "2857": [1245, 1704], "1714": [1245, 1704, 1891], "9429": [1245, 1704], "175": [1245, 1704], "q2": 1245, "r2": [1245, 1458], "6099e": 1245, "2158e": 1245, "logabsdet": [1246, 1858], "0032": 1246, "1219": [1246, 1723], "6690": 1246, "1161": 1246, "4053": 1246, "6218": [1246, 1818], "9273": 1246, "0082": 1246, "7576": 1246, "logdet": [1246, 1858, 1900], "linalg_slogdet": [1246, 1858, 1900], "2776": 1246, "solve_triangular": [1247, 1828], "expand_a": [1247, 1858, 1885, 1900, 1918], "rectangular": [1249, 1250, 1278, 1878], "triu_": [1249, 1858], "tril_": [1249, 1858], "full_matric": [1250, 1251, 1611, 1805, 1856, 1858], "vh": [1250, 1611, 1805, 1856, 1858], "gesvdj": [1250, 1251, 1805], "jacobi": 1250, "gesvda": [1250, 1251], "gesvd": [1250, 1251, 1805], "u_k": 1250, "v_k": 1250, "sigma_j": [1250, 1805], "eigendecomposit": 1250, "0486e": 1250, "0957e": 1250, "5139": 1251, "1087": 1251, "1066": 1251, "ind": [1252, 1253, 1858, 1886], "tensorsolv": 1252, "atensorinv": 1252, "movedim": [1253, 1293, 1858, 1886, 1900, 1918], "tensorinv": 1253, "vandermond": [1254, 1841], "pmatrix": 1254, "x_n": [1254, 1335, 1336, 1379, 1380, 1386, 1410, 1450, 1826, 1880], "125": [1254, 1437, 1841, 1858], "overlin": [1255, 1844], "3223": 1255, "2815": 1255, "1944": [1255, 1891], "4345": 1256, "pickle_modul": [1258, 1736], "weights_onli": [1258, 1854, 1869], "pickle_load_arg": 1258, "register_packag": 1258, "binaryio": [1258, 1736, 1902], "untrust": [1258, 1854, 1869, 1902], "unsaf": [1258, 1608, 1611, 1858, 1883, 1902], "tamper": [1258, 1902], "ram": [1258, 1883], "surg": 1258, "decod": [1258, 1462, 1463, 1464, 1599, 1902], "utf": [1258, 1898, 1902], "unicodedecodeerror": 1258, "codec": 1258, "0x": 1258, "latin1": 1258, "byte_arrai": 1258, "niter": [1259, 1694, 1806], "ortho_iparam": 1259, "ortho_fparam": 1259, "ortho_bparam": 1259, "knyazev": 1259, "knyazev2001": 1259, "stathopoulosetal2002": 1259, "converg": [1259, 1450, 1606, 1661, 1662, 1686, 1879, 1891, 1894], "precondition": 1259, "eigenpair": 1259, "criterion": [1259, 1335, 1336, 1353, 1355, 1380, 1386, 1410, 1411, 1422, 1423, 1424, 1450, 1451, 1467, 1468, 1501, 1679, 1711, 1887], "fep": 1259, "eigenproblem": 1259, "iparam": 1259, "fparam": 1259, "bparam": 1259, "ivar": 1259, "fvar": 1259, "bvar": 1259, "tvar": 1259, "istep": 1259, "converged_count": 1259, "rerr": 1259, "force_stop": 1259, "2001": 1259, "precondit": 1259, "eigensolv": 1259, "siam": 1259, "sci": 1259, "517": 1259, "541": 1259, "epub": 1259, "doi": [1259, 1373, 1769], "1137": 1259, "s1064827500366124": 1259, "andrea": 1259, "stathopoulo": 1259, "kesheng": 1259, "2002": [1259, 1769], "2165": 1259, "2182": 1259, "s1064827500370883": 1259, "duerschetal2018": 1259, "jed": 1259, "duersch": 1259, "meiyu": 1259, "shao": 1259, "chao": 1259, "ming": 1259, "gu": 1259, "c655": 1259, "c676": 1259, "17m1129830": 1259, "log_": [1260, 1261, 1262, 1263, 1858, 1873], "7767": 1260, "3234": 1260, "2156": 1260, "2411": 1260, "5739": 1260, "5637": 1260, "4640": 1260, "1952": 1260, "4226": 1260, "5204": [1260, 1713], "5224": 1261, "9354": 1261, "7257": 1261, "1301": 1261, "2820": 1261, "0290": 1261, "1392": 1261, "8857": 1261, "6476": 1261, "0090": [1262, 1321, 1700, 1915], "9923": 1262, "5372": 1262, "2492": 1262, "8653": 1262, "7055": 1262, "7705": 1262, "2225": 1262, "8419": 1263, "8003": [1263, 1895], "9971": 1263, "5287": 1263, "0490": 1263, "2483": 1263, "0042": 1263, "9196": 1263, "3504": [1263, 1821], "logsumexp": [1264, 1858, 1873, 1900, 1915], "3069": 1264, "6867": 1264, "8731": 1264, "30000": 1264, "1269e": 1264, "log_2": 1265, "logaddexp": [1265, 1858, 1900], "limits_": 1266, "42296738": 1266, "04462666": 1266, "86278635": 1266, "94622083": 1266, "05277811": 1266, "39202815": 1266, "83525007": 1266, "84492621": 1266, "06084887": 1266, "06844475": 1266, "2611": [1267, 1818], "9254": 1267, "6213": [1267, 1891], "6843": 1267, "3242": 1267, "9665": 1267, "4539": 1267, "0887": [1267, 1915], "1336": 1267, "4025": 1267, "7089": [1267, 1362], "9032": 1267, "3031": 1267, "2589": 1273, "1135": 1273, "5481": [1273, 1286, 1891], "9566": 1273, "sum_j": [1274, 1409, 1452, 1454, 1574, 1784, 1915], "0593": [1274, 1891], "5696": 1274, "6859e": 1274, "compute_pivot": 1276, "transposit": [1276, 1825, 1914], "perm": 1276, "a_lu": 1276, "5558": 1276, "1684": 1276, "1551": 1276, "1940": 1276, "6189": 1276, "5497": 1276, "4526": 1276, "2526": 1276, "3285": 1276, "7988": 1276, "7175": 1276, "9701": 1276, "2634": 1276, "9255": 1276, "3459": 1276, "00000e": 1277, "8312": 1277, "unpack_data": [1278, 1858], "unpack_pivot": [1278, 1858], "l_": [1278, 1324, 1328, 1332, 1336, 1347, 1348, 1349, 1350, 1387, 1412], "u_": [1278, 1659, 1663], "3552": [1280, 1510], "3825": 1280, "8297": 1280, "3477": 1280, "2035": [1280, 1799, 1800, 1842, 1843], "2252": [1280, 1915], "5002": 1280, "6248": [1280, 1289], "1307": 1280, "0608": [1280, 1778], "1244": 1280, "0139": 1280, "6763": 1284, "7445": 1284, "2369": 1284, "argmax": [1284, 1327, 1412, 1542, 1543, 1544, 1816, 1856, 1858, 1900], "max_indic": 1284, "2360": 1284, "2942": 1284, "1222": [1284, 1891], "8475": 1284, "1949": 1284, "1127": 1284, "6702": 1284, "5717": 1284, "9207": 1284, "1297": 1284, "8768": 1284, "6172": 1284, "6060": 1284, "2432": 1284, "3288": 1286, "3367": 1286, "nanmean": [1286, 1858, 1900], "3841": 1286, "6320": 1286, "4254": 1286, "7384": 1286, "0131": 1286, "6549": [1286, 1761], "4279": 1286, "3350": 1286, "7694": 1286, "5600": [1286, 1471], "0842": 1286, "9580": 1286, "3623": 1286, "2343": [1286, 1875], "5085": 1286, "4599": 1286, "1807": 1286, "5219": 1287, "5212": 1287, "2202": 1287, "2505": 1287, "3982": 1287, "9948": 1287, "3518": 1287, "3131": 1287, "3180": [1287, 1914], "6993": 1287, "0436": 1287, "0438": 1287, "2270": 1287, "2751": 1287, "7303": 1287, "2192": 1287, "3321": 1287, "2488": 1287, "0778": 1287, "9510": 1287, "7048": 1287, "4742": [1287, 1834, 1915], "7125": [1287, 1786], "plot": [1288, 1882, 1904, 1919], "t_0": [1288, 1679], "s_0": 1288, "s_": [1288, 1325, 1326, 1365, 1469], "g_0": 1288, "g_": [1288, 1663, 1673, 1674], "g_i": 1288, "t_i": 1288, "0d": [1288, 1411], "xy": 1288, "50276": 1288, "cartesian_prod": [1288, 1858, 1900], "grid_x": 1288, "grid_i": 1288, "dstack": [1288, 1858, 1900, 1914], "matplotlib": [1288, 1919], "pyplot": [1288, 1919], "plt": 1288, "plot_surfac": 1288, "6750": 1289, "0857": [1289, 1831], "7197": [1289, 1850], "argmin": [1289, 1856, 1858, 1900], "min_indic": [1289, 1858], "1334": 1289, "2803": 1289, "4644": [1289, 1799, 1800, 1842, 1843], "2635": [1289, 1891], "3651": 1289, "0384": 1289, "0128": 1289, "7015": 1289, "1153": 1289, "9849": 1289, "1458": [1289, 1915], "5788": 1289, "deduc": [1291, 1914], "4851": 1291, "5037": 1291, "3633": 1291, "0760": 1291, "3362": [1293, 1294], "8437": [1293, 1294], "9627": [1293, 1294], "1727": [1293, 1294], "5173": [1293, 1294], "1398": [1293, 1294], "mpsalloc": [1295, 1296], "metal": [1296, 1304, 1868, 1892], "mpsgraph": 1296, "wait_until_complet": [1300, 1301], "signpost": [1300, 1301, 1302], "xcode": 1301, "recommendedmaxworkingsets": 1304, "unlimit": [1304, 1883], "1321": 1307, "4370": 1307, "1289": 1307, "0527": 1307, "3077": [1307, 1795], "0881": 1307, "1259": 1307, "0284": 1307, "2015": [1308, 1878, 1891], "6087": 1308, "1494": 1308, "5491": 1308, "260": 1308, "8663": 1308, "3137": 1308, "0700": 1308, "8378": 1308, "5146": 1308, "1216": 1308, "5244": 1308, "5767": 1308, "1363": 1308, "5877": 1308, "5083": 1308, "1614": 1308, "1645": 1308, "7021": 1308, "0085": 1308, "0367": 1308, "1567": 1308, "4312": 1308, "1019": 1308, "4394": 1308, "8753": 1308, "_sampl": 1309, "thtensorrandom": 1309, "320": [1309, 1445], "0404": 1311, "6361": 1311, "multigammaln": [1312, 1915], "4028e": 1313, "1400e": 1313, "isnan": [1314, 1856, 1858, 1900, 1914], "midpoint": [1316, 1705], "weakli": [1318, 1319, 1915], "to_spars": [1319, 1782, 1858, 1895, 1900, 1914], "2262": [1321, 1700], "0682": [1321, 1700], "2866": [1321, 1700], "3940": [1321, 1700], "5x7": [1325, 1329], "7x7": [1325, 1329], "10x7": [1325, 1329], "cube": [1326, 1330, 1711], "d_": [1326, 1330, 1334, 1346, 1349, 1352, 1414, 1417, 1442, 1445, 1471, 1476, 1518, 1829, 1830, 1831, 1832], "5x7x9": [1326, 1330], "7x7x7": [1326, 1330], "7x9x8": [1326, 1330], "n_class": 1327, "cutoff": [1327, 1878], "div_valu": 1327, "head_bia": 1327, "edouard": 1327, "grave": [1327, 1342], "armand": 1327, "joulin": 1327, "moustapha": 1327, "ciss\u00e9": 1327, "grangier": 1327, "herv\u00e9": 1327, "j\u00e9gou": 1327, "imbalanc": 1327, "zipf": 1327, "law": 1327, "102": 1327, "1001": 1327, "1002": 1327, "_class": 1327, "maxunpool1d": [1328, 1412, 1545, 1840], "maxunpool2d": [1329, 1367, 1413, 1546, 1840], "maxunpool3d": [1330, 1368, 1414, 1547, 1840], "selu": [1331, 1364, 1511, 1858, 1878, 1898, 1900], "n_i": [1332, 1333, 1334, 1347, 1348, 1349, 1412, 1413, 1414, 1467, 1468], "c_j": [1332, 1333, 1334, 1412, 1413, 1414], "size_averag": [1335, 1336, 1353, 1355, 1379, 1385, 1386, 1410, 1411, 1422, 1423, 1424, 1426, 1433, 1450, 1451, 1467, 1490, 1491, 1499, 1501, 1526, 1530, 1531, 1541, 1549, 1550, 1551, 1552, 1553, 1561, 1572, 1573, 1584, 1858], "unreduc": [1335, 1336, 1355, 1380, 1386, 1410, 1426, 1450, 1468], "ell": [1335, 1336, 1355, 1379, 1380, 1386, 1410, 1426, 1450, 1468], "l_1": [1335, 1336, 1355, 1379, 1380, 1386, 1410, 1426, 1450, 1468], "l_n": [1335, 1336, 1355, 1379, 1380, 1386, 1410, 1426, 1450, 1468], "w_n": [1335, 1336, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769], "y_n": [1335, 1336, 1355, 1379, 1380, 1386, 1410, 1426, 1450, 1826, 1880], "lim_": [1335, 1880], "secondli": 1335, "straight": [1335, 1520], "rescal": [1335, 1336, 1355, 1423, 1424, 1426, 1452, 1454, 1490, 1491, 1501, 1553, 1611, 1640], "nbatch": [1335, 1336], "pos_weight": [1336, 1491, 1858], "classif": [1336, 1342, 1355, 1422, 1424, 1426, 1451, 1502, 1855, 1878, 1906], "ell_c": 1336, "l_c": 1336, "p_c": 1336, "pai": [1336, 1491, 1897, 1918], "spacial": [1336, 1491], "random_": [1336, 1355, 1426, 1491, 1858, 1873, 1922], "hat": [1337, 1338, 1339, 1382, 1383, 1384, 1458], "terminologi": [1337, 1338, 1339, 1458], "tempor": [1337, 1339, 1342, 1458, 1471, 1502, 1529, 1587], "5d": [1339, 1384, 1471, 1518, 1529, 1556, 1587], "volumetr": [1339, 1458, 1471, 1518, 1529, 1587, 1588, 1589], "spatio": [1339, 1458], "in1_featur": 1340, "in2_featur": 1340, "in1": [1340, 1489], "in2": [1340, 1489], "blank": [1342, 1502, 1858, 1861], "zero_infin": [1342, 1502, 1858], "connectionist": [1342, 1502], "unseg": 1342, "longest": [1342, 1633, 1635, 1636, 1887], "input_length": [1342, 1502, 1858, 1887], "target_length": [1342, 1502, 1858], "s_n": 1342, "target_n": 1342, "unbatch": [1342, 1355, 1366, 1371, 1382, 1389, 1425, 1434, 1462, 1512], "s_min": 1342, "toronto": 1342, "edu": [1342, 1711], "icml_2006": 1342, "256": [1342, 1701, 1883, 1898], "background": [1342, 1350, 1518, 1556, 1893, 1910], "channel_shuffl": [1343, 1858, 1900], "_left": [1344, 1345, 1346, 1440, 1441, 1442, 1443, 1444, 1445, 1474, 1475, 1476, 1556], "_right": [1344, 1345, 1346, 1440, 1441, 1442, 1443, 1444, 1445, 1474, 1475, 1476, 1556], "0491": [1344, 1474], "7152": [1344, 1474], "0749": [1344, 1474], "3287": [1344, 1474], "8966": [1344, 1474], "1466": [1344, 1474], "2771": [1344, 1474], "6616": [1344, 1474], "4523": [1344, 1474], "1255": [1344, 1474], "6372": [1344, 1474, 1805], "1182": [1344, 1474], "8652": [1344, 1474], "_top": [1345, 1346, 1441, 1442, 1444, 1445, 1475, 1476, 1556], "_bottom": [1345, 1346, 1441, 1442, 1444, 1445, 1475, 1476, 1556], "6585": 1345, "4320": [1345, 1814], "8701": 1345, "4649": 1345, "_front": [1346, 1442, 1445, 1476, 1556], "_back": [1346, 1442, 1445, 1476, 1556], "_j": [1347, 1348], "star": [1347, 1348, 1349, 1860], "\u00e0": [1347, 1348, 1349, 1350, 1351, 1352, 1366, 1470], "trou": [1347, 1348, 1349, 1350, 1351, 1352, 1366, 1470], "harder": [1347, 1348, 1349, 1350, 1351, 1352, 1366, 1413, 1414, 1470], "nice": [1347, 1348, 1349, 1350, 1351, 1352, 1366, 1412, 1413, 1414, 1470, 1874, 1880, 1902], "prod_": [1348, 1349, 1351, 1352, 1365, 1469, 1665], "out_j": 1349, "deconvolut": [1350, 1351, 1352, 1496, 1497, 1498], "_pad": [1350, 1351, 1352], "dissimilar": [1353, 1379], "semi": [1353, 1379, 1878], "supervis": [1353, 1379], "vert": [1354, 1428, 1500], "_2": [1354, 1500, 1607, 1640], "ast_1": [1354, 1370], "ast_2": [1354, 1370], "ignore_index": [1355, 1426, 1501, 1553, 1858], "label_smooth": [1355, 1501, 1858], "unbalanc": [1355, 1426], "d_1": [1355, 1426, 1501, 1553], "d_2": [1355, 1426, 1501, 1553], "d_k": [1355, 1426, 1501, 1553], "_index": [1355, 1426], "logsoftmax": [1355, 1426, 1452, 1537], "nllloss": [1355, 1452, 1553, 1574, 1840], "blend": 1355, "smooth": [1355, 1380, 1450, 1455, 1501, 1672], "w_c": 1355, "truth": [1355, 1501, 1867, 1919], "rethink": [1355, 1501], "incept": [1355, 1501], "spectral_norm": [1356, 1630], "neuron": 1357, "detector": 1357, "dropout1d": [1359, 1858], "_freez": 1362, "sparseadam": [1362, 1901], "0251": 1362, "6902": [1362, 1702], "7172": 1362, "6431": 1362, "0748": 1362, "6969": 1362, "4970": 1362, "3448": 1362, "9685": 1362, "3677": 1362, "7265": 1362, "1685": 1362, "4362": 1362, "4004": [1362, 1786], "9400": 1362, "9124": 1362, "3616": 1362, "1151": 1362, "0309": 1362, "9315": 1362, "1655": [1362, 1883], "9897": 1362, "0635": 1362, "7895": 1362, "0364": 1362, "6778": 1362, "5803": 1362, "bag": [1363, 1510], "per_sample_weight": [1363, 1510, 1858], "embedding_sum": 1363, "8861": 1363, "4350": 1363, "0523": 1363, "1306": 1363, "5798": 1363, "0044": 1363, "7082": [1363, 1510], "2145": [1363, 1510], "6251": [1363, 1510], "6500": 1363, "satur": [1364, 1511], "alphadropout": [1364, 1484], "160": [1365, 1901], "unfold": [1366, 1858, 1900, 1918], "prod_d": [1366, 1470], "neighborhood": [1366, 1470], "col2im": [1366, 1856, 1858, 1900], "fold_param": [1366, 1470], "input_on": [1366, 1470], "output_ratio": [1367, 1368, 1513, 1514, 1858], "_random_sampl": [1367, 1368, 1513, 1514, 1858], "ben": [1367, 1368, 1513, 1514], "graham": [1367, 1368, 1513, 1514], "oh": [1367, 1368, 1513, 1514], "ow": [1367, 1368, 1513, 1514], "_ratio": [1367, 1368, 1514], "13x12": [1367, 1513], "kt": [1368, 1487, 1495, 1498, 1514, 1544], "ot": [1368, 1514], "13x12x11": [1368, 1514], "044715": [1369, 1516], "pack_sequ": [1371, 1389, 1434, 1635, 1637], "bias_ih": [1372, 1390, 1436], "bias_hh": [1372, 1390, 1436], "const": [1373, 1890], "homoscedast": [1373, 1515], "heteroscedast": [1373, 1515], "nix": 1373, "weigend": 1373, "1994": 1373, "icnn": 1373, "94": 1373, "orlando": 1373, "fl": 1373, "usa": [1373, 1919], "374138": 1373, "instancenorm": [1374, 1907], "shrinkag": [1375, 1456, 1521, 1577], "mobilenetv3": [1377, 1523], "_val": 1378, "l1loss": [1380, 1450, 1531], "outlier": [1380, 1450, 1905, 1906], "huber": [1380, 1450], "smoothl1loss": [1380, 1572], "insensit": 1381, "unused_argument1": 1381, "unused_argument2": 1381, "ingredi": [1382, 1383, 1384], "styliz": [1382, 1383, 1384], "rgb": [1383, 1384, 1919], "color": [1384, 1859, 1860, 1919], "log_target": [1385, 1530, 1858], "pred": [1385, 1599, 1856, 1892, 1901, 1910], "kl": [1385, 1530, 1855], "summaris": 1385, "loss_pointwis": 1385, "batchmean": [1385, 1530], "kl_loss": 1385, "mae": 1386, "f_t": [1389, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "hf": [1389, 1390], "g_t": [1389, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "ig": [1389, 1390], "hg": [1389, 1390], "o_t": 1389, "ho": [1389, 1390], "c_t": 1389, "odot": 1389, "forget": [1389, 1859, 1860], "proj_siz": [1389, 1435], "1402": 1389, "c_0": [1389, 1390], "proj": 1389, "c_n": 1389, "w_ii": 1389, "w_if": 1389, "w_ig": 1389, "w_io": 1389, "w_hi": 1389, "w_hf": 1389, "w_hg": 1389, "w_ho": 1389, "b_ii": 1389, "b_if": 1389, "b_ig": 1389, "b_io": 1389, "b_hi": 1389, "b_hf": 1389, "b_hg": 1389, "b_ho": 1389, "weight_hr_l": 1389, "_revers": 1389, "h_1": 1390, "c_1": 1390, "time_step": 1390, "_shape": 1391, "sentence_length": 1391, "lazymodulemixin": [1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404], "cls_to_becom": [1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1602], "convtranspose1d": [1398, 1496, 1840, 1907], "convtranspose3d": [1400, 1498, 1840, 1907], "instancenorm1d": [1401, 1528, 1907], "instancenorm2d": [1402, 1528, 1907], "instancenorm3d": [1403, 1528, 1907], "uninitializedparamet": [1404, 1590, 1855], "lrn": 1407, "signal_2d": 1407, "signal_4d": 1407, "output_2d": 1407, "output_4d": 1407, "x_j": [1409, 1452, 1454, 1574, 1784, 1888, 1915], "80827": [1415, 1416, 1417], "unpool": [1415, 1416, 1417], "maxpool3d": [1417, 1544, 1547, 1840, 1907], "unpooled_output": 1417, "t_destin": 1419, "lrelu": [1420, 1891], "hing": [1422, 1424], "sum_i": [1423, 1424, 1451], "nelement": [1423, 1451], "jointli": 1425, "concat": [1425, 1858, 1900], "head_1": 1425, "head_h": 1425, "head_i": 1425, "qw_i": 1425, "kw_i": 1425, "vw_i": 1425, "scaled_dot_product_attent": [1425, 1858, 1900], "inference_mod": [1425, 1466], "nestedtensor": [1425, 1466, 1875], "multihead_attn": 1425, "e_q": 1425, "e_k": 1425, "e_v": 1425, "_head": [1425, 1462], "merge_mask": 1425, "mask_typ": 1425, "merged_mask": 1425, "nll": 1426, "crossentropyloss": [1426, 1501], "num_paramet": 1427, "nchannel": 1427, "decai": [1427, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1674, 1677, 1681, 1683, 1684, 1687, 1688, 1690, 1762, 1901], "legitim": [1427, 1518, 1886], "vert_p": 1428, "fromkei": 1429, "popitem": [1429, 1900], "setdefault": [1429, 1900], "upscale_factor": [1431, 1559, 1858], "upscal": 1431, "shi": [1431, 1432], "2016": [1431, 1432, 1468], "_factor": [1431, 1432, 1471, 1472, 1473], "pixel_shuffl": [1431, 1858, 1900, 1907], "downscale_factor": [1432, 1560, 1858], "pixelshuffl": [1432, 1559, 1560], "downscal": 1432, "pixel_unshuffl": [1432, 1858, 1900, 1907], "log_input": [1433, 1561, 1858], "poisson": [1433, 1561, 1762, 1855, 1858, 1900], "stirl": [1433, 1561], "hh": [1434, 1436], "flatten_paramet": 1435, "3333333333333333": [1437, 1677, 1683, 1858], "leaki": [1437, 1566, 1878], "rectifi": [1437, 1438, 1563, 1878], "liner": 1437, "empir": 1437, "1505": 1437, "00853": 1437, "crelu": 1438, "1603": 1438, "05201": 1438, "480": 1445, "6732632423543772848170429916717": [1446, 1569], "0507009873554804934193349852946": [1446, 1569], "kaiming_norm": 1446, "kaiming_normal_": [1446, 1855, 1862, 1878], "initialis": 1446, "calculate_gain": [1446, 1855, 1862, 1878], "modulelist": [1447, 1891], "cascad": 1447, "relu2": [1447, 1590], "swish": [1448, 1571], "coin": [1448, 1571], "explod": 1450, "cnn": [1450, 1905], "ross": 1450, "girshick": 1450, "quadrat": [1450, 1887], "huberloss": [1450, 1527], "w_j": 1453, "soft": [1456, 1520, 1577], "softshrinkag": 1456, "convert_sync_batchnorm": 1458, "r1": 1458, "sync_bn_network": 1458, "ddp_sync_bn_network": 1458, "sync_bn_modul": 1458, "d_model": [1462, 1463, 1464, 1465, 1466], "nhead": [1462, 1463, 1464, 1465, 1466], "num_encoder_lay": 1462, "num_decoder_lay": 1462, "dim_feedforward": [1462, 1464, 1466], "custom_encod": 1462, "custom_decod": 1462, "layer_norm_ep": [1462, 1464, 1466], "norm_first": [1462, 1464, 1466], "ashish": [1462, 1464, 1466], "vaswani": [1462, 1464, 1466], "noam": [1462, 1464, 1466], "shazeer": [1462, 1464, 1466], "niki": [1462, 1464, 1466], "parmar": [1462, 1464, 1466], "jakob": [1462, 1464, 1466], "uszkoreit": [1462, 1464, 1466], "llion": [1462, 1464, 1466], "jone": [1462, 1464, 1466], "aidan": [1462, 1464, 1466], "gomez": [1462, 1464, 1466], "lukasz": [1462, 1464, 1466], "illia": [1462, 1464, 1466], "polosukhin": [1462, 1464, 1466], "6010": [1462, 1464, 1466], "feedforward": [1462, 1464, 1466, 1878], "transformer_model": 1462, "word_language_model": 1462, "src_mask": [1462, 1466], "tgt_mask": [1462, 1463, 1464], "memory_mask": [1462, 1463, 1464], "src_key_padding_mask": [1462, 1465, 1466], "tgt_key_padding_mask": [1462, 1463, 1464], "memory_key_padding_mask": [1462, 1463, 1464], "_mask": [1462, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629], "_key_padding_mask": 1462, "generate_square_subsequent_mask": 1462, "sz": 1462, "decoder_lay": [1463, 1464], "transformerdecoderlay": 1463, "transformer_decod": 1463, "tgt_is_caus": [1463, 1464], "memory_is_caus": [1463, 1464], "attn": [1464, 1466], "encoder_lay": [1465, 1466], "enable_nested_tensor": 1465, "mask_check": 1465, "1810": 1465, "04805": 1465, "transformerencoderlay": 1465, "transformer_encod": 1465, "flashattent": [1466, 1568], "triplet": [1467, 1468], "x3": 1467, "balnta": [1467, 1468], "riba": [1467, 1468], "a_i": [1467, 1468, 1764], "p_i": [1467, 1468], "rm": [1467, 1468], "bf": [1467, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "rvert_p": [1467, 1554], "tripletmarginwithdistanceloss": [1467, 1585], "triplet_loss": [1467, 1468], "distance_funct": [1468, 1585], "l_i": 1468, "tripletmarginloss": [1468, 1584], "l_p": [1468, 1554], "pairwisedist": [1468, 1557], "penal": [1468, 1891], "distant": 1468, "anchor_id": 1468, "positive_id": 1468, "negative_id": 1468, "l_infin": 1468, "bmva": 1468, "bmvc": 1468, "paper119": 1468, "unflattened_s": 1469, "namedtensor": 1469, "namedshap": 1469, "u_1": 1469, "u_n": 1469, "u_i": 1469, "im2col": [1470, 1858, 1900], "fold": [1470, 1806, 1858, 1868, 1898, 1908, 1914], "2x3": 1470, "3x4": 1470, "inp_unf": 1470, "out_unf": 1470, "recompute_scale_factor": [1471, 1529], "bicub": [1471, 1518, 1529, 1587, 1840], "trilinear": [1471, 1518, 1529, 1587, 1840], "input_3x3": 1471, "4375": 1471, "8125": 1471, "9375": 1471, "2400": [1471, 1821], "1200": [1471, 1733, 1883], "8800": 1471, "4400": [1471, 1821], "7200": 1471, "0400": 1471, "2800": [1471, 1756], "3600": 1471, "5200": 1471, "6400": 1471, "1678": 1475, "4418": 1475, "9466": [1475, 1915], "9604": 1475, "4219": 1475, "5241": 1475, "9162": 1475, "5436": [1475, 1821], "6446": 1475, "adaptiveavgpool1d": [1477, 1907], "tripl": [1479, 1482], "adaptivemaxpool1d": 1480, "adaptivemaxpool2d": [1481, 1840], "adaptivemaxpool3d": 1482, "ill": [1483, 1894], "avgpool1d": [1485, 1907], "avgpool3d": [1487, 1840, 1907], "iT": [1487, 1495, 1498], "padt": [1487, 1495, 1498], "score": [1491, 1568, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626, 1855], "out_padw": [1496, 1497, 1498], "out_padh": [1497, 1498], "out_padt": 1498, "cosineembeddingloss": 1499, "ctcloss": [1502, 1840], "charact": [1502, 1753, 1857, 1860, 1874, 1910], "elu": [1508, 1858, 1898, 1900, 1907], "embedding_matrix": [1509, 1510], "8490": 1509, "9625": 1509, "6753": 1509, "7761": 1509, "6108": 1509, "6246": 1509, "9751": 1509, "3618": 1509, "4161": [1509, 1914], "2419": 1509, "7383": 1509, "0237": 1509, "7794": 1509, "0528": 1509, "3385": 1509, "8612": 1509, "1867": 1509, "5384": 1509, "8720": 1509, "6262": 1509, "7471": 1509, "embeddingbag": [1510, 1840, 1905, 1907, 1920], "3397": 1510, "5545": 1510, "5893": 1510, "4386": 1510, "5882": 1510, "featurealphadropout": 1511, "gaussiannllloss": 1515, "border": 1518, "affine_grid": [1518, 1858], "extrema": 1518, "pil": [1518, 1529], "overshoot": [1518, 1529, 1587], "gumbel": [1520, 1855], "y_hard": 1520, "y_soft": 1520, "hardtanh": [1525, 1856, 1858, 1868, 1900, 1907], "hingeembeddingloss": 1526, "use_input_stat": [1528, 1858], "antialia": 1529, "anti": 1529, "pillow": [1529, 1919], "buggi": 1529, "inter_nearest": 1529, "kldivloss": 1530, "batchsiz": [1530, 1787, 1788, 1789, 1791, 1792, 1914], "leaky_relu": [1534, 1856, 1858, 1878, 1900, 1907], "localresponsenorm": 1536, "_stacklevel": [1537, 1574, 1575, 1858], "lppool1d": 1539, "lppool2d": 1540, "marginrankingloss": 1541, "max_unpool1d": [1542, 1858], "multimarginloss": 1550, "multilabelmarginloss": 1551, "multilabelsoftmarginloss": 1552, "n_0": 1554, "n_": 1554, "n_k": 1554, "everywher": [1555, 1801, 1901], "constantpad2d": 1556, "reflectionpad2d": [1556, 1840], "replicationpad2d": [1556, 1840], "t4d": 1556, "p1d": 1556, "p2d": 1556, "p3d": 1556, "pixelunshuffl": 1560, "poissonnllloss": 1561, "rrelu": [1567, 1858, 1900], "dropout_p": [1568, 1858], "masked_fil": [1568, 1858, 1873, 1875, 1900], "ev": 1568, "legend": 1568, "softmarginloss": 1573, "module_kwarg": 1583, "upsample_trilinear": 1588, "fo": 1588, "spatia": 1589, "mixin": [1590, 1855], "dry": 1590, "lazymlp": 1590, "lazylinear": 1590, "lazy_mlp": 1590, "8832e": 1590, "5636e": 1590, "1598e": 1590, "5637e": 1590, "8788e": 1590, "0042e": 1590, "0019": 1590, "lazymodul": 1590, "full_mlp": 1590, "3837": [1590, 1702], "0907": 1590, "6708": 1590, "5223": 1590, "9028": 1590, "2851": 1590, "6813": 1590, "5766": 1590, "8678": 1590, "1320": 1590, "2938": 1590, "0679": [1590, 1831], "2793": [1590, 1647], "1088": 1590, "1795": 1590, "2301": 1590, "2807": 1590, "2479": 1590, "1091": 1590, "has_uninitialized_param": 1590, "initialize_paramet": 1590, "register_backward_pre_hook": 1596, "check_reduct": 1599, "delay_all_reduce_named_param": 1599, "param_to_hook_all_reduc": 1599, "optimizer_param": 1599, "loss_func": [1599, 1910], "consume_prefix_in_state_dict_if_pres": 1599, "nccl2": 1599, "dictat": [1599, 1860], "megabyt": 1599, "mb": [1599, 1883], "detach_": [1599, 1858, 1873, 1907, 1914], "ddp_logging_data": 1599, "can_set_static_graph": 1599, "model_ddp": 1599, "_get_ddp_logging_data": 1599, "divide_by_initial_world_s": 1599, "syncbatchnorm": 1599, "exhaust": 1599, "deplet": 1599, "pariti": 1599, "discrep": [1599, 1711, 1888], "another_input": 1599, "predivid": 1599, "encode_and_decod": 1599, "encoded_tensor": 1599, "decoded_tensor": 1599, "error_if_nonfinit": 1603, "foreach": [1603, 1604, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674, 1901], "clip_valu": 1604, "orthogonal_map": 1606, "use_trivi": 1606, "qq": 1606, "matrix_exp": [1606, 1858, 1900], "caylei": 1606, "thin": [1606, 1704], "manifold": 1606, "register_parametr": [1606, 1607, 1608, 1609, 1640, 1876], "orth_linear": 1606, "parametrizedlinear": [1606, 1607], "moduledict": [1606, 1607, 1859, 1891], "parametrizationlist": [1606, 1607, 1611], "_orthogon": 1606, "9332e": 1606, "n_power_iter": [1607, 1640], "sn": [1607, 1640], "discrimin": [1607, 1640], "adversari": [1607, 1640], "lipschitz": 1607, "reimplement": [1607, 1640], "_spectralnorm": 1607, "convtranspos": [1607, 1640], "snm": 1607, "0081": 1607, "amaxbackward0": 1607, "original0": [1608, 1611], "original1": [1608, 1611], "tensor_nam": [1608, 1610, 1611, 1612], "right_invers": [1608, 1611], "out_rnn": 1609, "rnn_cell": 1609, "simplic": [1611, 1911], "inbuilt": 1611, "unparametr": 1611, "rankon": 1611, "surject": 1611, "s0_sqrt": 1611, "linear_rank_on": 1611, "matrix_rank": 1611, "leave_parametr": 1612, "unparametris": 1612, "prune": [1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1914], "skeleton": 1613, "compute_mask": [1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620], "importance_scor": [1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1625, 1626], "apply_mask": [1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620], "pruned_tensor": [1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620], "default_mask": [1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620], "_orig": [1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629], "undon": [1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1629], "unprun": [1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628], "indexerror": [1617, 1619], "basepruningmethod": [1618, 1624], "add_pruning_method": 1618, "pruning_typ": [1618, 1622], "unstructur": [1618, 1622], "ravel": [1618, 1858, 1900], "nonmask": 1618, "bias_mask": [1621, 1623], "pruning_method": 1622, "typeerror": [1622, 1885, 1903, 1921, 1925], "parameters_to_prun": 1622, "l1unstructur": 1622, "parameters_to_vector": 1622, "forward_pre_hook": [1624, 1891], "random_unstructur": [1624, 1629], "odict_kei": 1625, "weight_orig": 1625, "weight_mask": [1625, 1628], "columns_prun": 1627, "t_modul": [1630, 1631, 1640, 1643], "weight_norm": 1631, "sorted_indic": [1632, 1634, 1635, 1637], "unsorted_indic": [1632, 1634, 1635, 1637], "abc": [1632, 1860], "axbc": 1632, "throughout": [1632, 1888, 1891, 1905], "conform": [1632, 1891], "is_cuda": [1632, 1873, 1900, 1916], "enforce_sort": [1633, 1634, 1635], "unsort": [1633, 1634, 1740], "shortest": 1633, "uncondition": [1633, 1854, 1885, 1925], "pad_sequ": [1634, 1638, 1858, 1900], "padding_valu": [1635, 1636, 1858], "total_length": [1635, 1887], "seq_unpack": 1635, "lens_unpack": 1635, "packed_sequ": 1637, "unpacked_sequ": 1637, "padded_sequ": 1638, "unpad": 1638, "unstack": 1638, "as_tensor": [1638, 1819, 1858, 1875, 1885, 1900, 1919, 1920, 1921], "unpadded_sequ": 1638, "module_cl": [1639, 1910], "5846e": 1639, "29": [1639, 1769, 1898], "8307e": 1639, "5250e": 1639, "1210e": 1639, "4677e": 1639, "5915e": 1639, "4013e": 1639, "weight_u": 1640, "parameters_and_buff": 1641, "decoupl": [1643, 1662], "weight_g": [1643, 1858], "weight_v": 1643, "1602": 1643, "07868": 1643, "as_tupl": [1645, 1850], "complexfloat": [1646, 1655], "0425": 1647, "7969": 1647, "2925": 1647, "7229": 1647, "2134": 1647, "0505": 1647, "1408": 1647, "0563": 1647, "0566": 1647, "0732": [1647, 1821], "0687": 1647, "1177": 1647, "2303": 1647, "1552": 1647, "6148": 1647, "6535": 1647, "8318": 1647, "3987": 1647, "9544": [1647, 1712], "6048": 1647, "7909": 1647, "120": [1649, 1919], "op_level_debug": 1652, "model_proto": [1653, 1654], "input_adapt": 1653, "output_adapt": 1653, "diagnostic_context": 1653, "adapt_torch_inputs_to_onnx": 1653, "model_arg": [1653, 1898], "model_kwarg": [1653, 1898], "xdoctest": 1653, "torch_doctest_onnx": 1653, "func_with_nested_input_structur": 1653, "x_dict": 1653, "y_tupl": 1653, "y1": [1653, 1782], "y2": [1653, 1782], "y3": 1653, "export_output": [1653, 1654], "adapt_torch_outputs_to_onnx": 1653, "model_output": 1653, "func_returning_tupl": 1653, "pt_output": 1653, "diagnosticcontext": 1653, "modelproto": [1653, 1654], "protobuf": [1653, 1654, 1898], "exportoutput": [1654, 1898], "bufferediobas": 1654, "protobufexportoutputseri": 1654, "serializetostr": 1654, "exported_model": 1654, "from_valu": 1655, "onnx_typ": 1655, "tensorprotodatatyp": 1655, "torch_c_value_with_type_float": 1655, "from_dtyp": 1655, "jit_type_bas": 1655, "safer": [1655, 1867], "onnxexportererror": [1655, 1898], "symbolicvalueerror": 1655, "onnx_compat": 1655, "scalar_nam": 1655, "complexhalf": 1655, "complexdoubl": 1655, "torch_nam": 1655, "int8_t": 1655, "int64_t": 1655, "int16_t": 1655, "verif": [1656, 1657, 1898], "input_arg": [1656, 1898], "params_dict": 1656, "export_opt": [1656, 1898], "_excluded_node_kind": 1656, "frozenset": [1656, 1860], "scalarimplicit": [1656, 1900], "prim": [1656, 1857, 1898, 1900], "listconstruct": [1656, 1857], "all_mismatch_leaf_graph_info": 1656, "essential_node_count": 1656, "essential_node_kind": 1656, "export_repro": 1656, "repro_dir": 1656, "test_": 1656, "test_data_set_0": 1656, "input_0": [1656, 1898], "pb": [1656, 1898], "input_1": [1656, 1898], "output_0": 1656, "output_1": 1656, "find_mismatch": [1656, 1898], "verificationopt": [1656, 1898], "find_partit": 1656, "has_mismatch": 1656, "pretty_print_mismatch": 1656, "pretty_print_tre": 1656, "graph_info": [1656, 1898], "__2": [1656, 1898], "__1": [1656, 1898], "__3": [1656, 1898], "110": [1656, 1898], "verify_export": 1656, "onnx_graph": 1656, "onnx_out": 1656, "pt_out": 1656, "ignore_non": 1657, "check_shap": 1657, "check_dtyp": [1657, 1921], "onnxbackend": 1657, "onnx_runtime_cpu": 1657, "remained_onnx_input_idx": 1657, "acceptable_error_percentag": 1657, "percentag": [1657, 1686, 1762], "weight_decai": [1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1674, 1891], "1e6": 1658, "impair": [1658, 1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "register_step_post_hook": [1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675], "removeablehandl": [1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675], "register_step_pre_hook": [1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675], "new_arg": [1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675], "new_kwarg": [1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675], "altogeth": [1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1670, 1671, 1672, 1673, 1674, 1675], "rho": 1659, "110mm": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "4pt": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "textbf": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "theta_0": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "v_0": [1659, 1661, 1662, 1665, 1671, 1672], "leftarrow": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "u_0": [1659, 1663], "hspace": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "5mm": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "nabla_": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "theta_": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "10mm": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "v_t": [1659, 1661, 1662, 1665, 1671, 1672], "v_": [1659, 1661, 1662, 1665, 1671, 1672, 1674], "2_t": [1659, 1660, 1661, 1662, 1665, 1671, 1672], "21mm": 1659, "u_t": [1659, 1663], "theta_t": [1659, 1660, 1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "lr_decai": 1660, "initial_accumulator_valu": 1660, "12mm": [1660, 1671], "_sum_0": 1660, "tild": [1660, 1672], "_sum_t": 1660, "_sum_": 1660, "subgradi": 1660, "999": [1661, 1662, 1663, 1665, 1671, 1675, 1896, 1901], "amsgrad": [1661, 1662], "beta_1": [1661, 1662, 1663, 1665, 1671], "beta_2": [1661, 1662, 1663, 1665, 1671], "13mm": [1661, 1662, 1663, 1665, 1671, 1672, 1673, 1674], "textit": [1661, 1662, 1674], "m_0": [1661, 1662, 1663, 1665, 1671], "widehat": [1661, 1662, 1665, 1671], "m_t": [1661, 1662, 1663, 1665, 1671], "m_": [1661, 1662, 1663, 1665, 1671], "ungraph": [1661, 1662], "002": [1663, 1665], "t_1": 1663, "2e": [1663, 1665], "max_it": 1664, "max_ev": 1664, "tolerance_grad": 1664, "tolerance_chang": 1664, "history_s": 1664, "line_search_fn": 1664, "bfg": 1664, "minfunc": 1664, "intens": [1664, 1894], "param_byt": 1664, "strong_wolf": 1664, "reevalu": [1664, 1669, 1675, 1901], "momentum_decai": 1665, "004": 1665, "gamma_t": 1665, "psi": [1665, 1915], "mu_t": 1665, "96": 1665, "mu_": 1665, "11mm": 1665, "incorpor": [1665, 1905], "nesterov": [1665, 1674], "4e": 1665, "weightdecai": 1671, "18mm": 1671, "rho_": 1671, "6mm": 1671, "rho_t": 1671, "t_2": 1671, "l_t": 1671, "adamw": [1671, 1901], "_0": [1672, 1886, 1902], "av": 1672, "8mm": 1672, "3mm": 1672, "lectur": 1672, "hinton": 1672, "step_siz": [1673, 1690], "resili": [1673, 1894], "eta_": [1673, 1678, 1679], "etaplu": 1673, "etaminu": 1673, "gamma_": [1673, 1915], "0_": 1673, "eta_0": 1673, "i_": [1673, 1821], "15mm": [1673, 1674], "eta_t": [1673, 1678, 1679], "dampen": 1674, "sutskev": 1674, "veloc": 1674, "conflat": 1675, "is_spars": [1675, 1873, 1900, 1914, 1916], "maskedtensor": [1675, 1914], "gain": [1675, 1878], "rig": 1675, "insist": 1675, "lr_schedul": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1901], "chainabl": [1676, 1686], "081": 1676, "729": [1676, 1689], "6561": [1676, 1845], "59049": 1676, "scheduler1": [1676, 1689, 1901], "constantlr": [1676, 1689], "total_it": [1676, 1677, 1683, 1687, 1689], "scheduler2": [1676, 1689, 1901], "exponentiallr": [1676, 1689, 1901], "get_last_lr": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690], "print_lr": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690], "is_verbos": [1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690], "__dict__": [1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690], "last_epoch": [1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690], "mileston": [1677, 1683, 1684, 1689, 1901], "simultan": [1677, 1678, 1683, 1684, 1690, 1880, 1910], "025": [1677, 1683], "t_max": [1678, 1901], "eta_min": [1678, 1679], "anneal": [1678, 1679, 1686, 1901], "cur": [1678, 1679], "sgdr": [1678, 1679], "2k": 1678, "sole": 1678, "t_mult": 1679, "interleav": 1679, "base_lr": [1680, 1686], "max_lr": [1680, 1686], "step_size_up": 1680, "step_size_down": 1680, "scale_fn": 1680, "scale_mod": 1680, "cycle_momentum": [1680, 1686], "base_momentum": [1680, 1686], "max_momentum": [1680, 1686], "cyclic": 1680, "forth": [1680, 1841, 1854, 1904], "amplitud": [1680, 1686], "triangular2": 1680, "exp_rang": 1680, "bckenstler": 1680, "train_batch": [1680, 1686], "get_lr": 1680, "lr_lambda": [1682, 1685], "lambda1": 1682, "lambda2": 1682, "start_factor": 1683, "end_factor": 1683, "03125": 1683, "0375": 1683, "04375": 1683, "005": [1684, 1690], "lmbda": 1685, "total_step": 1686, "steps_per_epoch": 1686, "pct_start": 1686, "anneal_strategi": [1686, 1901], "div_factor": 1686, "final_div_factor": 1686, "three_phas": 1686, "1cycl": 1686, "fastai": 1686, "unpublish": 1686, "initial_lr": 1686, "min_lr": [1686, 1688], "1e4": 1686, "annihil": 1686, "00075": 1687, "00050": 1687, "00025": 1687, "patienc": 1688, "threshold_mod": 1688, "cooldown": 1688, "stagnat": 1688, "new_lr": 1688, "hasn": [1688, 1870, 1902], "optimum": 1688, "dynamic_threshold": 1688, "val_loss": 1688, "81": 1689, "mn": 1692, "pca": [1694, 1914], "overestim": [1694, 1806], "nathan": [1694, 1806], "halko": [1694, 1806], "gunnar": [1694, 1806], "martinsson": [1694, 1806], "tropp": [1694, 1806], "probabilist": [1694, 1806], "0909": [1694, 1806], "4061": [1694, 1806], "na": [1694, 1806], "cmath": [1698, 1858], "4142j": 1698, "4331": 1701, "2475": [1701, 1804], "6834": 1701, "2791": 1701, "1875": 1701, "5561": 1701, "4670": 1701, "5428": 1702, "5854": 1702, "5261": [1702, 1805], "1857": 1702, "2498": 1702, "1646": [1702, 1883], "0705": 1702, "0629": 1702, "2962": 1702, "0821": [1702, 1762], "1831": 1702, "type1": [1703, 1858], "type2": [1703, 1858], "2117": 1705, "9765": 1705, "1707": 1705, "4884": 1705, "5661": 1705, "5795": 1705, "5280": 1705, "9206": 1705, "quantization_schem": [1706, 1707, 1708, 1709, 1710], "int_repr": [1706, 1707, 1858, 1900], "nchw": [1708, 1919], "qx": [1708, 1709, 1710], "00001": 1708, "max_pool1d": [1709, 1858, 1900, 1907], "max_pool2d": [1710, 1858, 1900, 1907], "quasirandom": 1711, "scrambl": 1711, "sobol": 1711, "quasi": 1711, "21201": 1711, "web": 1711, "unsw": 1711, "au": [1711, 1902], "fkuo": 1711, "art": 1711, "owen": 1711, "niederreit": 1711, "xing": 1711, "466": 1711, "489": 1711, "decemb": 1711, "1998": 1711, "zh": 1711, "vychisl": 1711, "phy": 1711, "784": 1711, "802": 1711, "1967": 1711, "soboleng": 1711, "draw_base2": 1711, "base2": 1711, "fast_forward": 1711, "142": 1712, "283": 1712, "570": 1712, "359": 1712, "9894": 1712, "2503": 1713, "3525": 1713, "5673": 1713, "8237": 1713, "5781": 1713, "6879": 1713, "3816": 1713, "7249": 1713, "0998": 1713, "1436": 1717, "9966": 1717, "3426": 1717, "6366": 1717, "5954": 1717, "8929": 1717, "0923": 1717, "1719": 1717, "4709": 1717, "1996": 1717, "4595": 1723, "4314": 1723, "flat": [1726, 1769, 1858, 1875, 1898], "n2": 1726, "n3": 1726, "negat": [1729, 1813, 1860], "is_neg": [1729, 1858, 1900], "equidist": 1733, "inexact": 1733, "1234567": 1733, "1230": 1733, "vstack": [1734, 1858, 1900, 1914], "0370": 1735, "2970": 1735, "5420": 1735, "9105": 1735, "8351": 1735, "pickle_protocol": [1736, 1902], "default_protocol": 1736, "_use_new_zipfile_seri": 1736, "zipfil": [1736, 1902], "sorted_sequ": [1740, 1858], "sorter": [1740, 1858], "sorted_sequence_1d": 1740, "select_copi": [1742, 1858, 1900], "92701": [1744, 1917], "complaint": 1745, "bfloat16_3x": 1748, "denorm": [1749, 1894], "sse3": 1749, "323": 1749, "88131e": 1749, "324": 1749, "is_train": [1750, 1922], "interop": 1751, "intraop": 1752, "edgeitem": 1753, "linewidth": 1753, "sci_mod": 1753, "shamelessli": 1753, "repr": [1753, 1860], "sane": 1753, "_tensor_str": 1753, "_formatt": 1753, "12345": 1753, "1235": 1753, "excess": 1755, "24j": 1756, "8000j": 1756, "9600j": 1756, "4472": [1756, 1891], "8944j": 1756, "expit": [1757, 1915], "sym": [1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769], "2222": [1759, 1819], "4444": 1759, "8889": 1759, "4901e": 1760, "4000e": 1760, "0077e": 1760, "4923e": 1760, "waveform": [1761, 1762, 1763], "1564": 1761, "4540": 1761, "8910": 1761, "9877": 1761, "1423": [1761, 1783], "4154": 1761, "8413": [1761, 1915], "0302": 1762, "2231": 1762, "6065": 1762, "5400e": 1762, "3546e": 1762, "4788e": 1762, "8316e": 1762, "02": [1762, 1763, 1768], "3534e": 1762, "0065e": [1763, 1768], "1875e": [1763, 1768], "3937e": [1763, 1768], "2465e": [1763, 1768], "8250e": [1763, 1768], "9858e": [1763, 1768], "1365e": [1763, 1768], "8659e": [1763, 1768], "4658e": [1763, 1768], "3941e": [1763, 1768], "5400": 1764, "3376": 1764, "4200": 1764, "9136": 1764, "wit": [1764, 1857], "0955": [1764, 1765, 1767], "3455": [1764, 1765, 1767], "6545": [1764, 1765, 1767], "9045": [1764, 1765, 1767], "0800": [1765, 1766], "1876": [1765, 1766], "4601": [1765, 1766], "7700": [1765, 1766], "9723": [1765, 1766], "1679": 1766, "3979": 1766, "6821": 1766, "9121": 1766, "1170": 1767, "9698": 1767, "36358": 1769, "z_n": [1769, 1880], "48917": 1769, "2z_n": 1769, "13659": 1769, "3z_n": 1769, "01064": 1769, "4z_n": 1769, "\u03c0": 1769, "sidelob": 1769, "transact": 1769, "acoust": 1769, "speech": 1769, "84": 1769, "91": 1769, "feb": 1769, "1981": 1769, "tassp": 1769, "1163506": 1769, "heinzel": 1769, "spectrum": [1769, 1894], "dft": 1769, "comprehens": [1769, 1860, 1861, 1874, 1883, 1889, 1905], "februari": 1769, "holomet": 1769, "fnal": 1769, "gov": 1769, "gh_fft": 1769, "nutal": 1769, "general_ham": 1769, "6280e": 1769, "2698e": 1769, "1052e": 1769, "9826e": 1769, "5461": [1771, 1891], "1347": 1771, "7266": 1771, "2746": 1771, "5194": 1771, "1343": 1771, "4032": 1771, "2711": 1771, "5380": 1773, "8632": 1773, "1265": 1773, "9399": 1773, "5644": 1773, "9744": 1773, "1268": 1773, "2162": 1778, "6719": 1778, "3332": 1778, "5793": [1778, 1891], "0061": 1778, "6058": 1778, "9497": 1778, "5071": 1778, "3343": 1778, "9553": 1778, "0960": 1778, "derivati": [1779, 1782], "sparsr": 1780, "run_my_model": 1780, "prev_checks_en": 1780, "check_invari": [1780, 1787, 1788, 1789, 1790, 1791, 1792, 1914], "sparse_csr_tensor": [1780, 1858, 1900, 1914], "z_": [1782, 1880, 1915], "bigoplus_": 1782, "kj": 1782, "bigoplu": 1782, "sparseaddmmbackward0": 1782, "sparsemmreduceimplbackward0": 1782, "sparsiti": [1783, 1855, 1867, 1878], "spy": 1783, "2847": 1783, "7805": 1783, "1900": [1783, 1895], "to_dens": [1783, 1785, 1858, 1900, 1914], "3903": 1783, "x_k": 1784, "6438": 1786, "6467": 1786, "3411": 1786, "0918": 1786, "5348": 1786, "0634": 1786, "0494": 1786, "0646": 1786, "1844": 1786, "1276": 1786, "1874": 1786, "6334": 1786, "9682": 1786, "5340": 1786, "7483": 1786, "4512": 1786, "4073": 1786, "8901": 1786, "3183": 1786, "7539": 1786, "6596": 1786, "ncolblock": [1787, 1914], "array_list": [1787, 1788, 1789, 1791, 1792], "nrow": [1787, 1788, 1789, 1791, 1792, 1914], "ncol": [1787, 1788, 1789, 1791, 1792, 1914], "denses": [1787, 1788, 1789, 1791, 1792, 1914], "check_sparse_tensor_invari": [1787, 1788, 1789, 1790, 1791, 1792, 1914], "nrowblock": [1788, 1914], "compressed_indic": [1789, 1858, 1914], "plain_indic": [1789, 1858, 1914], "compressed_dim_s": [1789, 1914], "rdinat": 1790, "_indic": [1790, 1900, 1914], "0755": [1794, 1795], "0226": [1794, 1795], "0831": [1794, 1795], "4806": [1794, 1795], "0112": 1794, "2883": 1794, "6933": 1794, "0457": 1795, "0069": 1795, "2310": 1795, "2959": [1799, 1800, 1842, 1843], "8101": [1799, 1800, 1842, 1843], "5027": [1799, 1800, 1842, 1843], "3270": [1799, 1800, 1842, 1843], "5905": [1799, 1800, 1842, 1843], "6538": [1799, 1800, 1842, 1843, 1891], "3330": [1799, 1800, 1842, 1843], "5596": [1799, 1800, 1842, 1843], "6548": [1799, 1800, 1842, 1843], "1264": [1799, 1800, 1842, 1843], "5080": [1799, 1800, 1805, 1842, 1843, 1891], "6420": [1799, 1800, 1842, 1843], "1992": [1799, 1800, 1842, 1843], "0311": [1799, 1915], "7477": 1799, "2204": 1799, "9087": 1799, "2620": 1800, "0028": [1800, 1825], "0957": 1800, "6038": 1800, "0645": [1800, 1843], "4485": [1800, 1843], "8707": [1800, 1843], "0665": [1800, 1843], "librosa": 1801, "omega": 1801, "win": [1801, 1880], "_fft": [1801, 1858], "dimnsion": 1801, "1133": 1804, "2958": 1804, "5475": 1804, "0569": 1804, "0737": 1804, "3429": 1804, "9138": 1804, "9337": 1804, "6864": [1804, 1829], "1132": 1804, "7892": 1804, "1003": 1804, "5688": 1804, "3637": 1804, "9906": 1804, "5197": 1804, "4598": 1804, "3708": 1804, "6217": 1804, "435": 1804, "1335": 1804, "3135": 1804, "gesdd": 1805, "conquer": 1805, "gesvdjbatch": 1805, "fortran": 1805, "\u00b9": 1805, "2364": 1805, "7752": 1805, "7201": 1805, "7394": 1805, "0504": 1805, "3371": 1805, "5296": 1805, "3550": 1805, "5569": 1805, "2445": 1805, "1414": 1805, "4027": 1805, "0287": 1805, "5434": 1805, "1946": 1805, "8833": 1805, "3679": 1805, "4296": 1805, "2890": 1805, "6604": 1805, "2717": 1805, "2618": 1805, "4234": 1805, "2481": 1805, "4733": 1805, "3289": [1805, 1896], "0315": 1805, "7806": 1805, "0199": 1805, "8766": 1805, "4809": 1805, "4054": 1805, "7600": 1805, "8611": 1805, "2594": 1805, "4373": 1805, "6531e": 1805, "a_big": 1805, "6503e": 1805, "swapax": [1808, 1858, 1900, 1918], "1995": 1814, "4608": 1814, "7702": 1814, "4875": 1814, "9158": 1814, "5872": 1814, "6929": 1814, "6932": 1814, "take_along_axi": [1816, 1886], "max_idx": 1816, "sorted_idx": 1816, "2027": 1817, "7687": 1817, "4412": 1817, "3856": 1817, "5930": 1817, "9859": 1817, "4722": 1817, "3366": 1817, "8986": 1818, "7279": 1818, "1745": 1818, "7156": 1818, "8257": 1818, "2553": 1818, "11111": 1819, "222222": 1819, "3333333": 1819, "1111": 1819, "array_split": 1820, "i_d": 1821, "k_": 1821, "4532": 1821, "4874": 1821, "5018": 1821, "4796": [1821, 1895], "5162": 1821, "5306": 1821, "2922": 1821, "7556": 1821, "2741": 1821, "3161": 1821, "0704": 1821, "0187": 1821, "4079": 1821, "3126": 1821, "8744": 1821, "8223": 1821, "9445": 1821, "4117": 1821, "7780": 1821, "7193": 1821, "4867": 1821, "3204": 1821, "5513": 1821, "4737": [1821, 1846], "2850": 1821, "2573": 1821, "5997": 1821, "sparsebsr": 1825, "sparsecsc": 1825, "sparsebsc": 1825, "9893": 1825, "5809": 1825, "1669": 1825, "7299": 1825, "4942": [1825, 1891], "y_0": 1826, "y_1": 1826, "x_diff": 1826, "y_diff": 1826, "riemann": [1826, 1880, 1888, 1915], "badli": 1828, "cloned_coeffici": 1828, "1527": 1828, "0753": 1828, "7986": 1828, "0210": 1828, "3513": 1828, "5492": 1828, "7403": 1828, "0243": 1828, "7841": 1828, "9046": 1828, "5405": 1828, "9320": 1828, "9270": 1828, "2826": 1828, "lbrace": [1829, 1830, 1831, 1832], "rbrace": [1829, 1830, 1831, 1832], "0813": 1829, "8619": 1829, "7105": 1829, "0935": 1829, "1380": 1829, "3409": [1829, 1895], "2219": 1829, "5653": 1829, "2521": 1829, "2345": 1829, "2544": 1829, "3461": 1829, "4785": 1829, "4477": 1829, "6049": 1829, "6368": 1829, "8775": 1829, "7145": 1829, "1502": 1829, "2716": 1829, "1243": 1829, "5413": 1829, "3615": 1829, "0614": 1829, "7344": 1829, "3164": 1829, "7648": 1829, "4024": 1829, "0978": 1829, "col": [1830, 1832, 1858], "2309": 1831, "5207": 1831, "0049": 1831, "2072": 1831, "0680": 1831, "6602": 1831, "3480": 1831, "5211": 1831, "4573": 1831, "5876": 1831, "0794": [1831, 1915], "8373": 1831, "6654": 1831, "2604": 1831, "5235": 1831, "2447": 1831, "9556": 1831, "2919": 1831, "1768": 1831, "4333": 1831, "3146": [1831, 1891], "6576": 1831, "0432": 1831, "9348": [1831, 1915], "4410": 1831, "9888": 1831, "3337": 1831, "6556": 1831, "4798": 1831, "5466": 1834, "8008": 1834, "9079": 1834, "unique_consecut": [1837, 1858, 1900], "inverse_indic": [1837, 1838], "warn_onli": 1840, "alon": [1840, 1859, 1902], "put_": [1840, 1858], "index_add": [1840, 1858, 1900], "index_select": [1840, 1856, 1858, 1900, 1914], "fractionalmaxpool2d": 1840, "fractionalmaxpool3d": 1840, "reflectionpad1d": 1840, "reflectionpad3d": 1840, "replicationpad1d": 1840, "replicationpad3d": 1840, "histc": [1840, 1858, 1900], "bincount": [1840, 1858, 1900], "kthvalu": [1840, 1858, 1873, 1900], "cublasapi_reproduc": [1840, 1895], "avg_pool3d_backward_cuda": 1840, "alexandr": 1841, "theophil": 1841, "0631": 1842, "5590": 1842, "4893": 1842, "8258": 1842, "5926": 1843, "0056": 1843, "3646": 1843, "vecdot": 1844, "mi": [1845, 1846], "6116": 1845, "5772": [1845, 1915], "4606": 1845, "9120": 1845, "0786": 1845, "7497": 1845, "6623": 1845, "5772j": 1845, "9120j": 1845, "7497j": 1845, "6623j": 1845, "3839j": 1846, "2098": 1846, "6699j": 1846, "3470": 1846, "9451j": 1846, "5174": 1846, "3136j": 1846, "6699": 1846, "9451": 1846, "3136": 1846, "atleast_2d": [1849, 1858, 1900], "3139": 1850, "3898": 1850, "1657": 1850, "0383": 1850, "8785": 1850, "1089": 1850, "hubconf": 1854, "entrypoint_nam": 1854, "_resnet18": 1854, "underscor": [1854, 1874, 1910, 1920], "load_state_dict_from_url": [1854, 1869], "2gb": 1854, "relative_path_to_checkpoint": 1854, "pth": [1854, 1869, 1896], "dirnam": 1854, "5c106cde": [1854, 1869], "force_reload": 1854, "skip_valid": 1854, "trust_repo": 1854, "repo_own": 1854, "repo_nam": 1854, "torchhub": 1854, "owner": [1854, 1885, 1900, 1910, 1911], "github_token": 1854, "repo_or_dir": 1854, "mute": 1854, "resnet50_weight": 1854, "imagenet1k_v1": 1854, "download_url_to_fil": 1854, "hash_prefix": 1854, "temporary_fil": 1854, "sha256": [1854, 1869], "s3": [1854, 1869, 1897], "amazonaw": [1854, 1869, 1897], "model_dir": [1854, 1869], "check_hash": [1854, 1869], "hub_dir": [1854, 1869], "get_dir": [1854, 1869], "ext": [1854, 1869], "eight": [1854, 1869], "hash": [1854, 1858, 1860, 1869, 1900], "succinct": 1854, "set_dir": 1854, "path_to_hub_dir": 1854, "torch_hom": 1854, "xdg_cache_hom": [1854, 1883], "reiniti": 1854, "path_importer_cach": 1854, "subpackag": [1854, 1902], "offend": 1854, "classifi": [1855, 1860, 1898, 1901, 1905, 1919], "pypi": 1855, "conda": [1855, 1897], "hip": 1855, "_log": [1855, 1860], "javadoc": 1855, "uninitializedbuff": 1855, "anomali": 1855, "can_device_access_p": 1855, "current_blas_handl": 1855, "device_of": 1855, "get_arch_list": 1855, "get_device_cap": 1855, "get_device_nam": 1855, "get_device_properti": 1855, "get_gencode_flag": 1855, "get_sync_debug_mod": 1855, "ipc_collect": 1855, "memory_usag": 1855, "set_stream": 1855, "set_sync_debug_mod": 1855, "power_draw": 1855, "clock_rat": 1855, "outofmemoryerror": 1855, "jiter": 1855, "sanit": 1855, "get_rng_stat": [1855, 1909], "set_rng_stat": [1855, 1909], "empty_cach": [1855, 1883, 1889], "set_per_process_memory_fract": 1855, "current_allocated_memori": 1855, "driver_allocated_memori": 1855, "pathwis": 1855, "exponentialfamili": 1855, "binomi": [1855, 1858, 1900], "chi2": 1855, "continuousbernoulli": 1855, "dirichlet": 1855, "fishersnedecor": 1855, "halfcauchi": 1855, "halfnorm": 1855, "kumaraswami": 1855, "lkjcholeski": 1855, "laplac": 1855, "lognorm": 1855, "lowrankmultivariatenorm": 1855, "mixturesamefamili": 1855, "multinomi": [1855, 1858, 1900], "multivariatenorm": 1855, "negativebinomi": 1855, "onehotcategor": 1855, "relaxedbernoulli": 1855, "logitrelaxedbernoulli": 1855, "relaxedonehotcategor": 1855, "studentt": 1855, "transformeddistribut": 1855, "vonmis": 1855, "weibul": 1855, "wishart": 1855, "solver": [1855, 1894], "misc": 1855, "normal_": [1855, 1858, 1873, 1878, 1883, 1922], "constant_": [1855, 1878], "ones_": [1855, 1878], "zeros_": [1855, 1878], "eye_": [1855, 1862, 1878], "dirac_": [1855, 1862, 1878], "xavier_uniform_": [1855, 1878], "xavier_normal_": [1855, 1878, 1891], "kaiming_uniform_": [1855, 1878], "trunc_normal_": [1855, 1878], "orthogonal_": [1855, 1862, 1878, 1891], "sparse_": [1855, 1878], "alexnet": 1855, "preview": 1855, "swa": 1855, "ema": 1855, "powersgd": 1855, "remotemodul": 1855, "fork_rng": [1855, 1909], "doublestorag": [1855, 1916], "floatstorag": [1855, 1916], "halfstorag": [1855, 1916], "longstorag": [1855, 1916], "intstorag": [1855, 1916], "shortstorag": [1855, 1916], "charstorag": [1855, 1916], "bytestorag": [1855, 1916], "boolstorag": [1855, 1916], "bfloat16storag": [1855, 1916], "complexdoublestorag": [1855, 1916], "complexfloatstorag": [1855, 1916], "quint8storag": [1855, 1916], "qint8storag": [1855, 1916], "qint32storag": [1855, 1916], "quint4x2storag": [1855, 1916], "quint2x4storag": [1855, 1916], "make_tensor": [1855, 1921], "assert_allclos": [1855, 1921], "sampler": 1855, "mobile_optim": 1855, "optimize_for_mobil": [1855, 1868], "model_zoo": 1855, "load_url": [1855, 1869], "tensorboard": [1855, 1870, 1904], "summarywrit": [1855, 1870, 1919], "iinfo": 1855, "unifi": [1855, 1874], "__config__": [1855, 1882], "set_log": [1855, 1866], "torchdata": 1855, "torchserv": 1855, "torchtext": 1855, "_out": [1856, 1878, 1888], "_adaptive_avg_pool2d": [1856, 1900], "_adaptive_avg_pool2d_backward": 1856, "_log_softmax": [1856, 1900], "half_to_float": 1856, "_native_batch_norm_legit": [1856, 1900], "no_stat": 1856, "_softmax": [1856, 1900, 1915], "_to_copi": [1856, 1900], "scalartyp": 1856, "memoryformat": 1856, "start_step": 1856, "avg_pool2d": [1856, 1858, 1900, 1907], "avg_pool2d_backward": 1856, "constant_pad_nd": [1856, 1858, 1900], "convolution_backward": 1856, "bias_siz": 1856, "output_mask": 1856, "embedding_dense_backward": 1856, "num_weight": 1856, "interpolation_mod": [1856, 1858], "isinf": [1856, 1858, 1900, 1914], "max_pool2d_with_indic": [1856, 1858, 1900], "max_pool2d_with_indices_backward": 1856, "max_pool3d_with_indic": [1856, 1858, 1900], "native_batch_norm": [1856, 1858, 1900], "native_dropout": [1856, 1858, 1900], "native_group_norm": [1856, 1858, 1900], "hxw": [1856, 1858], "native_group_norm_backward": 1856, "rstd": 1856, "native_layer_norm": [1856, 1858, 1900], "native_layer_norm_backward": 1856, "tensor_scalar": 1856, "tensor_tensor": 1856, "scalar_tensor": [1856, 1858, 1900], "slice_scatt": [1856, 1858, 1900], "dim_intlist": 1856, "upsample_bilinear2d": [1856, 1858, 1900], "upsample_nearest2d": [1856, 1858, 1900], "convert_element_typ": [1856, 1900], "broadcast_in_dim": [1856, 1900], "bessel_i0": [1856, 1900], "bessel_i1": [1856, 1900], "bessel_j0": [1856, 1900, 1915], "bessel_j1": [1856, 1900, 1915], "cbrt": [1856, 1900], "erf_inv": [1856, 1900], "erfcx": [1856, 1900, 1915], "exp2": [1856, 1858, 1900, 1915, 1919], "isfinit": [1856, 1858, 1894, 1900], "ndtri": [1856, 1900, 1915], "spherical_bessel_j0": [1856, 1900, 1915], "fmax": [1856, 1858, 1900], "fmin": [1856, 1858, 1900], "shift_left": [1856, 1900], "shift_right_arithmet": [1856, 1900], "zeta": [1856, 1883, 1900, 1915], "broadcast_dimens": 1856, "collapse_view": [1856, 1900], "start_indic": 1856, "limit_indic": 1856, "slice_in_dim": [1856, 1900], "start_index": 1856, "limit_index": 1856, "split_dim": [1856, 1900], "outer_length": 1856, "view_of": [1856, 1900], "as_strided_scatt": [1856, 1858, 1900], "collaps": [1856, 1873, 1900], "rev": [1856, 1900], "device_put": [1856, 1900], "maximum_valu": [1856, 1900], "minimum_valu": [1856, 1900], "copy_strid": [1856, 1900], "copy_to": [1856, 1900], "xor_sum": [1856, 1900], "empty_permut": [1856, 1858, 1900], "physical_layout": [1856, 1858], "iota": [1856, 1900], "fft_r2c": [1856, 1900], "fft_c2c": [1856, 1900], "fft_c2r": [1856, 1900], "disadvantag": 1857, "gentl": 1857, "beam": 1857, "traced_bar": 1857, "myscriptmodul": 1857, "103": [1857, 1859], "939": [1857, 1859], "116": [1857, 1859], "779": [1857, 1859], "123": [1857, 1859], "my_script_modul": [1857, 1859], "ins": 1857, "pytorch_jit": 1857, "traced_fn": 1857, "disable_jit_exampl": 1857, "printer": 1857, "rv": 1857, "rv0": 1857, "rv1": 1857, "ssa": 1857, "block0": 1857, "block1": 1857, "loop_in_traced_fn": 1857, "input_tupl": 1857, "fill_row_zero": 1857, "tracerwarn": 1857, "disjoint": 1857, "nr": 1857, "09115803241729736": 1857, "6782537698745728": 1857, "cpu_model": 1857, "gpu_model": 1857, "sample_input_cpu": 1857, "sample_input_gpu": 1857, "traced_cpu": 1857, "traced_gpu": 1857, "use_gpu": 1857, "__constants__": [1857, 1859], "my_module_inst": 1857, "redeclar": 1857, "nn_module_inst": 1857, "my_scripted_model": 1857, "526": [1857, 1859, 1898], "script_method": 1857, "implicitly_compiled_method": 1857, "another_forward": 1857, "unused_method": 1857, "some_fn": 1857, "ever": [1857, 1916], "some_fn2": 1857, "some_fn3": 1857, "some_fn4": 1857, "my_dict": [1857, 1859], "my_int": [1857, 1859], "my_const": 1857, "make_dict": 1857, "nnc": 1857, "__and__": 1858, "__iand__": 1858, "__ilshift__": 1858, "__ior__": 1858, "__irshift__": 1858, "__ixor__": 1858, "__lshift__": 1858, "__or__": 1858, "__rshift__": 1858, "__xor__": 1858, "absolute_": 1858, "acos_": [1858, 1873], "addbmm_": 1858, "addcdiv_": 1858, "addcmul_": 1858, "addmv_": [1858, 1873], "addr_": 1858, "align_a": [1858, 1873, 1874, 1900], "align_to": [1858, 1873, 1874, 1900], "ellipsis_idx": 1858, "aminmax": [1858, 1900], "arccos_": 1858, "arccosh_": 1858, "arcsin_": [1858, 1914], "arcsinh_": 1858, "arctan2_": 1858, "arctan_": 1858, "arctanh_": 1858, "argwher": [1858, 1900], "as_strided_": 1858, "asin_": [1858, 1873, 1914], "asinh_": [1858, 1873], "atan_": [1858, 1873], "atanh_": [1858, 1873], "baddbmm_": 1858, "bernoulli_": [1858, 1873, 1922], "bitwise_and_": 1858, "bitwise_left_shift_": 1858, "bitwise_not_": [1858, 1873], "bitwise_or_": 1858, "bitwise_right_shift_": 1858, "bitwise_xor_": 1858, "broadcast_to": [1858, 1900], "cauchy_": [1858, 1873, 1922], "ceil_": [1858, 1873], "clamp_max": [1858, 1900], "clamp_max_": 1858, "clamp_min": [1858, 1900], "clamp_min_": 1858, "clip_": 1858, "conj_physical_": 1858, "copysign_": 1858, "cos_": [1858, 1873, 1880], "cosh_": [1858, 1873], "count_nonzero": [1858, 1900], "cummax": [1858, 1900], "cummin": [1858, 1900], "cumprod_": 1858, "cumsum_": 1858, "deg2rad": [1858, 1873, 1900, 1914], "deg2rad_": [1858, 1873, 1914], "outdim": 1858, "diagonal_scatt": [1858, 1900], "digamma_": [1858, 1873], "div_": [1858, 1873, 1914], "divide_": 1858, "dsplit": [1858, 1900], "eq_": 1858, "erf_": [1858, 1873], "erfc_": [1858, 1873], "erfinv_": [1858, 1873], "exp2_": 1858, "exp_": [1858, 1873], "expm1_": [1858, 1873], "exponential_": [1858, 1873, 1922], "fill_diagonal_": 1858, "fix_": 1858, "fliplr": [1858, 1900], "flipud": [1858, 1900], "float_power_": 1858, "floor_": [1858, 1873], "floor_divide_": [1858, 1914], "fmod_": 1858, "frac_": [1858, 1873], "frexp": [1858, 1900], "gcd_": 1858, "ge_": 1858, "geometric_": [1858, 1922], "ger": [1858, 1900], "get_devic": [1858, 1873, 1900, 1914, 1916, 1917], "greater_": 1858, "greater_equal_": 1858, "gt_": 1858, "hardshrink": [1858, 1900], "heavisid": [1858, 1900], "heaviside_": 1858, "hsplit": [1858, 1900, 1918], "hypot_": 1858, "i0_": 1858, "igamma_": 1858, "igammac_": 1858, "index_fil": [1858, 1873, 1900], "index_reduc": [1858, 1900], "is_coalesc": [1858, 1900, 1914], "is_complex": [1858, 1900, 1914, 1917], "is_contigu": [1858, 1873, 1900, 1918], "is_floating_point": [1858, 1873, 1900, 1914, 1917], "is_infer": [1858, 1900], "is_same_s": [1858, 1900, 1914], "is_set_to": [1858, 1900], "is_sign": [1858, 1873, 1900, 1914], "isclos": [1858, 1900], "isneginf": [1858, 1900, 1914], "isposinf": [1858, 1900, 1914], "isreal": [1858, 1900], "istft": [1858, 1900], "kron": [1858, 1900], "lcm_": 1858, "ldexp_": 1858, "le_": 1858, "lerp_": 1858, "less_": 1858, "less_equal_": 1858, "lgamma_": 1858, "log10_": [1858, 1873], "log1p_": [1858, 1873, 1914], "log2_": [1858, 1873], "log_normal_": [1858, 1873, 1922], "logaddexp2": [1858, 1900], "logcumsumexp": [1858, 1900], "logical_and_": 1858, "logical_not_": [1858, 1873], "logical_or_": 1858, "logical_xor_": 1858, "logit_": 1858, "lt_": 1858, "masked_scatt": [1858, 1900], "masked_select": [1858, 1873, 1900], "matrix_pow": [1858, 1900], "moveaxi": [1858, 1900], "msort": [1858, 1900], "multiply_": 1858, "mvlgamma_": 1858, "nan_to_num_": 1858, "nanmedian": [1858, 1873, 1900], "nansum": [1858, 1900], "narrow_copi": [1858, 1900, 1914], "ne_": 1858, "neg_": [1858, 1873, 1914], "negative_": [1858, 1914], "new_empty_strid": [1858, 1900], "new_ful": [1858, 1883, 1900], "new_on": [1858, 1900], "nextafter_": 1858, "nonzero_stat": [1858, 1900], "not_equal_": 1858, "output_nr": [1858, 1900], "polygamma_": 1858, "pow_": [1858, 1873], "q_per_channel_scal": [1858, 1900], "q_per_channel_zero_point": [1858, 1900], "q_scale": [1858, 1900], "q_zero_point": [1858, 1900], "rad2deg": [1858, 1873, 1900, 1914], "rad2deg_": [1858, 1873, 1914], "reciprocal_": [1858, 1873], "record_stream": [1858, 1883, 1900], "refine_nam": [1858, 1873, 1874, 1900], "relu_": [1858, 1907], "remainder_": 1858, "rename_": [1858, 1873, 1874], "renorm_": 1858, "reshape_a": [1858, 1875, 1900, 1918], "resize_a": [1858, 1900], "the_templ": 1858, "resize_as_sparse_": 1858, "retains_grad": [1858, 1900], "roll": [1858, 1900], "rot90": [1858, 1900], "round_": [1858, 1873], "rsqrt_": [1858, 1873], "select_scatt": [1858, 1900], "sgn_": [1858, 1873], "sigmoid_": [1858, 1873, 1907], "sign_": [1858, 1873], "sinc_": 1858, "sinh_": [1858, 1873], "smm": [1858, 1900, 1914], "sparse_resize_": 1858, "sparse_resize_and_clear_": 1858, "split_with_s": [1858, 1900, 1918], "sqrt_": [1858, 1873], "square_": 1858, "squeeze_": [1858, 1907], "sspaddmm": [1858, 1900, 1914], "sub_": [1858, 1873, 1914], "subtract_": 1858, "sum_to_s": [1858, 1900], "swapaxes_": 1858, "swapdim": [1858, 1900, 1918], "swapdims_": 1858, "take_along_dim": [1858, 1900], "tan_": [1858, 1873], "tanh_": [1858, 1873, 1907], "tensor_indices_or_sect": 1858, "to_mkldnn": [1858, 1900], "to_padded_tensor": [1858, 1875, 1900], "to_sparse_bsc": [1858, 1900], "to_sparse_bsr": [1858, 1900, 1914], "to_sparse_csc": [1858, 1900, 1914], "true_divide_": 1858, "trunc_": [1858, 1873], "type_a": [1858, 1873, 1900], "out0": [1858, 1896], "unsafe_chunk": [1858, 1900], "unsafe_split": [1858, 1900], "unsafe_split_with_s": [1858, 1900], "unsqueeze_": [1858, 1907], "view_a": [1858, 1900, 1918], "vsplit": [1858, 1900, 1918], "xlogy_": 1858, "adaptive_avg_pool2d": [1858, 1885, 1900, 1907], "adaptive_max_pool1d_with_indic": [1858, 1885], "adaptive_max_pool2d_with_indic": 1858, "adaptive_max_pool3d_with_indic": 1858, "alpha_dropout": [1858, 1900], "assert_int_or_pair": 1858, "arg_nam": 1858, "binary_cross_entropi": [1858, 1900], "binary_cross_entropy_with_logit": [1858, 1900], "celu": [1858, 1900], "dropout2d": 1858, "dropout3d": 1858, "feature_alpha_dropout": [1858, 1900], "fractional_max_pool2d_with_indic": 1858, "fractional_max_pool3d_with_indic": 1858, "gaussian_nll_loss": 1858, "glu": [1858, 1900], "gumbel_softmax": 1858, "hardsigmoid": [1858, 1900, 1907], "hardswish": [1858, 1900, 1907], "huber_loss": [1858, 1900], "instance_norm": [1858, 1900, 1907], "local_response_norm": 1858, "lp_pool1d": 1858, "lp_pool2d": 1858, "max_pool1d_with_indic": [1858, 1900], "mish": [1858, 1900], "multi_head_attention_forward": 1858, "embed_dim_to_check": 1858, "in_proj_weight": 1858, "in_proj_bia": 1858, "bias_k": 1858, "bias_v": 1858, "out_proj_weight": 1858, "out_proj_bia": 1858, "use_separate_proj_weight": 1858, "q_proj_weight": 1858, "k_proj_weight": 1858, "v_proj_weight": 1858, "static_k": 1858, "static_v": 1858, "multilabel_soft_margin_loss": 1858, "relu6": [1858, 1900, 1907], "silu": [1858, 1875, 1900], "softsign": 1858, "tanhshrink": 1858, "adaptive_avg_pool1d": [1858, 1885, 1900, 1907], "adaptive_max_pool1d": [1858, 1885, 1900], "affine_grid_gener": [1858, 1900], "alias_copi": [1858, 1900], "align_tensor": [1858, 1900], "alpha_dropout_": 1858, "as_strided_copi": [1858, 1900], "atleast_1d": [1858, 1900], "avg_pool1d": [1858, 1900, 1907], "bartlett_window": [1858, 1862, 1900], "cudnn_en": 1858, "batch_norm_backward_elemt": 1858, "invstd": 1858, "mean_di": 1858, "mean_dy_xmu": 1858, "batch_norm_backward_reduc": 1858, "input_g": 1858, "bias_g": 1858, "out3": 1858, "batch_norm_elemt": [1858, 1900], "batch_norm_gather_stat": [1858, 1900], "batch_norm_gather_stats_with_count": [1858, 1900], "batch_norm_stat": [1858, 1900], "batch_norm_update_stat": [1858, 1900], "blackman_window": [1858, 1862, 1900], "block_diag": [1858, 1900], "can_cast": [1858, 1900], "ccol_indices_copi": [1858, 1900], "celu_": 1858, "choose_qparams_optim": [1858, 1900], "n_bin": 1858, "bit_width": 1858, "col_indices_copi": [1858, 1900], "column_stack": [1858, 1900], "conv_tbc": [1858, 1900], "crow_indices_copi": [1858, 1900], "cudnn_affine_grid_gener": [1858, 1900], "cudnn_batch_norm": [1858, 1900], "exponential_average_factor": 1858, "cudnn_convolut": [1858, 1900], "cudnn_convolution_add_relu": [1858, 1900], "cudnn_convolution_relu": [1858, 1900], "cudnn_convolution_transpos": [1858, 1900], "cudnn_grid_sampl": [1858, 1900], "cudnn_is_accept": [1858, 1900], "cumulative_trapezoid": [1858, 1900], "diagonal_copi": [1858, 1900], "dropout_": [1858, 1868], "embedding_renorm_": 1858, "empty_quant": [1858, 1900], "anyenumtyp": 1858, "expand_copi": [1858, 1900], "fake_quantize_per_channel_affin": [1858, 1900], "fbgemm_linear_fp16_weight": [1858, 1900], "packed_weight": 1858, "fbgemm_linear_fp16_weight_fp32_activ": [1858, 1900], "fbgemm_linear_int8_weight": [1858, 1900], "col_offset": 1858, "weight_scal": 1858, "weight_zero_point": 1858, "fbgemm_linear_int8_weight_fp32_activ": [1858, 1900], "fbgemm_linear_quantize_weight": [1858, 1900], "fbgemm_pack_gemm_matrix_fp16": [1858, 1900], "fbgemm_pack_quantized_matrix": [1858, 1900], "feature_alpha_dropout_": 1858, "feature_dropout": [1858, 1900], "feature_dropout_": 1858, "frobenius_norm": [1858, 1900], "from_fil": [1858, 1900, 1916], "fused_moving_avg_obs_fake_qu": [1858, 1900], "observer_on": 1858, "fake_quant_on": 1858, "running_min": 1858, "running_max": 1858, "per_row_fake_qu": 1858, "symmetric_qu": 1858, "has_bias": 1858, "gru_cel": [1858, 1900], "w_ih": 1858, "w_hh": 1858, "hamming_window": [1858, 1862, 1900], "histogramdd": [1858, 1900], "hspmm": [1858, 1900, 1914], "indices_copi": [1858, 1900], "is_autocast_cpu_en": [1858, 1900], "is_autocast_en": [1858, 1900], "is_grad_en": [1858, 1900], "is_vulkan_avail": [1858, 1900], "isin": [1858, 1900], "kaiser_window": [1858, 1900], "lstm_cell": [1858, 1900], "meshgrid": [1858, 1900], "miopen_batch_norm": [1858, 1900], "miopen_convolut": [1858, 1900], "miopen_convolution_add_relu": [1858, 1900], "miopen_convolution_relu": [1858, 1900], "miopen_convolution_transpos": [1858, 1900], "miopen_depthwise_convolut": [1858, 1900], "miopen_rnn": [1858, 1900], "weight_stride0": 1858, "dropout_st": 1858, "out4": 1858, "mkldnn_adaptive_avg_pool2d": [1858, 1900], "mkldnn_convolut": [1858, 1900], "mkldnn_linear_backward_weight": 1858, "bias_defin": 1858, "mkldnn_max_pool2d": [1858, 1900], "mkldnn_max_pool3d": [1858, 1900], "mkldnn_rnn_layer": [1858, 1900], "weight0": 1858, "weight1": 1858, "weight2": 1858, "weight3": 1858, "hx_": 1858, "cx_": 1858, "save_mean": 1858, "save_invstd": 1858, "native_channel_shuffl": [1858, 1900], "native_norm": [1858, 1900, 1914], "norm_except_dim": [1858, 1900], "nuclear_norm": [1858, 1900], "pairwise_dist": [1858, 1900], "permute_copi": [1858, 1900], "promote_typ": [1858, 1900, 1921], "quantize_per_channel": [1858, 1900, 1905], "quantize_per_tensor_dynam": [1858, 1900, 1905], "quantized_batch_norm": [1858, 1900], "quantized_gru_cel": [1858, 1900], "packed_ih": 1858, "packed_hh": 1858, "col_offsets_ih": 1858, "col_offsets_hh": 1858, "scale_ih": 1858, "scale_hh": 1858, "zero_point_ih": 1858, "zero_point_hh": 1858, "quantized_lstm_cel": [1858, 1900], "quantized_max_pool1d": [1858, 1900], "quantized_max_pool2d": [1858, 1900], "quantized_rnn_relu_cel": [1858, 1900], "quantized_rnn_tanh_cel": [1858, 1900], "rand_lik": [1858, 1862, 1883, 1900, 1922], "randint_lik": [1858, 1862, 1900, 1922], "randn_lik": [1858, 1862, 1875, 1900, 1922], "randperm": [1858, 1862, 1900, 1922], "result_typ": [1858, 1900], "scalar1": 1858, "scalar2": 1858, "rnn_relu": [1858, 1900], "rnn_relu_cel": [1858, 1900], "rnn_tanh": [1858, 1900], "rnn_tanh_cel": [1858, 1900], "row_indices_copi": [1858, 1900], "row_stack": [1858, 1900], "rrelu_": 1858, "rsub": [1858, 1900], "searchsort": [1858, 1900], "segment_reduc": [1858, 1900], "selu_": 1858, "slice_copi": [1858, 1900], "sparse_bsc_tensor": [1858, 1900, 1914], "sparse_bsr_tensor": [1858, 1900, 1914], "sparse_compressed_tensor": [1858, 1900, 1914], "sparse_csc_tensor": [1858, 1900, 1914], "split_copi": [1858, 1900], "split_with_sizes_copi": [1858, 1900], "squeeze_copi": [1858, 1900], "std_mean": [1858, 1873, 1900], "t_copi": [1858, 1900], "threshold_": 1858, "transpose_copi": [1858, 1900], "trapz": [1858, 1900], "tril_indic": [1858, 1862, 1900], "triu_indic": [1858, 1862, 1900], "unbind_copi": [1858, 1900], "unfold_copi": [1858, 1900], "unsqueeze_copi": [1858, 1900], "values_copi": [1858, 1900], "vander": [1858, 1862, 1900], "var_mean": [1858, 1873, 1900], "view_as_complex_copi": [1858, 1900], "view_as_real_copi": [1858, 1900], "_nn": 1858, "adaptive_max_pool2d": [1858, 1900], "conv_depthwise3d": [1858, 1900], "cross_entropy_loss": [1858, 1900], "input_scal": 1858, "elu_": 1858, "flatten_dense_tensor": [1858, 1900], "random_sampl": 1858, "gelu_": 1858, "hardsigmoid_": [1858, 1907], "hardswish_": 1858, "hardtanh_": [1858, 1907], "leaky_relu_": 1858, "log_sigmoid": [1858, 1900], "mish_": 1858, "mkldnn_linear": [1858, 1900], "mkldnn_reorder_conv2d_weight": [1858, 1900], "mkldnn_reorder_conv3d_weight": [1858, 1900], "nll_loss2d": [1858, 1900], "nll_loss_nd": [1858, 1900], "reflection_pad3d": [1858, 1900], "relu6_": 1858, "rrelu_with_nois": [1858, 1900], "rrelu_with_noise_": 1858, "silu_": 1858, "slow_conv3d": [1858, 1900], "slow_conv_dilated2d": [1858, 1900], "slow_conv_dilated3d": [1858, 1900], "slow_conv_transpose2d": [1858, 1900], "slow_conv_transpose3d": [1858, 1900], "softshrink": [1858, 1900], "thnn_conv2d": [1858, 1900], "unflatten_dense_tensor": [1858, 1900], "upsample_bicubic2d": [1858, 1900], "scales_h": 1858, "scales_w": 1858, "upsample_linear1d": [1858, 1900], "upsample_nearest1d": [1858, 1900], "upsample_nearest3d": [1858, 1900], "scales_d": 1858, "upsample_trilinear3d": [1858, 1900], "fft_fftfreq": [1858, 1900], "fft_fftshift": [1858, 1900], "fft_hfft2": [1858, 1900], "fft_hfftn": [1858, 1900], "fft_ifftshift": [1858, 1900], "fft_ihfft2": [1858, 1900], "fft_ihfftn": [1858, 1900], "fft_rfftfreq": [1858, 1900], "_linalg": 1858, "linalg_cross": [1858, 1900], "linalg_det": [1858, 1900], "linalg_diagon": [1858, 1900], "eigvec": 1858, "linalg_ldl_factor": [1858, 1900], "linalg_ldl_factor_ex": [1858, 1900], "linalg_ldl_solv": [1858, 1900], "linalg_lu": [1858, 1900], "linalg_lu_factor": [1858, 1900], "linalg_lu_factor_ex": [1858, 1900], "linalg_lu_solv": [1858, 1900], "linalg_matmul": [1858, 1900], "linalg_matrix_exp": [1858, 1900], "linalg_matrix_pow": [1858, 1900], "linalg_multi_dot": [1858, 1900], "linalg_norm": [1858, 1900], "linalg_pinv": [1858, 1900], "linalg_solve_ex": [1858, 1900], "linalg_solve_triangular": [1858, 1900], "linalg_vand": [1858, 1900], "linalg_vecdot": [1858, 1900], "linalg_vector_norm": [1858, 1900], "_nest": 1858, "nested_to_padded_tensor": [1858, 1900], "_spars": 1858, "sparse_sampled_addmm": [1858, 1900], "_special": 1858, "special_airy_ai": [1858, 1900], "special_bessel_j0": [1858, 1900], "special_bessel_j1": [1858, 1900], "special_bessel_y0": [1858, 1900], "special_bessel_y1": [1858, 1900], "special_chebyshev_polynomial_t": [1858, 1900], "special_chebyshev_polynomial_u": [1858, 1900], "special_chebyshev_polynomial_v": [1858, 1900], "special_chebyshev_polynomial_w": [1858, 1900], "special_digamma": [1858, 1900], "special_entr": [1858, 1900], "special_erf": [1858, 1900], "special_erfc": [1858, 1900], "special_erfcx": [1858, 1900], "special_erfinv": [1858, 1900], "special_exp2": [1858, 1900], "special_expit": [1858, 1900], "special_expm1": [1858, 1900], "special_gammainc": [1858, 1900], "special_gammaincc": [1858, 1900], "special_gammaln": [1858, 1900], "special_hermite_polynomial_h": [1858, 1900], "special_i0": [1858, 1900], "special_i1": [1858, 1900], "special_laguerre_polynomial_l": [1858, 1900], "special_legendre_polynomial_p": [1858, 1900], "special_log1p": [1858, 1900], "special_log_ndtr": [1858, 1900], "special_log_softmax": [1858, 1900], "special_logit": [1858, 1900], "special_logsumexp": [1858, 1900], "special_modified_bessel_i0": [1858, 1900], "special_modified_bessel_i1": [1858, 1900], "special_modified_bessel_k0": [1858, 1900], "special_modified_bessel_k1": [1858, 1900], "special_multigammaln": [1858, 1900], "special_ndtr": [1858, 1900], "special_ndtri": [1858, 1900], "special_polygamma": [1858, 1900], "special_psi": [1858, 1900], "special_round": [1858, 1900], "special_scaled_modified_bessel_k0": [1858, 1900], "special_scaled_modified_bessel_k1": [1858, 1900], "special_shifted_chebyshev_polynomial_t": [1858, 1900], "special_shifted_chebyshev_polynomial_u": [1858, 1900], "special_shifted_chebyshev_polynomial_v": [1858, 1900], "special_shifted_chebyshev_polynomial_w": [1858, 1900], "special_sinc": [1858, 1900], "special_softmax": [1858, 1900], "special_spherical_bessel_j0": [1858, 1900], "special_xlog1pi": [1858, 1900], "special_xlogi": [1858, 1900], "special_zeta": [1858, 1900], "tval": 1858, "is_accept": 1858, "rect": 1858, "__complex__": 1858, "__float__": 1858, "__int__": 1858, "hex": [1858, 1860, 1900], "__hex__": 1858, "oct": [1858, 1900], "__oct__": 1858, "divmod": [1858, 1860, 1900], "chr": [1858, 1860, 1900], "int_float": 1858, "float_int": 1858, "fab": [1858, 1900], "int_int": 1858, "float_float": 1858, "complex_complex": 1858, "int_complex": 1858, "complex_int": 1858, "float_complex": 1858, "complex_float": [1858, 1916], "scalar_scalar": 1858, "int_to_int": 1858, "modf": [1858, 1900], "mathremaind": [1858, 1900], "programm": [1859, 1860], "tn": 1859, "subtyp": 1859, "an_error": 1859, "noreturn": [1859, 1860], "classvar": [1859, 1860], "anystr": [1859, 1860], "nomin": 1859, "newtyp": [1859, 1860], "tup": [1859, 1860], "emptydatastructur": 1859, "my_list": 1859, "aug_add_x": 1859, "inc": [1859, 1860], "assign_x": [1859, 1860], "polymorph": 1859, "sum_pair": 1859, "red": [1859, 1860], "green": [1859, 1860], "enum_fn": [1859, 1860], "my_variable_nam": 1859, "top_level_method": 1859, "other_help": 1859, "ten": [1859, 1919], "my_paramet": 1859, "my_submodul": 1859, "tuple_or_list": 1859, "a_tupl": 1859, "de": [1859, 1902, 1905], "is_script": [1859, 1860, 1900], "unsupported_linear_op": 1859, "is_trac": [1859, 1860], "univers": 1859, "typing_extens": 1859, "a_dict": 1859, "some_dict": 1859, "delimit": [1860, 1861], "tstype": 1860, "tsmoduletyp": 1860, "tsalltyp": 1860, "tsmetatyp": 1860, "tsprimitivetyp": 1860, "tsstructuraltyp": 1860, "tsnominaltyp": 1860, "myclass": [1860, 1902], "printabl": [1860, 1902], "sortabl": 1860, "nevertheless": [1860, 1912], "inc_first_el": 1860, "cpufloattyp": 1860, "tstupl": 1860, "tsnamedtupl": 1860, "tslist": 1860, "tsdict": 1860, "tsoption": 1860, "tsunion": 1860, "tsfutur": 1860, "tsrref": 1860, "tsawait": 1860, "await": [1860, 1861, 1910], "keytyp": 1860, "_await": 1860, "mytupl": 1860, "scripted_inc": 1860, "_annotatednamedtupl": 1860, "_namedtupleannot": 1860, "_unannotatednamedtupl": 1860, "nameerror": 1860, "remedi": 1860, "tsbuiltinclass": 1860, "tscustomclass": 1860, "tsenum": 1860, "tstensor": 1860, "subtensor": [1860, 1885, 1925], "subwithtorchfunct": 1860, "script_g": 1860, "tsclassdef": 1860, "methoddefinit": 1860, "__torch__": [1860, 1898], "class2": 1860, "tsenumdef": 1860, "tsenumtyp": 1860, "memberidentifi": 1860, "intenum": 1860, "intflag": 1860, "basecolor": 1860, "compli": [1860, 1902], "classbodydefinit": 1860, "moduleobj": 1860, "testmodul": 1860, "mymodel": [1860, 1879, 1893], "dosometh": 1860, "strateg": 1860, "congruent": 1860, "python3": 1860, "unannot": 1860, "python3annot": 1860, "paramannot": 1860, "returnannot": 1860, "funcormethodbodi": 1860, "mypyannot": 1860, "localvarannot": 1860, "setval": 1860, "moduletyp": [1860, 1902], "classidentifi": 1860, "instanceattridentifi": 1860, "offset_": 1860, "tsstructualtyp": 1860, "grammar": 1860, "chapter": [1860, 1888], "floattyp": 1860, "inttyp": 1860, "stringtyp": 1860, "devicetyp": 1860, "bullet": 1860, "tupletyp": 1860, "listtyp": 1860, "enclosur": 1860, "parenth_form": 1860, "list_displai": 1860, "dict_displai": 1860, "legal": 1860, "stringliter": 1860, "floatnumb": 1860, "expression_list": 1860, "list_comprehens": 1860, "comp_for": 1860, "target_list": 1860, "or_expr": 1860, "key_datum_list": 1860, "dict_comprehens": 1860, "key_datum": 1860, "ongo": [1860, 1898, 1908, 1910], "enclos": 1860, "datum": [1860, 1924], "attributeref": 1860, "slice_list": 1860, "slice_item": 1860, "proper_slic": 1860, "argument_list": 1860, "u_expr": 1860, "tightli": [1860, 1891], "m_expr": 1860, "a_expr": 1860, "shift_expr": 1860, "and_expr": 1860, "xor_expr": 1860, "comp_oper": 1860, "__contains__": 1860, "or_test": 1860, "and_test": 1860, "not_test": 1860, "conditional_express": 1860, "starred_item": 1860, "expression_stmt": 1860, "starred_express": 1860, "assignment_express": 1860, "assignment_stmt": 1860, "augmented_assignment_stmt": 1860, "augtarget": 1860, "augop": 1860, "annotated_assignment_stmt": 1860, "raise_stmt": 1860, "assert_stmt": 1860, "return_stmt": 1860, "del_stmt": 1860, "pass_stmt": 1860, "print_stmt": 1860, "break_stmt": 1860, "continue_stmt": 1860, "if_stmt": 1860, "while_stmt": 1860, "for_stmt": 1860, "with_stmt": 1860, "with_item": 1860, "__enter__": 1860, "suppress": [1860, 1909], "tuple_stmt": 1860, "getattr_stmt": 1860, "hasattr_stmt": 1860, "zip_stmt": 1860, "iterable1": 1860, "iterable2": 1860, "enumerate_stmt": 1860, "add_stat_valu": 1860, "sugaredvalu": 1860, "unrecogn": 1860, "honor": 1860, "__abs__": 1860, "bytearrai": 1860, "delattr": 1860, "exec": 1860, "__index__": 1860, "isint": 1860, "issubclass": [1860, 1885], "ndigit": 1860, "setattr": 1860, "__import__": [1860, 1902], "rpc_sync": [1860, 1900, 1910, 1911, 1912], "synonym": 1860, "_fork": [1860, 1882], "_wait": [1860, 1882], "lexic": 1861, "indent": 1861, "coroutin": 1861, "__del__": [1861, 1880], "__bytes__": 1861, "__slots__": 1861, "metaclass": 1861, "mro": 1861, "__r": 1861, "nonloc": 1861, "bytesliter": 1861, "imagnumb": 1861, "parenthes": 1861, "ifs": 1861, "compound": 1861, "exc_typ": 1861, "exc_valu": 1861, "adaptivelogsoftmaxwithloss": 1862, "enable_grad": [1862, 1922], "overload_nam": 1864, "handi": [1864, 1880, 1883], "spotti": 1864, "googl": 1864, "keynam": 1864, "alias_analysi": 1864, "op_nam": 1864, "opoverload": 1864, "div_cpu": 1864, "off_by_default": 1866, "_registr": 1866, "born": 1867, "citizen": 1867, "afterthought": 1867, "unlock": 1867, "intuit": 1867, "alik": 1867, "grai": 1867, "systemat": 1867, "onboard": 1867, "maskedarrai": 1867, "masked_tensor": 1867, "blocklist": [1868, 1902], "mobileoptimizertyp": 1868, "conv_bn_fus": 1868, "correspondingli": 1868, "prepack": [1868, 1900], "insert_fold_prepack_op": 1868, "arm": [1868, 1905], "remove_dropout": 1868, "hoist": 1868, "hoist_conv_packed_param": 1868, "fuse_add_relu": 1868, "vulkan": 1868, "vulkan_automatic_gpu_transf": 1868, "freeze_modul": 1868, "script_modul": 1868, "optimization_blocklist": 1868, "preserved_method": 1868, "_mobileoptimizertyp": 1868, "recursivescriptmodul": [1868, 1896], "infrequ": 1870, "window_s": 1870, "max_sampl": 1870, "cap": 1870, "_monitor": 1870, "data_value_t": 1870, "eventhandlerhandl": 1870, "register_event_handl": 1870, "unregister_event_handl": 1870, "tensorboardeventhandl": 1870, "writer": [1870, 1891, 1919], "shared_memori": 1872, "abruptli": 1872, "get_all_sharing_strategi": 1872, "get_sharing_strategi": 1872, "set_sharing_strategi": 1872, "new_strategi": 1872, "abnorm": [1872, 1893], "fatal": [1872, 1893], "forev": [1872, 1884], "asap": 1872, "queue_2": 1872, "x_clone": 1872, "shm_open": 1872, "mmap": 1872, "destructor": [1872, 1912], "torch_shm_manag": 1872, "unnot": 1872, "spawncontext": 1872, "has_nam": 1873, "is_shar": [1873, 1916], "is_sparse_csr": [1873, 1900, 1916], "is_tensor": [1873, 1914], "items": [1873, 1900], "unifies_names_from_input_tensor": 1873, "nbyte": [1873, 1900, 1916], "ndimens": 1873, "position": [1873, 1874], "unnam": [1873, 1874], "misalign": 1873, "inher": 1873, "disappear": 1873, "img": [1874, 1919], "renamed_img": 1874, "coexist": 1874, "scale_channel": 1874, "more_img": 1874, "named_tensor": 1874, "named_img": 1874, "flat_img": 1874, "named_flat_img": 1874, "unflattened_img": 1874, "unflattened_named_img": 1874, "grad_loss": 1874, "8107": 1874, "6357": 1874, "0783": 1874, "untest": 1874, "rename_map": 1874, "greedili": 1874, "unment": 1874, "49152": 1874, "datastructur": 1875, "seamless": 1875, "nested_tensor": 1875, "nt": 1875, "vein": 1875, "as_nested_tensor": 1875, "irregular": 1875, "indistinguish": 1875, "2286": 1875, "4842": 1875, "7827": 1875, "6745": [1875, 1915], "0658": 1875, "1247": 1875, "4078": 1875, "8083": 1875, "2871": 1875, "5559": 1875, "9885": 1875, "4074": 1875, "4855": 1875, "0733": 1875, "8285": 1875, "6858": 1875, "7030": 1875, "3481": 1875, "0236": 1875, "fake_grad": 1875, "6862": 1875, "1282": 1875, "1031": 1875, "0464": 1875, "3276": 1875, "9967": 1875, "0054": 1875, "8972": 1875, "9174": 1875, "4995": 1875, "8546": 1875, "7194": 1875, "2918": 1875, "1846": 1875, "8793": 1875, "5183": 1875, "6447": 1875, "8009": 1875, "8468": 1875, "9832": 1875, "5272": 1875, "pt_infer": 1875, "pt_larg": 1875, "pt_small": 1875, "bitwidth": [1876, 1891, 1905], "asymmetr": [1876, 1905, 1908], "sacrific": [1878, 1883], "dirac": 1878, "glorot": 1878, "bengio": 1878, "fan": 1878, "_in": 1878, "fan_in": 1878, "delv": 1878, "surpass": 1878, "he": 1878, "_mode": 1878, "fan_out": 1878, "redrawn": 1878, "sax": 1878, "2013": 1878, "marten": 1878, "walkthrough": 1879, "clip_grad_value_": 1879, "optimizer2": 1879, "batch_per_it": 1879, "iters_to_accumul": 1879, "num_proc": 1879, "grad_param": 1879, "grad_norm": 1879, "scaled_grad_param": 1879, "inv_scal": 1879, "optimizer0": 1879, "optimizer1": 1879, "output0": 1879, "model0": 1879, "model1": 1879, "loss0": 1879, "loss1": 1879, "imped": 1879, "poor": [1879, 1880], "dp_model": 1879, "imported_funct": 1879, "mymm": 1879, "myfloat32func": 1879, "fwd_output": 1879, "cleaner": 1880, "mapsto": 1880, "educ": 1880, "_save": 1880, "_saved_self": 1880, "convex": 1880, "concav": 1880, "togglabl": 1880, "drawback": 1880, "0011": 1880, "dirti": 1880, "hogwild": 1880, "train_fn": 1880, "graphtask": 1880, "copyslic": 1880, "mutex": 1880, "gotten": 1880, "curiou": 1880, "\u2102": 1880, "yj": 1880, "holomorph": 1880, "theori": 1880, "homomorph": 1880, "mathematician": 1880, "im": 1880, "studi": [1880, 1904], "beauti": 1880, "somewhat": [1880, 1883, 1914], "counterintuit": 1880, "0906": 1880, "4835": 1880, "audio": [1880, 1919], "\u211d": 1880, "_output": 1880, "vj": 1880, "selfdeletingtempfil": 1880, "tmp_dir": 1880, "uuid": 1880, "uuid4": 1880, "temp_fil": 1880, "forbidden": 1880, "savedtensor": 1880, "_raw_saved_": 1880, "_raw_saved_self": 1880, "save_on_disk_threshold": 1880, "tensor_or_sctf": 1880, "_saved_oth": 1880, "4th": 1881, "backcompat": 1881, "broadcast_warn": 1881, "userwarn": 1881, "compute_z": 1882, "w_z": 1882, "w_y": 1882, "tbb": 1882, "aten_thread": 1882, "omp": 1882, "mkl_thread": 1882, "bla": 1882, "mkldnn_cpu_runtim": 1882, "use_mkldnn": 1882, "use_tbb": 1882, "use_openmp": 1882, "ON": [1882, 1889, 1890], "set_num_interop_thread": 1882, "get_num_interop_thread": 1882, "set_num_thread": 1882, "get_num_thread": 1882, "omp_num_thread": 1882, "mkl_num_thread": 1882, "1024": [1882, 1883], "e5": 1882, "oversubscript": 1882, "irrespect": 1883, "spread": 1883, "cuda2": [1883, 1889], "a_ful": 1883, "10240": 1883, "b_full": 1883, "ab_ful": 1883, "7277": 1883, "ab_tf32": 1883, "016": 1883, "ga100": 1883, "1747": 1883, "relative_error": 1883, "0022": 1883, "ab_fp32": 1883, "0031": 1883, "000039": 1883, "7x": 1883, "globalcontext": 1883, "setallowtf32cubla": 1883, "setallowtf32cudnn": 1883, "bench_gemm_transform": 1883, "allow_fp16_reduc": 1883, "4048": 1883, "1634": 1883, "1639": 1883, "4056": 1883, "1670": 1883, "1661": 1883, "4080": 1883, "1664": 1883, "1658": 1883, "1651": 1883, "4104": 1883, "1677": 1883, "1674": 1883, "4128": 1883, "1796": [1883, 1891], "2519": 1883, "5096": 1883, "2144": 1883, "2149": 1883, "2766": 1883, "5120": 1883, "2142": 1883, "9728": 1883, "3875": 1883, "5779": 1883, "6182": 1883, "9656": 1883, "setallowfp16reductioncubla": 1883, "instabl": 1883, "setallowbf16reductioncubla": 1883, "start_ev": 1883, "elapsed_time_m": 1883, "exploit": 1883, "paragraph": [1883, 1888], "initial_grad": 1883, "memory_alloc": [1883, 1889], "memory_snapshot": [1883, 1889], "memcheck": 1883, "pytorch_no_cuda_memory_cach": [1883, 1889], "option2": 1883, "value2": 1883, "max_split_size_mb": 1883, "borderlin": 1883, "memory_summari": 1883, "resort": [1883, 1888, 1902], "roundup_power2_divis": 1883, "cudacachingalloc": 1883, "1280": 1883, "1536": 1883, "1792": 1883, "256mb": 1883, "512mb": 1883, "1gb": 1883, "roundup_bypass_threshold_mb": 1883, "garbage_collection_threshold": 1883, "reclaim": 1883, "release_cached_block": 1883, "unfavor": 1883, "cuda_runtime_api": 1883, "iostream": 1883, "fpic": 1883, "my_malloc": 1883, "cout": 1883, "endl": [1883, 1890], "my_fre": 1883, "cudafre": 1883, "cudapluggablealloc": 1883, "new_alloc": 1883, "_cuda_clearcublasworkspac": 1883, "kib": 1883, "lru": 1883, "geometri": 1883, "1023": 1883, "use_pytorch_kernel_cach": 1883, "pytorch_kernel_cache_path": 1883, "store_tru": 1883, "disable_cuda": 1883, "assess": 1883, "cudagetdevicecount": 1883, "cuinit": 1883, "pytorch_nvml_based_cuda_check": 1883, "nvml": 1883, "nvmldevicegetcount_v2": 1883, "poison": 1883, "aforement": [1883, 1893], "train_load": 1883, "x_cpu": 1883, "x_gpu": 1883, "x_cpu_long": 1883, "y_cpu": 1883, "y_gpu": 1883, "y_cpu_long": 1883, "new_tensor": 1883, "overus": 1883, "cudagraphlaunch": 1883, "elid": 1883, "versatil": 1883, "static_input": 1883, "static_output": 1883, "realist": 1883, "sophist": [1883, 1901], "violat": [1883, 1886], "prohibit": [1883, 1896], "virtual": 1883, "d_in": 1883, "d_out": 1883, "640": 1883, "static_target": 1883, "static_y_pr": 1883, "static_loss": 1883, "real_target": 1883, "refil": 1883, "dag": 1883, "rejoin": 1883, "cuda_work": 1883, "nsight": 1883, "reorgan": 1883, "graphabl": 1883, "econom": 1883, "static_out_1": 1883, "g1_workload": 1883, "static_in_1": 1883, "static_out_2": 1883, "g2_workload": 1883, "static_in_2": 1883, "real_data_1": 1883, "real_data_2": 1883, "29500": [1884, 1903, 1910, 1911], "prerequisit": 1884, "grad0": 1884, "grad1": 1884, "bucket1": 1884, "bucket0": 1884, "hurt": 1884, "earliest": 1884, "unreadi": 1884, "absent": 1884, "hpp": 1884, "processgroupgloo": 1884, "processgroupmpi": 1884, "_sync_param": 1884, "autograd_hook": 1884, "prepare_for_backward": 1884, "_after_": 1884, "optimize_ddp": 1884, "mark_dirti": 1885, "mark_non_differenti": [1885, 1886], "set_materialize_grad": 1885, "linearfunct": 1885, "grad_bia": 1885, "mulconst": 1885, "mycub": [1885, 1886], "grad_dx": [1885, 1886], "my_cub": [1885, 1886], "input_featur": 1885, "output_featur": 1885, "duck": [1885, 1902], "__array_function__": 1885, "nep": 1885, "0018": 1885, "scalartensor": 1885, "handled_funct": 1885, "mandat": 1885, "update_wrapp": 1885, "ensure_tensor": 1885, "metadatatensor": 1885, "__add__": 1885, "subtensor2": 1885, "othersubtensor": 1885, "loggingtensor": 1885, "permiss": 1885, "_metadata": 1885, "ndata": 1885, "ret": [1885, 1910], "ministri": 1885, "silli": 1885, "superclass": 1885, "troublesom": 1885, "_get_overridable_funct": 1885, "overriden": 1885, "get_overridable_funct": [1885, 1925], "func_dict": 1885, "nn_func": 1885, "labori": 1885, "_get_testing_overrid": 1885, "get_testing_overrid": [1885, 1925], "override_dict": 1885, "dummy_add": 1885, "get_ignored_funct": [1885, 1925], "custom_vjp": 1886, "custom_jvp": 1886, "to_numpi": 1886, "numpysort": 1886, "ind_inv": 1886, "_1": [1886, 1902], "numpytak": 1886, "numpy_sort": 1886, "saniti": 1886, "ggx": 1886, "vmappabl": 1886, "x_bdim": 1886, "ind_bdim": 1886, "ind_inv_bdim": 1886, "expanded_x": 1886, "expanded_ind": 1886, "expanded_ind_inv": 1886, "new_dim": 1886, "logical_dim": 1886, "maybe_expand_bdim_at_front": 1886, "pseudocod": 1886, "rapidli": 1887, "abridg": 1887, "total_loss": 1887, "extrud": 1887, "phenomenon": 1887, "plenti": 1887, "bptt": 1887, "repackag": 1887, "nm": 1887, "blow": 1887, "elf": 1887, "grep": 1887, "run_model": 1887, "recoveri": 1887, "data_parallel": 1887, "pad_packed_sequ": 1887, "padded_input": 1887, "packed_input": 1887, "packed_output": 1887, "my_lstm": 1887, "dp_m": 1887, "padding_input": 1887, "ur": 1888, "rewritten": 1888, "j_f": 1888, "calculu": 1888, "cw": 1888, "bigger": 1888, "articl": 1888, "58eb23378f2a376565a66ac32c93a316c45b6131": 1888, "l99": 1888, "l105": 1888, "ds_dx": 1888, "compute_gradi": 1888, "ds_dy": 1888, "conj_w_d": 1888, "w_d": 1888, "d_idx": 1888, "albeit": 1888, "wonder": 1888, "amd": 1889, "dialect": 1889, "portabl": 1889, "rocmdoc": 1889, "programming_guid": 1889, "hip_api_guid": 1889, "cuda_vers": 1889, "cudaruntimegetvers": 1889, "cudadrivergetvers": 1889, "hip_vers": 1889, "hipruntimegetvers": 1889, "hipdrivergetvers": 1889, "11000": 1889, "use_rocm": 1889, "rocm_vers": 1889, "40300": 1889, "cmake": [1889, 1897], "drocm_force_enable_gpu_assert": 1889, "addglobalcallback": 1890, "recordfunct": 1890, "ivalu": 1890, "threadlocaldebuginfo": 1890, "debuginfoguard": 1890, "recordfunctioncallback": 1890, "onfunctionent": 1890, "onfunctionexit": 1890, "needsinput": 1890, "samplingprob": 1890, "enablerecordfunct": 1890, "cerr": 1890, "broader": [1890, 1922], "inject": 1890, "setapiusagehandl": 1890, "setapiusagelogg": 1890, "event_nam": 1890, "c10_log_api_usage_onc": 1890, "my_api": 1890, "_log_api_usage_onc": 1890, "archiv": 1890, "bundl": 1890, "akin": 1890, "jpeg": 1890, "camera": [1890, 1919], "setexportmoduleextrafileshook": 1890, "extrafilesmap": 1890, "producer_info": 1890, "getenv": 1890, "getsourc": 1890, "precompil": 1890, "pyc": 1890, "loos": 1890, "elabor": 1891, "tpu": 1891, "mylinear": 1891, "sample_input": 1891, "0413": 1891, "2057": 1891, "0597": 1891, "8247": 1891, "1045": 1891, "4299": 1891, "5457": 1891, "4793": 1891, "3634": 1891, "8525": 1891, "6749": 1891, "l0": [1891, 1896], "bignet": 1891, "big_net": 1891, "dynamicnet": 1891, "dynamic_net": 1891, "2051": 1891, "7601": 1891, "1963": 1891, "4354": 1891, "6598": 1891, "4446": 1891, "4628": 1891, "8774": 1891, "6848": 1891, "5458": 1891, "4647": 1891, "5310": 1891, "0609": 1891, "0940": 1891, "1266": 1891, "0623": 1891, "3508": 1891, "0550": 1891, "5317": 1891, "5562": 1891, "4028": 1891, "6942": 1891, "0140": 1891, "0329": 1891, "1160": 1891, "0434": 1891, "3889": 1891, "1613": 1891, "6340": 1891, "3887": 1891, "9979": 1891, "0767": 1891, "3526": 1891, "8756": 1891, "5847": 1891, "6016": 1891, "1608": 1891, "0829": 1891, "6338": 1891, "9239": 1891, "6943": 1891, "5034": 1891, "0268": 1891, "4489": 1891, "9403": 1891, "2509": 1891, "5052": 1891, "3088": 1891, "4951": 1891, "3381": 1891, "5166": 1891, "boilerpl": [1891, 1902], "beginn": 1891, "examples_nn": 1891, "polynomial_modul": 1891, "teach": 1891, "0013": [1891, 1915], "0030": 1891, "0008": 1891, "modalmodul": 1891, "6614": 1891, "2669": 1891, "0617": 1891, "4519": 1891, "two_layer_net_optim": 1891, "blitz": 1891, "neural_networks_tutori": 1891, "autograd_tutori": 1891, "new_net": 1891, "runningmean": 1891, "1041": 1891, "0647": 1891, "1515": 1891, "m_load": 1891, "unserialized_th": 1891, "statefulmodul": 1891, "param3": 1891, "param_list": 1891, "parameterlist": 1891, "param_dict": 1891, "parameterdict": 1891, "buffer1": 1891, "buffer2": 1891, "buffer3": 1891, "0322": 1891, "9066": 1891, "1409": 1891, "4852": 1891, "6949": 1891, "2911": 1891, "1044": 1891, "4202": 1891, "1953": 1891, "5299": 1891, "8747": 1891, "6289": 1891, "4898": 1891, "6434": 1891, "5187": 1891, "0346": 1891, "4077": 1891, "4324": 1891, "7022": 1891, "3915": 1891, "6176": 1891, "6062": 1891, "5992": 1891, "4452": 1891, "2843": 1891, "3710": 1891, "3947": 1891, "saving_loading_model": 1891, "what_is_state_dict": 1891, "skip_init": 1891, "skip_param_init": 1891, "new_grad_input": 1891, "5059": 1891, "8158": 1891, "2390": 1891, "0043": 1891, "addmmbackward": 1891, "forward_pre_hook_handl": 1891, "5752": 1891, "7421": 1891, "forward_hook_handl": 1891, "0980": 1891, "4666": 1891, "0256": 1891, "4497": 1891, "5046": 1891, "combat": 1891, "shader": 1892, "mps_devic": 1892, "yourfavoritenet": 1892, "a3c": 1893, "set_start_method": 1893, "simplequeu": 1893, "cope": 1893, "eleg": 1893, "num_process": 1893, "modern": 1894, "754": 1894, "1e20": 1894, "4142e": 1894, "struggl": 1894, "benign": 1894, "v_dot2": 1894, "mfma": 1894, "fp64": 1894, "rocbla": 1894, "miopen": 1894, "rocblas_internal_fp16_alt_impl": 1894, "miopen_debug_convolution_attrib_fp16_alt_impl": 1894, "_convbackend": 1894, "slownd": 1894, "slownd_transpos": 1894, "slownd_dil": 1894, "slownd_dilated_transpos": 1894, "convbackend": 1894, "miopendepthwis": 1894, "miopentranspos": 1894, "svd_lowrank": [1895, 1914], "22modul": 1895, "20determin": 1895, "index_add_cuda_": 1895, "1509": 1895, "8027": 1895, "0333": 1895, "1444": 1895, "rese": 1895, "seed_work": 1895, "worker_se": 1895, "train_dataset": 1895, "tensor_dict": 1896, "loaded_numb": 1896, "loaded_even": 1896, "scene": [1896, 1919], "loaded_smal": 1896, "num_batches_track": 1896, "bn_state_dict": 1896, "new_bn": 1896, "out0_relu": 1896, "1400": 1896, "4563": 1896, "0271": 1896, "4406": 1896, "2827": 1896, "4588": 1896, "2031": 1896, "0300": 1896, "1316": 1896, "6533": 1896, "3413": 1896, "1112": 1896, "m_state_dict": 1896, "new_m": 1896, "original_nam": 1896, "controlflowmodul": 1896, "controlflowmodule_trac": 1896, "3793": 1896, "controlflowmodule_script": 1896, "rem": 1897, "7z": 1897, "curl": 1897, "ossci": 1897, "mkl_2020": 1897, "aoa": 1897, "omkl": 1897, "cuda_prefix": 1897, "cuda102": 1897, "magma_2": 1897, "4_": 1897, "omagma": 1897, "cmake_include_path": 1897, "magma_hom": 1897, "studio": 1897, "pip": [1897, 1898, 1919], "cmake_gener": 1897, "ffi": 1897, "create_extens": 1897, "_ext": 1897, "define_macro": 1897, "relative_to": 1897, "c99": 1897, "x86_x64": 1897, "packagesnotfounderror": 1897, "anaconda": 1897, "noarch": 1897, "continuum": 1897, "pkg": 1897, "pro": [1897, 1919], "msys2": 1897, "importerror": [1897, 1902], "dll": 1897, "vc2017": 1897, "redistribut": 1897, "vc": 1897, "vs2017_runtim": 1897, "mkl_fft": 1897, "intel_openmp": 1897, "vs2017": 1897, "openbla": 1897, "forg": 1897, "bootstrap": 1897, "forgotten": 1897, "idiom": 1897, "freeze_support": 1897, "forkingpickl": 1897, "brokenpipeerror": 1897, "errno": 1897, "couldn": [1897, 1898], "torch_14808_1591070686": 1897, "thalloc": 1897, "tdr": 1897, "thcudacheck": 1897, "storageshar": 1897, "dummy_input": 1898, "input_nam": 1898, "actual_input_1": 1898, "learned_": 1898, "output_nam": 1898, "learned_0": 1898, "learned_1": 1898, "learned_2": 1898, "learned_3": 1898, "learned_14": 1898, "learned_15": 1898, "kernel_shap": 1898, "9216": 1898, "transb": 1898, "check_model": 1898, "printable_graph": 1898, "onnxruntim": 1898, "ort": 1898, "ort_sess": 1898, "inferencesess": 1898, "astyp": 1898, "seq_length": 1898, "real_seq_length": 1898, "experienc": 1898, "new_data": 1898, "hope": 1898, "symbolic_opset": 1898, "symbolic_opset9": 1898, "_variablefunct": 1898, "pyi": 1898, "___torch_mangle_0": 1898, "alpha_f": 1898, "myrelu": 1898, "value_t": 1898, "pythonop": [1898, 1900], "mylogexp": 1898, "operator_export_typ": 1898, "onnx_fallthrough": 1898, "onnx_aten_fallback": 1898, "onnxscript": 1898, "onnx_opset": 1898, "opset15": 1898, "custom_opset": 1898, "67326": 1898, "alphax": 1898, "castlik": 1898, "gammax": 1898, "settyp": 1898, "custom_selu": 1898, "jit_util": 1898, "graphcontext": 1898, "onnxscript_op": 1898, "register_custom_op_symbol": 1898, "symbolic_nam": 1898, "symbolic_fn": 1898, "symbolic_help": 1898, "symbolic_foo_forward": 1898, "custom_domain": 1898, "attr1_f": 1898, "attr2_i": 1898, "foo_forward": 1898, "foomodel": 1898, "example_input1": 1898, "caffe2": [1898, 1919], "torch_script_graph": 1898, "unconvertible_op": 1898, "dynamic_ax": 1898, "export_param": 1898, "trainingmod": 1898, "operatorexporttyp": 1898, "do_constant_fold": 1898, "keep_initializers_as_input": 1898, "export_modules_as_funct": 1898, "OF": 1898, "WITH": 1898, "input_i": 1898, "input_z": 1898, "fileno": 1898, "untrain": 1898, "doc_str": 1898, "onnx_aten": 1898, "build_caffe2": 1898, "summodul": 1898, "dim_valu": 1898, "my_custom_axis_nam": 1898, "dim_param": 1898, "sum_dynamic_axes_1": 1898, "predefin": 1898, "checkererror": 1898, "unsupportedoperatorerror": 1898, "export_to_pretty_str": 1898, "export_typ": 1898, "google_print": 1898, "add_node_nam": 1898, "nodeproto": 1898, "debugstr": 1898, "contrib": 1898, "test_aten_embedding_2": 1898, "test_oper": 1898, "unregister_custom_op_symbol": 1898, "select_model_mode_for_export": 1898, "is_in_onnx_export": 1898, "middl": 1898, "enable_log": 1898, "disable_log": 1898, "graphinfo": 1898, "incorrect_relu_symbolic_funct": 1898, "2328854203224182": 1898, "699536174352349": 1898, "rapid": 1898, "exportopt": 1898, "my_nn_modul": 1898, "my_nn_module_attribut": 1898, "underdevelop": 1899, "parsabl": 1899, "sarif": 1899, "diagsys0001": 1899, "fxe0001": 1899, "fxe0002": 1899, "fxe0003": 1899, "fxe0004": 1899, "fxe0005": 1899, "fxe0006": 1899, "atenlib": 1899, "fxe0007": 1899, "fxe0008": 1899, "fxe0009": 1899, "fxe0010": 1899, "fxe0011": 1899, "fxe0012": 1899, "poe0001": 1899, "poe0002": 1899, "poe0003": 1899, "poe0004": 1899, "_intern": [1899, 1916], "exportdiagnost": 1899, "frames_to_skip": 1899, "cpp_stack": 1899, "record_cpp_call_stack": 1899, "constantchunk": 1900, "__and_": 1900, "__contains_": 1900, "__derive_index": 1900, "__getitem_": 1900, "__interpol": 1900, "__is_": 1900, "__isnot_": 1900, "__lshift_": 1900, "__not_": 1900, "__or_": 1900, "__range_length": 1900, "__rshift_": 1900, "__xor_": 1900, "_cast_byt": 1900, "_cast_char": 1900, "_cast_doubl": 1900, "_cast_float": 1900, "_cast_half": 1900, "_cast_int": 1900, "_cast_long": 1900, "_cast_short": 1900, "_conj": 1900, "_convolution_mod": 1900, "_dim_arang": 1900, "_pack_padded_sequ": 1900, "_pad_packed_sequ": 1900, "_reshape_from_tensor": 1900, "_sample_dirichlet": 1900, "_set_item": 1900, "_shape_as_tensor": 1900, "_standard_gamma": 1900, "_uniqu": 1900, "_unique2": 1900, "_weight_norm": 1900, "conv1d_relu": 1900, "conv2d_relu": 1900, "embedding_renorm": 1900, "floordiv": [1900, 1907], "nonzero_numpi": 1900, "numpy_t": 1900, "unchecked_cast": 1900, "unique_dim": 1900, "_quantiz": 1900, "conv2d_prepack": 1900, "conv3d_prepack": 1900, "conv3d_relu": 1900, "conv_transpose1d_prepack": 1900, "conv_transpose2d_prepack": 1900, "conv_transpose3d_prepack": 1900, "linear_dynam": 1900, "linear_prepack": 1900, "linear_prepack_fp16": 1900, "linear_prepack_fp16_legaci": 1900, "linear_prepack_legaci": 1900, "_test": 1900, "get_first": 1900, "compleximplicit": 1900, "floatimplicit": 1900, "intimplicit": 1900, "__iand_": 1900, "__ilshift_": 1900, "__ior_": 1900, "__irshift_": 1900, "__ixor_": 1900, "__round_to_zero_floordiv": 1900, "__upsampl": 1900, "__upsample_bilinear": 1900, "__upsample_nearest": 1900, "_adaptive_avg_pool3d": 1900, "_add_batch_dim": 1900, "_add_relu": 1900, "_addmm_activ": 1900, "_aminmax": 1900, "_amp_foreach_non_finite_check_and_unscal": 1900, "_amp_update_scal": 1900, "_assert_async": 1900, "_assert_tensor_metadata": 1900, "_autocast_to_full_precis": 1900, "_autocast_to_reduced_precis": 1900, "_batch_norm_impl_index": 1900, "_cdist_forward": 1900, "_cholesky_solve_help": 1900, "_choose_qparams_per_tensor": 1900, "_chunk_grad_outputs_efficient_attent": 1900, "_coalesc": 1900, "_compute_linear_combin": 1900, "_conj_copi": 1900, "_conj_phys": 1900, "_conv_depthwise2d": 1900, "_convert_indices_from_coo_to_csr": 1900, "_convert_indices_from_csr_to_coo": 1900, "_copy_from": 1900, "_copy_from_and_res": 1900, "_ctc_loss": 1900, "_cudnn_ctc_loss": 1900, "_cudnn_init_dropout_st": 1900, "_cudnn_rnn": 1900, "_cudnn_rnn_flatten_weight": 1900, "_cufft_clear_plan_cach": 1900, "_cufft_get_plan_cache_max_s": 1900, "_cufft_get_plan_cache_s": 1900, "_cufft_set_plan_cache_max_s": 1900, "_cummax_help": 1900, "_cummin_help": 1900, "_debug_has_internal_overlap": 1900, "_dimi": 1900, "_dimv": 1900, "_dirichlet_grad": 1900, "_efficient_attention_forward": 1900, "_efficientzerotensor": 1900, "_embedding_bag": 1900, "_embedding_bag_forward_onli": 1900, "_empty_affine_quant": 1900, "_empty_per_channel_affine_quant": 1900, "_euclidean_dist": 1900, "_fake_quantize_learnable_per_channel_affin": 1900, "_fake_quantize_learnable_per_tensor_affin": 1900, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1900, "_fft_c2c": 1900, "_fft_c2r": 1900, "_fft_r2c": 1900, "_flash_attention_forward": 1900, "_foreach_ab": 1900, "_foreach_aco": 1900, "_foreach_add": 1900, "_foreach_addcdiv": 1900, "_foreach_addcmul": 1900, "_foreach_asin": 1900, "_foreach_atan": 1900, "_foreach_ceil": 1900, "_foreach_clamp_max": 1900, "_foreach_clamp_min": 1900, "_foreach_co": 1900, "_foreach_cosh": 1900, "_foreach_div": 1900, "_foreach_erf": 1900, "_foreach_erfc": 1900, "_foreach_exp": 1900, "_foreach_expm1": 1900, "_foreach_floor": 1900, "_foreach_frac": 1900, "_foreach_lerp": 1900, "_foreach_lgamma": 1900, "_foreach_log": 1900, "_foreach_log10": 1900, "_foreach_log1p": 1900, "_foreach_log2": 1900, "_foreach_maximum": 1900, "_foreach_minimum": 1900, "_foreach_mul": 1900, "_foreach_neg": 1900, "_foreach_norm": 1900, "_foreach_pow": 1900, "_foreach_reciproc": 1900, "_foreach_round": 1900, "_foreach_sigmoid": 1900, "_foreach_sin": 1900, "_foreach_sinh": 1900, "_foreach_sqrt": 1900, "_foreach_sub": 1900, "_foreach_tan": 1900, "_foreach_tanh": 1900, "_foreach_trunc": 1900, "_foreach_zero": 1900, "_fused_adam": 1900, "_fused_adamw": 1900, "_fused_dropout": 1900, "_fused_moving_avg_obs_fq_help": 1900, "_fused_moving_avg_obs_fq_helper_funct": 1900, "_fused_sdp_choic": 1900, "_fw_primal": 1900, "_fw_primal_copi": 1900, "_get_cpu_cap": 1900, "_get_tracing_st": 1900, "_grad_sum_to_s": 1900, "_has_compatible_shallow_copy_typ": 1900, "_has_same_storage_numel": 1900, "_histogramdd_bin_edg": 1900, "_histogramdd_from_bin_ct": 1900, "_histogramdd_from_bin_tensor": 1900, "_index_put_impl": 1900, "_indices_copi": 1900, "_infer_s": 1900, "_int_mm": 1900, "_is_all_tru": 1900, "_is_any_tru": 1900, "_is_zerotensor": 1900, "_linalg_check_error": 1900, "_linalg_det": 1900, "_linalg_eigh": 1900, "_linalg_slogdet": 1900, "_linalg_solve_ex": 1900, "_linalg_svd": 1900, "_list_to_tensor": 1900, "_local_scalar_dens": 1900, "_logcumsumexp": 1900, "_lstm_mp": 1900, "_make_du": 1900, "_make_dual_copi": 1900, "_make_per_channel_quantized_tensor": 1900, "_make_per_tensor_quantized_tensor": 1900, "_masked_scal": 1900, "_masked_softmax": 1900, "_mkldnn_reshap": 1900, "_mkldnn_transpos": 1900, "_mps_convolut": 1900, "_mps_convolution_transpos": 1900, "_native_batch_norm_legit_funct": 1900, "_native_batch_norm_legit_no_train": 1900, "_native_multi_head_attent": 1900, "_ncf_unsqueez": 1900, "_ncf_view": 1900, "_neg_view": 1900, "_neg_view_copi": 1900, "_nested_from_pad": 1900, "_nested_from_padded_and_nested_exampl": 1900, "_nested_tensor_from_mask": 1900, "_nested_tensor_from_mask_left_align": 1900, "_nested_tensor_from_tensor_list": 1900, "_nested_tensor_s": 1900, "_nested_tensor_softmax_with_shap": 1900, "_nested_tensor_storage_offset": 1900, "_nested_tensor_strid": 1900, "_nested_view_from_buff": 1900, "_nested_view_from_buffer_copi": 1900, "_new_zeros_with_same_feature_meta": 1900, "_nnpack_avail": 1900, "_nnpack_spatial_convolut": 1900, "_no_grad_embedding_renorm": 1900, "_no_grad_fil": 1900, "_no_grad_norm": 1900, "_no_grad_uniform": 1900, "_no_grad_zero": 1900, "_pack_sequ": 1900, "_pad_circular": 1900, "_pad_enum": 1900, "_pdist_forward": 1900, "_pin_memori": 1900, "_prelu_kernel": 1900, "_propagate_xla_data": 1900, "_remove_batch_dim": 1900, "_reshape_alia": 1900, "_reshape_alias_copi": 1900, "_reshape_copi": 1900, "_resize_output": 1900, "_rowwise_prun": 1900, "_saturate_weight_to_fp16": 1900, "_scaled_dot_product_attent": 1900, "_scaled_dot_product_attention_math": 1900, "_scaled_dot_product_efficient_attent": 1900, "_scaled_dot_product_flash_attent": 1900, "_size_if_not_equ": 1900, "_slow_conv2d_forward": 1900, "_sobol_engine_draw": 1900, "_sobol_engine_ff": 1900, "_sobol_engine_initialize_st": 1900, "_sobol_engine_scrambl": 1900, "_sparse_addmm": 1900, "_sparse_broadcast_to": 1900, "_sparse_broadcast_to_copi": 1900, "_sparse_bsc_tensor_unsaf": 1900, "_sparse_bsr_tensor_unsaf": 1900, "_sparse_compressed_tensor_unsaf": 1900, "_sparse_coo_tensor_unsaf": 1900, "_sparse_coo_tensor_with_dim": 1900, "_sparse_coo_tensor_with_dims_and_tensor": 1900, "_sparse_csc_tensor_unsaf": 1900, "_sparse_csr_prod": 1900, "_sparse_csr_sum": 1900, "_sparse_csr_tensor_unsaf": 1900, "_sparse_log_softmax": 1900, "_sparse_mm": 1900, "_sparse_mm_reduce_impl": 1900, "_sparse_softmax": 1900, "_sparse_sparse_matmul": 1900, "_sparse_sum": 1900, "_spdiag": 1900, "_standard_gamma_grad": 1900, "_structured_sparse_linear": 1900, "_tensor_to_list": 1900, "_test_ambiguous_default": 1900, "_test_autograd_multiple_dispatch": 1900, "_test_autograd_multiple_dispatch_view": 1900, "_test_autograd_multiple_dispatch_view_copi": 1900, "_test_check_tensor": 1900, "_test_functorch_fallback": 1900, "_test_optional_filled_intlist": 1900, "_test_optional_floatlist": 1900, "_test_optional_intlist": 1900, "_test_serialization_subcmul": 1900, "_test_string_default": 1900, "_test_warn_in_autograd": 1900, "_thnn_fused_gru_cel": 1900, "_thnn_fused_lstm_cel": 1900, "_to_cpu": 1900, "_to_dens": 1900, "_transform_bias_rescale_qkv": 1900, "_transformer_encoder_layer_fwd": 1900, "_trilinear": 1900, "_triton_multi_head_attent": 1900, "_triton_scaled_dot_attent": 1900, "_unpack_du": 1900, "_unsafe_index": 1900, "_unsafe_view": 1900, "_unwrap_opt": 1900, "_upsample_bicubic2d_aa": 1900, "_upsample_bilinear2d_aa": 1900, "_upsample_nearest_exact1d": 1900, "_upsample_nearest_exact2d": 1900, "_upsample_nearest_exact3d": 1900, "_use_cudnn_ctc_loss": 1900, "_use_cudnn_rnn_flatten_weight": 1900, "_validate_compressed_sparse_indic": 1900, "_validate_sparse_bsc_tensor_arg": 1900, "_validate_sparse_bsr_tensor_arg": 1900, "_validate_sparse_compressed_tensor_arg": 1900, "_validate_sparse_coo_tensor_arg": 1900, "_validate_sparse_csc_tensor_arg": 1900, "_validate_sparse_csr_tensor_arg": 1900, "_values_copi": 1900, "_weight_norm_interfac": 1900, "capit": 1900, "confirmed_by_own": [1900, 1910], "convolution_overrid": 1900, "copy_sparse_to_spars": 1900, "endswith": 1900, "expandtab": 1900, "fake_quantize_per_channel_affine_cachemask": 1900, "fake_quantize_per_tensor_affine_cachemask": 1900, "fill_diagon": 1900, "glu_jvp": 1900, "has_torch_funct": [1900, 1925], "is_non_overlapping_and_dens": 1900, "is_own": 1900, "is_strides_like_format": 1900, "isalnum": 1900, "isalpha": 1900, "isdecim": 1900, "isdigit": 1900, "isidentifi": 1900, "islow": 1900, "isnumer": 1900, "isprint": 1900, "isspac": 1900, "istitl": 1900, "isupp": 1900, "lift_fresh": 1900, "lift_fresh_copi": 1900, "ljust": 1900, "local_valu": [1900, 1903], "log_sigmoid_forward": 1900, "lstrip": 1900, "matrix_h": 1900, "nll_loss2d_forward": 1900, "nll_loss_forward": 1900, "normal_funct": 1900, "owner_nam": 1900, "percentformat": 1900, "quantized_gru": 1900, "quantized_lstm": 1900, "resize_as_spars": 1900, "rfind": 1900, "rindex": 1900, "rjust": 1900, "rpartit": 1900, "rsplit": 1900, "rstrip": 1900, "set_data": 1900, "slow_conv3d_forward": 1900, "sparse_res": 1900, "sparse_resize_and_clear": 1900, "splitlin": 1900, "startswith": 1900, "swapcas": 1900, "sym_numel": 1900, "sym_siz": 1900, "sym_storage_offset": 1900, "sym_strid": 1900, "unique_dim_consecut": 1900, "zfill": 1900, "_allgather_bas": 1900, "_reduce_scatter_bas": 1900, "allgath": 1900, "allgather_coalesc": 1900, "allgather_into_tensor_coalesc": 1900, "allreduce_coalesc": 1900, "alltoal": 1900, "alltoall_bas": 1900, "recv_any_sourc": 1900, "debugprim": 1900, "load_tensor": 1900, "_mkl_linear": 1900, "_mkl_reorder_linear_weight": 1900, "_convolution_pointwis": 1900, "_convolution_transpose_pointwis": 1900, "_is_mkldnn_bf16_support": 1900, "_linear_pointwis": 1900, "_reorder_convolution_transpose_weight": 1900, "_reorder_linear_weight": 1900, "mkldnn_prepack": 1900, "conv2d_run": 1900, "nvprim": 1900, "conv2d_clamp_prepack": 1900, "conv2d_clamp_run": 1900, "conv2d_transpose_clamp_prepack": 1900, "conv2d_transpose_clamp_run": 1900, "linear_clamp_prepack": 1900, "linear_clamp_run": 1900, "unpack_prepacked_sizes_conv2d": 1900, "unpack_prepacked_sizes_linear": 1900, "addstatvalu": 1900, "autogradadd": 1900, "autogradallnonzero": 1900, "autogradallzero": 1900, "autogradanynonzero": 1900, "autogradzero": 1900, "bailouttempl": 1900, "broadcastmkldnntensor": 1900, "broadcasts": 1900, "chunksiz": 1900, "constantmkldnntensor": 1900, "differentiablegraph": 1900, "enumnam": 1900, "enumvalu": 1900, "fallbackgraph": 1900, "fusedconcat": 1900, "fusiongroup": 1900, "ifthenels": 1900, "ignoredpythonop": 1900, "mkldnnclamp": 1900, "mkldnnhardsigmoid": 1900, "mkldnnhardswish": 1900, "mkldnnhardtanh": 1900, "mkldnnlayernorm": 1900, "mkldnnscalarmul": 1900, "mmbatchsid": 1900, "mmtreereduc": 1900, "modulecontainerindex": 1900, "numtotensor": 1900, "raiseexcept": 1900, "reductions": 1900, "requiresgradcheck": 1900, "staticruntimecopyout": 1900, "staticsubgraph": 1900, "stringindex": 1900, "tensorexprdynamicgroup": 1900, "tensorexprdynamicguard": 1900, "tensorexprgroup": 1900, "timepoint": 1900, "tupleindex": 1900, "tupleunpack": 1900, "varconcat": 1900, "varstack": 1900, "awaitable_nowait": 1900, "awaitable_wait": 1900, "is_cpu": 1900, "is_ipu": 1900, "is_mkldnn": 1900, "is_mp": 1900, "is_nest": 1900, "is_ort": 1900, "is_quant": 1900, "is_vulkan": 1900, "is_xpu": 1900, "onednnfusiongroup": 1900, "onednnfusionguard": 1900, "profile_ivalu": 1900, "rangelist": 1900, "rpc_remot": 1900, "unchecked_unwrap_opt": 1900, "_call_end_callbacks_on_jit_fut": 1900, "_record_function_ent": 1900, "_record_function_enter_new": 1900, "_record_function_exit": 1900, "_bfloat16quantizedtofloat": 1900, "_floattobfloat16quant": 1900, "add_out": 1900, "add_relu_out": 1900, "add_scalar_out": 1900, "add_scalar_relu": 1900, "add_scalar_relu_out": 1900, "batch_norm1d": 1900, "batch_norm1d_relu": 1900, "batch_norm2d": 1900, "batch_norm2d_relu": 1900, "batch_norm3d": 1900, "batch_norm3d_relu": 1900, "batch_norm_relu": 1900, "cat_out": 1900, "cat_relu": 1900, "cat_relu_out": 1900, "conv1d_dynam": 1900, "conv1d_prepack": 1900, "conv1d_unpack": 1900, "conv2d_add": 1900, "conv2d_add_relu": 1900, "conv2d_dil": 1900, "conv2d_dynam": 1900, "conv2d_group": 1900, "conv2d_output_pad": 1900, "conv2d_pad": 1900, "conv2d_strid": 1900, "conv2d_transpos": 1900, "conv2d_unpack": 1900, "conv2d_unpack_s": 1900, "conv3d_dil": 1900, "conv3d_dynam": 1900, "conv3d_group": 1900, "conv3d_output_pad": 1900, "conv3d_pad": 1900, "conv3d_strid": 1900, "conv3d_transpos": 1900, "conv3d_unpack": 1900, "conv_prepack": 1900, "conv_transpose1d_dynam": 1900, "conv_transpose1d_unpack": 1900, "conv_transpose2d_dil": 1900, "conv_transpose2d_dynam": 1900, "conv_transpose2d_group": 1900, "conv_transpose2d_output_pad": 1900, "conv_transpose2d_pad": 1900, "conv_transpose2d_strid": 1900, "conv_transpose2d_transpos": 1900, "conv_transpose2d_unpack": 1900, "conv_transpose3d_dil": 1900, "conv_transpose3d_dynam": 1900, "conv_transpose3d_group": 1900, "conv_transpose3d_output_pad": 1900, "conv_transpose3d_pad": 1900, "conv_transpose3d_strid": 1900, "conv_transpose3d_transpos": 1900, "conv_transpose3d_unpack": 1900, "conv_unpack": 1900, "embedding_4bit": 1900, "embedding_bag_2bit_prepack": 1900, "embedding_bag_2bit_rowwise_offset": 1900, "embedding_bag_2bit_unpack": 1900, "embedding_bag_4bit": 1900, "embedding_bag_4bit_prepack": 1900, "embedding_bag_4bit_rowwise_offset": 1900, "embedding_bag_4bit_unpack": 1900, "embedding_bag_byt": 1900, "embedding_bag_byte_prepack": 1900, "embedding_bag_byte_rowwise_offset": 1900, "embedding_bag_byte_unpack": 1900, "embedding_bag_prepack": 1900, "embedding_bag_unpack": 1900, "embedding_byt": 1900, "linear_dynamic_fp16": 1900, "linear_leaky_relu": 1900, "linear_relu": [1900, 1907], "linear_relu_dynam": 1900, "linear_relu_dynamic_fp16": 1900, "linear_tanh": 1900, "linear_unpack": 1900, "linear_unpack_fp16": 1900, "linear_with_input_q_dq_qweight_dq_output_fp32": 1900, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1900, "make_quantized_cell_param": 1900, "make_quantized_cell_params_dynam": 1900, "make_quantized_cell_params_fp16": 1900, "mul_out": 1900, "mul_relu": 1900, "mul_relu_out": 1900, "mul_scalar_out": 1900, "mul_scalar_relu": 1900, "mul_scalar_relu_out": 1900, "quantized_gru_cell_dynam": 1900, "quantized_lstm_cell_dynam": 1900, "quantized_rnn_relu_cell_dynam": 1900, "quantized_rnn_tanh_cell_dynam": 1900, "rngprim": 1900, "philox_rand": 1900, "qlinear": 1900, "qlinear_dynam": 1900, "qlinear_prepack": 1900, "qlinear_relu": 1900, "qlinear_relu_dynam": 1900, "qlinear_unpack": 1900, "static_runtim": 1900, "vartupleunpack": 1900, "clamp_nan_to_num": 1900, "create_owned_ref": 1900, "dequantize_copi": 1900, "dict_unpack": 1900, "expand_dims_copi": 1900, "flatten_copi": 1900, "fused_equally_split": 1900, "reshape_copi": 1900, "select_tensor": 1900, "signed_log1p": 1900, "to_copi": 1900, "to_maybe_copy_out": 1900, "var1": 1901, "var2": 1901, "lbfg": 1901, "adadelta": 1901, "adamax": 1901, "asgd": 1901, "nadam": 1901, "radam": 1901, "rmsprop": 1901, "rprop": 1901, "reducelronplateau": 1901, "multisteplr": 1901, "upgrad": [1901, 1921], "swa_util": 1901, "averagedmodel": 1901, "swalr": 1901, "update_bn": 1901, "optima": 1901, "polyak": 1901, "averaged_model": 1901, "multi_avg_fn": 1901, "get_ema_multi_avg_fn": 1901, "textrm": 1901, "update_paramet": 1901, "avg_fn": 1901, "_foreach": 1901, "ema_model": 1901, "ema_avg": 1901, "averaged_model_paramet": 1901, "model_paramet": 1901, "num_averag": 1901, "swa_schedul": 1901, "anneal_epoch": 1901, "swa_lr": 1901, "swa_model": 1901, "cosineannealinglr": 1901, "swa_start": 1901, "test_input": 1901, "secur": 1902, "unpackag": 1902, "exercis": 1902, "unzip": 1902, "my_packag": 1902, "freeli": 1902, "94304870911616": 1902, "94304900784016": 1902, "extern_modul": 1902, "model_1": 1902, "pkl": 1902, "myzip": 1902, "file_byt": 1902, "writestr": 1902, "new_file_byt": 1902, "vim": 1902, "vimrc": 1902, "bufreadcmd": 1902, "brows": 1902, "amatch": 1902, "vi": 1902, "packageimport": 1902, "queryabl": 1902, "glob": 1902, "packageexport": 1902, "pe": 1902, "save_pickl": 1902, "has_fil": 1902, "importer_file_structur": 1902, "package_a": 1902, "get_rdep": 1902, "all_path": 1902, "dependency_graph_str": 1902, "save_text": 1902, "save_binari": 1902, "my_resourc": 1902, "config_stuff": 1902, "raw_data": 1902, "my_byt": 1902, "complementari": [1902, 1915], "load_pickl": 1902, "load_text": 1902, "load_binari": 1902, "my_tensor": 1902, "__reduce_package__": 1902, "my_str": 1902, "time_import": 1902, "time_export": 1902, "pickler": 1902, "persistent_id": 1902, "persistent_load": 1902, "generated_module_nam": 1902, "get_unique_id": 1902, "clock_gettim": 1902, "unpackage_foo": 1902, "depickl": 1902, "foo_1": 1902, "foo_2": 1902, "foo_packag": 1902, "foo_collect": 1902, "foo1": 1902, "foo2": 1902, "imported_foo": 1902, "9857706": 1902, "650140837": 1902, "652698385": 1902, "__torch_package__": 1902, "is_in_packag": 1902, "userexcept": 1902, "unpackageableexcept": 1902, "loaded_modul": 1902, "import_modul": 1902, "save_source_str": 1902, "save_modul": 1902, "textwrap": 1902, "dedent": 1902, "my_funct": 1902, "is_packag": 1902, "importlib": 1902, "my_pickl": 1902, "get_my_resourc": 1902, "read_text": 1902, "torch_package_import": 1902, "get_my_pickl": 1902, "is_from_packag": 1902, "stdlib": 1902, "my_test": 1902, "f2": [1902, 1903], "sys_import": 1902, "script_model": 1902, "mixed_model": 1902, "python_model_with_scripted_submodul": 1902, "loaded_script": 1902, "loaded_mix": 1902, "convention": 1902, "94286146172688": 1902, "94286146172784": 1902, "essai": 1902, "another_packag": 1902, "pickletool": 1902, "ast": 1902, "deni": 1902, "my_export": 1902, "my_interned_modul": 1902, "package_export": 1902, "my_externed_modul": 1902, "my_mocked_modul": 1902, "unwant": [1902, 1919], "hodg": 1902, "podg": 1902, "bazel": 1902, "buck": 1902, "my_class_inst": 1902, "imported_myclass": 1902, "okai": 1902, "torch_package_0": 1902, "handle_me_this_wai": 1902, "inadvert": 1902, "pun": 1902, "packagingerror": 1902, "dependency_graph": 1902, "emptymatcherror": 1902, "allow_empti": 1902, "_sysimport": 1902, "hermet": 1902, "scan": 1902, "orderedimport": 1902, "add_depend": 1902, "graphviz": 1902, "lang": 1902, "denied_modul": 1902, "my_subpackag": 1902, "digraph": 1902, "externed_modul": 1902, "interned_modul": 1902, "mocked_modul": 1902, "register_extern_hook": 1902, "register_intern_hook": 1902, "register_mock_hook": 1902, "myobject": 1902, "save_source_fil": 1902, "file_or_directori": 1902, "my_subsubpackag": 1902, "file_or_buff": 1902, "module_allow": 1902, "pytorchfileread": 1902, "python_vers": 1902, "is_dir": 1902, "gpipe": 1903, "suffer": 1903, "microbatch": 1903, "bubbl": 1903, "except_last": 1903, "deferred_batch_norm": 1903, "torchgpip": 1903, "withdevic": 1903, "micro": 1903, "fc": [1903, 1905], "init_rpc": [1903, 1910, 1911], "output_rref": 1903, "fed": [1903, 1919], "nochunk": 1903, "resnext": 1903, "till": 1903, "skippabl": 1903, "perfectli": 1903, "1to3": 1903, "layer1": 1903, "f1": 1903, "layer2": 1903, "layer3": 1903, "skip_1to3": 1903, "f3": 1903, "alic": 1903, "bob": 1903, "carol": 1903, "stashstashpop": 1903, "f_alic": 1903, "f_bob": 1903, "verify_skipp": 1903, "unmatch": [1903, 1924], "fairscal": 1903, "_kinetoprofil": 1904, "profileract": 1904, "add_metadata": 1904, "add_metadata_json": 1904, "unaggreg": 1904, "export_chrome_trac": 1904, "export_memory_timelin": 1904, "gzip": 1904, "export_stack": 1904, "self_cuda_time_tot": 1904, "flamegraph": 1904, "brendangregg": 1904, "pl": 1904, "countnam": 1904, "perf_viz": 1904, "svg": 1904, "on_trace_readi": 1904, "record_and_sav": 1904, "tensorboard_trace_handl": 1904, "dir_nam": 1904, "logdir": [1904, 1919], "code_to_profil": 1904, "row_limit": 1904, "trace_handl": 1904, "test_trace_": 1904, "step_num": 1904, "code_iteration_to_profil": 1904, "mtia": 1904, "skip_first": 1904, "worker_nam": [1904, 1910], "use_gzip": 1904, "range_push": 1904, "range_pop": 1904, "4x": 1905, "broadli": 1905, "domin": 1905, "previous_layer_fp32": 1905, "linear_fp32": 1905, "activation_fp32": 1905, "next_layer_fp32": 1905, "linear_weight_fp32": 1905, "linear_int8_w_fp32_inp": 1905, "linear_weight_int8": 1905, "ptdq": 1905, "model_fp32": 1905, "model_int8": 1905, "quantize_dynam": 1905, "input_fp32": 1905, "previous_layer_int8": 1905, "linear_with_activation_int8": 1905, "next_layer_int8": 1905, "ptsq": 1905, "minmax": 1905, "l2norm": 1905, "model_fp32_fus": 1905, "fuse_modul": [1905, 1906], "model_fp32_prepar": 1905, "fq": 1905, "prepare_qat": 1905, "training_loop": 1905, "requant": 1905, "linear1": 1905, "custom_qconfig": 1905, "fxptq": 1905, "model_fp": 1905, "usermodel": 1905, "model_to_quant": 1905, "default_dynamic_qconfig": 1905, "model_prepar": 1905, "model_quant": 1905, "model_fus": 1905, "per_tensor_symmetr": [1905, 1908], "per_channel_symmetr": [1905, 1908], "per_channel_scal": 1905, "per_channel_zero_point": 1905, "quantized_tensor": 1905, "qengin": 1905, "in4": 1905, "fx2trt": 1905, "float_modul": [1905, 1923], "staticquantcustommodul": 1905, "observed_modul": 1905, "default_qconfig": [1905, 1924], "test_quantized_op": 1905, "testquantizedop": 1905, "test_custom_module_lstm": 1905, "test_quantize_fx": 1905, "testquantizefx": 1905, "test_static_lstm": 1905, "some_oper": 1905, "e2": 1905, "thnn_conv2d_forward": 1905, "quantizedcpu": 1905, "some_qconfig": 1905, "linearpackedparam": 1905, "_modul": 1905, "prepare_orig": 1905, "quantized_orig": 1905, "scripted_quant": 1905, "fp32_op": 1906, "int8_op": 1906, "cooperlak": 1906, "audit": 1906, "op_fp32": 1906, "op_int8": 1906, "_numeric_suit": 1906, "_numeric_suite_fx": 1906, "0x7f6a523324e0": 1907, "0x7f6a3e1935e0": 1907, "0x7f6a3e193670": 1907, "num_tensor_args_to_observation_typ": 1907, "convbn1d": 1907, "0x7f6a3d598ee0": 1907, "reference_quantized_module_for_root": 1907, "fuse_convtranspose_bn": 1907, "0x7f6a3d5220d0": 1907, "linearbn1d": 1907, "fuse_linear_bn": 1907, "0x7f6a3d522040": 1907, "convbn2d": 1907, "convbn3d": 1907, "bnrelu2d": 1907, "bnrelu3d": 1907, "input_type_to_index": 1907, "conv_fus": 1907, "convbnrelu1d": 1907, "convbnrelu2d": 1907, "convbnrelu3d": 1907, "convrelu1d": 1907, "convrelu3d": 1907, "0x7f6a3e193700": 1907, "0x7f6a3e193d30": 1907, "quint4x2": [1907, 1916, 1920, 1921], "embedding_op": 1907, "0x7f6a3e115c10": 1907, "00390625": 1907, "0x7f6a3e115550": 1907, "0x7f6a3e115700": 1907, "0x7f6a3e193c10": 1907, "0x7f6a3e115af0": 1907, "0x7f6a3e0ad310": 1907, "0x7f6a3e115b80": 1907, "0x7f6a3e193ee0": 1907, "linear_fus": 1907, "_sequential_wrapper2": 1907, "0x7f6a5947f430": 1907, "0x7f6a3e193af0": 1907, "0x7f6a3b5050d0": 1907, "fuse_conv_bn_relu": 1907, "0x7f6a3d598f70": 1907, "0x7f6a3b505160": 1907, "0x7f6a3b5051f0": 1907, "0x7f6a3b505280": 1907, "0x7f6a3b505310": 1907, "0x7f6a3b5053a0": 1907, "0x7f6a3b505430": 1907, "0x7f6a3b5054c0": 1907, "0x7f6a3b505550": 1907, "0x7f6a3b5055e0": 1907, "0x7f6a3b505670": 1907, "0x7f6a3e193ca0": 1907, "0078125": 1907, "customconfig": 1908, "custom_module_config": 1908, "_caller": 1909, "_devices_kw": 1909, "slowli": 1909, "unind": 1909, "deivc": 1909, "privateuse1": 1909, "shortcom": 1910, "stitch": 1910, "rpc_backend_opt": 1910, "trainer3": 1910, "parameterserver2": 1910, "dash": [1910, 1912], "backendtyp": 1910, "rpcbackendopt": 1910, "rpcagent": 1910, "transmit": 1910, "calle": [1910, 1912], "_set_rpc_timeout": 1910, "5678": 1910, "worker0": 1910, "my_script_add": 1910, "wire": 1910, "fut2": 1910, "meth": 1910, "grace": 1910, "pend": [1910, 1919], "userrref": [1910, 1912], "async_execut": 1910, "paus": 1910, "outmost": 1910, "async_add_chain": 1910, "worker2": 1910, "script_add": 1910, "async_add": 1910, "asyncexecutionclass": 1910, "static_async_add": 1910, "class_async_add": 1910, "ret_fut": 1910, "bound_async_add": 1910, "rpc_timeout": 1910, "incid": [1910, 1912], "nvlink": 1910, "multiplex": 1910, "tensorpiperpcbackendopt": 1910, "num_worker_thread": 1910, "device_map": 1910, "_transport": 1910, "tensorpipeag": 1910, "set_device_map": 1910, "intermitt": 1910, "remote_modul": 1910, "forward_async": 1910, "remote_devic": 1910, "workernam": 1910, "trainer0": 1910, "ps0": 1910, "remote_linear_modul": 1910, "get_module_rref": 1910, "remote_paramet": 1910, "my_add": [1911, 1925], "t4": 1911, "t5": 1911, "autograd_message_id": 1911, "autograd_context_id": 1911, "send1": 1911, "kickoff": 1911, "recv2": 1911, "heard": 1911, "send2": 1911, "recv1": 1911, "dist_autograd_simpl": 1911, "random_tensor": 1911, "_run_process": 1911, "dst_rank": 1911, "dst_name": 1911, "run_process": 1911, "rrefid": 1912, "ownerrref": 1912, "transient": 1912, "udf": 1912, "deliveri": 1912, "knowledg": 1912, "danger": 1912, "ancestor": 1912, "trickier": 1912, "forkid": 1912, "ack": 1912, "solid": 1912, "gc": 1912, "followup": 1912, "lil": 1914, "stark": 1914, "9093": 1914, "1411": 1914, "7568": 1914, "9589": 1914, "2794": 1914, "catastroph": 1914, "9900": 1914, "000": 1914, "400": 1914, "s2": 1914, "plain_dim_s": 1914, "lp64": 1914, "280": 1914, "310": 1914, "sp": 1914, "9078": 1914, "conception": 1914, "lobpcg": 1914, "geneig": 1914, "pca_lowrank": 1914, "kindli": 1914, "airy_ai": 1915, "airi": 1915, "onward": 1915, "9635": 1915, "entr": 1915, "3466": 1915, "int_": 1915, "8427": 1915, "0561": 1915, "4769": 1915, "9213": 1915, "8858": 1915, "7683": 1915, "7481": 1915, "2920": 1915, "int_0": 1915, "gammaln": 1915, "a1": 1915, "a2": 1915, "3528": 1915, "5665": 1915, "6472": 1915, "4335": 1915, "2650": 1915, "2661": 1915, "2796": 1915, "8808": 1915, "3019": 1915, "4658": 1915, "3085": 1915, "2430": 1915, "2070": 1915, "i1": 1915, "5652": 1915, "9534": 1915, "7595": 1915, "2153": 1915, "log_ndtr": 1915, "_ndtr": 1915, "6077": 1915, "7832": 1915, "841": 1915, "6931": 1915, "1728": 1915, "023": 1915, "9331": 1915, "6486": 1915, "1523": 1915, "6516": 1915, "6352": 1915, "6131": 1915, "7169": 1915, "6261": 1915, "displaystyl": 1915, "undefiend": 1915, "6835": 1915, "8474": 1915, "1929": 1915, "7162": 1915, "4180": 1915, "3928": 1915, "4007": 1915, "7586": 1915, "3901": 1915, "5049": 1915, "ndtr": 1915, "0228": 1915, "1587": 1915, "9772": 1915, "9987": 1915, "2p": 1915, "64493": 1915, "4041": 1915, "8288": 1915, "4939": 1915, "97": 1915, "4091": 1915, "8863": 1915, "771": 1915, "scaled_modified_bessel_k0": 1915, "scaled_modified_bessel_k1": 1915, "2948": 1915, "0267": 1915, "1566": 1915, "9186": 1915, "8631": 1915, "0259": 1915, "1300": 1915, "spheric": 1915, "xlog1pi": 1915, "3863": 1915, "1972": 1915, "6094": 1915, "2189": 1915, "8283": 1915, "7726": 1915, "0986": 1915, "1589": 1915, "hurwitz": 1915, "6449": 1915, "0823": 1915, "untyp": 1916, "wrap_storag": 1916, "complex_doubl": 1916, "from_buff": 1916, "pickle_storage_typ": 1916, "byteswap": 1916, "quint2x4": [1916, 1921], "twelv": 1917, "halftensor": [1917, 1920], "bfloat16tensor": [1917, 1920], "chartensor": [1917, 1920], "shorttensor": [1917, 1920], "binary16": [1917, 1920], "significand": [1917, 1920], "float_tensor": 1917, "double_tensor": 1917, "complex_float_tensor": 1917, "complex_double_tensor": 1917, "int_tensor": 1917, "long_tensor": 1917, "uint_tensor": 1917, "bool_tensor": 1917, "long_zerodim": 1917, "int_zerodim": 1917, "set_default_devic": 1917, "cuda1": 1917, "nhwc": [1917, 1919], "channels_last_3d": 1917, "ndhwc": 1917, "blogpost": 1918, "totensor": 1919, "trainset": 1919, "mnist": 1919, "mnist_train": 1919, "trainload": 1919, "grayscal": 1919, "make_grid": 1919, "add_imag": 1919, "add_graph": 1919, "clutter": 1919, "n_iter": 1919, "purge_step": 1919, "max_queu": 1919, "flush_sec": 1919, "filename_suffix": 1919, "current_datetime_hostnam": 1919, "exp1": 1919, "suffix": [1919, 1920], "global_step": 1919, "purg": 1919, "event_file_writ": 1919, "eventfilewrit": 1919, "may04_22": 1919, "54_": 1919, "macbook": 1919, "my_experi": 1919, "lr_0": 1919, "1_batch_16": 1919, "locallr_0": 1919, "scalar_valu": 1919, "walltim": 1919, "new_styl": 1919, "double_precis": 1919, "blobnam": 1919, "simple_valu": 1919, "main_tag": 1919, "tag_scalar_dict": 1919, "run_14h": 1919, "xsinx": 1919, "xcosx": 1919, "tanx": 1919, "add_histogram": 1919, "max_bin": 1919, "fd": 1919, "img_tensor": 1919, "dataformat": 1919, "chw": 1919, "hwc": 1919, "hw": 1919, "wh": 1919, "3xhxw": 1919, "img_hwc": 1919, "my_imag": 1919, "my_image_hwc": 1919, "img_batch": 1919, "my_image_batch": 1919, "add_figur": 1919, "add_video": 1919, "vid_tensor": 1919, "fp": 1919, "moviepi": 1919, "add_audio": 1919, "snd_tensor": 1919, "sample_r": 1919, "44100": 1919, "add_text": 1919, "text_str": 1919, "input_to_model": 1919, "use_strict_trac": 1919, "add_embed": 1919, "label_img": 1919, "metadata_head": 1919, "projector": 1919, "kwlist": 1919, "add_pr_curv": 1919, "num_threshold": 1919, "pr_curv": 1919, "add_custom_scalar": 1919, "chart": 1919, "categorynam": 1919, "chartnam": 1919, "listofproperti": 1919, "multilin": 1919, "taiwan": 1919, "twse": 1919, "0050": 1919, "2330": 1919, "dow": 1919, "aaa": 1919, "bbb": 1919, "ccc": 1919, "nasdaq": 1919, "add_mesh": 1919, "config_dict": 1919, "threej": 1919, "vertex": 1919, "number_of_vertic": 1919, "vertices_tensor": 1919, "colors_tensor": 1919, "faces_tensor": 1919, "my_mesh": 1919, "add_hparam": 1919, "hparam_dict": 1919, "metric_dict": 1919, "hparam_domain_discret": 1919, "run_nam": 1919, "hparam": 1919, "bsize": 1919, "_like": 1920, "allow_subclass": 1921, "check_devic": 1921, "check_layout": 1921, "6e": 1921, "3e": 1921, "assert_equ": 1921, "000000000000001e": 1921, "1e0": 1921, "argh": 1921, "nfooter": 1921, "66": 1921, "footer": 1921, "exclude_zero": 1921, "1205": 1921, "2282": 1921, "6380": 1921, "default_gener": 1922, "data_dependent_output": 1922, "dynamic_output_shap": 1922, "inplace_view": 1922, "nondeterministic_bitwis": 1922, "nondeterministic_seed": 1922, "compare_weight": 1923, "float_dict": 1923, "quantized_dict": 1923, "wt_compare_dict": 1923, "qmodel": 1923, "compute_error": 1923, "weight_dict": 1923, "get_logger_dict": 1923, "shadowlogg": 1923, "outputlogg": [1923, 1924], "target_dict": 1923, "q_modul": 1923, "logger_cl": [1923, 1924], "prepare_model_with_stub": 1923, "module_swap_list": 1923, "q_model": 1923, "ob_dict": 1923, "compare_model_stub": 1923, "quantizablebasicblock": 1923, "get_matching_activ": 1923, "act_dict": 1923, "prepare_model_output": 1923, "compare_model_output": 1923, "act_compare_dict": 1923, "weight_comparison": 1924, "extract_weight": 1924, "sqnr": 1924, "extend_logger_results_with_comparison": 1924, "compute_sqnr": 1924, "mp_n": 1924, "mq_n": 1924, "add_logg": 1924, "act_comparison": 1924, "extract_logger_info": 1924, "mp_shadows_mq": 1924, "add_shadow_logg": 1924, "shadow_act_comparison": 1924, "extract_shadow_logger_info": 1924, "ref_node_nam": 1924, "prev_node_nam": 1924, "model_nam": 1924, "ref_nam": 1924, "prev_node_target_typ": 1924, "ref_node_target_typ": 1924, "results_typ": 1924, "index_within_arg": 1924, "index_of_arg": 1924, "qconfig_str": 1924, "outputcomparisonlogg": 1924, "x_ref": 1924, "nstracer": 1924, "skipped_module_nam": 1924, "skipped_module_class": 1924, "model_name_a": 1924, "model_a": 1924, "model_name_b": 1924, "model_b": 1924, "base_name_to_sets_of_related_op": 1924, "unmatchable_types_map": 1924, "op_to_type_to_weight_extraction_fn": 1924, "nsresultstyp": 1924, "name_a": 1924, "name_b": 1924, "should_log_input": 1924, "model_a_with_logg": 1924, "model_b_with_logg": 1924, "model_name_to_use_for_layer_nam": 1924, "node_type_to_io_type_map": 1924, "model_a_shadows_b": 1924, "model_name_1": 1924, "model_name_2": 1924, "comparison_fn": 1924, "comparison_nam": 1924, "prepare_n_shadows_model": 1924, "qconfig_multi_map": 1924, "custom_prepare_fn": 1924, "custom_prepare_kwarg": 1924, "custom_trac": 1924, "args_kwargs_m": 1924, "op_m": 1924, "output_m": 1924, "op_m_n": 1924, "log_m_n": 1924, "log_m_0": 1924, "qconfig_n": 1924, "args_m": 1924, "op_m_prepared_with_qconfig_n": 1924, "out_m_n": 1924, "kwargs_m": 1924, "docblock": 1924, "loggers_set_en": 1924, "loggers_set_save_activ": 1924, "save_activ": 1924, "convert_n_shadows_model": 1924, "custom_convert_fn": 1924, "custom_convert_kwarg": 1924, "extract_results_n_shadows_model": 1924, "print_comparisons_n_shadows_model": 1924, "compute_normalized_l2_error": 1924, "compute_cosine_similar": 1924, "as_subclass": 1925, "resolve_nam": 1925, "handle_torch_funct": 1925, "public_api": 1925, "relevant_arg": 1925, "has_torch_function_unari": 1925, "is_tensor_lik": 1925, "notatensor": 1925, "tensorlik": 1925, "is_tensor_method_or_properti": 1925, "__get__": 1925, "__module__": 1925, "slot": 1925, "wrap_torch_funct": 1925, "smallest_norm": 1926, "subnorm": 1926, "denormal_numb": 1926}, "objects": {"": [[1922, 0, 0, "-", "torch"], [1857, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1916, 1, 1, "", "BFloat16Storage"], [1916, 1, 1, "", "BoolStorage"], [1916, 1, 1, "", "ByteStorage"], [1916, 1, 1, "", "CharStorage"], [1916, 1, 1, "", "ComplexDoubleStorage"], [1916, 1, 1, "", "ComplexFloatStorage"], [1916, 1, 1, "", "DoubleStorage"], [1916, 1, 1, "", "FloatStorage"], [86, 1, 1, "", "Generator"], [1916, 1, 1, "", "HalfStorage"], [1916, 1, 1, "", "IntStorage"], [1916, 1, 1, "", "LongStorage"], [1916, 1, 1, "", "QInt32Storage"], [1916, 1, 1, "", "QInt8Storage"], [1916, 1, 1, "", "QUInt2x4Storage"], [1916, 1, 1, "", "QUInt4x2Storage"], [1916, 1, 1, "", "QUInt8Storage"], [1916, 1, 1, "", "ShortStorage"], [1922, 1, 1, "", "SymBool"], [1922, 1, 1, "", "SymFloat"], [1922, 1, 1, "", "SymInt"], [1922, 1, 1, "", "Tag"], [1920, 1, 1, "", "Tensor"], [1916, 1, 1, "", "TypedStorage"], [1916, 1, 1, "", "UntypedStorage"], [28, 0, 0, "-", "__config__"], [618, 5, 1, "", "_assert"], [0, 0, 0, "-", "_dynamo"], [619, 5, 1, "", "_foreach_abs"], [620, 5, 1, "", "_foreach_abs_"], [621, 5, 1, "", "_foreach_acos"], [622, 5, 1, "", "_foreach_acos_"], [623, 5, 1, "", "_foreach_asin"], [624, 5, 1, "", "_foreach_asin_"], [625, 5, 1, "", "_foreach_atan"], [626, 5, 1, "", "_foreach_atan_"], [627, 5, 1, "", "_foreach_ceil"], [628, 5, 1, "", "_foreach_ceil_"], [629, 5, 1, "", "_foreach_cos"], [630, 5, 1, "", "_foreach_cos_"], [631, 5, 1, "", "_foreach_cosh"], [632, 5, 1, "", "_foreach_cosh_"], [633, 5, 1, "", "_foreach_erf"], [634, 5, 1, "", "_foreach_erf_"], [635, 5, 1, "", "_foreach_erfc"], [636, 5, 1, "", "_foreach_erfc_"], [637, 5, 1, "", "_foreach_exp"], [638, 5, 1, "", "_foreach_exp_"], [639, 5, 1, "", "_foreach_expm1"], [640, 5, 1, "", "_foreach_expm1_"], [641, 5, 1, "", "_foreach_floor"], [642, 5, 1, "", "_foreach_floor_"], [643, 5, 1, "", "_foreach_frac"], [644, 5, 1, "", "_foreach_frac_"], [645, 5, 1, "", "_foreach_lgamma"], [646, 5, 1, "", "_foreach_lgamma_"], [647, 5, 1, "", "_foreach_log"], [648, 5, 1, "", "_foreach_log10"], [649, 5, 1, "", "_foreach_log10_"], [650, 5, 1, "", "_foreach_log1p"], [651, 5, 1, "", "_foreach_log1p_"], [652, 5, 1, "", "_foreach_log2"], [653, 5, 1, "", "_foreach_log2_"], [654, 5, 1, "", "_foreach_log_"], [655, 5, 1, "", "_foreach_neg"], [656, 5, 1, "", "_foreach_neg_"], [657, 5, 1, "", "_foreach_reciprocal"], [658, 5, 1, "", "_foreach_reciprocal_"], [659, 5, 1, "", "_foreach_round"], [660, 5, 1, "", "_foreach_round_"], [661, 5, 1, "", "_foreach_sigmoid"], [662, 5, 1, "", "_foreach_sigmoid_"], [663, 5, 1, "", "_foreach_sin"], [664, 5, 1, "", "_foreach_sin_"], [665, 5, 1, "", "_foreach_sinh"], [666, 5, 1, "", "_foreach_sinh_"], [667, 5, 1, "", "_foreach_sqrt"], [668, 5, 1, "", "_foreach_sqrt_"], [669, 5, 1, "", "_foreach_tan"], [670, 5, 1, "", "_foreach_tan_"], [671, 5, 1, "", "_foreach_trunc"], [672, 5, 1, "", "_foreach_trunc_"], [673, 5, 1, "", "_foreach_zero_"], [1866, 0, 0, "-", "_logging"], [675, 5, 1, "", "abs"], [676, 5, 1, "", "absolute"], [677, 5, 1, "", "acos"], [678, 5, 1, "", "acosh"], [679, 5, 1, "", "add"], [680, 5, 1, "", "addbmm"], [681, 5, 1, "", "addcdiv"], [682, 5, 1, "", "addcmul"], [683, 5, 1, "", "addmm"], [684, 5, 1, "", "addmv"], [685, 5, 1, "", "addr"], [686, 5, 1, "", "adjoint"], [687, 5, 1, "", "all"], [688, 5, 1, "", "allclose"], [689, 5, 1, "", "amax"], [690, 5, 1, "", "amin"], [691, 5, 1, "", "aminmax"], [1, 0, 0, "-", "amp"], [692, 5, 1, "", "angle"], [693, 5, 1, "", "any"], [1905, 0, 0, "-", "ao"], [859, 5, 1, "", "arange"], [860, 5, 1, "", "arccos"], [861, 5, 1, "", "arccosh"], [862, 5, 1, "", "arcsin"], [863, 5, 1, "", "arcsinh"], [864, 5, 1, "", "arctan"], [865, 5, 1, "", "arctan2"], [866, 5, 1, "", "arctanh"], [867, 5, 1, "", "are_deterministic_algorithms_enabled"], [868, 5, 1, "", "argmax"], [869, 5, 1, "", "argmin"], [870, 5, 1, "", "argsort"], [871, 5, 1, "", "argwhere"], [872, 5, 1, "", "as_strided"], [873, 5, 1, "", "as_tensor"], [874, 5, 1, "", "asarray"], [875, 5, 1, "", "asin"], [876, 5, 1, "", "asinh"], [877, 5, 1, "", "atan"], [878, 5, 1, "", "atan2"], [879, 5, 1, "", "atanh"], [880, 5, 1, "", "atleast_1d"], [881, 5, 1, "", "atleast_2d"], [882, 5, 1, "", "atleast_3d"], [1, 1, 1, "", "autocast"], [2, 0, 0, "-", "autograd"], [3, 0, 0, "-", "backends"], [915, 5, 1, "", "baddbmm"], [916, 5, 1, "", "bartlett_window"], [917, 5, 1, "", "bernoulli"], [918, 5, 1, "", "bincount"], [919, 5, 1, "", "bitwise_and"], [920, 5, 1, "", "bitwise_left_shift"], [921, 5, 1, "", "bitwise_not"], [922, 5, 1, "", "bitwise_or"], [923, 5, 1, "", "bitwise_right_shift"], [924, 5, 1, "", "bitwise_xor"], [925, 5, 1, "", "blackman_window"], [926, 5, 1, "", "block_diag"], [927, 5, 1, "", "bmm"], [928, 5, 1, "", "broadcast_shapes"], [929, 5, 1, "", "broadcast_tensors"], [930, 5, 1, "", "broadcast_to"], [931, 5, 1, "", "bucketize"], [932, 5, 1, "", "can_cast"], [933, 5, 1, "", "cartesian_prod"], [934, 5, 1, "", "cat"], [935, 5, 1, "", "cdist"], [936, 5, 1, "", "ceil"], [937, 5, 1, "", "chain_matmul"], [938, 5, 1, "", "cholesky"], [939, 5, 1, "", "cholesky_inverse"], [940, 5, 1, "", "cholesky_solve"], [941, 5, 1, "", "chunk"], [942, 5, 1, "", "clamp"], [943, 5, 1, "", "clip"], [944, 5, 1, "", "clone"], [945, 5, 1, "", "column_stack"], [946, 5, 1, "", "combinations"], [947, 5, 1, "", "compile"], [948, 5, 1, "", "compiled_with_cxx11_abi"], [949, 5, 1, "", "complex"], [950, 5, 1, "", "concat"], [951, 5, 1, "", "concatenate"], [952, 5, 1, "", "conj"], [953, 5, 1, "", "conj_physical"], [1922, 0, 0, "-", "contrib"], [954, 5, 1, "", "copysign"], [955, 5, 1, "", "corrcoef"], [956, 5, 1, "", "cos"], [957, 5, 1, "", "cosh"], [958, 5, 1, "", "count_nonzero"], [959, 5, 1, "", "cov"], [1, 0, 0, "-", "cpu"], [960, 5, 1, "", "cross"], [31, 0, 0, "-", "cuda"], [1039, 5, 1, "", "cummax"], [1040, 5, 1, "", "cummin"], [1041, 5, 1, "", "cumprod"], [1042, 5, 1, "", "cumsum"], [1043, 5, 1, "", "cumulative_trapezoid"], [1044, 5, 1, "", "deg2rad"], [1045, 5, 1, "", "dequantize"], [1046, 5, 1, "", "det"], [1917, 1, 1, "", "device"], [1047, 5, 1, "", "diag"], [1048, 5, 1, "", "diag_embed"], [1049, 5, 1, "", "diagflat"], [1050, 5, 1, "", "diagonal"], [1051, 5, 1, "", "diagonal_scatter"], [1052, 5, 1, "", "diff"], [1053, 5, 1, "", "digamma"], [1054, 5, 1, "", "dist"], [38, 0, 0, "-", "distributed"], [44, 0, 0, "-", "distributions"], [1055, 5, 1, "", "div"], [1056, 5, 1, "", "divide"], [1057, 5, 1, "", "dot"], [1058, 5, 1, "", "dsplit"], [1059, 5, 1, "", "dstack"], [1917, 1, 1, "", "dtype"], [1060, 5, 1, "", "einsum"], [1061, 5, 1, "", "empty"], [1062, 5, 1, "", "empty_like"], [1063, 5, 1, "", "empty_strided"], [1064, 1, 1, "", "enable_grad"], [1065, 5, 1, "", "eq"], [1066, 5, 1, "", "equal"], [1067, 5, 1, "", "erf"], [1068, 5, 1, "", "erfc"], [1069, 5, 1, "", "erfinv"], [1070, 5, 1, "", "exp"], [1071, 5, 1, "", "exp2"], [1072, 5, 1, "", "expm1"], [1073, 5, 1, "", "eye"], [1074, 5, 1, "", "fake_quantize_per_channel_affine"], [1075, 5, 1, "", "fake_quantize_per_tensor_affine"], [59, 0, 0, "-", "fft"], [1098, 5, 1, "", "fix"], [1099, 5, 1, "", "flatten"], [1100, 5, 1, "", "flip"], [1101, 5, 1, "", "fliplr"], [1102, 5, 1, "", "flipud"], [1103, 5, 1, "", "float_power"], [1104, 5, 1, "", "floor"], [1105, 5, 1, "", "floor_divide"], [1106, 5, 1, "", "fmax"], [1107, 5, 1, "", "fmin"], [1108, 5, 1, "", "fmod"], [1109, 5, 1, "", "frac"], [1110, 5, 1, "", "frexp"], [1111, 5, 1, "", "from_dlpack"], [1112, 5, 1, "", "from_numpy"], [1113, 5, 1, "", "frombuffer"], [1114, 5, 1, "", "full"], [1115, 5, 1, "", "full_like"], [62, 0, 0, "-", "func"], [67, 0, 0, "-", "futures"], [68, 0, 0, "-", "fx"], [1129, 5, 1, "", "gather"], [1130, 5, 1, "", "gcd"], [1131, 5, 1, "", "ge"], [1132, 5, 1, "", "geqrf"], [1133, 5, 1, "", "ger"], [1134, 5, 1, "", "get_default_dtype"], [1135, 5, 1, "", "get_deterministic_debug_mode"], [1136, 5, 1, "", "get_float32_matmul_precision"], [1137, 5, 1, "", "get_num_interop_threads"], [1138, 5, 1, "", "get_num_threads"], [1139, 5, 1, "", "get_rng_state"], [1140, 5, 1, "", "gradient"], [1141, 5, 1, "", "greater"], [1142, 5, 1, "", "greater_equal"], [1143, 5, 1, "", "gt"], [1144, 5, 1, "", "hamming_window"], [1145, 5, 1, "", "hann_window"], [1146, 5, 1, "", "heaviside"], [1147, 5, 1, "", "histc"], [1148, 5, 1, "", "histogram"], [1149, 5, 1, "", "histogramdd"], [1150, 5, 1, "", "hsplit"], [1151, 5, 1, "", "hspmm"], [1152, 5, 1, "", "hstack"], [1854, 0, 0, "-", "hub"], [1153, 5, 1, "", "hypot"], [1154, 5, 1, "", "i0"], [1155, 5, 1, "", "igamma"], [1156, 5, 1, "", "igammac"], [1157, 5, 1, "", "imag"], [1158, 5, 1, "", "index_add"], [1159, 5, 1, "", "index_copy"], [1160, 5, 1, "", "index_reduce"], [1161, 5, 1, "", "index_select"], [1162, 1, 1, "", "inference_mode"], [1163, 5, 1, "", "initial_seed"], [1164, 5, 1, "", "inner"], [1165, 5, 1, "", "inverse"], [1166, 5, 1, "", "is_complex"], [1167, 5, 1, "", "is_conj"], [1168, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1169, 5, 1, "", "is_floating_point"], [1170, 5, 1, "", "is_grad_enabled"], [1171, 5, 1, "", "is_inference_mode_enabled"], [1172, 5, 1, "", "is_nonzero"], [1173, 5, 1, "", "is_storage"], [1174, 5, 1, "", "is_tensor"], [1175, 5, 1, "", "is_warn_always_enabled"], [1176, 5, 1, "", "isclose"], [1177, 5, 1, "", "isfinite"], [1178, 5, 1, "", "isin"], [1179, 5, 1, "", "isinf"], [1180, 5, 1, "", "isnan"], [1181, 5, 1, "", "isneginf"], [1182, 5, 1, "", "isposinf"], [1183, 5, 1, "", "isreal"], [1184, 5, 1, "", "istft"], [1857, 0, 0, "-", "jit"], [1206, 5, 1, "", "kaiser_window"], [1207, 5, 1, "", "kron"], [1208, 5, 1, "", "kthvalue"], [1917, 1, 1, "", "layout"], [1209, 5, 1, "", "lcm"], [1210, 5, 1, "", "ldexp"], [1211, 5, 1, "", "le"], [1212, 5, 1, "", "lerp"], [1213, 5, 1, "", "less"], [1214, 5, 1, "", "less_equal"], [1215, 5, 1, "", "lgamma"], [1865, 0, 0, "-", "linalg"], [1257, 5, 1, "", "linspace"], [1258, 5, 1, "", "load"], [1259, 5, 1, "", "lobpcg"], [1260, 5, 1, "", "log"], [1261, 5, 1, "", "log10"], [1262, 5, 1, "", "log1p"], [1263, 5, 1, "", "log2"], [1264, 5, 1, "", "logaddexp"], [1265, 5, 1, "", "logaddexp2"], [1266, 5, 1, "", "logcumsumexp"], [1267, 5, 1, "", "logdet"], [1268, 5, 1, "", "logical_and"], [1269, 5, 1, "", "logical_not"], [1270, 5, 1, "", "logical_or"], [1271, 5, 1, "", "logical_xor"], [1272, 5, 1, "", "logit"], [1273, 5, 1, "", "logspace"], [1274, 5, 1, "", "logsumexp"], [1275, 5, 1, "", "lt"], [1276, 5, 1, "", "lu"], [1277, 5, 1, "", "lu_solve"], [1278, 5, 1, "", "lu_unpack"], [1279, 5, 1, "", "manual_seed"], [1867, 0, 0, "-", "masked"], [1280, 5, 1, "", "masked_select"], [1281, 5, 1, "", "matmul"], [1282, 5, 1, "", "matrix_exp"], [1283, 5, 1, "", "matrix_power"], [1284, 5, 1, "", "max"], [1285, 5, 1, "", "maximum"], [1286, 5, 1, "", "mean"], [1287, 5, 1, "", "median"], [1917, 1, 1, "", "memory_format"], [1288, 5, 1, "", "meshgrid"], [1289, 5, 1, "", "min"], [1290, 5, 1, "", "minimum"], [1291, 5, 1, "", "mm"], [1292, 5, 1, "", "mode"], [1870, 0, 0, "-", "monitor"], [1293, 5, 1, "", "moveaxis"], [1294, 5, 1, "", "movedim"], [1871, 0, 0, "-", "mps"], [1307, 5, 1, "", "msort"], [1308, 5, 1, "", "mul"], [1309, 5, 1, "", "multinomial"], [1310, 5, 1, "", "multiply"], [1872, 0, 0, "-", "multiprocessing"], [1311, 5, 1, "", "mv"], [1312, 5, 1, "", "mvlgamma"], [1313, 5, 1, "", "nan_to_num"], [1314, 5, 1, "", "nanmean"], [1315, 5, 1, "", "nanmedian"], [1316, 5, 1, "", "nanquantile"], [1317, 5, 1, "", "nansum"], [1318, 5, 1, "", "narrow"], [1319, 5, 1, "", "narrow_copy"], [1320, 5, 1, "", "ne"], [1321, 5, 1, "", "neg"], [1322, 5, 1, "", "negative"], [1875, 0, 0, "-", "nested"], [1323, 5, 1, "", "nextafter"], [1876, 0, 0, "-", "nn"], [1644, 1, 1, "", "no_grad"], [1645, 5, 1, "", "nonzero"], [1646, 5, 1, "", "norm"], [1647, 5, 1, "", "normal"], [1648, 5, 1, "", "not_equal"], [1649, 5, 1, "", "numel"], [1650, 5, 1, "", "ones"], [1651, 5, 1, "", "ones_like"], [1898, 0, 0, "-", "onnx"], [1901, 0, 0, "-", "optim"], [1691, 5, 1, "", "orgqr"], [1692, 5, 1, "", "ormqr"], [1693, 5, 1, "", "outer"], [1902, 0, 0, "-", "package"], [1694, 5, 1, "", "pca_lowrank"], [1695, 5, 1, "", "permute"], [1696, 5, 1, "", "pinverse"], [1697, 5, 1, "", "poisson"], [1698, 5, 1, "", "polar"], [1699, 5, 1, "", "polygamma"], [1700, 5, 1, "", "positive"], [1701, 5, 1, "", "pow"], [1702, 5, 1, "", "prod"], [1904, 0, 0, "-", "profiler"], [1703, 5, 1, "", "promote_types"], [1704, 5, 1, "", "qr"], [1705, 5, 1, "", "quantile"], [1908, 0, 0, "-", "quantization"], [1706, 5, 1, "", "quantize_per_channel"], [1707, 5, 1, "", "quantize_per_tensor"], [1708, 5, 1, "", "quantized_batch_norm"], [1709, 5, 1, "", "quantized_max_pool1d"], [1710, 5, 1, "", "quantized_max_pool2d"], [1712, 5, 1, "", "rad2deg"], [1713, 5, 1, "", "rand"], [1714, 5, 1, "", "rand_like"], [1715, 5, 1, "", "randint"], [1716, 5, 1, "", "randint_like"], [1717, 5, 1, "", "randn"], [1718, 5, 1, "", "randn_like"], [1909, 0, 0, "-", "random"], [1719, 5, 1, "", "randperm"], [1720, 5, 1, "", "range"], [1721, 5, 1, "", "ravel"], [1722, 5, 1, "", "real"], [1723, 5, 1, "", "reciprocal"], [1724, 5, 1, "", "remainder"], [1725, 5, 1, "", "renorm"], [1726, 5, 1, "", "repeat_interleave"], [1727, 5, 1, "", "reshape"], [1728, 5, 1, "", "resolve_conj"], [1729, 5, 1, "", "resolve_neg"], [1730, 5, 1, "", "result_type"], [1731, 5, 1, "", "roll"], [1732, 5, 1, "", "rot90"], [1733, 5, 1, "", "round"], [1734, 5, 1, "", "row_stack"], [1735, 5, 1, "", "rsqrt"], [1736, 5, 1, "", "save"], [1737, 5, 1, "", "scatter"], [1738, 5, 1, "", "scatter_add"], [1739, 5, 1, "", "scatter_reduce"], [1740, 5, 1, "", "searchsorted"], [1741, 5, 1, "", "seed"], [1742, 5, 1, "", "select"], [1743, 5, 1, "", "select_scatter"], [1744, 5, 1, "", "set_default_device"], [1745, 5, 1, "", "set_default_dtype"], [1746, 5, 1, "", "set_default_tensor_type"], [1747, 5, 1, "", "set_deterministic_debug_mode"], [1748, 5, 1, "", "set_float32_matmul_precision"], [1749, 5, 1, "", "set_flush_denormal"], [1750, 1, 1, "", "set_grad_enabled"], [1751, 5, 1, "", "set_num_interop_threads"], [1752, 5, 1, "", "set_num_threads"], [1753, 5, 1, "", "set_printoptions"], [1754, 5, 1, "", "set_rng_state"], [1755, 5, 1, "", "set_warn_always"], [1756, 5, 1, "", "sgn"], [1757, 5, 1, "", "sigmoid"], [1758, 5, 1, "", "sign"], [1913, 0, 0, "-", "signal"], [1770, 5, 1, "", "signbit"], [1771, 5, 1, "", "sin"], [1772, 5, 1, "", "sinc"], [1773, 5, 1, "", "sinh"], [1774, 5, 1, "", "slice_scatter"], [1775, 5, 1, "", "slogdet"], [1776, 5, 1, "", "smm"], [1777, 5, 1, "", "softmax"], [1778, 5, 1, "", "sort"], [1914, 0, 0, "-", "sparse"], [1787, 5, 1, "", "sparse_bsc_tensor"], [1788, 5, 1, "", "sparse_bsr_tensor"], [1789, 5, 1, "", "sparse_compressed_tensor"], [1790, 5, 1, "", "sparse_coo_tensor"], [1791, 5, 1, "", "sparse_csc_tensor"], [1792, 5, 1, "", "sparse_csr_tensor"], [1915, 0, 0, "-", "special"], [1793, 5, 1, "", "split"], [1794, 5, 1, "", "sqrt"], [1795, 5, 1, "", "square"], [1796, 5, 1, "", "squeeze"], [1797, 5, 1, "", "sspaddmm"], [1798, 5, 1, "", "stack"], [1799, 5, 1, "", "std"], [1800, 5, 1, "", "std_mean"], [1801, 5, 1, "", "stft"], [1802, 5, 1, "", "sub"], [1803, 5, 1, "", "subtract"], [1804, 5, 1, "", "sum"], [1805, 5, 1, "", "svd"], [1806, 5, 1, "", "svd_lowrank"], [1807, 5, 1, "", "swapaxes"], [1808, 5, 1, "", "swapdims"], [1809, 5, 1, "", "sym_float"], [1810, 5, 1, "", "sym_int"], [1811, 5, 1, "", "sym_max"], [1812, 5, 1, "", "sym_min"], [1813, 5, 1, "", "sym_not"], [1814, 5, 1, "", "t"], [1815, 5, 1, "", "take"], [1816, 5, 1, "", "take_along_dim"], [1817, 5, 1, "", "tan"], [1818, 5, 1, "", "tanh"], [1819, 5, 1, "", "tensor"], [1820, 5, 1, "", "tensor_split"], [1821, 5, 1, "", "tensordot"], [1921, 0, 0, "-", "testing"], [1822, 5, 1, "", "tile"], [1823, 5, 1, "", "topk"], [1824, 5, 1, "", "trace"], [1825, 5, 1, "", "transpose"], [1826, 5, 1, "", "trapezoid"], [1827, 5, 1, "", "trapz"], [1828, 5, 1, "", "triangular_solve"], [1829, 5, 1, "", "tril"], [1830, 5, 1, "", "tril_indices"], [1831, 5, 1, "", "triu"], [1832, 5, 1, "", "triu_indices"], [1833, 5, 1, "", "true_divide"], [1834, 5, 1, "", "trunc"], [1835, 5, 1, "", "unbind"], [1836, 5, 1, "", "unflatten"], [1837, 5, 1, "", "unique"], [1838, 5, 1, "", "unique_consecutive"], [1839, 5, 1, "", "unsqueeze"], [1840, 5, 1, "", "use_deterministic_algorithms"], [1922, 0, 0, "-", "utils"], [1841, 5, 1, "", "vander"], [1842, 5, 1, "", "var"], [1843, 5, 1, "", "var_mean"], [1844, 5, 1, "", "vdot"], [1845, 5, 1, "", "view_as_complex"], [1846, 5, 1, "", "view_as_real"], [1847, 5, 1, "", "vmap"], [1848, 5, 1, "", "vsplit"], [1849, 5, 1, "", "vstack"], [1850, 5, 1, "", "where"], [1851, 5, 1, "", "xlogy"], [1852, 5, 1, "", "zeros"], [1853, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1916, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1916, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1916, 2, 1, "", "dtype"]], "torch.CharStorage": [[1916, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1916, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1916, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1916, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1916, 2, 1, "", "dtype"]], "torch.Generator": [[86, 2, 1, "", "device"], [86, 3, 1, "", "get_state"], [86, 3, 1, "", "initial_seed"], [86, 3, 1, "", "manual_seed"], [86, 3, 1, "", "seed"], [86, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1916, 2, 1, "", "dtype"]], "torch.IntStorage": [[1916, 2, 1, "", "dtype"]], "torch.LongStorage": [[1916, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1916, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1916, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1916, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1916, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1916, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1916, 2, 1, "", "dtype"]], "torch.Tag": [[1922, 4, 1, "", "name"]], "torch.Tensor": [[1920, 2, 1, "", "H"], [1920, 2, 1, "", "T"], [87, 3, 1, "", "abs"], [88, 3, 1, "", "abs_"], [89, 3, 1, "", "absolute"], [90, 3, 1, "", "absolute_"], [91, 3, 1, "", "acos"], [92, 3, 1, "", "acos_"], [93, 3, 1, "", "acosh"], [94, 3, 1, "", "acosh_"], [95, 3, 1, "", "add"], [96, 3, 1, "", "add_"], [97, 3, 1, "", "addbmm"], [98, 3, 1, "", "addbmm_"], [99, 3, 1, "", "addcdiv"], [100, 3, 1, "", "addcdiv_"], [101, 3, 1, "", "addcmul"], [102, 3, 1, "", "addcmul_"], [103, 3, 1, "", "addmm"], [104, 3, 1, "", "addmm_"], [105, 3, 1, "", "addmv"], [106, 3, 1, "", "addmv_"], [107, 3, 1, "", "addr"], [108, 3, 1, "", "addr_"], [109, 3, 1, "", "adjoint"], [1874, 3, 1, "", "align_as"], [1874, 3, 1, "", "align_to"], [110, 3, 1, "", "all"], [111, 3, 1, "", "allclose"], [112, 3, 1, "", "amax"], [113, 3, 1, "", "amin"], [114, 3, 1, "", "aminmax"], [115, 3, 1, "", "angle"], [116, 3, 1, "", "any"], [117, 3, 1, "", "apply_"], [118, 3, 1, "", "arccos"], [119, 3, 1, "", "arccos_"], [120, 3, 1, "", "arccosh"], [121, 3, 1, "", "arccosh_"], [122, 3, 1, "", "arcsin"], [123, 3, 1, "", "arcsin_"], [124, 3, 1, "", "arcsinh"], [125, 3, 1, "", "arcsinh_"], [126, 3, 1, "", "arctan"], [127, 3, 1, "", "arctan2"], [128, 3, 1, "", "arctan2_"], [129, 3, 1, "", "arctan_"], [130, 3, 1, "", "arctanh"], [131, 3, 1, "", "arctanh_"], [132, 3, 1, "", "argmax"], [133, 3, 1, "", "argmin"], [134, 3, 1, "", "argsort"], [135, 3, 1, "", "argwhere"], [136, 3, 1, "", "as_strided"], [137, 3, 1, "", "as_subclass"], [138, 3, 1, "", "asin"], [139, 3, 1, "", "asin_"], [140, 3, 1, "", "asinh"], [141, 3, 1, "", "asinh_"], [142, 3, 1, "", "atan"], [143, 3, 1, "", "atan2"], [144, 3, 1, "", "atan2_"], [145, 3, 1, "", "atan_"], [146, 3, 1, "", "atanh"], [147, 3, 1, "", "atanh_"], [148, 3, 1, "", "backward"], [149, 3, 1, "", "baddbmm"], [150, 3, 1, "", "baddbmm_"], [151, 3, 1, "", "bernoulli"], [152, 3, 1, "", "bernoulli_"], [153, 3, 1, "", "bfloat16"], [154, 3, 1, "", "bincount"], [155, 3, 1, "", "bitwise_and"], [156, 3, 1, "", "bitwise_and_"], [157, 3, 1, "", "bitwise_left_shift"], [158, 3, 1, "", "bitwise_left_shift_"], [159, 3, 1, "", "bitwise_not"], [160, 3, 1, "", "bitwise_not_"], [161, 3, 1, "", "bitwise_or"], [162, 3, 1, "", "bitwise_or_"], [163, 3, 1, "", "bitwise_right_shift"], [164, 3, 1, "", "bitwise_right_shift_"], [165, 3, 1, "", "bitwise_xor"], [166, 3, 1, "", "bitwise_xor_"], [167, 3, 1, "", "bmm"], [168, 3, 1, "", "bool"], [169, 3, 1, "", "broadcast_to"], [170, 3, 1, "", "byte"], [171, 3, 1, "", "cauchy_"], [172, 3, 1, "", "ccol_indices"], [173, 3, 1, "", "cdouble"], [174, 3, 1, "", "ceil"], [175, 3, 1, "", "ceil_"], [176, 3, 1, "", "cfloat"], [177, 3, 1, "", "chalf"], [178, 3, 1, "", "char"], [179, 3, 1, "", "cholesky"], [180, 3, 1, "", "cholesky_inverse"], [181, 3, 1, "", "cholesky_solve"], [182, 3, 1, "", "chunk"], [183, 3, 1, "", "clamp"], [184, 3, 1, "", "clamp_"], [185, 3, 1, "", "clip"], [186, 3, 1, "", "clip_"], [187, 3, 1, "", "clone"], [188, 3, 1, "", "coalesce"], [189, 3, 1, "", "col_indices"], [190, 3, 1, "", "conj"], [191, 3, 1, "", "conj_physical"], [192, 3, 1, "", "conj_physical_"], [193, 3, 1, "", "contiguous"], [194, 3, 1, "", "copy_"], [195, 3, 1, "", "copysign"], [196, 3, 1, "", "copysign_"], [197, 3, 1, "", "corrcoef"], [198, 3, 1, "", "cos"], [199, 3, 1, "", "cos_"], [200, 3, 1, "", "cosh"], [201, 3, 1, "", "cosh_"], [202, 3, 1, "", "count_nonzero"], [203, 3, 1, "", "cov"], [204, 3, 1, "", "cpu"], [205, 3, 1, "", "cross"], [206, 3, 1, "", "crow_indices"], [207, 3, 1, "", "cuda"], [208, 3, 1, "", "cummax"], [209, 3, 1, "", "cummin"], [210, 3, 1, "", "cumprod"], [211, 3, 1, "", "cumprod_"], [212, 3, 1, "", "cumsum"], [213, 3, 1, "", "cumsum_"], [214, 3, 1, "", "data_ptr"], [215, 3, 1, "", "deg2rad"], [216, 3, 1, "", "dense_dim"], [217, 3, 1, "", "dequantize"], [218, 3, 1, "", "det"], [219, 3, 1, "", "detach"], [220, 3, 1, "", "detach_"], [221, 2, 1, "", "device"], [222, 3, 1, "", "diag"], [223, 3, 1, "", "diag_embed"], [224, 3, 1, "", "diagflat"], [225, 3, 1, "", "diagonal"], [226, 3, 1, "", "diagonal_scatter"], [227, 3, 1, "", "diff"], [228, 3, 1, "", "digamma"], [229, 3, 1, "", "digamma_"], [230, 3, 1, "", "dim"], [231, 3, 1, "", "dist"], [232, 3, 1, "", "div"], [233, 3, 1, "", "div_"], [234, 3, 1, "", "divide"], [235, 3, 1, "", "divide_"], [236, 3, 1, "", "dot"], [237, 3, 1, "", "double"], [238, 3, 1, "", "dsplit"], [239, 3, 1, "", "element_size"], [240, 3, 1, "", "eq"], [241, 3, 1, "", "eq_"], [242, 3, 1, "", "equal"], [243, 3, 1, "", "erf"], [244, 3, 1, "", "erf_"], [245, 3, 1, "", "erfc"], [246, 3, 1, "", "erfc_"], [247, 3, 1, "", "erfinv"], [248, 3, 1, "", "erfinv_"], [249, 3, 1, "", "exp"], [250, 3, 1, "", "exp_"], [251, 3, 1, "", "expand"], [252, 3, 1, "", "expand_as"], [253, 3, 1, "", "expm1"], [254, 3, 1, "", "expm1_"], [255, 3, 1, "", "exponential_"], [256, 3, 1, "", "fill_"], [257, 3, 1, "", "fill_diagonal_"], [258, 3, 1, "", "fix"], [259, 3, 1, "", "fix_"], [260, 3, 1, "", "flatten"], [261, 3, 1, "", "flip"], [262, 3, 1, "", "fliplr"], [263, 3, 1, "", "flipud"], [264, 3, 1, "", "float"], [265, 3, 1, "", "float_power"], [266, 3, 1, "", "float_power_"], [267, 3, 1, "", "floor"], [268, 3, 1, "", "floor_"], [269, 3, 1, "", "floor_divide"], [270, 3, 1, "", "floor_divide_"], [271, 3, 1, "", "fmax"], [272, 3, 1, "", "fmin"], [273, 3, 1, "", "fmod"], [274, 3, 1, "", "fmod_"], [275, 3, 1, "", "frac"], [276, 3, 1, "", "frac_"], [277, 3, 1, "", "frexp"], [278, 3, 1, "", "gather"], [279, 3, 1, "", "gcd"], [280, 3, 1, "", "gcd_"], [281, 3, 1, "", "ge"], [282, 3, 1, "", "ge_"], [283, 3, 1, "", "geometric_"], [284, 3, 1, "", "geqrf"], [285, 3, 1, "", "ger"], [286, 3, 1, "", "get_device"], [287, 2, 1, "", "grad"], [288, 3, 1, "", "greater"], [289, 3, 1, "", "greater_"], [290, 3, 1, "", "greater_equal"], [291, 3, 1, "", "greater_equal_"], [292, 3, 1, "", "gt"], [293, 3, 1, "", "gt_"], [294, 3, 1, "", "half"], [295, 3, 1, "", "hardshrink"], [296, 3, 1, "", "heaviside"], [297, 3, 1, "", "histc"], [298, 3, 1, "", "histogram"], [299, 3, 1, "", "hsplit"], [300, 3, 1, "", "hypot"], [301, 3, 1, "", "hypot_"], [302, 3, 1, "", "i0"], [303, 3, 1, "", "i0_"], [304, 3, 1, "", "igamma"], [305, 3, 1, "", "igamma_"], [306, 3, 1, "", "igammac"], [307, 3, 1, "", "igammac_"], [308, 2, 1, "", "imag"], [309, 3, 1, "", "index_add"], [310, 3, 1, "", "index_add_"], [311, 3, 1, "", "index_copy"], [312, 3, 1, "", "index_copy_"], [313, 3, 1, "", "index_fill"], [314, 3, 1, "", "index_fill_"], [315, 3, 1, "", "index_put"], [316, 3, 1, "", "index_put_"], [317, 3, 1, "", "index_reduce"], [318, 3, 1, "", "index_reduce_"], [319, 3, 1, "", "index_select"], [320, 3, 1, "", "indices"], [321, 3, 1, "", "inner"], [322, 3, 1, "", "int"], [323, 3, 1, "", "int_repr"], [324, 3, 1, "", "inverse"], [325, 3, 1, "", "is_coalesced"], [326, 3, 1, "", "is_complex"], [327, 3, 1, "", "is_conj"], [328, 3, 1, "", "is_contiguous"], [329, 2, 1, "", "is_cuda"], [330, 3, 1, "", "is_floating_point"], [331, 3, 1, "", "is_inference"], [332, 2, 1, "", "is_leaf"], [333, 2, 1, "", "is_meta"], [334, 3, 1, "", "is_pinned"], [335, 2, 1, "", "is_quantized"], [336, 3, 1, "", "is_set_to"], [337, 3, 1, "", "is_shared"], [338, 3, 1, "", "is_signed"], [339, 2, 1, "", "is_sparse"], [340, 2, 1, "", "is_sparse_csr"], [341, 3, 1, "", "isclose"], [342, 3, 1, "", "isfinite"], [343, 3, 1, "", "isinf"], [344, 3, 1, "", "isnan"], [345, 3, 1, "", "isneginf"], [346, 3, 1, "", "isposinf"], [347, 3, 1, "", "isreal"], [348, 3, 1, "", "istft"], [349, 3, 1, "", "item"], [350, 2, 1, "", "itemsize"], [351, 3, 1, "", "kthvalue"], [352, 3, 1, "", "lcm"], [353, 3, 1, "", "lcm_"], [354, 3, 1, "", "ldexp"], [355, 3, 1, "", "ldexp_"], [356, 3, 1, "", "le"], [357, 3, 1, "", "le_"], [358, 3, 1, "", "lerp"], [359, 3, 1, "", "lerp_"], [360, 3, 1, "", "less"], [361, 3, 1, "", "less_"], [362, 3, 1, "", "less_equal"], [363, 3, 1, "", "less_equal_"], [364, 3, 1, "", "lgamma"], [365, 3, 1, "", "lgamma_"], [366, 3, 1, "", "log"], [367, 3, 1, "", "log10"], [368, 3, 1, "", "log10_"], [369, 3, 1, "", "log1p"], [370, 3, 1, "", "log1p_"], [371, 3, 1, "", "log2"], [372, 3, 1, "", "log2_"], [373, 3, 1, "", "log_"], [374, 3, 1, "", "log_normal_"], [375, 3, 1, "", "logaddexp"], [376, 3, 1, "", "logaddexp2"], [377, 3, 1, "", "logcumsumexp"], [378, 3, 1, "", "logdet"], [379, 3, 1, "", "logical_and"], [380, 3, 1, "", "logical_and_"], [381, 3, 1, "", "logical_not"], [382, 3, 1, "", "logical_not_"], [383, 3, 1, "", "logical_or"], [384, 3, 1, "", "logical_or_"], [385, 3, 1, "", "logical_xor"], [386, 3, 1, "", "logical_xor_"], [387, 3, 1, "", "logit"], [388, 3, 1, "", "logit_"], [389, 3, 1, "", "logsumexp"], [390, 3, 1, "", "long"], [391, 3, 1, "", "lt"], [392, 3, 1, "", "lt_"], [393, 3, 1, "", "lu"], [394, 3, 1, "", "lu_solve"], [1920, 2, 1, "", "mH"], [1920, 2, 1, "", "mT"], [395, 3, 1, "", "map_"], [396, 3, 1, "", "masked_fill"], [397, 3, 1, "", "masked_fill_"], [398, 3, 1, "", "masked_scatter"], [399, 3, 1, "", "masked_scatter_"], [400, 3, 1, "", "masked_select"], [401, 3, 1, "", "matmul"], [402, 3, 1, "", "matrix_exp"], [403, 3, 1, "", "matrix_power"], [404, 3, 1, "", "max"], [405, 3, 1, "", "maximum"], [406, 3, 1, "", "mean"], [407, 3, 1, "", "median"], [408, 3, 1, "", "min"], [409, 3, 1, "", "minimum"], [410, 3, 1, "", "mm"], [411, 3, 1, "", "mode"], [412, 3, 1, "", "moveaxis"], [413, 3, 1, "", "movedim"], [414, 3, 1, "", "msort"], [415, 3, 1, "", "mul"], [416, 3, 1, "", "mul_"], [417, 3, 1, "", "multinomial"], [418, 3, 1, "", "multiply"], [419, 3, 1, "", "multiply_"], [420, 3, 1, "", "mv"], [421, 3, 1, "", "mvlgamma"], [422, 3, 1, "", "mvlgamma_"], [1874, 2, 1, "", "names"], [423, 3, 1, "", "nan_to_num"], [424, 3, 1, "", "nan_to_num_"], [425, 3, 1, "", "nanmean"], [426, 3, 1, "", "nanmedian"], [427, 3, 1, "", "nanquantile"], [428, 3, 1, "", "nansum"], [429, 3, 1, "", "narrow"], [430, 3, 1, "", "narrow_copy"], [431, 2, 1, "", "nbytes"], [432, 2, 1, "", "ndim"], [433, 3, 1, "", "ndimension"], [434, 3, 1, "", "ne"], [435, 3, 1, "", "ne_"], [436, 3, 1, "", "neg"], [437, 3, 1, "", "neg_"], [438, 3, 1, "", "negative"], [439, 3, 1, "", "negative_"], [440, 3, 1, "", "nelement"], [441, 3, 1, "", "new_empty"], [442, 3, 1, "", "new_full"], [443, 3, 1, "", "new_ones"], [444, 3, 1, "", "new_tensor"], [445, 3, 1, "", "new_zeros"], [446, 3, 1, "", "nextafter"], [447, 3, 1, "", "nextafter_"], [448, 3, 1, "", "nonzero"], [449, 3, 1, "", "norm"], [450, 3, 1, "", "normal_"], [451, 3, 1, "", "not_equal"], [452, 3, 1, "", "not_equal_"], [453, 3, 1, "", "numel"], [454, 3, 1, "", "numpy"], [455, 3, 1, "", "orgqr"], [456, 3, 1, "", "ormqr"], [457, 3, 1, "", "outer"], [458, 3, 1, "", "permute"], [459, 3, 1, "", "pin_memory"], [460, 3, 1, "", "pinverse"], [461, 3, 1, "", "polygamma"], [462, 3, 1, "", "polygamma_"], [463, 3, 1, "", "positive"], [464, 3, 1, "", "pow"], [465, 3, 1, "", "pow_"], [466, 3, 1, "", "prod"], [467, 3, 1, "", "put_"], [468, 3, 1, "", "q_per_channel_axis"], [469, 3, 1, "", "q_per_channel_scales"], [470, 3, 1, "", "q_per_channel_zero_points"], [471, 3, 1, "", "q_scale"], [472, 3, 1, "", "q_zero_point"], [473, 3, 1, "", "qr"], [474, 3, 1, "", "qscheme"], [475, 3, 1, "", "quantile"], [476, 3, 1, "", "rad2deg"], [477, 3, 1, "", "random_"], [478, 3, 1, "", "ravel"], [479, 2, 1, "", "real"], [480, 3, 1, "", "reciprocal"], [481, 3, 1, "", "reciprocal_"], [482, 3, 1, "", "record_stream"], [1874, 3, 1, "", "refine_names"], [483, 3, 1, "", "register_hook"], [484, 3, 1, "", "remainder"], [485, 3, 1, "", "remainder_"], [1874, 3, 1, "", "rename"], [1874, 3, 1, "", "rename_"], [486, 3, 1, "", "renorm"], [487, 3, 1, "", "renorm_"], [488, 3, 1, "", "repeat"], [489, 3, 1, "", "repeat_interleave"], [490, 2, 1, "", "requires_grad"], [491, 3, 1, "", "requires_grad_"], [492, 3, 1, "", "reshape"], [493, 3, 1, "", "reshape_as"], [494, 3, 1, "", "resize_"], [495, 3, 1, "", "resize_as_"], [496, 3, 1, "", "resolve_conj"], [497, 3, 1, "", "resolve_neg"], [498, 3, 1, "", "retain_grad"], [499, 2, 1, "", "retains_grad"], [500, 3, 1, "", "roll"], [501, 3, 1, "", "rot90"], [502, 3, 1, "", "round"], [503, 3, 1, "", "round_"], [504, 3, 1, "", "row_indices"], [505, 3, 1, "", "rsqrt"], [506, 3, 1, "", "rsqrt_"], [507, 3, 1, "", "scatter"], [508, 3, 1, "", "scatter_"], [509, 3, 1, "", "scatter_add"], [510, 3, 1, "", "scatter_add_"], [511, 3, 1, "", "scatter_reduce"], [512, 3, 1, "", "scatter_reduce_"], [513, 3, 1, "", "select"], [514, 3, 1, "", "select_scatter"], [515, 3, 1, "", "set_"], [516, 3, 1, "", "sgn"], [517, 3, 1, "", "sgn_"], [518, 3, 1, "", "share_memory_"], [519, 3, 1, "", "short"], [520, 3, 1, "", "sigmoid"], [521, 3, 1, "", "sigmoid_"], [522, 3, 1, "", "sign"], [523, 3, 1, "", "sign_"], [524, 3, 1, "", "signbit"], [525, 3, 1, "", "sin"], [526, 3, 1, "", "sin_"], [527, 3, 1, "", "sinc"], [528, 3, 1, "", "sinc_"], [529, 3, 1, "", "sinh"], [530, 3, 1, "", "sinh_"], [531, 3, 1, "", "size"], [532, 3, 1, "", "slice_scatter"], [533, 3, 1, "", "slogdet"], [534, 3, 1, "", "smm"], [535, 3, 1, "", "softmax"], [536, 3, 1, "", "sort"], [537, 3, 1, "", "sparse_dim"], [538, 3, 1, "", "sparse_mask"], [539, 3, 1, "", "sparse_resize_"], [540, 3, 1, "", "sparse_resize_and_clear_"], [541, 3, 1, "", "split"], [542, 3, 1, "", "sqrt"], [543, 3, 1, "", "sqrt_"], [544, 3, 1, "", "square"], [545, 3, 1, "", "square_"], [546, 3, 1, "", "squeeze"], [547, 3, 1, "", "squeeze_"], [548, 3, 1, "", "sspaddmm"], [549, 3, 1, "", "std"], [550, 3, 1, "", "stft"], [551, 3, 1, "", "storage"], [552, 3, 1, "", "storage_offset"], [553, 3, 1, "", "storage_type"], [554, 3, 1, "", "stride"], [555, 3, 1, "", "sub"], [556, 3, 1, "", "sub_"], [557, 3, 1, "", "subtract"], [558, 3, 1, "", "subtract_"], [559, 3, 1, "", "sum"], [560, 3, 1, "", "sum_to_size"], [561, 3, 1, "", "svd"], [562, 3, 1, "", "swapaxes"], [563, 3, 1, "", "swapdims"], [564, 3, 1, "", "t"], [565, 3, 1, "", "t_"], [566, 3, 1, "", "take"], [567, 3, 1, "", "take_along_dim"], [568, 3, 1, "", "tan"], [569, 3, 1, "", "tan_"], [570, 3, 1, "", "tanh"], [571, 3, 1, "", "tanh_"], [572, 3, 1, "", "tensor_split"], [573, 3, 1, "", "tile"], [574, 3, 1, "", "to"], [575, 3, 1, "", "to_dense"], [576, 3, 1, "", "to_mkldnn"], [577, 3, 1, "", "to_sparse"], [578, 3, 1, "", "to_sparse_bsc"], [579, 3, 1, "", "to_sparse_bsr"], [580, 3, 1, "", "to_sparse_coo"], [581, 3, 1, "", "to_sparse_csc"], [582, 3, 1, "", "to_sparse_csr"], [583, 3, 1, "", "tolist"], [584, 3, 1, "", "topk"], [585, 3, 1, "", "trace"], [586, 3, 1, "", "transpose"], [587, 3, 1, "", "transpose_"], [588, 3, 1, "", "triangular_solve"], [589, 3, 1, "", "tril"], [590, 3, 1, "", "tril_"], [591, 3, 1, "", "triu"], [592, 3, 1, "", "triu_"], [593, 3, 1, "", "true_divide"], [594, 3, 1, "", "true_divide_"], [595, 3, 1, "", "trunc"], [596, 3, 1, "", "trunc_"], [597, 3, 1, "", "type"], [598, 3, 1, "", "type_as"], [599, 3, 1, "", "unbind"], [600, 3, 1, "", "unflatten"], [601, 3, 1, "", "unfold"], [602, 3, 1, "", "uniform_"], [603, 3, 1, "", "unique"], [604, 3, 1, "", "unique_consecutive"], [605, 3, 1, "", "unsqueeze"], [606, 3, 1, "", "unsqueeze_"], [607, 3, 1, "", "untyped_storage"], [608, 3, 1, "", "values"], [609, 3, 1, "", "var"], [610, 3, 1, "", "vdot"], [611, 3, 1, "", "view"], [612, 3, 1, "", "view_as"], [613, 3, 1, "", "vsplit"], [614, 3, 1, "", "where"], [615, 3, 1, "", "xlogy"], [616, 3, 1, "", "xlogy_"], [617, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1916, 3, 1, "", "bfloat16"], [1916, 3, 1, "", "bool"], [1916, 3, 1, "", "byte"], [1916, 3, 1, "", "char"], [1916, 3, 1, "", "clone"], [1916, 3, 1, "", "complex_double"], [1916, 3, 1, "", "complex_float"], [1916, 3, 1, "", "copy_"], [1916, 3, 1, "", "cpu"], [1916, 3, 1, "", "cuda"], [1916, 3, 1, "", "data_ptr"], [1916, 4, 1, "", "device"], [1916, 3, 1, "", "double"], [1916, 2, 1, "", "dtype"], [1916, 3, 1, "", "element_size"], [1916, 3, 1, "", "fill_"], [1916, 3, 1, "", "float"], [1916, 3, 1, "", "from_buffer"], [1916, 3, 1, "", "from_file"], [1916, 3, 1, "", "get_device"], [1916, 3, 1, "", "half"], [1916, 3, 1, "", "int"], [1916, 4, 1, "", "is_cuda"], [1916, 3, 1, "", "is_pinned"], [1916, 3, 1, "", "is_shared"], [1916, 2, 1, "", "is_sparse"], [1916, 3, 1, "", "long"], [1916, 3, 1, "", "nbytes"], [1916, 3, 1, "", "pickle_storage_type"], [1916, 3, 1, "", "pin_memory"], [1916, 3, 1, "", "resize_"], [1916, 3, 1, "", "share_memory_"], [1916, 3, 1, "", "short"], [1916, 3, 1, "", "size"], [1916, 3, 1, "", "tolist"], [1916, 3, 1, "", "type"], [1916, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1916, 3, 1, "", "bfloat16"], [1916, 3, 1, "", "bool"], [1916, 3, 1, "", "byte"], [1916, 3, 1, "", "byteswap"], [1916, 3, 1, "", "char"], [1916, 3, 1, "", "clone"], [1916, 3, 1, "", "complex_double"], [1916, 3, 1, "", "complex_float"], [1916, 3, 1, "", "copy_"], [1916, 3, 1, "", "cpu"], [1916, 3, 1, "", "cuda"], [1916, 3, 1, "", "data_ptr"], [1916, 2, 1, "", "device"], [1916, 3, 1, "", "double"], [1916, 3, 1, "", "element_size"], [1916, 3, 1, "", "fill_"], [1916, 3, 1, "", "float"], [1916, 3, 1, "", "from_buffer"], [1916, 3, 1, "", "from_file"], [1916, 3, 1, "", "get_device"], [1916, 3, 1, "", "half"], [1916, 3, 1, "", "int"], [1916, 4, 1, "", "is_cuda"], [1916, 3, 1, "", "is_pinned"], [1916, 3, 1, "", "is_shared"], [1916, 2, 1, "", "is_sparse"], [1916, 2, 1, "", "is_sparse_csr"], [1916, 3, 1, "", "long"], [1916, 3, 1, "", "mps"], [1916, 3, 1, "", "nbytes"], [1916, 3, 1, "", "new"], [1916, 3, 1, "", "pin_memory"], [1916, 3, 1, "", "resize_"], [1916, 3, 1, "", "share_memory_"], [1916, 3, 1, "", "short"], [1916, 3, 1, "", "size"], [1916, 3, 1, "", "tolist"], [1916, 3, 1, "", "type"], [1916, 3, 1, "", "untyped"]], "torch.__config__": [[28, 5, 1, "", "parallel_info"], [28, 5, 1, "", "show"]], "torch._dynamo": [[0, 1, 1, "", "OptimizedModule"], [0, 5, 1, "", "allow_in_graph"], [0, 5, 1, "", "disable"], [0, 5, 1, "", "disallow_in_graph"], [0, 5, 1, "", "export"], [0, 5, 1, "", "forbid_in_graph"], [0, 5, 1, "", "graph_break"], [0, 5, 1, "", "list_backends"], [0, 5, 1, "", "mark_dynamic"], [0, 5, 1, "", "mark_static"], [0, 5, 1, "", "optimize"], [0, 5, 1, "", "optimize_assert"], [0, 5, 1, "", "register_backend"], [0, 5, 1, "", "reset"], [0, 5, 1, "", "run"]], "torch._logging": [[674, 5, 1, "", "set_logs"]], "torch.ao": [[1905, 0, 0, "-", "nn"], [1905, 0, 0, "-", "ns"], [1905, 0, 0, "-", "pruning"], [1905, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1908, 0, 0, "-", "intrinsic"], [1908, 0, 0, "-", "qat"], [1905, 0, 0, "-", "quantizable"], [1905, 0, 0, "-", "quantized"], [1905, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[694, 1, 1, "", "BNReLU2d"], [695, 1, 1, "", "BNReLU3d"], [696, 1, 1, "", "ConvBn1d"], [697, 1, 1, "", "ConvBn2d"], [698, 1, 1, "", "ConvBn3d"], [699, 1, 1, "", "ConvBnReLU1d"], [700, 1, 1, "", "ConvBnReLU2d"], [701, 1, 1, "", "ConvBnReLU3d"], [702, 1, 1, "", "ConvReLU1d"], [703, 1, 1, "", "ConvReLU2d"], [704, 1, 1, "", "ConvReLU3d"], [705, 1, 1, "", "LinearReLU"], [1908, 0, 0, "-", "modules"], [1908, 0, 0, "-", "qat"], [1908, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[706, 1, 1, "", "ConvBn1d"], [707, 1, 1, "", "ConvBn2d"], [708, 1, 1, "", "ConvBn3d"], [709, 1, 1, "", "ConvBnReLU1d"], [710, 1, 1, "", "ConvBnReLU2d"], [711, 1, 1, "", "ConvBnReLU3d"], [712, 1, 1, "", "ConvReLU2d"], [713, 1, 1, "", "ConvReLU3d"], [714, 1, 1, "", "LinearReLU"], [715, 1, 1, "", "freeze_bn_stats"], [1908, 0, 0, "-", "modules"], [716, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[717, 1, 1, "", "BNReLU2d"], [718, 1, 1, "", "BNReLU3d"], [719, 1, 1, "", "ConvReLU1d"], [720, 1, 1, "", "ConvReLU2d"], [721, 1, 1, "", "ConvReLU3d"], [722, 1, 1, "", "LinearReLU"], [1908, 0, 0, "-", "dynamic"], [1908, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[723, 1, 1, "", "LinearReLU"], [1908, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[724, 1, 1, "", "Conv2d"], [725, 1, 1, "", "Conv3d"], [726, 1, 1, "", "Linear"], [1908, 0, 0, "-", "dynamic"], [1908, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[726, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[727, 1, 1, "", "Linear"], [1908, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[728, 1, 1, "", "LSTM"], [729, 1, 1, "", "MultiheadAttention"], [1905, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[729, 3, 1, "", "dequantize"], [729, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[730, 1, 1, "", "BatchNorm2d"], [731, 1, 1, "", "BatchNorm3d"], [732, 1, 1, "", "Conv1d"], [733, 1, 1, "", "Conv2d"], [734, 1, 1, "", "Conv3d"], [735, 1, 1, "", "ConvTranspose1d"], [736, 1, 1, "", "ConvTranspose2d"], [737, 1, 1, "", "ConvTranspose3d"], [738, 1, 1, "", "ELU"], [739, 1, 1, "", "Embedding"], [740, 1, 1, "", "EmbeddingBag"], [741, 1, 1, "", "FXFloatFunctional"], [742, 1, 1, "", "FloatFunctional"], [743, 1, 1, "", "GroupNorm"], [744, 1, 1, "", "Hardswish"], [745, 1, 1, "", "InstanceNorm1d"], [746, 1, 1, "", "InstanceNorm2d"], [747, 1, 1, "", "InstanceNorm3d"], [748, 1, 1, "", "LayerNorm"], [749, 1, 1, "", "LeakyReLU"], [750, 1, 1, "", "Linear"], [751, 1, 1, "", "QFunctional"], [752, 1, 1, "", "ReLU6"], [753, 1, 1, "", "Sigmoid"], [1908, 0, 0, "-", "dynamic"], [1908, 0, 0, "-", "functional"], [1908, 0, 0, "-", "modules"], [1905, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[732, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[733, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[734, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[739, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[740, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[750, 3, 1, "", "from_float"], [750, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[754, 1, 1, "", "GRU"], [755, 1, 1, "", "GRUCell"], [756, 1, 1, "", "LSTM"], [757, 1, 1, "", "LSTMCell"], [758, 1, 1, "", "Linear"], [759, 1, 1, "", "RNNCell"], [1908, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[758, 3, 1, "", "from_float"], [758, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[760, 1, 1, "", "adaptive_avg_pool2d"], [761, 1, 1, "", "adaptive_avg_pool3d"], [762, 1, 1, "", "avg_pool2d"], [763, 1, 1, "", "avg_pool3d"], [764, 1, 1, "", "celu"], [765, 1, 1, "", "clamp"], [766, 1, 1, "", "conv1d"], [767, 1, 1, "", "conv2d"], [768, 1, 1, "", "conv3d"], [769, 1, 1, "", "elu"], [770, 1, 1, "", "hardsigmoid"], [771, 1, 1, "", "hardswish"], [772, 1, 1, "", "hardtanh"], [773, 1, 1, "", "interpolate"], [774, 1, 1, "", "leaky_relu"], [775, 1, 1, "", "linear"], [776, 1, 1, "", "max_pool1d"], [777, 1, 1, "", "max_pool2d"], [778, 1, 1, "", "threshold"], [779, 1, 1, "", "upsample"], [780, 1, 1, "", "upsample_bilinear"], [781, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1905, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1905, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1905, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1923, 0, 0, "-", "_numeric_suite"], [1924, 0, 0, "-", "_numeric_suite_fx"], [1905, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1923, 1, 1, "", "Logger"], [1923, 1, 1, "", "OutputLogger"], [1923, 1, 1, "", "Shadow"], [1923, 1, 1, "", "ShadowLogger"], [1923, 5, 1, "", "compare_model_outputs"], [1923, 5, 1, "", "compare_model_stub"], [1923, 5, 1, "", "compare_weights"], [1923, 5, 1, "", "get_logger_dict"], [1923, 5, 1, "", "get_matching_activations"], [1923, 5, 1, "", "prepare_model_outputs"], [1923, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1923, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1923, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1923, 3, 1, "", "add"], [1923, 3, 1, "", "add_relu"], [1923, 3, 1, "", "add_scalar"], [1923, 3, 1, "", "cat"], [1923, 3, 1, "", "forward"], [1923, 3, 1, "", "mul"], [1923, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1923, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1924, 1, 1, "", "NSTracer"], [1924, 1, 1, "", "OutputComparisonLogger"], [1924, 1, 1, "", "OutputLogger"], [1924, 5, 1, "", "add_loggers"], [1924, 5, 1, "", "add_shadow_loggers"], [1924, 5, 1, "", "convert_n_shadows_model"], [1924, 5, 1, "", "extend_logger_results_with_comparison"], [1924, 5, 1, "", "extract_logger_info"], [1924, 5, 1, "", "extract_results_n_shadows_model"], [1924, 5, 1, "", "extract_shadow_logger_info"], [1924, 5, 1, "", "extract_weights"], [1924, 5, 1, "", "loggers_set_enabled"], [1924, 5, 1, "", "loggers_set_save_activations"], [1924, 5, 1, "", "prepare_n_shadows_model"], [1924, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1924, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1924, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1924, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1924, 5, 1, "", "compute_cosine_similarity"], [1924, 5, 1, "", "compute_normalized_l2_error"], [1924, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1905, 0, 0, "-", "scheduler"], [1905, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[782, 1, 1, "", "DeQuantStub"], [783, 1, 1, "", "QuantStub"], [784, 1, 1, "", "QuantWrapper"], [785, 1, 1, "", "add_quant_dequant"], [1905, 0, 0, "-", "backend_config"], [791, 1, 1, "", "convert"], [792, 1, 1, "", "default_eval_fn"], [808, 1, 1, "", "fuse_modules"], [1905, 0, 0, "-", "fx"], [832, 1, 1, "", "prepare"], [833, 1, 1, "", "prepare_qat"], [834, 1, 1, "", "propagate_qconfig_"], [851, 1, 1, "", "quantize"], [852, 1, 1, "", "quantize_dynamic"], [857, 1, 1, "", "quantize_qat"], [858, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[786, 1, 1, "", "BackendConfig"], [787, 1, 1, "", "BackendPatternConfig"], [788, 1, 1, "", "DTypeConfig"], [789, 1, 1, "", "DTypeWithConstraints"], [790, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[786, 4, 1, "", "configs"], [786, 3, 1, "", "from_dict"], [786, 3, 1, "", "set_backend_pattern_config"], [786, 3, 1, "", "set_backend_pattern_configs"], [786, 3, 1, "", "set_name"], [786, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[787, 3, 1, "", "add_dtype_config"], [787, 3, 1, "", "from_dict"], [787, 3, 1, "", "set_dtype_configs"], [787, 3, 1, "", "set_fused_module"], [787, 3, 1, "", "set_fuser_method"], [787, 3, 1, "", "set_observation_type"], [787, 3, 1, "", "set_pattern"], [787, 3, 1, "", "set_qat_module"], [787, 3, 1, "", "set_reference_quantized_module"], [787, 3, 1, "", "set_root_module"], [787, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[788, 3, 1, "", "from_dict"], [788, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[790, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [790, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [790, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[793, 1, 1, "", "FakeQuantize"], [794, 1, 1, "", "FakeQuantizeBase"], [795, 1, 1, "", "FixedQParamsFakeQuantize"], [796, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [797, 2, 1, "", "default_fake_quant"], [798, 2, 1, "", "default_fused_act_fake_quant"], [799, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [800, 2, 1, "", "default_fused_wt_fake_quant"], [801, 2, 1, "", "default_histogram_fake_quant"], [802, 2, 1, "", "default_per_channel_weight_fake_quant"], [803, 2, 1, "", "default_weight_fake_quant"], [804, 1, 1, "", "disable_fake_quant"], [805, 1, 1, "", "disable_observer"], [806, 1, 1, "", "enable_fake_quant"], [807, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[809, 1, 1, "", "ConvertCustomConfig"], [810, 1, 1, "", "FuseCustomConfig"], [811, 1, 1, "", "PrepareCustomConfig"], [812, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[809, 3, 1, "", "from_dict"], [809, 3, 1, "", "set_observed_to_quantized_mapping"], [809, 3, 1, "", "set_preserved_attributes"], [809, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[810, 3, 1, "", "from_dict"], [810, 3, 1, "", "set_preserved_attributes"], [810, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[811, 3, 1, "", "from_dict"], [811, 3, 1, "", "set_float_to_observed_mapping"], [811, 3, 1, "", "set_input_quantized_indexes"], [811, 3, 1, "", "set_non_traceable_module_classes"], [811, 3, 1, "", "set_non_traceable_module_names"], [811, 3, 1, "", "set_output_quantized_indexes"], [811, 3, 1, "", "set_preserved_attributes"], [811, 3, 1, "", "set_standalone_module_class"], [811, 3, 1, "", "set_standalone_module_name"], [811, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[813, 1, 1, "", "HistogramObserver"], [814, 1, 1, "", "MinMaxObserver"], [815, 1, 1, "", "MovingAverageMinMaxObserver"], [816, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [817, 1, 1, "", "NoopObserver"], [818, 1, 1, "", "ObserverBase"], [819, 1, 1, "", "PerChannelMinMaxObserver"], [820, 1, 1, "", "PlaceholderObserver"], [821, 1, 1, "", "RecordingObserver"], [822, 2, 1, "", "default_debug_observer"], [823, 2, 1, "", "default_dynamic_quant_observer"], [824, 2, 1, "", "default_float_qparams_observer"], [825, 2, 1, "", "default_histogram_observer"], [826, 2, 1, "", "default_observer"], [827, 2, 1, "", "default_per_channel_weight_observer"], [828, 2, 1, "", "default_placeholder_observer"], [829, 2, 1, "", "default_weight_observer"], [830, 1, 1, "", "get_observer_state_dict"], [831, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[814, 3, 1, "", "calculate_qparams"], [814, 3, 1, "", "forward"], [814, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[818, 3, 1, "", "with_args"], [818, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[819, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.qconfig": [[835, 1, 1, "", "QConfig"], [836, 2, 1, "", "default_activation_only_qconfig"], [837, 2, 1, "", "default_debug_qconfig"], [838, 2, 1, "", "default_dynamic_qconfig"], [839, 2, 1, "", "default_per_channel_qconfig"], [840, 2, 1, "", "default_qat_qconfig"], [841, 2, 1, "", "default_qat_qconfig_v2"], [842, 2, 1, "", "default_qconfig"], [843, 2, 1, "", "default_weight_only_qconfig"], [844, 2, 1, "", "float16_dynamic_qconfig"], [845, 2, 1, "", "float16_static_qconfig"], [846, 2, 1, "", "float_qparams_weight_only_qconfig"], [847, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[848, 1, 1, "", "QConfigMapping"], [849, 1, 1, "", "get_default_qat_qconfig_mapping"], [850, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[848, 3, 1, "", "from_dict"], [848, 3, 1, "", "set_global"], [848, 3, 1, "", "set_module_name"], [848, 3, 1, "", "set_module_name_object_type_order"], [848, 3, 1, "", "set_module_name_regex"], [848, 3, 1, "", "set_object_type"], [848, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[853, 1, 1, "", "convert_fx"], [854, 1, 1, "", "fuse_fx"], [855, 1, 1, "", "prepare_fx"], [856, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[2, 1, 1, "", "Function"], [887, 5, 1, "", "backward"], [2, 1, 1, "", "detect_anomaly"], [901, 5, 1, "", "grad"], [902, 5, 1, "", "gradcheck"], [903, 5, 1, "", "gradgradcheck"], [2, 1, 1, "", "set_detect_anomaly"], [914, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.Function": [[883, 3, 1, "", "backward"], [884, 3, 1, "", "forward"], [885, 3, 1, "", "jvp"], [886, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[888, 1, 1, "", "dual_level"], [889, 5, 1, "", "make_dual"], [890, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[891, 3, 1, "", "mark_dirty"], [892, 3, 1, "", "mark_non_differentiable"], [893, 3, 1, "", "save_for_backward"], [894, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[895, 5, 1, "", "hessian"], [896, 5, 1, "", "hvp"], [897, 5, 1, "", "jacobian"], [898, 5, 1, "", "jvp"], [899, 5, 1, "", "vhp"], [900, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[904, 3, 1, "", "metadata"], [905, 3, 1, "", "name"], [906, 4, 1, "", "next_functions"], [907, 3, 1, "", "register_hook"], [908, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[2, 1, 1, "", "allow_mutation_on_saved_tensors"], [2, 1, 1, "", "disable_saved_tensors_hooks"], [2, 1, 1, "", "register_multi_grad_hook"], [2, 1, 1, "", "save_on_cpu"], [2, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[2, 1, 1, "", "emit_itt"], [2, 1, 1, "", "emit_nvtx"], [909, 5, 1, "", "load_nvprof"], [2, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[910, 3, 1, "", "export_chrome_trace"], [911, 3, 1, "", "key_averages"], [912, 4, 1, "", "self_cpu_time_total"], [913, 3, 1, "", "total_average"]], "torch.backends": [[3, 0, 0, "-", "cpu"], [3, 0, 0, "-", "cuda"], [3, 0, 0, "-", "cudnn"], [3, 0, 0, "-", "mkl"], [3, 0, 0, "-", "mkldnn"], [3, 0, 0, "-", "mps"], [3, 0, 0, "-", "openmp"], [3, 0, 0, "-", "opt_einsum"], [3, 0, 0, "-", "quantized"], [3, 0, 0, "-", "xeon"], [3, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[3, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[3, 1, 1, "", "SDPBackend"], [3, 3, 1, "", "clear"], [3, 5, 1, "", "enable_flash_sdp"], [3, 5, 1, "", "enable_math_sdp"], [3, 5, 1, "", "enable_mem_efficient_sdp"], [3, 5, 1, "", "flash_sdp_enabled"], [3, 5, 1, "", "is_built"], [3, 5, 1, "", "math_sdp_enabled"], [3, 2, 1, "", "max_size"], [3, 5, 1, "", "mem_efficient_sdp_enabled"], [3, 5, 1, "", "preferred_linalg_library"], [3, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.torch.backends.cuda": [[3, 2, 1, "", "cufft_plan_cache"], [3, 2, 1, "", "size"]], "torch.backends.cuda.torch.backends.cuda.matmul": [[3, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [3, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [3, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[3, 5, 1, "", "is_available"], [3, 5, 1, "", "version"]], "torch.backends.cudnn.torch.backends.cudnn": [[3, 2, 1, "", "allow_tf32"], [3, 2, 1, "", "benchmark"], [3, 2, 1, "", "benchmark_limit"], [3, 2, 1, "", "deterministic"], [3, 2, 1, "", "enabled"]], "torch.backends.mkl": [[3, 5, 1, "", "is_available"], [3, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[3, 5, 1, "", "is_available"], [3, 1, 1, "", "verbose"]], "torch.backends.mps": [[3, 5, 1, "", "is_available"], [3, 5, 1, "", "is_built"]], "torch.backends.openmp": [[3, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[3, 5, 1, "", "get_opt_einsum"], [3, 5, 1, "", "is_available"]], "torch.backends.opt_einsum.torch.backends.opt_einsum": [[3, 2, 1, "", "enabled"], [3, 2, 1, "", "strategy"]], "torch.cpu": [[1, 0, 0, "-", "amp"]], "torch.cpu.amp": [[1, 1, 1, "", "autocast"]], "torch.cuda": [[961, 1, 1, "", "CUDAGraph"], [962, 1, 1, "", "CUDAPluggableAllocator"], [963, 1, 1, "", "Event"], [964, 1, 1, "", "ExternalStream"], [965, 6, 1, "", "OutOfMemoryError"], [966, 1, 1, "", "Stream"], [967, 1, 1, "", "StreamContext"], [32, 0, 0, "-", "_sanitizer"], [1, 0, 0, "-", "amp"], [968, 5, 1, "", "caching_allocator_alloc"], [969, 5, 1, "", "caching_allocator_delete"], [970, 5, 1, "", "can_device_access_peer"], [971, 5, 1, "", "change_current_allocator"], [972, 5, 1, "", "clock_rate"], [978, 5, 1, "", "current_blas_handle"], [979, 5, 1, "", "current_device"], [980, 5, 1, "", "current_stream"], [981, 5, 1, "", "default_stream"], [982, 1, 1, "", "device"], [983, 5, 1, "", "device_count"], [984, 1, 1, "", "device_of"], [985, 5, 1, "", "empty_cache"], [986, 5, 1, "", "get_allocator_backend"], [987, 5, 1, "", "get_arch_list"], [988, 5, 1, "", "get_device_capability"], [989, 5, 1, "", "get_device_name"], [990, 5, 1, "", "get_device_properties"], [991, 5, 1, "", "get_gencode_flags"], [992, 5, 1, "", "get_rng_state"], [993, 5, 1, "", "get_rng_state_all"], [994, 5, 1, "", "get_sync_debug_mode"], [995, 1, 1, "", "graph"], [996, 5, 1, "", "graph_pool_handle"], [997, 5, 1, "", "init"], [998, 5, 1, "", "initial_seed"], [999, 5, 1, "", "ipc_collect"], [1000, 5, 1, "", "is_available"], [1001, 5, 1, "", "is_current_stream_capturing"], [1002, 5, 1, "", "is_initialized"], [1005, 5, 1, "", "list_gpu_processes"], [1006, 5, 1, "", "make_graphed_callables"], [1007, 5, 1, "", "manual_seed"], [1008, 5, 1, "", "manual_seed_all"], [1009, 5, 1, "", "max_memory_allocated"], [1010, 5, 1, "", "max_memory_cached"], [1011, 5, 1, "", "max_memory_reserved"], [1012, 5, 1, "", "mem_get_info"], [1013, 5, 1, "", "memory_allocated"], [1014, 5, 1, "", "memory_cached"], [1015, 5, 1, "", "memory_reserved"], [1016, 5, 1, "", "memory_snapshot"], [1017, 5, 1, "", "memory_stats"], [1018, 5, 1, "", "memory_summary"], [1019, 5, 1, "", "memory_usage"], [1023, 5, 1, "", "power_draw"], [1024, 5, 1, "", "reset_max_memory_allocated"], [1025, 5, 1, "", "reset_max_memory_cached"], [1026, 5, 1, "", "reset_peak_memory_stats"], [1027, 5, 1, "", "seed"], [1028, 5, 1, "", "seed_all"], [1029, 5, 1, "", "set_device"], [1030, 5, 1, "", "set_per_process_memory_fraction"], [1031, 5, 1, "", "set_rng_state"], [1032, 5, 1, "", "set_rng_state_all"], [1033, 5, 1, "", "set_stream"], [1034, 5, 1, "", "set_sync_debug_mode"], [1035, 5, 1, "", "stream"], [1036, 5, 1, "", "synchronize"], [1037, 5, 1, "", "temperature"], [1038, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[961, 3, 1, "", "capture_begin"], [961, 3, 1, "", "capture_end"], [961, 3, 1, "", "debug_dump"], [961, 3, 1, "", "enable_debug_mode"], [961, 3, 1, "", "pool"], [961, 3, 1, "", "replay"], [961, 3, 1, "", "reset"]], "torch.cuda.Event": [[963, 3, 1, "", "elapsed_time"], [963, 3, 1, "", "from_ipc_handle"], [963, 3, 1, "", "ipc_handle"], [963, 3, 1, "", "query"], [963, 3, 1, "", "record"], [963, 3, 1, "", "synchronize"], [963, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[964, 3, 1, "", "query"], [964, 3, 1, "", "record_event"], [964, 3, 1, "", "synchronize"], [964, 3, 1, "", "wait_event"], [964, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[966, 3, 1, "", "query"], [966, 3, 1, "", "record_event"], [966, 3, 1, "", "synchronize"], [966, 3, 1, "", "wait_event"], [966, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[32, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[1, 1, 1, "", "GradScaler"], [1, 1, 1, "", "autocast"], [1, 5, 1, "", "custom_bwd"], [1, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[1, 3, 1, "", "get_backoff_factor"], [1, 3, 1, "", "get_growth_factor"], [1, 3, 1, "", "get_growth_interval"], [1, 3, 1, "", "get_scale"], [1, 3, 1, "", "is_enabled"], [1, 3, 1, "", "load_state_dict"], [1, 3, 1, "", "scale"], [1, 3, 1, "", "set_backoff_factor"], [1, 3, 1, "", "set_growth_factor"], [1, 3, 1, "", "set_growth_interval"], [1, 3, 1, "", "state_dict"], [1, 3, 1, "", "step"], [1, 3, 1, "", "unscale_"], [1, 3, 1, "", "update"]], "torch.cuda.comm": [[973, 5, 1, "", "broadcast"], [974, 5, 1, "", "broadcast_coalesced"], [975, 5, 1, "", "gather"], [976, 5, 1, "", "reduce_add"], [977, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1003, 5, 1, "", "_create_jit_fn"], [1004, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.nvtx": [[1020, 5, 1, "", "mark"], [1021, 5, 1, "", "range_pop"], [1022, 5, 1, "", "range_push"]], "torch.distributed": [[38, 1, 1, "", "Backend"], [38, 1, 1, "", "DistBackendError"], [38, 1, 1, "", "FileStore"], [36, 1, 1, "", "GradBucket"], [38, 1, 1, "", "HashStore"], [38, 1, 1, "", "P2POp"], [38, 1, 1, "", "PrefixStore"], [38, 1, 1, "", "ReduceOp"], [38, 1, 1, "", "Store"], [38, 1, 1, "", "TCPStore"], [38, 0, 0, "-", "algorithms"], [38, 5, 1, "", "all_gather"], [38, 5, 1, "", "all_gather_into_tensor"], [38, 5, 1, "", "all_gather_multigpu"], [38, 5, 1, "", "all_gather_object"], [38, 5, 1, "", "all_reduce"], [38, 5, 1, "", "all_reduce_multigpu"], [38, 5, 1, "", "all_to_all"], [38, 5, 1, "", "all_to_all_single"], [1910, 0, 0, "-", "autograd"], [38, 5, 1, "", "barrier"], [38, 5, 1, "", "batch_isend_irecv"], [38, 5, 1, "", "broadcast"], [38, 5, 1, "", "broadcast_multigpu"], [38, 5, 1, "", "broadcast_object_list"], [40, 0, 0, "-", "checkpoint"], [38, 0, 0, "-", "elastic"], [60, 0, 0, "-", "fsdp"], [38, 5, 1, "", "gather"], [38, 5, 1, "", "gather_object"], [38, 5, 1, "", "get_backend"], [38, 5, 1, "", "get_global_rank"], [38, 5, 1, "", "get_group_rank"], [38, 5, 1, "", "get_process_group_ranks"], [38, 5, 1, "", "get_rank"], [38, 5, 1, "", "get_world_size"], [38, 5, 1, "", "init_process_group"], [38, 5, 1, "", "irecv"], [38, 5, 1, "", "is_available"], [38, 5, 1, "", "is_gloo_available"], [38, 5, 1, "", "is_initialized"], [38, 5, 1, "", "is_mpi_available"], [38, 5, 1, "", "is_nccl_available"], [38, 5, 1, "", "is_torchelastic_launched"], [38, 5, 1, "", "isend"], [38, 0, 0, "-", "launch"], [38, 0, 0, "-", "launcher"], [38, 5, 1, "", "monitored_barrier"], [38, 5, 1, "", "new_group"], [38, 0, 0, "-", "nn"], [42, 0, 0, "-", "optim"], [38, 0, 0, "-", "pipeline"], [38, 5, 1, "", "recv"], [38, 5, 1, "", "reduce"], [38, 5, 1, "", "reduce_multigpu"], [38, 1, 1, "", "reduce_op"], [38, 5, 1, "", "reduce_scatter"], [38, 5, 1, "", "reduce_scatter_multigpu"], [38, 5, 1, "", "reduce_scatter_tensor"], [1910, 0, 0, "-", "rpc"], [56, 0, 0, "-", "run"], [38, 5, 1, "", "scatter"], [38, 5, 1, "", "scatter_object_list"], [38, 5, 1, "", "send"], [38, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[38, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[36, 5, 1, "", "buffer"], [36, 5, 1, "", "gradients"], [36, 5, 1, "", "index"], [36, 5, 1, "", "is_last"], [36, 5, 1, "", "parameters"], [36, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[38, 5, 1, "", "add"], [38, 5, 1, "", "compare_set"], [38, 5, 1, "", "delete_key"], [38, 5, 1, "", "get"], [38, 5, 1, "", "num_keys"], [38, 5, 1, "", "set"], [38, 5, 1, "", "set_timeout"], [38, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[39, 1, 1, "", "Join"], [39, 1, 1, "", "JoinHook"], [39, 1, 1, "", "Joinable"], [38, 0, 0, "-", "ddp_comm_hooks"], [38, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[39, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[39, 3, 1, "", "main_hook"], [39, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[39, 4, 1, "", "join_device"], [39, 3, 1, "", "join_hook"], [39, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[36, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[36, 5, 1, "", "allreduce_hook"], [36, 5, 1, "", "bf16_compress_hook"], [36, 5, 1, "", "bf16_compress_wrapper"], [36, 5, 1, "", "fp16_compress_hook"], [36, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[36, 1, 1, "", "PowerSGDState"], [36, 5, 1, "", "batched_powerSGD_hook"], [36, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[36, 3, 1, "", "__getstate__"], [36, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1910, 5, 1, "", "backward"], [1910, 1, 1, "", "context"], [1910, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[40, 1, 1, "", "DefaultLoadPlanner"], [40, 1, 1, "", "DefaultSavePlanner"], [40, 1, 1, "", "FileSystemReader"], [40, 1, 1, "", "FileSystemWriter"], [40, 1, 1, "", "LoadPlan"], [40, 1, 1, "", "LoadPlanner"], [40, 1, 1, "", "ReadItem"], [40, 1, 1, "", "SavePlan"], [40, 1, 1, "", "SavePlanner"], [40, 1, 1, "", "StorageReader"], [40, 1, 1, "", "StorageWriter"], [40, 1, 1, "", "WriteItem"], [40, 5, 1, "", "load_state_dict"], [40, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[40, 3, 1, "", "lookup_tensor"], [40, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[40, 3, 1, "", "lookup_object"], [40, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[40, 3, 1, "", "commit_tensor"], [40, 3, 1, "", "create_global_plan"], [40, 3, 1, "", "create_local_plan"], [40, 3, 1, "", "finish_plan"], [40, 3, 1, "", "load_bytes"], [40, 3, 1, "", "resolve_tensor"], [40, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[40, 3, 1, "", "create_global_plan"], [40, 3, 1, "", "create_local_plan"], [40, 3, 1, "", "finish_plan"], [40, 3, 1, "", "resolve_data"], [40, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[40, 3, 1, "", "prepare_global_plan"], [40, 3, 1, "", "prepare_local_plan"], [40, 3, 1, "", "read_data"], [40, 3, 1, "", "read_metadata"], [40, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[40, 3, 1, "", "finish"], [40, 3, 1, "", "prepare_global_plan"], [40, 3, 1, "", "prepare_local_plan"], [40, 3, 1, "", "set_up_storage_writer"], [40, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[46, 0, 0, "-", "agent"], [49, 0, 0, "-", "events"], [52, 0, 0, "-", "metrics"], [53, 0, 0, "-", "multiprocessing"], [55, 0, 0, "-", "rendezvous"], [57, 0, 0, "-", "timer"], [38, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[46, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[46, 1, 1, "", "ElasticAgent"], [46, 1, 1, "", "SimpleElasticAgent"], [46, 1, 1, "", "Worker"], [46, 1, 1, "", "WorkerGroup"], [46, 1, 1, "", "WorkerSpec"], [46, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[46, 3, 1, "", "get_worker_group"], [46, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[46, 3, 1, "", "_assign_worker_ranks"], [46, 3, 1, "", "_exit_barrier"], [46, 3, 1, "", "_initialize_workers"], [46, 3, 1, "", "_monitor_workers"], [46, 3, 1, "", "_rendezvous"], [46, 3, 1, "", "_restart_workers"], [46, 3, 1, "", "_shutdown"], [46, 3, 1, "", "_start_workers"], [46, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[46, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[46, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[46, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[46, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[49, 1, 1, "", "Event"], [49, 2, 1, "", "EventMetadataValue"], [49, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[49, 5, 1, "", "get_logging_handler"], [49, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[52, 1, 1, "", "ConsoleMetricHandler"], [52, 1, 1, "", "MetricHandler"], [52, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[52, 5, 1, "", "configure"], [52, 5, 1, "", "prof"], [52, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[53, 1, 1, "", "MultiprocessContext"], [53, 1, 1, "", "PContext"], [53, 1, 1, "", "RunProcsResult"], [53, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[48, 0, 0, "-", "errors"], [53, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[48, 1, 1, "", "ChildFailedError"], [48, 1, 1, "", "ErrorHandler"], [48, 1, 1, "", "ProcessFailure"], [48, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[55, 1, 1, "", "RendezvousClosedError"], [55, 1, 1, "", "RendezvousConnectionError"], [55, 1, 1, "", "RendezvousError"], [55, 1, 1, "", "RendezvousHandler"], [55, 1, 1, "", "RendezvousHandlerRegistry"], [55, 1, 1, "", "RendezvousParameters"], [55, 1, 1, "", "RendezvousStateError"], [55, 1, 1, "", "RendezvousTimeoutError"], [55, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[55, 3, 1, "", "get_backend"], [55, 3, 1, "", "get_run_id"], [55, 3, 1, "", "is_closed"], [55, 3, 1, "", "next_rendezvous"], [55, 3, 1, "", "num_nodes_waiting"], [55, 3, 1, "", "set_closed"], [55, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[55, 3, 1, "", "create_handler"], [55, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[55, 3, 1, "", "get"], [55, 3, 1, "", "get_as_bool"], [55, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[55, 1, 1, "", "C10dRendezvousBackend"], [55, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[55, 3, 1, "", "get_state"], [55, 4, 1, "", "name"], [55, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[55, 1, 1, "", "DynamicRendezvousHandler"], [55, 1, 1, "", "RendezvousBackend"], [55, 1, 1, "", "RendezvousTimeout"], [55, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[55, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[55, 3, 1, "", "get_state"], [55, 4, 1, "", "name"], [55, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[55, 4, 1, "", "close"], [55, 4, 1, "", "heartbeat"], [55, 4, 1, "", "join"], [55, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[55, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[55, 1, 1, "", "EtcdRendezvousBackend"], [55, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[55, 3, 1, "", "get_state"], [55, 4, 1, "", "name"], [55, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[55, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[55, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[55, 3, 1, "", "add"], [55, 3, 1, "", "check"], [55, 3, 1, "", "get"], [55, 3, 1, "", "set"], [55, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[57, 1, 1, "", "FileTimerClient"], [57, 1, 1, "", "FileTimerServer"], [57, 1, 1, "", "LocalTimerClient"], [57, 1, 1, "", "LocalTimerServer"], [57, 1, 1, "", "TimerClient"], [57, 1, 1, "", "TimerRequest"], [57, 1, 1, "", "TimerServer"], [57, 5, 1, "", "configure"], [57, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[57, 3, 1, "", "acquire"], [57, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[57, 3, 1, "", "clear_timers"], [57, 3, 1, "", "get_expired_timers"], [57, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[38, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[60, 1, 1, "", "BackwardPrefetch"], [60, 1, 1, "", "CPUOffload"], [60, 1, 1, "", "FullyShardedDataParallel"], [60, 1, 1, "", "MixedPrecision"], [60, 1, 1, "", "ShardingStrategy"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[60, 3, 1, "", "apply"], [60, 3, 1, "", "clip_grad_norm_"], [60, 3, 1, "", "flatten_sharded_optim_state_dict"], [60, 3, 1, "", "forward"], [60, 3, 1, "", "fsdp_modules"], [60, 3, 1, "", "full_optim_state_dict"], [60, 3, 1, "", "load_optim_state_dict_pre_hook"], [60, 4, 1, "", "module"], [60, 3, 1, "", "named_buffers"], [60, 3, 1, "", "named_parameters"], [60, 3, 1, "", "no_sync"], [60, 3, 1, "", "optim_state_dict"], [60, 3, 1, "", "optim_state_dict_post_hook"], [60, 3, 1, "", "optim_state_dict_to_load"], [60, 3, 1, "", "register_comm_hook"], [60, 3, 1, "", "rekey_optim_state_dict"], [60, 3, 1, "", "scatter_full_optim_state_dict"], [60, 3, 1, "", "set_state_dict_type"], [60, 3, 1, "", "shard_full_optim_state_dict"], [60, 3, 1, "", "sharded_optim_state_dict"], [60, 3, 1, "", "state_dict_type"], [60, 3, 1, "", "summon_full_params"]], "torch.distributed.nn": [[38, 0, 0, "-", "api"], [38, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1910, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1910, 3, 1, "", "get_module_rref"], [1910, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[38, 0, 0, "-", "templates"]], "torch.distributed.optim": [[42, 1, 1, "", "DistributedOptimizer"], [42, 1, 1, "", "PostLocalSGDOptimizer"], [42, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[42, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[42, 3, 1, "", "load_state_dict"], [42, 3, 1, "", "state_dict"], [42, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[42, 3, 1, "", "add_param_group"], [42, 3, 1, "", "consolidate_state_dict"], [42, 3, 1, "", "join_hook"], [42, 3, 1, "", "load_state_dict"], [42, 3, 1, "", "state_dict"], [42, 3, 1, "", "step"]], "torch.distributed.pipeline": [[38, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1903, 1, 1, "", "Pipe"], [38, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1903, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1903, 1, 1, "", "pop"], [1903, 5, 1, "", "skippable"], [1903, 1, 1, "", "stash"], [1903, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1910, 1, 1, "", "BackendType"], [1910, 1, 1, "", "RRef"], [1910, 1, 1, "", "RpcBackendOptions"], [1910, 1, 1, "", "TensorPipeRpcBackendOptions"], [1910, 1, 1, "", "WorkerInfo"], [1910, 5, 1, "", "get_worker_info"], [1910, 5, 1, "", "init_rpc"], [1910, 5, 1, "", "remote"], [1910, 5, 1, "", "rpc_async"], [1910, 5, 1, "", "rpc_sync"], [1910, 5, 1, "", "shutdown"]], "torch.distributed.rpc.RpcBackendOptions": [[1910, 4, 1, "", "init_method"], [1910, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1910, 4, 1, "", "device_maps"], [1910, 4, 1, "", "devices"], [1910, 4, 1, "", "init_method"], [1910, 4, 1, "", "num_worker_threads"], [1910, 4, 1, "", "rpc_timeout"], [1910, 3, 1, "", "set_device_map"], [1910, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1910, 4, 1, "", "id"], [1910, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1910, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[43, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.fsdp": [[43, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel.multihead_attention_tp": [[43, 1, 1, "", "TensorParallelMultiheadAttention"]], "torch.distributed.tensor.parallel": [[43, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[43, 1, 1, "", "ColwiseParallel"], [43, 1, 1, "", "PairwiseParallel"], [43, 1, 1, "", "RowwiseParallel"], [43, 1, 1, "", "SequenceParallel"], [43, 5, 1, "", "make_input_replicate_1d"], [43, 5, 1, "", "make_input_reshard_replicate"], [43, 5, 1, "", "make_input_shard_1d"], [43, 5, 1, "", "make_input_shard_1d_last_dim"], [43, 5, 1, "", "make_output_replicate_1d"], [43, 5, 1, "", "make_output_reshard_tensor"], [43, 5, 1, "", "make_output_shard_1d"], [43, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[44, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "enumerate_support"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_enumerate_support"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "param_shape"], [44, 4, 1, "", "probs"], [44, 3, 1, "", "sample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.beta": [[44, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[44, 2, 1, "", "arg_constraints"], [44, 4, 1, "", "concentration0"], [44, 4, 1, "", "concentration1"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.binomial": [[44, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "enumerate_support"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_enumerate_support"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "param_shape"], [44, 4, 1, "", "probs"], [44, 3, 1, "", "sample"], [44, 4, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.categorical": [[44, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "enumerate_support"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_enumerate_support"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "param_shape"], [44, 4, 1, "", "probs"], [44, 3, 1, "", "sample"], [44, 4, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[44, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "icdf"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.chi2": [[44, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[44, 2, 1, "", "arg_constraints"], [44, 4, 1, "", "df"], [44, 3, 1, "", "expand"]], "torch.distributions": [[44, 0, 0, "-", "constraint_registry"], [44, 0, 0, "-", "constraints"], [44, 0, 0, "-", "kl"], [44, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[44, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[44, 3, 1, "", "register"]], "torch.distributions.constraints": [[44, 1, 1, "", "Constraint"], [44, 2, 1, "", "cat"], [44, 2, 1, "", "dependent_property"], [44, 2, 1, "", "greater_than"], [44, 2, 1, "", "greater_than_eq"], [44, 2, 1, "", "half_open_interval"], [44, 2, 1, "", "independent"], [44, 2, 1, "", "integer_interval"], [44, 2, 1, "", "interval"], [44, 2, 1, "", "less_than"], [44, 2, 1, "", "multinomial"], [44, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[44, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[44, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "icdf"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "param_shape"], [44, 4, 1, "", "probs"], [44, 3, 1, "", "rsample"], [44, 3, 1, "", "sample"], [44, 4, 1, "", "stddev"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[44, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.distribution": [[44, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[44, 4, 1, "", "arg_constraints"], [44, 4, 1, "", "batch_shape"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "enumerate_support"], [44, 4, 1, "", "event_shape"], [44, 3, 1, "", "expand"], [44, 3, 1, "", "icdf"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "perplexity"], [44, 3, 1, "", "rsample"], [44, 3, 1, "", "sample"], [44, 3, 1, "", "sample_n"], [44, 3, 1, "", "set_default_validate_args"], [44, 4, 1, "", "stddev"], [44, 4, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[44, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[44, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[44, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "icdf"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 4, 1, "", "stddev"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[44, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.gamma": [[44, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.geometric": [[44, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "probs"], [44, 3, 1, "", "sample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[44, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "stddev"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[44, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "icdf"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "scale"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[44, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "icdf"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "scale"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.independent": [[44, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "enumerate_support"], [44, 3, 1, "", "expand"], [44, 4, 1, "", "has_enumerate_support"], [44, 4, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 3, 1, "", "sample"], [44, 4, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.kl": [[44, 5, 1, "", "kl_divergence"], [44, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[44, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.laplace": [[44, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "icdf"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 4, 1, "", "stddev"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[44, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "expand"], [44, 3, 1, "", "log_prob"], [44, 3, 1, "", "sample"], [44, 2, 1, "", "support"]], "torch.distributions.log_normal": [[44, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 4, 1, "", "loc"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "scale"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[44, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[44, 2, 1, "", "arg_constraints"], [44, 4, 1, "", "covariance_matrix"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "precision_matrix"], [44, 3, 1, "", "rsample"], [44, 4, 1, "", "scale_tril"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[44, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 4, 1, "", "component_distribution"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mixture_distribution"], [44, 3, 1, "", "sample"], [44, 4, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[44, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "param_shape"], [44, 4, 1, "", "probs"], [44, 3, 1, "", "sample"], [44, 4, 1, "", "support"], [44, 2, 1, "", "total_count"], [44, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[44, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[44, 2, 1, "", "arg_constraints"], [44, 4, 1, "", "covariance_matrix"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "precision_matrix"], [44, 3, 1, "", "rsample"], [44, 4, 1, "", "scale_tril"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[44, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "expand"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "param_shape"], [44, 4, 1, "", "probs"], [44, 3, 1, "", "sample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.normal": [[44, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "icdf"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 3, 1, "", "sample"], [44, 4, 1, "", "stddev"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[44, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "enumerate_support"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_enumerate_support"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "param_shape"], [44, 4, 1, "", "probs"], [44, 3, 1, "", "sample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.pareto": [[44, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.poisson": [[44, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "expand"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "sample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[44, 1, 1, "", "LogitRelaxedBernoulli"], [44, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "expand"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "param_shape"], [44, 4, 1, "", "probs"], [44, 3, 1, "", "rsample"], [44, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "probs"], [44, 2, 1, "", "support"], [44, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[44, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 4, 1, "", "logits"], [44, 4, 1, "", "probs"], [44, 2, 1, "", "support"], [44, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[44, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[44, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "expand"], [44, 4, 1, "", "has_rsample"], [44, 3, 1, "", "icdf"], [44, 3, 1, "", "log_prob"], [44, 3, 1, "", "rsample"], [44, 3, 1, "", "sample"], [44, 4, 1, "", "support"]], "torch.distributions.transforms": [[44, 1, 1, "", "AbsTransform"], [44, 1, 1, "", "AffineTransform"], [44, 1, 1, "", "CatTransform"], [44, 1, 1, "", "ComposeTransform"], [44, 1, 1, "", "CorrCholeskyTransform"], [44, 1, 1, "", "CumulativeDistributionTransform"], [44, 1, 1, "", "ExpTransform"], [44, 1, 1, "", "IndependentTransform"], [44, 1, 1, "", "LowerCholeskyTransform"], [44, 1, 1, "", "PositiveDefiniteTransform"], [44, 1, 1, "", "PowerTransform"], [44, 1, 1, "", "ReshapeTransform"], [44, 1, 1, "", "SigmoidTransform"], [44, 1, 1, "", "SoftmaxTransform"], [44, 1, 1, "", "SoftplusTransform"], [44, 1, 1, "", "StackTransform"], [44, 1, 1, "", "StickBreakingTransform"], [44, 1, 1, "", "TanhTransform"], [44, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[44, 3, 1, "", "forward_shape"], [44, 4, 1, "", "inv"], [44, 3, 1, "", "inverse_shape"], [44, 3, 1, "", "log_abs_det_jacobian"], [44, 4, 1, "", "sign"]], "torch.distributions.uniform": [[44, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "cdf"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "icdf"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "rsample"], [44, 4, 1, "", "stddev"], [44, 4, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[44, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 3, 1, "", "sample"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.weibull": [[44, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[44, 2, 1, "", "arg_constraints"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.distributions.wishart": [[44, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[44, 2, 1, "", "arg_constraints"], [44, 4, 1, "", "covariance_matrix"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "expand"], [44, 2, 1, "", "has_rsample"], [44, 3, 1, "", "log_prob"], [44, 4, 1, "", "mean"], [44, 4, 1, "", "mode"], [44, 4, 1, "", "precision_matrix"], [44, 3, 1, "", "rsample"], [44, 4, 1, "", "scale_tril"], [44, 2, 1, "", "support"], [44, 4, 1, "", "variance"]], "torch.fft": [[1076, 5, 1, "", "fft"], [1077, 5, 1, "", "fft2"], [1078, 5, 1, "", "fftfreq"], [1079, 5, 1, "", "fftn"], [1080, 5, 1, "", "fftshift"], [1081, 5, 1, "", "hfft"], [1082, 5, 1, "", "hfft2"], [1083, 5, 1, "", "hfftn"], [1084, 5, 1, "", "ifft"], [1085, 5, 1, "", "ifft2"], [1086, 5, 1, "", "ifftn"], [1087, 5, 1, "", "ifftshift"], [1088, 5, 1, "", "ihfft"], [1089, 5, 1, "", "ihfft2"], [1090, 5, 1, "", "ihfftn"], [1091, 5, 1, "", "irfft"], [1092, 5, 1, "", "irfft2"], [1093, 5, 1, "", "irfftn"], [1094, 5, 1, "", "rfft"], [1095, 5, 1, "", "rfft2"], [1096, 5, 1, "", "rfftfreq"], [1097, 5, 1, "", "rfftn"]], "torch.func": [[1116, 5, 1, "", "functional_call"], [1117, 5, 1, "", "functionalize"], [1118, 5, 1, "", "grad"], [1119, 5, 1, "", "grad_and_value"], [1120, 5, 1, "", "hessian"], [1121, 5, 1, "", "jacfwd"], [1122, 5, 1, "", "jacrev"], [1123, 5, 1, "", "jvp"], [1124, 5, 1, "", "linearize"], [1125, 5, 1, "", "replace_all_batch_norm_modules_"], [1126, 5, 1, "", "stack_module_state"], [1127, 5, 1, "", "vjp"], [1128, 5, 1, "", "vmap"]], "torch.futures": [[67, 1, 1, "", "Future"], [67, 5, 1, "", "collect_all"], [67, 5, 1, "", "wait_all"]], "torch.futures.Future": [[67, 3, 1, "", "add_done_callback"], [67, 3, 1, "", "done"], [67, 3, 1, "", "set_exception"], [67, 3, 1, "", "set_result"], [67, 3, 1, "", "then"], [67, 3, 1, "", "value"], [67, 3, 1, "", "wait"]], "torch.fx": [[68, 1, 1, "", "Graph"], [68, 1, 1, "", "GraphModule"], [68, 1, 1, "", "Interpreter"], [68, 1, 1, "", "Node"], [68, 1, 1, "", "Proxy"], [68, 1, 1, "", "Tracer"], [68, 1, 1, "", "Transformer"], [68, 0, 0, "-", "experimental"], [68, 0, 0, "-", "passes"], [68, 5, 1, "", "replace_pattern"], [68, 5, 1, "", "symbolic_trace"], [68, 5, 1, "", "wrap"]], "torch.fx.Graph": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "call_function"], [68, 3, 1, "", "call_method"], [68, 3, 1, "", "call_module"], [68, 3, 1, "", "create_node"], [68, 3, 1, "", "eliminate_dead_code"], [68, 3, 1, "", "erase_node"], [68, 3, 1, "", "get_attr"], [68, 3, 1, "", "graph_copy"], [68, 3, 1, "", "inserting_after"], [68, 3, 1, "", "inserting_before"], [68, 3, 1, "", "lint"], [68, 3, 1, "", "node_copy"], [68, 4, 1, "", "nodes"], [68, 3, 1, "", "on_generate_code"], [68, 3, 1, "", "output"], [68, 3, 1, "", "placeholder"], [68, 3, 1, "", "print_tabular"], [68, 3, 1, "", "process_inputs"], [68, 3, 1, "", "process_outputs"], [68, 3, 1, "", "python_code"], [68, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "add_submodule"], [68, 4, 1, "", "code"], [68, 3, 1, "", "delete_all_unused_submodules"], [68, 3, 1, "", "delete_submodule"], [68, 4, 1, "", "graph"], [68, 3, 1, "", "print_readable"], [68, 3, 1, "", "recompile"], [68, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[68, 3, 1, "", "boxed_run"], [68, 3, 1, "", "call_function"], [68, 3, 1, "", "call_method"], [68, 3, 1, "", "call_module"], [68, 3, 1, "", "fetch_args_kwargs_from_env"], [68, 3, 1, "", "fetch_attr"], [68, 3, 1, "", "get_attr"], [68, 3, 1, "", "map_nodes_to_values"], [68, 3, 1, "", "output"], [68, 3, 1, "", "placeholder"], [68, 3, 1, "", "run"], [68, 3, 1, "", "run_node"]], "torch.fx.Node": [[68, 4, 1, "", "all_input_nodes"], [68, 3, 1, "", "append"], [68, 4, 1, "", "args"], [68, 3, 1, "", "format_node"], [68, 3, 1, "", "is_impure"], [68, 4, 1, "", "kwargs"], [68, 4, 1, "", "next"], [68, 3, 1, "", "normalized_arguments"], [68, 3, 1, "", "prepend"], [68, 4, 1, "", "prev"], [68, 3, 1, "", "replace_all_uses_with"], [68, 3, 1, "", "replace_input_with"], [68, 4, 1, "", "stack_trace"], [68, 3, 1, "", "update_arg"], [68, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[68, 3, 1, "", "call_module"], [68, 3, 1, "", "create_arg"], [68, 3, 1, "", "create_args_for_root"], [68, 3, 1, "", "create_node"], [68, 3, 1, "", "create_proxy"], [68, 3, 1, "", "getattr"], [68, 3, 1, "", "is_leaf_module"], [68, 3, 1, "", "iter"], [68, 3, 1, "", "keys"], [68, 3, 1, "", "path_of_module"], [68, 3, 1, "", "proxy"], [68, 3, 1, "", "to_bool"], [68, 3, 1, "", "trace"]], "torch.fx.Transformer": [[68, 3, 1, "", "call_function"], [68, 3, 1, "", "call_module"], [68, 3, 1, "", "get_attr"], [68, 3, 1, "", "placeholder"], [68, 3, 1, "", "transform"]], "torch.fx.experimental": [[68, 0, 0, "-", "migrate_gradual_types"], [68, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[68, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[68, 0, 0, "-", "backends"], [68, 0, 0, "-", "dialect"], [68, 0, 0, "-", "infra"], [68, 0, 0, "-", "tests"], [68, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[68, 0, 0, "-", "common"]], "torch.hub": [[1854, 5, 1, "", "download_url_to_file"], [1854, 5, 1, "", "get_dir"], [1854, 5, 1, "", "help"], [1854, 5, 1, "", "list"], [1854, 5, 1, "", "load"], [1854, 5, 1, "", "load_state_dict_from_url"], [1854, 5, 1, "", "set_dir"]], "torch.jit": [[1185, 1, 1, "", "Attribute"], [1186, 1, 1, "", "ScriptFunction"], [1187, 1, 1, "", "ScriptModule"], [1188, 5, 1, "", "annotate"], [1189, 5, 1, "", "enable_onednn_fusion"], [1857, 5, 1, "", "export"], [1190, 5, 1, "", "fork"], [1191, 5, 1, "", "freeze"], [1192, 5, 1, "", "ignore"], [1859, 5, 1, "", "is_scripting"], [1859, 5, 1, "", "is_tracing"], [1193, 5, 1, "", "isinstance"], [1194, 5, 1, "", "load"], [1857, 0, 0, "-", "mobile"], [1195, 5, 1, "", "onednn_fusion_enabled"], [1196, 5, 1, "", "optimize_for_inference"], [1197, 5, 1, "", "save"], [1198, 5, 1, "", "script"], [1199, 5, 1, "", "script_if_tracing"], [1200, 5, 1, "", "set_fusion_strategy"], [1201, 1, 1, "", "strict_fusion"], [1858, 0, 0, "-", "supported_ops"], [1202, 5, 1, "", "trace"], [1203, 5, 1, "", "trace_module"], [1862, 0, 0, "-", "unsupported_tensor_ops"], [1204, 5, 1, "", "unused"], [1205, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1185, 3, 1, "", "count"], [1185, 3, 1, "", "index"], [1185, 2, 1, "", "type"], [1185, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1186, 3, 1, "", "get_debug_state"], [1186, 3, 1, "", "save"], [1186, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1187, 3, 1, "", "add_module"], [1187, 3, 1, "", "apply"], [1187, 3, 1, "", "bfloat16"], [1187, 3, 1, "", "buffers"], [1187, 3, 1, "", "children"], [1187, 4, 1, "", "code"], [1187, 4, 1, "", "code_with_constants"], [1187, 3, 1, "", "compile"], [1187, 3, 1, "", "cpu"], [1187, 3, 1, "", "cuda"], [1187, 3, 1, "", "double"], [1187, 3, 1, "", "eval"], [1187, 3, 1, "", "extra_repr"], [1187, 3, 1, "", "float"], [1187, 3, 1, "", "get_buffer"], [1187, 3, 1, "", "get_extra_state"], [1187, 3, 1, "", "get_parameter"], [1187, 3, 1, "", "get_submodule"], [1187, 4, 1, "", "graph"], [1187, 3, 1, "", "half"], [1187, 4, 1, "", "inlined_graph"], [1187, 3, 1, "", "ipu"], [1187, 3, 1, "", "load_state_dict"], [1187, 3, 1, "", "modules"], [1187, 3, 1, "", "named_buffers"], [1187, 3, 1, "", "named_children"], [1187, 3, 1, "", "named_modules"], [1187, 3, 1, "", "named_parameters"], [1187, 3, 1, "", "parameters"], [1187, 3, 1, "", "register_backward_hook"], [1187, 3, 1, "", "register_buffer"], [1187, 3, 1, "", "register_forward_hook"], [1187, 3, 1, "", "register_forward_pre_hook"], [1187, 3, 1, "", "register_full_backward_hook"], [1187, 3, 1, "", "register_full_backward_pre_hook"], [1187, 3, 1, "", "register_load_state_dict_post_hook"], [1187, 3, 1, "", "register_module"], [1187, 3, 1, "", "register_parameter"], [1187, 3, 1, "", "register_state_dict_pre_hook"], [1187, 3, 1, "", "requires_grad_"], [1187, 3, 1, "", "save"], [1187, 3, 1, "", "set_extra_state"], [1187, 3, 1, "", "share_memory"], [1187, 3, 1, "", "state_dict"], [1187, 3, 1, "", "to"], [1187, 3, 1, "", "to_empty"], [1187, 3, 1, "", "train"], [1187, 3, 1, "", "type"], [1187, 3, 1, "", "xpu"], [1187, 3, 1, "", "zero_grad"]], "torch.library": [[1864, 1, 1, "", "Library"]], "torch.library.Library": [[1864, 3, 1, "", "define"], [1864, 3, 1, "", "impl"]], "torch.linalg": [[1216, 5, 1, "", "cholesky"], [1217, 5, 1, "", "cholesky_ex"], [1218, 5, 1, "", "cond"], [1219, 5, 1, "", "cross"], [1220, 5, 1, "", "det"], [1221, 5, 1, "", "diagonal"], [1222, 5, 1, "", "eig"], [1223, 5, 1, "", "eigh"], [1224, 5, 1, "", "eigvals"], [1225, 5, 1, "", "eigvalsh"], [1226, 5, 1, "", "householder_product"], [1227, 5, 1, "", "inv"], [1228, 5, 1, "", "inv_ex"], [1229, 5, 1, "", "ldl_factor"], [1230, 5, 1, "", "ldl_factor_ex"], [1231, 5, 1, "", "ldl_solve"], [1232, 5, 1, "", "lstsq"], [1233, 5, 1, "", "lu"], [1234, 5, 1, "", "lu_factor"], [1235, 5, 1, "", "lu_factor_ex"], [1236, 5, 1, "", "lu_solve"], [1237, 5, 1, "", "matmul"], [1238, 5, 1, "", "matrix_exp"], [1239, 5, 1, "", "matrix_norm"], [1240, 5, 1, "", "matrix_power"], [1241, 5, 1, "", "matrix_rank"], [1242, 5, 1, "", "multi_dot"], [1243, 5, 1, "", "norm"], [1244, 5, 1, "", "pinv"], [1245, 5, 1, "", "qr"], [1246, 5, 1, "", "slogdet"], [1247, 5, 1, "", "solve"], [1248, 5, 1, "", "solve_ex"], [1249, 5, 1, "", "solve_triangular"], [1250, 5, 1, "", "svd"], [1251, 5, 1, "", "svdvals"], [1252, 5, 1, "", "tensorinv"], [1253, 5, 1, "", "tensorsolve"], [1254, 5, 1, "", "vander"], [1255, 5, 1, "", "vecdot"], [1256, 5, 1, "", "vector_norm"]], "torch.masked": [[1867, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1870, 1, 1, "", "Aggregation"], [1870, 1, 1, "", "Event"], [1870, 1, 1, "", "EventHandlerHandle"], [1870, 1, 1, "", "Stat"], [1870, 1, 1, "", "TensorboardEventHandler"], [1870, 1, 1, "", "data_value_t"], [1870, 5, 1, "", "log_event"], [1870, 5, 1, "", "register_event_handler"], [1870, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1870, 4, 1, "", "name"]], "torch.monitor.Event": [[1870, 3, 1, "", "__init__"], [1870, 4, 1, "", "data"], [1870, 4, 1, "", "name"], [1870, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1870, 3, 1, "", "__init__"], [1870, 3, 1, "", "add"], [1870, 4, 1, "", "count"], [1870, 3, 1, "", "get"], [1870, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1870, 3, 1, "", "__init__"]], "torch.mps": [[1295, 5, 1, "", "current_allocated_memory"], [1296, 5, 1, "", "driver_allocated_memory"], [1297, 5, 1, "", "empty_cache"], [1298, 5, 1, "", "get_rng_state"], [1299, 5, 1, "", "manual_seed"], [1303, 5, 1, "", "seed"], [1304, 5, 1, "", "set_per_process_memory_fraction"], [1305, 5, 1, "", "set_rng_state"], [1306, 5, 1, "", "synchronize"]], "torch.mps.profiler": [[1300, 5, 1, "", "profile"], [1301, 5, 1, "", "start"], [1302, 5, 1, "", "stop"]], "torch.multiprocessing": [[1872, 1, 1, "", "SpawnContext"], [1872, 5, 1, "", "get_all_sharing_strategies"], [1872, 5, 1, "", "get_sharing_strategy"], [1872, 5, 1, "", "set_sharing_strategy"], [1872, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1872, 3, 1, "", "join"]], "torch.nested": [[1875, 5, 1, "", "as_nested_tensor"], [1875, 5, 1, "", "nested_tensor"], [1875, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1324, 1, 1, "", "AdaptiveAvgPool1d"], [1325, 1, 1, "", "AdaptiveAvgPool2d"], [1326, 1, 1, "", "AdaptiveAvgPool3d"], [1327, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1328, 1, 1, "", "AdaptiveMaxPool1d"], [1329, 1, 1, "", "AdaptiveMaxPool2d"], [1330, 1, 1, "", "AdaptiveMaxPool3d"], [1331, 1, 1, "", "AlphaDropout"], [1332, 1, 1, "", "AvgPool1d"], [1333, 1, 1, "", "AvgPool2d"], [1334, 1, 1, "", "AvgPool3d"], [1335, 1, 1, "", "BCELoss"], [1336, 1, 1, "", "BCEWithLogitsLoss"], [1337, 1, 1, "", "BatchNorm1d"], [1338, 1, 1, "", "BatchNorm2d"], [1339, 1, 1, "", "BatchNorm3d"], [1340, 1, 1, "", "Bilinear"], [1341, 1, 1, "", "CELU"], [1342, 1, 1, "", "CTCLoss"], [1343, 1, 1, "", "ChannelShuffle"], [1344, 1, 1, "", "ConstantPad1d"], [1345, 1, 1, "", "ConstantPad2d"], [1346, 1, 1, "", "ConstantPad3d"], [1347, 1, 1, "", "Conv1d"], [1348, 1, 1, "", "Conv2d"], [1349, 1, 1, "", "Conv3d"], [1350, 1, 1, "", "ConvTranspose1d"], [1351, 1, 1, "", "ConvTranspose2d"], [1352, 1, 1, "", "ConvTranspose3d"], [1353, 1, 1, "", "CosineEmbeddingLoss"], [1354, 1, 1, "", "CosineSimilarity"], [1355, 1, 1, "", "CrossEntropyLoss"], [1356, 1, 1, "", "DataParallel"], [1357, 1, 1, "", "Dropout"], [1358, 1, 1, "", "Dropout1d"], [1359, 1, 1, "", "Dropout2d"], [1360, 1, 1, "", "Dropout3d"], [1361, 1, 1, "", "ELU"], [1362, 1, 1, "", "Embedding"], [1363, 1, 1, "", "EmbeddingBag"], [1364, 1, 1, "", "FeatureAlphaDropout"], [1365, 1, 1, "", "Flatten"], [1366, 1, 1, "", "Fold"], [1367, 1, 1, "", "FractionalMaxPool2d"], [1368, 1, 1, "", "FractionalMaxPool3d"], [1369, 1, 1, "", "GELU"], [1370, 1, 1, "", "GLU"], [1371, 1, 1, "", "GRU"], [1372, 1, 1, "", "GRUCell"], [1373, 1, 1, "", "GaussianNLLLoss"], [1374, 1, 1, "", "GroupNorm"], [1375, 1, 1, "", "Hardshrink"], [1376, 1, 1, "", "Hardsigmoid"], [1377, 1, 1, "", "Hardswish"], [1378, 1, 1, "", "Hardtanh"], [1379, 1, 1, "", "HingeEmbeddingLoss"], [1380, 1, 1, "", "HuberLoss"], [1381, 1, 1, "", "Identity"], [1382, 1, 1, "", "InstanceNorm1d"], [1383, 1, 1, "", "InstanceNorm2d"], [1384, 1, 1, "", "InstanceNorm3d"], [1385, 1, 1, "", "KLDivLoss"], [1386, 1, 1, "", "L1Loss"], [1387, 1, 1, "", "LPPool1d"], [1388, 1, 1, "", "LPPool2d"], [1389, 1, 1, "", "LSTM"], [1390, 1, 1, "", "LSTMCell"], [1391, 1, 1, "", "LayerNorm"], [1392, 1, 1, "", "LazyBatchNorm1d"], [1393, 1, 1, "", "LazyBatchNorm2d"], [1394, 1, 1, "", "LazyBatchNorm3d"], [1395, 1, 1, "", "LazyConv1d"], [1396, 1, 1, "", "LazyConv2d"], [1397, 1, 1, "", "LazyConv3d"], [1398, 1, 1, "", "LazyConvTranspose1d"], [1399, 1, 1, "", "LazyConvTranspose2d"], [1400, 1, 1, "", "LazyConvTranspose3d"], [1401, 1, 1, "", "LazyInstanceNorm1d"], [1402, 1, 1, "", "LazyInstanceNorm2d"], [1403, 1, 1, "", "LazyInstanceNorm3d"], [1404, 1, 1, "", "LazyLinear"], [1405, 1, 1, "", "LeakyReLU"], [1406, 1, 1, "", "Linear"], [1407, 1, 1, "", "LocalResponseNorm"], [1408, 1, 1, "", "LogSigmoid"], [1409, 1, 1, "", "LogSoftmax"], [1410, 1, 1, "", "MSELoss"], [1411, 1, 1, "", "MarginRankingLoss"], [1412, 1, 1, "", "MaxPool1d"], [1413, 1, 1, "", "MaxPool2d"], [1414, 1, 1, "", "MaxPool3d"], [1415, 1, 1, "", "MaxUnpool1d"], [1416, 1, 1, "", "MaxUnpool2d"], [1417, 1, 1, "", "MaxUnpool3d"], [1418, 1, 1, "", "Mish"], [1419, 1, 1, "", "Module"], [1420, 1, 1, "", "ModuleDict"], [1421, 1, 1, "", "ModuleList"], [1422, 1, 1, "", "MultiLabelMarginLoss"], [1423, 1, 1, "", "MultiLabelSoftMarginLoss"], [1424, 1, 1, "", "MultiMarginLoss"], [1425, 1, 1, "", "MultiheadAttention"], [1426, 1, 1, "", "NLLLoss"], [1427, 1, 1, "", "PReLU"], [1428, 1, 1, "", "PairwiseDistance"], [1429, 1, 1, "", "ParameterDict"], [1430, 1, 1, "", "ParameterList"], [1431, 1, 1, "", "PixelShuffle"], [1432, 1, 1, "", "PixelUnshuffle"], [1433, 1, 1, "", "PoissonNLLLoss"], [1434, 1, 1, "", "RNN"], [1435, 1, 1, "", "RNNBase"], [1436, 1, 1, "", "RNNCell"], [1437, 1, 1, "", "RReLU"], [1438, 1, 1, "", "ReLU"], [1439, 1, 1, "", "ReLU6"], [1440, 1, 1, "", "ReflectionPad1d"], [1441, 1, 1, "", "ReflectionPad2d"], [1442, 1, 1, "", "ReflectionPad3d"], [1443, 1, 1, "", "ReplicationPad1d"], [1444, 1, 1, "", "ReplicationPad2d"], [1445, 1, 1, "", "ReplicationPad3d"], [1446, 1, 1, "", "SELU"], [1447, 1, 1, "", "Sequential"], [1448, 1, 1, "", "SiLU"], [1449, 1, 1, "", "Sigmoid"], [1450, 1, 1, "", "SmoothL1Loss"], [1451, 1, 1, "", "SoftMarginLoss"], [1452, 1, 1, "", "Softmax"], [1453, 1, 1, "", "Softmax2d"], [1454, 1, 1, "", "Softmin"], [1455, 1, 1, "", "Softplus"], [1456, 1, 1, "", "Softshrink"], [1457, 1, 1, "", "Softsign"], [1458, 1, 1, "", "SyncBatchNorm"], [1459, 1, 1, "", "Tanh"], [1460, 1, 1, "", "Tanhshrink"], [1461, 1, 1, "", "Threshold"], [1462, 1, 1, "", "Transformer"], [1463, 1, 1, "", "TransformerDecoder"], [1464, 1, 1, "", "TransformerDecoderLayer"], [1465, 1, 1, "", "TransformerEncoder"], [1466, 1, 1, "", "TransformerEncoderLayer"], [1467, 1, 1, "", "TripletMarginLoss"], [1468, 1, 1, "", "TripletMarginWithDistanceLoss"], [1469, 1, 1, "", "Unflatten"], [1470, 1, 1, "", "Unfold"], [1471, 1, 1, "", "Upsample"], [1472, 1, 1, "", "UpsamplingBilinear2d"], [1473, 1, 1, "", "UpsamplingNearest2d"], [1474, 1, 1, "", "ZeroPad1d"], [1475, 1, 1, "", "ZeroPad2d"], [1476, 1, 1, "", "ZeroPad3d"], [1876, 0, 0, "-", "backends"], [1908, 0, 0, "-", "intrinsic"], [1876, 0, 0, "-", "modules"], [1876, 0, 0, "-", "parallel"], [1908, 0, 0, "-", "qat"], [1908, 0, 0, "-", "quantizable"], [1908, 0, 0, "-", "quantized"], [1876, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1327, 3, 1, "", "log_prob"], [1327, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1362, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1363, 3, 1, "", "forward"], [1363, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1392, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1393, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1394, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1395, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1396, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1397, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1398, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1399, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1400, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1401, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1402, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1403, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1404, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1419, 3, 1, "", "add_module"], [1419, 3, 1, "", "apply"], [1419, 3, 1, "", "bfloat16"], [1419, 3, 1, "", "buffers"], [1419, 3, 1, "", "children"], [1419, 3, 1, "", "compile"], [1419, 3, 1, "", "cpu"], [1419, 3, 1, "", "cuda"], [1419, 3, 1, "", "double"], [1419, 3, 1, "", "eval"], [1419, 3, 1, "", "extra_repr"], [1419, 3, 1, "", "float"], [1419, 3, 1, "", "forward"], [1419, 3, 1, "", "get_buffer"], [1419, 3, 1, "", "get_extra_state"], [1419, 3, 1, "", "get_parameter"], [1419, 3, 1, "", "get_submodule"], [1419, 3, 1, "", "half"], [1419, 3, 1, "", "ipu"], [1419, 3, 1, "", "load_state_dict"], [1419, 3, 1, "", "modules"], [1419, 3, 1, "", "named_buffers"], [1419, 3, 1, "", "named_children"], [1419, 3, 1, "", "named_modules"], [1419, 3, 1, "", "named_parameters"], [1419, 3, 1, "", "parameters"], [1419, 3, 1, "", "register_backward_hook"], [1419, 3, 1, "", "register_buffer"], [1419, 3, 1, "", "register_forward_hook"], [1419, 3, 1, "", "register_forward_pre_hook"], [1419, 3, 1, "", "register_full_backward_hook"], [1419, 3, 1, "", "register_full_backward_pre_hook"], [1419, 3, 1, "", "register_load_state_dict_post_hook"], [1419, 3, 1, "", "register_module"], [1419, 3, 1, "", "register_parameter"], [1419, 3, 1, "", "register_state_dict_pre_hook"], [1419, 3, 1, "", "requires_grad_"], [1419, 3, 1, "", "set_extra_state"], [1419, 3, 1, "", "share_memory"], [1419, 3, 1, "", "state_dict"], [1419, 3, 1, "", "to"], [1419, 3, 1, "", "to_empty"], [1419, 3, 1, "", "train"], [1419, 3, 1, "", "type"], [1419, 3, 1, "", "xpu"], [1419, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1420, 3, 1, "", "clear"], [1420, 3, 1, "", "items"], [1420, 3, 1, "", "keys"], [1420, 3, 1, "", "pop"], [1420, 3, 1, "", "update"], [1420, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1421, 3, 1, "", "append"], [1421, 3, 1, "", "extend"], [1421, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1425, 3, 1, "", "forward"], [1425, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1429, 3, 1, "", "clear"], [1429, 3, 1, "", "copy"], [1429, 3, 1, "", "fromkeys"], [1429, 3, 1, "", "get"], [1429, 3, 1, "", "items"], [1429, 3, 1, "", "keys"], [1429, 3, 1, "", "pop"], [1429, 3, 1, "", "popitem"], [1429, 3, 1, "", "setdefault"], [1429, 3, 1, "", "update"], [1429, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1430, 3, 1, "", "append"], [1430, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1435, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1447, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1458, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1462, 3, 1, "", "forward"], [1462, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1463, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1464, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1465, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1466, 3, 1, "", "forward"]], "torch.nn.functional": [[1477, 5, 1, "", "adaptive_avg_pool1d"], [1478, 5, 1, "", "adaptive_avg_pool2d"], [1479, 5, 1, "", "adaptive_avg_pool3d"], [1480, 5, 1, "", "adaptive_max_pool1d"], [1481, 5, 1, "", "adaptive_max_pool2d"], [1482, 5, 1, "", "adaptive_max_pool3d"], [1483, 5, 1, "", "affine_grid"], [1484, 5, 1, "", "alpha_dropout"], [1485, 5, 1, "", "avg_pool1d"], [1486, 5, 1, "", "avg_pool2d"], [1487, 5, 1, "", "avg_pool3d"], [1488, 5, 1, "", "batch_norm"], [1489, 5, 1, "", "bilinear"], [1490, 5, 1, "", "binary_cross_entropy"], [1491, 5, 1, "", "binary_cross_entropy_with_logits"], [1492, 5, 1, "", "celu"], [1493, 5, 1, "", "conv1d"], [1494, 5, 1, "", "conv2d"], [1495, 5, 1, "", "conv3d"], [1496, 5, 1, "", "conv_transpose1d"], [1497, 5, 1, "", "conv_transpose2d"], [1498, 5, 1, "", "conv_transpose3d"], [1499, 5, 1, "", "cosine_embedding_loss"], [1500, 5, 1, "", "cosine_similarity"], [1501, 5, 1, "", "cross_entropy"], [1502, 5, 1, "", "ctc_loss"], [1503, 5, 1, "", "dropout"], [1504, 5, 1, "", "dropout1d"], [1505, 5, 1, "", "dropout2d"], [1506, 5, 1, "", "dropout3d"], [1507, 5, 1, "", "elu"], [1508, 5, 1, "", "elu_"], [1509, 5, 1, "", "embedding"], [1510, 5, 1, "", "embedding_bag"], [1511, 5, 1, "", "feature_alpha_dropout"], [1512, 5, 1, "", "fold"], [1513, 5, 1, "", "fractional_max_pool2d"], [1514, 5, 1, "", "fractional_max_pool3d"], [1515, 5, 1, "", "gaussian_nll_loss"], [1516, 5, 1, "", "gelu"], [1517, 5, 1, "", "glu"], [1518, 5, 1, "", "grid_sample"], [1519, 5, 1, "", "group_norm"], [1520, 5, 1, "", "gumbel_softmax"], [1521, 5, 1, "", "hardshrink"], [1522, 5, 1, "", "hardsigmoid"], [1523, 5, 1, "", "hardswish"], [1524, 5, 1, "", "hardtanh"], [1525, 5, 1, "", "hardtanh_"], [1526, 5, 1, "", "hinge_embedding_loss"], [1527, 5, 1, "", "huber_loss"], [1528, 5, 1, "", "instance_norm"], [1529, 5, 1, "", "interpolate"], [1530, 5, 1, "", "kl_div"], [1531, 5, 1, "", "l1_loss"], [1532, 5, 1, "", "layer_norm"], [1533, 5, 1, "", "leaky_relu"], [1534, 5, 1, "", "leaky_relu_"], [1535, 5, 1, "", "linear"], [1536, 5, 1, "", "local_response_norm"], [1537, 5, 1, "", "log_softmax"], [1538, 5, 1, "", "logsigmoid"], [1539, 5, 1, "", "lp_pool1d"], [1540, 5, 1, "", "lp_pool2d"], [1541, 5, 1, "", "margin_ranking_loss"], [1542, 5, 1, "", "max_pool1d"], [1543, 5, 1, "", "max_pool2d"], [1544, 5, 1, "", "max_pool3d"], [1545, 5, 1, "", "max_unpool1d"], [1546, 5, 1, "", "max_unpool2d"], [1547, 5, 1, "", "max_unpool3d"], [1548, 5, 1, "", "mish"], [1549, 5, 1, "", "mse_loss"], [1550, 5, 1, "", "multi_margin_loss"], [1551, 5, 1, "", "multilabel_margin_loss"], [1552, 5, 1, "", "multilabel_soft_margin_loss"], [1553, 5, 1, "", "nll_loss"], [1554, 5, 1, "", "normalize"], [1555, 5, 1, "", "one_hot"], [1556, 5, 1, "", "pad"], [1557, 5, 1, "", "pairwise_distance"], [1558, 5, 1, "", "pdist"], [1559, 5, 1, "", "pixel_shuffle"], [1560, 5, 1, "", "pixel_unshuffle"], [1561, 5, 1, "", "poisson_nll_loss"], [1562, 5, 1, "", "prelu"], [1563, 5, 1, "", "relu"], [1564, 5, 1, "", "relu6"], [1565, 5, 1, "", "relu_"], [1566, 5, 1, "", "rrelu"], [1567, 5, 1, "", "rrelu_"], [1568, 5, 1, "", "scaled_dot_product_attention"], [1569, 5, 1, "", "selu"], [1570, 5, 1, "", "sigmoid"], [1571, 5, 1, "", "silu"], [1572, 5, 1, "", "smooth_l1_loss"], [1573, 5, 1, "", "soft_margin_loss"], [1574, 5, 1, "", "softmax"], [1575, 5, 1, "", "softmin"], [1576, 5, 1, "", "softplus"], [1577, 5, 1, "", "softshrink"], [1578, 5, 1, "", "softsign"], [1579, 5, 1, "", "tanh"], [1580, 5, 1, "", "tanhshrink"], [1581, 5, 1, "", "threshold"], [1582, 5, 1, "", "threshold_"], [1584, 5, 1, "", "triplet_margin_loss"], [1585, 5, 1, "", "triplet_margin_with_distance_loss"], [1586, 5, 1, "", "unfold"], [1587, 5, 1, "", "upsample"], [1588, 5, 1, "", "upsample_bilinear"], [1589, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1878, 5, 1, "", "calculate_gain"], [1878, 5, 1, "", "constant_"], [1878, 5, 1, "", "dirac_"], [1878, 5, 1, "", "eye_"], [1878, 5, 1, "", "kaiming_normal_"], [1878, 5, 1, "", "kaiming_uniform_"], [1878, 5, 1, "", "normal_"], [1878, 5, 1, "", "ones_"], [1878, 5, 1, "", "orthogonal_"], [1878, 5, 1, "", "sparse_"], [1878, 5, 1, "", "trunc_normal_"], [1878, 5, 1, "", "uniform_"], [1878, 5, 1, "", "xavier_normal_"], [1878, 5, 1, "", "xavier_uniform_"], [1878, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1908, 0, 0, "-", "modules"], [1908, 0, 0, "-", "qat"], [1908, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1908, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1908, 0, 0, "-", "dynamic"], [1908, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1908, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1590, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1590, 3, 1, "", "has_uninitialized_params"], [1590, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1591, 5, 1, "", "register_module_backward_hook"], [1592, 5, 1, "", "register_module_buffer_registration_hook"], [1593, 5, 1, "", "register_module_forward_hook"], [1594, 5, 1, "", "register_module_forward_pre_hook"], [1595, 5, 1, "", "register_module_full_backward_hook"], [1596, 5, 1, "", "register_module_full_backward_pre_hook"], [1597, 5, 1, "", "register_module_module_registration_hook"], [1598, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1599, 1, 1, "", "DistributedDataParallel"], [1583, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1599, 3, 1, "", "join"], [1599, 3, 1, "", "join_hook"], [1599, 3, 1, "", "no_sync"], [1599, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1600, 1, 1, "", "Parameter"], [1601, 1, 1, "", "UninitializedBuffer"], [1602, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1602, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1908, 0, 0, "-", "dynamic"], [1908, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1908, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1908, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1908, 0, 0, "-", "dynamic"], [1908, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1908, 0, 0, "-", "modules"]], "torch.nn.utils": [[1603, 5, 1, "", "clip_grad_norm_"], [1604, 5, 1, "", "clip_grad_value_"], [1605, 5, 1, "", "parameters_to_vector"], [1630, 5, 1, "", "remove_spectral_norm"], [1631, 5, 1, "", "remove_weight_norm"], [1639, 5, 1, "", "skip_init"], [1640, 5, 1, "", "spectral_norm"], [1876, 0, 0, "-", "stateless"], [1642, 5, 1, "", "vector_to_parameters"], [1643, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1606, 5, 1, "", "orthogonal"], [1607, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1608, 1, 1, "", "ParametrizationList"], [1609, 5, 1, "", "cached"], [1610, 5, 1, "", "is_parametrized"], [1611, 5, 1, "", "register_parametrization"], [1612, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1608, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1613, 1, 1, "", "BasePruningMethod"], [1614, 1, 1, "", "CustomFromMask"], [1615, 1, 1, "", "Identity"], [1616, 1, 1, "", "L1Unstructured"], [1617, 1, 1, "", "LnStructured"], [1618, 1, 1, "", "PruningContainer"], [1619, 1, 1, "", "RandomStructured"], [1620, 1, 1, "", "RandomUnstructured"], [1621, 5, 1, "", "custom_from_mask"], [1622, 5, 1, "", "global_unstructured"], [1623, 5, 1, "", "identity"], [1624, 5, 1, "", "is_pruned"], [1625, 5, 1, "", "l1_unstructured"], [1626, 5, 1, "", "ln_structured"], [1627, 5, 1, "", "random_structured"], [1628, 5, 1, "", "random_unstructured"], [1629, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1613, 3, 1, "", "apply"], [1613, 3, 1, "", "apply_mask"], [1613, 3, 1, "", "compute_mask"], [1613, 3, 1, "", "prune"], [1613, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1614, 3, 1, "", "apply"], [1614, 3, 1, "", "apply_mask"], [1614, 3, 1, "", "prune"], [1614, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1615, 3, 1, "", "apply"], [1615, 3, 1, "", "apply_mask"], [1615, 3, 1, "", "prune"], [1615, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1616, 3, 1, "", "apply"], [1616, 3, 1, "", "apply_mask"], [1616, 3, 1, "", "prune"], [1616, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1617, 3, 1, "", "apply"], [1617, 3, 1, "", "apply_mask"], [1617, 3, 1, "", "compute_mask"], [1617, 3, 1, "", "prune"], [1617, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1618, 3, 1, "", "add_pruning_method"], [1618, 3, 1, "", "apply"], [1618, 3, 1, "", "apply_mask"], [1618, 3, 1, "", "compute_mask"], [1618, 3, 1, "", "prune"], [1618, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1619, 3, 1, "", "apply"], [1619, 3, 1, "", "apply_mask"], [1619, 3, 1, "", "compute_mask"], [1619, 3, 1, "", "prune"], [1619, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1620, 3, 1, "", "apply"], [1620, 3, 1, "", "apply_mask"], [1620, 3, 1, "", "prune"], [1620, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1632, 1, 1, "", "PackedSequence"], [1633, 5, 1, "", "pack_padded_sequence"], [1634, 5, 1, "", "pack_sequence"], [1635, 5, 1, "", "pad_packed_sequence"], [1636, 5, 1, "", "pad_sequence"], [1637, 5, 1, "", "unpack_sequence"], [1638, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1632, 2, 1, "", "batch_sizes"], [1632, 3, 1, "", "count"], [1632, 2, 1, "", "data"], [1632, 3, 1, "", "index"], [1632, 4, 1, "", "is_cuda"], [1632, 3, 1, "", "is_pinned"], [1632, 2, 1, "", "sorted_indices"], [1632, 3, 1, "", "to"], [1632, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1641, 5, 1, "", "functional_call"]], "torch.onnx": [[1652, 1, 1, "", "ExportOptions"], [1653, 1, 1, "", "ExportOutput"], [1654, 1, 1, "", "ExportOutputSerializer"], [1655, 1, 1, "", "JitScalarType"], [1898, 5, 1, "", "disable_log"], [1898, 5, 1, "", "dynamo_export"], [1898, 5, 1, "", "enable_log"], [1898, 5, 1, "", "export"], [1898, 5, 1, "", "export_to_pretty_string"], [1898, 5, 1, "", "is_in_onnx_export"], [1898, 5, 1, "", "register_custom_op_symbolic"], [1898, 5, 1, "", "select_model_mode_for_export"], [1898, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1653, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1653, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1653, 4, 1, "", "diagnostic_context"], [1653, 4, 1, "", "model_proto"], [1653, 3, 1, "", "save"]], "torch.onnx.ExportOutputSerializer": [[1654, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1655, 3, 1, "", "dtype"], [1655, 3, 1, "", "from_dtype"], [1655, 3, 1, "", "from_value"], [1655, 3, 1, "", "onnx_compatible"], [1655, 3, 1, "", "onnx_type"], [1655, 3, 1, "", "scalar_name"], [1655, 3, 1, "", "torch_name"]], "torch.onnx._internal": [[1899, 0, 0, "-", "diagnostics"]], "torch.onnx._internal.diagnostics": [[1899, 1, 1, "", "ExportDiagnostic"]], "torch.onnx._internal.diagnostics.ExportDiagnostic": [[1899, 3, 1, "", "record_cpp_call_stack"]], "torch.onnx.verification": [[1656, 1, 1, "", "GraphInfo"], [1657, 1, 1, "", "VerificationOptions"], [1898, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1656, 3, 1, "", "all_mismatch_leaf_graph_info"], [1656, 3, 1, "", "clear"], [1656, 3, 1, "", "essential_node_count"], [1656, 3, 1, "", "essential_node_kinds"], [1656, 3, 1, "", "export_repro"], [1656, 3, 1, "", "find_mismatch"], [1656, 3, 1, "", "find_partition"], [1656, 3, 1, "", "has_mismatch"], [1656, 3, 1, "", "pretty_print_mismatch"], [1656, 3, 1, "", "pretty_print_tree"], [1656, 3, 1, "", "verify_export"]], "torch.optim": [[1658, 1, 1, "", "ASGD"], [1659, 1, 1, "", "Adadelta"], [1660, 1, 1, "", "Adagrad"], [1661, 1, 1, "", "Adam"], [1662, 1, 1, "", "AdamW"], [1663, 1, 1, "", "Adamax"], [1664, 1, 1, "", "LBFGS"], [1665, 1, 1, "", "NAdam"], [1901, 1, 1, "", "Optimizer"], [1671, 1, 1, "", "RAdam"], [1672, 1, 1, "", "RMSprop"], [1673, 1, 1, "", "Rprop"], [1674, 1, 1, "", "SGD"], [1675, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1658, 3, 1, "", "add_param_group"], [1658, 3, 1, "", "load_state_dict"], [1658, 3, 1, "", "register_step_post_hook"], [1658, 3, 1, "", "register_step_pre_hook"], [1658, 3, 1, "", "state_dict"], [1658, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1659, 3, 1, "", "add_param_group"], [1659, 3, 1, "", "load_state_dict"], [1659, 3, 1, "", "register_step_post_hook"], [1659, 3, 1, "", "register_step_pre_hook"], [1659, 3, 1, "", "state_dict"], [1659, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1660, 3, 1, "", "add_param_group"], [1660, 3, 1, "", "load_state_dict"], [1660, 3, 1, "", "register_step_post_hook"], [1660, 3, 1, "", "register_step_pre_hook"], [1660, 3, 1, "", "state_dict"], [1660, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1661, 3, 1, "", "add_param_group"], [1661, 3, 1, "", "load_state_dict"], [1661, 3, 1, "", "register_step_post_hook"], [1661, 3, 1, "", "register_step_pre_hook"], [1661, 3, 1, "", "state_dict"], [1661, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1662, 3, 1, "", "add_param_group"], [1662, 3, 1, "", "load_state_dict"], [1662, 3, 1, "", "register_step_post_hook"], [1662, 3, 1, "", "register_step_pre_hook"], [1662, 3, 1, "", "state_dict"], [1662, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1663, 3, 1, "", "add_param_group"], [1663, 3, 1, "", "load_state_dict"], [1663, 3, 1, "", "register_step_post_hook"], [1663, 3, 1, "", "register_step_pre_hook"], [1663, 3, 1, "", "state_dict"], [1663, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1664, 3, 1, "", "add_param_group"], [1664, 3, 1, "", "load_state_dict"], [1664, 3, 1, "", "register_step_post_hook"], [1664, 3, 1, "", "register_step_pre_hook"], [1664, 3, 1, "", "state_dict"], [1664, 3, 1, "", "step"], [1664, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1665, 3, 1, "", "add_param_group"], [1665, 3, 1, "", "load_state_dict"], [1665, 3, 1, "", "register_step_post_hook"], [1665, 3, 1, "", "register_step_pre_hook"], [1665, 3, 1, "", "state_dict"], [1665, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1666, 3, 1, "", "add_param_group"], [1667, 3, 1, "", "load_state_dict"], [1668, 3, 1, "", "state_dict"], [1669, 3, 1, "", "step"], [1670, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1671, 3, 1, "", "add_param_group"], [1671, 3, 1, "", "load_state_dict"], [1671, 3, 1, "", "register_step_post_hook"], [1671, 3, 1, "", "register_step_pre_hook"], [1671, 3, 1, "", "state_dict"], [1671, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1672, 3, 1, "", "add_param_group"], [1672, 3, 1, "", "load_state_dict"], [1672, 3, 1, "", "register_step_post_hook"], [1672, 3, 1, "", "register_step_pre_hook"], [1672, 3, 1, "", "state_dict"], [1672, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1673, 3, 1, "", "add_param_group"], [1673, 3, 1, "", "load_state_dict"], [1673, 3, 1, "", "register_step_post_hook"], [1673, 3, 1, "", "register_step_pre_hook"], [1673, 3, 1, "", "state_dict"], [1673, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1674, 3, 1, "", "add_param_group"], [1674, 3, 1, "", "load_state_dict"], [1674, 3, 1, "", "register_step_post_hook"], [1674, 3, 1, "", "register_step_pre_hook"], [1674, 3, 1, "", "state_dict"], [1674, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1675, 3, 1, "", "add_param_group"], [1675, 3, 1, "", "load_state_dict"], [1675, 3, 1, "", "register_step_post_hook"], [1675, 3, 1, "", "register_step_pre_hook"], [1675, 3, 1, "", "state_dict"], [1675, 3, 1, "", "step"], [1675, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1676, 1, 1, "", "ChainedScheduler"], [1677, 1, 1, "", "ConstantLR"], [1678, 1, 1, "", "CosineAnnealingLR"], [1679, 1, 1, "", "CosineAnnealingWarmRestarts"], [1680, 1, 1, "", "CyclicLR"], [1681, 1, 1, "", "ExponentialLR"], [1682, 1, 1, "", "LambdaLR"], [1683, 1, 1, "", "LinearLR"], [1684, 1, 1, "", "MultiStepLR"], [1685, 1, 1, "", "MultiplicativeLR"], [1686, 1, 1, "", "OneCycleLR"], [1687, 1, 1, "", "PolynomialLR"], [1688, 1, 1, "", "ReduceLROnPlateau"], [1689, 1, 1, "", "SequentialLR"], [1690, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1676, 3, 1, "", "get_last_lr"], [1676, 3, 1, "", "load_state_dict"], [1676, 3, 1, "", "print_lr"], [1676, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1677, 3, 1, "", "get_last_lr"], [1677, 3, 1, "", "load_state_dict"], [1677, 3, 1, "", "print_lr"], [1677, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1678, 3, 1, "", "get_last_lr"], [1678, 3, 1, "", "load_state_dict"], [1678, 3, 1, "", "print_lr"], [1678, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1679, 3, 1, "", "get_last_lr"], [1679, 3, 1, "", "load_state_dict"], [1679, 3, 1, "", "print_lr"], [1679, 3, 1, "", "state_dict"], [1679, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1680, 3, 1, "", "get_last_lr"], [1680, 3, 1, "", "get_lr"], [1680, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1681, 3, 1, "", "get_last_lr"], [1681, 3, 1, "", "load_state_dict"], [1681, 3, 1, "", "print_lr"], [1681, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1682, 3, 1, "", "get_last_lr"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "print_lr"], [1682, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1683, 3, 1, "", "get_last_lr"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "print_lr"], [1683, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1684, 3, 1, "", "get_last_lr"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "print_lr"], [1684, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1685, 3, 1, "", "get_last_lr"], [1685, 3, 1, "", "load_state_dict"], [1685, 3, 1, "", "print_lr"], [1685, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1686, 3, 1, "", "get_last_lr"], [1686, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "print_lr"], [1686, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1687, 3, 1, "", "get_last_lr"], [1687, 3, 1, "", "load_state_dict"], [1687, 3, 1, "", "print_lr"], [1687, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1689, 3, 1, "", "get_last_lr"], [1689, 3, 1, "", "load_state_dict"], [1689, 3, 1, "", "print_lr"], [1689, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1690, 3, 1, "", "get_last_lr"], [1690, 3, 1, "", "load_state_dict"], [1690, 3, 1, "", "print_lr"], [1690, 3, 1, "", "state_dict"]], "torch.overrides": [[1925, 5, 1, "", "get_ignored_functions"], [1925, 5, 1, "", "get_overridable_functions"], [1925, 5, 1, "", "get_testing_overrides"], [1925, 5, 1, "", "handle_torch_function"], [1925, 5, 1, "", "has_torch_function"], [1925, 5, 1, "", "is_tensor_like"], [1925, 5, 1, "", "is_tensor_method_or_property"], [1925, 5, 1, "", "resolve_name"], [1925, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1902, 1, 1, "", "Directory"], [1902, 1, 1, "", "EmptyMatchError"], [1902, 1, 1, "", "PackageExporter"], [1902, 1, 1, "", "PackageImporter"], [1902, 1, 1, "", "PackagingError"], [1902, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1902, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1902, 3, 1, "", "__init__"], [1902, 3, 1, "", "add_dependency"], [1902, 3, 1, "", "all_paths"], [1902, 3, 1, "", "close"], [1902, 3, 1, "", "denied_modules"], [1902, 3, 1, "", "deny"], [1902, 3, 1, "", "dependency_graph_string"], [1902, 3, 1, "", "extern"], [1902, 3, 1, "", "externed_modules"], [1902, 3, 1, "", "get_rdeps"], [1902, 3, 1, "", "get_unique_id"], [1902, 3, 1, "", "intern"], [1902, 3, 1, "", "interned_modules"], [1902, 3, 1, "", "mock"], [1902, 3, 1, "", "mocked_modules"], [1902, 3, 1, "", "register_extern_hook"], [1902, 3, 1, "", "register_intern_hook"], [1902, 3, 1, "", "register_mock_hook"], [1902, 3, 1, "", "save_binary"], [1902, 3, 1, "", "save_module"], [1902, 3, 1, "", "save_pickle"], [1902, 3, 1, "", "save_source_file"], [1902, 3, 1, "", "save_source_string"], [1902, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1902, 3, 1, "", "__init__"], [1902, 3, 1, "", "file_structure"], [1902, 3, 1, "", "id"], [1902, 3, 1, "", "import_module"], [1902, 3, 1, "", "load_binary"], [1902, 3, 1, "", "load_pickle"], [1902, 3, 1, "", "load_text"], [1902, 3, 1, "", "python_version"]], "torch.profiler": [[1904, 1, 1, "", "ProfilerAction"], [1904, 1, 1, "", "ProfilerActivity"], [1904, 1, 1, "", "_KinetoProfile"], [1904, 1, 1, "", "profile"], [1904, 5, 1, "", "schedule"], [1904, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1904, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1904, 3, 1, "", "add_metadata"], [1904, 3, 1, "", "add_metadata_json"], [1904, 3, 1, "", "events"], [1904, 3, 1, "", "export_chrome_trace"], [1904, 3, 1, "", "export_memory_timeline"], [1904, 3, 1, "", "export_stacks"], [1904, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1904, 5, 1, "", "is_available"], [1904, 5, 1, "", "mark"], [1904, 5, 1, "", "range_pop"], [1904, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1904, 3, 1, "", "step"]], "torch.quantization": [[1908, 0, 0, "-", "fx"]], "torch.quasirandom": [[1711, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1711, 3, 1, "", "draw"], [1711, 3, 1, "", "draw_base2"], [1711, 3, 1, "", "fast_forward"], [1711, 3, 1, "", "reset"]], "torch.random": [[1909, 5, 1, "", "fork_rng"], [1909, 5, 1, "", "get_rng_state"], [1909, 5, 1, "", "initial_seed"], [1909, 5, 1, "", "manual_seed"], [1909, 5, 1, "", "seed"], [1909, 5, 1, "", "set_rng_state"]], "torch.signal": [[1913, 0, 0, "-", "windows"]], "torch.signal.windows": [[1759, 5, 1, "", "bartlett"], [1760, 5, 1, "", "blackman"], [1761, 5, 1, "", "cosine"], [1762, 5, 1, "", "exponential"], [1763, 5, 1, "", "gaussian"], [1764, 5, 1, "", "general_cosine"], [1765, 5, 1, "", "general_hamming"], [1766, 5, 1, "", "hamming"], [1767, 5, 1, "", "hann"], [1768, 5, 1, "", "kaiser"], [1769, 5, 1, "", "nuttall"]], "torch.sparse": [[1779, 5, 1, "", "addmm"], [1780, 1, 1, "", "check_sparse_tensor_invariants"], [1781, 5, 1, "", "log_softmax"], [1782, 5, 1, "", "mm"], [1783, 5, 1, "", "sampled_addmm"], [1784, 5, 1, "", "softmax"], [1785, 5, 1, "", "spdiags"], [1786, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1780, 3, 1, "", "disable"], [1780, 3, 1, "", "enable"], [1780, 3, 1, "", "is_enabled"]], "torch.special": [[1915, 5, 1, "", "airy_ai"], [1915, 5, 1, "", "bessel_j0"], [1915, 5, 1, "", "bessel_j1"], [1915, 5, 1, "", "digamma"], [1915, 5, 1, "", "entr"], [1915, 5, 1, "", "erf"], [1915, 5, 1, "", "erfc"], [1915, 5, 1, "", "erfcx"], [1915, 5, 1, "", "erfinv"], [1915, 5, 1, "", "exp2"], [1915, 5, 1, "", "expit"], [1915, 5, 1, "", "expm1"], [1915, 5, 1, "", "gammainc"], [1915, 5, 1, "", "gammaincc"], [1915, 5, 1, "", "gammaln"], [1915, 5, 1, "", "i0"], [1915, 5, 1, "", "i0e"], [1915, 5, 1, "", "i1"], [1915, 5, 1, "", "i1e"], [1915, 5, 1, "", "log1p"], [1915, 5, 1, "", "log_ndtr"], [1915, 5, 1, "", "log_softmax"], [1915, 5, 1, "", "logit"], [1915, 5, 1, "", "logsumexp"], [1915, 5, 1, "", "multigammaln"], [1915, 5, 1, "", "ndtr"], [1915, 5, 1, "", "ndtri"], [1915, 5, 1, "", "polygamma"], [1915, 5, 1, "", "psi"], [1915, 5, 1, "", "round"], [1915, 5, 1, "", "scaled_modified_bessel_k0"], [1915, 5, 1, "", "scaled_modified_bessel_k1"], [1915, 5, 1, "", "sinc"], [1915, 5, 1, "", "softmax"], [1915, 5, 1, "", "spherical_bessel_j0"], [1915, 5, 1, "", "xlog1py"], [1915, 5, 1, "", "xlogy"], [1915, 5, 1, "", "zeta"]], "torch.testing": [[1921, 5, 1, "", "assert_allclose"], [1921, 5, 1, "", "assert_close"], [1921, 5, 1, "", "make_tensor"]], "torch.torch": [[1922, 2, 1, "", "default_generator"], [1926, 1, 1, "", "finfo"], [1926, 1, 1, "", "iinfo"]], "torch.utils": [[1922, 0, 0, "-", "backcompat"], [4, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "bottleneck"], [35, 0, 0, "-", "data"], [1922, 0, 0, "-", "hipify"], [1863, 0, 0, "-", "jit"], [1922, 0, 0, "-", "model_dump"], [1869, 0, 0, "-", "model_zoo"], [1919, 0, 0, "-", "tensorboard"]], "torch.utils.benchmark": [[4, 1, 1, "", "CallgrindStats"], [4, 1, 1, "", "FunctionCounts"], [4, 1, 1, "", "Measurement"], [4, 1, 1, "", "Timer"], [4, 0, 0, "-", "examples"], [4, 0, 0, "-", "op_fuzzers"], [4, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[4, 3, 1, "", "as_standardized"], [4, 3, 1, "", "counts"], [4, 3, 1, "", "delta"], [4, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[4, 3, 1, "", "denoise"], [4, 3, 1, "", "filter"], [4, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[4, 3, 1, "", "merge"], [4, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[4, 3, 1, "", "blocked_autorange"], [4, 3, 1, "", "collect_callgrind"], [4, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[4, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[6, 5, 1, "", "checkpoint"], [6, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[29, 5, 1, "", "BuildExtension"], [29, 5, 1, "", "CUDAExtension"], [29, 5, 1, "", "CppExtension"], [29, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [29, 5, 1, "", "include_paths"], [29, 5, 1, "", "is_ninja_available"], [29, 5, 1, "", "load"], [29, 5, 1, "", "load_inline"], [29, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[35, 1, 1, "", "BatchSampler"], [35, 1, 1, "", "ChainDataset"], [35, 1, 1, "", "ConcatDataset"], [35, 1, 1, "", "DataLoader"], [35, 1, 1, "", "Dataset"], [35, 1, 1, "", "IterableDataset"], [35, 1, 1, "", "RandomSampler"], [35, 1, 1, "", "Sampler"], [35, 1, 1, "", "SequentialSampler"], [35, 1, 1, "", "Subset"], [35, 1, 1, "", "SubsetRandomSampler"], [35, 1, 1, "", "TensorDataset"], [35, 1, 1, "", "WeightedRandomSampler"], [35, 0, 0, "-", "datapipes"], [35, 5, 1, "", "default_collate"], [35, 5, 1, "", "default_convert"], [35, 5, 1, "", "get_worker_info"], [35, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[35, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[35, 0, 0, "-", "dataframe"], [35, 0, 0, "-", "iter"], [35, 0, 0, "-", "map"], [35, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[35, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[45, 5, 1, "", "from_dlpack"], [45, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1868, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1869, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1919, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1919, 3, 1, "", "__init__"], [1919, 3, 1, "", "add_audio"], [1919, 3, 1, "", "add_custom_scalars"], [1919, 3, 1, "", "add_embedding"], [1919, 3, 1, "", "add_figure"], [1919, 3, 1, "", "add_graph"], [1919, 3, 1, "", "add_histogram"], [1919, 3, 1, "", "add_hparams"], [1919, 3, 1, "", "add_image"], [1919, 3, 1, "", "add_images"], [1919, 3, 1, "", "add_mesh"], [1919, 3, 1, "", "add_pr_curve"], [1919, 3, 1, "", "add_scalar"], [1919, 3, 1, "", "add_scalars"], [1919, 3, 1, "", "add_text"], [1919, 3, 1, "", "add_video"], [1919, 3, 1, "", "close"], [1919, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"torch": [0, 1, 2, 3, 4, 5, 6, 11, 17, 20, 24, 28, 29, 31, 35, 37, 38, 40, 41, 43, 44, 45, 56, 59, 61, 62, 64, 65, 66, 67, 68, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 965, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1603, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1666, 1667, 1668, 1669, 1670, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1883, 1885, 1886, 1889, 1894, 1896, 1898, 1899, 1901, 1902, 1904, 1908, 1909, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926], "_dynamo": [0, 24], "automat": [1, 2, 35, 1857, 1879, 1886], "mix": [1, 1857, 1879], "precis": [1, 1879, 1883, 1894], "packag": [1, 2, 30, 38, 1872, 1897, 1902], "amp": [1, 1883], "autocast": [1, 1879], "gradient": [1, 2, 66, 1140, 1879, 1880, 1886, 1922], "scale": [1, 1879, 1890], "op": [1, 1862, 1879, 1898, 1922], "refer": [1, 32, 62, 68, 1857, 1859, 1860, 1861, 1870, 1874, 1889, 1899, 1902, 1904, 1905, 1908, 1912, 1920], "elig": 1, "cuda": [1, 3, 11, 31, 32, 207, 965, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1872, 1879, 1883, 1887, 1889, 1893, 1895, 1897], "specif": [1, 35, 1914], "behavior": [1, 35, 1880, 1888], "can": [1, 22, 1880, 1887], "float16": 1, "float32": 1, "promot": [1, 8], "widest": 1, "input": [1, 1873, 1879, 1888], "type": [1, 35, 597, 1859, 1860, 1885, 1898, 1902, 1920, 1926], "prefer": 1, "binary_cross_entropy_with_logit": [1, 1491], "over": [1, 9, 1859], "binary_cross_entropi": [1, 1490], "cpu": [1, 3, 11, 204, 1880, 1882, 1905], "bfloat16": [1, 153], "differenti": [2, 1880], "autograd": [2, 11, 27, 30, 65, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 1874, 1879, 1880, 1885, 1886, 1898, 1910, 1911], "forward": [2, 884, 1885, 1911], "mode": [2, 56, 63, 411, 1292, 1880, 1885, 1888, 1898, 1905, 1911], "function": [2, 24, 38, 44, 59, 61, 62, 64, 66, 68, 75, 80, 83, 84, 883, 884, 885, 886, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 1117, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1857, 1858, 1859, 1860, 1862, 1865, 1867, 1873, 1875, 1876, 1877, 1879, 1880, 1886, 1888, 1898, 1908, 1914, 1915, 1925], "higher": 2, "level": [2, 11, 1908], "api": [2, 11, 14, 15, 30, 32, 41, 49, 62, 65, 68, 1855, 1857, 1860, 1870, 1874, 1882, 1883, 1885, 1889, 1890, 1899, 1902, 1903, 1904, 1905, 1908], "local": [2, 22, 25, 1860, 1880, 1922], "disabl": [2, 35, 1857, 1880, 1922], "comput": [2, 66, 1880, 1894, 1911, 1922], "default": [2, 35, 36, 1859, 1880, 1883, 1888, 1907], "layout": [2, 1917], "manual": 2, "In": [2, 9, 1880, 1881, 1922], "place": [2, 65, 1873, 1880, 1881, 1898, 1922], "oper": [2, 11, 15, 36, 38, 65, 85, 1859, 1860, 1865, 1867, 1873, 1874, 1875, 1880, 1885, 1890, 1897, 1898, 1900, 1905, 1914, 1920, 1922], "tensor": [2, 15, 27, 30, 43, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 1819, 1858, 1862, 1865, 1872, 1873, 1874, 1875, 1880, 1885, 1896, 1898, 1905, 1908, 1914, 1917, 1918, 1920, 1922], "correct": [2, 68, 1880], "check": [2, 22, 68, 1857, 1880, 1889], "variabl": [2, 19, 38, 56, 1857, 1859, 1860, 1883], "deprec": 2, "context": [2, 39, 53, 1911], "method": [2, 48, 49, 52, 57, 1858, 1859, 1862, 1898, 1908, 1914], "mixin": 2, "numer": [2, 1888, 1894, 1906], "profil": [2, 26, 38, 909, 910, 911, 912, 913, 1300, 1301, 1302, 1871, 1890, 1891, 1904], "anomali": 2, "detect": 2, "graph": [2, 16, 25, 26, 31, 68, 904, 905, 906, 907, 908, 995, 1857, 1880, 1883, 1905], "backend": [3, 12, 18, 26, 38, 55, 56, 1857, 1889, 1892, 1905, 1907, 1910], "cudnn": 3, "mp": [3, 11, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1871, 1892], "mkl": 3, "mkldnn": [3, 11], "openmp": 3, "opt_einsum": 3, "xeon": 3, "benchmark": [4, 1895], "util": [4, 5, 6, 11, 25, 29, 35, 38, 45, 62, 64, 1038, 1603, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1863, 1868, 1869, 1876, 1908, 1919, 1922, 1924], "bottleneck": 5, "checkpoint": [6, 36, 40], "pytorch": [7, 8, 9, 10, 11, 18, 21, 22, 26, 30, 37, 38, 65, 1855, 1857, 1858, 1862, 1880, 1883, 1885, 1895, 1896, 1898, 1903], "govern": [7, 10, 11], "build": [7, 8, 11, 1882, 1890, 1891, 1897], "ci": [7, 11], "how": [7, 15, 16, 22, 36, 63, 1854, 1880, 1885, 1901, 1902], "add": [7, 10, 74, 95, 679], "new": [7, 8, 10], "maintain": [7, 10, 11], "contribut": [8, 1898], "guid": 8, "process": [8, 10, 35, 53, 1879], "get": [8, 16, 18, 41, 1898], "start": [8, 18, 41, 53, 1301], "propos": 8, "featur": [8, 1890, 1891], "report": [8, 1887], "issu": [8, 26, 1857], "implement": [8, 15, 46, 55, 57, 1854, 1884, 1888, 1898, 1906, 1912], "fix": [8, 56, 63, 258, 1098], "bug": 8, "ad": [8, 1885, 1898], "tutori": [8, 11, 1902, 1903, 1910], "improv": [8, 1891], "document": [8, 41, 1855], "particip": 8, "onlin": 8, "discuss": 8, "submit": 8, "pull": 8, "request": 8, "open": 8, "review": 8, "code": [8, 16, 18, 68, 1857, 1883, 1902], "readabl": 8, "test": [8, 22, 1860, 1885, 1902, 1921], "case": [8, 1857], "make": [8, 10, 19, 78], "codebas": 8, "more": [8, 20, 61, 1910], "robust": 8, "triag": 8, "about": [8, 15, 1880, 1910], "sourc": [8, 1895, 1897, 1902], "develop": [8, 1855, 1898], "common": [8, 38, 68, 1890, 1905], "mistak": 8, "To": 8, "avoid": [8, 1893, 1895, 1898, 1902], "frequent": [8, 16, 1857, 1887, 1898, 1905], "ask": [8, 16, 1857, 1887, 1898, 1905], "question": [8, 16, 1857, 1887, 1898, 1905], "On": [8, 36, 1859], "python": [8, 9, 19, 65, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1895, 1898], "doc": [8, 11, 1889], "c": [8, 11, 30, 1880, 1885, 1889, 1896, 1898], "overview": [8, 12, 19, 23, 32, 68, 1899, 1902, 1904, 1914], "design": [9, 1860, 1884, 1910, 1911, 1912], "philosophi": 9, "principl": [9, 10], "1": [9, 56, 63, 1857, 1886], "usabl": 9, "perform": [9, 11, 15, 22, 26, 1891, 1896], "2": [9, 21, 22, 24, 26, 63, 1857, 1883, 1886, 1887], "simpl": [9, 1859, 1860, 1891, 1911], "easi": 9, "3": [9, 56, 63], "first": [9, 1902], "best": [9, 1883, 1893, 1905], "class": [9, 48, 68, 1857, 1859, 1860, 1862, 1898, 1901, 1902, 1920], "languag": [9, 1855, 1857, 1859, 1860, 1861], "interoper": 9, "mechan": [10, 1877, 1880, 1888], "summari": [10, 19, 1905], "modul": [10, 11, 21, 62, 64, 68, 1419, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1857, 1858, 1859, 1860, 1862, 1876, 1880, 1885, 1891, 1896, 1902, 1905], "core": [10, 11, 1856], "lead": [10, 11], "bdfl": [10, 11], "nomin": [10, 1860], "confirm": 10, "remov": [10, 1629, 1873], "The": [10, 14, 68, 1860, 1880], "re": [10, 1902], "scope": 10, "project": 10, "decis": 10, "uncontroversi": 10, "chang": [10, 16, 56, 63], "controversi": 10, "gener": [10, 31, 39, 65, 68, 86, 1881, 1886, 1895, 1905, 1906, 1922], "polici": [10, 14], "faq": [10, 1897], "respons": 11, "nn": [11, 21, 62, 64, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1603, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1859, 1860, 1876, 1877, 1878, 1880, 1883, 1885, 1896, 1908], "optim": [11, 18, 20, 42, 1666, 1667, 1668, 1669, 1670, 1879, 1880, 1901, 1910, 1911, 1922], "compil": [11, 16, 17, 20, 24, 26, 64, 947, 1855, 1883], "jit": [11, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1857, 1860, 1863], "torchscript": [11, 30, 1857, 1858, 1859, 1860, 1862, 1882, 1890, 1900, 1902], "fx": [11, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 1891, 1905, 1908, 1924], "torchdynamo": [11, 13, 16, 26, 1884, 1898], "distribut": [11, 16, 38, 40, 41, 42, 43, 44, 56, 1876, 1877, 1884, 1889, 1891, 1910, 1911], "rng": 11, "multiprocess": [11, 53, 1872, 1883, 1893, 1897], "dataload": [11, 1895], "linear": [11, 27, 726, 727, 750, 758, 775, 1124, 1406, 1535, 1876, 1877, 1894, 1914], "algebra": [11, 27, 1894, 1914], "linalg": [11, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1865, 1894], "spars": [11, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1876, 1877, 1914], "nestedtensor": 11, "nest": [11, 1875], "maskedtensor": [11, 1867], "mask": [11, 1867], "fast": [11, 59, 1888, 1911], "fourier": [11, 59], "transform": [11, 24, 25, 44, 59, 61, 62, 64, 66, 68, 1462, 1876, 1885, 1891], "fft": [11, 59, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097], "inductor": [11, 16], "gpu": [11, 38, 1876, 1877, 1879, 1887, 1903], "triton": 11, "nvfuser": 11, "amd": [11, 1894], "rocm": [11, 1889], "hip": [11, 1889], "tool": [11, 31, 1906, 1914], "c10": 11, "dispatch": 11, "onnx": [11, 76, 77, 82, 1898, 1899, 1900], "export": [11, 16, 1898, 1902], "mobil": 11, "edg": [11, 1857, 1902], "model": [11, 14, 30, 1854, 1879, 1887, 1890, 1901, 1902, 1903, 1905, 1908], "compress": [11, 1914], "window": [11, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1897, 1913], "appl": 11, "m1": 11, "powerpc": 11, "librari": [11, 1855, 1864, 1895], "xla": 11, "torchserv": 11, "torchvis": [11, 63], "torchtext": 11, "torchaudio": 11, "torchrec": 11, "torchx": 11, "torchdata": 11, "torcharrow": 11, "custom": [12, 47, 57, 68, 83, 1860, 1879, 1883, 1885, 1886, 1891, 1898, 1901, 1902, 1905], "regist": [12, 1880], "after": 12, "aotautograd": [12, 72], "exampl": [12, 50, 68, 1879, 1884, 1885, 1886, 1898, 1911], "debug": [12, 26, 36, 38, 68, 1857, 1905, 1906], "speedi": 12, "compos": [12, 61, 66], "deeper": 13, "dive": 13, "what": [13, 22, 36, 61, 63, 66, 1867, 1880, 1902], "i": [13, 15, 16, 22, 66, 1867, 1880, 1902], "guard": [13, 14, 19], "dynamo": [13, 16, 78], "do": [13, 16, 18, 1902], "dynam": [14, 15, 55, 65, 68, 1905, 1908], "shape": [14, 15, 65, 82, 1898], "motiv": [14, 15, 1867], "abridg": 14, "public": 14, "overal": [14, 15], "architectur": [14, 15], "intern": [14, 1884, 1898, 1902], "dimdynam": 14, "unback": 14, "symint": 14, "fake": 15, "relat": [15, 1908], "work": [15, 24, 35, 62, 1879, 1887, 1914], "import": [15, 56, 1854, 1897, 1902], "bit": 15, "detail": 15, "subclass": [15, 1885], "each": [15, 1902], "individu": 15, "doe": [15, 36, 1880], "convert": [15, 73, 791], "characterist": 15, "interact": [15, 24], "other": [15, 38, 1876, 1895, 1902, 1914, 1922], "resourc": [15, 1902], "you": [16, 18], "support": [16, 21, 85, 1858, 1860, 1867, 1873, 1874, 1875, 1886, 1898, 1900, 1905, 1914], "still": 16, "need": [16, 18, 1879], "whole": [16, 1883], "why": [16, 18, 61, 66, 1883, 1888, 1902, 1914], "my": [16, 22, 1854, 1880, 1887, 1902], "crash": 16, "error": [16, 26, 48, 1887, 1897, 1905, 1906], "torchinductor": [16, 22, 26], "slow": 16, "excess": [16, 26], "recompil": [16, 26], "ar": [16, 61, 66, 1854, 1880, 1902], "product": [16, 66, 1865], "speed": [16, 1897], "up": [16, 56], "am": 16, "see": [16, 1902], "speedup": 16, "break": [16, 26, 1859, 1860], "identifi": [16, 26, 1860], "caus": [16, 26], "didn": 16, "t": [16, 24, 564, 1814, 1860, 1887], "when": [16, 1860, 1880, 1885, 1898, 1905, 1914], "incorrect": 16, "result": 16, "oom": 16, "exist": 18, "anoth": [18, 1886], "wai": 18, "cach": [19, 1609, 1854, 1883, 1889], "frame": 19, "evalu": [19, 1880, 1888], "pep": 19, "523": 19, "instructiontransl": 19, "troubleshoot": [20, 26], "gotcha": [20, 1886], "learn": [20, 1901], "0": [21, 22, 24, 26], "nnmodul": 21, "hook": [21, 36, 1880, 1891], "__call__": 21, "usag": [21, 32, 41, 56, 1883, 1886, 1890, 1891, 1897], "limit": [21, 65, 68, 1854, 1886, 1898], "state_dict": [21, 1668], "dashboard": 22, "read": [22, 61, 1898], "measur": 22, "pr": 22, "affect": 22, "": [22, 63, 1902], "befor": 22, "merg": 22, "run": [22, 1854], "ani": [22, 116, 693, 1860], "technic": 23, "func": [24, 61, 62, 64, 66, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1885, 1886], "appli": 24, "d": 24, "doesn": [24, 1887], "pt": 24, "call": [24, 80, 1859, 1860, 1886], "insid": [24, 1902], "ed": 24, "workaround": 24, "us": [24, 26, 36, 38, 68, 1859, 1880, 1883, 1885, 1888, 1898, 1901, 1902, 1903, 1905, 1914], "allow_in_graph": 24, "write": [25, 57, 68, 1880, 1885, 1898], "aten": [25, 1856, 1898], "ir": [25, 74, 1856], "pass": [25, 73, 79, 1860, 1883, 1893, 1905, 1911], "One": [25, 1897], "x": 25, "none": 25, "inform": [25, 1888, 1910], "subgraph": [25, 68], "rewrit": [25, 68], "manag": [25, 31, 39, 1872, 1883, 1889, 1902], "partition": 25, "matcher": 25, "capabl": 25, "base": [25, 1901], "titl": 26, "diagnos": 26, "runtim": [26, 1882, 1887], "minifi": 26, "access": [26, 27, 1859, 1902], "torch_compile_debug": 26, "accuraci": [26, 1894, 1905, 1906], "file": [26, 38, 1872, 1902], "an": [26, 1854, 1898, 1901, 1902], "complex": [27, 949, 1880, 1888], "number": [27, 31, 56, 1880, 1882, 1887, 1895, 1922], "creat": [27, 1857, 1874], "transit": [27, 56], "from": [27, 56, 64, 68, 1854, 1873, 1897, 1898, 1902], "old": 27, "represent": 27, "real": [27, 479, 1722, 1888], "imag": [27, 308, 1157], "angl": [27, 115, 692], "ab": [27, 87, 675], "serial": [27, 1896, 1922], "__config__": 28, "cpp_extens": 29, "extend": [30, 46, 1885, 1886], "extens": [30, 31, 1885, 1890, 1897], "author": [30, 68], "random": [31, 35, 65, 1887, 1895, 1909, 1922], "commun": [31, 36, 38, 1855], "collect": [31, 38], "stream": [31, 32, 966, 1035, 1883], "event": [31, 47, 49, 963], "beta": [31, 44], "memori": [31, 35, 1883, 1887, 1889, 1891], "nvidia": [31, 1894], "nvtx": [31, 1020, 1021, 1022], "jiter": [31, 1003, 1004], "sanit": [31, 32], "prototyp": [31, 1905, 1906], "data": [35, 65, 1860, 1884, 1887, 1898, 1906, 1920], "dataset": 35, "map": [35, 1889], "style": 35, "iter": [35, 1859], "load": [35, 1194, 1258, 1854, 1896, 1902, 1905], "order": [35, 1880], "sampler": 35, "batch": [35, 63, 1894, 1901], "non": [35, 68, 1876, 1877, 1880, 1883, 1894, 1902, 1905], "collate_fn": 35, "singl": [35, 56, 1879], "multi": [35, 38, 56, 1876, 1877], "platform": 35, "pin": [35, 1883], "ddp": 36, "powersgd": 36, "state": [36, 1891, 1902], "acknowledg": [36, 1903], "deploi": 37, "ha": 37, "been": 37, "move": 37, "multipi": 37, "come": [38, 1880], "which": [38, 1880], "environ": [38, 56, 1883, 1890, 1902], "choos": 38, "network": [38, 1883, 1887, 1891], "interfac": [38, 1889], "nccl": [38, 1883], "basic": [38, 1860, 1874, 1886, 1910, 1920], "initi": [38, 1876, 1891, 1920], "tcp": 38, "share": [38, 1872, 1883, 1902, 1912], "system": [38, 1860, 1872, 1886], "post": [38, 1905], "kei": [38, 1897], "valu": [38, 608, 1859, 1860, 1894, 1907, 1912], "store": [38, 55], "group": 38, "point": [38, 1890], "synchron": [38, 1036, 1306], "asynchron": [38, 1860, 1883, 1893], "third": 38, "parti": 38, "launch": [38, 56], "spawn": [38, 1872], "applic": 38, "monitor": [38, 1870], "barrier": 38, "torch_distributed_debug": 38, "log": [38, 366, 1260, 1890], "join": [39, 1922], "elast": [41, 46, 56], "advanc": [41, 1891], "plugin": 41, "parallel": [43, 1583, 1883, 1884, 1887, 1903, 1922], "probabl": 44, "score": 44, "pathwis": 44, "deriv": [44, 1880], "exponentialfamili": 44, "bernoulli": [44, 151, 917], "binomi": 44, "categor": 44, "cauchi": 44, "chi2": 44, "continuousbernoulli": 44, "dirichlet": 44, "exponenti": [44, 1762], "fishersnedecor": 44, "gamma": 44, "geometr": 44, "gumbel": 44, "halfcauchi": 44, "halfnorm": 44, "independ": 44, "kumaraswami": 44, "lkjcholeski": 44, "laplac": 44, "lognorm": 44, "lowrankmultivariatenorm": 44, "mixturesamefamili": 44, "multinomi": [44, 417, 1309], "multivariatenorm": 44, "negativebinomi": 44, "normal": [44, 1554, 1647, 1876, 1901], "onehotcategor": 44, "pareto": 44, "poisson": [44, 1697], "relaxedbernoulli": 44, "logitrelaxedbernoulli": 44, "relaxedonehotcategor": 44, "studentt": 44, "transformeddistribut": 44, "uniform": 44, "vonmis": 44, "weibul": 44, "wishart": 44, "kl": 44, "diverg": [44, 1862], "constraint": [44, 1883], "registri": [44, 55], "dlpack": 45, "agent": 46, "server": [46, 55, 57], "concept": 46, "watchdog": 46, "launcher": 47, "rendezv": [47, 55, 56], "handler": [47, 52, 55, 1887], "metric": [47, 52], "propag": [48, 1874], "object": [49, 1902], "torchelast": 51, "kubernet": 51, "multipl": [53, 1879, 1883, 1885, 1903], "worker": [53, 56, 1887], "quickstart": 54, "except": [55, 1887], "c10d": 55, "etcd": 55, "legaci": 55, "torchrun": 56, "node": [56, 74, 77, 81, 82, 904, 905, 906, 907, 908, 1880], "stack": [56, 1798, 1905], "fault": 56, "toler": 56, "size": [56, 531, 1875], "failur": [56, 71], "min": [56, 408, 1289], "max": [56, 404, 1284], "4": [56, 63], "membership": [56, 1860], "note": [56, 1855, 1860, 1883, 1905, 1910], "definit": [56, 1860], "deploy": [56, 1890], "notic": [56, 1854], "expir": 57, "timer": 57, "client": 57, "train": [58, 1879, 1891, 1893, 1905], "script": [58, 1198, 1857, 1897, 1898], "helper": 59, "fullyshardeddataparallel": 60, "patch": [63, 1902], "norm": [63, 449, 1243, 1646], "happen": 63, "option": [63, 1859, 1882, 1897, 1901], "batchnorm": 63, "paramet": [63, 1600, 1859, 1901], "functorch": [63, 64], "eval": [63, 1880], "migrat": [64, 1857], "make_funct": 64, "combine_state_for_ensembl": 64, "ux": 65, "vmap": [65, 66, 886, 1128, 1847, 1885, 1886], "mutat": [65, 1922], "arbitrari": [65, 1902], "structur": [65, 1860], "out": [65, 1873, 1887], "depend": [65, 1902, 1911], "control": [65, 68, 1895], "flow": [65, 68, 1905], "item": [65, 349], "nonzero": [65, 448, 1645], "friend": 65, "whirlwind": 66, "tour": 66, "grad": [66, 287, 901, 1118, 1880, 1883], "auto": 66, "vector": 66, "vjp": [66, 900, 1127], "jacobian": [66, 897], "jvp": [66, 885, 898, 1123, 1886], "jacrev": [66, 1122], "jacfwd": [66, 1121], "hessian": [66, 895, 1120], "futur": 67, "A": [68, 1891], "quick": 68, "primer": 68, "manipul": [68, 1874], "direct": 68, "With": [68, 1862], "replace_pattern": 68, "proxi": 68, "retrac": 68, "interpret": [68, 1857], "pattern": [68, 1859, 1898, 1902], "introduct": [68, 1867, 1875, 1905], "pitfal": [68, 1898], "pdb": 68, "print": [68, 1859, 1860], "to_fold": 68, "graphmodul": 68, "avail": 68, "debugg": 68, "symbol": [68, 75, 80, 83, 84, 1898, 1905, 1922], "trace": [68, 585, 1202, 1824, 1857, 1898, 1904, 1905], "static": [68, 1898, 1905], "tracer": [68, 70, 71, 1857], "leaf": 68, "miscellanea": 68, "diagsys0001": 69, "arg": 69, "format": [69, 1902], "too": 69, "verbos": 69, "fxe0001": 70, "success": 70, "fxe0002": 71, "fxe0003": 72, "frontend": [72, 78], "fxe0004": 73, "neg": [73, 436, 438, 1321, 1322], "sigmoid": [73, 520, 753, 1449, 1570, 1757], "fxe0005": 74, "fxe0006": 75, "atenlib": [75, 76], "fxe0007": 76, "fxe0008": 77, "fxe0009": 78, "fxe0010": 79, "fxe0011": 80, "fxe0012": 81, "unsupport": [81, 1859, 1860, 1862, 1898, 1900], "analysi": 81, "poe0001": 82, "miss": [82, 83, 84], "infer": [82, 1874, 1880, 1882, 1896], "poe0002": 83, "poe0003": 84, "standard": 84, "poe0004": 85, "newer": 85, "opset": 85, "version": [85, 1896], "abs_": 88, "absolut": [89, 676], "absolute_": 90, "aco": [91, 677], "acos_": 92, "acosh": [93, 678], "acosh_": 94, "add_": 96, "addbmm": [97, 680], "addbmm_": 98, "addcdiv": [99, 681], "addcdiv_": 100, "addcmul": [101, 682], "addcmul_": 102, "addmm": [103, 683, 1779], "addmm_": 104, "addmv": [105, 684], "addmv_": 106, "addr": [107, 685], "addr_": 108, "adjoint": [109, 686], "all": [110, 687, 1898, 1901], "allclos": [111, 688], "amax": [112, 689], "amin": [113, 690], "aminmax": [114, 691], "apply_": 117, "arcco": [118, 860], "arccos_": 119, "arccosh": [120, 861], "arccosh_": 121, "arcsin": [122, 862], "arcsin_": 123, "arcsinh": [124, 863], "arcsinh_": 125, "arctan": [126, 864], "arctan2": [127, 865], "arctan2_": 128, "arctan_": 129, "arctanh": [130, 866], "arctanh_": 131, "argmax": [132, 868], "argmin": [133, 869], "argsort": [134, 870], "argwher": [135, 871], "as_strid": [136, 872], "as_subclass": 137, "asin": [138, 875], "asin_": 139, "asinh": [140, 876], "asinh_": 141, "atan": [142, 877], "atan2": [143, 878], "atan2_": 144, "atan_": 145, "atanh": [146, 879], "atanh_": 147, "backward": [148, 883, 887, 1880, 1881, 1883, 1888, 1911], "baddbmm": [149, 915], "baddbmm_": 150, "bernoulli_": 152, "bincount": [154, 918], "bitwise_and": [155, 919], "bitwise_and_": 156, "bitwise_left_shift": [157, 920], "bitwise_left_shift_": 158, "bitwise_not": [159, 921], "bitwise_not_": 160, "bitwise_or": [161, 922], "bitwise_or_": 162, "bitwise_right_shift": [163, 923], "bitwise_right_shift_": 164, "bitwise_xor": [165, 924], "bitwise_xor_": 166, "bmm": [167, 927], "bool": 168, "broadcast_to": [169, 930], "byte": 170, "cauchy_": 171, "ccol_indic": 172, "cdoubl": 173, "ceil": [174, 936], "ceil_": 175, "cfloat": 176, "chalf": 177, "char": 178, "choleski": [179, 938, 1216], "cholesky_invers": [180, 939], "cholesky_solv": [181, 940], "chunk": [182, 941], "clamp": [183, 765, 942], "clamp_": 184, "clip": [185, 943, 1879], "clip_": 186, "clone": [187, 944], "coalesc": 188, "col_indic": 189, "conj": [190, 952], "conj_phys": [191, 953], "conj_physical_": 192, "contigu": 193, "copy_": 194, "copysign": [195, 954], "copysign_": 196, "corrcoef": [197, 955], "co": [198, 956], "cos_": 199, "cosh": [200, 957], "cosh_": 201, "count_nonzero": [202, 958], "cov": [203, 959], "cross": [205, 960, 1219, 1880], "crow_indic": 206, "cummax": [208, 1039], "cummin": [209, 1040], "cumprod": [210, 1041], "cumprod_": 211, "cumsum": [212, 1042], "cumsum_": 213, "data_ptr": 214, "deg2rad": [215, 1044], "dense_dim": 216, "dequant": [217, 1045, 1905], "det": [218, 1046, 1220], "detach": 219, "detach_": 220, "devic": [221, 982, 1883, 1894, 1917], "diag": [222, 1047], "diag_emb": [223, 1048], "diagflat": [224, 1049], "diagon": [225, 1050, 1221], "diagonal_scatt": [226, 1051], "diff": [227, 1052], "digamma": [228, 1053], "digamma_": 229, "dim": [230, 1873], "dist": [231, 1054], "div": [232, 1055, 1896], "div_": 233, "divid": [234, 1056], "divide_": 235, "dot": [236, 1057], "doubl": 237, "dsplit": [238, 1058], "element_s": 239, "eq": [240, 1065], "eq_": 241, "equal": [242, 1066], "erf": [243, 1067], "erf_": 244, "erfc": [245, 1068], "erfc_": 246, "erfinv": [247, 1069], "erfinv_": 248, "exp": [249, 1070], "exp_": 250, "expand": 251, "expand_a": 252, "expm1": [253, 1072], "expm1_": 254, "exponential_": 255, "fill_": 256, "fill_diagonal_": 257, "fix_": 259, "flatten": [260, 1099, 1365], "flip": [261, 1100], "fliplr": [262, 1101], "flipud": [263, 1102], "float": [264, 1896], "float_pow": [265, 1103], "float_power_": 266, "floor": [267, 1104], "floor_": 268, "floor_divid": [269, 1105], "floor_divide_": 270, "fmax": [271, 1106], "fmin": [272, 1107], "fmod": [273, 1108], "fmod_": 274, "frac": [275, 1109], "frac_": 276, "frexp": [277, 1110], "gather": [278, 975, 1129], "gcd": [279, 1130], "gcd_": 280, "ge": [281, 1131], "ge_": 282, "geometric_": 283, "geqrf": [284, 1132], "ger": [285, 1133], "get_devic": 286, "greater": [288, 1141], "greater_": 289, "greater_equ": [290, 1142], "greater_equal_": 291, "gt": [292, 1143], "gt_": 293, "half": 294, "hardshrink": [295, 1375, 1521], "heavisid": [296, 1146], "histc": [297, 1147], "histogram": [298, 1148], "hsplit": [299, 1150], "hypot": [300, 1153], "hypot_": 301, "i0": [302, 1154], "i0_": 303, "igamma": [304, 1155], "igamma_": 305, "igammac": [306, 1156], "igammac_": 307, "index_add": [309, 1158], "index_add_": 310, "index_copi": [311, 1159], "index_copy_": 312, "index_fil": 313, "index_fill_": 314, "index_put": 315, "index_put_": 316, "index_reduc": [317, 1160], "index_reduce_": 318, "index_select": [319, 1161], "indic": [320, 1855], "inner": [321, 1164], "int": 322, "int_repr": 323, "invers": [324, 1165, 1865], "is_coalesc": 325, "is_complex": [326, 1166], "is_conj": [327, 1167], "is_contigu": 328, "is_cuda": 329, "is_floating_point": [330, 1169], "is_infer": 331, "is_leaf": 332, "is_meta": 333, "is_pin": 334, "is_quant": 335, "is_set_to": 336, "is_shar": 337, "is_sign": 338, "is_spars": 339, "is_sparse_csr": 340, "isclos": [341, 1176], "isfinit": [342, 1177], "isinf": [343, 1179], "isnan": [344, 1180], "isneginf": [345, 1181], "isposinf": [346, 1182], "isreal": [347, 1183], "istft": [348, 1184], "items": 350, "kthvalu": [351, 1208], "lcm": [352, 1209], "lcm_": 353, "ldexp": [354, 1210], "ldexp_": 355, "le": [356, 1211], "le_": 357, "lerp": [358, 1212], "lerp_": 359, "less": [360, 1213], "less_": 361, "less_equ": [362, 1214], "less_equal_": 363, "lgamma": [364, 1215], "lgamma_": 365, "log10": [367, 1261], "log10_": 368, "log1p": [369, 1262], "log1p_": 370, "log2": [371, 1263], "log2_": 372, "log_": 373, "log_normal_": 374, "logaddexp": [375, 1264], "logaddexp2": [376, 1265], "logcumsumexp": [377, 1266], "logdet": [378, 1267], "logical_and": [379, 1268], "logical_and_": 380, "logical_not": [381, 1269], "logical_not_": 382, "logical_or": [383, 1270], "logical_or_": 384, "logical_xor": [385, 1271], "logical_xor_": 386, "logit": [387, 1272], "logit_": 388, "logsumexp": [389, 1274], "long": 390, "lt": [391, 1275], "lt_": 392, "lu": [393, 1233, 1276], "lu_solv": [394, 1236, 1277], "map_": 395, "masked_fil": 396, "masked_fill_": 397, "masked_scatt": 398, "masked_scatter_": 399, "masked_select": [400, 1280], "matmul": [401, 1237, 1281], "matrix_exp": [402, 1238, 1282], "matrix_pow": [403, 1240, 1283], "maximum": [405, 1285], "mean": [406, 1286], "median": [407, 1287], "minimum": [409, 1290], "mm": [410, 1291, 1782], "moveaxi": [412, 1293], "movedim": [413, 1294], "msort": [414, 1307], "mul": [415, 1308], "mul_": 416, "multipli": [418, 1310], "multiply_": 419, "mv": [420, 1311], "mvlgamma": [421, 1312], "mvlgamma_": 422, "nan_to_num": [423, 1313], "nan_to_num_": 424, "nanmean": [425, 1314], "nanmedian": [426, 1315], "nanquantil": [427, 1316], "nansum": [428, 1317], "narrow": [429, 1318], "narrow_copi": [430, 1319], "nbyte": 431, "ndim": 432, "ndimens": 433, "ne": [434, 1320], "ne_": 435, "neg_": 437, "negative_": 439, "nelement": 440, "new_empti": 441, "new_ful": 442, "new_on": 443, "new_tensor": 444, "new_zero": 445, "nextaft": [446, 1323], "nextafter_": 447, "normal_": 450, "not_equ": [451, 1648], "not_equal_": 452, "numel": [453, 1649], "numpi": [454, 1898], "orgqr": [455, 1691], "ormqr": [456, 1692], "outer": [457, 1693], "permut": [458, 1695, 1873], "pin_memori": 459, "pinvers": [460, 1696], "polygamma": [461, 1699], "polygamma_": 462, "posit": [463, 1700], "pow": [464, 1701], "pow_": 465, "prod": [466, 1702], "put_": 467, "q_per_channel_axi": 468, "q_per_channel_scal": 469, "q_per_channel_zero_point": 470, "q_scale": 471, "q_zero_point": 472, "qr": [473, 1245, 1704], "qscheme": 474, "quantil": [475, 1705], "rad2deg": [476, 1712], "random_": 477, "ravel": [478, 1721], "reciproc": [480, 1723], "reciprocal_": 481, "record_stream": 482, "register_hook": [483, 907], "remaind": [484, 1724], "remainder_": 485, "renorm": [486, 1725], "renorm_": 487, "repeat": 488, "repeat_interleav": [489, 1726], "requires_grad": [490, 1880], "requires_grad_": 491, "reshap": [492, 1727], "reshape_a": 493, "resize_": 494, "resize_as_": 495, "resolve_conj": [496, 1728], "resolve_neg": [497, 1729], "retain_grad": 498, "retains_grad": 499, "roll": [500, 1731], "rot90": [501, 1732], "round": [502, 1733], "round_": 503, "row_indic": 504, "rsqrt": [505, 1735], "rsqrt_": 506, "scatter": [507, 977, 1737], "scatter_": 508, "scatter_add": [509, 1738], "scatter_add_": 510, "scatter_reduc": [511, 1739], "scatter_reduce_": 512, "select": [513, 1742, 1867], "select_scatt": [514, 1743], "set_": 515, "sgn": [516, 1756], "sgn_": 517, "share_memory_": 518, "short": 519, "sigmoid_": 521, "sign": [522, 1758], "sign_": 523, "signbit": [524, 1770], "sin": [525, 1771], "sin_": 526, "sinc": [527, 1772], "sinc_": 528, "sinh": [529, 1773], "sinh_": 530, "slice_scatt": [532, 1774], "slogdet": [533, 1246, 1775], "smm": [534, 1776], "softmax": [535, 1452, 1574, 1777, 1784], "sort": [536, 1778], "sparse_dim": 537, "sparse_mask": 538, "sparse_resize_": 539, "sparse_resize_and_clear_": 540, "split": [541, 1793], "sqrt": [542, 1794], "sqrt_": 543, "squar": [544, 1795], "square_": 545, "squeez": [546, 1796], "squeeze_": 547, "sspaddmm": [548, 1797], "std": [549, 1799], "stft": [550, 1801], "storag": [551, 1916], "storage_offset": 552, "storage_typ": 553, "stride": 554, "sub": [555, 1802], "sub_": 556, "subtract": [557, 1803], "subtract_": 558, "sum": [559, 1786, 1804, 1876], "sum_to_s": 560, "svd": [561, 1250, 1805], "swapax": [562, 1807], "swapdim": [563, 1808], "t_": 565, "take": [566, 1815, 1901], "take_along_dim": [567, 1816], "tan": [568, 1817], "tan_": 569, "tanh": [570, 1459, 1579, 1818], "tanh_": 571, "tensor_split": [572, 1820], "tile": [573, 1822], "to_dens": 575, "to_mkldnn": 576, "to_spars": 577, "to_sparse_bsc": 578, "to_sparse_bsr": 579, "to_sparse_coo": 580, "to_sparse_csc": 581, "to_sparse_csr": 582, "tolist": 583, "topk": [584, 1823], "transpos": [586, 1825], "transpose_": 587, "triangular_solv": [588, 1828], "tril": [589, 1829], "tril_": 590, "triu": [591, 1831], "triu_": 592, "true_divid": [593, 1833], "true_divide_": 594, "trunc": [595, 1834], "trunc_": 596, "type_a": 598, "unbind": [599, 1835, 1875], "unflatten": [600, 1469, 1836], "unfold": [601, 1470, 1586], "uniform_": 602, "uniqu": [603, 1837], "unique_consecut": [604, 1838], "unsqueez": [605, 1839], "unsqueeze_": 606, "untyped_storag": 607, "var": [609, 1842], "vdot": [610, 1844], "view": [611, 1867, 1896, 1918], "view_a": 612, "vsplit": [613, 1848], "where": [614, 1850, 1854], "xlogi": [615, 1851], "xlogy_": 616, "zero_": 617, "_assert": 618, "_foreach_ab": 619, "_foreach_abs_": 620, "_foreach_aco": 621, "_foreach_acos_": 622, "_foreach_asin": 623, "_foreach_asin_": 624, "_foreach_atan": 625, "_foreach_atan_": 626, "_foreach_ceil": 627, "_foreach_ceil_": 628, "_foreach_co": 629, "_foreach_cos_": 630, "_foreach_cosh": 631, "_foreach_cosh_": 632, "_foreach_erf": 633, "_foreach_erf_": 634, "_foreach_erfc": 635, "_foreach_erfc_": 636, "_foreach_exp": 637, "_foreach_exp_": 638, "_foreach_expm1": 639, "_foreach_expm1_": 640, "_foreach_floor": 641, "_foreach_floor_": 642, "_foreach_frac": 643, "_foreach_frac_": 644, "_foreach_lgamma": 645, "_foreach_lgamma_": 646, "_foreach_log": 647, "_foreach_log10": 648, "_foreach_log10_": 649, "_foreach_log1p": 650, "_foreach_log1p_": 651, "_foreach_log2": 652, "_foreach_log2_": 653, "_foreach_log_": 654, "_foreach_neg": 655, "_foreach_neg_": 656, "_foreach_reciproc": 657, "_foreach_reciprocal_": 658, "_foreach_round": 659, "_foreach_round_": 660, "_foreach_sigmoid": 661, "_foreach_sigmoid_": 662, "_foreach_sin": 663, "_foreach_sin_": 664, "_foreach_sinh": 665, "_foreach_sinh_": 666, "_foreach_sqrt": 667, "_foreach_sqrt_": 668, "_foreach_tan": 669, "_foreach_tan_": 670, "_foreach_trunc": 671, "_foreach_trunc_": 672, "_foreach_zero_": 673, "_log": [674, 1866], "set_log": 674, "bnrelu2d": [694, 717], "bnrelu3d": [695, 718], "convbn1d": [696, 706], "convbn2d": [697, 707], "convbn3d": [698, 708], "convbnrelu1d": [699, 709], "convbnrelu2d": [700, 710], "convbnrelu3d": [701, 711], "convrelu1d": [702, 719], "convrelu2d": [703, 712, 720], "convrelu3d": [704, 713, 721], "linearrelu": [705, 714, 722, 723], "freeze_bn_stat": 715, "update_bn_stat": 716, "conv2d": [724, 733, 767, 1348, 1494], "conv3d": [725, 734, 768, 1349, 1495], "lstm": [728, 756, 1389, 1895], "multiheadattent": [729, 1425], "batchnorm2d": [730, 1338], "batchnorm3d": [731, 1339], "conv1d": [732, 766, 1347, 1493], "convtranspose1d": [735, 1350], "convtranspose2d": [736, 1351], "convtranspose3d": [737, 1352], "elu": [738, 769, 1361, 1507], "embed": [739, 1362, 1509], "embeddingbag": [740, 1363], "fxfloatfunct": 741, "floatfunct": 742, "groupnorm": [743, 1374], "hardswish": [744, 771, 1377, 1523], "instancenorm1d": [745, 1382], "instancenorm2d": [746, 1383], "instancenorm3d": [747, 1384], "layernorm": [748, 1391], "leakyrelu": [749, 1405], "qfunction": 751, "relu6": [752, 1439, 1564], "gru": [754, 1371], "grucel": [755, 1372], "lstmcell": [757, 1390], "rnncell": [759, 1436], "adaptive_avg_pool2d": [760, 1478], "adaptive_avg_pool3d": [761, 1479], "avg_pool2d": [762, 1486], "avg_pool3d": [763, 1487], "celu": [764, 1341, 1492], "hardsigmoid": [770, 1376, 1522], "hardtanh": [772, 1378, 1524], "interpol": [773, 1529], "leaky_relu": [774, 1533], "max_pool1d": [776, 1542], "max_pool2d": [777, 1543], "threshold": [778, 1461, 1581], "upsampl": [779, 1471, 1587], "upsample_bilinear": [780, 1588], "upsample_nearest": [781, 1589], "dequantstub": 782, "quantstub": 783, "quantwrapp": 784, "add_quant_dequ": 785, "backendconfig": 786, "backendpatternconfig": 787, "dtypeconfig": 788, "dtypewithconstraint": 789, "observationtyp": 790, "default_eval_fn": 792, "fakequant": [793, 1905], "fakequantizebas": 794, "fixedqparamsfakequant": 795, "fusedmovingavgobsfakequant": 796, "default_fake_qu": 797, "default_fused_act_fake_qu": 798, "default_fused_per_channel_wt_fake_qu": 799, "default_fused_wt_fake_qu": 800, "default_histogram_fake_qu": 801, "default_per_channel_weight_fake_qu": 802, "default_weight_fake_qu": 803, "disable_fake_qu": 804, "disable_observ": 805, "enable_fake_qu": 806, "enable_observ": 807, "fuse_modul": 808, "convertcustomconfig": 809, "fusecustomconfig": 810, "preparecustomconfig": 811, "standalonemoduleconfigentri": 812, "histogramobserv": 813, "minmaxobserv": 814, "movingaverageminmaxobserv": 815, "movingaverageperchannelminmaxobserv": 816, "noopobserv": 817, "observerbas": 818, "perchannelminmaxobserv": 819, "placeholderobserv": 820, "recordingobserv": 821, "default_debug_observ": 822, "default_dynamic_quant_observ": 823, "default_float_qparams_observ": 824, "default_histogram_observ": 825, "default_observ": 826, "default_per_channel_weight_observ": 827, "default_placeholder_observ": 828, "default_weight_observ": 829, "get_observer_state_dict": 830, "load_observer_state_dict": 831, "prepar": [832, 1905, 1908], "prepare_qat": 833, "propagate_qconfig": 834, "qconfig": [835, 1905, 1908], "default_activation_only_qconfig": 836, "default_debug_qconfig": 837, "default_dynamic_qconfig": 838, "default_per_channel_qconfig": 839, "default_qat_qconfig": 840, "default_qat_qconfig_v2": 841, "default_qconfig": 842, "default_weight_only_qconfig": 843, "float16_dynamic_qconfig": 844, "float16_static_qconfig": 845, "float_qparams_weight_only_qconfig": 846, "per_channel_dynamic_qconfig": 847, "qconfigmap": 848, "get_default_qat_qconfig_map": 849, "get_default_qconfig_map": 850, "quantiz": [851, 1876, 1891, 1898, 1905, 1906, 1907, 1908], "quantize_dynam": 852, "convert_fx": 853, "fuse_fx": 854, "prepare_fx": 855, "prepare_qat_fx": 856, "quantize_qat": 857, "swap_modul": 858, "arang": 859, "are_deterministic_algorithms_en": 867, "as_tensor": 873, "asarrai": 874, "atleast_1d": 880, "atleast_2d": 881, "atleast_3d": 882, "dual_level": 888, "forward_ad": [889, 890], "make_du": 889, "unpack_du": 890, "functionctx": [891, 892, 893, 894], "mark_dirti": 891, "mark_non_differenti": 892, "save_for_backward": 893, "set_materialize_grad": 894, "hvp": 896, "vhp": 899, "gradcheck": [902, 1888], "gradgradcheck": [903, 1888], "metadata": [904, 1890], "name": [905, 1859, 1873, 1874], "next_funct": 906, "register_prehook": 908, "load_nvprof": 909, "export_chrome_trac": 910, "key_averag": 911, "self_cpu_time_tot": 912, "total_averag": 913, "set_multithreading_en": 914, "bartlett_window": 916, "blackman_window": 925, "block_diag": 926, "broadcast_shap": 928, "broadcast_tensor": 929, "bucket": 931, "can_cast": 932, "cartesian_prod": 933, "cat": 934, "cdist": 935, "chain_matmul": 937, "column_stack": 945, "combin": [946, 1885], "compiled_with_cxx11_abi": 948, "concat": 950, "concaten": 951, "cudagraph": 961, "cudapluggablealloc": 962, "externalstream": 964, "outofmemoryerror": 965, "streamcontext": 967, "caching_allocator_alloc": 968, "caching_allocator_delet": 969, "can_device_access_p": 970, "change_current_alloc": 971, "clock_rat": 972, "comm": [973, 974, 975, 976, 977], "broadcast": [973, 1881], "broadcast_coalesc": 974, "reduce_add": 976, "current_blas_handl": 978, "current_devic": 979, "current_stream": 980, "default_stream": 981, "device_count": 983, "device_of": 984, "empty_cach": [985, 1297], "get_allocator_backend": 986, "get_arch_list": 987, "get_device_cap": 988, "get_device_nam": 989, "get_device_properti": 990, "get_gencode_flag": 991, "get_rng_stat": [992, 1139, 1298], "get_rng_state_al": 993, "get_sync_debug_mod": 994, "graph_pool_handl": 996, "init": [997, 1878], "initial_se": [998, 1163], "ipc_collect": 999, "is_avail": 1000, "is_current_stream_captur": 1001, "is_initi": 1002, "_create_jit_fn": 1003, "_create_multi_output_jit_fn": 1004, "list_gpu_process": 1005, "make_graphed_cal": 1006, "manual_se": [1007, 1279, 1299], "manual_seed_al": 1008, "max_memory_alloc": 1009, "max_memory_cach": 1010, "max_memory_reserv": 1011, "mem_get_info": 1012, "memory_alloc": 1013, "memory_cach": 1014, "memory_reserv": 1015, "memory_snapshot": 1016, "memory_stat": 1017, "memory_summari": 1018, "memory_usag": 1019, "mark": 1020, "range_pop": 1021, "range_push": 1022, "power_draw": 1023, "reset_max_memory_alloc": 1024, "reset_max_memory_cach": 1025, "reset_peak_memory_stat": 1026, "seed": [1027, 1303, 1741], "seed_al": 1028, "set_devic": 1029, "set_per_process_memory_fract": [1030, 1304], "set_rng_stat": [1031, 1305, 1754], "set_rng_state_al": 1032, "set_stream": 1033, "set_sync_debug_mod": 1034, "temperatur": 1037, "cumulative_trapezoid": 1043, "dstack": 1059, "einsum": 1060, "empti": 1061, "empty_lik": 1062, "empty_strid": 1063, "enable_grad": 1064, "exp2": 1071, "ey": 1073, "fake_quantize_per_channel_affin": 1074, "fake_quantize_per_tensor_affin": 1075, "fft2": 1077, "fftfreq": 1078, "fftn": 1079, "fftshift": 1080, "hfft": 1081, "hfft2": 1082, "hfftn": 1083, "ifft": 1084, "ifft2": 1085, "ifftn": 1086, "ifftshift": 1087, "ihfft": 1088, "ihfft2": 1089, "ihfftn": 1090, "irfft": 1091, "irfft2": 1092, "irfftn": 1093, "rfft": 1094, "rfft2": 1095, "rfftfreq": 1096, "rfftn": 1097, "from_dlpack": 1111, "from_numpi": 1112, "frombuff": 1113, "full": [1114, 1896], "full_lik": 1115, "functional_cal": [1116, 1641], "grad_and_valu": 1119, "replace_all_batch_norm_modules_": 1125, "stack_module_st": 1126, "get_default_dtyp": 1134, "get_deterministic_debug_mod": 1135, "get_float32_matmul_precis": 1136, "get_num_interop_thread": 1137, "get_num_thread": 1138, "hamming_window": 1144, "hann_window": 1145, "histogramdd": 1149, "hspmm": 1151, "hstack": 1152, "inference_mod": 1162, "is_deterministic_algorithms_warn_only_en": 1168, "is_grad_en": 1170, "is_inference_mode_en": 1171, "is_nonzero": 1172, "is_storag": 1173, "is_tensor": 1174, "is_warn_always_en": 1175, "isin": 1178, "attribut": [1185, 1857, 1859, 1860, 1862, 1917], "scriptfunct": 1186, "scriptmodul": [1187, 1896], "annot": [1188, 1860], "enable_onednn_fus": 1189, "fork": 1190, "freez": 1191, "ignor": 1192, "isinst": 1193, "onednn_fusion_en": 1195, "optimize_for_infer": 1196, "save": [1197, 1736, 1854, 1880, 1890, 1896, 1905], "script_if_trac": 1199, "set_fusion_strategi": 1200, "strict_fus": 1201, "trace_modul": 1203, "unus": 1204, "wait": 1205, "kaiser_window": 1206, "kron": 1207, "cholesky_ex": 1217, "cond": 1218, "eig": 1222, "eigh": 1223, "eigval": 1224, "eigvalsh": 1225, "householder_product": 1226, "inv": 1227, "inv_ex": 1228, "ldl_factor": 1229, "ldl_factor_ex": 1230, "ldl_solv": 1231, "lstsq": 1232, "lu_factor": 1234, "lu_factor_ex": 1235, "matrix_norm": 1239, "matrix_rank": 1241, "multi_dot": 1242, "pinv": 1244, "solv": 1247, "solve_ex": 1248, "solve_triangular": 1249, "svdval": 1251, "tensorinv": 1252, "tensorsolv": 1253, "vander": [1254, 1841], "vecdot": 1255, "vector_norm": 1256, "linspac": 1257, "lobpcg": 1259, "logspac": 1273, "lu_unpack": 1278, "meshgrid": 1288, "current_allocated_memori": 1295, "driver_allocated_memori": 1296, "stop": 1302, "adaptiveavgpool1d": 1324, "adaptiveavgpool2d": 1325, "adaptiveavgpool3d": 1326, "adaptivelogsoftmaxwithloss": 1327, "adaptivemaxpool1d": 1328, "adaptivemaxpool2d": 1329, "adaptivemaxpool3d": 1330, "alphadropout": 1331, "avgpool1d": 1332, "avgpool2d": 1333, "avgpool3d": 1334, "bceloss": 1335, "bcewithlogitsloss": 1336, "batchnorm1d": 1337, "bilinear": [1340, 1489], "ctcloss": 1342, "channelshuffl": 1343, "constantpad1d": 1344, "constantpad2d": 1345, "constantpad3d": 1346, "cosineembeddingloss": 1353, "cosinesimilar": 1354, "crossentropyloss": 1355, "dataparallel": [1356, 1876, 1877, 1879, 1883], "dropout": [1357, 1503, 1876, 1877], "dropout1d": [1358, 1504], "dropout2d": [1359, 1505], "dropout3d": [1360, 1506], "featurealphadropout": 1364, "fold": [1366, 1512], "fractionalmaxpool2d": 1367, "fractionalmaxpool3d": 1368, "gelu": [1369, 1516], "glu": [1370, 1517], "gaussiannllloss": 1373, "hingeembeddingloss": 1379, "huberloss": 1380, "ident": [1381, 1615, 1623, 1860, 1887], "kldivloss": 1385, "l1loss": 1386, "lppool1d": 1387, "lppool2d": 1388, "lazybatchnorm1d": 1392, "lazybatchnorm2d": 1393, "lazybatchnorm3d": 1394, "lazyconv1d": 1395, "lazyconv2d": 1396, "lazyconv3d": 1397, "lazyconvtranspose1d": 1398, "lazyconvtranspose2d": 1399, "lazyconvtranspose3d": 1400, "lazyinstancenorm1d": 1401, "lazyinstancenorm2d": 1402, "lazyinstancenorm3d": 1403, "lazylinear": 1404, "localresponsenorm": 1407, "logsigmoid": [1408, 1538], "logsoftmax": 1409, "mseloss": 1410, "marginrankingloss": 1411, "maxpool1d": 1412, "maxpool2d": 1413, "maxpool3d": 1414, "maxunpool1d": 1415, "maxunpool2d": 1416, "maxunpool3d": 1417, "mish": [1418, 1548], "moduledict": [1420, 1860], "modulelist": [1421, 1859, 1860], "multilabelmarginloss": 1422, "multilabelsoftmarginloss": 1423, "multimarginloss": 1424, "nllloss": 1426, "prelu": [1427, 1562], "pairwisedist": 1428, "parameterdict": 1429, "parameterlist": 1430, "pixelshuffl": 1431, "pixelunshuffl": 1432, "poissonnllloss": 1433, "rnn": [1434, 1633, 1634, 1635, 1636, 1637, 1638, 1895], "rnnbase": 1435, "rrelu": [1437, 1566], "relu": [1438, 1563], "reflectionpad1d": 1440, "reflectionpad2d": 1441, "reflectionpad3d": 1442, "replicationpad1d": 1443, "replicationpad2d": 1444, "replicationpad3d": 1445, "selu": [1446, 1569], "sequenti": 1447, "silu": [1448, 1571], "smoothl1loss": 1450, "softmarginloss": 1451, "softmax2d": 1453, "softmin": [1454, 1575], "softplu": [1455, 1576], "softshrink": [1456, 1577], "softsign": [1457, 1578], "syncbatchnorm": 1458, "tanhshrink": [1460, 1580], "transformerdecod": 1463, "transformerdecoderlay": 1464, "transformerencod": 1465, "transformerencoderlay": 1466, "tripletmarginloss": 1467, "tripletmarginwithdistanceloss": 1468, "upsamplingbilinear2d": 1472, "upsamplingnearest2d": 1473, "zeropad1d": 1474, "zeropad2d": 1475, "zeropad3d": 1476, "adaptive_avg_pool1d": 1477, "adaptive_max_pool1d": 1480, "adaptive_max_pool2d": 1481, "adaptive_max_pool3d": 1482, "affine_grid": 1483, "alpha_dropout": 1484, "avg_pool1d": 1485, "batch_norm": 1488, "conv_transpose1d": 1496, "conv_transpose2d": 1497, "conv_transpose3d": 1498, "cosine_embedding_loss": 1499, "cosine_similar": 1500, "cross_entropi": 1501, "ctc_loss": 1502, "elu_": 1508, "embedding_bag": 1510, "feature_alpha_dropout": 1511, "fractional_max_pool2d": 1513, "fractional_max_pool3d": 1514, "gaussian_nll_loss": 1515, "grid_sampl": 1518, "group_norm": 1519, "gumbel_softmax": 1520, "hardtanh_": 1525, "hinge_embedding_loss": 1526, "huber_loss": 1527, "instance_norm": 1528, "kl_div": 1530, "l1_loss": 1531, "layer_norm": 1532, "leaky_relu_": 1534, "local_response_norm": 1536, "log_softmax": [1537, 1781], "lp_pool1d": 1539, "lp_pool2d": 1540, "margin_ranking_loss": 1541, "max_pool3d": 1544, "max_unpool1d": 1545, "max_unpool2d": 1546, "max_unpool3d": 1547, "mse_loss": 1549, "multi_margin_loss": 1550, "multilabel_margin_loss": 1551, "multilabel_soft_margin_loss": 1552, "nll_loss": 1553, "one_hot": 1555, "pad": [1556, 1876], "pairwise_dist": 1557, "pdist": 1558, "pixel_shuffl": 1559, "pixel_unshuffl": 1560, "poisson_nll_loss": 1561, "relu_": 1565, "rrelu_": 1567, "scaled_dot_product_attent": 1568, "smooth_l1_loss": 1572, "soft_margin_loss": 1573, "threshold_": 1582, "data_parallel": [1583, 1877], "triplet_margin_loss": 1584, "triplet_margin_with_distance_loss": 1585, "lazymodulemixin": 1590, "register_module_backward_hook": 1591, "register_module_buffer_registration_hook": 1592, "register_module_forward_hook": 1593, "register_module_forward_pre_hook": 1594, "register_module_full_backward_hook": 1595, "register_module_full_backward_pre_hook": 1596, "register_module_module_registration_hook": 1597, "register_module_parameter_registration_hook": 1598, "distributeddataparallel": [1599, 1879, 1883, 1884], "uninitializedbuff": 1601, "uninitializedparamet": 1602, "clip_grad_norm_": 1603, "clip_grad_value_": 1604, "parameters_to_vector": 1605, "parametr": [1606, 1607, 1609, 1610, 1611, 1612, 1891], "orthogon": 1606, "spectral_norm": [1607, 1640], "parametrizationlist": 1608, "is_parametr": 1610, "register_parametr": 1611, "remove_parametr": 1612, "basepruningmethod": 1613, "customfrommask": 1614, "l1unstructur": 1616, "lnstructur": 1617, "pruningcontain": 1618, "randomstructur": 1619, "randomunstructur": 1620, "prune": [1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1891], "custom_from_mask": 1621, "global_unstructur": 1622, "is_prun": 1624, "l1_unstructur": 1625, "ln_structur": 1626, "random_structur": 1627, "random_unstructur": 1628, "remove_spectral_norm": 1630, "remove_weight_norm": 1631, "packedsequ": 1632, "pack_padded_sequ": 1633, "pack_sequ": 1634, "pad_packed_sequ": 1635, "pad_sequ": 1636, "unpack_sequ": 1637, "unpad_sequ": 1638, "skip_init": 1639, "stateless": 1641, "vector_to_paramet": 1642, "weight_norm": 1643, "no_grad": 1644, "ones": 1650, "ones_lik": 1651, "exportopt": 1652, "exportoutput": 1653, "exportoutputseri": 1654, "jitscalartyp": 1655, "graphinfo": 1656, "verificationopt": 1657, "asgd": 1658, "adadelta": 1659, "adagrad": 1660, "adam": 1661, "adamw": 1662, "adamax": 1663, "lbfg": 1664, "nadam": 1665, "add_param_group": 1666, "load_state_dict": 1667, "step": [1669, 1901], "zero_grad": 1670, "radam": 1671, "rmsprop": 1672, "rprop": 1673, "sgd": 1674, "sparseadam": 1675, "chainedschedul": 1676, "constantlr": 1677, "cosineannealinglr": 1678, "cosineannealingwarmrestart": 1679, "cycliclr": 1680, "exponentiallr": 1681, "lambdalr": 1682, "linearlr": 1683, "multisteplr": 1684, "multiplicativelr": 1685, "onecyclelr": 1686, "polynomiallr": 1687, "reducelronplateau": 1688, "sequentiallr": 1689, "steplr": 1690, "pca_lowrank": 1694, "polar": 1698, "promote_typ": 1703, "quantize_per_channel": 1706, "quantize_per_tensor": 1707, "quantized_batch_norm": 1708, "quantized_max_pool1d": 1709, "quantized_max_pool2d": 1710, "sobolengin": 1711, "rand": 1713, "rand_lik": 1714, "randint": 1715, "randint_lik": 1716, "randn": 1717, "randn_lik": 1718, "randperm": 1719, "rang": [1720, 1859], "result_typ": 1730, "row_stack": 1734, "searchsort": 1740, "set_default_devic": 1744, "set_default_dtyp": 1745, "set_default_tensor_typ": 1746, "set_deterministic_debug_mod": 1747, "set_float32_matmul_precis": 1748, "set_flush_denorm": 1749, "set_grad_en": 1750, "set_num_interop_thread": 1751, "set_num_thread": 1752, "set_printopt": 1753, "set_warn_alwai": 1755, "signal": [1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1913], "bartlett": 1759, "blackman": 1760, "cosin": 1761, "gaussian": 1763, "general_cosin": 1764, "general_ham": 1765, "ham": 1766, "hann": 1767, "kaiser": 1768, "nuttal": 1769, "check_sparse_tensor_invari": 1780, "sampled_addmm": 1783, "spdiag": 1785, "sparse_bsc_tensor": 1787, "sparse_bsr_tensor": 1788, "sparse_compressed_tensor": 1789, "sparse_coo_tensor": 1790, "sparse_csc_tensor": 1791, "sparse_csr_tensor": 1792, "std_mean": 1800, "svd_lowrank": 1806, "sym_float": 1809, "sym_int": 1810, "sym_max": 1811, "sym_min": 1812, "sym_not": 1813, "tensordot": 1821, "trapezoid": 1826, "trapz": 1827, "tril_indic": 1830, "triu_indic": 1832, "use_deterministic_algorithm": 1840, "var_mean": 1843, "view_as_complex": 1845, "view_as_r": 1846, "vstack": 1849, "zero": 1852, "zeros_lik": 1853, "hub": 1854, "publish": 1854, "entrypoint": 1854, "download": 1854, "logic": [1854, 1859], "known": [1854, 1857], "bind": 1855, "tabl": [1855, 1896], "prim": 1856, "built": [1857, 1858, 1860, 1898], "comparison": [1857, 1859, 1860, 1922], "inspect": 1857, "warn": 1857, "appendix": [1857, 1860], "recurs": 1857, "constant": [1857, 1859], "fusion": 1857, "builtin": 1858, "math": [1858, 1922], "construct": [1859, 1860, 1862, 1875, 1901, 1914], "refin": [1859, 1860], "enum": [1859, 1860], "tupl": [1859, 1860], "express": [1859, 1860], "liter": [1859, 1860], "list": [1859, 1860, 1898], "dict": 1859, "arithmet": [1859, 1860], "subscript": [1859, 1860], "slice": [1859, 1860, 1894, 1922], "ternari": [1859, 1860], "cast": 1859, "statement": [1859, 1860], "assign": [1859, 1860], "match": [1859, 1874], "If": 1859, "while": [1859, 1860], "loop": 1859, "For": 1859, "continu": [1859, 1860], "return": [1859, 1860, 1887, 1912], "resolut": [1859, 1860], "lookup": 1859, "defin": [1859, 1885, 1886], "terminologi": 1860, "meta": 1860, "primit": 1860, "special": [1860, 1880, 1915], "instanc": 1860, "signatur": 1860, "expr": 1860, "convers": [1860, 1875], "atom": 1860, "parenthes": 1860, "form": 1860, "dictionari": 1860, "displai": 1860, "primari": 1860, "power": 1860, "unari": [1860, 1867, 1914], "bitwis": 1860, "binari": [1860, 1867], "shift": 1860, "boolean": 1860, "condit": 1860, "augment": 1860, "rais": 1860, "assert": [1860, 1889], "del": 1860, "compound": 1860, "els": 1860, "getattr": 1860, "hasattr": 1860, "zip": [1860, 1902], "enumer": 1860, "rule": [1860, 1874, 1886, 1899], "remot": [1860, 1912], "procedur": 1860, "execut": [1860, 1880, 1883, 1902, 1903], "program": 1860, "coverag": [1861, 1873, 1885], "properti": [1862, 1865], "Not": 1862, "correctli": 1862, "bound": 1862, "schema": 1862, "between": [1862, 1902], "matrix": [1865, 1905], "decomposit": 1865, "solver": 1865, "misc": 1865, "experiment": 1865, "reduct": [1867, 1883, 1894, 1922], "mobile_optim": 1868, "model_zoo": 1869, "strategi": [1872, 1901], "descriptor": 1872, "file_descriptor": 1872, "file_system": 1872, "subprocess": 1872, "keep": [1873, 1902], "dimens": [1873, 1874], "unifi": 1873, "contract": 1873, "awai": 1873, "factori": 1873, "variant": 1873, "semant": [1874, 1881, 1883, 1889, 1896], "explicit": 1874, "align": 1874, "current": 1874, "subsystem": 1874, "constructor": 1875, "contain": 1876, "convolut": [1876, 1877, 1894, 1895], "layer": 1876, "pool": [1876, 1877], "activ": [1876, 1877], "weight": [1876, 1901], "nonlinear": 1876, "recurr": [1876, 1887], "distanc": [1876, 1877], "loss": [1876, 1877, 1879], "vision": [1876, 1877], "shuffl": 1876, "lazi": 1876, "attent": 1877, "typic": 1879, "unscal": 1879, "accumul": 1879, "penalti": 1879, "one": 1879, "per": [1879, 1901], "particular": [1879, 1880], "dtype": [1879, 1896, 1908, 1917], "encod": 1880, "histori": 1880, "set": [1880, 1898], "No": 1880, "multithread": 1880, "concurr": 1880, "determin": [1880, 1895], "retain": 1880, "thread": [1880, 1882], "safeti": 1880, "wirting": 1880, "calculu": 1880, "pictur": 1880, "conjug": 1880, "own": 1880, "formula": 1880, "domain": 1880, "whether": [1880, 1902], "fire": 1880, "differ": [1880, 1898], "modifi": 1880, "compat": 1881, "tune": 1882, "tensorfloat": [1883, 1889, 1894], "32": [1883, 1889, 1894, 1897], "tf32": [1883, 1889, 1894], "amper": [1883, 1894], "reduc": [1883, 1894], "fp16": [1883, 1894], "gemm": [1883, 1894], "bf16": [1883, 1894], "bc": 1883, "alloc": [1883, 1887], "cubla": 1883, "workspac": 1883, "cufft": 1883, "plan": [1883, 1889], "just": 1883, "time": 1883, "practic": [1883, 1893, 1905], "agnost": 1883, "buffer": [1883, 1893], "instead": 1883, "captur": 1883, "partial": 1883, "9": 1883, "6": 1883, "across": [1883, 1896], "processgroup": 1884, "ddpoptim": 1884, "separ": 1885, "setup_context": 1885, "like": [1885, 1902], "wrapper": 1885, "__torch_function__": 1885, "overrid": [1885, 1925], "specifi": 1886, "staticmethod": 1886, "isn": 1887, "freed": 1887, "properli": 1887, "loader": 1887, "notat": 1888, "background": [1888, 1911, 1912], "analyt": 1888, "output": 1888, "u": 1888, "reus": [1889, 1893], "hipfft": 1889, "rocfft": 1889, "enabl": 1889, "kernel": [1889, 1905], "larg": 1890, "fleet": 1890, "wide": 1890, "attach": 1890, "consider": 1890, "block": 1891, "neural": 1891, "tip": [1893, 1906], "fight": 1893, "deadlock": 1893, "through": 1893, "queue": 1893, "e": 1893, "g": 1893, "hogwild": 1893, "extrem": 1894, "finit": 1894, "instinct": 1894, "mi200": 1894, "reproduc": 1895, "nondeterminist": 1895, "algorithm": [1895, 1901, 1911], "content": [1896, 1902], "preserv": 1896, "them": [1896, 1902], "integ": 1896, "divis": 1896, "alwai": 1896, "includ": [1897, 1902], "compon": 1897, "instal": 1897, "cffi": 1897, "cpp": 1897, "found": 1897, "win": 1897, "channel": 1897, "without": 1897, "claus": 1897, "protect": 1897, "broken": 1897, "pipe": [1897, 1903], "driver": 1897, "shut": 1897, "down": 1897, "ipc": 1897, "alexnet": 1898, "v": 1898, "index": [1898, 1922], "inlin": 1898, "discov": 1898, "unconvert": 1898, "onc": 1898, "preview": 1898, "diagnost": 1899, "closur": 1901, "adjust": 1901, "rate": 1901, "averag": 1901, "swa": 1901, "ema": 1901, "schedul": 1901, "care": 1901, "put": 1901, "togeth": 1901, "your": 1902, "treat": 1902, "archiv": 1902, "file_structur": 1902, "given": 1902, "wa": 1902, "later": 1902, "distinguish": 1902, "explan": 1902, "framework": [1902, 1910], "user": [1902, 1912], "find": 1902, "analyz": 1902, "extern": 1902, "mock": 1902, "refactor": 1902, "sharp": 1902, "global": 1902, "isol": 1902, "mangl": 1902, "pipelin": 1903, "skip": 1903, "connect": 1903, "intel": 1904, "instrument": 1904, "technologi": 1904, "eager": 1905, "awar": 1905, "engin": [1905, 1922], "observ": [1905, 1908], "hardwar": 1905, "nativ": [1905, 1907], "configur": [1905, 1907, 1922], "insensit": 1906, "int8": 1906, "sensit": 1906, "ao": [1908, 1923, 1924], "top": 1908, "quantize_fx": 1908, "qconfig_map": 1908, "backend_config": 1908, "custom_config": 1908, "fake_quant": 1908, "intrins": 1908, "qat": 1908, "scheme": 1908, "rpc": 1910, "tensorpip": 1910, "rref": [1910, 1912], "remotemodul": 1910, "record": 1911, "dure": 1911, "smart": 1911, "end": 1911, "protocol": 1912, "assumpt": 1912, "lifetim": 1912, "reason": 1912, "scenario": 1912, "owner": 1912, "argument": 1912, "sparsiti": 1914, "coo": 1914, "hybrid": 1914, "uncoalesc": 1914, "csr": 1914, "csc": 1914, "bsr": 1914, "bsc": 1914, "memory_format": 1917, "tensorboard": 1919, "creation": 1922, "sampl": 1922, "quasi": 1922, "pointwis": 1922, "spectral": 1922, "bla": 1922, "lapack": 1922, "foreach": 1922, "tag": 1922, "n": [1923, 1924], "_numeric_suit": 1923, "_numeric_suite_fx": 1924, "info": 1926, "finfo": 1926, "iinfo": 1926}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.arccos": [[118, "torch-tensor-arccos"]], "torch.Tensor.arccosh_": [[121, "torch-tensor-arccosh"]], "torch.Tensor.arctan2_": [[128, "torch-tensor-arctan2"]], "torch.Tensor.any": [[116, "torch-tensor-any"]], "torch.Tensor.atan": [[142, "torch-tensor-atan"]], "torch.Tensor.arccosh": [[120, "torch-tensor-arccosh"]], "torch.Tensor.arctanh_": [[131, "torch-tensor-arctanh"]], "torch.Tensor.atan2_": [[144, "torch-tensor-atan2"]], "torch.Tensor.argmin": [[133, "torch-tensor-argmin"]], "torch.Tensor.addmm": [[103, "torch-tensor-addmm"]], "torch.Tensor.atanh": [[146, "torch-tensor-atanh"]], "torch.Tensor.apply_": [[117, "torch-tensor-apply"]], "torch.Tensor.allclose": [[111, "torch-tensor-allclose"]], "torch.Tensor.addcdiv": [[99, "torch-tensor-addcdiv"]], "torch.Tensor.asinh_": [[141, "torch-tensor-asinh"]], "torch.Tensor.amin": [[113, "torch-tensor-amin"]], "torch.Tensor.argsort": [[134, "torch-tensor-argsort"]], "torch.Tensor.asin": [[138, "torch-tensor-asin"]], "torch.Tensor.addcmul": [[101, "torch-tensor-addcmul"]], "torch.Tensor.asin_": [[139, "torch-tensor-asin"]], "torch.Tensor.addmm_": [[104, "torch-tensor-addmm"]], "torch.Tensor.arccos_": [[119, "torch-tensor-arccos"]], "torch.Tensor.arcsinh": [[124, "torch-tensor-arcsinh"]], "torch.Tensor.as_strided": [[136, "torch-tensor-as-strided"]], "torch.Tensor.angle": [[115, "torch-tensor-angle"]], "torch.Tensor.addbmm_": [[98, "torch-tensor-addbmm"]], "torch.Tensor.addcmul_": [[102, "torch-tensor-addcmul"]], "torch.Tensor.arcsinh_": [[125, "torch-tensor-arcsinh"]], "torch.Tensor.arctan2": [[127, "torch-tensor-arctan2"]], "torch.Tensor.argmax": [[132, "torch-tensor-argmax"]], "torch.Tensor.addcdiv_": [[100, "torch-tensor-addcdiv"]], "torch.Tensor.arcsin_": [[123, "torch-tensor-arcsin"]], "torch.Tensor.amax": [[112, "torch-tensor-amax"]], "torch.Tensor.as_subclass": [[137, "torch-tensor-as-subclass"]], "torch.Tensor.addmv_": [[106, "torch-tensor-addmv"]], "torch.Tensor.atan2": [[143, "torch-tensor-atan2"]], "torch.Tensor.atan_": [[145, "torch-tensor-atan"]], "torch.Tensor.arctan_": [[129, "torch-tensor-arctan"]], "torch.Tensor.addr": [[107, "torch-tensor-addr"]], "torch.Tensor.arcsin": [[122, "torch-tensor-arcsin"]], "torch.Tensor.arctanh": [[130, "torch-tensor-arctanh"]], "torch.Tensor.asinh": [[140, "torch-tensor-asinh"]], "torch.Tensor.aminmax": [[114, "torch-tensor-aminmax"]], "torch.Tensor.adjoint": [[109, "torch-tensor-adjoint"]], "torch.Tensor.argwhere": [[135, "torch-tensor-argwhere"]], "torch.Tensor.all": [[110, "torch-tensor-all"]], "torch.Tensor.addmv": [[105, "torch-tensor-addmv"]], "torch.Tensor.addr_": [[108, "torch-tensor-addr"]], "torch.Tensor.arctan": [[126, "torch-tensor-arctan"]], "torch.Tensor.cumsum_": [[213, "torch-tensor-cumsum"]], "torch.Tensor.device": [[221, "torch-tensor-device"]], "torch.Tensor.cov": [[203, "torch-tensor-cov"]], "torch.Tensor.diff": [[227, "torch-tensor-diff"]], "torch.Tensor.cos": [[198, "torch-tensor-cos"]], "torch.Tensor.erf": [[243, "torch-tensor-erf"]], "torch.Tensor.cumsum": [[212, "torch-tensor-cumsum"]], "torch.Tensor.cos_": [[199, "torch-tensor-cos"]], "torch.Tensor.dsplit": [[238, "torch-tensor-dsplit"]], "torch.Tensor.element_size": [[239, "torch-tensor-element-size"]], "torch.Tensor.diag": [[222, "torch-tensor-diag"]], "torch.Tensor.dot": [[236, "torch-tensor-dot"]], "torch.Tensor.detach": [[219, "torch-tensor-detach"]], "torch.Tensor.cummin": [[209, "torch-tensor-cummin"]], "torch.Tensor.eq_": [[241, "torch-tensor-eq"]], "torch.Tensor.detach_": [[220, "torch-tensor-detach"]], "torch.Tensor.dim": [[230, "torch-tensor-dim"]], "torch.Tensor.digamma": [[228, "torch-tensor-digamma"]], "torch.Tensor.corrcoef": [[197, "torch-tensor-corrcoef"]], "torch.Tensor.count_nonzero": [[202, "torch-tensor-count-nonzero"]], "torch.Tensor.div": [[232, "torch-tensor-div"]], "torch.Tensor.digamma_": [[229, "torch-tensor-digamma"]], "torch.Tensor.cumprod": [[210, "torch-tensor-cumprod"]], "torch.Tensor.diagonal_scatter": [[226, "torch-tensor-diagonal-scatter"]], "torch.Tensor.div_": [[233, "torch-tensor-div"]], "torch.Tensor.divide_": [[235, "torch-tensor-divide"]], "torch.Tensor.crow_indices": [[206, "torch-tensor-crow-indices"]], "torch.Tensor.equal": [[242, "torch-tensor-equal"]], "torch.Tensor.cosh_": [[201, "torch-tensor-cosh"]], "torch.Tensor.cuda": [[207, "torch-tensor-cuda"]], "torch.Tensor.dense_dim": [[216, "torch-tensor-dense-dim"]], "torch.Tensor.diagonal": [[225, "torch-tensor-diagonal"]], "torch.Tensor.copysign_": [[196, "torch-tensor-copysign"]], "torch.Tensor.data_ptr": [[214, "torch-tensor-data-ptr"]], "torch.Tensor.erf_": [[244, "torch-tensor-erf"]], "torch.Tensor.cosh": [[200, "torch-tensor-cosh"]], "torch.Tensor.dequantize": [[217, "torch-tensor-dequantize"]], "torch.Tensor.diagflat": [[224, "torch-tensor-diagflat"]], "torch.Tensor.double": [[237, "torch-tensor-double"]], "torch.Tensor.divide": [[234, "torch-tensor-divide"]], "torch.Tensor.deg2rad": [[215, "torch-tensor-deg2rad"]], "torch.Tensor.cpu": [[204, "torch-tensor-cpu"]], "torch.Tensor.eq": [[240, "torch-tensor-eq"]], "torch.Tensor.cummax": [[208, "torch-tensor-cummax"]], "torch.Tensor.cross": [[205, "torch-tensor-cross"]], "torch.Tensor.cumprod_": [[211, "torch-tensor-cumprod"]], "torch.Tensor.det": [[218, "torch-tensor-det"]], "torch.Tensor.dist": [[231, "torch-tensor-dist"]], "torch.Tensor.diag_embed": [[223, "torch-tensor-diag-embed"]], "torch.Tensor.conj": [[190, "torch-tensor-conj"]], "torch.Tensor.bitwise_or": [[161, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_or_": [[162, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_and_": [[156, "torch-tensor-bitwise-and"]], "torch.Tensor.chalf": [[177, "torch-tensor-chalf"]], "torch.Tensor.bincount": [[154, "torch-tensor-bincount"]], "torch.Tensor.chunk": [[182, "torch-tensor-chunk"]], "torch.Tensor.contiguous": [[193, "torch-tensor-contiguous"]], "torch.Tensor.conj_physical_": [[192, "torch-tensor-conj-physical"]], "torch.Tensor.cholesky": [[179, "torch-tensor-cholesky"]], "torch.Tensor.bitwise_and": [[155, "torch-tensor-bitwise-and"]], "torch.Tensor.clamp": [[183, "torch-tensor-clamp"]], "torch.Tensor.bmm": [[167, "torch-tensor-bmm"]], "torch.Tensor.ccol_indices": [[172, "torch-tensor-ccol-indices"]], "torch.Tensor.clip": [[185, "torch-tensor-clip"]], "torch.Tensor.conj_physical": [[191, "torch-tensor-conj-physical"]], "torch.Tensor.ceil_": [[175, "torch-tensor-ceil"]], "torch.Tensor.bfloat16": [[153, "torch-tensor-bfloat16"]], "torch.Tensor.copy_": [[194, "torch-tensor-copy"]], "torch.Tensor.bitwise_xor": [[165, "torch-tensor-bitwise-xor"]], "torch.Tensor.bool": [[168, "torch-tensor-bool"]], "torch.Tensor.col_indices": [[189, "torch-tensor-col-indices"]], "torch.Tensor.clamp_": [[184, "torch-tensor-clamp"]], "torch.Tensor.bitwise_xor_": [[166, "torch-tensor-bitwise-xor"]], "torch.Tensor.bitwise_right_shift_": [[164, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.backward": [[148, "torch-tensor-backward"]], "torch.Tensor.bitwise_not_": [[160, "torch-tensor-bitwise-not"]], "torch.Tensor.clone": [[187, "torch-tensor-clone"]], "torch.Tensor.byte": [[170, "torch-tensor-byte"]], "torch.Tensor.cholesky_solve": [[181, "torch-tensor-cholesky-solve"]], "torch.Tensor.atanh_": [[147, "torch-tensor-atanh"]], "torch.Tensor.copysign": [[195, "torch-tensor-copysign"]], "torch.Tensor.bitwise_not": [[159, "torch-tensor-bitwise-not"]], "torch.Tensor.baddbmm_": [[150, "torch-tensor-baddbmm"]], "torch.Tensor.bitwise_left_shift": [[157, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.cfloat": [[176, "torch-tensor-cfloat"]], "torch.Tensor.bernoulli": [[151, "torch-tensor-bernoulli"]], "torch.Tensor.cauchy_": [[171, "torch-tensor-cauchy"]], "torch.Tensor.clip_": [[186, "torch-tensor-clip"]], "torch.Tensor.broadcast_to": [[169, "torch-tensor-broadcast-to"]], "torch.Tensor.baddbmm": [[149, "torch-tensor-baddbmm"]], "torch.Tensor.char": [[178, "torch-tensor-char"]], "torch.Tensor.cdouble": [[173, "torch-tensor-cdouble"]], "torch.Tensor.cholesky_inverse": [[180, "torch-tensor-cholesky-inverse"]], "torch.Tensor.bitwise_left_shift_": [[158, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bernoulli_": [[152, "torch-tensor-bernoulli"]], "torch.Tensor.ceil": [[174, "torch-tensor-ceil"]], "torch.Tensor.coalesce": [[188, "torch-tensor-coalesce"]], "torch.Tensor.bitwise_right_shift": [[163, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.greater_equal": [[290, "torch-tensor-greater-equal"]], "torch.Tensor.exp": [[249, "torch-tensor-exp"]], "torch.Tensor.greater": [[288, "torch-tensor-greater"]], "torch.Tensor.erfc": [[245, "torch-tensor-erfc"]], "torch.Tensor.erfinv_": [[248, "torch-tensor-erfinv"]], "torch.Tensor.flatten": [[260, "torch-tensor-flatten"]], "torch.Tensor.ger": [[285, "torch-tensor-ger"]], "torch.Tensor.frac_": [[276, "torch-tensor-frac"]], "torch.Tensor.exp_": [[250, "torch-tensor-exp"]], "torch.Tensor.gcd_": [[280, "torch-tensor-gcd"]], "torch.Tensor.float": [[264, "torch-tensor-float"]], "torch.Tensor.floor_divide_": [[270, "torch-tensor-floor-divide"]], "torch.Tensor.floor_": [[268, "torch-tensor-floor"]], "torch.Tensor.ge": [[281, "torch-tensor-ge"]], "torch.Tensor.fmin": [[272, "torch-tensor-fmin"]], "torch.Tensor.fmod": [[273, "torch-tensor-fmod"]], "torch.Tensor.exponential_": [[255, "torch-tensor-exponential"]], "torch.Tensor.grad": [[287, "torch-tensor-grad"]], "torch.Tensor.floor": [[267, "torch-tensor-floor"]], "torch.Tensor.fmax": [[271, "torch-tensor-fmax"]], "torch.Tensor.flip": [[261, "torch-tensor-flip"]], "torch.Tensor.float_power_": [[266, "torch-tensor-float-power"]], "torch.Tensor.frac": [[275, "torch-tensor-frac"]], "torch.Tensor.flipud": [[263, "torch-tensor-flipud"]], "torch.Tensor.frexp": [[277, "torch-tensor-frexp"]], "torch.Tensor.ge_": [[282, "torch-tensor-ge"]], "torch.Tensor.gt": [[292, "torch-tensor-gt"]], "torch.Tensor.fix_": [[259, "torch-tensor-fix"]], "torch.Tensor.geometric_": [[283, "torch-tensor-geometric"]], "torch.Tensor.geqrf": [[284, "torch-tensor-geqrf"]], "torch.Tensor.expand": [[251, "torch-tensor-expand"]], "torch.Tensor.gcd": [[279, "torch-tensor-gcd"]], "torch.Tensor.greater_": [[289, "torch-tensor-greater"]], "torch.Tensor.gt_": [[293, "torch-tensor-gt"]], "torch.Tensor.float_power": [[265, "torch-tensor-float-power"]], "torch.Tensor.erfinv": [[247, "torch-tensor-erfinv"]], "torch.Tensor.erfc_": [[246, "torch-tensor-erfc"]], "torch.Tensor.expm1": [[253, "torch-tensor-expm1"]], "torch.Tensor.fliplr": [[262, "torch-tensor-fliplr"]], "torch.Tensor.greater_equal_": [[291, "torch-tensor-greater-equal"]], "torch.Tensor.fix": [[258, "torch-tensor-fix"]], "torch.Tensor.get_device": [[286, "torch-tensor-get-device"]], "torch.Tensor.fill_diagonal_": [[257, "torch-tensor-fill-diagonal"]], "torch.Tensor.expm1_": [[254, "torch-tensor-expm1"]], "torch.Tensor.expand_as": [[252, "torch-tensor-expand-as"]], "torch.Tensor.floor_divide": [[269, "torch-tensor-floor-divide"]], "torch.Tensor.fmod_": [[274, "torch-tensor-fmod"]], "torch.Tensor.fill_": [[256, "torch-tensor-fill"]], "torch.Tensor.gather": [[278, "torch-tensor-gather"]], "torch.Tensor.index_put": [[315, "torch-tensor-index-put"]], "torch.Tensor.int": [[322, "torch-tensor-int"]], "torch.Tensor.hsplit": [[299, "torch-tensor-hsplit"]], "torch.Tensor.imag": [[308, "torch-tensor-imag"]], "torch.Tensor.hypot_": [[301, "torch-tensor-hypot"]], "torch.Tensor.index_copy": [[311, "torch-tensor-index-copy"]], "torch.Tensor.index_reduce": [[317, "torch-tensor-index-reduce"]], "torch.Tensor.indices": [[320, "torch-tensor-indices"]], "torch.Tensor.is_leaf": [[332, "torch-tensor-is-leaf"]], "torch.Tensor.igammac": [[306, "torch-tensor-igammac"]], "torch.Tensor.heaviside": [[296, "torch-tensor-heaviside"]], "torch.Tensor.is_floating_point": [[330, "torch-tensor-is-floating-point"]], "torch.Tensor.is_set_to": [[336, "torch-tensor-is-set-to"]], "torch.Tensor.is_shared": [[337, "torch-tensor-is-shared"]], "torch.Tensor.inverse": [[324, "torch-tensor-inverse"]], "torch.Tensor.half": [[294, "torch-tensor-half"]], "torch.Tensor.index_copy_": [[312, "torch-tensor-index-copy"]], "torch.Tensor.hardshrink": [[295, "torch-tensor-hardshrink"]], "torch.Tensor.is_meta": [[333, "torch-tensor-is-meta"]], "torch.Tensor.i0_": [[303, "torch-tensor-i0"]], "torch.Tensor.index_select": [[319, "torch-tensor-index-select"]], "torch.Tensor.histogram": [[298, "torch-tensor-histogram"]], "torch.Tensor.int_repr": [[323, "torch-tensor-int-repr"]], "torch.Tensor.igammac_": [[307, "torch-tensor-igammac"]], "torch.Tensor.inner": [[321, "torch-tensor-inner"]], "torch.Tensor.is_sparse": [[339, "torch-tensor-is-sparse"]], "torch.Tensor.isclose": [[341, "torch-tensor-isclose"]], "torch.Tensor.igamma": [[304, "torch-tensor-igamma"]], "torch.Tensor.is_conj": [[327, "torch-tensor-is-conj"]], "torch.Tensor.index_add": [[309, "torch-tensor-index-add"]], "torch.Tensor.isfinite": [[342, "torch-tensor-isfinite"]], "torch.Tensor.is_sparse_csr": [[340, "torch-tensor-is-sparse-csr"]], "torch.Tensor.is_quantized": [[335, "torch-tensor-is-quantized"]], "torch.Tensor.histc": [[297, "torch-tensor-histc"]], "torch.Tensor.index_fill": [[313, "torch-tensor-index-fill"]], "torch.Tensor.is_coalesced": [[325, "torch-tensor-is-coalesced"]], "torch.Tensor.index_reduce_": [[318, "torch-tensor-index-reduce"]], "torch.Tensor.index_fill_": [[314, "torch-tensor-index-fill"]], "torch.Tensor.is_cuda": [[329, "torch-tensor-is-cuda"]], "torch.Tensor.hypot": [[300, "torch-tensor-hypot"]], "torch.Tensor.is_complex": [[326, "torch-tensor-is-complex"]], "torch.Tensor.is_contiguous": [[328, "torch-tensor-is-contiguous"]], "torch.Tensor.is_signed": [[338, "torch-tensor-is-signed"]], "torch.Tensor.is_pinned": [[334, "torch-tensor-is-pinned"]], "torch.Tensor.is_inference": [[331, "torch-tensor-is-inference"]], "torch.Tensor.i0": [[302, "torch-tensor-i0"]], "torch.Tensor.index_add_": [[310, "torch-tensor-index-add"]], "torch.Tensor.index_put_": [[316, "torch-tensor-index-put"]], "torch.Tensor.igamma_": [[305, "torch-tensor-igamma"]], "torch.Tensor.lt": [[391, "torch-tensor-lt"]], "torch.Tensor.le_": [[357, "torch-tensor-le"]], "torch.Tensor.log_": [[373, "torch-tensor-log"]], "torch.Tensor.logit_": [[388, "torch-tensor-logit"]], "torch.Tensor.lerp": [[358, "torch-tensor-lerp"]], "torch.Tensor.kthvalue": [[351, "torch-tensor-kthvalue"]], "torch.Tensor.lgamma": [[364, "torch-tensor-lgamma"]], "torch.Tensor.ldexp_": [[355, "torch-tensor-ldexp"]], "torch.Tensor.logcumsumexp": [[377, "torch-tensor-logcumsumexp"]], "torch.Tensor.logaddexp": [[375, "torch-tensor-logaddexp"]], "torch.Tensor.long": [[390, "torch-tensor-long"]], "torch.Tensor.logical_not_": [[382, "torch-tensor-logical-not"]], "torch.Tensor.less": [[360, "torch-tensor-less"]], "torch.Tensor.isposinf": [[346, "torch-tensor-isposinf"]], "torch.Tensor.log1p_": [[370, "torch-tensor-log1p"]], "torch.Tensor.isreal": [[347, "torch-tensor-isreal"]], "torch.Tensor.log1p": [[369, "torch-tensor-log1p"]], "torch.Tensor.item": [[349, "torch-tensor-item"]], "torch.Tensor.lgamma_": [[365, "torch-tensor-lgamma"]], "torch.Tensor.logsumexp": [[389, "torch-tensor-logsumexp"]], "torch.Tensor.logaddexp2": [[376, "torch-tensor-logaddexp2"]], "torch.Tensor.log": [[366, "torch-tensor-log"]], "torch.Tensor.logical_or": [[383, "torch-tensor-logical-or"]], "torch.Tensor.logical_not": [[381, "torch-tensor-logical-not"]], "torch.Tensor.less_": [[361, "torch-tensor-less"]], "torch.Tensor.logical_xor": [[385, "torch-tensor-logical-xor"]], "torch.Tensor.less_equal": [[362, "torch-tensor-less-equal"]], "torch.Tensor.logical_and_": [[380, "torch-tensor-logical-and"]], "torch.Tensor.logical_and": [[379, "torch-tensor-logical-and"]], "torch.Tensor.logdet": [[378, "torch-tensor-logdet"]], "torch.Tensor.lcm": [[352, "torch-tensor-lcm"]], "torch.Tensor.ldexp": [[354, "torch-tensor-ldexp"]], "torch.Tensor.less_equal_": [[363, "torch-tensor-less-equal"]], "torch.Tensor.log10_": [[368, "torch-tensor-log10"]], "torch.Tensor.logit": [[387, "torch-tensor-logit"]], "torch.Tensor.log2": [[371, "torch-tensor-log2"]], "torch.Tensor.log_normal_": [[374, "torch-tensor-log-normal"]], "torch.Tensor.logical_or_": [[384, "torch-tensor-logical-or"]], "torch.Tensor.istft": [[348, "torch-tensor-istft"]], "torch.Tensor.isinf": [[343, "torch-tensor-isinf"]], "torch.Tensor.isneginf": [[345, "torch-tensor-isneginf"]], "torch.Tensor.log2_": [[372, "torch-tensor-log2"]], "torch.Tensor.itemsize": [[350, "torch-tensor-itemsize"]], "torch.Tensor.le": [[356, "torch-tensor-le"]], "torch.Tensor.isnan": [[344, "torch-tensor-isnan"]], "torch.Tensor.log10": [[367, "torch-tensor-log10"]], "torch.Tensor.logical_xor_": [[386, "torch-tensor-logical-xor"]], "torch.Tensor.lerp_": [[359, "torch-tensor-lerp"]], "torch.Tensor.lcm_": [[353, "torch-tensor-lcm"]], "torch.randint_like": [[1716, "torch-randint-like"]], "torch.scatter_add": [[1738, "torch-scatter-add"]], "torch.range": [[1720, "torch-range"]], "torch.sign": [[1758, "torch-sign"]], "torch.randn_like": [[1718, "torch-randn-like"]], "torch.remainder": [[1724, "torch-remainder"]], "torch.save": [[1736, "torch-save"]], "torch.select": [[1742, "torch-select"]], "torch.sigmoid": [[1757, "torch-sigmoid"]], "torch.signal.windows.cosine": [[1761, "torch-signal-windows-cosine"]], "torch.rot90": [[1732, "torch-rot90"]], "torch.set_flush_denormal": [[1749, "torch-set-flush-denormal"]], "torch.set_float32_matmul_precision": [[1748, "torch-set-float32-matmul-precision"]], "torch.searchsorted": [[1740, "torch-searchsorted"]], "torch.result_type": [[1730, "torch-result-type"]], "torch.round": [[1733, "torch-round"]], "torch.set_warn_always": [[1755, "torch-set-warn-always"]], "torch.renorm": [[1725, "torch-renorm"]], "torch.signal.windows.blackman": [[1760, "torch-signal-windows-blackman"]], "torch.signal.windows.gaussian": [[1763, "torch-signal-windows-gaussian"]], "torch.set_num_interop_threads": [[1751, "torch-set-num-interop-threads"]], "torch.row_stack": [[1734, "torch-row-stack"]], "torch.set_printoptions": [[1753, "torch-set-printoptions"]], "torch.set_num_threads": [[1752, "torch-set-num-threads"]], "torch.randn": [[1717, "torch-randn"]], "torch.roll": [[1731, "torch-roll"]], "torch.reciprocal": [[1723, "torch-reciprocal"]], "torch.set_default_device": [[1744, "torch-set-default-device"]], "torch.set_default_dtype": [[1745, "torch-set-default-dtype"]], "torch.randperm": [[1719, "torch-randperm"]], "torch.ravel": [[1721, "torch-ravel"]], "torch.resolve_neg": [[1729, "torch-resolve-neg"]], "torch.signal.windows.bartlett": [[1759, "torch-signal-windows-bartlett"]], "torch.set_deterministic_debug_mode": [[1747, "torch-set-deterministic-debug-mode"]], "torch.resolve_conj": [[1728, "torch-resolve-conj"]], "torch.real": [[1722, "torch-real"]], "torch.set_default_tensor_type": [[1746, "torch-set-default-tensor-type"]], "torch.reshape": [[1727, "torch-reshape"]], "torch.signal.windows.exponential": [[1762, "torch-signal-windows-exponential"]], "torch.sgn": [[1756, "torch-sgn"]], "torch.rsqrt": [[1735, "torch-rsqrt"]], "torch.scatter_reduce": [[1739, "torch-scatter-reduce"]], "torch.repeat_interleave": [[1726, "torch-repeat-interleave"]], "torch.seed": [[1741, "torch-seed"]], "set_grad_enabled": [[1750, "set-grad-enabled"]], "torch.set_rng_state": [[1754, "torch-set-rng-state"]], "torch.scatter": [[1737, "torch-scatter"]], "torch.select_scatter": [[1743, "torch-select-scatter"]], "torch.randint": [[1715, "torch-randint"]], "torch.sparse_bsc_tensor": [[1787, "torch-sparse-bsc-tensor"]], "torch.square": [[1795, "torch-square"]], "torch.sparse_compressed_tensor": [[1789, "torch-sparse-compressed-tensor"]], "torch.svd": [[1805, "torch-svd"]], "torch.sparse.addmm": [[1779, "torch-sparse-addmm"]], "torch.swapaxes": [[1807, "torch-swapaxes"]], "torch.sparse.mm": [[1782, "torch-sparse-mm"]], "torch.sum": [[1804, "torch-sum"]], "torch.sinc": [[1772, "torch-sinc"]], "torch.sub": [[1802, "torch-sub"]], "torch.sym_max": [[1811, "torch-sym-max"]], "torch.sym_min": [[1812, "torch-sym-min"]], "torch.sym_int": [[1810, "torch-sym-int"]], "torch.signbit": [[1770, "torch-signbit"]], "torch.sparse.softmax": [[1784, "torch-sparse-softmax"]], "torch.sparse_csc_tensor": [[1791, "torch-sparse-csc-tensor"]], "torch.signal.windows.hamming": [[1766, "torch-signal-windows-hamming"]], "torch.sinh": [[1773, "torch-sinh"]], "torch.slogdet": [[1775, "torch-slogdet"]], "torch.sparse_csr_tensor": [[1792, "torch-sparse-csr-tensor"]], "torch.sqrt": [[1794, "torch-sqrt"]], "torch.signal.windows.hann": [[1767, "torch-signal-windows-hann"]], "torch.std": [[1799, "torch-std"]], "torch.svd_lowrank": [[1806, "torch-svd-lowrank"]], "torch.signal.windows.general_hamming": [[1765, "torch-signal-windows-general-hamming"]], "torch.split": [[1793, "torch-split"]], "torch.sparse.sampled_addmm": [[1783, "torch-sparse-sampled-addmm"]], "torch.squeeze": [[1796, "torch-squeeze"]], "torch.sparse.spdiags": [[1785, "torch-sparse-spdiags"]], "torch.smm": [[1776, "torch-smm"]], "torch.sparse_bsr_tensor": [[1788, "torch-sparse-bsr-tensor"]], "torch.sym_float": [[1809, "torch-sym-float"]], "torch.signal.windows.kaiser": [[1768, "torch-signal-windows-kaiser"]], "torch.softmax": [[1777, "torch-softmax"]], "check_sparse_tensor_invariants": [[1780, "check-sparse-tensor-invariants"]], "torch.signal.windows.general_cosine": [[1764, "torch-signal-windows-general-cosine"]], "torch.slice_scatter": [[1774, "torch-slice-scatter"]], "torch.sparse.log_softmax": [[1781, "torch-sparse-log-softmax"]], "torch.subtract": [[1803, "torch-subtract"]], "torch.sspaddmm": [[1797, "torch-sspaddmm"]], "torch.stack": [[1798, "torch-stack"]], "torch.stft": [[1801, "torch-stft"]], "torch.signal.windows.nuttall": [[1769, "torch-signal-windows-nuttall"]], "torch.swapdims": [[1808, "torch-swapdims"]], "torch.sort": [[1778, "torch-sort"]], "torch.sin": [[1771, "torch-sin"]], "torch.sparse_coo_tensor": [[1790, "torch-sparse-coo-tensor"]], "torch.std_mean": [[1800, "torch-std-mean"]], "torch.sparse.sum": [[1786, "torch-sparse-sum"]], "CosineAnnealingWarmRestarts": [[1679, "cosineannealingwarmrestarts"]], "StepLR": [[1690, "steplr"]], "ConstantLR": [[1677, "constantlr"]], "torch.optim.Optimizer.add_param_group": [[1666, "torch-optim-optimizer-add-param-group"]], "CosineAnnealingLR": [[1678, "cosineannealinglr"]], "OneCycleLR": [[1686, "onecyclelr"]], "torch.qr": [[1704, "torch-qr"]], "torch.quantized_batch_norm": [[1708, "torch-quantized-batch-norm"]], "SGD": [[1674, "sgd"]], "torch.rand_like": [[1714, "torch-rand-like"]], "torch.quantize_per_channel": [[1706, "torch-quantize-per-channel"]], "LinearLR": [[1683, "linearlr"]], "torch.prod": [[1702, "torch-prod"]], "torch.optim.Optimizer.load_state_dict": [[1667, "torch-optim-optimizer-load-state-dict"]], "SobolEngine": [[1711, "sobolengine"]], "RMSprop": [[1672, "rmsprop"]], "torch.promote_types": [[1703, "torch-promote-types"]], "torch.poisson": [[1697, "torch-poisson"]], "torch.permute": [[1695, "torch-permute"]], "torch.orgqr": [[1691, "torch-orgqr"]], "torch.positive": [[1700, "torch-positive"]], "ReduceLROnPlateau": [[1688, "reducelronplateau"]], "torch.quantize_per_tensor": [[1707, "torch-quantize-per-tensor"]], "torch.quantized_max_pool2d": [[1710, "torch-quantized-max-pool2d"]], "torch.rand": [[1713, "torch-rand"]], "MultiStepLR": [[1684, "multisteplr"]], "torch.polygamma": [[1699, "torch-polygamma"]], "torch.quantile": [[1705, "torch-quantile"]], "RAdam": [[1671, "radam"]], "torch.optim.Optimizer.zero_grad": [[1670, "torch-optim-optimizer-zero-grad"]], "torch.optim.Optimizer.step": [[1669, "torch-optim-optimizer-step"]], "ExponentialLR": [[1681, "exponentiallr"]], "MultiplicativeLR": [[1685, "multiplicativelr"]], "torch.ormqr": [[1692, "torch-ormqr"]], "SparseAdam": [[1675, "sparseadam"]], "torch.pca_lowrank": [[1694, "torch-pca-lowrank"]], "torch.pinverse": [[1696, "torch-pinverse"]], "torch.pow": [[1701, "torch-pow"]], "LambdaLR": [[1682, "lambdalr"]], "torch.outer": [[1693, "torch-outer"]], "torch.rad2deg": [[1712, "torch-rad2deg"]], "ChainedScheduler": [[1676, "chainedscheduler"]], "CyclicLR": [[1680, "cycliclr"]], "torch.polar": [[1698, "torch-polar"]], "torch.quantized_max_pool1d": [[1709, "torch-quantized-max-pool1d"]], "torch.optim.Optimizer.state_dict": [[1668, "torch-optim-optimizer-state-dict"]], "SequentialLR": [[1689, "sequentiallr"]], "Rprop": [[1673, "rprop"]], "PolynomialLR": [[1687, "polynomiallr"]], "PyTorch documentation": [[1855, "pytorch-documentation"]], "Community": [[1855, null]], "Developer Notes": [[1855, null]], "torch.compile": [[1855, null], [17, "torch-compile"], [20, "torch-compile"], [947, "torch-compile"]], "Language Bindings": [[1855, null]], "Python API": [[1855, null]], "Libraries": [[1855, null]], "Indices and tables": [[1855, "indices-and-tables"]], "torch.tril": [[1829, "torch-tril"]], "torch.t": [[1814, "torch-t"]], "torch.unique": [[1837, "torch-unique"]], "torch.zeros": [[1852, "torch-zeros"]], "torch.trapezoid": [[1826, "torch-trapezoid"]], "torch.tanh": [[1818, "torch-tanh"]], "torch.vander": [[1841, "torch-vander"]], "torch.take_along_dim": [[1816, "torch-take-along-dim"]], "torch.view_as_complex": [[1845, "torch-view-as-complex"]], "TorchScript Language Reference": [[1859, "torchscript-language-reference"], [1860, "torchscript-language-reference"]], "Types": [[1859, "supported-type"], [1898, "types"]], "Unsupported Typing Constructs": [[1859, "unsupported-typing-constructs"], [1860, "unsupported-typing-constructs"]], "Default Types": [[1859, "default-types"]], "Optional Type Refinement": [[1859, "optional-type-refinement"]], "TorchScript Classes": [[1859, "id2"], [1857, "torchscript-classes"]], "TorchScript Enums": [[1859, "id4"]], "Named Tuples": [[1859, "named-tuples"]], "Iterables": [[1859, "iterables"]], "Expressions": [[1859, "expressions"], [1860, "expressions"]], "Literals": [[1859, "literals"], [1860, "literals"]], "List Construction": [[1859, "list-construction"]], "Tuple Construction": [[1859, "tuple-construction"]], "Dict Construction": [[1859, "dict-construction"]], "Variables": [[1859, "variables"], [1857, "variables"], [19, "variables"]], "Arithmetic Operators": [[1859, "arithmetic-operators"]], "Comparison Operators": [[1859, "comparison-operators"]], "Logical Operators": [[1859, "logical-operators"]], "Subscripts and Slicing": [[1859, "subscripts-and-slicing"]], "Function Calls": [[1859, "function-calls"]], "Method Calls": [[1859, "method-calls"]], "Ternary Expressions": [[1859, "ternary-expressions"]], "Casts": [[1859, "casts"]], "Accessing Module Parameters": [[1859, "accessing-module-parameters"]], "Statements": [[1859, "statements"]], "Simple Assignments": [[1859, "simple-assignments"]], "Pattern Matching Assignments": [[1859, "pattern-matching-assignments"]], "Print Statements": [[1859, "print-statements"]], "If Statements": [[1859, "if-statements"]], "While Loops": [[1859, "while-loops"]], "For loops with range": [[1859, "for-loops-with-range"]], "For loops over tuples": [[1859, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1859, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1859, "break-and-continue"]], "Return": [[1859, "return"]], "Variable Resolution": [[1859, "variable-resolution"]], "Use of Python Values": [[1859, "use-of-python-values"]], "Functions": [[1859, "functions"], [1857, "functions"], [1915, "functions"], [1925, "functions"], [1898, "functions"]], "Attribute Lookup On Python Modules": [[1859, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1859, "python-defined-constants"]], "Module Attributes": [[1859, "module-attributes"]], "torch.tan": [[1817, "torch-tan"]], "torch.var": [[1842, "torch-var"]], "torch.trunc": [[1834, "torch-trunc"]], "torch.take": [[1815, "torch-take"]], "TorchScript": [[1857, "torchscript"]], "Creating TorchScript Code": [[1857, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1857, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1857, "torchscript-language"]], "Built-in Functions and Modules": [[1857, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1857, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1857, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1857, "python-language-reference-comparison"]], "Debugging": [[1857, "debugging"], [68, "debugging"]], "Disable JIT for Debugging": [[1857, "disable-jit-for-debugging"]], "Inspecting Code": [[1857, "inspecting-code"]], "Interpreting Graphs": [[1857, "interpreting-graphs"]], "Tracer": [[1857, "tracer"]], "Tracing Edge Cases": [[1857, "tracing-edge-cases"]], "Automatic Trace Checking": [[1857, "automatic-trace-checking"]], "Tracer Warnings": [[1857, "tracer-warnings"]], "Frequently Asked Questions": [[1857, "frequently-asked-questions"], [16, "frequently-asked-questions"], [8, "frequently-asked-questions"], [1898, "frequently-asked-questions"], [1887, "frequently-asked-questions"], [1905, "frequently-asked-questions"]], "Known Issues": [[1857, "known-issues"]], "Appendix": [[1857, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1857, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1857, "modules"], [1891, "modules"]], "Attributes": [[1857, "attributes"]], "Constants": [[1857, "constants"]], "Fusion Backends": [[1857, "fusion-backends"]], "References": [[1857, "references"]], "IRs": [[1856, "irs"]], "Core Aten IR": [[1856, "core-aten-ir"]], "Prims IR": [[1856, "prims-ir"]], "torch.zeros_like": [[1853, "torch-zeros-like"]], "torch.triangular_solve": [[1828, "torch-triangular-solve"]], "torch.tril_indices": [[1830, "torch-tril-indices"]], "torch.var_mean": [[1843, "torch-var-mean"]], "torch.where": [[1850, "torch-where"]], "torch.tensor": [[1819, "torch-tensor"]], "torch.use_deterministic_algorithms": [[1840, "torch-use-deterministic-algorithms"]], "torch.unbind": [[1835, "torch-unbind"]], "torch.triu": [[1831, "torch-triu"]], "torch.tile": [[1822, "torch-tile"]], "TorchScript Builtins": [[1858, "torchscript-builtins"]], "Supported Tensor Methods": [[1858, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1858, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1858, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1858, "python-built-in-functions"]], "math Module": [[1858, "math-module"]], "torch.vmap": [[1847, "torch-vmap"]], "torch.transpose": [[1825, "torch-transpose"]], "torch.trace": [[1824, "torch-trace"]], "torch.trapz": [[1827, "torch-trapz"]], "torch.vstack": [[1849, "torch-vstack"]], "torch.hub": [[1854, "torch-hub"]], "Publishing models": [[1854, "publishing-models"]], "How to implement an entrypoint?": [[1854, "how-to-implement-an-entrypoint"]], "Important Notice": [[1854, "important-notice"]], "Loading models from Hub": [[1854, "loading-models-from-hub"]], "Running a loaded model:": [[1854, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1854, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1854, "caching-logic"]], "Known limitations:": [[1854, "known-limitations"]], "torch.xlogy": [[1851, "torch-xlogy"]], "Terminology": [[1860, "terminology"]], "Type System": [[1860, "id1"]], "TorchScript Types": [[1860, "torchscript-types"]], "Meta Types": [[1860, "meta-types"]], "Any Type": [[1860, "any-type"]], "Operators Supported for Any Type": [[1860, "operators-supported-for-any-type"]], "Design Notes": [[1860, "design-notes"], [1910, "design-notes"]], "Primitive Types": [[1860, "primitive-types"]], "Structural Types": [[1860, "structural-types"]], "Nominal Types": [[1860, "nominal-types"]], "Built-in Class": [[1860, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1860, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1860, "custom-class"]], "Enum Type": [[1860, "enum-type"]], "TorchScript Module Class": [[1860, "torchscript-module-class"]], "Module Instance Class": [[1860, "module-instance-class"]], "Type Annotation": [[1860, "type-annotation"]], "When to Annotate Types": [[1860, "when-to-annotate-types"]], "Annotate Function Signature": [[1860, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1860, "annotate-variables-and-data-attributes"]], "Local Variables": [[1860, "local-variables"]], "Instance Data Attributes": [[1860, "instance-data-attributes"]], "Type Annotation APIs": [[1860, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1860, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1860, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1860, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[1860, "arithmetic-conversions"]], "Atoms": [[1860, "atoms"]], "Identifiers": [[1860, "identifiers"]], "Parenthesized Forms": [[1860, "parenthesized-forms"]], "List and Dictionary Displays": [[1860, "list-and-dictionary-displays"]], "Primaries": [[1860, "primaries"]], "Attribute References": [[1860, "attribute-references"]], "Subscriptions": [[1860, "subscriptions"]], "Slicings": [[1860, "slicings"]], "Calls": [[1860, "calls"]], "Power Operator": [[1860, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1860, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1860, "binary-arithmetic-operations"]], "Shifting Operations": [[1860, "shifting-operations"]], "Binary Bitwise Operations": [[1860, "binary-bitwise-operations"]], "Comparisons": [[1860, "comparisons"]], "Value Comparisons": [[1860, "value-comparisons"]], "Membership Test Operations": [[1860, "membership-test-operations"]], "Identity Comparisons": [[1860, "identity-comparisons"]], "Boolean Operations": [[1860, "boolean-operations"]], "Conditional Expressions": [[1860, "conditional-expressions"]], "Expression Lists": [[1860, "expression-lists"]], "Simple Statements": [[1860, "simple-statements"]], "Expression Statements": [[1860, "expression-statements"]], "Assignment Statements": [[1860, "assignment-statements"]], "Augmented Assignment Statements": [[1860, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1860, "annotated-assignment-statements"]], "The raise Statement": [[1860, "the-raise-statement"]], "The assert Statement": [[1860, "the-assert-statement"]], "The return Statement": [[1860, "the-return-statement"]], "The del Statement": [[1860, "the-del-statement"]], "The pass Statement": [[1860, "the-pass-statement"]], "The print Statement": [[1860, "the-print-statement"]], "The break Statement": [[1860, "the-break-statement"]], "The continue Statement:": [[1860, "the-continue-statement"]], "Compound Statements": [[1860, "compound-statements"]], "The if Statement": [[1860, "the-if-statement"]], "Basic if/else Statement": [[1860, "basic-if-else-statement"]], "Ternary if/else Statement": [[1860, "ternary-if-else-statement"]], "The while Statement": [[1860, "the-while-statement"]], "The for-in Statement": [[1860, "the-for-in-statement"]], "The with Statement": [[1860, "the-with-statement"]], "The tuple Statement": [[1860, "the-tuple-statement"]], "The getattr Statement": [[1860, "the-getattr-statement"]], "The hasattr Statement": [[1860, "the-hasattr-statement"]], "The zip Statement": [[1860, "the-zip-statement"]], "The enumerate Statement": [[1860, "the-enumerate-statement"]], "Python Values": [[1860, "python-values"]], "Resolution Rules": [[1860, "resolution-rules"]], "Python Built-in Functions Support": [[1860, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1860, "id5"]], "Python Built-in Values Support": [[1860, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1860, "id6"]], "torch.* APIs": [[1860, "torch-apis"]], "Remote Procedure Calls": [[1860, "remote-procedure-calls"]], "Asynchronous Execution": [[1860, "asynchronous-execution"]], "Type Annotations": [[1860, "type-annotations"]], "Meta Programming": [[1860, "meta-programming"]], "Type Refinement": [[1860, "type-refinement"]], "torch.vsplit": [[1848, "torch-vsplit"]], "torch.unflatten": [[1836, "torch-unflatten"]], "torch.sym_not": [[1813, "torch-sym-not"]], "torch.topk": [[1823, "torch-topk"]], "torch.triu_indices": [[1832, "torch-triu-indices"]], "torch.true_divide": [[1833, "torch-true-divide"]], "torch.unsqueeze": [[1839, "torch-unsqueeze"]], "Python Language Reference Coverage": [[1861, "python-language-reference-coverage"]], "torch.tensor_split": [[1820, "torch-tensor-split"]], "torch.vdot": [[1844, "torch-vdot"]], "torch.unique_consecutive": [[1838, "torch-unique-consecutive"]], "torch.tensordot": [[1821, "torch-tensordot"]], "torch.view_as_real": [[1846, "torch-view-as-real"]], "torch.nn.modules.module.register_module_backward_hook": [[1591, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1597, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.functional.scaled_dot_product_attention": [[1568, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.softplus": [[1576, "torch-nn-functional-softplus"]], "torch.nn.utils.parametrizations.spectral_norm": [[1607, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.utils.parametrizations.orthogonal": [[1606, "torch-nn-utils-parametrizations-orthogonal"]], "BasePruningMethod": [[1613, "basepruningmethod"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1583, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.utils.clip_grad_value_": [[1604, "torch-nn-utils-clip-grad-value"]], "LazyModuleMixin": [[1590, "lazymodulemixin"]], "Parameter": [[1600, "parameter"]], "torch.nn.functional.threshold": [[1581, "torch-nn-functional-threshold"]], "torch.nn.functional.upsample_nearest": [[1589, "torch-nn-functional-upsample-nearest"]], "torch.nn.functional.selu": [[1569, "torch-nn-functional-selu"]], "UninitializedParameter": [[1602, "uninitializedparameter"]], "torch.nn.utils.parametrize.cached": [[1609, "torch-nn-utils-parametrize-cached"]], "torch.nn.utils.parameters_to_vector": [[1605, "torch-nn-utils-parameters-to-vector"]], "torch.nn.functional.soft_margin_loss": [[1573, "torch-nn-functional-soft-margin-loss"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1595, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.smooth_l1_loss": [[1572, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.softmin": [[1575, "torch-nn-functional-softmin"]], "UninitializedBuffer": [[1601, "uninitializedbuffer"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1592, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.functional.threshold_": [[1582, "torch-nn-functional-threshold"]], "torch.nn.functional.softsign": [[1578, "torch-nn-functional-softsign"]], "Identity": [[1615, "identity"], [1381, "identity"]], "torch.nn.functional.softmax": [[1574, "torch-nn-functional-softmax"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1598, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "ParametrizationList": [[1608, "parametrizationlist"]], "torch.nn.functional.upsample": [[1587, "torch-nn-functional-upsample"]], "torch.nn.functional.upsample_bilinear": [[1588, "torch-nn-functional-upsample-bilinear"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1594, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.utils.clip_grad_norm_": [[1603, "torch-nn-utils-clip-grad-norm"]], "L1Unstructured": [[1616, "l1unstructured"]], "torch.nn.functional.tanhshrink": [[1580, "torch-nn-functional-tanhshrink"]], "torch.nn.utils.parametrize.is_parametrized": [[1610, "torch-nn-utils-parametrize-is-parametrized"]], "CustomFromMask": [[1614, "customfrommask"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1596, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.functional.tanh": [[1579, "torch-nn-functional-tanh"]], "torch.nn.functional.softshrink": [[1577, "torch-nn-functional-softshrink"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1585, "torch-nn-functional-triplet-margin-with-distance-loss"]], "DistributedDataParallel": [[1599, "distributeddataparallel"], [1884, "distributeddataparallel"]], "torch.nn.utils.parametrize.register_parametrization": [[1611, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.functional.triplet_margin_loss": [[1584, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.functional.silu": [[1571, "torch-nn-functional-silu"]], "torch.nn.modules.module.register_module_forward_hook": [[1593, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1612, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.functional.sigmoid": [[1570, "torch-nn-functional-sigmoid"]], "torch.nn.functional.unfold": [[1586, "torch-nn-functional-unfold"]], "torch.nn.functional.hardswish": [[1523, "torch-nn-functional-hardswish"]], "torch.nn.functional.nll_loss": [[1553, "torch-nn-functional-nll-loss"]], "torch.nn.functional.rrelu_": [[1567, "torch-nn-functional-rrelu"]], "torch.nn.functional.huber_loss": [[1527, "torch-nn-functional-huber-loss"]], "torch.nn.functional.pairwise_distance": [[1557, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.pad": [[1556, "torch-nn-functional-pad"]], "torch.nn.functional.lp_pool1d": [[1539, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.gumbel_softmax": [[1520, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.group_norm": [[1519, "torch-nn-functional-group-norm"]], "torch.nn.functional.hardsigmoid": [[1522, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.local_response_norm": [[1536, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.rrelu": [[1566, "torch-nn-functional-rrelu"]], "torch.nn.functional.linear": [[1535, "torch-nn-functional-linear"]], "torch.nn.functional.multilabel_margin_loss": [[1551, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.multi_margin_loss": [[1550, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.pdist": [[1558, "torch-nn-functional-pdist"]], "torch.nn.functional.max_pool3d": [[1544, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.hardtanh": [[1524, "torch-nn-functional-hardtanh"]], "torch.nn.functional.instance_norm": [[1528, "torch-nn-functional-instance-norm"]], "torch.nn.functional.lp_pool2d": [[1540, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.max_pool1d": [[1542, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.hardshrink": [[1521, "torch-nn-functional-hardshrink"]], "torch.nn.functional.hinge_embedding_loss": [[1526, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.leaky_relu": [[1533, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.leaky_relu_": [[1534, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.mish": [[1548, "torch-nn-functional-mish"]], "torch.nn.functional.pixel_shuffle": [[1559, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.relu6": [[1564, "torch-nn-functional-relu6"]], "torch.nn.functional.interpolate": [[1529, "torch-nn-functional-interpolate"]], "torch.nn.functional.pixel_unshuffle": [[1560, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.max_unpool2d": [[1546, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.logsigmoid": [[1538, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.hardtanh_": [[1525, "torch-nn-functional-hardtanh"]], "torch.nn.functional.log_softmax": [[1537, "torch-nn-functional-log-softmax"]], "torch.nn.functional.normalize": [[1554, "torch-nn-functional-normalize"]], "torch.nn.functional.relu": [[1563, "torch-nn-functional-relu"]], "torch.nn.functional.layer_norm": [[1532, "torch-nn-functional-layer-norm"]], "torch.nn.functional.prelu": [[1562, "torch-nn-functional-prelu"]], "torch.nn.functional.l1_loss": [[1531, "torch-nn-functional-l1-loss"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1552, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.one_hot": [[1555, "torch-nn-functional-one-hot"]], "torch.nn.functional.max_pool2d": [[1543, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.poisson_nll_loss": [[1561, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.max_unpool1d": [[1545, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.relu_": [[1565, "torch-nn-functional-relu"]], "torch.nn.functional.kl_div": [[1530, "torch-nn-functional-kl-div"]], "torch.nn.functional.max_unpool3d": [[1547, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.mse_loss": [[1549, "torch-nn-functional-mse-loss"]], "torch.nn.functional.margin_ranking_loss": [[1541, "torch-nn-functional-margin-ranking-loss"]], "Events": [[49, "module-torch.distributed.elastic.events"]], "API Methods": [[49, "api-methods"]], "Event Objects": [[49, "event-objects"]], "FXE0005:fx-ir-add-node": [[74, "fxe0005-fx-ir-add-node"]], "Expiration Timers": [[57, "module-torch.distributed.elastic.timer"]], "Client Methods": [[57, "client-methods"]], "Server/Client Implementations": [[57, "server-client-implementations"]], "Writing a custom timer server/client": [[57, "writing-a-custom-timer-server-client"]], "torch.Tensor.absolute_": [[90, "torch-tensor-absolute"]], "Quickstart": [[54, "quickstart"]], "torch.func": [[61, "torch-func"]], "What are composable function transforms?": [[61, "what-are-composable-function-transforms"]], "Why composable function transforms?": [[61, "why-composable-function-transforms"], [66, "why-composable-function-transforms"]], "Read More": [[61, "read-more"]], "torch.Tensor.add": [[95, "torch-tensor-add"]], "FullyShardedDataParallel": [[60, "module-torch.distributed.fsdp"]], "FXE0008:fx-node-to-onnx": [[77, "fxe0008-fx-node-to-onnx"]], "UX Limitations": [[65, "ux-limitations"]], "General limitations": [[65, "general-limitations"]], "torch.autograd APIs": [[65, "torch-autograd-apis"]], "vmap limitations": [[65, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[65, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[65, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[65, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[65, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[65, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[65, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[65, "randomness"]], "torch.Tensor.acosh_": [[94, "torch-tensor-acosh"]], "DIAGSYS0001:arg-format-too-verbose": [[69, "diagsys0001-arg-format-too-verbose"]], "torch.Tensor.abs_": [[88, "torch-tensor-abs"]], "Generator": [[86, "generator"]], "Metrics": [[52, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[52, "metric-handlers"]], "Methods": [[52, "methods"]], "FXE0004:fx-pass-convert-neg-to-sigmoid": [[73, "fxe0004-fx-pass-convert-neg-to-sigmoid"]], "Migrating from functorch to torch.func": [[64, "migrating-from-functorch-to-torch-func"]], "function transforms": [[64, "function-transforms"]], "NN module utilities": [[64, "nn-module-utilities"]], "functorch.make_functional": [[64, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[64, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[64, "functorch-compile"]], "torch.fx": [[68, "torch-fx"]], "Overview": [[68, "module-torch.fx"], [12, "overview"], [32, "module-torch.cuda._sanitizer"], [1904, "module-torch.profiler"], [1899, "overview"]], "Writing Transformations": [[68, "writing-transformations"]], "A Quick Primer on Graphs": [[68, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[68, "graph-manipulation"]], "Direct Graph Manipulation": [[68, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[68, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[68, "graph-manipulation-examples"]], "Proxy/Retracing": [[68, "proxy-retracing"]], "The Interpreter Pattern": [[68, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[68, "examples-of-the-interpreter-pattern"]], "Introduction": [[68, "introduction"], [1867, "introduction"], [1875, "introduction"]], "Common Pitfalls in Transform Authoring": [[68, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[68, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[68, "debugging-the-generated-code"]], "Use pdb": [[68, "use-pdb"]], "Print the Generated Code": [[68, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[68, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[68, "debugging-the-transformation"]], "Available Debuggers": [[68, "available-debuggers"]], "Limitations of Symbolic Tracing": [[68, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[68, "dynamic-control-flow"]], "Static Control Flow": [[68, "static-control-flow"]], "Non-torch Functions": [[68, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[68, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[68, "leaf-modules"]], "Miscellanea": [[68, "miscellanea"]], "API Reference": [[68, "api-reference"], [32, "api-reference"], [1904, "api-reference"], [1870, "module-torch.monitor"], [1899, "api-reference"], [1902, "api-reference"]], "torch.futures": [[67, "torch-futures"]], "POE0003:missing-standard-symbolic-function": [[84, "poe0003-missing-standard-symbolic-function"]], "torch.fft": [[59, "torch-fft"]], "Fast Fourier Transforms": [[59, "fast-fourier-transforms"]], "Helper Functions": [[59, "helper-functions"]], "FXE0010:fx-pass": [[79, "fxe0010-fx-pass"]], "TorchElastic Kubernetes": [[51, "torchelastic-kubernetes"]], "torchrun (Elastic Launch)": [[56, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[56, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Usage": [[56, "usage"], [41, null], [32, "usage"]], "Single-node multi-worker": [[56, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[56, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[56, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[56, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[56, "note-on-rendezvous-backend"]], "Definitions": [[56, "definitions"]], "Environment Variables": [[56, "environment-variables"]], "Deployment": [[56, "deployment"]], "Failure Modes": [[56, "failure-modes"]], "Membership Changes": [[56, "membership-changes"]], "Important Notices": [[56, "important-notices"]], "Rendezvous": [[55, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[55, "registry"]], "Handler": [[55, "handler"]], "Exceptions": [[55, "exceptions"]], "Implementations": [[55, "implementations"], [46, "implementations"]], "Dynamic Rendezvous": [[55, "dynamic-rendezvous"]], "C10d Backend": [[55, "c10d-backend"]], "Etcd Backend": [[55, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[55, "etcd-rendezvous-legacy"]], "Etcd Store": [[55, "etcd-store"]], "Etcd Server": [[55, "etcd-server"]], "torch.Tensor.abs": [[87, "torch-tensor-abs"]], "FXE0007:atenlib-fx-to-onnx": [[76, "fxe0007-atenlib-fx-to-onnx"]], "torch.Tensor.addbmm": [[97, "torch-tensor-addbmm"]], "FXE0001:fx-tracer-success": [[70, "fxe0001-fx-tracer-success"]], "POE0002:missing-custom-symbolic-function": [[83, "poe0002-missing-custom-symbolic-function"]], "torch.Tensor.absolute": [[89, "torch-tensor-absolute"]], "POE0001:node-missing-onnx-shape-inference": [[82, "poe0001-node-missing-onnx-shape-inference"]], "torch.func Whirlwind Tour": [[66, "torch-func-whirlwind-tour"]], "What is torch.func?": [[66, "what-is-torch-func"]], "What are the transforms?": [[66, "what-are-the-transforms"]], "grad() (gradient computation)": [[66, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[66, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[66, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[66, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[66, "jacrev-jacfwd-and-hessian"]], "torch.Tensor.acos": [[91, "torch-tensor-acos"]], "FXE0002:fx-tracer-failure": [[71, "fxe0002-fx-tracer-failure"]], "torch.Tensor.add_": [[96, "torch-tensor-add"]], "FXE0012:unsupported-fx-node-analysis": [[81, "fxe0012-unsupported-fx-node-analysis"]], "FXE0011:no-symbolic-function-for-call-function": [[80, "fxe0011-no-symbolic-function-for-call-function"]], "Examples": [[50, "examples"], [12, "examples"]], "Multiprocessing": [[53, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[53, "starting-multiple-workers"]], "Process Context": [[53, "process-context"]], "torch.Tensor.acosh": [[93, "torch-tensor-acosh"]], "torch.func API Reference": [[62, "module-torch.func"]], "Function Transforms": [[62, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[62, "utilities-for-working-with-torch-nn-modules"]], "torch.Tensor.acos_": [[92, "torch-tensor-acos"]], "Train script": [[58, "train-script"]], "Patching Batch Norm": [[63, "patching-batch-norm"]], "What\u2019s happening?": [[63, "what-s-happening"]], "How to fix": [[63, "how-to-fix"]], "Option 1: Change the BatchNorm": [[63, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[63, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[63, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[63, "option-4-eval-mode"]], "POE0004:operator-supported-in-newer-opset-version": [[85, "poe0004-operator-supported-in-newer-opset-version"]], "FXE0003:fx-frontend-aotautograd": [[72, "fxe0003-fx-frontend-aotautograd"]], "FXE0009:fx-frontend-dynamo-make-fx": [[78, "fxe0009-fx-frontend-dynamo-make-fx"]], "FXE0006:atenlib-symbolic-function": [[75, "fxe0006-atenlib-symbolic-function"]], "torch.nn.utils.rnn.unpack_sequence": [[1637, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nn.utils.spectral_norm": [[1640, "torch-nn-utils-spectral-norm"]], "torch.nn.utils.prune.custom_from_mask": [[1621, "torch-nn-utils-prune-custom-from-mask"]], "torch.nn.utils.weight_norm": [[1643, "torch-nn-utils-weight-norm"]], "NAdam": [[1665, "nadam"]], "torch.nn.utils.prune.l1_unstructured": [[1625, "torch-nn-utils-prune-l1-unstructured"]], "torch.nonzero": [[1645, "torch-nonzero"]], "Adagrad": [[1660, "adagrad"]], "torch.nn.utils.rnn.pack_sequence": [[1634, "torch-nn-utils-rnn-pack-sequence"]], "no_grad": [[1644, "no-grad"]], "torch.nn.utils.prune.is_pruned": [[1624, "torch-nn-utils-prune-is-pruned"]], "torch.normal": [[1647, "torch-normal"]], "torch.ones": [[1650, "torch-ones"]], "AdamW": [[1662, "adamw"]], "RandomUnstructured": [[1620, "randomunstructured"]], "torch.nn.utils.rnn.unpad_sequence": [[1638, "torch-nn-utils-rnn-unpad-sequence"]], "LBFGS": [[1664, "lbfgs"]], "PackedSequence": [[1632, "packedsequence"]], "VerificationOptions": [[1657, "verificationoptions"]], "LnStructured": [[1617, "lnstructured"]], "torch.nn.utils.rnn.pad_sequence": [[1636, "torch-nn-utils-rnn-pad-sequence"]], "torch.nn.utils.vector_to_parameters": [[1642, "torch-nn-utils-vector-to-parameters"]], "JitScalarType": [[1655, "jitscalartype"]], "torch.nn.utils.stateless.functional_call": [[1641, "torch-nn-utils-stateless-functional-call"]], "ASGD": [[1658, "asgd"]], "torch.not_equal": [[1648, "torch-not-equal"]], "torch.ones_like": [[1651, "torch-ones-like"]], "torch.nn.utils.prune.global_unstructured": [[1622, "torch-nn-utils-prune-global-unstructured"]], "torch.nn.utils.prune.remove": [[1629, "torch-nn-utils-prune-remove"]], "Adam": [[1661, "adam"]], "PruningContainer": [[1618, "pruningcontainer"]], "ExportOptions": [[1652, "exportoptions"]], "ExportOutputSerializer": [[1654, "exportoutputserializer"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1635, "torch-nn-utils-rnn-pad-packed-sequence"]], "ExportOutput": [[1653, "exportoutput"]], "torch.nn.utils.prune.random_unstructured": [[1628, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.utils.skip_init": [[1639, "torch-nn-utils-skip-init"]], "torch.numel": [[1649, "torch-numel"]], "torch.nn.utils.prune.random_structured": [[1627, "torch-nn-utils-prune-random-structured"]], "torch.norm": [[1646, "torch-norm"]], "RandomStructured": [[1619, "randomstructured"]], "torch.nn.utils.prune.ln_structured": [[1626, "torch-nn-utils-prune-ln-structured"]], "Adadelta": [[1659, "adadelta"]], "GraphInfo": [[1656, "graphinfo"]], "torch.nn.utils.prune.identity": [[1623, "torch-nn-utils-prune-identity"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1633, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.remove_spectral_norm": [[1630, "torch-nn-utils-remove-spectral-norm"]], "Adamax": [[1663, "adamax"]], "torch.nn.utils.remove_weight_norm": [[1631, "torch-nn-utils-remove-weight-norm"]], "ZeroPad2d": [[1475, "zeropad2d"]], "torch.nn.functional.embedding_bag": [[1510, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.alpha_dropout": [[1484, "torch-nn-functional-alpha-dropout"]], "torch.nn.functional.avg_pool2d": [[1486, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.fractional_max_pool2d": [[1513, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1491, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.gaussian_nll_loss": [[1515, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.dropout2d": [[1505, "torch-nn-functional-dropout2d"]], "torch.nn.functional.adaptive_avg_pool2d": [[1478, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.avg_pool1d": [[1485, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.conv_transpose2d": [[1497, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.gelu": [[1516, "torch-nn-functional-gelu"]], "torch.nn.functional.feature_alpha_dropout": [[1511, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.embedding": [[1509, "torch-nn-functional-embedding"]], "torch.nn.functional.elu": [[1507, "torch-nn-functional-elu"]], "torch.nn.functional.conv_transpose1d": [[1496, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.glu": [[1517, "torch-nn-functional-glu"]], "torch.nn.functional.fractional_max_pool3d": [[1514, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.cosine_embedding_loss": [[1499, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.adaptive_max_pool3d": [[1482, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.dropout": [[1503, "torch-nn-functional-dropout"]], "torch.nn.functional.dropout3d": [[1506, "torch-nn-functional-dropout3d"]], "torch.nn.functional.adaptive_max_pool2d": [[1481, "torch-nn-functional-adaptive-max-pool2d"]], "ZeroPad1d": [[1474, "zeropad1d"]], "torch.nn.functional.conv1d": [[1493, "torch-nn-functional-conv1d"]], "torch.nn.functional.adaptive_avg_pool3d": [[1479, "torch-nn-functional-adaptive-avg-pool3d"]], "Upsample": [[1471, "upsample"]], "torch.nn.functional.conv2d": [[1494, "torch-nn-functional-conv2d"]], "torch.nn.functional.cross_entropy": [[1501, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.elu_": [[1508, "torch-nn-functional-elu"]], "torch.nn.functional.bilinear": [[1489, "torch-nn-functional-bilinear"]], "torch.nn.functional.batch_norm": [[1488, "torch-nn-functional-batch-norm"]], "torch.nn.functional.fold": [[1512, "torch-nn-functional-fold"]], "torch.nn.functional.adaptive_avg_pool1d": [[1477, "torch-nn-functional-adaptive-avg-pool1d"]], "ZeroPad3d": [[1476, "zeropad3d"]], "UpsamplingNearest2d": [[1473, "upsamplingnearest2d"]], "torch.nn.functional.adaptive_max_pool1d": [[1480, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.cosine_similarity": [[1500, "torch-nn-functional-cosine-similarity"]], "Unfold": [[1470, "unfold"]], "UpsamplingBilinear2d": [[1472, "upsamplingbilinear2d"]], "torch.nn.functional.conv3d": [[1495, "torch-nn-functional-conv3d"]], "torch.nn.functional.ctc_loss": [[1502, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.dropout1d": [[1504, "torch-nn-functional-dropout1d"]], "torch.nn.functional.grid_sample": [[1518, "torch-nn-functional-grid-sample"]], "torch.nn.functional.binary_cross_entropy": [[1490, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.affine_grid": [[1483, "torch-nn-functional-affine-grid"]], "torch.nn.functional.conv_transpose3d": [[1498, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.avg_pool3d": [[1487, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.celu": [[1492, "torch-nn-functional-celu"]], "SmoothL1Loss": [[1450, "smoothl1loss"]], "Tanhshrink": [[1460, "tanhshrink"]], "ReplicationPad2d": [[1444, "replicationpad2d"]], "Transformer": [[1462, "transformer"], [25, "transformer"]], "Unflatten": [[1469, "unflatten"]], "TransformerDecoderLayer": [[1464, "transformerdecoderlayer"]], "RNNCell": [[1436, "rnncell"], [759, "rnncell"]], "ReflectionPad2d": [[1441, "reflectionpad2d"]], "ReflectionPad1d": [[1440, "reflectionpad1d"]], "ReflectionPad3d": [[1442, "reflectionpad3d"]], "NLLLoss": [[1426, "nllloss"]], "Softshrink": [[1456, "softshrink"]], "PoissonNLLLoss": [[1433, "poissonnllloss"]], "Threshold": [[1461, "threshold"]], "MultiMarginLoss": [[1424, "multimarginloss"]], "Softplus": [[1455, "softplus"]], "SELU": [[1446, "selu"]], "RNNBase": [[1435, "rnnbase"]], "ReplicationPad1d": [[1443, "replicationpad1d"]], "TransformerEncoderLayer": [[1466, "transformerencoderlayer"]], "SoftMarginLoss": [[1451, "softmarginloss"]], "RReLU": [[1437, "rrelu"]], "ReLU": [[1438, "relu"]], "Tanh": [[1459, "tanh"]], "Softsign": [[1457, "softsign"]], "TransformerDecoder": [[1463, "transformerdecoder"]], "MultiheadAttention": [[1425, "multiheadattention"], [729, "multiheadattention"]], "Softmax2d": [[1453, "softmax2d"]], "PixelShuffle": [[1431, "pixelshuffle"]], "ParameterList": [[1430, "parameterlist"]], "PairwiseDistance": [[1428, "pairwisedistance"]], "SyncBatchNorm": [[1458, "syncbatchnorm"]], "RNN": [[1434, "rnn"]], "ParameterDict": [[1429, "parameterdict"]], "ReplicationPad3d": [[1445, "replicationpad3d"]], "Softmax": [[1452, "softmax"]], "Sequential": [[1447, "sequential"]], "PReLU": [[1427, "prelu"]], "PixelUnshuffle": [[1432, "pixelunshuffle"]], "SiLU": [[1448, "silu"]], "MultiLabelSoftMarginLoss": [[1423, "multilabelsoftmarginloss"]], "TripletMarginLoss": [[1467, "tripletmarginloss"]], "ReLU6": [[1439, "relu6"], [752, "relu6"]], "Sigmoid": [[1449, "sigmoid"], [753, "sigmoid"]], "TripletMarginWithDistanceLoss": [[1468, "tripletmarginwithdistanceloss"]], "ModuleList": [[1421, "modulelist"]], "MultiLabelMarginLoss": [[1422, "multilabelmarginloss"]], "Softmin": [[1454, "softmin"]], "TransformerEncoder": [[1465, "transformerencoder"]], "torch.mps.get_rng_state": [[1298, "torch-mps-get-rng-state"]], "torch.msort": [[1307, "torch-msort"]], "torch.lu_solve": [[1277, "torch-lu-solve"]], "torch.mps.profiler.stop": [[1302, "torch-mps-profiler-stop"]], "torch.maximum": [[1285, "torch-maximum"]], "torch.nanmedian": [[1315, "torch-nanmedian"]], "torch.multinomial": [[1309, "torch-multinomial"]], "torch.mps.profiler.start": [[1301, "torch-mps-profiler-start"]], "torch.narrow": [[1318, "torch-narrow"]], "torch.multiply": [[1310, "torch-multiply"]], "torch.mul": [[1308, "torch-mul"]], "torch.mm": [[1291, "torch-mm"]], "torch.median": [[1287, "torch-median"]], "torch.lt": [[1275, "torch-lt"]], "torch.nanmean": [[1314, "torch-nanmean"]], "torch.narrow_copy": [[1319, "torch-narrow-copy"]], "torch.neg": [[1321, "torch-neg"]], "torch.meshgrid": [[1288, "torch-meshgrid"]], "torch.mps.seed": [[1303, "torch-mps-seed"]], "torch.mps.empty_cache": [[1297, "torch-mps-empty-cache"]], "torch.matrix_exp": [[1282, "torch-matrix-exp"]], "torch.manual_seed": [[1279, "torch-manual-seed"]], "torch.mv": [[1311, "torch-mv"]], "torch.min": [[1289, "torch-min"]], "torch.ne": [[1320, "torch-ne"]], "torch.lu": [[1276, "torch-lu"]], "torch.nan_to_num": [[1313, "torch-nan-to-num"]], "torch.mps.current_allocated_memory": [[1295, "torch-mps-current-allocated-memory"]], "torch.lu_unpack": [[1278, "torch-lu-unpack"]], "torch.matmul": [[1281, "torch-matmul"]], "torch.mode": [[1292, "torch-mode"]], "torch.moveaxis": [[1293, "torch-moveaxis"]], "torch.mvlgamma": [[1312, "torch-mvlgamma"]], "torch.nansum": [[1317, "torch-nansum"]], "torch.mps.driver_allocated_memory": [[1296, "torch-mps-driver-allocated-memory"]], "torch.mean": [[1286, "torch-mean"]], "torch.matrix_power": [[1283, "torch-matrix-power"]], "torch.mps.profiler.profile": [[1300, "torch-mps-profiler-profile"]], "torch.negative": [[1322, "torch-negative"]], "torch.movedim": [[1294, "torch-movedim"]], "torch.mps.set_rng_state": [[1305, "torch-mps-set-rng-state"]], "torch.mps.manual_seed": [[1299, "torch-mps-manual-seed"]], "torch.mps.set_per_process_memory_fraction": [[1304, "torch-mps-set-per-process-memory-fraction"]], "torch.nanquantile": [[1316, "torch-nanquantile"]], "torch.masked_select": [[1280, "torch-masked-select"]], "torch.max": [[1284, "torch-max"]], "torch.mps.synchronize": [[1306, "torch-mps-synchronize"]], "torch.logsumexp": [[1274, "torch-logsumexp"]], "torch.minimum": [[1290, "torch-minimum"]], "AdaptiveMaxPool2d": [[1329, "adaptivemaxpool2d"]], "BatchNorm2d": [[1338, "batchnorm2d"], [730, "batchnorm2d"]], "Embedding": [[1362, "embedding"], [739, "embedding"]], "AlphaDropout": [[1331, "alphadropout"]], "BCELoss": [[1335, "bceloss"]], "GLU": [[1370, "glu"]], "CrossEntropyLoss": [[1355, "crossentropyloss"]], "EmbeddingBag": [[1363, "embeddingbag"], [740, "embeddingbag"]], "BatchNorm1d": [[1337, "batchnorm1d"]], "GRU": [[1371, "gru"], [754, "gru"]], "ConstantPad2d": [[1345, "constantpad2d"]], "DataParallel": [[1356, "dataparallel"]], "AdaptiveAvgPool1d": [[1324, "adaptiveavgpool1d"]], "FeatureAlphaDropout": [[1364, "featurealphadropout"]], "AdaptiveAvgPool2d": [[1325, "adaptiveavgpool2d"]], "AvgPool3d": [[1334, "avgpool3d"]], "BatchNorm3d": [[1339, "batchnorm3d"], [731, "batchnorm3d"]], "ConstantPad3d": [[1346, "constantpad3d"]], "Conv1d": [[1347, "conv1d"], [732, "conv1d"]], "AdaptiveMaxPool1d": [[1328, "adaptivemaxpool1d"]], "CosineEmbeddingLoss": [[1353, "cosineembeddingloss"]], "Dropout1d": [[1358, "dropout1d"]], "Dropout3d": [[1360, "dropout3d"]], "FractionalMaxPool3d": [[1368, "fractionalmaxpool3d"]], "torch.nextafter": [[1323, "torch-nextafter"]], "Bilinear": [[1340, "bilinear"]], "ELU": [[1361, "elu"], [738, "elu"]], "BCEWithLogitsLoss": [[1336, "bcewithlogitsloss"]], "GELU": [[1369, "gelu"]], "Fold": [[1366, "fold"]], "Conv2d": [[1348, "conv2d"], [733, "conv2d"], [724, "conv2d"]], "ConvTranspose3d": [[1352, "convtranspose3d"], [737, "convtranspose3d"]], "AdaptiveMaxPool3d": [[1330, "adaptivemaxpool3d"]], "CTCLoss": [[1342, "ctcloss"]], "CELU": [[1341, "celu"]], "ChannelShuffle": [[1343, "channelshuffle"]], "Flatten": [[1365, "flatten"]], "CosineSimilarity": [[1354, "cosinesimilarity"]], "Dropout": [[1357, "dropout"]], "ConstantPad1d": [[1344, "constantpad1d"]], "Conv3d": [[1349, "conv3d"], [725, "conv3d"], [734, "conv3d"]], "Dropout2d": [[1359, "dropout2d"]], "ConvTranspose2d": [[1351, "convtranspose2d"], [736, "convtranspose2d"]], "AdaptiveLogSoftmaxWithLoss": [[1327, "adaptivelogsoftmaxwithloss"]], "FractionalMaxPool2d": [[1367, "fractionalmaxpool2d"]], "AvgPool2d": [[1333, "avgpool2d"]], "AdaptiveAvgPool3d": [[1326, "adaptiveavgpool3d"]], "ConvTranspose1d": [[1350, "convtranspose1d"], [735, "convtranspose1d"]], "AvgPool1d": [[1332, "avgpool1d"]], "LazyInstanceNorm3d": [[1403, "lazyinstancenorm3d"]], "InstanceNorm3d": [[1384, "instancenorm3d"], [747, "instancenorm3d"]], "LazyBatchNorm1d": [[1392, "lazybatchnorm1d"]], "LSTM": [[1389, "lstm"], [756, "lstm"], [728, "lstm"]], "LazyConv3d": [[1397, "lazyconv3d"]], "LPPool2d": [[1388, "lppool2d"]], "LazyConvTranspose3d": [[1400, "lazyconvtranspose3d"]], "Hardtanh": [[1378, "hardtanh"]], "Linear": [[1406, "linear"], [758, "linear"], [750, "linear"], [726, "linear"], [727, "linear"]], "HingeEmbeddingLoss": [[1379, "hingeembeddingloss"]], "LPPool1d": [[1387, "lppool1d"]], "LazyConvTranspose1d": [[1398, "lazyconvtranspose1d"]], "LazyConvTranspose2d": [[1399, "lazyconvtranspose2d"]], "MaxUnpool3d": [[1417, "maxunpool3d"]], "MaxUnpool2d": [[1416, "maxunpool2d"]], "LazyConv1d": [[1395, "lazyconv1d"]], "GaussianNLLLoss": [[1373, "gaussiannllloss"]], "LogSigmoid": [[1408, "logsigmoid"]], "GroupNorm": [[1374, "groupnorm"], [743, "groupnorm"]], "Module": [[1419, "module"]], "ModuleDict": [[1420, "moduledict"]], "MaxPool1d": [[1412, "maxpool1d"]], "LazyInstanceNorm2d": [[1402, "lazyinstancenorm2d"]], "HuberLoss": [[1380, "huberloss"]], "LayerNorm": [[1391, "layernorm"], [748, "layernorm"]], "GRUCell": [[1372, "grucell"], [755, "grucell"]], "InstanceNorm2d": [[1383, "instancenorm2d"], [746, "instancenorm2d"]], "KLDivLoss": [[1385, "kldivloss"]], "LazyInstanceNorm1d": [[1401, "lazyinstancenorm1d"]], "InstanceNorm1d": [[1382, "instancenorm1d"], [745, "instancenorm1d"]], "MSELoss": [[1410, "mseloss"]], "Hardshrink": [[1375, "hardshrink"]], "LazyLinear": [[1404, "lazylinear"]], "Hardsigmoid": [[1376, "hardsigmoid"]], "MarginRankingLoss": [[1411, "marginrankingloss"]], "LazyConv2d": [[1396, "lazyconv2d"]], "LazyBatchNorm3d": [[1394, "lazybatchnorm3d"]], "Mish": [[1418, "mish"]], "LazyBatchNorm2d": [[1393, "lazybatchnorm2d"]], "L1Loss": [[1386, "l1loss"]], "Hardswish": [[1377, "hardswish"], [744, "hardswish"]], "LocalResponseNorm": [[1407, "localresponsenorm"]], "LeakyReLU": [[1405, "leakyrelu"], [749, "leakyrelu"]], "LSTMCell": [[1390, "lstmcell"], [757, "lstmcell"]], "LogSoftmax": [[1409, "logsoftmax"]], "MaxUnpool1d": [[1415, "maxunpool1d"]], "MaxPool2d": [[1413, "maxpool2d"]], "MaxPool3d": [[1414, "maxpool3d"]], "torch.linalg.inv_ex": [[1228, "torch-linalg-inv-ex"]], "torch.linalg.svdvals": [[1251, "torch-linalg-svdvals"]], "torch.logcumsumexp": [[1266, "torch-logcumsumexp"]], "torch.linalg.lu_solve": [[1236, "torch-linalg-lu-solve"]], "torch.linalg.svd": [[1250, "torch-linalg-svd"]], "torch.logaddexp2": [[1265, "torch-logaddexp2"]], "torch.linalg.lu_factor_ex": [[1235, "torch-linalg-lu-factor-ex"]], "torch.linalg.ldl_factor_ex": [[1230, "torch-linalg-ldl-factor-ex"]], "torch.linalg.multi_dot": [[1242, "torch-linalg-multi-dot"]], "torch.logical_not": [[1269, "torch-logical-not"]], "torch.linalg.matmul": [[1237, "torch-linalg-matmul"]], "torch.linalg.qr": [[1245, "torch-linalg-qr"]], "torch.load": [[1258, "torch-load"]], "torch.linalg.lu_factor": [[1234, "torch-linalg-lu-factor"]], "torch.linalg.ldl_factor": [[1229, "torch-linalg-ldl-factor"]], "torch.linalg.tensorinv": [[1252, "torch-linalg-tensorinv"]], "torch.logical_or": [[1270, "torch-logical-or"]], "torch.linalg.tensorsolve": [[1253, "torch-linalg-tensorsolve"]], "torch.linalg.ldl_solve": [[1231, "torch-linalg-ldl-solve"]], "torch.linalg.pinv": [[1244, "torch-linalg-pinv"]], "torch.logical_xor": [[1271, "torch-logical-xor"]], "torch.linalg.matrix_norm": [[1239, "torch-linalg-matrix-norm"]], "torch.logaddexp": [[1264, "torch-logaddexp"]], "torch.linalg.matrix_power": [[1240, "torch-linalg-matrix-power"]], "torch.log10": [[1261, "torch-log10"]], "torch.logical_and": [[1268, "torch-logical-and"]], "torch.linalg.lu": [[1233, "torch-linalg-lu"]], "torch.linalg.matrix_exp": [[1238, "torch-linalg-matrix-exp"]], "torch.linalg.solve_ex": [[1248, "torch-linalg-solve-ex"]], "torch.linalg.solve_triangular": [[1249, "torch-linalg-solve-triangular"]], "torch.linalg.lstsq": [[1232, "torch-linalg-lstsq"]], "torch.linalg.vector_norm": [[1256, "torch-linalg-vector-norm"]], "torch.logdet": [[1267, "torch-logdet"]], "torch.linspace": [[1257, "torch-linspace"]], "torch.linalg.solve": [[1247, "torch-linalg-solve"]], "torch.logspace": [[1273, "torch-logspace"]], "torch.logit": [[1272, "torch-logit"]], "torch.lobpcg": [[1259, "torch-lobpcg"]], "torch.linalg.vander": [[1254, "torch-linalg-vander"]], "torch.linalg.householder_product": [[1226, "torch-linalg-householder-product"]], "torch.log2": [[1263, "torch-log2"]], "torch.linalg.vecdot": [[1255, "torch-linalg-vecdot"]], "torch.linalg.matrix_rank": [[1241, "torch-linalg-matrix-rank"]], "torch.log1p": [[1262, "torch-log1p"]], "torch.log": [[1260, "torch-log"]], "torch.linalg.norm": [[1243, "torch-linalg-norm"]], "torch.linalg.slogdet": [[1246, "torch-linalg-slogdet"]], "torch.linalg.inv": [[1227, "torch-linalg-inv"]], "torch.linalg.eigvalsh": [[1225, "torch-linalg-eigvalsh"]], "torch.gt": [[1143, "torch-gt"]], "torch.heaviside": [[1146, "torch-heaviside"]], "torch.inner": [[1164, "torch-inner"]], "torch.gather": [[1129, "torch-gather"]], "torch.hstack": [[1152, "torch-hstack"]], "torch.get_num_threads": [[1138, "torch-get-num-threads"]], "torch.is_floating_point": [[1169, "torch-is-floating-point"]], "torch.get_rng_state": [[1139, "torch-get-rng-state"]], "torch.is_storage": [[1173, "torch-is-storage"]], "torch.hann_window": [[1145, "torch-hann-window"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1168, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.hamming_window": [[1144, "torch-hamming-window"]], "torch.func.vjp": [[1127, "torch-func-vjp"]], "torch.gradient": [[1140, "torch-gradient"]], "torch.histogramdd": [[1149, "torch-histogramdd"]], "torch.histogram": [[1148, "torch-histogram"]], "torch.is_complex": [[1166, "torch-is-complex"]], "torch.greater_equal": [[1142, "torch-greater-equal"]], "torch.hspmm": [[1151, "torch-hspmm"]], "torch.geqrf": [[1132, "torch-geqrf"]], "torch.hsplit": [[1150, "torch-hsplit"]], "inference_mode": [[1162, "inference-mode"]], "torch.ger": [[1133, "torch-ger"]], "torch.func.vmap": [[1128, "torch-func-vmap"]], "torch.greater": [[1141, "torch-greater"]], "torch.imag": [[1157, "torch-imag"]], "torch.is_tensor": [[1174, "torch-is-tensor"]], "torch.is_grad_enabled": [[1170, "torch-is-grad-enabled"]], "torch.get_deterministic_debug_mode": [[1135, "torch-get-deterministic-debug-mode"]], "torch.get_num_interop_threads": [[1137, "torch-get-num-interop-threads"]], "torch.histc": [[1147, "torch-histc"]], "torch.is_conj": [[1167, "torch-is-conj"]], "torch.gcd": [[1130, "torch-gcd"]], "torch.igammac": [[1156, "torch-igammac"]], "torch.igamma": [[1155, "torch-igamma"]], "torch.is_inference_mode_enabled": [[1171, "torch-is-inference-mode-enabled"]], "torch.index_copy": [[1159, "torch-index-copy"]], "torch.initial_seed": [[1163, "torch-initial-seed"]], "torch.get_float32_matmul_precision": [[1136, "torch-get-float32-matmul-precision"]], "torch.hypot": [[1153, "torch-hypot"]], "torch.inverse": [[1165, "torch-inverse"]], "torch.index_select": [[1161, "torch-index-select"]], "torch.i0": [[1154, "torch-i0"]], "torch.is_nonzero": [[1172, "torch-is-nonzero"]], "torch.index_add": [[1158, "torch-index-add"]], "torch.ge": [[1131, "torch-ge"]], "torch.get_default_dtype": [[1134, "torch-get-default-dtype"]], "torch.index_reduce": [[1160, "torch-index-reduce"]], "torch.is_warn_always_enabled": [[1175, "torch-is-warn-always-enabled"]], "torch.isinf": [[1179, "torch-isinf"]], "torch.jit.fork": [[1190, "torch-jit-fork"]], "torch.jit.enable_onednn_fusion": [[1189, "torch-jit-enable-onednn-fusion"]], "torch.jit.wait": [[1205, "torch-jit-wait"]], "torch.jit.annotate": [[1188, "torch-jit-annotate"]], "torch.isposinf": [[1182, "torch-isposinf"]], "torch.jit.optimize_for_inference": [[1196, "torch-jit-optimize-for-inference"]], "torch.linalg.cross": [[1219, "torch-linalg-cross"]], "torch.jit.isinstance": [[1193, "torch-jit-isinstance"]], "torch.jit.script_if_tracing": [[1199, "torch-jit-script-if-tracing"]], "torch.jit.set_fusion_strategy": [[1200, "torch-jit-set-fusion-strategy"]], "torch.lgamma": [[1215, "torch-lgamma"]], "torch.lerp": [[1212, "torch-lerp"]], "torch.linalg.cond": [[1218, "torch-linalg-cond"]], "torch.jit.script": [[1198, "torch-jit-script"]], "torch.istft": [[1184, "torch-istft"]], "torch.lcm": [[1209, "torch-lcm"]], "torch.jit.freeze": [[1191, "torch-jit-freeze"]], "torch.jit.onednn_fusion_enabled": [[1195, "torch-jit-onednn-fusion-enabled"]], "torch.isin": [[1178, "torch-isin"]], "torch.jit.trace": [[1202, "torch-jit-trace"]], "torch.jit.save": [[1197, "torch-jit-save"]], "torch.linalg.diagonal": [[1221, "torch-linalg-diagonal"]], "Attribute": [[1185, "attribute"]], "torch.linalg.cholesky_ex": [[1217, "torch-linalg-cholesky-ex"]], "torch.isfinite": [[1177, "torch-isfinite"]], "strict_fusion": [[1201, "strict-fusion"]], "torch.jit.ignore": [[1192, "torch-jit-ignore"]], "torch.linalg.eig": [[1222, "torch-linalg-eig"]], "torch.linalg.eigh": [[1223, "torch-linalg-eigh"]], "torch.ldexp": [[1210, "torch-ldexp"]], "torch.less": [[1213, "torch-less"]], "ScriptModule": [[1187, "scriptmodule"]], "torch.jit.load": [[1194, "torch-jit-load"]], "torch.jit.trace_module": [[1203, "torch-jit-trace-module"]], "ScriptFunction": [[1186, "scriptfunction"]], "torch.linalg.eigvals": [[1224, "torch-linalg-eigvals"]], "torch.le": [[1211, "torch-le"]], "torch.kaiser_window": [[1206, "torch-kaiser-window"]], "torch.linalg.det": [[1220, "torch-linalg-det"]], "torch.less_equal": [[1214, "torch-less-equal"]], "torch.isclose": [[1176, "torch-isclose"]], "torch.isnan": [[1180, "torch-isnan"]], "torch.isreal": [[1183, "torch-isreal"]], "torch.linalg.cholesky": [[1216, "torch-linalg-cholesky"]], "torch.jit.unused": [[1204, "torch-jit-unused"]], "torch.kron": [[1207, "torch-kron"]], "torch.isneginf": [[1181, "torch-isneginf"]], "torch.kthvalue": [[1208, "torch-kthvalue"]], "torch.fft.hfftn": [[1083, "torch-fft-hfftn"]], "torch.func.grad_and_value": [[1119, "torch-func-grad-and-value"]], "torch.floor": [[1104, "torch-floor"]], "torch.fft.rfft2": [[1095, "torch-fft-rfft2"]], "torch.fft.ifftshift": [[1087, "torch-fft-ifftshift"]], "torch.fft.hfft": [[1081, "torch-fft-hfft"]], "torch.fmod": [[1108, "torch-fmod"]], "torch.full": [[1114, "torch-full"]], "torch.full_like": [[1115, "torch-full-like"]], "torch.func.functional_call": [[1116, "torch-func-functional-call"]], "torch.fft.irfft": [[1091, "torch-fft-irfft"]], "torch.func.jvp": [[1123, "torch-func-jvp"]], "torch.flipud": [[1102, "torch-flipud"]], "torch.fft.fftn": [[1079, "torch-fft-fftn"]], "torch.func.linearize": [[1124, "torch-func-linearize"]], "torch.func.grad": [[1118, "torch-func-grad"]], "torch.func.jacfwd": [[1121, "torch-func-jacfwd"]], "torch.frombuffer": [[1113, "torch-frombuffer"]], "torch.fft.irfftn": [[1093, "torch-fft-irfftn"]], "torch.fft.irfft2": [[1092, "torch-fft-irfft2"]], "torch.fft.ifft": [[1084, "torch-fft-ifft"]], "torch.fft.ifft2": [[1085, "torch-fft-ifft2"]], "torch.fft.ihfft2": [[1089, "torch-fft-ihfft2"]], "torch.func.replace_all_batch_norm_modules_": [[1125, "torch-func-replace-all-batch-norm-modules"]], "torch.fmin": [[1107, "torch-fmin"]], "torch.fft.ihfftn": [[1090, "torch-fft-ihfftn"]], "torch.fft.rfftn": [[1097, "torch-fft-rfftn"]], "torch.fft.hfft2": [[1082, "torch-fft-hfft2"]], "torch.fft.fftshift": [[1080, "torch-fft-fftshift"]], "torch.fft.rfft": [[1094, "torch-fft-rfft"]], "torch.fft.fftfreq": [[1078, "torch-fft-fftfreq"]], "torch.fft.ifftn": [[1086, "torch-fft-ifftn"]], "torch.float_power": [[1103, "torch-float-power"]], "torch.frac": [[1109, "torch-frac"]], "torch.fmax": [[1106, "torch-fmax"]], "torch.func.hessian": [[1120, "torch-func-hessian"]], "torch.fliplr": [[1101, "torch-fliplr"]], "torch.flatten": [[1099, "torch-flatten"]], "torch.frexp": [[1110, "torch-frexp"]], "torch.flip": [[1100, "torch-flip"]], "torch.fft.ihfft": [[1088, "torch-fft-ihfft"]], "torch.from_dlpack": [[1111, "torch-from-dlpack"]], "torch.func.functionalize": [[1117, "torch-func-functionalize"]], "torch.fix": [[1098, "torch-fix"]], "torch.func.stack_module_state": [[1126, "torch-func-stack-module-state"]], "torch.fft.rfftfreq": [[1096, "torch-fft-rfftfreq"]], "torch.floor_divide": [[1105, "torch-floor-divide"]], "torch.from_numpy": [[1112, "torch-from-numpy"]], "torch.func.jacrev": [[1122, "torch-func-jacrev"]], "torch.utils.tensorboard": [[1919, "module-torch.utils.tensorboard"]], "torch.sparse": [[1914, "torch-sparse"]], "Why and when to use sparsity": [[1914, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1914, "functionality-overview"]], "Operator overview": [[1914, "operator-overview"]], "Sparse COO tensors": [[1914, "sparse-coo-tensors"]], "Construction": [[1914, "construction"], [1875, "construction"]], "Sparse hybrid COO tensors": [[1914, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1914, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1914, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1914, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1914, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1914, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1914, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1914, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1914, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1914, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1914, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1914, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1914, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1914, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1914, "construction-of-sparse-compressed-tensors"]], "Supported operations": [[1914, "supported-operations"], [1875, "supported-operations"]], "Linear Algebra operations": [[1914, "linear-algebra-operations"]], "Tensor methods and sparse": [[1914, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1914, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1914, "other-functions"]], "Unary functions": [[1914, "unary-functions"]], "Tensor Views": [[1918, "tensor-views"]], "torch.ao.ns._numeric_suite": [[1923, "torch-ao-ns-numeric-suite"]], "torch.Storage": [[1916, "torch-storage"]], "Distributed Autograd Design": [[1911, "distributed-autograd-design"]], "Background": [[1911, "background"], [1912, "background"]], "Autograd recording during the forward pass": [[1911, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1911, "distributed-autograd-context"]], "Distributed Backward Pass": [[1911, "distributed-backward-pass"]], "Computing dependencies": [[1911, "computing-dependencies"]], "FAST mode algorithm": [[1911, "fast-mode-algorithm"]], "SMART mode algorithm": [[1911, "smart-mode-algorithm"]], "Distributed Optimizer": [[1911, "distributed-optimizer"], [1910, "distributed-optimizer"]], "Simple end to end example": [[1911, "simple-end-to-end-example"]], "torch.testing": [[1921, "module-torch.testing"]], "torch.special": [[1915, "torch-special"]], "torch.ao.ns._numeric_suite_fx": [[1924, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1924, "torch-ao-ns-fx-utils"]], "torch": [[1922, "module-torch"]], "Tensors": [[1922, "tensors"]], "Creation Ops": [[1922, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1922, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1922, "generators"]], "Random sampling": [[1922, "random-sampling"]], "In-place random sampling": [[1922, "in-place-random-sampling"]], "Quasi-random sampling": [[1922, "quasi-random-sampling"]], "Serialization": [[1922, "serialization"], [27, "serialization"]], "Parallelism": [[1922, "parallelism"]], "Locally disabling gradient computation": [[1922, "locally-disabling-gradient-computation"], [2, "locally-disabling-gradient-computation"], [1880, "locally-disabling-gradient-computation"]], "Math operations": [[1922, "math-operations"]], "Pointwise Ops": [[1922, "pointwise-ops"]], "Reduction Ops": [[1922, "reduction-ops"]], "Comparison Ops": [[1922, "comparison-ops"]], "Spectral Ops": [[1922, "spectral-ops"]], "Other Operations": [[1922, "other-operations"]], "BLAS and LAPACK Operations": [[1922, "blas-and-lapack-operations"]], "Foreach Operations": [[1922, "foreach-operations"]], "Utilities": [[1922, "utilities"], [1876, "module-torch.nn.utils"]], "Symbolic Numbers": [[1922, "symbolic-numbers"]], "Optimizations": [[1922, "optimizations"], [20, "optimizations"]], "Operator Tags": [[1922, "operator-tags"]], "Engine Configuration": [[1922, "engine-configuration"]], "Tensor Attributes": [[1917, "tensor-attributes"]], "torch.dtype": [[1917, "torch-dtype"]], "torch.device": [[1917, "torch-device"]], "torch.layout": [[1917, "torch-layout"]], "torch.memory_format": [[1917, "torch-memory-format"]], "Remote Reference Protocol": [[1912, "remote-reference-protocol"]], "Assumptions": [[1912, "assumptions"]], "RRef Lifetime": [[1912, "rref-lifetime"]], "Design Reasoning": [[1912, "design-reasoning"]], "Implementation": [[1912, "implementation"], [1884, "implementation"]], "Protocol Scenarios": [[1912, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1912, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1912, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1912, "owner-share-rref-with-user"]], "User Share RRef with User": [[1912, "user-share-rref-with-user"]], "Type Info": [[1926, "type-info"]], "torch.finfo": [[1926, "torch-finfo"]], "torch.iinfo": [[1926, "torch-iinfo"]], "torch.Tensor": [[1920, "torch-tensor"]], "Data types": [[1920, "data-types"]], "Initializing and basic operations": [[1920, "initializing-and-basic-operations"]], "Tensor class reference": [[1920, "tensor-class-reference"]], "torch.signal": [[1913, "module-torch.signal"]], "torch.signal.windows": [[1913, "module-torch.signal.windows"]], "torch.overrides": [[1925, "torch-overrides"]], "torch.cuda.stream": [[1035, "torch-cuda-stream"]], "torch.cuda.set_device": [[1029, "torch-cuda-set-device"]], "torch.exp2": [[1071, "torch-exp2"]], "torch.cumprod": [[1041, "torch-cumprod"]], "torch.cuda.set_sync_debug_mode": [[1034, "torch-cuda-set-sync-debug-mode"]], "torch.divide": [[1056, "torch-divide"]], "torch.fake_quantize_per_channel_affine": [[1074, "torch-fake-quantize-per-channel-affine"]], "torch.einsum": [[1060, "torch-einsum"]], "torch.cuda.set_rng_state_all": [[1032, "torch-cuda-set-rng-state-all"]], "torch.cuda.set_rng_state": [[1031, "torch-cuda-set-rng-state"]], "torch.cuda.set_stream": [[1033, "torch-cuda-set-stream"]], "torch.expm1": [[1072, "torch-expm1"]], "torch.dot": [[1057, "torch-dot"]], "torch.dequantize": [[1045, "torch-dequantize"]], "torch.cuda.synchronize": [[1036, "torch-cuda-synchronize"]], "torch.eye": [[1073, "torch-eye"]], "torch.div": [[1055, "torch-div"]], "torch.diff": [[1052, "torch-diff"]], "torch.cumulative_trapezoid": [[1043, "torch-cumulative-trapezoid"]], "enable_grad": [[1064, "enable-grad"]], "torch.diagonal": [[1050, "torch-diagonal"]], "torch.cuda.set_per_process_memory_fraction": [[1030, "torch-cuda-set-per-process-memory-fraction"]], "torch.eq": [[1065, "torch-eq"]], "torch.digamma": [[1053, "torch-digamma"]], "torch.empty_strided": [[1063, "torch-empty-strided"]], "torch.erfinv": [[1069, "torch-erfinv"]], "torch.empty_like": [[1062, "torch-empty-like"]], "torch.fft.fft": [[1076, "torch-fft-fft"]], "torch.cummax": [[1039, "torch-cummax"]], "torch.diagonal_scatter": [[1051, "torch-diagonal-scatter"]], "torch.cuda.temperature": [[1037, "torch-cuda-temperature"]], "torch.fake_quantize_per_tensor_affine": [[1075, "torch-fake-quantize-per-tensor-affine"]], "torch.erf": [[1067, "torch-erf"]], "torch.dsplit": [[1058, "torch-dsplit"]], "torch.fft.fft2": [[1077, "torch-fft-fft2"]], "torch.cummin": [[1040, "torch-cummin"]], "torch.diag": [[1047, "torch-diag"]], "torch.empty": [[1061, "torch-empty"]], "torch.equal": [[1066, "torch-equal"]], "torch.dist": [[1054, "torch-dist"]], "torch.deg2rad": [[1044, "torch-deg2rad"]], "torch.cuda.utilization": [[1038, "torch-cuda-utilization"]], "torch.diagflat": [[1049, "torch-diagflat"]], "torch.diag_embed": [[1048, "torch-diag-embed"]], "torch.det": [[1046, "torch-det"]], "torch.dstack": [[1059, "torch-dstack"]], "torch.erfc": [[1068, "torch-erfc"]], "torch.cumsum": [[1042, "torch-cumsum"]], "torch.exp": [[1070, "torch-exp"]], "torch.cuda.get_sync_debug_mode": [[994, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.manual_seed": [[1007, "torch-cuda-manual-seed"]], "device_of": [[984, "device-of"]], "torch.cuda.nvtx.range_pop": [[1021, "torch-cuda-nvtx-range-pop"]], "torch.cuda.memory_allocated": [[1013, "torch-cuda-memory-allocated"]], "torch.cuda.reset_peak_memory_stats": [[1026, "torch-cuda-reset-peak-memory-stats"]], "torch.cuda.power_draw": [[1023, "torch-cuda-power-draw"]], "torch.cuda.get_rng_state": [[992, "torch-cuda-get-rng-state"]], "torch.cuda.memory_snapshot": [[1016, "torch-cuda-memory-snapshot"]], "torch.cuda.nvtx.mark": [[1020, "torch-cuda-nvtx-mark"]], "torch.cuda.max_memory_reserved": [[1011, "torch-cuda-max-memory-reserved"]], "torch.cuda.max_memory_allocated": [[1009, "torch-cuda-max-memory-allocated"]], "torch.cuda.make_graphed_callables": [[1006, "torch-cuda-make-graphed-callables"]], "torch.cuda.get_arch_list": [[987, "torch-cuda-get-arch-list"]], "torch.cuda.get_device_name": [[989, "torch-cuda-get-device-name"]], "torch.cuda.memory_summary": [[1018, "torch-cuda-memory-summary"]], "torch.cuda.empty_cache": [[985, "torch-cuda-empty-cache"]], "device": [[982, "device"]], "torch.cuda.default_stream": [[981, "torch-cuda-default-stream"]], "torch.cuda.memory_cached": [[1014, "torch-cuda-memory-cached"]], "torch.cuda.initial_seed": [[998, "torch-cuda-initial-seed"]], "torch.cuda.get_allocator_backend": [[986, "torch-cuda-get-allocator-backend"]], "torch.cuda.is_current_stream_capturing": [[1001, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.is_initialized": [[1002, "torch-cuda-is-initialized"]], "torch.cuda.nvtx.range_push": [[1022, "torch-cuda-nvtx-range-push"]], "torch.cuda.init": [[997, "torch-cuda-init"]], "torch.cuda.manual_seed_all": [[1008, "torch-cuda-manual-seed-all"]], "torch.cuda.memory_stats": [[1017, "torch-cuda-memory-stats"]], "torch.cuda.ipc_collect": [[999, "torch-cuda-ipc-collect"]], "torch.cuda.device_count": [[983, "torch-cuda-device-count"]], "torch.cuda.seed": [[1027, "torch-cuda-seed"]], "graph": [[995, "graph"]], "torch.cuda.get_device_properties": [[990, "torch-cuda-get-device-properties"]], "torch.cuda.get_gencode_flags": [[991, "torch-cuda-get-gencode-flags"]], "torch.cuda.list_gpu_processes": [[1005, "torch-cuda-list-gpu-processes"]], "torch.cuda.mem_get_info": [[1012, "torch-cuda-mem-get-info"]], "torch.cuda.current_stream": [[980, "torch-cuda-current-stream"]], "torch.cuda.is_available": [[1000, "torch-cuda-is-available"]], "torch.cuda.get_device_capability": [[988, "torch-cuda-get-device-capability"]], "torch.cuda.get_rng_state_all": [[993, "torch-cuda-get-rng-state-all"]], "torch.cuda.memory_reserved": [[1015, "torch-cuda-memory-reserved"]], "torch.cuda.memory_usage": [[1019, "torch-cuda-memory-usage"]], "torch.cuda.seed_all": [[1028, "torch-cuda-seed-all"]], "torch.cuda.reset_max_memory_allocated": [[1024, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1004, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.reset_max_memory_cached": [[1025, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.graph_pool_handle": [[996, "torch-cuda-graph-pool-handle"]], "torch.cuda.jiterator._create_jit_fn": [[1003, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.max_memory_cached": [[1010, "torch-cuda-max-memory-cached"]], "Generic Join Context Manager": [[39, "generic-join-context-manager"]], "torch.utils.bottleneck": [[5, "module-torch.utils.bottleneck"]], "TorchDynamo Deeper Dive": [[13, "torchdynamo-deeper-dive"]], "What is a guard?": [[13, "what-is-a-guard"]], "What is Dynamo doing?": [[13, "what-is-dynamo-doing"]], "Fake tensor": [[15, "fake-tensor"]], "Motivation": [[15, "motivation"], [14, "motivation"], [1867, "motivation"]], "Related work": [[15, "related-work"]], "Overall architecture": [[15, "overall-architecture"], [14, "overall-architecture"]], "API: the important bits": [[15, "api-the-important-bits"]], "Details": [[15, "details"]], "About the tensor subclass": [[15, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[15, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[15, "how-does-the-converter-work"]], "Performance characteristics": [[15, "performance-characteristics"]], "Fake tensor of fake tensor?": [[15, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[15, "interaction-with-dynamic-shapes"]], "Other resources": [[15, "other-resources"]], "PyTorch 2.0 Troubleshooting": [[26, "pytorch-2-0-troubleshooting"]], "Title": [[26, "id1"]], "Diagnosing Runtime Errors": [[26, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[26, "torchdynamo-errors"]], "TorchInductor Errors": [[26, "torchinductor-errors"], [16, "torchinductor-errors"]], "Minifying TorchInductor Errors": [[26, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[26, "minifying-backend-compiler-errors"]], "Performance Profiling": [[26, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[26, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[26, "torchinductor-debugging-using-torch-compile-debug"]], "Graph Breaks": [[26, "graph-breaks"], [16, "graph-breaks"]], "Identifying the Cause of a Graph Break": [[26, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[26, "excessive-recompilation"], [16, "excessive-recompilation"]], "Accuracy Debugging": [[26, "accuracy-debugging"]], "File an Issue": [[26, "file-an-issue"]], "PyTorch Governance | Maintainers": [[11, "pytorch-governance-maintainers"]], "Responsibilities": [[11, "responsibilities"]], "Lead Core Maintainer (BDFL)": [[11, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Core Maintainers": [[11, "core-maintainers"], [10, "core-maintainers"]], "Module-level maintainers": [[11, "module-level-maintainers"]], "NN APIs (torch.nn)": [[11, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[11, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[11, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[11, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[11, "distributions-rng"]], "Distributed": [[11, "distributed"]], "Multiprocessing and DataLoaders": [[11, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[11, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[11, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[11, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[11, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[11, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[11, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[11, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[11, "nvfuser"]], "AMD/ROCm/HIP": [[11, "amd-rocm-hip"]], "Build + CI": [[11, "build-ci"]], "Performance Tools": [[11, "performance-tools"]], "C++ API": [[11, "c-api"]], "C10 utils and operator dispatch": [[11, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[11, "onnx-exporter"]], "Mobile / Edge": [[11, "mobile-edge"]], "Model Compression & Optimization": [[11, "model-compression-optimization"]], "Windows": [[11, "windows"]], "Apple M1/MPS": [[11, "apple-m1-mps"]], "PowerPC": [[11, "powerpc"]], "Docs / Tutorials": [[11, "docs-tutorials"]], "Library-level maintainers": [[11, "library-level-maintainers"]], "XLA": [[11, "xla"]], "TorchServe": [[11, "torchserve"]], "TorchVision": [[11, "torchvision"]], "TorchText": [[11, "torchtext"]], "TorchAudio": [[11, "torchaudio"]], "TorchRec": [[11, "torchrec"]], "TorchX": [[11, "torchx"]], "TorchData / TorchArrow": [[11, "torchdata-torcharrow"]], "Torch Distributed Elastic": [[41, "torch-distributed-elastic"]], "Get Started": [[41, "get-started"]], "Documentation": [[41, "documentation"]], "API": [[41, null]], "Advanced": [[41, null]], "Plugins": [[41, null]], "torch::deploy has been moved to pytorch/multipy": [[37, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Guards Overview": [[19, "guards-overview"]], "Caching and Guards Overview": [[19, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[19, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[19, "instructiontranslator"]], "Making Guards": [[19, "making-guards"]], "Summary": [[19, "summary"], [10, "summary"]], "C++": [[30, "c"]], "TorchScript C++ API": [[30, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[30, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[30, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[30, "authoring-models-in-c"]], "Packaging for C++": [[30, "packaging-for-c"]], "Technical Overview": [[23, "technical-overview"]], "Elastic Agent": [[46, "module-torch.distributed.elastic.agent"]], "Server": [[46, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[46, "concepts"]], "Extending the Agent": [[46, "extending-the-agent"]], "Watchdog in the Agent": [[46, "watchdog-in-the-agent"]], "PyTorch 2.0 Performance Dashboard": [[22, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[22, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[22, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[22, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[22, "how-can-i-run-any-performance-test-locally"]], "torch.utils.dlpack": [[45, "torch-utils-dlpack"]], "Benchmark Utils - torch.utils.benchmark": [[4, "module-torch.utils.benchmark"]], "Customization": [[47, "customization"]], "Launcher": [[47, "launcher"]], "Rendezvous Handler": [[47, "rendezvous-handler"]], "Metric Handler": [[47, "metric-handler"]], "Events Handler": [[47, "events-handler"]], "torch.func interaction with torch.compile": [[24, "torch-func-interaction-with-torch-compile"]], "Applying a torch.func transform to a torch.compile\u2019d function": [[24, "applying-a-torch-func-transform-to-a-torch-compile-d-function"]], "Doesn\u2019t work (PT 2.0): calling a torch.func transform inside of a torch.compile\u2019ed function": [[24, "doesn-t-work-pt-2-0-calling-a-torch-func-transform-inside-of-a-torch-compile-ed-function"]], "Workaround: use torch._dynamo.allow_in_graph": [[24, "workaround-use-torch-dynamo-allow-in-graph"]], "torch.__config__": [[28, "module-torch.__config__"]], "Do you support Distributed code?": [[16, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[16, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[16, "why-is-my-code-crashing"]], "TorchDynamo Errors": [[16, "torchdynamo-errors"]], "Why is compilation slow?": [[16, "why-is-compilation-slow"]], "Dynamo Compilation": [[16, "dynamo-compilation"]], "Inductor Compilation": [[16, "inductor-compilation"]], "Why are you recompiling in production?": [[16, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[16, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[16, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[16, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[16, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[16, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[16, "why-am-i-getting-ooms"]], "Complex Numbers": [[27, "complex-numbers"]], "Creating Complex Tensors": [[27, "creating-complex-tensors"]], "Transition from the old representation": [[27, "transition-from-the-old-representation"]], "Accessing real and imag": [[27, "accessing-real-and-imag"]], "Angle and abs": [[27, "angle-and-abs"]], "Linear Algebra": [[27, "linear-algebra"]], "Autograd": [[27, "autograd"]], "Writing Graph Transformations on ATen IR": [[25, "writing-graph-transformations-on-aten-ir"]], "Passes": [[25, "passes"]], "One-to-One Pass": [[25, "one-to-one-pass"]], "One-to-X Pass": [[25, "one-to-x-pass"]], "One-to-None Pass": [[25, "one-to-none-pass"]], "Utilizing Local Information": [[25, "utilizing-local-information"]], "Subgraph Rewriter": [[25, "subgraph-rewriter"]], "Pass Manager": [[25, "pass-manager"]], "Partitioner": [[25, "partitioner"]], "Subgraph Matcher": [[25, "subgraph-matcher"]], "Capability Based Partitioner": [[25, "capability-based-partitioner"]], "torch.cuda": [[31, "module-torch.cuda"]], "Random Number Generator": [[31, "random-number-generator"]], "Communication collectives": [[31, "communication-collectives"]], "Streams and events": [[31, "streams-and-events"]], "Graphs (beta)": [[31, "graphs-beta"]], "Memory management": [[31, "memory-management"], [1889, "memory-management"], [1883, "memory-management"]], "NVIDIA Tools Extension (NVTX)": [[31, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[31, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[31, "stream-sanitizer-prototype"]], "torch._dynamo": [[0, "torch-dynamo"]], "Troubleshooting and Gotchas": [[20, "troubleshooting-and-gotchas"]], "Learn more": [[20, "learn-more"]], "Custom Backends": [[12, "custom-backends"]], "Registering Custom Backends": [[12, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[12, "custom-backends-after-aotautograd"]], "Debugging Backend": [[12, "debugging-backend"]], "Speedy Backend": [[12, "speedy-backend"]], "Composable Backends": [[12, "composable-backends"]], "Distributed communication package - torch.distributed": [[38, "distributed-communication-package-torch-distributed"]], "Backends": [[38, "backends"], [1910, "backends"]], "Backends that come with PyTorch": [[38, "backends-that-come-with-pytorch"]], "Which backend to use?": [[38, "which-backend-to-use"]], "Common environment variables": [[38, "common-environment-variables"]], "Choosing the network interface to use": [[38, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[38, "other-nccl-environment-variables"]], "Basics": [[38, "basics"], [1910, "basics"]], "Initialization": [[38, "initialization"]], "TCP initialization": [[38, "tcp-initialization"]], "Shared file-system initialization": [[38, "shared-file-system-initialization"]], "Environment variable initialization": [[38, "environment-variable-initialization"]], "Post-Initialization": [[38, "post-initialization"]], "Distributed Key-Value Store": [[38, "distributed-key-value-store"]], "Groups": [[38, "groups"]], "Point-to-point communication": [[38, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[38, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[38, "collective-functions"]], "Profiling Collective Communication": [[38, "profiling-collective-communication"]], "Multi-GPU collective functions": [[38, "multi-gpu-collective-functions"]], "Third-party backends": [[38, "third-party-backends"]], "Launch utility": [[38, "launch-utility"]], "Spawn utility": [[38, "spawn-utility"]], "Debugging torch.distributed applications": [[38, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[38, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[38, "torch-distributed-debug"]], "Logging": [[38, "logging"]], "PyTorch Design Philosophy": [[9, "pytorch-design-philosophy"]], "Design Principles": [[9, "design-principles"]], "Principle 1: Usability over Performance": [[9, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[9, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[9, "principle-3-python-first-with-best-in-class-language-interoperability"]], "torch.backends": [[3, "module-torch.backends"]], "torch.backends.cpu": [[3, "module-torch.backends.cpu"]], "torch.backends.cuda": [[3, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[3, "module-torch.backends.cudnn"]], "torch.backends.mps": [[3, "module-torch.backends.mps"]], "torch.backends.mkl": [[3, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[3, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[3, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[3, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[3, "module-torch.backends.xeon"]], "Distributed Optimizers": [[42, "distributed-optimizers"]], "PyTorch Governance | Build + CI": [[7, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[7, "how-to-add-a-new-maintainer"]], "CUDA Stream Sanitizer": [[32, "cuda-stream-sanitizer"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[40, "distributed-checkpoint-torch-distributed-checkpoint"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[43, "tensor-parallelism-torch-distributed-tensor-parallel"]], "PyTorch Governance | Mechanics": [[10, "pytorch-governance-mechanics"]], "Module Maintainers": [[10, "module-maintainers"]], "Nominating, Confirming and Removing Maintainers": [[10, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[10, "the-principles"]], "The Process for Nomination": [[10, "the-process-for-nomination"]], "The Process for Removal": [[10, "the-process-for-removal"]], "Nominating Core Maintainers": [[10, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[10, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[10, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[10, "decision-making"]], "Uncontroversial Changes": [[10, "uncontroversial-changes"]], "Controversial Decision Process": [[10, "controversial-decision-process"]], "General Project Policies": [[10, "general-project-policies"]], "FAQ": [[10, "faq"]], "torch.utils.checkpoint": [[6, "torch-utils-checkpoint"]], "PyTorch 2.0 NNModule Support": [[21, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[21, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[21, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[21, "state-dict-hooks"]], "Dynamic shapes": [[14, "dynamic-shapes"]], "Abridged public API": [[14, "abridged-public-api"]], "The Guard Model": [[14, "the-guard-model"]], "Abridged internal API": [[14, "abridged-internal-api"]], "DimDynamic policy": [[14, "dimdynamic-policy"]], "Unbacked SymInts": [[14, "unbacked-symints"]], "Getting Started": [[18, "getting-started"], [8, "getting-started"]], "Existing Backends": [[18, "existing-backends"]], "Why do you need another way of optimizing PyTorch code?": [[18, "why-do-you-need-another-way-of-optimizing-pytorch-code"]], "torch.utils.cpp_extension": [[29, "torch-utils-cpp-extension"]], "Automatic Mixed Precision package - torch.amp": [[1, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[1, "autocasting"]], "Gradient Scaling": [[1, "gradient-scaling"]], "Autocast Op Reference": [[1, "autocast-op-reference"]], "Op Eligibility": [[1, "op-eligibility"]], "CUDA Op-Specific Behavior": [[1, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[1, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[1, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[1, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[1, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[1, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[1, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[1, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[1, "cpu-ops-that-promote-to-the-widest-input-type"]], "DDP Communication Hooks": [[36, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[36, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[36, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[36, "default-communication-hooks"]], "PowerSGD Communication Hook": [[36, "powersgd-communication-hook"]], "PowerSGD State": [[36, "powersgd-state"]], "PowerSGD Hooks": [[36, "powersgd-hooks"]], "Debugging Communication Hooks": [[36, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[36, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[36, "acknowledgements"], [1903, "acknowledgements"]], "torch.utils.data": [[35, "module-torch.utils.data"]], "Dataset Types": [[35, "dataset-types"]], "Map-style datasets": [[35, "map-style-datasets"]], "Iterable-style datasets": [[35, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[35, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[35, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[35, "automatic-batching-default"]], "Disable automatic batching": [[35, "disable-automatic-batching"]], "Working with collate_fn": [[35, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[35, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[35, "single-process-data-loading-default"]], "Multi-process data loading": [[35, "multi-process-data-loading"]], "Platform-specific behaviors": [[35, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[35, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[35, "memory-pinning"]], "Error Propagation": [[48, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[48, "methods-and-classes"]], "Probability distributions - torch.distributions": [[44, "module-torch.distributions"]], "Score function": [[44, "score-function"]], "Pathwise derivative": [[44, "pathwise-derivative"]], "Distribution": [[44, "distribution"]], "ExponentialFamily": [[44, "exponentialfamily"]], "Bernoulli": [[44, "bernoulli"]], "Beta": [[44, "beta"]], "Binomial": [[44, "binomial"]], "Categorical": [[44, "categorical"]], "Cauchy": [[44, "cauchy"]], "Chi2": [[44, "chi2"]], "ContinuousBernoulli": [[44, "continuousbernoulli"]], "Dirichlet": [[44, "dirichlet"]], "Exponential": [[44, "exponential"]], "FisherSnedecor": [[44, "fishersnedecor"]], "Gamma": [[44, "gamma"]], "Geometric": [[44, "geometric"]], "Gumbel": [[44, "gumbel"]], "HalfCauchy": [[44, "halfcauchy"]], "HalfNormal": [[44, "halfnormal"]], "Independent": [[44, "independent"]], "Kumaraswamy": [[44, "kumaraswamy"]], "LKJCholesky": [[44, "lkjcholesky"]], "Laplace": [[44, "laplace"]], "LogNormal": [[44, "lognormal"]], "LowRankMultivariateNormal": [[44, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[44, "mixturesamefamily"]], "Multinomial": [[44, "multinomial"]], "MultivariateNormal": [[44, "multivariatenormal"]], "NegativeBinomial": [[44, "negativebinomial"]], "Normal": [[44, "normal"]], "OneHotCategorical": [[44, "onehotcategorical"]], "Pareto": [[44, "pareto"]], "Poisson": [[44, "poisson"]], "RelaxedBernoulli": [[44, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[44, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[44, "relaxedonehotcategorical"]], "StudentT": [[44, "studentt"]], "TransformedDistribution": [[44, "transformeddistribution"]], "Uniform": [[44, "uniform"]], "VonMises": [[44, "vonmises"]], "Weibull": [[44, "weibull"]], "Wishart": [[44, "wishart"]], "KL Divergence": [[44, "module-torch.distributions.kl"]], "Transforms": [[44, "module-torch.distributions.transforms"]], "Constraints": [[44, "module-torch.distributions.constraints"], [1883, "constraints"]], "Constraint Registry": [[44, "module-torch.distributions.constraint_registry"]], "PyTorch Contribution Guide": [[8, "pytorch-contribution-guide"]], "Contribution Process": [[8, "contribution-process"]], "Proposing New Features": [[8, "proposing-new-features"]], "Reporting Issues": [[8, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[8, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[8, "adding-tutorials"]], "Improving Documentation & Tutorials": [[8, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[8, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[8, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[8, "reviewing-open-pull-requests"]], "Improving Code Readability": [[8, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[8, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[8, "promoting-pytorch"]], "Triaging Issues": [[8, "triaging-issues"]], "About Open Source Development": [[8, "about-open-source-development"]], "Common Mistakes To Avoid": [[8, "common-mistakes-to-avoid"]], "On Documentation": [[8, "on-documentation"]], "Python Docs": [[8, "python-docs"]], "C++ Docs": [[8, "c-docs"]], "Tutorials": [[8, "tutorials"], [1903, "tutorials"], [1910, "tutorials"], [1902, "tutorials"]], "Tutorials Build Overview": [[8, "tutorials-build-overview"]], "Contributing a New Tutorial": [[8, "contributing-a-new-tutorial"]], "Automatic differentiation package - torch.autograd": [[2, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[2, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[2, "functional-higher-level-api"]], "Default gradient layouts": [[2, "default-gradient-layouts"]], "Manual gradient layouts": [[2, "manual-gradient-layouts"]], "In-place operations on Tensors": [[2, "in-place-operations-on-tensors"]], "In-place correctness checks": [[2, "in-place-correctness-checks"], [1880, "in-place-correctness-checks"]], "Variable (deprecated)": [[2, "variable-deprecated"]], "Tensor autograd functions": [[2, "tensor-autograd-functions"]], "Function": [[2, "function"]], "Context method mixins": [[2, "context-method-mixins"]], "Numerical gradient checking": [[2, "numerical-gradient-checking"]], "Profiler": [[2, "profiler"]], "Anomaly detection": [[2, "anomaly-detection"]], "Autograd graph": [[2, "autograd-graph"]], "Quantization Accuracy Debugging": [[1906, "quantization-accuracy-debugging"], [1905, "quantization-accuracy-debugging"]], "Data insensitive error": [[1906, "data-insensitive-error"]], "General tips": [[1906, "general-tips"]], "Int8 quantization tips": [[1906, "int8-quantization-tips"]], "Data sensitive error": [[1906, "data-sensitive-error"]], "Implementation error": [[1906, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1906, "numerical-debugging-tooling-prototype"]], "MPS backend": [[1892, "mps-backend"]], "torch._logging": [[1866, "torch-logging"]], "Extending torch.func with autograd.Function": [[1886, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1886, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1886, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1886, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1886, "limitations-and-gotchas"]], "torch.vmap() Support": [[1886, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1886, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1886, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1886, "torch-func-jvp-support"]], "Broadcasting semantics": [[1881, "broadcasting-semantics"]], "General semantics": [[1881, "general-semantics"]], "In-place semantics": [[1881, "in-place-semantics"]], "Backwards compatibility": [[1881, "backwards-compatibility"]], "torch.nn.init": [[1878, "torch-nn-init"]], "torch.random": [[1909, "module-torch.random"]], "torch.masked": [[1867, "torch-masked"]], "What is a MaskedTensor?": [[1867, "what-is-a-maskedtensor"]], "Supported Operators": [[1867, "supported-operators"]], "Unary Operators": [[1867, "unary-operators"]], "Binary Operators": [[1867, "binary-operators"]], "Reductions": [[1867, "reductions"]], "View and select functions": [[1867, "view-and-select-functions"]], "CPU threading and TorchScript inference": [[1882, "cpu-threading-and-torchscript-inference"]], "Build options": [[1882, "build-options"]], "Runtime API": [[1882, "runtime-api"]], "Tuning the number of threads": [[1882, "tuning-the-number-of-threads"]], "Features for large-scale deployments": [[1890, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1890, "fleet-wide-operator-profiling"]], "API usage logging": [[1890, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1890, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1890, "build-environment-considerations"]], "Common extension points": [[1890, "common-extension-points"]], "CUDA Automatic Mixed Precision examples": [[1879, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1879, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1879, "working-with-unscaled-gradients"]], "Gradient clipping": [[1879, "gradient-clipping"]], "Working with Scaled Gradients": [[1879, "working-with-scaled-gradients"]], "Gradient accumulation": [[1879, "gradient-accumulation"]], "Gradient penalty": [[1879, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1879, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1879, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1879, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1879, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1879, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1879, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1879, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1879, "functions-that-need-a-particular-dtype"]], "torch.mps": [[1871, "module-torch.mps"]], "MPS Profiler": [[1871, "mps-profiler"]], "torch.optim": [[1901, "module-torch.optim"]], "How to use an optimizer": [[1901, "how-to-use-an-optimizer"]], "Constructing it": [[1901, "constructing-it"]], "Per-parameter options": [[1901, "per-parameter-options"]], "Taking an optimization step": [[1901, "taking-an-optimization-step"]], "optimizer.step()": [[1901, "optimizer-step"]], "optimizer.step(closure)": [[1901, "optimizer-step-closure"]], "Base class": [[1901, "base-class"]], "Algorithms": [[1901, "algorithms"]], "How to adjust learning rate": [[1901, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1901, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1901, "constructing-averaged-models"]], "Custom averaging strategies": [[1901, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1901, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1901, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1901, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1901, "putting-it-all-together-ema"]], "Pipeline Parallelism": [[1903, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1903, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1903, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1903, "pipe-apis-in-pytorch"]], "Skip connections": [[1903, "skip-connections"]], "Named Tensors": [[1874, "named-tensors"]], "Creating named tensors": [[1874, "creating-named-tensors"]], "Named dimensions": [[1874, "named-dimensions"]], "Name propagation semantics": [[1874, "name-propagation-semantics"]], "match semantics": [[1874, "match-semantics"]], "Basic name inference rules": [[1874, "basic-name-inference-rules"]], "Explicit alignment by names": [[1874, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1874, "manipulating-dimensions"]], "Autograd support": [[1874, "autograd-support"]], "Currently supported operations and subsystems": [[1874, "currently-supported-operations-and-subsystems"]], "Operators": [[1874, "operators"]], "Subsystems": [[1874, "subsystems"]], "Named tensor API reference": [[1874, "named-tensor-api-reference"]], "HIP (ROCm) semantics": [[1889, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1889, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1889, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1889, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[1889, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1889, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1889, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1889, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1889, "enabling-kernel-asserts"]], "A Simple Custom Module": [[1891, "a-simple-custom-module"]], "Modules as Building Blocks": [[1891, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1891, "neural-network-training-with-modules"]], "Module State": [[1891, "module-state"]], "Module Initialization": [[1891, "module-initialization"]], "Module Hooks": [[1891, "module-hooks"]], "Advanced Features": [[1891, "advanced-features"]], "Distributed Training": [[1891, "distributed-training"]], "Profiling Performance": [[1891, "profiling-performance"]], "Improving Performance with Quantization": [[1891, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1891, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1891, "parametrizations"]], "Transforming Modules with FX": [[1891, "transforming-modules-with-fx"]], "Distributed Data Parallel": [[1884, "distributed-data-parallel"]], "Example": [[1884, "example"], [1885, "example"]], "Internal Design": [[1884, "internal-design"]], "ProcessGroup": [[1884, "processgroup"]], "TorchDynamo DDPOptimizer": [[1884, "id1"]], "Reproducibility": [[1895, "reproducibility"]], "Controlling sources of randomness": [[1895, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1895, "pytorch-random-number-generator"]], "Python": [[1895, "python"]], "Random number generators in other libraries": [[1895, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1895, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1895, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1895, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1895, "cuda-rnn-and-lstm"]], "DataLoader": [[1895, "dataloader"]], "CUDA semantics": [[1883, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1883, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1883, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1883, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1883, "asynchronous-execution"]], "CUDA streams": [[1883, "cuda-streams"]], "Stream semantics of backward passes": [[1883, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1883, "bc-note-using-grads-on-the-default-stream"]], "Environment variables": [[1883, "environment-variables"]], "Using custom memory allocators for CUDA": [[1883, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1883, "cublas-workspaces"]], "cuFFT plan cache": [[1883, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1883, "just-in-time-compilation"]], "Best practices": [[1883, "best-practices"]], "Device-agnostic code": [[1883, "device-agnostic-code"]], "Use pinned memory buffers": [[1883, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1883, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1883, "cuda-graphs"]], "Why CUDA Graphs?": [[1883, "why-cuda-graphs"]], "PyTorch API": [[1883, "pytorch-api"]], "Non-constraints": [[1883, "non-constraints"]], "Whole-network capture": [[1883, "whole-network-capture"]], "Partial-network capture": [[1883, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1883, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1883, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1883, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1883, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1883, "id5"]], "Graph memory management": [[1883, "graph-memory-management"]], "Sharing memory across captures": [[1883, "sharing-memory-across-captures"]], "torch.library": [[1864, "torch-library"]], "Quantization API Reference": [[1908, "quantization-api-reference"], [1905, "quantization-api-reference"]], "torch.ao.quantization": [[1908, "torch-ao-quantization"]], "Top level APIs": [[1908, "top-level-apis"]], "Preparing model for quantization": [[1908, "preparing-model-for-quantization"]], "Utility functions": [[1908, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[1908, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1908, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1908, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1908, "torch-ao-quantization-fx-custom-config"]], "torch (quantization related functions)": [[1908, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1908, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1908, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1908, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1908, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1908, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1908, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1908, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1908, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1908, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1908, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1908, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1908, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1908, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1908, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1908, "quantized-dtypes-and-quantization-schemes"]], "JIT Utils - torch.utils.jit": [[1863, "module-torch.utils.jit"]], "Serialization semantics": [[1896, "serialization-semantics"]], "Table of Contents": [[1896, "table-of-contents"]], "Saving and loading tensors": [[1896, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1896, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1896, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1896, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1896, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1896, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1896, "torch-full-always-inferring-a-float-dtype"]], "Multiprocessing best practices": [[1893, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1893, "cuda-in-multiprocessing"]], "Best practices and tips": [[1893, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1893, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1893, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1893, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1893, "hogwild"]], "torch.profiler": [[1904, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1904, "intel-instrumentation-and-tracing-technology-apis"]], "Named Tensors operator coverage": [[1873, "named-tensors-operator-coverage"]], "Supported Operations": [[1873, "id1"]], "Keeps input names": [[1873, "keeps-input-names"]], "Removes dimensions": [[1873, "removes-dimensions"]], "Unifies names from inputs": [[1873, "unifies-names-from-inputs"]], "Permutes dimensions": [[1873, "permutes-dimensions"]], "Contracts away dims": [[1873, "contracts-away-dims"]], "Factory functions": [[1873, "factory-functions"]], "out function and in-place variants": [[1873, "out-function-and-in-place-variants"]], "Extending PyTorch": [[1885, "extending-pytorch"]], "Extending torch.autograd": [[1885, "extending-torch-autograd"]], "When to use": [[1885, "when-to-use"]], "When not to use": [[1885, "when-not-to-use"]], "How to use": [[1885, "how-to-use"]], "Combined or separate forward() and setup_context()": [[1885, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1885, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1885, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1885, "extending-torch-nn"]], "Adding a Module": [[1885, "adding-a-module"]], "Extending torch": [[1885, "extending-torch"]], "Extending torch with a Tensor-like type": [[1885, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1885, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1885, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1885, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1885, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Writing custom C++ extensions": [[1885, "writing-custom-c-extensions"]], "Writing custom C extensions": [[1885, "id2"]], "Quantization Backend Configuration": [[1907, "quantization-backend-configuration"], [1905, "quantization-backend-configuration"]], "Default values for native configurations": [[1907, "default-values-for-native-configurations"]], "torch.nn": [[1876, "module-torch.nn"], [1876, "id1"]], "Containers": [[1876, "containers"]], "Convolution Layers": [[1876, "convolution-layers"]], "Pooling layers": [[1876, "pooling-layers"]], "Padding Layers": [[1876, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1876, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1876, "non-linear-activations-other"]], "Normalization Layers": [[1876, "normalization-layers"]], "Recurrent Layers": [[1876, "recurrent-layers"]], "Transformer Layers": [[1876, "transformer-layers"]], "Linear Layers": [[1876, "linear-layers"]], "Dropout Layers": [[1876, "dropout-layers"]], "Sparse Layers": [[1876, "sparse-layers"]], "Distance Functions": [[1876, "distance-functions"]], "Loss Functions": [[1876, "loss-functions"]], "Vision Layers": [[1876, "vision-layers"]], "Shuffle Layers": [[1876, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1876, "module-torch.nn.parallel"]], "Quantized Functions": [[1876, "quantized-functions"]], "Lazy Modules Initialization": [[1876, "lazy-modules-initialization"]], "Numerical accuracy": [[1894, "numerical-accuracy"]], "Batched computations or slice computations": [[1894, "batched-computations-or-slice-computations"]], "Extremal values": [[1894, "extremal-values"]], "Linear algebra (torch.linalg)": [[1894, "linear-algebra-torch-linalg"]], "Non-finite values": [[1894, "non-finite-values"]], "Extremal values in linalg": [[1894, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1894, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1894, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1894, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "ONNX supported TorchScript operators": [[1900, "onnx-supported-torchscript-operators"]], "Supported operators": [[1900, "supported-operators"]], "ONNX support for TorchScript operators": [[1900, "id1"]], "Unsupported operators": [[1900, "unsupported-operators"], [1900, "id2"]], "Autograd mechanics": [[1880, "autograd-mechanics"]], "How autograd encodes the history": [[1880, "how-autograd-encodes-the-history"]], "Saved tensors": [[1880, "saved-tensors"]], "Gradients for non-differentiable functions": [[1880, "gradients-for-non-differentiable-functions"]], "Setting requires_grad": [[1880, "setting-requires-grad"]], "Grad Modes": [[1880, "grad-modes"]], "Default Mode (Grad Mode)": [[1880, "default-mode-grad-mode"]], "No-grad Mode": [[1880, "no-grad-mode"]], "Inference Mode": [[1880, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1880, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1880, "in-place-operations-with-autograd"]], "Multithreaded Autograd": [[1880, "multithreaded-autograd"]], "Concurrency on CPU": [[1880, "concurrency-on-cpu"]], "Non-determinism": [[1880, "non-determinism"]], "Graph retaining": [[1880, "graph-retaining"]], "Thread Safety on Autograd Node": [[1880, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1880, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1880, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1880, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1880, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1880, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1880, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1880, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1880, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1880, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1880, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1880, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1880, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1880, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1880, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1880, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1880, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "torch.utils.model_zoo": [[1869, "torch-utils-model-zoo"]], "torch.onnx": [[1898, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1898, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1898, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1898, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1898, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1898, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1898, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Limitations": [[1898, "limitations"]], "Differences in Operator Implementations": [[1898, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1898, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1898, "reads-gets"]], "Writes / Sets": [[1898, "writes-sets"]], "Adding support for operators": [[1898, "adding-support-for-operators"]], "ONNX exporter internals": [[1898, "onnx-exporter-internals"]], "ATen operators": [[1898, "aten-operators"]], "List of supported operators": [[1898, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1898, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1898, "torch-autograd-functions"]], "Static Symbolic Method": [[1898, "static-symbolic-method"]], "Inline Autograd Function": [[1898, "inline-autograd-function"]], "Custom operators": [[1898, "custom-operators"]], "ONNX-script functions": [[1898, "onnx-script-functions"]], "C++ Operators": [[1898, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1898, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1898, "contributing-developing"]], "Classes": [[1898, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1898, "preview-torch-onnx-torchdynamo-exporter"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1887, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1887, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1887, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1887, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1887, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "Windows FAQ": [[1897, "windows-faq"]], "Building from source": [[1897, "building-from-source"]], "Include optional components": [[1897, "include-optional-components"]], "Speeding CUDA build for Windows": [[1897, "speeding-cuda-build-for-windows"]], "One key install script": [[1897, "one-key-install-script"]], "Extension": [[1897, "extension"]], "CFFI Extension": [[1897, "cffi-extension"]], "Cpp Extension": [[1897, "cpp-extension"]], "Installation": [[1897, "installation"]], "Package not found in win-32 channel.": [[1897, "package-not-found-in-win-32-channel"]], "Import error": [[1897, "import-error"]], "Usage (multiprocessing)": [[1897, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1897, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1897, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1897, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1897, "cuda-ipc-operations"]], "torch.monitor": [[1870, "torch-monitor"]], "Quantization": [[1905, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1905, "introduction-to-quantization"]], "Quantization API Summary": [[1905, "quantization-api-summary"]], "Eager Mode Quantization": [[1905, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1905, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1905, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1905, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1905, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1905, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1905, "quantization-stack"]], "Quantized Model": [[1905, "quantized-model"]], "Quantized Tensor": [[1905, "quantized-tensor"]], "Quantize and Dequantize": [[1905, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1905, "quantized-operators-modules"]], "Quantized Engine": [[1905, "quantized-engine"]], "Quantization Flow": [[1905, "quantization-flow"]], "Observer and FakeQuantize": [[1905, "observer-and-fakequantize"]], "QConfig": [[1905, "qconfig"], [835, "qconfig"]], "General Quantization Flow": [[1905, "general-quantization-flow"]], "Quantization Support Matrix": [[1905, "quantization-support-matrix"]], "Quantization Mode Support": [[1905, "quantization-mode-support"]], "Quantization Flow Support": [[1905, "quantization-flow-support"]], "Backend/Hardware Support": [[1905, "backend-hardware-support"]], "Note for native CPU backends": [[1905, "note-for-native-cpu-backends"]], "Operator Support": [[1905, "operator-support"]], "Quantization Customizations": [[1905, "quantization-customizations"]], "Quantization Custom Module API": [[1905, "quantization-custom-module-api"]], "Best Practices": [[1905, "best-practices"]], "Common Errors": [[1905, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1905, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1905, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1905, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1905, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "Multiprocessing package - torch.multiprocessing": [[1872, "module-torch.multiprocessing"]], "Strategy management": [[1872, "strategy-management"]], "Sharing CUDA tensors": [[1872, "sharing-cuda-tensors"]], "Sharing strategies": [[1872, "sharing-strategies"]], "File descriptor - file_descriptor": [[1872, "file-descriptor-file-descriptor"]], "File system - file_system": [[1872, "file-system-file-system"]], "Spawning subprocesses": [[1872, "spawning-subprocesses"]], "Gradcheck mechanics": [[1888, "gradcheck-mechanics"]], "Notations and background information": [[1888, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1888, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1888, "real-to-real-functions"]], "Default real input numerical evaluation": [[1888, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1888, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1888, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1888, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1888, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1888, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1888, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1888, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1888, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1888, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1888, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1888, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1888, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1888, "gradgradcheck-implementation"]], "Distributed RPC Framework": [[1910, "distributed-rpc-framework"]], "RPC": [[1910, "rpc"]], "TensorPipe Backend": [[1910, "tensorpipe-backend"]], "RRef": [[1910, "rref"]], "More Information about RRef": [[1910, null]], "RemoteModule": [[1910, "remotemodule"]], "Distributed Autograd Framework": [[1910, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1910, null]], "torch.onnx diagnostics": [[1899, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1899, "diagnostic-rules"]], "torch.utils.mobile_optimizer": [[1868, "torch-utils-mobile-optimizer"]], "TorchScript Unsupported PyTorch Constructs": [[1862, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1862, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1862, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1862, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1862, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1862, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1862, "pytorch-unsupported-modules-and-classes"]], "torch.package": [[1902, "torch-package"]], "Packaging your first model": [[1902, "packaging-your-first-model"]], "How do I\u2026": [[1902, "how-do-i"]], "See what is inside a package?": [[1902, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1902, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1902, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1902, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1902, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1902, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1902, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1902, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1902, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1902, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1902, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1902, "package-a-torchscript-module"]], "Explanation": [[1902, "explanation"]], "torch.package Format Overview": [[1902, "torch-package-format-overview"]], "Framework files": [[1902, "framework-files"]], "User files": [[1902, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1902, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1902, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1902, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1902, "dependency-management"]], "intern": [[1902, "intern"]], "extern": [[1902, "extern"]], "mock": [[1902, "mock"]], "Refactoring": [[1902, "refactoring"]], "Patterns": [[1902, "patterns"]], "torch.package sharp edges": [[1902, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1902, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1902, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1902, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1902, "mangling"]], "torch.linalg": [[1865, "torch-linalg"]], "Matrix Properties": [[1865, "matrix-properties"]], "Decompositions": [[1865, "decompositions"]], "Solvers": [[1865, "solvers"]], "Inverses": [[1865, "inverses"]], "Matrix Functions": [[1865, "matrix-functions"]], "Matrix Products": [[1865, "matrix-products"]], "Tensor Operations": [[1865, "tensor-operations"]], "Misc": [[1865, "misc"]], "Experimental Functions": [[1865, "experimental-functions"]], "torch.nested": [[1875, "module-torch.nested"]], "size": [[1875, "size"]], "unbind": [[1875, "unbind"]], "Nested tensor constructor and conversion functions": [[1875, "nested-tensor-constructor-and-conversion-functions"]], "torch.nn.functional": [[1877, "torch-nn-functional"]], "Convolution functions": [[1877, "convolution-functions"]], "Pooling functions": [[1877, "pooling-functions"]], "Attention Mechanisms": [[1877, "attention-mechanisms"]], "Non-linear activation functions": [[1877, "non-linear-activation-functions"]], "Linear functions": [[1877, "linear-functions"]], "Dropout functions": [[1877, "dropout-functions"]], "Sparse functions": [[1877, "sparse-functions"]], "Distance functions": [[1877, "distance-functions"]], "Loss functions": [[1877, "loss-functions"]], "Vision functions": [[1877, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1877, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1877, "data-parallel"]], "Event": [[963, "event"]], "Stream": [[966, "stream"]], "torch.cosh": [[957, "torch-cosh"]], "torch.chain_matmul": [[937, "torch-chain-matmul"]], "torch.cuda.comm.broadcast": [[973, "torch-cuda-comm-broadcast"]], "torch.bucketize": [[931, "torch-bucketize"]], "torch.copysign": [[954, "torch-copysign"]], "torch.cuda.comm.scatter": [[977, "torch-cuda-comm-scatter"]], "torch.clip": [[943, "torch-clip"]], "torch.cuda.current_device": [[979, "torch-cuda-current-device"]], "torch.cholesky_solve": [[940, "torch-cholesky-solve"]], "torch.column_stack": [[945, "torch-column-stack"]], "torch.cov": [[959, "torch-cov"]], "StreamContext": [[967, "streamcontext"]], "CUDAPluggableAllocator": [[962, "cudapluggableallocator"]], "torch.cuda.caching_allocator_delete": [[969, "torch-cuda-caching-allocator-delete"]], "torch.cuda.OutOfMemoryError": [[965, "torch-cuda-outofmemoryerror"]], "torch.cat": [[934, "torch-cat"]], "torch.cartesian_prod": [[933, "torch-cartesian-prod"]], "torch.ceil": [[936, "torch-ceil"]], "torch.conj": [[952, "torch-conj"]], "CUDAGraph": [[961, "cudagraph"]], "torch.cuda.change_current_allocator": [[971, "torch-cuda-change-current-allocator"]], "torch.cuda.comm.reduce_add": [[976, "torch-cuda-comm-reduce-add"]], "torch.conj_physical": [[953, "torch-conj-physical"]], "torch.corrcoef": [[955, "torch-corrcoef"]], "torch.cdist": [[935, "torch-cdist"]], "torch.cos": [[956, "torch-cos"]], "torch.count_nonzero": [[958, "torch-count-nonzero"]], "torch.cuda.clock_rate": [[972, "torch-cuda-clock-rate"]], "torch.compiled_with_cxx11_abi": [[948, "torch-compiled-with-cxx11-abi"]], "torch.cuda.comm.gather": [[975, "torch-cuda-comm-gather"]], "torch.cholesky": [[938, "torch-cholesky"]], "torch.can_cast": [[932, "torch-can-cast"]], "torch.concatenate": [[951, "torch-concatenate"]], "torch.combinations": [[946, "torch-combinations"]], "torch.concat": [[950, "torch-concat"]], "torch.cuda.caching_allocator_alloc": [[968, "torch-cuda-caching-allocator-alloc"]], "torch.clamp": [[942, "torch-clamp"]], "torch.clone": [[944, "torch-clone"]], "torch.cross": [[960, "torch-cross"]], "torch.cuda.comm.broadcast_coalesced": [[974, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.current_blas_handle": [[978, "torch-cuda-current-blas-handle"]], "torch.complex": [[949, "torch-complex"]], "ExternalStream": [[964, "externalstream"]], "torch.chunk": [[941, "torch-chunk"]], "torch.cuda.can_device_access_peer": [[970, "torch-cuda-can-device-access-peer"]], "torch.cholesky_inverse": [[939, "torch-cholesky-inverse"]], "torch.bitwise_not": [[921, "torch-bitwise-not"]], "torch.autograd.graph.Node.name": [[905, "torch-autograd-graph-node-name"]], "torch.bitwise_and": [[919, "torch-bitwise-and"]], "torch.bitwise_or": [[922, "torch-bitwise-or"]], "torch.autograd.profiler.profile.key_averages": [[911, "torch-autograd-profiler-profile-key-averages"]], "torch.autograd.functional.jvp": [[898, "torch-autograd-functional-jvp"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[894, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.autograd.graph.Node.next_functions": [[906, "torch-autograd-graph-node-next-functions"]], "torch.autograd.functional.hvp": [[896, "torch-autograd-functional-hvp"]], "torch.bincount": [[918, "torch-bincount"]], "torch.block_diag": [[926, "torch-block-diag"]], "torch.autograd.Function.forward": [[884, "torch-autograd-function-forward"]], "torch.autograd.graph.Node.metadata": [[904, "torch-autograd-graph-node-metadata"]], "torch.broadcast_tensors": [[929, "torch-broadcast-tensors"]], "torch.autograd.forward_ad.make_dual": [[889, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[891, "torch-autograd-function-functionctx-mark-dirty"]], "torch.autograd.gradgradcheck": [[903, "torch-autograd-gradgradcheck"]], "torch.autograd.functional.jacobian": [[897, "torch-autograd-functional-jacobian"]], "torch.bartlett_window": [[916, "torch-bartlett-window"]], "dual_level": [[888, "dual-level"]], "torch.bitwise_xor": [[924, "torch-bitwise-xor"]], "torch.bitwise_right_shift": [[923, "torch-bitwise-right-shift"]], "torch.blackman_window": [[925, "torch-blackman-window"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[892, "torch-autograd-function-functionctx-mark-non-differentiable"]], "set_multithreading_enabled": [[914, "set-multithreading-enabled"]], "torch.autograd.forward_ad.unpack_dual": [[890, "torch-autograd-forward-ad-unpack-dual"]], "torch.autograd.Function.vmap": [[886, "torch-autograd-function-vmap"]], "torch.autograd.graph.Node.register_prehook": [[908, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.functional.hessian": [[895, "torch-autograd-functional-hessian"]], "torch.atleast_3d": [[882, "torch-atleast-3d"]], "torch.autograd.Function.jvp": [[885, "torch-autograd-function-jvp"]], "torch.autograd.Function.backward": [[883, "torch-autograd-function-backward"]], "torch.autograd.functional.vjp": [[900, "torch-autograd-functional-vjp"]], "torch.autograd.grad": [[901, "torch-autograd-grad"]], "torch.broadcast_shapes": [[928, "torch-broadcast-shapes"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[893, "torch-autograd-function-functionctx-save-for-backward"]], "torch.bmm": [[927, "torch-bmm"]], "torch.broadcast_to": [[930, "torch-broadcast-to"]], "torch.autograd.profiler.load_nvprof": [[909, "torch-autograd-profiler-load-nvprof"]], "torch.bernoulli": [[917, "torch-bernoulli"]], "torch.autograd.profiler.profile.export_chrome_trace": [[910, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.autograd.graph.Node.register_hook": [[907, "torch-autograd-graph-node-register-hook"]], "torch.autograd.functional.vhp": [[899, "torch-autograd-functional-vhp"]], "torch.autograd.profiler.profile.total_average": [[913, "torch-autograd-profiler-profile-total-average"]], "torch.autograd.gradcheck": [[902, "torch-autograd-gradcheck"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[912, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.baddbmm": [[915, "torch-baddbmm"]], "torch.autograd.backward": [[887, "torch-autograd-backward"]], "torch.bitwise_left_shift": [[920, "torch-bitwise-left-shift"]], "quantize_qat": [[857, "quantize-qat"]], "torch.arange": [[859, "torch-arange"]], "torch.arccosh": [[861, "torch-arccosh"]], "prepare_fx": [[855, "prepare-fx"]], "torch.are_deterministic_algorithms_enabled": [[867, "torch-are-deterministic-algorithms-enabled"]], "torch.arcsinh": [[863, "torch-arcsinh"]], "quantize_dynamic": [[852, "quantize-dynamic"]], "torch.argmax": [[868, "torch-argmax"]], "torch.atan": [[877, "torch-atan"]], "fuse_fx": [[854, "fuse-fx"]], "torch.atleast_2d": [[881, "torch-atleast-2d"]], "torch.atan2": [[878, "torch-atan2"]], "get_default_qconfig_mapping": [[850, "get-default-qconfig-mapping"]], "torch.asarray": [[874, "torch-asarray"]], "swap_module": [[858, "swap-module"]], "default_debug_qconfig": [[837, "default-debug-qconfig"]], "prepare_qat": [[833, "prepare-qat"]], "torch.arccos": [[860, "torch-arccos"]], "torch.atleast_1d": [[880, "torch-atleast-1d"]], "torch.argmin": [[869, "torch-argmin"]], "default_activation_only_qconfig": [[836, "default-activation-only-qconfig"]], "torch.arctanh": [[866, "torch-arctanh"]], "default_weight_only_qconfig": [[843, "default-weight-only-qconfig"]], "QConfigMapping": [[848, "qconfigmapping"]], "torch.asinh": [[876, "torch-asinh"]], "default_per_channel_qconfig": [[839, "default-per-channel-qconfig"]], "torch.asin": [[875, "torch-asin"]], "float16_dynamic_qconfig": [[844, "float16-dynamic-qconfig"]], "default_qat_qconfig_v2": [[841, "default-qat-qconfig-v2"]], "torch.as_tensor": [[873, "torch-as-tensor"]], "convert_fx": [[853, "convert-fx"]], "per_channel_dynamic_qconfig": [[847, "per-channel-dynamic-qconfig"]], "torch.atanh": [[879, "torch-atanh"]], "torch.argwhere": [[871, "torch-argwhere"]], "prepare_qat_fx": [[856, "prepare-qat-fx"]], "default_qconfig": [[842, "default-qconfig"]], "default_qat_qconfig": [[840, "default-qat-qconfig"]], "float16_static_qconfig": [[845, "float16-static-qconfig"]], "propagate_qconfig": [[834, "propagate-qconfig"]], "quantize": [[851, "quantize"]], "get_default_qat_qconfig_mapping": [[849, "get-default-qat-qconfig-mapping"]], "torch.arctan2": [[865, "torch-arctan2"]], "float_qparams_weight_only_qconfig": [[846, "float-qparams-weight-only-qconfig"]], "torch.as_strided": [[872, "torch-as-strided"]], "torch.arctan": [[864, "torch-arctan"]], "default_dynamic_qconfig": [[838, "default-dynamic-qconfig"]], "torch.arcsin": [[862, "torch-arcsin"]], "torch.argsort": [[870, "torch-argsort"]], "disable_fake_quant": [[804, "disable-fake-quant"]], "PerChannelMinMaxObserver": [[819, "perchannelminmaxobserver"]], "DTypeConfig": [[788, "dtypeconfig"]], "default_float_qparams_observer": [[824, "default-float-qparams-observer"]], "QuantWrapper": [[784, "quantwrapper"]], "HistogramObserver": [[813, "histogramobserver"]], "default_per_channel_weight_fake_quant": [[802, "default-per-channel-weight-fake-quant"]], "default_histogram_observer": [[825, "default-histogram-observer"]], "default_fused_act_fake_quant": [[798, "default-fused-act-fake-quant"]], "default_placeholder_observer": [[828, "default-placeholder-observer"]], "DTypeWithConstraints": [[789, "dtypewithconstraints"]], "FusedMovingAvgObsFakeQuantize": [[796, "fusedmovingavgobsfakequantize"]], "default_fused_per_channel_wt_fake_quant": [[799, "default-fused-per-channel-wt-fake-quant"]], "load_observer_state_dict": [[831, "load-observer-state-dict"]], "prepare": [[832, "prepare"]], "default_dynamic_quant_observer": [[823, "default-dynamic-quant-observer"]], "default_per_channel_weight_observer": [[827, "default-per-channel-weight-observer"]], "get_observer_state_dict": [[830, "get-observer-state-dict"]], "FakeQuantize": [[793, "fakequantize"]], "fuse_modules": [[808, "fuse-modules"]], "BackendConfig": [[786, "backendconfig"]], "MinMaxObserver": [[814, "minmaxobserver"]], "PrepareCustomConfig": [[811, "preparecustomconfig"]], "default_weight_observer": [[829, "default-weight-observer"]], "default_debug_observer": [[822, "default-debug-observer"]], "convert": [[791, "convert"]], "default_fake_quant": [[797, "default-fake-quant"]], "enable_observer": [[807, "enable-observer"]], "RecordingObserver": [[821, "recordingobserver"]], "FakeQuantizeBase": [[794, "fakequantizebase"]], "default_observer": [[826, "default-observer"]], "MovingAverageMinMaxObserver": [[815, "movingaverageminmaxobserver"]], "default_weight_fake_quant": [[803, "default-weight-fake-quant"]], "ConvertCustomConfig": [[809, "convertcustomconfig"]], "ObserverBase": [[818, "observerbase"]], "FuseCustomConfig": [[810, "fusecustomconfig"]], "FixedQParamsFakeQuantize": [[795, "fixedqparamsfakequantize"]], "PlaceholderObserver": [[820, "placeholderobserver"]], "MovingAveragePerChannelMinMaxObserver": [[816, "movingaverageperchannelminmaxobserver"]], "default_histogram_fake_quant": [[801, "default-histogram-fake-quant"]], "default_fused_wt_fake_quant": [[800, "default-fused-wt-fake-quant"]], "default_eval_fn": [[792, "default-eval-fn"]], "disable_observer": [[805, "disable-observer"]], "enable_fake_quant": [[806, "enable-fake-quant"]], "NoopObserver": [[817, "noopobserver"]], "StandaloneModuleConfigEntry": [[812, "standalonemoduleconfigentry"]], "BackendPatternConfig": [[787, "backendpatternconfig"]], "add_quant_dequant": [[785, "add-quant-dequant"]], "ObservationType": [[790, "observationtype"]], "upsample": [[779, "upsample"]], "FloatFunctional": [[742, "floatfunctional"]], "QuantStub": [[783, "quantstub"]], "max_pool2d": [[777, "max-pool2d"]], "QFunctional": [[751, "qfunctional"]], "avg_pool2d": [[762, "avg-pool2d"]], "interpolate": [[773, "interpolate"]], "leaky_relu": [[774, "leaky-relu"]], "conv2d": [[767, "conv2d"]], "threshold": [[778, "threshold"]], "FXFloatFunctional": [[741, "fxfloatfunctional"]], "avg_pool3d": [[763, "avg-pool3d"]], "conv1d": [[766, "conv1d"]], "conv3d": [[768, "conv3d"]], "adaptive_avg_pool3d": [[761, "adaptive-avg-pool3d"]], "hardtanh": [[772, "hardtanh"]], "hardsigmoid": [[770, "hardsigmoid"]], "hardswish": [[771, "hardswish"]], "upsample_nearest": [[781, "upsample-nearest"]], "upsample_bilinear": [[780, "upsample-bilinear"]], "clamp": [[765, "clamp"]], "linear": [[775, "linear"]], "celu": [[764, "celu"]], "max_pool1d": [[776, "max-pool1d"]], "DeQuantStub": [[782, "dequantstub"]], "adaptive_avg_pool2d": [[760, "adaptive-avg-pool2d"]], "elu": [[769, "elu"]], "update_bn_stats": [[716, "update-bn-stats"]], "ConvBnReLU2d": [[700, "convbnrelu2d"], [710, "convbnrelu2d"]], "torch.allclose": [[688, "torch-allclose"]], "ConvReLU1d": [[702, "convrelu1d"], [719, "convrelu1d"]], "torch.amin": [[690, "torch-amin"]], "freeze_bn_stats": [[715, "freeze-bn-stats"]], "torch.any": [[693, "torch-any"]], "ConvBn2d": [[707, "convbn2d"], [697, "convbn2d"]], "ConvBn1d": [[706, "convbn1d"], [696, "convbn1d"]], "torch.amax": [[689, "torch-amax"]], "LinearReLU": [[722, "linearrelu"], [723, "linearrelu"], [714, "linearrelu"], [705, "linearrelu"]], "torch.all": [[687, "torch-all"]], "ConvBnReLU1d": [[699, "convbnrelu1d"], [709, "convbnrelu1d"]], "torch.adjoint": [[686, "torch-adjoint"]], "BNReLU3d": [[695, "bnrelu3d"], [718, "bnrelu3d"]], "ConvReLU2d": [[712, "convrelu2d"], [720, "convrelu2d"], [703, "convrelu2d"]], "ConvBn3d": [[698, "convbn3d"], [708, "convbn3d"]], "ConvReLU3d": [[713, "convrelu3d"], [704, "convrelu3d"], [721, "convrelu3d"]], "torch.aminmax": [[691, "torch-aminmax"]], "BNReLU2d": [[694, "bnrelu2d"], [717, "bnrelu2d"]], "ConvBnReLU3d": [[701, "convbnrelu3d"], [711, "convbnrelu3d"]], "torch.angle": [[692, "torch-angle"]], "torch.acosh": [[678, "torch-acosh"]], "torch.absolute": [[676, "torch-absolute"]], "torch._foreach_zero_": [[673, "torch-foreach-zero"]], "torch._foreach_log2_": [[653, "torch-foreach-log2"]], "torch._foreach_lgamma": [[645, "torch-foreach-lgamma"]], "torch._foreach_trunc": [[671, "torch-foreach-trunc"]], "torch._foreach_exp": [[637, "torch-foreach-exp"]], "torch._foreach_log2": [[652, "torch-foreach-log2"]], "torch._foreach_log_": [[654, "torch-foreach-log"]], "torch._foreach_log10_": [[649, "torch-foreach-log10"]], "torch._foreach_log10": [[648, "torch-foreach-log10"]], "torch._foreach_sin_": [[664, "torch-foreach-sin"]], "torch._foreach_sigmoid_": [[662, "torch-foreach-sigmoid"]], "torch._foreach_log1p_": [[651, "torch-foreach-log1p"]], "torch.abs": [[675, "torch-abs"]], "torch.addcdiv": [[681, "torch-addcdiv"]], "torch._foreach_floor": [[641, "torch-foreach-floor"]], "torch._foreach_round": [[659, "torch-foreach-round"]], "torch._foreach_sinh_": [[666, "torch-foreach-sinh"]], "torch._foreach_expm1_": [[640, "torch-foreach-expm1"]], "torch._foreach_sinh": [[665, "torch-foreach-sinh"]], "torch._foreach_tan_": [[670, "torch-foreach-tan"]], "torch._foreach_exp_": [[638, "torch-foreach-exp"]], "torch._foreach_reciprocal_": [[658, "torch-foreach-reciprocal"]], "torch._foreach_trunc_": [[672, "torch-foreach-trunc"]], "torch._foreach_sqrt": [[667, "torch-foreach-sqrt"]], "torch._foreach_frac_": [[644, "torch-foreach-frac"]], "torch.addmm": [[683, "torch-addmm"]], "torch._foreach_floor_": [[642, "torch-foreach-floor"]], "torch.add": [[679, "torch-add"]], "torch.addr": [[685, "torch-addr"]], "torch._foreach_sqrt_": [[668, "torch-foreach-sqrt"]], "torch._foreach_neg": [[655, "torch-foreach-neg"]], "torch._foreach_log": [[647, "torch-foreach-log"]], "torch._foreach_expm1": [[639, "torch-foreach-expm1"]], "torch._foreach_neg_": [[656, "torch-foreach-neg"]], "torch._foreach_sin": [[663, "torch-foreach-sin"]], "torch._foreach_tan": [[669, "torch-foreach-tan"]], "torch._foreach_round_": [[660, "torch-foreach-round"]], "torch.addbmm": [[680, "torch-addbmm"]], "torch._foreach_lgamma_": [[646, "torch-foreach-lgamma"]], "torch.acos": [[677, "torch-acos"]], "torch._foreach_reciprocal": [[657, "torch-foreach-reciprocal"]], "torch._foreach_sigmoid": [[661, "torch-foreach-sigmoid"]], "torch._foreach_frac": [[643, "torch-foreach-frac"]], "torch._foreach_log1p": [[650, "torch-foreach-log1p"]], "torch.addmv": [[684, "torch-addmv"]], "torch.addcmul": [[682, "torch-addcmul"]], "torch._logging.set_logs": [[674, "torch-logging-set-logs"]], "torch.Tensor.true_divide_": [[594, "torch-tensor-true-divide"]], "torch.Tensor.unique_consecutive": [[604, "torch-tensor-unique-consecutive"]], "torch.Tensor.tril": [[589, "torch-tensor-tril"]], "torch.Tensor.true_divide": [[593, "torch-tensor-true-divide"]], "torch.Tensor.values": [[608, "torch-tensor-values"]], "torch._foreach_cosh_": [[632, "torch-foreach-cosh"]], "torch._foreach_atan": [[625, "torch-foreach-atan"]], "torch.Tensor.unbind": [[599, "torch-tensor-unbind"]], "torch._foreach_erfc_": [[636, "torch-foreach-erfc"]], "torch.Tensor.tril_": [[590, "torch-tensor-tril"]], "torch._foreach_abs": [[619, "torch-foreach-abs"]], "torch.Tensor.triu_": [[592, "torch-tensor-triu"]], "torch.Tensor.view": [[611, "torch-tensor-view"]], "torch.Tensor.view_as": [[612, "torch-tensor-view-as"]], "torch._assert": [[618, "torch-assert"]], "torch.Tensor.untyped_storage": [[607, "torch-tensor-untyped-storage"]], "torch.Tensor.vsplit": [[613, "torch-tensor-vsplit"]], "torch.Tensor.trunc": [[595, "torch-tensor-trunc"]], "torch.Tensor.xlogy": [[615, "torch-tensor-xlogy"]], "torch._foreach_acos_": [[622, "torch-foreach-acos"]], "torch.Tensor.where": [[614, "torch-tensor-where"]], "torch.Tensor.var": [[609, "torch-tensor-var"]], "torch.Tensor.unfold": [[601, "torch-tensor-unfold"]], "torch.Tensor.uniform_": [[602, "torch-tensor-uniform"]], "torch._foreach_erf_": [[634, "torch-foreach-erf"]], "torch.Tensor.vdot": [[610, "torch-tensor-vdot"]], "torch.Tensor.type": [[597, "torch-tensor-type"]], "torch._foreach_cosh": [[631, "torch-foreach-cosh"]], "torch._foreach_ceil": [[627, "torch-foreach-ceil"]], "torch.Tensor.zero_": [[617, "torch-tensor-zero"]], "torch.Tensor.unique": [[603, "torch-tensor-unique"]], "torch._foreach_ceil_": [[628, "torch-foreach-ceil"]], "torch._foreach_cos_": [[630, "torch-foreach-cos"]], "torch.Tensor.unflatten": [[600, "torch-tensor-unflatten"]], "torch._foreach_acos": [[621, "torch-foreach-acos"]], "torch.Tensor.xlogy_": [[616, "torch-tensor-xlogy"]], "torch.Tensor.triu": [[591, "torch-tensor-triu"]], "torch._foreach_atan_": [[626, "torch-foreach-atan"]], "torch.Tensor.unsqueeze_": [[606, "torch-tensor-unsqueeze"]], "torch._foreach_asin": [[623, "torch-foreach-asin"]], "torch._foreach_erf": [[633, "torch-foreach-erf"]], "torch._foreach_cos": [[629, "torch-foreach-cos"]], "torch.Tensor.triangular_solve": [[588, "torch-tensor-triangular-solve"]], "torch._foreach_erfc": [[635, "torch-foreach-erfc"]], "torch.Tensor.type_as": [[598, "torch-tensor-type-as"]], "torch.Tensor.unsqueeze": [[605, "torch-tensor-unsqueeze"]], "torch._foreach_abs_": [[620, "torch-foreach-abs"]], "torch._foreach_asin_": [[624, "torch-foreach-asin"]], "torch.Tensor.trunc_": [[596, "torch-tensor-trunc"]], "torch.Tensor.tile": [[573, "torch-tensor-tile"]], "torch.Tensor.tanh": [[570, "torch-tensor-tanh"]], "torch.Tensor.sparse_resize_": [[539, "torch-tensor-sparse-resize"]], "torch.Tensor.square": [[544, "torch-tensor-square"]], "torch.Tensor.split": [[541, "torch-tensor-split"]], "torch.Tensor.storage_type": [[553, "torch-tensor-storage-type"]], "torch.Tensor.swapaxes": [[562, "torch-tensor-swapaxes"]], "torch.Tensor.tolist": [[583, "torch-tensor-tolist"]], "torch.Tensor.trace": [[585, "torch-tensor-trace"]], "torch.Tensor.tanh_": [[571, "torch-tensor-tanh"]], "torch.Tensor.storage_offset": [[552, "torch-tensor-storage-offset"]], "torch.Tensor.sspaddmm": [[548, "torch-tensor-sspaddmm"]], "torch.Tensor.transpose": [[586, "torch-tensor-transpose"]], "torch.Tensor.transpose_": [[587, "torch-tensor-transpose"]], "torch.Tensor.sparse_resize_and_clear_": [[540, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.subtract_": [[558, "torch-tensor-subtract"]], "torch.Tensor.tan_": [[569, "torch-tensor-tan"]], "torch.Tensor.topk": [[584, "torch-tensor-topk"]], "torch.Tensor.subtract": [[557, "torch-tensor-subtract"]], "torch.Tensor.to_sparse_csr": [[582, "torch-tensor-to-sparse-csr"]], "torch.Tensor.tensor_split": [[572, "torch-tensor-tensor-split"]], "torch.Tensor.std": [[549, "torch-tensor-std"]], "torch.Tensor.to": [[574, "torch-tensor-to"]], "torch.Tensor.to_mkldnn": [[576, "torch-tensor-to-mkldnn"]], "torch.Tensor.storage": [[551, "torch-tensor-storage"]], "torch.Tensor.to_dense": [[575, "torch-tensor-to-dense"]], "torch.Tensor.sum_to_size": [[560, "torch-tensor-sum-to-size"]], "torch.Tensor.swapdims": [[563, "torch-tensor-swapdims"]], "torch.Tensor.sub_": [[556, "torch-tensor-sub"]], "torch.Tensor.to_sparse": [[577, "torch-tensor-to-sparse"]], "torch.Tensor.square_": [[545, "torch-tensor-square"]], "torch.Tensor.sub": [[555, "torch-tensor-sub"]], "torch.Tensor.to_sparse_bsc": [[578, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.svd": [[561, "torch-tensor-svd"]], "torch.Tensor.take": [[566, "torch-tensor-take"]], "torch.Tensor.t_": [[565, "torch-tensor-t"]], "torch.Tensor.stft": [[550, "torch-tensor-stft"]], "torch.Tensor.sum": [[559, "torch-tensor-sum"]], "torch.Tensor.to_sparse_bsr": [[579, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.take_along_dim": [[567, "torch-tensor-take-along-dim"]], "torch.Tensor.squeeze_": [[547, "torch-tensor-squeeze"]], "torch.Tensor.squeeze": [[546, "torch-tensor-squeeze"]], "torch.Tensor.sqrt_": [[543, "torch-tensor-sqrt"]], "torch.Tensor.stride": [[554, "torch-tensor-stride"]], "torch.Tensor.t": [[564, "torch-tensor-t"]], "torch.Tensor.sqrt": [[542, "torch-tensor-sqrt"]], "torch.Tensor.to_sparse_coo": [[580, "torch-tensor-to-sparse-coo"]], "torch.Tensor.to_sparse_csc": [[581, "torch-tensor-to-sparse-csc"]], "torch.Tensor.tan": [[568, "torch-tensor-tan"]], "torch.Tensor.resize_as_": [[495, "torch-tensor-resize-as"]], "torch.Tensor.requires_grad_": [[491, "torch-tensor-requires-grad"]], "torch.Tensor.scatter": [[507, "torch-tensor-scatter"]], "torch.Tensor.slogdet": [[533, "torch-tensor-slogdet"]], "torch.Tensor.sparse_dim": [[537, "torch-tensor-sparse-dim"]], "torch.Tensor.sinh": [[529, "torch-tensor-sinh"]], "torch.Tensor.reshape_as": [[493, "torch-tensor-reshape-as"]], "torch.Tensor.row_indices": [[504, "torch-tensor-row-indices"]], "torch.Tensor.sigmoid": [[520, "torch-tensor-sigmoid"]], "torch.Tensor.sigmoid_": [[521, "torch-tensor-sigmoid"]], "torch.Tensor.scatter_add": [[509, "torch-tensor-scatter-add"]], "torch.Tensor.sparse_mask": [[538, "torch-tensor-sparse-mask"]], "torch.Tensor.rsqrt_": [[506, "torch-tensor-rsqrt"]], "torch.Tensor.round": [[502, "torch-tensor-round"]], "torch.Tensor.rot90": [[501, "torch-tensor-rot90"]], "torch.Tensor.smm": [[534, "torch-tensor-smm"]], "torch.Tensor.sin_": [[526, "torch-tensor-sin"]], "torch.Tensor.sinh_": [[530, "torch-tensor-sinh"]], "torch.Tensor.select": [[513, "torch-tensor-select"]], "torch.Tensor.set_": [[515, "torch-tensor-set"]], "torch.Tensor.sort": [[536, "torch-tensor-sort"]], "torch.Tensor.size": [[531, "torch-tensor-size"]], "torch.Tensor.share_memory_": [[518, "torch-tensor-share-memory"]], "torch.Tensor.reshape": [[492, "torch-tensor-reshape"]], "torch.Tensor.roll": [[500, "torch-tensor-roll"]], "torch.Tensor.scatter_reduce": [[511, "torch-tensor-scatter-reduce"]], "torch.Tensor.short": [[519, "torch-tensor-short"]], "torch.Tensor.scatter_add_": [[510, "torch-tensor-scatter-add"]], "torch.Tensor.round_": [[503, "torch-tensor-round"]], "torch.Tensor.select_scatter": [[514, "torch-tensor-select-scatter"]], "torch.Tensor.retains_grad": [[499, "torch-tensor-retains-grad"]], "torch.Tensor.resize_": [[494, "torch-tensor-resize"]], "torch.Tensor.rsqrt": [[505, "torch-tensor-rsqrt"]], "torch.Tensor.signbit": [[524, "torch-tensor-signbit"]], "torch.Tensor.sgn_": [[517, "torch-tensor-sgn"]], "torch.Tensor.sign": [[522, "torch-tensor-sign"]], "torch.Tensor.sin": [[525, "torch-tensor-sin"]], "torch.Tensor.softmax": [[535, "torch-tensor-softmax"]], "torch.Tensor.retain_grad": [[498, "torch-tensor-retain-grad"]], "torch.Tensor.scatter_": [[508, "torch-tensor-scatter"]], "torch.Tensor.resolve_neg": [[497, "torch-tensor-resolve-neg"]], "torch.Tensor.sgn": [[516, "torch-tensor-sgn"]], "torch.Tensor.requires_grad": [[490, "torch-tensor-requires-grad"]], "torch.Tensor.sign_": [[523, "torch-tensor-sign"]], "torch.Tensor.scatter_reduce_": [[512, "torch-tensor-scatter-reduce"]], "torch.Tensor.resolve_conj": [[496, "torch-tensor-resolve-conj"]], "torch.Tensor.slice_scatter": [[532, "torch-tensor-slice-scatter"]], "torch.Tensor.sinc": [[527, "torch-tensor-sinc"]], "torch.Tensor.sinc_": [[528, "torch-tensor-sinc"]], "torch.Tensor.random_": [[477, "torch-tensor-random"]], "torch.Tensor.repeat": [[488, "torch-tensor-repeat"]], "torch.Tensor.new_zeros": [[445, "torch-tensor-new-zeros"]], "torch.Tensor.qscheme": [[474, "torch-tensor-qscheme"]], "torch.Tensor.quantile": [[475, "torch-tensor-quantile"]], "torch.Tensor.q_per_channel_axis": [[468, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.reciprocal": [[480, "torch-tensor-reciprocal"]], "torch.Tensor.q_zero_point": [[472, "torch-tensor-q-zero-point"]], "torch.Tensor.ravel": [[478, "torch-tensor-ravel"]], "torch.Tensor.orgqr": [[455, "torch-tensor-orgqr"]], "torch.Tensor.new_ones": [[443, "torch-tensor-new-ones"]], "torch.Tensor.numpy": [[454, "torch-tensor-numpy"]], "torch.Tensor.polygamma_": [[462, "torch-tensor-polygamma"]], "torch.Tensor.outer": [[457, "torch-tensor-outer"]], "torch.Tensor.prod": [[466, "torch-tensor-prod"]], "torch.Tensor.permute": [[458, "torch-tensor-permute"]], "torch.Tensor.renorm_": [[487, "torch-tensor-renorm"]], "torch.Tensor.put_": [[467, "torch-tensor-put"]], "torch.Tensor.nonzero": [[448, "torch-tensor-nonzero"]], "torch.Tensor.q_scale": [[471, "torch-tensor-q-scale"]], "torch.Tensor.new_empty": [[441, "torch-tensor-new-empty"]], "torch.Tensor.remainder_": [[485, "torch-tensor-remainder"]], "torch.Tensor.remainder": [[484, "torch-tensor-remainder"]], "torch.Tensor.register_hook": [[483, "torch-tensor-register-hook"]], "torch.Tensor.pinverse": [[460, "torch-tensor-pinverse"]], "torch.Tensor.polygamma": [[461, "torch-tensor-polygamma"]], "torch.Tensor.positive": [[463, "torch-tensor-positive"]], "torch.Tensor.nextafter_": [[447, "torch-tensor-nextafter"]], "torch.Tensor.q_per_channel_zero_points": [[470, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.pow_": [[465, "torch-tensor-pow"]], "torch.Tensor.real": [[479, "torch-tensor-real"]], "torch.Tensor.not_equal": [[451, "torch-tensor-not-equal"]], "torch.Tensor.numel": [[453, "torch-tensor-numel"]], "torch.Tensor.pin_memory": [[459, "torch-tensor-pin-memory"]], "torch.Tensor.normal_": [[450, "torch-tensor-normal"]], "torch.Tensor.record_stream": [[482, "torch-tensor-record-stream"]], "torch.Tensor.new_tensor": [[444, "torch-tensor-new-tensor"]], "torch.Tensor.qr": [[473, "torch-tensor-qr"]], "torch.Tensor.ormqr": [[456, "torch-tensor-ormqr"]], "torch.Tensor.renorm": [[486, "torch-tensor-renorm"]], "torch.Tensor.repeat_interleave": [[489, "torch-tensor-repeat-interleave"]], "torch.Tensor.not_equal_": [[452, "torch-tensor-not-equal"]], "torch.Tensor.reciprocal_": [[481, "torch-tensor-reciprocal"]], "torch.Tensor.new_full": [[442, "torch-tensor-new-full"]], "torch.Tensor.pow": [[464, "torch-tensor-pow"]], "torch.Tensor.q_per_channel_scales": [[469, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.nextafter": [[446, "torch-tensor-nextafter"]], "torch.Tensor.norm": [[449, "torch-tensor-norm"]], "torch.Tensor.rad2deg": [[476, "torch-tensor-rad2deg"]], "torch.Tensor.lt_": [[392, "torch-tensor-lt"]], "torch.Tensor.mean": [[406, "torch-tensor-mean"]], "torch.Tensor.movedim": [[413, "torch-tensor-movedim"]], "torch.Tensor.ne": [[434, "torch-tensor-ne"]], "torch.Tensor.mul_": [[416, "torch-tensor-mul"]], "torch.Tensor.nan_to_num": [[423, "torch-tensor-nan-to-num"]], "torch.Tensor.narrow_copy": [[430, "torch-tensor-narrow-copy"]], "torch.Tensor.maximum": [[405, "torch-tensor-maximum"]], "torch.Tensor.mm": [[410, "torch-tensor-mm"]], "torch.Tensor.msort": [[414, "torch-tensor-msort"]], "torch.Tensor.mv": [[420, "torch-tensor-mv"]], "torch.Tensor.masked_fill_": [[397, "torch-tensor-masked-fill"]], "torch.Tensor.min": [[408, "torch-tensor-min"]], "torch.Tensor.negative": [[438, "torch-tensor-negative"]], "torch.Tensor.moveaxis": [[412, "torch-tensor-moveaxis"]], "torch.Tensor.max": [[404, "torch-tensor-max"]], "torch.Tensor.masked_scatter_": [[399, "torch-tensor-masked-scatter"]], "torch.Tensor.neg": [[436, "torch-tensor-neg"]], "torch.Tensor.negative_": [[439, "torch-tensor-negative"]], "torch.Tensor.nanmean": [[425, "torch-tensor-nanmean"]], "torch.Tensor.lu": [[393, "torch-tensor-lu"]], "torch.Tensor.multinomial": [[417, "torch-tensor-multinomial"]], "torch.Tensor.masked_select": [[400, "torch-tensor-masked-select"]], "torch.Tensor.ndim": [[432, "torch-tensor-ndim"]], "torch.Tensor.mvlgamma_": [[422, "torch-tensor-mvlgamma"]], "torch.Tensor.nansum": [[428, "torch-tensor-nansum"]], "torch.Tensor.nanquantile": [[427, "torch-tensor-nanquantile"]], "torch.Tensor.nbytes": [[431, "torch-tensor-nbytes"]], "torch.Tensor.ne_": [[435, "torch-tensor-ne"]], "torch.Tensor.mul": [[415, "torch-tensor-mul"]], "torch.Tensor.nanmedian": [[426, "torch-tensor-nanmedian"]], "torch.Tensor.minimum": [[409, "torch-tensor-minimum"]], "torch.Tensor.matmul": [[401, "torch-tensor-matmul"]], "torch.Tensor.nan_to_num_": [[424, "torch-tensor-nan-to-num"]], "torch.Tensor.matrix_exp": [[402, "torch-tensor-matrix-exp"]], "torch.Tensor.masked_scatter": [[398, "torch-tensor-masked-scatter"]], "torch.Tensor.ndimension": [[433, "torch-tensor-ndimension"]], "torch.Tensor.mvlgamma": [[421, "torch-tensor-mvlgamma"]], "torch.Tensor.map_": [[395, "torch-tensor-map"]], "torch.Tensor.multiply": [[418, "torch-tensor-multiply"]], "torch.Tensor.lu_solve": [[394, "torch-tensor-lu-solve"]], "torch.Tensor.masked_fill": [[396, "torch-tensor-masked-fill"]], "torch.Tensor.nelement": [[440, "torch-tensor-nelement"]], "torch.Tensor.multiply_": [[419, "torch-tensor-multiply"]], "torch.Tensor.mode": [[411, "torch-tensor-mode"]], "torch.Tensor.matrix_power": [[403, "torch-tensor-matrix-power"]], "torch.Tensor.narrow": [[429, "torch-tensor-narrow"]], "torch.Tensor.neg_": [[437, "torch-tensor-neg"]], "torch.Tensor.median": [[407, "torch-tensor-median"]]}, "indexentries": {"optimizedmodule (class in torch._dynamo)": [[0, "torch._dynamo.OptimizedModule"]], "allow_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.allow_in_graph"]], "disable() (in module torch._dynamo)": [[0, "torch._dynamo.disable"]], "disallow_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.disallow_in_graph"]], "export() (in module torch._dynamo)": [[0, "torch._dynamo.export"]], "forbid_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.forbid_in_graph"]], "graph_break() (in module torch._dynamo)": [[0, "torch._dynamo.graph_break"]], "list_backends() (in module torch._dynamo)": [[0, "torch._dynamo.list_backends"]], "mark_dynamic() (in module torch._dynamo)": [[0, "torch._dynamo.mark_dynamic"]], "mark_static() (in module torch._dynamo)": [[0, "torch._dynamo.mark_static"]], "module": [[0, "module-torch._dynamo"], [1, "module-torch.amp"], [1, "module-torch.cpu"], [1, "module-torch.cpu.amp"], [1, "module-torch.cuda.amp"], [2, "module-torch.autograd"], [3, "module-torch.backends"], [3, "module-torch.backends.cpu"], [3, "module-torch.backends.cuda"], [3, "module-torch.backends.cudnn"], [3, "module-torch.backends.mkl"], [3, "module-torch.backends.mkldnn"], [3, "module-torch.backends.mps"], [3, "module-torch.backends.openmp"], [3, "module-torch.backends.opt_einsum"], [3, "module-torch.backends.quantized"], [3, "module-torch.backends.xeon"], [3, "module-torch.backends.xnnpack"], [4, "module-torch.utils.benchmark"], [4, "module-torch.utils.benchmark.examples"], [4, "module-torch.utils.benchmark.op_fuzzers"], [4, "module-torch.utils.benchmark.utils"], [4, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [5, "module-torch.utils.bottleneck"], [28, "module-torch.__config__"], [31, "module-torch.cuda"], [32, "module-torch.cuda._sanitizer"], [35, "module-torch.utils.data"], [35, "module-torch.utils.data.datapipes"], [35, "module-torch.utils.data.datapipes.dataframe"], [35, "module-torch.utils.data.datapipes.iter"], [35, "module-torch.utils.data.datapipes.map"], [35, "module-torch.utils.data.datapipes.utils"], [38, "module-torch.distributed"], [38, "module-torch.distributed.algorithms"], [38, "module-torch.distributed.algorithms.ddp_comm_hooks"], [38, "module-torch.distributed.algorithms.model_averaging"], [38, "module-torch.distributed.elastic"], [38, "module-torch.distributed.elastic.utils"], [38, "module-torch.distributed.elastic.utils.data"], [38, "module-torch.distributed.launch"], [38, "module-torch.distributed.launcher"], [38, "module-torch.distributed.nn"], [38, "module-torch.distributed.nn.api"], [38, "module-torch.distributed.nn.jit"], [38, "module-torch.distributed.nn.jit.templates"], [38, "module-torch.distributed.pipeline"], [38, "module-torch.distributed.pipeline.sync"], [38, "module-torch.distributed.pipeline.sync.skip"], [38, "module-torch.distributed.tensor"], [40, "module-torch.distributed.checkpoint"], [42, "module-torch.distributed.optim"], [43, "module-torch.distributed.tensor.parallel"], [44, "module-torch.distributions"], [44, "module-torch.distributions.constraint_registry"], [44, "module-torch.distributions.constraints"], [44, "module-torch.distributions.kl"], [44, "module-torch.distributions.transforms"], [46, "module-torch.distributed.elastic.agent"], [46, "module-torch.distributed.elastic.agent.server"], [48, "module-torch.distributed.elastic.multiprocessing.errors"], [49, "module-torch.distributed.elastic.events"], [52, "module-torch.distributed.elastic.metrics"], [53, "module-torch.distributed.elastic.multiprocessing"], [55, "module-torch.distributed.elastic.rendezvous"], [55, "module-torch.distributed.elastic.rendezvous.registry"], [56, "module-torch.distributed.run"], [57, "module-torch.distributed.elastic.timer"], [59, "module-torch.fft"], [60, "module-torch.distributed.fsdp"], [62, "module-torch.func"], [67, "module-torch.futures"], [68, "module-torch.fx"], [68, "module-torch.fx.experimental"], [68, "module-torch.fx.experimental.migrate_gradual_types"], [68, "module-torch.fx.experimental.unification"], [68, "module-torch.fx.experimental.unification.multipledispatch"], [68, "module-torch.fx.passes"], [68, "module-torch.fx.passes.backends"], [68, "module-torch.fx.passes.dialect"], [68, "module-torch.fx.passes.dialect.common"], [68, "module-torch.fx.passes.infra"], [68, "module-torch.fx.passes.tests"], [68, "module-torch.fx.passes.utils"], [1854, "module-torch.hub"], [1857, "module-torch.jit"], [1857, "module-torch.jit.mobile"], [1858, "module-torch.jit.supported_ops"], [1862, "module-torch.jit.unsupported_tensor_ops"], [1863, "module-torch.utils.jit"], [1865, "module-torch.linalg"], [1866, "module-torch._logging"], [1867, "module-torch.masked"], [1867, "module-torch.masked.maskedtensor"], [1869, "module-torch.utils.model_zoo"], [1870, "module-torch.monitor"], [1871, "module-torch.mps"], [1872, "module-torch.multiprocessing"], [1875, "module-torch.nested"], [1876, "module-torch.nn"], [1876, "module-torch.nn.backends"], [1876, "module-torch.nn.modules"], [1876, "module-torch.nn.parallel"], [1876, "module-torch.nn.utils"], [1876, "module-torch.nn.utils.stateless"], [1898, "module-torch.onnx"], [1899, "module-torch.onnx._internal.diagnostics"], [1901, "module-torch.optim"], [1902, "module-torch.package"], [1902, "module-torch.package.analyze"], [1904, "module-torch.profiler"], [1905, "module-torch.ao"], [1905, "module-torch.ao.nn"], [1905, "module-torch.ao.nn.quantizable"], [1905, "module-torch.ao.nn.quantizable.modules"], [1905, "module-torch.ao.nn.quantized"], [1905, "module-torch.ao.nn.quantized.reference"], [1905, "module-torch.ao.nn.quantized.reference.modules"], [1905, "module-torch.ao.nn.sparse"], [1905, "module-torch.ao.nn.sparse.quantized"], [1905, "module-torch.ao.nn.sparse.quantized.dynamic"], [1905, "module-torch.ao.ns"], [1905, "module-torch.ao.ns.fx"], [1905, "module-torch.ao.pruning"], [1905, "module-torch.ao.pruning.scheduler"], [1905, "module-torch.ao.pruning.sparsifier"], [1905, "module-torch.ao.quantization"], [1905, "module-torch.ao.quantization.backend_config"], [1905, "module-torch.ao.quantization.fx"], [1908, "module-torch.ao.nn.intrinsic"], [1908, "module-torch.ao.nn.intrinsic.modules"], [1908, "module-torch.ao.nn.intrinsic.qat"], [1908, "module-torch.ao.nn.intrinsic.qat.modules"], [1908, "module-torch.ao.nn.intrinsic.quantized"], [1908, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1908, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1908, "module-torch.ao.nn.intrinsic.quantized.modules"], [1908, "module-torch.ao.nn.qat"], [1908, "module-torch.ao.nn.qat.dynamic"], [1908, "module-torch.ao.nn.qat.dynamic.modules"], [1908, "module-torch.ao.nn.qat.modules"], [1908, "module-torch.ao.nn.quantized.dynamic"], [1908, "module-torch.ao.nn.quantized.dynamic.modules"], [1908, "module-torch.ao.nn.quantized.functional"], [1908, "module-torch.ao.nn.quantized.modules"], [1908, "module-torch.nn.intrinsic"], [1908, "module-torch.nn.intrinsic.modules"], [1908, "module-torch.nn.intrinsic.qat"], [1908, "module-torch.nn.intrinsic.qat.modules"], [1908, "module-torch.nn.intrinsic.quantized"], [1908, "module-torch.nn.intrinsic.quantized.dynamic"], [1908, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1908, "module-torch.nn.intrinsic.quantized.modules"], [1908, "module-torch.nn.qat"], [1908, "module-torch.nn.qat.dynamic"], [1908, "module-torch.nn.qat.dynamic.modules"], [1908, "module-torch.nn.qat.modules"], [1908, "module-torch.nn.quantizable"], [1908, "module-torch.nn.quantizable.modules"], [1908, "module-torch.nn.quantized"], [1908, "module-torch.nn.quantized.dynamic"], [1908, "module-torch.nn.quantized.dynamic.modules"], [1908, "module-torch.nn.quantized.modules"], [1908, "module-torch.quantization"], [1908, "module-torch.quantization.fx"], [1909, "module-torch.random"], [1910, "module-torch.distributed.autograd"], [1910, "module-torch.distributed.rpc"], [1913, "module-torch.signal"], [1913, "module-torch.signal.windows"], [1914, "module-torch.sparse"], [1915, "module-torch.special"], [1919, "module-torch.utils.tensorboard"], [1921, "module-torch.testing"], [1922, "module-torch"], [1922, "module-torch.autograd"], [1922, "module-torch.contrib"], [1922, "module-torch.utils"], [1922, "module-torch.utils.backcompat"], [1922, "module-torch.utils.hipify"], [1922, "module-torch.utils.model_dump"], [1923, "module-torch.ao.ns._numeric_suite"], [1924, "module-torch.ao.ns._numeric_suite_fx"]], "optimize() (in module torch._dynamo)": [[0, "torch._dynamo.optimize"]], "optimize_assert() (in module torch._dynamo)": [[0, "torch._dynamo.optimize_assert"]], "register_backend() (in module torch._dynamo)": [[0, "torch._dynamo.register_backend"]], "reset() (in module torch._dynamo)": [[0, "torch._dynamo.reset"]], "run() (in module torch._dynamo)": [[0, "torch._dynamo.run"]], "torch._dynamo": [[0, "module-torch._dynamo"]], "gradscaler (class in torch.cuda.amp)": [[1, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[1, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[1, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[1, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[1, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[1, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.load_state_dict"]], "scale() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[1, "module-torch.amp"]], "torch.cpu": [[1, "module-torch.cpu"]], "torch.cpu.amp": [[1, "module-torch.cpu.amp"]], "torch.cuda.amp": [[1, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[2, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[2, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[2, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[2, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[2, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[2, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[2, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[2, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[2, "module-torch.autograd"], [1922, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[3, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (torch.backends.cuda.torch.backends.cuda.matmul attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (torch.backends.cuda.torch.backends.cuda.matmul attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (torch.backends.cuda.torch.backends.cuda.matmul attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.allow_tf32"]], "benchmark (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.benchmark"]], "benchmark_limit (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.clear"]], "cufft_plan_cache (torch.backends.cuda.torch.backends.cuda attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.cufft_plan_cache"]], "deterministic (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (torch.backends.cudnn.torch.backends.cudnn attribute)": [[3, "torch.backends.cudnn.torch.backends.cudnn.enabled"]], "enabled (torch.backends.opt_einsum.torch.backends.opt_einsum attribute)": [[3, "torch.backends.opt_einsum.torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[3, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[3, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[3, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[3, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[3, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[3, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[3, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[3, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda)": [[3, "torch.backends.cuda.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.sdp_kernel"]], "size (torch.backends.cuda.torch.backends.cuda attribute)": [[3, "torch.backends.cuda.torch.backends.cuda.size"]], "strategy (torch.backends.opt_einsum.torch.backends.opt_einsum attribute)": [[3, "torch.backends.opt_einsum.torch.backends.opt_einsum.strategy"]], "torch.backends": [[3, "module-torch.backends"]], "torch.backends.cpu": [[3, "module-torch.backends.cpu"]], "torch.backends.cuda": [[3, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[3, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[3, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[3, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[3, "module-torch.backends.mps"]], "torch.backends.openmp": [[3, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[3, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[3, "module-torch.backends.quantized"]], "torch.backends.xeon": [[3, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[3, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[3, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[3, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[4, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[4, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[4, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[4, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[4, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[4, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[4, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[5, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[6, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[6, "torch.utils.checkpoint.checkpoint_sequential"]], "compile() (in module torch)": [[17, "torch.compile"], [947, "torch.compile"]], "parallel_info() (in module torch.__config__)": [[28, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[28, "torch.__config__.show"]], "torch.__config__": [[28, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[29, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[29, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[29, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[29, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[29, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[29, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[29, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[29, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[29, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cuda": [[31, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[32, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[32, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[35, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[35, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[35, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[35, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[35, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[35, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[35, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[35, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[35, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[35, "torch.utils.data.SequentialSampler"]], "subset (class in torch.utils.data)": [[35, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[35, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[35, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[35, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[35, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[35, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[35, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[35, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[35, "torch.utils.data.random_split"]], "torch.utils.data": [[35, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[35, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[35, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[35, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[35, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[35, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[36, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[36, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[36, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[36, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[36, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[36, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[36, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[36, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[38, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[38, "torch.distributed.DistBackendError"]], "filestore (class in torch.distributed)": [[38, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[38, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[38, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[38, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[38, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[38, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[38, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[38, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[38, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[38, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[38, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[38, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[38, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[38, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[38, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[38, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[38, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[38, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[38, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[38, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[38, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[38, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[38, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[38, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[38, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[38, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[38, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[38, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[38, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[38, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[38, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[38, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[38, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[38, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[38, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[38, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[38, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[38, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[38, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[38, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[38, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[38, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[38, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[38, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[38, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[38, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[38, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[38, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[38, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[38, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[38, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[38, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[38, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[38, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[38, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[38, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[38, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[38, "module-torch.distributed"]], "torch.distributed.algorithms": [[38, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[38, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[38, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[38, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[38, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[38, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[38, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[38, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[38, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[38, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[38, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[38, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[38, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[38, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[38, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[38, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[38, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[39, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[39, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[39, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[39, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[39, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[39, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[39, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[39, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[39, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[40, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[40, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[40, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[40, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[40, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[40, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[40, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[40, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[40, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[40, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[40, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[40, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[40, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[40, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[40, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[40, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[40, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[40, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[40, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[40, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[40, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[40, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[40, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[40, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[40, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[40, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[40, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[40, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[42, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[42, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[42, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[42, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[42, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[42, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[42, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[42, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[42, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[42, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[42, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[42, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[42, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[42, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "tensorparallelmultiheadattention (class in torch.distributed.tensor.parallel.multihead_attention_tp)": [[43, "torch.distributed.tensor.parallel.multihead_attention_tp.TensorParallelMultiheadAttention"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[43, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[43, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[43, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[43, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[44, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[44, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[44, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[44, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[44, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[44, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[44, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[44, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[44, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[44, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[44, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[44, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[44, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[44, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[44, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[44, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[44, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[44, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[44, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[44, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[44, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[44, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[44, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[44, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[44, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[44, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[44, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[44, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[44, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[44, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[44, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[44, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[44, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[44, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[44, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[44, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[44, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[44, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[44, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[44, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[44, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[44, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[44, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[44, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[44, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[44, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[44, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[44, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[44, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[44, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[44, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[44, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[44, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[44, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[44, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[44, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[44, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[44, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[44, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[44, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[44, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[44, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[44, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[44, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[44, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[44, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[44, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[44, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[44, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[44, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[44, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[44, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[44, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[44, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[44, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[44, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[44, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[44, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[44, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[44, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[44, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[44, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[44, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[44, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[44, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[44, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[44, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[44, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[44, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[44, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[44, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[44, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[44, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[44, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[44, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[44, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[44, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[44, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[44, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[44, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[44, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[44, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[44, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[44, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[44, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[44, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[44, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[44, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[44, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[44, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[44, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[44, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[44, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[44, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[44, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[44, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[44, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[44, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[44, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[44, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[44, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[44, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[44, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[44, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[44, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[44, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[44, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[44, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[44, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[44, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[44, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[44, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[44, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[44, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[44, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[44, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[44, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[44, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[44, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[44, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[44, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[44, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[44, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[44, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[44, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[44, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[44, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[44, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[44, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[44, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[44, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[44, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[44, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[44, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[44, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[44, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[44, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[44, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[44, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[44, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[44, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[44, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[44, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[44, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[44, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[44, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[44, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[44, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[44, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[44, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[44, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[44, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[44, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[44, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[44, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[44, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[44, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[44, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[44, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[44, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[44, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[44, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[44, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[44, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[44, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[44, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[44, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[44, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[44, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[44, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[44, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[44, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[44, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[44, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[44, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[44, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[44, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[44, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[44, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[44, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[44, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[44, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[44, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[44, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[44, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[44, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[44, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[44, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[44, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[44, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[44, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[44, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[44, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[44, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[44, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[44, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[44, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[44, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[44, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[44, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[44, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[44, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[44, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[44, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[44, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[44, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[44, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[44, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[44, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[44, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[44, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[44, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[44, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[44, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[44, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[44, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[44, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[44, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[44, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[44, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[44, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[44, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[44, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[44, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[44, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[44, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[44, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[44, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[44, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[44, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[44, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[44, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[44, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[44, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[44, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[44, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[44, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[44, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[44, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[44, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[44, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[44, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[44, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[44, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[44, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[44, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[44, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[44, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[44, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[44, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[44, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[44, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[44, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[44, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[44, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[44, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[44, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[44, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[44, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[44, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[44, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[44, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[44, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[44, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[44, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[44, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[44, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[44, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[44, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[44, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[44, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[44, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[44, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[44, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[44, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[44, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[44, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[44, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[44, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[44, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[44, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[44, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[44, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[44, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[44, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[44, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[44, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[44, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[44, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[44, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[44, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[44, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[44, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[44, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[44, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[44, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[44, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[44, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[44, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[44, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[44, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[44, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[44, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[44, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[44, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[44, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[44, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[44, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[44, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[44, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[44, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[44, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[44, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[44, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[44, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[44, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[44, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[44, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[44, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[44, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[44, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[44, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[44, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[44, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[44, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[44, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[44, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[44, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[44, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[44, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[44, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[44, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[44, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[44, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[44, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[44, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[44, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[44, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[44, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[44, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[44, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[44, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[44, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[44, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[44, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[44, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[44, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[44, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[44, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[44, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[44, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[44, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[44, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[44, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[44, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[44, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[44, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[44, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[44, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[44, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[44, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[44, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[44, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[44, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[44, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[44, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[44, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[44, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[44, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[44, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[44, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[44, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[44, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[44, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[44, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[44, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[44, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[44, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[44, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[44, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[44, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[44, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[44, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[44, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[44, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[44, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[44, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[44, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[45, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[45, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[46, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[46, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[46, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[46, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[46, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[46, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[46, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[46, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[46, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[46, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[46, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[46, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[46, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[46, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[46, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[46, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[46, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[46, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[46, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[46, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[46, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[46, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[46, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[48, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[48, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[48, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[48, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[48, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[49, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[49, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[49, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[49, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[49, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[49, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[52, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[52, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[52, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[52, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[52, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[52, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[52, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[53, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[53, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[53, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[53, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[53, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[53, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[55, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[55, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[55, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[55, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[55, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[55, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[55, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[55, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[55, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[55, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[55, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[55, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[55, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[55, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[55, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[55, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[55, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[55, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[55, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[55, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[55, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[55, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[55, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[55, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[55, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[55, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[55, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[55, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[56, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[57, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[57, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[57, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[57, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[57, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[57, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[57, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[57, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[57, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[57, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[57, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[57, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[57, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[57, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[57, "module-torch.distributed.elastic.timer"]], "torch.fft": [[59, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[60, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[60, "torch.distributed.fsdp.CPUOffload"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel"]], "mixedprecision (class in torch.distributed.fsdp)": [[60, "torch.distributed.fsdp.MixedPrecision"]], "shardingstrategy (class in torch.distributed.fsdp)": [[60, "torch.distributed.fsdp.ShardingStrategy"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "load_optim_state_dict_pre_hook() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.load_optim_state_dict_pre_hook"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_post_hook() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_post_hook"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[60, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[60, "module-torch.distributed.fsdp"]], "torch.func": [[62, "module-torch.func"]], "future (class in torch.futures)": [[67, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[67, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[67, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[67, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[67, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[67, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[67, "torch.futures.Future.then"]], "torch.futures": [[67, "module-torch.futures"]], "value() (torch.futures.future method)": [[67, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[67, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[67, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[68, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[68, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[68, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[68, "torch.fx.Node"]], "proxy (class in torch.fx)": [[68, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[68, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[68, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[68, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[68, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[68, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[68, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[68, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[68, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[68, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[68, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[68, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[68, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[68, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[68, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[68, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[68, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[68, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[68, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[68, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[68, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[68, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[68, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[68, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[68, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[68, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[68, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[68, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[68, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[68, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[68, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[68, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[68, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[68, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[68, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[68, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[68, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[68, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[68, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[68, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[68, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[68, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[68, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[68, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[68, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[68, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[68, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[68, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[68, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[68, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[68, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[68, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[68, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[68, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[68, "module-torch.fx"]], "torch.fx.experimental": [[68, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[68, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[68, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[68, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[68, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[68, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[68, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[68, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[68, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[68, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[68, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[68, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[68, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[68, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[68, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[68, "torch.fx.wrap"]], "generator (class in torch)": [[86, "torch.Generator"]], "device (torch.generator attribute)": [[86, "torch.Generator.device"]], "get_state() (torch.generator method)": [[86, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[86, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[86, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[86, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[86, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[87, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[88, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[89, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[90, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[91, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[92, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[93, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[94, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[95, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[96, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[97, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[98, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[99, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[100, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[101, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[102, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[103, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[104, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[105, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[106, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[107, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[108, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[109, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[110, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[111, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[112, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[113, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[114, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[115, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[116, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[117, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[118, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[119, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[120, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[121, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[122, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[123, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[124, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[125, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[126, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[127, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[128, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[129, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[130, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[131, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[132, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[133, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[134, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[135, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[136, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[137, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[138, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[139, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[140, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[141, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[142, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[143, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[144, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[145, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[146, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[147, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[148, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[149, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[150, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[151, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[152, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[153, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[154, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[155, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[156, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[157, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[158, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[159, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[160, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[161, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[162, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[163, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[164, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[165, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[166, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[167, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[168, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[169, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[170, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[171, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[172, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[173, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[174, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[175, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[176, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[177, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[178, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[179, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[180, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[181, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[182, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[183, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[184, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[185, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[186, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[187, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[188, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[189, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[190, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[191, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[192, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[193, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[194, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[195, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[196, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[197, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[198, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[199, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[200, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[201, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[202, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[203, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[204, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[205, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[206, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[207, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[208, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[209, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[210, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[211, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[212, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[213, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[214, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[215, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[216, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[217, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[218, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[219, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[220, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[221, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[222, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[223, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[224, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[225, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[226, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[227, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[228, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[229, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[230, "torch.Tensor.dim"]], "dist() (torch.tensor method)": [[231, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[232, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[233, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[234, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[235, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[236, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[237, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[238, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[239, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[240, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[241, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[242, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[243, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[244, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[245, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[246, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[247, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[248, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[249, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[250, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[251, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[252, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[253, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[254, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[255, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[256, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[257, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[258, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[259, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[260, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[261, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[262, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[263, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[264, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[265, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[266, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[267, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[268, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[269, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[270, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[271, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[272, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[273, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[274, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[275, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[276, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[277, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[278, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[279, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[280, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[281, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[282, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[283, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[284, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[285, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[286, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[287, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[288, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[289, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[290, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[291, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[292, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[293, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[294, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[295, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[296, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[297, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[298, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[299, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[300, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[301, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[302, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[303, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[304, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[305, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[306, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[307, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[308, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[309, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[310, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[311, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[312, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[313, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[314, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[315, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[316, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[317, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[318, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[319, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[320, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[321, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[322, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[323, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[324, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[325, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[326, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[327, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[328, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[329, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[330, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[331, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[332, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[333, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[334, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[335, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[336, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[337, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[338, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[339, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[340, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[341, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[342, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[343, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[344, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[345, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[346, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[347, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[348, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[349, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[350, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[351, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[352, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[353, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[354, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[355, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[356, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[357, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[358, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[359, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[360, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[361, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[362, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[363, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[364, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[365, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[366, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[367, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[368, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[369, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[370, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[371, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[372, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[373, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[374, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[375, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[376, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[377, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[378, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[379, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[380, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[381, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[382, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[383, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[384, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[385, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[386, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[387, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[388, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[389, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[390, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[391, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[392, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[393, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[394, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[395, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[396, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[397, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[398, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[399, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[400, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[401, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[402, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[403, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[404, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[405, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[406, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[407, "torch.Tensor.median"]], "min() (torch.tensor method)": [[408, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[409, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[410, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[411, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[412, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[413, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[414, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[415, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[416, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[417, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[418, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[419, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[420, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[421, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[422, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[423, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[424, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[425, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[426, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[427, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[428, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[429, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[430, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[431, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[432, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[433, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[434, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[435, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[436, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[437, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[438, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[439, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[440, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[441, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[442, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[443, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[444, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[445, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[446, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[447, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[448, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[449, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[450, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[451, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[452, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[453, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[454, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[455, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[456, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[457, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[458, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[459, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[460, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[461, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[462, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[463, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[464, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[465, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[466, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[467, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[468, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[469, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[470, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[471, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[472, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[473, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[474, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[475, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[476, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[477, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[478, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[479, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[480, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[481, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[482, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[483, "torch.Tensor.register_hook"]], "remainder() (torch.tensor method)": [[484, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[485, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[486, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[487, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[488, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[489, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[490, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[491, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[492, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[493, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[494, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[495, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[496, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[497, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[498, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[499, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[500, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[501, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[502, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[503, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[504, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[505, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[506, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[507, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[508, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[509, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[510, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[511, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[512, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[513, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[514, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[515, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[516, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[517, "torch.Tensor.sgn_"]], "share_memory_() (torch.tensor method)": [[518, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[519, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[520, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[521, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[522, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[523, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[524, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[525, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[526, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[527, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[528, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[529, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[530, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[531, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[532, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[533, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[534, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[535, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[536, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[537, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[538, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[539, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[540, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[541, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[542, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[543, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[544, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[545, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[546, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[547, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[548, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[549, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[550, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[551, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[552, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[553, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[554, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[555, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[556, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[557, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[558, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[559, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[560, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[561, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[562, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[563, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[564, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[565, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[566, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[567, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[568, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[569, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[570, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[571, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[572, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[573, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[574, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[575, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[576, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[577, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[578, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[579, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[580, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[581, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[582, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[583, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[584, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[585, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[586, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[587, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[588, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[589, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[590, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[591, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[592, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[593, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[594, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[595, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[596, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[597, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[598, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[599, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[600, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[601, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[602, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[603, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[604, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[605, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[606, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[607, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[608, "torch.Tensor.values"]], "var() (torch.tensor method)": [[609, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[610, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[611, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[612, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[613, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[614, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[615, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[616, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[617, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[618, "torch._assert"]], "_foreach_abs() (in module torch)": [[619, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[620, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[621, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[622, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[623, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[624, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[625, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[626, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[627, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[628, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[629, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[630, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[631, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[632, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[633, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[634, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[635, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[636, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[637, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[638, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[639, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[640, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[641, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[642, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[643, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[644, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[645, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[646, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[647, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[648, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[649, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[650, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[651, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[652, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[653, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[654, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[655, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[656, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[657, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[658, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[659, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[660, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[661, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[662, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[663, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[664, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[665, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[666, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[667, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[668, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[669, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[670, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[671, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[672, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[673, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[674, "torch._logging.set_logs"]], "abs() (in module torch)": [[675, "torch.abs"]], "absolute() (in module torch)": [[676, "torch.absolute"]], "acos() (in module torch)": [[677, "torch.acos"]], "acosh() (in module torch)": [[678, "torch.acosh"]], "add() (in module torch)": [[679, "torch.add"]], "addbmm() (in module torch)": [[680, "torch.addbmm"]], "addcdiv() (in module torch)": [[681, "torch.addcdiv"]], "addcmul() (in module torch)": [[682, "torch.addcmul"]], "addmm() (in module torch)": [[683, "torch.addmm"]], "addmv() (in module torch)": [[684, "torch.addmv"]], "addr() (in module torch)": [[685, "torch.addr"]], "adjoint() (in module torch)": [[686, "torch.adjoint"]], "all() (in module torch)": [[687, "torch.all"]], "allclose() (in module torch)": [[688, "torch.allclose"]], "amax() (in module torch)": [[689, "torch.amax"]], "amin() (in module torch)": [[690, "torch.amin"]], "aminmax() (in module torch)": [[691, "torch.aminmax"]], "angle() (in module torch)": [[692, "torch.angle"]], "any() (in module torch)": [[693, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[694, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[695, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[702, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[703, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[704, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[705, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[706, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[707, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[713, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[714, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[715, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[716, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[717, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[718, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[719, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[720, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[721, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[722, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[723, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[724, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[725, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[726, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[726, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[727, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[728, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[729, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[729, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[729, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[730, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[731, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[732, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[733, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[734, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[739, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[740, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[750, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[750, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[754, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[755, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[756, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[757, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[758, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[758, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[758, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[759, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[760, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[761, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[782, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[783, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[784, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[785, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[786, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[786, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[786, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[786, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[786, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[786, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[786, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[787, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[788, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[788, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[788, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[789, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[790, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[790, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[790, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[790, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[791, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[792, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[793, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[794, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[804, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[805, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[806, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[807, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[808, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[809, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[809, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[809, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[809, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[809, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[810, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[810, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[810, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[810, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[812, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[813, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[814, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[814, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[814, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[814, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[818, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[818, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[819, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[829, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[830, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[831, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[832, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[833, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[834, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[835, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[836, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[844, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[845, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[846, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[847, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[848, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[848, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[848, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[848, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[848, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[848, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[848, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[848, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[849, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[850, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[851, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[852, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[853, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[854, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[855, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[856, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[857, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[858, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[859, "torch.arange"]], "arccos() (in module torch)": [[860, "torch.arccos"]], "arccosh() (in module torch)": [[861, "torch.arccosh"]], "arcsin() (in module torch)": [[862, "torch.arcsin"]], "arcsinh() (in module torch)": [[863, "torch.arcsinh"]], "arctan() (in module torch)": [[864, "torch.arctan"]], "arctan2() (in module torch)": [[865, "torch.arctan2"]], "arctanh() (in module torch)": [[866, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[867, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[868, "torch.argmax"]], "argmin() (in module torch)": [[869, "torch.argmin"]], "argsort() (in module torch)": [[870, "torch.argsort"]], "argwhere() (in module torch)": [[871, "torch.argwhere"]], "as_strided() (in module torch)": [[872, "torch.as_strided"]], "as_tensor() (in module torch)": [[873, "torch.as_tensor"]], "asarray() (in module torch)": [[874, "torch.asarray"]], "asin() (in module torch)": [[875, "torch.asin"]], "asinh() (in module torch)": [[876, "torch.asinh"]], "atan() (in module torch)": [[877, "torch.atan"]], "atan2() (in module torch)": [[878, "torch.atan2"]], "atanh() (in module torch)": [[879, "torch.atanh"]], "atleast_1d() (in module torch)": [[880, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[881, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[882, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[883, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[884, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[885, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[886, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[887, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[888, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[889, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[890, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[891, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[892, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[893, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[894, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[895, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[896, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[897, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[898, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[899, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[900, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[901, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[902, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[903, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[904, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[905, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[906, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[907, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[908, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[909, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[910, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[911, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[912, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[913, "torch.autograd.profiler.profile.total_average"]], "set_multithreading_enabled (class in torch.autograd)": [[914, "torch.autograd.set_multithreading_enabled"]], "baddbmm() (in module torch)": [[915, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[916, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[917, "torch.bernoulli"]], "bincount() (in module torch)": [[918, "torch.bincount"]], "bitwise_and() (in module torch)": [[919, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[920, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[921, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[922, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[923, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[924, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[925, "torch.blackman_window"]], "block_diag() (in module torch)": [[926, "torch.block_diag"]], "bmm() (in module torch)": [[927, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[928, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[929, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[930, "torch.broadcast_to"]], "bucketize() (in module torch)": [[931, "torch.bucketize"]], "can_cast() (in module torch)": [[932, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[933, "torch.cartesian_prod"]], "cat() (in module torch)": [[934, "torch.cat"]], "cdist() (in module torch)": [[935, "torch.cdist"]], "ceil() (in module torch)": [[936, "torch.ceil"]], "chain_matmul() (in module torch)": [[937, "torch.chain_matmul"]], "cholesky() (in module torch)": [[938, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[939, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[940, "torch.cholesky_solve"]], "chunk() (in module torch)": [[941, "torch.chunk"]], "clamp() (in module torch)": [[942, "torch.clamp"]], "clip() (in module torch)": [[943, "torch.clip"]], "clone() (in module torch)": [[944, "torch.clone"]], "column_stack() (in module torch)": [[945, "torch.column_stack"]], "combinations() (in module torch)": [[946, "torch.combinations"]], "compiled_with_cxx11_abi() (in module torch)": [[948, "torch.compiled_with_cxx11_abi"]], "complex() (in module torch)": [[949, "torch.complex"]], "concat() (in module torch)": [[950, "torch.concat"]], "concatenate() (in module torch)": [[951, "torch.concatenate"]], "conj() (in module torch)": [[952, "torch.conj"]], "conj_physical() (in module torch)": [[953, "torch.conj_physical"]], "copysign() (in module torch)": [[954, "torch.copysign"]], "corrcoef() (in module torch)": [[955, "torch.corrcoef"]], "cos() (in module torch)": [[956, "torch.cos"]], "cosh() (in module torch)": [[957, "torch.cosh"]], "count_nonzero() (in module torch)": [[958, "torch.count_nonzero"]], "cov() (in module torch)": [[959, "torch.cov"]], "cross() (in module torch)": [[960, "torch.cross"]], "cudagraph (class in torch.cuda)": [[961, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[961, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[961, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[961, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[961, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[961, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[961, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[961, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[962, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[963, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[963, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[963, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[963, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[963, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[963, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[963, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[963, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[964, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[964, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[964, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[964, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[964, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[964, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[965, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[966, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[966, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[966, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[966, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[966, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[966, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[967, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[968, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[969, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[970, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[971, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[972, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[973, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[974, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[975, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[976, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[977, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[978, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[979, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[980, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[981, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[982, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[983, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[984, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[985, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[986, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[987, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[988, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[989, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[990, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[991, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[992, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[993, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[994, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[995, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[996, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[997, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[998, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[999, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1000, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1001, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1002, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1003, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1004, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1005, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1006, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1007, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1008, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1009, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1010, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1011, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1012, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1013, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1014, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1015, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1016, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1017, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1018, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1019, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1020, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1021, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1022, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1023, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1024, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1025, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1026, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1027, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1028, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1029, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1030, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1031, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1032, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1033, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1034, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1035, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1036, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1037, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1038, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1039, "torch.cummax"]], "cummin() (in module torch)": [[1040, "torch.cummin"]], "cumprod() (in module torch)": [[1041, "torch.cumprod"]], "cumsum() (in module torch)": [[1042, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1043, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1044, "torch.deg2rad"]], "dequantize() (in module torch)": [[1045, "torch.dequantize"]], "det() (in module torch)": [[1046, "torch.det"]], "diag() (in module torch)": [[1047, "torch.diag"]], "diag_embed() (in module torch)": [[1048, "torch.diag_embed"]], "diagflat() (in module torch)": [[1049, "torch.diagflat"]], "diagonal() (in module torch)": [[1050, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1051, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1052, "torch.diff"]], "digamma() (in module torch)": [[1053, "torch.digamma"]], "dist() (in module torch)": [[1054, "torch.dist"]], "div() (in module torch)": [[1055, "torch.div"]], "divide() (in module torch)": [[1056, "torch.divide"]], "dot() (in module torch)": [[1057, "torch.dot"]], "dsplit() (in module torch)": [[1058, "torch.dsplit"]], "dstack() (in module torch)": [[1059, "torch.dstack"]], "einsum() (in module torch)": [[1060, "torch.einsum"]], "empty() (in module torch)": [[1061, "torch.empty"]], "empty_like() (in module torch)": [[1062, "torch.empty_like"]], "empty_strided() (in module torch)": [[1063, "torch.empty_strided"]], "enable_grad (class in torch)": [[1064, "torch.enable_grad"]], "eq() (in module torch)": [[1065, "torch.eq"]], "equal() (in module torch)": [[1066, "torch.equal"]], "erf() (in module torch)": [[1067, "torch.erf"]], "erfc() (in module torch)": [[1068, "torch.erfc"]], "erfinv() (in module torch)": [[1069, "torch.erfinv"]], "exp() (in module torch)": [[1070, "torch.exp"]], "exp2() (in module torch)": [[1071, "torch.exp2"]], "expm1() (in module torch)": [[1072, "torch.expm1"]], "eye() (in module torch)": [[1073, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1074, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1075, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1076, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1077, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1078, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1079, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1080, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1081, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1082, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1083, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1084, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1085, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1086, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1087, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1088, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1089, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1090, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1091, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1092, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1093, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1094, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1095, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1096, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1097, "torch.fft.rfftn"]], "fix() (in module torch)": [[1098, "torch.fix"]], "flatten() (in module torch)": [[1099, "torch.flatten"]], "flip() (in module torch)": [[1100, "torch.flip"]], "fliplr() (in module torch)": [[1101, "torch.fliplr"]], "flipud() (in module torch)": [[1102, "torch.flipud"]], "float_power() (in module torch)": [[1103, "torch.float_power"]], "floor() (in module torch)": [[1104, "torch.floor"]], "floor_divide() (in module torch)": [[1105, "torch.floor_divide"]], "fmax() (in module torch)": [[1106, "torch.fmax"]], "fmin() (in module torch)": [[1107, "torch.fmin"]], "fmod() (in module torch)": [[1108, "torch.fmod"]], "frac() (in module torch)": [[1109, "torch.frac"]], "frexp() (in module torch)": [[1110, "torch.frexp"]], "from_dlpack() (in module torch)": [[1111, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1112, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1113, "torch.frombuffer"]], "full() (in module torch)": [[1114, "torch.full"]], "full_like() (in module torch)": [[1115, "torch.full_like"]], "functional_call() (in module torch.func)": [[1116, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1117, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1118, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1119, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1120, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1121, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1122, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1123, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1124, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1125, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1126, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1127, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1128, "torch.func.vmap"]], "gather() (in module torch)": [[1129, "torch.gather"]], "gcd() (in module torch)": [[1130, "torch.gcd"]], "ge() (in module torch)": [[1131, "torch.ge"]], "geqrf() (in module torch)": [[1132, "torch.geqrf"]], "ger() (in module torch)": [[1133, "torch.ger"]], "get_default_dtype() (in module torch)": [[1134, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1135, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1136, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1137, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1138, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1139, "torch.get_rng_state"]], "gradient() (in module torch)": [[1140, "torch.gradient"]], "greater() (in module torch)": [[1141, "torch.greater"]], "greater_equal() (in module torch)": [[1142, "torch.greater_equal"]], "gt() (in module torch)": [[1143, "torch.gt"]], "hamming_window() (in module torch)": [[1144, "torch.hamming_window"]], "hann_window() (in module torch)": [[1145, "torch.hann_window"]], "heaviside() (in module torch)": [[1146, "torch.heaviside"]], "histc() (in module torch)": [[1147, "torch.histc"]], "histogram() (in module torch)": [[1148, "torch.histogram"]], "histogramdd() (in module torch)": [[1149, "torch.histogramdd"]], "hsplit() (in module torch)": [[1150, "torch.hsplit"]], "hspmm() (in module torch)": [[1151, "torch.hspmm"]], "hstack() (in module torch)": [[1152, "torch.hstack"]], "hypot() (in module torch)": [[1153, "torch.hypot"]], "i0() (in module torch)": [[1154, "torch.i0"]], "igamma() (in module torch)": [[1155, "torch.igamma"]], "igammac() (in module torch)": [[1156, "torch.igammac"]], "imag() (in module torch)": [[1157, "torch.imag"]], "index_add() (in module torch)": [[1158, "torch.index_add"]], "index_copy() (in module torch)": [[1159, "torch.index_copy"]], "index_reduce() (in module torch)": [[1160, "torch.index_reduce"]], "index_select() (in module torch)": [[1161, "torch.index_select"]], "inference_mode (class in torch)": [[1162, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1163, "torch.initial_seed"]], "inner() (in module torch)": [[1164, "torch.inner"]], "inverse() (in module torch)": [[1165, "torch.inverse"]], "is_complex() (in module torch)": [[1166, "torch.is_complex"]], "is_conj() (in module torch)": [[1167, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1168, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1169, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1170, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1171, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1172, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1173, "torch.is_storage"]], "is_tensor() (in module torch)": [[1174, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1175, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1176, "torch.isclose"]], "isfinite() (in module torch)": [[1177, "torch.isfinite"]], "isin() (in module torch)": [[1178, "torch.isin"]], "isinf() (in module torch)": [[1179, "torch.isinf"]], "isnan() (in module torch)": [[1180, "torch.isnan"]], "isneginf() (in module torch)": [[1181, "torch.isneginf"]], "isposinf() (in module torch)": [[1182, "torch.isposinf"]], "isreal() (in module torch)": [[1183, "torch.isreal"]], "istft() (in module torch)": [[1184, "torch.istft"]], "attribute (class in torch.jit)": [[1185, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1185, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1185, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1185, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1185, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1186, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1186, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1186, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1186, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1187, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1187, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1187, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1187, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1187, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1187, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1188, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1189, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1190, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1191, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1192, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1193, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1194, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1195, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1196, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1197, "torch.jit.save"]], "script() (in module torch.jit)": [[1198, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1199, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1200, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1201, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1202, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1203, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1204, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1205, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1206, "torch.kaiser_window"]], "kron() (in module torch)": [[1207, "torch.kron"]], "kthvalue() (in module torch)": [[1208, "torch.kthvalue"]], "lcm() (in module torch)": [[1209, "torch.lcm"]], "ldexp() (in module torch)": [[1210, "torch.ldexp"]], "le() (in module torch)": [[1211, "torch.le"]], "lerp() (in module torch)": [[1212, "torch.lerp"]], "less() (in module torch)": [[1213, "torch.less"]], "less_equal() (in module torch)": [[1214, "torch.less_equal"]], "lgamma() (in module torch)": [[1215, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1216, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1217, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1218, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1219, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1220, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1221, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1222, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1223, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1224, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1225, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1226, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1227, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1228, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1229, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1230, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1231, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1232, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1233, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1234, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1235, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1236, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1237, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1238, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1239, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1240, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1241, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1242, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1243, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1244, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1245, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1246, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1247, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1248, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1249, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1250, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1251, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1252, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1253, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1254, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1255, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1256, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1257, "torch.linspace"]], "load() (in module torch)": [[1258, "torch.load"]], "lobpcg() (in module torch)": [[1259, "torch.lobpcg"]], "log() (in module torch)": [[1260, "torch.log"]], "log10() (in module torch)": [[1261, "torch.log10"]], "log1p() (in module torch)": [[1262, "torch.log1p"]], "log2() (in module torch)": [[1263, "torch.log2"]], "logaddexp() (in module torch)": [[1264, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1265, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1266, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1267, "torch.logdet"]], "logical_and() (in module torch)": [[1268, "torch.logical_and"]], "logical_not() (in module torch)": [[1269, "torch.logical_not"]], "logical_or() (in module torch)": [[1270, "torch.logical_or"]], "logical_xor() (in module torch)": [[1271, "torch.logical_xor"]], "logit() (in module torch)": [[1272, "torch.logit"]], "logspace() (in module torch)": [[1273, "torch.logspace"]], "logsumexp() (in module torch)": [[1274, "torch.logsumexp"]], "lt() (in module torch)": [[1275, "torch.lt"]], "lu() (in module torch)": [[1276, "torch.lu"]], "lu_solve() (in module torch)": [[1277, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1278, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1279, "torch.manual_seed"]], "masked_select() (in module torch)": [[1280, "torch.masked_select"]], "matmul() (in module torch)": [[1281, "torch.matmul"]], "matrix_exp() (in module torch)": [[1282, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1283, "torch.matrix_power"]], "max() (in module torch)": [[1284, "torch.max"]], "maximum() (in module torch)": [[1285, "torch.maximum"]], "mean() (in module torch)": [[1286, "torch.mean"]], "median() (in module torch)": [[1287, "torch.median"]], "meshgrid() (in module torch)": [[1288, "torch.meshgrid"]], "min() (in module torch)": [[1289, "torch.min"]], "minimum() (in module torch)": [[1290, "torch.minimum"]], "mm() (in module torch)": [[1291, "torch.mm"]], "mode() (in module torch)": [[1292, "torch.mode"]], "moveaxis() (in module torch)": [[1293, "torch.moveaxis"]], "movedim() (in module torch)": [[1294, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1295, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1296, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1297, "torch.mps.empty_cache"]], "get_rng_state() (in module torch.mps)": [[1298, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1299, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1300, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1301, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1302, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1303, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1304, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1305, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1306, "torch.mps.synchronize"]], "msort() (in module torch)": [[1307, "torch.msort"]], "mul() (in module torch)": [[1308, "torch.mul"]], "multinomial() (in module torch)": [[1309, "torch.multinomial"]], "multiply() (in module torch)": [[1310, "torch.multiply"]], "mv() (in module torch)": [[1311, "torch.mv"]], "mvlgamma() (in module torch)": [[1312, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1313, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1314, "torch.nanmean"]], "nanmedian() (in module torch)": [[1315, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1316, "torch.nanquantile"]], "nansum() (in module torch)": [[1317, "torch.nansum"]], "narrow() (in module torch)": [[1318, "torch.narrow"]], "narrow_copy() (in module torch)": [[1319, "torch.narrow_copy"]], "ne() (in module torch)": [[1320, "torch.ne"]], "neg() (in module torch)": [[1321, "torch.neg"]], "negative() (in module torch)": [[1322, "torch.negative"]], "nextafter() (in module torch)": [[1323, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1324, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1325, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1326, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1327, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1327, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1327, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1328, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1329, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1330, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1331, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1332, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1333, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1334, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1335, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1336, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1337, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1338, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1339, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1340, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1341, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1342, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1343, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1344, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1345, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1346, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1347, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1348, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1349, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1350, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1351, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1352, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1353, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1354, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1355, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1356, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1357, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1358, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1359, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1360, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1361, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1362, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1362, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1363, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1363, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1363, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1364, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1365, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1366, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1367, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1368, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1369, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1370, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1371, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1372, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1373, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1374, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1375, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1376, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1377, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1378, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1379, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1380, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1381, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1382, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1383, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1384, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1385, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1386, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1387, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1388, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1389, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1390, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1391, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1392, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1392, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1393, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1393, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1394, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1394, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1395, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1395, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1396, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1396, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1397, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1397, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1398, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1398, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1399, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1399, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1400, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1400, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1401, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1401, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1402, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1402, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1403, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1403, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1404, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1404, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1405, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1406, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1407, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1408, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1409, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1410, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1411, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1412, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1413, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1414, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1415, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1416, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1417, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1418, "torch.nn.Mish"]], "module (class in torch.nn)": [[1419, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1419, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1419, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1419, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1419, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1419, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1419, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1419, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1419, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1419, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1419, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1419, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1419, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1419, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1419, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1419, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1419, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1419, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1419, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1419, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1419, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1419, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1419, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1419, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1419, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1419, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1419, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1419, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1419, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1419, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1419, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1419, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1419, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1419, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1419, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1419, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1419, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1419, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1419, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1419, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1419, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1419, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1419, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1419, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1419, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1419, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1419, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1420, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1420, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1420, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1420, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1420, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1420, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1420, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1421, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1421, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1421, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1421, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1422, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1423, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1424, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1425, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1425, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1425, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1426, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1427, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1428, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1429, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1429, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1430, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1430, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1430, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1431, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1432, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1433, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1434, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1435, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1435, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1436, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1437, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1438, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1439, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1440, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1441, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1442, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1443, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1444, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1445, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1446, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1447, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1447, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1448, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1449, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1450, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1451, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1452, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1453, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1454, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1455, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1456, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1457, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1458, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1458, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1459, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1460, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1461, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1462, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1462, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1462, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1463, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1463, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1464, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1464, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1465, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1465, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1466, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1466, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1467, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1468, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1469, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1470, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1471, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1472, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1473, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1474, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1475, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1476, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1477, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1478, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1479, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1480, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1481, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1482, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1483, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1484, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1485, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1486, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1487, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1488, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1489, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1490, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1491, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1492, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1493, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1494, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1495, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1496, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1497, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1498, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1499, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1500, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1501, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1502, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1503, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1504, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1505, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1506, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1507, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1508, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1509, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1510, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1511, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1512, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1513, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1514, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1515, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1516, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1517, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1518, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1519, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1520, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1521, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1522, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1523, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1524, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1525, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1526, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1527, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1528, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1529, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1530, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1531, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1532, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1533, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1534, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1535, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1536, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1537, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1538, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1539, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1540, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1541, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1542, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1543, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1544, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1545, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1546, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1547, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1548, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1549, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1550, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1551, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1552, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1553, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1554, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1555, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1556, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1557, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1558, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1559, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1560, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1561, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1562, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1563, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1564, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1565, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1566, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1567, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1568, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1569, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1570, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1571, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1572, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1573, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1574, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1575, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1576, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1577, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1578, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1579, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1580, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1581, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1582, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1583, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1584, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1585, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1586, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1587, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1588, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1589, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1590, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1590, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1590, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1591, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1592, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1593, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1594, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1595, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1596, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1597, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1598, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1599, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1599, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1599, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1599, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1599, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1600, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1601, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1602, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1602, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1603, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1604, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1605, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1606, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1607, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1608, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1608, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1609, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1610, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1611, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1612, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1613, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1613, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1613, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1613, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1613, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1613, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1614, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1614, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1614, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1614, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1614, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1615, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1615, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1615, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1615, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1615, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1616, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1616, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1616, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1616, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1616, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1617, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1617, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1617, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1617, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1617, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1617, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1618, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1618, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1618, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1618, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1618, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1618, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1618, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1619, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1619, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1619, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1619, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1619, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1619, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1620, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1620, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1620, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1620, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1620, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1621, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1622, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1623, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1624, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1625, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1626, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1627, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1628, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1629, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1630, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1631, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1632, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1632, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1632, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1632, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1632, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1632, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1632, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1632, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1632, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1632, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1633, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1634, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1635, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1636, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1637, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1638, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1639, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1640, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1641, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1642, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1643, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1644, "torch.no_grad"]], "nonzero() (in module torch)": [[1645, "torch.nonzero"]], "norm() (in module torch)": [[1646, "torch.norm"]], "normal() (in module torch)": [[1647, "torch.normal"]], "not_equal() (in module torch)": [[1648, "torch.not_equal"]], "numel() (in module torch)": [[1649, "torch.numel"]], "ones() (in module torch)": [[1650, "torch.ones"]], "ones_like() (in module torch)": [[1651, "torch.ones_like"]], "exportoptions (class in torch.onnx)": [[1652, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1653, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1653, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1653, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1653, "torch.onnx.ExportOutput.diagnostic_context"]], "model_proto (torch.onnx.exportoutput property)": [[1653, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1653, "torch.onnx.ExportOutput.save"]], "exportoutputserializer (class in torch.onnx)": [[1654, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1654, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1655, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1655, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1655, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1655, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1655, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1655, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1655, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1655, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1656, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1656, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1657, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1658, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1658, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1658, "torch.optim.ASGD.load_state_dict"]], "register_step_post_hook() (torch.optim.asgd method)": [[1658, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1658, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1658, "torch.optim.ASGD.state_dict"]], "zero_grad() (torch.optim.asgd method)": [[1658, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1659, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1659, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1659, "torch.optim.Adadelta.load_state_dict"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1659, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1659, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1659, "torch.optim.Adadelta.state_dict"]], "zero_grad() (torch.optim.adadelta method)": [[1659, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1660, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1660, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1660, "torch.optim.Adagrad.load_state_dict"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1660, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1660, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1660, "torch.optim.Adagrad.state_dict"]], "zero_grad() (torch.optim.adagrad method)": [[1660, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1661, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1661, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1661, "torch.optim.Adam.load_state_dict"]], "register_step_post_hook() (torch.optim.adam method)": [[1661, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1661, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1661, "torch.optim.Adam.state_dict"]], "zero_grad() (torch.optim.adam method)": [[1661, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1662, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1662, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1662, "torch.optim.AdamW.load_state_dict"]], "register_step_post_hook() (torch.optim.adamw method)": [[1662, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1662, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1662, "torch.optim.AdamW.state_dict"]], "zero_grad() (torch.optim.adamw method)": [[1662, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1663, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1663, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1663, "torch.optim.Adamax.load_state_dict"]], "register_step_post_hook() (torch.optim.adamax method)": [[1663, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1663, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1663, "torch.optim.Adamax.state_dict"]], "zero_grad() (torch.optim.adamax method)": [[1663, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1664, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1664, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1664, "torch.optim.LBFGS.load_state_dict"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1664, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1664, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1664, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1664, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1664, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1665, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1665, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1665, "torch.optim.NAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.nadam method)": [[1665, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1665, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1665, "torch.optim.NAdam.state_dict"]], "zero_grad() (torch.optim.nadam method)": [[1665, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1666, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1667, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1668, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1669, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1670, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1671, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1671, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1671, "torch.optim.RAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.radam method)": [[1671, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1671, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1671, "torch.optim.RAdam.state_dict"]], "zero_grad() (torch.optim.radam method)": [[1671, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1672, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1672, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1672, "torch.optim.RMSprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1672, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1672, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1672, "torch.optim.RMSprop.state_dict"]], "zero_grad() (torch.optim.rmsprop method)": [[1672, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1673, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1673, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1673, "torch.optim.Rprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rprop method)": [[1673, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1673, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1673, "torch.optim.Rprop.state_dict"]], "zero_grad() (torch.optim.rprop method)": [[1673, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1674, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1674, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1674, "torch.optim.SGD.load_state_dict"]], "register_step_post_hook() (torch.optim.sgd method)": [[1674, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1674, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1674, "torch.optim.SGD.state_dict"]], "zero_grad() (torch.optim.sgd method)": [[1674, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1675, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1675, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1675, "torch.optim.SparseAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1675, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1675, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1675, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1675, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1675, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1676, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1676, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1676, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1676, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1676, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1677, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1677, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1677, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1677, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1677, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1678, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1678, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1678, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1678, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1678, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1679, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1679, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1679, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1679, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1679, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1679, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1680, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1680, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1680, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1680, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1681, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1681, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1681, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1681, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1681, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1682, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1682, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1682, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1682, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1682, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1683, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1683, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1683, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1683, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1683, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1684, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1684, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1684, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1684, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1684, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1685, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1685, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1685, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1685, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1685, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1686, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1686, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1686, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1686, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1686, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1687, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1687, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1687, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1687, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1687, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1688, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1689, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1689, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1689, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1689, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1689, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1690, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1690, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1690, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1690, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1690, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1691, "torch.orgqr"]], "ormqr() (in module torch)": [[1692, "torch.ormqr"]], "outer() (in module torch)": [[1693, "torch.outer"]], "pca_lowrank() (in module torch)": [[1694, "torch.pca_lowrank"]], "permute() (in module torch)": [[1695, "torch.permute"]], "pinverse() (in module torch)": [[1696, "torch.pinverse"]], "poisson() (in module torch)": [[1697, "torch.poisson"]], "polar() (in module torch)": [[1698, "torch.polar"]], "polygamma() (in module torch)": [[1699, "torch.polygamma"]], "positive() (in module torch)": [[1700, "torch.positive"]], "pow() (in module torch)": [[1701, "torch.pow"]], "prod() (in module torch)": [[1702, "torch.prod"]], "promote_types() (in module torch)": [[1703, "torch.promote_types"]], "qr() (in module torch)": [[1704, "torch.qr"]], "quantile() (in module torch)": [[1705, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1706, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1707, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1708, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1709, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1710, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1711, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1711, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1711, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1711, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1711, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1712, "torch.rad2deg"]], "rand() (in module torch)": [[1713, "torch.rand"]], "rand_like() (in module torch)": [[1714, "torch.rand_like"]], "randint() (in module torch)": [[1715, "torch.randint"]], "randint_like() (in module torch)": [[1716, "torch.randint_like"]], "randn() (in module torch)": [[1717, "torch.randn"]], "randn_like() (in module torch)": [[1718, "torch.randn_like"]], "randperm() (in module torch)": [[1719, "torch.randperm"]], "range() (in module torch)": [[1720, "torch.range"]], "ravel() (in module torch)": [[1721, "torch.ravel"]], "real() (in module torch)": [[1722, "torch.real"]], "reciprocal() (in module torch)": [[1723, "torch.reciprocal"]], "remainder() (in module torch)": [[1724, "torch.remainder"]], "renorm() (in module torch)": [[1725, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1726, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1727, "torch.reshape"]], "resolve_conj() (in module torch)": [[1728, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1729, "torch.resolve_neg"]], "result_type() (in module torch)": [[1730, "torch.result_type"]], "roll() (in module torch)": [[1731, "torch.roll"]], "rot90() (in module torch)": [[1732, "torch.rot90"]], "round() (in module torch)": [[1733, "torch.round"]], "row_stack() (in module torch)": [[1734, "torch.row_stack"]], "rsqrt() (in module torch)": [[1735, "torch.rsqrt"]], "save() (in module torch)": [[1736, "torch.save"]], "scatter() (in module torch)": [[1737, "torch.scatter"]], "scatter_add() (in module torch)": [[1738, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1739, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1740, "torch.searchsorted"]], "seed() (in module torch)": [[1741, "torch.seed"]], "select() (in module torch)": [[1742, "torch.select"]], "select_scatter() (in module torch)": [[1743, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1744, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1745, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1746, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1747, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1748, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1749, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1750, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1751, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1752, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1753, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1754, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1755, "torch.set_warn_always"]], "sgn() (in module torch)": [[1756, "torch.sgn"]], "sigmoid() (in module torch)": [[1757, "torch.sigmoid"]], "sign() (in module torch)": [[1758, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1759, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1760, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1761, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1762, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1763, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1764, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1765, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1766, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1767, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1768, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1769, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1770, "torch.signbit"]], "sin() (in module torch)": [[1771, "torch.sin"]], "sinc() (in module torch)": [[1772, "torch.sinc"]], "sinh() (in module torch)": [[1773, "torch.sinh"]], "slice_scatter() (in module torch)": [[1774, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1775, "torch.slogdet"]], "smm() (in module torch)": [[1776, "torch.smm"]], "softmax() (in module torch)": [[1777, "torch.softmax"]], "sort() (in module torch)": [[1778, "torch.sort"]], "addmm() (in module torch.sparse)": [[1779, "torch.sparse.addmm"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1780, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1780, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1780, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1780, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1781, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1782, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1783, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1784, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1785, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1786, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1787, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1788, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1789, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1790, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1791, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1792, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1793, "torch.split"]], "sqrt() (in module torch)": [[1794, "torch.sqrt"]], "square() (in module torch)": [[1795, "torch.square"]], "squeeze() (in module torch)": [[1796, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1797, "torch.sspaddmm"]], "stack() (in module torch)": [[1798, "torch.stack"]], "std() (in module torch)": [[1799, "torch.std"]], "std_mean() (in module torch)": [[1800, "torch.std_mean"]], "stft() (in module torch)": [[1801, "torch.stft"]], "sub() (in module torch)": [[1802, "torch.sub"]], "subtract() (in module torch)": [[1803, "torch.subtract"]], "sum() (in module torch)": [[1804, "torch.sum"]], "svd() (in module torch)": [[1805, "torch.svd"]], "svd_lowrank() (in module torch)": [[1806, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1807, "torch.swapaxes"]], "swapdims() (in module torch)": [[1808, "torch.swapdims"]], "sym_float() (in module torch)": [[1809, "torch.sym_float"]], "sym_int() (in module torch)": [[1810, "torch.sym_int"]], "sym_max() (in module torch)": [[1811, "torch.sym_max"]], "sym_min() (in module torch)": [[1812, "torch.sym_min"]], "sym_not() (in module torch)": [[1813, "torch.sym_not"]], "t() (in module torch)": [[1814, "torch.t"]], "take() (in module torch)": [[1815, "torch.take"]], "take_along_dim() (in module torch)": [[1816, "torch.take_along_dim"]], "tan() (in module torch)": [[1817, "torch.tan"]], "tanh() (in module torch)": [[1818, "torch.tanh"]], "tensor() (in module torch)": [[1819, "torch.tensor"]], "tensor_split() (in module torch)": [[1820, "torch.tensor_split"]], "tensordot() (in module torch)": [[1821, "torch.tensordot"]], "tile() (in module torch)": [[1822, "torch.tile"]], "topk() (in module torch)": [[1823, "torch.topk"]], "trace() (in module torch)": [[1824, "torch.trace"]], "transpose() (in module torch)": [[1825, "torch.transpose"]], "trapezoid() (in module torch)": [[1826, "torch.trapezoid"]], "trapz() (in module torch)": [[1827, "torch.trapz"]], "triangular_solve() (in module torch)": [[1828, "torch.triangular_solve"]], "tril() (in module torch)": [[1829, "torch.tril"]], "tril_indices() (in module torch)": [[1830, "torch.tril_indices"]], "triu() (in module torch)": [[1831, "torch.triu"]], "triu_indices() (in module torch)": [[1832, "torch.triu_indices"]], "true_divide() (in module torch)": [[1833, "torch.true_divide"]], "trunc() (in module torch)": [[1834, "torch.trunc"]], "unbind() (in module torch)": [[1835, "torch.unbind"]], "unflatten() (in module torch)": [[1836, "torch.unflatten"]], "unique() (in module torch)": [[1837, "torch.unique"]], "unique_consecutive() (in module torch)": [[1838, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1839, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1840, "torch.use_deterministic_algorithms"]], "vander() (in module torch)": [[1841, "torch.vander"]], "var() (in module torch)": [[1842, "torch.var"]], "var_mean() (in module torch)": [[1843, "torch.var_mean"]], "vdot() (in module torch)": [[1844, "torch.vdot"]], "view_as_complex() (in module torch)": [[1845, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1846, "torch.view_as_real"]], "vmap() (in module torch)": [[1847, "torch.vmap"]], "vsplit() (in module torch)": [[1848, "torch.vsplit"]], "vstack() (in module torch)": [[1849, "torch.vstack"]], "where() (in module torch)": [[1850, "torch.where"]], "xlogy() (in module torch)": [[1851, "torch.xlogy"]], "zeros() (in module torch)": [[1852, "torch.zeros"]], "zeros_like() (in module torch)": [[1853, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1854, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1854, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1854, "torch.hub.help"]], "list() (in module torch.hub)": [[1854, "torch.hub.list"]], "load() (in module torch.hub)": [[1854, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1854, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1854, "torch.hub.set_dir"]], "torch.hub": [[1854, "module-torch.hub"]], "pytorch_jit": [[1857, "envvar-PYTORCH_JIT"]], "environment variable": [[1857, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1857, "torch.jit.export"]], "torch.jit": [[1857, "module-torch.jit"]], "torch.jit.mobile": [[1857, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1858, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1859, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1859, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1862, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1863, "module-torch.utils.jit"]], "library (class in torch.library)": [[1864, "torch.library.Library"]], "define() (torch.library.library method)": [[1864, "torch.library.Library.define"]], "impl() (torch.library.library method)": [[1864, "torch.library.Library.impl"]], "torch.linalg": [[1865, "module-torch.linalg"]], "torch._logging": [[1866, "module-torch._logging"]], "torch.masked": [[1867, "module-torch.masked"]], "torch.masked.maskedtensor": [[1867, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1868, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1869, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1869, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1870, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1870, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1870, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1870, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1870, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1870, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1870, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1870, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1870, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1870, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1870, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1870, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1870, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1870, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1870, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1870, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1870, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1870, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1870, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1870, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1870, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1871, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1872, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1872, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1872, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1872, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1872, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1872, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1872, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1874, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1874, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1874, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1874, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1874, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1874, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1875, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1875, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1875, "torch.nested.to_padded_tensor"]], "torch.nested": [[1875, "module-torch.nested"]], "torch.nn": [[1876, "module-torch.nn"]], "torch.nn.backends": [[1876, "module-torch.nn.backends"]], "torch.nn.modules": [[1876, "module-torch.nn.modules"]], "torch.nn.parallel": [[1876, "module-torch.nn.parallel"]], "torch.nn.utils": [[1876, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1876, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1878, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1878, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1878, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1878, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1878, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1878, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1878, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1878, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1878, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1878, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1878, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1878, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1878, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1878, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1878, "torch.nn.init.zeros_"]], "disable_log() (in module torch.onnx)": [[1898, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1898, "torch.onnx.dynamo_export"]], "enable_log() (in module torch.onnx)": [[1898, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1898, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1898, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1898, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1898, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1898, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1898, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1898, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1898, "torch.onnx.unregister_custom_op_symbolic"]], "exportdiagnostic (class in torch.onnx._internal.diagnostics)": [[1899, "torch.onnx._internal.diagnostics.ExportDiagnostic"]], "record_cpp_call_stack() (torch.onnx._internal.diagnostics.exportdiagnostic method)": [[1899, "torch.onnx._internal.diagnostics.ExportDiagnostic.record_cpp_call_stack"]], "torch.onnx._internal.diagnostics": [[1899, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1901, "torch.optim.Optimizer"]], "torch.optim": [[1901, "module-torch.optim"]], "directory (class in torch.package)": [[1902, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1902, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1902, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1902, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1902, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1902, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1902, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1902, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1902, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1902, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1902, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1902, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1902, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1902, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1902, "torch.package.PackageExporter.save_text"]], "torch.package": [[1902, "module-torch.package"]], "torch.package.analyze": [[1902, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1903, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1903, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1903, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1903, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1903, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1903, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1904, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1904, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1904, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1904, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1904, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1904, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1904, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1904, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1904, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1904, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1904, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1904, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1904, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1904, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1904, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1904, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1904, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1904, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1904, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1904, "module-torch.profiler"]], "torch.ao": [[1905, "module-torch.ao"]], "torch.ao.nn": [[1905, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1905, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1905, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1905, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1905, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1905, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1905, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1905, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1905, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1905, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1905, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1905, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1905, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1905, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1905, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1905, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1905, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1908, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1908, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1908, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1908, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1908, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1908, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1908, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1908, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1908, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1908, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1908, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1908, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1908, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1908, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1908, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1908, "module-torch.ao.nn.quantized.modules"]], "torch.nn.intrinsic": [[1908, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1908, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1908, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1908, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1908, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1908, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1908, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1908, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1908, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1908, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1908, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1908, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1908, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1908, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1908, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1908, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1908, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1908, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1908, "module-torch.quantization"]], "torch.quantization.fx": [[1908, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1909, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1909, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1909, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1909, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1909, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1909, "torch.random.set_rng_state"]], "torch.random": [[1909, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1910, "torch.distributed.rpc.BackendType"]], "rref (class in torch.distributed.rpc)": [[1910, "torch.distributed.rpc.RRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1910, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1910, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1910, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1910, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1910, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1910, "torch.distributed.autograd.backward"]], "context (class in torch.distributed.autograd)": [[1910, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1910, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1910, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1910, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1910, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1910, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1910, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1910, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1910, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1910, "torch.distributed.rpc.init_rpc"]], "name (torch.distributed.rpc.workerinfo property)": [[1910, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1910, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "remote() (in module torch.distributed.rpc)": [[1910, "torch.distributed.rpc.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1910, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1910, "torch.distributed.rpc.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1910, "torch.distributed.rpc.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1910, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1910, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1910, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1910, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1910, "torch.distributed.rpc.shutdown"]], "torch.distributed.autograd": [[1910, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1910, "module-torch.distributed.rpc"]], "torch.signal": [[1913, "module-torch.signal"]], "torch.signal.windows": [[1913, "module-torch.signal.windows"]], "torch.sparse": [[1914, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1915, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1915, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1915, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1915, "torch.special.digamma"]], "entr() (in module torch.special)": [[1915, "torch.special.entr"]], "erf() (in module torch.special)": [[1915, "torch.special.erf"]], "erfc() (in module torch.special)": [[1915, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1915, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1915, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1915, "torch.special.exp2"]], "expit() (in module torch.special)": [[1915, "torch.special.expit"]], "expm1() (in module torch.special)": [[1915, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1915, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1915, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1915, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1915, "torch.special.i0"]], "i0e() (in module torch.special)": [[1915, "torch.special.i0e"]], "i1() (in module torch.special)": [[1915, "torch.special.i1"]], "i1e() (in module torch.special)": [[1915, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1915, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1915, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1915, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1915, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1915, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1915, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1915, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1915, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1915, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1915, "torch.special.psi"]], "round() (in module torch.special)": [[1915, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1915, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1915, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1915, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1915, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1915, "torch.special.spherical_bessel_j0"]], "torch.special": [[1915, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1915, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1915, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1915, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1916, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1916, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1916, "torch.ByteStorage"]], "charstorage (class in torch)": [[1916, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1916, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1916, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1916, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1916, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1916, "torch.HalfStorage"]], "intstorage (class in torch)": [[1916, "torch.IntStorage"]], "longstorage (class in torch)": [[1916, "torch.LongStorage"]], "qint32storage (class in torch)": [[1916, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1916, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1916, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1916, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1916, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1916, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1916, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1916, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1916, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1916, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1916, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1916, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1916, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1916, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1916, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1916, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1916, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1916, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1916, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1916, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1916, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1916, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1916, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1916, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1916, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1916, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1916, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1916, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1916, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1916, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1916, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1916, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1916, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1916, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1916, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1916, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1916, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1916, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1916, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1916, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1916, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1916, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1916, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1916, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1916, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1916, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1916, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1916, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1916, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.half"]], "int() (torch.typedstorage method)": [[1916, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1916, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1916, "torch.UntypedStorage.is_cuda"]], "is_pinned() (torch.typedstorage method)": [[1916, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1916, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1916, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1916, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1916, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1916, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1916, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1916, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1916, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1916, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1916, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1916, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1916, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1916, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1916, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1916, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1916, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1917, "torch.device"]], "dtype (class in torch)": [[1917, "torch.dtype"]], "layout (class in torch)": [[1917, "torch.layout"]], "memory_format (class in torch)": [[1917, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1919, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1919, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1920, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1920, "torch.Tensor.T"]], "tensor (class in torch)": [[1920, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1920, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1920, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1921, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1921, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1921, "torch.testing.make_tensor"]], "torch.testing": [[1921, "module-torch.testing"]], "symbool (class in torch)": [[1922, "torch.SymBool"]], "symfloat (class in torch)": [[1922, "torch.SymFloat"]], "symint (class in torch)": [[1922, "torch.SymInt"]], "tag (class in torch)": [[1922, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1922, "torch.torch.default_generator"]], "name (torch.tag property)": [[1922, "torch.Tag.name"]], "torch": [[1922, "module-torch"]], "torch.contrib": [[1922, "module-torch.contrib"]], "torch.utils": [[1922, "module-torch.utils"]], "torch.utils.backcompat": [[1922, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1922, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1922, "module-torch.utils.model_dump"]], "logger (class in torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1923, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1923, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1923, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1923, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1923, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1923, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1923, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1923, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1923, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1923, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1923, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1923, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1924, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1924, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1924, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1924, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1924, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1924, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1924, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1924, "module-torch.ao.ns._numeric_suite_fx"]], "get_ignored_functions() (in module torch.overrides)": [[1925, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1925, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1925, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1925, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1925, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1925, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1925, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1925, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1925, "torch.overrides.wrap_torch_function"]], "torch.finfo (class in torch)": [[1926, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1926, "torch.torch.iinfo"]]}})